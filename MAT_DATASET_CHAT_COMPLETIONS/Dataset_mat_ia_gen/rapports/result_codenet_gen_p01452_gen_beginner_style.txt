================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10**9 + 7

N, M, K = map(int, input().split())

# Une solution débutante : on calcule le nombre de chemins avec K détours.
# Chaque détour est un pas vers la gauche ou vers le bas.
# On doit faire exactement N + K pas vers la droite et M + K pas vers le haut,
# et K pas vers la gauche et K pas vers le bas (les détours).
# Le nombre total de pas est (N + K) + (M + K) + K + K = N + M + 4K
# Mais on peut revenir sur ses pas, donc on considère les chemins combinatoires qui contiennent
# (N + K) droites, (M + K) haut, K gauche, K bas.

# Le nombre de chemins est le nombre de permutations d'un mot avec ces lettres:
# D (droite) x (N+K)
# U (haut) x (M+K)
# L (gauche) x K
# B (bas) x K

# Le nombre total de pas est T = N + M + 4K

# Le nombre de chemins est donc:
# C(T, N+K) * C(T-(N+K), M+K) * C(T-(N+K)-(M+K), K)
# C(T-(N+K)-(M+K)-K, K) mais après on aura utilisé tous les K de L et B.

# On calcule les factorielles modulo MOD pour calculer ces combinaisons.

max_val = N + M + 4 * K

fact = [1] * (max_val + 1)
for i in range(1, max_val + 1):
    fact[i] = fact[i - 1] * i % MOD

def inv(a):
    # Fermat inverse modulo, MOD est premier
    return pow(a, MOD - 2, MOD)

inv_fact = [1] * (max_val +1)
inv_fact[max_val] = inv(fact[max_val])
for i in range(max_val-1, -1, -1):
    inv_fact[i] = inv_fact[i +1] * (i+1) % MOD

def comb(n, r):
    if r > n or r < 0:
        return 0
    return fact[n] * inv_fact[r] % MOD * inv_fact[n-r] % MOD

T = N + M + 4 * K

res = comb(T, N + K)
res = (res * comb(T - (N + K), M + K)) % MOD
res = (res * comb(T - (N + K) - (M + K), K)) % MOD
res = (res * comb(T - (N + K) - (M + K) - K, K)) % MOD

print(res % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25290173292160034
    2. '10' → logprob: -1.5029017925262451
    3. ' ' → logprob: -7.377901554107666
    4. '```' → logprob: -8.752902030944824
    5. '1' → logprob: -9.252902030944824
    6. '`' → logprob: -9.877902030944824
    7. '(' → logprob: -10.502902030944824
    8. '998' → logprob: -11.752902030944824
    9. '``' → logprob: -13.127902030944824
    10. '123' → logprob: -13.502902030944824

Token 4: '**' (ID: 410)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.650518920039758e-06
    2. '09' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.000003814697266
    4. '```' → logprob: -14.500003814697266
    5. '``' → logprob: -18.250003814697266
    6. '**' → logprob: -19.125003814697266
    7. '6' → logprob: -19.625003814697266
    8. '   ' → logprob: -20.125003814697266
    9. '^' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.500003814697266

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009521945030428469
    2. ' +' → logprob: -7.000952243804932
    3. '7' → logprob: -10.125951766967773
    4. '```' → logprob: -15.500951766967773
    5. '＋' → logprob: -16.250951766967773
    6. '+
' → logprob: -16.375951766967773
    7. ' ' → logprob: -16.375951766967773
    8. '\' → logprob: -16.875951766967773
    9. '+

' → logprob: -17.250951766967773
    10. '+j' → logprob: -17.875951766967773

Token 7: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: '7' (ID: 22)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1863523721694946
    2. '*' → logprob: -1.6863523721694946
    3. '```' → logprob: -1.6863523721694946
    4. '\' → logprob: -2.561352252960205
    5. '#' → logprob: -3.186352252960205
    6. '
' → logprob: -3.311352252960205
    7. '`' → logprob: -3.311352252960205
    8. ')' → logprob: -3.436352252960205
    9. '_' → logprob: -4.061352252960205
    10. ',' → logprob: -4.186352252960205

Token 10: 'N' (ID: 45)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4885788857936859
    2. '*' → logprob: -2.3635787963867188
    3. '**' → logprob: -2.6135787963867188
    4. '.' → logprob: -2.6135787963867188
    5. '[' → logprob: -2.8635787963867188
    6. '#' → logprob: -3.7385787963867188
    7. ')' → logprob: -3.7385787963867188
    8. '-' → logprob: -4.613578796386719
    9. '+' → logprob: -4.988578796386719
    10. '=' → logprob: -5.488578796386719

Token 12: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6036267280578613
    2. 'K' → logprob: -0.8536267280578613
    3. 'M' → logprob: -4.228626728057861
    4. ' M' → logprob: -4.853626728057861
    5. ' ' → logprob: -5.728626728057861
    6. 'input' → logprob: -7.978626728057861
    7. '=' → logprob: -8.478626251220703
    8. 'x' → logprob: -8.478626251220703
    9. ' =' → logprob: -8.978626251220703
    10. ')' → logprob: -9.228626251220703

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02143549732863903
    2. '=' → logprob: -4.021435260772705
    3. ',' → logprob: -6.021435260772705
    4. ' ' → logprob: -7.271435260772705
    5. ' ,' → logprob: -9.396435737609863
    6. '<|end|>' → logprob: -10.146435737609863
    7. ' =
' → logprob: -11.271435737609863
    8. ')' → logprob: -11.396435737609863
    9. ' =",' → logprob: -13.271435737609863
    10. '```' → logprob: -13.646435737609863

Token 14: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6143477559089661
    2. ' =' → logprob: -0.9893477559089661
    3. ' ' → logprob: -2.7393476963043213
    4. 'K' → logprob: -4.4893479347229
    5. '=' → logprob: -4.7393479347229
    6. ' P' → logprob: -7.6143479347229
    7. 'input' → logprob: -7.7393479347229
    8. ',' → logprob: -8.239347457885742
    9. ' Q' → logprob: -8.364347457885742
    10. ' input' → logprob: -8.864347457885742

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43016794323921204
    2. '=' → logprob: -1.0551679134368896
    3. ',' → logprob: -6.555168151855469
    4. ')' → logprob: -11.305168151855469
    5. ' ,' → logprob: -11.305168151855469
    6. ' =
' → logprob: -12.555168151855469
    7. '[' → logprob: -12.555168151855469
    8. ' ' → logprob: -12.930168151855469
    9. '<|end|>' → logprob: -13.180168151855469
    10. '=

' → logprob: -13.430168151855469

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2520297169685364
    2. 'map' → logprob: -1.5020296573638916
    3. '0' → logprob: -9.877029418945312
    4. 'input' → logprob: -10.877029418945312
    5. ' input' → logprob: -11.502029418945312
    6. ' ' → logprob: -11.752029418945312
    7. ' list' → logprob: -12.252029418945312
    8. 'list' → logprob: -12.877029418945312
    9. 'int' → logprob: -13.252029418945312
    10. '10' → logprob: -13.752029418945312

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5261503458023071
    2. '(' → logprob: -0.9011503458023071
    3. '(str' → logprob: -6.651150226593018
    4. '(lambda' → logprob: -6.651150226593018
    5. 'int' → logprob: -8.901150703430176
    6. '(input' → logprob: -9.526150703430176
    7. '[int' → logprob: -9.901150703430176
    8. '(
' → logprob: -10.776150703430176
    9. '<int' → logprob: -11.026150703430176
    10. '()' → logprob: -11.151150703430176

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2280066013336182
    2. ',' → logprob: -1.3530066013336182
    3. '(' → logprob: -1.4780066013336182
    4. ')' → logprob: -1.8530066013336182
    5. ',input' → logprob: -3.228006601333618
    6. '(int' → logprob: -3.978006601333618
    7. ',int' → logprob: -6.603006362915039
    8. 'input' → logprob: -7.103006362915039
    9. '),' → logprob: -7.603006362915039
    10. ' ,' → logprob: -8.103006362915039

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687387108802795
    2. ' input' → logprob: -1.1368738412857056
    3. ')' → logprob: -13.386874198913574
    4. ' ' → logprob: -15.136874198913574
    5. '(input' → logprob: -15.136874198913574
    6. ',input' → logprob: -15.261874198913574
    7. '```' → logprob: -15.761874198913574
    8. ' )' → logprob: -15.886874198913574
    9. '=input' → logprob: -16.011873245239258
    10. '<input' → logprob: -17.136873245239258

Token 20: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6598464250564575
    2. '()' → logprob: -0.7848464250564575
    3. '().' → logprob: -4.534846305847168
    4. '(' → logprob: -4.909846305847168
    5. ')' → logprob: -6.159846305847168
    6. '(),' → logprob: -6.409846305847168
    7. '());' → logprob: -6.534846305847168
    8. '(()' → logprob: -7.409846305847168
    9. '();)' → logprob: -7.534846305847168
    10. '()>' → logprob: -7.659846305847168

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00022201328829396516
    2. 'strip' → logprob: -8.500222206115723
    3. 'rstrip' → logprob: -11.000222206115723
    4. 'read' → logprob: -14.375222206115723
    5. ')' → logprob: -14.500222206115723
    6. 'spl' → logprob: -15.250222206115723
    7. ' split' → logprob: -15.750222206115723
    8. '(split' → logprob: -15.750222206115723
    9. '_split' → logprob: -17.000221252441406
    10. 's' → logprob: -17.125221252441406

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003365350130479783
    2. '))' → logprob: -8.125336647033691
    3. '())' → logprob: -11.125336647033691
    4. '`)' → logprob: -11.625336647033691
    5. '()' → logprob: -12.625336647033691
    6. '(' → logprob: -12.625336647033691
    7. ' )' → logprob: -12.875336647033691
    8. '),' → logprob: -13.125336647033691
    9. ')`' → logprob: -13.250336647033691
    10. ')))' → logprob: -14.000336647033691

Token 23: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12313273549079895
    2. 'fact' → logprob: -2.4981327056884766
    3. 'factor' → logprob: -4.123132705688477
    4. 'a' → logprob: -4.873132705688477
    5. 'result' → logprob: -5.248132705688477
    6. 'A' → logprob: -6.998132705688477
    7. 'd' → logprob: -7.623132705688477
    8. 'def' → logprob: -7.873132705688477
    9. 'facts' → logprob: -8.373132705688477
    10. 'for' → logprob: -8.498132705688477

Token 24: ' Une' (ID: 19758)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13243438303470612
    2. ' dp' → logprob: -2.257434368133545
    3. 'fact' → logprob: -5.007434368133545
    4. 'for' → logprob: -5.757434368133545
    5. 'from' → logprob: -5.882434368133545
    6. ' fact' → logprob: -6.632434368133545
    7. 'result' → logprob: -7.382434368133545
    8. 'def' → logprob: -7.382434368133545
    9. ' for' → logprob: -7.632434368133545
    10. 'import' → logprob: -8.007434844970703

Token 25: ' solution' (ID: 7578)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.26416999101638794
    2. 'q' → logprob: -2.139169931411743
    3. 'qu' → logprob: -3.139169931411743
    4. 'r' → logprob: -3.764169931411743
    5. '```' → logprob: -4.889170169830322
    6. 'valu' → logprob: -5.764170169830322
    7. 'f' → logprob: -5.764170169830322
    8. 'val' → logprob: -5.889170169830322
    9. 'ven' → logprob: -6.139170169830322
    10. 'nt' → logprob: -6.139170169830322

Token 26: ' début' (ID: 29589)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.548959493637085
    2. ':' → logprob: -1.673959493637085
    3. '```' → logprob: -2.048959493637085
    4. 'def' → logprob: -2.423959493637085
    5. '.' → logprob: -2.673959493637085
    6. 'import' → logprob: -3.048959493637085
    7. ' :' → logprob: -3.423959493637085
    8. '​' → logprob: -3.423959493637085
    9. ' ​' → logprob: -3.673959493637085
    10. '_' → logprob: -3.673959493637085

Token 27: 'ante' (ID: 2116)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.133570671081543
    2. '#' → logprob: -1.258570671081543
    3. 'def' → logprob: -1.883570671081543
    4. ':' → logprob: -2.758570671081543
    5. 'for' → logprob: -2.883570671081543
    6. 'dp' → logprob: -3.508570671081543
    7. ')' → logprob: -4.133570671081543
    8. 's' → logprob: -4.258570671081543
    9. 'd' → logprob: -4.883570671081543
    10. ' for' → logprob: -5.133570671081543

Token 28: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06725182384252548
    2. 'def' → logprob: -3.8172519207000732
    3. 'dp' → logprob: -4.067251682281494
    4. ' :' → logprob: -4.692251682281494
    5. '```' → logprob: -5.067251682281494
    6. 's' → logprob: -5.317251682281494
    7. 'import' → logprob: -6.067251682281494
    8. 'for' → logprob: -7.567251682281494
    9. '.' → logprob: -7.817251682281494
    10. ',' → logprob: -7.817251682281494

Token 29: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5001575946807861
    2. ' dp' → logprob: -1.0001575946807861
    3. ' for' → logprob: -6.000157356262207
    4. 'factor' → logprob: -6.125157356262207
    5. 'fact' → logprob: -6.250157356262207
    6. 'res' → logprob: -6.250157356262207
    7. ' result' → logprob: -6.375157356262207
    8. 'result' → logprob: -6.375157356262207
    9. ' comb' → logprob: -6.500157356262207
    10. '```' → logprob: -6.625157356262207

Token 30: ' calc' (ID: 25691)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1186944246292114
    2. ' ' → logprob: -1.3686944246292114
    3. ')' → logprob: -3.118694305419922
    4. ''' → logprob: -3.493694305419922
    5. '+' → logprob: -3.743694305419922
    6. 'def' → logprob: -3.743694305419922
    7. ' '' → logprob: -3.743694305419922
    8. '```' → logprob: -3.868694305419922
    9. ' ```' → logprob: -3.993694305419922
    10. ' #' → logprob: -3.993694305419922

Token 31: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.011188937351107597
    2. 'ul' → logprob: -4.511188983917236
    3. 'ulé' → logprob: -10.386188507080078
    4. '```' → logprob: -10.511188507080078
    5. 'uler' → logprob: -10.636188507080078
    6. 'cule' → logprob: -10.636188507080078
    7. 'ulate' → logprob: -12.136188507080078
    8. '<ul' → logprob: -12.636188507080078
    9. 'ulte' → logprob: -12.636188507080078
    10. '#' → logprob: -12.886188507080078

Token 32: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7524188160896301
    2. ' le' → logprob: -2.6274187564849854
    3. ' toutes' → logprob: -2.6274187564849854
    4. ' ' → logprob: -2.8774187564849854
    5. 'fact' → logprob: -3.2524187564849854
    6. ' les' → logprob: -3.5024187564849854
    7. 't' → logprob: -3.7524187564849854
    8. 'le' → logprob: -3.8774187564849854
    9. 'factor' → logprob: -4.1274189949035645
    10. ' directement' → logprob: -4.3774189949035645

Token 33: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.2929188013076782
    2. 'nombre' → logprob: -1.7929188013076782
    3. 'c' → logprob: -2.0429186820983887
    4. 's' → logprob: -2.4179186820983887
    5. 'factor' → logprob: -3.0429186820983887
    6. 'f' → logprob: -3.1679186820983887
    7. 'n' → logprob: -3.1679186820983887
    8. '+' → logprob: -3.5429186820983887
    9. 'fact' → logprob: -4.417918682098389
    10. 'p' → logprob: -4.417918682098389

Token 34: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' chemins' (ID: 192063)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.8220155239105225
    2. ' chemins' → logprob: -2.0720155239105225
    3. ' ways' → logprob: -2.4470155239105225
    4. 's' → logprob: -2.8220155239105225
    5. 'ways' → logprob: -3.4470155239105225
    6. '_' → logprob: -3.5720155239105225
    7. ' ' → logprob: -3.6970155239105225
    8. ' sequences' → logprob: -3.9470155239105225
    9. ' man' → logprob: -4.197015762329102
    10. 'man' → logprob: -4.197015762329102

Token 36: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4469939470291138
    2. 'possible' → logprob: -1.8219939470291138
    3. ',' → logprob: -1.9469939470291138
    4. ' possible' → logprob: -2.321993827819824
    5. ' possibles' → logprob: -2.446993827819824
    6. ' ' → logprob: -3.571993827819824
    7. 's' → logprob: -3.821993827819824
    8. ' ,' → logprob: -3.821993827819824
    9. ')' → logprob: -3.821993827819824
    10. ' entre' → logprob: -3.946993827819824

Token 37: ' K' (ID: 658)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4898141324520111
    2. 'une' → logprob: -2.739814043045044
    3. 'import' → logprob: -2.864814043045044
    4. 'dp' → logprob: -3.364814043045044
    5. ' des' → logprob: -3.614814043045044
    6. ' une' → logprob: -3.614814043045044
    7. '```' → logprob: -3.739814043045044
    8. 'l' → logprob: -3.864814043045044
    9. 'for' → logprob: -4.364814281463623
    10. 'des' → logprob: -4.364814281463623

Token 38: ' dét' (ID: 31931)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9533302783966064
    2. ' ' → logprob: -2.0783302783966064
    3. '_' → logprob: -2.7033302783966064
    4. '+' → logprob: -2.8283302783966064
    5. 'steps' → logprob: -2.8283302783966064
    6. '=' → logprob: -3.3283302783966064
    7. 'pas' → logprob: -3.7033302783966064
    8. 'pass' → logprob: -3.8283302783966064
    9. 'import' → logprob: -3.9533302783966064
    10. ' obstacles' → logprob: -3.9533302783966064

Token 39: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.1334378719329834
    2. 'ours' → logprob: -1.2584378719329834
    3. 'ermin' → logprob: -3.0084378719329834
    4. 'er' → logprob: -3.0084378719329834
    5. '```' → logprob: -3.3834378719329834
    6. 'ourn' → logprob: -3.5084378719329834
    7. 'ente' → logprob: -3.6334378719329834
    8. 'erm' → logprob: -3.7584378719329834
    9. 'e' → logprob: -3.7584378719329834
    10. 'r' → logprob: -4.0084381103515625

Token 40: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1897902488708496
    2. ',' → logprob: -1.8147902488708496
    3. 'def' → logprob: -1.9397902488708496
    4. ':' → logprob: -2.0647902488708496
    5. '#' → logprob: -2.9397902488708496
    6. ' =' → logprob: -3.3147902488708496
    7. '.' → logprob: -3.3147902488708496
    8. ')' → logprob: -3.9397902488708496
    9. ' :' → logprob: -4.18979024887085
    10. '
' → logprob: -4.43979024887085

Token 41: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2629574537277222
    2. ' ' → logprob: -1.5129574537277222
    3. ':' → logprob: -1.7629574537277222
    4. 'def' → logprob: -2.3879575729370117
    5. '#' → logprob: -2.6379575729370117
    6. '.' → logprob: -3.1379575729370117
    7. ' 
' → logprob: -3.3879575729370117
    8. '
' → logprob: -3.7629575729370117
    9. '```' → logprob: -4.762957572937012
    10. '_' → logprob: -5.012957572937012

Token 42: ' Chaque' (ID: 94758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5907703638076782
    2. ' ' → logprob: -1.8407703638076782
    3. '```' → logprob: -2.4657702445983887
    4. ' def' → logprob: -3.2157702445983887
    5. ',' → logprob: -3.3407702445983887
    6. ':' → logprob: -3.3407702445983887
    7. ' =' → logprob: -4.215770244598389
    8. 'import' → logprob: -4.340770244598389
    9. '_' → logprob: -4.840770244598389
    10. '.' → logprob: -5.090770244598389

Token 43: ' détour' (ID: 197307)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1341577172279358
    2. 'dé' → logprob: -3.634157657623291
    3. ' dét' → logprob: -3.884157657623291
    4. 'det' → logprob: -4.759157657623291
    5. ' détour' → logprob: -5.134157657623291
    6. ' pas' → logprob: -5.196657657623291
    7. 'pas' → logprob: -5.321657657623291
    8. '#' → logprob: -5.446657657623291
    9. ' déplacement' → logprob: -5.884157657623291
    10. '```' → logprob: -5.884157657623291

Token 44: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3077847957611084
    2. ' peut' → logprob: -2.8077847957611084
    3. ' est' → logprob: -3.4327847957611084
    4. ',' → logprob: -3.4327847957611084
    5. ' ,' → logprob: -3.5577847957611084
    6. ' a' → logprob: -3.6827847957611084
    7. ' consiste' → logprob: -4.5577850341796875
    8. ' =' → logprob: -4.6827850341796875
    9. ' s' → logprob: -5.1827850341796875
    10. ' correspond' → logprob: -5.3077850341796875

Token 45: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7129798531532288
    2. ' une' → logprob: -0.9629798531532288
    3. ' représent' → logprob: -2.837979793548584
    4. 'un' → logprob: -4.337979793548584
    5. ' constitué' → logprob: -4.587979793548584
    6. 'une' → logprob: -4.837979793548584
    7. ' placé' → logprob: -4.962979793548584
    8. ' ' → logprob: -5.212979793548584
    9. ' effectué' → logprob: -6.087979793548584
    10. ' choisi' → logprob: -6.212979793548584

Token 46: ' pas' (ID: 2173)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -1.667109489440918
    2. ' aller' → logprob: -2.042109489440918
    3. 'e' → logprob: -2.854609489440918
    4. ' pas' → logprob: -3.104609489440918
    5. ' espace' → logprob: -3.292109489440918
    6. '```' → logprob: -3.729609489440918
    7. 'a' → logprob: -3.854609489440918
    8. 'é' → logprob: -3.917109489440918
    9. ' unique' → logprob: -3.917109489440918
    10. 'es' → logprob: -4.042109489440918

Token 47: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6792017221450806
    2. ' ' → logprob: -1.6792017221450806
    3. ' =' → logprob: -2.179201602935791
    4. ' ,' → logprob: -2.429201602935791
    5. ' "' → logprob: -2.929201602935791
    6. ')' → logprob: -2.929201602935791
    7. ' de' → logprob: -3.054201602935791
    8. '<|end|>' → logprob: -3.429201602935791
    9. ' )' → logprob: -3.679201602935791
    10. '+' → logprob: -3.679201602935791

Token 48: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.41104263067245483
    2. 'la' → logprob: -1.4110426902770996
    3. ' la' → logprob: -3.5360426902770996
    4. 'le' → logprob: -3.6610426902770996
    5. ' ' → logprob: -5.1610426902771
    6. 'g' → logprob: -5.1610426902771
    7. ' l' → logprob: -5.7860426902771
    8. '```' → logprob: -5.7860426902771
    9. 'un' → logprob: -5.9110426902771
    10. 'd' → logprob: -6.0360426902771

Token 49: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0297752618789673
    2. 'd' → logprob: -1.7797752618789673
    3. 'D' → logprob: -2.7797751426696777
    4. 'N' → logprob: -3.1547751426696777
    5. 'O' → logprob: -3.2797751426696777
    6. 'bas' → logprob: -3.2797751426696777
    7. 'S' → logprob: -3.5297751426696777
    8. 'M' → logprob: -3.5297751426696777
    9. 's' → logprob: -3.5297751426696777
    10. ' droite' → logprob: -3.7797751426696777

Token 50: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.941667377948761
    2. '
' → logprob: -1.6916673183441162
    3. ',' → logprob: -1.9416673183441162
    4. '```' → logprob: -2.691667318344116
    5. '.' → logprob: -3.066667318344116
    6. '#' → logprob: -3.191667318344116
    7. ')' → logprob: -3.316667318344116
    8. '' → logprob: -3.941667318344116
    9. '

' → logprob: -4.566667556762695
    10. ':' → logprob: -4.691667556762695

Token 51: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -1.2714171409606934
    2. ' un' → logprob: -1.3964171409606934
    3. '<|end|>' → logprob: -1.3964171409606934
    4. 'vers' → logprob: -2.5214171409606934
    5. '#' → logprob: -3.0214171409606934
    6. 'un' → logprob: -3.6464171409606934
    7. '```' → logprob: -4.271417140960693
    8. ' ' → logprob: -4.771417140960693
    9. ' une' → logprob: -4.896417140960693
    10. ''un' → logprob: -5.271417140960693

Token 52: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.17748169600963593
    2. 'le' → logprob: -2.4274816513061523
    3. 'l' → logprob: -3.0524816513061523
    4. ' la' → logprob: -4.177481651306152
    5. '#' → logprob: -6.052481651306152
    6. '```' → logprob: -6.177481651306152
    7. ' le' → logprob: -6.552481651306152
    8. ' ' → logprob: -6.927481651306152
    9. 'bas' → logprob: -7.552481651306152
    10. '`' → logprob: -8.302481651306152

Token 53: ' bas' (ID: 3222)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.30851590633392334
    2. 'bas' → logprob: -1.6835159063339233
    3. 'd' → logprob: -3.683516025543213
    4. 'haut' → logprob: -4.058516025543213
    5. ' droite' → logprob: -4.558516025543213
    6. '```' → logprob: -4.683516025543213
    7. ' bas' → logprob: -5.808516025543213
    8. ' ' → logprob: -6.496016025543213
    9. 'down' → logprob: -6.621016025543213
    10. '-dro' → logprob: -6.746016025543213

Token 54: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7815051674842834
    2. ',' → logprob: -1.7815051078796387
    3. 'def' → logprob: -2.0315051078796387
    4. '#' → logprob: -3.0315051078796387
    5. '' → logprob: -3.2815051078796387
    6. '```' → logprob: -3.4065051078796387
    7. '.' → logprob: -3.7815051078796387
    8. '
' → logprob: -4.031505107879639
    9. 'import' → logprob: -4.156505107879639
    10. '

' → logprob: -4.281505107879639

Token 55: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7680544257164001
    2. 'def' → logprob: -1.393054485321045
    3. 'dp' → logprob: -2.143054485321045
    4. ')' → logprob: -3.643054485321045
    5. '

' → logprob: -3.893054485321045
    6. '#' → logprob: -4.143054485321045
    7. '```' → logprob: -4.143054485321045
    8. ' 
' → logprob: -4.393054485321045
    9. ',' → logprob: -4.393054485321045
    10. 'import' → logprob: -4.518054485321045

Token 56: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4255771338939667
    2. 'def' → logprob: -1.675577163696289
    3. ' dp' → logprob: -3.425577163696289
    4. ')' → logprob: -3.925577163696289
    5. ' 
' → logprob: -4.050577163696289
    6. '```' → logprob: -4.175577163696289
    7. '#' → logprob: -4.300577163696289
    8. 'd' → logprob: -5.175577163696289
    9. ' ' → logprob: -5.300577163696289
    10. 'DP' → logprob: -5.550577163696289

Token 57: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1923112869262695
    2. ' calc' → logprob: -2.8173112869262695
    3. 'do' → logprob: -2.9423112869262695
    4. 'def' → logprob: -3.1923112869262695
    5. ' doit' → logprob: -3.1923112869262695
    6. 'continue' → logprob: -3.5673112869262695
    7. 'from' → logprob: -3.5673112869262695
    8. '#' → logprob: -3.6923112869262695
    9. ' peux' → logprob: -3.6923112869262695
    10. 'a' → logprob: -3.8173112869262695

Token 58: ' faire' (ID: 8119)
  Prédit: ' prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prendre' → logprob: -1.6540194749832153
    2. ' utiliser' → logprob: -1.6540194749832153
    3. ' faire' → logprob: -2.029019355773926
    4. ' effectuer' → logprob: -2.654019355773926
    5. ' ajouter' → logprob: -2.654019355773926
    6. ' avancer' → logprob: -3.279019355773926
    7. ' continuer' → logprob: -3.529019355773926
    8. ' choisir' → logprob: -3.904019355773926
    9. ' rester' → logprob: -4.029019355773926
    10. ' calcul' → logprob: -4.029019355773926

Token 59: ' exactement' (ID: 108701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3978633880615234
    2. ' M' → logprob: -1.7728633880615234
    3. ' exactement' → logprob: -1.7728633880615234
    4. ' N' → logprob: -2.0228633880615234
    5. 'exact' → logprob: -2.2728633880615234
    6. ' un' → logprob: -2.8978633880615234
    7. ' K' → logprob: -3.5228633880615234
    8. 'N' → logprob: -4.522863388061523
    9. ' exactly' → logprob: -4.647863388061523
    10. 'a' → logprob: -4.897863388061523

Token 60: ' N' (ID: 478)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.8210769295692444
    2. 'M' → logprob: -1.1960768699645996
    3. 'N' → logprob: -2.0710768699645996
    4. ' N' → logprob: -2.9460768699645996
    5. ' (' → logprob: -3.5710768699645996
    6. ' K' → logprob: -3.8210768699645996
    7. 'K' → logprob: -4.5710768699646
    8. ' ' → logprob: -4.6960768699646
    9. '(M' → logprob: -5.3210768699646
    10. '(N' → logprob: -6.0710768699646

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5440379977226257
    2. ' +' → logprob: -1.1690380573272705
    3. '-' → logprob: -2.4190380573272705
    4. ' -' → logprob: -4.044037818908691
    5. ' plus' → logprob: -7.294037818908691
    6. '<|end|>' → logprob: -7.919037818908691
    7. 'plus' → logprob: -8.731537818908691
    8. ' ' → logprob: -8.919037818908691
    9. '+m' → logprob: -8.919037818908691
    10. '+r' → logprob: -8.981537818908691

Token 62: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014776477590203285
    2. ' M' → logprob: -4.639776706695557
    3. 'K' → logprob: -5.389776706695557
    4. 'N' → logprob: -9.014776229858398
    5. '<|end|>' → logprob: -9.014776229858398
    6. ' ' → logprob: -9.889776229858398
    7. '1' → logprob: -10.139776229858398
    8. ' K' → logprob: -10.389776229858398
    9. '+' → logprob: -10.889776229858398
    10. '-' → logprob: -11.514776229858398

Token 63: ' pas' (ID: 2173)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6480288505554199
    2. '<|end|>' → logprob: -0.8980288505554199
    3. ' +' → logprob: -3.27302885055542
    4. '-' → logprob: -4.77302885055542
    5. ' pas' → logprob: -5.27302885055542
    6. ' ' → logprob: -5.64802885055542
    7. '<|end|>' → logprob: -6.02302885055542
    8. ' steps' → logprob: -6.14802885055542
    9. '+m' → logprob: -6.52302885055542
    10. ')' → logprob: -6.89802885055542

Token 64: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.5562219619750977
    2. '<|end|>' → logprob: -1.1812219619750977
    3. ',' → logprob: -3.1812219619750977
    4. 'down' → logprob: -3.9312219619750977
    5. ' down' → logprob: -4.431221961975098
    6. ')' → logprob: -4.431221961975098
    7. '.' → logprob: -5.306221961975098
    8. 'vers' → logprob: -5.306221961975098
    9. ' en' → logprob: -5.806221961975098
    10. '<|end|>' → logprob: -6.181221961975098

Token 65: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3223201334476471
    2. '<|end|>' → logprob: -2.1973202228546143
    3. 'le' → logprob: -2.5723202228546143
    4. 'l' → logprob: -3.0723202228546143
    5. 'dro' → logprob: -4.197319984436035
    6. ' la' → logprob: -4.447319984436035
    7. '```' → logprob: -4.947319984436035
    8. '<|end|>' → logprob: -7.009819984436035
    9. 'N' → logprob: -7.072319984436035
    10. '`' → logprob: -7.322319984436035

Token 66: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.383871853351593
    2. 'g' → logprob: -2.1338717937469482
    3. 'd' → logprob: -2.7588717937469482
    4. ' droite' → logprob: -3.5088717937469482
    5. 'right' → logprob: -3.6338717937469482
    6. '```' → logprob: -3.7588717937469482
    7. 'bas' → logprob: -3.8838717937469482
    8. 'haut' → logprob: -5.383872032165527
    9. 'D' → logprob: -5.696372032165527
    10. 'down' → logprob: -5.821372032165527

Token 67: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033479250967502594
    2. ' +' → logprob: -3.9084792137145996
    3. ')' → logprob: -5.4084792137146
    4. ',' → logprob: -5.7834792137146
    5. '<|end|>' → logprob: -6.1584792137146
    6. ' and' → logprob: -6.9084792137146
    7. ' ' → logprob: -7.6584792137146
    8. ' plus' → logprob: -7.9084792137146
    9. '.' → logprob: -7.9084792137146
    10. '<|end|>' → logprob: -8.283479690551758

Token 68: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.4884081780910492
    2. 'M' → logprob: -0.9884082078933716
    3. 'N' → logprob: -4.988408088684082
    4. ' N' → logprob: -5.113408088684082
    5. ' K' → logprob: -7.363408088684082
    6. 'K' → logprob: -7.738408088684082
    7. ' ' → logprob: -8.988408088684082
    8. '<|end|>' → logprob: -9.113408088684082
    9. '```' → logprob: -10.613408088684082
    10. ',' → logprob: -11.050908088684082

Token 69: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12781484425067902
    2. '+' → logprob: -2.127814769744873
    3. '<|end|>' → logprob: -7.252814769744873
    4. ' plus' → logprob: -9.127815246582031
    5. '<|end|>' → logprob: -10.627815246582031
    6. ' ' → logprob: -11.127815246582031
    7. ',' → logprob: -11.377815246582031
    8. 'plus' → logprob: -12.252815246582031
    9. '+k' → logprob: -13.502815246582031
    10. ' +
' → logprob: -13.502815246582031

Token 70: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.43320509791374207
    2. ' K' → logprob: -1.0582051277160645
    3. '<|end|>' → logprob: -5.4332051277160645
    4. ' ' → logprob: -9.683204650878906
    5. '<|end|>' → logprob: -10.058204650878906
    6. '
' → logprob: -11.808204650878906
    7. '>K' → logprob: -12.308204650878906
    8. '	K' → logprob: -12.683204650878906
    9. '0' → logprob: -14.058204650878906
    10. 'k' → logprob: -14.558204650878906

Token 71: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.14354009926319122
    2. 'pas' → logprob: -2.018540143966675
    3. ' ' → logprob: -8.018540382385254
    4. ' vers' → logprob: -8.393540382385254
    5. '<|end|>' → logprob: -9.268540382385254
    6. ' pasos' → logprob: -10.518540382385254
    7. '```' → logprob: -10.643540382385254
    8. ' passos' → logprob: -10.643540382385254
    9. ' ' → logprob: -10.768540382385254
    10. '_pas' → logprob: -11.018540382385254

Token 72: ' vers' (ID: 3640)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.35018405318260193
    2. ' vers' → logprob: -1.2251840829849243
    3. '<|end|>' → logprob: -6.975183963775635
    4. 'down' → logprob: -8.100184440612793
    5. 'en' → logprob: -9.225184440612793
    6. 'au' → logprob: -9.600184440612793
    7. ' ' → logprob: -9.850184440612793
    8. ' вниз' → logprob: -10.100184440612793
    9. '#' → logprob: -10.225184440612793
    10. '```' → logprob: -10.225184440612793

Token 73: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0266253724694252
    2. 'la' → logprob: -3.901625394821167
    3. 'bas' → logprob: -6.026625156402588
    4. ' le' → logprob: -6.776625156402588
    5. 'haut' → logprob: -7.151625156402588
    6. '```' → logprob: -7.276625156402588
    7. 'l' → logprob: -8.276625633239746
    8. 'H' → logprob: -9.026625633239746
    9. ' ' → logprob: -9.026625633239746
    10. '1' → logprob: -9.901625633239746

Token 74: ' haut' (ID: 28223)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.7023060917854309
    2. 'haut' → logprob: -0.7023060917854309
    3. 'ha' → logprob: -5.577306270599365
    4. '```' → logprob: -6.577306270599365
    5. 'dro' → logprob: -6.827306270599365
    6. ' haut' → logprob: -7.577306270599365
    7. 'down' → logprob: -7.827306270599365
    8. 'b' → logprob: -7.952306270599365
    9. ' bas' → logprob: -8.577305793762207
    10. '   ' → logprob: -8.639805793762207

Token 75: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33577316999435425
    2. '#' → logprob: -2.210773229598999
    3. ')' → logprob: -2.835773229598999
    4. 'import' → logprob: -3.460773229598999
    5. ',' → logprob: -3.710773229598999
    6. 'dp' → logprob: -3.960773229598999
    7. '```' → logprob: -4.33577299118042
    8. 'from' → logprob: -4.83577299118042
    9. 'C' → logprob: -5.83577299118042
    10. '.' → logprob: -6.08577299118042

Token 76: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3398370146751404
    2. ')' → logprob: -1.7148370742797852
    3. ',' → logprob: -3.839837074279785
    4. 'et' → logprob: -3.839837074279785
    5. 'while' → logprob: -4.714837074279785
    6. ' )' → logprob: -4.839837074279785
    7. '.' → logprob: -5.089837074279785
    8. ' and' → logprob: -5.089837074279785
    9. ' mais' → logprob: -5.339837074279785
    10. 'def' → logprob: -5.464837074279785

Token 77: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26715287566185
    2. 'et' → logprob: -3.267152786254883
    3. ' puis' → logprob: -3.892152786254883
    4. 'while' → logprob: -4.267152786254883
    5. ' et' → logprob: -4.392152786254883
    6. 'def' → logprob: -4.517152786254883
    7. ' and' → logprob: -4.517152786254883
    8. 'for' → logprob: -4.517152786254883
    9. ' #' → logprob: -4.642152786254883
    10. ' mais' → logprob: -4.892152786254883

Token 78: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8316246271133423
    2. ' K' → logprob: -1.7066246271133423
    3. 'on' → logprob: -1.9566246271133423
    4. 'N' → logprob: -3.2066245079040527
    5. 'cho' → logprob: -3.4566245079040527
    6. ' on' → logprob: -3.5816245079040527
    7. ' choisir' → logprob: -3.5816245079040527
    8. 'exact' → logprob: -4.081624507904053
    9. 'le' → logprob: -4.331624507904053
    10. ' N' → logprob: -4.456624507904053

Token 79: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.028377534821629524
    2. 'pas' → logprob: -4.528377532958984
    3. '<|end|>' → logprob: -4.903377532958984
    4. ' fois' → logprob: -5.153377532958984
    5. ' passages' → logprob: -6.278377532958984
    6. ' déplacements' → logprob: -8.653377532958984
    7. '*' → logprob: -8.778377532958984
    8. ' passos' → logprob: -8.903377532958984
    9. ' ' → logprob: -9.090877532958984
    10. '<|end|>' → logprob: -9.215877532958984

Token 80: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.05838824436068535
    2. '<|end|>' → logprob: -3.5583882331848145
    3. ' supplémentaires' → logprob: -4.4333882331848145
    4. 'vers' → logprob: -4.6833882331848145
    5. ' de' → logprob: -5.9333882331848145
    6. ' "' → logprob: -7.0583882331848145
    7. 'tow' → logprob: -7.0583882331848145
    8. ' ' → logprob: -7.8083882331848145
    9. ' à' → logprob: -8.058388710021973
    10. ' towards' → logprob: -8.308388710021973

Token 81: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.22607997059822083
    2. ' la' → logprob: -2.4760799407958984
    3. 'le' → logprob: -2.7260799407958984
    4. '<|end|>' → logprob: -3.4760799407958984
    5. 'the' → logprob: -4.851079940795898
    6. 'l' → logprob: -5.726079940795898
    7. 'left' → logprob: -6.101079940795898
    8. '```' → logprob: -6.226079940795898
    9. 'g' → logprob: -6.601079940795898
    10. ' gauche' → logprob: -7.101079940795898

Token 82: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0794399157166481
    2. 'bas' → logprob: -3.204439878463745
    3. ' gauche' → logprob: -3.454439878463745
    4. 'dro' → logprob: -6.204440116882324
    5. 'left' → logprob: -7.079440116882324
    6. ' droite' → logprob: -8.079440116882324
    7. ' ' → logprob: -8.204440116882324
    8. 'haut' → logprob: -9.141940116882324
    9. ' bas' → logprob: -9.391940116882324
    10. 'd' → logprob: -9.766940116882324

Token 83: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1360272318124771
    2. ')' → logprob: -3.2610273361206055
    3. '#' → logprob: -3.6360273361206055
    4. 'import' → logprob: -4.1360273361206055
    5. '```' → logprob: -4.2610273361206055
    6. ',' → logprob: -4.7610273361206055
    7. 'dp' → logprob: -4.8860273361206055
    8. 'from' → logprob: -5.5110273361206055
    9. '.' → logprob: -6.5110273361206055
    10. ' def' → logprob: -6.6360273361206055

Token 84: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2817695736885071
    2. 'K' → logprob: -1.4067695140838623
    3. ' ' → logprob: -8.406769752502441
    4. ' M' → logprob: -9.406769752502441
    5. '<|end|>' → logprob: -9.406769752502441
    6. '```' → logprob: -9.656769752502441
    7. 'k' → logprob: -10.156769752502441
    8. 'M' → logprob: -10.156769752502441
    9. '#' → logprob: -11.156769752502441
    10. ' ' → logprob: -11.281769752502441

Token 85: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.019343288615345955
    2. 'pas' → logprob: -4.269343376159668
    3. ' vers' → logprob: -5.644343376159668
    4. '<|end|>' → logprob: -6.644343376159668
    5. ' ' → logprob: -9.144343376159668
    6. 'vers' → logprob: -9.894343376159668
    7. '_pas' → logprob: -10.019343376159668
    8. ' ' → logprob: -10.644343376159668
    9. ' fois' → logprob: -10.769343376159668
    10. ' passes' → logprob: -11.144343376159668

Token 86: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.4309649169445038
    2. 'vers' → logprob: -1.0559649467468262
    3. '<|end|>' → logprob: -6.805964946746826
    4. ' envers' → logprob: -8.305964469909668
    5. 'au' → logprob: -8.555964469909668
    6. ' au' → logprob: -9.180964469909668
    7. '>' → logprob: -9.555964469909668
    8. '#' → logprob: -9.930964469909668
    9. ' verso' → logprob: -10.055964469909668
    10. '```' → logprob: -10.305964469909668

Token 87: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3285894989967346
    2. ' le' → logprob: -1.3285894393920898
    3. 'la' → logprob: -5.45358943939209
    4. 'down' → logprob: -5.95358943939209
    5. ' ' → logprob: -6.70358943939209
    6. '```' → logprob: -6.82858943939209
    7. ' la' → logprob: -6.95358943939209
    8. 'au' → logprob: -6.95358943939209
    9. 'l' → logprob: -7.82858943939209
    10. ' vers' → logprob: -7.95358943939209

Token 88: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0005464801797643304
    2. ' bas' → logprob: -7.875546455383301
    3. 'haut' → logprob: -9.3755464553833
    4. 'down' → logprob: -10.2505464553833
    5. '_bas' → logprob: -11.7505464553833
    6. '```' → logprob: -11.8755464553833
    7. 'b' → logprob: -12.0005464553833
    8. ' ' → logprob: -12.6255464553833
    9. 'ha' → logprob: -12.7505464553833
    10. 'dro' → logprob: -13.2505464553833

Token 89: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5619917511940002
    2. ')' → logprob: -2.1869916915893555
    3. 'from' → logprob: -2.1869916915893555
    4. 'import' → logprob: -2.6869916915893555
    5. '#' → logprob: -3.1869916915893555
    6. '.' → logprob: -3.6869916915893555
    7. '```' → logprob: -3.8119916915893555
    8. ',' → logprob: -3.8119916915893555
    9. 'dp' → logprob: -4.3119916915893555
    10. 'f' → logprob: -6.6869916915893555

Token 90: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01073792576789856
    2. ' )' → logprob: -4.635737895965576
    3. ').' → logprob: -7.260737895965576
    4. '#' → logprob: -8.760738372802734
    5. '.' → logprob: -9.760738372802734
    6. ',' → logprob: -10.885738372802734
    7. ')#' → logprob: -11.885738372802734
    8. '),' → logprob: -12.010738372802734
    9. ' ).' → logprob: -12.260738372802734
    10. '.)' → logprob: -12.385738372802734

Token 91: ' dét' (ID: 31931)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8408557176589966
    2. ' pas' → logprob: -1.8408557176589966
    3. ' passages' → logprob: -2.715855598449707
    4. ' dét' → logprob: -2.965855598449707
    5. ' déplacements' → logprob: -2.965855598449707
    6. ' chemins' → logprob: -3.215855598449707
    7. ' "' → logprob: -3.340855598449707
    8. 'quel' → logprob: -3.465855598449707
    9. ' ' → logprob: -4.215855598449707
    10. 'qu' → logprob: -4.465855598449707

Token 92: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.00037859921576455235
    2. 'our' → logprob: -8.250378608703613
    3. 'ou' → logprob: -10.375378608703613
    4. 'OURS' → logprob: -11.500378608703613
    5. ' ours' → logprob: -11.625378608703613
    6. '   ' → logprob: -11.625378608703613
    7. 'o' → logprob: -12.125378608703613
    8. '```' → logprob: -12.375378608703613
    9. '#' → logprob: -12.500378608703613
    10. 'ourn' → logprob: -12.500378608703613

Token 93: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.1035529300570488
    2. ')' → logprob: -2.47855281829834
    3. ' ).' → logprob: -5.60355281829834
    4. '#' → logprob: -5.97855281829834
    5. ').

' → logprob: -6.35355281829834
    6. 's' → logprob: -6.35355281829834
    7. ' )' → logprob: -6.97855281829834
    8. '),' → logprob: -7.22855281829834
    9. ').
' → logprob: -7.22855281829834
    10. ' sont' → logprob: -7.47855281829834

Token 94: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.817876935005188
    2. 'def' → logprob: -1.317876935005188
    3. 'dp' → logprob: -2.1928768157958984
    4. '#' → logprob: -2.6928768157958984
    5. 'import' → logprob: -2.8178768157958984
    6. 'f' → logprob: -3.5678768157958984
    7. ')' → logprob: -4.442876815795898
    8. 'd' → logprob: -5.692876815795898
    9. 'F' → logprob: -6.317876815795898
    10. '```' → logprob: -6.942876815795898

Token 95: ' Le' (ID: 2018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5531874299049377
    2. 'dp' → logprob: -1.553187370300293
    3. 'def' → logprob: -2.178187370300293
    4. 'fact' → logprob: -2.803187370300293
    5. 'import' → logprob: -3.928187370300293
    6. '#' → logprob: -4.178187370300293
    7. 'factor' → logprob: -5.928187370300293
    8. 'f' → logprob: -7.678187370300293
    9. 'comb' → logprob: -8.303187370300293
    10. 'res' → logprob: -8.678187370300293

Token 96: ' nombre' (ID: 9733)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.7409141659736633
    2. 's' → logprob: -1.6159141063690186
    3. ' nombre' → logprob: -1.8659141063690186
    4. '#' → logprob: -4.240914344787598
    5. 'code' → logprob: -4.365914344787598
    6. 'nombre' → logprob: -4.365914344787598
    7. 'def' → logprob: -4.490914344787598
    8. ' problème' → logprob: -4.865914344787598
    9. 'r' → logprob: -4.990914344787598
    10. 'u' → logprob: -5.115914344787598

Token 97: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2659144997596741
    2. ' d' → logprob: -2.7659144401550293
    3. ' total' → logprob: -3.2659144401550293
    4. '_total' → logprob: -3.3909144401550293
    5. 'total' → logprob: -4.015914440155029
    6. 'de' → logprob: -4.265914440155029
    7. '_de' → logprob: -4.265914440155029
    8. '_' → logprob: -4.390914440155029
    9. '<|end|>' → logprob: -4.640914440155029
    10. ' ' → logprob: -4.765914440155029

Token 98: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.18075184524059296
    2. 'de' → logprob: -2.8057518005371094
    3. ' =' → logprob: -3.8057518005371094
    4. '_de' → logprob: -4.055751800537109
    5. '_total' → logprob: -4.180751800537109
    6. ' d' → logprob: -4.305751800537109
    7. '=' → logprob: -4.930751800537109
    8. '<|end|>' → logprob: -5.180751800537109
    9. '<|end|>' → logprob: -5.305751800537109
    10. 'd' → logprob: -5.430751800537109

Token 99: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.34610986709594727
    2. 'pas' → logprob: -1.4711098670959473
    3. ' façons' → logprob: -2.9711098670959473
    4. ' chemins' → logprob: -5.971109867095947
    5. ' ' → logprob: -6.596109867095947
    6. ' ways' → logprob: -6.971109867095947
    7. 'pass' → logprob: -6.971109867095947
    8. ' passages' → logprob: -6.971109867095947
    9. 'p' → logprob: -7.096109867095947
    10. ' déplacements' → logprob: -7.096109867095947

Token 100: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28903651237487793
    2. ' ' → logprob: -2.164036512374878
    3. ' total' → logprob: -2.914036512374878
    4. 'total' → logprob: -3.664036512374878
    5. '=' → logprob: -4.164036750793457
    6. ',' → logprob: -4.414036750793457
    7. ' is' → logprob: -5.039036750793457
    8. '_total' → logprob: -5.164036750793457
    9. 's' → logprob: -5.914036750793457
    10. ' s' → logprob: -6.164036750793457

Token 101: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.643686830997467
    2. 'N' → logprob: -0.768686830997467
    3. ' (' → logprob: -5.018686771392822
    4. ' ' → logprob: -5.518686771392822
    5. '(N' → logprob: -8.64368724822998
    6. '   ' → logprob: -10.01868724822998
    7. '`' → logprob: -10.14368724822998
    8. '(' → logprob: -10.39368724822998
    9. 'n' → logprob: -11.01868724822998
    10. ' `' → logprob: -11.51868724822998

Token 102: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02827811799943447
    2. ' N' → logprob: -3.653278112411499
    3. '(N' → logprob: -7.028278350830078
    4. ' (' → logprob: -7.653278350830078
    5. ')' → logprob: -8.278278350830078
    6. '2' → logprob: -8.403278350830078
    7. ' ' → logprob: -9.278278350830078
    8. '(' → logprob: -10.653278350830078
    9. '   ' → logprob: -12.778278350830078
    10. '  ' → logprob: -12.903278350830078

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6934239864349365
    2. ' +' → logprob: -0.6934239864349365
    3. ')' → logprob: -8.568424224853516
    4. ')+' → logprob: -10.693424224853516
    5. '2' → logprob: -11.068424224853516
    6. 'M' → logprob: -11.318424224853516
    7. ' ' → logprob: -11.818424224853516
    8. ' M' → logprob: -12.693424224853516
    9. '+
' → logprob: -12.693424224853516
    10. ')+(' → logprob: -12.693424224853516

Token 104: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.42952263355255127
    2. ' M' → logprob: -1.0545226335525513
    3. 'K' → logprob: -7.804522514343262
    4. ' ' → logprob: -8.554522514343262
    5. ' K' → logprob: -8.679522514343262
    6. ')' → logprob: -10.929522514343262
    7. '2' → logprob: -11.054522514343262
    8. 'N' → logprob: -12.429522514343262
    9. '	M' → logprob: -12.679522514343262
    10. '  ' → logprob: -13.679522514343262

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17934057116508484
    2. ' +' → logprob: -2.3043406009674072
    3. '+' → logprob: -2.8043406009674072
    4. '*' → logprob: -6.429340362548828
    5. ')+' → logprob: -6.679340362548828
    6. ')*' → logprob: -8.429340362548828
    7. ' )' → logprob: -8.429340362548828
    8. ')+(' → logprob: -8.804340362548828
    9. ' ' → logprob: -9.054340362548828
    10. '2' → logprob: -10.054340362548828

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4751756191253662
    2. '+' → logprob: -0.9751756191253662
    3. '*' → logprob: -6.850175857543945
    4. '2' → logprob: -11.350175857543945
    5. ' ' → logprob: -11.475175857543945
    6. ' *' → logprob: -12.225175857543945
    7. ' plus' → logprob: -12.975175857543945
    8. 'M' → logprob: -13.725175857543945
    9. '0' → logprob: -13.975175857543945
    10. ',' → logprob: -13.975175857543945

Token 107: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0671655461192131
    2. ' (' → logprob: -2.8171656131744385
    3. '(' → logprob: -5.317165374755859
    4. 'M' → logprob: -8.81716537475586
    5. '(N' → logprob: -9.44216537475586
    6. ' M' → logprob: -10.81716537475586
    7. ' ' → logprob: -11.31716537475586
    8. '((' → logprob: -12.31716537475586
    9. '(K' → logprob: -12.56716537475586
    10. '(B' → logprob: -13.19216537475586

Token 108: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018582642078399658
    2. '(M' → logprob: -4.143582820892334
    3. ' M' → logprob: -6.018582820892334
    4. ' (' → logprob: -9.643582344055176
    5. ')' → logprob: -11.268582344055176
    6. '(' → logprob: -11.393582344055176
    7. 'K' → logprob: -11.768582344055176
    8. '	M' → logprob: -12.143582344055176
    9. ' ' → logprob: -13.143582344055176
    10. '   ' → logprob: -14.393582344055176

Token 109: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02631968818604946
    2. '+' → logprob: -3.651319742202759
    3. ')' → logprob: -11.90131950378418
    4. ' ' → logprob: -12.27631950378418
    5. '<|end|>' → logprob: -12.65131950378418
    6. ' +
' → logprob: -13.65131950378418
    7. ')+' → logprob: -13.65131950378418
    8. ' plus' → logprob: -14.40131950378418
    9. '<|end|>' → logprob: -15.40131950378418
    10. ' +

' → logprob: -15.40131950378418

Token 110: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0005561320576816797
    2. ' K' → logprob: -7.500555992126465
    3. ' ' → logprob: -13.375555992126465
    4. ')' → logprob: -14.750555992126465
    5. '2' → logprob: -15.375555992126465
    6. '>K' → logprob: -15.500555992126465
    7. '<|end|>' → logprob: -15.625555992126465
    8. '+' → logprob: -16.37555694580078
    9. '1' → logprob: -16.37555694580078
    10. '(' → logprob: -16.50055694580078

Token 111: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2754802405834198
    2. '+' → logprob: -1.9004802703857422
    3. ')' → logprob: -2.400480270385742
    4. ')+' → logprob: -7.775480270385742
    5. ' )' → logprob: -9.150480270385742
    6. ' ' → logprob: -9.525480270385742
    7. '#' → logprob: -12.275480270385742
    8. ' +
' → logprob: -12.900480270385742
    9. '),' → logprob: -13.150480270385742
    10. ' ' → logprob: -13.275480270385742

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232454538345337
    2. '+' → logprob: -0.8982454538345337
    3. ')' → logprob: -9.398245811462402
    4. ' +
' → logprob: -11.773245811462402
    5. '+
' → logprob: -11.898245811462402
    6. ')+' → logprob: -12.148245811462402
    7. ' ' → logprob: -12.773245811462402
    8. '#' → logprob: -12.898245811462402
    9. ' plus' → logprob: -13.273245811462402
    10. '
' → logprob: -13.398245811462402

Token 113: ' K' (ID: 658)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4782424569129944
    2. '(' → logprob: -1.4782423973083496
    3. ' ' → logprob: -2.6032423973083496
    4. 'K' → logprob: -3.1032423973083496
    5. ' K' → logprob: -3.8532423973083496
    6. ' (' → logprob: -4.60324239730835
    7. '(K' → logprob: -6.35324239730835
    8. '0' → logprob: -9.603242874145508
    9. '4' → logprob: -9.978242874145508
    10. '3' → logprob: -11.353242874145508

Token 114: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8943460583686829
    2. '*' → logprob: -1.269345998764038
    3. '+' → logprob: -1.644345998764038
    4. ')' → logprob: -2.519345998764038
    5. ' *' → logprob: -4.394346237182617
    6. '<|end|>' → logprob: -4.644346237182617
    7. ' ' → logprob: -5.394346237182617
    8. '=' → logprob: -6.144346237182617
    9. ' =' → logprob: -6.269346237182617
    10. '  ' → logprob: -6.519346237182617

Token 115: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02055169641971588
    2. ' K' → logprob: -3.8955516815185547
    3. ' ' → logprob: -12.270551681518555
    4. '(' → logprob: -13.145551681518555
    5. ' (' → logprob: -14.145551681518555
    6. '<|end|>' → logprob: -14.145551681518555
    7. ')' → logprob: -14.895551681518555
    8. '1' → logprob: -15.520551681518555
    9. '	K' → logprob: -15.645551681518555
    10. '0' → logprob: -15.645551681518555

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21578145027160645
    2. '=' → logprob: -1.7157814502716064
    3. ' ' → logprob: -5.715781211853027
    4. ')' → logprob: -6.215781211853027
    5. ',' → logprob: -6.465781211853027
    6. '
' → logprob: -6.590781211853027
    7. 'total' → logprob: -6.715781211853027
    8. ' 
' → logprob: -7.590781211853027
    9. '+' → logprob: -7.590781211853027
    10. '#' → logprob: -7.715781211853027

Token 117: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016691092401742935
    2. ' N' → logprob: -4.516691207885742
    3. '2' → logprob: -5.391691207885742
    4. '(N' → logprob: -7.141691207885742
    5. ' (' → logprob: -8.641691207885742
    6. ' ' → logprob: -9.766691207885742
    7. '(' → logprob: -10.391691207885742
    8. '4' → logprob: -11.266691207885742
    9. '	N' → logprob: -14.141691207885742
    10. '   ' → logprob: -14.391691207885742

Token 118: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06995365768671036
    2. '+' → logprob: -2.694953680038452
    3. ' ' → logprob: -11.069953918457031
    4. ' ' → logprob: -14.444953918457031
    5. ' +
' → logprob: -15.569953918457031
    6. ')' → logprob: -15.694953918457031
    7. '*' → logprob: -15.944953918457031
    8. ' plus' → logprob: -16.44495391845703
    9. '2' → logprob: -16.44495391845703
    10. '+B' → logprob: -16.69495391845703

Token 119: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004448870196938515
    2. '2' → logprob: -6.004448890686035
    3. ' M' → logprob: -6.629448890686035
    4. '4' → logprob: -7.379448890686035
    5. '3' → logprob: -11.129448890686035
    6. ' ' → logprob: -12.129448890686035
    7. '6' → logprob: -13.504448890686035
    8. '```' → logprob: -14.129448890686035
    9. '(' → logprob: -14.254448890686035
    10. 'm' → logprob: -14.629448890686035

Token 120: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25217440724372864
    2. '+' → logprob: -1.5021743774414062
    3. ' ' → logprob: -8.627174377441406
    4. '2' → logprob: -10.377174377441406
    5. ' +
' → logprob: -11.877174377441406
    6. '4' → logprob: -12.002174377441406
    7. '`' → logprob: -13.564674377441406
    8. ')' → logprob: -13.689674377441406
    9. ' ' → logprob: -13.689674377441406
    10. '(' → logprob: -13.689674377441406

Token 121: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.200166469876422e-06
    2. '5' → logprob: -12.750004768371582
    3. '3' → logprob: -13.125004768371582
    4. ' ' → logprob: -15.875004768371582
    5. '2' → logprob: -16.1250057220459
    6. '6' → logprob: -17.7500057220459
    7. '４' → logprob: -18.2500057220459
    8. '۴' → logprob: -18.6250057220459
    9. '```' → logprob: -19.0000057220459
    10. '٤' → logprob: -20.0000057220459

Token 122: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.511406809295295e-06
    2. '5' → logprob: -12.500006675720215
    3. '3' → logprob: -13.125006675720215
    4. '2' → logprob: -14.375006675720215
    5. ' ' → logprob: -16.8750057220459
    6. '6' → logprob: -18.0000057220459
    7. '۴' → logprob: -18.5000057220459
    8. '４' → logprob: -18.6250057220459
    9. '```' → logprob: -18.8750057220459
    10. '٤' → logprob: -19.7500057220459

Token 123: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.021752238273620605
    2. '*K' → logprob: -3.89675235748291
    3. ' K' → logprob: -6.77175235748291
    4. ' *' → logprob: -10.27175235748291
    5. '*' → logprob: -10.52175235748291
    6. '**' → logprob: -14.14675235748291
    7. '	K' → logprob: -14.27175235748291
    8. ' ' → logprob: -15.02175235748291
    9. ' ' → logprob: -15.89675235748291
    10. '
' → logprob: -16.021751403808594

Token 124: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.609290361404419
    2. '#' → logprob: -2.109290361404419
    3. ',' → logprob: -2.359290361404419
    4. '
' → logprob: -2.734290361404419
    5. '.' → logprob: -3.359290361404419
    6. '+' → logprob: -3.734290361404419
    7. '\' → logprob: -4.23429012298584
    8. 'def' → logprob: -4.60929012298584
    9. ' 
' → logprob: -4.73429012298584
    10. 'import' → logprob: -4.73429012298584

Token 125: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7882515788078308
    2. ',' → logprob: -2.0382516384124756
    3. ' ' → logprob: -2.1632516384124756
    4. 'def' → logprob: -2.7882516384124756
    5. '#' → logprob: -3.4132516384124756
    6. 'import' → logprob: -3.4132516384124756
    7. ' 
' → logprob: -3.5382516384124756
    8. 'from' → logprob: -3.5382516384124756
    9. ' )' → logprob: -3.9132516384124756
    10. '```' → logprob: -4.4132513999938965

Token 126: ' Mais' (ID: 13880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0771812200546265
    2. 'from' → logprob: -1.7021812200546265
    3. '#' → logprob: -1.9521812200546265
    4. 'import' → logprob: -2.202181339263916
    5. 'def' → logprob: -2.327181339263916
    6. ',' → logprob: -3.702181339263916
    7. 'C' → logprob: -4.327181339263916
    8. ' )' → logprob: -4.827181339263916
    9. ' ' → logprob: -4.827181339263916
    10. ' 
' → logprob: -5.202181339263916

Token 127: ' on' (ID: 402)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' peut' (ID: 9216)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.6323257088661194
    2. ' doit' → logprob: -1.5073256492614746
    3. 'n' → logprob: -2.7573256492614746
    4. ' n' → logprob: -3.0073256492614746
    5. ' peut' → logprob: -3.8823256492614746
    6. 'a' → logprob: -4.132325649261475
    7. 'ne' → logprob: -4.257325649261475
    8. ' faut' → logprob: -4.382325649261475
    9. 'do' → logprob: -4.382325649261475
    10. 's' → logprob: -5.007325649261475

Token 129: ' revenir' (ID: 88322)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -1.34173583984375
    2. 'pas' → logprob: -1.96673583984375
    3. ' continuer' → logprob: -2.34173583984375
    4. 'contin' → logprob: -2.96673583984375
    5. 'cho' → logprob: -3.09173583984375
    6. ' pas' → logprob: -3.09173583984375
    7. 'faire' → logprob: -3.09173583984375
    8. 'penser' → logprob: -3.34173583984375
    9. ' utiliser' → logprob: -3.84173583984375
    10. 'arr' → logprob: -3.96673583984375

Token 130: ' sur' (ID: 1512)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.174032524228096
    2. 'sur' → logprob: -2.67403244972229
    3. 'en' → logprob: -2.92403244972229
    4. ' à' → logprob: -4.424032688140869
    5. ' sur' → logprob: -5.049032688140869
    6. ' au' → logprob: -5.299032688140869
    7. ' vers' → logprob: -5.799032688140869
    8. 'à' → logprob: -6.049032688140869
    9. ' aux' → logprob: -6.299032688140869
    10. ' ' → logprob: -7.424032688140869

Token 131: ' ses' (ID: 6707)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.097651720046997
    2. 'un' → logprob: -1.847651720046997
    3. 'des' → logprob: -2.472651720046997
    4. ' un' → logprob: -2.847651720046997
    5. ' le' → logprob: -2.972651720046997
    6. 'la' → logprob: -3.097651720046997
    7. 'n' → logprob: -3.097651720046997
    8. 'les' → logprob: -3.097651720046997
    9. ' des' → logprob: -3.472651720046997
    10. 'N' → logprob: -3.722651720046997

Token 132: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0007376811117865145
    2. ' pas' → logprob: -8.375738143920898
    3. '   ' → logprob: -9.500738143920898
    4. '#' → logprob: -9.625738143920898
    5. ' ' → logprob: -9.750738143920898
    6. 'p' → logprob: -9.750738143920898
    7. 'steps' → logprob: -9.875738143920898
    8. '```' → logprob: -10.250738143920898
    9. '_' → logprob: -11.000738143920898
    10. '

' → logprob: -11.000738143920898

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37319889664649963
    2. ')' → logprob: -1.8731988668441772
    3. '.' → logprob: -2.623198986053467
    4. ' ' → logprob: -3.123198986053467
    5. ' ,' → logprob: -4.373198986053467
    6. 's' → logprob: -5.248198986053467
    7. '#' → logprob: -5.248198986053467
    8. ' )' → logprob: -5.373198986053467
    9. ' ' → logprob: -6.123198986053467
    10. ''' → logprob: -6.998198986053467

Token 134: ' donc' (ID: 14206)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.5694982409477234
    2. ' donc' → logprob: -1.9444983005523682
    3. ' on' → logprob: -2.319498300552368
    4. ' il' → logprob: -2.569498300552368
    5. ' mais' → logprob: -3.194498300552368
    6. '#' → logprob: -3.819498300552368
    7. ' so' → logprob: -3.944498300552368
    8. ' c' → logprob: -4.944498062133789
    9. ' #' → logprob: -5.694498062133789
    10. ' et' → logprob: -5.819498062133789

Token 135: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.994306743144989
    2. 'on' → logprob: -2.244306802749634
    3. ' on' → logprob: -2.244306802749634
    4. 'il' → logprob: -2.619306802749634
    5. 'import' → logprob: -2.619306802749634
    6. '...' → logprob: -3.244306802749634
    7. 'from' → logprob: -3.244306802749634
    8. ' il' → logprob: -3.369306802749634
    9. ' la' → logprob: -3.869306802749634
    10. 'le' → logprob: -3.994306802749634

Token 136: ' considère' (ID: 176437)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1195687055587769
    2. ' la' → logprob: -1.2445687055587769
    3. ' les' → logprob: -2.8695688247680664
    4. ' uniquement' → logprob: -2.8695688247680664
    5. 'la' → logprob: -2.9945688247680664
    6. 'le' → logprob: -3.3695688247680664
    7. ' que' → logprob: -3.8695688247680664
    8. ' seulement' → logprob: -4.119568824768066
    9. ' N' → logprob: -4.244568824768066
    10. ' toutes' → logprob: -4.244568824768066

Token 138: ' chemins' (ID: 192063)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' combin' (ID: 25307)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.9338008165359497
    2. ',' → logprob: -2.43380069732666
    3. ' =' → logprob: -2.93380069732666
    4. '.' → logprob: -3.18380069732666
    5. '#' → logprob: -3.43380069732666
    6. ' possibles' → logprob: -3.68380069732666
    7. '<|end|>' → logprob: -3.80880069732666
    8. ' de' → logprob: -3.93380069732666
    9. ' comple' → logprob: -3.93380069732666
    10. '=' → logprob: -4.05880069732666

Token 140: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.20407113432884216
    2. 'atoire' → logprob: -1.9540711641311646
    3. 'ato' → logprob: -3.329071044921875
    4. '```' → logprob: -6.704071044921875
    5. '{' → logprob: -7.079071044921875
    6. '(' → logprob: -7.204071044921875
    7. '[' → logprob: -7.204071044921875
    8. '#' → logprob: -7.329071044921875
    9. '\' → logprob: -7.954071044921875
    10. 'a' → logprob: -7.954071044921875

Token 141: ' qui' (ID: 2780)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6412233114242554
    2. ',' → logprob: -2.016223430633545
    3. '.' → logprob: -2.016223430633545
    4. 'from' → logprob: -2.266223430633545
    5. 'def' → logprob: -2.766223430633545
    6. ')' → logprob: -4.516223430633545
    7. '#' → logprob: -5.391223430633545
    8. '```' → logprob: -5.641223430633545
    9. ' ' → logprob: -5.766223430633545
    10. ' import' → logprob: -5.891223430633545

Token 142: ' cont' (ID: 836)
  Prédit: ' utilisent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisent' → logprob: -1.6034154891967773
    2. ' respect' → logprob: -1.7284154891967773
    3. ' passent' → logprob: -1.8534154891967773
    4. 'n' → logprob: -2.9784154891967773
    5. 'respect' → logprob: -3.1034154891967773
    6. 'ne' → logprob: -3.4784154891967773
    7. 's' → logprob: -3.4784154891967773
    8. ' prennent' → logprob: -3.4784154891967773
    9. ' suivent' → logprob: -3.7284154891967773
    10. 'util' → logprob: -3.7284154891967773

Token 143: 'iennent' (ID: 53290)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.06103885546326637
    2. 'in' → logprob: -3.3110389709472656
    3. 'inu' → logprob: -3.8110389709472656
    4. 'ient' → logprob: -8.936038970947266
    5. 'INUE' → logprob: -9.186038970947266
    6. 'i' → logprob: -9.561038970947266
    7. '#' → logprob: -9.936038970947266
    8. 'iennent' → logprob: -9.936038970947266
    9. '```' → logprob: -10.561038970947266
    10. 'inent' → logprob: -10.936038970947266

Token 144: '
' (ID: 198)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.4575793743133545
    2. ' ' → logprob: -1.5825793743133545
    3. '(N' → logprob: -2.3325793743133545
    4. 'N' → logprob: -2.5825793743133545
    5. '(' → logprob: -2.7075793743133545
    6. ' (' → logprob: -3.0825793743133545
    7. 'exact' → logprob: -3.0825793743133545
    8. ' K' → logprob: -3.2075793743133545
    9. ' des' → logprob: -3.5825793743133545
    10. ' '' → logprob: -3.8325793743133545

Token 145: '#' (ID: 2)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.4249861240386963
    2. ' les' → logprob: -1.9249861240386963
    3. ' ' → logprob: -2.0499861240386963
    4. '(N' → logprob: -2.2999861240386963
    5. 'N' → logprob: -2.9249861240386963
    6. ' (' → logprob: -2.9249861240386963
    7. ' des' → logprob: -3.1749861240386963
    8. '(' → logprob: -3.4249861240386963
    9. '4' → logprob: -3.4249861240386963
    10. ' la' → logprob: -3.6749861240386963

Token 146: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.3432377576828003
    2. ' exactement' → logprob: -1.7182377576828003
    3. ' des' → logprob: -2.09323787689209
    4. 'exact' → logprob: -2.21823787689209
    5. ' K' → logprob: -2.71823787689209
    6. ' ' → logprob: -2.96823787689209
    7. 'N' → logprob: -3.21823787689209
    8. ' (' → logprob: -3.34323787689209
    9. ' les' → logprob: -3.46823787689209
    10. ' exactly' → logprob: -3.96823787689209

Token 147: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19046060740947723
    2. ' N' → logprob: -2.565460681915283
    3. 'K' → logprob: -3.190460681915283
    4. '(N' → logprob: -4.315460681915283
    5. ' K' → logprob: -4.565460681915283
    6. ' (' → logprob: -4.690460681915283
    7. ' ' → logprob: -5.315460681915283
    8. ')' → logprob: -5.565460681915283
    9. '2' → logprob: -6.190460681915283
    10. 'M' → logprob: -6.315460681915283

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2255859673023224
    2. '+' → logprob: -1.6005859375
    3. ')' → logprob: -9.7255859375
    4. ' ' → logprob: -10.8505859375
    5. ',' → logprob: -11.2255859375
    6. ' ' → logprob: -11.4755859375
    7. ' plus' → logprob: -11.7880859375
    8. 'K' → logprob: -11.8505859375
    9. ' +
' → logprob: -11.8505859375
    10. ' )' → logprob: -12.1630859375

Token 149: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.012571576051414013
    2. 'M' → logprob: -4.512571811676025
    3. ' K' → logprob: -6.887571811676025
    4. '2' → logprob: -8.012571334838867
    5. '4' → logprob: -9.262571334838867
    6. ' ' → logprob: -10.387571334838867
    7. ' M' → logprob: -10.637571334838867
    8. ')' → logprob: -11.637571334838867
    9. '<|end|>' → logprob: -13.012571334838867
    10. '1' → logprob: -13.137571334838867

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20423102378845215
    2. ' +' → logprob: -2.204231023788452
    3. '+' → logprob: -2.829231023788452
    4. ' )' → logprob: -5.079231262207031
    5. ' plus' → logprob: -6.079231262207031
    6. '*' → logprob: -6.454231262207031
    7. ')+' → logprob: -6.579231262207031
    8. ',' → logprob: -7.079231262207031
    9. ')*' → logprob: -7.329231262207031
    10. ' ' → logprob: -7.704231262207031

Token 151: ' dro' (ID: 6517)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6477645635604858
    2. ' +' → logprob: -0.7727645635604858
    3. ')' → logprob: -4.897764682769775
    4. ',' → logprob: -6.272764682769775
    5. ' plus' → logprob: -6.647764682769775
    6. ' ,' → logprob: -7.272764682769775
    7. '*' → logprob: -7.397764682769775
    8. ' ' → logprob: -7.772764682769775
    9. ' M' → logprob: -8.022764205932617
    10. '"' → logprob: -8.022764205932617

Token 152: 'ites' (ID: 3915)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.1866543292999268
    2. 'ites' → logprob: -1.3116543292999268
    3. 'it' → logprob: -1.4366543292999268
    4. 'its' → logprob: -1.6866543292999268
    5. '\' → logprob: -7.311654090881348
    6. 'i' → logprob: -8.061654090881348
    7. '```' → logprob: -8.561654090881348
    8. '#' → logprob: -8.811654090881348
    9. '=' → logprob: -8.936654090881348
    10. '   ' → logprob: -9.061654090881348

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21432113647460938
    2. ' ,' → logprob: -2.5893211364746094
    3. '+' → logprob: -3.0893211364746094
    4. ' +' → logprob: -3.4643211364746094
    5. ')' → logprob: -3.5893211364746094
    6. '<|end|>' → logprob: -5.464321136474609
    7. ' )' → logprob: -5.589321136474609
    8. ' et' → logprob: -7.089321136474609
    9. ' and' → logprob: -7.339321136474609
    10. ' ' → logprob: -7.464321136474609

Token 154: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05842096358537674
    2. '(M' → logprob: -3.5584208965301514
    3. '(' → logprob: -4.3084211349487305
    4. ' M' → logprob: -5.0584211349487305
    5. '(N' → logprob: -5.3084211349487305
    6. 'M' → logprob: -6.8084211349487305
    7. ' ' → logprob: -6.8084211349487305
    8. ' '' → logprob: -8.68342113494873
    9. '(n' → logprob: -8.80842113494873
    10. '0' → logprob: -9.05842113494873

Token 155: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004006453324109316
    2. ' M' → logprob: -5.754006385803223
    3. 'K' → logprob: -7.754006385803223
    4. '(M' → logprob: -7.879006385803223
    5. ' (' → logprob: -12.129006385803223
    6. ' ' → logprob: -13.066506385803223
    7. ' K' → logprob: -13.441506385803223
    8. '(' → logprob: -13.504006385803223
    9. ')' → logprob: -13.566506385803223
    10. 'N' → logprob: -13.566506385803223

Token 156: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28132364153862
    2. '+' → logprob: -1.4063236713409424
    3. ')' → logprob: -9.031323432922363
    4. '+k' → logprob: -10.281323432922363
    5. '<|end|>' → logprob: -12.156323432922363
    6. ')+' → logprob: -12.406323432922363
    7. ' plus' → logprob: -12.656323432922363
    8. ' ' → logprob: -13.656323432922363
    9. ' K' → logprob: -13.906323432922363
    10. '+)' → logprob: -13.906323432922363

Token 157: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.14298290014266968
    2. ' K' → logprob: -2.0179829597473145
    3. ' ' → logprob: -9.142982482910156
    4. ')' → logprob: -9.267982482910156
    5. '<|end|>' → logprob: -9.767982482910156
    6. '+' → logprob: -10.892982482910156
    7. ' +' → logprob: -12.392982482910156
    8. ' ' → logprob: -12.642982482910156
    9. '```' → logprob: -12.830482482910156
    10. '<|end|>' → logprob: -12.830482482910156

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.040457421680912e-05
    2. ' )' → logprob: -10.250070571899414
    3. '),' → logprob: -11.000070571899414
    4. 'dro' → logprob: -12.250070571899414
    5. ')d' → logprob: -13.375070571899414
    6. '")' → logprob: -13.375070571899414
    7. 'd' → logprob: -13.875070571899414
    8. '')' → logprob: -14.125070571899414
    9. ')s' → logprob: -14.250070571899414
    10. ')p' → logprob: -14.250070571899414

Token 159: ' haut' (ID: 28223)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.6661662459373474
    2. ' hauts' → logprob: -1.6661663055419922
    3. 'haut' → logprob: -1.9161663055419922
    4. ' haut' → logprob: -2.416166305541992
    5. 'h' → logprob: -3.541166305541992
    6. 'bas' → logprob: -5.291166305541992
    7. ' ' → logprob: -5.541166305541992
    8. 'up' → logprob: -5.916166305541992
    9. ' ' → logprob: -6.041166305541992
    10. ',' → logprob: -6.041166305541992

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1757047474384308
    2. ')' → logprob: -2.5507047176361084
    3. 's' → logprob: -3.3007047176361084
    4. 'es' → logprob: -3.6757047176361084
    5. '),' → logprob: -3.9257047176361084
    6. 'ées' → logprob: -7.8007049560546875
    7. 'et' → logprob: -7.9257049560546875
    8. ')s' → logprob: -9.425704956054688
    9. '),(' → logprob: -9.800704956054688
    10. ' ,' → logprob: -10.050704956054688

Token 161: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4435739815235138
    2. 'K' → logprob: -1.6935739517211914
    3. '(' → logprob: -2.8185739517211914
    4. ' (' → logprob: -3.0685739517211914
    5. ',' → logprob: -3.4435739517211914
    6. ')' → logprob: -4.693573951721191
    7. ' gauche' → logprob: -4.818573951721191
    8. ' ' → logprob: -5.443573951721191
    9. '   ' → logprob: -6.193573951721191
    10. ' and' → logprob: -6.693573951721191

Token 162: ' gauche' (ID: 58367)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059527669101953506
    2. ' ,' → logprob: -3.934527635574341
    3. ')' → logprob: -4.05952787399292
    4. ' ' → logprob: -4.93452787399292
    5. ' et' → logprob: -5.05952787399292
    6. 's' → logprob: -5.93452787399292
    7. 'et' → logprob: -6.93452787399292
    8. ' and' → logprob: -6.93452787399292
    9. 'import' → logprob: -7.55952787399292
    10. ' )' → logprob: -7.80952787399292

Token 164: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5209992527961731
    2. ' et' → logprob: -1.8959991931915283
    3. 'et' → logprob: -2.1459991931915283
    4. 'K' → logprob: -2.2709991931915283
    5. ' and' → logprob: -4.020999431610107
    6. 'and' → logprob: -4.520999431610107
    7. ' ' → logprob: -5.645999431610107
    8. '#' → logprob: -6.895999431610107
    9. ' ' → logprob: -7.520999431610107
    10. ' (' → logprob: -7.895999431610107

Token 165: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.005407592281699181
    2. ' bas' → logprob: -5.255407810211182
    3. 'down' → logprob: -9.505407333374023
    4. 'b' → logprob: -9.755407333374023
    5. '_bas' → logprob: -11.380407333374023
    6. 'bottom' → logprob: -11.755407333374023
    7. ' ' → logprob: -12.005407333374023
    8. ' down' → logprob: -12.005407333374023
    9. ' ' → logprob: -12.505407333374023
    10. '```' → logprob: -14.130407333374023

Token 166: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0851049423217773
    2. 'def' → logprob: -1.7101049423217773
    3. ')' → logprob: -1.8351049423217773
    4. 'from' → logprob: -1.8351049423217773
    5. '#' → logprob: -2.9601049423217773
    6. ',' → logprob: -3.2101049423217773
    7. '
' → logprob: -3.3351049423217773
    8. '.' → logprob: -4.585104942321777
    9. '

' → logprob: -5.460104942321777
    10. '' → logprob: -6.335104942321777

Token 167: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3817176818847656
    2. 'import' → logprob: -1.3817176818847656
    3. 'def' → logprob: -3.3817176818847656
    4. 'fact' → logprob: -4.006717681884766
    5. '#' → logprob: -5.006717681884766
    6. ')' → logprob: -5.506717681884766
    7. 'factor' → logprob: -6.256717681884766
    8. ' from' → logprob: -8.256717681884766
    9. '(' → logprob: -8.631717681884766
    10. 'f' → logprob: -8.881717681884766

Token 168: ' Le' (ID: 2018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25460371375083923
    2. 'import' → logprob: -1.7546037435531616
    3. 'def' → logprob: -3.379603624343872
    4. 'fact' → logprob: -4.629603862762451
    5. '#' → logprob: -5.754603862762451
    6. 'factor' → logprob: -6.129603862762451
    7. ' from' → logprob: -7.254603862762451
    8. ' import' → logprob: -7.629603862762451
    9. '(' → logprob: -7.629603862762451
    10. ')' → logprob: -8.254603385925293

Token 169: ' nombre' (ID: 9733)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1841714084148407
    2. 'def' → logprob: -2.684171438217163
    3. 'import' → logprob: -3.434171438217163
    4. ' from' → logprob: -3.434171438217163
    5. ' math' → logprob: -4.559171199798584
    6. 'fact' → logprob: -4.809171199798584
    7. ' code' → logprob: -5.434171199798584
    8. 'math' → logprob: -5.934171199798584
    9. ' import' → logprob: -6.184171199798584
    10. '#' → logprob: -6.309171199798584

Token 170: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0186078548431396
    2. 'total' → logprob: -2.1436078548431396
    3. 'def' → logprob: -2.1436078548431396
    4. '_total' → logprob: -2.2686078548431396
    5. ' =' → logprob: -2.5186078548431396
    6. 'from' → logprob: -2.8936078548431396
    7. '=' → logprob: -3.0186078548431396
    8. ' total' → logprob: -3.5186078548431396
    9. 'de' → logprob: -3.7686078548431396
    10. 'import' → logprob: -4.018608093261719

Token 171: ' chemins' (ID: 192063)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.6359931230545044
    2. ' chemins' → logprob: -0.8859931230545044
    3. 'che' → logprob: -3.510993003845215
    4. 'fa' → logprob: -4.260993003845215
    5. 'man' → logprob: -5.010993003845215
    6. ' man' → logprob: -5.635993003845215
    7. 'comb' → logprob: -7.510993003845215
    8. ' chemin' → logprob: -7.635993003845215
    9. ' moyens' → logprob: -7.885993003845215
    10. 'ways' → logprob: -8.010993003845215

Token 172: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7664549350738525
    2. '=' → logprob: -0.8914549350738525
    3. 'total' → logprob: -2.3914549350738525
    4. ' total' → logprob: -4.891454696655273
    5. '#' → logprob: -5.391454696655273
    6. '_total' → logprob: -5.516454696655273
    7. 'tot' → logprob: -5.516454696655273
    8. 'possible' → logprob: -5.766454696655273
    9. 'mod' → logprob: -6.516454696655273
    10. 'est' → logprob: -6.766454696655273

Token 173: ' le' (ID: 505)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.44921907782554626
    2. '(' → logprob: -2.574218988418579
    3. ' (' → logprob: -2.824218988418579
    4. 'comb' → logprob: -2.824218988418579
    5. '0' → logprob: -3.574218988418579
    6. 'def' → logprob: -3.699218988418579
    7. 'import' → logprob: -3.949218988418579
    8. ' ' → logprob: -4.449219226837158
    9. '(com' → logprob: -4.574219226837158
    10. 'pow' → logprob: -4.699219226837158

Token 174: ' nombre' (ID: 9733)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.7949331402778625
    2. 'nombre' → logprob: -1.7949330806732178
    3. 'comb' → logprob: -2.1699330806732178
    4. ' nombre' → logprob: -2.5449330806732178
    5. ' comb' → logprob: -3.0449330806732178
    6. 'coef' → logprob: -3.2949330806732178
    7. 'coeff' → logprob: -4.044933319091797
    8. 'com' → logprob: -4.044933319091797
    9. 'co' → logprob: -4.544933319091797
    10. ' coefficient' → logprob: -5.044933319091797

Token 175: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3522918224334717
    2. '(' → logprob: -1.7272918224334717
    3. 'de' → logprob: -1.7272918224334717
    4. '<|end|>' → logprob: -2.3522918224334717
    5. '[' → logprob: -2.6022918224334717
    6. '=' → logprob: -3.7272918224334717
    7. 'des' → logprob: -3.8522918224334717
    8. 'def' → logprob: -3.9772918224334717
    9. '"' → logprob: -3.9772918224334717
    10. ')' → logprob: -4.227292060852051

Token 176: ' permutations' (ID: 174595)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.7964288592338562
    2. 'man' → logprob: -1.296428918838501
    3. 'fa' → logprob: -2.421428918838501
    4. 'm' → logprob: -2.796428918838501
    5. 'comb' → logprob: -2.921428918838501
    6. ' façons' → logprob: -3.796428918838501
    7. 'mot' → logprob: -4.046428680419922
    8. 'com' → logprob: -4.171428680419922
    9. 'mé' → logprob: -5.296428680419922
    10. 'multi' → logprob: -5.796428680419922

Token 177: ' d' (ID: 272)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ''un' (ID: 9788)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.6145278215408325
    2. '(N' → logprob: -1.3645278215408325
    3. 'N' → logprob: -2.614527702331543
    4. '['' → logprob: -2.989527702331543
    5. ' N' → logprob: -3.364527702331543
    6. ' la' → logprob: -4.239527702331543
    7. ' (' → logprob: -5.239527702331543
    8. ' ' → logprob: -5.864527702331543
    9. ' ['' → logprob: -5.864527702331543
    10. '["' → logprob: -5.864527702331543

Token 179: ' mot' (ID: 3598)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mult' → logprob: -1.4029217958450317
    2. '(N' → logprob: -1.9029217958450317
    3. '[N' → logprob: -1.9029217958450317
    4. '['' → logprob: -2.027921676635742
    5. '["' → logprob: -2.527921676635742
    6. '[(' → logprob: -2.777921676635742
    7. ' (' → logprob: -3.402921676635742
    8. 'list' → logprob: -3.902921676635742
    9. 'total' → logprob: -4.277921676635742
    10. 's' → logprob: -4.652921676635742

Token 180: ' avec' (ID: 3937)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' ces' (ID: 10532)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.37807705998420715
    2. 'N' → logprob: -1.7530770301818848
    3. '4' → logprob: -2.5030770301818848
    4. ' ' → logprob: -3.7530770301818848
    5. ' (' → logprob: -3.8780770301818848
    6. ' N' → logprob: -4.503077030181885
    7. '(n' → logprob: -6.753077030181885
    8. '[N' → logprob: -7.503077030181885
    9. '(len' → logprob: -7.878077030181885
    10. ''N' → logprob: -8.128077507019043

Token 182: ' lettres' (ID: 101234)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.7124650478363037
    2. 'car' → logprob: -1.7124650478363037
    3. ' lettres' → logprob: -1.8374650478363037
    4. '4' → logprob: -2.7124650478363037
    5. 'multip' → logprob: -3.4624650478363037
    6. ' caractères' → logprob: -3.4624650478363037
    7. 'N' → logprob: -4.212465286254883
    8. 'types' → logprob: -5.587465286254883
    9. '(N' → logprob: -5.587465286254883
    10. 'letters' → logprob: -5.712465286254883

Token 183: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20788826048374176
    2. '#' → logprob: -2.33288836479187
    3. ',' → logprob: -3.45788836479187
    4. 'import' → logprob: -3.83288836479187
    5. 's' → logprob: -4.457888126373291
    6. ' from' → logprob: -4.957888126373291
    7. '.' → logprob: -5.457888126373291
    8. 'def' → logprob: -6.082888126373291
    9. 'tokens' → logprob: -6.207888126373291
    10. ' (' → logprob: -6.582888126373291

Token 184: '#' (ID: 2)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' D' (ID: 415)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.010340757668018341
    2. ' from' → logprob: -5.885340690612793
    3. '#' → logprob: -6.260340690612793
    4. 'import' → logprob: -6.510340690612793
    5. 'total' → logprob: -6.635340690612793
    6. '(N' → logprob: -7.510340690612793
    7. 'R' → logprob: -7.635340690612793
    8. '(n' → logprob: -8.135340690612793
    9. 'N' → logprob: -8.635340690612793
    10. 'def' → logprob: -8.885340690612793

Token 186: ' (' (ID: 350)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3012033998966217
    2. ',' → logprob: -2.176203489303589
    3. '^{' → logprob: -3.176203489303589
    4. '"' → logprob: -3.801203489303589
    5. '^(' → logprob: -4.17620325088501
    6. '^' → logprob: -4.92620325088501
    7. 'r' → logprob: -5.05120325088501
    8. ' =' → logprob: -5.17620325088501
    9. '=' → logprob: -5.55120325088501
    10. '(' → logprob: -5.55120325088501

Token 187: 'dro' (ID: 100256)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.32166045904159546
    2. 'ites' → logprob: -1.3216605186462402
    3. 'ight' → logprob: -5.69666051864624
    4. ')' → logprob: -5.82166051864624
    5. 'right' → logprob: -7.19666051864624
    6. 'i' → logprob: -7.94666051864624
    7. 'it' → logprob: -8.446660041809082
    8. 'r' → logprob: -9.321660041809082
    9. 'ate' → logprob: -9.321660041809082
    10. 'ights' → logprob: -9.321660041809082

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5951825976371765
    2. ',' → logprob: -0.9701825976371765
    3. '),' → logprob: -2.8451826572418213
    4. ' )' → logprob: -6.220182418823242
    5. '')' → logprob: -6.220182418823242
    6. ' ,' → logprob: -6.595182418823242
    7. '")' → logprob: -7.095182418823242
    8. ' ),' → logprob: -7.345182418823242
    9. ''),' → logprob: -7.470182418823242
    10. ')^' → logprob: -7.595182418823242

Token 190: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08418195694684982
    2. ' =' → logprob: -2.834182024002075
    3. '=' → logprob: -4.209181785583496
    4. ')' → logprob: -6.834181785583496
    5. ' ,' → logprob: -7.209181785583496
    6. '),' → logprob: -7.584181785583496
    7. ':' → logprob: -7.834181785583496
    8. ' (' → logprob: -7.959181785583496
    9. 'from' → logprob: -7.959181785583496
    10. 'R' → logprob: -7.959181785583496

Token 191: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04245515540242195
    2. ' (' → logprob: -3.2924551963806152
    3. 'N' → logprob: -6.042455196380615
    4. '(' → logprob: -7.167455196380615
    5. '[N' → logprob: -7.417455196380615
    6. ' N' → logprob: -8.917454719543457
    7. '{' → logprob: -8.917454719543457
    8. '<|end|>' → logprob: -9.292454719543457
    9. '"""' → logprob: -9.667454719543457
    10. '(n' → logprob: -9.792454719543457

Token 192: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0097154900431633
    2. '(N' → logprob: -4.759715557098389
    3. '{' → logprob: -7.134715557098389
    4. ' N' → logprob: -8.38471508026123
    5. ' (' → logprob: -10.13471508026123
    6. ')' → logprob: -11.63471508026123
    7. '{}' → logprob: -11.75971508026123
    8. '(' → logprob: -12.13471508026123
    9. '((' → logprob: -12.75971508026123
    10. '```' → logprob: -13.63471508026123

Token 193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759444236755371
    2. ' +' → logprob: -0.8259444236755371
    3. ')' → logprob: -13.825944900512695
    4. '+)' → logprob: -13.950944900512695
    5. '+k' → logprob: -14.200944900512695
    6. ' ' → logprob: -14.325944900512695
    7. ' ' → logprob: -14.575944900512695
    8. ')+' → logprob: -15.450944900512695
    9. '+C' → logprob: -15.825944900512695
    10. ' +
' → logprob: -15.825944900512695

Token 194: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009527753107249737
    2. ' K' → logprob: -4.759527683258057
    3. '1' → logprob: -7.134527683258057
    4. ' ' → logprob: -9.259528160095215
    5. '+' → logprob: -11.634528160095215
    6. ')' → logprob: -11.634528160095215
    7. '  ' → logprob: -14.759528160095215
    8. '	K' → logprob: -14.884528160095215
    9. '   ' → logprob: -15.009528160095215
    10. '>K' → logprob: -15.509528160095215

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0850314274430275
    2. '+' → logprob: -2.585031509399414
    3. '),' → logprob: -5.210031509399414
    4. '+)' → logprob: -8.460031509399414
    5. ')+' → logprob: -8.710031509399414
    6. ' +' → logprob: -9.210031509399414
    7. ' )' → logprob: -10.085031509399414
    8. ')+(' → logprob: -10.085031509399414
    9. ')
' → logprob: -10.335031509399414
    10. ',' → logprob: -11.085031509399414

Token 196: '#' (ID: 2)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.9689879417419434
    2. ',' → logprob: -1.0939879417419434
    3. 'L' → logprob: -2.0939879417419434
    4. ')' → logprob: -3.3439879417419434
    5. 'D' → logprob: -4.093987941741943
    6. 'M' → logprob: -4.343987941741943
    7. 'C' → logprob: -4.343987941741943
    8. 'R' → logprob: -4.468987941741943
    9. ' ' → logprob: -4.718987941741943
    10. '(' → logprob: -4.843987941741943

Token 197: ' U' (ID: 601)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' (' (ID: 350)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: 'haut' (ID: 134423)
  Prédit: 'haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.005793932359665632
    2. 'ha' → logprob: -5.505794048309326
    3. 'bas' → logprob: -7.255794048309326
    4. 'hau' → logprob: -7.880794048309326
    5. 'H' → logprob: -8.380793571472168
    6. 'dro' → logprob: -8.880793571472168
    7. 'up' → logprob: -9.505793571472168
    8. ')' → logprob: -10.130793571472168
    9. 'g' → logprob: -10.130793571472168
    10. ' haut' → logprob: -10.630793571472168

Token 200: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0054572708904743195
    2. 'x' → logprob: -5.505457401275635
    3. ')' → logprob: -7.255457401275635
    4. ' ' → logprob: -8.255456924438477
    5. ' (' → logprob: -9.380456924438477
    6. '<|end|>' → logprob: -9.380456924438477
    7. ',' → logprob: -9.880456924438477
    8. ' ' → logprob: -10.505456924438477
    9. ' ×' → logprob: -10.880456924438477
    10. '#' → logprob: -11.005456924438477

Token 202: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5053452253341675
    2. ' (' → logprob: -1.0053452253341675
    3. ' M' → logprob: -4.005345344543457
    4. 'M' → logprob: -4.380345344543457
    5. ' ' → logprob: -10.630345344543457
    6. '(' → logprob: -11.255345344543457
    7. ' ' → logprob: -13.130345344543457
    8. '\(' → logprob: -13.880345344543457
    9. ' \(' → logprob: -14.255345344543457
    10. ')' → logprob: -14.255345344543457

Token 203: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.003041885793209076
    2. '(M' → logprob: -5.878041744232178
    3. ' M' → logprob: -8.378042221069336
    4. '(' → logprob: -12.753042221069336
    5. '1' → logprob: -13.753042221069336
    6. ' (' → logprob: -14.003042221069336
    7. ''M' → logprob: -14.753042221069336
    8. '"M' → logprob: -15.003042221069336
    9. ' ' → logprob: -15.128042221069336
    10. ')' → logprob: -15.128042221069336

Token 204: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1888679839321412e-05
    2. ' +' → logprob: -10.750021934509277
    3. '+k' → logprob: -15.875021934509277
    4. ')' → logprob: -16.00002098083496
    5. ')+' → logprob: -16.25002098083496
    6. '+B' → logprob: -17.25002098083496
    7. '+
' → logprob: -18.00002098083496
    8. '+)' → logprob: -18.25002098083496
    9. '+C' → logprob: -18.25002098083496
    10. '＋' → logprob: -18.50002098083496

Token 205: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -8.923874702304602e-05
    2. ' K' → logprob: -9.375089645385742
    3. '1' → logprob: -13.250089645385742
    4. 'M' → logprob: -13.500089645385742
    5. ' ' → logprob: -14.000089645385742
    6. ')' → logprob: -14.875089645385742
    7. '(' → logprob: -17.500089645385742
    8. '
' → logprob: -17.625089645385742
    9. '>K' → logprob: -18.125089645385742
    10. '0' → logprob: -18.500089645385742

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009135056287050247
    2. ')
' → logprob: -4.8841352462768555
    3. '+' → logprob: -6.5091352462768555
    4. '+)' → logprob: -11.884135246276855
    5. ')
' → logprob: -12.009135246276855
    6. ')

' → logprob: -12.134135246276855
    7. '```' → logprob: -12.759135246276855
    8. '#' → logprob: -12.884135246276855
    9. ' )' → logprob: -13.009135246276855
    10. '')' → logprob: -13.134135246276855

Token 207: '#' (ID: 2)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10923293977975845
    2. '#' → logprob: -2.3592329025268555
    3. 'D' → logprob: -5.1092329025268555
    4. ' L' → logprob: -6.1092329025268555
    5. 'G' → logprob: -8.859232902526855
    6. ' ' → logprob: -8.859232902526855
    7. 'V' → logprob: -9.109232902526855
    8. ''L' → logprob: -9.859232902526855
    9. 'F' → logprob: -10.359232902526855
    10. '\' → logprob: -10.734232902526855

Token 208: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03050893358886242
    2. 'D' → logprob: -3.5305089950561523
    3. ' L' → logprob: -7.780508995056152
    4. 'G' → logprob: -8.405508995056152
    5. ''L' → logprob: -10.030508995056152
    6. ' ' → logprob: -11.030508995056152
    7. 'R' → logprob: -11.155508995056152
    8. ' D' → logprob: -11.530508995056152
    9. ''D' → logprob: -12.030508995056152
    10. ''' → logprob: -12.780508995056152

Token 209: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11827508360147476
    2. ' (' → logprob: -2.3682751655578613
    3. 'x' → logprob: -4.368275165557861
    4. ' ' → logprob: -6.118275165557861
    5. '(' → logprob: -6.618275165557861
    6. ''' → logprob: -6.993275165557861
    7. '<|end|>' → logprob: -8.493274688720703
    8. ' ' → logprob: -8.993274688720703
    9. '(x' → logprob: -9.243274688720703
    10. ')' → logprob: -9.368274688720703

Token 210: 'g' (ID: 70)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.15275536477565765
    2. 'g' → logprob: -2.0277552604675293
    3. 'G' → logprob: -6.152755260467529
    4. '(' → logprob: -6.152755260467529
    5. ' gauche' → logprob: -6.402755260467529
    6. '(g' → logprob: -6.527755260467529
    7. ')' → logprob: -6.652755260467529
    8. ' (' → logprob: -7.277755260467529
    9. 'gau' → logprob: -8.902755737304688
    10. '(K' → logprob: -9.027755737304688

Token 211: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.007343826815485954
    2. ')' → logprob: -5.132343769073486
    3. 'a' → logprob: -7.257343769073486
    4. 'au' → logprob: -7.632343769073486
    5. 'auch' → logprob: -8.632344245910645
    6. '}' → logprob: -12.257344245910645
    7. 'aule' → logprob: -12.257344245910645
    8. ')(' → logprob: -12.382344245910645
    9. 'u' → logprob: -12.382344245910645
    10. '(' → logprob: -12.507344245910645

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ' )' → logprob: -12.750007629394531
    3. '')' → logprob: -13.250007629394531
    4. ')x' → logprob: -13.375007629394531
    5. '")' → logprob: -14.500007629394531
    6. 'x' → logprob: -14.750007629394531
    7. ' x' → logprob: -15.250007629394531
    8. '#' → logprob: -15.875007629394531
    9. '`)' → logprob: -16.00000762939453
    10. '```' → logprob: -16.50000762939453

Token 213: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0630154237151146
    2. 'x' → logprob: -2.8130154609680176
    3. ' ' → logprob: -7.813015460968018
    4. ')' → logprob: -8.06301498413086
    5. ' K' → logprob: -9.06301498413086
    6. '<|end|>' → logprob: -9.56301498413086
    7. '*' → logprob: -10.43801498413086
    8. 'K' → logprob: -11.06301498413086
    9. ' ' → logprob: -11.18801498413086
    10. '
' → logprob: -11.43801498413086

Token 214: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11376388370990753
    2. ' K' → logprob: -2.3637638092041016
    3. ' (' → logprob: -4.988763809204102
    4. '(K' → logprob: -5.363763809204102
    5. '(' → logprob: -6.238763809204102
    6. ' ' → logprob: -11.488763809204102
    7. ' ' → logprob: -13.363763809204102
    8. ')' → logprob: -14.113763809204102
    9. '(int' → logprob: -14.863763809204102
    10. '(
' → logprob: -15.113763809204102

Token 215: '
' (ID: 198)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.11499534547328949
    2. 'D' → logprob: -2.489995241165161
    3. '#' → logprob: -4.48999547958374
    4. '
' → logprob: -5.36499547958374
    5. 'B' → logprob: -6.11499547958374
    6. 'V' → logprob: -6.23999547958374
    7. 'S' → logprob: -6.73999547958374
    8. ' R' → logprob: -7.36499547958374
    9. 'import' → logprob: -7.86499547958374
    10. '   ' → logprob: -7.86499547958374

Token 216: '#' (ID: 2)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' B' (ID: 418)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.632697582244873
    2. 'D' → logprob: -0.757697582244873
    3. '#' → logprob: -10.382698059082031
    4. ' R' → logprob: -10.507698059082031
    5. ' D' → logprob: -11.382698059082031
    6. 'B' → logprob: -11.882698059082031
    7. '```' → logprob: -12.257698059082031
    8. 'import' → logprob: -13.382698059082031
    9. 'U' → logprob: -13.507698059082031
    10. '
' → logprob: -13.757698059082031

Token 218: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03914223611354828
    2. ' x' → logprob: -3.78914213180542
    3. ' ' → logprob: -4.66414213180542
    4. '(' → logprob: -5.41414213180542
    5. 'x' → logprob: -7.16414213180542
    6. ' ' → logprob: -7.28914213180542
    7. '(B' → logprob: -9.164142608642578
    8. '(x' → logprob: -9.289142608642578
    9. '(space' → logprob: -9.539142608642578
    10. '  ' → logprob: -10.414142608642578

Token 219: 'bas' (ID: 15207)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0007247024914249778
    2. ')' → logprob: -7.750724792480469
    3. ' K' → logprob: -8.375724792480469
    4. 'bas' → logprob: -10.875724792480469
    5. 'B' → logprob: -11.250724792480469
    6. '(' → logprob: -11.750724792480469
    7. 'b' → logprob: -12.375724792480469
    8. ' (' → logprob: -12.500724792480469
    9. 'x' → logprob: -13.125724792480469
    10. ' ' → logprob: -13.500724792480469

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.992775888647884e-05
    2. ')x' → logprob: -10.125069618225098
    3. 'x' → logprob: -11.875069618225098
    4. ' )' → logprob: -12.000069618225098
    5. ')
' → logprob: -12.125069618225098
    6. '')' → logprob: -13.125069618225098
    7. '#' → logprob: -13.750069618225098
    8. '")' → logprob: -13.875069618225098
    9. 'K' → logprob: -13.875069618225098
    10. ' x' → logprob: -14.250069618225098

Token 221: ' x' (ID: 1215)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06588911265134811
    2. 'import' → logprob: -3.0658891201019287
    3. 'total' → logprob: -5.44088888168335
    4. 'tokens' → logprob: -5.56588888168335
    5. ')' → logprob: -6.31588888168335
    6. '#' → logprob: -6.31588888168335
    7. 'fact' → logprob: -6.31588888168335
    8. ' from' → logprob: -6.94088888168335
    9. '
' → logprob: -7.56588888168335
    10. 'factor' → logprob: -7.94088888168335

Token 222: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01816340535879135
    2. ' K' → logprob: -4.018163204193115
    3. '(' → logprob: -12.268163681030273
    4. ')' → logprob: -13.393163681030273
    5. ' (' → logprob: -13.768163681030273
    6. '`' → logprob: -13.768163681030273
    7. ''' → logprob: -14.018163681030273
    8. ' ' → logprob: -14.018163681030273
    9. ' ' → logprob: -14.268163681030273
    10. '```' → logprob: -14.768163681030273

Token 223: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.047430600970983505
    2. 'import' → logprob: -4.047430515289307
    3. 'fact' → logprob: -4.047430515289307
    4. ')' → logprob: -5.672430515289307
    5. 'total' → logprob: -6.047430515289307
    6. ' from' → logprob: -6.422430515289307
    7. 'factor' → logprob: -6.547430515289307
    8. '#' → logprob: -7.422430515289307
    9. 'def' → logprob: -7.422430515289307
    10. 'tokens' → logprob: -8.547430992126465

Token 224: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.030334435403347015
    2. 'import' → logprob: -4.28033447265625
    3. 'fact' → logprob: -4.40533447265625
    4. 'def' → logprob: -6.53033447265625
    5. 'factor' → logprob: -7.03033447265625
    6. 'total' → logprob: -7.28033447265625
    7. '#' → logprob: -7.90533447265625
    8. '
' → logprob: -9.28033447265625
    9. ')' → logprob: -9.53033447265625
    10. ' from' → logprob: -9.90533447265625

Token 225: ' Le' (ID: 2018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.013048108667135239
    2. 'import' → logprob: -4.63804817199707
    3. 'fact' → logprob: -5.88804817199707
    4. 'def' → logprob: -7.88804817199707
    5. 'factor' → logprob: -9.26304817199707
    6. '#' → logprob: -10.63804817199707
    7. ' from' → logprob: -11.88804817199707
    8. 'fac' → logprob: -12.88804817199707
    9. 'max' → logprob: -12.88804817199707
    10. 'class' → logprob: -13.01304817199707

Token 226: ' nombre' (ID: 9733)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32127588987350464
    2. 'import' → logprob: -1.5712759494781494
    3. 'fact' → logprob: -3.5712759494781494
    4. ' from' → logprob: -4.44627571105957
    5. 'def' → logprob: -4.44627571105957
    6. ' import' → logprob: -5.44627571105957
    7. 'factor' → logprob: -5.44627571105957
    8. 'total' → logprob: -6.44627571105957
    9. ' code' → logprob: -6.57127571105957
    10. ' total' → logprob: -7.19627571105957

Token 227: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028160374611616135
    2. '_total' → logprob: -4.653160572052002
    3. '=' → logprob: -5.028160572052002
    4. ' =' → logprob: -6.028160572052002
    5. ' de' → logprob: -6.528160572052002
    6. '_de' → logprob: -6.653160572052002
    7. '_tokens' → logprob: -7.028160572052002
    8. '_token' → logprob: -7.028160572052002
    9. 'def' → logprob: -7.278160572052002
    10. 'import' → logprob: -7.403160572052002

Token 228: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.3690735101699829
    2. '_total' → logprob: -2.2440733909606934
    3. '_' → logprob: -2.4940733909606934
    4. '_pas' → logprob: -3.2440733909606934
    5. '_che' → logprob: -3.2440733909606934
    6. '_le' → logprob: -4.244073390960693
    7. '_des' → logprob: -4.619073390960693
    8. '_fact' → logprob: -5.869073390960693
    9. ' de' → logprob: -5.869073390960693
    10. ' =' → logprob: -5.869073390960693

Token 229: ' pas' (ID: 2173)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7396773099899292
    2. 'pas' → logprob: -0.7396773099899292
    3. 'che' → logprob: -3.7396774291992188
    4. ' façons' → logprob: -5.489677429199219
    5. ' chemins' → logprob: -5.739677429199219
    6. 'lett' → logprob: -5.864677429199219
    7. ' pas' → logprob: -6.239677429199219
    8. 'mot' → logprob: -6.364677429199219
    9. 'man' → logprob: -6.364677429199219
    10. 'fa' → logprob: -6.614677429199219

Token 230: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29190289974212646
    2. '=' → logprob: -1.4169028997421265
    3. '_total' → logprob: -5.416903018951416
    4. 'total' → logprob: -6.041903018951416
    5. '_' → logprob: -6.166903018951416
    6. 'est' → logprob: -7.541903018951416
    7. ' est' → logprob: -7.791903018951416
    8. ',' → logprob: -8.541902542114258
    9. ' total' → logprob: -8.541902542114258
    10. 's' → logprob: -9.041902542114258

Token 231: ' T' (ID: 353)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007860950194299221
    2. ' N' → logprob: -4.882861137390137
    3. '(N' → logprob: -8.507861137390137
    4. ' (' → logprob: -10.507861137390137
    5. '(' → logprob: -11.382861137390137
    6. ' ' → logprob: -11.632861137390137
    7. '`' → logprob: -13.257861137390137
    8. '   ' → logprob: -14.132861137390137
    9. ' ' → logprob: -14.507861137390137
    10. 'n' → logprob: -14.757861137390137

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861370474100113
    2. '=' → logprob: -3.0486137866973877
    3. '_' → logprob: -12.048613548278809
    4. ' ' → logprob: -12.298613548278809
    5. '=N' → logprob: -12.798613548278809
    6. ')' → logprob: -13.048613548278809
    7. '_total' → logprob: -13.173613548278809
    8. 's' → logprob: -13.298613548278809
    9. ' ' → logprob: -13.423613548278809
    10. ',' → logprob: -13.548613548278809

Token 233: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.652451464906335e-05
    2. ' N' → logprob: -11.250016212463379
    3. '(N' → logprob: -12.625016212463379
    4. ' ' → logprob: -17.000017166137695
    5. '(' → logprob: -17.250017166137695
    6. '	N' → logprob: -17.875017166137695
    7. '`' → logprob: -18.250017166137695
    8. 'T' → logprob: -18.375017166137695
    9. '```' → logprob: -18.500017166137695
    10. '   ' → logprob: -18.625017166137695

Token 234: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28115466237068176
    2. '+' → logprob: -1.4061546325683594
    3. ' ' → logprob: -13.40615463256836
    4. ' ' → logprob: -13.78115463256836
    5. '<|end|>' → logprob: -14.78115463256836
    6. ' plus' → logprob: -15.40615463256836
    7. ' +
' → logprob: -15.40615463256836
    8. '+B' → logprob: -15.78115463256836
    9. ')' → logprob: -15.90615463256836
    10. '＋' → logprob: -16.46865463256836

Token 235: ' M' (ID: 391)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10025616735219955
    2. '+' → logprob: -2.3502562046051025
    3. ' ' → logprob: -10.100255966186523
    4. '4' → logprob: -12.350255966186523
    5. ' ' → logprob: -13.850255966186523
    6. ' +
' → logprob: -14.225255966186523
    7. ')' → logprob: -14.975255966186523
    8. '  ' → logprob: -15.100255966186523
    9. ' plus' → logprob: -15.475255966186523
    10. '`' → logprob: -15.475255966186523

Token 237: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -17.000261306762695
    4. '   ' → logprob: -17.750261306762695
    5. '(' → logprob: -18.000261306762695
    6. '`' → logprob: -18.625261306762695
    7. '' → logprob: -18.750261306762695
    8. '  ' → logprob: -19.000261306762695
    9. '
' → logprob: -19.000261306762695
    10. ''' → logprob: -19.500261306762695

Token 238: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '(' → logprob: -17.875009536743164
    4. '```' → logprob: -18.125009536743164
    5. '   ' → logprob: -19.125009536743164
    6. '`' → logprob: -19.625009536743164
    7. ''' → logprob: -19.875009536743164
    8. '' → logprob: -20.000009536743164
    9. '
' → logprob: -20.250009536743164
    10. '  ' → logprob: -20.625009536743164

Token 239: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02403426542878151
    2. '*K' → logprob: -3.774034261703491
    3. '*' → logprob: -7.27403450012207
    4. ' *' → logprob: -9.52403450012207
    5. ' K' → logprob: -10.77403450012207
    6. '**' → logprob: -15.02403450012207
    7. '```' → logprob: -15.14903450012207
    8. '   ' → logprob: -16.02403450012207
    9. ')' → logprob: -16.64903450012207
    10. ' ' → logprob: -16.77403450012207

Token 240: '

' (ID: 279)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.22429513931274414
    2. 'fact' → logprob: -1.9742951393127441
    3. '_T' → logprob: -4.599295139312744
    4. 'factor' → logprob: -4.599295139312744
    5. '!' → logprob: -4.849295139312744
    6. 'total' → logprob: -5.224295139312744
    7. '_factor' → logprob: -5.349295139312744
    8. '
' → logprob: -5.599295139312744
    9. 'from' → logprob: -5.974295139312744
    10. 'import' → logprob: -6.099295139312744

Token 241: '#' (ID: 2)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.02846941351890564
    2. 'fact' → logprob: -4.153469562530518
    3. 'from' → logprob: -4.528469562530518
    4. 'import' → logprob: -7.528469562530518
    5. 'factor' → logprob: -7.653469562530518
    6. 'def' → logprob: -8.65346908569336
    7. '```' → logprob: -9.15346908569336
    8. '#' → logprob: -9.77846908569336
    9. 'total' → logprob: -10.40346908569336
    10. 'F' → logprob: -10.65346908569336

Token 242: ' Le' (ID: 2018)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.18134725093841553
    2. 'from' → logprob: -1.9313472509384155
    3. 'import' → logprob: -4.306347370147705
    4. 'factor' → logprob: -5.681347370147705
    5. 'def' → logprob: -6.306347370147705
    6. 'fac' → logprob: -6.931347370147705
    7. 'T' → logprob: -7.056347370147705
    8. '#' → logprob: -8.681346893310547
    9. 'facts' → logprob: -9.806346893310547
    10. 'max' → logprob: -10.806346893310547

Token 243: ' nombre' (ID: 9733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8573644757270813
    2. 'from' → logprob: -1.3573644161224365
    3. 'T' → logprob: -2.1073644161224365
    4. 'fact' → logprob: -2.4823644161224365
    5. ' code' → logprob: -3.7323644161224365
    6. 'factor' → logprob: -3.9823644161224365
    7. 'import' → logprob: -4.232364654541016
    8. '#' → logprob: -4.607364654541016
    9. ' T' → logprob: -4.857364654541016
    10. 't' → logprob: -4.857364654541016

Token 244: ' de' (ID: 334)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.9743095636367798
    2. '_' → logprob: -1.2243095636367798
    3. ' de' → logprob: -2.2243094444274902
    4. '_de' → logprob: -2.3493094444274902
    5. 'de' → logprob: -3.2243094444274902
    6. '_fact' → logprob: -3.9743094444274902
    7. '_factor' → logprob: -4.09930944442749
    8. '_des' → logprob: -4.34930944442749
    9. 'total' → logprob: -4.97430944442749
    10. '_tokens' → logprob: -5.47430944442749

Token 245: ' chemins' (ID: 192063)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.80226069688797
    2. 'man' → logprob: -1.3022606372833252
    3. 'che' → logprob: -2.177260637283325
    4. ' façons' → logprob: -2.677260637283325
    5. 'm' → logprob: -2.927260637283325
    6. 'comb' → logprob: -4.052260875701904
    7. 'ways' → logprob: -5.177260875701904
    8. 'com' → logprob: -5.552260875701904
    9. 'f' → logprob: -5.677260875701904
    10. 'pas' → logprob: -5.927260875701904

Token 246: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0746828019618988
    2. ' =' → logprob: -2.8246827125549316
    3. '_total' → logprob: -4.699682712554932
    4. 'total' → logprob: -6.324682712554932
    5. 'est' → logprob: -7.699682712554932
    6. '_' → logprob: -8.57468318939209
    7. '_factor' → logprob: -8.69968318939209
    8. '_=' → logprob: -8.69968318939209
    9. '_t' → logprob: -9.07468318939209
    10. 'def' → logprob: -9.07468318939209

Token 247: ' donc' (ID: 14206)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5857715606689453
    2. 'pow' → logprob: -1.4607715606689453
    3. 'fact' → logprob: -1.8357715606689453
    4. 'math' → logprob: -4.210771560668945
    5. 'factor' → logprob: -4.335771560668945
    6. '(' → logprob: -4.335771560668945
    7. 'import' → logprob: -5.710771560668945
    8. ' ' → logprob: -5.960771560668945
    9. '0' → logprob: -7.085771560668945
    10. '(pow' → logprob: -7.210771560668945

Token 248: ':
' (ID: 734)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08046746253967285
    2. 'pow' → logprob: -3.330467462539673
    3. 'fact' → logprob: -3.580467462539673
    4. ' ' → logprob: -4.830467224121094
    5. 'factor' → logprob: -6.080467224121094
    6. '(' → logprob: -6.330467224121094
    7. 'import' → logprob: -7.580467224121094
    8. ' factorial' → logprob: -8.330467224121094
    9. 'math' → logprob: -8.580467224121094
    10. '
' → logprob: -8.705467224121094

Token 249: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5354986190795898
    2. 'fact' → logprob: -2.03549861907959
    3. 'import' → logprob: -2.16049861907959
    4. 'def' → logprob: -3.28549861907959
    5. 'T' → logprob: -3.53549861907959
    6. 'pow' → logprob: -3.66049861907959
    7. '(' → logprob: -3.91049861907959
    8. ' (' → logprob: -4.41049861907959
    9. 'factor' → logprob: -4.53549861907959
    10. ' factorial' → logprob: -4.66049861907959

Token 250: ' C' (ID: 363)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12609490752220154
    2. 'def' → logprob: -2.7510948181152344
    3. 'import' → logprob: -3.5010948181152344
    4. 'fact' → logprob: -4.126094818115234
    5. 'pow' → logprob: -5.876094818115234
    6. ' from' → logprob: -6.126094818115234
    7. 'T' → logprob: -6.626094818115234
    8. 'factor' → logprob: -7.126094818115234
    9. '"' → logprob: -8.626094818115234
    10. '```' → logprob: -8.876094818115234

Token 251: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.11701814830303192
    2. '(' → logprob: -2.742018222808838
    3. 'T' → logprob: -3.492018222808838
    4. '(N' → logprob: -4.742018222808838
    5. '(
' → logprob: -5.492018222808838
    6. '[T' → logprob: -7.117018222808838
    7. '((' → logprob: -7.367018222808838
    8. 'om' → logprob: -8.36701774597168
    9. ' (' → logprob: -8.49201774597168
    10. '_T' → logprob: -8.61701774597168

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00896635465323925
    2. ',T' → logprob: -5.008966445922852
    3. ',N' → logprob: -7.133966445922852
    4. ' ,' → logprob: -7.133966445922852
    5. ')' → logprob: -8.133966445922852
    6. '!' → logprob: -9.133966445922852
    7. 'T' → logprob: -9.883966445922852
    8. ',
' → logprob: -10.258966445922852
    9. ')!' → logprob: -10.258966445922852
    10. ',K' → logprob: -10.758966445922852

Token 253: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005676874425262213
    2. '(N' → logprob: -8.000567436218262
    3. ' N' → logprob: -8.500567436218262
    4. ')' → logprob: -10.625567436218262
    5. ' (' → logprob: -13.125567436218262
    6. 'K' → logprob: -14.375567436218262
    7. '	N' → logprob: -14.500567436218262
    8. 'T' → logprob: -14.875567436218262
    9. '   ' → logprob: -15.250567436218262
    10. '[N' → logprob: -15.375567436218262

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006763802841305733
    2. ' +' → logprob: -5.006763935089111
    3. ')' → logprob: -10.006763458251953
    4. ',' → logprob: -13.506763458251953
    5. '+k' → logprob: -14.256763458251953
    6. '+C' → logprob: -15.006763458251953
    7. ')+' → logprob: -15.256763458251953
    8. ' ' → logprob: -16.506763458251953
    9. 'K' → logprob: -16.506763458251953
    10. '),' → logprob: -16.756763458251953

Token 255: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.981667537620524e-06
    2. ' K' → logprob: -13.250001907348633
    3. ')' → logprob: -16.250001907348633
    4. '	K' → logprob: -17.625001907348633
    5. '```' → logprob: -18.250001907348633
    6. '>K' → logprob: -18.750001907348633
    7. '(K' → logprob: -19.875001907348633
    8. '<K' → logprob: -20.750001907348633
    9. ',K' → logprob: -20.875001907348633
    10. ' ' → logprob: -20.875001907348633

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.138441237155348e-05
    2. ' )' → logprob: -10.500091552734375
    3. ')
' → logprob: -11.000091552734375
    4. ')`' → logprob: -11.500091552734375
    5. '),' → logprob: -12.000091552734375
    6. ')*' → logprob: -12.125091552734375
    7. '')' → logprob: -12.750091552734375
    8. ',' → logprob: -12.875091552734375
    9. ')#' → logprob: -12.875091552734375
    10. '))' → logprob: -13.125091552734375

Token 257: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1649518609046936
    2. ')' → logprob: -2.039951801300049
    3. '#' → logprob: -5.289951801300049
    4. ' *' → logprob: -5.539951801300049
    5. ',' → logprob: -5.789951801300049
    6. '(' → logprob: -5.789951801300049
    7. 'def' → logprob: -6.289951801300049
    8. '*
' → logprob: -6.539951801300049
    9. ')*' → logprob: -7.039951801300049
    10. '(
' → logprob: -8.039952278137207

Token 258: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16633915901184082
    2. 'pow' → logprob: -2.291339159011841
    3. '(C' → logprob: -3.916339159011841
    4. 'comb' → logprob: -4.416338920593262
    5. '(' → logprob: -4.541338920593262
    6. 'math' → logprob: -5.541338920593262
    7. '((' → logprob: -6.541338920593262
    8. 'com' → logprob: -7.041338920593262
    9. 'bin' → logprob: -7.916338920593262
    10. 'mod' → logprob: -7.916338920593262

Token 259: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0004705914470832795
    2. 'T' → logprob: -8.125470161437988
    3. '(' → logprob: -8.875470161437988
    4. '(M' → logprob: -11.000470161437988
    5. '(N' → logprob: -11.125470161437988
    6. '(
' → logprob: -13.250470161437988
    7. '((' → logprob: -14.125470161437988
    8. ' (' → logprob: -14.625470161437988
    9. '\(' → logprob: -15.750470161437988
    10. '[T' → logprob: -17.125471115112305

Token 260: '-(' (ID: 18825)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029974481090903282
    2. '-' → logprob: -3.7799744606018066
    3. ' -' → logprob: -6.029974460601807
    4. ' ,' → logprob: -6.154974460601807
    5. ',N' → logprob: -6.654974460601807
    6. ')' → logprob: -7.904974460601807
    7. '-,' → logprob: -9.404974937438965
    8. '(' → logprob: -9.404974937438965
    9. 'N' → logprob: -9.654974937438965
    10. ',M' → logprob: -10.029974937438965

Token 261: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00035083942930214107
    2. '(N' → logprob: -8.000350952148438
    3. ' N' → logprob: -11.250350952148438
    4. '(' → logprob: -14.375350952148438
    5. ' (' → logprob: -14.750350952148438
    6. 'M' → logprob: -14.875350952148438
    7. '{' → logprob: -15.750350952148438
    8. '[N' → logprob: -15.750350952148438
    9. '   ' → logprob: -16.000350952148438
    10. ' ' → logprob: -16.000350952148438

Token 262: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.794061770662665e-05
    2. ' +' → logprob: -9.37509822845459
    3. '+k' → logprob: -12.00009822845459
    4. 'K' → logprob: -12.25009822845459
    5. '+C' → logprob: -13.37509822845459
    6. '+B' → logprob: -15.12509822845459
    7. '-K' → logprob: -15.87509822845459
    8. ')' → logprob: -17.125097274780273
    9. '+A' → logprob: -17.625097274780273
    10. '-' → logprob: -18.125097274780273

Token 263: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.650518920039758e-06
    2. 'M' → logprob: -12.875003814697266
    3. ' K' → logprob: -13.875003814697266
    4. 'C' → logprob: -19.375003814697266
    5. '	K' → logprob: -19.375003814697266
    6. '```' → logprob: -19.625003814697266
    7. 'k' → logprob: -19.750003814697266
    8. 'К' → logprob: -19.875003814697266
    9. '>K' → logprob: -19.875003814697266
    10. ')' → logprob: -20.000003814697266

Token 264: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01175497192889452
    2. '-' → logprob: -5.261754989624023
    3. ' -' → logprob: -5.636754989624023
    4. ' ,' → logprob: -6.011754989624023
    5. ',K' → logprob: -9.011754989624023
    6. '),' → logprob: -9.261754989624023
    7. ',N' → logprob: -9.386754989624023
    8. ' ' → logprob: -9.636754989624023
    9. '-(' → logprob: -10.261754989624023
    10. '-K' → logprob: -10.261754989624023

Token 265: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00043162284418940544
    2. ' M' → logprob: -7.750431537628174
    3. '(M' → logprob: -13.875432014465332
    4. ' ' → logprob: -17.750431060791016
    5. '	M' → logprob: -18.000431060791016
    6. '   ' → logprob: -18.250431060791016
    7. '(' → logprob: -19.250431060791016
    8. ',M' → logprob: -19.375431060791016
    9. '  ' → logprob: -20.000431060791016
    10. ' (' → logprob: -20.375431060791016

Token 266: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00027099132421426475
    2. ' +' → logprob: -8.25027084350586
    3. 'K' → logprob: -11.75027084350586
    4. '+k' → logprob: -13.25027084350586
    5. ' K' → logprob: -17.12527084350586
    6. '＋' → logprob: -17.25027084350586
    7. '+C' → logprob: -17.87527084350586
    8. '+
' → logprob: -17.87527084350586
    9. ' plus' → logprob: -19.12527084350586
    10. 'plus' → logprob: -19.37527084350586

Token 267: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.816093228830141e-06
    2. ' K' → logprob: -12.87500286102295
    3. 'k' → logprob: -16.750001907348633
    4. '+' → logprob: -16.875001907348633
    5. '(K' → logprob: -17.750001907348633
    6. '[K' → logprob: -19.250001907348633
    7. '>K' → logprob: -19.375001907348633
    8. '```' → logprob: -19.375001907348633
    9. 'from' → logprob: -19.625001907348633
    10. '	K' → logprob: -19.875001907348633

Token 268: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.297462171758525e-05
    2. ')
' → logprob: -11.375033378601074
    3. ' )' → logprob: -11.375033378601074
    4. '#' → logprob: -12.750033378601074
    5. '')' → logprob: -13.500033378601074
    6. '")' → logprob: -13.500033378601074
    7. ')*' → logprob: -13.750033378601074
    8. '))' → logprob: -14.000033378601074
    9. '`)' → logprob: -14.500033378601074
    10. '-' → logprob: -15.250033378601074

Token 269: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3748839199542999
    2. ')' → logprob: -1.4998838901519775
    3. ' *' → logprob: -2.7498838901519775
    4. '#' → logprob: -5.124884128570557
    5. 'from' → logprob: -5.999884128570557
    6. '**' → logprob: -6.124884128570557
    7. 'def' → logprob: -6.249884128570557
    8. '(' → logprob: -6.374884128570557
    9. '*
' → logprob: -6.499884128570557
    10. 'import' → logprob: -6.749884128570557

Token 270: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01191412378102541
    2. 'pow' → logprob: -4.886914253234863
    3. 'comb' → logprob: -6.261914253234863
    4. '(' → logprob: -6.886914253234863
    5. '(C' → logprob: -7.386914253234863
    6. ' C' → logprob: -7.886914253234863
    7. 'com' → logprob: -8.761914253234863
    8. 'math' → logprob: -9.761914253234863
    9. '\' → logprob: -10.636914253234863
    10. ' (' → logprob: -10.761914253234863

Token 271: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0061469427309930325
    2. '(' → logprob: -5.1311469078063965
    3. '((' → logprob: -9.381147384643555
    4. 'T' → logprob: -9.756147384643555
    5. ' (' → logprob: -9.756147384643555
    6. '(t' → logprob: -11.756147384643555
    7. '(
' → logprob: -11.756147384643555
    8. '\(' → logprob: -13.631147384643555
    9. '(total' → logprob: -15.131147384643555
    10. '​' → logprob: -15.756147384643555

Token 272: '-(' (ID: 18825)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5499497652053833
    2. '-(' → logprob: -0.9249497652053833
    3. ' -' → logprob: -3.7999496459960938
    4. ' -(' → logprob: -6.049949645996094
    5. ',' → logprob: -6.424949645996094
    6. ' ' → logprob: -9.674949645996094
    7. ' (' → logprob: -11.174949645996094
    8. '-N' → logprob: -11.674949645996094
    9. ' ,' → logprob: -11.924949645996094
    10. '-
' → logprob: -12.174949645996094

Token 273: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026520196348428726
    2. '(N' → logprob: -3.651520252227783
    3. ' N' → logprob: -9.776519775390625
    4. '(M' → logprob: -9.776519775390625
    5. 'M' → logprob: -9.901519775390625
    6. ' (' → logprob: -10.276519775390625
    7. '   ' → logprob: -12.151519775390625
    8. '
' → logprob: -12.526519775390625
    9. ' ' → logprob: -12.651519775390625
    10. '(' → logprob: -13.026519775390625

Token 274: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.3795937522663735e-05
    2. ' +' → logprob: -10.87502384185791
    3. '
' → logprob: -13.87502384185791
    4. '+k' → logprob: -13.87502384185791
    5. 'K' → logprob: -14.00002384185791
    6. '#' → logprob: -14.00002384185791
    7. '+
' → logprob: -15.00002384185791
    8. '+C' → logprob: -15.12502384185791
    9. '

' → logprob: -15.62502384185791
    10. '+B' → logprob: -15.87502384185791

Token 275: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.282920129597187e-05
    2. ' K' → logprob: -12.250012397766113
    3. '(' → logprob: -13.250012397766113
    4. '```' → logprob: -13.625012397766113
    5. '(K' → logprob: -13.750012397766113
    6. '[' → logprob: -14.500012397766113
    7. '
' → logprob: -14.500012397766113
    8. 'К' → logprob: -14.750012397766113
    9. '#' → logprob: -14.750012397766113
    10. ')' → logprob: -15.000012397766113

Token 276: ')-(' (ID: 111485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3939264118671417
    2. '-' → logprob: -1.2689263820648193
    3. ' -' → logprob: -3.7689263820648193
    4. ',K' → logprob: -4.518926620483398
    5. '-K' → logprob: -5.518926620483398
    6. ' ,' → logprob: -6.018926620483398
    7. '-(' → logprob: -6.768926620483398
    8. '),' → logprob: -7.393926620483398
    9. ')' → logprob: -7.393926620483398
    10. ',
' → logprob: -7.768926620483398

Token 277: 'M' (ID: 44)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.007471859455108643
    2. 'L' → logprob: -5.632472038269043
    3. 'M' → logprob: -5.757472038269043
    4. '(M' → logprob: -8.007472038269043
    5. '(K' → logprob: -8.382472038269043
    6. ' K' → logprob: -9.257472038269043
    7. 'B' → logprob: -11.257472038269043
    8. ' (' → logprob: -11.757472038269043
    9. '(L' → logprob: -11.757472038269043
    10. 'U' → logprob: -11.882472038269043

Token 278: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014525714504998177
    2. ' +' → logprob: -8.875144958496094
    3. '+k' → logprob: -13.500144958496094
    4. '+C' → logprob: -13.500144958496094
    5. '-K' → logprob: -13.625144958496094
    6. 'K' → logprob: -14.125144958496094
    7. '+B' → logprob: -14.750144958496094
    8. ' K' → logprob: -17.000144958496094
    9. ')+' → logprob: -17.125144958496094
    10. '
' → logprob: -17.375144958496094

Token 279: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.4192871175473556e-05
    2. '+' → logprob: -10.000054359436035
    3. ' K' → logprob: -11.750054359436035
    4. '
' → logprob: -15.500054359436035
    5. '```' → logprob: -15.500054359436035
    6. ')' → logprob: -15.625054359436035
    7. '#' → logprob: -16.75005340576172
    8. '>K' → logprob: -17.25005340576172
    9. ' ' → logprob: -17.50005340576172
    10. '<K' → logprob: -18.00005340576172

Token 280: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004950293339788914
    2. '),' → logprob: -5.504950523376465
    3. ',K' → logprob: -7.129950523376465
    4. ',C' → logprob: -10.379950523376465
    5. ' ,' → logprob: -11.129950523376465
    6. ')' → logprob: -11.129950523376465
    7. 'C' → logprob: -12.379950523376465
    8. 'K' → logprob: -13.504950523376465
    9. ',),' → logprob: -13.629950523376465
    10. ' ' → logprob: -14.129950523376465

Token 281: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00020389800192788243
    2. ' K' → logprob: -8.500204086303711
    3. '2' → logprob: -15.625204086303711
    4. ' ' → logprob: -17.25020408630371
    5. 'C' → logprob: -17.50020408630371
    6. '	K' → logprob: -17.62520408630371
    7. '   ' → logprob: -17.62520408630371
    8. 'k' → logprob: -18.12520408630371
    9. ')' → logprob: -18.25020408630371
    10. '(K' → logprob: -18.25020408630371

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.813969957875088e-05
    2. ' )' → logprob: -10.500067710876465
    3. '#' → logprob: -11.500067710876465
    4. ')*' → logprob: -11.625067710876465
    5. ')`' → logprob: -12.125067710876465
    6. ')
' → logprob: -12.500067710876465
    7. '*' → logprob: -13.000067710876465
    8. '`)' → logprob: -13.375067710876465
    9. '))' → logprob: -13.750067710876465
    10. 'C' → logprob: -13.875067710876465

Token 283: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8740673065185547
    2. 'from' → logprob: -0.8740673065185547
    3. ')' → logprob: -2.6240673065185547
    4. 'def' → logprob: -3.1240673065185547
    5. '(
' → logprob: -4.124067306518555
    6. '```' → logprob: -4.749067306518555
    7. '(' → logprob: -4.999067306518555
    8. '#' → logprob: -4.999067306518555
    9. 'T' → logprob: -5.749067306518555
    10. ',' → logprob: -7.124067306518555

Token 284: ' C' (ID: 363)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4073192775249481
    2. 'import' → logprob: -1.4073193073272705
    3. 'T' → logprob: -3.1573193073272705
    4. 'def' → logprob: -3.5323193073272705
    5. '#' → logprob: -5.032319068908691
    6. 'fact' → logprob: -5.657319068908691
    7. 'factor' → logprob: -6.032319068908691
    8. '(
' → logprob: -6.407319068908691
    9. ')' → logprob: -7.032319068908691
    10. '```' → logprob: -7.032319068908691

Token 285: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.10073819011449814
    2. '(' → logprob: -2.350738286972046
    3. 'MOD' → logprob: -8.975738525390625
    4. '(
' → logprob: -8.975738525390625
    5. '((' → logprob: -9.475738525390625
    6. ' (' → logprob: -9.850738525390625
    7. 'T' → logprob: -10.350738525390625
    8. '(t' → logprob: -10.725738525390625
    9. '(M' → logprob: -11.100738525390625
    10. 'O' → logprob: -11.350738525390625

Token 286: '-(' (ID: 18825)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010436087846755981
    2. '(' → logprob: -5.135436058044434
    3. ',(' → logprob: -6.385436058044434
    4. '(T' → logprob: -6.635436058044434
    5. ',T' → logprob: -7.260436058044434
    6. ' ,' → logprob: -8.010436058044434
    7. '(N' → logprob: -8.510436058044434
    8. ',N' → logprob: -9.010436058044434
    9. ')' → logprob: -10.385436058044434
    10. '-(' → logprob: -10.635436058044434

Token 287: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003786062356084585
    2. '(N' → logprob: -5.628786087036133
    3. ' N' → logprob: -9.753786087036133
    4. 'K' → logprob: -9.878786087036133
    5. 'T' → logprob: -9.878786087036133
    6. '   ' → logprob: -12.128786087036133
    7. ' (' → logprob: -12.253786087036133
    8. '(T' → logprob: -12.503786087036133
    9. ')' → logprob: -13.753786087036133
    10. '(' → logprob: -13.878786087036133

Token 288: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014352317666634917
    2. '-(' → logprob: -7.251435279846191
    3. '+(' → logprob: -7.251435279846191
    4. ' +' → logprob: -11.876435279846191
    5. '-' → logprob: -13.001435279846191
    6. '#' → logprob: -13.876435279846191
    7. '-K' → logprob: -13.876435279846191
    8. 'K' → logprob: -14.001435279846191
    9. '(' → logprob: -14.126435279846191
    10. '
' → logprob: -14.376435279846191

Token 289: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005899522919207811
    2. '(N' → logprob: -5.380899429321289
    3. ' (' → logprob: -7.630899429321289
    4. '(K' → logprob: -7.880899429321289
    5. '+' → logprob: -8.505899429321289
    6. '(' → logprob: -10.005899429321289
    7. ' K' → logprob: -10.130899429321289
    8. ' ' → logprob: -11.130899429321289
    9. '#' → logprob: -11.255899429321289
    10. ')' → logprob: -11.255899429321289

Token 290: ')-(' (ID: 111485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04083933308720589
    2. ',K' → logprob: -3.665839433670044
    3. '-K' → logprob: -5.415839195251465
    4. '),' → logprob: -5.540839195251465
    5. ')' → logprob: -5.915839195251465
    6. '-' → logprob: -6.165839195251465
    7. ' ,' → logprob: -7.915839195251465
    8. ' -' → logprob: -8.040839195251465
    9. '-(' → logprob: -8.290839195251465
    10. ' ' → logprob: -9.665839195251465

Token 291: 'M' (ID: 44)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0007631686748936772
    2. '(K' → logprob: -7.375762939453125
    3. ' K' → logprob: -9.375762939453125
    4. '(M' → logprob: -10.750762939453125
    5. 'M' → logprob: -11.625762939453125
    6. ' (' → logprob: -12.000762939453125
    7. '(N' → logprob: -12.250762939453125
    8. '(' → logprob: -13.000762939453125
    9. '   ' → logprob: -13.500762939453125
    10. 'L' → logprob: -13.875762939453125

Token 292: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013753714971244335
    2. ')-(' → logprob: -5.138753890991211
    3. '+(' → logprob: -5.513753890991211
    4. '-(' → logprob: -5.638753890991211
    5. '-K' → logprob: -9.763753890991211
    6. 'K' → logprob: -9.888753890991211
    7. '-' → logprob: -9.888753890991211
    8. ')' → logprob: -11.013753890991211
    9. ')-' → logprob: -11.388753890991211
    10. '#' → logprob: -12.263753890991211

Token 293: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.227250610711053e-05
    2. ' K' → logprob: -11.625041961669922
    3. ')' → logprob: -11.875041961669922
    4. '(' → logprob: -11.875041961669922
    5. '(K' → logprob: -12.250041961669922
    6. '#' → logprob: -12.625041961669922
    7. '
' → logprob: -12.875041961669922
    8. 'L' → logprob: -13.250041961669922
    9. ' (' → logprob: -14.000041961669922
    10. '```' → logprob: -14.125041961669922

Token 294: ')-' (ID: 14080)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04717545583844185
    2. '),' → logprob: -3.422175407409668
    3. ',K' → logprob: -4.672175407409668
    4. ')' → logprob: -5.797175407409668
    5. '-K' → logprob: -7.922175407409668
    6. '-' → logprob: -8.047175407409668
    7. ' ,' → logprob: -8.422175407409668
    8. ' -' → logprob: -9.797175407409668
    9. 'K' → logprob: -10.797175407409668
    10. ' ' → logprob: -11.297175407409668

Token 295: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001870902779046446
    2. ' K' → logprob: -8.625186920166016
    3. '(K' → logprob: -12.000186920166016
    4. '(' → logprob: -14.625186920166016
    5. ')' → logprob: -14.875186920166016
    6. ',K' → logprob: -16.000186920166016
    7. ',' → logprob: -16.375186920166016
    8. '   ' → logprob: -16.625186920166016
    9. '	K' → logprob: -16.625186920166016
    10. ' ' → logprob: -16.875186920166016

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013454732252284884
    2. ',K' → logprob: -7.251345634460449
    3. ',T' → logprob: -8.37634563446045
    4. ')' → logprob: -9.12634563446045
    5. '(T' → logprob: -9.25134563446045
    6. ',(' → logprob: -10.00134563446045
    7. ' ,' → logprob: -10.12634563446045
    8. '),' → logprob: -10.62634563446045
    9. ',M' → logprob: -10.87634563446045
    10. '(' → logprob: -11.00134563446045

Token 297: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.0126840758603066e-05
    2. ' K' → logprob: -10.125040054321289
    3. ')' → logprob: -18.37504005432129
    4. '#' → logprob: -18.75004005432129
    5. 'k' → logprob: -19.00004005432129
    6. '   ' → logprob: -19.37504005432129
    7. '           ' → logprob: -19.75004005432129
    8. '
' → logprob: -20.00004005432129
    9. '	K' → logprob: -20.50004005432129
    10. '       ' → logprob: -20.62504005432129

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012094692647224292
    2. ' )' → logprob: -10.500121116638184
    3. '#' → logprob: -10.625121116638184
    4. ')
' → logprob: -10.875121116638184
    5. '=' → logprob: -11.625121116638184
    6. ')`' → logprob: -11.750121116638184
    7. '))' → logprob: -11.875121116638184
    8. ')=' → logprob: -12.375121116638184
    9. ')#' → logprob: -12.500121116638184
    10. 'def' → logprob: -12.625121116638184

Token 299: ' mais' (ID: 2899)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.880161702632904
    2. 'def' → logprob: -1.6301617622375488
    3. '(
' → logprob: -2.130161762237549
    4. ')' → logprob: -2.380161762237549
    5. '=' → logprob: -3.380161762237549
    6. 'import' → logprob: -3.380161762237549
    7. '```' → logprob: -3.880161762237549
    8. '(T' → logprob: -4.130161762237549
    9. ' =' → logprob: -4.255161762237549
    10. ':' → logprob: -4.255161762237549

Token 300: ' après' (ID: 16460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12109530717134476
    2. '()' → logprob: -3.3710954189300537
    3. ':' → logprob: -3.6210954189300537
    4. ' ' → logprob: -4.496095180511475
    5. ' )' → logprob: -4.621095180511475
    6. '=' → logprob: -4.871095180511475
    7. ' =' → logprob: -5.121095180511475
    8. '#' → logprob: -5.996095180511475
    9. ' :' → logprob: -5.996095180511475
    10. '*' → logprob: -6.121095180511475

Token 301: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02729642391204834
    2. ')' → logprob: -4.902296543121338
    3. '(' → logprob: -5.027296543121338
    4. ' :' → logprob: -5.652296543121338
    5. '():' → logprob: -6.652296543121338
    6. '(T' → logprob: -6.777296543121338
    7. ':
' → logprob: -6.777296543121338
    8. 'import' → logprob: -6.902296543121338
    9. '
' → logprob: -7.527296543121338
    10. 'def' → logprob: -7.652296543121338

Token 302: ' aura' (ID: 33008)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6631690263748169
    2. '*' → logprob: -1.413169026374817
    3. '=' → logprob: -2.0381689071655273
    4. ')' → logprob: -3.5381689071655273
    5. 'continue' → logprob: -4.663168907165527
    6. '**' → logprob: -5.038168907165527
    7. ' *' → logprob: -5.038168907165527
    8. ':' → logprob: -5.413168907165527
    9. ' continue' → logprob: -5.538168907165527
    10. '()' → logprob: -5.663168907165527

Token 303: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5226342082023621
    2. '
' → logprob: -2.022634267807007
    3. ' ' → logprob: -2.647634267807007
    4. '\n' → logprob: -3.397634267807007
    5. '()' → logprob: -3.647634267807007
    6. '(' → logprob: -4.272634029388428
    7. '1' → logprob: -4.272634029388428
    8. '#' → logprob: -4.272634029388428
    9. '\' → logprob: -4.772634029388428
    10. ':' → logprob: -5.022634029388428

Token 304: ' tous' (ID: 10688)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.7296356558799744
    2. '(N' → logprob: -1.7296357154846191
    3. '(' → logprob: -2.354635715484619
    4. ')' → logprob: -2.479635715484619
    5. ' (' → logprob: -3.104635715484619
    6. '(n' → logprob: -3.104635715484619
    7. 'T' → logprob: -4.604635715484619
    8. '(D' → logprob: -4.854635715484619
    9. ' ' → logprob: -4.979635715484619
    10. '4' → logprob: -5.104635715484619

Token 305: ' les' (ID: 1341)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4120439291000366
    2. 'T' → logprob: -1.2870439291000366
    3. 'les' → logprob: -3.037044048309326
    4. ' les' → logprob: -5.537044048309326
    5. ' T' → logprob: -6.037044048309326
    6. 'le' → logprob: -6.412044048309326
    7. 'pas' → logprob: -6.537044048309326
    8. ' tokens' → logprob: -6.787044048309326
    9. ' ' → logprob: -8.162043571472168
    10. ' pas' → logprob: -8.162043571472168

Token 306: ' K' (ID: 658)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0490429662168026
    2. 'pas' → logprob: -3.2990429401397705
    3. 'T' → logprob: -4.67404317855835
    4. ' tokens' → logprob: -7.79904317855835
    5. 't' → logprob: -7.79904317855835
    6. ' pas' → logprob: -8.674042701721191
    7. 'token' → logprob: -8.674042701721191
    8. '```' → logprob: -8.924042701721191
    9. '#' → logprob: -9.924042701721191
    10. 'steps' → logprob: -9.924042701721191

Token 307: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7276478409767151
    2. 'def' → logprob: -1.3526477813720703
    3. 'import' → logprob: -1.9776477813720703
    4. ')' → logprob: -2.9776477813720703
    5. 'T' → logprob: -3.4776477813720703
    6. '#' → logprob: -4.35264778137207
    7. '(' → logprob: -5.60264778137207
    8. '(
' → logprob: -5.72764778137207
    9. '=' → logprob: -5.85264778137207
    10. ',' → logprob: -6.22764778137207

Token 308: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19749650359153748
    2. 'g' → logprob: -2.8224964141845703
    3. 'pas' → logprob: -2.9474964141845703
    4. 'B' → logprob: -3.5724964141845703
    5. ' gauche' → logprob: -4.94749641418457
    6. 'bas' → logprob: -5.19749641418457
    7. 'dro' → logprob: -5.19749641418457
    8. 'l' → logprob: -5.44749641418457
    9. 'la' → logprob: -5.57249641418457
    10. 'D' → logprob: -6.19749641418457

Token 309: ' et' (ID: 859)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9507321715354919
    2. 'def' → logprob: -1.3257322311401367
    3. 'import' → logprob: -1.5757322311401367
    4. ')' → logprob: -2.5757322311401367
    5. '#' → logprob: -4.075732231140137
    6. '```' → logprob: -4.075732231140137
    7. '=' → logprob: -4.950732231140137
    8. ':' → logprob: -5.700732231140137
    9. '.' → logprob: -5.825732231140137
    10. '\' → logprob: -6.075732231140137

Token 310: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0042130243964493275
    2. ' B' → logprob: -5.504212856292725
    3. 'K' → logprob: -9.379213333129883
    4. '```' → logprob: -10.879213333129883
    5. '#' → logprob: -12.254213333129883
    6. 'L' → logprob: -12.379213333129883
    7. '`' → logprob: -12.379213333129883
    8. 'C' → logprob: -12.379213333129883
    9. 'R' → logprob: -12.879213333129883
    10. '
' → logprob: -13.379213333129883

Token 311: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9228678345680237
    2. 'import' → logprob: -1.422867774963379
    3. 'T' → logprob: -2.047867774963379
    4. 'from' → logprob: -2.672867774963379
    5. ')' → logprob: -3.172867774963379
    6. '#' → logprob: -3.297867774963379
    7. '```' → logprob: -3.922867774963379
    8. ':' → logprob: -4.047867774963379
    9. 'factor' → logprob: -4.547867774963379
    10. 'fact' → logprob: -5.297867774963379

Token 312: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7771448493003845
    2. 'def' → logprob: -1.6521449089050293
    3. 'factor' → logprob: -2.1521449089050293
    4. 'from' → logprob: -2.4021449089050293
    5. 'T' → logprob: -2.7771449089050293
    6. 'import' → logprob: -3.4021449089050293
    7. ')' → logprob: -3.9021449089050293
    8. '(
' → logprob: -5.152144908905029
    9. '```' → logprob: -5.402144908905029
    10. 'f' → logprob: -5.527144908905029

Token 313: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2681249678134918
    2. 'fact' → logprob: -2.268125057220459
    3. 'import' → logprob: -2.518125057220459
    4. 'def' → logprob: -3.018125057220459
    5. 'factor' → logprob: -6.643125057220459
    6. '#' → logprob: -7.643125057220459
    7. 'class' → logprob: -8.7681245803833
    8. 'fac' → logprob: -8.8931245803833
    9. '```' → logprob: -10.3931245803833
    10. 'pow' → logprob: -10.6431245803833

Token 314: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5955568552017212
    2. 'import' → logprob: -1.0955568552017212
    3. 'from' → logprob: -2.7205567359924316
    4. '=' → logprob: -4.470556735992432
    5. ' =' → logprob: -4.970556735992432
    6. ' need' → logprob: -5.095556735992432
    7. 'need' → logprob: -5.220556735992432
    8. ' import' → logprob: -5.720556735992432
    9. 'factor' → logprob: -5.720556735992432
    10. '#' → logprob: -5.720556735992432

Token 315: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0010931886499747634
    2. 'ul' → logprob: -7.12609338760376
    3. '#' → logprob: -9.501092910766602
    4. 'cule' → logprob: -9.501092910766602
    5. 'ulé' → logprob: -10.501092910766602
    6. 'ulte' → logprob: -10.501092910766602
    7. 'ulate' → logprob: -10.626092910766602
    8. 'uler' → logprob: -11.251092910766602
    9. '\' → logprob: -11.876092910766602
    10. '```' → logprob: -12.126092910766602

Token 316: ' les' (ID: 1341)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.3082978427410126
    2. 'import' → logprob: -2.308297872543335
    3. 'from' → logprob: -2.433297872543335
    4. 'factor' → logprob: -3.683297872543335
    5. 'fac' → logprob: -3.933297872543335
    6. 'def' → logprob: -4.308297634124756
    7. '!' → logprob: -5.308297634124756
    8. ' fact' → logprob: -5.933297634124756
    9. '#' → logprob: -6.058297634124756
    10. 'max' → logprob: -6.308297634124756

Token 317: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2594163417816162
    2. 'factor' → logprob: -1.5094163417816162
    3. ' fact' → logprob: -5.134416580200195
    4. 'fac' → logprob: -6.884416580200195
    5. 'facts' → logprob: -9.009416580200195
    6. 'f' → logprob: -9.384416580200195
    7. 'comb' → logprob: -9.509416580200195
    8. '_factor' → logprob: -9.509416580200195
    9. ' factorial' → logprob: -9.759416580200195
    10. '_fact' → logprob: -10.009416580200195

Token 318: 'ori' (ID: 6510)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -0.5700737833976746
    2. 'or' → logprob: -0.9450737833976746
    3. 'ori' → logprob: -3.3200738430023193
    4. 'oria' → logprob: -5.57007360458374
    5. 'o' → logprob: -5.94507360458374
    6. 'oires' → logprob: -7.07007360458374
    7. 'oir' → logprob: -7.44507360458374
    8. 'orie' → logprob: -7.82007360458374
    9. '```' → logprob: -8.070074081420898
    10. '!' → logprob: -8.445074081420898

Token 319: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.04087572544813156
    2. 'elles' → logprob: -3.4158756732940674
    3. 'als' → logprob: -5.1658759117126465
    4. 'el' → logprob: -6.7908759117126465
    5. 'al' → logprob: -9.040875434875488
    6. 'nels' → logprob: -9.540875434875488
    7. 'nelles' → logprob: -9.665875434875488
    8. 'ls' → logprob: -10.665875434875488
    9. '```' → logprob: -10.915875434875488
    10. 'e' → logprob: -10.915875434875488

Token 320: ' modulo' (ID: 112372)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.12666913866996765
    2. 'MAX' → logprob: -2.62666916847229
    3. 'max' → logprob: -3.75166916847229
    4. 'factor' → logprob: -4.126668930053711
    5. '
' → logprob: -6.251668930053711
    6. 'fac' → logprob: -6.376668930053711
    7. '!' → logprob: -7.501668930053711
    8. '```' → logprob: -7.876668930053711
    9. '=' → logprob: -8.001668930053711
    10. '(MAX' → logprob: -8.126668930053711

Token 321: ' MOD' (ID: 32868)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.05244594067335129
    2. 'MAX' → logprob: -3.302445888519287
    3. 'max' → logprob: -4.927445888519287
    4. 'factor' → logprob: -5.177445888519287
    5. 'fac' → logprob: -6.802445888519287
    6. ' fact' → logprob: -8.552446365356445
    7. ' MAX' → logprob: -10.552446365356445
    8. 'FACT' → logprob: -11.302446365356445
    9. '
' → logprob: -11.552446365356445
    10. '```' → logprob: -11.677446365356445

Token 322: ' pour' (ID: 1930)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029840391129255295
    2. 'MAX' → logprob: -4.279840469360352
    3. 'max' → logprob: -4.529840469360352
    4. 'factor' → logprob: -5.904840469360352
    5. 'import' → logprob: -6.904840469360352
    6. 'fac' → logprob: -7.404840469360352
    7. '
' → logprob: -9.029840469360352
    8. '!' → logprob: -9.029840469360352
    9. 'def' → logprob: -9.404840469360352
    10. '```' → logprob: -10.279840469360352

Token 323: ' calcul' (ID: 7559)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40942466259002686
    2. ' i' → logprob: -1.2844246625900269
    3. '_' → logprob: -3.1594247817993164
    4. 'n' → logprob: -5.409424781799316
    5. ' _' → logprob: -6.284424781799316
    6. 't' → logprob: -6.409424781799316
    7. 'max' → logprob: -6.534424781799316
    8. 'range' → logprob: -7.034424781799316
    9. '_i' → logprob: -7.159424781799316
    10. 'fac' → logprob: -7.284424781799316

Token 324: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006613265140913427
    2. '#' → logprob: -7.625661373138428
    3. 'ating' → logprob: -10.25066089630127
    4. '```' → logprob: -10.37566089630127
    5. 'ateur' → logprob: -10.37566089630127
    6. 'ler' → logprob: -11.25066089630127
    7. 'uer' → logprob: -11.50066089630127
    8. '_' → logprob: -11.87566089630127
    9. 'ation' → logprob: -12.12566089630127
    10. '_factor' → logprob: -12.12566089630127

Token 325: ' ces' (ID: 10532)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5658259987831116
    2. 'factor' → logprob: -1.4408259391784668
    3. 'fac' → logprob: -2.190825939178467
    4. '```' → logprob: -3.565825939178467
    5. 'n' → logprob: -3.940825939178467
    6. 'def' → logprob: -4.565825939178467
    7. 'T' → logprob: -5.565825939178467
    8. 'C' → logprob: -5.690825939178467
    9. 'la' → logprob: -6.065825939178467
    10. '!' → logprob: -6.065825939178467

Token 326: ' comb' (ID: 4134)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.153876543045044
    2. '_factor' → logprob: -1.528876543045044
    3. 'factor' → logprob: -1.778876543045044
    4. '_' → logprob: -1.903876543045044
    5. 'comb' → logprob: -3.153876543045044
    6. '_fact' → logprob: -3.528876543045044
    7. '!' → logprob: -4.153876304626465
    8. 'n' → logprob: -4.278876304626465
    9. 'fac' → logprob: -4.278876304626465
    10. '_fac' → logprob: -4.903876304626465

Token 327: 'inais' (ID: 42744)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5939822793006897
    2. '_factor' → logprob: -1.218982219696045
    3. 'ination' → logprob: -3.593982219696045
    4. 'inais' → logprob: -3.843982219696045
    5. 'def' → logprob: -4.218982219696045
    6. '_fac' → logprob: -4.468982219696045
    7. '#' → logprob: -4.843982219696045
    8. 'inations' → logprob: -4.843982219696045
    9. 'os' → logprob: -4.968982219696045
    10. 'ina' → logprob: -5.343982219696045

Token 328: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13383670151233673
    2. 'ais' → logprob: -3.3838367462158203
    3. 'n' → logprob: -3.5088367462158203
    4. 'als' → logprob: -3.7588367462158203
    5. 'ons' → logprob: -4.75883674621582
    6. 'def' → logprob: -5.25883674621582
    7. 'ns' → logprob: -5.75883674621582
    8. 'ls' → logprob: -6.00883674621582
    9. 'es' → logprob: -6.13383674621582
    10. 'x' → logprob: -6.38383674621582

Token 329: '.

' (ID: 364)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9608256220817566
    2. 'fact' → logprob: -0.9608256220817566
    3. 'MAX' → logprob: -1.4608256816864014
    4. 'factor' → logprob: -5.960825443267822
    5. 'fac' → logprob: -8.96082592010498
    6. 'import' → logprob: -10.33582592010498
    7. 'from' → logprob: -11.21082592010498
    8. '
' → logprob: -11.33582592010498
    9. '_MAX' → logprob: -11.71082592010498
    10. 'FACT' → logprob: -11.96082592010498

Token 330: 'max' (ID: 3228)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.17792829871177673
    2. 'max' → logprob: -2.4279282093048096
    3. 'MAX' → logprob: -2.6779282093048096
    4. 'factor' → logprob: -5.552928447723389
    5. 'import' → logprob: -6.427928447723389
    6. 'from' → logprob: -8.67792797088623
    7. 'fac' → logprob: -8.92792797088623
    8. '
' → logprob: -9.30292797088623
    9. '```' → logprob: -9.67792797088623
    10. 'def' → logprob: -10.05292797088623

Token 331: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2684892416000366
    2. '_size' → logprob: -2.268489360809326
    3. '_factor' → logprob: -2.768489360809326
    4. '_len' → logprob: -3.893489360809326
    5. '_fact' → logprob: -4.268489360809326
    6. '_n' → logprob: -4.268489360809326
    7. '_N' → logprob: -4.393489360809326
    8. '_length' → logprob: -6.018489360809326
    9. ' =' → logprob: -6.518489360809326
    10. '_val' → logprob: -6.643489360809326

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687923550605774
    2. ' =' → logprob: -1.1368792057037354
    3. '_' → logprob: -12.886878967285156
    4. '_=' → logprob: -13.011878967285156
    5. '=max' → logprob: -13.636878967285156
    6. '+' → logprob: -14.011878967285156
    7. ' ' → logprob: -14.761878967285156
    8. '+=' → logprob: -15.386878967285156
    9. '=
' → logprob: -16.011878967285156
    10. '=int' → logprob: -16.136878967285156

Token 333: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018421143293380737
    2. ' N' → logprob: -4.018421173095703
    3. '10' → logprob: -8.393421173095703
    4. ' ' → logprob: -10.393421173095703
    5. '100' → logprob: -12.018421173095703
    6. '2' → logprob: -12.268421173095703
    7. '200' → logprob: -13.018421173095703
    8. '	N' → logprob: -15.018421173095703
    9. '500' → logprob: -15.393421173095703
    10. '400' → logprob: -16.018421173095703

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693149745464325
    2. ' +' → logprob: -0.693149745464325
    3. ' ' → logprob: -14.06814956665039
    4. '+
' → logprob: -14.69314956665039
    5. ' plus' → logprob: -15.06814956665039
    6. ' +
' → logprob: -15.19314956665039
    7. 'import' → logprob: -15.56814956665039
    8. ' ' → logprob: -15.69314956665039
    9. 'M' → logprob: -16.81814956665039
    10. '=' → logprob: -16.81814956665039

Token 335: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.000654654751997441
    2. ' M' → logprob: -7.375654697418213
    3. '4' → logprob: -10.750654220581055
    4. '2' → logprob: -12.375654220581055
    5. ' ' → logprob: -13.625654220581055
    6. '   ' → logprob: -14.625654220581055
    7. 'K' → logprob: -14.750654220581055
    8. '6' → logprob: -16.125654220581055
    9. '5' → logprob: -16.375654220581055
    10. '10' → logprob: -16.500654220581055

Token 336: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132753074169159
    2. '+' → logprob: -1.3132753372192383
    3. '4' → logprob: -11.938275337219238
    4. ' ' → logprob: -12.438275337219238
    5. '   ' → logprob: -13.438275337219238
    6. '```' → logprob: -15.063275337219238
    7. ' +
' → logprob: -15.438275337219238
    8. '+
' → logprob: -15.813275337219238
    9. '
' → logprob: -15.938275337219238
    10. 'import' → logprob: -16.313274383544922

Token 337: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.375011444091797
    4. '```' → logprob: -18.125011444091797
    5. '5' → logprob: -18.250011444091797
    6. '10' → logprob: -18.875011444091797
    7. '(' → logprob: -19.000011444091797
    8. '  ' → logprob: -19.000011444091797
    9. '6' → logprob: -20.500011444091797
    10. '8' → logprob: -20.875011444091797

Token 338: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '(' → logprob: -16.875001907348633
    5. '```' → logprob: -17.250001907348633
    6. '5' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.250001907348633
    8. '400' → logprob: -19.375001907348633
    9. 'K' → logprob: -19.875001907348633
    10. 'max' → logprob: -20.000001907348633

Token 339: ' *' (ID: 425)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00038407891406677663
    2. '*K' → logprob: -7.8753838539123535
    3. ' K' → logprob: -12.625384330749512
    4. '*' → logprob: -14.500384330749512
    5. '   ' → logprob: -16.500383377075195
    6. ' *' → logprob: -17.250383377075195
    7. ' ' → logprob: -17.750383377075195
    8. '4' → logprob: -18.125383377075195
    9. '```' → logprob: -18.250383377075195
    10. '(K' → logprob: -18.625383377075195

Token 340: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.1008713702030946e-06
    2. ' K' → logprob: -13.125001907348633
    3. '
' → logprob: -21.000001907348633
    4. '```' → logprob: -21.625001907348633
    5. '	K' → logprob: -22.000001907348633
    6. ' ' → logprob: -22.000001907348633
    7. '   ' → logprob: -22.625001907348633
    8. '(K' → logprob: -23.250001907348633
    9. '>K' → logprob: -23.375001907348633
    10. 'k' → logprob: -23.375001907348633

Token 341: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29556989669799805
    2. 'fact' → logprob: -1.670569896697998
    3. ' +' → logprob: -3.545569896697998
    4. 'factor' → logprob: -3.920569896697998
    5. '
' → logprob: -4.045569896697998
    6. 'max' → logprob: -7.920569896697998
    7. '_fact' → logprob: -8.045570373535156
    8. '_factor' → logprob: -8.420570373535156
    9. ' 
' → logprob: -9.045570373535156
    10. 'fac' → logprob: -9.295570373535156

Token 342: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0015381926205009222
    2. 'factor' → logprob: -6.501538276672363
    3. 'fac' → logprob: -10.251538276672363
    4. 'facts' → logprob: -15.126538276672363
    5. '_fact' → logprob: -16.126537322998047
    6. ' fact' → logprob: -16.501537322998047
    7. 'Fact' → logprob: -17.751537322998047
    8. '_factor' → logprob: -19.126537322998047
    9. '.fact' → logprob: -19.251537322998047
    10. ' factorial' → logprob: -19.376537322998047

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1293882429599762
    2. ' =' → logprob: -2.1293883323669434
    3. '_' → logprob: -6.754388332366943
    4. 's' → logprob: -7.129388332366943
    5. '_factor' → logprob: -8.629387855529785
    6. '[' → logprob: -8.754387855529785
    7. ' ' → logprob: -10.004387855529785
    8. '_fact' → logprob: -10.254387855529785
    9. '_=' → logprob: -10.629387855529785
    10. ',' → logprob: -11.504387855529785

Token 344: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004306692280806601
    2. ' [' → logprob: -7.750430583953857
    3. '1' → logprob: -18.375431060791016
    4. ' ' → logprob: -18.750431060791016
    5. '[int' → logprob: -19.500431060791016
    6. '[n' → logprob: -19.750431060791016
    7. '[f' → logprob: -20.250431060791016
    8. '[i' → logprob: -21.625431060791016
    9. '[token' → logprob: -21.625431060791016
    10. '[class' → logprob: -21.750431060791016

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -22.625
    3. 'fact' → logprob: -24.75
    4. '
' → logprob: -25.0
    5. ']' → logprob: -25.375
    6. '

' → logprob: -25.5
    7. '   ' → logprob: -25.625
    8. '{' → logprob: -25.875
    9. '```' → logprob: -26.0
    10. '１' → logprob: -26.25

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022344745229929686
    2. ']
' → logprob: -6.12723445892334
    3. ']*(' → logprob: -11.25223445892334
    4. ']
' → logprob: -11.50223445892334
    5. ',' → logprob: -11.75223445892334
    6. ']*' → logprob: -12.00223445892334
    7. ' ]' → logprob: -12.37723445892334
    8. ']

' → logprob: -12.62723445892334
    9. ']+' → logprob: -13.25223445892334
    10. ' for' → logprob: -13.50223445892334

Token 347: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23078273236751556
    2. '
' → logprob: -2.1057827472686768
    3. ']' → logprob: -3.3557827472686768
    4. '*' → logprob: -3.8557827472686768
    5. ' for' → logprob: -4.230782508850098
    6. '*(' → logprob: -4.980782508850098
    7. ']*(' → logprob: -5.730782508850098
    8. '```' → logprob: -7.230782508850098
    9. ']*' → logprob: -7.980782508850098
    10. '[' → logprob: -8.105782508850098

Token 348: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -8.537868779967539e-06
    2. ' (' → logprob: -11.750008583068848
    3. '((' → logprob: -15.000008583068848
    4. '(' → logprob: -16.12500762939453
    5. '[max' → logprob: -16.75000762939453
    6. '(MAX' → logprob: -17.25000762939453
    7. 'max' → logprob: -18.00000762939453
    8. '(min' → logprob: -18.12500762939453
    9. '(Max' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.25000762939453

Token 349: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.981667537620524e-06
    2. '(max' → logprob: -13.750001907348633
    3. ' max' → logprob: -14.000001907348633
    4. '[max' → logprob: -18.250001907348633
    5. '=max' → logprob: -22.500001907348633
    6. '	max' → logprob: -23.000001907348633
    7. '
' → logprob: -23.250001907348633
    8. ':max' → logprob: -24.125001907348633
    9. ',max' → logprob: -24.250001907348633
    10. '   ' → logprob: -24.375001907348633

Token 350: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00011105302110081539
    2. '+' → logprob: -9.500110626220703
    3. 'val' → logprob: -10.250110626220703
    4. '_max' → logprob: -15.125110626220703
    5. 'max' → logprob: -15.875110626220703
    6. '_' → logprob: -16.125110626220703
    7. '_VAL' → logprob: -16.250110626220703
    8. '_len' → logprob: -17.250110626220703
    9. 'Val' → logprob: -17.625110626220703
    10. ' +' → logprob: -17.875110626220703

Token 351: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002475777640938759
    2. ' +' → logprob: -6.002475738525391
    3. '+
' → logprob: -15.62747573852539
    4. '
' → logprob: -18.62747573852539
    5. ' ' → logprob: -18.75247573852539
    6. '＋' → logprob: -19.37747573852539
    7. ' +
' → logprob: -20.37747573852539
    8. '+n' → logprob: -20.50247573852539
    9. '```' → logprob: -20.50247573852539
    10. '+

' → logprob: -20.87747573852539

Token 352: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -20.375
    4. '10' → logprob: -21.0
    5. '１' → logprob: -21.375
    6. '```' → logprob: -21.875
    7. '+' → logprob: -22.125
    8. '   ' → logprob: -22.625
    9. '7' → logprob: -22.875
    10. '۱' → logprob: -23.5

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '2' → logprob: -17.125
    4. '10' → logprob: -17.25
    5. '１' → logprob: -19.375
    6. '5' → logprob: -19.5
    7. '7' → logprob: -20.25
    8. '15' → logprob: -20.5
    9. '11' → logprob: -20.5
    10. '+' → logprob: -20.625

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023271916434168816
    2. ')
' → logprob: -3.7732717990875244
    3. ')

' → logprob: -11.023271560668945
    4. ')
' → logprob: -11.648271560668945
    5. ']' → logprob: -14.898271560668945
    6. ' )' → logprob: -14.898271560668945
    7. '```' → logprob: -15.773271560668945
    8. ')

' → logprob: -16.648271560668945
    9. '),' → logprob: -16.648271560668945
    10. '
' → logprob: -16.648271560668945

Token 355: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -13.750000953674316
    3. 'i' → logprob: -18.250001907348633
    4. '```' → logprob: -21.000001907348633
    5. 'fact' → logprob: -21.375001907348633
    6. '
' → logprob: -22.000001907348633
    7. '	for' → logprob: -22.500001907348633
    8. 'factor' → logprob: -22.625001907348633
    9. 'from' → logprob: -24.250001907348633
    10. '

' → logprob: -24.750001907348633

Token 356: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07888989895582199
    2. 'i' → logprob: -2.578889846801758
    3. '	i' → logprob: -15.703889846801758
    4. ' ' → logprob: -16.953889846801758
    5. ' ' → logprob: -18.953889846801758
    6. 'I' → logprob: -20.203889846801758
    7. '  ' → logprob: -20.703889846801758
    8. '   ' → logprob: -20.703889846801758
    9. '_i' → logprob: -21.328889846801758
    10. 'x' → logprob: -21.578889846801758

Token 357: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01604539528489113
    2. 'in' → logprob: -4.141045570373535
    3. ' ' → logprob: -12.641045570373535
    4. 'import' → logprob: -12.766045570373535
    5. '1' → logprob: -13.891045570373535
    6. '	in' → logprob: -14.141045570373535
    7. ' i' → logprob: -14.641045570373535
    8. ',' → logprob: -14.641045570373535
    9. ')' → logprob: -14.891045570373535
    10. '   ' → logprob: -15.141045570373535

Token 358: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868715465068817
    2. ' range' → logprob: -1.136871576309204
    3. '1' → logprob: -15.136871337890625
    4. '	range' → logprob: -15.886871337890625
    5. '2' → logprob: -16.761871337890625
    6. ' ' → logprob: -17.136871337890625
    7. '(range' → logprob: -17.136871337890625
    8. 'in' → logprob: -17.636871337890625
    9. '[' → logprob: -18.011871337890625
    10. '   ' → logprob: -18.261871337890625

Token 359: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00307456380687654
    2. '1' → logprob: -5.878074645996094
    3. '2' → logprob: -9.128074645996094
    4. ' ' → logprob: -9.378074645996094
    5. ' (' → logprob: -9.503074645996094
    6. ' in' → logprob: -14.378074645996094
    7. 'in' → logprob: -15.003074645996094
    8. '(
' → logprob: -15.378074645996094
    9. ' range' → logprob: -15.628074645996094
    10. 'range' → logprob: -15.628074645996094

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. '2' → logprob: -10.250036239624023
    3. ' ' → logprob: -14.125036239624023
    4. 'max' → logprob: -19.125036239624023
    5. '   ' → logprob: -19.625036239624023
    6. '
' → logprob: -22.125036239624023
    7. '  ' → logprob: -22.875036239624023
    8. '```' → logprob: -23.000036239624023
    9. ')' → logprob: -23.250036239624023
    10. '    ' → logprob: -23.500036239624023

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014263052493333817
    2. ' ,' → logprob: -4.264263153076172
    3. ',max' → logprob: -9.264263153076172
    4. 'max' → logprob: -12.639263153076172
    5. ' max' → logprob: -14.514263153076172
    6. ',
' → logprob: -14.639263153076172
    7. '   ' → logprob: -16.014263153076172
    8. ' ,
' → logprob: -16.264263153076172
    9. ',len' → logprob: -16.264263153076172
    10. ' ' → logprob: -16.389263153076172

Token 362: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.836499985889532e-05
    2. ' max' → logprob: -9.7500581741333
    3. '
' → logprob: -21.750059127807617
    4. '(max' → logprob: -22.125059127807617
    5. '	max' → logprob: -23.625059127807617
    6. ')' → logprob: -24.125059127807617
    7. 'len' → logprob: -24.250059127807617
    8. '[max' → logprob: -24.625059127807617
    9. '_max' → logprob: -24.875059127807617
    10. '   ' → logprob: -25.125059127807617

Token 363: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0004902417422272265
    2. 'val' → logprob: -7.625490188598633
    3. '+' → logprob: -13.875490188598633
    4. 'max' → logprob: -14.500490188598633
    5. 'Val' → logprob: -15.500490188598633
    6. '	val' → logprob: -16.000490188598633
    7. '_VAL' → logprob: -16.000490188598633
    8. '1' → logprob: -16.875490188598633
    9. ' val' → logprob: -16.875490188598633
    10. '_max' → logprob: -16.875490188598633

Token 364: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692810595035553
    2. ' +' → logprob: -2.1269280910491943
    3. '+
' → logprob: -17.376928329467773
    4. ' ' → logprob: -17.751928329467773
    5. ' +
' → logprob: -18.626928329467773
    6. '   ' → logprob: -19.001928329467773
    7. '1' → logprob: -19.251928329467773
    8. '＋' → logprob: -19.501928329467773
    9. '
' → logprob: -19.876928329467773
    10. '):
' → logprob: -20.251928329467773

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -17.750158309936523
    4. '   ' → logprob: -18.875158309936523
    5. '
' → logprob: -19.875158309936523
    6. '+' → logprob: -20.375158309936523
    7. 'i' → logprob: -20.750158309936523
    8. '```' → logprob: -21.125158309936523
    9. '  ' → logprob: -22.125158309936523
    10. ' i' → logprob: -22.250158309936523

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.2500057220459
    4. ')' → logprob: -20.7500057220459
    5. '
' → logprob: -20.7500057220459
    6. '2' → logprob: -22.0000057220459
    7. '  ' → logprob: -22.6250057220459
    8. 'i' → logprob: -22.7500057220459
    9. '+' → logprob: -22.8750057220459
    10. '１' → logprob: -23.3750057220459

Token 367: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3135644197463989
    2. '):' → logprob: -1.313564419746399
    3. ':' → logprob: -8.81356430053711
    4. '):
' → logprob: -9.18856430053711
    5. ' ):
' → logprob: -10.81356430053711
    6. ')' → logprob: -11.06356430053711
    7. ' ):' → logprob: -11.68856430053711
    8. ':
' → logprob: -11.93856430053711
    9. ']:' → logprob: -14.93856430053711
    10. ']:
' → logprob: -15.43856430053711

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47707128524780273
    2. ' fact' → logprob: -1.6020712852478027
    3. 'fact' → logprob: -1.7270712852478027
    4. '```' → logprob: -10.477071762084961
    5. '_fact' → logprob: -10.477071762084961
    6. '    
' → logprob: -11.102071762084961
    7. '.fact' → logprob: -11.352071762084961
    8. '	f' → logprob: -11.727071762084961
    9. ' factorial' → logprob: -12.102071762084961
    10. ' ' → logprob: -12.477071762084961

Token 369: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.00043102685594931245
    2. ' fact' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '_fact' → logprob: -16.250431060791016
    5. '.fact' → logprob: -18.500431060791016
    6. 'Fact' → logprob: -19.625431060791016
    7. ' ' → logprob: -20.125431060791016
    8. 'factor' → logprob: -20.625431060791016
    9. '  ' → logprob: -21.250431060791016
    10. '```' → logprob: -21.250431060791016

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.375004768371582
    3. '\[' → logprob: -16.125003814697266
    4. ' [' → logprob: -16.250003814697266
    5. '[I' → logprob: -17.375003814697266
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.625003814697266
    8. '=' → logprob: -18.875003814697266
    9. 'i' → logprob: -19.750003814697266
    10. '
' → logprob: -20.125003814697266

Token 371: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10581289976835251
    2. '=' → logprob: -2.3558127880096436
    3. ']=' → logprob: -5.230813026428223
    4. ')' → logprob: -8.980813026428223
    5. ' =' → logprob: -9.230813026428223
    6. ' ]' → logprob: -12.105813026428223
    7. ')=' → logprob: -12.105813026428223
    8. '=i' → logprob: -12.230813026428223
    9. '   ' → logprob: -14.980813026428223
    10. ' ' → logprob: -14.980813026428223

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031808018684387207
    2. ' =' → logprob: -5.753180980682373
    3. '*=' → logprob: -12.753180503845215
    4. ' *=' → logprob: -15.878180503845215
    5. '=i' → logprob: -17.87818145751953
    6. '=f' → logprob: -18.62818145751953
    7. '=

' → logprob: -18.87818145751953
    8. '   ' → logprob: -19.00318145751953
    9. '=
' → logprob: -20.12818145751953
    10. '.=' → logprob: -20.62818145751953

Token 373: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.269742876291275
    2. '(f' → logprob: -2.019742965698242
    3. ' fact' → logprob: -2.519742965698242
    4. ' (' → logprob: -3.769742965698242
    5. '_fact' → logprob: -9.769742965698242
    6. '(' → logprob: -9.894742965698242
    7. '(i' → logprob: -11.144742965698242
    8. ' ' → logprob: -11.269742965698242
    9. '.fact' → logprob: -11.394742965698242
    10. 'factor' → logprob: -11.519742965698242

Token 374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '[
' → logprob: -18.125
    4. '```' → logprob: -18.125
    5. 'i' → logprob: -18.75
    6. '
' → logprob: -19.625
    7. '[I' → logprob: -20.25
    8. '[-' → logprob: -20.25
    9. '   ' → logprob: -21.375
    10. '(i' → logprob: -21.5

Token 375: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009776752442121506
    2. '*' → logprob: -5.509776592254639
    3. '[i' → logprob: -5.509776592254639
    4. ' -' → logprob: -6.759776592254639
    5. ']' → logprob: -8.384777069091797
    6. ' *' → logprob: -9.009777069091797
    7. '*i' → logprob: -10.134777069091797
    8. 'i' → logprob: -10.509777069091797
    9. '   ' → logprob: -11.009777069091797
    10. '
' → logprob: -11.384777069091797

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '
' → logprob: -18.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. ']' → logprob: -18.625001907348633
    7. 'def' → logprob: -19.250001907348633
    8. 'i' → logprob: -19.375001907348633
    9. '  ' → logprob: -19.750001907348633
    10. 'import' → logprob: -20.312501907348633

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '
' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.500001907348633
    5. 'i' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. ']' → logprob: -18.500001907348633
    8. 'fact' → logprob: -19.250001907348633
    9. '

' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.375001907348633

Token 378: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38704386353492737
    2. ' *' → logprob: -1.137043833732605
    3. '*i' → logprob: -8.762043952941895
    4. '   ' → logprob: -11.762043952941895
    5. ' ' → logprob: -12.012043952941895
    6. ' ' → logprob: -14.637043952941895
    7. ')' → logprob: -15.012043952941895
    8. ']' → logprob: -15.137043952941895
    9. '```' → logprob: -15.137043952941895
    10. '[i' → logprob: -15.387043952941895

Token 379: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0072467876598238945
    2. '*i' → logprob: -5.507246971130371
    3. ' *' → logprob: -5.757246971130371
    4. '*object' → logprob: -13.507246971130371
    5. '**' → logprob: -14.507246971130371
    6. '   ' → logprob: -14.632246971130371
    7. ' ' → logprob: -15.257246971130371
    8. ' ' → logprob: -15.507246971130371
    9. '*j' → logprob: -15.507246971130371
    10. '*pi' → logprob: -16.132246017456055

Token 380: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.375709533691406
    4. '	i' → logprob: -18.625709533691406
    5. ' ' → logprob: -19.500709533691406
    6. '(i' → logprob: -20.625709533691406
    7. '```' → logprob: -21.000709533691406
    8. '  ' → logprob: -22.250709533691406
    9. '%i' → logprob: -23.125709533691406
    10. '*i' → logprob: -23.375709533691406

Token 381: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47407814860343933
    2. '%' → logprob: -0.9740781784057617
    3. '%D' → logprob: -15.474078178405762
    4. '
' → logprob: -15.724078178405762
    5. '%B' → logprob: -15.724078178405762
    6. ' ' → logprob: -15.849078178405762
    7. '%A' → logprob: -15.974078178405762
    8. ')' → logprob: -16.224077224731445
    9. ' %=' → logprob: -16.599077224731445
    10. '%n' → logprob: -16.724077224731445

Token 382: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -21.250045776367188
    4. 'mod' → logprob: -23.375045776367188
    5. '.MOD' → logprob: -23.375045776367188
    6. 'MO' → logprob: -23.500045776367188
    7. '10' → logprob: -24.500045776367188
    8. 'Mod' → logprob: -25.750045776367188
    9. '(mod' → logprob: -26.750045776367188
    10. 'MD' → logprob: -26.875045776367188

Token 383: '

' (ID: 279)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.4987974029500037e-05
    2. 'ifact' → logprob: -11.750024795532227
    3. 'inverse' → logprob: -11.875024795532227
    4. '_inv' → logprob: -12.000024795532227
    5. ' inv' → logprob: -13.625024795532227
    6. '.inv' → logprob: -14.500024795532227
    7. '```' → logprob: -14.500024795532227
    8. 'def' → logprob: -15.000024795532227
    9. '
' → logprob: -15.250024795532227
    10. 'INV' → logprob: -15.250024795532227

Token 384: 'def' (ID: 1314)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.650518920039758e-06
    2. 'def' → logprob: -13.875003814697266
    3. 'ifact' → logprob: -13.875003814697266
    4. ' inv' → logprob: -14.125003814697266
    5. '_inv' → logprob: -14.375003814697266
    6. 'inverse' → logprob: -14.875003814697266
    7. 'fact' → logprob: -16.750003814697266
    8. 'INV' → logprob: -17.500003814697266
    9. '.inv' → logprob: -17.750003814697266
    10. 'Inv' → logprob: -18.375003814697266

Token 385: ' inv' (ID: 1827)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09545168280601501
    2. 'inv' → logprob: -3.095451593399048
    3. ' mod' → logprob: -3.345451593399048
    4. 'pow' → logprob: -4.595451831817627
    5. 'fact' → logprob: -7.970451831817627
    6. ' inv' → logprob: -9.845451354980469
    7. 'comb' → logprob: -11.470451354980469
    8. 'def' → logprob: -11.595451354980469
    9. ' pow' → logprob: -12.345451354980469
    10. ' fact' → logprob: -12.470451354980469

Token 386: '(a' (ID: 6271)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.38864192366600037
    2. '(x' → logprob: -1.5136419534683228
    3. 'mod' → logprob: -3.638641834259033
    4. '_mod' → logprob: -4.138641834259033
    5. '_fact' → logprob: -4.263641834259033
    6. 'factor' → logprob: -5.013641834259033
    7. 'fact' → logprob: -5.138641834259033
    8. '(n' → logprob: -5.138641834259033
    9. '_inverse' → logprob: -5.513641834259033
    10. '_pow' → logprob: -5.638641834259033

Token 387: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04702795669436455
    2. '):' → logprob: -3.797028064727783
    3. '):
' → logprob: -4.672028064727783
    4. 'a' → logprob: -4.922028064727783
    5. '(a' → logprob: -5.297028064727783
    6. ',a' → logprob: -6.922028064727783
    7. ')' → logprob: -8.297027587890625
    8. ' ,' → logprob: -8.797027587890625
    9. 'def' → logprob: -9.047027587890625
    10. ':' → logprob: -9.172027587890625

Token 388: '   ' (ID: 271)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5184518098831177
    2. '   ' → logprob: -1.3934518098831177
    3. 'return' → logprob: -2.643451690673828
    4. ' pow' → logprob: -3.268451690673828
    5. 'a' → logprob: -3.893451690673828
    6. '(pow' → logprob: -4.518451690673828
    7. ' return' → logprob: -4.893451690673828
    8. 'def' → logprob: -5.268451690673828
    9. ' a' → logprob: -6.393451690673828
    10. '(a' → logprob: -7.268451690673828

Token 389: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12885308265686035
    2. 'pow' → logprob: -2.1288530826568604
    3. '   ' → logprob: -6.503852844238281
    4. 'def' → logprob: -8.753852844238281
    5. ' return' → logprob: -9.128852844238281
    6. 'b' → logprob: -9.878852844238281
    7. 'x' → logprob: -10.253852844238281
    8. 'p' → logprob: -10.378852844238281
    9. ' pow' → logprob: -11.503852844238281
    10. '#' (adapté à ' #') → logprob: -11.503852844238281

Token 390: ' Ferm' (ID: 156422)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.007269040681421757
    2. 'return' → logprob: -5.007268905639648
    3. 'def' → logprob: -7.507268905639648
    4. ' pow' → logprob: -13.132268905639648
    5. 'x' → logprob: -14.632268905639648
    6. 'power' → logprob: -14.757268905639648
    7. '#' → logprob: -14.882268905639648
    8. '   ' → logprob: -15.007268905639648
    9. '(pow' → logprob: -15.132268905639648
    10. '_pow' → logprob: -15.257268905639648

Token 391: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.001742531661875546
    2. 't' → logprob: -6.751742362976074
    3. 'et' → logprob: -7.876742362976074
    4. 'é' → logprob: -9.626742362976074
    5. ''t' → logprob: -10.876742362976074
    6. 'ite' → logprob: -11.126742362976074
    7. 'te' → logprob: -11.251742362976074
    8. '+' → logprob: -11.626742362976074
    9. 'a' → logprob: -11.626742362976074
    10. '=' → logprob: -12.001742362976074

Token 392: ' inverse' (ID: 53743)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.028865128755569458
    2. '   ' → logprob: -5.278865337371826
    3. 'a' → logprob: -5.653865337371826
    4. '(a' → logprob: -5.778865337371826
    5. ''' → logprob: -5.903865337371826
    6. '_pow' → logprob: -5.903865337371826
    7. '(' → logprob: -6.278865337371826
    8. 'pow' → logprob: -6.403865337371826
    9. ' ' → logprob: -6.653865337371826
    10. ')' → logprob: -6.778865337371826

Token 393: ' modulo' (ID: 112372)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.012749903835356236
    2. '(' → logprob: -5.512749671936035
    3. ' =' → logprob: -5.762749671936035
    4. 'a' → logprob: -6.137749671936035
    5. '   ' → logprob: -6.887749671936035
    6. 'def' → logprob: -7.137749671936035
    7. '(pow' → logprob: -7.887749671936035
    8. '=' → logprob: -8.137749671936035
    9. '(i' → logprob: -9.137749671936035
    10. '```' → logprob: -9.262749671936035

Token 394: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.024073142558336258
    2. ' (' → logprob: -4.024073123931885
    3. '(' → logprob: -6.274073123931885
    4. 'def' → logprob: -6.649073123931885
    5. 'a' → logprob: -6.649073123931885
    6. '   ' → logprob: -7.149073123931885
    7. ' def' → logprob: -8.899073600769043
    8. '(pow' → logprob: -9.399073600769043
    9. ' a' → logprob: -9.524073600769043
    10. ' =' → logprob: -9.774073600769043

Token 395: ' MOD' (ID: 32868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21709179878234863
    2. 'return' → logprob: -1.9670917987823486
    3. '   ' → logprob: -2.9670917987823486
    4. ' return' → logprob: -6.3420915603637695
    5. 'MOD' → logprob: -6.3420915603637695
    6. ' def' → logprob: -8.84209156036377
    7. 'p' → logprob: -9.46709156036377
    8. 'pow' → logprob: -9.59209156036377
    9. '	return' → logprob: -12.21709156036377
    10. 'b' → logprob: -12.59209156036377

Token 396: ' est' (ID: 893)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0929904580116272
    2. ' -' → logprob: -2.5929903984069824
    3. '=' → logprob: -4.842990398406982
    4. ')' → logprob: -6.342990398406982
    5. 'def' → logprob: -6.342990398406982
    6. '   ' → logprob: -7.217990398406982
    7. ' =' → logprob: -7.467990398406982
    8. ' is' → logprob: -7.592990398406982
    9. ':' → logprob: -8.71799087524414
    10. '
' → logprob: -8.84299087524414

Token 397: ' premier' (ID: 15506)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13260091841220856
    2. 'a' → logprob: -2.382601022720337
    3. 'prime' → logprob: -4.007600784301758
    4. ' ' → logprob: -5.132600784301758
    5. ' a' → logprob: -5.882600784301758
    6. ' prime' → logprob: -6.257600784301758
    7. '100' → logprob: -6.507600784301758
    8. '   ' → logprob: -7.882600784301758
    9. '=' → logprob: -8.132600784301758
    10. '1' → logprob: -8.257600784301758

Token 398: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19326843321323395
    2. '(a' → logprob: -1.8182684183120728
    3. ':' → logprob: -4.443268299102783
    4. ':
' → logprob: -7.943268299102783
    5. 'a' → logprob: -8.193268775939941
    6. '(' → logprob: -8.318268775939941
    7. 'def' → logprob: -8.568268775939941
    8. '):' → logprob: -8.818268775939941
    9. '=' → logprob: -9.568268775939941
    10. ' (' → logprob: -9.693268775939941

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15595000982284546
    2. ':' → logprob: -2.0309500694274902
    3. ':return' → logprob: -5.78095006942749
    4. '(a' → logprob: -5.90595006942749
    5. '):' → logprob: -6.03095006942749
    6. ':
' → logprob: -6.28095006942749
    7. ' return' → logprob: -7.53095006942749
    8. '(' → logprob: -7.78095006942749
    9. '):
' → logprob: -8.280949592590332
    10. 'return' → logprob: -8.280949592590332

Token 400: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0021317063365131617
    2. '   ' → logprob: -6.252131938934326
    3. ' return' → logprob: -9.002131462097168
    4. 'pow' → logprob: -9.502131462097168
    5. '	return' → logprob: -12.752131462097168
    6. 'def' → logprob: -13.002131462097168
    7. '
' → logprob: -17.752132415771484
    8. '```' → logprob: -18.377132415771484
    9. '    ' → logprob: -18.502132415771484
    10. 'b' → logprob: -18.752132415771484

Token 401: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.517272024415433e-05
    2. ' pow' → logprob: -9.500075340270996
    3. '(pow' → logprob: -15.375075340270996
    4. 'power' → logprob: -17.50007438659668
    5. '_pow' → logprob: -18.62507438659668
    6. 'Pow' → logprob: -21.87507438659668
    7. '.pow' → logprob: -21.87507438659668
    8. '   ' → logprob: -23.37507438659668
    9. 'p' → logprob: -23.87507438659668
    10. 'powers' → logprob: -23.87507438659668

Token 402: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031850787345319986
    2. '(' → logprob: -5.753185272216797
    3. 'a' → logprob: -12.253185272216797
    4. '(
' → logprob: -12.878185272216797
    5. '(

' → logprob: -19.878185272216797
    6. ')a' → logprob: -20.128185272216797
    7. '```' → logprob: -20.128185272216797
    8. ')' → logprob: -20.503185272216797
    9. '(A' → logprob: -20.878185272216797
    10. 'def' → logprob: -20.878185272216797

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',
' → logprob: -14.500022888183594
    4. '   ' → logprob: -15.500022888183594
    5. ',-' → logprob: -15.750022888183594
    6. ')' → logprob: -16.125022888183594
    7. 'a' → logprob: -16.250022888183594
    8. ',M' → logprob: -16.250022888183594
    9. 'MOD' → logprob: -16.250022888183594
    10. '-' → logprob: -16.375022888183594

Token 404: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.537868779967539e-06
    2. ' MOD' → logprob: -11.750008583068848
    3. '_MOD' → logprob: -14.500008583068848
    4. '.MOD' → logprob: -15.875008583068848
    5. '```' → logprob: -20.00000762939453
    6. '(Mod' → logprob: -20.12500762939453
    7. 'mod' → logprob: -20.50000762939453
    8. 'Mod' → logprob: -20.62500762939453
    9. '10' → logprob: -20.62500762939453
    10. 'MO' → logprob: -21.25000762939453

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. ' -' → logprob: -9.7500581741333
    3. '−' → logprob: -20.500059127807617
    4. '–' → logprob: -21.000059127807617
    5. '```' → logprob: -21.500059127807617
    6. '   ' → logprob: -23.500059127807617
    7. '2' → logprob: -23.500059127807617
    8. ' ' → logprob: -23.625059127807617
    9. '()-' → logprob: -24.250059127807617
    10. ')' → logprob: -24.250059127807617

Token 406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -17.125
    4. '-' → logprob: -17.25
    5. '
' → logprob: -18.5625
    6. '۲' → logprob: -18.6875
    7. '

' → logprob: -18.8125
    8. '   ' → logprob: -19.75
    9. '２' → logprob: -19.875
    10. '3' → logprob: -19.9375

Token 407: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.25
    3. '```' → logprob: -16.125
    4. ' ' → logprob: -16.875
    5. '
' → logprob: -18.0
    6. '

' → logprob: -18.5
    7. '۲' → logprob: -18.6875
    8. '3' → logprob: -18.9375
    9. '২' → logprob: -19.375
    10. '4' → logprob: -19.6875

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013576137134805322
    2. ')' → logprob: -6.626357555389404
    3. ' ,' → logprob: -10.376358032226562
    4. '```' → logprob: -16.126358032226562
    5. ',
' → logprob: -16.376358032226562
    6. '   ' → logprob: -16.376358032226562
    7. ' )' → logprob: -17.001358032226562
    8. '}' → logprob: -17.376358032226562
    9. ' ' → logprob: -17.376358032226562
    10. '-' → logprob: -17.626358032226562

Token 409: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033546582562848926
    2. ' MOD' → logprob: -8.000335693359375
    3. ')' → logprob: -17.125335693359375
    4. '   ' → logprob: -19.250335693359375
    5. '_MOD' → logprob: -19.375335693359375
    6. ' ' → logprob: -20.625335693359375
    7. 'MO' → logprob: -21.250335693359375
    8. '.MOD' → logprob: -21.625335693359375
    9. '10' → logprob: -21.750335693359375
    10. 'Mod' → logprob: -22.500335693359375

Token 410: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.875
    3. ' )' → logprob: -16.875
    4. '   ' → logprob: -19.125
    5. '),' → logprob: -19.25
    6. ')return' → logprob: -19.375
    7. ')#' → logprob: -20.125
    8. ')

' → logprob: -20.25
    9. ')`' → logprob: -20.25
    10. '))' → logprob: -20.25

Token 411: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004277484491467476
    2. 'fact' → logprob: -5.50427770614624
    3. 'ifact' → logprob: -9.129277229309082
    4. 'def' → logprob: -9.379277229309082
    5. '_inv' → logprob: -12.629277229309082
    6. ' inv' → logprob: -13.754277229309082
    7. '```' → logprob: -14.254277229309082
    8. 'inverse' → logprob: -14.879277229309082
    9. 'INV' → logprob: -15.004277229309082
    10. '_fact' → logprob: -15.879277229309082

Token 412: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.7729589939117432
    2. '_' → logprob: -0.8979589939117432
    3. '_factor' → logprob: -2.272958993911743
    4. '_=' → logprob: -5.022958755493164
    5. '_f' → logprob: -5.272958755493164
    6. 'fact' → logprob: -5.397958755493164
    7. '(' → logprob: -5.772958755493164
    8. '_fac' → logprob: -5.772958755493164
    9. '_val' → logprob: -6.397958755493164
    10. '=' → logprob: -6.522958755493164

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. '_' → logprob: -13.94314956665039
    4. '[' → logprob: -13.94314956665039
    5. 's' → logprob: -14.94314956665039
    6. '_=' → logprob: -15.31814956665039
    7. '=[' → logprob: -16.06814956665039
    8. '＝' → logprob: -16.19314956665039
    9. '   ' → logprob: -16.69314956665039
    10. ' ' → logprob: -17.56814956665039

Token 414: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005233763717114925
    2. ' [' → logprob: -5.2552337646484375
    3. '[len' → logprob: -17.505233764648438
    4. ' ' → logprob: -17.630233764648438
    5. '   ' → logprob: -18.005233764648438
    6. 'fact' → logprob: -19.130233764648438
    7. '[f' → logprob: -19.630233764648438
    8. '[i' → logprob: -20.380233764648438
    9. '[n' → logprob: -20.380233764648438
    10. '=[' → logprob: -20.755233764648438

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '   ' → logprob: -22.5
    4. '
' → logprob: -22.5
    5. 'fact' → logprob: -22.5
    6. '[' → logprob: -23.375
    7. '```' → logprob: -23.375
    8. ']' → logprob: -23.375
    9. '

' → logprob: -23.875
    10. '...' → logprob: -24.25

Token 416: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006273718317970634
    2. '*' → logprob: -7.500627517700195
    3. ' *' → logprob: -10.000627517700195
    4. ']*' → logprob: -11.375627517700195
    5. ',' → logprob: -11.875627517700195
    6. ')' → logprob: -12.125627517700195
    7. ']*(' → logprob: -12.875627517700195
    8. ' ]' → logprob: -13.875627517700195
    9. ' for' → logprob: -14.500627517700195
    10. '*(' → logprob: -14.875627517700195

Token 417: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3992723524570465
    2. '*' → logprob: -1.1492723226547241
    3. '*(' → logprob: -4.399272441864014
    4. ')' → logprob: -11.649271965026855
    5. ']' → logprob: -11.899271965026855
    6. '(' → logprob: -12.149271965026855
    7. ']*(' → logprob: -12.774271965026855
    8. '[' → logprob: -13.274271965026855
    9. ' *(' → logprob: -13.399271965026855
    10. 'for' → logprob: -13.649271965026855

Token 418: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.981667537620524e-06
    2. 'max' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.125001907348633
    4. '[max' → logprob: -15.125001907348633
    5. '(' → logprob: -16.250001907348633
    6. ' max' → logprob: -18.875001907348633
    7. '(mod' → logprob: -19.000001907348633
    8. '((' → logprob: -19.500001907348633
    9. ',max' → logprob: -20.125001907348633
    10. '=max' → logprob: -20.250001907348633

Token 419: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020520923135336488
    2. '(max' → logprob: -8.500205039978027
    3. ' max' → logprob: -13.625205039978027
    4. '[max' → logprob: -14.625205039978027
    5. '	max' → logprob: -19.375205993652344
    6. ',max' → logprob: -20.125205993652344
    7. '
' → logprob: -20.250205993652344
    8. '=max' → logprob: -20.375205993652344
    9. ':max' → logprob: -20.750205993652344
    10. '   ' → logprob: -20.750205993652344

Token 420: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.088346359931165e-07
    2. 'val' → logprob: -14.000000953674316
    3. '_' → logprob: -16.875
    4. '+' → logprob: -18.75
    5. '_VAL' → logprob: -19.375
    6. 'Val' → logprob: -20.875
    7. '[val' → logprob: -21.625
    8. '	val' → logprob: -21.75
    9. '   ' → logprob: -21.75
    10. '[' → logprob: -21.875

Token 421: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006715370807796717
    2. ' +' → logprob: -5.006715297698975
    3. '+
' → logprob: -18.006715774536133
    4. '＋' → logprob: -19.131715774536133
    5. '[' → logprob: -19.756715774536133
    6. '()+' → logprob: -20.506715774536133
    7. '
' → logprob: -21.131715774536133
    8. ' ' → logprob: -21.256715774536133
    9. '```' → logprob: -21.381715774536133
    10. ' ' → logprob: -21.381715774536133

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.56250762939453
    4. '{' → logprob: -18.68750762939453
    5. '   ' → logprob: -18.81250762939453
    6. '10' → logprob: -18.81250762939453
    7. '+' → logprob: -18.93750762939453
    8. '0' → logprob: -19.06250762939453
    9. '(' → logprob: -19.06250762939453
    10. '=' → logprob: -19.43750762939453

Token 423: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008652626536786556
    2. ')' → logprob: -4.758652687072754
    3. ']
' → logprob: -10.758652687072754
    4. ')
' → logprob: -11.508652687072754
    5. ')]
' → logprob: -12.758652687072754
    6. ')

' → logprob: -13.383652687072754
    7. ']' → logprob: -13.758652687072754
    8. ')]' → logprob: -14.383652687072754
    9. ' )
' → logprob: -14.883652687072754
    10. ')`
' → logprob: -15.133652687072754

Token 424: 'inv' (ID: 31086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00671809446066618
    2. 'inv' → logprob: -5.006718158721924
    3. ' for' → logprob: -13.006717681884766
    4. '```' → logprob: -14.881717681884766
    5. '_inv' → logprob: -16.256717681884766
    6. '(inv' → logprob: -17.881717681884766
    7. 'inverse' → logprob: -18.506717681884766
    8. 'i' → logprob: -19.006717681884766
    9. 'in' → logprob: -19.131717681884766
    10. '	for' → logprob: -19.256717681884766

Token 425: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.0002458430244587362
    2. '_fac' → logprob: -8.375246047973633
    3. '_factor' → logprob: -12.125246047973633
    4. '_f' → logprob: -12.625246047973633
    5. '_' → logprob: -13.125246047973633
    6. '```' → logprob: -14.500246047973633
    7. 'fact' → logprob: -14.875246047973633
    8. '_FACT' → logprob: -14.875246047973633
    9. '_inv' → logprob: -15.000246047973633
    10. '[_' → logprob: -15.125246047973633

Token 426: '[max' (ID: 84690)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00465119956061244
    2. '=' → logprob: -5.379651069641113
    3. '=[' → logprob: -11.004651069641113
    4. ' =' → logprob: -11.754651069641113
    5. '[-' → logprob: -13.004651069641113
    6. ' [' → logprob: -13.379651069641113
    7. '```' → logprob: -14.254651069641113
    8. '[:' → logprob: -14.754651069641113
    9. ' =[' → logprob: -14.879651069641113
    10. '[len' → logprob: -14.879651069641113

Token 427: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.896309739408025e-07
    2. 'val' → logprob: -14.375000953674316
    3. '_fact' → logprob: -16.0
    4. '_' → logprob: -17.5
    5. '_VAL' → logprob: -18.375
    6. 'Val' → logprob: -18.625
    7. ']_' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. '+' → logprob: -20.5
    10. '	val' → logprob: -20.625

Token 428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.707997428951785e-05
    2. ']=' → logprob: -9.625077247619629
    3. '=' → logprob: -11.750077247619629
    4. ' ]' → logprob: -13.500077247619629
    5. '-' → logprob: -14.375077247619629
    6. ']
' → logprob: -14.750077247619629
    7. ')' → logprob: -15.250077247619629
    8. '   ' → logprob: -15.500077247619629
    9. '
' → logprob: -16.875076293945312
    10. '+' → logprob: -17.000076293945312

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -17.500911712646484
    4. '=

' → logprob: -18.250911712646484
    5. '＝' → logprob: -18.625911712646484
    6. '.=' → logprob: -19.875911712646484
    7. '=}' → logprob: -20.875911712646484
    8. '=int' → logprob: -21.125911712646484
    9. '_=' → logprob: -21.125911712646484
    10. ')=' → logprob: -21.375911712646484

Token 430: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -5.319370302458992e-06
    2. 'pow' → logprob: -12.500005722045898
    3. ' inv' → logprob: -13.375005722045898
    4. '(inv' → logprob: -17.0000057220459
    5. 'inf' → logprob: -20.1250057220459
    6. 'in' → logprob: -20.8750057220459
    7. '
' → logprob: -21.2500057220459
    8. '```' → logprob: -21.3750057220459
    9. 'inverse' → logprob: -21.5000057220459
    10. '.inv' → logprob: -21.6250057220459

Token 431: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.848420551046729e-05
    2. '_fact' → logprob: -10.2500581741333
    3. 'fact' → logprob: -10.7500581741333
    4. '(' → logprob: -13.6250581741333
    5. 'Fact' → logprob: -15.1250581741333
    6. '	f' → logprob: -17.375059127807617
    7. '.fact' → logprob: -18.250059127807617
    8. '(
' → logprob: -18.500059127807617
    9. '_FACT' → logprob: -19.000059127807617
    10. ' fact' → logprob: -19.125059127807617

Token 432: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -3.810037742368877e-05
    2. '(act' → logprob: -10.375038146972656
    3. 'fact' → logprob: -12.125038146972656
    4. '(f' → logprob: -14.125038146972656
    5. '
' → logprob: -16.000038146972656
    6. '(' → logprob: -16.375038146972656
    7. '#' → logprob: -16.375038146972656
    8. 'ct' → logprob: -16.500038146972656
    9. '_fact' → logprob: -16.875038146972656
    10. 'a' → logprob: -17.000038146972656

Token 433: '[max' (ID: 84690)
  Prédit: '[max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -2.339278580620885e-06
    2. 'max' → logprob: -13.000001907348633
    3. '[-' → logprob: -16.875001907348633
    4. '(max' → logprob: -18.375001907348633
    5. '[' → logprob: -19.000001907348633
    6. '=max' → logprob: -19.875001907348633
    7. ',max' → logprob: -20.500001907348633
    8. ' max' → logprob: -20.500001907348633
    9. '[MAX' → logprob: -20.875001907348633
    10. '[min' → logprob: -20.875001907348633

Token 434: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0003380846756044775
    2. 'val' → logprob: -8.000338554382324
    3. '[val' → logprob: -14.125338554382324
    4. '_' → logprob: -14.250338554382324
    5. ']' → logprob: -14.875338554382324
    6. '	val' → logprob: -15.000338554382324
    7. '_VAL' → logprob: -15.500338554382324
    8. 'Val' → logprob: -15.875338554382324
    9. '_fact' → logprob: -16.750337600708008
    10. '[' → logprob: -16.875337600708008

Token 435: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.735893965815194e-05
    2. '])
' → logprob: -11.125017166137695
    3. ' ])' → logprob: -13.375017166137695
    4. ']' → logprob: -15.125017166137695
    5. ')' → logprob: -15.375017166137695
    6. '])

' → logprob: -15.875017166137695
    7. ']);' → logprob: -16.125017166137695
    8. '[' → logprob: -16.625017166137695
    9. '])
' → logprob: -16.875017166137695
    10. ''])' → logprob: -17.750017166137695

Token 436: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -13.25000286102295
    3. ' for' → logprob: -14.00000286102295
    4. 'i' → logprob: -15.25000286102295
    5. '``' → logprob: -19.000003814697266
    6. '
' → logprob: -20.125003814697266
    7. '	for' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.375003814697266
    9. '#' → logprob: -22.875003814697266
    10. ')' → logprob: -23.125003814697266

Token 437: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132617771625519
    2. ' i' → logprob: -1.3132617473602295
    3. '	i' → logprob: -16.438261032104492
    4. ' ' → logprob: -17.188261032104492
    5. '   ' → logprob: -19.438261032104492
    6. '(i' → logprob: -19.688261032104492
    7. '  ' → logprob: -20.313261032104492
    8. '[i' → logprob: -21.063261032104492
    9. '_i' → logprob: -21.188261032104492
    10. ''i' → logprob: -22.188261032104492

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023002564907074
    2. 'in' → logprob: -1.910230040550232
    3. 'max' → logprob: -12.785229682922363
    4. ' ' → logprob: -13.910229682922363
    5. 'range' → logprob: -14.035229682922363
    6. ' i' → logprob: -15.035229682922363
    7. '   ' → logprob: -16.03523063659668
    8. ' max' → logprob: -16.16023063659668
    9. '[max' → logprob: -16.16023063659668
    10. ' range' → logprob: -16.28523063659668

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005908019375056028
    2. ' range' → logprob: -7.750590801239014
    3. 'max' → logprob: -8.750591278076172
    4. '(range' → logprob: -13.625591278076172
    5. '(max' → logprob: -14.625591278076172
    6. ' max' → logprob: -17.000591278076172
    7. '   ' → logprob: -17.125591278076172
    8. 'reverse' → logprob: -17.625591278076172
    9. '[max' → logprob: -17.875591278076172
    10. '	range' → logprob: -18.000591278076172

Token 440: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.054500666621607e-06
    2. 'max' → logprob: -12.87500286102295
    3. '(' → logprob: -15.50000286102295
    4. '(range' → logprob: -15.62500286102295
    5. ' (' → logprob: -17.375003814697266
    6. '[max' → logprob: -17.500003814697266
    7. ' max' → logprob: -18.000003814697266
    8. ',max' → logprob: -18.000003814697266
    9. '=max' → logprob: -18.875003814697266
    10. 'range' → logprob: -19.000003814697266

Token 441: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.195421494543552e-05
    2. '(max' → logprob: -9.75007152557373
    3. 'val' → logprob: -12.00007152557373
    4. '_fact' → logprob: -12.62507152557373
    5. '_max' → logprob: -13.00007152557373
    6. '-' → logprob: -13.75007152557373
    7. 'Val' → logprob: -15.25007152557373
    8. 'max' → logprob: -15.50007152557373
    9. '(' → logprob: -16.375072479248047
    10. '_factor' → logprob: -16.625072479248047

Token 442: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019291093340143561
    2. ' -' → logprob: -6.25192928314209
    3. '(max' → logprob: -15.62692928314209
    4. ',' → logprob: -16.251928329467773
    5. 'max' → logprob: -16.376928329467773
    6. '-max' → logprob: -16.376928329467773
    7. '[max' → logprob: -16.751928329467773
    8. ',max' → logprob: -18.751928329467773
    9. '()-' → logprob: -18.876928329467773
    10. ' max' → logprob: -19.376928329467773

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.125006675720215
    4. '   ' → logprob: -16.87500762939453
    5. ',' → logprob: -17.00000762939453
    6. ' -' → logprob: -18.00000762939453
    7. '-' → logprob: -19.25000762939453
    8. ' ,' → logprob: -19.25000762939453
    9. '```' → logprob: -19.37500762939453
    10. '
' → logprob: -19.37500762939453

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030726639088243246
    2. ' ,' → logprob: -5.878072738647461
    3. ',-' → logprob: -8.503072738647461
    4. ',i' → logprob: -10.628072738647461
    5. '   ' → logprob: -11.378072738647461
    6. '-' → logprob: -11.378072738647461
    7. ',
' → logprob: -12.378072738647461
    8. ' -' → logprob: -13.253072738647461
    9. '0' → logprob: -13.378072738647461
    10. '_,' → logprob: -13.503072738647461

Token 445: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012654215970542282
    2. ' -' → logprob: -9.000126838684082
    3. '0' → logprob: -12.750126838684082
    4. '   ' → logprob: -16.250125885009766
    5. '-i' → logprob: -16.375125885009766
    6. ' ' → logprob: -17.625125885009766
    7. '  ' → logprob: -19.625125885009766
    8. '	' → logprob: -19.750125885009766
    9. '−' → logprob: -20.625125885009766
    10. '...' → logprob: -21.000125885009766

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -20.25
    5. ' -' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '-' → logprob: -21.625
    8. '2' → logprob: -21.75
    9. '0' → logprob: -22.125
    10. '``' → logprob: -22.3125

Token 447: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008049834286794066
    2. ' -' → logprob: -7.125804901123047
    3. '   ' → logprob: -14.500804901123047
    4. '  ' → logprob: -18.125804901123047
    5. ',-' → logprob: -18.500804901123047
    6. ' ' → logprob: -18.875804901123047
    7. '−' → logprob: -19.250804901123047
    8. '-i' → logprob: -19.500804901123047
    9. '```' → logprob: -19.625804901123047
    10. '    
' → logprob: -20.375804901123047

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '   ' → logprob: -19.75
    4. '-' → logprob: -20.5
    5. '
' → logprob: -21.375
    6. '```' → logprob: -21.625
    7. ',' → logprob: -21.75
    8. ')' → logprob: -21.875
    9. ' -' → logprob: -22.5
    10. '):
' → logprob: -22.75

Token 450: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3962622582912445
    2. ',' → logprob: -1.771262288093567
    3. '):
' → logprob: -2.6462621688842773
    4. ',-' → logprob: -2.6462621688842773
    5. '):' → logprob: -5.271262168884277
    6. '   ' → logprob: -5.396262168884277
    7. ' -' → logprob: -5.396262168884277
    8. '):-' → logprob: -7.896262168884277
    9. ':' → logprob: -8.271262168884277
    10. '):
' → logprob: -9.896262168884277

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027444821898825467
    2. 'inv' → logprob: -8.625274658203125
    3. ' inv' → logprob: -9.750274658203125
    4. '	in' → logprob: -11.125274658203125
    5. '```' → logprob: -11.125274658203125
    6. '(inv' → logprob: -12.625274658203125
    7. '    
' → logprob: -13.250274658203125
    8. '   ' → logprob: -14.125274658203125
    9. '_inv' → logprob: -14.750274658203125
    10. '
' → logprob: -15.125274658203125

Token 452: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.043504007160663605
    2. '   ' → logprob: -3.543503999710083
    3. ' inv' → logprob: -4.293504238128662
    4. '(inv' → logprob: -14.043503761291504
    5. ' ' → logprob: -14.668503761291504
    6. '```' → logprob: -14.918503761291504
    7. '  ' → logprob: -15.168503761291504
    8. '_inv' → logprob: -15.418503761291504
    9. '.inv' → logprob: -16.41850471496582
    10. '    
' → logprob: -16.79350471496582

Token 453: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -6.034592388459714e-06
    2. '_inv' → logprob: -12.375005722045898
    3. '_fac' → logprob: -14.125005722045898
    4. '_factor' → logprob: -14.625005722045898
    5. 'fact' → logprob: -14.875005722045898
    6. '[i' → logprob: -16.1250057220459
    7. '_' → logprob: -16.6250057220459
    8. '_FACT' → logprob: -17.8750057220459
    9. '_f' → logprob: -18.2500057220459
    10. '```' → logprob: -18.5000057220459

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -16.375001907348633
    4. '[I' → logprob: -17.500001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '
' → logprob: -18.250001907348633
    7. '=' → logprob: -18.500001907348633
    8. '```' → logprob: -18.625001907348633
    9. '\[' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.625001907348633

Token 455: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01960867829620838
    2. ']' → logprob: -4.519608497619629
    3. ' =' → logprob: -4.769608497619629
    4. ']=' → logprob: -10.144608497619629
    5. ')' → logprob: -14.144608497619629
    6. '=
' → logprob: -14.894608497619629
    7. '   ' → logprob: -15.394608497619629
    8. '=i' → logprob: -15.894608497619629
    9. ' ]' → logprob: -16.769609451293945
    10. ')=' → logprob: -16.894609451293945

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002614550176076591
    2. ' =' → logprob: -8.250261306762695
    3. '=
' → logprob: -15.875261306762695
    4. '=

' → logprob: -19.250261306762695
    5. '=i' → logprob: -20.625261306762695
    6. '   ' → logprob: -21.125261306762695
    7. '＝' → logprob: -21.500261306762695
    8. '[' → logprob: -22.375261306762695
    9. '```' → logprob: -22.625261306762695
    10. ' =
' → logprob: -22.625261306762695

Token 457: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.048713743686676025
    2. '(inv' → logprob: -3.0487136840820312
    3. ' inv' → logprob: -9.048713684082031
    4. '(in' → logprob: -11.923713684082031
    5. ' (' → logprob: -13.548713684082031
    6. 'in' → logprob: -14.923713684082031
    7. '(' → logprob: -15.548713684082031
    8. '.inv' → logprob: -15.798713684082031
    9. '_inv' → logprob: -16.17371368408203
    10. '   ' → logprob: -16.42371368408203

Token 458: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -1.9743012671824545e-05
    2. 'fact' → logprob: -10.875020027160645
    3. '_fac' → logprob: -14.750020027160645
    4. '[i' → logprob: -15.750020027160645
    5. '_factor' → logprob: -16.250019073486328
    6. 'Fact' → logprob: -16.375019073486328
    7. '(i' → logprob: -18.250019073486328
    8. ' fact' → logprob: -18.625019073486328
    9. '(f' → logprob: -18.625019073486328
    10. '_FACT' → logprob: -19.125019073486328

Token 459: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. 'i' → logprob: -17.625
    4. '{i' → logprob: -18.0
    5. ' [' → logprob: -19.875
    6. '(i' → logprob: -20.125
    7. '[
' → logprob: -20.25
    8. '[I' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. '
' → logprob: -21.125

Token 460: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005238856188952923
    2. '+' → logprob: -5.255239009857178
    3. '[' → logprob: -12.88023853302002
    4. ' +' → logprob: -13.38023853302002
    5. '+i' → logprob: -14.63023853302002
    6. ' [' → logprob: -16.005239486694336
    7. '[
' → logprob: -16.130239486694336
    8. '[I' → logprob: -16.380239486694336
    9. 'i' → logprob: -16.630239486694336
    10. '   ' → logprob: -17.380239486694336

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.0
    5. '
' → logprob: -21.25
    6. '  ' → logprob: -21.25
    7. '<|end|>' → logprob: -21.5
    8. '১' → logprob: -22.5
    9. 'i' → logprob: -22.9375
    10. '१' → logprob: -23.125

Token 462: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5188482999801636
    2. ' *' → logprob: -1.6438482999801636
    3. ']' → logprob: -1.7688482999801636
    4. ')' → logprob: -3.393848419189453
    5. '   ' → logprob: -5.018848419189453
    6. '*i' → logprob: -8.143848419189453
    7. ']*' → logprob: -8.518848419189453
    8. '}' → logprob: -9.143848419189453
    9. ' ' → logprob: -9.518848419189453
    10. ')*' → logprob: -9.643848419189453

Token 463: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00873630028218031
    2. ' *' → logprob: -4.7587361335754395
    3. '*(' → logprob: -9.508736610412598
    4. '*i' → logprob: -10.258736610412598
    5. '   ' → logprob: -11.508736610412598
    6. '*object' → logprob: -14.008736610412598
    7. ' ' → logprob: -15.008736610412598
    8. '**' → logprob: -16.00873565673828
    9. '*f' → logprob: -16.00873565673828
    10. '=' → logprob: -16.13373565673828

Token 464: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.480199954239652e-05
    2. ' (' → logprob: -10.250064849853516
    3. '(' → logprob: -10.500064849853516
    4. '(ii' → logprob: -14.000064849853516
    5. '(next' → logprob: -15.500064849853516
    6. '((' → logprob: -15.500064849853516
    7. '(I' → logprob: -15.625064849853516
    8. '[i' → logprob: -15.750064849853516
    9. '   ' → logprob: -16.625064849853516
    10. '(in' → logprob: -17.000064849853516

Token 465: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.250001907348633
    3. '(i' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '[i' → logprob: -18.250001907348633
    6. '{i' → logprob: -19.750001907348633
    7. '	i' → logprob: -19.875001907348633
    8. ' ' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.625001907348633
    10. ' (' → logprob: -22.250001907348633

Token 466: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031777136027812958
    2. ' +' → logprob: -5.753177642822266
    3. '+
' → logprob: -17.253177642822266
    4. '+i' → logprob: -17.628177642822266
    5. '[' → logprob: -18.753177642822266
    6. '＋' → logprob: -19.003177642822266
    7. '1' → logprob: -19.128177642822266
    8. ' +
' → logprob: -19.878177642822266
    9. ' ' → logprob: -20.503177642822266
    10. '```' → logprob: -20.878177642822266

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.750009536743164
    4. '```' → logprob: -20.750009536743164
    5. '۱' → logprob: -21.312509536743164
    6. '１' → logprob: -21.500009536743164
    7. '
' → logprob: -21.812509536743164
    8. '  ' → logprob: -22.062509536743164
    9. '১' → logprob: -22.250009536743164
    10. '2' → logprob: -22.375009536743164

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036765597760677338
    2. ')%' → logprob: -6.003676414489746
    3. ' )' → logprob: -6.753676414489746
    4. '%' → logprob: -10.628676414489746
    5. ' %' → logprob: -11.753676414489746
    6. ')
' → logprob: -14.503676414489746
    7. '%)' → logprob: -15.003676414489746
    8. '   ' → logprob: -15.128676414489746
    9. ']' → logprob: -16.378677368164062
    10. '```' → logprob: -16.753677368164062

Token 469: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008617408573627472
    2. ' %' → logprob: -4.758617401123047
    3. '%i' → logprob: -13.633617401123047
    4. ')%' → logprob: -14.133617401123047
    5. '%x' → logprob: -15.383617401123047
    6. '%A' → logprob: -15.633617401123047
    7. '%n' → logprob: -15.758617401123047
    8. '%B' → logprob: -16.383617401123047
    9. '%c' → logprob: -16.508617401123047
    10. ')' → logprob: -16.633617401123047

Token 470: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -20.250003814697266
    4. '.MOD' → logprob: -24.000003814697266
    5. '```' → logprob: -24.875003814697266
    6. 'MO' → logprob: -25.000003814697266
    7. 'Mod' → logprob: -26.625003814697266
    8. 'MODULE' → logprob: -27.125003814697266
    9. '
' → logprob: -27.250003814697266
    10. 'mod' → logprob: -27.500003814697266

Token 471: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051086343824863434
    2. ')' → logprob: -3.17608642578125
    3. '```' → logprob: -5.67608642578125
    4. '<|end|>' → logprob: -5.67608642578125
    5. ' def' → logprob: -8.05108642578125
    6. '
' → logprob: -8.05108642578125
    7. '#' → logprob: -8.67608642578125
    8. ']' → logprob: -9.80108642578125
    9. '[' → logprob: -9.92608642578125
    10. '``' → logprob: -10.05108642578125

Token 472: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.500001907348633
    3. '```' → logprob: -14.125001907348633
    4. ':def' → logprob: -16.875001907348633
    5. ')' → logprob: -17.500001907348633
    6. '``' → logprob: -17.875001907348633
    7. '-def' → logprob: -18.000001907348633
    8. '	def' → logprob: -18.750001907348633
    9. '#' → logprob: -18.750001907348633
    10. '(def' → logprob: -20.000001907348633

Token 473: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3168753981590271
    2. 'comb' → logprob: -1.5668754577636719
    3. 'C' → logprob: -3.316875457763672
    4. 'n' → logprob: -4.316875457763672
    5. ' n' → logprob: -4.566875457763672
    6. ' C' → logprob: -5.941875457763672
    7. 'cmb' → logprob: -9.316875457763672
    8. ' cmb' → logprob: -9.691875457763672
    9. ' combination' → logprob: -10.941875457763672
    10. 'combine' → logprob: -11.066875457763672

Token 474: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07750128209590912
    2. '(' → logprob: -2.7025012969970703
    3. '(a' → logprob: -5.57750129699707
    4. ' (' → logprob: -6.82750129699707
    5. '(i' → logprob: -7.57750129699707
    6. '(num' → logprob: -8.07750129699707
    7. '(x' → logprob: -8.57750129699707
    8. '(
' → logprob: -8.95250129699707
    9. '((' → logprob: -9.20250129699707
    10. '_' → logprob: -9.32750129699707

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011036602081730962
    2. ',n' → logprob: -6.87610387802124
    3. ' ,' → logprob: -10.001103401184082
    4. ',k' → logprob: -11.126103401184082
    5. ',a' → logprob: -13.376103401184082
    6. ',r' → logprob: -13.626103401184082
    7. ',t' → logprob: -13.876103401184082
    8. ',j' → logprob: -13.876103401184082
    9. ',int' → logprob: -14.251103401184082
    10. ',c' → logprob: -14.251103401184082

Token 476: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.056334201246500015
    2. 'n' → logprob: -3.0563342571258545
    3. 'r' → logprob: -4.931334018707275
    4. ' k' → logprob: -7.806334018707275
    5. ' n' → logprob: -9.931334495544434
    6. 'int' → logprob: -10.431334495544434
    7. ' r' → logprob: -11.931334495544434
    8. ',' → logprob: -12.556334495544434
    9. ',k' → logprob: -13.056334495544434
    10. 'def' → logprob: -13.931334495544434

Token 477: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10070423781871796
    2. '):
' → logprob: -2.3507041931152344
    3. ')' → logprob: -8.100704193115234
    4. '(n' → logprob: -9.975704193115234
    5. '):
' → logprob: -10.100704193115234
    6. ',' → logprob: -10.100704193115234
    7. '   ' → logprob: -10.600704193115234
    8. '):

' → logprob: -11.725704193115234
    9. ' ):' → logprob: -11.975704193115234
    10. ':' → logprob: -11.975704193115234

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013675171881914139
    2. ' return' → logprob: -5.513675212860107
    3. ' if' → logprob: -6.388675212860107
    4. '(r' → logprob: -6.513675212860107
    5. '(n' → logprob: -6.513675212860107
    6. '(' → logprob: -6.763675212860107
    7. 'r' → logprob: -6.888675212860107
    8. 'return' → logprob: -7.763675212860107
    9. '<|end|>' → logprob: -7.763675212860107
    10. ' r' → logprob: -8.13867473602295

Token 479: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.688905656337738
    2. 'if' (adapté à ' if') → logprob: -1.1889057159423828
    3. '   ' → logprob: -1.9389057159423828
    4. 'return' → logprob: -3.438905715942383
    5. ' return' → logprob: -4.063905715942383
    6. ' n' → logprob: -9.813905715942383
    7. 'n' → logprob: -9.938905715942383
    8. 'r' → logprob: -10.938905715942383
    9. ' r' → logprob: -11.188905715942383
    10. '    ' → logprob: -11.438905715942383

Token 480: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006716913543641567
    2. ' r' → logprob: -5.006716728210449
    3. 'n' → logprob: -13.63171672821045
    4. '   ' → logprob: -15.25671672821045
    5. ' n' → logprob: -16.756717681884766
    6. '0' → logprob: -17.881717681884766
    7. '	r' → logprob: -18.131717681884766
    8. ' ' → logprob: -18.631717681884766
    9. '```' → logprob: -19.381717681884766
    10. '(r' → logprob: -19.881717681884766

Token 481: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6936507821083069
    2. ' >' → logprob: -0.6936507821083069
    3. '<' → logprob: -8.06865119934082
    4. ' <' → logprob: -9.56865119934082
    5. ' ==' → logprob: -9.81865119934082
    6. '==' → logprob: -10.56865119934082
    7. '">' → logprob: -11.44365119934082
    8. ' >
' → logprob: -11.81865119934082
    9. ')' → logprob: -12.69365119934082
    10. ' ' → logprob: -12.69365119934082

Token 482: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040785204619169235
    2. ' n' → logprob: -5.504078388214111
    3. '	n' → logprob: -16.879077911376953
    4. ')n' → logprob: -21.254077911376953
    5. '_n' → logprob: -21.754077911376953
    6. ' ' → logprob: -21.879077911376953
    7. '[n' → logprob: -22.129077911376953
    8. '(n' → logprob: -22.254077911376953
    9. '   ' → logprob: -22.754077911376953
    10. '\' → logprob: -23.504077911376953

Token 483: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0012058269931003451
    2. ' and' → logprob: -7.126205921173096
    3. ':' → logprob: -9.126205444335938
    4. ' ' → logprob: -9.626205444335938
    5. 'or' → logprob: -9.876205444335938
    6. '<|end|>' → logprob: -9.876205444335938
    7. ')' → logprob: -10.126205444335938
    8. ':
' → logprob: -11.001205444335938
    9. ':return' → logprob: -11.251205444335938
    10. '   ' → logprob: -11.251205444335938

Token 484: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00043126524542458355
    2. ' r' → logprob: -7.750431060791016
    3. 'n' → logprob: -14.625431060791016
    4. '
' → logprob: -17.750431060791016
    5. '	r' → logprob: -18.375431060791016
    6. '   ' → logprob: -19.000431060791016
    7. ' ' → logprob: -19.250431060791016
    8. ' n' → logprob: -19.375431060791016
    9. '

' → logprob: -20.625431060791016
    10. '
' → logprob: -21.875431060791016

Token 485: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.35155344009399414
    2. '==' → logprob: -1.9765534400939941
    3. ' ==' → logprob: -2.601553440093994
    4. ' <' → logprob: -3.101553440093994
    5. ' or' → logprob: -3.476553440093994
    6. 'or' → logprob: -5.351553440093994
    7. '=' → logprob: -6.851553440093994
    8. '[' → logprob: -7.851553440093994
    9. '<n' → logprob: -8.414052963256836
    10. '   ' → logprob: -8.914052963256836

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '=' → logprob: -20.000024795532227
    4. '۰' → logprob: -20.000024795532227
    5. '```' → logprob: -20.375024795532227
    6. '
' → logprob: -22.750024795532227
    7. '   ' → logprob: -22.750024795532227
    8. 'def' → logprob: -22.875024795532227
    9. 'or' → logprob: -22.875024795532227
    10. ' or' → logprob: -23.187524795532227

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '=' → logprob: -19.0
    4. '۰' → logprob: -20.25
    5. 'r' → logprob: -20.625
    6. '```' → logprob: -20.875
    7. '
' → logprob: -21.125
    8. 'def' → logprob: -21.75
    9. '   ' → logprob: -21.875
    10. '1' → logprob: -22.25

Token 488: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0632120668888092
    2. ':
' → logprob: -3.1882121562957764
    3. ':return' → logprob: -4.313211917877197
    4. '   ' → logprob: -5.563211917877197
    5. ' or' → logprob: -5.938211917877197
    6. '):' → logprob: -10.563212394714355
    7. '):
' → logprob: -10.563212394714355
    8. ' return' → logprob: -10.688212394714355
    9. ')' → logprob: -10.688212394714355
    10. '       ' → logprob: -10.938212394714355

Token 489: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004609676077961922
    2. ' return' → logprob: -5.75460958480835
    3. 'return' → logprob: -6.75460958480835
    4. '       ' → logprob: -8.379610061645508
    5. '
' → logprob: -11.504610061645508
    6. '0' → logprob: -12.254610061645508
    7. ':return' → logprob: -12.379610061645508
    8. 'False' → logprob: -12.629610061645508
    9. '```' → logprob: -12.629610061645508
    10. '	return' → logprob: -13.254610061645508

Token 490: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1603551208972931
    2. '0' → logprob: -1.9103550910949707
    3. ' return' → logprob: -9.910355567932129
    4. '1' → logprob: -10.160355567932129
    5. '   ' → logprob: -10.285355567932129
    6. '
' → logprob: -12.410355567932129
    7. '6' → logprob: -13.410355567932129
    8. '```' → logprob: -14.035355567932129
    9. '7' → logprob: -15.035355567932129
    10. ':return' → logprob: -15.160355567932129

Token 491: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.750001907348633
    4. '
' → logprob: -23.375001907348633
    5. '```' → logprob: -24.500001907348633
    6. '۰' → logprob: -24.625001907348633
    7. ' ' → logprob: -24.750001907348633
    8. '  ' → logprob: -25.250001907348633
    9. '000' → logprob: -25.500001907348633
    10. '00' → logprob: -25.500001907348633

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -23.25
    4. '
' → logprob: -23.375
    5. '```' → logprob: -23.375
    6. '۰' → logprob: -23.5
    7. '000' → logprob: -23.75
    8. '00' → logprob: -24.125
    9. '"' → logprob: -25.75
    10. '  
' → logprob: -25.75

Token 493: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11362684518098831
    2. ':' → logprob: -2.7386269569396973
    3. ')' → logprob: -3.7386269569396973
    4. '<|end|>' → logprob: -4.988626956939697
    5. ':return' → logprob: -4.988626956939697
    6. '```' → logprob: -6.113626956939697
    7. ':
' → logprob: -7.363626956939697
    8. ' return' → logprob: -7.613626956939697
    9. '):' → logprob: -7.738626956939697
    10. '):
' → logprob: -8.113626480102539

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012123758206143975
    2. ':return' → logprob: -8.126212120056152
    3. ')' → logprob: -8.251212120056152
    4. ':' → logprob: -8.376212120056152
    5. '```' → logprob: -8.376212120056152
    6. ' return' → logprob: -9.501212120056152
    7. '<|end|>' → logprob: -9.876212120056152
    8. 'return' → logprob: -10.751212120056152
    9. '	return' → logprob: -11.876212120056152
    10. '  ' → logprob: -12.001212120056152

Token 495: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033832188695669174
    2. 'return' (adapté à ' return') → logprob: -3.53383207321167
    3. ' return' → logprob: -5.53383207321167
    4. '	return' → logprob: -9.658832550048828
    5. '```' → logprob: -11.283832550048828
    6. '{return' → logprob: -11.408832550048828
    7. '  ' → logprob: -11.658832550048828
    8. ':return' → logprob: -11.783832550048828
    9. ' ' → logprob: -12.158832550048828
    10. '    
' → logprob: -12.533832550048828

Token 496: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0017058902885764837
    2. ' fact' → logprob: -6.376706123352051
    3. '(f' → logprob: -13.12670612335205
    4. '_fact' → logprob: -14.12670612335205
    5. ' (' → logprob: -15.00170612335205
    6. 'factor' → logprob: -15.37670612335205
    7. '.fact' → logprob: -15.50170612335205
    8. 'Fact' → logprob: -16.251705169677734
    9. 'fac' → logprob: -17.376705169677734
    10. 'facts' → logprob: -17.501705169677734

Token 497: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: 0.0
    2. 'n' → logprob: -16.875
    3. '	n' → logprob: -21.25
    4. '[' → logprob: -21.5
    5. '```' → logprob: -21.5
    6. '[r' → logprob: -21.875
    7. '(n' → logprob: -22.25
    8. '\[' → logprob: -22.5
    9. '[i' → logprob: -23.0
    10. '[N' → logprob: -23.5

Token 498: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.2200749754119897e-06
    2. ']*' → logprob: -13.625001907348633
    3. '[n' → logprob: -15.000001907348633
    4. '[r' → logprob: -15.250001907348633
    5. ' ]' → logprob: -15.750001907348633
    6. '[i' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. ']
' → logprob: -18.375001907348633
    9. '[' → logprob: -18.875001907348633
    10. '```' → logprob: -20.875001907348633

Token 499: ' *' (ID: 425)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1201162189245224
    2. '[r' → logprob: -2.3701162338256836
    3. '[i' → logprob: -4.745116233825684
    4. ']' → logprob: -5.620116233825684
    5. '```' → logprob: -5.870116233825684
    6. '[' → logprob: -5.995116233825684
    7. '*' → logprob: -7.245116233825684
    8. '   ' → logprob: -7.620116233825684
    9. '
' → logprob: -8.620116233825684
    10. 'n' → logprob: -9.495116233825684

Token 500: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.518582762917504e-05
    2. '(inv' → logprob: -9.50008487701416
    3. ' inv' → logprob: -11.50008487701416
    4. '_inv' → logprob: -16.375085830688477
    5. 'inverse' → logprob: -19.375085830688477
    6. '.inv' → logprob: -20.125085830688477
    7. '```' → logprob: -20.250085830688477
    8. '   ' → logprob: -21.750085830688477
    9. 'in' → logprob: -21.875085830688477
    10. '(' → logprob: -22.125085830688477

Token 501: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -4.4894986785948277e-05
    2. '_fac' → logprob: -10.750044822692871
    3. 'fact' → logprob: -11.375044822692871
    4. '_factor' → logprob: -11.750044822692871
    5. '_' → logprob: -12.625044822692871
    6. '_inv' → logprob: -14.500044822692871
    7. '```' → logprob: -16.250045776367188
    8. '_f' → logprob: -16.500045776367188
    9. '_FACT' → logprob: -18.250045776367188
    10. '
' → logprob: -18.875045776367188

Token 502: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.246537173457909e-06
    2. '[n' → logprob: -12.625003814697266
    3. 'r' → logprob: -14.000003814697266
    4. '[' → logprob: -18.500003814697266
    5. '```' → logprob: -18.500003814697266
    6. '	r' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.500003814697266
    8. ' [' → logprob: -19.875003814697266
    9. '

' → logprob: -20.500003814697266
    10. '
' → logprob: -20.625003814697266

Token 503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.5358694731257856e-05
    2. ']%' → logprob: -10.375035285949707
    3. '%' → logprob: -12.625035285949707
    4. ']*' → logprob: -14.375035285949707
    5. ' ]' → logprob: -15.750035285949707
    6. '']' → logprob: -17.125036239624023
    7. '*' → logprob: -17.500036239624023
    8. '[' → logprob: -17.625036239624023
    9. '"]' → logprob: -17.750036239624023
    10. '```' → logprob: -17.875036239624023

Token 504: ' %' (ID: 1851)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.016295114532113075
    2. '[r' → logprob: -4.141294956207275
    3. '[i' → logprob: -9.141295433044434
    4. '%' → logprob: -9.766295433044434
    5. '[N' → logprob: -10.016295433044434
    6. '[' → logprob: -10.266295433044434
    7. '[num' → logprob: -12.766295433044434
    8. '[next' → logprob: -13.016295433044434
    9. '[max' → logprob: -13.516295433044434
    10. '%n' → logprob: -13.641295433044434

Token 505: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.75
    3. '_MOD' → logprob: -19.75
    4. '.MOD' → logprob: -21.25
    5. 'MO' → logprob: -23.0
    6. '10' → logprob: -24.25
    7. 'MD' → logprob: -24.875
    8. '```' → logprob: -25.125
    9. 'MODULE' → logprob: -25.375
    10. '   ' → logprob: -25.75

Token 506: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5145719051361084
    2. '*' → logprob: -1.2645719051361084
    3. '   ' → logprob: -2.1395719051361084
    4. ' ' → logprob: -7.0145721435546875
    5. '```' → logprob: -7.0145721435546875
    6. '  ' → logprob: -9.014572143554688
    7. ' ' → logprob: -10.014572143554688
    8. '`' → logprob: -10.389572143554688
    9. '%' → logprob: -10.639572143554688
    10. '	' → logprob: -10.764572143554688

Token 507: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.5048530030981055e-06
    2. '(inv' → logprob: -14.000001907348633
    3. ' inv' → logprob: -14.250001907348633
    4. '_inv' → logprob: -20.375001907348633
    5. '.inv' → logprob: -20.750001907348633
    6. 'fact' → logprob: -22.125001907348633
    7. 'inf' → logprob: -23.000001907348633
    8. '   ' → logprob: -23.125001907348633
    9. 'Inv' → logprob: -23.375001907348633
    10. '
' → logprob: -23.500001907348633

Token 508: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -1.2352385965641588e-05
    2. 'fact' → logprob: -11.375012397766113
    3. '_fac' → logprob: -14.625012397766113
    4. '_factor' → logprob: -15.125012397766113
    5. 'Fact' → logprob: -16.625011444091797
    6. '_FACT' → logprob: -16.750011444091797
    7. '_prob' → logprob: -18.750011444091797
    8. ' fact' → logprob: -19.125011444091797
    9. 'ifact' → logprob: -19.750011444091797
    10. '```' → logprob: -20.375011444091797

Token 509: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. '[r' → logprob: -14.875000953674316
    3. '[' → logprob: -15.375000953674316
    4. 'n' → logprob: -16.75
    5. ' [' → logprob: -18.875
    6. '   ' → logprob: -19.875
    7. '(n' → logprob: -19.875
    8. '[
' → logprob: -20.125
    9. '[c' → logprob: -21.0
    10. '```' → logprob: -21.0

Token 510: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.01451321505010128
    2. '-' → logprob: -4.76451301574707
    3. ' -' → logprob: -5.13951301574707
    4. 'r' → logprob: -11.26451301574707
    5. '[r' → logprob: -12.26451301574707
    6. '-R' → logprob: -13.63951301574707
    7. '−' → logprob: -14.26451301574707
    8. '-ra' → logprob: -15.26451301574707
    9. '-re' → logprob: -15.51451301574707
    10. '-
' → logprob: -15.63951301574707

Token 511: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.1782583391759545e-05
    2. ' ]' → logprob: -10.500031471252441
    3. ']%' → logprob: -12.500031471252441
    4. 'r' → logprob: -14.750031471252441
    5. '']' → logprob: -16.125032424926758
    6. 's' → logprob: -16.750032424926758
    7. '])' → logprob: -17.375032424926758
    8. '}' → logprob: -18.625032424926758
    9. '%' → logprob: -18.625032424926758
    10. '   ' → logprob: -18.875032424926758

Token 512: ' %' (ID: 1851)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.09272907674312592
    2. '[n' → logprob: -2.592729091644287
    3. '%' → logprob: -4.342729091644287
    4. ' %' → logprob: -7.842729091644287
    5. '[' → logprob: -8.092728614807129
    6. '%n' → logprob: -10.717728614807129
    7. '(r' → logprob: -11.842728614807129
    8. '[i' → logprob: -12.342728614807129
    9. '[%' → logprob: -13.092728614807129
    10. '[(' → logprob: -13.092728614807129

Token 513: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '_MOD' → logprob: -20.0
    4. '.MOD' → logprob: -23.0
    5. 'MO' → logprob: -24.625
    6. 'M' → logprob: -26.0
    7. 'Mod' → logprob: -26.0
    8. 'mod' → logprob: -26.25
    9. 'MODULE' → logprob: -26.5
    10. '   ' → logprob: -26.625

Token 514: '

' (ID: 279)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.23463040590286255
    2. 'total' → logprob: -2.2346303462982178
    3. 'result' → logprob: -2.9846303462982178
    4. 'print' → logprob: -3.1096303462982178
    5. 'answer' → logprob: -6.234630584716797
    6. 'res' → logprob: -6.359630584716797
    7. '```' → logprob: -6.359630584716797
    8. 'ans' → logprob: -7.734630584716797
    9. 'steps' → logprob: -8.359630584716797
    10. '#' → logprob: -8.484630584716797

Token 515: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0001584850688232109
    2. 'total' → logprob: -9.625158309936523
    3. 'print' → logprob: -10.375158309936523
    4. 'result' → logprob: -10.625158309936523
    5. '```' → logprob: -10.625158309936523
    6. 't' → logprob: -11.875158309936523
    7. ' T' → logprob: -13.000158309936523
    8. '\' → logprob: -14.500158309936523
    9. '#' → logprob: -14.625158309936523
    10. '``' → logprob: -14.875158309936523

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09298578649759293
    2. '=' → logprob: -2.4679858684539795
    3. ',' → logprob: -5.7179856300354
    4. ' ,' → logprob: -7.5929856300354
    5. ')' → logprob: -9.092986106872559
    6. '  ' → logprob: -9.842986106872559
    7. ' ' → logprob: -10.342986106872559
    8. ' )' → logprob: -11.342986106872559
    9. ' ==' → logprob: -11.342986106872559
    10. ' =
' → logprob: -11.592986106872559

Token 517: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.935296834039036e-06
    2. ' N' → logprob: -12.75000286102295
    3. '(N' → logprob: -20.375003814697266
    4. '   ' → logprob: -20.750003814697266
    5. ' ' → logprob: -20.750003814697266
    6. '	N' → logprob: -20.875003814697266
    7. '=N' → logprob: -23.125003814697266
    8. '  ' → logprob: -24.500003814697266
    9. '```' → logprob: -24.875003814697266
    10. '[N' → logprob: -25.375003814697266

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759419798851013
    2. ' +' → logprob: -0.8259419798851013
    3. ' plus' → logprob: -14.450942039489746
    4. ' M' → logprob: -15.075942039489746
    5. '<|end|>' → logprob: -15.075942039489746
    6. '+m' → logprob: -15.450942039489746
    7. '＋' → logprob: -15.575942039489746
    8. '+
' → logprob: -15.575942039489746
    9. ' ' → logprob: -15.950942039489746
    10. 'M' → logprob: -15.950942039489746

Token 519: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0013259568950161338
    2. ' M' → logprob: -6.626326084136963
    3. ' ' → logprob: -18.626325607299805
    4. '(M' → logprob: -20.126325607299805
    5. '```' → logprob: -20.251325607299805
    6. '   ' → logprob: -20.501325607299805
    7. '	M' → logprob: -20.751325607299805
    8. '  ' → logprob: -21.126325607299805
    9. ' ' → logprob: -21.501325607299805
    10. '+' → logprob: -21.501325607299805

Token 520: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141363143920898
    2. ' +' → logprob: -1.701413631439209
    3. '4' → logprob: -16.201414108276367
    4. '+
' → logprob: -16.326414108276367
    5. '＋' → logprob: -16.576414108276367
    6. '```' → logprob: -16.576414108276367
    7. ' ' → logprob: -17.201414108276367
    8. '   ' → logprob: -17.826414108276367
    9. '
' → logprob: -18.201414108276367
    10. ' +
' → logprob: -18.451414108276367

Token 521: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '(' → logprob: -19.875
    4. '```' → logprob: -20.0
    5. '４' → logprob: -22.375
    6. '   ' → logprob: -22.375
    7. '' → logprob: -22.375
    8. '۴' → logprob: -22.625
    9. '٤' → logprob: -23.5
    10. '`' → logprob: -23.5

Token 522: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '(' → logprob: -20.375
    4. '```' → logprob: -20.875
    5. '４' → logprob: -22.25
    6. '۴' → logprob: -22.375
    7. '   ' → logprob: -22.75
    8. '' → logprob: -23.125
    9. '٤' → logprob: -23.875
    10. '৪' → logprob: -24.625

Token 523: ' *' (ID: 425)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.014242250472307205
    2. '*K' → logprob: -4.264242172241211
    3. '*' → logprob: -9.764242172241211
    4. ' K' → logprob: -11.014242172241211
    5. ' *' → logprob: -12.264242172241211
    6. '**' → logprob: -17.51424217224121
    7. '```' → logprob: -17.63924217224121
    8. '*(' → logprob: -18.63924217224121
    9. '(K' → logprob: -18.76424217224121
    10. '`' → logprob: -18.88924217224121

Token 524: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0206720617134124e-05
    2. ' K' → logprob: -11.50001049041748
    3. ' ' → logprob: -19.250009536743164
    4. '```' → logprob: -21.250009536743164
    5. '   ' → logprob: -21.750009536743164
    6. '	K' → logprob: -21.750009536743164
    7. '(K' → logprob: -22.375009536743164
    8. '`' → logprob: -22.750009536743164
    9. '*K' → logprob: -23.000009536743164
    10. '
' → logprob: -23.000009536743164

Token 525: '

' (ID: 279)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9225365519523621
    2. 'ans' → logprob: -1.1725366115570068
    3. 'result' → logprob: -1.6725366115570068
    4. 'answer' → logprob: -2.297536611557007
    5. 'paths' → logprob: -6.047536373138428
    6. 'ways' → logprob: -6.922536373138428
    7. 'r' → logprob: -7.797536373138428
    8. 'C' → logprob: -8.047536849975586
    9. 'a' → logprob: -9.172536849975586
    10. 'c' → logprob: -9.297536849975586

Token 526: 'res' (ID: 430)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3574105501174927
    2. 'res' → logprob: -1.8574105501174927
    3. 'ans' → logprob: -2.357410430908203
    4. 'answer' → logprob: -3.107410430908203
    5. 'paths' → logprob: -5.357410430908203
    6. 'ways' → logprob: -8.107410430908203
    7. 'path' → logprob: -11.482410430908203
    8. 'r' → logprob: -12.107410430908203
    9. 'total' → logprob: -12.232410430908203
    10. '```' → logprob: -12.357410430908203

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804516792297363
    2. '=' → logprob: -3.2880451679229736
    3. '_' → logprob: -12.913044929504395
    4. ' ' → logprob: -14.288044929504395
    5. ' ' → logprob: -16.03804588317871
    6. ',' → logprob: -16.16304588317871
    7. '_=' → logprob: -16.28804588317871
    8. ')' → logprob: -16.41304588317871
    9. ' =)' → logprob: -16.91304588317871
    10. '[' → logprob: -17.28804588317871

Token 528: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0008681101026013494
    2. ' comb' → logprob: -7.375868320465088
    3. '(' → logprob: -8.87586784362793
    4. '(com' → logprob: -9.62586784362793
    5. 'com' → logprob: -11.37586784362793
    6. '1' → logprob: -11.50086784362793
    7. 'fact' → logprob: -11.62586784362793
    8. ' (' → logprob: -13.75086784362793
    9. 'comm' → logprob: -13.75086784362793
    10. 'Comb' → logprob: -13.87586784362793

Token 529: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'T' → logprob: -17.125
    4. '(
' → logprob: -17.875
    5. '((' → logprob: -19.75
    6. ' (' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '[T' → logprob: -20.375
    9. '(t' → logprob: -20.5
    10. '(max' → logprob: -22.25

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015623578801751137
    2. ',N' → logprob: -6.501562595367432
    3. '(N' → logprob: -10.501562118530273
    4. 'N' → logprob: -10.876562118530273
    5. ' ,' → logprob: -11.251562118530273
    6. ',T' → logprob: -15.251562118530273
    7. '(' → logprob: -16.501562118530273
    8. ',(' → logprob: -16.751562118530273
    9. ',
' → logprob: -16.876562118530273
    10. ',n' → logprob: -17.126562118530273

Token 531: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. ' N' → logprob: -15.0
    3. '(N' → logprob: -16.25
    4. '	N' → logprob: -19.0
    5. '   ' → logprob: -20.75
    6. '[N' → logprob: -20.75
    7. ' ' → logprob: -24.375
    8. '{' → logprob: -24.5
    9. '"N' → logprob: -24.5
    10. ',N' → logprob: -24.625

Token 532: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010950337309623137
    2. ' +' → logprob: -9.125109672546387
    3. '+k' → logprob: -14.750109672546387
    4. 'K' → logprob: -17.50010871887207
    5. ')' → logprob: -17.75010871887207
    6. '+C' → logprob: -18.25010871887207
    7. '+
' → logprob: -19.37510871887207
    8. '＋' → logprob: -19.50010871887207
    9. '()+' → logprob: -19.50010871887207
    10. ')+' → logprob: -19.62510871887207

Token 533: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.339278580620885e-06
    2. ' K' → logprob: -13.000001907348633
    3. '	K' → logprob: -20.625001907348633
    4. '```' → logprob: -20.625001907348633
    5. 'k' → logprob: -21.625001907348633
    6. '>K' → logprob: -22.000001907348633
    7. '   ' → logprob: -22.125001907348633
    8. '+' → logprob: -22.750001907348633
    9. ')' → logprob: -23.750001907348633
    10. ',K' → logprob: -23.875001907348633

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.125000953674316
    3. ')*' → logprob: -16.250001907348633
    4. ' )' → logprob: -16.625001907348633
    5. ')`' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.125001907348633
    7. '),' → logprob: -19.125001907348633
    8. ']' → logprob: -19.375001907348633
    9. ')
' → logprob: -20.000001907348633
    10. ').' → logprob: -20.000001907348633

Token 535: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.019417768344283104
    2. '%' → logprob: -4.894417762756348
    3. ' res' → logprob: -5.019417762756348
    4. '*' → logprob: -5.519417762756348
    5. ')' → logprob: -7.519417762756348
    6. '<|end|>' → logprob: -9.144417762756348
    7. '(res' → logprob: -9.394417762756348
    8. ' *' → logprob: -9.394417762756348
    9. '```' → logprob: -9.894417762756348
    10. '%=' → logprob: -10.269417762756348

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002285694790771231
    2. ' =' → logprob: -8.500228881835938
    3. '*=' → logprob: -10.625228881835938
    4. '%=' → logprob: -14.125228881835938
    5. ' *=' → logprob: -16.750228881835938
    6. '*' → logprob: -17.750228881835938
    7. '.=' → logprob: -19.000228881835938
    8. '```' → logprob: -19.125228881835938
    9. '\' → logprob: -21.000228881835938
    10. '   ' → logprob: -21.250228881835938

Token 537: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11047352850437164
    2. '(res' → logprob: -2.6104736328125
    3. ' res' → logprob: -3.4854736328125
    4. ' (' → logprob: -7.7354736328125
    5. '(' → logprob: -11.6104736328125
    6. '```' → logprob: -13.6104736328125
    7. '	res' → logprob: -13.7354736328125
    8. '_res' → logprob: -14.7354736328125
    9. '$res' → logprob: -15.1104736328125
    10. ' ' → logprob: -15.2354736328125

Token 538: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.836499985889532e-05
    2. ' res' → logprob: -9.7500581741333
    3. '(res' → logprob: -17.375059127807617
    4. '	res' → logprob: -19.875059127807617
    5. '   ' → logprob: -20.625059127807617
    6. '$res' → logprob: -21.250059127807617
    7. 'ress' → logprob: -21.500059127807617
    8. 're' → logprob: -21.500059127807617
    9. 'resc' → logprob: -22.125059127807617
    10. '_res' → logprob: -22.125059127807617

Token 539: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889044284820557
    2. '*' → logprob: -2.578890323638916
    3. ')' → logprob: -15.078890800476074
    4. ' ' → logprob: -15.203890800476074
    5. ' ' → logprob: -15.828890800476074
    6. 'res' → logprob: -17.078889846801758
    7. '```' → logprob: -17.953889846801758
    8. '**' → logprob: -18.953889846801758
    9. '*)' → logprob: -19.328889846801758
    10. '   ' → logprob: -19.703889846801758

Token 540: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -2.935296834039036e-06
    2. ' comb' → logprob: -12.75000286102295
    3. 'com' → logprob: -19.750003814697266
    4. 'Comb' → logprob: -20.625003814697266
    5. '   ' → logprob: -23.250003814697266
    6. 'comm' → logprob: -24.250003814697266
    7. '```' → logprob: -24.250003814697266
    8. '_comb' → logprob: -24.375003814697266
    9. 'combo' → logprob: -24.875003814697266
    10. 'combined' → logprob: -25.750003814697266

Token 541: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -3.292907877039397e-06
    2. 'T' → logprob: -13.25000286102295
    3. '(' → logprob: -13.62500286102295
    4. ' (' → logprob: -15.12500286102295
    5. ')' → logprob: -16.875003814697266
    6. ')(' → logprob: -17.750003814697266
    7. '(
' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '((' → logprob: -20.125003814697266
    10. '```' → logprob: -20.125003814697266

Token 542: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005672083701938391
    2. '-' → logprob: -5.880671977996826
    3. ' -' → logprob: -6.380671977996826
    4. ' ,' → logprob: -6.880671977996826
    5. ',N' → logprob: -9.130672454833984
    6. '   ' → logprob: -12.130672454833984
    7. '(N' → logprob: -12.380672454833984
    8. '-(' → logprob: -12.380672454833984
    9. ' ' → logprob: -12.630672454833984
    10. ',
' → logprob: -12.755672454833984

Token 543: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00010914575977949426
    2. ' (' → logprob: -9.25010871887207
    3. '(' → logprob: -11.62510871887207
    4. 'N' → logprob: -12.50010871887207
    5. '(n' → logprob: -15.87510871887207
    6. '((' → logprob: -16.00010871887207
    7. '   ' → logprob: -16.87510871887207
    8. '(T' → logprob: -17.12510871887207
    9. ' ' → logprob: -18.00010871887207
    10. '(
' → logprob: -18.62510871887207

Token 544: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014166327193379402
    2. '(N' → logprob: -4.264166355133057
    3. ' N' → logprob: -13.139165878295898
    4. ' (' → logprob: -14.639165878295898
    5. '   ' → logprob: -15.264165878295898
    6. '[N' → logprob: -16.5141658782959
    7. '	N' → logprob: -17.1391658782959
    8. '(' → logprob: -19.1391658782959
    9. '{' → logprob: -19.6391658782959
    10. '
' → logprob: -19.8891658782959

Token 545: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014013137842994183
    2. ' +' → logprob: -8.875140190124512
    3. '+k' → logprob: -16.125139236450195
    4. 'K' → logprob: -16.125139236450195
    5. '+
' → logprob: -18.000139236450195
    6. '[' → logprob: -18.250139236450195
    7. '＋' → logprob: -18.750139236450195
    8. '+C' → logprob: -19.750139236450195
    9. ' ' → logprob: -19.875139236450195
    10. '=' → logprob: -20.250139236450195

Token 546: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.6240566083070007e-06
    2. ' K' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '
' → logprob: -20.250001907348633
    5. '(K' → logprob: -21.125001907348633
    6. '```' → logprob: -21.250001907348633
    7. '	K' → logprob: -21.875001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '>K' → logprob: -22.500001907348633
    10. '
' → logprob: -23.000001907348633

Token 547: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. '),' → logprob: -11.125028610229492
    3. ' ,' → logprob: -11.375028610229492
    4. ',M' → logprob: -13.500028610229492
    5. '   ' → logprob: -14.750028610229492
    6. 'M' → logprob: -16.875028610229492
    7. ' ' → logprob: -17.250028610229492
    8. '(),' → logprob: -17.500028610229492
    9. '],' → logprob: -18.500028610229492
    10. ')' → logprob: -18.625028610229492

Token 548: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -9.686778503237292e-05
    2. ' M' → logprob: -9.250097274780273
    3. '(M' → logprob: -14.250097274780273
    4. '   ' → logprob: -16.500097274780273
    5. ' ' → logprob: -18.875097274780273
    6. '  ' → logprob: -20.250097274780273
    7. '	M' → logprob: -20.250097274780273
    8. '    ' → logprob: -20.375097274780273
    9. '[M' → logprob: -21.250097274780273
    10. '(' → logprob: -21.500097274780273

Token 549: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026302969083189964
    2. ' +' → logprob: -3.6513030529022217
    3. 'K' → logprob: -13.5263032913208
    4. ' K' → logprob: -14.5263032913208
    5. ' ' → logprob: -15.0263032913208
    6. '[' → logprob: -16.151302337646484
    7. '＋' → logprob: -16.276302337646484
    8. '+k' → logprob: -16.401302337646484
    9. ' plus' → logprob: -17.026302337646484
    10. '+
' → logprob: -17.026302337646484

Token 550: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.939851037808694e-05
    2. ' K' → logprob: -10.500029563903809
    3. '(K' → logprob: -13.250029563903809
    4. '(' → logprob: -16.750028610229492
    5. ' (' → logprob: -19.250028610229492
    6. '   ' → logprob: -19.375028610229492
    7. '(M' → logprob: -19.500028610229492
    8. ' ' → logprob: -19.750028610229492
    9. '	K' → logprob: -20.500028610229492
    10. 'M' → logprob: -21.125028610229492

Token 551: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.860340752406046e-05
    2. ')' → logprob: -9.7500581741333
    3. ' ))' → logprob: -16.125059127807617
    4. '   ' → logprob: -17.000059127807617
    5. '%' → logprob: -17.750059127807617
    6. ')%' → logprob: -17.875059127807617
    7. ''))' → logprob: -18.125059127807617
    8. ')
' → logprob: -18.500059127807617
    9. '])' → logprob: -18.750059127807617
    10. ' ' → logprob: -18.875059127807617

Token 552: ' %' (ID: 1851)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32656896114349365
    2. '
' → logprob: -1.8265689611434937
    3. '%' → logprob: -2.201569080352783
    4. ' res' → logprob: -5.701569080352783
    5. '(res' → logprob: -6.326569080352783
    6. '```' → logprob: -7.326569080352783
    7. ')' → logprob: -7.826569080352783
    8. ' 
' → logprob: -8.826568603515625
    9. '$res' → logprob: -8.826568603515625
    10. ' %' → logprob: -8.826568603515625

Token 553: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -15.0
    3. '_MOD' → logprob: -20.75
    4. '.MOD' → logprob: -22.25
    5. '```' → logprob: -22.375
    6. '10' → logprob: -23.0
    7. 'MO' → logprob: -23.0
    8. 'MD' → logprob: -24.875
    9. '(M' → logprob: -25.0
    10. 'MODE' → logprob: -25.25

Token 554: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -8.566264295950532e-05
    2. '
' → logprob: -10.250085830688477
    3. '(res' → logprob: -10.250085830688477
    4. ' res' → logprob: -11.375085830688477
    5. '```' → logprob: -12.875085830688477
    6. '	res' → logprob: -15.500085830688477
    7. '``' → logprob: -15.875085830688477
    8. '(
' → logprob: -16.250085830688477
    9. '\
' → logprob: -16.500085830688477
    10. '\' → logprob: -16.625085830688477

Token 555: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1637164789135568e-05
    2. '(res' → logprob: -11.625011444091797
    3. ' res' → logprob: -13.000011444091797
    4. '```' → logprob: -15.125011444091797
    5. '
' → logprob: -17.750011444091797
    6. '	res' → logprob: -17.875011444091797
    7. '$res' → logprob: -18.000011444091797
    8. '(
' → logprob: -18.250011444091797
    9. '\' → logprob: -18.625011444091797
    10. '[' → logprob: -18.750011444091797

Token 556: ' =' (ID: 314)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.015592016279697418
    2. '=' → logprob: -4.640592098236084
    3. '*' → logprob: -6.640592098236084
    4. '#' → logprob: -6.640592098236084
    5. '(res' → logprob: -6.765592098236084
    6. '```' → logprob: -7.265592098236084
    7. ' =' → logprob: -7.515592098236084
    8. '%' → logprob: -7.890592098236084
    9. ' res' → logprob: -8.515591621398926
    10. ')' → logprob: -10.265591621398926

Token 557: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5759468078613281
    2. '(res' → logprob: -0.8259468078613281
    3. 'res' → logprob: -12.950946807861328
    4. '   ' → logprob: -13.575946807861328
    5. ' res' → logprob: -13.575946807861328
    6. '(re' → logprob: -14.200946807861328
    7. ' ' → logprob: -15.200946807861328
    8. '(result' → logprob: -15.325946807861328
    9. '(rest' → logprob: -15.450946807861328
    10. ' ' → logprob: -15.700946807861328

Token 558: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.173704271830502e-06
    2. '(res' → logprob: -12.75000286102295
    3. ' res' → logprob: -15.50000286102295
    4. '$res' → logprob: -21.625003814697266
    5. '	res' → logprob: -21.750003814697266
    6. '
' → logprob: -22.125003814697266
    7. '```' → logprob: -22.250003814697266
    8. '   ' → logprob: -23.000003814697266
    9. '_res' → logprob: -23.875003814697266
    10. ',res' → logprob: -24.000003814697266

Token 559: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1602269560098648
    2. ' *' → logprob: -1.9102269411087036
    3. ')' → logprob: -13.660226821899414
    4. '(res' → logprob: -14.285226821899414
    5. 'res' → logprob: -15.660226821899414
    6. '*(' → logprob: -15.910226821899414
    7. ')*' → logprob: -15.910226821899414
    8. '=' → logprob: -16.285226821899414
    9. ' ' → logprob: -16.535226821899414
    10. '**' → logprob: -16.535226821899414

Token 560: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -4.842555426876061e-06
    2. ' comb' → logprob: -12.250004768371582
    3. 'com' → logprob: -18.3750057220459
    4. 'Comb' → logprob: -20.5000057220459
    5. '(com' → logprob: -21.6250057220459
    6. '```' → logprob: -22.7500057220459
    7. 'comm' → logprob: -24.0000057220459
    8. 'combo' → logprob: -24.1250057220459
    9. '_comb' → logprob: -24.5000057220459
    10. 'combined' → logprob: -25.3750057220459

Token 561: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.029772937297821045
    2. 'T' → logprob: -3.529772996902466
    3. '(' → logprob: -11.029772758483887
    4. '((' → logprob: -12.529772758483887
    5. '(
' → logprob: -14.029772758483887
    6. '[T' → logprob: -14.779772758483887
    7. '   ' → logprob: -15.154772758483887
    8. ' T' → logprob: -15.404772758483887
    9. ' (' → logprob: -15.779772758483887
    10. ')' → logprob: -16.154773712158203

Token 562: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0052688573487102985
    2. ' (' → logprob: -5.2552690505981445
    3. '((' → logprob: -10.505269050598145
    4. '   ' → logprob: -12.505269050598145
    5. '(T' → logprob: -13.755269050598145
    6. 'N' → logprob: -13.755269050598145
    7. '(' → logprob: -14.255269050598145
    8. ' ' → logprob: -14.380269050598145
    9. '(M' → logprob: -15.380269050598145
    10. '(n' → logprob: -16.130268096923828

Token 564: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015490218065679073
    2. 'N' → logprob: -6.501549243927002
    3. ' (' → logprob: -10.126548767089844
    4. '(' → logprob: -12.876548767089844
    5. '   ' → logprob: -12.876548767089844
    6. '(n' → logprob: -14.251548767089844
    7. '((' → logprob: -14.876548767089844
    8. ' ' → logprob: -15.501548767089844
    9. '(
' → logprob: -16.251548767089844
    10. ' N' → logprob: -16.876548767089844

Token 565: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012566609075292945
    2. ' +' → logprob: -7.251256465911865
    3. '-K' → logprob: -7.626256465911865
    4. '+(' → logprob: -10.626256942749023
    5. 'K' → logprob: -10.751256942749023
    6. '-' → logprob: -12.251256942749023
    7. ' -' → logprob: -12.626256942749023
    8. '+k' → logprob: -13.251256942749023
    9. ' ' → logprob: -14.501256942749023
    10. '(K' → logprob: -14.626256942749023

Token 566: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.522638169466518e-05
    2. ' K' → logprob: -10.750024795532227
    3. '(K' → logprob: -13.125024795532227
    4. '(N' → logprob: -14.000024795532227
    5. ' ' → logprob: -14.875024795532227
    6. 'Q' → logprob: -16.250024795532227
    7. '   ' → logprob: -16.625024795532227
    8. ' (' → logprob: -16.750024795532227
    9. '(' → logprob: -16.750024795532227
    10. '```' → logprob: -17.000024795532227

Token 567: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6971215009689331
    2. ')' → logprob: -1.322121500968933
    3. ')-(' → logprob: -2.0721216201782227
    4. ' -' → logprob: -2.3221216201782227
    5. '-(' → logprob: -4.947121620178223
    6. '),' → logprob: -6.447121620178223
    7. '   ' → logprob: -6.822121620178223
    8. ')-' → logprob: -7.072121620178223
    9. ' ' → logprob: -7.447121620178223
    10. ' -(' → logprob: -9.822121620178223

Token 568: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11562079936265945
    2. '-(' → logprob: -2.4906208515167236
    3. ' -' → logprob: -4.2406206130981445
    4. ')-(' → logprob: -4.6156206130981445
    5. ')' → logprob: -6.6156206130981445
    6. ' -(' → logprob: -7.9906206130981445
    7. '),' → logprob: -8.490620613098145
    8. ' ' → logprob: -9.865620613098145
    9. '   ' → logprob: -10.490620613098145
    10. ',' → logprob: -10.615620613098145

Token 569: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -8.64970643306151e-05
    2. ' (' → logprob: -9.375086784362793
    3. 'M' → logprob: -14.000086784362793
    4. '(N' → logprob: -14.250086784362793
    5. '((' → logprob: -16.250085830688477
    6. '(' → logprob: -16.625085830688477
    7. '   ' → logprob: -18.125085830688477
    8. '(m' → logprob: -19.250085830688477
    9. '
' → logprob: -19.625085830688477
    10. ' ' → logprob: -20.250085830688477

Token 570: 'M' (ID: 44)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.03814144432544708
    2. 'M' → logprob: -3.2881414890289307
    3. ' (' → logprob: -9.288141250610352
    4. ' M' → logprob: -12.163141250610352
    5. '(' → logprob: -13.788141250610352
    6. '   ' → logprob: -14.288141250610352
    7. '(
' → logprob: -16.41314125061035
    8. ' ' → logprob: -16.66314125061035
    9. '((' → logprob: -16.66314125061035
    10. '	M' → logprob: -16.66314125061035

Token 571: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067426045425236225
    2. ' +' → logprob: -5.006742477416992
    3. 'K' → logprob: -10.756742477416992
    4. ' K' → logprob: -12.256742477416992
    5. ' ' → logprob: -14.756742477416992
    6. '+k' → logprob: -14.881742477416992
    7. '+
' → logprob: -16.131742477416992
    8. '＋' → logprob: -16.381742477416992
    9. '   ' → logprob: -17.256742477416992
    10. '-K' → logprob: -17.506742477416992

Token 572: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.7610454708337784e-05
    2. ' K' → logprob: -10.500027656555176
    3. '+' → logprob: -18.87502670288086
    4. '
' → logprob: -19.00002670288086
    5. '   ' → logprob: -19.25002670288086
    6. ' ' → logprob: -19.25002670288086
    7. '(' → logprob: -19.62502670288086
    8. '```' → logprob: -19.62502670288086
    9. '>K' → logprob: -20.00002670288086
    10. ')' → logprob: -20.25002670288086

Token 573: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008828802965581417
    2. '),' → logprob: -7.125883102416992
    3. ' ,' → logprob: -9.625883102416992
    4. '   ' → logprob: -12.625883102416992
    5. ',),' → logprob: -12.625883102416992
    6. ',K' → logprob: -13.125883102416992
    7. ')),' → logprob: -14.000883102416992
    8. ',
' → logprob: -14.375883102416992
    9. '(),' → logprob: -14.625883102416992
    10. '```' → logprob: -14.625883102416992

Token 574: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.7729658540920354e-05
    2. ' K' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.375028610229492
    4. '       ' → logprob: -17.750028610229492
    5. ' ' → logprob: -19.125028610229492
    6. '	K' → logprob: -20.125028610229492
    7. '           ' → logprob: -20.125028610229492
    8. '  ' → logprob: -20.250028610229492
    9. ')' → logprob: -20.500028610229492
    10. '```' → logprob: -20.500028610229492

Token 575: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001818489981815219
    2. ')' → logprob: -8.625182151794434
    3. ' ))' → logprob: -13.125182151794434
    4. '   ' → logprob: -16.125181198120117
    5. ')))' → logprob: -16.875181198120117
    6. ''))' → logprob: -17.625181198120117
    7. ' ' → logprob: -17.750181198120117
    8. '```' → logprob: -18.250181198120117
    9. '    ' → logprob: -18.500181198120117
    10. '])' → logprob: -18.625181198120117

Token 576: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3306523859500885
    2. ' %' → logprob: -1.3306523561477661
    3. '(res' → logprob: -4.330652236938477
    4. 'res' → logprob: -5.580652236938477
    5. ')' → logprob: -8.955652236938477
    6. ' res' → logprob: -9.330652236938477
    7. '(' → logprob: -10.205652236938477
    8. ')%' → logprob: -11.330652236938477
    9. '```' → logprob: -11.330652236938477
    10. '
' → logprob: -11.705652236938477

Token 577: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '_MOD' → logprob: -19.625001907348633
    4. '.MOD' → logprob: -20.000001907348633
    5. '(M' → logprob: -21.125001907348633
    6. '```' → logprob: -21.125001907348633
    7. 'MO' → logprob: -21.875001907348633
    8. 'mod' → logprob: -22.625001907348633
    9. '   ' → logprob: -23.250001907348633
    10. '
' → logprob: -23.500001907348633

Token 578: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001705246395431459
    2. '(res' → logprob: -8.750170707702637
    3. '```' → logprob: -12.375170707702637
    4. ' res' → logprob: -12.625170707702637
    5. 'print' → logprob: -13.375170707702637
    6. '
' → logprob: -13.500170707702637
    7. '\' → logprob: -14.500170707702637
    8. '``' → logprob: -15.000170707702637
    9. '$res' → logprob: -15.625170707702637
    10. '\
' → logprob: -15.750170707702637

Token 579: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00012999906903132796
    2. '(res' → logprob: -9.000129699707031
    3. ' res' → logprob: -12.750129699707031
    4. '```' → logprob: -12.875129699707031
    5. 'print' → logprob: -15.000129699707031
    6. '(' → logprob: -15.625129699707031
    7. '[' → logprob: -15.750129699707031
    8. '(
' → logprob: -16.12512969970703
    9. '\' → logprob: -16.25012969970703
    10. '``' → logprob: -16.37512969970703

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14284133911132812
    2. '=' → logprob: -2.017841339111328
    3. '<|end|>' → logprob: -8.892841339111328
    4. '%' → logprob: -12.142841339111328
    5. ')' → logprob: -12.267841339111328
    6. '%=' → logprob: -12.642841339111328
    7. '(' → logprob: -12.642841339111328
    8. ' ' → logprob: -12.767841339111328
    9. '#' → logprob: -13.267841339111328
    10. '<|end|>' → logprob: -13.642841339111328

Token 581: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0024894531816244125
    2. ' (' → logprob: -6.0024895668029785
    3. '(' → logprob: -11.25248908996582
    4. '   ' → logprob: -15.12748908996582
    5. '(int' → logprob: -15.87748908996582
    6. '(rest' → logprob: -16.50248908996582
    7. '(result' → logprob: -16.75248908996582
    8. ' ' → logprob: -16.87748908996582
    9. '(re' → logprob: -17.00248908996582
    10. '  ' → logprob: -17.00248908996582

Token 582: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.062004204839468
    2. '(res' → logprob: -2.8120040893554688
    3. ' res' → logprob: -10.312004089355469
    4. '$res' → logprob: -13.812004089355469
    5. '	res' → logprob: -14.562004089355469
    6. ' (' → logprob: -14.687004089355469
    7. '   ' → logprob: -15.062004089355469
    8. ',res' → logprob: -15.187004089355469
    9. '(' → logprob: -15.812004089355469
    10. '=res' → logprob: -16.06200408935547

Token 583: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05500765144824982
    2. '*' → logprob: -2.9300076961517334
    3. ' ' → logprob: -9.930007934570312
    4. ')' → logprob: -10.180007934570312
    5. '=' → logprob: -10.930007934570312
    6. '(' → logprob: -12.305007934570312
    7. ' ' → logprob: -12.430007934570312
    8. '%' → logprob: -12.680007934570312
    9. '*(' → logprob: -12.930007934570312
    10. '```' → logprob: -13.430007934570312

Token 584: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -7.941850526549388e-06
    2. ' comb' → logprob: -11.750007629394531
    3. 'com' → logprob: -17.50000762939453
    4. 'Comb' → logprob: -20.00000762939453
    5. 'combo' → logprob: -20.87500762939453
    6. '   ' → logprob: -21.25000762939453
    7. 'comm' → logprob: -22.00000762939453
    8. '```' → logprob: -22.00000762939453
    9. '(com' → logprob: -22.25000762939453
    10. '
' → logprob: -22.87500762939453

Token 585: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.625006675720215
    3. 'T' → logprob: -12.625006675720215
    4. '(
' → logprob: -16.62500762939453
    5. '((' → logprob: -16.87500762939453
    6. ' (' → logprob: -19.37500762939453
    7. '```' → logprob: -19.62500762939453
    8. '(t' → logprob: -20.25000762939453
    9. '   ' → logprob: -20.62500762939453
    10. '	T' → logprob: -21.37500762939453

Token 586: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47435909509658813
    2. '-' → logprob: -0.9743590950965881
    3. '-(' → logprob: -8.974359512329102
    4. '   ' → logprob: -9.474359512329102
    5. ' ' → logprob: -9.974359512329102
    6. '  ' → logprob: -11.349359512329102
    7. ' -(' → logprob: -11.599359512329102
    8. 'T' → logprob: -12.599359512329102
    9. '(' → logprob: -13.349359512329102
    10. '    ' → logprob: -13.599359512329102

Token 587: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00026455431361682713
    2. ' (' → logprob: -8.250264167785645
    3. '((' → logprob: -13.625264167785645
    4. '   ' → logprob: -13.625264167785645
    5. '(' → logprob: -14.750264167785645
    6. ' ' → logprob: -15.375264167785645
    7. 'N' → logprob: -15.625264167785645
    8. '(
' → logprob: -17.37526512145996
    9. '(n' → logprob: -18.00026512145996
    10. '```' → logprob: -18.00026512145996

Token 588: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010422171326354146
    2. 'N' → logprob: -6.876042366027832
    3. ' (' → logprob: -12.001042366027832
    4. '(' → logprob: -13.376042366027832
    5. '   ' → logprob: -13.876042366027832
    6. '(n' → logprob: -15.001042366027832
    7. '((' → logprob: -15.251042366027832
    8. ' ' → logprob: -16.376041412353516
    9. '2' → logprob: -17.376041412353516
    10. '(T' → logprob: -17.751041412353516

Token 589: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026757761370390654
    2. ' +' → logprob: -6.127676010131836
    3. 'K' → logprob: -8.127676010131836
    4. '-K' → logprob: -9.252676010131836
    5. '+k' → logprob: -10.502676010131836
    6. '(K' → logprob: -10.752676010131836
    7. '+(' → logprob: -11.002676010131836
    8. '-' → logprob: -12.002676010131836
    9. '(N' → logprob: -12.002676010131836
    10. 'Q' → logprob: -12.252676010131836

Token 590: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.030277423560619354
    2. '(N' → logprob: -3.5302774906158447
    3. '(K' → logprob: -7.905277252197266
    4. 'Q' → logprob: -9.155277252197266
    5. ' K' → logprob: -10.655277252197266
    6. '(' → logprob: -11.780277252197266
    7. 'N' → logprob: -12.155277252197266
    8. ' ' → logprob: -12.280277252197266
    9. 'k' → logprob: -12.780277252197266
    10. ' (' → logprob: -12.780277252197266

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01334280427545309
    2. '-' → logprob: -5.01334285736084
    3. ')-(' → logprob: -5.26334285736084
    4. ' -' → logprob: -6.76334285736084
    5. ')-' → logprob: -8.51334285736084
    6. '   ' → logprob: -10.01334285736084
    7. ' )' → logprob: -11.13834285736084
    8. ' ' → logprob: -12.38834285736084
    9. '-(' → logprob: -12.63834285736084
    10. '[' → logprob: -13.88834285736084

Token 592: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016780413687229156
    2. ' -' → logprob: -4.141780376434326
    3. '-(' → logprob: -7.266780376434326
    4. '   ' → logprob: -11.141780853271484
    5. ')' → logprob: -11.391780853271484
    6. ')-(' → logprob: -11.516780853271484
    7. ' -(' → logprob: -12.016780853271484
    8. ' ' → logprob: -12.391780853271484
    9. '           ' → logprob: -15.391780853271484
    10. '```' → logprob: -15.391780853271484

Token 593: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -7.612634362885728e-05
    2. ' (' → logprob: -9.500076293945312
    3. '(m' → logprob: -14.625076293945312
    4. 'M' → logprob: -15.000076293945312
    5. '   ' → logprob: -15.875076293945312
    6. '((' → logprob: -15.875076293945312
    7. '(N' → logprob: -16.375076293945312
    8. '(' → logprob: -17.250076293945312
    9. '```' → logprob: -19.250076293945312
    10. ' ' → logprob: -20.375076293945312

Token 594: 'M' (ID: 44)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001992490579141304
    2. 'M' → logprob: -8.750199317932129
    3. ' (' → logprob: -10.250199317932129
    4. '(m' → logprob: -12.500199317932129
    5. '   ' → logprob: -13.625199317932129
    6. '(' → logprob: -15.750199317932129
    7. '((' → logprob: -16.250198364257812
    8. ' M' → logprob: -16.375198364257812
    9. '  ' → logprob: -17.750198364257812
    10. ' ' → logprob: -17.875198364257812

Token 595: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001484747277572751
    2. 'K' → logprob: -7.1264848709106445
    3. ' +' → logprob: -7.8764848709106445
    4. '-K' → logprob: -8.376484870910645
    5. '+(' → logprob: -10.501484870910645
    6. '+k' → logprob: -11.001484870910645
    7. '(K' → logprob: -11.876484870910645
    8. ' K' → logprob: -12.501484870910645
    9. '-' → logprob: -12.751484870910645
    10. ' -' → logprob: -13.126484870910645

Token 596: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.8351892473874614e-05
    2. ' K' → logprob: -10.000048637390137
    3. '(K' → logprob: -13.875048637390137
    4. '(' → logprob: -14.250048637390137
    5. '   ' → logprob: -14.625048637390137
    6. ' (' → logprob: -15.750048637390137
    7. '+' → logprob: -16.75004768371582
    8. 'k' → logprob: -16.87504768371582
    9. 'Q' → logprob: -17.00004768371582
    10. '1' → logprob: -17.12504768371582

Token 597: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28176453709602356
    2. ' -' → logprob: -1.4067645072937012
    3. ')' → logprob: -8.03176498413086
    4. '-K' → logprob: -9.15676498413086
    5. ',' → logprob: -9.65676498413086
    6. ' ' → logprob: -10.15676498413086
    7. '),' → logprob: -10.40676498413086
    8. '   ' → logprob: -10.65676498413086
    9. ')-' → logprob: -11.78176498413086
    10. ')-(' → logprob: -11.78176498413086

Token 598: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03369111567735672
    2. ' -' → logprob: -3.408691167831421
    3. ',' → logprob: -10.90869140625
    4. '   ' → logprob: -11.40869140625
    5. ' ' → logprob: -11.90869140625
    6. '-K' → logprob: -12.03369140625
    7. ')' → logprob: -13.90869140625
    8. '  ' → logprob: -14.15869140625
    9. '-k' → logprob: -14.65869140625
    10. '```' → logprob: -15.03369140625

Token 599: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.15310683415737e-05
    2. ' K' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.12502098083496
    4. '(K' → logprob: -21.12502098083496
    5. '	K' → logprob: -21.62502098083496
    6. '       ' → logprob: -21.75002098083496
    7. ' ' → logprob: -22.62502098083496
    8. '
' → logprob: -22.87502098083496
    9. '           ' → logprob: -22.87502098083496
    10. '>K' → logprob: -23.12502098083496

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012773419439326972
    2. ',K' → logprob: -9.000127792358398
    3. ' ,' → logprob: -12.500127792358398
    4. '),' → logprob: -14.750127792358398
    5. 'K' → logprob: -16.6251277923584
    6. ',k' → logprob: -17.6251277923584
    7. ',
' → logprob: -18.5001277923584
    8. ',T' → logprob: -18.5001277923584
    9. ',N' → logprob: -19.2501277923584
    10. ' K' → logprob: -19.3751277923584

Token 601: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.493430894101039e-05
    2. ' K' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. ' ' → logprob: -19.50007438659668
    5. '	K' → logprob: -20.25007438659668
    6. '       ' → logprob: -20.37507438659668
    7. '  ' → logprob: -20.75007438659668
    8. '    ' → logprob: -21.12507438659668
    9. ')' → logprob: -21.12507438659668
    10. '           ' → logprob: -22.37507438659668

Token 602: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005544631858356297
    2. ')' → logprob: -7.50055456161499
    3. ')))' → logprob: -14.125554084777832
    4. ' ))' → logprob: -14.375554084777832
    5. ')
' → logprob: -16.87555503845215
    6. ')%' → logprob: -17.12555503845215
    7. '])' → logprob: -17.37555503845215
    8. '   ' → logprob: -17.50055503845215
    9. ''))' → logprob: -17.75055503845215
    10. ' ' → logprob: -18.00055503845215

Token 603: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03805732727050781
    2. ' %' → logprob: -3.288057327270508
    3. ')' → logprob: -11.288057327270508
    4. ')%' → logprob: -13.038057327270508
    5. '```' → logprob: -14.913057327270508
    6. ' ' → logprob: -15.288057327270508
    7. '()%' → logprob: -15.663057327270508
    8. ' ' → logprob: -16.663057327270508
    9. 'res' → logprob: -16.913057327270508
    10. ']%' → logprob: -17.163057327270508

Token 604: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.25
    3. '_MOD' → logprob: -18.0
    4. '.MOD' → logprob: -18.75
    5. '100' → logprob: -20.125
    6. 'MO' → logprob: -20.25
    7. '10' → logprob: -21.125
    8. '0' → logprob: -21.875
    9. '(M' → logprob: -22.25
    10. 'mod' → logprob: -22.25

Token 605: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020208319183439016
    2. '
' → logprob: -6.627020835876465
    3. '```' → logprob: -7.752020835876465
    4. ' print' → logprob: -9.002020835876465
    5. '<|end|>' → logprob: -9.252020835876465
    6. '

' → logprob: -10.752020835876465
    7. '``' → logprob: -11.127020835876465
    8. '
' → logprob: -13.127020835876465
    9. '  
' → logprob: -13.377020835876465
    10. '#print' → logprob: -13.627020835876465

Token 606: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022427814838010818
    2. '```' → logprob: -8.500224113464355
    3. '
' → logprob: -11.250224113464355
    4. '``' → logprob: -12.500224113464355
    5. '<|end|>' → logprob: -13.000224113464355
    6. ' print' → logprob: -14.125224113464355
    7. '#print' → logprob: -14.750224113464355
    8. '(print' → logprob: -15.250224113464355
    9. '#' → logprob: -15.625224113464355
    10. '  
' → logprob: -16.125225067138672

Token 607: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.01420041173696518
    2. '(' → logprob: -4.264200210571289
    3. 'res' → logprob: -11.139200210571289
    4. '(print' → logprob: -11.264200210571289
    5. ' (' → logprob: -12.264200210571289
    6. '(
' → logprob: -13.264200210571289
    7. '(result' → logprob: -13.889200210571289
    8. '()' → logprob: -14.389200210571289
    9. '((' → logprob: -14.764200210571289
    10. '(len' → logprob: -15.139200210571289

Token 608: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. '())' → logprob: -12.625005722045898
    3. '()' → logprob: -13.750005722045898
    4. '))' → logprob: -14.625005722045898
    5. ')`' → logprob: -14.875005722045898
    6. ' )' → logprob: -15.000005722045898
    7. '(' → logprob: -15.000005722045898
    8. '`)' → logprob: -17.6250057220459
    9. ')
' → logprob: -18.3750057220459
    10. ')**' → logprob: -18.7500057220459

Token 609: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '(M' → logprob: -17.625001907348633
    4. '_MOD' → logprob: -17.750001907348633
    5. '(mod' → logprob: -19.750001907348633
    6. '.MOD' → logprob: -19.875001907348633
    7. '(Mod' → logprob: -19.875001907348633
    8. '100' → logprob: -20.250001907348633
    9. '(' → logprob: -21.000001907348633
    10. 'MO' → logprob: -21.750001907348633

Token 610: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5362091064453125
    2. '<|end|>' → logprob: -0.9112091064453125
    3. '```' → logprob: -4.4112091064453125
    4. '\n' → logprob: -8.411209106445312
    5. '<|end|>' → logprob: -8.536209106445312
    6. '
' → logprob: -8.786209106445312
    7. '")' → logprob: -9.536209106445312
    8. '')' → logprob: -9.786209106445312
    9. '``' → logprob: -10.161209106445312
    10. '\' → logprob: -10.911209106445312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 608
Tokens correctement prédits (1ère position, stricte): 213
Tokens correctement prédits (1ère position, avec adaptation): 217
Tokens correctement prédits (top 10): 474
Précision stricte (1ère position): 35.03%
Précision adaptée (1ère position): 35.69%
Précision (top 10): 77.96%
================================================================================
