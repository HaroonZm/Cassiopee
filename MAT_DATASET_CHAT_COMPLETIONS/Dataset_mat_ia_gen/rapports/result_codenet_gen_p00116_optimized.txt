================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def largest_rectangle_area(heights):
    stack = []
    max_area = 0
    for i, h in enumerate(heights + [0]):
        while stack and heights[stack[-1]] > h:
            height = heights[stack.pop()]
            left = stack[-1] + 1 if stack else 0
            max_area = max(max_area, height * (i - left))
        stack.append(i)
    return max_area

while True:
    H, W = map(int, input().split())
    if H == 0 and W == 0:
        break
    height = [0]*W
    max_area = 0
    for _ in range(H):
        row = input().rstrip('\n')
        for i in range(W):
            height[i] = height[i] + 1 if row[i] == '.' else 0
        max_area = max(max_area, largest_rectangle_area(height))
    print(max_area)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02355257049202919
    2. 'sys' → logprob: -3.773552656173706
    3. ' input' → logprob: -8.273552894592285
    4. 'input' → logprob: -10.023552894592285
    5. '	sys' → logprob: -12.898552894592285
    6. ' ' → logprob: -13.273552894592285
    7. '=sys' → logprob: -13.273552894592285
    8. '(sys' → logprob: -13.648552894592285
    9. ' system' → logprob: -15.398552894592285
    10. ' lambda' → logprob: -17.27355194091797

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.40092647075653076
    2. '.' → logprob: -1.1509264707565308
    3. '.read' → logprob: -4.27592658996582
    4. '.readlines' → logprob: -10.65092658996582
    5. '.Read' → logprob: -11.40092658996582
    6. '```' → logprob: -12.02592658996582
    7. 'read' → logprob: -12.77592658996582
    8. '.​' → logprob: -13.27592658996582
    9. '.write' → logprob: -13.40092658996582
    10. '.

' → logprob: -13.65092658996582

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04710369557142258
    2. '(' → logprob: -3.2971036434173584
    3. '()
' → logprob: -5.2971038818359375
    4. '(
' → logprob: -6.2971038818359375
    5. '
' → logprob: -7.2971038818359375
    6. '\n' → logprob: -7.5471038818359375
    7. '()

' → logprob: -8.172103881835938
    8. '()\' → logprob: -8.172103881835938
    9. '\' → logprob: -9.297103881835938
    10. '().' → logprob: -9.672103881835938

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ' largest' (ID: 10574)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004313803277909756
    2. ' space' → logprob: -6.879313945770264
    3. ' process' → logprob: -7.004313945770264
    4. ' calculate' → logprob: -7.754313945770264
    5. '_' → logprob: -7.879313945770264
    6. ' read' → logprob: -8.379313468933105
    7. ' my' → logprob: -8.754313468933105
    8. ' main' → logprob: -8.754313468933105
    9. ' ' → logprob: -8.754313468933105
    10. ' func' → logprob: -9.004313468933105

Token 11: '_rectangle' (ID: 166619)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5454541444778442
    2. '(' → logprob: -2.5454540252685547
    3. '_number' → logprob: -2.6704540252685547
    4. '_size' → logprob: -3.1704540252685547
    5. '_word' → logprob: -3.4204540252685547
    6. '_factor' → logprob: -3.7954540252685547
    7. '_max' → logprob: -3.9204540252685547
    8. '_sub' → logprob: -4.170454025268555
    9. '_div' → logprob: -4.170454025268555
    10. '_sum' → logprob: -4.170454025268555

Token 12: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.7963182330131531
    2. '(' → logprob: -0.9213182330131531
    3. '_' → logprob: -2.171318292617798
    4. '_hist' → logprob: -4.296318054199219
    5. '_in' → logprob: -5.171318054199219
    6. '_rectangle' → logprob: -5.671318054199219
    7. '_under' → logprob: -5.796318054199219
    8. '_height' → logprob: -7.046318054199219
    9. '_cont' → logprob: -7.421318054199219
    10. '(area' → logprob: -7.421318054199219

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018494461255613714
    2. '_' → logprob: -9.000185012817383
    3. '```' → logprob: -11.250185012817383
    4. '<|end|>' → logprob: -11.375185012817383
    5. '(
' → logprob: -11.875185012817383
    6. ' (' → logprob: -12.500185012817383
    7. '("("' → logprob: -12.500185012817383
    8. '[' → logprob: -12.750185012817383
    9. '(

' → logprob: -13.125185012817383
    10. ')' → logprob: -13.250185012817383

Token 14: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0006588232354260981
    2. ' heights' → logprob: -8.375658988952637
    3. 'hist' → logprob: -8.500658988952637
    4. ')' → logprob: -9.000658988952637
    5. 'height' → logprob: -9.375658988952637
    6. 'matrix' → logprob: -11.250658988952637
    7. 'h' → logprob: -13.500658988952637
    8. ' )' → logprob: -14.625658988952637
    9. ' histogram' → logprob: -15.125658988952637
    10. '   ' → logprob: -15.125658988952637

Token 15: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.0004923873930238187
    2. 'ight' → logprob: -7.625492572784424
    3. 'igh' → logprob: -13.375492095947266
    4. 'ig' → logprob: -13.750492095947266
    5. 'igts' → logprob: -13.875492095947266
    6. 'igits' → logprob: -15.125492095947266
    7. 'i' → logprob: -15.250492095947266
    8. 'ght' → logprob: -16.000492095947266
    9. '```' → logprob: -16.250492095947266
    10. 'IGHTS' → logprob: -17.000492095947266

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003927964251488447
    2. '[' → logprob: -6.003928184509277
    3. ')' → logprob: -6.628928184509277
    4. '[]):' → logprob: -9.628928184509277
    5. ':' → logprob: -10.378928184509277
    6. '):
' → logprob: -11.253928184509277
    7. ' ):' → logprob: -12.003928184509277
    8. ']:' → logprob: -12.503928184509277
    9. '   ' → logprob: -13.503928184509277
    10. '[int' → logprob: -13.753928184509277

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033175770193338394
    2. ':' → logprob: -4.408175945281982
    3. '    ' → logprob: -4.783175945281982
    4. '[' → logprob: -6.033175945281982
    5. ' ' → logprob: -6.158175945281982
    6. '    
' → logprob: -6.533175945281982
    7. ' :' → logprob: -6.783175945281982
    8. '```' → logprob: -7.283175945281982
    9. ' []' → logprob: -7.658175945281982
    10. ' if' → logprob: -8.033175468444824

Token 18: ' stack' (ID: 10825)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5967714786529541
    2. ' n' → logprob: -1.346771478652954
    3. '   ' → logprob: -2.846771478652954
    4. ' if' → logprob: -2.971771478652954
    5. 'max' → logprob: -3.596771478652954
    6. ' stack' → logprob: -3.846771478652954
    7. ' heights' → logprob: -4.721771240234375
    8. 'n' → logprob: -4.721771240234375
    9. '    ' → logprob: -5.221771240234375
    10. ' m' → logprob: -5.971771240234375

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008213033434003592
    2. '=[]' → logprob: -7.750821113586426
    3. '=' → logprob: -8.000821113586426
    4. '[:]' → logprob: -11.375821113586426
    5. '.append' → logprob: -11.750821113586426
    6. '[]' → logprob: -11.750821113586426
    7. '   ' → logprob: -12.250821113586426
    8. ' ' → logprob: -12.250821113586426
    9. '    ' → logprob: -12.375821113586426
    10. ' []' → logprob: -12.500821113586426

Token 20: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.06198393553495407
    2. '[]' → logprob: -2.811983823776245
    3. '[' → logprob: -11.561984062194824
    4. ' [' → logprob: -12.561984062194824
    5. ' ' → logprob: -13.061984062194824
    6. ' []
' → logprob: -14.936984062194824
    7. '[:]' → logprob: -15.311984062194824
    8. '[]}' → logprob: -15.686984062194824
    9. '=[]' → logprob: -16.561983108520508
    10. ' [(' → logprob: -16.811983108520508

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13105960190296173
    2. '    ' → logprob: -2.8810596466064453
    3. ' for' → logprob: -3.6310596466064453
    4. '    
' → logprob: -4.131059646606445
    5. '     
' → logprob: -5.006059646606445
    6. ' ' → logprob: -5.256059646606445
    7. ' 
' → logprob: -5.631059646606445
    8. ' heights' → logprob: -6.131059646606445
    9. 'result' → logprob: -6.756059646606445
    10. '_' → logprob: -7.256059646606445

Token 22: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3822672665119171
    2. 'max' (adapté à ' max') → logprob: -1.8822672367095947
    3. ' for' → logprob: -2.2572672367095947
    4. ' result' → logprob: -3.8822672367095947
    5. 'for' → logprob: -4.382267475128174
    6. 'result' → logprob: -4.882267475128174
    7. ' area' → logprob: -5.007267475128174
    8. ' res' → logprob: -5.257267475128174
    9. 'res' → logprob: -5.757267475128174
    10. '   ' → logprob: -6.007267475128174

Token 23: '_area' (ID: 34097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7292749285697937
    2. '_area' → logprob: -0.7292749285697937
    3. '_height' → logprob: -3.3542749881744385
    4. '_stack' → logprob: -7.979274749755859
    5. '_width' → logprob: -10.35427474975586
    6. ' ' → logprob: -10.35427474975586
    7. '(' → logprob: -10.60427474975586
    8. ' _' → logprob: -10.85427474975586
    9. '_val' → logprob: -11.10427474975586
    10. 'Area' → logprob: -11.22927474975586

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040956162847578526
    2. '=' → logprob: -5.504095554351807
    3. ' ' → logprob: -11.254096031188965
    4. ',' → logprob: -13.254096031188965
    5. ' ,' → logprob: -13.754096031188965
    6. '_' → logprob: -14.004096031188965
    7. ' =
' → logprob: -16.37909507751465
    8. ' +=' → logprob: -16.50409507751465
    9. '<|end|>' → logprob: -16.87909507751465
    10. '.' → logprob: -17.00409507751465

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692947685718536
    2. ' ' → logprob: -2.126929521560669
    3. ' ' → logprob: -13.75192928314209
    4. '   ' → logprob: -15.37692928314209
    5. '  ' → logprob: -16.689430236816406
    6. ' =' → logprob: -17.814430236816406
    7. '۰' → logprob: -18.064430236816406
    8. '```' → logprob: -18.439430236816406
    9. '    ' → logprob: -18.564430236816406
    10. '[' → logprob: -18.626930236816406

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.250158309936523
    4. ' ' → logprob: -17.750158309936523
    5. 'max' → logprob: -18.187658309936523
    6. '۰' → logprob: -18.375158309936523
    7. '=' → logprob: -19.125158309936523
    8. '  ' → logprob: -19.375158309936523
    9. '０' → logprob: -19.375158309936523
    10. '```' → logprob: -19.375158309936523

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6542494297027588
    2. ' 
' → logprob: -1.7792494297027588
    3. ' for' → logprob: -2.029249429702759
    4. '    
' → logprob: -2.404249429702759
    5. '
' → logprob: -3.529249429702759
    6. ' ' → logprob: -3.654249429702759
    7. 'for' → logprob: -4.77924919128418
    8. '\n' → logprob: -5.02924919128418
    9. '     
' → logprob: -5.40424919128418
    10. '    ' → logprob: -5.52924919128418

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5394338369369507
    2. ' for' → logprob: -1.4144338369369507
    3. ' 
' → logprob: -2.6644339561462402
    4. '    
' → logprob: -2.7894339561462402
    5. '
' → logprob: -4.78943395614624
    6. 'for' → logprob: -4.91443395614624
    7. ' ' → logprob: -5.03943395614624
    8. '\n' → logprob: -5.03943395614624
    9. '    ' → logprob: -5.28943395614624
    10. '     
' → logprob: -5.28943395614624

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08345963060855865
    2. 'for' (adapté à ' for') → logprob: -2.5834596157073975
    3. ' ' → logprob: -6.083459854125977
    4. '   ' → logprob: -7.083459854125977
    5. '    ' → logprob: -7.333459854125977
    6. ' heights' → logprob: -8.083459854125977
    7. ' 
' → logprob: -9.208459854125977
    8. 'height' → logprob: -10.083459854125977
    9. 'n' → logprob: -10.208459854125977
    10. '    
' → logprob: -10.208459854125977

Token 30: ' i' (ID: 575)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.2743324339389801
    2. ' i' → logprob: -1.5243324041366577
    3. ' h' → logprob: -4.649332523345947
    4. 'i' → logprob: -4.899332523345947
    5. 'height' → logprob: -5.524332523345947
    6. ' index' → logprob: -7.399332523345947
    7. ' ' → logprob: -8.399332046508789
    8. ' idx' → logprob: -9.649332046508789
    9. '   ' → logprob: -10.149332046508789
    10. '```' → logprob: -10.149332046508789

Token 31: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2544209957122803
    2. ' ' → logprob: -1.7544209957122803
    3. ',' → logprob: -4.004421234130859
    4. 'in' → logprob: -4.004421234130859
    5. ' ,' → logprob: -4.379421234130859
    6. '  ' → logprob: -6.504421234130859
    7. '<|end|>' → logprob: -7.754421234130859
    8. '    ' → logprob: -8.25442123413086
    9. '   ' → logprob: -9.25442123413086
    10. ' (' → logprob: -9.75442123413086

Token 32: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7285536527633667
    2. 'height' → logprob: -0.9785536527633667
    3. ' height' → logprob: -2.4785537719726562
    4. ' h' → logprob: -2.8535537719726562
    5. '```' → logprob: -10.978553771972656
    6. '	h' → logprob: -11.978553771972656
    7. '   ' → logprob: -12.603553771972656
    8. ' ' → logprob: -13.228553771972656
    9. '	height' → logprob: -13.353553771972656
    10. 'he' → logprob: -13.978553771972656

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022085432428866625
    2. 'in' → logprob: -6.127208709716797
    3. ' ' → logprob: -11.377208709716797
    4. 'n' → logprob: -11.877208709716797
    5. ',' → logprob: -13.752208709716797
    6. 's' → logprob: -13.877208709716797
    7. '	in' → logprob: -14.252208709716797
    8. '   ' → logprob: -14.752208709716797
    9. 'inthe' → logprob: -15.377208709716797
    10. '<|end|>' → logprob: -15.377208709716797

Token 34: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.3132648468017578
    2. 'enumer' → logprob: -1.3132648468017578
    3. '```' → logprob: -13.688264846801758
    4. ' ' → logprob: -14.438264846801758
    5. '(en' → logprob: -14.688264846801758
    6. 'enum' → logprob: -15.313264846801758
    7. '   ' → logprob: -15.688264846801758
    8. ' enumer' → logprob: -15.938264846801758
    9. ' en' → logprob: -16.188264846801758
    10. 'en' → logprob: -16.188264846801758

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033607007935643196
    2. 'he' → logprob: -5.753360748291016
    3. ' (' → logprob: -8.628360748291016
    4. ' heights' → logprob: -13.128360748291016
    5. ')' → logprob: -13.878360748291016
    6. '_he' → logprob: -15.253360748291016
    7. ' he' → logprob: -15.878360748291016
    8. 'He' → logprob: -16.003360748291016
    9. '   ' → logprob: -16.128360748291016
    10. ' ' → logprob: -16.253360748291016

Token 36: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -9.949026571121067e-05
    2. ' heights' → logprob: -9.250099182128906
    3. ')' → logprob: -13.250099182128906
    4. '   ' → logprob: -14.125099182128906
    5. 'height' → logprob: -14.750099182128906
    6. '_he' → logprob: -15.250099182128906
    7. ' he' → logprob: -15.625099182128906
    8. 'He' → logprob: -16.875099182128906
    9. '```' → logprob: -17.500099182128906
    10. 'h' → logprob: -17.625099182128906

Token 37: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.00015991552209015936
    2. 'ght' → logprob: -9.125160217285156
    3. 'igh' → logprob: -10.375160217285156
    4. 'ight' → logprob: -12.625160217285156
    5. 'gh' → logprob: -12.750160217285156
    6. 'IGHTS' → logprob: -13.000160217285156
    7. 'ught' → logprob: -13.250160217285156
    8. ']' → logprob: -13.500160217285156
    9. '   ' → logprob: -13.750160217285156
    10. 'ig' → logprob: -13.875160217285156

Token 38: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005804349202662706
    2. ':' → logprob: -7.875580310821533
    3. ' ):' → logprob: -9.250580787658691
    4. '   ' → logprob: -9.875580787658691
    5. '):
' → logprob: -10.125580787658691
    6. ')' → logprob: -11.875580787658691
    7. '():' → logprob: -13.125580787658691
    8. ',' → logprob: -14.125580787658691
    9. '       ' → logprob: -14.375580787658691
    10. ' ' → logprob: -14.375580787658691

Token 39: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.957014556974173e-05
    2. '[-' → logprob: -9.750069618225098
    3. ' [' → logprob: -11.500069618225098
    4. '[i' → logprob: -14.750069618225098
    5. '[h' → logprob: -15.500069618225098
    6. ' heights' → logprob: -15.625069618225098
    7. '   ' → logprob: -16.62506866455078
    8. '[s' → logprob: -17.12506866455078
    9. '[len' → logprob: -17.12506866455078
    10. '[n' → logprob: -17.37506866455078

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008145124302245677
    2. '-' → logprob: -7.125814437866211
    3. 'float' → logprob: -11.625814437866211
    4. '(' → logprob: -15.125814437866211
    5. '-height' → logprob: -15.250814437866211
    6. ' ' → logprob: -15.500814437866211
    7. '-inf' → logprob: -16.12581443786621
    8. '(float' → logprob: -16.25081443786621
    9. ')' → logprob: -16.50081443786621
    10. 'height' → logprob: -16.62581443786621

Token 41: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08162138611078262
    2. ']):' → logprob: -2.5816214084625244
    3. ']:' → logprob: -6.331621170043945
    4. ')' → logprob: -7.956621170043945
    5. ']' → logprob: -8.206621170043945
    6. ' ):' → logprob: -8.706621170043945
    7. ':' → logprob: -9.206621170043945
    8. ' ]' → logprob: -11.456621170043945
    9. '）：' → logprob: -11.456621170043945
    10. ',' → logprob: -11.581621170043945

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022379254922270775
    2. ':' → logprob: -4.272379398345947
    3. '   ' → logprob: -5.897379398345947
    4. ' :' → logprob: -6.522379398345947
    5. '):' → logprob: -6.772379398345947
    6. ' ' → logprob: -6.897379398345947
    7. '    ' → logprob: -7.522379398345947
    8. '<|end|>' → logprob: -7.522379398345947
    9. '        ' → logprob: -8.522378921508789
    10. ')' → logprob: -9.147378921508789

Token 43: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12474235147237778
    2. '       ' → logprob: -2.374742269515991
    3. 'while' (adapté à ' while') → logprob: -4.62474250793457
    4. '        ' → logprob: -5.24974250793457
    5. ' ' → logprob: -5.87474250793457
    6. '    ' → logprob: -5.99974250793457
    7. '   ' → logprob: -6.12474250793457
    8. 'While' → logprob: -7.74974250793457
    9. ' While' → logprob: -7.99974250793457
    10. '<|end|>' → logprob: -8.12474250793457

Token 44: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3132699131965637
    2. 'stack' → logprob: -1.313269853591919
    3. '(stack' → logprob: -12.56326961517334
    4. '	stack' → logprob: -12.56326961517334
    5. ' len' → logprob: -14.43826961517334
    6. 'len' → logprob: -14.68826961517334
    7. '.stack' → logprob: -17.188270568847656
    8. ' ' → logprob: -17.313270568847656
    9. '```' → logprob: -17.813270568847656
    10. '_stack' → logprob: -18.188270568847656

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804447129368782
    2. 'and' → logprob: -3.2880444526672363
    3. '	and' → logprob: -13.163044929504395
    4. 'a' → logprob: -15.163044929504395
    5. ' ' → logprob: -15.288044929504395
    6. '        ' → logprob: -15.913044929504395
    7. '[-' → logprob: -16.163043975830078
    8. 'not' → logprob: -16.913043975830078
    9. ' и' → logprob: -17.038043975830078
    10. '```' → logprob: -17.413043975830078

Token 46: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.5742018222808838
    2. 'he' → logprob: -1.5742018222808838
    3. ' h' → logprob: -1.6992018222808838
    4. 'h' → logprob: -3.074201822280884
    5. ' stack' → logprob: -8.199201583862305
    6. ' he' → logprob: -8.824201583862305
    7. 'height' → logprob: -9.449201583862305
    8. 'stack' → logprob: -9.574201583862305
    9. ' height' → logprob: -10.449201583862305
    10. ' ' → logprob: -12.449201583862305

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018329687882214785
    2. 'stack' → logprob: -6.376832962036133
    3. '[i' → logprob: -9.626832962036133
    4. '	stack' → logprob: -10.751832962036133
    5. ' stack' → logprob: -11.376832962036133
    6. '[s' → logprob: -11.876832962036133
    7. '.stack' → logprob: -12.126832962036133
    8. '(stack' → logprob: -12.376832962036133
    9. ' [' → logprob: -12.751832962036133
    10. ' ' → logprob: -13.001832962036133

Token 48: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0033295683097094297
    2. 'i' → logprob: -6.628329753875732
    3. ' stack' → logprob: -7.128329753875732
    4. '	stack' → logprob: -7.503329753875732
    5. ']' → logprob: -8.003329277038574
    6. '(stack' → logprob: -9.503329277038574
    7. ' ' → logprob: -9.628329277038574
    8. '[' → logprob: -9.753329277038574
    9. '][' → logprob: -10.878329277038574
    10. '```' → logprob: -11.378329277038574

Token 49: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00502644432708621
    2. '-' → logprob: -5.380026340484619
    3. '][-' → logprob: -8.505026817321777
    4. ' ' → logprob: -9.630026817321777
    5. ']' → logprob: -9.630026817321777
    6. ' -' → logprob: -10.880026817321777
    7. ']-' → logprob: -11.005026817321777
    8. '[' → logprob: -11.255026817321777
    9. '   ' → logprob: -11.755026817321777
    10. '```' → logprob: -12.005026817321777

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011988339014351368
    2. '-' → logprob: -5.011988162994385
    3. ']' → logprob: -5.511988162994385
    4. ' ' → logprob: -7.761988162994385
    5. '   ' → logprob: -8.511988639831543
    6. '(-' → logprob: -9.386988639831543
    7. ' -' → logprob: -9.511988639831543
    8. '  ' → logprob: -10.011988639831543
    9. '(' → logprob: -10.011988639831543
    10. '[-' → logprob: -10.136988639831543

Token 51: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20267555117607117
    2. ']]' → logprob: -1.7026755809783936
    3. ']>' → logprob: -6.9526753425598145
    4. ' ]' → logprob: -8.577675819396973
    5. ' ]]' → logprob: -9.577675819396973
    6. ']>=' → logprob: -11.202675819396973
    7. ')]' → logprob: -11.702675819396973
    8. '>]' → logprob: -11.827675819396973
    9. '>' → logprob: -12.202675819396973
    10. '']]' → logprob: -12.327675819396973

Token 52: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6082906126976013
    2. ' >' → logprob: -0.9832906126976013
    3. ' >=' → logprob: -2.733290672302246
    4. '>=' → logprob: -4.108290672302246
    5. ' ' → logprob: -8.858290672302246
    6. ' <' → logprob: -10.733290672302246
    7. '<' → logprob: -11.483290672302246
    8. ']>=' → logprob: -11.608290672302246
    9. ']' → logprob: -12.358290672302246
    10. '    ' → logprob: -13.108290672302246

Token 53: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20141743123531342
    2. ' h' → logprob: -1.7014174461364746
    3. '	h' → logprob: -12.701416969299316
    4. ' ' → logprob: -14.576416969299316
    5. '<h' → logprob: -15.201416969299316
    6. '   ' → logprob: -16.326417922973633
    7. ':h' → logprob: -16.451417922973633
    8. '=h' → logprob: -16.576417922973633
    9. '[h' → logprob: -16.951417922973633
    10. '"h' → logprob: -17.201417922973633

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01645800843834877
    2. '):' → logprob: -4.141458034515381
    3. ' :' → logprob: -8.391457557678223
    4. ':
' → logprob: -8.891457557678223
    5. '):
' → logprob: -10.766457557678223
    6. ')' → logprob: -11.391457557678223
    7. ']:' → logprob: -11.891457557678223
    8. ' ):' → logprob: -12.016457557678223
    9. 'stack' → logprob: -13.141457557678223
    10. '():' → logprob: -13.391457557678223

Token 55: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7709139585494995
    2. '<|end|>' → logprob: -1.3959139585494995
    3. ')' → logprob: -2.145914077758789
    4. 'stack' → logprob: -3.020914077758789
    5. '           ' → logprob: -3.270914077758789
    6. '   ' → logprob: -4.395914077758789
    7. ' stack' → logprob: -4.645914077758789
    8. '
' → logprob: -4.770914077758789
    9. 'pop' → logprob: -4.895914077758789
    10. '(stack' → logprob: -5.145914077758789

Token 56: ' height' (ID: 4679)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.229360818862915
    2. 'stack' → logprob: -1.229360818862915
    3. 'idx' → logprob: -1.479360818862915
    4. 'pop' → logprob: -2.979360818862915
    5. 'index' → logprob: -3.104360818862915
    6. ' stack' → logprob: -3.354360818862915
    7. '           ' → logprob: -4.229360580444336
    8. 'height' (adapté à ' height') → logprob: -4.604360580444336
    9. ' top' → logprob: -4.604360580444336
    10. 'j' → logprob: -4.979360580444336

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870321214199066
    2. '=' → logprob: -1.137032151222229
    3. '_index' → logprob: -9.512032508850098
    4. '_stack' → logprob: -10.137032508850098
    5. '_idx' → logprob: -10.887032508850098
    6. '=index' → logprob: -11.762032508850098
    7. ')' → logprob: -11.887032508850098
    8. ']' → logprob: -12.137032508850098
    9. '_height' → logprob: -12.512032508850098
    10. 'stack' → logprob: -14.262032508850098

Token 58: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005811601877212524
    2. 'stack' → logprob: -5.75581169128418
    3. ' heights' → logprob: -6.00581169128418
    4. ' stack' → logprob: -8.88081169128418
    5. 'height' → logprob: -10.75581169128418
    6. ' he' → logprob: -12.38081169128418
    7. '	stack' → logprob: -14.63081169128418
    8. 'heap' → logprob: -15.13081169128418
    9. '[' → logprob: -16.00581169128418
    10. '   ' → logprob: -16.13081169128418

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027575582498684525
    2. 'stack' → logprob: -8.250275611877441
    3. ' stack' → logprob: -12.125275611877441
    4. '[
' → logprob: -12.625275611877441
    5. '	stack' → logprob: -13.250275611877441
    6. '(stack' → logprob: -13.375275611877441
    7. '_stack' → logprob: -13.625275611877441
    8. '.stack' → logprob: -13.875275611877441
    9. '```' → logprob: -15.875275611877441
    10. '<|end|>' → logprob: -16.625276565551758

Token 60: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -4.60414821645827e-06
    2. ' stack' → logprob: -12.375004768371582
    3. '	stack' → logprob: -15.625004768371582
    4. 'st' → logprob: -17.375003814697266
    5. '(stack' → logprob: -17.750003814697266
    6. '.stack' → logprob: -18.500003814697266
    7. 'stackoverflow' → logprob: -18.750003814697266
    8. ' ' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.125003814697266
    10. 'stk' → logprob: -19.500003814697266

Token 61: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.03440927341580391
    2. '[-' → logprob: -4.159409046173096
    3. '-' → logprob: -4.659409046173096
    4. '][-' → logprob: -5.659409046173096
    5. '].' → logprob: -5.784409046173096
    6. 'pop' → logprob: -6.659409046173096
    7. '-pop' → logprob: -7.909409046173096
    8. '().' → logprob: -8.284409523010254
    9. '(-' → logprob: -9.409409523010254
    10. '```' → logprob: -10.159409523010254

Token 62: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018756741657853127
    2. '()' → logprob: -4.018756866455078
    3. ']' → logprob: -7.643756866455078
    4. ']()' → logprob: -9.768756866455078
    5. '())' → logprob: -10.143756866455078
    6. ')]' → logprob: -11.143756866455078
    7. '()]
' → logprob: -11.893756866455078
    8. '()][' → logprob: -12.893756866455078
    9. '()])
' → logprob: -13.393756866455078
    10. '])' → logprob: -13.393756866455078

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023389199748635292
    2. '<|end|>' → logprob: -4.6483893394470215
    3. '            ' → logprob: -5.6483893394470215
    4. '       ' → logprob: -5.8983893394470215
    5. '            
' → logprob: -6.0233893394470215
    6. '               ' → logprob: -6.7733893394470215
    7. '        ' → logprob: -7.1483893394470215
    8. ' ' → logprob: -7.2733893394470215
    9. ' 
' → logprob: -7.7733893394470215
    10. '<|end|>' → logprob: -8.148388862609863

Token 64: ' left' (ID: 3561)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.4638102948665619
    2. ' width' → logprob: -1.0888103246688843
    3. '           ' → logprob: -3.5888102054595947
    4. ' if' → logprob: -5.963810443878174
    5. 'left' (adapté à ' left') → logprob: -6.588810443878174
    6. 'start' → logprob: -7.213810443878174
    7. 'if' → logprob: -7.338810443878174
    8. '            ' → logprob: -7.338810443878174
    9. ' left' → logprob: -7.838810443878174
    10. ' start' → logprob: -8.838809967041016

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7063413858413696
    2. '=' → logprob: -0.9563413858413696
    3. '_index' → logprob: -2.45634126663208
    4. '_idx' → logprob: -3.58134126663208
    5. '_' → logprob: -5.70634126663208
    6. '_width' → logprob: -6.08134126663208
    7. '=index' → logprob: -7.95634126663208
    8. '=i' → logprob: -8.081341743469238
    9. '_i' → logprob: -8.331341743469238
    10. '_boundary' → logprob: -8.581341743469238

Token 66: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6329137086868286
    2. ' stack' → logprob: -0.7579137086868286
    3. '(stack' → logprob: -8.757913589477539
    4. '0' → logprob: -10.007913589477539
    5. '-' → logprob: -10.132913589477539
    6. '	stack' → logprob: -10.257913589477539
    7. ' -' → logprob: -10.757913589477539
    8. '-stack' → logprob: -12.632913589477539
    9. '   ' → logprob: -12.882913589477539
    10. ' ' → logprob: -13.132913589477539

Token 67: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00032628714689053595
    2. '-' → logprob: -8.375326156616211
    3. ' and' → logprob: -9.500326156616211
    4. 'and' → logprob: -11.125326156616211
    5. '```' → logprob: -12.625326156616211
    6. '[' → logprob: -14.250326156616211
    7. ' -' → logprob: -14.750326156616211
    8. '(-' → logprob: -14.750326156616211
    9. '
' → logprob: -15.125326156616211
    10. '][-' → logprob: -15.625326156616211

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.0
    4. ']' → logprob: -17.75
    5. '   ' → logprob: -18.125
    6. '
' → logprob: -18.875
    7. '(' → logprob: -19.1875
    8. '0' → logprob: -19.3125
    9. '  ' → logprob: -19.375
    10. '()' → logprob: -20.0625

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014610135927796364
    2. ']+' → logprob: -4.264610290527344
    3. '+' → logprob: -8.014610290527344
    4. '1' → logprob: -10.264610290527344
    5. ' +' → logprob: -10.264610290527344
    6. ' ]' → logprob: -11.014610290527344
    7. ' if' → logprob: -11.389610290527344
    8. ')' → logprob: -12.264610290527344
    9. 'if' → logprob: -12.639610290527344
    10. '```' → logprob: -12.639610290527344

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08765160292387009
    2. ' +' → logprob: -2.587651491165161
    3. ' if' → logprob: -4.96265172958374
    4. 'if' → logprob: -6.71265172958374
    5. '1' → logprob: -8.587651252746582
    6. ' ' → logprob: -8.837651252746582
    7. '```' → logprob: -9.962651252746582
    8. '<|end|>' → logprob: -9.962651252746582
    9. '
' → logprob: -11.212651252746582
    10. 'If' → logprob: -12.212651252746582

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -18.250001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '(' → logprob: -19.125001907348633
    7. '
' → logprob: -19.625001907348633
    8. '' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.375001907348633
    10. '`' → logprob: -20.375001907348633

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.500001907348633
    4. '<|end|>' → logprob: -17.875001907348633
    5. '' → logprob: -18.250001907348633
    6. '
' → logprob: -18.875001907348633
    7. '[' → logprob: -19.000001907348633
    8. '(' → logprob: -19.375001907348633
    9. '`' → logprob: -19.750001907348633
    10. '۱' → logprob: -19.812501907348633

Token 73: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.16023357212543488
    2. ' stack' → logprob: -1.9102336168289185
    3. '	stack' → logprob: -12.035233497619629
    4. '(stack' → logprob: -12.660233497619629
    5. '.stack' → logprob: -16.160234451293945
    6. 'Stack' → logprob: -16.785234451293945
    7. 'stackoverflow' → logprob: -16.910234451293945
    8. ' ' → logprob: -17.035234451293945
    9. '  ' → logprob: -17.410234451293945
    10. '_stack' → logprob: -17.660234451293945

Token 75: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.523479700088501
    2. ' else' → logprob: -0.898479700088501
    3. '<|end|>' → logprob: -8.273479461669922
    4. '	else' → logprob: -9.523479461669922
    5. '<|end|>' → logprob: -11.023479461669922
    6. '_else' → logprob: -12.898479461669922
    7. '[]' → logprob: -13.148479461669922
    8. 'elses' → logprob: -13.148479461669922
    9. '#else' → logprob: -13.273479461669922
    10. '```' → logprob: -14.648479461669922

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.00001335144043
    4. '۰' → logprob: -20.62501335144043
    5. '  ' → logprob: -21.00001335144043
    6. '０' → logprob: -21.62501335144043
    7. '    ' → logprob: -22.50001335144043
    8. '=' → logprob: -22.50001335144043
    9. '00' → logprob: -22.62501335144043
    10. 'i' → logprob: -23.00001335144043

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -18.750003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '00' → logprob: -19.375003814697266
    6. '０' → logprob: -19.750003814697266
    7. 'i' → logprob: -20.000003814697266
    8. '000' → logprob: -20.250003814697266
    9. '-' → logprob: -20.625003814697266
    10. '=' → logprob: -20.750003814697266

Token 78: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00612028269097209
    2. '
' → logprob: -6.131120204925537
    3. '            
' → logprob: -6.256120204925537
    4. '<|end|>' → logprob: -7.006120204925537
    5. '       ' → logprob: -7.381120204925537
    6. '               ' → logprob: -9.506120681762695
    7. ' 
' → logprob: -9.881120681762695
    8. '<|end|>' → logprob: -9.881120681762695
    9. '            ' → logprob: -10.006120681762695
    10. '          ' → logprob: -10.381120681762695

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000509187753777951
    2. '```' → logprob: -9.000509262084961
    3. '            
' → logprob: -9.125509262084961
    4. '       ' → logprob: -9.250509262084961
    5. '<|end|>' → logprob: -10.125509262084961
    6. ' area' → logprob: -10.625509262084961
    7. 'area' → logprob: -11.000509262084961
    8. '               ' → logprob: -11.500509262084961
    9. '
' → logprob: -11.500509262084961
    10. '<|end|>' → logprob: -11.625509262084961

Token 80: ' max' (ID: 2999)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3136831521987915
    2. 'area' → logprob: -2.188683032989502
    3. '           ' → logprob: -2.563683032989502
    4. 'right' → logprob: -2.563683032989502
    5. ' width' → logprob: -6.063683032989502
    6. '```' → logprob: -7.938683032989502
    7. ' area' → logprob: -8.18868350982666
    8. ' right' → logprob: -9.06368350982666
    9. '       ' → logprob: -10.93868350982666
    10. 'current' → logprob: -11.68868350982666

Token 81: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.0325924449716695e-05
    2. 'area' → logprob: -11.62501049041748
    3. '_' → logprob: -13.87501049041748
    4. '   ' → logprob: -16.000009536743164
    5. 'Area' → logprob: -16.875009536743164
    6. '_AREA' → logprob: -17.125009536743164
    7. ' area' → logprob: -17.250009536743164
    8. '_space' → logprob: -17.375009536743164
    9. '           ' → logprob: -17.625009536743164
    10. ' _' → logprob: -18.000009536743164

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004661880433559418
    2. '=' → logprob: -5.379662036895752
    3. '=max' → logprob: -10.129661560058594
    4. 'max' → logprob: -13.629661560058594
    5. '   ' → logprob: -15.379661560058594
    6. ' max' → logprob: -16.754661560058594
    7. '```' → logprob: -16.754661560058594
    8. ' ' → logprob: -17.004661560058594
    9. '	' → logprob: -17.254661560058594
    10. '(max' → logprob: -17.379661560058594

Token 83: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04858794063329697
    2. 'max' → logprob: -3.0485880374908447
    3. '	max' → logprob: -15.048587799072266
    4. '(max' → logprob: -15.423587799072266
    5. '=max' → logprob: -18.048587799072266
    6. '[max' → logprob: -18.298587799072266
    7. '_max' → logprob: -19.173587799072266
    8. ',max' → logprob: -19.548587799072266
    9. ' ' → logprob: -19.923587799072266
    10. '.max' → logprob: -20.048587799072266

Token 84: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -9.750060081481934
    3. 'max' → logprob: -13.250060081481934
    4. ' max' → logprob: -16.37506103515625
    5. '(height' → logprob: -17.00006103515625
    6. '(
' → logprob: -17.12506103515625
    7. ',max' → logprob: -17.50006103515625
    8. '[max' → logprob: -17.62506103515625
    9. '=max' → logprob: -18.00006103515625
    10. '```' → logprob: -18.00006103515625

Token 85: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.00013655527436640114
    2. 'area' → logprob: -9.000136375427246
    3. 'max' → logprob: -12.625136375427246
    4. 'Area' → logprob: -13.250136375427246
    5. '(max' → logprob: -13.500136375427246
    6. '_AREA' → logprob: -13.500136375427246
    7. '-area' → logprob: -13.750136375427246
    8. ')' → logprob: -13.875136375427246
    9. '_' → logprob: -14.250136375427246
    10. '   ' → logprob: -14.500136375427246

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ',height' → logprob: -10.625041007995605
    3. ' ,' → logprob: -11.125041007995605
    4. ',max' → logprob: -14.625041007995605
    5. 'height' → logprob: -14.750041007995605
    6. ',(' → logprob: -15.125041007995605
    7. '(height' → logprob: -15.875041007995605
    8. ',
' → logprob: -16.62504005432129
    9. ',left' → logprob: -17.12504005432129
    10. ',

' → logprob: -17.50004005432129

Token 87: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.06310810148715973
    2. 'height' → logprob: -2.813108205795288
    3. '(height' → logprob: -6.813107967376709
    4. ' (' → logprob: -10.563108444213867
    5. ')' → logprob: -12.688108444213867
    6. ',height' → logprob: -12.813108444213867
    7. ' heights' → logprob: -13.063108444213867
    8. '	height' → logprob: -13.313108444213867
    9. ' ' → logprob: -13.563108444213867
    10. '   ' → logprob: -13.938108444213867

Token 88: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0021452659275382757
    2. '*' → logprob: -6.252145290374756
    3. '*(' → logprob: -8.502144813537598
    4. ' ' → logprob: -11.877144813537598
    5. ' *(' → logprob: -13.252144813537598
    6. ')' → logprob: -13.502144813537598
    7. '   ' → logprob: -14.127144813537598
    8. '```' → logprob: -14.502144813537598
    9. '           ' → logprob: -14.877144813537598
    10. '          ' → logprob: -14.877144813537598

Token 89: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03826892003417015
    2. ' (' → logprob: -3.288268804550171
    3. '(' → logprob: -8.41326904296875
    4. '(I' → logprob: -13.16326904296875
    5. ')' → logprob: -13.53826904296875
    6. ' ' → logprob: -14.41326904296875
    7. '(ii' → logprob: -14.78826904296875
    8. '  ' → logprob: -14.91326904296875
    9. '   ' → logprob: -15.16326904296875
    10. '```' → logprob: -16.28826904296875

Token 90: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006762145087122917
    2. ' i' → logprob: -5.0067620277404785
    3. '(i' → logprob: -10.131762504577637
    4. ' (' → logprob: -12.756762504577637
    5. '
' → logprob: -14.131762504577637
    6. '   ' → logprob: -14.381762504577637
    7. ')i' → logprob: -14.381762504577637
    8. '```' → logprob: -14.506762504577637
    9. '(' → logprob: -14.881762504577637
    10. '           ' → logprob: -15.256762504577637

Token 91: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008952532894909382
    2. '-' → logprob: -4.758952617645264
    3. '-left' → logprob: -8.008952140808105
    4. ' ' → logprob: -12.508952140808105
    5. '-l' → logprob: -14.383952140808105
    6. '-stack' → logprob: -14.758952140808105
    7. '[left' → logprob: -15.508952140808105
    8. ' left' → logprob: -15.508952140808105
    9. 'left' → logprob: -15.633952140808105
    10. ' ' → logprob: -16.758953094482422

Token 92: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018150994554162025
    2. ' left' → logprob: -4.018150806427002
    3. '	left' → logprob: -14.39315128326416
    4. '1' → logprob: -15.14315128326416
    5. ' ' → logprob: -16.393150329589844
    6. '[left' → logprob: -16.893150329589844
    7. '   ' → logprob: -17.143150329589844
    8. ':left' → logprob: -17.768150329589844
    9. '(left' → logprob: -17.893150329589844
    10. '_left' → logprob: -18.143150329589844

Token 93: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01142102386802435
    2. '))
' → logprob: -5.011421203613281
    3. ' ))' → logprob: -5.511421203613281
    4. ')' → logprob: -7.886421203613281
    5. ' ))
' → logprob: -8.636421203613281
    6. '))

' → logprob: -9.886421203613281
    7. ' ' → logprob: -11.261421203613281
    8. ' )' → logprob: -11.386421203613281
    9. ')))' → logprob: -12.261421203613281
    10. '))
' → logprob: -12.261421203613281

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013503533555194736
    2. 'stack' → logprob: -7.126350402832031
    3. '   ' → logprob: -7.876350402832031
    4. ' stack' → logprob: -9.501350402832031
    5. '```' → logprob: -9.501350402832031
    6. '``' → logprob: -12.126350402832031
    7. '	stack' → logprob: -12.501350402832031
    8. '           ' → logprob: -13.501350402832031
    9. '	' → logprob: -13.751350402832031
    10. ' ' → logprob: -14.001350402832031

Token 95: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.1979384422302246
    2. ' stack' → logprob: -1.9479384422302246
    3. '       ' → logprob: -3.3229384422302246
    4. '   ' → logprob: -7.447938442230225
    5. '	stack' → logprob: -8.197938919067383
    6. '(stack' → logprob: -10.322938919067383
    7. '.stack' → logprob: -10.447938919067383
    8. '```' → logprob: -10.572938919067383
    9. '_stack' → logprob: -11.697938919067383
    10. ' ' → logprob: -12.697938919067383

Token 96: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003902775060851127
    2. '.' → logprob: -7.87539005279541
    3. 'append' → logprob: -12.12539005279541
    4. '.push' → logprob: -13.12539005279541
    5. ' .' → logprob: -14.12539005279541
    6. '.app' → logprob: -14.25039005279541
    7. '.pop' → logprob: -14.37539005279541
    8. '.Append' → logprob: -15.50039005279541
    9. ' append' → logprob: -15.50039005279541
    10. '.extend' → logprob: -16.375391006469727

Token 97: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.375003814697266
    3. '(
' → logprob: -19.000003814697266
    4. 'i' → logprob: -19.000003814697266
    5. ' (' → logprob: -19.500003814697266
    6. '(I' → logprob: -19.875003814697266
    7. '((' → logprob: -20.750003814697266
    8. '(ii' → logprob: -21.875003814697266
    9. ')(' → logprob: -22.750003814697266
    10. ')i' → logprob: -22.875003814697266

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.643152740551159e-05
    2. ')
' → logprob: -10.250036239624023
    3. ' )' → logprob: -14.125036239624023
    4. ')return' → logprob: -15.750036239624023
    5. ')

' → logprob: -16.625036239624023
    6. '))' → logprob: -18.125036239624023
    7. ')
' → logprob: -18.375036239624023
    8. '   ' → logprob: -18.875036239624023
    9. '）' → logprob: -19.375036239624023
    10. ')`' → logprob: -19.625036239624023

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3877938687801361
    2. 'return' → logprob: -1.1377938985824585
    3. '
' → logprob: -7.762794017791748
    4. ' return' → logprob: -7.887794017791748
    5. '    
' → logprob: -9.76279354095459
    6. '```' → logprob: -9.88779354095459
    7. '	return' → logprob: -11.63779354095459
    8. '  
' → logprob: -13.76279354095459
    9. ' ' → logprob: -14.13779354095459
    10. '``' → logprob: -14.51279354095459

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005637701600790024
    2. '   ' → logprob: -5.2556376457214355
    3. '
' → logprob: -8.505638122558594
    4. ' return' → logprob: -8.630638122558594
    5. '    
' → logprob: -11.505638122558594
    6. '	return' → logprob: -11.880638122558594
    7. '```' → logprob: -12.380638122558594
    8. ' ' → logprob: -14.630638122558594
    9. ':return' → logprob: -14.880638122558594
    10. '  
' → logprob: -15.505638122558594

Token 101: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011047935113310814
    2. ' max' → logprob: -4.511047840118408
    3. '(max' → logprob: -16.76104736328125
    4. '	max' → logprob: -18.76104736328125
    5. ' ' → logprob: -19.26104736328125
    6. '[max' → logprob: -19.38604736328125
    7. '_max' → logprob: -19.63604736328125
    8. '   ' → logprob: -20.51104736328125
    9. ',max' → logprob: -21.13604736328125
    10. '=max' → logprob: -21.63604736328125

Token 102: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.25
    3. 'area' → logprob: -16.0
    4. '_are' → logprob: -18.0
    5. '_stack' → logprob: -18.75
    6. '(area' → logprob: -18.75
    7. '_AREA' → logprob: -18.875
    8. '_max' → logprob: -18.875
    9. '_array' → logprob: -19.0
    10. 'Area' → logprob: -19.875

Token 103: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09349749237298965
    2. '<|end|>' → logprob: -3.2184975147247314
    3. '\n' → logprob: -3.7184975147247314
    4. 'n' → logprob: -4.468497276306152
    5. 'def' → logprob: -5.468497276306152
    6. '```' → logprob: -6.218497276306152
    7. 'newline' → logprob: -6.343497276306152
    8. '

' → logprob: -6.593497276306152
    9. '[' → logprob: -7.343497276306152
    10. '    
' → logprob: -7.343497276306152

Token 104: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03941503167152405
    2. 'if' → logprob: -3.664415121078491
    3. 'def' → logprob: -4.664414882659912
    4. 'num' → logprob: -6.914414882659912
    5. 'print' → logprob: -7.039414882659912
    6. 'N' → logprob: -7.539414882659912
    7. '
' → logprob: -8.41441535949707
    8. '```' → logprob: -8.66441535949707
    9. '    
' → logprob: -8.91441535949707
    10. '#' → logprob: -9.03941535949707

Token 105: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.006720347795635462
    2. 'True' → logprob: -5.006720542907715
    3. '(True' → logprob: -12.381720542907715
    4. ' ' → logprob: -15.006720542907715
    5. '=True' → logprob: -16.0067195892334
    6. '1' → logprob: -16.2567195892334
    7. ' Tru' → logprob: -16.2567195892334
    8. ' true' → logprob: -17.1317195892334
    9. ' T' → logprob: -17.2567195892334
    10. 'true' → logprob: -17.3817195892334

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011689399980241433
    2. '():' → logprob: -9.375117301940918
    3. ' :' → logprob: -10.875117301940918
    4. ':
' → logprob: -11.875117301940918
    5. ':**' → logprob: -12.375117301940918
    6. '):' → logprob: -14.875117301940918
    7. '(' → logprob: -15.000117301940918
    8. ',' → logprob: -15.250117301940918
    9. ':return' → logprob: -15.875117301940918
    10. '   ' → logprob: -16.1251163482666

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00162043038289994
    2. ' try' → logprob: -6.501620292663574
    3. '    
' → logprob: -10.001620292663574
    4. ':' → logprob: -10.876620292663574
    5. ' input' → logprob: -11.001620292663574
    6. 'try' → logprob: -11.376620292663574
    7. ' line' → logprob: -12.001620292663574
    8. '   ' → logprob: -12.126620292663574
    9. ' readline' → logprob: -13.251620292663574
    10. '	try' → logprob: -13.251620292663574

Token 108: ' H' (ID: 487)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2823025584220886
    2. 'line' → logprob: -1.9073026180267334
    3. 'he' → logprob: -3.0323026180267334
    4. 'n' → logprob: -3.2823026180267334
    5. ' n' → logprob: -5.782302379608154
    6. 'data' → logprob: -6.282302379608154
    7. 'nums' → logprob: -6.407302379608154
    8. 'h' → logprob: -6.532302379608154
    9. ' heights' → logprob: -7.282302379608154
    10. 'width' → logprob: -7.532302379608154

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7125036716461182
    2. ' =' → logprob: -1.5875036716461182
    3. 'e' → logprob: -1.7125036716461182
    4. '=' → logprob: -2.837503671646118
    5. ',W' → logprob: -3.587503671646118
    6. 's' → logprob: -4.212503433227539
    7. 'W' → logprob: -4.462503433227539
    8. 'eight' → logprob: -4.712503433227539
    9. 'ei' → logprob: -6.837503433227539
    10. 't' → logprob: -8.212503433227539

Token 110: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.004625579807907343
    2. ' W' → logprob: -5.3796257972717285
    3. ' ' → logprob: -13.25462532043457
    4. '   ' → logprob: -13.25462532043457
    5. 'B' → logprob: -14.62962532043457
    6. '  ' → logprob: -14.75462532043457
    7. '```' → logprob: -15.37962532043457
    8. '    ' → logprob: -15.37962532043457
    9. 'w' → logprob: -15.75462532043457
    10. '	W' → logprob: -15.75462532043457

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693126499652863
    2. ' =' → logprob: -2.1269311904907227
    3. '=input' → logprob: -13.001931190490723
    4. ',' → logprob: -14.251931190490723
    5. ' ' → logprob: -16.25193214416504
    6. '=line' → logprob: -16.25193214416504
    7. '=

' → logprob: -16.87693214416504
    8. ')' → logprob: -16.87693214416504
    9. '＝' → logprob: -17.50193214416504
    10. '[' → logprob: -17.87693214416504

Token 112: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.57594895362854
    2. ' map' → logprob: -0.82594895362854
    3. '	map' → logprob: -12.200948715209961
    4. ' ' → logprob: -13.325948715209961
    5. '(map' → logprob: -13.450948715209961
    6. 'list' → logprob: -14.700948715209961
    7. '[' → logprob: -15.325948715209961
    8. 'input' → logprob: -15.575948715209961
    9. '  ' → logprob: -15.950948715209961
    10. ' list' → logprob: -15.950948715209961

Token 113: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004302287939935923
    2. '(' → logprob: -5.629302501678467
    3. '(input' → logprob: -7.629302501678467
    4. 'int' → logprob: -8.754302024841309
    5. '(str' → logprob: -10.004302024841309
    6. '<int' → logprob: -12.504302024841309
    7. '[int' → logprob: -13.504302024841309
    8. 'input' → logprob: -13.629302024841309
    9. '(
' → logprob: -13.754302024841309
    10. '(list' → logprob: -13.754302024841309

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2017006129026413
    2. ',input' → logprob: -1.7017005681991577
    3. 'input' → logprob: -8.951700210571289
    4. '(input' → logprob: -9.451700210571289
    5. ',int' → logprob: -9.951700210571289
    6. '(' → logprob: -11.201700210571289
    7. ' ,' → logprob: -11.701700210571289
    8. '(),' → logprob: -12.451700210571289
    9. '```' → logprob: -13.951700210571289
    10. ')' → logprob: -14.076700210571289

Token 115: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008618354797363281
    2. ' input' → logprob: -4.758618354797363
    3. 'int' → logprob: -13.133618354797363
    4. 'sys' → logprob: -14.008618354797363
    5. ')' → logprob: -15.008618354797363
    6. ',input' → logprob: -15.383618354797363
    7. '=input' → logprob: -15.758618354797363
    8. 'str' → logprob: -16.633617401123047
    9. ' sys' → logprob: -16.758617401123047
    10. '	input' → logprob: -17.383617401123047

Token 116: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.0484450437361374e-05
    2. '()' → logprob: -10.125040054321289
    3. ' ().' → logprob: -15.000040054321289
    4. '()
' → logprob: -18.12504005432129
    5. '())' → logprob: -18.25004005432129
    6. '(' → logprob: -18.87504005432129
    7. '.strip' → logprob: -19.50004005432129
    8. '.readline' → logprob: -19.62504005432129
    9. ')' → logprob: -20.25004005432129
    10. '.' → logprob: -20.25004005432129

Token 117: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2571541965007782
    2. 'split' → logprob: -1.5071542263031006
    3. 'rstrip' → logprob: -5.2571539878845215
    4. 'read' → logprob: -14.38215446472168
    5. ' strip' → logprob: -15.13215446472168
    6. 'str' → logprob: -16.00715446472168
    7. '(split' → logprob: -16.13215446472168
    8. ' split' → logprob: -16.25715446472168
    9. ')' → logprob: -16.75715446472168
    10. '.strip' → logprob: -17.00715446472168

Token 118: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2585673928260803
    2. ')' → logprob: -1.5085673332214355
    3. '()' → logprob: -5.6335673332214355
    4. '())
' → logprob: -5.8835673332214355
    5. ')
' → logprob: -8.883567810058594
    6. '))' → logprob: -9.258567810058594
    7. '()))' → logprob: -11.883567810058594
    8. '()
' → logprob: -12.508567810058594
    9. '())
' → logprob: -13.133567810058594
    10. '())

' → logprob: -13.383567810058594

Token 119: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.621651828289032
    2. '   ' → logprob: -1.4966518878936768
    3. 'if' → logprob: -1.4966518878936768
    4. '<|end|>' → logprob: -4.371651649475098
    5. '    
' → logprob: -6.996651649475098
    6. '
' → logprob: -7.621651649475098
    7. '	if' → logprob: -7.746651649475098
    8. ' ' → logprob: -8.496651649475098
    9. ' 
' → logprob: -8.746651649475098
    10. '  ' → logprob: -8.871651649475098

Token 120: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003257927019149065
    2. ' if' → logprob: -5.753257751464844
    3. '   ' → logprob: -9.503257751464844
    4. '    ' → logprob: -13.628257751464844
    5. ' ' → logprob: -13.878257751464844
    6. '0' → logprob: -13.878257751464844
    7. '  ' → logprob: -14.128257751464844
    8. '
' → logprob: -14.503257751464844
    9. '    
' → logprob: -14.503257751464844
    10. 'If' → logprob: -15.003257751464844

Token 121: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16022920608520508
    2. ' H' → logprob: -1.910229206085205
    3. ' not' → logprob: -12.910228729248047
    4. ' ' → logprob: -13.535228729248047
    5. '(' → logprob: -14.660228729248047
    6. '(H' → logprob: -14.660228729248047
    7. ' (' → logprob: -15.910228729248047
    8. 'not' → logprob: -16.035228729248047
    9. ' ' → logprob: -16.035228729248047
    10. '	H' → logprob: -16.535228729248047

Token 122: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31332001090049744
    2. ' ==' → logprob: -1.3133200407028198
    3. '=' → logprob: -10.93832015991211
    4. ' ' → logprob: -11.31332015991211
    5. ')==' → logprob: -11.31332015991211
    6. '0' → logprob: -12.18832015991211
    7. '===' → logprob: -12.56332015991211
    8. ')' → logprob: -13.81332015991211
    9. ']==' → logprob: -13.81332015991211
    10. '()==' → logprob: -13.81332015991211

Token 123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -18.500085830688477
    4. '```' → logprob: -18.500085830688477
    5. '   ' → logprob: -19.125085830688477
    6. '０' → logprob: -20.000085830688477
    7. 'W' → logprob: -20.250085830688477
    8. '  ' → logprob: -20.250085830688477
    9. '_' → logprob: -20.812585830688477
    10. 'and' → logprob: -20.937585830688477

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -15.437508583068848
    4. '۰' → logprob: -16.375009536743164
    5. 'W' → logprob: -16.500009536743164
    6. 'and' → logprob: -17.000009536743164
    7. '０' → logprob: -17.812509536743164
    8. '   ' → logprob: -18.000009536743164
    9. '``' → logprob: -18.062509536743164
    10. '

' → logprob: -18.125009536743164

Token 125: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132671117782593
    2. 'and' → logprob: -1.3132671117782593
    3. '   ' → logprob: -13.31326675415039
    4. ' ' → logprob: -13.43826675415039
    5. '0' → logprob: -13.81326675415039
    6. '	and' → logprob: -14.56326675415039
    7. ' or' → logprob: -14.93826675415039
    8. '  ' → logprob: -16.06326675415039
    9. ':' → logprob: -16.18826675415039
    10. ' ' → logprob: -16.56326675415039

Token 126: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.018150413408875465
    2. ' W' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.768150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '  ' → logprob: -17.143150329589844
    6. '	W' → logprob: -17.393150329589844
    7. ' ' → logprob: -19.643150329589844
    8. '    ' → logprob: -20.143150329589844
    9. '0' → logprob: -21.768150329589844
    10. 'w' → logprob: -22.268150329589844

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931533217430115
    2. ' ==' → logprob: -0.6931533217430115
    3. '0' → logprob: -12.943153381347656
    4. ')==' → logprob: -13.693153381347656
    5. ' ' → logprob: -14.193153381347656
    6. '=' → logprob: -14.443153381347656
    7. '<|end|>' → logprob: -15.193153381347656
    8. ')' → logprob: -15.318153381347656
    9. ']==' → logprob: -15.443153381347656
    10. '==
' → logprob: -15.818153381347656

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000805341056548059
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.125804901123047
    4. '  ' → logprob: -16.375804901123047
    5. '```' → logprob: -17.875804901123047
    6. '<|end|>' → logprob: -17.938304901123047
    7. '۰' → logprob: -18.063304901123047
    8. ' ' → logprob: -18.500804901123047
    9. '=' → logprob: -19.188304901123047
    10. '    ' → logprob: -19.875804901123047

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.37523078918457
    4. '۰' → logprob: -18.00023078918457
    5. '  ' → logprob: -18.06273078918457
    6. '<|end|>' → logprob: -18.75023078918457
    7. '```' → logprob: -19.25023078918457
    8. '০' → logprob: -19.37523078918457
    9. ')' → logprob: -19.56273078918457
    10. '०' → logprob: -19.75023078918457

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04866117238998413
    2. ':
' → logprob: -3.048661231994629
    3. '   ' → logprob: -9.548661231994629
    4. '       ' → logprob: -13.923661231994629
    5. ':return' → logprob: -14.923661231994629
    6. ':
' → logprob: -15.298661231994629
    7. '	break' → logprob: -15.423661231994629
    8. ' :' → logprob: -15.548661231994629
    9. '):
' → logprob: -15.798661231994629
    10. '.' → logprob: -16.048660278320312

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6004405617713928
    2. '   ' → logprob: -0.8504405617713928
    3. ':' → logprob: -3.725440502166748
    4. ':
' → logprob: -9.475440979003906
    5. '	break' → logprob: -11.600440979003906
    6. '   ' → logprob: -12.850440979003906
    7. ' break' → logprob: -12.975440979003906
    8. ',' → logprob: -13.100440979003906
    9. '.' → logprob: -13.475440979003906
    10. '	' → logprob: -13.725440979003906

Token 132: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.434143602848053
    2. ' break' → logprob: -1.1841435432434082
    3. '       ' → logprob: -3.184143543243408
    4. '   ' → logprob: -5.559143543243408
    5. '	break' → logprob: -7.059143543243408
    6. '           ' → logprob: -10.184144020080566
    7. '_break' → logprob: -12.559144020080566
    8. '
' → logprob: -13.684144020080566
    9. '```' → logprob: -13.684144020080566
    10. ' ' → logprob: -14.309144020080566

Token 133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015027916990220547
    2. '    
' → logprob: -4.51502799987793
    3. '
' → logprob: -5.64002799987793
    4. ' heights' → logprob: -8.26502799987793
    5. 'he' → logprob: -9.14002799987793
    6. 'height' → logprob: -11.64002799987793
    7. '<|end|>' → logprob: -12.01502799987793
    8. '  
' → logprob: -12.14002799987793
    9. '        
' → logprob: -12.51502799987793
    10. '   
' → logprob: -12.64002799987793

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3573896884918213
    2. 'matrix' → logprob: -1.3573896884918213
    3. ' matrix' → logprob: -3.4823896884918213
    4. '    
' → logprob: -5.232389450073242
    5. '
' → logprob: -5.607389450073242
    6. 'he' → logprob: -6.732389450073242
    7. ' heights' → logprob: -7.732389450073242
    8. '	matrix' → logprob: -7.732389450073242
    9. 'grid' → logprob: -7.857389450073242
    10. 'mat' → logprob: -8.357389450073242

Token 135: ' height' (ID: 4679)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.08497295528650284
    2. 'grid' → logprob: -2.834972858428955
    3. 'board' → logprob: -4.084972858428955
    4. 'field' → logprob: -6.334972858428955
    5. 'graph' → logprob: -6.834972858428955
    6. 'he' → logprob: -7.084972858428955
    7. 'hist' → logprob: -7.459972858428955
    8. 'mat' → logprob: -7.834972858428955
    9. '   ' → logprob: -7.959972858428955
    10. ' matrix' → logprob: -8.834973335266113

Token 136: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001316785579547286
    2. '=' → logprob: -6.751316547393799
    3. ' =' → logprob: -8.876317024230957
    4. '_matrix' → logprob: -13.251317024230957
    5. 'he' → logprob: -13.501317024230957
    6. '=[]' → logprob: -15.001317024230957
    7. '_he' → logprob: -15.001317024230957
    8. '_s' → logprob: -15.126317024230957
    9. 'He' → logprob: -15.251317024230957
    10. 'map' → logprob: -15.251317024230957

Token 137: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.596189022064209
    2. '[' → logprob: -1.096189022064209
    3. '[]' → logprob: -2.846189022064209
    4. 'list' → logprob: -2.971189022064209
    5. ' [' → logprob: -6.471189022064209
    6. '[]
' → logprob: -6.596189022064209
    7. '[int' → logprob: -6.971189022064209
    8. '[input' → logprob: -7.596189022064209
    9. ' list' → logprob: -8.846189498901367
    10. '[]

' → logprob: -8.846189498901367

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018561340868473053
    2. 'int' → logprob: -4.018561363220215
    3. 'list' → logprob: -8.518561363220215
    4. ']' → logprob: -9.518561363220215
    5. '1' → logprob: -10.018561363220215
    6. '[int' → logprob: -10.268561363220215
    7. ' ' → logprob: -10.768561363220215
    8. ' int' → logprob: -11.768561363220215
    9. '```' → logprob: -12.143561363220215
    10. '*' → logprob: -12.518561363220215

Token 139: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018465032801032066
    2. ']*' → logprob: -4.018465042114258
    3. ' for' → logprob: -8.143465042114258
    4. 'for' → logprob: -10.768465042114258
    5. ')' → logprob: -13.893465042114258
    6. ']*(' → logprob: -14.018465042114258
    7. '   ' → logprob: -14.518465042114258
    8. ' ]' → logprob: -14.518465042114258
    9. '*' → logprob: -15.393465042114258
    10. ' *' → logprob: -16.143465042114258

Token 140: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -9.496052371105179e-05
    2. ' W' → logprob: -9.87509536743164
    3. '(W' → logprob: -10.12509536743164
    4. '   ' → logprob: -13.00009536743164
    5. '	W' → logprob: -14.87509536743164
    6. ' ' → logprob: -15.00009536743164
    7. '(' → logprob: -15.75009536743164
    8. 'H' → logprob: -16.12509536743164
    9. '  ' → logprob: -16.50009536743164
    10. '<W' → logprob: -17.00009536743164

Token 141: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07579652965068817
    2. ' for' → logprob: -3.575796604156494
    3. '
' → logprob: -3.825796604156494
    4. '   ' → logprob: -4.200796604156494
    5. 'area' → logprob: -5.200796604156494
    6. '    
' → logprob: -6.575796604156494
    7. 'areas' → logprob: -8.325796127319336
    8. '<|end|>' → logprob: -8.325796127319336
    9. 'width' → logprob: -8.700796127319336
    10. 'he' → logprob: -9.325796127319336

Token 142: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10034846514463425
    2. 'area' → logprob: -2.600348472595215
    3. 'max' → logprob: -4.225348472595215
    4. 'result' → logprob: -5.600348472595215
    5. ' for' → logprob: -6.850348472595215
    6. '   ' → logprob: -6.850348472595215
    7. 'total' → logprob: -7.725348472595215
    8. 'answer' → logprob: -8.600348472595215
    9. 'ans' → logprob: -9.600348472595215
    10. 'res' → logprob: -10.600348472595215

Token 143: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04669603705406189
    2. 'area' → logprob: -3.2966959476470947
    3. 'result' → logprob: -5.296696186065674
    4. 'max' (adapté à ' max') → logprob: -5.921696186065674
    5. 'answer' → logprob: -7.671696186065674
    6. 'total' → logprob: -8.546695709228516
    7. ' for' → logprob: -8.921695709228516
    8. 'ans' → logprob: -9.546695709228516
    9. 'res' → logprob: -10.296695709228516
    10. '   ' → logprob: -10.796695709228516

Token 144: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.3544423381972592e-05
    2. 'area' → logprob: -12.12501335144043
    3. '_height' → logprob: -12.62501335144043
    4. '_' → logprob: -12.62501335144043
    5. '_rectangle' → logprob: -13.75001335144043
    6. '_rect' → logprob: -15.87501335144043
    7. 'Area' → logprob: -16.50001335144043
    8. ' area' → logprob: -17.25001335144043
    9. '_are' → logprob: -17.37501335144043
    10. '_answer' → logprob: -17.50001335144043

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. ',' → logprob: -14.20094108581543
    4. ' ' → logprob: -14.95094108581543
    5. '   ' → logprob: -17.07594108581543
    6. '  ' → logprob: -17.45094108581543
    7. 's' → logprob: -17.70094108581543
    8. '＝' → logprob: -18.07594108581543
    9. ' =
' → logprob: -18.20094108581543
    10. '=int' → logprob: -18.32594108581543

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006279678200371563
    2. ' ' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.688127517700195
    4. 'max' → logprob: -15.125627517700195
    5. ' ' → logprob: -16.000627517700195
    6. '=' → logprob: -16.313127517700195
    7. '1' → logprob: -16.500627517700195
    8. '```' → logprob: -16.688127517700195
    9. '[' → logprob: -17.000627517700195
    10. '۰' → logprob: -17.188127517700195

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.750021934509277
    4. '1' → logprob: -15.687521934509277
    5. 'max' → logprob: -16.062522888183594
    6. '```' → logprob: -17.375022888183594
    7. '  ' → logprob: -17.937522888183594
    8. '=' → logprob: -18.000022888183594
    9. 'int' → logprob: -18.062522888183594
    10. '[' → logprob: -18.187522888183594

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3316819369792938
    2. ' for' → logprob: -1.7066819667816162
    3. 'for' → logprob: -2.831681966781616
    4. '
' → logprob: -3.206681966781616
    5. '<|end|>' → logprob: -7.456681728363037
    6. '	for' → logprob: -7.706681728363037
    7. '    
' → logprob: -8.331682205200195
    8. ' 
' → logprob: -9.956682205200195
    9. '  
' → logprob: -10.706682205200195
    10. '	
' → logprob: -11.206682205200195

Token 149: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03542957082390785
    2. ' for' → logprob: -3.5354294776916504
    3. '   ' → logprob: -5.53542947769165
    4. '
' → logprob: -6.53542947769165
    5. '	for' → logprob: -8.285429954528809
    6. ' 
' → logprob: -12.535429954528809
    7. '<|end|>' → logprob: -12.535429954528809
    8. '    
' → logprob: -12.660429954528809
    9. '\n' → logprob: -12.660429954528809
    10. '	
' → logprob: -14.910429954528809

Token 150: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00021641071361955255
    2. ' for' → logprob: -8.500216484069824
    3. '   ' → logprob: -11.750216484069824
    4. '
' → logprob: -12.250216484069824
    5. '	for' → logprob: -15.125216484069824
    6. '    
' → logprob: -17.125215530395508
    7. ' 
' → logprob: -19.500215530395508
    8. 'print' → logprob: -20.000215530395508
    9. '

' → logprob: -20.250215530395508
    10. 'while' → logprob: -20.500215530395508

Token 151: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009655343601480126
    2. ' _' → logprob: -7.000965595245361
    3. '_h' → logprob: -11.000965118408203
    4. 'h' → logprob: -11.000965118408203
    5. '_i' → logprob: -11.125965118408203
    6. 'i' → logprob: -13.500965118408203
    7. ' h' → logprob: -13.500965118408203
    8. '_H' → logprob: -13.625965118408203
    9. '_row' → logprob: -14.000965118408203
    10. ' i' → logprob: -15.250965118408203

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001329791557509452
    2. 'in' → logprob: -9.00013256072998
    3. ' ' → logprob: -11.87513256072998
    4. '<|end|>' → logprob: -14.00013256072998
    5. 'range' → logprob: -14.25013256072998
    6. '	in' → logprob: -15.12513256072998
    7. '  ' → logprob: -15.25013256072998
    8. 'i' → logprob: -15.37513256072998
    9. 'w' → logprob: -16.375133514404297
    10. ' i' → logprob: -16.375133514404297

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002346488763578236
    2. ' range' → logprob: -8.375234603881836
    3. '(range' → logprob: -12.875234603881836
    4. 'ange' → logprob: -14.500234603881836
    5. '	range' → logprob: -14.750234603881836
    6. 'rang' → logprob: -15.000234603881836
    7. 'ran' → logprob: -16.375234603881836
    8. ')' → logprob: -16.875234603881836
    9. '_' → logprob: -17.500234603881836
    10. ' ' → logprob: -17.500234603881836

Token 154: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0031860284507274628
    2. 'H' → logprob: -5.753186225891113
    3. '(' → logprob: -11.753186225891113
    4. ' H' → logprob: -15.753186225891113
    5. '   ' → logprob: -16.128185272216797
    6. '	H' → logprob: -16.253185272216797
    7. '(
' → logprob: -17.753185272216797
    8. 'HBox' → logprob: -17.753185272216797
    9. ',H' → logprob: -18.878185272216797
    10. '0' → logprob: -19.003185272216797

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005430239252746105
    2. '):
' → logprob: -5.505430221557617
    3. ':' → logprob: -6.755430221557617
    4. ' ):' → logprob: -8.880430221557617
    5. '():' → logprob: -11.255430221557617
    6. '   ' → logprob: -11.255430221557617
    7. '):
' → logprob: -11.755430221557617
    8. ' :' → logprob: -12.380430221557617
    9. ']:' → logprob: -13.255430221557617
    10. ' ):
' → logprob: -13.380430221557617

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018140466883778572
    2. '   ' → logprob: -4.2681403160095215
    3. ' line' → logprob: -6.7681403160095215
    4. 'row' → logprob: -7.2681403160095215
    5. ' row' → logprob: -7.2681403160095215
    6. 'line' → logprob: -7.7681403160095215
    7. 'rows' → logprob: -8.39314079284668
    8. 'tokens' → logprob: -8.64314079284668
    9. '	   ' → logprob: -9.39314079284668
    10. ' heights' → logprob: -9.64314079284668

Token 157: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.10368672013282776
    2. ' row' → logprob: -2.353686809539795
    3. 'line' → logprob: -5.853686809539795
    4. '   ' → logprob: -7.853686809539795
    5. ' line' → logprob: -9.978686332702637
    6. 'he' → logprob: -10.103686332702637
    7. 'arr' → logprob: -10.353686332702637
    8. 'rows' → logprob: -10.978686332702637
    9. 'for' → logprob: -11.353686332702637
    10. '       ' → logprob: -11.728686332702637

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044363260269165
    2. '=' → logprob: -3.2880444526672363
    3. ' ' → logprob: -13.413043975830078
    4. 's' → logprob: -15.038043975830078
    5. '=list' → logprob: -15.163043975830078
    6. ' =[' → logprob: -15.538043975830078
    7. '=input' → logprob: -15.788043975830078
    8. '   ' → logprob: -15.913043975830078
    9. ',' → logprob: -16.163043975830078
    10. ' =
' → logprob: -16.413043975830078

Token 159: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00320052751339972
    2. ' list' → logprob: -5.753200531005859
    3. 'input' → logprob: -11.37820053100586
    4. 'map' → logprob: -11.37820053100586
    5. ' input' → logprob: -17.62820053100586
    6. '[list' → logprob: -18.25320053100586
    7. '	list' → logprob: -18.50320053100586
    8. '[' → logprob: -18.87820053100586
    9. ' map' → logprob: -19.00320053100586
    10. 'List' → logprob: -19.62820053100586

Token 160: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001242772996192798
    2. '()' → logprob: -9.000123977661133
    3. ' ().' → logprob: -14.000123977661133
    4. '(' → logprob: -19.125123977661133
    5. '.rstrip' → logprob: -19.625123977661133
    6. '())' → logprob: -20.125123977661133
    7. '()-' → logprob: -20.125123977661133
    8. '.strip' → logprob: -20.125123977661133
    9. 'rstrip' → logprob: -20.125123977661133
    10. '()<' → logprob: -20.250123977661133

Token 161: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07074255496263504
    2. 'rstrip' → logprob: -3.070742607116699
    3. 'split' → logprob: -3.820742607116699
    4. ' strip' → logprob: -17.445741653442383
    5. 'str' → logprob: -18.195741653442383
    6. ' split' → logprob: -19.570741653442383
    7. '.rstrip' → logprob: -19.570741653442383
    8. 'rs' → logprob: -19.570741653442383
    9. 'startswith' → logprob: -19.820741653442383
    10. 'decode' → logprob: -20.070741653442383

Token 162: '('\' (ID: 24345)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03898150846362114
    2. '()' → logprob: -3.2889814376831055
    3. '('\' → logprob: -7.0389814376831055
    4. '()
' → logprob: -10.788981437683105
    5. '()\' → logprob: -10.788981437683105
    6. '('' → logprob: -11.663981437683105
    7. 'split' → logprob: -12.663981437683105
    8. '(' → logprob: -13.413981437683105
    9. ''\' → logprob: -13.788981437683105
    10. ' ().' → logprob: -13.788981437683105

Token 163: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2021448314189911
    2. 'n' → logprob: -1.7021448612213135
    3. 'split' → logprob: -8.702144622802734
    4. '
' → logprob: -9.077144622802734
    5. '')' → logprob: -9.077144622802734
    6. '('\' → logprob: -9.077144622802734
    7. ')' → logprob: -9.202144622802734
    8. ''\' → logprob: -9.827144622802734
    9. '\' → logprob: -11.077144622802734
    10. '\r' → logprob: -11.202144622802734

Token 164: '')
' (ID: 2515)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.08654574304819107
    2. '()).' → logprob: -2.836545705795288
    3. '').' → logprob: -4.086545944213867
    4. ')' → logprob: -5.461545944213867
    5. ' ).' → logprob: -6.086545944213867
    6. '()' → logprob: -7.836545944213867
    7. '().' → logprob: -7.961545944213867
    8. '())' → logprob: -9.961545944213867
    9. '").' → logprob: -10.211545944213867
    10. '   ' → logprob: -10.711545944213867

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2896018326282501
    2. '   ' → logprob: -1.4146018028259277
    3. ' for' → logprob: -5.164601802825928
    4. 'for' → logprob: -6.914601802825928
    5. '<|end|>' → logprob: -7.039601802825928
    6. '
' → logprob: -8.289602279663086
    7. '	for' → logprob: -8.289602279663086
    8. '	' → logprob: -9.539602279663086
    9. '	   ' → logprob: -9.539602279663086
    10. '        
' → logprob: -10.039602279663086

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3172934949398041
    2. ' for' → logprob: -1.3172935247421265
    3. '       ' → logprob: -5.567293643951416
    4. '   ' → logprob: -8.817293167114258
    5. '	for' → logprob: -10.067293167114258
    6. ' ' → logprob: -12.067293167114258
    7. '
' → logprob: -13.442293167114258
    8. '        
' → logprob: -14.067293167114258
    9. ',' → logprob: -14.442293167114258
    10. '[' → logprob: -14.442293167114258

Token 167: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5793359875679016
    2. 'j' → logprob: -0.8293359875679016
    3. ' i' → logprob: -6.079336166381836
    4. 'i' → logprob: -6.829336166381836
    5. ' idx' → logprob: -11.454336166381836
    6. 'idx' → logprob: -11.829336166381836
    7. ' col' → logprob: -14.829336166381836
    8. '	j' → logprob: -14.829336166381836
    9. 'index' → logprob: -15.329336166381836
    10. ' ' → logprob: -15.454336166381836

Token 168: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33391284942626953
    2. ' in' → logprob: -1.3339128494262695
    3. 'in' → logprob: -3.9589128494262695
    4. ' ,' → logprob: -6.8339128494262695
    5. ' ' → logprob: -8.45891284942627
    6. ',row' → logprob: -10.45891284942627
    7. ',value' → logprob: -12.33391284942627
    8. ',in' → logprob: -12.33391284942627
    9. ',char' → logprob: -12.70891284942627
    10. '   ' → logprob: -12.83391284942627

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048591118305921555
    2. ' range' → logprob: -3.048591136932373
    3. '(range' → logprob: -13.173590660095215
    4. 'ange' → logprob: -13.923590660095215
    5. '	range' → logprob: -14.298590660095215
    6. ' ' → logprob: -16.17359161376953
    7. '   ' → logprob: -16.17359161376953
    8. ' xrange' → logprob: -16.42359161376953
    9. '
' → logprob: -16.92359161376953
    10. '  ' → logprob: -17.54859161376953

Token 170: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.005423958413302898
    2. 'W' → logprob: -5.2554240226745605
    3. '(len' → logprob: -9.005423545837402
    4. 'len' → logprob: -9.880423545837402
    5. '(' → logprob: -11.630423545837402
    6. '   ' → logprob: -12.880423545837402
    7. '	W' → logprob: -12.880423545837402
    8. ' W' → logprob: -13.255423545837402
    9. '<W' → logprob: -16.00542449951172
    10. '0' → logprob: -16.50542449951172

Token 171: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20214217901229858
    2. '):' → logprob: -1.7021422386169434
    3. '       ' → logprob: -8.327141761779785
    4. '           ' → logprob: -8.452141761779785
    5. '):
' → logprob: -8.577141761779785
    6. ':' → logprob: -10.202141761779785
    7. '():
' → logprob: -11.202141761779785
    8. ':
' → logprob: -11.702141761779785
    9. ' ):
' → logprob: -11.827141761779785
    10. '   ' → logprob: -12.077141761779785

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014646274503320456
    2. ' if' → logprob: -6.62646484375
    3. '<|end|>' → logprob: -9.75146484375
    4. ':' → logprob: -11.00146484375
    5. '	       ' → logprob: -11.25146484375
    6. 'if' → logprob: -11.87646484375
    7. '		' → logprob: -11.87646484375
    8. '          ' → logprob: -12.12646484375
    9. ',' → logprob: -12.37646484375
    10. '<|end|>' → logprob: -12.75146484375

Token 173: ' height' (ID: 4679)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2472504824399948
    2. 'if' → logprob: -1.9972504377365112
    3. '           ' → logprob: -3.122250556945801
    4. 'height' (adapté à ' height') → logprob: -3.747250556945801
    5. ' height' → logprob: -4.247250556945801
    6. '               ' → logprob: -6.747250556945801
    7. '       ' → logprob: -8.8722505569458
    8. '   ' → logprob: -10.3722505569458
    9. '
' → logprob: -11.1222505569458
    10. '            ' → logprob: -11.4972505569458

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0054857186041772366
    2. '[' → logprob: -5.755485534667969
    3. '=' → logprob: -6.630485534667969
    4. ' =' → logprob: -8.130485534667969
    5. '[int' → logprob: -8.130485534667969
    6. '+=' → logprob: -8.755485534667969
    7. 'if' → logprob: -9.505485534667969
    8. ' +=' → logprob: -10.380485534667969
    9. ' [' → logprob: -10.505485534667969
    10. ' if' → logprob: -11.630485534667969

Token 175: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11770496517419815
    2. ' =' → logprob: -2.3677048683166504
    3. ']' → logprob: -4.86770486831665
    4. '+=' → logprob: -4.86770486831665
    5. ']+=' → logprob: -6.49270486831665
    6. ' +=' → logprob: -8.367705345153809
    7. ']=' → logprob: -8.617705345153809
    8. '=(' → logprob: -11.492705345153809
    9. '=int' → logprob: -11.867705345153809
    10. ')' → logprob: -11.992705345153809

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028408952057361603
    2. '+=' → logprob: -6.252840995788574
    3. ' =' → logprob: -7.002840995788574
    4. '=int' → logprob: -13.627840995788574
    5. ' +=' → logprob: -14.252840995788574
    6. '=(' → logprob: -14.502840995788574
    7. '＝' → logprob: -16.502840042114258
    8. '+=(' → logprob: -17.002840042114258
    9. ']+=' → logprob: -17.752840042114258
    10. '=

' → logprob: -18.002840042114258

Token 177: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.0013330980436876416
    2. ' height' → logprob: -7.001333236694336
    3. '0' → logprob: -7.876333236694336
    4. '(height' → logprob: -10.126333236694336
    5. ' ' → logprob: -13.626333236694336
    6. '   ' → logprob: -15.251333236694336
    7. 'he' → logprob: -15.501333236694336
    8. '	height' → logprob: -15.501333236694336
    9. ' (' → logprob: -17.501333236694336
    10. '1' → logprob: -18.251333236694336

Token 178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.625
    3. '[I' → logprob: -16.375
    4. '[
' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '[' → logprob: -17.375
    7. '{i' → logprob: -18.125
    8. '(i' → logprob: -18.625
    9. '`' → logprob: -19.625
    10. ' [' → logprob: -19.875

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18475477397441864
    2. '[i' → logprob: -2.3097548484802246
    3. ']+' → logprob: -2.6847548484802246
    4. '+' → logprob: -7.684754848480225
    5. 'i' → logprob: -7.934754848480225
    6. '1' → logprob: -9.184754371643066
    7. '-' → logprob: -10.309754371643066
    8. 'if' → logprob: -10.434754371643066
    9. '[' → logprob: -10.434754371643066
    10. '   ' → logprob: -10.684754371643066

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11324519664049149
    2. ' +' → logprob: -2.2382452487945557
    3. '1' → logprob: -8.863245010375977
    4. '0' → logprob: -10.238245010375977
    5. 'if' → logprob: -10.488245010375977
    6. ' ' → logprob: -10.613245010375977
    7. '
' → logprob: -10.863245010375977
    8. '   ' → logprob: -10.988245010375977
    9. ']+' → logprob: -11.113245010375977
    10. '       ' → logprob: -11.238245010375977

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.125019073486328
    4. 'int' → logprob: -16.500019073486328
    5. '0' → logprob: -17.250019073486328
    6. '  ' → logprob: -18.125019073486328
    7. '
' → logprob: -19.250019073486328
    8. '           ' → logprob: -20.000019073486328
    9. ' ' → logprob: -20.375019073486328
    10. '１' → logprob: -20.500019073486328

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'int' → logprob: -15.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '0' → logprob: -17.750003814697266
    6. '
' → logprob: -19.500003814697266
    7. '  ' → logprob: -20.000003814697266
    8. '１' → logprob: -20.375003814697266
    9. '111' → logprob: -20.875003814697266
    10. '

' → logprob: -21.125003814697266

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3176860213279724
    2. 'if' → logprob: -1.3176860809326172
    3. '           ' → logprob: -5.442686080932617
    4. '       ' → logprob: -10.442686080932617
    5. '            ' → logprob: -10.442686080932617
    6. '               ' → logprob: -11.692686080932617
    7. '          ' → logprob: -11.692686080932617
    8. '   ' → logprob: -12.192686080932617
    9. '	if' → logprob: -13.317686080932617
    10. '            
' → logprob: -14.442686080932617

Token 184: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.47409290075302124
    2. ' row' → logprob: -0.9740929007530212
    3. '(row' → logprob: -11.349092483520508
    4. ' ' → logprob: -13.724092483520508
    5. 'int' → logprob: -14.224092483520508
    6. '   ' → logprob: -14.349092483520508
    7. '	row' → logprob: -14.349092483520508
    8. '[row' → logprob: -15.224092483520508
    9. ' (' → logprob: -15.724092483520508
    10. 'Row' → logprob: -15.849092483520508

Token 185: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. '[I' → logprob: -15.375001907348633
    4. '[j' → logprob: -16.750001907348633
    5. ' [' → logprob: -18.125001907348633
    6. '[
' → logprob: -18.250001907348633
    7. '```' → logprob: -18.625001907348633
    8. '
' → logprob: -19.625001907348633
    9. '\[' → logprob: -20.250001907348633
    10. '[k' → logprob: -20.375001907348633

Token 186: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1307772547006607
    2. ' ==' → logprob: -2.130777359008789
    3. '=='' → logprob: -5.755777359008789
    4. ']' → logprob: -8.630777359008789
    5. ']==' → logprob: -9.005777359008789
    6. ')' → logprob: -9.755777359008789
    7. '=' → logprob: -9.755777359008789
    8. '==
' → logprob: -10.130777359008789
    9. '}' → logprob: -10.505777359008789
    10. '[' → logprob: -10.505777359008789

Token 187: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1295958012342453
    2. ' ==' → logprob: -2.1295957565307617
    3. '=='' → logprob: -6.004595756530762
    4. '=' → logprob: -10.129595756530762
    5. '==
' → logprob: -10.504595756530762
    6. '	' → logprob: -10.629595756530762
    7. '=="' → logprob: -10.879595756530762
    8. '   ' → logprob: -11.129595756530762
    9. '[' → logprob: -11.629595756530762
    10. ' ' → logprob: -11.754595756530762

Token 188: ' '.'' (ID: 64762)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0040643904358148575
    2. ''O' → logprob: -6.754064559936523
    3. ''#' → logprob: -7.004064559936523
    4. ''*' → logprob: -7.629064559936523
    5. ''.' → logprob: -8.004064559936523
    6. ''o' → logprob: -8.379064559936523
    7. ''T' → logprob: -8.504064559936523
    8. ''M' → logprob: -9.379064559936523
    9. ''C' → logprob: -9.504064559936523
    10. '"' → logprob: -9.629064559936523

Token 189: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0031784253660589457
    2. 'else' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.253178596496582
    4. '	else' → logprob: -15.628178596496582
    5. '        ' → logprob: -16.253177642822266
    6. ' or' → logprob: -16.503177642822266
    7. ' and' → logprob: -16.878177642822266
    8. ' ' → logprob: -17.503177642822266
    9. ' elif' → logprob: -18.253177642822266
    10. '            ' → logprob: -18.628177642822266

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029752222821116447
    2. ' ' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.404751777648926
    4. '  ' → logprob: -15.404751777648926
    5. '	' → logprob: -17.904752731323242
    6. ' ' → logprob: -17.904752731323242
    7. '    ' → logprob: -18.154752731323242
    8. '۰' → logprob: -18.404752731323242
    9. '０' → logprob: -18.904752731323242
    10. '000' → logprob: -19.529752731323242

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.125009536743164
    4. '۰' → logprob: -18.125009536743164
    5. '０' → logprob: -19.000009536743164
    6. '000' → logprob: -19.250009536743164
    7. '  ' → logprob: -20.125009536743164
    8. '00' → logprob: -20.312509536743164
    9. 'reset' → logprob: -20.437509536743164
    10. '012' → logprob: -20.875009536743164

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004471896681934595
    2. '       ' → logprob: -5.754471778869629
    3. '   ' → logprob: -7.129471778869629
    4. '
' → logprob: -8.879471778869629
    5. '    
' → logprob: -9.504471778869629
    6. 'max' → logprob: -9.754471778869629
    7. '        
' → logprob: -9.879471778869629
    8. '  
' → logprob: -10.004471778869629
    9. '<|end|>' → logprob: -10.004471778869629
    10. ' 
' → logprob: -10.879471778869629

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015091557055711746
    2. '   ' → logprob: -4.265091419219971
    3. '
' → logprob: -7.140091419219971
    4. 'max' → logprob: -10.015091896057129
    5. '           ' → logprob: -10.140091896057129
    6. '
' → logprob: -11.015091896057129
    7. '    
' → logprob: -12.015091896057129
    8. '	' → logprob: -12.390091896057129
    9. '        
' → logprob: -12.515091896057129
    10. ' max' → logprob: -12.640091896057129

Token 194: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.45531150698661804
    2. '   ' → logprob: -1.2053115367889404
    3. ' max' → logprob: -2.8303115367889404
    4. '       ' → logprob: -5.330311298370361
    5. '
' → logprob: -6.330311298370361
    6. 'area' → logprob: -7.830311298370361
    7. ' area' → logprob: -10.20531177520752
    8. '    
' → logprob: -10.45531177520752
    9. '	max' → logprob: -10.95531177520752
    10. ' ' → logprob: -11.58031177520752

Token 195: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.5048530030981055e-06
    2. 'area' → logprob: -13.500001907348633
    3. '_' → logprob: -19.125001907348633
    4. 'Area' → logprob: -19.250001907348633
    5. '_AREA' → logprob: -19.500001907348633
    6. '   ' → logprob: -20.375001907348633
    7. ' area' → logprob: -21.000001907348633
    8. '-area' → logprob: -22.250001907348633
    9. '(area' → logprob: -22.250001907348633
    10. '_are' → logprob: -22.500001907348633

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246292024850845
    2. '=' → logprob: -3.7732462882995605
    3. '=max' → logprob: -14.023246765136719
    4. ' ' → logprob: -18.52324676513672
    5. ' +=' → logprob: -18.64824676513672
    6. 'max' → logprob: -18.64824676513672
    7. ',' → logprob: -19.77324676513672
    8. '+=' → logprob: -19.89824676513672
    9. '＝' → logprob: -20.02324676513672
    10. ')' → logprob: -20.14824676513672

Token 197: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10020699352025986
    2. 'max' → logprob: -2.3502070903778076
    3. '(max' → logprob: -15.600207328796387
    4. '	max' → logprob: -16.35020637512207
    5. '[max' → logprob: -18.85020637512207
    6. '=max' → logprob: -18.85020637512207
    7. '   ' → logprob: -18.97520637512207
    8. ',max' → logprob: -19.85020637512207
    9. '.max' → logprob: -20.60020637512207
    10. ' ' → logprob: -20.60020637512207

Token 198: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. 'max' → logprob: -14.500006675720215
    4. '=max' → logprob: -17.62500762939453
    5. ' max' → logprob: -18.12500762939453
    6. '(
' → logprob: -19.12500762939453
    7. '[max' → logprob: -19.25000762939453
    8. '	max' → logprob: -19.37500762939453
    9. ',max' → logprob: -19.75000762939453
    10. '(m' → logprob: -20.00000762939453

Token 199: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0012467780616134405
    2. 'area' → logprob: -7.001246929168701
    3. 'max' → logprob: -8.376246452331543
    4. '(max' → logprob: -9.376246452331543
    5. 'Area' → logprob: -12.001246452331543
    6. ',max' → logprob: -12.751246452331543
    7. ')' → logprob: -13.126246452331543
    8. '_max' → logprob: -13.251246452331543
    9. '=max' → logprob: -13.626246452331543
    10. '[max' → logprob: -13.751246452331543

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002075432799756527
    2. ',max' → logprob: -6.2520751953125
    3. '(max' → logprob: -9.1270751953125
    4. 'max' → logprob: -10.8770751953125
    5. ' ,' → logprob: -11.1270751953125
    6. '(' → logprob: -12.7520751953125
    7. ' max' → logprob: -13.8770751953125
    8. ',
' → logprob: -15.2520751953125
    9. '[max' → logprob: -15.3770751953125
    10. ',height' → logprob: -15.8770751953125

Token 201: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.5759415626525879
    2. ' largest' → logprob: -0.8259415626525879
    3. ')' → logprob: -14.20094108581543
    4. 'max' → logprob: -14.82594108581543
    5. 'height' → logprob: -15.07594108581543
    6. 'Largest' → logprob: -15.57594108581543
    7. 'large' → logprob: -15.70094108581543
    8. ' height' → logprob: -16.07594108581543
    9. ' ' → logprob: -16.70094108581543
    10. '-largest' → logprob: -17.07594108581543

Token 202: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -6.630610641877865e-06
    2. 'rectangle' → logprob: -12.625006675720215
    3. '_area' → logprob: -12.750006675720215
    4. 'area' → logprob: -16.3750057220459
    5. '_' → logprob: -16.7500057220459
    6. '```' → logprob: -16.7500057220459
    7. '_rect' → logprob: -17.0000057220459
    8. '_triangle' → logprob: -17.2500057220459
    9. 'Rectangle' → logprob: -17.3750057220459
    10. '_polygon' → logprob: -17.3750057220459

Token 203: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -4.320199877838604e-07
    2. 'area' → logprob: -15.0
    3. '_height' → logprob: -17.25
    4. '_' → logprob: -18.875
    5. '(area' → logprob: -19.5
    6. '_are' → logprob: -19.5
    7. '_size' → logprob: -19.625
    8. '_AREA' → logprob: -19.875
    9. '_amount' → logprob: -20.25
    10. '_angle' → logprob: -20.375

Token 204: '(height' (ID: 44692)
  Prédit: '(height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.000008583068848
    3. 'height' → logprob: -13.125008583068848
    4. ' height' → logprob: -17.37500762939453
    5. ',height' → logprob: -17.37500762939453
    6. ')' → logprob: -17.50000762939453
    7. '(depth' → logprob: -17.75000762939453
    8. ' (' → logprob: -18.50000762939453
    9. '(length' → logprob: -19.50000762939453
    10. '(
' → logprob: -19.87500762939453

Token 205: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004879915213678032
    2. '))' → logprob: -7.750487804412842
    3. ')
' → logprob: -10.00048828125
    4. ' )' → logprob: -11.50048828125
    5. '   ' → logprob: -14.25048828125
    6. '())' → logprob: -14.62548828125
    7. ')))' → logprob: -15.25048828125
    8. ')

' → logprob: -15.75048828125
    9. ')`' → logprob: -16.62548828125
    10. '       ' → logprob: -17.12548828125

Token 206: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10147558152675629
    2. '   ' → logprob: -2.351475477218628
    3. '
' → logprob: -6.726475715637207
    4. ' print' → logprob: -9.851475715637207
    5. '    
' → logprob: -11.851475715637207
    6. '```' → logprob: -11.851475715637207
    7. '
' → logprob: -14.726475715637207
    8. '  
' → logprob: -14.726475715637207
    9. '(print' → logprob: -14.726475715637207
    10. ' 
' → logprob: -14.976475715637207

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002478627720847726
    2. '   ' → logprob: -6.00247859954834
    3. ' print' → logprob: -13.00247859954834
    4. '```' → logprob: -14.50247859954834
    5. '
' → logprob: -15.87747859954834
    6. '	print' → logprob: -17.127479553222656
    7. '    
' → logprob: -18.252479553222656
    8. 'printf' → logprob: -19.502479553222656
    9. '`' → logprob: -19.752479553222656
    10. '(print' → logprob: -19.877479553222656

Token 208: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.625004768371582
    3. 'max' → logprob: -13.625004768371582
    4. ' max' → logprob: -17.750003814697266
    5. ',max' → logprob: -18.250003814697266
    6. '=max' → logprob: -18.625003814697266
    7. '(Max' → logprob: -18.875003814697266
    8. '(min' → logprob: -19.500003814697266
    9. ' (' → logprob: -19.625003814697266
    10. '(
' → logprob: -19.875003814697266

Token 209: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.1472419600977446e-06
    2. 'area' → logprob: -13.750000953674316
    3. '_' → logprob: -18.875001907348633
    4. '_AREA' → logprob: -19.625001907348633
    5. '(area' → logprob: -19.875001907348633
    6. '(_' → logprob: -19.875001907348633
    7. ')' → logprob: -20.375001907348633
    8. 'Area' → logprob: -20.375001907348633
    9. '_ar' → logprob: -20.625001907348633
    10. '(max' → logprob: -20.625001907348633

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -13.750003814697266
    4. ')`' → logprob: -17.125003814697266
    5. '))' → logprob: -17.250003814697266
    6. '())' → logprob: -18.000003814697266
    7. '`)' → logprob: -18.250003814697266
    8. '()' → logprob: -18.875003814697266
    9. '')' → logprob: -19.125003814697266
    10. ')}' → logprob: -19.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 192
Précision stricte (1ère position): 49.04%
Précision adaptée (1ère position): 53.37%
Précision (top 10): 92.31%
================================================================================
