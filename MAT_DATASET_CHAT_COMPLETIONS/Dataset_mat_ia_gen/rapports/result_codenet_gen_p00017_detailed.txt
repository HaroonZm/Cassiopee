================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def caesar_decrypt(text, shift):
    """
    Déchiffre le texte chiffré avec un décalage Caesar donné.
    Seuls les caractères alphabétiques minuscules sont décalés.
    Les autres caractères (espace, point) sont laissés tels quels.
    """
    decrypted = []
    for ch in text:
        if 'a' <= ch <= 'z':
            # Décalage circulaire dans l'alphabet minuscules
            new_char = chr((ord(ch) - ord('a') - shift) % 26 + ord('a'))
            decrypted.append(new_char)
        else:
            decrypted.append(ch)
    return ''.join(decrypted)

def contains_keyword(text):
    """
    Vérifie si le texte contient au moins un des mots indiqués:
    'the', 'this' ou 'that'.
    """
    # Mettre en œuvre la recherche en utilisant des espaces pour limiter
    # les mots partiels, ou simplement une recherche brute ici
    # car les mots sont courts et distincts.
    keywords = ['the', 'this', 'that']
    # On peut rechercher parmi les mots découpés (split) ou string
    # pour être sûr d'éviter des sous-chaînes non voulues.
    words = text.split()
    for kw in keywords:
        if kw in words:
            return True
    return False

def main():
    # Lire toutes les lignes jusqu'à EOF
    lines = sys.stdin.read().splitlines()
    for line in lines:
        # Pour chaque ligne, essayer tous les décalages possibles (0..25)
        for shift in range(26):
            decrypted = caesar_decrypt(line, shift)
            if contains_keyword(decrypted):
                print(decrypted)
                break

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' ca' (ID: 3268)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04059256613254547
    2. ' main' → logprob: -4.915592670440674
    3. ' space' → logprob: -5.165592670440674
    4. ' process' → logprob: -5.415592670440674
    5. ' ' → logprob: -6.040592670440674
    6. ' sys' → logprob: -6.165592670440674
    7. ' my' → logprob: -6.415592670440674
    8. ' function' → logprob: -6.790592670440674
    9. ' system' → logprob: -6.915592670440674
    10. ' read' → logprob: -6.915592670440674

Token 5: 'esar' (ID: 27583)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5775657892227173
    2. 'lc' → logprob: -0.8275657892227173
    3. 't' → logprob: -6.827565670013428
    4. 'll' → logprob: -9.202566146850586
    5. 'lp' → logprob: -9.327566146850586
    6. 'pt' → logprob: -9.327566146850586
    7. 'lk' → logprob: -10.202566146850586
    8. 'lse' → logprob: -10.202566146850586
    9. 'lf' → logprob: -10.327566146850586
    10. 'p' → logprob: -10.452566146850586

Token 6: '_de' (ID: 5047)
  Prédit: '_cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cipher' → logprob: -0.0019498213659971952
    2. '_' → logprob: -6.751949787139893
    3. '_encrypt' → logprob: -8.62695026397705
    4. ' ' → logprob: -9.00195026397705
    5. ' Cipher' → logprob: -9.12695026397705
    6. 'Cipher' → logprob: -9.25195026397705
    7. ' cipher' → logprob: -9.62695026397705
    8. '_c' → logprob: -9.75195026397705
    9. '_shift' → logprob: -9.87695026397705
    10. 'cipher' → logprob: -9.87695026397705

Token 7: 'crypt' (ID: 9060)
  Prédit: 'crypt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -0.060973912477493286
    2. 'cipher' → logprob: -3.435973882675171
    3. 'n' → logprob: -4.31097412109375
    4. 'f' → logprob: -4.43597412109375
    5. 'cryption' → logprob: -6.81097412109375
    6. 'corator' → logprob: -8.81097412109375
    7. 'code' → logprob: -8.93597412109375
    8. 'cr' → logprob: -9.56097412109375
    9. 'coder' → logprob: -9.93597412109375
    10. 'fault' → logprob: -10.43597412109375

Token 8: '(text' (ID: 13414)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00877422746270895
    2. '_' → logprob: -6.258774280548096
    3. '(token' → logprob: -6.508774280548096
    4. '_cipher' → logprob: -6.633774280548096
    5. '(text' → logprob: -7.008774280548096
    6. '```' → logprob: -7.133774280548096
    7. '_token' → logprob: -8.008773803710938
    8. '(cipher' → logprob: -8.383773803710938
    9. '(code' → logprob: -8.883773803710938
    10. '(key' → logprob: -8.883773803710938

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.284940630197525
    2. ',' → logprob: -1.4099406003952026
    3. ')' → logprob: -5.659940719604492
    4. ':' → logprob: -9.034940719604492
    5. '):
' → logprob: -10.034940719604492
    6. 's' → logprob: -11.034940719604492
    7. '<|end|>' → logprob: -11.159940719604492
    8. ''):' → logprob: -11.409940719604492
    9. ' ):' → logprob: -11.409940719604492
    10. ' ,' → logprob: -11.784940719604492

Token 10: ' shift' (ID: 12847)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.007172470446676016
    2. ' shift' → logprob: -5.007172584533691
    3. 'key' → logprob: -8.007172584533691
    4. 'shift' → logprob: -9.007172584533691
    5. ' offset' → logprob: -14.257172584533691
    6. '	key' → logprob: -15.507172584533691
    7. ' space' → logprob: -15.882172584533691
    8. ',key' → logprob: -16.257171630859375
    9. '```' → logprob: -16.882171630859375
    10. ' keyword' → logprob: -17.007171630859375

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004108796361833811
    2. ')' → logprob: -5.504108905792236
    3. '=' → logprob: -11.379108428955078
    4. ':' → logprob: -11.629108428955078
    5. '):
' → logprob: -12.379108428955078
    6. ' ):' → logprob: -13.379108428955078
    7. ',' → logprob: -13.879108428955078
    8. '_' → logprob: -14.754108428955078
    9. ''):' → logprob: -14.754108428955078
    10. ')：' → logprob: -14.754108428955078

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43772992491722107
    2. ':' → logprob: -1.0627299547195435
    3. ' ' → logprob: -5.437729835510254
    4. ' :' → logprob: -6.437729835510254
    5. '    ' → logprob: -6.687729835510254
    6. '):' → logprob: -7.687729835510254
    7. '```' → logprob: -8.312729835510254
    8. '<|end|>' → logprob: -8.687729835510254
    9. ')' → logprob: -8.937729835510254
    10. '  ' → logprob: -9.187729835510254

Token 13: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060133323073387146
    2. '```' → logprob: -3.310133218765259
    3. 'result' → logprob: -4.810133457183838
    4. ' decrypted' → logprob: -5.185133457183838
    5. 'decoded' → logprob: -6.185133457183838
    6. 'de' → logprob: -6.685133457183838
    7. 'return' → logprob: -6.810133457183838
    8. 'text' → logprob: -6.935133457183838
    9. ' return' → logprob: -7.185133457183838
    10. ' result' → logprob: -7.935133457183838

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5651153326034546
    2. 'Decrypt' → logprob: -1.0651153326034546
    3. 'De' → logprob: -3.690115451812744
    4. '"""' → logprob: -3.690115451812744
    5. '"""
' → logprob: -4.440115451812744
    6. '#' → logprob: -4.565115451812744
    7. ' De' → logprob: -5.440115451812744
    8. 'Returns' → logprob: -6.440115451812744
    9. 'Shift' → logprob: -6.565115451812744
    10. 'Ca' → logprob: -7.315115451812744

Token 15: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2823405861854553
    2. '"""' → logprob: -2.0323405265808105
    3. 'Decrypt' → logprob: -2.2823405265808105
    4. 'De' → logprob: -5.4073405265808105
    5. '"""
' → logprob: -5.4073405265808105
    6. 'Shift' → logprob: -6.9073405265808105
    7. '#' → logprob: -7.6573405265808105
    8. 'Returns' → logprob: -7.6573405265808105
    9. ''''' → logprob: -7.7823405265808105
    10. 'Dec' → logprob: -8.532341003417969

Token 16: 'ch' (ID: 332)
  Prédit: 'crypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -0.16213902831077576
    2. 'cal' → logprob: -2.9121389389038086
    3. 'ch' → logprob: -3.5371389389038086
    4. 'cr' → logprob: -3.6621389389038086
    5. 'caler' → logprob: -4.412138938903809
    6. '   ' → logprob: -4.662138938903809
    7. 'cale' → logprob: -4.912138938903809
    8. '```' → logprob: -5.787138938903809
    9. 'c' → logprob: -6.162138938903809
    10. 'crypted' → logprob: -6.412138938903809

Token 17: 'iff' (ID: 4443)
  Prédit: 'ifre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifre' → logprob: -1.1059160232543945
    2. 'r' → logprob: -1.2309160232543945
    3. 'é' → logprob: -2.6059160232543945
    4. 'e' → logprob: -2.6059160232543945
    5. '   ' → logprob: -3.6059160232543945
    6. 'er' → logprob: -3.6059160232543945
    7. '```' → logprob: -3.8559160232543945
    8. 'rif' → logprob: -3.9809160232543945
    9. 'èche' → logprob: -3.9809160232543945
    10. 'ifra' → logprob: -4.1059160232543945

Token 18: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.3849295973777771
    2. 'r' → logprob: -1.5099296569824219
    3. 'ré' → logprob: -3.009929656982422
    4. 'rer' → logprob: -3.759929656982422
    5. 'rement' → logprob: -4.634929656982422
    6. 'er' → logprob: -5.134929656982422
    7. 'rame' → logprob: -5.384929656982422
    8. 'rine' → logprob: -7.134929656982422
    9. 'rage' → logprob: -7.259929656982422
    10. 'rée' → logprob: -7.259929656982422

Token 19: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.041238415986299515
    2. ' un' → logprob: -4.416238307952881
    3. ' text' → logprob: -4.541238307952881
    4. '   ' → logprob: -5.041238307952881
    5. 'le' → logprob: -5.416238307952881
    6. 'text' → logprob: -6.041238307952881
    7. ' the' → logprob: -6.416238307952881
    8. ' la' → logprob: -7.291238307952881
    9. ' texte' → logprob: -8.166238784790039
    10. ' ' → logprob: -8.291238784790039

Token 20: ' texte' (ID: 53492)
  Prédit: ' texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' texte' → logprob: -0.3455483615398407
    2. ' message' → logprob: -1.595548391342163
    3. 'texte' → logprob: -3.470548391342163
    4. '   ' → logprob: -3.845548391342163
    5. ' code' → logprob: -4.220548152923584
    6. ' text' → logprob: -4.345548152923584
    7. ' ' → logprob: -5.970548152923584
    8. 'message' → logprob: -5.970548152923584
    9. 'text' → logprob: -7.345548152923584
    10. ' texto' → logprob: -7.720548152923584

Token 21: ' ch' (ID: 549)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8024115562438965
    2. ' cod' → logprob: -1.4274115562438965
    3. ' en' → logprob: -2.0524115562438965
    4. ' avec' → logprob: -2.9274115562438965
    5. ' ch' → logprob: -4.1774115562438965
    6. ' encrypted' → logprob: -4.3024115562438965
    7. '```' → logprob: -4.3024115562438965
    8. ' crypt' → logprob: -4.5524115562438965
    9. ' ' → logprob: -4.5524115562438965
    10. ' dé' → logprob: -4.9274115562438965

Token 22: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08440132439136505
    2. '   ' → logprob: -2.8344013690948486
    3. 'r' → logprob: -4.2094011306762695
    4. 'iff' → logprob: -5.8344011306762695
    5. 'ar' → logprob: -6.8344011306762695
    6. '  ' → logprob: -7.2094011306762695
    7. '```' → logprob: -7.9594011306762695
    8. 'angé' → logprob: -8.08440113067627
    9. ' ' → logprob: -8.20940113067627
    10. 'a' → logprob: -8.20940113067627

Token 23: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.005516427103430033
    2. 'fé' → logprob: -6.380516529083252
    3. 'fér' → logprob: -6.505516529083252
    4. 'f' → logprob: -6.505516529083252
    5. 'fre' → logprob: -8.755516052246094
    6. '   ' → logprob: -8.755516052246094
    7. '```' → logprob: -9.005516052246094
    8. '</' → logprob: -10.505516052246094
    9. '#' → logprob: -10.505516052246094
    10. 'ré' → logprob: -10.505516052246094

Token 24: 'é' (ID: 377)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.4317402243614197
    2. 'é' → logprob: -1.0567402839660645
    3. 'rement' → logprob: -6.8067402839660645
    4. 'r' → logprob: -7.0567402839660645
    5. '```' → logprob: -7.5567402839660645
    6. 'rée' → logprob: -9.056739807128906
    7. 'fr' → logprob: -9.306739807128906
    8. 'rés' → logprob: -9.431739807128906
    9. 'e' → logprob: -10.181739807128906
    10. '   ' → logprob: -10.431739807128906

Token 25: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7354666590690613
    2. '   ' → logprob: -1.485466718673706
    3. ' avec' → logprob: -1.985466718673706
    4. ' par' → logprob: -2.110466718673706
    5. ',' → logprob: -5.360466480255127
    6. ' ' → logprob: -5.360466480255127
    7. '.' → logprob: -5.485466480255127
    8. '```' → logprob: -5.735466480255127
    9. '"""' → logprob: -5.735466480255127
    10. ' by' → logprob: -6.110466480255127

Token 26: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6167407631874084
    2. ' le' → logprob: -1.8667407035827637
    3. ' une' → logprob: -2.1167407035827637
    4. '   ' → logprob: -2.7417407035827637
    5. ' Caesar' → logprob: -3.1167407035827637
    6. ' shift' → logprob: -3.7417407035827637
    7. ' a' → logprob: -3.9917407035827637
    8. ' la' → logprob: -5.116740703582764
    9. ')' → logprob: -5.241740703582764
    10. ' )' → logprob: -5.491740703582764

Token 27: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.5544541478157043
    2. 'd' → logprob: -1.6794540882110596
    3. 'e' → logprob: -2.4294540882110596
    4. '   ' → logprob: -3.1794540882110596
    5. ' chiff' → logprob: -3.8044540882110596
    6. 'dé' → logprob: -3.9294540882110596
    7. ' code' → logprob: -4.304454326629639
    8. 'a' → logprob: -4.429454326629639
    9. ' ' → logprob: -4.804454326629639
    10. ' Caesar' → logprob: -5.179454326629639

Token 28: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.053213633596897125
    2. '   ' → logprob: -3.428213596343994
    3. '```' → logprob: -5.053213596343994
    4. 'c' → logprob: -5.428213596343994
    5. 'caler' → logprob: -6.303213596343994
    6. 'cale' → logprob: -6.678213596343994
    7. 'al' → logprob: -7.303213596343994
    8. 'ca' → logprob: -7.303213596343994
    9. '       ' → logprob: -7.553213596343994
    10. '    ' → logprob: -7.678213596343994

Token 29: 'age' (ID: 477)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.2566934823989868
    2. 't' → logprob: -2.5066933631896973
    3. 'e' → logprob: -3.3816933631896973
    4. ')' → logprob: -4.131693363189697
    5. 'm' → logprob: -4.381693363189697
    6. 'a' → logprob: -4.381693363189697
    7. 'l' → logprob: -4.631693363189697
    8. 'lement' → logprob: -4.756693363189697
    9. '   ' → logprob: -4.756693363189697
    10. 'age' → logprob: -4.756693363189697

Token 30: ' Caesar' (ID: 94978)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30161252617836
    2. ' donné' → logprob: -1.6766124963760376
    3. '   ' → logprob: -3.176612615585327
    4. ' given' → logprob: -3.926612615585327
    5. 'de' → logprob: -5.801612377166748
    6. ')' → logprob: -6.301612377166748
    7. ' donnée' → logprob: -6.426612377166748
    8. '.' → logprob: -6.551612377166748
    9. ' of' → logprob: -7.426612377166748
    10. ' ' → logprob: -7.926612377166748

Token 31: ' donné' (ID: 52079)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13057264685630798
    2. '.' → logprob: -2.380572557449341
    3. ')' → logprob: -4.00557279586792
    4. ' ' → logprob: -5.75557279586792
    5. ',' → logprob: -6.38057279586792
    6. '```' → logprob: -6.50557279586792
    7. ' de' → logprob: -6.75557279586792
    8. ').' → logprob: -7.50557279586792
    9. '"""' → logprob: -8.130572319030762
    10. ':' → logprob: -8.130572319030762

Token 32: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17857962846755981
    2. '.' → logprob: -1.928579568862915
    3. ',' → logprob: -5.303579807281494
    4. ':' → logprob: -5.553579807281494
    5. ' ' → logprob: -6.303579807281494
    6. ')' → logprob: -6.553579807281494
    7. ' :' → logprob: -6.678579807281494
    8. '```' → logprob: -6.678579807281494
    9. '"""' → logprob: -6.678579807281494
    10. '):' → logprob: -7.678579807281494

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015815204242244363
    2. '"""' → logprob: -6.75158166885376
    3. '```' → logprob: -9.001581192016602
    4. '"""
' → logprob: -9.126581192016602
    5. '
' → logprob: -10.376581192016602
    6. '    
' → logprob: -10.626581192016602
    7. 'n' → logprob: -10.751581192016602
    8. ')' → logprob: -11.251581192016602
    9. 'result' → logprob: -11.501581192016602
    10. '""' → logprob: -11.626581192016602

Token 34: ' Se' (ID: 1550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004036014433950186
    2. '"""' → logprob: -6.129035949707031
    3. ' decrypted' → logprob: -7.504035949707031
    4. ')' → logprob: -8.004035949707031
    5. '```' → logprob: -8.754035949707031
    6. 'result' → logprob: -9.004035949707031
    7. ' """' → logprob: -9.129035949707031
    8. ' """
' → logprob: -9.254035949707031
    9. '"""
' → logprob: -9.629035949707031
    10. ' result' → logprob: -9.629035949707031

Token 35: 'uls' (ID: 13433)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2847081422805786
    2. 'u' → logprob: -1.4097081422805786
    3. 'curity' → logprob: -2.659708023071289
    4. 'ul' → logprob: -2.909708023071289
    5. 'r' → logprob: -3.034708023071289
    6. '  ' → logprob: -3.159708023071289
    7. 't' → logprob: -3.409708023071289
    8. 'c' → logprob: -3.534708023071289
    9. 'p' → logprob: -3.909708023071289
    10. 'ult' → logprob: -4.159708023071289

Token 36: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.01723220758140087
    2. 'les' → logprob: -4.892232418060303
    3. ' ' → logprob: -5.767232418060303
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.017232418060303
    5. '<|end|>' → logprob: -7.392232418060303
    6. ' aux' → logprob: -7.517232418060303
    7. ' des' → logprob: -8.017231941223145
    8. 'a' → logprob: -8.017231941223145
    9. '   ' → logprob: -8.017231941223145
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -8.142231941223145

Token 37: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.9807134866714478
    2. ' caractères' → logprob: -0.9807134866714478
    3. ' lettres' → logprob: -1.8557134866714478
    4. ' car' → logprob: -2.605713367462158
    5. ' caract' → logprob: -4.855713367462158
    6. ' caracteres' → logprob: -5.605713367462158
    7. 'lett' → logprob: -6.230713367462158
    8. ' ' → logprob: -6.605713367462158
    9. ' espaces' → logprob: -6.730713367462158
    10. ' let' → logprob: -7.980713367462158

Token 38: ' alph' (ID: 133679)
  Prédit: ' alph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alph' → logprob: -0.2179429680109024
    2. '   ' → logprob: -1.7179429531097412
    3. 'alph' → logprob: -4.96794319152832
    4. ' alphabet' → logprob: -5.84294319152832
    5. 'import' → logprob: -6.71794319152832
    6. 'a' → logprob: -7.34294319152832
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.71794319152832
    8. ' de' → logprob: -7.71794319152832
    9. ' import' → logprob: -7.84294319152832
    10. 'de' → logprob: -8.09294319152832

Token 39: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.024375319480895996
    2. 'abet' → logprob: -3.7743754386901855
    3. 'abets' → logprob: -7.6493754386901855
    4. 'a' → logprob: -8.274374961853027
    5. '```' → logprob: -9.024374961853027
    6. 'аб' → logprob: -9.774374961853027
    7. 'étiques' → logprob: -9.774374961853027
    8. 'abeth' → logprob: -10.649374961853027
    9. ' ab' → logprob: -10.649374961853027
    10. 'abc' → logprob: -11.149374961853027

Token 40: 'étiques' (ID: 124984)
  Prédit: 'étiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étiques' → logprob: -0.0037764543667435646
    2. 'et' → logprob: -6.003776550292969
    3. 'é' → logprob: -7.628776550292969
    4. 'iques' → logprob: -8.503776550292969
    5. 'étique' → logprob: -8.503776550292969
    6. 'ets' → logprob: -9.378776550292969
    7. 'è' → logprob: -9.753776550292969
    8. 'tiques' → logprob: -10.128776550292969
    9. 'ériques' → logprob: -10.253776550292969
    10. 'ètes' → logprob: -10.253776550292969

Token 41: ' minus' (ID: 40335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.181314468383789
    2. ' sont' → logprob: -2.181314468383789
    3. ' de' → logprob: -2.306314468383789
    4. ' a' → logprob: -2.431314468383789
    5. 'a' → logprob: -2.556314468383789
    6. ',' → logprob: -3.306314468383789
    7. ' (' → logprob: -3.306314468383789
    8. ' en' → logprob: -3.681314468383789
    9. ' et' → logprob: -3.681314468383789
    10. 'A' → logprob: -3.806314468383789

Token 42: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.00011629798245849088
    2. 'c' → logprob: -9.375116348266602
    3. 'cul' → logprob: -10.875116348266602
    4. '```' → logprob: -12.375116348266602
    5. 'culas' → logprob: -12.375116348266602
    6. 'cule' → logprob: -13.625116348266602
    7. 'cula' → logprob: -13.750116348266602
    8. 'ules' → logprob: -14.750116348266602
    9. 'cu' → logprob: -15.375116348266602
    10. '|' → logprob: -15.375116348266602

Token 43: ' sont' (ID: 5242)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.31591665744781494
    2. ' sont' → logprob: -1.940916657447815
    3. ',' → logprob: -2.8159165382385254
    4. 'et' → logprob: -3.9409165382385254
    5. '   ' → logprob: -4.565916538238525
    6. 'a' → logprob: -4.815916538238525
    7. ' seront' → logprob: -5.190916538238525
    8. ' ,' → logprob: -5.315916538238525
    9. ' a' → logprob: -5.940916538238525
    10. ' and' → logprob: -5.940916538238525

Token 44: ' dé' (ID: 2393)
  Prédit: ' trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trait' → logprob: -0.7129371166229248
    2. 'trait' → logprob: -1.5879371166229248
    3. ' dé' → logprob: -1.8379371166229248
    4. 'dé' → logprob: -2.337937116622925
    5. 'd' → logprob: -3.587937116622925
    6. '   ' → logprob: -4.837937355041504
    7. ' pris' → logprob: -5.337937355041504
    8. ' traité' → logprob: -5.837937355041504
    9. 'ch' → logprob: -6.712937355041504
    10. ' g' → logprob: -6.712937355041504

Token 45: 'cal' (ID: 5842)
  Prédit: 'crypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -0.04303744062781334
    2. 'ch' → logprob: -3.5430374145507812
    3. 'cr' → logprob: -5.418037414550781
    4. 'f' → logprob: -5.418037414550781
    5. 'fin' → logprob: -5.793037414550781
    6. 'cript' → logprob: -7.543037414550781
    7. 'crypted' → logprob: -8.293037414550781
    8. 'criv' → logprob: -9.543037414550781
    9. '```' → logprob: -9.793037414550781
    10. ' crypt' → logprob: -10.293037414550781

Token 46: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.47501668334007263
    2. 'és' → logprob: -0.975016713142395
    3. 'ées' → logprob: -7.1000165939331055
    4. 'e' → logprob: -10.225016593933105
    5. 'ée' → logprob: -10.725016593933105
    6. '```' → logprob: -10.725016593933105
    7. 'a' → logprob: -11.350016593933105
    8. 'es' → logprob: -11.475016593933105
    9. 'è' → logprob: -12.975016593933105
    10. 'er' → logprob: -13.225016593933105

Token 47: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24468626081943512
    2. '.' → logprob: -1.619686245918274
    3. ',' → logprob: -4.119686126708984
    4. ':' → logprob: -6.619686126708984
    5. ')' → logprob: -8.619686126708984
    6. '  ' → logprob: -8.744686126708984
    7. 'def' → logprob: -8.744686126708984
    8. ' :' → logprob: -8.744686126708984
    9. ' ,' → logprob: -8.994686126708984
    10. '```' → logprob: -8.994686126708984

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043463729321956635
    2. '"""' → logprob: -3.168463706970215
    3. '```' → logprob: -8.543463706970215
    4. ' """' → logprob: -9.168463706970215
    5. '"""
' → logprob: -10.168463706970215
    6. '"' → logprob: -10.293463706970215
    7. '""' → logprob: -10.543463706970215
    8. ')' → logprob: -10.668463706970215
    9. ' ' → logprob: -11.668463706970215
    10. '`' → logprob: -12.293463706970215

Token 49: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00736192986369133
    2. '"""' → logprob: -5.007361888885498
    3. '```' → logprob: -7.757361888885498
    4. 'result' → logprob: -10.382362365722656
    5. ')' → logprob: -10.632362365722656
    6. '""' → logprob: -10.882362365722656
    7. 'n' → logprob: -11.007362365722656
    8. 'ind' → logprob: -11.007362365722656
    9. '"' → logprob: -11.382362365722656
    10. ' """' → logprob: -11.507362365722656

Token 50: ' autres' (ID: 18701)
  Prédit: ' maj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maj' → logprob: -0.8470072746276855
    2. ' espaces' → logprob: -1.4720072746276855
    3. ' autres' → logprob: -1.7220072746276855
    4. ' caractères' → logprob: -2.4720072746276855
    5. ' lettres' → logprob: -3.3470072746276855
    6. 'aut' → logprob: -4.2220072746276855
    7. 'car' → logprob: -4.4720072746276855
    8. ' car' → logprob: -5.5970072746276855
    9. 'maj' → logprob: -5.8470072746276855
    10. ' ' → logprob: -6.5970072746276855

Token 51: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.49150198698043823
    2. ' caractères' → logprob: -0.9915019869804382
    3. 's' → logprob: -5.116501808166504
    4. ' caract' → logprob: -5.491501808166504
    5. ' car' → logprob: -5.491501808166504
    6. '   ' → logprob: -6.741501808166504
    7. ' sont' → logprob: -7.366501808166504
    8. ' caracteres' → logprob: -7.866501808166504
    9. ' ' → logprob: -8.616501808166504
    10. ' restent' → logprob: -8.866501808166504

Token 52: ' (' (ID: 350)
  Prédit: ' restent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' restent' → logprob: -0.3850131630897522
    2. ' sont' → logprob: -1.5100131034851074
    3. '   ' → logprob: -3.2600131034851074
    4. 's' → logprob: -3.6350131034851074
    5. ' rest' → logprob: -3.7600131034851074
    6. ' are' → logprob: -6.510013103485107
    7. ' reste' → logprob: -6.635013103485107
    8. 'rest' → logprob: -6.885013103485107
    9. ' rester' → logprob: -6.885013103485107
    10. '<|end|>' → logprob: -7.135013103485107

Token 53: 'es' (ID: 268)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.40824538469314575
    2. ')' → logprob: -1.408245325088501
    3. 'es' → logprob: -3.283245325088501
    4. ' ' → logprob: -3.783245325088501
    5. ' espaces' → logprob: -4.28324556350708
    6. 'esp' → logprob: -5.28324556350708
    7. 's' → logprob: -5.40824556350708
    8. ''' → logprob: -6.03324556350708
    9. ' ,' → logprob: -7.03324556350708
    10. ' espace' → logprob: -7.53324556350708

Token 54: 'pace' (ID: 2612)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.533839225769043
    2. 'paces' → logprob: -1.408839225769043
    3. 'pace' → logprob: -1.783839225769043
    4. 'c' → logprob: -7.783839225769043
    5. '	p' → logprob: -8.283839225769043
    6. '```' → logprob: -8.658839225769043
    7. ' ' → logprob: -9.158839225769043
    8. '   ' → logprob: -9.408839225769043
    9. 'pa' → logprob: -10.158839225769043
    10. '  ' → logprob: -10.408839225769043

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023548337630927563
    2. ' ,' → logprob: -6.377354621887207
    3. ')' → logprob: -7.502354621887207
    4. ' )' → logprob: -10.627354621887207
    5. '```' → logprob: -10.752354621887207
    6. ',
' → logprob: -11.127354621887207
    7. 's' → logprob: -11.252354621887207
    8. 'es' → logprob: -12.127354621887207
    9. 'et' → logprob: -12.377354621887207
    10. ' et' → logprob: -12.627354621887207

Token 56: ' point' (ID: 2438)
  Prédit: 'pon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pon' → logprob: -0.5493439435958862
    2. ' ponct' → logprob: -1.2993439435958862
    3. ',' → logprob: -2.549344062805176
    4. 'pun' → logprob: -3.174344062805176
    5. 'pont' → logprob: -5.424344062805176
    6. ' puntu' → logprob: -5.799344062805176
    7. 'ch' → logprob: -5.924344062805176
    8. ' pon' → logprob: -6.174344062805176
    9. '.' → logprob: -6.174344062805176
    10. '```' → logprob: -6.299344062805176

Token 57: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009136092266999185
    2. ')' → logprob: -7.250913619995117
    3. 's' → logprob: -8.875913619995117
    4. ',)' → logprob: -11.125913619995117
    5. '.' → logprob: -11.375913619995117
    6. ',.' → logprob: -11.750913619995117
    7. 'es' → logprob: -12.000913619995117
    8. '.,' → logprob: -12.250913619995117
    9. ' ,' → logprob: -12.375913619995117
    10. ').' → logprob: -13.125913619995117

Token 58: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4536808133125305
    2. ' sont' → logprob: -1.2036807537078857
    3. 's' → logprob: -3.4536807537078857
    4. '   ' → logprob: -4.203680992126465
    5. ' )' → logprob: -5.203680992126465
    6. ' restent' → logprob: -5.453680992126465
    7. ' are' → logprob: -5.578680992126465
    8. ' seront' → logprob: -6.828680992126465
    9. ' return' → logprob: -7.078680992126465
    10. ',' → logprob: -7.078680992126465

Token 59: ' laiss' (ID: 192979)
  Prédit: ' laiss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laiss' → logprob: -0.18675446510314941
    2. ' retourn' → logprob: -2.9367544651031494
    3. '   ' → logprob: -3.0617544651031494
    4. ' inch' → logprob: -3.4367544651031494
    5. ' conserv' → logprob: -3.9367544651031494
    6. ' copi' → logprob: -5.43675422668457
    7. ' laissé' → logprob: -5.68675422668457
    8. ' ren' → logprob: -6.31175422668457
    9. '```' → logprob: -6.68675422668457
    10. 'ret' → logprob: -6.81175422668457

Token 60: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00524454889819026
    2. 'é' → logprob: -5.255244731903076
    3. '```' → logprob: -12.630244255065918
    4. 'es' → logprob: -12.755244255065918
    5. 'ées' → logprob: -13.630244255065918
    6. 'ée' → logprob: -14.755244255065918
    7. 'ès' → logprob: -15.005244255065918
    8. ' ' → logprob: -15.380244255065918
    9. '﻿' → logprob: -15.505244255065918
    10. ' és' → logprob: -15.755244255065918

Token 61: ' tels' (ID: 62007)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3043927252292633
    2. ' int' → logprob: -2.8043928146362305
    3. ' intact' → logprob: -2.8043928146362305
    4. 's' → logprob: -2.9293928146362305
    5. 'es' → logprob: -3.6793928146362305
    6. ' tels' → logprob: -3.9293928146362305
    7. ' inch' → logprob: -5.1793928146362305
    8. 'sur' → logprob: -5.4293928146362305
    9. ' ' → logprob: -6.0543928146362305
    10. 'au' → logprob: -6.3043928146362305

Token 62: ' quels' (ID: 109092)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.48841747641563416
    2. ' quels' → logprob: -0.9884175062179565
    3. 'quel' → logprob: -5.613417625427246
    4. 'que' → logprob: -5.863417625427246
    5. ' que' → logprob: -6.238417625427246
    6. ' ' → logprob: -6.363417625427246
    7. '-' → logprob: -6.613417625427246
    8. ' qu' → logprob: -7.113417625427246
    9. ' Quels' → logprob: -7.488417625427246
    10. '```' → logprob: -7.988417625427246

Token 63: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7855421900749207
    2. ')' → logprob: -1.0355422496795654
    3. '.' → logprob: -2.4105422496795654
    4. '):' → logprob: -2.7855422496795654
    5. ':' → logprob: -4.160542011260986
    6. '"""' → logprob: -4.660542011260986
    7. '):
' → logprob: -5.660542011260986
    8. '```' → logprob: -6.160542011260986
    9. ',' → logprob: -6.410542011260986
    10. ')
' → logprob: -6.535542011260986

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10157003253698349
    2. '"""' → logprob: -2.3515701293945312
    3. '```' → logprob: -7.601570129394531
    4. '"""
' → logprob: -8.101570129394531
    5. '"' → logprob: -8.476570129394531
    6. '""' → logprob: -8.976570129394531
    7. ')' → logprob: -9.476570129394531
    8. ' """' → logprob: -10.101570129394531
    9. 'def' → logprob: -10.351570129394531
    10. ' ' → logprob: -10.476570129394531

Token 65: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3548130393028259
    2. '   ' → logprob: -1.2298130989074707
    3. '"""
' (adapté à ' """
') → logprob: -6.229813098907471
    4. '"' → logprob: -6.729813098907471
    5. '```' → logprob: -6.979813098907471
    6. ')' → logprob: -6.979813098907471
    7. '""' → logprob: -7.229813098907471
    8. ' """' → logprob: -7.854813098907471
    9. 'n' → logprob: -9.854812622070312
    10. ''''' → logprob: -10.229812622070312

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02841426432132721
    2. 'result' → logprob: -3.903414249420166
    3. ' result' → logprob: -5.903414249420166
    4. 'de' → logprob: -6.278414249420166
    5. ' decrypted' → logprob: -6.278414249420166
    6. 'decoded' → logprob: -7.403414249420166
    7. 'n' → logprob: -8.653414726257324
    8. 'def' → logprob: -9.653414726257324
    9. 'output' → logprob: -9.778414726257324
    10. ' next' → logprob: -9.903414726257324

Token 67: ' decrypted' (ID: 139372)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3347102105617523
    2. 'result' → logprob: -2.084710121154785
    3. ' decrypted' → logprob: -2.459710121154785
    4. ' result' → logprob: -3.084710121154785
    5. '   ' → logprob: -3.584710121154785
    6. 'def' → logprob: -8.209710121154785
    7. 'decoded' → logprob: -8.459710121154785
    8. 'output' → logprob: -8.709710121154785
    9. 'plaintext' → logprob: -8.709710121154785
    10. 'decrypt' → logprob: -8.709710121154785

Token 68: ' =' (ID: 314)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.18211998045444489
    2. ' =' → logprob: -1.9321199655532837
    3. '_' → logprob: -4.057119846343994
    4. '=' → logprob: -5.682119846343994
    5. 'text' → logprob: -7.432119846343994
    6. ' ' → logprob: -8.182120323181152
    7. 'ed' → logprob: -11.307120323181152
    8. '   ' → logprob: -11.682120323181152
    9. '  ' → logprob: -11.807120323181152
    10. '_txt' → logprob: -11.932120323181152

Token 69: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.04542287439107895
    2. ' ""' → logprob: -3.4204227924346924
    3. '''' → logprob: -5.1704230308532715
    4. ' []' → logprob: -5.9204230308532715
    5. '[]' → logprob: -5.9204230308532715
    6. '"' → logprob: -7.6704230308532715
    7. ' ''' → logprob: -8.795422554016113
    8. ''' → logprob: -10.795422554016113
    9. ' ' → logprob: -11.170422554016113
    10. '[' → logprob: -14.170422554016113

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44009149074554443
    2. ' for' → logprob: -1.4400914907455444
    3. 'for' → logprob: -2.315091609954834
    4. '
' → logprob: -4.940091609954834
    5. '\n' → logprob: -5.190091609954834
    6. '    
' → logprob: -6.065091609954834
    7. ' ' → logprob: -6.065091609954834
    8. '\' → logprob: -6.815091609954834
    9. '    ' → logprob: -7.690091609954834
    10. ' 
' → logprob: -7.815091609954834

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5770360827445984
    2. 'for' (adapté à ' for') → logprob: -0.8270360827445984
    3. '   ' → logprob: -6.827035903930664
    4. ' ' → logprob: -11.827035903930664
    5. '	for' → logprob: -13.577035903930664
    6. '    ' → logprob: -14.827035903930664
    7. '```' → logprob: -14.952035903930664
    8. '    
' → logprob: -15.077035903930664
    9. ' f' → logprob: -15.327035903930664
    10. ' 
' → logprob: -15.452035903930664

Token 72: ' ch' (ID: 549)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.01550680585205555
    2. ' c' → logprob: -4.515506744384766
    3. 'char' → logprob: -5.640506744384766
    4. ' ' → logprob: -7.265506744384766
    5. ' ch' → logprob: -9.390506744384766
    6. 'c' → logprob: -10.015506744384766
    7. '	char' → logprob: -11.265506744384766
    8. '  ' → logprob: -11.390506744384766
    9. '   ' → logprob: -11.390506744384766
    10. ' caract' → logprob: -11.765506744384766

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00515655055642128
    2. 'in' → logprob: -5.505156517028809
    3. ' ' → logprob: -7.005156517028809
    4. '   ' → logprob: -9.255156517028809
    5. '  ' → logprob: -10.380156517028809
    6. 'a' → logprob: -11.380156517028809
    7. 'ar' → logprob: -11.630156517028809
    8. 's' → logprob: -12.255156517028809
    9. 'i' → logprob: -12.505156517028809
    10. 'r' → logprob: -12.880156517028809

Token 74: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.012511413544416428
    2. 'text' → logprob: -4.387511253356934
    3. '	text' → logprob: -14.262511253356934
    4. ' ' → logprob: -14.387511253356934
    5. '{text' → logprob: -15.762511253356934
    6. '"text' → logprob: -16.13751220703125
    7. '```' → logprob: -16.51251220703125
    8. '(text' → logprob: -17.01251220703125
    9. 't' → logprob: -17.01251220703125
    10. ' ' → logprob: -17.13751220703125

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005845481529831886
    2. '):' → logprob: -5.630845546722412
    3. ' :' → logprob: -6.130845546722412
    4. ':**' → logprob: -11.255845069885254
    5. ':
' → logprob: -11.505845069885254
    6. ',' → logprob: -11.630845069885254
    7. '>:' → logprob: -11.755845069885254
    8. ')' → logprob: -11.880845069885254
    9. '<|end|>' → logprob: -12.255845069885254
    10. ']:' → logprob: -13.005845069885254

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3809114396572113
    2. ' ' → logprob: -1.2559114694595337
    3. '        ' → logprob: -3.880911350250244
    4. '    ' → logprob: -5.630911350250244
    5. '<|end|>' → logprob: -5.755911350250244
    6. 'if' → logprob: -6.880911350250244
    7. ' if' → logprob: -7.005911350250244
    8. '   ' → logprob: -7.380911350250244
    9. 'i' → logprob: -8.005911827087402
    10. '      ' → logprob: -8.130911827087402

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25862711668014526
    2. 'i' → logprob: -2.50862717628479
    3. ' ' → logprob: -2.63362717628479
    4. ' if' → logprob: -3.13362717628479
    5. '        ' → logprob: -4.133626937866211
    6. '       ' → logprob: -4.633626937866211
    7. '    ' → logprob: -6.008626937866211
    8. ' i' → logprob: -6.258626937866211
    9. '   ' → logprob: -8.758626937866211
    10. 'ift' → logprob: -9.008626937866211

Token 78: ' '' (ID: 461)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.1843031793832779
    2. ' '' → logprob: -2.0593032836914062
    3. ''' → logprob: -3.3093032836914062
    4. 'ch' → logprob: -5.684303283691406
    5. ''ch' → logprob: -8.059303283691406
    6. ' ' → logprob: -8.309303283691406
    7. ''s' → logprob: -9.559303283691406
    8. ''a' → logprob: -9.934303283691406
    9. '"' → logprob: -10.434303283691406
    10. ' ord' → logprob: -10.809303283691406

Token 79: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005235190503299236
    2. ''a' → logprob: -5.255235195159912
    3. ''' → logprob: -13.630234718322754
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.880234718322754
    5. 'а' → logprob: -16.38023567199707
    6. ' '' → logprob: -17.38023567199707
    7. '```' → logprob: -17.38023567199707
    8. ' a' → logprob: -18.25523567199707
    9. '’a' → logprob: -18.38023567199707
    10. ''z' → logprob: -18.50523567199707

Token 80: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.45848218582978e-06
    2. 'le' → logprob: -14.25000286102295
    3. ''z' → logprob: -14.62500286102295
    4. '<=' → logprob: -15.25000286102295
    5. ''in' → logprob: -15.75000286102295
    6. ''m' → logprob: -15.87500286102295
    7. ''''' → logprob: -16.000001907348633
    8. ''a' → logprob: -16.125001907348633
    9. 'a' → logprob: -16.375001907348633
    10. 'z' → logprob: -16.500001907348633

Token 81: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07812350988388062
    2. '<=' → logprob: -2.7031235694885254
    3. ''' → logprob: -4.828123569488525
    4. '"' → logprob: -9.828123092651367
    5. ' ' → logprob: -10.578123092651367
    6. 'ord' → logprob: -10.953123092651367
    7. '=' → logprob: -10.953123092651367
    8. ''s' → logprob: -12.703123092651367
    9. 'le' → logprob: -12.828123092651367
    10. '[' → logprob: -12.828123092651367

Token 82: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.47407984733581543
    2. ' ch' → logprob: -0.9740798473358154
    3. 'c' → logprob: -13.724080085754395
    4. '	ch' → logprob: -13.974080085754395
    5. '[ch' → logprob: -14.849080085754395
    6. '_ch' → logprob: -15.974080085754395
    7. ' ' → logprob: -16.349079132080078
    8. '(ch' → logprob: -16.349079132080078
    9. ''ch' → logprob: -17.099079132080078
    10. '.ch' → logprob: -17.224079132080078

Token 83: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04882671311497688
    2. '<=' → logprob: -3.0488266944885254
    3. ' and' → logprob: -8.798827171325684
    4. 'and' → logprob: -10.548827171325684
    5. '```' → logprob: -11.173827171325684
    6. 'le' → logprob: -11.798827171325684
    7. ' ' → logprob: -12.298827171325684
    8. '[' → logprob: -12.423827171325684
    9. 'a' → logprob: -12.548827171325684
    10. '   ' → logprob: -12.548827171325684

Token 84: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.062149737030267715
    2. ' '' → logprob: -2.8121497631073
    3. ''y' → logprob: -9.062150001525879
    4. '‘z' → logprob: -10.812150001525879
    5. ''' → logprob: -11.312150001525879
    6. 'z' → logprob: -11.687150001525879
    7. ''s' → logprob: -11.937150001525879
    8. ' ' → logprob: -12.312150001525879
    9. ''q' → logprob: -12.812150001525879
    10. ''ch' → logprob: -13.687150001525879

Token 85: 'z' (ID: 89)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.048591118305921555
    2. 'z' → logprob: -3.048591136932373
    3. '‘z' → logprob: -13.673590660095215
    4. ''y' → logprob: -13.798590660095215
    5. ''s' → logprob: -14.048590660095215
    6. ''a' → logprob: -15.173590660095215
    7. ''' → logprob: -15.548590660095215
    8. '	z' → logprob: -15.923590660095215
    9. '’z' → logprob: -16.54859161376953
    10. ' z' → logprob: -16.92359161376953

Token 86: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.010400574654340744
    2. ''' → logprob: -5.635400772094727
    3. ':' → logprob: -5.635400772094727
    4. '':
' → logprob: -5.760400772094727
    5. ' ':' → logprob: -10.010400772094727
    6. '):' → logprob: -13.010400772094727
    7. ':
' → logprob: -13.135400772094727
    8. '':

' → logprob: -13.135400772094727
    9. '':'' → logprob: -13.635400772094727
    10. '":' → logprob: -13.760400772094727

Token 87: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32660025358200073
    2. '        ' → logprob: -2.2016003131866455
    3. ' :' → logprob: -2.3266003131866455
    4. ' ' → logprob: -4.326600074768066
    5. ':' → logprob: -4.701600074768066
    6. '        
' → logprob: -4.826600074768066
    7. '           ' → logprob: -4.951600074768066
    8. '   ' → logprob: -5.451600074768066
    9. ' 
' → logprob: -5.576600074768066
    10. '         
' → logprob: -5.701600074768066

Token 88: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6785348057746887
    2. '       ' → logprob: -1.428534746170044
    3. '        ' → logprob: -1.928534746170044
    4. ' 
' → logprob: -3.553534746170044
    5. '        
' → logprob: -3.803534746170044
    6. ' ' → logprob: -4.428534984588623
    7. '         
' → logprob: -4.553534984588623
    8. ' shifted' → logprob: -5.053534984588623
    9. 'n' → logprob: -5.303534984588623
    10. 'shift' → logprob: -5.678534984588623

Token 89: ' Déc' (ID: 56995)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.9622520804405212
    2. ' shifted' → logprob: -1.462252140045166
    3. 'offset' → logprob: -2.962252140045166
    4. 'd' → logprob: -3.087252140045166
    5. '   ' → logprob: -3.212252140045166
    6. ' new' → logprob: -3.337252140045166
    7. ' ascii' → logprob: -3.337252140045166
    8. ' offset' → logprob: -3.712252140045166
    9. 'ascii' → logprob: -3.712252140045166
    10. ' shift' → logprob: -3.837252140045166

Token 90: 'al' (ID: 280)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6908339858055115
    2. 'al' → logprob: -0.8158339858055115
    3. 'ale' → logprob: -3.6908340454101562
    4. 'r' → logprob: -4.065834045410156
    5. '```' → logprob: -5.190834045410156
    6. 'l' → logprob: -5.940834045410156
    7. '   ' → logprob: -7.378334045410156
    8. 'aler' → logprob: -7.628334045410156
    9. 'alez' → logprob: -7.690834045410156
    10. '    ' → logprob: -7.940834045410156

Token 91: 'age' (ID: 477)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18338768184185028
    2. 'e' → logprob: -2.1833877563476562
    3. 'er' → logprob: -3.8083877563476562
    4. 'age' → logprob: -3.9333877563476562
    5. '   ' → logprob: -6.183387756347656
    6. '       ' → logprob: -6.308387756347656
    7. '           ' → logprob: -6.308387756347656
    8. 'ag' → logprob: -6.558387756347656
    9. 'é' → logprob: -7.308387756347656
    10. '               ' → logprob: -7.558387756347656

Token 92: ' circul' (ID: 20568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8902756571769714
    2. ' =' → logprob: -0.8902756571769714
    3. '           ' → logprob: -2.140275716781616
    4. ' ' → logprob: -3.765275716781616
    5. '            ' → logprob: -4.265275478363037
    6. 'shift' → logprob: -5.515275478363037
    7. 'c' → logprob: -5.640275478363037
    8. ' shifted' → logprob: -5.890275478363037
    9. 's' → logprob: -6.140275478363037
    10. ')' → logprob: -6.265275478363037

Token 93: 'aire' (ID: 8189)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7440811395645142
    2. 'aire' → logprob: -0.9940811395645142
    3. 'é' → logprob: -2.3690810203552246
    4. 'ar' → logprob: -3.6190810203552246
    5. 'e' → logprob: -4.619081020355225
    6. 'er' → logprob: -4.744081020355225
    7. 'air' → logprob: -4.744081020355225
    8. 'ier' → logprob: -5.869081020355225
    9. ')' → logprob: -6.869081020355225
    10. '```' → logprob: -7.994081020355225

Token 94: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05390853062272072
    2. 'shift' → logprob: -4.303908348083496
    3. '               ' → logprob: -4.678908348083496
    4. 'new' → logprob: -4.928908348083496
    5. 'offset' → logprob: -5.803908348083496
    6. ' =' → logprob: -5.928908348083496
    7. ' shifted' → logprob: -6.053908348083496
    8. 'n' → logprob: -6.053908348083496
    9. '            ' → logprob: -6.428908348083496
    10. ' ' → logprob: -6.428908348083496

Token 95: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06802725791931152
    2. 'l' → logprob: -3.5680272579193115
    3. ' ' → logprob: -4.818027496337891
    4. ''' → logprob: -4.943027496337891
    5. ' '' → logprob: -4.943027496337891
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.693027496337891
    7. ''al' → logprob: -6.318027496337891
    8. ' alphabet' → logprob: -6.318027496337891
    9. ' la' → logprob: -6.568027496337891
    10. ' le' → logprob: -7.068027496337891

Token 96: ''al' (ID: 47062)
  Prédit: ''al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''al' → logprob: -0.10345513373613358
    2. 'alphabet' → logprob: -2.728455066680908
    3. ''' → logprob: -4.353455066680908
    4. 'a' → logprob: -4.978455066680908
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.353455066680908
    6. 'alph' → logprob: -5.603455066680908
    7. ''ordre' → logprob: -6.603455066680908
    8. '['' → logprob: -7.603455066680908
    9. '   ' → logprob: -7.728455066680908
    10. '’al' → logprob: -7.853455066680908

Token 97: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.0303646232932806
    2. 'ph' → logprob: -3.905364513397217
    3. 'p' → logprob: -5.030364513397217
    4. 'pha' → logprob: -6.280364513397217
    5. 'f' → logprob: -8.405364990234375
    6. 'phase' → logprob: -8.530364990234375
    7. '```' → logprob: -8.530364990234375
    8. 'aph' → logprob: -8.655364990234375
    9. 'et' → logprob: -8.655364990234375
    10. 'h' → logprob: -9.280364990234375

Token 98: ' minus' (ID: 40335)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028803043067455292
    2. '            ' → logprob: -4.403802871704102
    3. '            
' → logprob: -6.028802871704102
    4. '               ' → logprob: -6.153802871704102
    5. 'n' → logprob: -6.278802871704102
    6. ' ' → logprob: -6.528802871704102
    7. 'shift' → logprob: -6.653802871704102
    8. ',' → logprob: -6.903802871704102
    9. ' ' → logprob: -7.028802871704102
    10. ' (' → logprob: -7.528802871704102

Token 99: 'cules' (ID: 40805)
  Prédit: 'cule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.015354663133621216
    2. 'cules' → logprob: -4.515354633331299
    3. 'c' → logprob: -6.140354633331299
    4. 'ucle' → logprob: -7.015354633331299
    5. 'cul' → logprob: -7.890354633331299
    6. '```' → logprob: -7.890354633331299
    7. 'cula' → logprob: -8.765355110168457
    8. 'ule' → logprob: -9.640355110168457
    9. 'culaire' → logprob: -9.765355110168457
    10. 'uc' → logprob: -10.765355110168457

Token 100: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009501300752162933
    2. '               ' → logprob: -5.5095014572143555
    3. ':' → logprob: -7.0095014572143555
    4. '
' → logprob: -7.1345014572143555
    5. ')' → logprob: -7.3845014572143555
    6. '            ' → logprob: -7.7595014572143555
    7. '            
' → logprob: -8.009501457214355
    8. ' =' → logprob: -8.259501457214355
    9. ' :' → logprob: -8.384501457214355
    10. ' ' → logprob: -8.634501457214355

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005041740834712982
    2. ' ' → logprob: -6.380041599273682
    3. '            ' → logprob: -6.505041599273682
    4. '            
' → logprob: -8.00504207611084
    5. '               ' → logprob: -8.13004207611084
    6. ' :' → logprob: -8.63004207611084
    7. ',' → logprob: -8.88004207611084
    8. ' ' → logprob: -9.13004207611084
    9. 'n' → logprob: -9.25504207611084
    10. '       ' → logprob: -9.38004207611084

Token 102: ' new' (ID: 620)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.095212459564209
    2. ' decrypted' → logprob: -1.470212459564209
    3. 'offset' → logprob: -2.095212459564209
    4. ' shifted' → logprob: -2.345212459564209
    5. 'de' → logprob: -2.970212459564209
    6. ' offset' → logprob: -3.220212459564209
    7. '           ' → logprob: -4.095212459564209
    8. '       ' → logprob: -4.095212459564209
    9. 'decoded' → logprob: -4.095212459564209
    10. ' original' → logprob: -4.220212459564209

Token 103: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.05247524008154869
    2. '_' → logprob: -3.6774752140045166
    3. '_pos' → logprob: -4.052475452423096
    4. '_ord' → logprob: -5.302475452423096
    5. '_code' → logprob: -6.677475452423096
    6. '_index' → logprob: -6.802475452423096
    7. '_c' → logprob: -7.802475452423096
    8. '_idx' → logprob: -8.052474975585938
    9. '_ch' → logprob: -8.552474975585938
    10. '_position' → logprob: -9.552474975585938

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27553120255470276
    2. '=' → logprob: -1.5255311727523804
    3. '_code' → logprob: -4.77553129196167
    4. '_ord' → logprob: -4.90053129196167
    5. '_' → logprob: -5.40053129196167
    6. ' ' → logprob: -5.90053129196167
    7. '_index' → logprob: -9.775530815124512
    8. '_idx' → logprob: -10.150530815124512
    9. '```' → logprob: -10.525530815124512
    10. 'code' → logprob: -11.150530815124512

Token 105: ' chr' (ID: 42767)
  Prédit: ' chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.0297548845410347
    2. 'chr' → logprob: -3.529754877090454
    3. '(chr' → logprob: -12.654754638671875
    4. ' ' → logprob: -13.654754638671875
    5. '_chr' → logprob: -18.154754638671875
    6. ' ' → logprob: -18.154754638671875
    7. ' Chr' → logprob: -18.779754638671875
    8. '  ' → logprob: -19.529754638671875
    9. '   ' → logprob: -19.904754638671875
    10. 'c' → logprob: -20.154754638671875

Token 106: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0032402207143604755
    2. '(' → logprob: -6.12824010848999
    3. '(ord' → logprob: -7.37824010848999
    4. '(((' → logprob: -7.87824010848999
    5. ' ((' → logprob: -10.253240585327148
    6. '((((' → logprob: -11.628240585327148
    7. ' (' → logprob: -12.503240585327148
    8. '(
' → logprob: -12.753240585327148
    9. ' ' → logprob: -15.753240585327148
    10. ' (((' → logprob: -16.87824058532715

Token 107: 'ord' (ID: 604)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.10032323002815247
    2. 'ord' → logprob: -2.35032320022583
    3. ' ord' → logprob: -9.225323677062988
    4. ' (' → logprob: -10.975323677062988
    5. '((' → logprob: -14.725323677062988
    6. '(' → logprob: -15.350323677062988
    7. '   ' → logprob: -16.600322723388672
    8. '(chr' → logprob: -16.850322723388672
    9. 'ords' → logprob: -16.975322723388672
    10. '_ord' → logprob: -17.100322723388672

Token 108: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.001059486996382475
    2. '(' → logprob: -7.251059532165527
    3. ' (' → logprob: -8.626059532165527
    4. 'ch' → logprob: -9.126059532165527
    5. ')' → logprob: -11.251059532165527
    6. '[ch' → logprob: -11.376059532165527
    7. '	ch' → logprob: -12.001059532165527
    8. '('' → logprob: -12.376059532165527
    9. '(
' → logprob: -12.376059532165527
    10. '(chr' → logprob: -12.376059532165527

Token 109: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.040018923580646515
    2. '-' → logprob: -3.4150190353393555
    3. ')' → logprob: -5.1650190353393555
    4. ' ' → logprob: -7.5400190353393555
    5. ' )' → logprob: -9.290019035339355
    6. '```' → logprob: -12.165019035339355
    7. '-)' → logprob: -12.915019035339355
    8. ')-' → logprob: -13.540019035339355
    9. ' ' → logprob: -13.790019035339355
    10. '>' → logprob: -14.415019035339355

Token 110: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005960914772003889
    2. '-' → logprob: -5.130960941314697
    3. ' ' → logprob: -10.380960464477539
    4. ')' → logprob: -14.380960464477539
    5. ' ' → logprob: -14.880960464477539
    6. ' )' → logprob: -15.630960464477539
    7. ' ,' → logprob: -17.25596046447754
    8. '+' → logprob: -17.50596046447754
    9. ',' → logprob: -17.75596046447754
    10. ' -
' → logprob: -18.25596046447754

Token 111: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.2441377341747284
    2. 'shift' → logprob: -1.7441377639770508
    3. 'ord' → logprob: -3.744137763977051
    4. ' ord' → logprob: -4.369137763977051
    5. ' shift' → logprob: -5.369137763977051
    6. ' ' → logprob: -7.619137763977051
    7. '96' → logprob: -9.24413776397705
    8. 'a' → logprob: -9.49413776397705
    9. '   ' → logprob: -9.74413776397705
    10. ''s' → logprob: -11.11913776397705

Token 112: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005761472275480628
    2. '(' → logprob: -7.750576019287109
    3. ' ('' → logprob: -9.50057601928711
    4. ')' → logprob: -10.50057601928711
    5. ''s' → logprob: -10.87557601928711
    6. ''a' → logprob: -11.75057601928711
    7. ''' → logprob: -11.87557601928711
    8. 'a' → logprob: -12.75057601928711
    9. '>('' → logprob: -13.25057601928711
    10. '("' → logprob: -13.87557601928711

Token 113: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.1008713702030946e-06
    2. ''a' → logprob: -13.125001907348633
    3. 'а' → logprob: -18.125001907348633
    4. '```' → logprob: -18.250001907348633
    5. ''' → logprob: -18.875001907348633
    6. '`' → logprob: -19.000001907348633
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.125001907348633
    8. ' a' → logprob: -19.375001907348633
    9. '')' → logprob: -19.500001907348633
    10. '`)' → logprob: -20.750001907348633

Token 114: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14296069741249084
    2. '')' → logprob: -2.017960786819458
    3. ' )' → logprob: -8.517960548400879
    4. '")' → logprob: -10.142960548400879
    5. ''' → logprob: -11.017960548400879
    6. '-' → logprob: -11.392960548400879
    7. ' -' → logprob: -11.767960548400879
    8. ']' → logprob: -13.142960548400879
    9. ' ')' → logprob: -13.267960548400879
    10. ''s' → logprob: -13.767960548400879

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.027590323239564896
    2. '-' → logprob: -3.652590274810791
    3. ' ' → logprob: -7.277590274810791
    4. ')' → logprob: -7.527590274810791
    5. ' +' → logprob: -10.77759075164795
    6. '+' → logprob: -10.77759075164795
    7. ' )' → logprob: -12.15259075164795
    8. '    ' → logprob: -12.65259075164795
    9. ')-' → logprob: -13.15259075164795
    10. ' ' → logprob: -13.40259075164795

Token 116: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.20142242312431335
    2. 'shift' → logprob: -1.7014224529266357
    3. ' ' → logprob: -11.826422691345215
    4. ')' → logprob: -14.576422691345215
    5. ' (' → logprob: -15.076422691345215
    6. '.shift' → logprob: -15.326422691345215
    7. '    ' → logprob: -15.701422691345215
    8. '   ' → logprob: -15.701422691345215
    9. ' s' → logprob: -16.7014217376709
    10. 'sh' → logprob: -16.8264217376709

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000639169302303344
    2. ' )' → logprob: -7.375638961791992
    3. ')%' → logprob: -12.000638961791992
    4. '+' → logprob: -12.625638961791992
    5. ' +' → logprob: -12.750638961791992
    6. ' ' → logprob: -16.375638961791992
    7. '   ' → logprob: -17.875638961791992
    8. ')
' → logprob: -18.000638961791992
    9. '```' → logprob: -18.125638961791992
    10. '')' → logprob: -18.125638961791992

Token 118: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10523847490549088
    2. ' )' → logprob: -2.355238437652588
    3. ' %' → logprob: -5.605238437652588
    4. ' ' → logprob: -7.230238437652588
    5. ')%' → logprob: -7.605238437652588
    6. '%' → logprob: -9.105238914489746
    7. ' +' → logprob: -12.605238914489746
    8. '```' → logprob: -14.355238914489746
    9. '   ' → logprob: -14.605238914489746
    10. '  ' → logprob: -14.605238914489746

Token 119: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.387510299682617
    4. '```' → logprob: -18.012510299682617
    5. '27' → logprob: -18.262510299682617
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -18.637510299682617
    7. '24' → logprob: -18.950010299682617
    8. '  ' → logprob: -19.262510299682617
    9. '25' → logprob: -19.575010299682617
    10. 'alphabet' → logprob: -20.012510299682617

Token 120: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.000003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '```' → logprob: -21.875003814697266
    6. '2' → logprob: -22.000003814697266
    7. '27' → logprob: -22.250003814697266
    8. 'alphabet' → logprob: -22.875003814697266
    9. '{' → logprob: -23.625003814697266
    10. '24' → logprob: -23.625003814697266

Token 121: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02975604310631752
    2. '+' → logprob: -3.5297560691833496
    3. ' ' → logprob: -12.404755592346191
    4. ')' → logprob: -13.779755592346191
    5. ' )' → logprob: -15.904755592346191
    6. '   ' → logprob: -16.404756546020508
    7. ' ' → logprob: -16.654756546020508
    8. ')+' → logprob: -16.779756546020508
    9. '  ' → logprob: -17.279756546020508
    10. '    ' → logprob: -17.279756546020508

Token 122: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.01822860911488533
    2. 'ord' → logprob: -4.018228530883789
    3. '97' → logprob: -9.643228530883789
    4. '(ord' → logprob: -11.518228530883789
    5. '32' → logprob: -13.268228530883789
    6. ' ' → logprob: -14.143228530883789
    7. ' '' → logprob: -15.393228530883789
    8. ''' → logprob: -15.643228530883789
    9. '```' → logprob: -16.01822853088379
    10. 'a' → logprob: -16.14322853088379

Token 123: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00011319868644932285
    2. '(' → logprob: -9.125113487243652
    3. ' ('' → logprob: -12.500113487243652
    4. ''a' → logprob: -15.750113487243652
    5. 'a' → logprob: -16.000112533569336
    6. '(('' → logprob: -16.750112533569336
    7. ' (' → logprob: -16.875112533569336
    8. ''' → logprob: -17.125112533569336
    9. '("' → logprob: -17.375112533569336
    10. '(a' → logprob: -17.750112533569336

Token 124: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ''a' → logprob: -6.7511701583862305
    3. ''' → logprob: -17.001171112060547
    4. ' a' → logprob: -18.501171112060547
    5. '')' → logprob: -19.876171112060547
    6. '```' → logprob: -20.001171112060547
    7. ''z' → logprob: -20.126171112060547
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.626171112060547
    9. 'а' → logprob: -20.751171112060547
    10. '	a' → logprob: -21.126171112060547

Token 125: ''))
' (ID: 15277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5773764252662659
    2. '))' → logprob: -0.8273764252662659
    3. ''))' → logprob: -6.577376365661621
    4. '))
' → logprob: -11.202376365661621
    5. '')' → logprob: -11.327376365661621
    6. ')
' → logprob: -12.077376365661621
    7. ' ))' → logprob: -12.452376365661621
    8. '"))' → logprob: -12.577376365661621
    9. ')))' → logprob: -12.702376365661621
    10. ' )' → logprob: -13.202376365661621

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005967780947685242
    2. '       ' → logprob: -5.630967617034912
    3. ')' → logprob: -6.130967617034912
    4. '
' → logprob: -9.13096809387207
    5. '               ' → logprob: -10.75596809387207
    6. ')
' → logprob: -11.25596809387207
    7. '<|end|>' → logprob: -11.38096809387207
    8. '		' → logprob: -11.50596809387207
    9. '   ' → logprob: -11.75596809387207
    10. '            
' → logprob: -12.50596809387207

Token 127: ' decrypted' (ID: 139372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19804328680038452
    2. ' decrypted' → logprob: -2.1980433464050293
    3. 'de' → logprob: -2.6980433464050293
    4. '       ' → logprob: -6.948043346405029
    5. ' de' → logprob: -9.073042869567871
    6. '
' → logprob: -9.823042869567871
    7. ')' → logprob: -9.823042869567871
    8. 'decoded' → logprob: -10.073042869567871
    9. 'decrypt' → logprob: -10.573042869567871
    10. '          ' → logprob: -11.698042869567871

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038047004491090775
    2. '.' → logprob: -3.2880470752716064
    3. '.extend' → logprob: -12.788046836853027
    4. ' .' → logprob: -13.538046836853027
    5. '.Append' → logprob: -14.663046836853027
    6. '.push' → logprob: -14.913046836853027
    7. '.app' → logprob: -14.913046836853027
    8. '.ap' → logprob: -16.038047790527344
    9. 'append' → logprob: -16.288047790527344
    10. ').' → logprob: -16.788047790527344

Token 129: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00020425561524461955
    2. '(' → logprob: -8.500204086303711
    3. 'new' → logprob: -14.250204086303711
    4. ' (' → logprob: -17.00020408630371
    5. ')new' → logprob: -17.12520408630371
    6. ' new' → logprob: -17.50020408630371
    7. ',new' → logprob: -18.37520408630371
    8. '(
' → logprob: -19.37520408630371
    9. '('' → logprob: -19.50020408630371
    10. '(n' → logprob: -19.75020408630371

Token 130: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.496052371105179e-05
    2. 'char' → logprob: -9.62509536743164
    3. '_' → logprob: -11.50009536743164
    4. '_chars' → logprob: -12.37509536743164
    5. '_chr' → logprob: -12.50009536743164
    6. 'crypted' → logprob: -13.00009536743164
    7. '-char' → logprob: -13.12509536743164
    8. '_CHAR' → logprob: -13.37509536743164
    9. '_c' → logprob: -14.12509536743164
    10. 'ed' → logprob: -14.25009536743164

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005289849825203419
    2. ')
' → logprob: -5.2552900314331055
    3. ' )' → logprob: -10.255290031433105
    4. '       ' → logprob: -11.005290031433105
    5. '   ' → logprob: -12.880290031433105
    6. ' )
' → logprob: -14.255290031433105
    7. ')
' → logprob: -14.755290031433105
    8. '')' → logprob: -15.255290031433105
    9. ')

' → logprob: -15.505290031433105
    10. ' ' → logprob: -15.880290031433105

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019197762594558299
    2. ' else' → logprob: -9.250191688537598
    3. 'else' → logprob: -9.375191688537598
    4. '   ' → logprob: -13.000191688537598
    5. '
' → logprob: -13.500191688537598
    6. '      ' → logprob: -13.625191688537598
    7. 'elif' → logprob: -13.625191688537598
    8. '<|end|>' → logprob: -13.625191688537598
    9. ')' → logprob: -13.750191688537598
    10. '	' → logprob: -14.500191688537598

Token 133: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.38784587383270264
    2. ' else' → logprob: -1.3878458738327026
    3. '       ' → logprob: -2.637845993041992
    4. 'elif' → logprob: -8.137845993041992
    5. '   ' → logprob: -10.012845993041992
    6. ' elif' → logprob: -11.387845993041992
    7. '	else' → logprob: -13.012845993041992
    8. 'el' → logprob: -13.262845993041992
    9. 'els' → logprob: -13.762845993041992
    10. 'e' → logprob: -14.387845993041992

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007749540731310844
    2. ':
' → logprob: -4.882749557495117
    3. '<|end|>' → logprob: -9.882749557495117
    4. ' :' → logprob: -10.007749557495117
    5. '       ' → logprob: -10.882749557495117
    6. ' :
' → logprob: -11.882749557495117
    7. '   ' → logprob: -12.507749557495117
    8. '<|end|>' → logprob: -12.757749557495117
    9. ':return' → logprob: -12.882749557495117
    10. '           ' → logprob: -12.882749557495117

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.639211118221283
    2. ' decrypted' → logprob: -0.764211118221283
    3. 'de' → logprob: -5.139211177825928
    4. ' ' → logprob: -7.639211177825928
    5. ' de' → logprob: -9.38921070098877
    6. '       ' → logprob: -10.26421070098877
    7. '            ' → logprob: -10.51421070098877
    8. 'decoded' → logprob: -10.76421070098877
    9. 'decrypt' → logprob: -11.13921070098877
    10. '        ' → logprob: -11.38921070098877

Token 136: ' decrypted' (ID: 139372)
  Prédit: ' decrypted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decrypted' → logprob: -0.006738580763339996
    2. 'de' → logprob: -5.006738662719727
    3. ' de' → logprob: -11.631738662719727
    4. '    ' → logprob: -12.756738662719727
    5. ' ' → logprob: -12.881738662719727
    6. '   ' → logprob: -13.006738662719727
    7. '           ' → logprob: -13.006738662719727
    8. 'decoded' → logprob: -13.381738662719727
    9. ' decoded' → logprob: -14.131738662719727
    10. '            ' → logprob: -14.631738662719727

Token 137: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011966594029217958
    2. '.' → logprob: -6.75119686126709
    3. '.app' → logprob: -11.37619686126709
    4. '.extend' → logprob: -11.87619686126709
    5. 'append' → logprob: -11.87619686126709
    6. '.Append' → logprob: -14.50119686126709
    7. '_append' → logprob: -15.37619686126709
    8. ' .' → logprob: -17.001195907592773
    9. '.push' → logprob: -17.126195907592773
    10. '.add' → logprob: -17.126195907592773

Token 138: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'ch' → logprob: -16.25002098083496
    4. '(c' → logprob: -17.87502098083496
    5. '[ch' → logprob: -18.75002098083496
    6. '	ch' → logprob: -19.12502098083496
    7. '(chr' → logprob: -19.50002098083496
    8. '('' → logprob: -20.37502098083496
    9. '/ch' → logprob: -20.87502098083496
    10. '(chat' → logprob: -21.00002098083496

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')return' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '}' → logprob: -18.125001907348633
    7. '))' → logprob: -18.250001907348633
    8. '),' → logprob: -18.750001907348633
    9. '       ' → logprob: -18.875001907348633
    10. ')}' → logprob: -18.875001907348633

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09002413600683212
    2. '
' → logprob: -2.59002423286438
    3. 'return' → logprob: -5.090023994445801
    4. ' return' → logprob: -5.840023994445801
    5. '    
' → logprob: -6.840023994445801
    6. '\n' → logprob: -7.340023994445801
    7. '	return' → logprob: -9.3400239944458
    8. '  
' → logprob: -9.7150239944458
    9. '
' → logprob: -10.3400239944458
    10. '' → logprob: -10.5900239944458

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006040781736373901
    2. ' return' → logprob: -5.506040573120117
    3. '   ' → logprob: -6.256040573120117
    4. '
' → logprob: -10.256040573120117
    5. '    
' → logprob: -12.631040573120117
    6. '	return' → logprob: -13.006040573120117
    7. ' ' → logprob: -15.256040573120117
    8. '```' → logprob: -15.256040573120117
    9. '\n' → logprob: -16.131040573120117
    10. 'ret' → logprob: -16.381040573120117

Token 142: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.033272866159677505
    2. '"' → logprob: -4.158272743225098
    3. '''.' → logprob: -4.533272743225098
    4. ' "".' → logprob: -5.158272743225098
    5. ' '' → logprob: -7.908272743225098
    6. ''' → logprob: -9.033272743225098
    7. ' decrypted' → logprob: -10.283272743225098
    8. '''' → logprob: -10.533272743225098
    9. ' "' → logprob: -10.783272743225098
    10. ' ''' → logprob: -11.408272743225098

Token 143: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.3856492842023727e-06
    2. 'jo' → logprob: -13.875000953674316
    3. 'j' → logprob: -14.875000953674316
    4. ' join' → logprob: -17.375001907348633
    5. '.join' → logprob: -18.125001907348633
    6. '(join' → logprob: -18.750001907348633
    7. '''.' → logprob: -19.875001907348633
    8. '_join' → logprob: -20.250001907348633
    9. '.' → logprob: -20.750001907348633
    10. 'Join' → logprob: -21.375001907348633

Token 144: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.003196965903043747
    2. '(' → logprob: -5.753197193145752
    3. '(decoded' → logprob: -11.128196716308594
    4. 'de' → logprob: -12.503196716308594
    5. '(
' → logprob: -15.503196716308594
    6. ' (' → logprob: -15.503196716308594
    7. '(dec' → logprob: -16.253196716308594
    8. '(d' → logprob: -16.378196716308594
    9. '(convert' → logprob: -16.753196716308594
    10. '(

' → logprob: -16.878196716308594

Token 145: 'crypted' (ID: 24522)
  Prédit: 'crypted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypted' → logprob: -0.00013417120499070734
    2. 'rypt' → logprob: -9.375134468078613
    3. 'y' → logprob: -10.750134468078613
    4. 'crypt' → logprob: -11.125134468078613
    5. 'pt' → logprob: -11.875134468078613
    6. 'cr' → logprob: -12.375134468078613
    7. 'c' → logprob: -13.625134468078613
    8. 'coded' → logprob: -15.125134468078613
    9. 'cript' → logprob: -15.875134468078613
    10. 'cy' → logprob: -16.000133514404297

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.625
    4. '<|end|>' → logprob: -17.75
    5. '}' → logprob: -18.875
    6. ')`' → logprob: -19.125
    7. '),' → logprob: -19.625
    8. ']' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. ')

' → logprob: -20.25

Token 147: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1769847422838211
    2. 'text' → logprob: -2.3019847869873047
    3. 'def' → logprob: -2.9269847869873047
    4. 'shift' → logprob: -5.176984786987305
    5. 'import' → logprob: -6.426984786987305
    6. 'input' → logprob: -7.426984786987305
    7. 'print' → logprob: -8.676984786987305
    8. '#' → logprob: -9.551984786987305
    9. 'plaintext' → logprob: -9.551984786987305
    10. 'try' → logprob: -9.551984786987305

Token 148: ' contains' (ID: 8895)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -6.56364209135063e-05
    2. ' ca' → logprob: -10.375065803527832
    3. 'main' → logprob: -11.375065803527832
    4. ' ' → logprob: -11.500065803527832
    5. '_main' → logprob: -12.375065803527832
    6. ' ' → logprob: -13.125065803527832
    7. ' encrypt' → logprob: -13.250065803527832
    8. '	main' → logprob: -13.875065803527832
    9. ' usage' → logprob: -14.125065803527832
    10. '  ' → logprob: -14.750065803527832

Token 149: '_keyword' (ID: 117000)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.720393419265747
    2. '_' → logprob: -1.845393419265747
    3. '_word' → logprob: -2.095393419265747
    4. '_keyword' → logprob: -2.095393419265747
    5. '_upper' → logprob: -2.220393419265747
    6. '_flag' → logprob: -2.845393419265747
    7. '_space' → logprob: -3.220393419265747
    8. '_ignore' → logprob: -3.845393419265747
    9. '_secret' → logprob: -3.970393419265747
    10. '_lower' → logprob: -3.970393419265747

Token 150: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0987323448061943
    2. ' (' → logprob: -2.8487322330474854
    3. '(' → logprob: -3.3487322330474854
    4. '(user' → logprob: -8.098731994628906
    5. '(word' → logprob: -8.098731994628906
    6. '(sentence' → logprob: -9.223731994628906
    7. '(message' → logprob: -10.348731994628906
    8. '(s' → logprob: -10.473731994628906
    9. '(token' → logprob: -10.598731994628906
    10. '(input' → logprob: -10.848731994628906

Token 151: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02630668506026268
    2. ' ,' → logprob: -3.651306629180908
    3. ',text' → logprob: -12.151307106018066
    4. '):' → logprob: -14.901307106018066
    5. ')' → logprob: -15.651307106018066
    6. ' ' → logprob: -15.901307106018066
    7. '‌,' → logprob: -16.02630615234375
    8. ',
' → logprob: -16.40130615234375
    9. ' ,
' → logprob: -17.77630615234375
    10. '(text' → logprob: -17.90130615234375

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.346727967262268
    2. ''' → logprob: -1.721727967262268
    3. ' ' → logprob: -1.971727967262268
    4. '(' → logprob: -2.2217278480529785
    5. '"' → logprob: -2.3467278480529785
    6. '    ' → logprob: -2.4717278480529785
    7. ' (' → logprob: -2.9717278480529785
    8. ' "' → logprob: -3.2217278480529785
    9. ' '' → logprob: -3.8467278480529785
    10. '<|end|>' → logprob: -5.7217278480529785

Token 153: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12195409834384918
    2. ' 
' → logprob: -3.3719542026519775
    3. ' keywords' → logprob: -3.3719542026519775
    4. 'keywords' → logprob: -4.371953964233398
    5. '    ' → logprob: -4.871953964233398
    6. ' return' → logprob: -4.996953964233398
    7. '_keywords' → logprob: -4.996953964233398
    8. '    
' → logprob: -5.246953964233398
    9. '     
' → logprob: -6.871953964233398
    10. ' ' → logprob: -7.246953964233398

Token 154: '   ' (ID: 271)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.516232430934906
    2. '   ' → logprob: -1.5162324905395508
    3. 'keywords' → logprob: -1.7662324905395508
    4. ' for' → logprob: -5.891232490539551
    5. '    ' → logprob: -6.016232490539551
    6. ' keyword' → logprob: -6.266232490539551
    7. '_keywords' → logprob: -6.641232490539551
    8. ' return' → logprob: -6.766232490539551
    9. ' keys' → logprob: -7.141232490539551
    10. 'keyword' → logprob: -7.516232490539551

Token 155: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3310646712779999
    2. ' keywords' → logprob: -2.5810647010803223
    3. '
' → logprob: -2.8310647010803223
    4. ' return' → logprob: -2.9560647010803223
    5. ' 
' → logprob: -2.9560647010803223
    6. 'keywords' → logprob: -4.581064701080322
    7. '    
' → logprob: -4.831064701080322
    8. '#' → logprob: -5.331064701080322
    9. '\n' → logprob: -5.456064701080322
    10. ' for' → logprob: -5.706064701080322

Token 156: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0016973186284303665
    2. 'if' → logprob: -6.751697540283203
    3. 'ifi' → logprob: -8.001697540283203
    4. 'i' → logprob: -8.626697540283203
    5. 'ife' → logprob: -12.126697540283203
    6. 'ifier' → logprob: -13.501697540283203
    7. 'ifiez' → logprob: -13.501697540283203
    8. '

' → logprob: -13.751697540283203
    9. 'ify' → logprob: -14.126697540283203
    10. 'ifié' → logprob: -14.376697540283203

Token 157: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13484880328178406
    2. ' '' → logprob: -2.5098488330841064
    3. ' "' → logprob: -3.3848488330841064
    4. ' si' → logprob: -5.009848594665527
    5. ' ' → logprob: -5.634848594665527
    6. ' la' → logprob: -9.134848594665527
    7. '  ' → logprob: -9.259848594665527
    8. ' whether' → logprob: -9.384848594665527
    9. 'if' → logprob: -9.634848594665527
    10. ' """' → logprob: -9.759848594665527

Token 158: ' le' (ID: 505)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.24407292902469635
    2. ' '' → logprob: -1.6190729141235352
    3. '"' → logprob: -4.369072914123535
    4. ' any' → logprob: -5.869072914123535
    5. ''' → logprob: -6.619072914123535
    6. ' ' → logprob: -7.619072914123535
    7. ''s' → logprob: -8.994072914123535
    8. ' ' → logprob: -9.181572914123535
    9. ''t' → logprob: -9.306572914123535
    10. ' the' → logprob: -9.494072914123535

Token 159: ' texte' (ID: 53492)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.4386746883392334
    2. '"' → logprob: -1.9386746883392334
    3. ' "' → logprob: -1.9386746883392334
    4. ' mot' → logprob: -2.1886746883392334
    5. ' text' → logprob: -2.3136746883392334
    6. 'texte' → logprob: -2.6886746883392334
    7. 'mot' → logprob: -3.0636746883392334
    8. ' texte' → logprob: -3.0636746883392334
    9. ''' → logprob: -3.3136746883392334
    10. ' '' → logprob: -3.6886746883392334

Token 160: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.02017149329185486
    2. ' contains' → logprob: -4.270171642303467
    3. ' cont' → logprob: -6.020171642303467
    4. 'cont' → logprob: -6.770171642303467
    5. 'contains' → logprob: -7.145171642303467
    6. ' '' → logprob: -8.270171165466309
    7. ' contiene' → logprob: -8.395171165466309
    8. ' comporte' → logprob: -8.395171165466309
    9. '   ' → logprob: -8.520171165466309
    10. ' "' → logprob: -9.020171165466309

Token 161: ' au' (ID: 2791)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.1094093769788742
    2. ' '' → logprob: -2.7344093322753906
    3. '"' → logprob: -3.8594093322753906
    4. ' la' → logprob: -4.859409332275391
    5. ' le' → logprob: -5.109409332275391
    6. ''' → logprob: -6.734409332275391
    7. ' the' → logprob: -7.234409332275391
    8. ' l' → logprob: -7.984409332275391
    9. ''un' → logprob: -7.984409332275391
    10. ' les' → logprob: -8.23440933227539

Token 162: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0031188949942588806
    2. ' moins' → logprob: -6.253118991851807
    3. 'mo' → logprob: -7.003118991851807
    4. 'm' → logprob: -8.878118515014648
    5. 'minimum' → logprob: -10.128118515014648
    6. 'menos' → logprob: -10.378118515014648
    7. 'c' → logprob: -11.253118515014648
    8. '   ' → logprob: -11.503118515014648
    9. '```' → logprob: -11.503118515014648
    10. 'une' → logprob: -11.878118515014648

Token 163: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2897571325302124
    2. ''un' → logprob: -1.4147571325302124
    3. ' l' → logprob: -1.5397571325302124
    4. ' le' → logprob: -2.039757251739502
    5. ' one' → logprob: -3.164757251739502
    6. ' '' → logprob: -3.664757251739502
    7. 'un' → logprob: -3.914757251739502
    8. ' "' → logprob: -4.539757251739502
    9. '"' → logprob: -5.039757251739502
    10. ' une' → logprob: -5.164757251739502

Token 164: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12513038516044617
    2. ' mot' → logprob: -2.5001304149627686
    3. 'mot' → logprob: -3.6251304149627686
    4. 'des' → logprob: -5.8751301765441895
    5. '   ' → logprob: -6.3751301765441895
    6. 'e' → logprob: -6.6251301765441895
    7. 'm' → logprob: -6.8751301765441895
    8. ' ' → logprob: -7.3751301765441895
    9. ' de' → logprob: -8.500130653381348
    10. '    ' → logprob: -8.750130653381348

Token 165: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.4330895245075226
    2. ' ['' → logprob: -1.9330894947052002
    3. ' ["' → logprob: -2.4330894947052
    4. '["' → logprob: -3.1830894947052
    5. '['' → logprob: -3.3080894947052
    6. 'm' → logprob: -3.9330894947052
    7. 'mot' → logprob: -5.308089733123779
    8. ' keywords' → logprob: -5.808089733123779
    9. ' mot' → logprob: -5.808089733123779
    10. '"' → logprob: -6.058089733123779

Token 166: ' indiqu' (ID: 100773)
  Prédit: ' clés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clés' → logprob: -0.2726481556892395
    2. '-cl' → logprob: -1.5226480960845947
    3. 'clé' → logprob: -4.772648334503174
    4. 'cl' → logprob: -5.647648334503174
    5. ' cle' → logprob: -5.772648334503174
    6. ' clé' → logprob: -6.272648334503174
    7. '-cle' → logprob: -6.647648334503174
    8. 'cles' → logprob: -7.147648334503174
    9. '_cl' → logprob: -7.272648334503174
    10. '   ' → logprob: -9.397647857666016

Token 167: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00027897433028556406
    2. 'es' → logprob: -8.625279426574707
    3. 'é' → logprob: -9.250279426574707
    4. ''' → logprob: -13.750279426574707
    5. '"' → logprob: -14.500279426574707
    6. 'ès' → logprob: -15.125279426574707
    7. '```' → logprob: -15.125279426574707
    8. 's' → logprob: -15.250279426574707
    9. '"""
' → logprob: -15.625279426574707
    10. 'ées' → logprob: -15.875279426574707

Token 168: ':
' (ID: 734)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6589867472648621
    2. ' :' → logprob: -1.4089868068695068
    3. ':' → logprob: -2.533986806869507
    4. '   ' → logprob: -3.158986806869507
    5. 'dans' → logprob: -3.283986806869507
    6. ' ['' → logprob: -3.783986806869507
    7. ' ' → logprob: -4.158986568450928
    8. ' (' → logprob: -5.283986568450928
    9. ' clés' → logprob: -5.533986568450928
    10. ' suivants' → logprob: -5.533986568450928

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747148275375366
    2. ' "' → logprob: -2.649714946746826
    3. ' '' → logprob: -2.899714946746826
    4. '"' → logprob: -3.024714946746826
    5. ''' → logprob: -3.399714946746826
    6. ' ["' → logprob: -4.399714946746826
    7. ' ['' → logprob: -4.399714946746826
    8. '['' → logprob: -6.399714946746826
    9. '["' → logprob: -6.524714946746826
    10. '    ' → logprob: -7.399714946746826

Token 170: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9060894846916199
    2. '"' → logprob: -1.6560895442962646
    3. ' "' → logprob: -2.0310895442962646
    4. ' '' → logprob: -2.0310895442962646
    5. ''' (adapté à ' '') → logprob: -2.7810895442962646
    6. ' keywords' → logprob: -4.0310893058776855
    7. ' ['' → logprob: -4.0310893058776855
    8. ' ["' → logprob: -4.2810893058776855
    9. 'keywords' → logprob: -5.0310893058776855
    10. ' mots' → logprob: -5.4060893058776855

Token 171: 'the' (ID: 3086)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -2.2076151371002197
    2. 'bonjour' → logprob: -2.8326151371002197
    3. 'secret' → logprob: -2.8326151371002197
    4. 'mot' → logprob: -3.3951151371002197
    5. ' secret' → logprob: -3.4576151371002197
    6. ' python' → logprob: -3.4576151371002197
    7. 'le' → logprob: -3.8951151371002197
    8. 'p' → logprob: -4.020114898681641
    9. 'l' → logprob: -4.270114898681641
    10. '"' → logprob: -4.395114898681641

Token 172: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.36257997155189514
    2. ''' → logprob: -1.3625799417495728
    3. ' ',' → logprob: -3.1125800609588623
    4. ' '' → logprob: -6.487579822540283
    5. '','' → logprob: -6.737579822540283
    6. ''re' → logprob: -8.862580299377441
    7. ' ','' → logprob: -8.987580299377441
    8. ' ' → logprob: -9.487580299377441
    9. 'e' → logprob: -9.737580299377441
    10. ' secret' → logprob: -9.862580299377441

Token 173: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6413178443908691
    2. ' '' → logprob: -0.7663178443908691
    3. ''s' → logprob: -6.016317844390869
    4. '"' → logprob: -6.516317844390869
    5. '   ' → logprob: -7.016317844390869
    6. ''t' → logprob: -7.141317844390869
    7. ''ap' → logprob: -8.266317367553711
    8. ''un' → logprob: -8.391317367553711
    9. ' "' → logprob: -8.641317367553711
    10. ''a' → logprob: -8.766317367553711

Token 174: 'this' (ID: 851)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3894979655742645
    2. 'and' → logprob: -1.514497995376587
    3. ' a' → logprob: -3.764497995376587
    4. ' secret' → logprob: -4.139497756958008
    5. ' of' → logprob: -4.389497756958008
    6. 'a' → logprob: -4.889497756958008
    7. 'et' → logprob: -5.514497756958008
    8. ' be' → logprob: -5.639497756958008
    9. ' to' → logprob: -5.639497756958008
    10. ' world' → logprob: -5.639497756958008

Token 175: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.15758386254310608
    2. ''' → logprob: -2.1575839519500732
    3. ' ',' → logprob: -3.5325839519500732
    4. ' '' → logprob: -7.032583713531494
    5. ',' → logprob: -9.782584190368652
    6. ''s' → logprob: -11.657584190368652
    7. '','' → logprob: -13.032584190368652
    8. ' or' → logprob: -13.282584190368652
    9. 'def' → logprob: -13.532584190368652
    10. ' ,' → logprob: -13.532584190368652

Token 176: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05640034005045891
    2. ' ,' → logprob: -2.9314002990722656
    3. '',' → logprob: -6.681400299072266
    4. ''' → logprob: -9.431400299072266
    5. ' or' → logprob: -9.681400299072266
    6. '','' → logprob: -10.306400299072266
    7. '   ' → logprob: -10.931400299072266
    8. ','' → logprob: -10.931400299072266
    9. ' ' → logprob: -11.306400299072266
    10. ',
' → logprob: -11.431400299072266

Token 177: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5762682557106018
    2. ' '' → logprob: -0.9512682557106018
    3. ''t' → logprob: -3.201268196105957
    4. ''s' → logprob: -5.326268196105957
    5. ''un' → logprob: -6.701268196105957
    6. ''user' → logprob: -6.951268196105957
    7. ''en' → logprob: -8.201268196105957
    8. ''e' → logprob: -8.201268196105957
    9. ''n' → logprob: -8.451268196105957
    10. '   ' → logprob: -8.451268196105957

Token 178: 'that' (ID: 14116)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7685279846191406
    2. ' and' → logprob: -1.1435279846191406
    3. 'that' → logprob: -1.8935279846191406
    4. ' is' → logprob: -3.6435279846191406
    5. 'and' → logprob: -3.8935279846191406
    6. ''' → logprob: -5.518527984619141
    7. ' secret' → logprob: -6.393527984619141
    8. ' there' → logprob: -6.393527984619141
    9. ' of' → logprob: -6.518527984619141
    10. 'is' → logprob: -6.518527984619141

Token 179: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005606173072010279
    2. '')' → logprob: -6.255606174468994
    3. '   ' → logprob: -6.505606174468994
    4. ''
' → logprob: -7.255606174468994
    5. '',' → logprob: -7.755606174468994
    6. ')' → logprob: -8.255605697631836
    7. 'def' → logprob: -8.505605697631836
    8. ')'' → logprob: -8.755605697631836
    9. ''''' → logprob: -9.505605697631836
    10. '.' → logprob: -9.505605697631836

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005097018554806709
    2. '
' → logprob: -5.755096912384033
    3. '    
' → logprob: -6.505096912384033
    4. '    ' → logprob: -9.255097389221191
    5. ' 
' → logprob: -9.255097389221191
    6. '   
' → logprob: -9.755097389221191
    7. '<|end|>' → logprob: -10.005097389221191
    8. '  
' → logprob: -10.505097389221191
    9. '```' → logprob: -11.005097389221191
    10. '  ' → logprob: -11.005097389221191

Token 181: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001666611758992076
    2. 'keywords' → logprob: -7.12666654586792
    3. ' keywords' → logprob: -7.50166654586792
    4. '
' → logprob: -8.751667022705078
    5. ' for' → logprob: -10.626667022705078
    6. 'for' → logprob: -11.001667022705078
    7. '    ' → logprob: -11.126667022705078
    8. '_keywords' → logprob: -11.251667022705078
    9. ' Keywords' → logprob: -11.626667022705078
    10. '    
' → logprob: -11.751667022705078

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2769858241081238
    2. ' keywords' → logprob: -1.7769858837127686
    3. 'keywords' → logprob: -2.6519858837127686
    4. ' for' → logprob: -6.7769856452941895
    5. 'for' → logprob: -8.151986122131348
    6. ' return' → logprob: -8.651986122131348
    7. ' key' → logprob: -8.776986122131348
    8. ' keys' → logprob: -9.401986122131348
    9. 'key' → logprob: -9.776986122131348
    10. ' keyword' → logprob: -9.901986122131348

Token 183: ' #' (ID: 1069)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -0.15229132771492004
    2. '   ' → logprob: -2.4022912979125977
    3. 'return' → logprob: -4.402291297912598
    4. 'lower' → logprob: -4.777291297912598
    5. 'for' → logprob: -4.902291297912598
    6. ' keywords' → logprob: -4.902291297912598
    7. 'text' → logprob: -5.027291297912598
    8. 'key' → logprob: -5.652291297912598
    9. 'words' → logprob: -6.027291297912598
    10. 'keyword' → logprob: -7.027291297912598

Token 184: ' Met' (ID: 7227)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.5639840960502625
    2. 'keywords' → logprob: -0.9389840960502625
    3. '   ' → logprob: -4.813983917236328
    4. 'for' → logprob: -4.938983917236328
    5. ' for' → logprob: -4.938983917236328
    6. ' words' → logprob: -5.063983917236328
    7. 'words' → logprob: -5.563983917236328
    8. ' return' → logprob: -5.938983917236328
    9. 'return' → logprob: -6.688983917236328
    10. 'lower' → logprob: -7.313983917236328

Token 185: 'tre' (ID: 4086)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ext' → logprob: -1.001116156578064
    2. '   ' → logprob: -1.626116156578064
    3. 'hod' → logprob: -1.876116156578064
    4. 'text' → logprob: -3.2511162757873535
    5. 'texte' → logprob: -3.3761162757873535
    6. 'ioned' → logprob: -3.5011162757873535
    7. '=text' → logprob: -3.5011162757873535
    8. 'd' → logprob: -4.5011162757873535
    9. ' in' → logprob: -4.5011162757873535
    10. ' en' → logprob: -4.5011162757873535

Token 186: ' en' (ID: 469)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.050213098526001
    2. ' return' → logprob: -1.050213098526001
    3. ' text' → logprob: -2.425213098526001
    4. ' en' → logprob: -3.175213098526001
    5. ' lower' → logprob: -3.300213098526001
    6. '   ' → logprob: -3.675213098526001
    7. ' les' → logprob: -4.050212860107422
    8. 'text' → logprob: -4.300212860107422
    9. ' for' → logprob: -4.675212860107422
    10. 'texte' → logprob: -4.675212860107422

Token 187: ' œuvre' (ID: 65968)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.5280399322509766
    2. 'min' → logprob: -1.2780399322509766
    3. 'minus' → logprob: -2.5280399322509766
    4. 'place' → logprob: -3.4030399322509766
    5. ' lowercase' → logprob: -5.278039932250977
    6. 'texte' → logprob: -5.653039932250977
    7. ' min' → logprob: -6.653039932250977
    8. 'e' → logprob: -6.903039932250977
    9. '```' → logprob: -7.028039932250977
    10. ' lower' → logprob: -7.153039932250977

Token 188: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6964513659477234
    2. ' return' → logprob: -1.0714514255523682
    3. ' keywords' → logprob: -2.071451425552368
    4. ' for' → logprob: -3.821451425552368
    5. 'return' → logprob: -5.321451187133789
    6. 'keywords' → logprob: -5.946451187133789
    7. ' lower' → logprob: -7.071451187133789
    8. 'for' → logprob: -7.196451187133789
    9. ' lowercase' → logprob: -8.071451187133789
    10. ' text' → logprob: -8.196451187133789

Token 189: ' recherche' (ID: 24975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.651883065700531
    2. ' for' → logprob: -2.276883125305176
    3. 'lower' → logprob: -2.401883125305176
    4. 'def' → logprob: -2.526883125305176
    5. ' lowercase' → logprob: -2.901883125305176
    6. 'import' → logprob: -4.151883125305176
    7. '   ' → logprob: -4.151883125305176
    8. ' lower' → logprob: -4.401883125305176
    9. ' logique' → logprob: -4.401883125305176
    10. 'texte' → logprob: -4.526883125305176

Token 190: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020065635442733765
    2. ' for' → logprob: -5.270065784454346
    3. ' keywords' → logprob: -5.395065784454346
    4. ' return' → logprob: -5.770065784454346
    5. 'keywords' → logprob: -6.020065784454346
    6. '    
' → logprob: -6.645065784454346
    7. 'for' → logprob: -7.145065784454346
    8. ' mots' → logprob: -7.520065784454346
    9. 'return' → logprob: -7.645065784454346
    10. '
' → logprob: -7.895065784454346

Token 191: ' utilisant' (ID: 92474)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.4898994266986847
    2. 'min' → logprob: -1.6148993968963623
    3. ' minus' → logprob: -2.2398993968963623
    4. ' lowercase' → logprob: -3.1148993968963623
    5. 'lower' → logprob: -3.8648993968963623
    6. ' min' → logprob: -4.364899635314941
    7. ' lower' → logprob: -7.614899635314941
    8. '```' → logprob: -7.739899635314941
    9. 'python' → logprob: -8.114899635314941
    10. 'texte' → logprob: -8.364899635314941

Token 192: ' des' (ID: 731)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.06695931404829025
    2. 'any' → logprob: -3.5669593811035156
    3. ' text' → logprob: -4.941959381103516
    4. ''' → logprob: -5.066959381103516
    5. ' '' → logprob: -5.066959381103516
    6. 'text' → logprob: -5.816959381103516
    7. ''any' → logprob: -5.941959381103516
    8. '"' → logprob: -6.066959381103516
    9. 'lower' → logprob: -6.941959381103516
    10. ' the' → logprob: -7.316959381103516

Token 193: ' espaces' (ID: 98361)
  Prédit: ' expressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.06776350736618042
    2. 'express' → logprob: -3.567763566970825
    3. 'in' → logprob: -4.567763328552246
    4. ' in' → logprob: -4.692763328552246
    5. ' regex' → logprob: -5.317763328552246
    6. ' conditions' → logprob: -6.317763328552246
    7. 'import' → logprob: -6.692763328552246
    8. ' lowercase' → logprob: -6.692763328552246
    9. ' if' → logprob: -6.942763328552246
    10. ' chaînes' → logprob: -7.067763328552246

Token 194: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17463386058807373
    2. ' ,' → logprob: -3.2996339797973633
    3. ' et' → logprob: -3.4246339797973633
    4. ' '' → logprob: -4.174633979797363
    5. ' ' → logprob: -4.299633979797363
    6. ' =' → logprob: -4.674633979797363
    7. ',' → logprob: -5.299633979797363
    8. '  ' → logprob: -5.424633979797363
    9. 'in' → logprob: -5.424633979797363
    10. ' in' → logprob: -5.549633979797363

Token 195: ' limiter' (ID: 110159)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.7646530270576477
    2. 'dé' → logprob: -1.639652967453003
    3. 'sé' → logprob: -1.764652967453003
    4. ' éviter' → logprob: -3.139652967453003
    5. ' sé' → logprob: -3.264652967453003
    6. 'd' → logprob: -4.139653205871582
    7. ' garantir' → logprob: -4.264653205871582
    8. ' enc' → logprob: -4.764653205871582
    9. 's' → logprob: -4.889653205871582
    10. ' s' → logprob: -5.014653205871582

Token 196: '
' (ID: 198)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21599511802196503
    2. ' la' → logprob: -2.3409950733184814
    3. ' '' → logprob: -3.3409950733184814
    4. ' le' → logprob: -3.4659950733184814
    5. ' the' → logprob: -4.8409953117370605
    6. ' l' → logprob: -4.9659953117370605
    7. ' des' → logprob: -5.4659953117370605
    8. '   ' → logprob: -5.8409953117370605
    9. 'les' → logprob: -5.8409953117370605
    10. '<|end|>' → logprob: -6.5909953117370605

Token 197: '   ' (ID: 271)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.36574745178222656
    2. ' la' → logprob: -2.1157474517822266
    3. ' le' → logprob: -2.3657474517822266
    4. ' les' → logprob: -3.4907474517822266
    5. ' l' → logprob: -3.8657474517822266
    6. ''' → logprob: -4.615747451782227
    7. ' the' → logprob: -4.740747451782227
    8. ' "' → logprob: -4.740747451782227
    9. ' text' → logprob: -5.990747451782227
    10. ' des' → logprob: -6.115747451782227

Token 198: ' #' (ID: 1069)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.35379841923713684
    2. ' les' → logprob: -1.8537983894348145
    3. ' le' → logprob: -3.3537983894348145
    4. ' la' → logprob: -3.4787983894348145
    5. ''' → logprob: -3.7287983894348145
    6. ' l' → logprob: -4.2287983894348145
    7. ' text' → logprob: -4.3537983894348145
    8. ' f' → logprob: -5.3537983894348145
    9. 'le' → logprob: -5.9787983894348145
    10. ' "' → logprob: -5.9787983894348145

Token 199: ' les' (ID: 1341)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.41694045066833496
    2. ' les' → logprob: -2.166940450668335
    3. ' la' → logprob: -2.416940450668335
    4. ' le' → logprob: -2.916940450668335
    5. ' f' → logprob: -4.041940689086914
    6. ''' → logprob: -4.041940689086914
    7. ' text' → logprob: -4.291940689086914
    8. ' l' → logprob: -4.291940689086914
    9. ' the' → logprob: -5.166940689086914
    10. 'f' → logprob: -5.666940689086914

Token 200: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.4671560525894165
    2. 'm' → logprob: -1.4671560525894165
    3. ' les' → logprob: -2.717155933380127
    4. 'mot' → logprob: -3.467155933380127
    5. 'les' → logprob: -4.967155933380127
    6. '   ' → logprob: -4.967155933380127
    7. ' la' → logprob: -4.967155933380127
    8. ' mot' → logprob: -5.342155933380127
    9. 'b' → logprob: -5.717155933380127
    10. ' le' → logprob: -6.092155933380127

Token 201: ' part' (ID: 997)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1537335067987442
    2. ' text' → logprob: -3.278733491897583
    3. ' '' → logprob: -4.403733730316162
    4. ' ,' → logprob: -4.403733730316162
    5. ' ' → logprob: -4.528733730316162
    6. 'text' → logprob: -4.653733730316162
    7. ',' → logprob: -4.778733730316162
    8. '    
' → logprob: -4.903733730316162
    9. 'def' → logprob: -5.653733730316162
    10. ' )' → logprob: -5.903733730316162

Token 202: 'iels' (ID: 25833)
  Prédit: 'ies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.8195168972015381
    2. 'i' → logprob: -1.069516897201538
    3. 'ie' → logprob: -2.194516897201538
    4. 'ic' → logprob: -3.069516897201538
    5. 'e' → logprob: -4.319517135620117
    6. 'es' → logprob: -4.944517135620117
    7. 'iels' → logprob: -5.069517135620117
    8. 'és' → logprob: -5.319517135620117
    9. 'icipants' → logprob: -5.444517135620117
    10. 'aires' → logprob: -5.819517135620117

Token 203: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000344044849043712
    2. '    
' → logprob: -8.500344276428223
    3. 'def' → logprob: -9.500344276428223
    4. 'tokens' → logprob: -11.125344276428223
    5. ' return' → logprob: -11.625344276428223
    6. ' tokens' → logprob: -11.750344276428223
    7. ' mots' → logprob: -11.875344276428223
    8. ' words' → logprob: -12.000344276428223
    9. '
' → logprob: -12.750344276428223
    10. ' def' → logprob: -12.875344276428223

Token 204: ' ou' (ID: 2031)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.26167047023773193
    2. ''' → logprob: -2.8866705894470215
    3. '   ' → logprob: -3.1366705894470215
    4. ' return' → logprob: -3.2616705894470215
    5. ' text' → logprob: -3.7616705894470215
    6. ' or' → logprob: -4.1366705894470215
    7. ' but' → logprob: -5.0116705894470215
    8. 'text' → logprob: -5.0116705894470215
    9. ' "' → logprob: -5.2616705894470215
    10. ' and' → logprob: -5.5116705894470215

Token 205: ' simplement' (ID: 45065)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.031018853187561
    2. ' '' → logprob: -1.531018853187561
    3. ''' → logprob: -2.4060187339782715
    4. ' bien' → logprob: -2.6560187339782715
    5. ' text' → logprob: -3.0310187339782715
    6. '   ' → logprob: -3.4060187339782715
    7. ' return' → logprob: -3.5310187339782715
    8. ' en' → logprob: -3.6560187339782715
    9. ' la' → logprob: -4.2810187339782715
    10. ' in' → logprob: -4.5310187339782715

Token 206: ' une' (ID: 2463)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.930013120174408
    2. ' '' → logprob: -1.4300131797790527
    3. ''' → logprob: -2.0550131797790527
    4. ' return' → logprob: -2.0550131797790527
    5. ' in' → logprob: -3.4300131797790527
    6. 'text' → logprob: -4.055013179779053
    7. 'in' → logprob: -4.555013179779053
    8. 'return' → logprob: -4.680013179779053
    9. 'lower' → logprob: -5.305013179779053
    10. ' if' → logprob: -5.430013179779053

Token 207: ' recherche' (ID: 24975)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.84565669298172
    2. ' for' → logprob: -2.220656633377075
    3. ' any' → logprob: -2.220656633377075
    4. ' simple' → logprob: -2.345656633377075
    5. 'in' → logprob: -2.595656633377075
    6. 'any' → logprob: -3.470656633377075
    7. 'lower' → logprob: -4.095656871795654
    8. ' lowercase' → logprob: -4.220656871795654
    9. ' lower' → logprob: -4.470656871795654
    10. ' des' → logprob: -4.720656871795654

Token 208: ' brute' (ID: 128602)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6150239109992981
    2. ' in' → logprob: -1.2400238513946533
    3. ' simple' → logprob: -2.2400238513946533
    4. ' dans' → logprob: -3.8650238513946533
    5. ' en' → logprob: -4.240024089813232
    6. ' de' → logprob: -4.740024089813232
    7. '   ' → logprob: -5.490024089813232
    8. ' '' → logprob: -5.740024089813232
    9. 'simple' → logprob: -6.115024089813232
    10. 'dans' → logprob: -6.240024089813232

Token 209: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037967502139508724
    2. ' for' → logprob: -6.128796577453613
    3. ' return' → logprob: -7.378796577453613
    4. 'return' → logprob: -7.628796577453613
    5. 'for' → logprob: -8.503796577453613
    6. ' if' → logprob: -9.378796577453613
    7. '    ' → logprob: -9.753796577453613
    8. 'def' → logprob: -10.003796577453613
    9. '    
' → logprob: -10.628796577453613
    10. '  ' → logprob: -11.003796577453613

Token 210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003624427132308483
    2. 'keywords' → logprob: -6.128624439239502
    3. ' keywords' → logprob: -7.753624439239502
    4. 'return' → logprob: -8.253623962402344
    5. '    
' → logprob: -8.378623962402344
    6. ' for' → logprob: -9.003623962402344
    7. ' return' → logprob: -9.253623962402344
    8. 'for' → logprob: -9.378623962402344
    9. '
' → logprob: -10.128623962402344
    10. 'possible' → logprob: -10.253623962402344

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004210890270769596
    2. 'keywords' → logprob: -5.754210948944092
    3. ' keywords' → logprob: -7.129210948944092
    4. ' return' → logprob: -9.629210472106934
    5. 'return' → logprob: -9.629210472106934
    6. '    
' → logprob: -10.629210472106934
    7. ' for' → logprob: -10.754210472106934
    8. 'for' → logprob: -11.004210472106934
    9. 'keyword' → logprob: -12.129210472106934
    10. 'possible' → logprob: -12.504210472106934

Token 212: ' #' (ID: 1069)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -0.8024572730064392
    2. '   ' → logprob: -0.9274572730064392
    3. ' keywords' → logprob: -2.302457332611084
    4. 'return' → logprob: -3.802457332611084
    5. ' return' → logprob: -4.302457332611084
    6. 'for' → logprob: -4.677457332611084
    7. ' for' → logprob: -5.677457332611084
    8. 'lower' → logprob: -5.802457332611084
    9. 'keyword' → logprob: -6.677457332611084
    10. 'key' → logprob: -7.302457332611084

Token 213: ' car' (ID: 1669)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.8599837422370911
    2. '   ' → logprob: -1.2349836826324463
    3. 'keywords' → logprob: -1.7349836826324463
    4. ' return' → logprob: -2.6099836826324463
    5. 'return' → logprob: -4.359983921051025
    6. ' for' → logprob: -4.484983921051025
    7. 'for' → logprob: -5.234983921051025
    8. ' words' → logprob: -6.234983921051025
    9. ' lower' → logprob: -6.859983921051025
    10. 'lower' → logprob: -7.109983921051025

Token 214: ' les' (ID: 1341)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3332008123397827
    2. ''' → logprob: -1.7082008123397827
    3. ' return' → logprob: -3.0832009315490723
    4. ' text' → logprob: -3.9582009315490723
    5. ' for' → logprob: -5.083200931549072
    6. 'return' → logprob: -5.208200931549072
    7. ' any' → logprob: -5.208200931549072
    8. ''s' → logprob: -5.583200931549072
    9. 'text' → logprob: -5.583200931549072
    10. ''t' → logprob: -5.833200931549072

Token 215: ' mots' (ID: 38338)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.9255196452140808
    2. ' '' → logprob: -1.5505197048187256
    3. ''' → logprob: -1.6755197048187256
    4. ' keyword' → logprob: -2.6755197048187256
    5. 'keywords' → logprob: -2.8005197048187256
    6. 'keyword' → logprob: -4.0505194664001465
    7. '   ' → logprob: -4.4255194664001465
    8. ' "' → logprob: -4.6755194664001465
    9. '"' → logprob: -5.0505194664001465
    10. ' return' → logprob: -5.4255194664001465

Token 216: ' sont' (ID: 5242)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4174538254737854
    2. ' =' → logprob: -1.2924537658691406
    3. 'in' → logprob: -3.1674537658691406
    4. '=' → logprob: -4.292453765869141
    5. '   ' → logprob: -4.917453765869141
    6. ' are' → logprob: -6.042453765869141
    7. ' "' → logprob: -9.04245376586914
    8. ' '' → logprob: -9.16745376586914
    9. 's' → logprob: -9.41745376586914
    10. '  ' → logprob: -9.66745376586914

Token 217: ' courts' (ID: 33374)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.28465065360069275
    2. ''' → logprob: -1.7846506834030151
    3. ' des' → logprob: -3.5346505641937256
    4. ' présents' → logprob: -4.784650802612305
    5. ' "' → logprob: -5.034650802612305
    6. ' ['' → logprob: -5.159650802612305
    7. ' in' → logprob: -5.409650802612305
    8. ' not' → logprob: -5.534650802612305
    9. '"' → logprob: -5.784650802612305
    10. '   ' → logprob: -5.909650802612305

Token 218: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012734467163681984
    2. ' for' → logprob: -7.2512736320495605
    3. ' return' → logprob: -9.001273155212402
    4. 'keywords' → logprob: -9.001273155212402
    5. 'return' → logprob: -9.251273155212402
    6. 'for' → logprob: -9.501273155212402
    7. ' keywords' → logprob: -9.626273155212402
    8. '    
' → logprob: -10.251273155212402
    9. ',' → logprob: -11.251273155212402
    10. 'def' → logprob: -12.126273155212402

Token 219: ' distinct' (ID: 16913)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3258004188537598
    2. ' '' → logprob: -1.8258004188537598
    3. ' les' → logprob: -2.4508004188537598
    4. ' text' → logprob: -2.7008004188537598
    5. ' in' → logprob: -2.8258004188537598
    6. ' len' → logprob: -2.9508004188537598
    7. 'len' → logprob: -3.3258004188537598
    8. '   ' → logprob: -3.3258004188537598
    9. 'text' → logprob: -3.5758004188537598
    10. ' ('' → logprob: -3.9508004188537598

Token 220: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016178115038201213
    2. '
' → logprob: -6.751617908477783
    3. ' for' → logprob: -8.626617431640625
    4. '    
' → logprob: -9.376617431640625
    5. 'def' → logprob: -9.876617431640625
    6. '  ' → logprob: -10.376617431640625
    7. 'for' → logprob: -10.751617431640625
    8. ',' → logprob: -11.251617431640625
    9. '    ' → logprob: -11.501617431640625
    10. '.' → logprob: -11.751617431640625

Token 221: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006422612932510674
    2. '    
' → logprob: -8.250641822814941
    3. ' for' → logprob: -8.875641822814941
    4. 'for' → logprob: -9.875641822814941
    5. 'return' → logprob: -10.125641822814941
    6. 'keywords' → logprob: -10.125641822814941
    7. '
' → logprob: -10.375641822814941
    8. ',' → logprob: -11.125641822814941
    9. 'text' → logprob: -11.250641822814941
    10. 'def' → logprob: -11.500641822814941

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33499523997306824
    2. ' keywords' → logprob: -1.7099952697753906
    3. 'keywords' → logprob: -2.3349952697753906
    4. ' return' → logprob: -5.834995269775391
    5. ' for' → logprob: -6.334995269775391
    6. 'return' → logprob: -7.334995269775391
    7. 'for' → logprob: -7.709995269775391
    8. 'lower' → logprob: -8.70999526977539
    9. ' keys' → logprob: -8.70999526977539
    10. ' lower' → logprob: -8.83499526977539

Token 223: ' keywords' (ID: 29778)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keywords' (adapté à ' keywords') → logprob: -0.7243661284446716
    2. '   ' → logprob: -0.9743661284446716
    3. 'return' → logprob: -2.8493661880493164
    4. 'for' → logprob: -3.5993661880493164
    5. ' keywords' → logprob: -3.5993661880493164
    6. ' return' → logprob: -4.599366188049316
    7. 'lower' → logprob: -4.724366188049316
    8. ' for' → logprob: -6.224366188049316
    9. 'text' → logprob: -6.474366188049316
    10. 'keyword' → logprob: -7.224366188049316

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756559506058693
    2. '=' → logprob: -4.634756565093994
    3. '=['' → logprob: -15.759756088256836
    4. '_' → logprob: -15.759756088256836
    5. ' ' → logprob: -16.009756088256836
    6. 's' → logprob: -16.259756088256836
    7. ' =
' → logprob: -16.759756088256836
    8. ' =[' → logprob: -17.384756088256836
    9. '=["' → logprob: -18.509756088256836
    10. ')' → logprob: -18.634756088256836

Token 225: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.5888127684593201
    2. '['' → logprob: -0.8388127684593201
    3. '["' → logprob: -4.838812828063965
    4. ' ["' → logprob: -5.338812828063965
    5. ' {'' → logprob: -9.963812828063965
    6. '{'' → logprob: -11.588812828063965
    7. '[' → logprob: -12.088812828063965
    8. ' [' → logprob: -12.213812828063965
    9. '{"' → logprob: -12.588812828063965
    10. ' {"' → logprob: -14.213812828063965

Token 226: 'the' (ID: 3086)
  Prédit: 'the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1385759711265564
    2. ''t' → logprob: -2.138576030731201
    3. '"' → logprob: -4.513576030731201
    4. ''' → logprob: -7.513576030731201
    5. ' the' → logprob: -9.763575553894043
    6. 't' → logprob: -12.013575553894043
    7. '   ' → logprob: -12.763575553894043
    8. ' '' → logprob: -12.888575553894043
    9. 'this' → logprob: -13.013575553894043
    10. 'that' → logprob: -13.388575553894043

Token 227: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00533443596214056
    2. ' ',' → logprob: -5.255334377288818
    3. ',' → logprob: -9.380334854125977
    4. ''' → logprob: -11.630334854125977
    5. '','' → logprob: -12.255334854125977
    6. 'the' → logprob: -13.630334854125977
    7. '",' → logprob: -14.505334854125977
    8. 'def' → logprob: -15.505334854125977
    9. '',
' → logprob: -16.130334854125977
    10. 'this' → logprob: -16.255334854125977

Token 228: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12980103492736816
    2. ' '' → logprob: -2.129801034927368
    3. ''t' → logprob: -5.879800796508789
    4. '"' → logprob: -10.379800796508789
    5. ''s' → logprob: -11.004800796508789
    6. ' this' → logprob: -11.504800796508789
    7. 'this' → logprob: -13.129800796508789
    8. ' ' → logprob: -13.254800796508789
    9. ' ' → logprob: -13.379800796508789
    10. ' the' → logprob: -13.879800796508789

Token 229: 'this' (ID: 851)
  Prédit: 'this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.0013379817828536034
    2. ' this' → logprob: -6.626338005065918
    3. ''' → logprob: -11.501338005065918
    4. 'that' → logprob: -14.001338005065918
    5. ''t' → logprob: -14.876338005065918
    6. ' ' → logprob: -15.126338005065918
    7. '   ' → logprob: -16.1263370513916
    8. ' '' → logprob: -16.5013370513916
    9. '"' → logprob: -16.8763370513916
    10. 'the' → logprob: -17.1263370513916

Token 230: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00024037064576987177
    2. ',' → logprob: -8.375240325927734
    3. ''' → logprob: -11.750240325927734
    4. '','' → logprob: -14.250240325927734
    5. '']' → logprob: -14.500240325927734
    6. ' ',' → logprob: -15.125240325927734
    7. '",' → logprob: -15.500240325927734
    8. ''s' → logprob: -16.500240325927734
    9. '',
' → logprob: -16.875240325927734
    10. ' ,' → logprob: -17.750240325927734

Token 231: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20227445662021637
    2. ' '' → logprob: -1.7022744417190552
    3. ''t' → logprob: -7.077274322509766
    4. ' that' → logprob: -12.952274322509766
    5. 'that' → logprob: -12.952274322509766
    6. ''at' → logprob: -12.952274322509766
    7. ''s' → logprob: -13.327274322509766
    8. '"' → logprob: -13.702274322509766
    9. ''d' → logprob: -13.952274322509766
    10. '   ' → logprob: -14.327274322509766

Token 232: 'that' (ID: 14116)
  Prédit: 'that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.007160038687288761
    2. ''' → logprob: -5.257160186767578
    3. ' that' → logprob: -6.257160186767578
    4. ' '' → logprob: -12.632160186767578
    5. ''t' → logprob: -12.632160186767578
    6. 'That' → logprob: -15.382160186767578
    7. '	that' → logprob: -15.382160186767578
    8. ''s' → logprob: -15.507160186767578
    9. ' ' → logprob: -15.757160186767578
    10. '"' → logprob: -16.382160186767578

Token 233: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0062129320576786995
    2. ']' → logprob: -5.1312127113342285
    3. '']
' → logprob: -8.256213188171387
    4. ''' → logprob: -11.381213188171387
    5. '"]' → logprob: -12.881213188171387
    6. '']
' → logprob: -13.006213188171387
    7. '   ' → logprob: -13.131213188171387
    8. '']

' → logprob: -13.381213188171387
    9. ' ']' → logprob: -13.506213188171387
    10. ' ]' → logprob: -13.631213188171387

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06292577087879181
    2. ' for' → logprob: -3.0629258155822754
    3. 'for' → logprob: -4.937925815582275
    4. '
' → logprob: -5.312925815582275
    5. '    
' → logprob: -6.187925815582275
    6. ' 
' → logprob: -10.562925338745117
    7. '   
' → logprob: -11.187925338745117
    8. '  
' → logprob: -11.562925338745117
    9. 'return' → logprob: -11.812925338745117
    10. ' return' → logprob: -11.937925338745117

Token 235: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4571469724178314
    2. ' for' → logprob: -1.2071470022201538
    3. '   ' → logprob: -2.7071468830108643
    4. 'return' → logprob: -7.082147121429443
    5. ' return' → logprob: -8.582146644592285
    6. '
' → logprob: -9.582146644592285
    7. '    
' → logprob: -10.207146644592285
    8. '	for' → logprob: -14.082146644592285
    9. ' 
' → logprob: -14.582146644592285
    10. '  ' → logprob: -14.707146644592285

Token 236: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5089824199676514
    2. ' for' → logprob: -1.0089824199676514
    3. '   ' → logprob: -4.0089826583862305
    4. 'return' → logprob: -4.3839826583862305
    5. ' return' → logprob: -5.7589826583862305
    6. 'text' → logprob: -8.13398265838623
    7. '
' → logprob: -9.38398265838623
    8. 'lower' → logprob: -9.38398265838623
    9. ' text' → logprob: -10.25898265838623
    10. ' lower' → logprob: -11.50898265838623

Token 237: ' peut' (ID: 9216)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31170791387557983
    2. 'for' → logprob: -1.4367079734802246
    3. ' return' → logprob: -3.9367079734802246
    4. '   ' → logprob: -4.686707973480225
    5. 'return' → logprob: -6.686707973480225
    6. 'def' → logprob: -10.436707496643066
    7. ' lower' → logprob: -11.061707496643066
    8. ' lowercase' → logprob: -11.061707496643066
    9. ' in' → logprob: -11.436707496643066
    10. 'lower' → logprob: -11.436707496643066

Token 238: ' rechercher' (ID: 173335)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4465477466583252
    2. ' return' → logprob: -1.0715477466583252
    3. 'for' → logprob: -4.321547508239746
    4. 'return' → logprob: -5.571547508239746
    5. ' any' → logprob: -7.946547508239746
    6. '   ' → logprob: -8.696547508239746
    7. 'any' → logprob: -10.821547508239746
    8. ' use' → logprob: -11.071547508239746
    9. ' in' → logprob: -11.446547508239746
    10. '    ' → logprob: -12.071547508239746

Token 239: ' parmi' (ID: 51713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7631979584693909
    2. ' any' → logprob: -0.7631979584693909
    3. 'for' → logprob: -2.888197898864746
    4. 'any' → logprob: -5.013197898864746
    5. ' return' → logprob: -5.763197898864746
    6. ' if' → logprob: -6.638197898864746
    7. 'return' → logprob: -7.763197898864746
    8. '   ' → logprob: -8.388197898864746
    9. 'if' → logprob: -9.138197898864746
    10. ' text' → logprob: -10.513197898864746

Token 240: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9428055286407471
    2. 'for' → logprob: -1.692805528640747
    3. ' text' → logprob: -1.817805528640747
    4. ' any' → logprob: -1.817805528640747
    5. ' keyword' → logprob: -3.192805528640747
    6. 'text' → logprob: -3.567805528640747
    7. ' word' → logprob: -4.067805290222168
    8. 'keyword' → logprob: -5.317805290222168
    9. ' key' → logprob: -5.692805290222168
    10. 'any' → logprob: -6.192805290222168

Token 241: ' mots' (ID: 38338)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -1.2466665506362915
    2. ' for' → logprob: -1.9966665506362915
    3. 'for' → logprob: -1.9966665506362915
    4. 'keyword' → logprob: -2.121666431427002
    5. ' keywords' → logprob: -2.496666431427002
    6. 'mot' → logprob: -2.746666431427002
    7. ' keyword' → logprob: -3.121666431427002
    8. ' mots' → logprob: -3.371666431427002
    9. ' mot' → logprob: -3.621666431427002
    10. 'm' → logprob: -3.746666431427002

Token 242: ' déc' (ID: 8498)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6082162261009216
    2. '   ' → logprob: -1.1082162857055664
    3. 'for' → logprob: -2.4832162857055664
    4. ' in' → logprob: -3.4832162857055664
    5. 'in' → logprob: -5.358216285705566
    6. ' =' → logprob: -5.858216285705566
    7. ' dans' → logprob: -6.733216285705566
    8. ' de' → logprob: -7.608216285705566
    9. ' en' → logprob: -7.733216285705566
    10. 'def' → logprob: -8.233216285705566

Token 243: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.5244225263595581
    2. 'ont' → logprob: -1.774422526359558
    3. 'rypt' → logprob: -2.1494226455688477
    4. 'od' → logprob: -3.0244226455688477
    5. 'onn' → logprob: -4.024422645568848
    6. 'oded' → logprob: -4.149422645568848
    7. 'omp' → logprob: -4.399422645568848
    8. 'om' → logprob: -4.774422645568848
    9. 'ou' → logprob: -4.899422645568848
    10. 'onte' → logprob: -6.024422645568848

Token 244: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0058933645486831665
    2. 'é' → logprob: -5.505893230438232
    3. 't' → logprob: -6.880893230438232
    4. 'er' → logprob: -8.50589370727539
    5. 'es' → logprob: -8.50589370727539
    6. 'rés' → logprob: -9.13089370727539
    7. 'érés' → logprob: -9.75589370727539
    8. 'lés' → logprob: -9.88089370727539
    9. 's' → logprob: -10.00589370727539
    10. '   ' → logprob: -10.63089370727539

Token 245: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0218596663326025
    2. ' for' → logprob: -4.396859645843506
    3. ' in' → logprob: -5.771859645843506
    4. ' dans' → logprob: -6.646859645843506
    5. ' en' → logprob: -7.146859645843506
    6. ' words' → logprob: -7.146859645843506
    7. 'in' → logprob: -7.271859645843506
    8. ' mots' → logprob: -7.646859645843506
    9. 'for' → logprob: -7.896859645843506
    10. ',' → logprob: -8.021860122680664

Token 246: 'split' (ID: 13627)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.21476854383945465
    2. 'text' → logprob: -2.214768648147583
    3. '   ' → logprob: -3.339768648147583
    4. ' words' → logprob: -3.714768648147583
    5. ' for' → logprob: -5.089768409729004
    6. ' '' → logprob: -5.339768409729004
    7. ' word' → logprob: -5.339768409729004
    8. ')' → logprob: -5.964768409729004
    9. 'for' → logprob: -6.464768409729004
    10. ''' → logprob: -6.589768409729004

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8210536241531372
    2. '())' → logprob: -0.9460536241531372
    3. '()' → logprob: -2.1960535049438477
    4. '('' → logprob: -3.8210535049438477
    5. '()
' → logprob: -4.196053504943848
    6. '())
' → logprob: -4.821053504943848
    7. ' )' → logprob: -5.446053504943848
    8. ')
' → logprob: -5.696053504943848
    9. '   ' → logprob: -5.821053504943848
    10. 'text' → logprob: -5.821053504943848

Token 248: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00536692189052701
    2. ' for' → logprob: -5.380366802215576
    3. '    
' → logprob: -7.880366802215576
    4. ' words' → logprob: -9.505367279052734
    5. ' in' → logprob: -9.880367279052734
    6. ':' → logprob: -10.130367279052734
    7. '
' → logprob: -10.380367279052734
    8. 'for' → logprob: -10.630367279052734
    9. ' or' → logprob: -11.130367279052734
    10. ':
' → logprob: -11.255367279052734

Token 249: ' string' (ID: 1621)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8778729438781738
    2. ' in' → logprob: -1.1278729438781738
    3. 'in' → logprob: -2.127872943878174
    4. 'for' → logprob: -2.877872943878174
    5. ' en' → logprob: -4.127872943878174
    6. '   ' → logprob: -4.252872943878174
    7. ' just' → logprob: -4.752872943878174
    8. ' '' → logprob: -4.877872943878174
    9. ' simply' → logprob: -5.002872943878174
    10. ' simplement' → logprob: -5.127872943878174

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8108590841293335
    2. ' in' → logprob: -1.3108590841293335
    3. ' =' → logprob: -1.5608590841293335
    4. 'in' → logprob: -4.060859203338623
    5. '=' → logprob: -4.310859203338623
    6. ' for' → logprob: -4.310859203338623
    7. 's' → logprob: -4.935859203338623
    8. ')' → logprob: -5.435859203338623
    9. '    ' → logprob: -5.935859203338623
    10. ' s' → logprob: -6.560859203338623

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06429819762706757
    2. ' for' → logprob: -3.439298152923584
    3. ' in' → logprob: -4.314298152923584
    4. ' =' → logprob: -4.939298152923584
    5. 'in' → logprob: -5.439298152923584
    6. 'for' → logprob: -5.939298152923584
    7. 'text' → logprob: -8.314298629760742
    8. '=' → logprob: -8.314298629760742
    9. ' ' → logprob: -8.439298629760742
    10. ' en' → logprob: -8.564298629760742

Token 252: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15924523770809174
    2. 'for' → logprob: -2.409245252609253
    3. '   ' → logprob: -2.909245252609253
    4. ' return' → logprob: -7.159245014190674
    5. 'text' → logprob: -7.534245014190674
    6. ' text' → logprob: -7.659245014190674
    7. 'return' → logprob: -7.784245014190674
    8. ' lower' → logprob: -8.159245491027832
    9. 'lower' → logprob: -8.284245491027832
    10. ' lowercase' → logprob: -10.784245491027832

Token 253: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6738981008529663
    2. 'for' → logprob: -0.7988981008529663
    3. '   ' → logprob: -4.423898220062256
    4. 'text' → logprob: -4.798898220062256
    5. ' text' → logprob: -4.923898220062256
    6. 'return' → logprob: -5.048898220062256
    7. ' return' → logprob: -5.298898220062256
    8. 'lower' → logprob: -6.798898220062256
    9. ' lower' → logprob: -7.923898220062256
    10. ' lowercase' → logprob: -10.673897743225098

Token 254: ' être' (ID: 9104)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -1.1545888185501099
    2. ' kw' → logprob: -1.2795888185501099
    3. ' keyword' → logprob: -1.5295888185501099
    4. 'word' → logprob: -2.7795886993408203
    5. ' key' → logprob: -2.9045886993408203
    6. 'kw' → logprob: -3.4045886993408203
    7. 'keyword' → logprob: -4.15458869934082
    8. ' any' → logprob: -4.27958869934082
    9. ' k' → logprob: -5.52958869934082
    10. 'key' → logprob: -5.65458869934082

Token 255: ' sûr' (ID: 46415)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.36983802914619446
    2. ' word' → logprob: -2.744837999343872
    3. ' keyword' → logprob: -2.744837999343872
    4. 'any' → logprob: -3.244837999343872
    5. ' k' → logprob: -3.369837999343872
    6. 'k' → logprob: -3.744837999343872
    7. ' ch' → logprob: -4.119838237762451
    8. ' token' → logprob: -4.744838237762451
    9. ' key' → logprob: -4.744838237762451
    10. ' kw' → logprob: -4.869838237762451

Token 256: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27594587206840515
    2. ' for' → logprob: -1.5259459018707275
    3. ' in' → logprob: -4.525945663452148
    4. '
' → logprob: -5.525945663452148
    5. ' if' → logprob: -6.400945663452148
    6. '    
' → logprob: -6.400945663452148
    7. 'for' → logprob: -6.650945663452148
    8. 'in' → logprob: -6.900945663452148
    9. ' return' → logprob: -7.025945663452148
    10. ' de' → logprob: -7.275945663452148

Token 257: ''év' (ID: 114425)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8385884165763855
    2. ' '' → logprob: -2.3385884761810303
    3. ''un' → logprob: -2.8385884761810303
    4. ''effect' → logprob: -2.9635884761810303
    5. ' any' → logprob: -3.0885884761810303
    6. ' keyword' → logprob: -3.3385884761810303
    7. ''avoir' → logprob: -3.4635884761810303
    8. ''une' → logprob: -3.7135884761810303
    9. 'e' → logprob: -3.8385884761810303
    10. ' word' → logprob: -4.088588237762451

Token 258: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.043180398643016815
    2. 'al' → logprob: -3.918180465698242
    3. 'er' → logprob: -5.043180465698242
    4. 'ider' → logprob: -5.418180465698242
    5. 'érer' → logprob: -5.793180465698242
    6. 'ident' → logprob: -6.543180465698242
    7. 'id' → logprob: -6.668180465698242
    8. 'ér' → logprob: -7.793180465698242
    9. 'ité' → logprob: -8.043180465698242
    10. 'riter' → logprob: -8.043180465698242

Token 259: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7443521618843079
    2. ' des' → logprob: -1.119352102279663
    3. ' '' → logprob: -2.369352102279663
    4. ' la' → logprob: -3.369352102279663
    5. ' une' → logprob: -3.744352102279663
    6. ' le' → logprob: -4.494352340698242
    7. ''' → logprob: -5.119352340698242
    8. ' un' → logprob: -5.244352340698242
    9. ' any' → logprob: -5.494352340698242
    10. ' keywords' → logprob: -5.619352340698242

Token 260: ' sous' (ID: 14487)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.6405887007713318
    2. ' partial' → logprob: -2.5155887603759766
    3. ' matches' → logprob: -2.6405887603759766
    4. ' False' → logprob: -2.7655887603759766
    5. ' faux' → logprob: -3.1405887603759766
    6. ' false' → logprob: -3.1405887603759766
    7. ' substr' → logprob: -3.1405887603759766
    8. ' substring' → logprob: -3.5155887603759766
    9. ' occurrences' → logprob: -4.015588760375977
    10. ' erreurs' → logprob: -4.390588760375977

Token 261: '-cha' (ID: 163177)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.1278499960899353
    2. 'string' → logprob: -3.12785005569458
    3. ' chaînes' → logprob: -3.50285005569458
    4. 'm' → logprob: -3.87785005569458
    5. 'chain' → logprob: -5.00285005569458
    6. 'chains' → logprob: -5.62785005569458
    7. 'str' → logprob: -5.75285005569458
    8. 'tring' → logprob: -5.87785005569458
    9. '-m' → logprob: -6.00285005569458
    10. ' strings' → logprob: -6.50285005569458

Token 262: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.03861134126782417
    2. 'r' → logprob: -3.66361141204834
    3. 'î' → logprob: -5.03861141204834
    4. 'îne' → logprob: -5.53861141204834
    5. 'în' → logprob: -7.03861141204834
    6. 'ines' → logprob: -8.28861141204834
    7. 'ins' → logprob: -9.03861141204834
    8. 'in' → logprob: -9.53861141204834
    9. 'nes' → logprob: -9.66361141204834
    10. 'n' → logprob: -9.78861141204834

Token 263: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006001909729093313
    2. ':' → logprob: -6.006001949310303
    3. ' in' → logprob: -6.631001949310303
    4. ',' → logprob: -7.506001949310303
    5. ' for' → logprob: -7.881001949310303
    6. '.' → logprob: -8.131001472473145
    7. ' if' → logprob: -8.631001472473145
    8. 'in' → logprob: -8.881001472473145
    9. '    
' → logprob: -9.131001472473145
    10. ':
' → logprob: -9.631001472473145

Token 264: ' voul' (ID: 68300)
  Prédit: ' désir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' désir' → logprob: -0.8023598790168762
    2. ' souhait' → logprob: -0.9273598790168762
    3. ' voul' → logprob: -2.6773598194122314
    4. 'int' → logprob: -3.5523598194122314
    5. 'vou' → logprob: -4.8023600578308105
    6. 'exact' → logprob: -5.3023600578308105
    7. 'vol' → logprob: -5.3023600578308105
    8. 'm' → logprob: -5.4273600578308105
    9. 'mot' → logprob: -5.6773600578308105
    10. ' intention' → logprob: -6.0523600578308105

Token 265: 'ues' (ID: 1406)
  Prédit: 'ites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ites' → logprob: -0.4966912269592285
    2. 'ign' → logprob: -1.2466912269592285
    3. 'aites' → logprob: -3.9966912269592285
    4. 'intes' → logprob: -4.4966912269592285
    5. 'ignes' → logprob: -4.4966912269592285
    6. 'illées' → logprob: -4.6216912269592285
    7. 'isées' → logprob: -4.6216912269592285
    8. 'érées' → logprob: -5.2466912269592285
    9. 'ol' → logprob: -5.3716912269592285
    10. 'îtes' → logprob: -5.4966912269592285

Token 266: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031489618122577667
    2. ' for' → logprob: -6.003149032592773
    3. 'for' → logprob: -8.128149032592773
    4. '    
' → logprob: -8.253149032592773
    5. '
' → logprob: -10.128149032592773
    6. ',' → logprob: -10.878149032592773
    7. 'tokens' → logprob: -11.253149032592773
    8. '   
' → logprob: -11.753149032592773
    9. 'text' → logprob: -12.003149032592773
    10. '  ' → logprob: -12.128149032592773

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01566653698682785
    2. ' for' → logprob: -4.390666484832764
    3. 'for' → logprob: -6.265666484832764
    4. '    
' → logprob: -7.265666484832764
    5. 'tokens' → logprob: -9.015666961669922
    6. ' words' → logprob: -9.390666961669922
    7. ' return' → logprob: -9.515666961669922
    8. '
' → logprob: -9.640666961669922
    9. 'def' → logprob: -10.140666961669922
    10. 'words' → logprob: -10.140666961669922

Token 268: ' words' (ID: 6391)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0431151390075684
    2. ' words' → logprob: -1.1681151390075684
    3. '   ' → logprob: -1.5431151390075684
    4. 'for' → logprob: -2.4181151390075684
    5. 'words' (adapté à ' words') → logprob: -3.7931151390075684
    6. ' text' → logprob: -5.543115139007568
    7. ' return' → logprob: -5.918115139007568
    8. 'text' → logprob: -6.418115139007568
    9. ' lower' → logprob: -6.793115139007568
    10. 'return' → logprob: -7.918115139007568

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.273245811462402
    4. '=text' → logprob: -16.02324676513672
    5. ' ' → logprob: -16.39824676513672
    6. ' in' → logprob: -17.64824676513672
    7. ')' → logprob: -18.39824676513672
    8. 's' → logprob: -18.39824676513672
    9. ' =[' → logprob: -18.52324676513672
    10. '＝' → logprob: -18.64824676513672

Token 270: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.10020699352025986
    2. 'text' → logprob: -2.3502070903778076
    3. '{text' → logprob: -16.22520637512207
    4. '   ' → logprob: -16.72520637512207
    5. '	text' → logprob: -16.85020637512207
    6. '.text' → logprob: -17.85020637512207
    7. '[text' → logprob: -17.97520637512207
    8. '=text' → logprob: -18.22520637512207
    9. 'Text' → logprob: -18.60020637512207
    10. '(text' → logprob: -18.60020637512207

Token 271: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.10741976648569107
    2. '.' → logprob: -2.357419729232788
    3. ' .' → logprob: -4.982419967651367
    4. '.lower' → logprob: -8.857419967651367
    5. '.strip' → logprob: -9.357419967651367
    6. '().' → logprob: -9.857419967651367
    7. 'split' → logprob: -10.732419967651367
    8. ' split' → logprob: -11.732419967651367
    9. '=' → logprob: -11.732419967651367
    10. ' =' → logprob: -11.857419967651367

Token 272: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011995165841653943
    2. '('' → logprob: -6.751199722290039
    3. '(' → logprob: -10.751199722290039
    4. '())' → logprob: -12.626199722290039
    5. ' ()' → logprob: -13.251199722290039
    6. '("' → logprob: -13.876199722290039
    7. '()"' → logprob: -14.876199722290039
    8. '()]' → logprob: -15.251199722290039
    9. '()
' → logprob: -15.376199722290039
    10. '(None' → logprob: -15.626199722290039

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13955014944076538
    2. ' for' → logprob: -2.51455020904541
    3. 'for' → logprob: -3.01455020904541
    4. '    
' → logprob: -8.38955020904541
    5. '
' → logprob: -11.26455020904541
    6. '	for' → logprob: -11.38955020904541
    7. '<|end|>' → logprob: -11.51455020904541
    8. ' ' → logprob: -12.13955020904541
    9. '  
' → logprob: -12.38955020904541
    10. '  ' → logprob: -12.38955020904541

Token 274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4979468584060669
    2. '   ' → logprob: -0.9979468584060669
    3. ' for' → logprob: -3.7479467391967773
    4. 'return' → logprob: -11.122946739196777
    5. '    
' → logprob: -12.372946739196777
    6. '	for' → logprob: -13.372946739196777
    7. ' return' → logprob: -15.622946739196777
    8. '   ' → logprob: -15.747946739196777
    9. '
' → logprob: -16.122947692871094
    10. '```' → logprob: -16.747947692871094

Token 275: ' kw' (ID: 4364)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.25199228525161743
    2. ' word' → logprob: -1.5019922256469727
    3. 'w' → logprob: -10.251992225646973
    4. ' w' → logprob: -10.876992225646973
    5. 'keyword' → logprob: -12.251992225646973
    6. 'kw' → logprob: -13.626992225646973
    7. '	word' → logprob: -13.626992225646973
    8. 'mot' → logprob: -14.251992225646973
    9. ' keyword' → logprob: -14.626992225646973
    10. ' kw' → logprob: -15.126992225646973

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00027587503427639604
    2. 'in' → logprob: -8.250275611877441
    3. ' ' → logprob: -11.500275611877441
    4. '   ' → logprob: -13.500275611877441
    5. '  ' → logprob: -14.375275611877441
    6. ',' → logprob: -14.750275611877441
    7. '    ' → logprob: -14.750275611877441
    8. 'ords' → logprob: -15.000275611877441
    9. 'd' → logprob: -15.125275611877441
    10. 'ord' → logprob: -16.000276565551758

Token 277: ' keywords' (ID: 29778)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -0.20141665637493134
    2. ' keywords' → logprob: -1.7014166116714478
    3. 'words' → logprob: -14.076416969299316
    4. '   ' → logprob: -14.076416969299316
    5. 'key' → logprob: -14.326416969299316
    6. 'keys' → logprob: -14.576416969299316
    7. ' ' → logprob: -15.451416969299316
    8. 'kwargs' → logprob: -16.201416015625
    9. 'keyword' → logprob: -16.201416015625
    10. 'Keywords' → logprob: -16.826416015625

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015717566711828113
    2. ':
' → logprob: -6.8765716552734375
    3. ' :' → logprob: -8.251571655273438
    4. '   ' → logprob: -9.251571655273438
    5. '       ' → logprob: -9.376571655273438
    6. '):' → logprob: -9.876571655273438
    7. ' in' → logprob: -10.751571655273438
    8. ' if' → logprob: -12.251571655273438
    9. '<|end|>' → logprob: -12.251571655273438
    10. ',' → logprob: -12.501571655273438

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09443238377571106
    2. '<|end|>' → logprob: -2.8444323539733887
    3. ':' → logprob: -3.5944323539733887
    4. '<|end|>' → logprob: -6.469432353973389
    5. ' if' → logprob: -7.344432353973389
    6. '
' → logprob: -7.594432353973389
    7. ':
' → logprob: -7.594432353973389
    8. ',' → logprob: -8.719432830810547
    9. '   ' → logprob: -8.719432830810547
    10. '):
' → logprob: -8.844432830810547

Token 280: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.513309121131897
    2. 'if' (adapté à ' if') → logprob: -1.388309121131897
    3. '       ' → logprob: -1.888309121131897
    4. '   ' → logprob: -8.013309478759766
    5. '<|end|>' → logprob: -9.263309478759766
    6. ' for' → logprob: -9.388309478759766
    7. '	if' → logprob: -10.138309478759766
    8. 'for' → logprob: -10.763309478759766
    9. ' ' → logprob: -10.763309478759766
    10. '	   ' → logprob: -10.888309478759766

Token 281: ' kw' (ID: 4364)
  Prédit: ' kw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kw' → logprob: -0.06993887573480606
    2. 'kw' → logprob: -2.694938898086548
    3. '_kw' → logprob: -13.319938659667969
    4. ' any' → logprob: -15.444938659667969
    5. 'any' → logprob: -15.569938659667969
    6. 'k' → logprob: -15.944938659667969
    7. 'Kw' → logprob: -16.19493865966797
    8. '   ' → logprob: -16.56993865966797
    9. '    ' → logprob: -16.81993865966797
    10. 'w' → logprob: -16.81993865966797

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889606058597565
    2. 'in' → logprob: -2.5788960456848145
    3. ' ' → logprob: -13.828896522521973
    4. ' i' → logprob: -13.953896522521973
    5. ''in' → logprob: -14.078896522521973
    6. ' '' → logprob: -14.203896522521973
    7. ''' → logprob: -14.203896522521973
    8. ')' → logprob: -14.453896522521973
    9. '"' → logprob: -15.328896522521973
    10. 'In' → logprob: -15.453896522521973

Token 283: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.008636554703116417
    2. ' words' → logprob: -4.758636474609375
    3. 'text' → logprob: -11.008636474609375
    4. '(words' → logprob: -12.383636474609375
    5. ' text' → logprob: -14.883636474609375
    6. '_words' → logprob: -15.258636474609375
    7. '.words' → logprob: -15.383636474609375
    8. 'word' → logprob: -15.633636474609375
    9. '   ' → logprob: -16.258636474609375
    10. ')' → logprob: -16.383636474609375

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012834525667130947
    2. ':
' → logprob: -4.512834548950195
    3. ':return' → logprob: -7.262834548950195
    4. ' :' → logprob: -7.637834548950195
    5. '       ' → logprob: -7.762834548950195
    6. '           ' → logprob: -9.762834548950195
    7. ' :
' → logprob: -10.012834548950195
    8. '):' → logprob: -10.262834548950195
    9. '   ' → logprob: -11.137834548950195
    10. ' or' → logprob: -11.762834548950195

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013952046632766724
    2. '       ' → logprob: -4.638952255249023
    3. ' return' → logprob: -6.263952255249023
    4. 'return' → logprob: -6.263952255249023
    5. ':' → logprob: -9.013952255249023
    6. '
' → logprob: -9.763952255249023
    7. ':return' → logprob: -10.013952255249023
    8. '		' → logprob: -10.888952255249023
    9. ' :' → logprob: -11.013952255249023
    10. '	       ' → logprob: -11.013952255249023

Token 286: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07915008068084717
    2. '       ' → logprob: -3.0791501998901367
    3. '           ' → logprob: -3.8291501998901367
    4. ' return' → logprob: -4.954150199890137
    5. '               ' → logprob: -6.704150199890137
    6. '	return' → logprob: -10.454150199890137
    7. ':return' → logprob: -10.454150199890137
    8. '   ' → logprob: -11.079150199890137
    9. '
' → logprob: -11.954150199890137
    10. '{return' → logprob: -12.204150199890137

Token 287: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. 'true' → logprob: -22.125335693359375
    4. '(True' → logprob: -22.375335693359375
    5. '   ' → logprob: -23.875335693359375
    6. 'False' → logprob: -24.375335693359375
    7. '=True' → logprob: -24.375335693359375
    8. 'TRUE' → logprob: -25.125335693359375
    9. 'Tr' → logprob: -27.125335693359375
    10. '1' → logprob: -27.125335693359375

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029749644454568624
    2. '
' → logprob: -6.502974987030029
    3. 'return' → logprob: -7.377974987030029
    4. '    
' → logprob: -8.002974510192871
    5. ' return' → logprob: -8.002974510192871
    6. '<|end|>' → logprob: -9.627974510192871
    7. '  
' → logprob: -9.752974510192871
    8. '	return' → logprob: -11.252974510192871
    9. '       ' → logprob: -11.502974510192871
    10. '  ' → logprob: -12.252974510192871

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002610974188428372
    2. 'return' → logprob: -8.750261306762695
    3. ' return' → logprob: -9.250261306762695
    4. '
' → logprob: -12.750261306762695
    5. ' ' → logprob: -13.625261306762695
    6. '	return' → logprob: -14.500261306762695
    7. '       ' → logprob: -14.750261306762695
    8. 'None' → logprob: -14.875261306762695
    9. '  ' → logprob: -15.250261306762695
    10. '    
' → logprob: -16.125261306762695

Token 290: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022694433573633432
    2. 'return' (adapté à ' return') → logprob: -6.127269268035889
    3. ' return' → logprob: -9.502269744873047
    4. ' ' → logprob: -13.002269744873047
    5. 'False' → logprob: -13.252269744873047
    6. '       ' → logprob: -13.502269744873047
    7. 'None' → logprob: -13.627269744873047
    8. '
' → logprob: -13.752269744873047
    9. '  ' → logprob: -14.002269744873047
    10. '	return' → logprob: -14.377269744873047

Token 291: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -22.148244857788086
    4. 'None' → logprob: -23.523244857788086
    5. 'false' → logprob: -23.898244857788086
    6. '=False' → logprob: -24.648244857788086
    7. 'True' → logprob: -25.273244857788086
    8. '_false' → logprob: -25.273244857788086
    9. ' ' → logprob: -26.023244857788086
    10. ' false' → logprob: -26.648244857788086

Token 292: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23995116353034973
    2. '
' → logprob: -1.6149511337280273
    3. '<|end|>' → logprob: -4.614951133728027
    4. '

' → logprob: -5.489951133728027
    5. '  
' → logprob: -8.864951133728027
    6. '<|end|>' → logprob: -9.614951133728027
    7. '```' → logprob: -10.114951133728027
    8. '\n' → logprob: -10.364951133728027
    9. '    
' → logprob: -10.489951133728027
    10. 'import' → logprob: -11.114951133728027

Token 293: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044377794256433845
    2. 'for' → logprob: -8.500443458557129
    3. 'import' → logprob: -9.000443458557129
    4. 'if' → logprob: -10.125443458557129
    5. '```' → logprob: -10.250443458557129
    6. '<|end|>' → logprob: -10.750443458557129
    7. 'shift' → logprob: -12.000443458557129
    8. '#' → logprob: -12.625443458557129
    9. '
' → logprob: -12.875443458557129
    10. 'print' → logprob: -13.125443458557129

Token 294: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10152221471071243
    2. ' ca' → logprob: -2.726522207260132
    3. 'main' → logprob: -4.101522445678711
    4. ' find' → logprob: -5.476522445678711
    5. ' crack' → logprob: -5.476522445678711
    6. ' brute' → logprob: -6.351522445678711
    7. 'ca' → logprob: -6.976522445678711
    8. ' break' → logprob: -6.976522445678711
    9. ' try' → logprob: -7.726522445678711
    10. ' guess' → logprob: -7.851522445678711

Token 295: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.4987974029500037e-05
    2. ' ():' → logprob: -10.750024795532227
    3. '()' → logprob: -13.250024795532227
    4. '():
' → logprob: -13.625024795532227
    5. '(' → logprob: -14.750024795532227
    6. '():
' → logprob: -16.500024795532227
    7. '_' → logprob: -16.750024795532227
    8. '()>' → logprob: -18.250024795532227
    9. '(:' → logprob: -19.125024795532227
    10. ':' → logprob: -19.375024795532227

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007638805545866489
    2. ' import' → logprob: -5.132638931274414
    3. ' text' → logprob: -7.007638931274414
    4. ' input' → logprob: -8.632638931274414
    5. 'import' → logprob: -8.757638931274414
    6. ' for' → logprob: -9.132638931274414
    7. ' try' → logprob: -9.632638931274414
    8. ' sys' → logprob: -10.257638931274414
    9. ' code' → logprob: -10.257638931274414
    10. ' indentation' → logprob: -10.257638931274414

Token 297: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40584424138069153
    2. 'for' → logprob: -1.7808442115783691
    3. '   ' → logprob: -2.655844211578369
    4. ' if' → logprob: -3.905844211578369
    5. ' import' → logprob: -4.155844211578369
    6. ' shift' → logprob: -4.280844211578369
    7. 'import' → logprob: -4.655844211578369
    8. 'if' → logprob: -4.780844211578369
    9. 'shift' → logprob: -5.030844211578369
    10. ' text' → logprob: -5.655844211578369

Token 298: ' Lire' (ID: 57624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24795764684677124
    2. ' for' → logprob: -2.122957706451416
    3. 'if' → logprob: -3.997957706451416
    4. 'shift' → logprob: -3.997957706451416
    5. 'input' → logprob: -4.372957706451416
    6. 'import' → logprob: -4.372957706451416
    7. ' input' → logprob: -5.497957706451416
    8. ' if' → logprob: -5.622957706451416
    9. 'text' → logprob: -5.747957706451416
    10. '   ' → logprob: -5.872957706451416

Token 299: ' toutes' (ID: 17502)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7922301292419434
    2. ' text' → logprob: -1.2922301292419434
    3. 'text' → logprob: -2.4172301292419434
    4. 'shift' → logprob: -3.0422301292419434
    5. ' shift' → logprob: -3.1672301292419434
    6. ' line' → logprob: -3.9172301292419434
    7. 'for' → logprob: -4.417230129241943
    8. ' for' → logprob: -4.417230129241943
    9. 'lines' → logprob: -4.542230129241943
    10. ' input' → logprob: -4.667230129241943

Token 300: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00934943463653326
    2. 'l' → logprob: -6.009349346160889
    3. 'les' → logprob: -6.134349346160889
    4. ' les' → logprob: -6.259349346160889
    5. '=' → logprob: -7.509349346160889
    6. ' =' → logprob: -7.634349346160889
    7. 'lines' → logprob: -7.634349346160889
    8. '_' → logprob: -8.259349822998047
    9. '(' → logprob: -8.509349822998047
    10. '_l' → logprob: -8.884349822998047

Token 301: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06825108826160431
    2. ' lignes' → logprob: -2.818251132965088
    3. 'lines' → logprob: -5.318251132965088
    4. ' lines' → logprob: -7.943251132965088
    5. 'ligne' → logprob: -8.44325065612793
    6. ' entr' → logprob: -8.44325065612793
    7. 'import' → logprob: -9.06825065612793
    8. 'args' → logprob: -9.81825065612793
    9. '```' → logprob: -9.81825065612793
    10. '   ' → logprob: -10.06825065612793

Token 302: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23250402510166168
    2. '()' → logprob: -1.7325040102005005
    3. ':' → logprob: -4.732503890991211
    4. '():' → logprob: -4.732503890991211
    5. 'import' → logprob: -4.982503890991211
    6. ' =' → logprob: -5.732503890991211
    7. ',' → logprob: -7.232503890991211
    8. '()
' → logprob: -8.232503890991211
    9. '():
' → logprob: -8.232503890991211
    10. '    ' → logprob: -8.357503890991211

Token 303: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.037964828312397
    2. 'à' → logprob: -3.5379648208618164
    3. ' à' → logprob: -6.037964820861816
    4. '’à' → logprob: -6.162964820861816
    5. ' EOF' → logprob: -6.787964820861816
    6. '()' → logprob: -6.912964820861816
    7. ''au' → logprob: -7.162964820861816
    8. 'au' → logprob: -8.662964820861816
    9. '_' → logprob: -8.662964820861816
    10. 'a' → logprob: -8.912964820861816

Token 304: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.22685103118419647
    2. ' EOF' → logprob: -1.601850986480713
    3. 'la' → logprob: -6.976850986480713
    4. '''' → logprob: -8.601851463317871
    5. 'fin' → logprob: -9.101851463317871
    6. ' la' → logprob: -9.101851463317871
    7. 'l' → logprob: -10.726851463317871
    8. '```' → logprob: -10.726851463317871
    9. '""' → logprob: -11.476851463317871
    10. 'une' → logprob: -11.726851463317871

Token 305: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006380791310220957
    2. '
' → logprob: -5.631380558013916
    3. ':' → logprob: -6.256380558013916
    4. '    
' → logprob: -7.506380558013916
    5. ',' → logprob: -8.881381034851074
    6. ' while' → logprob: -10.131381034851074
    7. ':
' → logprob: -10.506381034851074
    8. '(' → logprob: -10.881381034851074
    9. ' for' → logprob: -11.131381034851074
    10. '  
' → logprob: -11.631381034851074

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006375004886649549
    2. '    
' → logprob: -8.00063705444336
    3. '
' → logprob: -8.25063705444336
    4. ',' → logprob: -11.25063705444336
    5. ' while' → logprob: -11.25063705444336
    6. 'import' → logprob: -12.62563705444336
    7. ':' → logprob: -13.00063705444336
    8. 'while' → logprob: -13.62563705444336
    9. ' for' → logprob: -13.75063705444336
    10. '```' → logprob: -14.00063705444336

Token 307: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21604764461517334
    2. ' lines' → logprob: -2.341047763824463
    3. ' for' → logprob: -2.841047763824463
    4. 'for' → logprob: -3.966047763824463
    5. ' text' → logprob: -4.591047763824463
    6. ' while' → logprob: -5.341047763824463
    7. 'text' → logprob: -5.966047763824463
    8. 'while' → logprob: -6.591047763824463
    9. 'lines' (adapté à ' lines') → logprob: -7.341047763824463
    10. 'try' → logprob: -7.591047763824463

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326475739479065
    2. ' =' → logprob: -1.3132647275924683
    3. '=[]' → logprob: -13.813264846801758
    4. '=sys' → logprob: -13.938264846801758
    5. '   ' → logprob: -14.438264846801758
    6. ':' → logprob: -15.063264846801758
    7. ' ' → logprob: -16.813264846801758
    8. '_' → logprob: -17.063264846801758
    9. ',' → logprob: -17.188264846801758
    10. 'import' → logprob: -17.313264846801758

Token 309: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007361313910223544
    2. ' sys' → logprob: -7.250736236572266
    3. '[' → logprob: -10.750736236572266
    4. '[]' → logprob: -12.500736236572266
    5. '(sys' → logprob: -14.500736236572266
    6. '	sys' → logprob: -15.500736236572266
    7. ' [' → logprob: -16.250736236572266
    8. '=sys' → logprob: -16.250736236572266
    9. '[]
' → logprob: -16.875736236572266
    10. '[s' → logprob: -17.000736236572266

Token 310: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.12500286102295
    3. 'stdin' → logprob: -14.87500286102295
    4. '.stdout' → logprob: -15.25000286102295
    5. '.std' → logprob: -16.375001907348633
    6. '.argv' → logprob: -17.000001907348633
    7. '.st' → logprob: -18.500001907348633
    8. '.\' → logprob: -19.625001907348633
    9. ' stdin' → logprob: -20.000001907348633
    10. '(stdin' → logprob: -20.000001907348633

Token 311: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.0032174033112823963
    2. '.read' → logprob: -5.7532172203063965
    3. '.readline' → logprob: -11.003217697143555
    4. 'read' → logprob: -11.253217697143555
    5. '.' → logprob: -11.503217697143555
    6. '.Read' → logprob: -19.878217697143555
    7. '_read' → logprob: -20.378217697143555
    8. ' read' → logprob: -20.378217697143555
    9. 'lines' → logprob: -20.628217697143555
    10. ' .' → logprob: -21.128217697143555

Token 312: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04859815910458565
    2. '().' → logprob: -3.048598051071167
    3. '()`' → logprob: -12.423598289489746
    4. 'lines' → logprob: -12.923598289489746
    5. '()
' → logprob: -13.798598289489746
    6. '()\' → logprob: -14.048598289489746
    7. '(' → logprob: -14.298598289489746
    8. ' ()' → logprob: -14.548598289489746
    9. '()*' → logprob: -15.298598289489746
    10. '()

' → logprob: -15.298598289489746

Token 313: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06583006680011749
    2. 'split' → logprob: -2.8158299922943115
    3. 'rstrip' → logprob: -5.815830230712891
    4. 'read' → logprob: -7.065830230712891
    5. 'decode' → logprob: -10.94083023071289
    6. 'replace' → logprob: -12.81583023071289
    7. 'lower' → logprob: -15.44083023071289
    8. 'text' → logprob: -16.19083023071289
    9. ' strip' → logprob: -16.31583023071289
    10. 'r' → logprob: -17.19083023071289

Token 314: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.023575857281684875
    2. '('\' → logprob: -3.773575782775879
    3. '()' → logprob: -8.023575782775879
    4. '(' → logprob: -13.648575782775879
    5. '("\' → logprob: -14.023575782775879
    6. '('' → logprob: -15.023575782775879
    7. 'line' → logprob: -15.148575782775879
    8. '()\' → logprob: -16.023576736450195
    9. ' lines' → logprob: -18.898576736450195
    10. '('.')' → logprob: -19.023576736450195

Token 315: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -13.000003814697266
    3. '()
' → logprob: -14.000003814697266
    4. '())' → logprob: -14.750003814697266
    5. '()`' → logprob: -15.500003814697266
    6. '()]' → logprob: -15.875003814697266
    7. ')' → logprob: -16.250003814697266
    8. ' ()' → logprob: -16.750003814697266
    9. '()

' → logprob: -17.000003814697266
    10. '()"' → logprob: -17.750003814697266

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010889943689107895
    2. 'for' → logprob: -5.135890007019043
    3. ' for' → logprob: -5.510890007019043
    4. '
' → logprob: -7.760890007019043
    5. '    
' → logprob: -8.010890007019043
    6. 'shift' → logprob: -9.385890007019043
    7. '```' → logprob: -10.635890007019043
    8. ' shift' → logprob: -11.385890007019043
    9. 'possible' → logprob: -12.385890007019043
    10. '    ' → logprob: -12.635890007019043

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13185270130634308
    2. 'shift' → logprob: -2.381852626800537
    3. 'best' → logprob: -4.381852626800537
    4. '   ' → logprob: -4.756852626800537
    5. ' for' → logprob: -5.631852626800537
    6. 'possible' → logprob: -6.006852626800537
    7. 'found' → logprob: -6.506852626800537
    8. 'max' → logprob: -6.506852626800537
    9. 'min' → logprob: -8.631853103637695
    10. 'all' → logprob: -8.881853103637695

Token 318: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023271452635526657
    2. ' line' → logprob: -3.7732715606689453
    3. 'i' → logprob: -12.023271560668945
    4. 'text' → logprob: -12.273271560668945
    5. 'encrypted' → logprob: -12.648271560668945
    6. 'encoded' → logprob: -13.148271560668945
    7. ' i' → logprob: -13.398271560668945
    8. ' encrypted' → logprob: -13.523271560668945
    9. 'shift' → logprob: -13.648271560668945
    10. 'lin' → logprob: -13.773271560668945

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004100723657757044
    2. 'in' → logprob: -5.504100799560547
    3. ',' → logprob: -11.879100799560547
    4. '   ' → logprob: -12.129100799560547
    5. ':' → logprob: -12.754100799560547
    6. ' :' → logprob: -13.629100799560547
    7. '.' → logprob: -14.004100799560547
    8. '    ' → logprob: -14.254100799560547
    9. ' ' → logprob: -14.254100799560547
    10. '_' → logprob: -14.254100799560547

Token 320: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.029762065038084984
    2. ' lines' → logprob: -3.529762029647827
    3. '(lines' → logprob: -12.154762268066406
    4. '	lines' → logprob: -13.404762268066406
    5. 'range' → logprob: -13.654762268066406
    6. '   ' → logprob: -13.779762268066406
    7. 'line' → logprob: -13.779762268066406
    8. ' ' → logprob: -14.404762268066406
    9. ')' → logprob: -15.654762268066406
    10. ' range' → logprob: -15.904762268066406

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002672564936801791
    2. '       ' → logprob: -6.6276726722717285
    3. ':
' → logprob: -6.7526726722717285
    4. ',' → logprob: -9.50267219543457
    5. '):' → logprob: -9.62767219543457
    6. '   ' → logprob: -11.62767219543457
    7. ' :' → logprob: -12.00267219543457
    8. '():' → logprob: -12.37767219543457
    9. '<|end|>' → logprob: -12.37767219543457
    10. '<|end|>' → logprob: -12.62767219543457

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011307948443572968
    2. ' for' → logprob: -9.125113487243652
    3. '   ' → logprob: -14.000113487243652
    4. ',' → logprob: -14.250113487243652
    5. '    ' → logprob: -14.375113487243652
    6. '      ' → logprob: -14.750113487243652
    7. '	   ' → logprob: -14.875113487243652
    8. '<|end|>' → logprob: -15.250113487243652
    9. '```' → logprob: -15.375113487243652
    10. '    ' → logprob: -15.500113487243652

Token 323: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3255029320716858
    2. ' for' → logprob: -1.325502872467041
    3. 'shift' → logprob: -4.700502872467041
    4. '   ' → logprob: -6.325502872467041
    5. 'found' → logprob: -7.450502872467041
    6. ' shift' → logprob: -7.825502872467041
    7. ' found' → logprob: -9.0755033493042
    8. 'best' → logprob: -9.5755033493042
    9. '       ' → logprob: -10.0755033493042
    10. ' best' → logprob: -10.3255033493042

Token 324: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005058940965682268
    2. 'found' → logprob: -5.880058765411377
    3. ' for' → logprob: -6.380058765411377
    4. '   ' → logprob: -8.380059242248535
    5. 'shift' → logprob: -8.380059242248535
    6. 'best' → logprob: -10.630059242248535
    7. 'possible' → logprob: -11.005059242248535
    8. ' found' → logprob: -11.380059242248535
    9. 'decoded' → logprob: -11.630059242248535
    10. 'i' → logprob: -12.005059242248535

Token 325: ' chaque' (ID: 21194)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.1809842437505722
    2. ' shift' → logprob: -1.8059842586517334
    3. 'i' → logprob: -7.430984020233154
    4. 's' → logprob: -8.305984497070312
    5. ' i' → logprob: -9.180984497070312
    6. ' s' → logprob: -9.430984497070312
    7. 'sh' → logprob: -9.555984497070312
    8. 'de' → logprob: -10.430984497070312
    9. '```' → logprob: -11.180984497070312
    10. 'possible' → logprob: -11.180984497070312

Token 326: ' ligne' (ID: 19583)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.08070853352546692
    2. ' shift' → logprob: -2.5807085037231445
    3. 'de' → logprob: -7.0807085037231445
    4. ' dé' → logprob: -8.205708503723145
    5. 'i' → logprob: -8.580708503723145
    6. 'd' → logprob: -9.580708503723145
    7. 'possible' → logprob: -9.580708503723145
    8. ' i' → logprob: -9.830708503723145
    9. 'sh' → logprob: -9.830708503723145
    10. 's' → logprob: -9.830708503723145

Token 327: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48638269305229187
    2. ',' → logprob: -0.9863827228546143
    3. ' for' → logprob: -5.236382484436035
    4. '           ' → logprob: -6.486382484436035
    5. '        ' → logprob: -6.861382484436035
    6. ' ,' → logprob: -6.861382484436035
    7. '   ' → logprob: -6.861382484436035
    8. '<|end|>' → logprob: -7.236382484436035
    9. ':' → logprob: -7.861382484436035
    10. '<|end|>' → logprob: -8.236382484436035

Token 328: ' essayer' (ID: 92713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5308805704116821
    2. 'for' → logprob: -0.9058805704116821
    3. 'found' → logprob: -5.530880451202393
    4. ' found' → logprob: -5.780880451202393
    5. '   ' → logprob: -8.15588092803955
    6. '       ' → logprob: -8.78088092803955
    7. ' best' → logprob: -9.03088092803955
    8. 'best' → logprob: -9.65588092803955
    9. 'shift' → logprob: -10.90588092803955
    10. '    ' → logprob: -11.15588092803955

Token 329: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0423779487609863
    2. ' all' → logprob: -1.7923779487609863
    3. 'shift' → logprob: -1.7923779487609863
    4. ' de' → logprob: -2.7923779487609863
    5. 'for' → logprob: -2.7923779487609863
    6. ' tous' → logprob: -2.7923779487609863
    7. ' for' → logprob: -3.0423779487609863
    8. 'de' → logprob: -3.9173779487609863
    9. ' toutes' → logprob: -3.9173779487609863
    10. 't' → logprob: -4.667377948760986

Token 330: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.15086622536182404
    2. 'les' → logprob: -2.0258662700653076
    3. '   ' → logprob: -5.7758660316467285
    4. ' le' → logprob: -6.2758660316467285
    5. 'le' → logprob: -6.6508660316467285
    6. 'shift' → logprob: -6.7758660316467285
    7. 'possible' → logprob: -8.900866508483887
    8. ' shift' → logprob: -9.025866508483887
    9. ' possible' → logprob: -9.400866508483887
    10. ' ' → logprob: -9.650866508483887

Token 331: ' dé' (ID: 2393)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.4409571588039398
    2. 'shift' → logprob: -1.5659571886062622
    3. '26' → logprob: -2.1909570693969727
    4. 'possible' → logprob: -4.065957069396973
    5. '25' → logprob: -4.815957069396973
    6. 'range' → logprob: -5.190957069396973
    7. ' shifts' → logprob: -5.815957069396973
    8. 'poss' → logprob: -7.690957069396973
    9. ' possible' → logprob: -7.815957069396973
    10. '1' → logprob: -8.065957069396973

Token 332: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.02540220133960247
    2. 'c' → logprob: -4.275402069091797
    3. 'al' → logprob: -5.775402069091797
    4. '```' → logprob: -6.275402069091797
    5. 'alc' → logprob: -7.275402069091797
    6. '</' → logprob: -8.400402069091797
    7. '' → logprob: -8.400402069091797
    8. 'ca' → logprob: -8.400402069091797
    9. '   ' → logprob: -8.525402069091797
    10. '>' → logprob: -8.525402069091797

Token 333: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -8.578184497309849e-05
    2. 'age' → logprob: -9.375085830688477
    3. 'ements' → logprob: -14.875085830688477
    4. '   ' → logprob: -15.250085830688477
    5. '```' → logprob: -16.250085830688477
    6. 's' → logprob: -16.875085830688477
    7. ' ages' → logprob: -17.500085830688477
    8. 'ag' → logprob: -17.750085830688477
    9. 'agement' → logprob: -18.125085830688477
    10. 'es' → logprob: -18.125085830688477

Token 334: ' possibles' (ID: 97753)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.38878533244132996
    2. ' de' → logprob: -1.2637853622436523
    3. 'from' → logprob: -3.8887853622436523
    4. ' shift' → logprob: -5.138785362243652
    5. '       ' → logprob: -5.763785362243652
    6. 'shift' → logprob: -6.388785362243652
    7. '   ' → logprob: -6.763785362243652
    8. ' for' → logprob: -6.888785362243652
    9. '    ' → logprob: -6.888785362243652
    10. ' in' → logprob: -7.388785362243652

Token 335: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17386573553085327
    2. ' for' → logprob: -2.923865795135498
    3. ' (' → logprob: -3.798865795135498
    4. ' from' → logprob: -4.173865795135498
    5. ' in' → logprob: -4.423865795135498
    6. '(' → logprob: -4.423865795135498
    7. ' de' → logprob: -5.173865795135498
    8. ',' → logprob: -5.298865795135498
    9. '16' → logprob: -5.423865795135498
    10. 'range' → logprob: -5.423865795135498

Token 336: '0' (ID: 15)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.15089134871959686
    2. '1' → logprob: -2.1508913040161133
    3. 'range' → logprob: -4.150891304016113
    4. ' ' → logprob: -5.150891304016113
    5. ' range' → logprob: -7.400891304016113
    6. 'shift' → logprob: -7.525891304016113
    7. '   ' → logprob: -8.025891304016113
    8. '27' → logprob: -8.775891304016113
    9. 'from' → logprob: -8.900891304016113
    10. '0' → logprob: -8.900891304016113

Token 337: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47062134742736816
    2. ' à' → logprob: -1.2206213474273682
    3. '26' → logprob: -3.095621347427368
    4. '1' → logprob: -4.720621109008789
    5. 'à' → logprob: -5.220621109008789
    6. '36' → logprob: -5.845621109008789
    7. ' to' → logprob: -5.970621109008789
    8. ' ' → logprob: -5.970621109008789
    9. '32' → logprob: -5.970621109008789
    10. '27' → logprob: -6.595621109008789

Token 338: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0008313055150210857
    2. '26' → logprob: -7.375831127166748
    3. ' ' → logprob: -8.500831604003906
    4. 'z' → logprob: -14.875831604003906
    5. '255' → logprob: -15.000831604003906
    6. '
' → logprob: -15.250831604003906
    7. '```' → logprob: -15.625831604003906
    8. '   ' → logprob: -15.625831604003906
    9. '2' → logprob: -17.250831604003906
    10. '  ' → logprob: -18.000831604003906

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37069523334503174
    2. '):' → logprob: -1.2456952333450317
    3. '):
' → logprob: -3.995695114135742
    4. '       ' → logprob: -6.120695114135742
    5. '   ' → logprob: -7.495695114135742
    6. ' )' → logprob: -7.745695114135742
    7. ')
' → logprob: -8.245695114135742
    8. ' ):' → logprob: -9.370695114135742
    9. ' ):
' → logprob: -10.495695114135742
    10. ':' → logprob: -11.370695114135742

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022964231902733445
    2. ':' → logprob: -9.375229835510254
    3. ' for' → logprob: -9.375229835510254
    4. ',' → logprob: -10.500229835510254
    5. '           ' → logprob: -11.125229835510254
    6. '   ' → logprob: -12.625229835510254
    7. '<|end|>' → logprob: -12.875229835510254
    8. '        
' → logprob: -13.125229835510254
    9. '    ' → logprob: -13.250229835510254
    10. 'for' → logprob: -13.375229835510254

Token 341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5152440667152405
    2. '       ' → logprob: -1.2652440071105957
    3. 'for' (adapté à ' for') → logprob: -2.1402440071105957
    4. '   ' → logprob: -5.890244007110596
    5. '           ' → logprob: -10.390244483947754
    6. ' found' → logprob: -10.640244483947754
    7. '    ' → logprob: -11.390244483947754
    8. ' ' → logprob: -12.015244483947754
    9. 'found' → logprob: -12.140244483947754
    10. '        ' → logprob: -14.140244483947754

Token 342: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.3132699728012085
    2. 'shift' → logprob: -1.3132699728012085
    3. ' key' → logprob: -12.18826961517334
    4. 'sh' → logprob: -14.18826961517334
    5. '```' → logprob: -14.56326961517334
    6. '_shift' → logprob: -14.81326961517334
    7. '   ' → logprob: -15.18826961517334
    8. ' ' → logprob: -15.31326961517334
    9. 'key' → logprob: -15.43826961517334
    10. ' s' → logprob: -15.43826961517334

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026310397312045097
    2. 'in' → logprob: -3.651310443878174
    3. ' ' → logprob: -12.026309967041016
    4. '	in' → logprob: -13.901309967041016
    5. '_in' → logprob: -14.276309967041016
    6. 'In' → logprob: -15.151309967041016
    7. '```' → logprob: -15.151309967041016
    8. ',' → logprob: -15.151309967041016
    9. 'import' → logprob: -15.276309967041016
    10. ' ' → logprob: -15.776309967041016

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693262100219727
    2. ' range' → logprob: -2.1269326210021973
    3. '26' → logprob: -12.376932144165039
    4. '25' → logprob: -15.626932144165039
    5. '(range' → logprob: -16.62693214416504
    6. '24' → logprob: -17.75193214416504
    7. ' ' → logprob: -18.12693214416504
    8. '	range' → logprob: -18.12693214416504
    9. '   ' → logprob: -20.00193214416504
    10. '27' → logprob: -20.25193214416504

Token 345: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. '26' → logprob: -13.00000286102295
    3. '25' → logprob: -15.75000286102295
    4. ' (' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.375001907348633
    6. ')' → logprob: -19.250001907348633
    7. '24' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '27' → logprob: -21.125001907348633
    10. '28' → logprob: -21.125001907348633

Token 346: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -16.625
    4. '   ' → logprob: -18.75
    5. '27' → logprob: -19.875
    6. ')' → logprob: -20.875
    7. '```' → logprob: -21.125
    8. '(' → logprob: -21.375
    9. '1' → logprob: -21.75
    10. '256' → logprob: -23.125

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012592414394021034
    2. '):
' → logprob: -4.387592315673828
    3. ' ):' → logprob: -9.762592315673828
    4. ')' → logprob: -11.012592315673828
    5. '   ' → logprob: -12.387592315673828
    6. ':' → logprob: -13.137592315673828
    7. '):
' → logprob: -13.637592315673828
    8. '+' → logprob: -14.512592315673828
    9. ' ):
' → logprob: -14.762592315673828
    10. '):

' → logprob: -15.387592315673828

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004473540757317096
    2. ':' → logprob: -8.625447273254395
    3. '            
' → logprob: -9.500447273254395
    4. '	       ' → logprob: -10.125447273254395
    5. ':
' → logprob: -10.250447273254395
    6. '
' → logprob: -10.875447273254395
    7. ',' → logprob: -11.000447273254395
    8. '<|end|>' → logprob: -11.375447273254395
    9. '):
' → logprob: -11.625447273254395
    10. ' :' → logprob: -11.750447273254395

Token 349: ' decrypted' (ID: 139372)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5723862648010254
    2. ' decrypted' → logprob: -1.4473862648010254
    3. '           ' → logprob: -1.8223862648010254
    4. 'decoded' → logprob: -3.9473862648010254
    5. 'plaintext' → logprob: -4.697386264801025
    6. 'text' → logprob: -5.197386264801025
    7. 'candidate' → logprob: -6.447386264801025
    8. 'decrypt' → logprob: -7.572386264801025
    9. ' plaintext' → logprob: -7.697386264801025
    10. ' decoded' → logprob: -7.697386264801025

Token 350: ' =' (ID: 314)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.12787391245365143
    2. ' =' → logprob: -2.3778738975524902
    3. '=' → logprob: -4.00287389755249
    4. '_line' → logprob: -4.87787389755249
    5. '_' → logprob: -7.00287389755249
    6. 'text' → logprob: -7.75287389755249
    7. '_txt' → logprob: -10.752874374389648
    8. '=line' → logprob: -10.752874374389648
    9. '_message' → logprob: -11.877874374389648
    10. 'ed' → logprob: -12.127874374389648

Token 351: ' ca' (ID: 3268)
  Prédit: 'ca'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0011703446507453918
    2. ' ca' → logprob: -6.7511701583862305
    3. 'ce' → logprob: -17.001171112060547
    4. '   ' → logprob: -17.126171112060547
    5. '_ca' → logprob: -18.001171112060547
    6. ' ' → logprob: -18.751171112060547
    7. '-ca' → logprob: -18.751171112060547
    8. 'Ca' → logprob: -19.126171112060547
    9. 'ces' → logprob: -19.501171112060547
    10. 'c' → logprob: -19.751171112060547

Token 352: 'esar' (ID: 27583)
  Prédit: 'esar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esar' → logprob: -1.5332478142227046e-05
    2. 'es' → logprob: -11.875015258789062
    3. 'eser' → logprob: -11.875015258789062
    4. 'sar' → logprob: -14.125015258789062
    5. 'esa' → logprob: -14.625015258789062
    6. 'essar' → logprob: -17.500015258789062
    7. 'e' → logprob: -18.125015258789062
    8. 'asar' → logprob: -18.500015258789062
    9. 'ser' → logprob: -18.750015258789062
    10. 's' → logprob: -19.000015258789062

Token 353: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.250000953674316
    3. 'decrypt' → logprob: -14.625000953674316
    4. '_decode' → logprob: -16.125001907348633
    5. '_des' → logprob: -17.250001907348633
    6. '_d' → logprob: -17.375001907348633
    7. '"_' → logprob: -18.000001907348633
    8. 'Decrypt' → logprob: -18.000001907348633
    9. '_DE' → logprob: -18.125001907348633
    10. ''_' → logprob: -18.250001907348633

Token 354: 'crypt' (ID: 9060)
  Prédit: 'crypt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -1.3856492842023727e-06
    2. 'rypt' → logprob: -14.000000953674316
    3. 'decrypt' → logprob: -14.500000953674316
    4. 'crypted' → logprob: -17.500001907348633
    5. 'cr' → logprob: -17.750001907348633
    6. ' crypt' → logprob: -18.750001907348633
    7. 'Crypt' → logprob: -19.250001907348633
    8. 'CRYPT' → logprob: -19.250001907348633
    9. 'cript' → logprob: -20.000001907348633
    10. 'encrypt' → logprob: -20.750001907348633

Token 355: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -17.50009536743164
    4. '=line' → logprob: -17.50009536743164
    5. ' (' → logprob: -18.12509536743164
    6. '[line' → logprob: -18.37509536743164
    7. '(Line' → logprob: -18.50009536743164
    8. ',line' → logprob: -19.00009536743164
    9. '(lines' → logprob: -19.62509536743164
    10. '(text' → logprob: -19.75009536743164

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',de' → logprob: -14.500001907348633
    4. ',line' → logprob: -15.750001907348633
    5. '```' → logprob: -17.625001907348633
    6. '',' → logprob: -17.875001907348633
    7. ')' → logprob: -17.875001907348633
    8. ',text' → logprob: -18.250001907348633
    9. '(' → logprob: -18.375001907348633
    10. ',
' → logprob: -18.375001907348633

Token 357: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0004309076175559312
    2. ' shift' → logprob: -7.750431060791016
    3. 'sh' → logprob: -16.250431060791016
    4. '26' → logprob: -16.875431060791016
    5. '   ' → logprob: -17.125431060791016
    6. '25' → logprob: -17.250431060791016
    7. ')' → logprob: -18.500431060791016
    8. '```' → logprob: -19.125431060791016
    9. ' ' → logprob: -19.625431060791016
    10. '
' → logprob: -19.625431060791016

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031837786082178354
    2. ')
' → logprob: -5.753183841705322
    3. '           ' → logprob: -12.253183364868164
    4. ')
' → logprob: -13.753183364868164
    5. ')

' → logprob: -15.628183364868164
    6. '               ' → logprob: -17.128183364868164
    7. ' )' → logprob: -17.378183364868164
    8. ')`' → logprob: -17.378183364868164
    9. '       ' → logprob: -17.503183364868164
    10. ')`
' → logprob: -19.003183364868164

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021998681768309325
    2. ' if' → logprob: -9.12522029876709
    3. 'if' → logprob: -9.75022029876709
    4. '<|end|>' → logprob: -10.12522029876709
    5. '            
' → logprob: -11.50022029876709
    6. '<|end|>' → logprob: -14.12522029876709
    7. '          ' → logprob: -14.50022029876709
    8. '	       ' → logprob: -15.12522029876709
    9. '		' → logprob: -15.75022029876709
    10. '
' → logprob: -16.000219345092773

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15643009543418884
    2. '           ' → logprob: -2.4064300060272217
    3. ' if' → logprob: -2.9064300060272217
    4. '	       ' → logprob: -14.7814302444458
    5. '	if' → logprob: -15.2814302444458
    6. ' ' → logprob: -15.5314302444458
    7. 'If' → logprob: -15.6564302444458
    8. '       ' → logprob: -15.7814302444458
    9. '          ' → logprob: -15.7814302444458
    10. '   ' → logprob: -15.7814302444458

Token 361: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.011047814972698689
    2. ' contains' → logprob: -4.511047840118408
    3. 'contain' → logprob: -17.63604736328125
    4. '.contains' → logprob: -18.38604736328125
    5. 'cont' → logprob: -18.76104736328125
    6. '   ' → logprob: -18.88604736328125
    7. ' ' → logprob: -19.38604736328125
    8. '_contains' → logprob: -19.76104736328125
    9. 'Contains' → logprob: -19.88604736328125
    10. 'contents' → logprob: -20.26104736328125

Token 362: '_keyword' (ID: 117000)
  Prédit: '_keyword'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keyword' → logprob: -6.2729995988775045e-06
    2. '_key' → logprob: -12.500006675720215
    3. '_' → logprob: -13.875006675720215
    4. '_keywords' → logprob: -14.000006675720215
    5. 'keyword' → logprob: -15.000006675720215
    6. '(keyword' → logprob: -15.000006675720215
    7. '_keyboard' → logprob: -17.0000057220459
    8. 'Keyword' → logprob: -18.1250057220459
    9. '_kw' → logprob: -18.1250057220459
    10. '```' → logprob: -18.8750057220459

Token 363: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.000712074339389801
    2. '(' → logprob: -7.250711917877197
    3. '(decoded' → logprob: -13.750712394714355
    4. ' (' → logprob: -13.875712394714355
    5. '(d' → logprob: -16.50071144104004
    6. '(
' → logprob: -17.62571144104004
    7. 'de' → logprob: -18.00071144104004
    8. '(dis' → logprob: -18.75071144104004
    9. '(def' → logprob: -18.87571144104004
    10. '(dec' → logprob: -18.87571144104004

Token 364: 'crypted' (ID: 24522)
  Prédit: 'rypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rypt' → logprob: -0.030845502391457558
    2. 'crypted' → logprob: -3.6558454036712646
    3. 'y' → logprob: -5.905845642089844
    4. 'pt' → logprob: -6.780845642089844
    5. 'r' → logprob: -8.030845642089844
    6. 'ry' → logprob: -8.155845642089844
    7. 'oded' → logprob: -10.405845642089844
    8. 'd' → logprob: -11.780845642089844
    9. 'p' → logprob: -12.405845642089844
    10. 'yed' → logprob: -12.780845642089844

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.0020742492051795e-05
    2. '):
' → logprob: -10.000049591064453
    3. ')' → logprob: -13.000049591064453
    4. ':' → logprob: -13.500049591064453
    5. ' ):' → logprob: -14.250049591064453
    6. '():' → logprob: -16.625049591064453
    7. '):
' → logprob: -16.875049591064453
    8. ')):' → logprob: -17.750049591064453
    9. ''):' → logprob: -18.250049591064453
    10. '):

' → logprob: -18.500049591064453

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.64970643306151e-05
    2. 'print' → logprob: -10.000086784362793
    3. ' print' → logprob: -11.125086784362793
    4. '           ' → logprob: -11.625086784362793
    5. ' return' → logprob: -11.875086784362793
    6. '                
' → logprob: -12.625086784362793
    7. 'return' → logprob: -13.000086784362793
    8. '	           ' → logprob: -13.375086784362793
    9. '              ' → logprob: -14.250086784362793
    10. '```' → logprob: -14.500086784362793

Token 367: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3507138192653656
    2. ' print' → logprob: -1.850713849067688
    3. 'print' (adapté à ' print') → logprob: -1.975713849067688
    4. '           ' → logprob: -11.475713729858398
    5. '                   ' → logprob: -12.225713729858398
    6. '
' → logprob: -13.225713729858398
    7. '#print' → logprob: -13.725713729858398
    8. '                
' → logprob: -13.975713729858398
    9. '	           ' → logprob: -13.975713729858398
    10. '              ' → logprob: -14.100713729858398

Token 368: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.0009791015181690454
    2. '(f' → logprob: -7.250978946685791
    3. '(' → logprob: -8.25097942352295
    4. '(decoded' → logprob: -12.87597942352295
    5. '(line' → logprob: -13.50097942352295
    6. 'de' → logprob: -13.50097942352295
    7. '((' → logprob: -13.62597942352295
    8. '(d' → logprob: -14.12597942352295
    9. '(sh' → logprob: -15.62597942352295
    10. ' (' → logprob: -16.250978469848633

Token 369: 'crypted' (ID: 24522)
  Prédit: 'crypted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypted' → logprob: -4.763666947837919e-05
    2. 'rypt' → logprob: -10.37504768371582
    3. 'cr' → logprob: -11.37504768371582
    4. 'pt' → logprob: -13.87504768371582
    5. 'crypt' → logprob: -14.00004768371582
    6. 'encrypted' → logprob: -14.12504768371582
    7. 'c' → logprob: -14.62504768371582
    8. 'y' → logprob: -14.75004768371582
    9. 'p' → logprob: -15.00004768371582
    10. '   ' → logprob: -15.25004768371582

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004079828038811684
    2. ')
' → logprob: -5.504079818725586
    3. ' )' → logprob: -15.129079818725586
    4. '               ' → logprob: -15.379079818725586
    5. ',' → logprob: -15.504079818725586
    6. '')' → logprob: -15.879079818725586
    7. '))' → logprob: -15.879079818725586
    8. ')
' → logprob: -16.254079818725586
    9. '")' → logprob: -16.754079818725586
    10. ')

' → logprob: -17.004079818725586

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014656837447546422
    2. '<|end|>' → logprob: -9.000146865844727
    3. 'return' → logprob: -12.625146865844727
    4. '                   ' → logprob: -12.875146865844727
    5. '```' → logprob: -12.875146865844727
    6. '<|end|>' → logprob: -12.875146865844727
    7. '                       ' → logprob: -13.125146865844727
    8. '			' → logprob: -13.375146865844727
    9. '		       ' → logprob: -13.375146865844727
    10. '                ' → logprob: -13.500146865844727

Token 372: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5003436803817749
    2. 'return' → logprob: -1.000343680381775
    3. '               ' → logprob: -3.7503437995910645
    4. ' break' → logprob: -6.5003437995910645
    5. ' return' → logprob: -7.0003437995910645
    6. '	break' → logprob: -16.000343322753906
    7. '```' → logprob: -16.250343322753906
    8. '                   ' → logprob: -16.375343322753906
    9. 'exit' → logprob: -16.625343322753906
    10. '           ' → logprob: -17.625343322753906

Token 373: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010004170471802354
    2. '<|end|>' → logprob: -7.37600040435791
    3. '
' → logprob: -8.37600040435791
    4. '```' → logprob: -9.25100040435791
    5. ' if' → logprob: -10.37600040435791
    6. '#' → logprob: -11.87600040435791
    7. '\n' → logprob: -12.37600040435791
    8. '\' → logprob: -13.62600040435791
    9. '

' → logprob: -13.87600040435791
    10. '  
' → logprob: -14.25100040435791

Token 375: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10027556121349335
    2. '__' → logprob: -2.3502755165100098
    3. '_' → logprob: -9.975275993347168
    4. ' ' → logprob: -10.850275993347168
    5. '___' → logprob: -13.975275993347168
    6. '_name' → logprob: -14.475275993347168
    7. ' ' → logprob: -15.100275993347168
    8. '​' → logprob: -15.475275993347168
    9. ' ' → logprob: -15.600275993347168
    10. ' ___' → logprob: -15.725275993347168

Token 376: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001462619286030531
    2. '==' → logprob: -6.751462459564209
    3. ' ==' → logprob: -8.626462936401367
    4. '__.__' → logprob: -10.001462936401367
    5. '__.' → logprob: -10.626462936401367
    6. '.__' → logprob: -11.251462936401367
    7. ' __' → logprob: -11.376462936401367
    8. '=="' → logprob: -12.501462936401367
    9. '=='' → logprob: -12.876462936401367
    10. '[' → logprob: -12.876462936401367

Token 377: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8624639324116288e-06
    2. '==' → logprob: -13.500001907348633
    3. '__.__' → logprob: -15.000001907348633
    4. '__
' → logprob: -17.625001907348633
    5. '__('' → logprob: -17.625001907348633
    6. ' ==' → logprob: -18.250001907348633
    7. '"' → logprob: -18.375001907348633
    8. '___' → logprob: -18.875001907348633
    9. '=="' → logprob: -18.875001907348633
    10. '__.' → logprob: -19.250001907348633

Token 378: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2740541994571686
    2. ' ==' → logprob: -2.0240542888641357
    3. '==' → logprob: -2.2740542888641357
    4. '=="' → logprob: -5.649054050445557
    5. '=='' → logprob: -6.774054050445557
    6. '"' → logprob: -11.649054527282715
    7. '_' → logprob: -12.399054527282715
    8. '=' → logprob: -12.649054527282715
    9. '___' → logprob: -12.649054527282715
    10. '===' → logprob: -13.024054527282715

Token 379: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07890499383211136
    2. ''' → logprob: -2.5789051055908203
    3. ' "__' → logprob: -11.45390510559082
    4. '__' → logprob: -12.57890510559082
    5. ' '__' → logprob: -14.07890510559082
    6. ''"' → logprob: -16.07890510559082
    7. '"user' → logprob: -16.57890510559082
    8. '"name' → logprob: -16.57890510559082
    9. '"'' → logprob: -17.70390510559082
    10. ' ' → logprob: -18.20390510559082

Token 380: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00012451570364646614
    2. '__' → logprob: -9.00012493133545
    3. '_main' → logprob: -15.00012493133545
    4. 'name' → logprob: -15.12512493133545
    5. ' main' → logprob: -15.25012493133545
    6. '"' → logprob: -16.250123977661133
    7. 'built' → logprob: -17.750123977661133
    8. '___' → logprob: -18.375123977661133
    9. 'python' → logprob: -19.250123977661133
    10. '-main' → logprob: -19.500123977661133

Token 381: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4741533696651459
    2. '__' → logprob: -0.9741533994674683
    3. '__:' → logprob: -10.224153518676758
    4. '__':
' → logprob: -10.724153518676758
    5. '__["' → logprob: -11.349153518676758
    6. '__.' → logprob: -12.599153518676758
    7. '__",' → logprob: -13.974153518676758
    8. '__.__' → logprob: -14.474153518676758
    9. '__("' → logprob: -14.474153518676758
    10. '_' → logprob: -14.974153518676758

Token 382: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006047414499334991
    2. '	main' → logprob: -8.000604629516602
    3. ' main' → logprob: -8.250604629516602
    4. '   ' → logprob: -11.750604629516602
    5. '_main' → logprob: -15.500604629516602
    6. '__' → logprob: -18.1256046295166
    7. ' ' → logprob: -18.3756046295166
    8. '(main' → logprob: -18.3756046295166
    9. 'mainwindow' → logprob: -18.6256046295166
    10. '    
' → logprob: -18.7506046295166

Token 383: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -24.5
    5. '_main' → logprob: -26.25
    6. '.main' → logprob: -26.875
    7. 'ma' → logprob: -27.125
    8. '(main' → logprob: -27.5
    9. 'Main' → logprob: -27.625
    10. 'maine' → logprob: -28.125

Token 384: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 382
Tokens correctement prédits (1ère position, stricte): 145
Tokens correctement prédits (1ère position, avec adaptation): 155
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 37.96%
Précision adaptée (1ère position): 40.58%
Précision (top 10): 70.94%
================================================================================
