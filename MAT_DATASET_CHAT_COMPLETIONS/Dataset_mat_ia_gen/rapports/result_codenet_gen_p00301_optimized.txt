================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
w = int(input())
res = []
while w != 0:
    r = w % 3
    w //= 3
    if r == 2:
        r = -1
        w += 1
    res.append('0' if r == 0 else '+' if r == 1 else '-')
print(''.join(res[::-1]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'w' (ID: 86)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005326143000274897
    2. '(w' → logprob: -5.880326271057129
    3. 'w' → logprob: -6.255326271057129
    4. '('' → logprob: -8.005326271057129
    5. '```' → logprob: -10.005326271057129
    6. '("("' → logprob: -10.255326271057129
    7. '(
' → logprob: -10.380326271057129
    8. '[' → logprob: -10.505326271057129
    9. '(`' → logprob: -11.380326271057129
    10. '("' → logprob: -11.380326271057129

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10100632160902023
    2. ')' → logprob: -2.601006269454956
    3. '()' → logprob: -4.476006507873535
    4. '('' → logprob: -6.351006507873535
    5. '())' → logprob: -6.601006507873535
    6. ''' → logprob: -6.726006507873535
    7. '`' → logprob: -6.851006507873535
    8. '("("' → logprob: -6.851006507873535
    9. '(()' → logprob: -6.976006507873535
    10. '```' → logprob: -7.101006507873535

Token 5: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7730590105056763
    2. '+' → logprob: -1.1480590105056763
    3. '*' → logprob: -2.1480588912963867
    4. '\n' → logprob: -3.7730588912963867
    5. '%' → logprob: -4.023058891296387
    6. ' if' → logprob: -4.148058891296387
    7. 'i' → logprob: -4.148058891296387
    8. 's' → logprob: -4.648058891296387
    9. 'for' → logprob: -6.023058891296387
    10. 'n' → logprob: -6.023058891296387

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47605079412460327
    2. ' =' → logprob: -1.726050853729248
    3. 'ult' → logprob: -2.226050853729248
    4. 'u' → logprob: -2.851050853729248
    5. '+' → logprob: -4.601050853729248
    6. '.' → logprob: -5.476050853729248
    7. 'ul' → logprob: -5.601050853729248
    8. ' ' → logprob: -5.851050853729248
    9. '[' → logprob: -5.851050853729248
    10. '_' → logprob: -5.851050853729248

Token 7: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6679871082305908
    2. 'w' → logprob: -1.0429871082305908
    3. ' w' → logprob: -2.792987108230591
    4. ' ' → logprob: -2.917987108230591
    5. '"' → logprob: -4.667986869812012
    6. '1' → logprob: -5.292986869812012
    7. ''' → logprob: -5.542986869812012
    8. ' []' → logprob: -8.542986869812012
    9. '[]' → logprob: -8.667986869812012
    10. '100' → logprob: -9.167986869812012

Token 8: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013445195509120822
    2. ' for' → logprob: -7.001344680786133
    3. '\n' → logprob: -9.001344680786133
    4. '
' → logprob: -9.376344680786133
    5. '_' → logprob: -10.126344680786133
    6. '```' → logprob: -10.376344680786133
    7. 'f' → logprob: -10.501344680786133
    8. 'w' → logprob: -10.626344680786133
    9. 'i' → logprob: -10.626344680786133
    10. '(' → logprob: -11.751344680786133

Token 9: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07977194339036942
    2. 'w' → logprob: -2.5797719955444336
    3. ' ' → logprob: -7.329771995544434
    4. ' True' → logprob: -9.079771995544434
    5. 'True' → logprob: -9.954771995544434
    6. ' not' → logprob: -10.579771995544434
    7. ' ' → logprob: -10.829771995544434
    8. '_' → logprob: -12.329771995544434
    9. ' len' → logprob: -12.579771995544434
    10. 'len' → logprob: -13.329771995544434

Token 10: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3724459409713745
    2. '>' → logprob: -1.3724459409713745
    3. ' >=' → logprob: -3.122446060180664
    4. '>=' → logprob: -5.122446060180664
    5. '%' → logprob: -5.372446060180664
    6. ' <' → logprob: -6.872446060180664
    7. ' %' → logprob: -6.997446060180664
    8. ' <=' → logprob: -7.622446060180664
    9. ' ' → logprob: -8.997446060180664
    10. '<' → logprob: -9.372446060180664

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5783706307411194
    2. '0' → logprob: -0.8283706307411194
    3. '1' → logprob: -6.328370571136475
    4. '20' → logprob: -8.328371047973633
    5. '2' → logprob: -9.078371047973633
    6. '40' → logprob: -9.578371047973633
    7. '32' → logprob: -10.078371047973633
    8. '18' → logprob: -10.953371047973633
    9. '10' → logprob: -10.953371047973633
    10. ''' → logprob: -11.078371047973633

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018090005964040756
    2. ' ' → logprob: -4.143089771270752
    3. '1' → logprob: -6.393089771270752
    4. '2' → logprob: -8.76809024810791
    5. ''' → logprob: -9.89309024810791
    6. '20' → logprob: -10.39309024810791
    7. '4' → logprob: -10.64309024810791
    8. '10' → logprob: -10.76809024810791
    9. '40' → logprob: -11.14309024810791
    10. '18' → logprob: -11.64309024810791

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018065694894175977
    2. ':
' → logprob: -8.7501802444458
    3. ' :' → logprob: -12.0001802444458
    4. ':**' → logprob: -12.1251802444458
    5. '':'' → logprob: -12.6251802444458
    6. '':' → logprob: -13.0001802444458
    7. '):' → logprob: -13.6251802444458
    8. ':w' → logprob: -14.7501802444458
    9. '":"' → logprob: -14.7501802444458
    10. '>:' → logprob: -14.7501802444458

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2320396453142166
    2. ' ' → logprob: -2.2320396900177
    3. ' 
' → logprob: -2.8570396900177
    4. ' w' → logprob: -4.607039451599121
    5. '```' → logprob: -4.607039451599121
    6. '    
' → logprob: -4.982039451599121
    7. '    ' → logprob: -5.482039451599121
    8. 'w' → logprob: -6.357039451599121
    9. '\' → logprob: -6.357039451599121
    10. '\n' → logprob: -6.607039451599121

Token 15: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8124236464500427
    2. ' n' → logprob: -1.3124237060546875
    3. '```' → logprob: -2.3124237060546875
    4. ' ```' → logprob: -2.5624237060546875
    5. ' ' → logprob: -3.1874237060546875
    6. ' w' → logprob: -4.5624237060546875
    7. 'n' → logprob: -4.6874237060546875
    8. ' if' → logprob: -4.8124237060546875
    9. ' s' → logprob: -4.9374237060546875
    10. ' x' → logprob: -5.4374237060546875

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037250589579343796
    2. ' ' → logprob: -4.412250518798828
    3. 'es' → logprob: -4.412250518798828
    4. ',' → logprob: -5.287250518798828
    5. '=' → logprob: -5.287250518798828
    6. '=int' → logprob: -7.787250518798828
    7. 'em' → logprob: -7.912250518798828
    8. 'esize' → logprob: -8.412250518798828
    9. 'e' → logprob: -8.787250518798828
    10. 'ema' → logprob: -8.912250518798828

Token 17: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7403774261474609
    2. 'w' → logprob: -1.240377426147461
    3. 'int' → logprob: -1.740377426147461
    4. ' int' → logprob: -2.865377426147461
    5. ' min' → logprob: -7.990377426147461
    6. ' ' → logprob: -8.115377426147461
    7. 'min' → logprob: -8.240377426147461
    8. '0' → logprob: -8.615377426147461
    9. ' input' → logprob: -10.365377426147461
    10. '(int' → logprob: -10.615377426147461

Token 18: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11345881223678589
    2. '%' → logprob: -2.2384588718414307
    3. ' ' → logprob: -7.738458633422852
    4. ' //' → logprob: -9.488458633422852
    5. '```' → logprob: -10.613458633422852
    6. '**' → logprob: -10.738458633422852
    7. ' **' → logprob: -11.488458633422852
    8. ' *' → logprob: -11.613458633422852
    9. '*' → logprob: -11.613458633422852
    10. '-' → logprob: -11.738458633422852

Token 19: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4660477936267853
    2. '2' → logprob: -1.966047763824463
    3. '5' → logprob: -2.716047763824463
    4. '7' → logprob: -2.841047763824463
    5. '3' → logprob: -3.091047763824463
    6. '60' → logprob: -3.966047763824463
    7. '4' → logprob: -4.466047763824463
    8. '6' → logprob: -4.966047763824463
    9. '8' → logprob: -5.216047763824463
    10. '100' → logprob: -5.591047763824463

Token 20: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.39058494567871094
    2. '2' → logprob: -1.640584945678711
    3. '3' → logprob: -3.140584945678711
    4. '5' → logprob: -3.515584945678711
    5. '7' → logprob: -3.640584945678711
    6. '4' → logprob: -4.640584945678711
    7. '8' → logprob: -5.515584945678711
    8. '6' → logprob: -5.640584945678711
    9. '16' → logprob: -5.890584945678711
    10. '9' → logprob: -6.265584945678711

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '   ' (ID: 271)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1755780279636383
    2. ' w' → logprob: -2.5505781173706055
    3. ' ' → logprob: -2.9255781173706055
    4. '```' → logprob: -4.6755781173706055
    5. ' 
' → logprob: -5.1755781173706055
    6. '<|end|>' → logprob: -5.9255781173706055
    7. '\' → logprob: -6.0505781173706055
    8. '     
' → logprob: -6.0505781173706055
    9. '   
' → logprob: -6.4255781173706055
    10. '   ' → logprob: -6.9255781173706055

Token 23: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.11466290056705475
    2. ' w' → logprob: -2.2396628856658936
    3. '```' → logprob: -7.364663124084473
    4. ' ' → logprob: -7.614663124084473
    5. '     
' → logprob: -8.489663124084473
    6. ' ```' → logprob: -9.364663124084473
    7. '    ' → logprob: -9.614663124084473
    8. '_' → logprob: -9.739663124084473
    9. '`' → logprob: -9.739663124084473
    10. ' res' → logprob: -10.239663124084473

Token 24: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5370796322822571
    2. ' =' → logprob: -1.2870795726776123
    3. '//=' → logprob: -2.5370795726776123
    4. ' /=' → logprob: -3.0370795726776123
    5. ' //' → logprob: -5.537079811096191
    6. ' ' → logprob: -6.162079811096191
    7. '/=' → logprob: -6.162079811096191
    8. '/' → logprob: -6.412079811096191
    9. ' /' → logprob: -7.287079811096191
    10. '//' → logprob: -7.662079811096191

Token 25: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0280383548888494e-06
    2. '3' → logprob: -15.000000953674316
    3. '=}' → logprob: -15.375000953674316
    4. ' =' → logprob: -16.125001907348633
    5. '=*/' → logprob: -16.625001907348633
    6. '='' → logprob: -16.875001907348633
    7. '=:' → logprob: -17.500001907348633
    8. '=int' → logprob: -17.750001907348633
    9. '2' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.375001907348633

Token 26: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.251032829284668
    4. '```' → logprob: -16.251033782958984
    5. ' ' → logprob: -17.001033782958984
    6. '  ' → logprob: -17.251033782958984
    7. '`' → logprob: -17.876033782958984
    8. '=' → logprob: -18.376033782958984
    9. '    ' → logprob: -18.438533782958984
    10. '۳' → logprob: -18.501033782958984

Token 27: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.625011444091797
    4. '   ' → logprob: -18.000011444091797
    5. '`' → logprob: -19.250011444091797
    6. '  ' → logprob: -19.625011444091797
    7. '³' → logprob: -19.750011444091797
    8. '۳' → logprob: -19.750011444091797
    9. ' ' → logprob: -20.250011444091797
    10. '٣' → logprob: -20.250011444091797

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10948321968317032
    2. 'res' → logprob: -3.484483242034912
    3. ' res' → logprob: -3.609483242034912
    4. '<|end|>' → logprob: -4.109483242034912
    5. '    
' → logprob: -4.484483242034912
    6. '
' → logprob: -4.484483242034912
    7. '```' → logprob: -5.859483242034912
    8. '  ' → logprob: -7.484483242034912
    9. '  
' → logprob: -7.609483242034912
    10. ' 
' → logprob: -7.734483242034912

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22606247663497925
    2. 'res' → logprob: -2.226062536239624
    3. ' res' → logprob: -2.601062536239624
    4. '<|end|>' → logprob: -4.726062297821045
    5. '```' → logprob: -4.976062297821045
    6. '    
' → logprob: -6.476062297821045
    7. '``' → logprob: -6.851062297821045
    8. '
' → logprob: -7.601062297821045
    9. ' ' → logprob: -8.226062774658203
    10. ' 
' → logprob: -8.351062774658203

Token 30: ' if' (ID: 538)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.28401103615760803
    2. 'res' → logprob: -1.4090110063552856
    3. '   ' → logprob: -6.034010887145996
    4. ' if' → logprob: -8.159010887145996
    5. 'if' (adapté à ' if') → logprob: -10.034010887145996
    6. '```' → logprob: -10.284010887145996
    7. ' ' → logprob: -10.784010887145996
    8. ' ' → logprob: -11.159010887145996
    9. '	res' → logprob: -11.534010887145996
    10. '  ' → logprob: -11.784010887145996

Token 31: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0061034588143229485
    2. 'r' → logprob: -5.256103515625
    3. ' ' → logprob: -7.131103515625
    4. ' w' → logprob: -10.506103515625
    5. ' res' → logprob: -10.881103515625
    6. ' ' → logprob: -11.256103515625
    7. ' (' → logprob: -13.006103515625
    8. 'w' → logprob: -13.381103515625
    9. ' not' → logprob: -13.381103515625
    10. '  ' → logprob: -13.631103515625

Token 32: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7042111158370972
    2. ' ==' → logprob: -0.7042111158370972
    3. ' !=' → logprob: -5.579211235046387
    4. '!=' → logprob: -6.079211235046387
    5. '=' → logprob: -6.204211235046387
    6. ' ' → logprob: -6.454211235046387
    7. '>' → logprob: -7.704211235046387
    8. ' >' → logprob: -7.829211235046387
    9. ' =' → logprob: -9.079211235046387
    10. ':' → logprob: -9.579211235046387

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5226849913597107
    2. '2' → logprob: -1.0226850509643555
    3. '0' → logprob: -3.5226850509643555
    4. '1' → logprob: -4.0226850509643555
    5. ' -' → logprob: -11.710185050964355
    6. '-' → logprob: -12.272685050964355
    7. '=' → logprob: -13.272685050964355
    8. ' ' → logprob: -13.835185050964355
    9. '```' → logprob: -14.147685050964355
    10. '<|end|>' → logprob: -14.835185050964355

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17041808366775513
    2. '0' → logprob: -2.2954180240631104
    3. ' ' → logprob: -3.0454180240631104
    4. '1' → logprob: -4.7954182624816895
    5. '-' → logprob: -9.545417785644531
    6. ' -' → logprob: -11.420417785644531
    7. '```' → logprob: -11.795417785644531
    8. '   ' → logprob: -12.107917785644531
    9. '  ' → logprob: -12.795417785644531
    10. '	' → logprob: -12.982917785644531

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005243718158453703
    2. ':
' → logprob: -5.88024377822876
    3. ' :' → logprob: -6.13024377822876
    4. '+' → logprob: -10.005243301391602
    5. ' :
' → logprob: -10.130243301391602
    6. '-' → logprob: -10.380243301391602
    7. ' or' → logprob: -10.505243301391602
    8. '1' → logprob: -10.755243301391602
    9. 'w' → logprob: -11.130243301391602
    10. '   ' → logprob: -11.380243301391602

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6088343262672424
    2. '       ' → logprob: -1.3588342666625977
    3. ' ' → logprob: -2.8588342666625977
    4. '1' → logprob: -3.3588342666625977
    5. '    ' → logprob: -3.7338342666625977
    6. ' r' → logprob: -3.8588342666625977
    7. '-' → logprob: -4.233834266662598
    8. ' res' → logprob: -4.233834266662598
    9. ' -' → logprob: -5.483834266662598
    10. '0' → logprob: -5.483834266662598

Token 37: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4523226320743561
    2. ' res' → logprob: -1.5773226022720337
    3. ' ' → logprob: -3.2023227214813232
    4. ' w' → logprob: -3.3273227214813232
    5. 'r' (adapté à ' r') → logprob: -3.7023227214813232
    6. ' -' → logprob: -4.327322483062744
    7. '-' → logprob: -4.577322483062744
    8. '1' → logprob: -4.702322483062744
    9. 'res' → logprob: -4.827322483062744
    10. '   ' → logprob: -5.202322483062744

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5375162959098816
    2. '=' → logprob: -0.9125162959098816
    3. ' -=' → logprob: -5.037516117095947
    4. '-=' → logprob: -5.037516117095947
    5. '+=' → logprob: -7.412516117095947
    6. '-' → logprob: -8.037516593933105
    7. ' +=' → logprob: -8.537516593933105
    8. '=-' → logprob: -8.787516593933105
    9. ' -' → logprob: -10.787516593933105
    10. ' ' → logprob: -12.162516593933105

Token 39: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025773211382329464
    2. ' -' → logprob: -6.002577304840088
    3. '1' → logprob: -10.002577781677246
    4. '0' → logprob: -10.252577781677246
    5. ' ' → logprob: -12.377577781677246
    6. '   ' → logprob: -12.752577781677246
    7. '=' → logprob: -12.752577781677246
    8. '−' → logprob: -13.127577781677246
    9. '-=' → logprob: -13.252577781677246
    10. '=-' → logprob: -13.252577781677246

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.750001907348633
    4. '-' → logprob: -19.375001907348633
    5. '  ' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.000001907348633
    7. '2' → logprob: -20.250001907348633
    8. ' -' → logprob: -20.250001907348633
    9. '۱' → logprob: -20.500001907348633
    10. '１' → logprob: -20.625001907348633

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003976528067141771
    2. ' res' → logprob: -6.628976345062256
    3. '    
' → logprob: -7.378976345062256
    4. 'res' → logprob: -7.378976345062256
    5. '       ' → logprob: -8.253976821899414
    6. ',' → logprob: -8.503976821899414
    7. '  ' → logprob: -8.628976821899414
    8. '<|end|>' → logprob: -9.003976821899414
    9. ' ' → logprob: -9.128976821899414
    10. '    ' → logprob: -9.128976821899414

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13489829003810883
    2. 'res' → logprob: -2.5098981857299805
    3. ' res' → logprob: -3.1348981857299805
    4. '```' → logprob: -7.7598981857299805
    5. '    
' → logprob: -8.25989818572998
    6. '<|end|>' → logprob: -9.00989818572998
    7. '       ' → logprob: -9.13489818572998
    8. '
' → logprob: -9.13489818572998
    9. '  ' → logprob: -9.88489818572998
    10. ' and' → logprob: -10.00989818572998

Token 43: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.06281785666942596
    2. ' w' → logprob: -2.8128178119659424
    3. '   ' → logprob: -7.4378180503845215
    4. '1' → logprob: -9.312817573547363
    5. '```' → logprob: -9.812817573547363
    6. 'res' → logprob: -10.437817573547363
    7. '       ' → logprob: -10.687817573547363
    8. ' res' → logprob: -10.687817573547363
    9. ' ' → logprob: -10.812817573547363
    10. '    ' → logprob: -12.562817573547363

Token 44: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018285147845745087
    2. ' +=' → logprob: -4.268285274505615
    3. '+' → logprob: -5.518285274505615
    4. ']+=' → logprob: -10.768284797668457
    5. '```' → logprob: -10.768284797668457
    6. '+++' → logprob: -11.018284797668457
    7. '<|end|>' → logprob: -11.143284797668457
    8. '=' → logprob: -11.893284797668457
    9. '   ' → logprob: -12.143284797668457
    10. '++' → logprob: -12.518284797668457

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.125001907348633
    6. '  ' → logprob: -18.750001907348633
    7. '１' → logprob: -19.875001907348633
    8. '۱' → logprob: -19.937501907348633
    9. '...' → logprob: -20.250001907348633
    10. '+' → logprob: -20.312501907348633

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -17.625
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -19.75
    6. '  ' → logprob: -19.75
    7. '۱' → logprob: -20.25
    8. '１' → logprob: -20.375
    9. '१' → logprob: -21.125
    10. '১' → logprob: -21.25

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1485958844423294
    2. ' res' → logprob: -2.2735958099365234
    3. 'res' → logprob: -3.3985958099365234
    4. ' ' → logprob: -7.273595809936523
    5. '  ' → logprob: -7.898595809936523
    6. '<|end|>' → logprob: -8.398595809936523
    7. '	res' → logprob: -9.023595809936523
    8. '    
' → logprob: -9.273595809936523
    9. '```' → logprob: -9.273595809936523
    10. '       ' → logprob: -11.023595809936523

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09998557716608047
    2. ' res' → logprob: -2.7249855995178223
    3. 'res' → logprob: -3.5999855995178223
    4. '```' → logprob: -6.224985599517822
    5. '``' → logprob: -8.849985122680664
    6. '	res' → logprob: -10.349985122680664
    7. ' ' → logprob: -10.599985122680664
    8. '  ' → logprob: -10.724985122680664
    9. '       ' → logprob: -11.099985122680664
    10. '`' → logprob: -11.099985122680664

Token 49: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.47735902667045593
    2. 'res' (adapté à ' res') → logprob: -0.9773590564727783
    3. '   ' → logprob: -5.727358818054199
    4. '```' → logprob: -11.4773588180542
    5. '	res' → logprob: -12.1023588180542
    6. ' ' → logprob: -13.1023588180542
    7. '``' → logprob: -14.2273588180542
    8. '  ' → logprob: -14.3523588180542
    9. '_res' → logprob: -14.6023588180542
    10. '`' → logprob: -15.1023588180542

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007199380779638886
    2. '.' → logprob: -7.250720024108887
    3. '.app' → logprob: -12.500720024108887
    4. 'append' → logprob: -12.750720024108887
    5. '.ap' → logprob: -13.250720024108887
    6. ' .' → logprob: -14.875720024108887
    7. '.push' → logprob: -15.125720024108887
    8. '.extend' → logprob: -15.625720024108887
    9. '.insert' → logprob: -15.750720024108887
    10. '​.' → logprob: -15.875720024108887

Token 51: '('' (ID: 706)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.26502519845962524
    2. '(str' → logprob: -1.5150251388549805
    3. '(chr' → logprob: -4.3900251388549805
    4. '(' → logprob: -7.7650251388549805
    5. '((' → logprob: -9.14002513885498
    6. '('' → logprob: -10.01502513885498
    7. '(abs' → logprob: -11.51502513885498
    8. '("("' → logprob: -11.89002513885498
    9. 'str' → logprob: -12.39002513885498
    10. 'chr' → logprob: -12.64002513885498

Token 52: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04542868211865425
    2. '1' → logprob: -4.04542875289917
    3. ''-' → logprob: -4.67042875289917
    4. '+' → logprob: -5.17042875289917
    5. 'T' → logprob: -6.04542875289917
    6. '2' → logprob: -6.17042875289917
    7. '-'' → logprob: -6.29542875289917
    8. '=' → logprob: -6.42042875289917
    9. '+-' → logprob: -7.17042875289917
    10. '-=' → logprob: -7.42042875289917

Token 53: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3109050989151001
    2. '')' → logprob: -2.4359049797058105
    3. '+' → logprob: -2.5609049797058105
    4. '+-' → logprob: -3.1859049797058105
    5. ''+' → logprob: -4.3109049797058105
    6. ' +' → logprob: -4.4359049797058105
    7. '0' → logprob: -4.8109049797058105
    8. ' '' → logprob: -5.3109049797058105
    9. '-' → logprob: -5.3109049797058105
    10. '+'' → logprob: -5.8109049797058105

Token 54: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29804375767707825
    2. '+r' → logprob: -2.548043727874756
    3. ' +' → logprob: -2.673043727874756
    4. ' if' → logprob: -3.048043727874756
    5. 'if' → logprob: -3.173043727874756
    6. ''+' → logprob: -5.048043727874756
    7. ''' → logprob: -5.173043727874756
    8. '+-' → logprob: -5.673043727874756
    9. ')' → logprob: -6.798043727874756
    10. '')' → logprob: -6.923043727874756

Token 55: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.018204733729362488
    2. 'r' → logprob: -4.018204689025879
    3. ' ' → logprob: -10.018204689025879
    4. ')' → logprob: -13.018204689025879
    5. '<|end|>' → logprob: -13.018204689025879
    6. '  ' → logprob: -13.768204689025879
    7. ' not' → logprob: -14.518204689025879
    8. '    ' → logprob: -14.518204689025879
    9. ' ' → logprob: -14.643204689025879
    10. ' )' → logprob: -14.768204689025879

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.637188732624054
    2. '==' → logprob: -0.762188732624054
    3. '=' → logprob: -5.637188911437988
    4. ' ' → logprob: -7.887188911437988
    5. ')' → logprob: -8.637188911437988
    6. '=='' → logprob: -8.887188911437988
    7. '-' → logprob: -9.387188911437988
    8. '==-' → logprob: -10.137188911437988
    9. '>' → logprob: -10.262188911437988
    10. ' =' → logprob: -10.262188911437988

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2023695856332779
    2. ' ' → logprob: -1.7023695707321167
    3. '-' → logprob: -7.077369689941406
    4. ' -' → logprob: -9.327369689941406
    5. '1' → logprob: -11.577369689941406
    6. ''' → logprob: -12.577369689941406
    7. '  ' → logprob: -12.702369689941406
    8. ')' → logprob: -13.327369689941406
    9. ' '' → logprob: -13.639869689941406
    10. '   ' → logprob: -13.827369689941406

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006691903108730912
    2. ' ' → logprob: -7.500669002532959
    3. '-' → logprob: -9.125669479370117
    4. '1' → logprob: -12.000669479370117
    5. ' -' → logprob: -14.625669479370117
    6. ')' → logprob: -15.000669479370117
    7. ''' → logprob: -16.563169479370117
    8. '  ' → logprob: -16.750669479370117
    9. '```' → logprob: -16.750669479370117
    10. '2' → logprob: -17.375669479370117

Token 59: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.43973952531814575
    2. ' else' → logprob: -1.064739465713501
    3. 'elif' → logprob: -4.56473970413208
    4. ' ' → logprob: -8.189739227294922
    5. ' elif' → logprob: -8.564739227294922
    6. '   ' → logprob: -10.564739227294922
    7. 'el' → logprob: -10.689739227294922
    8. '
' → logprob: -10.814739227294922
    9. '```' → logprob: -11.814739227294922
    10. '  ' → logprob: -12.439739227294922

Token 60: ' '+'' (ID: 137356)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.533710241317749
    2. ''' → logprob: -1.283710241317749
    3. ' '-'' → logprob: -2.408710241317749
    4. ' '' → logprob: -3.158710241317749
    5. ' '+'' → logprob: -7.033710479736328
    6. '('' → logprob: -7.033710479736328
    7. '('-' → logprob: -7.158710479736328
    8. ' ('' → logprob: -8.533710479736328
    9. '(' → logprob: -8.658710479736328
    10. ''T' → logprob: -8.783710479736328

Token 61: ' if' (ID: 538)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22761589288711548
    2. ''-' → logprob: -1.9776158332824707
    3. 'if' → logprob: -3.1026158332824707
    4. ' '+'' → logprob: -4.977615833282471
    5. ' '-'' → logprob: -5.852615833282471
    6. ' if' → logprob: -5.977615833282471
    7. 'elif' → logprob: -6.352615833282471
    8. ''*' → logprob: -6.852615833282471
    9. 'else' → logprob: -6.977615833282471
    10. ''s' → logprob: -7.352615833282471

Token 62: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.14312909543514252
    2. 'r' → logprob: -2.0181291103363037
    3. ' ' → logprob: -7.768128871917725
    4. '  ' → logprob: -11.518129348754883
    5. '1' → logprob: -11.893129348754883
    6. ' (' → logprob: -12.018129348754883
    7. '   ' → logprob: -12.643129348754883
    8. '(r' → logprob: -13.643129348754883
    9. '<|end|>' → logprob: -14.643129348754883
    10. '    ' → logprob: -14.768129348754883

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3487623929977417
    2. ' ==' → logprob: -1.2237623929977417
    3. ' else' → logprob: -9.098762512207031
    4. ' ' → logprob: -9.473762512207031
    5. '>' → logprob: -10.348762512207031
    6. '=='' → logprob: -10.973762512207031
    7. ' >' → logprob: -11.223762512207031
    8. '<|end|>' → logprob: -11.473762512207031
    9. '==-' → logprob: -11.598762512207031
    10. 'else' → logprob: -11.973762512207031

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34891414642333984
    2. ' ' → logprob: -1.2239141464233398
    3. '+' → logprob: -8.72391414642334
    4. '-' → logprob: -8.84891414642334
    5. ' -' → logprob: -9.22391414642334
    6. ' +' → logprob: -10.22391414642334
    7. '  ' → logprob: -11.84891414642334
    8. '<|end|>' → logprob: -11.91141414642334
    9. ')' → logprob: -12.91141414642334
    10. '   ' → logprob: -13.34891414642334

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021129087544977665
    2. ' ' → logprob: -6.252112865447998
    3. '-' → logprob: -8.627113342285156
    4. '+' → logprob: -12.627113342285156
    5. ' -' → logprob: -13.877113342285156
    6. '  ' → logprob: -15.127113342285156
    7. '2' → logprob: -15.252113342285156
    8. '0' → logprob: -16.252113342285156
    9. '   ' → logprob: -16.564613342285156
    10. '```' → logprob: -16.689613342285156

Token 66: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2520572245121002
    2. 'else' → logprob: -1.5020571947097778
    3. ')' → logprob: -9.252057075500488
    4. ' ' → logprob: -11.627057075500488
    5. '	else' → logprob: -11.752057075500488
    6. '')' → logprob: -11.877057075500488
    7. '   ' → logprob: -13.377057075500488
    8. ''' → logprob: -13.627057075500488
    9. '```' → logprob: -14.377057075500488
    10. ' )' → logprob: -14.377057075500488

Token 67: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0031907858792692423
    2. ' '-')' → logprob: -5.878190994262695
    3. ''' → logprob: -8.378190994262695
    4. '-' → logprob: -9.628190994262695
    5. ' '-'' → logprob: -9.878190994262695
    6. ''\' → logprob: -11.878190994262695
    7. '   ' → logprob: -12.128190994262695
    8. ' ' → logprob: -12.253190994262695
    9. ' '-' → logprob: -12.628190994262695
    10. '"-' → logprob: -12.628190994262695

Token 68: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.18068617582321167
    2. ''' → logprob: -1.8056862354278564
    3. '''' → logprob: -7.555685997009277
    4. ')' → logprob: -8.555685997009277
    5. '1' → logprob: -9.180685997009277
    6. '')
' → logprob: -9.305685997009277
    7. '"' → logprob: -11.680685997009277
    8. ''''' → logprob: -12.180685997009277
    9. '')

' → logprob: -12.305685997009277
    10. '\'' → logprob: -12.805685997009277

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9023652076721191
    2. 'res' → logprob: -1.0273652076721191
    3. '
' → logprob: -1.9023652076721191
    4. 'for' → logprob: -3.027365207672119
    5. '\n' → logprob: -4.902365207672119
    6. 'if' → logprob: -5.277365207672119
    7. '[::-' → logprob: -5.527365207672119
    8. '```' → logprob: -5.527365207672119
    9. 'w' → logprob: -5.652365207672119
    10. 'while' → logprob: -6.402365207672119

Token 70: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07976148277521133
    2. '(' → logprob: -2.579761505126953
    3. '("' → logprob: -7.579761505126953
    4. '("("' → logprob: -8.829761505126953
    5. '(res' → logprob: -9.079761505126953
    6. '(*' → logprob: -9.579761505126953
    7. '(('' → logprob: -12.079761505126953
    8. '(len' → logprob: -12.079761505126953
    9. '(',' → logprob: -12.454761505126953
    10. '(
' → logprob: -13.329761505126953

Token 71: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0032689759973436594
    2. ''.' → logprob: -6.003269195556641
    3. ' ''.' → logprob: -8.37826919555664
    4. ''' → logprob: -8.62826919555664
    5. '''' → logprob: -8.87826919555664
    6. '.' → logprob: -9.62826919555664
    7. '"' → logprob: -9.75326919555664
    8. '```' → logprob: -10.25326919555664
    9. '('' → logprob: -10.37826919555664
    10. 'join' → logprob: -10.62826919555664

Token 72: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.372294698550832e-06
    2. 'jo' → logprob: -11.875009536743164
    3. ' join' → logprob: -13.625009536743164
    4. 'j' → logprob: -13.750009536743164
    5. 'reverse' → logprob: -16.875009536743164
    6. '```' → logprob: -17.375009536743164
    7. 'strip' → logprob: -18.000009536743164
    8. '''.' → logprob: -19.000009536743164
    9. 'print' → logprob: -19.625009536743164
    10. 'concat' → logprob: -20.125009536743164

Token 73: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0017058902885764837
    2. '(re' → logprob: -6.501706123352051
    3. 'res' → logprob: -8.50170612335205
    4. 're' → logprob: -15.62670612335205
    5. '(' → logprob: -16.126705169677734
    6. '	res' → logprob: -17.626705169677734
    7. ' res' → logprob: -17.626705169677734
    8. ' (' → logprob: -17.751705169677734
    9. '(reverse' → logprob: -17.876705169677734
    10. '(list' → logprob: -18.126705169677734

Token 74: '[::-' (ID: 159890)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06842910498380661
    2. ')' → logprob: -3.1934289932250977
    3. '[::-' → logprob: -3.6934289932250977
    4. ')[' → logprob: -8.693428993225098
    5. '))
' → logprob: -10.943428993225098
    6. '[' → logprob: -11.443428993225098
    7. '.reverse' → logprob: -11.443428993225098
    8. '[]' → logprob: -12.568428993225098
    9. ')))' → logprob: -12.693428993225098
    10. ')
' → logprob: -13.068428993225098

Token 75: '1' (ID: 16)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.0030746459960938
    2. ']))' → logprob: -1.2530746459960938
    3. 'ex' → logprob: -1.6280746459960938
    4. '))' → logprob: -2.3780746459960938
    5. 'join' → logprob: -4.878074645996094
    6. 'r' → logprob: -5.253074645996094
    7. ']))
' → logprob: -5.378074645996094
    8. '']))' → logprob: -5.378074645996094
    9. ')])' → logprob: -5.503074645996094
    10. ''))' → logprob: -5.628074645996094

Token 76: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03820592910051346
    2. ')' → logprob: -3.288205862045288
    3. ')))' → logprob: -8.913206100463867
    4. '])' → logprob: -11.163206100463867
    5. ']))' → logprob: -11.913206100463867
    6. '))
' → logprob: -12.788206100463867
    7. '()))' → logprob: -13.413206100463867
    8. ''))' → logprob: -13.663206100463867
    9. ' ))' → logprob: -14.413206100463867
    10. ')])' → logprob: -14.413206100463867


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 41.89%
Précision adaptée (1ère position): 44.59%
Précision (top 10): 82.43%
================================================================================
