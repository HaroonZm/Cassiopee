================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
dist = [0] * (n)
for i in range(1, n):
    dist[i] = int(input())
prefix = [0] * (n+1)
for i in range(1, n+1):
    prefix[i] = prefix[i-1]
    if i < n:
        prefix[i] += dist[i]
pos = 1
mod = 10**5
total = 0
for _ in range(m):
    a = int(input())
    start = pos
    end = pos + a
    if start <= end:
        distance = prefix[end] - prefix[start]
    else:
        distance = prefix[start] - prefix[end]
    total += distance
    total %= mod
    pos = end
print(total % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.216105654835701
    2. ',' → logprob: -2.2161056995391846
    3. ' =' → logprob: -2.4661056995391846
    4. ' ' → logprob: -9.216105461120605
    5. ')' → logprob: -9.966105461120605
    6. ' ,' → logprob: -10.216105461120605
    7. ';' → logprob: -10.466105461120605
    8. '[' → logprob: -10.716105461120605
    9. '.' → logprob: -10.841105461120605
    10. ''' → logprob: -10.841105461120605

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5809993743896484
    2. ' map' → logprob: -1.0809993743896484
    3. ' input' → logprob: -3.0809993743896484
    4. 'map' → logprob: -3.5809993743896484
    5. 'input' → logprob: -4.580999374389648
    6. '0' → logprob: -5.080999374389648
    7. ' n' → logprob: -5.205999374389648
    8. ' int' → logprob: -6.080999374389648
    9. '10' → logprob: -6.205999374389648
    10. '1' → logprob: -7.955999374389648

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09948127716779709
    2. '<|end|>' → logprob: -2.5994813442230225
    3. '```' → logprob: -4.724481105804443
    4. '(lambda' → logprob: -5.349481105804443
    5. '<|end|>' → logprob: -6.599481105804443
    6. '(user' → logprob: -7.349481105804443
    7. ')' → logprob: -7.349481105804443
    8. '[' → logprob: -7.474481105804443
    9. ' (' → logprob: -7.599481105804443
    10. 'user' → logprob: -7.849481105804443

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.037350501865148544
    2. '(' → logprob: -3.9123504161834717
    3. ')' → logprob: -4.287350654602051
    4. 'input' → logprob: -6.037350654602051
    5. '(str' → logprob: -9.41235065460205
    6. ' input' → logprob: -9.53735065460205
    7. '(int' → logprob: -9.66235065460205
    8. ',input' → logprob: -9.78735065460205
    9. '=input' → logprob: -9.91235065460205
    10. '(raw' → logprob: -10.16235065460205

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25231218338012695
    2. ' input' → logprob: -1.502312183380127
    3. '(input' → logprob: -7.877312183380127
    4. ',input' → logprob: -13.252311706542969
    5. ')' → logprob: -14.502311706542969
    6. '=input' → logprob: -14.877311706542969
    7. '<input' → logprob: -15.252311706542969
    8. ' ' → logprob: -15.377311706542969
    9. '[input' → logprob: -15.502311706542969
    10. '```' → logprob: -15.627311706542969

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0473259687423706
    2. '())' → logprob: -1.1723259687423706
    3. '()' → logprob: -1.7973259687423706
    4. ')' → logprob: -2.17232608795166
    5. '```' → logprob: -4.67232608795166
    6. '('' → logprob: -4.79732608795166
    7. '(token' → logprob: -5.04732608795166
    8. '`()' → logprob: -5.29732608795166
    9. '(""))' → logprob: -5.67232608795166
    10. '`)' → logprob: -5.79732608795166

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005641150055453181
    2. 'strip' → logprob: -7.500564098358154
    3. 'rstrip' → logprob: -12.375564575195312
    4. ')' → logprob: -12.500564575195312
    5. ' split' → logprob: -13.375564575195312
    6. 'read' → logprob: -13.625564575195312
    7. '(split' → logprob: -15.125564575195312
    8. 'spl' → logprob: -16.500564575195312
    9. 'startswith' → logprob: -17.875564575195312
    10. 'replace' → logprob: -17.875564575195312

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013969681225717068
    2. '())' → logprob: -4.638969898223877
    3. '))' → logprob: -5.638969898223877
    4. '(' → logprob: -8.263969421386719
    5. '()' → logprob: -8.638969421386719
    6. '`)' → logprob: -9.013969421386719
    7. '('' → logprob: -10.388969421386719
    8. '')' → logprob: -11.013969421386719
    9. '()))' → logprob: -11.013969421386719
    10. ')`' → logprob: -12.263969421386719

Token 11: 'dist' (ID: 24126)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18924707174301147
    2. 'for' → logprob: -3.0642471313476562
    3. 'x' → logprob: -3.3142471313476562
    4. '\n' → logprob: -4.064247131347656
    5. 'd' → logprob: -4.689247131347656
    6. '`' → logprob: -4.814247131347656
    7. 'r' → logprob: -4.814247131347656
    8. ',' → logprob: -4.939247131347656
    9. '#' → logprob: -5.439247131347656
    10. 's' → logprob: -5.564247131347656

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7895706295967102
    2. 'ance' → logprob: -0.7895706295967102
    3. '(' → logprob: -3.0395705699920654
    4. '_' → logprob: -3.9145705699920654
    5. 'ances' → logprob: -4.5395708084106445
    6. '[]' → logprob: -5.2895708084106445
    7. 'a' → logprob: -6.2895708084106445
    8. '=' → logprob: -6.2895708084106445
    9. 'an' → logprob: -6.4145708084106445
    10. 'ANCE' → logprob: -7.1645708084106445

Token 13: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1686066836118698
    2. '[' → logprob: -2.418606758117676
    3. ' []' → logprob: -3.668606758117676
    4. '[n' → logprob: -4.543606758117676
    5. ' [[' → logprob: -4.668606758117676
    6. '[]' → logprob: -5.043606758117676
    7. '{}' → logprob: -5.668606758117676
    8. ' {}' → logprob: -6.043606758117676
    9. ' [-' → logprob: -6.168606758117676
    10. ' [[]' → logprob: -6.293606758117676

Token 14: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.45951417088508606
    2. '-' → logprob: -1.4595141410827637
    3. '0' → logprob: -2.0845141410827637
    4. '10' → logprob: -5.334514141082764
    5. 'int' → logprob: -5.709514141082764
    6. '[]' → logprob: -7.209514141082764
    7. '[' → logprob: -7.709514141082764
    8. '-inf' → logprob: -7.709514141082764
    9. '100' → logprob: -7.834514141082764
    10. ' float' → logprob: -7.959514141082764

Token 15: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027937229722738266
    2. ' for' → logprob: -4.277937412261963
    3. ']*' → logprob: -4.652937412261963
    4. ' ]' → logprob: -6.027937412261963
    5. ',' → logprob: -6.527937412261963
    6. ']*(' → logprob: -8.652936935424805
    7. 'for' → logprob: -9.527936935424805
    8. ')' → logprob: -11.402936935424805
    9. ')]' → logprob: -12.277936935424805
    10. '.' → logprob: -12.902936935424805

Token 16: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.684487521648407
    2. 'for' → logprob: -1.5594875812530518
    3. '*' → logprob: -2.1844875812530518
    4. '+' → logprob: -2.6844875812530518
    5. ' for' → logprob: -2.6844875812530518
    6. ',' → logprob: -4.309487342834473
    7. ')' → logprob: -5.559487342834473
    8. ' +' → logprob: -5.559487342834473
    9. '0' → logprob: -5.684487342834473
    10. ']' → logprob: -5.934487342834473

Token 17: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6477890014648438
    2. '(m' → logprob: -1.6477890014648438
    3. 'm' → logprob: -2.0227890014648438
    4. 'n' → logprob: -2.1477890014648438
    5. '(' → logprob: -3.6477890014648438
    6. ' (' → logprob: -4.897789001464844
    7. ' n' → logprob: -7.147789001464844
    8. ' m' → logprob: -8.147789001464844
    9. ' ' → logprob: -8.147789001464844
    10. '100' → logprob: -8.522789001464844

Token 18: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14868126809597015
    2. 'm' → logprob: -2.023681163787842
    3. '(n' → logprob: -5.273681163787842
    4. '(m' → logprob: -7.523681163787842
    5. ' n' → logprob: -8.773681640625
    6. '(' → logprob: -9.148681640625
    7. ' (' → logprob: -10.898681640625
    8. '100' → logprob: -11.523681640625
    9. ' m' → logprob: -11.648681640625
    10. '10' → logprob: -11.898681640625

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25704044103622437
    2. '+' → logprob: -1.5070405006408691
    3. ' +' → logprob: -5.757040500640869
    4. ' )' → logprob: -6.382040500640869
    5. '-' → logprob: -9.757040023803711
    6. '*' → logprob: -9.757040023803711
    7. '+m' → logprob: -9.882040023803711
    8. '+)' → logprob: -10.757040023803711
    9. '+n' → logprob: -11.382040023803711
    10. '))' → logprob: -12.007040023803711

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11083199828863144
    2. ' for' → logprob: -2.3608319759368896
    3. '<|end|>' → logprob: -5.235832214355469
    4. 'd' → logprob: -6.985832214355469
    5. ' ' → logprob: -7.110832214355469
    6. '[' → logprob: -7.610832214355469
    7. ' 
' → logprob: -7.735832214355469
    8. '
' → logprob: -8.110832214355469
    9. '\n' → logprob: -8.110832214355469
    10. '0' → logprob: -8.485832214355469

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03956789895892143
    2. ' ' → logprob: -3.4145679473876953
    3. ' _' → logprob: -5.539567947387695
    4. 'i' → logprob: -6.414567947387695
    5. '_' → logprob: -8.414567947387695
    6. '  ' → logprob: -10.039567947387695
    7. ' range' → logprob: -10.664567947387695
    8. ' ‌' → logprob: -10.664567947387695
    9. ' ' → logprob: -12.164567947387695
    10. ' )' → logprob: -12.664567947387695

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17995575070381165
    2. 'in' → logprob: -1.8049557209014893
    3. '+' → logprob: -9.80495548248291
    4. 'n' → logprob: -9.80495548248291
    5. ' ' → logprob: -9.80495548248291
    6. 'range' → logprob: -11.30495548248291
    7. '  ' → logprob: -11.92995548248291
    8. '```' → logprob: -12.55495548248291
    9. '	in' → logprob: -12.80495548248291
    10. ')' → logprob: -12.92995548248291

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859168455004692
    2. 'range' → logprob: -3.0485916137695312
    3. ' ' → logprob: -13.423591613769531
    4. '	range' → logprob: -13.548591613769531
    5. '(range' → logprob: -13.798591613769531
    6. ' xrange' → logprob: -15.548591613769531
    7. '_range' → logprob: -16.92359161376953
    8. '  ' → logprob: -17.54859161376953
    9. '.range' → logprob: -17.67359161376953
    10. ')' → logprob: -17.79859161376953

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026576733216643333
    2. '(n' → logprob: -3.6515767574310303
    3. '(m' → logprob: -8.27657699584961
    4. ' (' → logprob: -11.40157699584961
    5. '(len' → logprob: -12.77657699584961
    6. '(i' → logprob: -13.27657699584961
    7. '(s' → logprob: -13.27657699584961
    8. '((' → logprob: -13.65157699584961
    9. '(space' → logprob: -14.65157699584961
    10. '(int' → logprob: -14.77657699584961

Token 25: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.720498263835907
    2. '1' → logprob: -1.0954983234405518
    3. 'n' → logprob: -1.7204983234405518
    4. ' n' → logprob: -9.970498085021973
    5. ' m' → logprob: -10.220498085021973
    6. '2' → logprob: -10.720498085021973
    7. '(' → logprob: -11.720498085021973
    8. ' ' → logprob: -11.720498085021973
    9. ')' → logprob: -12.470498085021973
    10. '(n' → logprob: -12.595498085021973

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029601674526929855
    2. ',n' → logprob: -3.779601573944092
    3. ' ,' → logprob: -5.279601573944092
    4. '(n' → logprob: -7.654601573944092
    5. ' n' → logprob: -7.779601573944092
    6. 'n' → logprob: -8.27960205078125
    7. ')' → logprob: -10.52960205078125
    8. ' to' → logprob: -11.02960205078125
    9. '(' → logprob: -11.52960205078125
    10. ' ' → logprob: -11.77960205078125

Token 27: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00978501234203577
    2. 'm' → logprob: -4.759785175323486
    3. ' n' → logprob: -6.759785175323486
    4. ' m' → logprob: -11.509784698486328
    5. '	n' → logprob: -16.134784698486328
    6. ')' → logprob: -16.759784698486328
    7. 'nm' → logprob: -16.759784698486328
    8. ')n' → logprob: -17.009784698486328
    9. ' ' → logprob: -17.634784698486328
    10. '1' → logprob: -18.134784698486328

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018494461255613714
    2. '):
' → logprob: -9.625185012817383
    3. ':' → logprob: -10.125185012817383
    4. ' ):' → logprob: -10.250185012817383
    5. ')' → logprob: -10.500185012817383
    6. '+' → logprob: -11.250185012817383
    7. '():' → logprob: -14.375185012817383
    8. '```' → logprob: -14.625185012817383
    9. '):
' → logprob: -14.750185012817383
    10. ']:' → logprob: -15.625185012817383

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7890527844429016
    2. ' dist' → logprob: -0.9140527844429016
    3. 'dist' → logprob: -2.664052724838257
    4. '	dist' → logprob: -3.789052724838257
    5. '```' → logprob: -4.039052963256836
    6. ' d' → logprob: -5.164052963256836
    7. 'd' → logprob: -5.289052963256836
    8. '    ' → logprob: -5.664052963256836
    9. ' ' → logprob: -5.664052963256836
    10. ' ind' → logprob: -5.914052963256836

Token 30: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.21219365298748016
    2. '   ' → logprob: -3.087193727493286
    3. ' dist' → logprob: -3.087193727493286
    4. 'j' → logprob: -3.462193727493286
    5. ' j' → logprob: -3.587193727493286
    6. 'for' → logprob: -4.587193489074707
    7. ' for' → logprob: -4.587193489074707
    8. 'd' → logprob: -5.462193489074707
    9. ' ' → logprob: -5.712193489074707
    10. 'max' → logprob: -6.212193489074707

Token 31: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16026484966278076
    2. '[i' → logprob: -1.9102648496627808
    3. '\[' → logprob: -11.78526496887207
    4. '[j' → logprob: -11.91026496887207
    5. '[...]' → logprob: -12.28526496887207
    6. '[]' → logprob: -12.28526496887207
    7. '[:]' → logprob: -12.91026496887207
    8. '[n' → logprob: -13.03526496887207
    9. '[I' → logprob: -13.53526496887207
    10. '[e' → logprob: -13.66026496887207

Token 32: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6654531359672546
    2. '=' → logprob: -1.1654531955718994
    3. ']' → logprob: -1.7904531955718994
    4. ')' → logprob: -5.41545295715332
    5. ' ]' → logprob: -6.41545295715332
    6. ']=' → logprob: -7.79045295715332
    7. ' )' → logprob: -8.29045295715332
    8. ' +=' → logprob: -8.66545295715332
    9. '-' → logprob: -8.91545295715332
    10. ' =)' → logprob: -10.04045295715332

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18010301887989044
    2. ' =' → logprob: -1.805103063583374
    3. ' +=' → logprob: -8.430103302001953
    4. '+=' → logprob: -9.305103302001953
    5. ',' → logprob: -10.055103302001953
    6. '=int' → logprob: -13.930103302001953
    7. ' -=' → logprob: -14.055103302001953
    8. ')' → logprob: -14.305103302001953
    9. ' ' → logprob: -14.430103302001953
    10. '-=' → logprob: -14.430103302001953

Token 34: ' int' (ID: 677)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05839037522673607
    2. 'int' → logprob: -3.4333903789520264
    3. 'abs' → logprob: -4.558390140533447
    4. 'float' → logprob: -4.933390140533447
    5. ' dist' → logprob: -5.683390140533447
    6. 'max' → logprob: -7.058390140533447
    7. 'inf' → logprob: -7.433390140533447
    8. 'min' → logprob: -7.558390140533447
    9. '100' → logprob: -8.183390617370605
    10. '10' → logprob: -8.308390617370605

Token 35: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38698697090148926
    2. '(input' → logprob: -1.1369869709014893
    3. ' (' → logprob: -9.88698673248291
    4. 'input' → logprob: -10.38698673248291
    5. '(
' → logprob: -11.63698673248291
    6. '('' → logprob: -11.76198673248291
    7. '(x' → logprob: -13.38698673248291
    8. '(

' → logprob: -13.38698673248291
    9. '(in' → logprob: -13.51198673248291
    10. '()' → logprob: -13.63698673248291

Token 36: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00864541344344616
    2. '()' → logprob: -4.758645534515381
    3. ')' → logprob: -11.008645057678223
    4. '())
' → logprob: -12.508645057678223
    5. '().' → logprob: -12.883645057678223
    6. '()))' → logprob: -13.508645057678223
    7. '())

' → logprob: -13.633645057678223
    8. '();)' → logprob: -13.758645057678223
    9. ' ())' → logprob: -13.883645057678223
    10. '()]' → logprob: -14.383645057678223

Token 37: 'prefix' (ID: 26155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0232058763504028
    2. '+' → logprob: -1.3982058763504028
    3. '<|end|>' → logprob: -1.6482058763504028
    4. 'for' → logprob: -3.3982057571411133
    5. '\n' → logprob: -3.5232057571411133
    6. ' 
' → logprob: -3.5232057571411133
    7. '
' → logprob: -4.023205757141113
    8. ')' → logprob: -4.148205757141113
    9. '[' → logprob: -4.648205757141113
    10. '(' → logprob: -4.648205757141113

Token 38: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08386114984750748
    2. '_sum' → logprob: -2.5838611125946045
    3. '_s' → logprob: -5.583861351013184
    4. '_dist' → logprob: -7.208861351013184
    5. 's' → logprob: -8.708861351013184
    6. '_len' → logprob: -9.583861351013184
    7. '_prefix' → logprob: -9.708861351013184
    8. 'sum' → logprob: -9.958861351013184
    9. '[' → logprob: -10.333861351013184
    10. '_length' → logprob: -10.833861351013184

Token 39: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048209723085165024
    2. ' [' → logprob: -3.1732096672058105
    3. 'dist' → logprob: -5.4232096672058105
    4. ' dist' → logprob: -7.2982096672058105
    5. '0' → logprob: -9.423210144042969
    6. '[len' → logprob: -12.173210144042969
    7. ' ' → logprob: -12.548210144042969
    8. '[int' → logprob: -12.673210144042969
    9. '[i' → logprob: -12.923210144042969
    10. '[n' → logprob: -13.298210144042969

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010250702034682035
    2. 'dist' → logprob: -7.126025199890137
    3. ' ' → logprob: -8.501025199890137
    4. ' dist' → logprob: -11.376025199890137
    5. ']' → logprob: -13.001025199890137
    6. ')' → logprob: -13.501025199890137
    7. '[' → logprob: -15.001025199890137
    8. '(' → logprob: -15.126025199890137
    9. '(dist' → logprob: -15.501025199890137
    10. '   ' → logprob: -15.813525199890137

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012364183785393834
    2. ' ]' → logprob: -7.626236438751221
    3. ',' → logprob: -7.876236438751221
    4. ')' → logprob: -8.751235961914062
    5. ']*(' → logprob: -9.126235961914062
    6. ']*' → logprob: -10.376235961914062
    7. ' for' → logprob: -10.626235961914062
    8. ']+' → logprob: -11.376235961914062
    9. '])' → logprob: -11.501235961914062
    10. 'for' → logprob: -12.251235961914062

Token 42: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004433205351233482
    2. ' (' → logprob: -5.6294331550598145
    3. '(' → logprob: -7.1294331550598145
    4. 'n' → logprob: -10.629433631896973
    5. '(m' → logprob: -12.754433631896973
    6. '(len' → logprob: -13.129433631896973
    7. ' n' → logprob: -13.879433631896973
    8. '(
' → logprob: -14.879433631896973
    9. '((' → logprob: -15.004433631896973
    10. ' ' → logprob: -15.379433631896973

Token 44: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023922888562083244
    2. '(n' → logprob: -3.773922920227051
    3. ' n' → logprob: -7.523922920227051
    4. '(' → logprob: -9.89892292022705
    5. ' (' → logprob: -10.52392292022705
    6. 'm' → logprob: -11.02392292022705
    7. '   ' → logprob: -11.14892292022705
    8. 'len' → logprob: -11.64892292022705
    9. ')n' → logprob: -12.27392292022705
    10. ')' → logprob: -12.89892292022705

Token 45: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. '+' → logprob: -11.625020027160645
    3. ')
' → logprob: -12.125020027160645
    4. ' )' → logprob: -13.000020027160645
    5. '))' → logprob: -13.250020027160645
    6. ')`' → logprob: -15.250020027160645
    7. ')n' → logprob: -15.250020027160645
    8. ']' → logprob: -16.250019073486328
    9. '`)' → logprob: -16.250019073486328
    10. ')...' → logprob: -16.500019073486328

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.500005722045898
    3. '2' → logprob: -13.625005722045898
    4. ')' → logprob: -14.875005722045898
    5. '```' → logprob: -15.750005722045898
    6. '   ' → logprob: -16.0625057220459
    7. '10' → logprob: -17.3750057220459
    8. '`' → logprob: -17.3750057220459
    9. '``' → logprob: -17.5625057220459
    10. '
' → logprob: -17.6250057220459

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002072357019642368
    2. ')
' → logprob: -8.50020694732666
    3. ')`' → logprob: -13.75020694732666
    4. ')
' → logprob: -13.87520694732666
    5. '`)' → logprob: -14.25020694732666
    6. ' )' → logprob: -15.12520694732666
    7. ')

' → logprob: -15.25020694732666
    8. '))' → logprob: -15.75020694732666
    9. '```' → logprob: -16.125207901000977
    10. ']' → logprob: -16.500207901000977

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021769266575574875
    2. ' for' → logprob: -3.8967692852020264
    3. '
' → logprob: -7.646769046783447
    4. '<|end|>' → logprob: -7.771769046783447
    5. '```' → logprob: -8.396769523620605
    6. '\n' → logprob: -10.021769523620605
    7. 'prefix' → logprob: -10.396769523620605
    8. '	for' → logprob: -11.771769523620605
    9. '+' → logprob: -12.521769523620605
    10. ' 
' → logprob: -12.646769523620605

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0009675608016550541
    2. 'i' → logprob: -7.125967502593994
    3. ' ' → logprob: -8.875967979431152
    4. '_' → logprob: -11.375967979431152
    5. '	i' → logprob: -12.500967979431152
    6. ' ' → logprob: -12.875967979431152
    7. ' _' → logprob: -13.500967979431152
    8. '  ' → logprob: -13.750967979431152
    9. '<|end|>' → logprob: -14.250967979431152
    10. '_i' → logprob: -14.375967979431152

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007845217362046242
    2. 'in' → logprob: -5.007845401763916
    3. ' ' → logprob: -7.007845401763916
    4. '<|end|>' → logprob: -9.382844924926758
    5. '  ' → logprob: -10.632844924926758
    6. ' i' → logprob: -10.757844924926758
    7. '	in' → logprob: -10.757844924926758
    8. '   ' → logprob: -11.382844924926758
    9. '(' → logprob: -11.632844924926758
    10. 'range' → logprob: -12.007844924926758

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006717386189848185
    2. 'range' → logprob: -5.006717205047607
    3. '(range' → logprob: -13.506717681884766
    4. '	range' → logprob: -14.756717681884766
    5. ' ' → logprob: -15.756717681884766
    6. ' xrange' → logprob: -16.506717681884766
    7. '  ' → logprob: -18.756717681884766
    8. '.range' → logprob: -19.006717681884766
    9. '(' → logprob: -19.006717681884766
    10. '_range' → logprob: -19.381717681884766

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018712825840339065
    2. ' (' → logprob: -6.376871109008789
    3. ' range' → logprob: -8.751871109008789
    4. '(range' → logprob: -11.876871109008789
    5. ' ' → logprob: -13.376871109008789
    6. 'range' → logprob: -13.501871109008789
    7. '(n' → logprob: -14.626871109008789
    8. '(
' → logprob: -15.251871109008789
    9. ' in' → logprob: -15.876871109008789
    10. '1' → logprob: -17.00187110900879

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004082699597347528
    2. 'n' → logprob: -8.250408172607422
    3. ' ' → logprob: -9.625408172607422
    4. 'range' → logprob: -9.625408172607422
    5. '   ' → logprob: -11.875408172607422
    6. 'i' → logprob: -13.000408172607422
    7. ' range' → logprob: -13.250408172607422
    8. ' n' → logprob: -13.250408172607422
    9. '(' → logprob: -14.125408172607422
    10. '2' → logprob: -14.500408172607422

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005315462127327919
    2. ',n' → logprob: -5.63031530380249
    3. ' ,' → logprob: -6.38031530380249
    4. '(n' → logprob: -11.630315780639648
    5. 'n' → logprob: -12.255315780639648
    6. 'range' → logprob: -13.255315780639648
    7. ' range' → logprob: -13.880315780639648
    8. ',
' → logprob: -14.505315780639648
    9. ',len' → logprob: -14.630315780639648
    10. ' n' → logprob: -15.005315780639648

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17976154386997223
    2. ' n' → logprob: -1.804761528968811
    3. 'len' → logprob: -12.17976188659668
    4. ' ' → logprob: -12.80476188659668
    5. '(n' → logprob: -12.80476188659668
    6. ')' → logprob: -13.05476188659668
    7. ')n' → logprob: -13.92976188659668
    8. '	n' → logprob: -14.05476188659668
    9. '   ' → logprob: -14.30476188659668
    10. ' len' → logprob: -14.55476188659668

Token 56: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0034569292329251766
    2. '):
' → logprob: -5.878457069396973
    3. ' +' → logprob: -7.628457069396973
    4. '):' → logprob: -8.753457069396973
    5. '   ' → logprob: -12.753457069396973
    6. '+
' → logprob: -13.128457069396973
    7. ')' → logprob: -14.003457069396973
    8. '+n' → logprob: -14.753457069396973
    9. '```' → logprob: -15.003457069396973
    10. '1' → logprob: -15.628457069396973

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001225466257892549
    2. '+' → logprob: -6.876225471496582
    3. '):
' → logprob: -9.626225471496582
    4. ')' → logprob: -9.751225471496582
    5. '):' → logprob: -10.376225471496582
    6. ' ' → logprob: -10.751225471496582
    7. '   ' → logprob: -12.376225471496582
    8. '```' → logprob: -12.376225471496582
    9. '2' → logprob: -12.501225471496582
    10. '<|end|>' → logprob: -13.626225471496582

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008928547613322735
    2. '):
' → logprob: -4.7589287757873535
    3. ':' → logprob: -8.133928298950195
    4. ')' → logprob: -11.383928298950195
    5. '):
' → logprob: -12.258928298950195
    6. ' ):' → logprob: -12.758928298950195
    7. '}:' → logprob: -15.008928298950195
    8. ']:' → logprob: -15.008928298950195
    9. '   ' → logprob: -15.133928298950195
    10. ':
' → logprob: -15.508928298950195

Token 59: '   ' (ID: 271)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.25824490189552307
    2. 'prefix' → logprob: -2.0082449913024902
    3. '   ' → logprob: -2.3832449913024902
    4. '(prefix' → logprob: -7.50824499130249
    5. '<|end|>' → logprob: -8.008244514465332
    6. '```' → logprob: -9.383244514465332
    7. ' ' → logprob: -10.133244514465332
    8. '_prefix' → logprob: -10.258244514465332
    9. ' ```' → logprob: -10.508244514465332
    10. ' 
' → logprob: -11.508244514465332

Token 60: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.252547949552536
    2. ' prefix' → logprob: -1.5025479793548584
    3. '<|end|>' → logprob: -7.877547740936279
    4. '(prefix' → logprob: -9.252548217773438
    5. '   ' → logprob: -9.627548217773438
    6. '```' → logprob: -10.502548217773438
    7. '_prefix' → logprob: -10.752548217773438
    8. ' ' → logprob: -11.752548217773438
    9. ' 
' → logprob: -11.877548217773438
    10. '
' → logprob: -12.502548217773438

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[I' → logprob: -12.500007629394531
    3. '[' → logprob: -12.750007629394531
    4. '```' → logprob: -14.750007629394531
    5. '\[' → logprob: -16.12500762939453
    6. ' [' → logprob: -16.75000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '[A' → logprob: -18.25000762939453
    9. '[...]' → logprob: -18.50000762939453
    10. '[
' → logprob: -18.62500762939453

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40184286236763
    2. '=' → logprob: -1.4018428325653076
    3. ' =' → logprob: -2.5268428325653076
    4. ')' → logprob: -5.901843070983887
    5. ']=' → logprob: -6.276843070983887
    6. ' ]' → logprob: -9.276843070983887
    7. ']+=' → logprob: -9.526843070983887
    8. ')=' → logprob: -10.401843070983887
    9. ' +=' → logprob: -10.776843070983887
    10. ' ' → logprob: -11.401843070983887

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024774393532425165
    2. ' =' → logprob: -6.002477645874023
    3. '+=' → logprob: -13.377477645874023
    4. ' +=' → logprob: -16.377477645874023
    5. '=
' → logprob: -16.627477645874023
    6. '=int' → logprob: -17.377477645874023
    7. '=i' → logprob: -17.627477645874023
    8. '=

' → logprob: -17.627477645874023
    9. '.=' → logprob: -17.752477645874023
    10. '=sum' → logprob: -18.502477645874023

Token 64: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.1270134598016739
    2. ' prefix' → logprob: -2.1270134449005127
    3. '   ' → logprob: -9.502013206481934
    4. '(prefix' → logprob: -11.877013206481934
    5. 'dist' → logprob: -13.627013206481934
    6. '```' → logprob: -14.127013206481934
    7. ' ' → logprob: -14.877013206481934
    8. 'refix' → logprob: -15.502013206481934
    9. '_prefix' → logprob: -15.627013206481934
    10. '-prefix' → logprob: -15.752013206481934

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -14.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. '[I' → logprob: -18.75
    5. '`' → logprob: -18.875
    6. '[user' → logprob: -19.375
    7. '<|end|>' → logprob: -19.375
    8. '[' → logprob: -19.375
    9. '\[' → logprob: -19.875
    10. '(i' → logprob: -20.0

Token 66: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014191943046171218
    2. ' -' → logprob: -8.875142097473145
    3. '[i' → logprob: -14.125142097473145
    4. '1' → logprob: -14.250142097473145
    5. 'i' → logprob: -15.750142097473145
    6. '−' → logprob: -16.375141143798828
    7. ']' → logprob: -16.500141143798828
    8. '```' → logprob: -16.875141143798828
    9. '[' → logprob: -17.000141143798828
    10. '-i' → logprob: -17.125141143798828

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.250003814697266
    5. ']' → logprob: -16.250003814697266
    6. '<|end|>' → logprob: -16.750003814697266
    7. '-' → logprob: -17.000003814697266
    8. 'i' → logprob: -18.312503814697266
    9. '  ' → logprob: -18.437503814697266
    10. '১' → logprob: -19.125003814697266

Token 68: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2561129033565521
    2. ' +' → logprob: -1.5061129331588745
    3. ')' → logprob: -5.756113052368164
    4. ']' → logprob: -7.381113052368164
    5. ']+' → logprob: -8.506113052368164
    6. ')+' → logprob: -8.756113052368164
    7. ' plus' → logprob: -11.881113052368164
    8. '>' → logprob: -11.881113052368164
    9. ' ' → logprob: -12.631113052368164
    10. '<|end|>' → logprob: -12.631113052368164

Token 69: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859054833650589
    2. ' +' → logprob: -3.048590660095215
    3. '+
' → logprob: -14.048590660095215
    4. '+d' → logprob: -14.298590660095215
    5. '<|end|>' → logprob: -14.673590660095215
    6. ' plus' → logprob: -15.298590660095215
    7. '+n' → logprob: -15.548590660095215
    8. '+i' → logprob: -16.0485897064209
    9. '+D' → logprob: -16.6735897064209
    10. '+self' → logprob: -16.6735897064209

Token 70: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020871460437775
    2. ' +' → logprob: -2.3502087593078613
    3. '<|end|>' → logprob: -14.225208282470703
    4. '+n' → logprob: -14.975208282470703
    5. '+i' → logprob: -15.475208282470703
    6. '+
' → logprob: -15.725208282470703
    7. '+t' → logprob: -16.350208282470703
    8. ' plus' → logprob: -16.600208282470703
    9. '+=' → logprob: -16.725208282470703
    10. '+s' → logprob: -16.725208282470703

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5098518133163452
    2. 'i' → logprob: -1.5098518133163452
    3. ' dist' → logprob: -2.0098519325256348
    4. 'dist' → logprob: -3.1348519325256348
    5. '   ' → logprob: -7.509851932525635
    6. ' ' → logprob: -9.009851455688477
    7. '<|end|>' → logprob: -9.134851455688477
    8. '  ' → logprob: -10.134851455688477
    9. '(i' → logprob: -10.259851455688477
    10. ' not' → logprob: -10.759851455688477

Token 72: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.27057498693466187
    2. ' <' → logprob: -2.1455750465393066
    3. '<=' → logprob: -3.1455750465393066
    4. '>' → logprob: -3.3955750465393066
    5. '<n' → logprob: -4.145575046539307
    6. '-' → logprob: -4.395575046539307
    7. ' <=' → logprob: -5.145575046539307
    8. '!=' → logprob: -5.645575046539307
    9. ' >' → logprob: -5.895575046539307
    10. ' !=' → logprob: -6.895575046539307

Token 73: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06202874332666397
    2. ' n' → logprob: -2.812028646469116
    3. 'len' → logprob: -10.687028884887695
    4. 'm' → logprob: -11.187028884887695
    5. ' ' → logprob: -11.187028884887695
    6. ' len' → logprob: -12.812028884887695
    7. '<|end|>' → logprob: -12.937028884887695
    8. '   ' → logprob: -13.312028884887695
    9. '	n' → logprob: -14.062028884887695
    10. '  ' → logprob: -14.312028884887695

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2382654994726181
    2. '+' → logprob: -1.8632655143737793
    3. ' +' → logprob: -2.9882655143737793
    4. ':
' → logprob: -6.488265514373779
    5. ' and' → logprob: -6.613265514373779
    6. '   ' → logprob: -6.988265514373779
    7. '+=' → logprob: -7.363265514373779
    8. 'and' → logprob: -8.113265037536621
    9. ' or' → logprob: -8.363265037536621
    10. ' +=' → logprob: -8.488265037536621

Token 75: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3530775010585785
    2. ' +' → logprob: -1.2280775308609009
    3. ' +=' → logprob: -5.978077411651611
    4. '+=' → logprob: -6.728077411651611
    5. ':' → logprob: -7.478077411651611
    6. '   ' → logprob: -9.22807788848877
    7. '<|end|>' → logprob: -9.22807788848877
    8. '+:' → logprob: -10.72807788848877
    9. ' ' → logprob: -10.85307788848877
    10. '>' → logprob: -11.47807788848877

Token 76: ' prefix' (ID: 18633)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2658063769340515
    2. ' +' → logprob: -1.6408064365386963
    3. 'dist' → logprob: -4.015806198120117
    4. ' +=' → logprob: -4.640806198120117
    5. ' dist' → logprob: -4.765806198120117
    6. '+=' → logprob: -5.765806198120117
    7. '<|end|>' → logprob: -9.765806198120117
    8. ' ' → logprob: -10.015806198120117
    9. '   ' → logprob: -10.140806198120117
    10. ' ' → logprob: -10.890806198120117

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.908022285439074e-05
    2. '<|end|>' → logprob: -10.000059127807617
    3. '<|end|>' → logprob: -12.125059127807617
    4. '[' → logprob: -12.500059127807617
    5. '[I' → logprob: -13.125059127807617
    6. '```' → logprob: -14.250059127807617
    7. 'dist' → logprob: -15.125059127807617
    8. '[end' → logprob: -16.000059127807617
    9. 'import' → logprob: -16.000059127807617
    10. '[user' → logprob: -16.125059127807617

Token 78: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25290563702583313
    2. ' +=' → logprob: -2.1279056072235107
    3. '+=' → logprob: -3.0029056072235107
    4. ' +' → logprob: -3.5029056072235107
    5. ']' → logprob: -4.25290584564209
    6. ']+=' → logprob: -4.75290584564209
    7. ']+' → logprob: -6.75290584564209
    8. ')' → logprob: -8.12790584564209
    9. '<|end|>' → logprob: -9.37790584564209
    10. '>' → logprob: -10.12790584564209

Token 79: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3878847360610962
    2. '+' → logprob: -1.2628847360610962
    3. ' +=' → logprob: -3.2628846168518066
    4. ' +' → logprob: -8.012885093688965
    5. ']+=' → logprob: -10.637885093688965
    6. '+='' → logprob: -11.512885093688965
    7. '<|end|>' → logprob: -12.012885093688965
    8. '+="' → logprob: -12.387885093688965
    9. '=' → logprob: -12.387885093688965
    10. '+=(' → logprob: -12.512885093688965

Token 80: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.5491004129871726e-05
    2. ' dist' → logprob: -10.000045776367188
    3. '(dist' → logprob: -17.625045776367188
    4. '	dist' → logprob: -18.000045776367188
    5. '   ' → logprob: -20.250045776367188
    6. 'd' → logprob: -21.375045776367188
    7. '.dist' → logprob: -22.000045776367188
    8. 'diff' → logprob: -22.000045776367188
    9. '_dist' → logprob: -22.375045776367188
    10. 'div' → logprob: -23.250045776367188

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.615255839889869e-05
    2. '[' → logprob: -9.250096321105957
    3. '[
' → logprob: -17.00009536743164
    4. '\[' → logprob: -17.75009536743164
    5. '[I' → logprob: -18.00009536743164
    6. ' [' → logprob: -18.00009536743164
    7. '[j' → logprob: -19.00009536743164
    8. '[int' → logprob: -19.12509536743164
    9. '[s' → logprob: -19.25009536743164
    10. '[x' → logprob: -19.25009536743164

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014090436743572354
    2. '-' → logprob: -6.87640905380249
    3. ' ]' → logprob: -8.376408576965332
    4. '<|end|>' → logprob: -9.126408576965332
    5. ')' → logprob: -10.876408576965332
    6. ')]' → logprob: -12.626408576965332
    7. '<|end|>' → logprob: -12.876408576965332
    8. '])' → logprob: -12.876408576965332
    9. ' ' → logprob: -13.126408576965332
    10. ' -' → logprob: -13.126408576965332

Token 83: 'pos' (ID: 1103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03133523091673851
    2. ')' → logprob: -4.656335353851318
    3. '<|end|>' → logprob: -4.906335353851318
    4. 'i' → logprob: -5.406335353851318
    5. ' for' → logprob: -6.031335353851318
    6. 'n' → logprob: -7.031335353851318
    7. '[' → logprob: -7.281335353851318
    8. '.' → logprob: -7.406335353851318
    9. '(' → logprob: -7.406335353851318
    10. 'while' → logprob: -7.531335353851318

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3229507505893707
    2. 's' → logprob: -2.572950839996338
    3. 'sible' → logprob: -2.822950839996338
    4. 'itions' → logprob: -2.947950839996338
    5. '=' → logprob: -3.072950839996338
    6. 'ition' → logprob: -4.072950839996338
    7. 'itional' → logprob: -4.822950839996338
    8. 'ix' → logprob: -5.447950839996338
    9. ')' → logprob: -6.072950839996338
    10. '_' → logprob: -6.072950839996338

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24571090936660767
    2. ' ' → logprob: -1.745710849761963
    3. ' [' → logprob: -4.495710849761963
    4. ' m' → logprob: -4.620710849761963
    5. 'm' → logprob: -4.745710849761963
    6. '1' → logprob: -5.245710849761963
    7. '[' → logprob: -5.870710849761963
    8. '[m' → logprob: -6.370710849761963
    9. '[int' → logprob: -6.745710849761963
    10. '[]' → logprob: -7.495710849761963

Token 86: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06485038995742798
    2. '[m' → logprob: -3.814850330352783
    3. '[' → logprob: -4.064850330352783
    4. 'm' → logprob: -4.564850330352783
    5. '[int' → logprob: -5.439850330352783
    6. '[]' → logprob: -5.689850330352783
    7. 'list' → logprob: -6.314850330352783
    8. '1' → logprob: -6.814850330352783
    9. ' ' → logprob: -7.439850330352783
    10. '[n' → logprob: -7.689850330352783

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'mod' (ID: 4847)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7270223498344421
    2. ' =' → logprob: -0.7270223498344421
    3. 'ulus' → logprob: -4.227022171020508
    4. 'ulo' → logprob: -5.227022171020508
    5. 'ule' → logprob: -5.602022171020508
    6. ' ' → logprob: -5.602022171020508
    7. '_' → logprob: -6.102022171020508
    8. 'ul' → logprob: -6.352022171020508
    9. ',' → logprob: -8.227022171020508
    10. 'e' → logprob: -8.352022171020508

Token 90: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1274697482585907
    2. '100' → logprob: -2.127469778060913
    3. ' ' → logprob: -7.752469539642334
    4. '998' → logprob: -9.377470016479492
    5. '1' → logprob: -10.627470016479492
    6. '2' → logprob: -13.752470016479492
    7. 'int' → logprob: -14.377470016479492
    8. '200' → logprob: -14.877470016479492
    9. '109' → logprob: -15.377470016479492
    10. '101' → logprob: -16.252470016479492

Token 91: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1271194964647293
    2. '100' → logprob: -2.127119541168213
    3. '998' → logprob: -8.752119064331055
    4. '1' → logprob: -10.752119064331055
    5. 'int' → logprob: -12.252119064331055
    6. '(' → logprob: -12.752119064331055
    7. ' ' → logprob: -13.252119064331055
    8. '2' → logprob: -13.752119064331055
    9. '200' → logprob: -15.002119064331055
    10. '109' → logprob: -15.502119064331055

Token 92: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.024032171815633774
    2. '**' → logprob: -3.7740321159362793
    3. '0' → logprob: -7.399032115936279
    4. '6' → logprob: -10.149032592773438
    5. '09' → logprob: -10.149032592773438
    6. '```' → logprob: -10.524032592773438
    7. '7' → logprob: -11.024032592773438
    8. '^' → logprob: -11.399032592773438
    9. ' **' → logprob: -11.774032592773438
    10. ' ' → logprob: -11.899032592773438

Token 93: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -4.723352049040841e-06
    2. '09' → logprob: -12.875004768371582
    3. '18' → logprob: -14.125004768371582
    4. '10' → logprob: -14.875004768371582
    5. '```' → logprob: -14.875004768371582
    6. '+' → logprob: -15.875004768371582
    7. '15' → logprob: -16.000003814697266
    8. '1' → logprob: -16.875003814697266
    9. '6' → logprob: -17.000003814697266
    10. '12' → logprob: -17.062503814697266

Token 94: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004812323022633791
    2. '+
' → logprob: -6.129812240600586
    3. '0' → logprob: -7.004812240600586
    4. ' +' → logprob: -7.629812240600586
    5. '
' → logprob: -8.129812240600586
    6. '<|end|>' → logprob: -8.129812240600586
    7. '*' → logprob: -9.379812240600586
    8. '1' → logprob: -9.504812240600586
    9. '  
' → logprob: -10.004812240600586
    10. ' ' → logprob: -10.004812240600586

Token 95: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4673279821872711
    2. '
' → logprob: -1.7173279523849487
    3. '+' → logprob: -2.3423280715942383
    4. '<|end|>' → logprob: -3.3423280715942383
    5. ' for' → logprob: -3.4673280715942383
    6. 'while' → logprob: -4.592328071594238
    7. '\n' → logprob: -5.217328071594238
    8. '*' → logprob: -5.842328071594238
    9. ' ' → logprob: -5.967328071594238
    10. ' 
' → logprob: -5.967328071594238

Token 96: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7111687064170837
    2. ' =' → logprob: -0.8361687064170837
    3. '=' → logprob: -3.7111687660217285
    4. '_sum' → logprob: -3.8361687660217285
    5. '_count' → logprob: -4.5861687660217285
    6. '_pos' → logprob: -5.2111687660217285
    7. '_length' → logprob: -5.7111687660217285
    8. ' _' → logprob: -6.5861687660217285
    9. '_distance' → logprob: -6.7111687660217285
    10. '_dist' → logprob: -6.7111687660217285

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22684182226657867
    2. ' ' → logprob: -1.6018418073654175
    3. ' m' → logprob: -7.226841926574707
    4. 'm' → logprob: -8.601841926574707
    5. 'pos' → logprob: -8.726841926574707
    6. '1' → logprob: -8.976841926574707
    7. ' pos' → logprob: -9.226841926574707
    8. 'prefix' → logprob: -9.976841926574707
    9. ' prefix' → logprob: -9.976841926574707
    10. ' n' → logprob: -11.476841926574707

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02538313902914524
    2. '1' → logprob: -3.900383234024048
    3. 'pos' → logprob: -5.775382995605469
    4. 'prefix' → logprob: -7.150382995605469
    5. 'm' → logprob: -7.400382995605469
    6. ' ' → logprob: -8.900382995605469
    7. 'n' → logprob: -10.150382995605469
    8. 'mod' → logprob: -10.400382995605469
    9. '[' → logprob: -10.650382995605469
    10. '[pos' → logprob: -10.775382995605469

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5175246000289917
    2. '<|end|>' → logprob: -1.3925246000289917
    3. 'for' → logprob: -2.1425247192382812
    4. ' for' → logprob: -3.8925247192382812
    5. ' 
' → logprob: -4.767524719238281
    6. '\n' → logprob: -5.642524719238281
    7. '<|end|>' → logprob: -6.517524719238281
    8. 'while' → logprob: -6.767524719238281
    9. '+' → logprob: -6.892524719238281
    10. ' ' → logprob: -7.142524719238281

Token 100: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0340898297727108
    2. 'while' → logprob: -3.6590898036956787
    3. ' for' → logprob: -4.909090042114258
    4. ' while' → logprob: -8.409090042114258
    5. '<|end|>' → logprob: -9.534090042114258
    6. 'range' → logprob: -10.659090042114258
    7. '+' → logprob: -11.534090042114258
    8. '```' → logprob: -11.909090042114258
    9. 'm' → logprob: -12.159090042114258
    10. 'i' → logprob: -12.409090042114258

Token 101: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04695698618888855
    2. ' i' → logprob: -3.921957015991211
    3. '_' → logprob: -4.296957015991211
    4. ' ' → logprob: -4.671957015991211
    5. ' range' → logprob: -6.296957015991211
    6. ' m' → logprob: -6.921957015991211
    7. 'range' → logprob: -9.421957015991211
    8. ' in' → logprob: -9.796957015991211
    9. ' j' → logprob: -10.171957015991211
    10. ' pos' → logprob: -10.671957015991211

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02642964757978916
    2. 'in' → logprob: -3.6514296531677246
    3. ' ' → logprob: -9.276429176330566
    4. 'range' → logprob: -11.776429176330566
    5. ' _' → logprob: -11.901429176330566
    6. ' i' → logprob: -12.151429176330566
    7. '```' → logprob: -12.651429176330566
    8. ',' → logprob: -13.401429176330566
    9. '  ' → logprob: -13.401429176330566
    10. 'i' → logprob: -13.401429176330566

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759775042533875
    2. 'range' → logprob: -0.8259775042533875
    3. '(range' → logprob: -11.700977325439453
    4. ' ' → logprob: -11.950977325439453
    5. 'm' → logprob: -12.450977325439453
    6. '	range' → logprob: -12.825977325439453
    7. 'ran' → logprob: -12.950977325439453
    8. ' ran' → logprob: -13.200977325439453
    9. ' in' → logprob: -13.575977325439453
    10. 'in' → logprob: -13.575977325439453

Token 104: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.005478844977915287
    2. '(' → logprob: -5.255478858947754
    3. ' (' → logprob: -8.380478858947754
    4. ' m' → logprob: -11.380478858947754
    5. 'm' → logprob: -13.380478858947754
    6. '(range' → logprob: -13.505478858947754
    7. '(M' → logprob: -14.130478858947754
    8. '(
' → logprob: -15.505478858947754
    9. ' ' → logprob: -15.880478858947754
    10. '()' → logprob: -16.255477905273438

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014762031845748425
    2. ' ):' → logprob: -4.889761924743652
    3. '):
' → logprob: -5.264761924743652
    4. ')' → logprob: -6.389761924743652
    5. ':' → logprob: -8.889761924743652
    6. '+' → logprob: -10.139761924743652
    7. ' )' → logprob: -10.139761924743652
    8. ',' → logprob: -10.639761924743652
    9. ' ):
' → logprob: -10.764761924743652
    10. '):
' → logprob: -11.764761924743652

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6289300918579102
    2. ' k' → logprob: -1.7539300918579102
    3. ' x' → logprob: -3.00393009185791
    4. ' move' → logprob: -3.37893009185791
    5. ' direction' → logprob: -3.62893009185791
    6. 'pos' → logprob: -3.87893009185791
    7. ',' → logprob: -4.00393009185791
    8. ' s' → logprob: -4.12893009185791
    9. ' pos' → logprob: -4.25393009185791
    10. 'k' → logprob: -4.37893009185791

Token 107: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7299663424491882
    2. ' x' → logprob: -1.854966402053833
    3. 'a' (adapté à ' a') → logprob: -2.479966402053833
    4. ' move' → logprob: -2.979966402053833
    5. '   ' → logprob: -3.104966402053833
    6. 'pos' → logprob: -3.229966402053833
    7. ' a' → logprob: -3.354966402053833
    8. 'd' → logprob: -4.229966163635254
    9. 'move' → logprob: -4.229966163635254
    10. ' pos' → logprob: -4.729966163635254

Token 108: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004741145297884941
    2. ' ,' → logprob: -5.879741191864014
    3. ',b' → logprob: -6.754741191864014
    4. ' ' → logprob: -7.379741191864014
    5. ' =' → logprob: -10.004740715026855
    6. 'b' → logprob: -10.254740715026855
    7. 'i' → logprob: -11.504740715026855
    8. ',d' → logprob: -11.504740715026855
    9. 'd' → logprob: -12.379740715026855
    10. ',pos' → logprob: -12.504740715026855

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4287450611591339
    2. ' int' → logprob: -1.0537450313568115
    3. ' input' → logprob: -11.42874526977539
    4. 'input' → logprob: -11.80374526977539
    5. '[int' → logprob: -12.42874526977539
    6. ' ' → logprob: -12.80374526977539
    7. 'list' → logprob: -12.80374526977539
    8. ' list' → logprob: -12.80374526977539
    9. '<int' → logprob: -12.80374526977539
    10. '(int' → logprob: -12.92874526977539

Token 110: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001773192489054054
    2. 'input' → logprob: -9.625177383422852
    3. '()' → logprob: -9.750177383422852
    4. '(' → logprob: -9.875177383422852
    5. ' input' → logprob: -14.250177383422852
    6. '=input' → logprob: -14.750177383422852
    7. ' (' → logprob: -16.37517738342285
    8. ',input' → logprob: -16.50017738342285
    9. '(
' → logprob: -16.75017738342285
    10. '	input' → logprob: -17.00017738342285

Token 111: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002059853868559003
    2. '()' → logprob: -6.2520599365234375
    3. '())
' → logprob: -9.377059936523438
    4. ')' → logprob: -10.377059936523438
    5. ' ())' → logprob: -12.002059936523438
    6. '()
' → logprob: -12.127059936523438
    7. '().' → logprob: -13.127059936523438
    8. '())

' → logprob: -14.377059936523438
    9. '();)' → logprob: -14.627059936523438
    10. '(' → logprob: -15.377059936523438

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35069307684898376
    2. 'pos' → logprob: -1.7256931066513062
    3. ' pos' → logprob: -2.7256929874420166
    4. '
' → logprob: -3.6006929874420166
    5. ' if' → logprob: -5.100693225860596
    6. 'total' → logprob: -5.350693225860596
    7. 'if' → logprob: -5.975693225860596
    8. 'b' → logprob: -6.225693225860596
    9. ' total' → logprob: -6.475693225860596
    10. '    
' → logprob: -7.225693225860596

Token 113: ' start' (ID: 1604)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.13294486701488495
    2. ' pos' → logprob: -2.7579448223114014
    3. 'if' → logprob: -3.1329448223114014
    4. ' if' → logprob: -4.6329450607299805
    5. '   ' → logprob: -6.1329450607299805
    6. 'next' → logprob: -6.6329450607299805
    7. 'd' → logprob: -7.5079450607299805
    8. ' next' → logprob: -7.6329450607299805
    9. 'steps' → logprob: -7.7579450607299805
    10. ' steps' → logprob: -7.8829450607299805

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08659526705741882
    2. ' +=' → logprob: -3.336595296859741
    3. '=' → logprob: -3.961595296859741
    4. '_pos' → logprob: -4.461595058441162
    5. '_' → logprob: -5.086595058441162
    6. ',' → logprob: -5.461595058441162
    7. ' -=' → logprob: -6.461595058441162
    8. ' ,' → logprob: -6.711595058441162
    9. '_distance' → logprob: -6.711595058441162
    10. '+=' → logprob: -7.336595058441162

Token 115: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5326705574989319
    2. ' pos' → logprob: -0.9076705574989319
    3. '(pos' → logprob: -5.657670497894287
    4. ' (' → logprob: -6.032670497894287
    5. '1' → logprob: -7.032670497894287
    6. 'a' → logprob: -7.157670497894287
    7. ' a' → logprob: -7.782670497894287
    8. ' max' → logprob: -8.282670974731445
    9. '(' → logprob: -8.407670974731445
    10. ' ' → logprob: -8.532670974731445

Token 116: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6110268235206604
    2. ' +' → logprob: -1.1110267639160156
    3. '+a' → logprob: -2.7360267639160156
    4. '   ' → logprob: -3.3610267639160156
    5. '-' → logprob: -3.9860267639160156
    6. ' -' → logprob: -5.111026763916016
    7. '%' → logprob: -7.611026763916016
    8. '
' → logprob: -7.736026763916016
    9. '+
' → logprob: -7.736026763916016
    10. '+x' → logprob: -8.111026763916016

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9967458844184875
    2. 'end' (adapté à ' end') → logprob: -1.7467458248138428
    3. ' pos' → logprob: -2.4967458248138428
    4. ' if' → logprob: -2.4967458248138428
    5. '   ' → logprob: -2.6217458248138428
    6. 'if' → logprob: -2.6217458248138428
    7. '
' → logprob: -2.8717458248138428
    8. ' end' → logprob: -3.6217458248138428
    9. 'diff' → logprob: -3.9967458248138428
    10. '+' → logprob: -4.871746063232422

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04319215193390846
    2. '=' → logprob: -3.168192148208618
    3. ' +=' → logprob: -8.793191909790039
    4. '+=' → logprob: -11.293191909790039
    5. ',' → logprob: -11.543191909790039
    6. ' ' → logprob: -12.043191909790039
    7. '=a' → logprob: -12.168191909790039
    8. 'pos' → logprob: -12.918191909790039
    9. '+' → logprob: -13.918191909790039
    10. ' =
' → logprob: -14.293191909790039

Token 120: ' pos' (ID: 1253)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7241338491439819
    2. '(pos' → logprob: -2.0991339683532715
    3. 'pos' → logprob: -2.2241339683532715
    4. ' pos' → logprob: -2.2241339683532715
    5. '(a' → logprob: -2.9741339683532715
    6. 'start' → logprob: -3.7241339683532715
    7. 'a' → logprob: -3.7241339683532715
    8. ' start' → logprob: -3.7241339683532715
    9. '(start' → logprob: -3.9741339683532715
    10. ' a' → logprob: -3.9741339683532715

Token 121: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44403430819511414
    2. '+' → logprob: -1.0690343379974365
    3. '+a' → logprob: -4.194034099578857
    4. '<|end|>' → logprob: -9.944034576416016
    5. '+
' → logprob: -11.444034576416016
    6. '+A' → logprob: -11.569034576416016
    7. ' +
' → logprob: -11.569034576416016
    8. ' -' → logprob: -11.944034576416016
    9. ' +=' → logprob: -12.194034576416016
    10. ' ' → logprob: -12.194034576416016

Token 122: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06993954628705978
    2. ' a' → logprob: -2.694939613342285
    3. ' ' → logprob: -13.319939613342285
    4. '   ' → logprob: -14.319939613342285
    5. '	a' → logprob: -14.444939613342285
    6. '_a' → logprob: -16.31993865966797
    7. '(a' → logprob: -16.44493865966797
    8. '[a' → logprob: -16.56993865966797
    9. ' (' → logprob: -17.44493865966797
    10. '>a' → logprob: -17.44493865966797

Token 123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03177402541041374
    2. ' if' → logprob: -4.281774044036865
    3. ' 
' → logprob: -4.406774044036865
    4. ' %' → logprob: -5.906774044036865
    5. '%' → logprob: -6.406774044036865
    6. 'if' → logprob: -8.406773567199707
    7. '
' → logprob: -8.531773567199707
    8. ' ' → logprob: -9.031773567199707
    9. '<|end|>' → logprob: -9.156773567199707
    10. '   ' → logprob: -9.781773567199707

Token 124: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39955204725265503
    2. '   ' → logprob: -1.7745521068572998
    3. '
' → logprob: -2.3995521068573
    4. 'if' → logprob: -3.6495521068573
    5. ' 
' → logprob: -4.024551868438721
    6. 'pos' → logprob: -4.524551868438721
    7. ' pos' → logprob: -5.024551868438721
    8. '<|end|>' → logprob: -6.024551868438721
    9. '```' → logprob: -6.649551868438721
    10. '    
' → logprob: -6.649551868438721

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5631245970726013
    2. 'if' (adapté à ' if') → logprob: -1.063124656677246
    3. '
' → logprob: -3.313124656677246
    4. 'total' → logprob: -3.938124656677246
    5. '   ' → logprob: -4.188124656677246
    6. ' total' → logprob: -5.063124656677246
    7. 'pos' → logprob: -5.938124656677246
    8. 'end' → logprob: -6.313124656677246
    9. '```' → logprob: -7.813124656677246
    10. ' 
' → logprob: -7.813124656677246

Token 126: ' start' (ID: 1604)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.01610603928565979
    2. 'end' → logprob: -4.141106128692627
    3. '(end' → logprob: -10.516105651855469
    4. ' ' → logprob: -11.641105651855469
    5. ' start' → logprob: -11.641105651855469
    6. '   ' → logprob: -11.891105651855469
    7. ' (' → logprob: -12.516105651855469
    8. ' pos' → logprob: -12.766105651855469
    9. ' prefix' → logprob: -13.391105651855469
    10. '1' → logprob: -13.391105651855469

Token 127: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5385171175003052
    2. ' >' → logprob: -1.2885171175003052
    3. ' >=' → logprob: -3.5385169982910156
    4. '<=' → logprob: -3.5385169982910156
    5. ' <' → logprob: -3.7885169982910156
    6. ' ==' → logprob: -3.9135169982910156
    7. '>' → logprob: -4.288516998291016
    8. ' +' → logprob: -5.038516998291016
    9. ' !=' → logprob: -5.163516998291016
    10. '+' → logprob: -5.288516998291016

Token 128: ' end' (ID: 1268)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9890976548194885
    2. 'n' → logprob: -1.1140975952148438
    3. 'end' → logprob: -1.4890975952148438
    4. ' end' → logprob: -2.6140975952148438
    5. ' ' → logprob: -8.364097595214844
    6. 'm' → logprob: -8.989097595214844
    7. '1' → logprob: -8.989097595214844
    8. 'mod' → logprob: -9.239097595214844
    9. 'pos' → logprob: -9.239097595214844
    10. '
' → logprob: -9.739097595214844

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20312975347042084
    2. ':
' → logprob: -1.703129768371582
    3. '   ' → logprob: -7.328129768371582
    4. ' and' → logprob: -7.578129768371582
    5. ' :' → logprob: -8.578129768371582
    6. ' :
' → logprob: -8.578129768371582
    7. '       ' → logprob: -9.953129768371582
    8. '):
' → logprob: -10.828129768371582
    9. ' ==' → logprob: -10.953129768371582
    10. '[' → logprob: -11.078129768371582

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01633651927113533
    2. '   ' → logprob: -4.516336441040039
    3. '
' → logprob: -6.016336441040039
    4. ':' → logprob: -6.641336441040039
    5. ':
' → logprob: -7.141336441040039
    6. '```' → logprob: -8.391336441040039
    7. '    
' → logprob: -9.266336441040039
    8. '        
' → logprob: -10.016336441040039
    9. '):
' → logprob: -10.141336441040039
    10. ' total' → logprob: -10.391336441040039

Token 131: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07160472124814987
    2. 'total' → logprob: -3.5716047286987305
    3. ' total' → logprob: -3.8216047286987305
    4. '
' → logprob: -4.4466047286987305
    5. '   ' → logprob: -4.9466047286987305
    6. '	total' → logprob: -9.57160472869873
    7. '           ' → logprob: -10.44660472869873
    8. ':
' → logprob: -10.82160472869873
    9. '```' → logprob: -11.07160472869873
    10. '
' → logprob: -11.07160472869873

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014985533431172371
    2. '=' → logprob: -4.38998556137085
    3. ' +=' → logprob: -6.01498556137085
    4. ' ' → logprob: -10.889985084533691
    5. '+=' → logprob: -11.389985084533691
    6. '[' → logprob: -15.264985084533691
    7. ' ' → logprob: -15.639985084533691
    8. 's' → logprob: -15.764985084533691
    9. '=sum' → logprob: -16.264986038208008
    10. ' =
' → logprob: -16.639986038208008

Token 133: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.1797701120376587
    2. 'prefix' → logprob: -1.8047701120376587
    3. '(prefix' → logprob: -11.054770469665527
    4. '   ' → logprob: -11.804770469665527
    5. '_prefix' → logprob: -14.804770469665527
    6. '    ' → logprob: -14.804770469665527
    7. '       ' → logprob: -15.304770469665527
    8. ' ' → logprob: -15.429770469665527
    9. ' pref' → logprob: -15.929770469665527
    10. 'Prefix' → logprob: -16.17976951599121

Token 134: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. 'end' → logprob: -14.25000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '```' → logprob: -17.000003814697266
    6. '[int' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.000003814697266
    8. '(end' → logprob: -18.000003814697266
    9. '       ' → logprob: -18.000003814697266
    10. ',end' → logprob: -18.375003814697266

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.804671233519912e-05
    2. ' ]' → logprob: -9.87508773803711
    3. ']-' → logprob: -10.25008773803711
    4. '[' → logprob: -14.50008773803711
    5. ' -' → logprob: -15.25008773803711
    6. '   ' → logprob: -15.87508773803711
    7. ']
' → logprob: -15.87508773803711
    8. '-' → logprob: -17.25008773803711
    9. '"]' → logprob: -17.25008773803711
    10. ')' → logprob: -17.25008773803711

Token 136: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02999669499695301
    2. '-' → logprob: -3.529996633529663
    3. '-prefix' → logprob: -8.654996871948242
    4. ' ' → logprob: -10.029996871948242
    5. '        ' → logprob: -11.154996871948242
    6. '       ' → logprob: -12.279996871948242
    7. '   ' → logprob: -13.529996871948242
    8. '[' → logprob: -13.529996871948242
    9. ' ' → logprob: -13.654996871948242
    10. '    ' → logprob: -13.654996871948242

Token 137: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.002477081725373864
    2. ' prefix' → logprob: -6.002477169036865
    3. '(prefix' → logprob: -13.502476692199707
    4. '   ' → logprob: -19.002477645874023
    5. '_prefix' → logprob: -20.252477645874023
    6. '.prefix' → logprob: -20.502477645874023
    7. 'refix' → logprob: -20.502477645874023
    8. ' ' → logprob: -21.127477645874023
    9. '       ' → logprob: -21.502477645874023
    10. '  ' → logprob: -21.502477645874023

Token 138: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00020354038861114532
    2. 'start' → logprob: -8.500203132629395
    3. '[' → logprob: -16.37520408630371
    4. '(start' → logprob: -17.50020408630371
    5. ' start' → logprob: -18.50020408630371
    6. '	start' → logprob: -19.50020408630371
    7. '   ' → logprob: -20.25020408630371
    8. '[int' → logprob: -20.50020408630371
    9. '```' → logprob: -20.62520408630371
    10. '=start' → logprob: -21.37520408630371

Token 139: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01699221506714821
    2. '<|end|>' → logprob: -4.516992092132568
    3. ' ]' → logprob: -6.016992092132568
    4. '-' → logprob: -6.016992092132568
    5. '[' → logprob: -7.641992092132568
    6. '])' → logprob: -8.891992568969727
    7. ' -' → logprob: -9.141992568969727
    8. '<|end|>' → logprob: -9.266992568969727
    9. '   ' → logprob: -10.141992568969727
    10. '       ' → logprob: -10.266992568969727

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4036799371242523
    2. '<|end|>' → logprob: -1.1536799669265747
    3. '
' → logprob: -4.903679847717285
    4. '+' → logprob: -6.278679847717285
    5. ' else' → logprob: -6.653679847717285
    6. '    
' → logprob: -6.778679847717285
    7. '<|end|>' → logprob: -6.778679847717285
    8. 'else' → logprob: -7.153679847717285
    9. '       ' → logprob: -7.403679847717285
    10. ' ' → logprob: -7.653679847717285

Token 141: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6506927013397217
    2. ' else' → logprob: -0.9006927013397217
    3. '   ' → logprob: -2.6506927013397217
    4. '	else' → logprob: -7.400692939758301
    5. '<|end|>' → logprob: -8.0256929397583
    6. '    
' → logprob: -9.0256929397583
    7. '
' → logprob: -9.2756929397583
    8. '    ' → logprob: -9.5256929397583
    9. ' ' → logprob: -9.7756929397583
    10. ' 
' → logprob: -10.7756929397583

Token 142: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14774611592292786
    2. ':' → logprob: -2.2727460861206055
    3. '       ' → logprob: -3.3977460861206055
    4. '   ' → logprob: -7.7727460861206055
    5. ' :
' → logprob: -8.522746086120605
    6. '[' → logprob: -9.272746086120605
    7. '{' → logprob: -10.397746086120605
    8. '{
' → logprob: -10.897746086120605
    9. '    ' → logprob: -10.897746086120605
    10. ':
' → logprob: -11.147746086120605

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5841026902198792
    2. 'distance' → logprob: -1.2091026306152344
    3. ' distance' → logprob: -1.9591026306152344
    4. '   ' → logprob: -6.084102630615234
    5. '(distance' → logprob: -8.459102630615234
    6. '           ' → logprob: -9.459102630615234
    7. '```' → logprob: -9.834102630615234
    8. '    ' → logprob: -10.084102630615234
    9. '{
' → logprob: -10.459102630615234
    10. '      ' → logprob: -10.584102630615234

Token 144: ' distance' (ID: 9324)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.36529311537742615
    2. 'distance' (adapté à ' distance') → logprob: -1.2402931451797485
    3. ' prefix' → logprob: -4.490293025970459
    4. ' distance' → logprob: -5.490293025970459
    5. '   ' → logprob: -7.115293025970459
    6. '       ' → logprob: -8.365293502807617
    7. 'mod' → logprob: -9.240293502807617
    8. 'dist' → logprob: -9.240293502807617
    9. '           ' → logprob: -9.865293502807617
    10. '(prefix' → logprob: -10.740293502807617

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693651020526886
    2. '=' → logprob: -2.126936435699463
    3. ' ' → logprob: -12.626936912536621
    4. ' +=' → logprob: -13.251936912536621
    5. '   ' → logprob: -13.751936912536621
    6. ' =
' → logprob: -14.376936912536621
    7. ')' → logprob: -14.501936912536621
    8. ']' → logprob: -14.751936912536621
    9. '[' → logprob: -15.501936912536621
    10. ':' → logprob: -16.126935958862305

Token 146: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.637093722820282
    2. ' prefix' → logprob: -0.762093722820282
    3. '(prefix' → logprob: -5.512093544006348
    4. ' (' → logprob: -7.887093544006348
    5. '(' → logprob: -10.387093544006348
    6. 'mod' → logprob: -11.012093544006348
    7. 'dist' → logprob: -11.887093544006348
    8. '   ' → logprob: -12.387093544006348
    9. ' dist' → logprob: -13.262093544006348
    10. '(mod' → logprob: -13.387093544006348

Token 147: '[start' (ID: 62179)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.005543697625398636
    2. '[-' → logprob: -5.2555437088012695
    3. '[end' → logprob: -8.25554370880127
    4. 'n' → logprob: -10.50554370880127
    5. '[len' → logprob: -11.13054370880127
    6. '[' → logprob: -13.00554370880127
    7. 'end' → logprob: -13.00554370880127
    8. '[m' → logprob: -14.38054370880127
    9. '(n' → logprob: -14.38054370880127
    10. ' [' → logprob: -14.38054370880127

Token 148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034661905374377966
    2. ']-' → logprob: -6.2534661293029785
    3. '+' → logprob: -7.5034661293029785
    4. '+n' → logprob: -7.8784661293029785
    5. '-' → logprob: -8.503466606140137
    6. ' ]' → logprob: -9.003466606140137
    7. ']+' → logprob: -9.878466606140137
    8. '+]' → logprob: -9.878466606140137
    9. ' -' → logprob: -10.128466606140137
    10. '[' → logprob: -10.128466606140137

Token 149: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0334289073944092
    2. '-' → logprob: -1.5334289073944092
    3. 'n' → logprob: -1.9084289073944092
    4. '[n' → logprob: -1.9084289073944092
    5. '+n' → logprob: -3.158428907394409
    6. ' -' → logprob: -3.908428907394409
    7. '+' → logprob: -3.908428907394409
    8. ']-' → logprob: -4.408429145812988
    9. '[' → logprob: -4.658429145812988
    10. '-n' → logprob: -4.908429145812988

Token 150: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.004090627655386925
    2. ' prefix' → logprob: -5.504090785980225
    3. '(prefix' → logprob: -11.379090309143066
    4. 'pref' → logprob: -15.504090309143066
    5. 'refix' → logprob: -16.379091262817383
    6. '_prefix' → logprob: -16.379091262817383
    7. 'end' → logprob: -16.754091262817383
    8. '   ' → logprob: -16.754091262817383
    9. '
' → logprob: -16.879091262817383
    10. '```' → logprob: -17.004091262817383

Token 151: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.0002833848411682993
    2. 'end' → logprob: -8.250283241271973
    3. '[' → logprob: -11.000283241271973
    4. '[pos' → logprob: -13.000283241271973
    5. 'pos' → logprob: -13.750283241271973
    6. '(end' → logprob: -13.750283241271973
    7. '[start' → logprob: -15.000283241271973
    8. 'mod' → logprob: -15.000283241271973
    9. '=end' → logprob: -15.750283241271973
    10. ',end' → logprob: -16.62528419494629

Token 152: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5606473684310913
    2. '<|end|>' → logprob: -0.9356473684310913
    3. ')' → logprob: -3.810647487640381
    4. '<|end|>' → logprob: -5.560647487640381
    5. '   ' → logprob: -5.810647487640381
    6. '+' → logprob: -5.935647487640381
    7. '[' → logprob: -6.185647487640381
    8. '
' → logprob: -7.060647487640381
    9. ']+' → logprob: -7.435647487640381
    10. '}' → logprob: -8.185647010803223

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46022725105285645
    2. 'pos' → logprob: -1.4602272510528564
    3. '<|end|>' → logprob: -3.4602272510528564
    4. ')' → logprob: -3.8352272510528564
    5. ' pos' → logprob: -4.085227012634277
    6. '[pos' → logprob: -4.085227012634277
    7. '+' → logprob: -4.585227012634277
    8. '
' → logprob: -4.710227012634277
    9. '\n' → logprob: -5.085227012634277
    10. '[' → logprob: -5.460227012634277

Token 154: ' total' (ID: 3609)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.006144692189991474
    2. ' pos' → logprob: -5.6311445236206055
    3. '   ' → logprob: -7.2561445236206055
    4. '\n' → logprob: -7.5061445236206055
    5. '
' → logprob: -7.7561445236206055
    6. 'dist' → logprob: -8.631144523620605
    7. '%' → logprob: -8.756144523620605
    8. '```' → logprob: -9.006144523620605
    9. 'distance' → logprob: -9.881144523620605
    10. 'if' → logprob: -9.881144523620605

Token 155: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026438117027282715
    2. '+=' → logprob: -3.6514382362365723
    3. '+' → logprob: -9.026437759399414
    4. ' -=' → logprob: -11.901437759399414
    5. '=' → logprob: -12.526437759399414
    6. ' =' → logprob: -12.901437759399414
    7. ' +' → logprob: -13.151437759399414
    8. ']+=' → logprob: -14.276437759399414
    9. ' ^=' → logprob: -14.276437759399414
    10. ' ' → logprob: -15.151437759399414

Token 156: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10044194757938385
    2. ' distance' → logprob: -2.3504419326782227
    3. 'dist' → logprob: -9.100441932678223
    4. '(distance' → logprob: -9.225441932678223
    5. ' dist' → logprob: -11.600441932678223
    6. 'mod' → logprob: -12.100441932678223
    7. 'int' → logprob: -13.225441932678223
    8. 'abs' → logprob: -13.350441932678223
    9. ' (' → logprob: -13.350441932678223
    10. ' ' → logprob: -13.350441932678223

Token 157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7460559606552124
    2. '%' → logprob: -1.8710559606552124
    3. 'pos' → logprob: -1.9960559606552124
    4. '   ' → logprob: -2.371056079864502
    5. '\n' → logprob: -2.746056079864502
    6. '    
' → logprob: -3.371056079864502
    7. '<|end|>' → logprob: -4.246056079864502
    8. 'print' → logprob: -5.121056079864502
    9. '\' → logprob: -5.121056079864502
    10. '[pos' → logprob: -5.746056079864502

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04649555683135986
    2. '\n' → logprob: -3.7964954376220703
    3. 'print' → logprob: -5.29649543762207
    4. 'pos' → logprob: -5.54649543762207
    5. '\' → logprob: -5.67149543762207
    6. '    
' → logprob: -5.79649543762207
    7. '<|end|>' → logprob: -6.04649543762207
    8. '
' → logprob: -6.17149543762207
    9. ' pos' → logprob: -7.54649543762207
    10. '=' → logprob: -7.79649543762207

Token 159: ' total' (ID: 3609)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06401366740465164
    2. ' pos' → logprob: -2.814013719558716
    3. ' if' → logprob: -7.439013481140137
    4. '   ' → logprob: -7.564013481140137
    5. 'if' → logprob: -7.814013481140137
    6. 'print' → logprob: -8.439013481140137
    7. 'total' (adapté à ' total') → logprob: -8.689013481140137
    8. ' total' → logprob: -9.564013481140137
    9. 'mod' → logprob: -10.439013481140137
    10. ' print' → logprob: -10.939013481140137

Token 160: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7759820222854614
    2. ' %=' → logprob: -1.0259820222854614
    3. '%=' → logprob: -1.9009820222854614
    4. ' %' → logprob: -3.650981903076172
    5. '=' → logprob: -5.275981903076172
    6. ' =' → logprob: -7.525981903076172
    7. '```' → logprob: -9.900981903076172
    8. '%i' → logprob: -10.025981903076172
    9. ',' → logprob: -10.150981903076172
    10. '%
' → logprob: -10.275981903076172

Token 161: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.029758475720882416
    2. ' mod' → logprob: -3.5297584533691406
    3. '(mod' → logprob: -12.15475845336914
    4. '100' → logprob: -13.15475845336914
    5. ' ' → logprob: -14.77975845336914
    6. '10' → logprob: -15.02975845336914
    7. '	mod' → logprob: -16.27975845336914
    8. ' ' → logprob: -19.02975845336914
    9. ' мод' → logprob: -19.90475845336914
    10. ' (' → logprob: -19.90475845336914

Token 162: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3953798711299896
    2. '
' → logprob: -2.1453797817230225
    3. '   ' → logprob: -2.1453797817230225
    4. '\n' → logprob: -2.8953797817230225
    5. '<|end|>' → logprob: -4.270380020141602
    6. '\' → logprob: -5.270380020141602
    7. ' pos' → logprob: -5.395380020141602
    8. '[pos' → logprob: -5.645380020141602
    9. '    
' → logprob: -5.895380020141602
    10. '(pos' → logprob: -6.770380020141602

Token 163: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4673067033290863
    2. '   ' → logprob: -1.0923067331314087
    3. '
' → logprob: -3.842306613922119
    4. ' pos' → logprob: -5.467306613922119
    5. '\n' → logprob: -5.592306613922119
    6. '    
' → logprob: -5.967306613922119
    7. 'print' → logprob: -6.217306613922119
    8. '\' → logprob: -7.217306613922119
    9. '```' → logprob: -7.467306613922119
    10. '<|end|>' → logprob: -7.592306613922119

Token 164: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0065094358287751675
    2. ' pos' → logprob: -5.256509304046631
    3. '   ' → logprob: -7.006509304046631
    4. 'print' → logprob: -8.006509780883789
    5. 'if' → logprob: -10.756509780883789
    6. ' if' → logprob: -11.756509780883789
    7. ' print' → logprob: -12.881509780883789
    8. 'dist' → logprob: -14.006509780883789
    9. '```' → logprob: -14.381509780883789
    10. 'position' → logprob: -14.631509780883789

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2671859860420227
    2. '+=' → logprob: -1.517185926437378
    3. ' +=' → logprob: -4.392186164855957
    4. ' =' → logprob: -5.892186164855957
    5. '+' → logprob: -12.392186164855957
    6. '-=' → logprob: -14.392186164855957
    7. '%=' → logprob: -14.517186164855957
    8. '*=' → logprob: -15.642186164855957
    9. ']+=' → logprob: -15.767186164855957
    10. '.=' → logprob: -15.767186164855957

Token 166: ' end' (ID: 1268)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.4816144108772278
    2. 'end' → logprob: -1.231614351272583
    3. '(pos' → logprob: -3.606614351272583
    4. '((' → logprob: -3.856614351272583
    5. 'pos' → logprob: -3.856614351272583
    6. ' (' → logprob: -4.106614589691162
    7. ' end' → logprob: -5.606614589691162
    8. '(' → logprob: -7.731614589691162
    9. ' pos' → logprob: -8.606614112854004
    10. ' ((' → logprob: -9.106614112854004

Token 167: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.014168208464980125
    2. '(' → logprob: -4.2641682624816895
    3. 'total' → logprob: -12.514167785644531
    4. ' (' → logprob: -14.514167785644531
    5. '(
' → logprob: -15.639167785644531
    6. '()' → logprob: -15.764167785644531
    7. ' total' → logprob: -17.01416778564453
    8. '(t' → logprob: -17.51416778564453
    9. '("("' → logprob: -17.76416778564453
    10. '((' → logprob: -17.88916778564453

Token 170: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. ' )' → logprob: -10.500032424926758
    3. '+' → logprob: -13.000032424926758
    4. '))' → logprob: -14.250032424926758
    5. ')
' → logprob: -15.250032424926758
    6. '`)' → logprob: -15.500032424926758
    7. ')`' → logprob: -15.625032424926758
    8. '+)' → logprob: -15.750032424926758
    9. '#' → logprob: -15.875032424926758
    10. '')' → logprob: -16.250032424926758

Token 171: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0025158505886793137
    2. ' mod' → logprob: -6.00251579284668
    3. '(mod' → logprob: -10.12751579284668
    4. ' ' → logprob: -16.62751579284668
    5. '100' → logprob: -17.25251579284668
    6. '	mod' → logprob: -17.50251579284668
    7. '(' → logprob: -19.00251579284668
    8. ' (' → logprob: -19.75251579284668
    9. ' ' → logprob: -19.87751579284668
    10. '10' → logprob: -20.00251579284668

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009582702768966556
    2. '```' → logprob: -7.875958442687988
    3. ' )' → logprob: -8.500958442687988
    4. '<|end|>' → logprob: -8.875958442687988
    5. '\n' → logprob: -9.375958442687988
    6. '
' → logprob: -10.000958442687988
    7. '(' → logprob: -10.500958442687988
    8. '#' → logprob: -10.625958442687988
    9. '\' → logprob: -11.000958442687988
    10. '()' → logprob: -11.875958442687988


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 170
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 40.59%
Précision adaptée (1ère position): 42.94%
Précision (top 10): 80.59%
================================================================================
