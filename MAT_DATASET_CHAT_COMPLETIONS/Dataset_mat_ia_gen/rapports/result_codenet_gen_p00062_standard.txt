================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
for _ in range(20):
    try:
        line = input()
        if not line:
            break
    except EOFError:
        break
    nums = list(map(int, line.strip()))
    while len(nums) > 1:
        nums = [(nums[i] + nums[i+1]) % 10 for i in range(len(nums)-1)]
    print(nums[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'for' (ID: 1938)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: ' in' (ID: 306)
  → Token d'amorce (pas de prédiction)

Token 3: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04451332986354828
    2. 'range' → logprob: -3.41951322555542
    3. ' ' → logprob: -4.54451322555542
    4. '  ' → logprob: -9.169513702392578
    5. '`' → logprob: -10.169513702392578
    6. '```' → logprob: -11.044513702392578
    7. ' in' → logprob: -12.419513702392578
    8. '_range' → logprob: -12.419513702392578
    9. ' ```' → logprob: -12.919513702392578
    10. ' for' → logprob: -13.294513702392578

Token 4: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002137882256647572
    2. '```' → logprob: -8.875213623046875
    3. ' (' → logprob: -10.375213623046875
    4. '`' → logprob: -11.125213623046875
    5. '(
' → logprob: -12.125213623046875
    6. '(n' → logprob: -12.500213623046875
    7. '(`' → logprob: -13.125213623046875
    8. '1' → logprob: -13.250213623046875
    9. '(len' → logprob: -13.375213623046875
    10. ' ' → logprob: -13.375213623046875

Token 5: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00037919526221230626
    2. '0' → logprob: -9.25037956237793
    3. '5' → logprob: -9.25037956237793
    4. '1' → logprob: -9.62537956237793
    5. '100' → logprob: -9.62537956237793
    6. ')' → logprob: -10.00037956237793
    7. 'range' → logprob: -13.00037956237793
    8. '3' → logprob: -13.12537956237793
    9. '```' → logprob: -13.62537956237793
    10. ' ' → logprob: -13.87537956237793

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16027569770812988
    2. ')' → logprob: -1.9102756977081299
    3. ':' → logprob: -10.03527545928955
    4. '):
' → logprob: -13.66027545928955
    5. '```' → logprob: -13.78527545928955
    6. ')：' → logprob: -14.03527545928955
    7. ')**' → logprob: -14.41027545928955
    8. '),' → logprob: -14.66027545928955
    9. ')">' → logprob: -14.66027545928955
    10. '[' → logprob: -14.91027545928955

Token 7: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2546173334121704
    2. '   ' → logprob: -1.2546173334121704
    3. '"' → logprob: -2.129617214202881
    4. ':' → logprob: -2.379617214202881
    5. '\' → logprob: -3.129617214202881
    6. ' ' → logprob: -3.254617214202881
    7. '    
' → logprob: -3.254617214202881
    8. '\n' → logprob: -3.504617214202881
    9. ' 
' → logprob: -4.379617214202881
    10. '    ' → logprob: -4.504617214202881

Token 8: ' try' (ID: 2075)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5747182965278625
    2. '   ' → logprob: -1.3247182369232178
    3. '    ' → logprob: -1.9497182369232178
    4. ' ' → logprob: -4.574718475341797
    5. ''' → logprob: -5.324718475341797
    6. '    
' → logprob: -5.949718475341797
    7. ' print' → logprob: -6.074718475341797
    8. '#' → logprob: -6.574718475341797
    9. 'i' → logprob: -6.699718475341797
    10. 'a' → logprob: -6.699718475341797

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027730545843951404
    2. ' :' → logprob: -8.375277519226074
    3. ':
' → logprob: -10.375277519226074
    4. '   ' → logprob: -12.000277519226074
    5. '):' → logprob: -13.000277519226074
    6. '    ' → logprob: -14.125277519226074
    7. '":' → logprob: -14.250277519226074
    8. '':' → logprob: -14.250277519226074
    9. '():' → logprob: -14.375277519226074
    10. ':**' → logprob: -14.625277519226074

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029706917703151703
    2. '   ' → logprob: -6.1279706954956055
    3. '    ' → logprob: -8.127970695495605
    4. ':' → logprob: -9.252970695495605
    5. ' :' → logprob: -9.877970695495605
    6. '(' → logprob: -10.252970695495605
    7. '           ' → logprob: -10.502970695495605
    8. 'print' → logprob: -10.752970695495605
    9. '	   ' → logprob: -10.752970695495605
    10. '     ' → logprob: -10.877970695495605

Token 11: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1714676469564438
    2. 'print' → logprob: -2.6714675426483154
    3. '   ' → logprob: -4.2964677810668945
    4. 'x' → logprob: -4.2964677810668945
    5. '       ' → logprob: -4.4214677810668945
    6. '(' → logprob: -4.5464677810668945
    7. 'response' → logprob: -5.6714677810668945
    8. 's' → logprob: -5.7339677810668945
    9. 'r' → logprob: -5.7964677810668945
    10. 'a' → logprob: -6.0464677810668945

Token 12: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09794621914625168
    2. ' =' → logprob: -3.4729461669921875
    3. '=' → logprob: -3.9729461669921875
    4. ')' → logprob: -4.2229461669921875
    5. '[' → logprob: -4.9729461669921875
    6. '.readline' → logprob: -4.9729461669921875
    7. '       ' → logprob: -5.4729461669921875
    8. '[:]' → logprob: -5.4729461669921875
    9. ':' → logprob: -7.2229461669921875
    10. 's' → logprob: -7.2229461669921875

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3192024528980255
    2. 'input' → logprob: -1.6942024230957031
    3. ' f' → logprob: -2.819202423095703
    4. ' file' → logprob: -4.194202423095703
    5. 'file' → logprob: -5.194202423095703
    6. ' open' → logprob: -5.694202423095703
    7. 'f' → logprob: -6.444202423095703
    8. ' readline' → logprob: -6.819202423095703
    9. ' next' → logprob: -6.944202423095703
    10. 'open' → logprob: -7.819202423095703

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3156368136405945
    2. '()' → logprob: -1.3156368732452393
    3. '('' → logprob: -6.56563663482666
    4. ')' → logprob: -8.06563663482666
    5. '("("' → logprob: -8.94063663482666
    6. '```' → logprob: -9.06563663482666
    7. '())' → logprob: -9.44063663482666
    8. '("")' → logprob: -9.94063663482666
    9. '("' → logprob: -10.44063663482666
    10. ''' → logprob: -10.69063663482666

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43551120162010193
    2. ')' → logprob: -1.5605112314224243
    3. '.' → logprob: -3.4355111122131348
    4. '\' → logprob: -3.8105111122131348
    5. '\n' → logprob: -4.185511112213135
    6. '        
' → logprob: -4.310511112213135
    7. '()' → logprob: -4.435511112213135
    8. '   ' → logprob: -4.685511112213135
    9. '           ' → logprob: -5.560511112213135
    10. '<|end|>' → logprob: -5.560511112213135

Token 16: ' if' (ID: 538)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5718281865119934
    2. '       ' → logprob: -0.9468281865119934
    3. 'if' (adapté à ' if') → logprob: -4.446828365325928
    4. ' if' → logprob: -4.571828365325928
    5. '           ' → logprob: -4.821828365325928
    6. '.strip' → logprob: -5.196828365325928
    7. ')' → logprob: -5.446828365325928
    8. '   ' → logprob: -6.446828365325928
    9. '.split' → logprob: -6.821828365325928
    10. 'print' → logprob: -7.196828365325928

Token 17: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7836679816246033
    2. ' not' → logprob: -0.9086679816246033
    3. ' ' → logprob: -2.033668041229248
    4. ' len' → logprob: -4.783668041229248
    5. 'line' → logprob: -7.908668041229248
    6. 'not' → logprob: -8.40866756439209
    7. ' ' → logprob: -8.90866756439209
    8. ''' → logprob: -9.78366756439209
    9. ' '' → logprob: -9.78366756439209
    10. ' lines' → logprob: -10.15866756439209

Token 18: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0009420731803402305
    2. 'line' → logprob: -7.000942230224609
    3. ' ' → logprob: -10.50094223022461
    4. ' lines' → logprob: -13.87594223022461
    5. ' ' → logprob: -14.37594223022461
    6. '	line' → logprob: -14.62594223022461
    7. '(line' → logprob: -14.87594223022461
    8. ' len' → logprob: -15.75094223022461
    9. '=line' → logprob: -15.87594223022461
    10. ' isinstance' → logprob: -16.00094223022461

Token 19: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01072660367935896
    2. '.strip' → logprob: -5.260726451873779
    3. '.startswith' → logprob: -5.635726451873779
    4. ' .' → logprob: -6.510726451873779
    5. ':' → logprob: -8.010726928710938
    6. '.endswith' → logprob: -9.635726928710938
    7. '.rstrip' → logprob: -11.635726928710938
    8. ' or' → logprob: -12.510726928710938
    9. ' :' → logprob: -13.010726928710938
    10. '.readline' → logprob: -13.010726928710938

Token 20: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00991545245051384
    2. ':' → logprob: -5.384915351867676
    3. '       ' → logprob: -5.759915351867676
    4. ':
' → logprob: -7.384915351867676
    5. ' break' → logprob: -7.509915351867676
    6. ' continue' → logprob: -8.134915351867676
    7. '   ' → logprob: -8.384915351867676
    8. 'continue' → logprob: -8.634915351867676
    9. '               ' → logprob: -9.884915351867676
    10. 'break' → logprob: -10.259915351867676

Token 21: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02672334387898445
    2. '           ' → logprob: -4.151723384857178
    3. 'break' (adapté à ' break') → logprob: -4.901723384857178
    4. '       ' → logprob: -6.401723384857178
    5. '               ' → logprob: -7.651723384857178
    6. '   ' → logprob: -8.15172290802002
    7. ' ' → logprob: -8.27672290802002
    8. ' continue' → logprob: -8.90172290802002
    9. '\n' → logprob: -9.02672290802002
    10. '	break' → logprob: -9.40172290802002

Token 22: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5838178396224976
    2. '\n' → logprob: -2.083817958831787
    3. ':' → logprob: -2.333817958831787
    4. ')' → logprob: -2.958817958831787
    5. '   ' → logprob: -2.958817958831787
    6. '\' → logprob: -3.208817958831787
    7. '\r' → logprob: -4.333817958831787
    8. ':
' → logprob: -4.583817958831787
    9. '<|end|>' → logprob: -4.708817958831787
    10. '        
' → logprob: -5.083817958831787

Token 23: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1563830375671387
    2. ':' → logprob: -1.7813830375671387
    3. '   ' → logprob: -2.0313830375671387
    4. ')' → logprob: -2.0313830375671387
    5. '\n' → logprob: -2.1563830375671387
    6. '\' → logprob: -3.1563830375671387
    7. ':
' → logprob: -4.031383037567139
    8. '\r' → logprob: -4.031383037567139
    9. '    
' → logprob: -4.281383037567139
    10. '.' → logprob: -4.781383037567139

Token 24: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2511851191520691
    2. ':' → logprob: -1.6261851787567139
    3. '   ' → logprob: -5.001184940338135
    4. '.' → logprob: -5.251184940338135
    5. '<|end|>' → logprob: -6.126184940338135
    6. '    ' → logprob: -6.376184940338135
    7. ':
' → logprob: -6.626184940338135
    8. '\n' → logprob: -6.626184940338135
    9. '\' → logprob: -7.001184940338135
    10. ')' → logprob: -7.126184940338135

Token 25: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.008128701709210873
    2. ' ' → logprob: -4.883128643035889
    3. 'EOF' → logprob: -7.633128643035889
    4. ' ' → logprob: -10.758129119873047
    5. ' Exception' → logprob: -11.883129119873047
    6. ' Keyboard' → logprob: -12.383129119873047
    7. ' (' → logprob: -13.383129119873047
    8. '  ' → logprob: -14.133129119873047
    9. ' IOError' → logprob: -14.133129119873047
    10. ' 
' → logprob: -14.633129119873047

Token 26: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.875
    3. 'error' → logprob: -19.125
    4. ' Error' → logprob: -19.5
    5. 'Erro' → logprob: -20.25
    6. ':' → logprob: -20.25
    7. '```' → logprob: -21.125
    8. 'E' → logprob: -21.25
    9. 'Er' → logprob: -21.375
    10. '	Error' → logprob: -21.75

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016027313540689647
    2. '       ' → logprob: -9.500160217285156
    3. ':
' → logprob: -9.500160217285156
    4. ' :' → logprob: -12.000160217285156
    5. '   ' → logprob: -13.375160217285156
    6. ':**' → logprob: -14.125160217285156
    7. '           ' → logprob: -14.375160217285156
    8. ' as' → logprob: -14.750160217285156
    9. ':return' → logprob: -14.875160217285156
    10. '):' → logprob: -15.000160217285156

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001112116384319961
    2. '   ' → logprob: -7.50111198425293
    3. ' break' → logprob: -8.25111198425293
    4. '           ' → logprob: -8.37611198425293
    5. '    ' → logprob: -10.62611198425293
    6. ' ' → logprob: -11.37611198425293
    7. ' ' → logprob: -11.75111198425293
    8. '        ' → logprob: -12.75111198425293
    9. '<|end|>' → logprob: -12.75111198425293
    10. 'break' → logprob: -13.00111198425293

Token 29: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02184474468231201
    2. 'break' (adapté à ' break') → logprob: -4.521844863891602
    3. '       ' → logprob: -4.771844863891602
    4. '   ' → logprob: -6.396844863891602
    5. '           ' → logprob: -7.896844863891602
    6. '	break' → logprob: -8.646844863891602
    7. ' ' → logprob: -10.021844863891602
    8. '    ' → logprob: -12.771844863891602
    9. ' ' → logprob: -13.021844863891602
    10. '_break' → logprob: -13.021844863891602

Token 30: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24409246444702148
    2. '   ' → logprob: -1.9940924644470215
    3. '       ' → logprob: -2.9940924644470215
    4. '
' → logprob: -4.9940924644470215
    5. ':
' → logprob: -5.1190924644470215
    6. '    
' → logprob: -5.6190924644470215
    7. '<|end|>' → logprob: -5.8690924644470215
    8. ')' → logprob: -6.1190924644470215
    9. '.' → logprob: -6.6190924644470215
    10. '\n' → logprob: -6.9940924644470215

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4363473355770111
    2. '   ' → logprob: -1.1863473653793335
    3. '       ' → logprob: -3.186347246170044
    4. '    
' → logprob: -6.061347484588623
    5. ':
' → logprob: -7.186347484588623
    6. ',' → logprob: -7.686347484588623
    7. '    ' → logprob: -7.686347484588623
    8. '<|end|>' → logprob: -7.936347484588623
    9. '```' → logprob: -8.311347007751465
    10. '        
' → logprob: -8.311347007751465

Token 32: ' nums' (ID: 18117)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.358894020318985
    2. '       ' → logprob: -1.8588939905166626
    3. '   ' → logprob: -1.9838939905166626
    4. '.' → logprob: -5.858893871307373
    5. ':
' → logprob: -7.358893871307373
    6. '    ' → logprob: -7.483893871307373
    7. ',' → logprob: -7.608893871307373
    8. '[' → logprob: -7.858893871307373
    9. '    
' → logprob: -7.858893871307373
    10. ')' → logprob: -7.983893871307373

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6850053668022156
    2. '.' → logprob: -1.3100054264068604
    3. '=' → logprob: -2.0600054264068604
    4. '[' → logprob: -2.4350054264068604
    5. '.append' → logprob: -4.935005187988281
    6. '[:]' → logprob: -6.685005187988281
    7. '.extend' → logprob: -7.185005187988281
    8. '   ' → logprob: -7.810005187988281
    9. ')' → logprob: -7.935005187988281
    10. '_' → logprob: -8.310005187988281

Token 34: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07877366989850998
    2. 'list' → logprob: -3.5787737369537354
    3. ' line' → logprob: -3.8287737369537354
    4. ' [' → logprob: -4.453773498535156
    5. '[line' → logprob: -5.203773498535156
    6. '[' → logprob: -5.328773498535156
    7. 'line' → logprob: -6.078773498535156
    8. '[list' → logprob: -6.703773498535156
    9. '[]' → logprob: -8.203773498535156
    10. ' []' → logprob: -8.828773498535156

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006934931734576821
    2. '(int' → logprob: -8.250693321228027
    3. '(nums' → logprob: -9.000693321228027
    4. '(range' → logprob: -9.125693321228027
    5. '(map' → logprob: -9.500693321228027
    6. '(line' → logprob: -9.500693321228027
    7. '(eval' → logprob: -11.125693321228027
    8. '(numbers' → logprob: -11.875693321228027
    9. '(input' → logprob: -12.500693321228027
    10. '()' → logprob: -12.875693321228027

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03812147304415703
    2. '(' → logprob: -3.288121461868286
    3. '(str' → logprob: -9.913121223449707
    4. 'int' → logprob: -11.038121223449707
    5. '(lambda' → logprob: -12.163121223449707
    6. '(
' → logprob: -12.163121223449707
    7. '<int' → logprob: -13.163121223449707
    8. ' int' → logprob: -14.288121223449707
    9. '=int' → logprob: -15.038121223449707
    10. '(float' → logprob: -15.538121223449707

Token 37: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.11385677009820938
    2. '(' → logprob: -2.863856792449951
    3. '(input' → logprob: -3.363856792449951
    4. ',' → logprob: -4.488856792449951
    5. ',line' → logprob: -5.863856792449951
    6. ',input' → logprob: -6.738856792449951
    7. ' (' → logprob: -8.738856315612793
    8. ')' → logprob: -8.738856315612793
    9. '(
' → logprob: -8.988856315612793
    10. 'input' → logprob: -9.488856315612793

Token 38: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.038120560348033905
    2. 'line' → logprob: -3.2881205081939697
    3. '(line' → logprob: -9.78812026977539
    4. '	line' → logprob: -11.28812026977539
    5. '[line' → logprob: -12.66312026977539
    6. '#line' → logprob: -13.28812026977539
    7. '=line' → logprob: -13.53812026977539
    8. ',line' → logprob: -13.66312026977539
    9. ')' → logprob: -13.78812026977539
    10. ' input' → logprob: -14.53812026977539

Token 39: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.18923375010490417
    2. '.' → logprob: -1.9392337799072266
    3. '.strip' → logprob: -3.5642337799072266
    4. ' .' → logprob: -8.939233779907227
    5. '().' → logprob: -9.689233779907227
    6. '.rstrip' → logprob: -10.314233779907227
    7. ')' → logprob: -11.064233779907227
    8. '   ' → logprob: -11.064233779907227
    9. '.readline' → logprob: -11.939233779907227
    10. ').' → logprob: -13.189233779907227

Token 40: '()))
' (ID: 24521)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008852534228935838
    2. '()' → logprob: -7.125885486602783
    3. '('' → logprob: -9.875885009765625
    4. ' ().' → logprob: -11.375885009765625
    5. '(' → logprob: -12.375885009765625
    6. '()
' → logprob: -12.750885009765625
    7. '())' → logprob: -12.875885009765625
    8. '()))' → logprob: -13.000885009765625
    9. '().'' → logprob: -13.375885009765625
    10. '('').' → logprob: -14.125885009765625

Token 41: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036890123039484024
    2. '.split' → logprob: -4.161890029907227
    3. '[' → logprob: -4.536890029907227
    4. '()' → logprob: -5.286890029907227
    5. '(' → logprob: -6.036890029907227
    6. '())' → logprob: -7.161890029907227
    7. '<|end|>' → logprob: -8.286890029907227
    8. '(split' → logprob: -8.411890029907227
    9. 'split' → logprob: -8.411890029907227
    10. '   ' → logprob: -8.786890029907227

Token 42: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005364783573895693
    2. '[' → logprob: -6.005364894866943
    3. 'if' → logprob: -7.755364894866943
    4. '[:]' → logprob: -8.005364418029785
    5. '+' → logprob: -8.130364418029785
    6. ':' → logprob: -8.130364418029785
    7. '<|end|>' → logprob: -8.380364418029785
    8. '   ' → logprob: -8.380364418029785
    9. '#' → logprob: -8.880364418029785
    10. ' ' → logprob: -8.880364418029785

Token 43: ' len' (ID: 4631)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.15004894137382507
    2. ' len' → logprob: -2.6500489711761475
    3. 'nums' → logprob: -3.0250489711761475
    4. '(nums' → logprob: -4.525048732757568
    5. 'len' → logprob: -5.275048732757568
    6. ' not' → logprob: -5.900048732757568
    7. ' ' → logprob: -7.400048732757568
    8. ' '' → logprob: -8.900049209594727
    9. ' stack' → logprob: -9.400049209594727
    10. '    ' → logprob: -9.525049209594727

Token 44: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.0010468624532222748
    2. '(' → logprob: -6.876046657562256
    3. '(num' → logprob: -11.501047134399414
    4. '(s' → logprob: -13.251047134399414
    5. '(numbers' → logprob: -14.126047134399414
    6. '(n' → logprob: -14.626047134399414
    7. ' (' → logprob: -15.126047134399414
    8. 'nums' → logprob: -15.251047134399414
    9. ' nums' → logprob: -15.876047134399414
    10. '(tokens' → logprob: -16.251047134399414

Token 45: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2226797640323639
    2. ')' → logprob: -2.222679853439331
    3. ' >' → logprob: -3.097679853439331
    4. '<' → logprob: -3.472679853439331
    5. '>' → logprob: -4.347679615020752
    6. ' and' → logprob: -7.097679615020752
    7. ')>' → logprob: -8.22268009185791
    8. ' )' → logprob: -8.34768009185791
    9. ')<' → logprob: -8.47268009185791
    10. '()<' → logprob: -8.72268009185791

Token 46: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9130597114562988
    2. ' <' → logprob: -1.2880597114562988
    3. ' >' → logprob: -1.6630597114562988
    4. '<' → logprob: -2.038059711456299
    5. ' and' → logprob: -6.913059711456299
    6. '<|end|>' → logprob: -7.663059711456299
    7. ')' → logprob: -7.913059711456299
    8. '()>' → logprob: -8.53805923461914
    9. 'and' → logprob: -8.78805923461914
    10. ' >=' → logprob: -8.91305923461914

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005100222188048065
    2. ' ' → logprob: -8.000510215759277
    3. '2' → logprob: -9.625510215759277
    4. '>' → logprob: -9.875510215759277
    5. '0' → logprob: -10.500510215759277
    6. '3' → logprob: -11.875510215759277
    7. '4' → logprob: -12.125510215759277
    8. '9' → logprob: -12.250510215759277
    9. '10' → logprob: -12.625510215759277
    10. '20' → logprob: -13.375510215759277

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00987118761986494
    2. '10' → logprob: -5.884871006011963
    3. '20' → logprob: -5.884871006011963
    4. '0' → logprob: -6.509871006011963
    5. '2' → logprob: -7.759871006011963
    6. '9' → logprob: -7.759871006011963
    7. '4' → logprob: -7.884871006011963
    8. '5' → logprob: -8.009871482849121
    9. '7' → logprob: -8.259871482849121
    10. '19' → logprob: -8.384871482849121

Token 49: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016296876594424248
    2. 'and' → logprob: -4.891296863555908
    3. ':' → logprob: -5.516296863555908
    4. ':
' → logprob: -5.516296863555908
    5. '   ' → logprob: -7.516296863555908
    6. '	and' → logprob: -10.641297340393066
    7. '       ' → logprob: -11.266297340393066
    8. ' ' → logprob: -11.516297340393066
    9. '    ' → logprob: -12.391297340393066
    10. ' :
' → logprob: -13.266297340393066

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08739952743053436
    2. '   ' → logprob: -2.962399482727051
    3. ' if' → logprob: -4.837399482727051
    4. '<|end|>' → logprob: -4.837399482727051
    5. '    ' → logprob: -5.337399482727051
    6. '[' → logprob: -5.712399482727051
    7. ' ' → logprob: -5.962399482727051
    8. ' and' → logprob: -6.587399482727051
    9. ',' → logprob: -7.212399482727051
    10. ' for' → logprob: -7.962399482727051

Token 51: ' nums' (ID: 18117)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6113368272781372
    2. ' nums' → logprob: -1.6113368272781372
    3. 'nums' (adapté à ' nums') → logprob: -1.9863368272781372
    4. '   ' → logprob: -2.3613367080688477
    5. '    ' → logprob: -2.7363367080688477
    6. '       ' → logprob: -2.9863367080688477
    7. ' ' → logprob: -3.1113367080688477
    8. ' new' → logprob: -3.2363367080688477
    9. ' s' → logprob: -3.4863367080688477
    10. 's' → logprob: -3.6113367080688477

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09369930624961853
    2. ' =' → logprob: -2.4686992168426514
    3. '[' → logprob: -5.5936994552612305
    4. '.pop' → logprob: -7.3436994552612305
    5. '[:]' → logprob: -8.46869945526123
    6. '[-' → logprob: -9.21869945526123
    7. '.append' → logprob: -10.34369945526123
    8. '=[' → logprob: -10.71869945526123
    9. '.' → logprob: -13.09369945526123
    10. '[:-' → logprob: -13.09369945526123

Token 53: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07620996236801147
    2. ' [' → logprob: -3.7012100219726562
    3. '[num' → logprob: -3.7012100219726562
    4. '[list' → logprob: -3.9512100219726562
    5. '[n' → logprob: -6.826210021972656
    6. '[int' → logprob: -7.201210021972656
    7. '[len' → logprob: -7.576210021972656
    8. '[str' → logprob: -7.826210021972656
    9. '[next' → logprob: -8.076210021972656
    10. '[new' → logprob: -8.326210021972656

Token 54: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0008423840627074242
    2. '(nums' → logprob: -7.625842571258545
    3. ' nums' → logprob: -8.125842094421387
    4. 'abs' → logprob: -10.625842094421387
    5. 'a' → logprob: -11.250842094421387
    6. 'x' → logprob: -11.375842094421387
    7. 'sum' → logprob: -12.500842094421387
    8. 'num' → logprob: -13.375842094421387
    9. 'n' → logprob: -14.000842094421387
    10. 'max' → logprob: -14.625842094421387

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019305046589579433
    2. '[j' → logprob: -8.625192642211914
    3. '[n' → logprob: -12.125192642211914
    4. '[' → logprob: -12.375192642211914
    5. '[k' → logprob: -13.625192642211914
    6. '[a' → logprob: -13.875192642211914
    7. '[x' → logprob: -14.625192642211914
    8. '[idx' → logprob: -14.750192642211914
    9. '[-' → logprob: -15.625192642211914
    10. ' [' → logprob: -16.750192642211914

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12951883673667908
    2. ']+' → logprob: -2.129518747329712
    3. '+' → logprob: -6.004518985748291
    4. '-' → logprob: -10.254518508911133
    5. ' +' → logprob: -10.754518508911133
    6. ' ]' → logprob: -10.754518508911133
    7. ')' → logprob: -11.629518508911133
    8. '}' → logprob: -12.129518508911133
    9. ')+' → logprob: -12.254518508911133
    10. '   ' → logprob: -12.629518508911133

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.034088097512722015
    2. ' +' → logprob: -3.409088134765625
    3. ')+' → logprob: -8.534088134765625
    4. ']+' → logprob: -9.409088134765625
    5. '-' → logprob: -9.534088134765625
    6. ')' → logprob: -9.784088134765625
    7. ' ' → logprob: -12.284088134765625
    8. ' plus' → logprob: -12.534088134765625
    9. ' -' → logprob: -12.784088134765625
    10. '*' → logprob: -12.909088134765625

Token 58: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.4287579655647278
    2. 'nums' → logprob: -1.053757905960083
    3. '(nums' → logprob: -10.803757667541504
    4. '    ' → logprob: -10.803757667541504
    5. '  ' → logprob: -12.053757667541504
    6. ' ' → logprob: -12.053757667541504
    7. '   ' → logprob: -13.053757667541504
    8. '_nums' → logprob: -14.178757667541504
    9. '     ' → logprob: -14.928757667541504
    10. 'num' → logprob: -14.928757667541504

Token 59: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6938648223876953
    2. '[i' → logprob: -0.6938648223876953
    3. '+i' → logprob: -7.818864822387695
    4. '[' → logprob: -8.568864822387695
    5. 'i' → logprob: -9.943864822387695
    6. ' +' → logprob: -10.443864822387695
    7. '1' → logprob: -10.568864822387695
    8. '(i' → logprob: -12.318864822387695
    9. '[next' → logprob: -12.943864822387695
    10. 's' → logprob: -13.193864822387695

Token 60: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017083751736208797
    2. ' +' → logprob: -6.376708507537842
    3. '1' → logprob: -12.376708030700684
    4. '-' → logprob: -14.251708030700684
    5. '   ' → logprob: -14.626708030700684
    6. '+
' → logprob: -15.001708030700684
    7. ' ' → logprob: -15.501708030700684
    8. ']+' → logprob: -16.251708984375
    9. '+i' → logprob: -16.501708984375
    10. '＋' → logprob: -16.501708984375

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.368984107510187e-05
    2. ' ' → logprob: -10.500033378601074
    3. '])' → logprob: -13.250033378601074
    4. '   ' → logprob: -13.500033378601074
    5. ']' → logprob: -13.875033378601074
    6. '2' → logprob: -15.187533378601074
    7. '  ' → logprob: -15.250033378601074
    8. ')' → logprob: -15.437533378601074
    9. '```' → logprob: -15.687533378601074
    10. '+' → logprob: -15.937533378601074

Token 62: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22834905982017517
    2. '])' → logprob: -1.6033490896224976
    3. ')%' → logprob: -5.978349208831787
    4. ' )' → logprob: -8.478348731994629
    5. '})' → logprob: -9.728348731994629
    6. '))' → logprob: -10.728348731994629
    7. '）' → logprob: -10.728348731994629
    8. '   ' → logprob: -10.978348731994629
    9. ' ' → logprob: -10.978348731994629
    10. ')])' → logprob: -11.353348731994629

Token 63: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04606874659657478
    2. '%' → logprob: -3.4210686683654785
    3. ')%' → logprob: -4.5460686683654785
    4. ' )' → logprob: -6.9210686683654785
    5. ' %' → logprob: -7.2960686683654785
    6. ']' → logprob: -9.671069145202637
    7. ']%' → logprob: -12.546069145202637
    8. '%)' → logprob: -13.421069145202637
    9. '）' → logprob: -14.421069145202637
    10. '   ' → logprob: -14.546069145202637

Token 64: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00039730319986119866
    2. ' ' → logprob: -8.500397682189941
    3. '1' → logprob: -8.625397682189941
    4. '2' → logprob: -11.500397682189941
    5. '```' → logprob: -13.125397682189941
    6. '100' → logprob: -14.000397682189941
    7. '9' → logprob: -15.812897682189941
    8. '3' → logprob: -15.812897682189941
    9. '
' → logprob: -15.937897682189941
    10. '7' → logprob: -16.000396728515625

Token 65: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.392824874026701e-05
    2. '1' → logprob: -11.00003433227539
    3. '2' → logprob: -11.62503433227539
    4. '100' → logprob: -13.12503433227539
    5. ' ' → logprob: -13.12503433227539
    6. '{' → logprob: -14.12503433227539
    7. '9' → logprob: -14.12503433227539
    8. '```' → logprob: -15.00003433227539
    9. '101' → logprob: -15.12503433227539
    10. '13' → logprob: -15.12503433227539

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1795770823955536
    2. '       ' → logprob: -2.179577112197876
    3. 'for' → logprob: -3.054577112197876
    4. '   ' → logprob: -5.804576873779297
    5. '           ' → logprob: -7.304576873779297
    6. ' ' → logprob: -9.054576873779297
    7. '	for' → logprob: -9.179576873779297
    8. '      ' → logprob: -10.054576873779297
    9. '    ' → logprob: -10.054576873779297
    10. '               ' → logprob: -10.179576873779297

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003585840167943388
    2. 'i' → logprob: -8.000358581542969
    3. '	i' → logprob: -10.750358581542969
    4. ' ' → logprob: -13.625358581542969
    5. '<|end|>' → logprob: -16.25035858154297
    6. ' ' → logprob: -16.37535858154297
    7. ' range' → logprob: -16.50035858154297
    8. '  ' → logprob: -17.25035858154297
    9. '   ' → logprob: -17.25035858154297
    10. '```' → logprob: -17.37535858154297

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003420183784328401
    2. 'in' → logprob: -8.12534236907959
    3. ' range' → logprob: -11.62534236907959
    4. '+' → logprob: -11.75034236907959
    5. ' ' → logprob: -11.75034236907959
    6. 'range' → logprob: -11.87534236907959
    7. '<|end|>' → logprob: -11.87534236907959
    8. ' i' → logprob: -12.12534236907959
    9. '<|end|>' → logprob: -14.25034236907959
    10. '	in' → logprob: -14.87534236907959

Token 69: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759440064430237
    2. ' range' → logprob: -0.8259440064430237
    3. '(range' → logprob: -13.200943946838379
    4. '	range' → logprob: -13.200943946838379
    5. ' xrange' → logprob: -14.575943946838379
    6. ' ' → logprob: -15.450943946838379
    7. '  ' → logprob: -17.825944900512695
    8. '   ' → logprob: -17.950944900512695
    9. 'ange' → logprob: -18.200944900512695
    10. '_range' → logprob: -18.575944900512695

Token 70: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'len' → logprob: -16.7500057220459
    4. ' len' → logprob: -18.1250057220459
    5. ' (' → logprob: -18.2500057220459
    6. '[len' → logprob: -20.1250057220459
    7. '<len' → logprob: -20.1250057220459
    8. '	len' → logprob: -20.5000057220459
    9. '(-' → logprob: -20.7500057220459
    10. '(length' → logprob: -20.8750057220459

Token 71: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. '(numbers' → logprob: -16.000028610229492
    4. 'nums' → logprob: -16.375028610229492
    5. '-' → logprob: -17.250028610229492
    6. ' nums' → logprob: -17.875028610229492
    7. '(num' → logprob: -18.250028610229492
    8. ' -' → logprob: -19.125028610229492
    9. ' (' → logprob: -19.625028610229492
    10. ' ' → logprob: -19.875028610229492

Token 72: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5810559988021851
    2. ')' → logprob: -1.206055998802185
    3. '-' → logprob: -2.0810561180114746
    4. ')-' → logprob: -4.331056118011475
    5. ' ' → logprob: -6.831056118011475
    6. ' )' → logprob: -7.331056118011475
    7. '   ' → logprob: -7.331056118011475
    8. '()-' → logprob: -7.331056118011475
    9. '()' → logprob: -8.456055641174316
    10. '1' → logprob: -9.706055641174316

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. ')' → logprob: -14.250205039978027
    4. '```' → logprob: -14.875205039978027
    5. '<|end|>' → logprob: -16.00020408630371
    6. '   ' → logprob: -16.50020408630371
    7. '2' → logprob: -17.25020408630371
    8. '  ' → logprob: -17.62520408630371
    9. '0' → logprob: -18.12520408630371
    10. '۱' → logprob: -18.18770408630371

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002659847668837756
    2. ']' → logprob: -8.375266075134277
    3. ')' → logprob: -11.250266075134277
    4. '   ' → logprob: -11.875266075134277
    5. '       ' → logprob: -12.000266075134277
    6. ' )' → logprob: -12.500266075134277
    7. ')]
' → logprob: -13.375266075134277
    8. ' ]' → logprob: -13.750266075134277
    9. ')])' → logprob: -14.125266075134277
    10. '])]' → logprob: -14.750266075134277

Token 75: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3495650291442871
    2. '   ' → logprob: -1.224565029144287
    3. ' print' → logprob: -7.474565029144287
    4. '    
' → logprob: -8.349565505981445
    5. '
' → logprob: -8.474565505981445
    6. '```' → logprob: -9.599565505981445
    7. '<|end|>' → logprob: -10.849565505981445
    8. 'for' → logprob: -12.849565505981445
    9. '  
' → logprob: -12.974565505981445
    10. '       ' → logprob: -13.099565505981445

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09105759114027023
    2. ' print' → logprob: -2.966057538986206
    3. '   ' → logprob: -3.341057538986206
    4. '    
' → logprob: -9.841057777404785
    5. '
' → logprob: -10.841057777404785
    6. '```' → logprob: -11.466057777404785
    7. ' ' → logprob: -11.716057777404785
    8. '	print' → logprob: -12.091057777404785
    9. '  
' → logprob: -12.216057777404785
    10. ' 
' → logprob: -12.216057777404785

Token 77: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.001963605172932148
    2. '(' → logprob: -6.2519636154174805
    3. '('' → logprob: -11.25196361541748
    4. '(sum' → logprob: -11.62696361541748
    5. '(*' → logprob: -12.37696361541748
    6. '()' → logprob: -13.12696361541748
    7. '(num' → logprob: -13.25196361541748
    8. '(chars' → logprob: -14.12696361541748
    9. '(n' → logprob: -14.25196361541748
    10. '((' → logprob: -14.50196361541748

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -14.250000953674316
    3. '0' → logprob: -18.5
    4. '```' → logprob: -19.625
    5. '))' → logprob: -20.0
    6. ' [' → logprob: -20.625
    7. '()[' → logprob: -20.875
    8. '   ' → logprob: -20.875
    9. '[
' → logprob: -21.0
    10. ')[' → logprob: -21.25

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '０' → logprob: -19.062501907348633
    6. '٠' → logprob: -19.062501907348633
    7. '00' → logprob: -19.187501907348633
    8. '012' → logprob: -20.187501907348633
    9. '000' → logprob: -20.250001907348633
    10. ')' → logprob: -20.375001907348633

Token 80: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.375003814697266
    4. '])' → logprob: -15.500003814697266
    5. '})' → logprob: -15.875003814697266
    6. ')
' → logprob: -17.250003814697266
    7. ')`' → logprob: -17.875003814697266
    8. ')}' → logprob: -18.000003814697266
    9. '）' → logprob: -18.500003814697266
    10. '`)' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 44.87%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 85.90%
================================================================================
