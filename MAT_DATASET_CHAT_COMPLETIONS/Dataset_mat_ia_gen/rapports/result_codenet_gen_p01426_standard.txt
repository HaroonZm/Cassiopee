================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
N,M=map(int,input().split())
V=[list(map(float,input().split())) for _ in range(M)]

def dot(u,v): return sum(x*y for x,y in zip(u,v))
def scalar_mult(a,v): return [a*x for x in v]
def vec_sub(u,v): return [x-y for x,y in zip(u,v)]
def norm2(v): return dot(v,v)

dp=[0]*M
for i in range(M):
    best=norm2(V[i])
    for j in range(i):
        s=dot(V[i],V[j])
        if s==0: val=norm2(V[i])
        else:
            r=s/dot(V[j],V[j])
            diff=vec_sub(V[i],scalar_mult(r,V[j]))
            val=norm2(diff)
        if dp[j]+val<best:
            best=dp[j]+val
    dp[i]=best
print(f"{dp[M-1]:.9f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011133047519251704
    2. '[' → logprob: -7.501113414764404
    3. ' .' → logprob: -8.376112937927246
    4. '.readline' → logprob: -8.501112937927246
    5. '.
' → logprob: -10.876112937927246
    6. '.[' → logprob: -11.126112937927246
    7. '.get' → logprob: -11.251112937927246
    8. '.setdefault' → logprob: -11.501112937927246
    9. ''.' → logprob: -12.126112937927246
    10. '"."' → logprob: -12.251112937927246

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5263934135437012
    2. '.readline' → logprob: -0.9013934135437012
    3. '.read' → logprob: -5.776393413543701
    4. 'read' → logprob: -10.27639389038086
    5. '.Read' → logprob: -10.52639389038086
    6. ' readline' → logprob: -10.77639389038086
    7. '```' → logprob: -10.90139389038086
    8. '<|end|>' → logprob: -11.40139389038086
    9. '.

' → logprob: -11.52639389038086
    10. '.readlines' → logprob: -11.65139389038086

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2264707088470459
    2. '(' → logprob: -1.601470708847046
    3. '().' → logprob: -7.976470947265625
    4. '(
' → logprob: -8.101470947265625
    5. '()
' → logprob: -8.476470947265625
    6. ')' → logprob: -9.976470947265625
    7. ' ()' → logprob: -10.351470947265625
    8. '()\' → logprob: -10.726470947265625
    9. '(

' → logprob: -11.101470947265625
    10. '\(' → logprob: -11.476470947265625

Token 8: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11380505561828613
    2. '(' → logprob: -2.238805055618286
    3. '().' → logprob: -7.613804817199707
    4. '()
' → logprob: -8.113804817199707
    5. '(
' → logprob: -10.113804817199707
    6. '()

' → logprob: -10.488804817199707
    7. '()\' → logprob: -10.488804817199707
    8. ')' → logprob: -10.988804817199707
    9. '();' → logprob: -11.613804817199707
    10. '#' → logprob: -11.738804817199707

Token 9: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17205378413200378
    2. ' =' → logprob: -2.047053813934326
    3. ')' → logprob: -4.172053813934326
    4. ' ' → logprob: -4.547053813934326
    5. '=int' → logprob: -7.297053813934326
    6. ',' → logprob: -7.797053813934326
    7. '>' → logprob: -8.172053337097168
    8. '_' → logprob: -8.422053337097168
    9. '.' → logprob: -8.672053337097168
    10. '[' → logprob: -8.797053337097168

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23846125602722168
    2. ' =' → logprob: -1.6134612560272217
    3. ',' → logprob: -4.363461494445801
    4. '=input' → logprob: -9.3634614944458
    5. ' ,' → logprob: -10.2384614944458
    6. ' ' → logprob: -10.3634614944458
    7. '=int' → logprob: -10.6134614944458
    8. ')' → logprob: -11.3634614944458
    9. ' =
' → logprob: -12.3634614944458
    10. ',N' → logprob: -12.7384614944458

Token 11: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38688158988952637
    2. ' map' → logprob: -1.1368815898895264
    3. 'list' → logprob: -12.136881828308105
    4. 'input' → logprob: -13.136881828308105
    5. ' ' → logprob: -13.886881828308105
    6. 'int' → logprob: -13.886881828308105
    7. '	map' → logprob: -14.511881828308105
    8. ' list' → logprob: -14.761881828308105
    9. 'm' → logprob: -16.26188087463379
    10. '(map' → logprob: -16.51188087463379

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28681322932243347
    2. '(int' → logprob: -1.4118132591247559
    3. '(lambda' → logprob: -5.661813259124756
    4. '(str' → logprob: -6.286813259124756
    5. '(tuple' → logprob: -10.036812782287598
    6. '[int' → logprob: -10.411812782287598
    7. 'int' → logprob: -10.536812782287598
    8. '(
' → logprob: -10.661812782287598
    9. '<|end|>' → logprob: -10.661812782287598
    10. '(input' → logprob: -10.661812782287598

Token 13: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.28506818413734436
    2. ',' → logprob: -1.410068154335022
    3. '(sys' → logprob: -6.910068035125732
    4. '(' → logprob: -6.910068035125732
    5. '(input' → logprob: -7.160068035125732
    6. ',int' → logprob: -7.535068035125732
    7. 'input' → logprob: -9.03506851196289
    8. ')' → logprob: -9.41006851196289
    9. ',System' → logprob: -9.41006851196289
    10. ',line' → logprob: -9.41006851196289

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06662433594465256
    2. '())' → logprob: -2.816624402999878
    3. '()' → logprob: -5.441624164581299
    4. ')' → logprob: -8.191624641418457
    5. '()))' → logprob: -11.441624641418457
    6. ' ())' → logprob: -11.691624641418457
    7. '()),' → logprob: -12.566624641418457
    8. '(' → logprob: -13.066624641418457
    9. '());' → logprob: -13.066624641418457
    10. '())
' → logprob: -13.441624641418457

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.019631706178188324
    2. 'strip' → logprob: -4.019631862640381
    3. 'rstrip' → logprob: -6.519631862640381
    4. ' split' → logprob: -12.894631385803223
    5. ')' → logprob: -13.269631385803223
    6. 'read' → logprob: -14.144631385803223
    7. '().' → logprob: -14.269631385803223
    8. '(split' → logprob: -15.019631385803223
    9. ' strip' → logprob: -15.019631385803223
    10. 'rs' → logprob: -16.01963233947754

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003932576219085604
    2. '))' → logprob: -7.875393390655518
    3. '())' → logprob: -11.87539291381836
    4. '()' → logprob: -12.75039291381836
    5. '`)' → logprob: -14.12539291381836
    6. '),' → logprob: -14.50039291381836
    7. '')' → logprob: -14.75039291381836
    8. ')
' → logprob: -15.00039291381836
    9. ')`' → logprob: -15.37539291381836
    10. ')))' → logprob: -15.37539291381836

Token 17: 'V' (ID: 53)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2002720832824707
    2. 'a' → logprob: -1.3252720832824707
    3. 'arr' → logprob: -1.7002720832824707
    4. 'graph' → logprob: -2.8252720832824707
    5. '\n' → logprob: -3.4502720832824707
    6. 'array' → logprob: -3.5752720832824707
    7. 'numbers' → logprob: -3.7002720832824707
    8. '
' → logprob: -4.325272083282471
    9. 'd' → logprob: -4.325272083282471
    10. '[' → logprob: -4.575272083282471

Token 18: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4348755180835724
    2. ' =' → logprob: -1.30987548828125
    3. 'al' → logprob: -3.30987548828125
    4. '=[]' → logprob: -4.55987548828125
    5. '=[' → logprob: -4.55987548828125
    6. 'als' → logprob: -5.55987548828125
    7. 's' → logprob: -5.93487548828125
    8. '=[]
' → logprob: -6.18487548828125
    9. 'AL' → logprob: -6.43487548828125
    10. '=list' → logprob: -6.55987548828125

Token 19: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08366556465625763
    2. '0' → logprob: -2.583665609359741
    3. 'list' → logprob: -6.208665370941162
    4. 'map' → logprob: -6.708665370941162
    5. ']int' → logprob: -7.583665370941162
    6. ']' → logprob: -7.708665370941162
    7. ' int' → logprob: -8.33366584777832
    8. '(int' → logprob: -9.08366584777832
    9. 'tuple' → logprob: -9.58366584777832
    10. '[int' → logprob: -10.58366584777832

Token 20: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00016361083544325083
    2. '(' → logprob: -9.125164031982422
    3. '()' → logprob: -10.125164031982422
    4. '(int' → logprob: -11.500164031982422
    5. '(input' → logprob: -13.375164031982422
    6. '(range' → logprob: -13.625164031982422
    7. ' map' → logprob: -14.250164031982422
    8. 'map' → logprob: -14.250164031982422
    9. '	map' → logprob: -15.625164031982422
    10. '()]' → logprob: -15.875164031982422

Token 21: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034869377850554883
    2. '(' → logprob: -8.000349044799805
    3. ',int' → logprob: -12.250349044799805
    4. '<int' → logprob: -13.000349044799805
    5. '=int' → logprob: -13.375349044799805
    6. '[int' → logprob: -13.375349044799805
    7. ']int' → logprob: -14.250349044799805
    8. ')' → logprob: -14.500349044799805
    9. 'int' → logprob: -14.750349044799805
    10. '(
' → logprob: -14.875349044799805

Token 22: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.001621503266505897
    2. ',' → logprob: -6.501621723175049
    3. '(input' → logprob: -9.37662124633789
    4. ',float' → logprob: -11.62662124633789
    5. ',int' → logprob: -11.75162124633789
    6. ' ,' → logprob: -12.12662124633789
    7. 'input' → logprob: -12.25162124633789
    8. '(' → logprob: -12.75162124633789
    9. ',x' → logprob: -13.37662124633789
    10. ',(' → logprob: -15.00162124633789

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.500000953674316
    3. '()' → logprob: -15.875000953674316
    4. '.split' → logprob: -16.375
    5. '()))' → logprob: -16.625
    6. ' ().' → logprob: -16.75
    7. '.readline' → logprob: -17.5
    8. 'split' → logprob: -18.375
    9. '(' → logprob: -18.5
    10. ')' → logprob: -18.75

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.478889215737581e-05
    2. 'rstrip' → logprob: -10.375054359436035
    3. ' split' → logprob: -11.375054359436035
    4. 'strip' → logprob: -11.500054359436035
    5. '(split' → logprob: -13.250054359436035
    6. 'spl' → logprob: -16.37505531311035
    7. '.split' → logprob: -17.50005531311035
    8. ' ' → logprob: -17.62505531311035
    9. ')' → logprob: -18.00005531311035
    10. 'plit' → logprob: -18.37505531311035

Token 25: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05283069983124733
    2. '))' → logprob: -3.052830696105957
    3. '()' → logprob: -5.927830696105957
    4. '())' → logprob: -6.927830696105957
    5. '(' → logprob: -8.052830696105957
    6. '())))' → logprob: -8.802830696105957
    7. ')))' → logprob: -9.927830696105957
    8. ')' → logprob: -10.302830696105957
    9. '()));' → logprob: -11.677830696105957
    10. '()),' → logprob: -12.177830696105957

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04086783155798912
    2. ')]' → logprob: -3.665867805480957
    3. '(N' → logprob: -5.915867805480957
    4. '()' → logprob: -5.915867805480957
    5. 'for' → logprob: -5.915867805480957
    6. ']' → logprob: -6.290867805480957
    7. '(' → logprob: -6.415867805480957
    8. ' for' → logprob: -7.040867805480957
    9. '())' → logprob: -7.415867805480957
    10. '(M' → logprob: -7.915867805480957

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.33325862884521484
    2. '_' → logprob: -1.3332586288452148
    3. ' _' → logprob: -4.458258628845215
    4. 'range' → logprob: -4.833258628845215
    5. '_range' → logprob: -8.583258628845215
    6. ' ' → logprob: -10.708258628845215
    7. '	range' → logprob: -11.083258628845215
    8. '(range' → logprob: -11.458258628845215
    9. ' in' → logprob: -11.583258628845215
    10. ' i' → logprob: -12.208258628845215

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09157952666282654
    2. 'range' → logprob: -2.9665794372558594
    3. ' range' → logprob: -3.7165794372558594
    4. 'in' → logprob: -4.466579437255859
    5. ' ' → logprob: -9.46657943725586
    6. '  ' → logprob: -10.21657943725586
    7. 'N' → logprob: -10.84157943725586
    8. '_' → logprob: -10.96657943725586
    9. '```' → logprob: -11.09157943725586
    10. 'i' → logprob: -11.09157943725586

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015040287980809808
    2. ' range' → logprob: -6.501503944396973
    3. '  ' → logprob: -14.501503944396973
    4. ' ' → logprob: -15.126503944396973
    5. '   ' → logprob: -15.126503944396973
    6. '	range' → logprob: -15.501503944396973
    7. '(range' → logprob: -16.00150489807129
    8. 'r' → logprob: -16.12650489807129
    9. 'rang' → logprob: -17.25150489807129
    10. '    ' → logprob: -17.37650489807129

Token 30: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005981888971291482
    2. '(' → logprob: -7.500597953796387
    3. '(M' → logprob: -10.125597953796387
    4. 'N' → logprob: -12.375597953796387
    5. '(n' → logprob: -14.750597953796387
    6. '(
' → logprob: -15.000597953796387
    7. ')' → logprob: -15.750597953796387
    8. '(int' → logprob: -16.875598907470703
    9. '(

' → logprob: -17.750598907470703
    10. ' (' → logprob: -18.000598907470703

Token 31: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002851828932762146
    2. ')' → logprob: -6.252851963043213
    3. ']' → logprob: -7.002851963043213
    4. ')])' → logprob: -12.377851486206055
    5. '])' → logprob: -12.752851486206055
    6. '])]' → logprob: -13.002851486206055
    7. ')],' → logprob: -13.377851486206055
    8. '))' → logprob: -14.752851486206055
    9. ')]
' → logprob: -14.877851486206055
    10. ' )' → logprob: -15.002851486206055

Token 32: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.7591294050216675
    2. 'V' → logprob: -2.384129524230957
    3. 'x' → logprob: -2.384129524230957
    4. 'dp' → logprob: -2.509129524230957
    5. 's' → logprob: -2.634129524230957
    6. 'a' → logprob: -3.009129524230957
    7. 'Q' → logprob: -3.259129524230957
    8. 'for' → logprob: -3.259129524230957
    9. 'S' → logprob: -3.509129524230957
    10. 'sum' → logprob: -3.634129524230957

Token 33: ' dot' (ID: 16579)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.2512558698654175
    2. ' solve' → logprob: -1.6262558698654175
    3. ' predict' → logprob: -2.501255989074707
    4. ' find' → logprob: -3.001255989074707
    5. ' solution' → logprob: -3.376255989074707
    6. ' max' → logprob: -3.376255989074707
    7. ' process' → logprob: -3.626255989074707
    8. ' best' → logprob: -3.626255989074707
    9. ' maximize' → logprob: -3.751255989074707
    10. ' main' → logprob: -3.876255989074707

Token 34: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026919009163975716
    2. '_product' → logprob: -3.77691912651062
    3. ' (' → logprob: -6.026918888092041
    4. '_' → logprob: -7.526918888092041
    5. 'Product' → logprob: -8.6519193649292
    6. '(V' → logprob: -8.7769193649292
    7. '(product' → logprob: -9.4019193649292
    8. 'product' → logprob: -10.0269193649292
    9. ' product' → logprob: -10.0269193649292
    10. '_products' → logprob: -10.2769193649292

Token 35: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13104549050331116
    2. ',u' → logprob: -2.1310455799102783
    3. ',v' → logprob: -5.631045341491699
    4. ' ,' → logprob: -7.756045341491699
    5. ',n' → logprob: -10.6310453414917
    6. ',p' → logprob: -10.7560453414917
    7. ',user' → logprob: -11.7560453414917
    8. ',a' → logprob: -12.1310453414917
    9. ',q' → logprob: -12.2560453414917
    10. ',d' → logprob: -12.6310453414917

Token 36: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021014907397329807
    2. ')' → logprob: -7.127101421356201
    3. ',' → logprob: -7.127101421356201
    4. ' ):' → logprob: -8.37710189819336
    5. ',u' → logprob: -8.75210189819336
    6. '):
' → logprob: -9.62710189819336
    7. ' ' → logprob: -12.37710189819336
    8. 'u' → logprob: -12.50210189819336
    9. ' ,' → logprob: -12.50210189819336
    10. '   ' → logprob: -12.50210189819336

Token 37: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13689056038856506
    2. '	return' → logprob: -3.1368906497955322
    3. ' return' → logprob: -3.2618906497955322
    4. '<|end|>' → logprob: -4.011890411376953
    5. 'return' → logprob: -4.261890411376953
    6. '
' → logprob: -5.011890411376953
    7. '    
' → logprob: -5.761890411376953
    8. ' ' → logprob: -6.636890411376953
    9. '' → logprob: -7.511890411376953
    10. ':return' → logprob: -7.761890411376953

Token 38: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5767181515693665
    2. ' sum' → logprob: -0.8267181515693665
    3. 'u' → logprob: -7.951718330383301
    4. ' u' → logprob: -7.951718330383301
    5. '(sum' → logprob: -9.7017183303833
    6. ' ' → logprob: -11.8267183303833
    7. '[u' → logprob: -13.5767183303833
    8. '	sum' → logprob: -13.7017183303833
    9. '=sum' → logprob: -14.0767183303833
    10. '(u' → logprob: -14.4517183303833

Token 39: '(x' (ID: 4061)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.061849359422922134
    2. '(a' → logprob: -3.561849355697632
    3. '(' → logprob: -3.936849355697632
    4. '(x' → logprob: -4.811849594116211
    5. '([' → logprob: -6.061849594116211
    6. '(i' → logprob: -6.686849594116211
    7. '(ui' → logprob: -8.686849594116211
    8. '((' → logprob: -9.561849594116211
    9. 'u' → logprob: -9.686849594116211
    10. 'a' → logprob: -11.186849594116211

Token 40: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.0037575671449303627
    2. '*' → logprob: -5.753757476806641
    3. '*u' → logprob: -7.503757476806641
    4. '*a' → logprob: -11.12875747680664
    5. '*x' → logprob: -12.12875747680664
    6. '*i' → logprob: -12.87875747680664
    7. ' *' → logprob: -13.25375747680664
    8. '*w' → logprob: -13.75375747680664
    9. '*b' → logprob: -14.25375747680664
    10. '*p' → logprob: -14.37875747680664

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005990774370729923
    2. 'for' → logprob: -5.755990982055664
    3. ' ' → logprob: -5.880990982055664
    4. '  ' → logprob: -11.755990982055664
    5. '	for' → logprob: -12.505990982055664
    6. ' f' → logprob: -12.880990982055664
    7. ' )' → logprob: -14.130990982055664
    8. ')' → logprob: -14.130990982055664
    9. '   ' → logprob: -15.255990982055664
    10. ' fo' → logprob: -15.380990982055664

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1924467235803604
    2. 'x' → logprob: -1.8174467086791992
    3. ' u' → logprob: -4.567446708679199
    4. 'u' → logprob: -6.192446708679199
    5. ',x' → logprob: -9.1924467086792
    6. ',' → logprob: -10.4424467086792
    7. ' ' → logprob: -11.0674467086792
    8. '(x' → logprob: -11.1924467086792
    9. '	x' → logprob: -11.6924467086792
    10. ' zip' → logprob: -11.9424467086792

Token 43: ',y' (ID: 16103)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.4872068166732788
    2. ',' → logprob: -1.3622068166732788
    3. ',u' → logprob: -2.4872069358825684
    4. ',y' → logprob: -3.1122069358825684
    5. ' ,' → logprob: -6.362206935882568
    6. ',w' → logprob: -9.23720645904541
    7. ',x' → logprob: -9.98720645904541
    8. ',user' → logprob: -10.86220645904541
    9. ' in' → logprob: -12.23720645904541
    10. 'u' → logprob: -12.48720645904541

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043081171810626984
    2. 'in' → logprob: -3.168081283569336
    3. ' zip' → logprob: -9.668081283569336
    4. '<|end|>' → logprob: -12.168081283569336
    5. ' ' → logprob: -12.418081283569336
    6. 'zip' → logprob: -12.668081283569336
    7. ')' → logprob: -12.668081283569336
    8. '  ' → logprob: -14.418081283569336
    9. '(zip' → logprob: -14.918081283569336
    10. ' )' → logprob: -14.918081283569336

Token 45: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.06199099123477936
    2. 'zip' → logprob: -2.811990976333618
    3. '(zip' → logprob: -10.686990737915039
    4. '.zip' → logprob: -14.561990737915039
    5. '_zip' → logprob: -16.93699073791504
    6. ' ' → logprob: -17.68699073791504
    7. '```' → logprob: -19.31199073791504
    8. 'z' → logprob: -19.68699073791504
    9. '  ' → logprob: -20.31199073791504
    10. ')' → logprob: -20.43699073791504

Token 46: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -4.811348480870947e-05
    2. 'u' → logprob: -10.00004768371582
    3. '(' → logprob: -13.00004768371582
    4. ' u' → logprob: -16.00004768371582
    5. ')' → logprob: -16.87504768371582
    6. '(v' → logprob: -17.25004768371582
    7. '[u' → logprob: -17.25004768371582
    8. ',u' → logprob: -17.25004768371582
    9. '	u' → logprob: -17.50004768371582
    10. ' (' → logprob: -18.00004768371582

Token 47: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.02687409520149231
    2. ',' → logprob: -3.65187406539917
    3. ' ,' → logprob: -7.52687406539917
    4. ' v' → logprob: -10.901874542236328
    5. 'v' → logprob: -11.026874542236328
    6. ')' → logprob: -16.026874542236328
    7. ',y' → logprob: -16.151874542236328
    8. ',u' → logprob: -16.526874542236328
    9. ',V' → logprob: -16.776874542236328
    10. ' )' → logprob: -17.526874542236328

Token 48: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000354769523255527
    2. ')' → logprob: -8.000354766845703
    3. ')))' → logprob: -11.000354766845703
    4. '))
' → logprob: -13.250354766845703
    5. ' ))' → logprob: -15.000354766845703
    6. '))

' → logprob: -16.125354766845703
    7. ' ' → logprob: -16.250354766845703
    8. '),' → logprob: -17.000354766845703
    9. ')}' → logprob: -17.125354766845703
    10. '()))' → logprob: -17.375354766845703

Token 49: 'def' (ID: 1314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.5180487632751465
    2. 'def' → logprob: -1.7680487632751465
    3. 'w' → logprob: -1.8930487632751465
    4. 'result' → logprob: -2.2680487632751465
    5. '
' → logprob: -2.5180487632751465
    6. 'v' → logprob: -2.8930487632751465
    7. 'for' → logprob: -3.0180487632751465
    8. 'x' → logprob: -3.5180487632751465
    9. 'a' → logprob: -4.5180487632751465
    10. 'c' → logprob: -4.5180487632751465

Token 50: ' scalar' (ID: 35065)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.8164727687835693
    2. ' norm' → logprob: -1.0664727687835693
    3. ' main' → logprob: -3.5664727687835693
    4. 'norm' → logprob: -3.6914727687835693
    5. ' grad' → logprob: -3.8164727687835693
    6. ' mat' → logprob: -4.066473007202148
    7. ' normalize' → logprob: -4.441473007202148
    8. 'cross' → logprob: -4.441473007202148
    9. ' cos' → logprob: -4.566473007202148
    10. ' matrix' → logprob: -4.691473007202148

Token 51: '_mult' (ID: 44050)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.38040247559547424
    2. '_m' → logprob: -1.7554024457931519
    3. '_mult' → logprob: -2.2554025650024414
    4. '*' → logprob: -3.5054025650024414
    5. '_' → logprob: -5.005402565002441
    6. '(' → logprob: -7.380402565002441
    7. ' multiplication' → logprob: -8.255402565002441
    8. 'multip' → logprob: -8.630402565002441
    9. ' *' → logprob: -9.005402565002441
    10. 'Multiply' → logprob: -9.130402565002441

Token 52: '(a' (ID: 6271)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.9310272336006165
    2. '(a' → logprob: -1.0560271739959717
    3. '(s' → logprob: -2.3060271739959717
    4. '(' → logprob: -2.9310271739959717
    5. '(v' → logprob: -3.0560271739959717
    6. '(k' → logprob: -3.5560271739959717
    7. '(c' → logprob: -3.8060271739959717
    8. '(A' → logprob: -6.181027412414551
    9. '(t' → logprob: -6.681027412414551
    10. '(vector' → logprob: -6.931027412414551

Token 53: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10420733690261841
    2. ',u' → logprob: -2.3542072772979736
    3. ',v' → logprob: -6.229207515716553
    4. ',a' → logprob: -6.729207515716553
    5. ' ,' → logprob: -8.229207038879395
    6. ',t' → logprob: -8.979207038879395
    7. ',n' → logprob: -9.354207038879395
    8. ',p' → logprob: -9.979207038879395
    9. ',user' → logprob: -9.979207038879395
    10. ',b' → logprob: -10.479207038879395

Token 54: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002105175284668803
    2. ',' → logprob: -6.502105236053467
    3. '):
' → logprob: -7.877105236053467
    4. ':' → logprob: -9.377104759216309
    5. ',v' → logprob: -10.002104759216309
    6. ')' → logprob: -10.127104759216309
    7. ',a' → logprob: -11.502104759216309
    8. ' ):' → logprob: -11.502104759216309
    9. '):

' → logprob: -12.252104759216309
    10. '):
' → logprob: -12.752104759216309

Token 55: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.049719445407390594
    2. '[' → logprob: -3.5497193336486816
    3. '[a' → logprob: -3.9247193336486816
    4. '[u' → logprob: -12.29971981048584
    5. '[A' → logprob: -12.79971981048584
    6. '[i' → logprob: -13.17471981048584
    7. ' a' → logprob: -13.17471981048584
    8. '[s' → logprob: -13.29971981048584
    9. ' ' → logprob: -13.29971981048584
    10. ' ' → logprob: -13.79971981048584

Token 56: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04451264813542366
    2. ' [' → logprob: -3.2945127487182617
    3. '[' → logprob: -5.044512748718262
    4. '[x' → logprob: -13.294512748718262
    5. '[A' → logprob: -13.294512748718262
    6. '[u' → logprob: -14.044512748718262
    7. '[v' → logprob: -15.044512748718262
    8. '[i' → logprob: -15.544512748718262
    9. 'a' → logprob: -15.794512748718262
    10. ' a' → logprob: -16.044511795043945

Token 57: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016039233014453202
    2. ' a' → logprob: -8.750160217285156
    3. 'x' → logprob: -13.625160217285156
    4. 'ai' → logprob: -14.625160217285156
    5. '	a' → logprob: -15.750160217285156
    6. '   ' → logprob: -16.875160217285156
    7. 'ax' → logprob: -17.125160217285156
    8. ' ' → logprob: -17.875160217285156
    9. '  ' → logprob: -19.000160217285156
    10. ' x' → logprob: -19.250160217285156

Token 58: '*x' (ID: 46987)
  Prédit: '*x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.22074557840824127
    2. '*' → logprob: -1.72074556350708
    3. ' *' → logprob: -4.22074556350708
    4. '*i' → logprob: -6.09574556350708
    5. '*v' → logprob: -6.47074556350708
    6. '*y' → logprob: -7.59574556350708
    7. '*t' → logprob: -10.220746040344238
    8. '*z' → logprob: -10.470746040344238
    9. '*w' → logprob: -10.595746040344238
    10. '*u' → logprob: -11.095746040344238

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018155446276068687
    2. 'for' → logprob: -4.018155574798584
    3. ' ' → logprob: -12.393155097961426
    4. '	for' → logprob: -13.768155097961426
    5. ' in' → logprob: -16.768156051635742
    6. ')' → logprob: -17.393156051635742
    7. 'x' → logprob: -17.393156051635742
    8. '```' → logprob: -17.393156051635742
    9. '  ' → logprob: -17.643156051635742
    10. 'v' → logprob: -18.268156051635742

Token 60: ' x' (ID: 1215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2519300878047943
    2. ' v' → logprob: -1.5019301176071167
    3. '	v' → logprob: -14.376930236816406
    4. '_v' → logprob: -15.126930236816406
    5. ')v' → logprob: -17.251930236816406
    6. ',v' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '<|end|>' → logprob: -18.126930236816406
    9. '?v' → logprob: -18.251930236816406
    10. '<v' → logprob: -18.626930236816406

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012826756574213505
    2. 'in' → logprob: -4.387826919555664
    3. 'v' → logprob: -8.637826919555664
    4. ' v' → logprob: -10.012826919555664
    5. ',v' → logprob: -10.137826919555664
    6. '<|end|>' → logprob: -10.512826919555664
    7. ' ' → logprob: -10.762826919555664
    8. 's' → logprob: -12.762826919555664
    9. ']' → logprob: -13.887826919555664
    10. ',' → logprob: -14.762826919555664

Token 62: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014163747429847717
    2. ' v' → logprob: -4.264163970947266
    3. '(v' → logprob: -16.264163970947266
    4. '	v' → logprob: -16.389163970947266
    5. ')v' → logprob: -17.139163970947266
    6. '_v' → logprob: -18.264163970947266
    7. ',v' → logprob: -18.389163970947266
    8. '?v' → logprob: -18.889163970947266
    9. '-v' → logprob: -19.264163970947266
    10. '<v' → logprob: -19.514163970947266

Token 63: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.999452772201039e-05
    2. ' ]' → logprob: -10.750029563903809
    3. ']
' → logprob: -12.500029563903809
    4. ']

' → logprob: -12.875029563903809
    5. ')]' → logprob: -13.250029563903809
    6. ']
' → logprob: -16.000030517578125
    7. ')' → logprob: -16.500030517578125
    8. '()]' → logprob: -16.500030517578125
    9. '])' → logprob: -17.125030517578125
    10. '']' → logprob: -17.875030517578125

Token 64: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03006170131266117
    2. '
' → logprob: -3.655061721801758
    3. 'v' → logprob: -6.905061721801758
    4. 'result' → logprob: -7.780061721801758
    5. ' def' → logprob: -7.905061721801758
    6. ' 
' → logprob: -8.155061721801758
    7. '\' → logprob: -8.280061721801758
    8. 'u' → logprob: -8.280061721801758
    9. '

' → logprob: -8.280061721801758
    10. '```' → logprob: -9.030061721801758

Token 65: ' vec' (ID: 10563)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.15555010735988617
    2. ' add' → logprob: -2.155550003051758
    3. ' cross' → logprob: -4.530550003051758
    4. ' vec' → logprob: -4.655550003051758
    5. ' def' → logprob: -5.405550003051758
    6. 'vector' → logprob: -7.280550003051758
    7. ' vect' → logprob: -7.405550003051758
    8. ' v' → logprob: -7.905550003051758
    9. ' dot' → logprob: -7.905550003051758
    10. 'add' → logprob: -8.280550003051758

Token 66: '_sub' (ID: 11572)
  Prédit: 'tor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tor' → logprob: -0.1099746972322464
    2. '_add' → logprob: -2.6099746227264404
    3. '_sub' → logprob: -3.8599746227264404
    4. 'or' → logprob: -5.2349748611450195
    5. '_sum' → logprob: -6.3599748611450195
    6. 'add' → logprob: -7.6099748611450195
    7. 'ot' → logprob: -7.8599748611450195
    8. 'sub' → logprob: -7.9849748611450195
    9. '_mult' → logprob: -8.35997486114502
    10. 'sum' → logprob: -8.85997486114502

Token 67: '(u' (ID: 17057)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6939581632614136
    2. '(u' → logprob: -0.6939581632614136
    3. '(' → logprob: -7.318958282470703
    4. 'stract' → logprob: -9.693958282470703
    5. '(v' → logprob: -10.068958282470703
    6. ' (' → logprob: -11.318958282470703
    7. 'tract' → logprob: -11.568958282470703
    8. '(A' → logprob: -12.318958282470703
    9. 'traction' → logprob: -12.818958282470703
    10. '(b' → logprob: -13.318958282470703

Token 68: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.31997790932655334
    2. ',' → logprob: -1.319977879524231
    3. ',u' → logprob: -5.069977760314941
    4. ' ,' → logprob: -8.319977760314941
    5. ',y' → logprob: -9.819977760314941
    6. ',w' → logprob: -10.069977760314941
    7. ',b' → logprob: -10.944977760314941
    8. ',s' → logprob: -12.069977760314941
    9. ',(' → logprob: -12.069977760314941
    10. ',q' → logprob: -12.069977760314941

Token 69: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.6550729419104755e-05
    2. '):
' → logprob: -11.125036239624023
    3. ' ):' → logprob: -11.625036239624023
    4. ']:' → logprob: -12.000036239624023
    5. ')' → logprob: -12.625036239624023
    6. '):
' → logprob: -14.000036239624023
    7. '):

' → logprob: -14.375036239624023
    8. ':' → logprob: -14.625036239624023
    9. ']):' → logprob: -14.625036239624023
    10. '[]):' → logprob: -15.000036239624023

Token 70: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.009948153048753738
    2. '[' → logprob: -4.634948253631592
    3. '[u' → logprob: -9.009947776794434
    4. '[x' → logprob: -10.259947776794434
    5. '[n' → logprob: -11.509947776794434
    6. '[i' → logprob: -11.884947776794434
    7. '[v' → logprob: -12.759947776794434
    8. '[a' → logprob: -12.884947776794434
    9. '[s' → logprob: -13.134947776794434
    10. ' return' → logprob: -13.509947776794434

Token 71: ' [' (ID: 723)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3422996997833252
    2. ' [' → logprob: -1.3422996997833252
    3. '[x' → logprob: -3.592299699783325
    4. '[' → logprob: -6.842299461364746
    5. '[i' → logprob: -11.217299461364746
    6. '[v' → logprob: -12.842299461364746
    7. '[a' → logprob: -14.717299461364746
    8. ' ' → logprob: -14.717299461364746
    9. '[n' → logprob: -15.467299461364746
    10. ' ' → logprob: -15.967299461364746

Token 72: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011208505369722843
    2. 'u' → logprob: -4.761208534240723
    3. ' x' → logprob: -6.011208534240723
    4. ' u' → logprob: -9.511208534240723
    5. 'xu' → logprob: -10.011208534240723
    6. 'a' → logprob: -11.261208534240723
    7. 'ux' → logprob: -12.511208534240723
    8. '	x' → logprob: -13.261208534240723
    9. '```' → logprob: -14.511208534240723
    10. ' a' → logprob: -15.136208534240723

Token 73: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.49053704738616943
    2. '-' → logprob: -0.9905370473861694
    3. ' -' → logprob: -4.115537166595459
    4. '-v' → logprob: -12.7405366897583
    5. '-u' → logprob: -13.1155366897583
    6. '-x' → logprob: -13.9905366897583
    7. '-

' → logprob: -14.9905366897583
    8. '-z' → logprob: -15.2405366897583
    9. '-i' → logprob: -15.2405366897583
    10. '-
' → logprob: -15.3655366897583

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011057134717702866
    2. 'for' → logprob: -4.511056900024414
    3. ' ' → logprob: -11.886056900024414
    4. '	for' → logprob: -13.011056900024414
    5. ' in' → logprob: -16.261056900024414
    6. '   ' → logprob: -17.511056900024414
    7. '  ' → logprob: -17.636056900024414
    8. '```' → logprob: -18.011056900024414
    9. '<|end|>' → logprob: -18.636056900024414
    10. ' ' → logprob: -19.511056900024414

Token 75: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5872591733932495
    2. 'x' → logprob: -0.8372591733932495
    3. ' u' → logprob: -4.962259292602539
    4. 'u' → logprob: -5.462259292602539
    5. ' ' → logprob: -12.087259292602539
    6. '(x' → logprob: -12.587259292602539
    7. '	x' → logprob: -13.462259292602539
    8. ' (' → logprob: -13.712259292602539
    9. ',x' → logprob: -13.962259292602539
    10. '<|end|>' → logprob: -13.962259292602539

Token 76: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0020692525431513786
    2. ',v' → logprob: -6.627069473266602
    3. ',' → logprob: -7.627069473266602
    4. 'y' → logprob: -8.377069473266602
    5. ',x' → logprob: -11.127069473266602
    6. ',u' → logprob: -12.377069473266602
    7. ' ,' → logprob: -12.502069473266602
    8. 'v' → logprob: -13.377069473266602
    9. ',_' → logprob: -14.877069473266602
    10. ' y' → logprob: -14.877069473266602

Token 77: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12698280811309814
    2. ' in' → logprob: -2.1269826889038086
    3. ' ' → logprob: -11.376982688903809
    4. '<|end|>' → logprob: -11.376982688903809
    5. ',' → logprob: -11.876982688903809
    6. ' zip' → logprob: -12.001982688903809
    7. ',v' → logprob: -12.376982688903809
    8. 'zip' → logprob: -12.501982688903809
    9. '(zip' → logprob: -12.501982688903809
    10. '```' → logprob: -13.626982688903809

Token 78: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3869665563106537
    2. ' zip' → logprob: -1.136966586112976
    3. '(zip' → logprob: -9.261966705322266
    4. '.zip' → logprob: -14.511966705322266
    5. 'z' → logprob: -16.386966705322266
    6. '_zip' → logprob: -17.636966705322266
    7. 'zi' → logprob: -17.886966705322266
    8. ' ' → logprob: -18.886966705322266
    9. ' z' → logprob: -19.386966705322266
    10. '```' → logprob: -19.886966705322266

Token 79: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.750029563903809
    3. 'u' → logprob: -11.875029563903809
    4. '(v' → logprob: -13.750029563903809
    5. '<|end|>' → logprob: -15.625029563903809
    6. '(user' → logprob: -15.750029563903809
    7. ' (' → logprob: -17.125030517578125
    8. '(ui' → logprob: -18.000030517578125
    9. '[u' → logprob: -18.750030517578125
    10. '(U' → logprob: -18.875030517578125

Token 80: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.00011951648048125207
    2. ',' → logprob: -9.37511920928955
    3. ',u' → logprob: -11.00011920928955
    4. ' ,' → logprob: -11.62511920928955
    5. 'v' → logprob: -12.62511920928955
    6. ')]' → logprob: -12.75011920928955
    7. ',b' → logprob: -13.50011920928955
    8. ',w' → logprob: -15.00011920928955
    9. ',y' → logprob: -15.50011920928955
    10. ',s' → logprob: -15.62511920928955

Token 81: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003727582807186991
    2. ']' → logprob: -8.000372886657715
    3. ')' → logprob: -10.250372886657715
    4. '])' → logprob: -14.125372886657715
    5. '])]' → logprob: -14.375372886657715
    6. ')]
' → logprob: -15.500372886657715
    7. ')])' → logprob: -15.875372886657715
    8. ')],' → logprob: -16.3753719329834
    9. '))' → logprob: -17.0003719329834
    10. '')]' → logprob: -17.0003719329834

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028280315920710564
    2. '
' → logprob: -4.153280258178711
    3. 'v' → logprob: -5.778280258178711
    4. '\' → logprob: -7.153280258178711
    5. 'w' → logprob: -7.153280258178711
    6. 'u' → logprob: -7.153280258178711
    7. 'for' → logprob: -7.278280258178711
    8. 'd' → logprob: -7.403280258178711
    9. 'x' → logprob: -7.778280258178711
    10. '#' → logprob: -8.028280258178711

Token 83: ' norm' (ID: 7882)
  Prédit: ' vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vec' → logprob: -0.06547506153583527
    2. ' norm' → logprob: -3.9404749870300293
    3. ' scalar' → logprob: -4.440474987030029
    4. ' cross' → logprob: -4.565474987030029
    5. ' dot' → logprob: -4.565474987030029
    6. ' main' → logprob: -6.315474987030029
    7. ' gram' → logprob: -6.940474987030029
    8. 'vec' → logprob: -6.940474987030029
    9. ' normalize' → logprob: -7.190474987030029
    10. ' grad' → logprob: -7.315474987030029

Token 84: '2' (ID: 17)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.23385369777679443
    2. '(' → logprob: -1.7338536977767944
    3. '(v' → logprob: -3.483853816986084
    4. '(vec' → logprob: -7.483853816986084
    5. '(x' → logprob: -8.233853340148926
    6. '(vector' → logprob: -8.983853340148926
    7. '(a' → logprob: -9.108853340148926
    8. ' (' → logprob: -9.233853340148926
    9. '2' → logprob: -10.858853340148926
    10. '(n' → logprob: -12.108853340148926

Token 85: '(v' (ID: 6932)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.05394748970866203
    2. '(v' → logprob: -3.3039474487304688
    3. '(' → logprob: -4.178947448730469
    4. '(x' → logprob: -8.178947448730469
    5. ' (' → logprob: -9.303947448730469
    6. '(a' → logprob: -10.303947448730469
    7. '(vec' → logprob: -11.053947448730469
    8. '(n' → logprob: -11.678947448730469
    9. '(vector' → logprob: -12.053947448730469
    10. '<|end|>' → logprob: -12.428947448730469

Token 86: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002533567836508155
    2. ' ):' → logprob: -6.502533435821533
    3. ')' → logprob: -7.127533435821533
    4. '):
' → logprob: -8.877533912658691
    5. '(v' → logprob: -10.377533912658691
    6. 'v' → logprob: -10.877533912658691
    7. ' ' → logprob: -11.127533912658691
    8. '   ' → logprob: -11.627533912658691
    9. ' )' → logprob: -12.627533912658691
    10. '):

' → logprob: -13.127533912658691

Token 87: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07071422785520554
    2. ' sum' → logprob: -2.820714235305786
    3. 'return' → logprob: -4.820713996887207
    4. 'sum' → logprob: -7.445713996887207
    5. ' ' → logprob: -10.320713996887207
    6. '   ' → logprob: -11.070713996887207
    7. ' ' → logprob: -11.945713996887207
    8. '=sum' → logprob: -13.195713996887207
    9. '  ' → logprob: -13.695713996887207
    10. '	return' → logprob: -13.820713996887207

Token 88: ' dot' (ID: 16579)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.10153697431087494
    2. 'sum' → logprob: -2.351536989212036
    3. ' dot' → logprob: -6.726536750793457
    4. 'dot' → logprob: -9.476536750793457
    5. '(sum' → logprob: -10.851536750793457
    6. ' v' → logprob: -11.101536750793457
    7. '	sum' → logprob: -12.476536750793457
    8. ' sqrt' → logprob: -12.976536750793457
    9. 'v' → logprob: -13.101536750793457
    10. 's' → logprob: -13.226536750793457

Token 89: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0003497666330076754
    2. '(' → logprob: -8.000349998474121
    3. ' (' → logprob: -11.375349998474121
    4. '(u' → logprob: -14.000349998474121
    5. '(
' → logprob: -14.375349998474121
    6. '(V' → logprob: -15.125349998474121
    7. '<|end|>' → logprob: -15.250349998474121
    8. 'v' → logprob: -15.625349998474121
    9. '(x' → logprob: -15.750349998474121
    10. '(vector' → logprob: -15.750349998474121

Token 90: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.029818879440426826
    2. ',' → logprob: -3.5298187732696533
    3. ' ,' → logprob: -10.279818534851074
    4. '(v' → logprob: -10.404818534851074
    5. 'v' → logprob: -13.029818534851074
    6. '(' → logprob: -14.279818534851074
    7. ' ' → logprob: -14.779818534851074
    8. ' v' → logprob: -15.779818534851074
    9. ')' → logprob: -15.779818534851074
    10. '	v' → logprob: -16.77981948852539

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')v' → logprob: -12.875005722045898
    3. ')
' → logprob: -14.000005722045898
    4. ')return' → logprob: -14.125005722045898
    5. ' )' → logprob: -14.500005722045898
    6. ')**' → logprob: -16.0000057220459
    7. '))' → logprob: -16.7500057220459
    8. 'v' → logprob: -16.8750057220459
    9. '),' → logprob: -17.0000057220459
    10. ')}' → logprob: -17.1250057220459

Token 92: 'dp' (ID: 19037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13855554163455963
    2. 'best' → logprob: -4.138555526733398
    3. 'dp' → logprob: -4.513555526733398
    4. 'answer' → logprob: -4.638555526733398
    5. 'result' → logprob: -4.888555526733398
    6. 'res' → logprob: -4.888555526733398
    7. 'ans' → logprob: -5.013555526733398
    8. 'u' → logprob: -5.388555526733398
    9. 'EPS' → logprob: -5.388555526733398
    10. 'epsilon' → logprob: -5.513555526733398

Token 93: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12367086112499237
    2. '=' → logprob: -2.373670816421509
    3. '[' → logprob: -4.498671054840088
    4. '=[' → logprob: -5.123671054840088
    5. ' =[' → logprob: -5.623671054840088
    6. ' ' → logprob: -6.373671054840088
    7. '=[]' → logprob: -7.998671054840088
    8. '_' → logprob: -8.49867057800293
    9. '=[[' → logprob: -9.24867057800293
    10. '=[
' → logprob: -10.99867057800293

Token 94: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.811648964881897
    2. '0' → logprob: -1.311648964881897
    3. '[' → logprob: -1.311648964881897
    4. '(float' → logprob: -5.436648845672607
    5. '-' → logprob: -5.686648845672607
    6. '1' → logprob: -6.561648845672607
    7. '(' → logprob: -6.811648845672607
    8. ' float' → logprob: -6.936648845672607
    9. '[n' → logprob: -7.311648845672607
    10. '[-' → logprob: -7.311648845672607

Token 95: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.27049532532691956
    2. ']' → logprob: -1.7704952955245972
    3. ']*' → logprob: -2.7704954147338867
    4. ']+' → logprob: -5.895495414733887
    5. '.' → logprob: -6.645495414733887
    6. '.]' → logprob: -11.020495414733887
    7. ' ]' → logprob: -11.145495414733887
    8. 'for' → logprob: -11.270495414733887
    9. '0' → logprob: -12.270495414733887
    10. ' for' → logprob: -12.520495414733887

Token 96: 'M' (ID: 44)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06947969645261765
    2. '(M' → logprob: -3.1944797039031982
    3. '(N' → logprob: -3.9444797039031982
    4. 'N' → logprob: -5.069479465484619
    5. 'M' → logprob: -8.069479942321777
    6. '((' → logprob: -9.944479942321777
    7. ' (' → logprob: -10.694479942321777
    8. '100' → logprob: -10.819479942321777
    9. '101' → logprob: -11.569479942321777
    10. '102' → logprob: -11.944479942321777

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06249168515205383
    2. 'for' → logprob: -3.6874916553497314
    3. '\n' → logprob: -4.3124918937683105
    4. ' for' → logprob: -4.5624918937683105
    5. '<|end|>' → logprob: -5.5624918937683105
    6. ' 
' → logprob: -5.9374918937683105
    7. '

' → logprob: -6.6874918937683105
    8. 'dp' → logprob: -6.8124918937683105
    9. '
' → logprob: -7.3124918937683105
    10. '\' → logprob: -7.6874918937683105

Token 98: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008787106722593307
    2. 'dp' → logprob: -4.883787155151367
    3. ' for' → logprob: -7.258787155151367
    4. 'max' → logprob: -8.883787155151367
    5. '0' → logprob: -9.258787155151367
    6. '[' → logprob: -10.133787155151367
    7. '1' → logprob: -10.383787155151367
    8. 'i' → logprob: -10.508787155151367
    9. 'range' → logprob: -10.883787155151367
    10. '+' → logprob: -11.133787155151367

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02390403114259243
    2. ' ' → logprob: -4.523903846740723
    3. ' range' → logprob: -4.898903846740723
    4. ' _' → logprob: -5.648903846740723
    5. 'i' → logprob: -7.023903846740723
    6. ' j' → logprob: -8.273903846740723
    7. ' M' → logprob: -8.523903846740723
    8. '_' → logprob: -9.023903846740723
    9. 'range' → logprob: -9.523903846740723
    10. ' s' → logprob: -9.773903846740723

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038958001881837845
    2. 'in' → logprob: -3.2889580726623535
    3. ' ' → logprob: -7.0389580726623535
    4. '	in' → logprob: -10.913957595825195
    5. '  ' → logprob: -11.413957595825195
    6. ' i' → logprob: -13.288957595825195
    7. 'range' → logprob: -13.538957595825195
    8. '<|end|>' → logprob: -13.663957595825195
    9. '```' → logprob: -13.913957595825195
    10. ',' → logprob: -14.038957595825195

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048591457307338715
    2. ' range' → logprob: -3.048591375350952
    3. ' ' → logprob: -13.798591613769531
    4. '(range' → logprob: -13.923591613769531
    5. '	range' → logprob: -13.923591613769531
    6. 'r' → logprob: -14.548591613769531
    7. ' xrange' → logprob: -15.673591613769531
    8. 'rang' → logprob: -16.29859161376953
    9. '```' → logprob: -16.29859161376953
    10. '  ' → logprob: -16.42359161376953

Token 102: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.2812475264072418
    2. '(' → logprob: -1.4062474966049194
    3. ' (' → logprob: -10.03124713897705
    4. '(
' → logprob: -10.53124713897705
    5. '(N' → logprob: -12.28124713897705
    6. ' M' → logprob: -12.28124713897705
    7. '(m' → logprob: -12.40624713897705
    8. '1' → logprob: -12.53124713897705
    9. '(i' → logprob: -12.65624713897705
    10. 'M' → logprob: -12.90624713897705

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019756227266043425
    2. '):
' → logprob: -6.5019755363464355
    3. ')' → logprob: -8.376976013183594
    4. '+' → logprob: -9.376976013183594
    5. '-' → logprob: -9.501976013183594
    6. ':' → logprob: -10.126976013183594
    7. ' ):' → logprob: -10.376976013183594
    8. ']:' → logprob: -12.251976013183594
    9. ' ' → logprob: -13.626976013183594
    10. '1' → logprob: -14.251976013183594

Token 104: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6962850689888
    2. 'dp' → logprob: -1.4462850093841553
    3. '   ' → logprob: -1.6962850093841553
    4. ' for' → logprob: -2.9462850093841553
    5. 'for' → logprob: -3.6962850093841553
    6. ' ' → logprob: -6.321285247802734
    7. ' j' → logprob: -7.071285247802734
    8. '	dp' → logprob: -7.071285247802734
    9. 'j' → logprob: -7.571285247802734
    10. ' if' → logprob: -7.696285247802734

Token 105: ' best' (ID: 1636)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09080245345830917
    2. 'for' → logprob: -2.5908024311065674
    3. ' dp' → logprob: -5.4658026695251465
    4. '   ' → logprob: -6.0908026695251465
    5. ' for' → logprob: -6.3408026695251465
    6. 'j' → logprob: -6.3408026695251465
    7. 'if' → logprob: -7.7158026695251465
    8. 'max' → logprob: -8.215802192687988
    9. 'v' → logprob: -9.090802192687988
    10. 'w' → logprob: -9.340802192687988

Token 106: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31581035256385803
    2. '=' → logprob: -1.3158103227615356
    3. '=i' → logprob: -7.190810203552246
    4. '_' → logprob: -8.190810203552246
    5. '_idx' → logprob: -8.190810203552246
    6. '=max' → logprob: -8.565810203552246
    7. ',' → logprob: -8.690810203552246
    8. ' ' → logprob: -8.940810203552246
    9. '=int' → logprob: -9.440810203552246
    10. '_dp' → logprob: -9.440810203552246

Token 107: 'norm' (ID: 30970)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2809267044067383
    2. '0' → logprob: -1.5309267044067383
    3. '-V' → logprob: -4.530926704406738
    4. '-' → logprob: -4.905926704406738
    5. '-n' → logprob: -6.280926704406738
    6. '-f' → logprob: -6.280926704406738
    7. 'V' → logprob: -6.405926704406738
    8. '-v' → logprob: -7.030926704406738
    9. 'norm' → logprob: -7.155926704406738
    10. 'dp' → logprob: -7.405926704406738

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '²' → logprob: -15.375000953674316
    3. '<|end|>' → logprob: -15.375000953674316
    4. '(' → logprob: -16.375
    5. '۲' → logprob: -16.875
    6. ' ' → logprob: -17.0625
    7. '₂' → logprob: -17.3125
    8. '```' → logprob: -17.9375
    9. '[' → logprob: -18.5
    10. '２' → logprob: -18.8125

Token 109: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -11.250028610229492
    3. 'V' → logprob: -11.500028610229492
    4. '([' → logprob: -12.875028610229492
    5. '(Vector' → logprob: -14.125028610229492
    6. '(vec' → logprob: -14.375028610229492
    7. '(Vec' → logprob: -15.250028610229492
    8. '[V' → logprob: -15.375028610229492
    9. '(v' → logprob: -15.625028610229492
    10. '(Q' → logprob: -16.000028610229492

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.923874702304602e-05
    2. '[' → logprob: -9.625089645385742
    3. ' [' → logprob: -11.875089645385742
    4. ')[' → logprob: -12.125089645385742
    5. ')' → logprob: -12.500089645385742
    6. '[
' → logprob: -13.375089645385742
    7. '[I' → logprob: -13.750089645385742
    8. '[V' → logprob: -13.750089645385742
    9. 'i' → logprob: -14.375089645385742
    10. '   ' → logprob: -15.125089645385742

Token 111: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015072436071932316
    2. ' ])' → logprob: -7.37650728225708
    3. ']' → logprob: -7.62650728225708
    4. '])
' → logprob: -8.751506805419922
    5. ')' → logprob: -9.126506805419922
    6. '])-' → logprob: -9.876506805419922
    7. '])]' → logprob: -11.626506805419922
    8. ' ' → logprob: -11.751506805419922
    9. ')])' → logprob: -11.751506805419922
    10. '])+' → logprob: -11.751506805419922

Token 112: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3963463604450226
    2. 'for' → logprob: -1.2713463306427002
    3. '   ' → logprob: -3.1463463306427
    4. '
' → logprob: -6.396346569061279
    5. 'dp' → logprob: -6.521346569061279
    6. ' dp' → logprob: -8.146346092224121
    7. '	for' → logprob: -9.271346092224121
    8. '    
' → logprob: -9.896346092224121
    9. '<|end|>' → logprob: -10.396346092224121
    10. ' ' → logprob: -10.396346092224121

Token 113: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07028351724147797
    2. 'dp' → logprob: -3.3202834129333496
    3. ' for' → logprob: -4.07028341293335
    4. 'j' → logprob: -4.44528341293335
    5. '   ' → logprob: -6.69528341293335
    6. ' dp' → logprob: -7.57028341293335
    7. 'idx' → logprob: -7.82028341293335
    8. ' j' → logprob: -8.445283889770508
    9. 'best' → logprob: -8.445283889770508
    10. ' ' → logprob: -9.570283889770508

Token 114: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5845466256141663
    2. 'range' → logprob: -1.0845465660095215
    3. ' j' → logprob: -2.4595465660095215
    4. 'j' → logprob: -3.9595465660095215
    5. ' ' → logprob: -10.58454704284668
    6. '[j' → logprob: -12.45954704284668
    7. '   ' → logprob: -12.58454704284668
    8. '_j' → logprob: -13.45954704284668
    9. '  ' → logprob: -13.70954704284668
    10. 'r' → logprob: -13.70954704284668

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008909993804991245
    2. 'in' → logprob: -4.758910179138184
    3. ' range' → logprob: -8.383910179138184
    4. 'range' → logprob: -9.758910179138184
    5. ' ' → logprob: -11.883910179138184
    6. ' i' → logprob: -14.258910179138184
    7. '   ' → logprob: -14.383910179138184
    8. '  ' → logprob: -14.758910179138184
    9. '	in' → logprob: -15.258910179138184
    10. '	range' → logprob: -16.508909225463867

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31327199935913086
    2. ' range' → logprob: -1.3132719993591309
    3. '(range' → logprob: -11.563272476196289
    4. '	range' → logprob: -14.813272476196289
    5. ' ' → logprob: -15.563272476196289
    6. '   ' → logprob: -16.81327247619629
    7. 'rang' → logprob: -17.81327247619629
    8. ' xrange' → logprob: -17.93827247619629
    9. 'r' → logprob: -18.43827247619629
    10. 'ran' → logprob: -18.43827247619629

Token 117: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.34279945492744446
    2. ' range' → logprob: -1.342799425125122
    3. '(i' → logprob: -3.592799425125122
    4. '(' → logprob: -7.092799663543701
    5. '(M' → logprob: -8.092799186706543
    6. 'range' → logprob: -8.342799186706543
    7. ' (' → logprob: -8.592799186706543
    8. '(I' → logprob: -11.717799186706543
    9. '(s' → logprob: -12.842799186706543
    10. '	range' → logprob: -13.217799186706543

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014676624909043312
    2. '):
' → logprob: -4.264676570892334
    3. ')' → logprob: -8.514677047729492
    4. ' ):' → logprob: -8.764677047729492
    5. '0' → logprob: -9.764677047729492
    6. '+' → logprob: -10.514677047729492
    7. '   ' → logprob: -10.639677047729492
    8. '):

' → logprob: -12.014677047729492
    9. ':' → logprob: -12.139677047729492
    10. '1' → logprob: -12.514677047729492

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03704463690519333
    2. ' if' → logprob: -3.5370445251464844
    3. ' dp' → logprob: -5.662044525146484
    4. ' diff' → logprob: -7.037044525146484
    5. 'dp' → logprob: -7.412044525146484
    6. 'v' → logprob: -7.662044525146484
    7. 'if' → logprob: -7.787044525146484
    8. '   ' → logprob: -7.912044525146484
    9. ' val' → logprob: -8.537044525146484
    10. 'diff' → logprob: -8.537044525146484

Token 120: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0937695503234863
    2. 'if' → logprob: -1.4687695503234863
    3. '   ' → logprob: -1.5937695503234863
    4. 'dp' → logprob: -3.3437695503234863
    5. 'diff' → logprob: -3.4687695503234863
    6. ' diff' → logprob: -3.7187695503234863
    7. 'v' → logprob: -3.9687695503234863
    8. 'c' → logprob: -4.218769550323486
    9. ' dp' → logprob: -4.343769550323486
    10. 'a' → logprob: -4.593769550323486

Token 121: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6010547876358032
    2. 'calar' → logprob: -0.9760547876358032
    3. 'cal' → logprob: -3.7260546684265137
    4. 'um' → logprob: -4.726054668426514
    5. 'dp' → logprob: -4.976054668426514
    6. '+=' → logprob: -5.726054668426514
    7. '+' → logprob: -5.726054668426514
    8. 'caler' → logprob: -5.851054668426514
    9. 'core' → logprob: -6.101054668426514
    10. 'ize' → logprob: -6.226054668426514

Token 122: 'dot' (ID: 29155)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.6505476832389832
    2. 'dp' → logprob: -1.025547742843628
    3. 'dot' → logprob: -2.775547742843628
    4. 'norm' → logprob: -3.400547742843628
    5. ' scalar' → logprob: -4.525547504425049
    6. 'vec' → logprob: -5.275547504425049
    7. ' dot' → logprob: -6.275547504425049
    8. 'V' → logprob: -6.525547504425049
    9. ' dp' → logprob: -6.650547504425049
    10. ' norm' → logprob: -6.900547504425049

Token 123: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00040898515726439655
    2. '(s' → logprob: -8.875409126281738
    3. '(vec' → logprob: -9.000409126281738
    4. 'scalar' → logprob: -9.750409126281738
    5. 'V' → logprob: -10.000409126281738
    6. '(dp' → logprob: -11.125409126281738
    7. '(' → logprob: -11.250409126281738
    8. '(vector' → logprob: -12.750409126281738
    9. '[V' → logprob: -13.250409126281738
    10. '(Vec' → logprob: -13.875409126281738

Token 124: '[i' (ID: 1768)
  Prédit: '[V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[V' → logprob: -0.6985492706298828
    2. '[i' → logprob: -0.8235492706298828
    3. '[j' → logprob: -2.823549270629883
    4. '(V' → logprob: -5.698549270629883
    5. '[v' → logprob: -7.823549270629883
    6. '[' → logprob: -7.823549270629883
    7. 'V' → logprob: -8.698549270629883
    8. '[I' → logprob: -10.823549270629883
    9. '(i' → logprob: -11.323549270629883
    10. '[S' → logprob: -11.698549270629883

Token 125: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.010827559977769852
    2. '],[' → logprob: -4.635827541351318
    3. ',' → logprob: -7.760827541351318
    4. '][' → logprob: -8.635828018188477
    5. ']' → logprob: -8.760828018188477
    6. '[j' → logprob: -9.635828018188477
    7. ' ],' → logprob: -9.635828018188477
    8. ',V' → logprob: -9.885828018188477
    9. '   ' → logprob: -10.635828018188477
    10. 'j' → logprob: -11.010828018188477

Token 126: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00038479414070025086
    2. ' V' → logprob: -8.000384330749512
    3. '[V' → logprob: -10.875384330749512
    4. 'scalar' → logprob: -11.125384330749512
    5. '	V' → logprob: -11.750384330749512
    6. '   ' → logprob: -12.750384330749512
    7. ')V' → logprob: -13.500384330749512
    8. '[' → logprob: -13.875384330749512
    9. ' ' → logprob: -14.250384330749512
    10. ' scalar' → logprob: -14.250384330749512

Token 127: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001114106344175525
    2. '[V' → logprob: -9.25011157989502
    3. '[i' → logprob: -12.00011157989502
    4. ')' → logprob: -12.37511157989502
    5. '[' → logprob: -14.25011157989502
    6. '[s' → logprob: -14.50011157989502
    7. ')[' → logprob: -14.75011157989502
    8. '   ' → logprob: -14.87511157989502
    9. '```' → logprob: -14.87511157989502
    10. ' [' → logprob: -14.87511157989502

Token 128: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03277507796883583
    2. ')
' → logprob: -3.7827751636505127
    3. ')/' → logprob: -4.782774925231934
    4. ')/(' → logprob: -7.907774925231934
    5. ' )' → logprob: -8.407774925231934
    6. '])' → logprob: -8.532774925231934
    7. ')*' → logprob: -9.282774925231934
    8. ')+' → logprob: -10.157774925231934
    9. ')-' → logprob: -10.532774925231934
    10. ')`' → logprob: -10.907774925231934

Token 129: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027603192254900932
    2. '+' → logprob: -4.7776031494140625
    3. 'dp' → logprob: -5.5276031494140625
    4. '-' → logprob: -5.7776031494140625
    5. '       ' → logprob: -5.9026031494140625
    6. ' if' → logprob: -6.0276031494140625
    7. '*' → logprob: -6.1526031494140625
    8. ')
' → logprob: -6.9026031494140625
    9. '<|end|>' → logprob: -7.2776031494140625
    10. 'if' → logprob: -7.5276031494140625

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6685793399810791
    2. 'dp' → logprob: -1.543579339981079
    3. ' if' → logprob: -1.543579339981079
    4. ' dp' → logprob: -3.793579339981079
    5. 'val' → logprob: -4.6685791015625
    6. 'c' → logprob: -5.4185791015625
    7. '   ' → logprob: -5.6685791015625
    8. 't' → logprob: -5.6685791015625
    9. ' val' → logprob: -5.6685791015625
    10. '       ' → logprob: -6.2935791015625

Token 131: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10414878278970718
    2. 's' → logprob: -2.4791488647460938
    3. ' dp' → logprob: -4.854148864746094
    4. ' ' → logprob: -6.229148864746094
    5. 'dp' → logprob: -6.979148864746094
    6. ' best' → logprob: -6.979148864746094
    7. ' M' → logprob: -7.354148864746094
    8. '2' → logprob: -7.354148864746094
    9. ' V' → logprob: -7.604148864746094
    10. ' abs' → logprob: -7.979148864746094

Token 132: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.39015740156173706
    2. '>' → logprob: -1.1401574611663818
    3. '*' → logprob: -6.765157222747803
    4. ' >=' → logprob: -7.265157222747803
    5. '>=' → logprob: -7.515157222747803
    6. ' *' → logprob: -8.265157699584961
    7. ' <' → logprob: -8.515157699584961
    8. '<' → logprob: -8.640157699584961
    9. '>s' → logprob: -10.140157699584961
    10. ' ' → logprob: -10.265157699584961

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022424131631851196
    2. 'norm' → logprob: -4.022424221038818
    3. 'best' → logprob: -6.147424221038818
    4. ' ' → logprob: -6.647424221038818
    5. '1' → logprob: -8.14742374420166
    6. 'dp' → logprob: -8.39742374420166
    7. ' norm' → logprob: -9.14742374420166
    8. 'max' → logprob: -9.77242374420166
    9. 's' → logprob: -10.39742374420166
    10. '-' → logprob: -10.39742374420166

Token 134: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0072065554559230804
    2. ' or' → logprob: -5.507206439971924
    3. ':
' → logprob: -5.882206439971924
    4. ' and' → logprob: -8.132206916809082
    5. ' :' → logprob: -11.132206916809082
    6. 'and' → logprob: -12.007206916809082
    7. ':return' → logprob: -12.007206916809082
    8. ':

' → logprob: -13.007206916809082
    9. 'or' → logprob: -13.007206916809082
    10. ',' → logprob: -13.257206916809082

Token 135: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7519087195396423
    2. ' dp' → logprob: -1.376908779144287
    3. 'dp' → logprob: -2.126908779144287
    4. ' continue' → logprob: -2.251908779144287
    5. 'continue' → logprob: -3.001908779144287
    6. '
' → logprob: -7.251908779144287
    7. '```' → logprob: -7.376908779144287
    8. '               ' → logprob: -8.626908302307129
    9. '(dp' → logprob: -9.376908302307129
    10. '	dp' → logprob: -9.501908302307129

Token 136: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1093921810388565
    2. 'dp' → logprob: -2.7343921661376953
    3. '=max' → logprob: -3.8593921661376953
    4. ' dp' → logprob: -5.734392166137695
    5. ' =' → logprob: -5.734392166137695
    6. ':' → logprob: -5.859392166137695
    7. '(dp' → logprob: -6.109392166137695
    8. '0' → logprob: -6.859392166137695
    9. 'continue' → logprob: -7.484392166137695
    10. '[' → logprob: -7.859392166137695

Token 137: 'norm' (ID: 30970)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031088778749108315
    2. 'best' → logprob: -4.406088829040527
    3. 'max' → logprob: -4.781088829040527
    4. ' dp' → logprob: -5.531088829040527
    5. '0' → logprob: -5.781088829040527
    6. 'norm' → logprob: -6.156088829040527
    7. 'float' → logprob: -8.781088829040527
    8. 'min' → logprob: -9.031088829040527
    9. ' best' → logprob: -9.406088829040527
    10. '   ' → logprob: -9.406088829040527

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.666993507067673e-05
    2. '(V' → logprob: -10.500036239624023
    3. '[V' → logprob: -12.125036239624023
    4. 'norm' → logprob: -14.375036239624023
    5. 's' → logprob: -14.375036239624023
    6. '```' → logprob: -14.812536239624023
    7. '²' → logprob: -15.187536239624023
    8. '۲' → logprob: -16.062536239624023
    9. ' ' → logprob: -16.062536239624023
    10. ')' → logprob: -16.125036239624023

Token 139: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.14509090781211853
    2. '(vec' → logprob: -2.0200908184051514
    3. '(s' → logprob: -7.0200910568237305
    4. '(' → logprob: -7.1450910568237305
    5. '([' → logprob: -8.39509105682373
    6. 'V' → logprob: -8.64509105682373
    7. 'scalar' → logprob: -9.14509105682373
    8. '(Vec' → logprob: -9.52009105682373
    9. 'vec' → logprob: -10.02009105682373
    10. '(vector' → logprob: -10.77009105682373

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11465727537870407
    2. '[j' → logprob: -2.239657163619995
    3. '[V' → logprob: -6.739657402038574
    4. 'i' → logprob: -8.864657402038574
    5. '(i' → logprob: -8.989657402038574
    6. '[s' → logprob: -9.114657402038574
    7. '[' → logprob: -9.364657402038574
    8. '(V' → logprob: -10.114657402038574
    9. 'j' → logprob: -10.489657402038574
    10. ')' → logprob: -10.489657402038574

Token 141: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05830930545926094
    2. ')+' → logprob: -3.058309316635132
    3. ')-' → logprob: -5.558309078216553
    4. ' )' → logprob: -5.808309078216553
    5. ')
' → logprob: -6.683309078216553
    6. '])' → logprob: -7.183309078216553
    7. '[j' → logprob: -9.058309555053711
    8. ')/' → logprob: -9.308309555053711
    9. ')*' → logprob: -9.558309555053711
    10. '())' → logprob: -9.683309555053711

Token 142: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7848808765411377
    2. '       ' → logprob: -1.0348808765411377
    3. ' else' → logprob: -2.4098808765411377
    4. '<|end|>' → logprob: -2.6598808765411377
    5. '+' → logprob: -4.034880638122559
    6. '
' → logprob: -5.784880638122559
    7. '-' → logprob: -5.909880638122559
    8. '<|end|>' → logprob: -7.284880638122559
    9. ')' → logprob: -7.409880638122559
    10. '*' → logprob: -7.409880638122559

Token 143: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.031107615679502487
    2. '       ' → logprob: -4.156107425689697
    3. ' else' → logprob: -4.281107425689697
    4. 'elif' → logprob: -6.906107425689697
    5. '           ' → logprob: -10.281107902526855
    6. '*' → logprob: -10.781107902526855
    7. '=' → logprob: -11.281107902526855
    8. '
' → logprob: -11.531107902526855
    9. '_else' → logprob: -11.531107902526855
    10. '   ' → logprob: -11.531107902526855

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11059191077947617
    2. ' val' → logprob: -2.3605918884277344
    3. 'val' → logprob: -4.985591888427734
    4. ':
' → logprob: -5.735591888427734
    5. '           ' → logprob: -9.610591888427734
    6. ' :' → logprob: -10.360591888427734
    7. '          ' → logprob: -10.485591888427734
    8. '        ' → logprob: -10.860591888427734
    9. ':

' → logprob: -10.860591888427734
    10. ' if' → logprob: -11.235591888427734

Token 145: '           ' (ID: 352)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.010771074332296848
    2. '            ' → logprob: -5.38577127456665
    3. '           ' → logprob: -5.63577127456665
    4. 'val' → logprob: -6.26077127456665
    5. '          ' → logprob: -8.885770797729492
    6. ':' → logprob: -9.010770797729492
    7. '        ' → logprob: -9.135770797729492
    8. '    ' → logprob: -10.010770797729492
    9. '         ' → logprob: -10.135770797729492
    10. ' if' → logprob: -10.510770797729492

Token 146: ' r' (ID: 428)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.22874146699905396
    2. ' val' → logprob: -1.6037414073944092
    3. '           ' → logprob: -6.853741645812988
    4. 'dp' → logprob: -7.353741645812988
    5. 'v' → logprob: -7.728741645812988
    6. 'if' → logprob: -8.603741645812988
    7. 's' → logprob: -8.978741645812988
    8. 't' → logprob: -9.416241645812988
    9. ' dp' → logprob: -9.478741645812988
    10. 'a' → logprob: -9.541241645812988

Token 147: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934415698051453
    2. ' =' → logprob: -1.06844162940979
    3. '=r' → logprob: -1.94344162940979
    4. '=s' → logprob: -4.443441390991211
    5. '=float' → logprob: -7.568441390991211
    6. '=int' → logprob: -7.943441390991211
    7. '=v' → logprob: -8.443441390991211
    8. '=(' → logprob: -9.318441390991211
    9. '=f' → logprob: -9.693441390991211
    10. '=j' → logprob: -9.943441390991211

Token 148: '/d' (ID: 6662)
  Prédit: '=s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=s' → logprob: -0.7115789651870728
    2. '=' → logprob: -1.0865789651870728
    3. '/=' → logprob: -2.836578845977783
    4. '/' → logprob: -3.211578845977783
    5. '=r' → logprob: -3.461578845977783
    6. '/s' → logprob: -4.086578845977783
    7. '=(' → logprob: -4.711578845977783
    8. ' =' → logprob: -5.211578845977783
    9. '/r' → logprob: -5.961578845977783
    10. '/(' → logprob: -6.586578845977783

Token 149: 'ot' (ID: 346)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4728103280067444
    2. 'ot' → logprob: -1.2228102684020996
    3. 'p' → logprob: -3.5978102684020996
    4. 'r' → logprob: -3.9728102684020996
    5. 'o' → logprob: -4.3478102684021
    6. 'V' → logprob: -5.9728102684021
    7. 'v' → logprob: -6.0978102684021
    8. 'x' → logprob: -6.0978102684021
    9. 'f' → logprob: -6.2228102684021
    10. 'j' → logprob: -6.2228102684021

Token 150: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00010998018842656165
    2. 'V' → logprob: -9.125109672546387
    3. '[V' → logprob: -14.625109672546387
    4. '(Vector' → logprob: -16.125110626220703
    5. '(' → logprob: -16.375110626220703
    6. 'def' → logprob: -17.000110626220703
    7. '(v' → logprob: -17.000110626220703
    8. '	V' → logprob: -17.500110626220703
    9. '([' → logprob: -17.500110626220703
    10. '   ' → logprob: -17.500110626220703

Token 151: '[j' (ID: 7895)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.11641564220190048
    2. '[V' → logprob: -2.4914157390594482
    3. 'V' → logprob: -3.9914157390594482
    4. '[j' → logprob: -4.866415500640869
    5. '[' → logprob: -7.991415500640869
    6. 'j' → logprob: -8.991415977478027
    7. ')' → logprob: -9.116415977478027
    8. '<|end|>' → logprob: -9.741415977478027
    9. '(' → logprob: -9.991415977478027
    10. '[
' → logprob: -10.366415977478027

Token 152: '],' (ID: 2155)
  Prédit: ',V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.11884069442749023
    2. ',j' → logprob: -2.3688406944274902
    3. ',' → logprob: -4.36884069442749
    4. ',v' → logprob: -5.86884069442749
    5. 'V' → logprob: -6.99384069442749
    6. ' ,' → logprob: -7.24384069442749
    7. '(V' → logprob: -7.61884069442749
    8. 'j' → logprob: -7.74384069442749
    9. '[V' → logprob: -8.993841171264648
    10. '[j' → logprob: -9.743841171264648

Token 153: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -6.749814019713085e-06
    2. ' V' → logprob: -12.000006675720215
    3. '(V' → logprob: -15.375006675720215
    4. ')' → logprob: -15.875006675720215
    5. 'v' → logprob: -16.37500762939453
    6. ')V' → logprob: -16.37500762939453
    7. '
' → logprob: -17.12500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '[V' → logprob: -17.87500762939453
    10. ' ' → logprob: -18.50000762939453

Token 154: '[j' (ID: 7895)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13349024951457977
    2. '[j' → logprob: -2.2584903240203857
    3. ')' → logprob: -4.383490085601807
    4. 'V' → logprob: -4.883490085601807
    5. 'v' → logprob: -9.383490562438965
    6. '   ' → logprob: -9.508490562438965
    7. '[' → logprob: -9.508490562438965
    8. ',j' → logprob: -10.508490562438965
    9. '(j' → logprob: -10.633490562438965
    10. ')V' → logprob: -10.883490562438965

Token 155: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0890992283821106
    2. ')
' → logprob: -2.464099168777466
    3. ')*' → logprob: -9.714098930358887
    4. '))' → logprob: -10.714098930358887
    5. ')+' → logprob: -11.714098930358887
    6. ')
' → logprob: -11.714098930358887
    7. ')

' → logprob: -11.839098930358887
    8. '       ' → logprob: -12.089098930358887
    9. ')**' → logprob: -12.214098930358887
    10. ');' → logprob: -12.339098930358887

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3551711142063141
    2. ' val' → logprob: -1.8551710844039917
    3. '
' → logprob: -2.1051712036132812
    4. 'val' → logprob: -4.605171203613281
    5. '            
' → logprob: -4.730171203613281
    6. ',val' → logprob: -7.105171203613281
    7. '```' → logprob: -8.605171203613281
    8. ' 
' → logprob: -9.105171203613281
    9. '[val' → logprob: -9.105171203613281
    10. '    
' → logprob: -9.605171203613281

Token 157: ' diff' (ID: 8868)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2525584697723389
    2. 'proj' → logprob: -1.2525584697723389
    3. 'w' → logprob: -1.6275584697723389
    4. 'u' → logprob: -2.627558469772339
    5. 'if' → logprob: -3.127558469772339
    6. 'v' → logprob: -4.127558708190918
    7. '           ' → logprob: -4.127558708190918
    8. 'c' → logprob: -4.127558708190918
    9. 'res' → logprob: -4.377558708190918
    10. 'val' → logprob: -4.627558708190918

Token 158: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023528109304606915
    2. ' =' → logprob: -6.377352714538574
    3. '=[' → logprob: -7.502352714538574
    4. '_vec' → logprob: -9.752352714538574
    5. '=v' → logprob: -10.627352714538574
    6. '=_' → logprob: -12.002352714538574
    7. 'vec' → logprob: -12.877352714538574
    8. '=(' → logprob: -13.627352714538574
    9. '=u' → logprob: -13.877352714538574
    10. '=r' → logprob: -14.752352714538574

Token 159: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.020617684349417686
    2. ' vec' → logprob: -3.895617723464966
    3. 've' → logprob: -10.520617485046387
    4. '	vec' → logprob: -11.270617485046387
    5. '[' → logprob: -11.520617485046387
    6. 'vector' → logprob: -12.520617485046387
    7. '   ' → logprob: -12.645617485046387
    8. 'scalar' → logprob: -12.645617485046387
    9. 'Vec' → logprob: -12.770617485046387
    10. ' ' → logprob: -12.895617485046387

Token 160: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.664371848164592e-05
    2. '_mult' → logprob: -11.125016212463379
    3. '-sub' → logprob: -14.500016212463379
    4. 'sub' → logprob: -14.500016212463379
    5. '_s' → logprob: -14.750016212463379
    6. '_' → logprob: -15.750016212463379
    7. '_mul' → logprob: -16.250017166137695
    8. '_SUB' → logprob: -16.375017166137695
    9. '-' → logprob: -17.125017166137695
    10. '_Sub' → logprob: -17.250017166137695

Token 161: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. 'V' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.625001907348633
    6. '(v' → logprob: -18.000001907348633
    7. '(Vector' → logprob: -18.375001907348633
    8. '[V' → logprob: -18.375001907348633
    9. ' (' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 162: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.534558552724775e-05
    2. '[j' → logprob: -12.000025749206543
    3. '(i' → logprob: -12.250025749206543
    4. '[' → logprob: -12.250025749206543
    5. 'i' → logprob: -12.500025749206543
    6. '[I' → logprob: -12.625025749206543
    7. '[V' → logprob: -13.375025749206543
    8. ' [' → logprob: -15.625025749206543
    9. ',i' → logprob: -15.875025749206543
    10. '[
' → logprob: -16.250024795532227

Token 163: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015256642363965511
    2. ',v' → logprob: -5.265256404876709
    3. ' ,' → logprob: -5.765256404876709
    4. ',j' → logprob: -6.140256404876709
    5. ',[' → logprob: -6.265256404876709
    6. '],[' → logprob: -7.015256404876709
    7. ',V' → logprob: -7.265256404876709
    8. '],' → logprob: -8.140256881713867
    9. ',r' → logprob: -8.265256881713867
    10. ',s' → logprob: -9.015256881713867

Token 164: 'scalar' (ID: 76256)
  Prédit: 'scalar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0009119403548538685
    2. ' scalar' → logprob: -7.000911712646484
    3. '.scalar' → logprob: -15.250911712646484
    4. '_scalar' → logprob: -16.375911712646484
    5. 'Scalar' → logprob: -17.000911712646484
    6. '   ' → logprob: -17.250911712646484
    7. 'scale' → logprob: -18.625911712646484
    8. 'scaled' → logprob: -19.000911712646484
    9. ' ' → logprob: -19.125911712646484
    10. 'scala' → logprob: -19.375911712646484

Token 165: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -6.704273118884885e-07
    2. '_mul' → logprob: -14.625000953674316
    3. 'mult' → logprob: -16.125
    4. 'Mult' → logprob: -16.75
    5. '_MULT' → logprob: -17.75
    6. 'r' → logprob: -17.875
    7. '_' → logprob: -18.375
    8. '(mult' → logprob: -19.0
    9. '[' → logprob: -19.5
    10. '_m' → logprob: -19.75

Token 166: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.779520092299208e-05
    2. '(' → logprob: -9.500078201293945
    3. 'r' → logprob: -13.750078201293945
    4. '<|end|>' → logprob: -14.250078201293945
    5. '[r' → logprob: -14.750078201293945
    6. ' (' → logprob: -15.750078201293945
    7. ')' → logprob: -15.875078201293945
    8. '(
' → logprob: -16.500078201293945
    9. '```' → logprob: -16.625078201293945
    10. '=r' → logprob: -16.625078201293945

Token 167: ',V' (ID: 81155)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0008180848672054708
    2. '(' → logprob: -7.625818252563477
    3. '(V' → logprob: -9.250818252563477
    4. 'r' → logprob: -9.500818252563477
    5. ',r' → logprob: -10.000818252563477
    6. '(j' → logprob: -10.000818252563477
    7. ' (' → logprob: -10.500818252563477
    8. ',' → logprob: -11.750818252563477
    9. ')' → logprob: -11.875818252563477
    10. '[r' → logprob: -12.000818252563477

Token 168: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0032996281515806913
    2. 'j' → logprob: -5.753299713134766
    3. '(j' → logprob: -9.253299713134766
    4. '[' → logprob: -11.128299713134766
    5. '_j' → logprob: -12.253299713134766
    6. '	j' → logprob: -14.128299713134766
    7. ' j' → logprob: -14.253299713134766
    8. ')' → logprob: -14.378299713134766
    9. ' [' → logprob: -14.378299713134766
    10. ',j' → logprob: -14.753299713134766

Token 169: ']))
' (ID: 24801)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.43618446588516235
    2. ')])' → logprob: -1.8111844062805176
    3. ']))' → logprob: -2.3111844062805176
    4. '])]' → logprob: -3.4361844062805176
    5. ')]' → logprob: -3.5611844062805176
    6. '])' → logprob: -4.061184406280518
    7. 'j' → logprob: -5.686184406280518
    8. ')])
' → logprob: -6.061184406280518
    9. '])]
' → logprob: -6.436184406280518
    10. '))' → logprob: -6.686184406280518

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060121309012174606
    2. 'val' → logprob: -3.5601212978363037
    3. ' val' → logprob: -3.9351212978363037
    4. '[' → logprob: -5.185121536254883
    5. '   ' → logprob: -6.560121536254883
    6. '
' → logprob: -7.560121536254883
    7. '=' → logprob: -7.560121536254883
    8. '[val' → logprob: -7.685121536254883
    9. '       ' → logprob: -7.810121536254883
    10. ')' → logprob: -8.185121536254883

Token 171: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0020148828625679016
    2. ' val' → logprob: -6.377015113830566
    3. 'best' → logprob: -8.877015113830566
    4. '           ' → logprob: -9.252015113830566
    5. 'v' → logprob: -10.752015113830566
    6. '
' → logprob: -10.877015113830566
    7. '            
' → logprob: -11.627015113830566
    8. '```' → logprob: -12.877015113830566
    9. 'temp' → logprob: -13.127015113830566
    10. 'tmp' → logprob: -13.127015113830566

Token 172: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0027568526566028595
    2. '=max' → logprob: -6.2527570724487305
    3. '=n' → logprob: -7.6277570724487305
    4. ' =' → logprob: -8.12775707244873
    5. '=len' → logprob: -10.37775707244873
    6. '=

' → logprob: -12.75275707244873
    7. '=
' → logprob: -13.12775707244873
    8. '=int' → logprob: -13.37775707244873
    9. '=min' → logprob: -13.87775707244873
    10. '=np' → logprob: -13.87775707244873

Token 173: 'norm' (ID: 30970)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08853781223297119
    2. 'norm' → logprob: -3.2135376930236816
    3. 'max' → logprob: -3.8385376930236816
    4. 'best' → logprob: -3.9635376930236816
    5. 'val' → logprob: -6.088537693023682
    6. 'min' → logprob: -7.338537693023682
    7. 'dot' → logprob: -7.838537693023682
    8. ' dp' → logprob: -8.08853816986084
    9. '(dp' → logprob: -9.21353816986084
    10. ' norm' → logprob: -10.21353816986084

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '²' → logprob: -18.25
    3. '(norm' → logprob: -18.625
    4. '۲' → logprob: -19.375
    5. ' ' → logprob: -19.875
    6. '２' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '₂' → logprob: -20.4375
    9. 'norm' → logprob: -20.5
    10. '[' → logprob: -21.0625

Token 175: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -3.128163257315464e-07
    2. 'diff' → logprob: -16.25
    3. '(' → logprob: -16.625
    4. '	diff' → logprob: -18.625
    5. ' diff' → logprob: -20.875
    6. '(d' → logprob: -21.625
    7. '_diff' → logprob: -22.125
    8. '(def' → logprob: -22.25
    9. '(div' → logprob: -22.25
    10. ' (' → logprob: -22.25

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889397442340851
    2. ')
' → logprob: -2.7038938999176025
    3. ')+' → logprob: -4.828894138336182
    4. '   ' → logprob: -7.703894138336182
    5. ' )' → logprob: -8.828893661499023
    6. ' ' → logprob: -9.578893661499023
    7. '           ' → logprob: -9.703893661499023
    8. ' )
' → logprob: -10.453893661499023
    9. '
' → logprob: -10.703893661499023
    10. ')
' → logprob: -10.828893661499023

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010557591915130615
    2. '           ' → logprob: -4.635557651519775
    3. 'if' → logprob: -7.510557651519775
    4. ' if' → logprob: -8.510557174682617
    5. '   ' → logprob: -11.010557174682617
    6. '```' → logprob: -11.510557174682617
    7. '
' → logprob: -12.010557174682617
    8. '<|end|>' → logprob: -12.260557174682617
    9. ')' → logprob: -12.385557174682617
    10. 'best' → logprob: -12.635557174682617

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014152578078210354
    2. ' if' → logprob: -5.139152526855469
    3. 'dp' → logprob: -5.514152526855469
    4. '   ' → logprob: -6.014152526855469
    5. 'best' → logprob: -6.889152526855469
    6. '       ' → logprob: -7.389152526855469
    7. '
' → logprob: -10.889152526855469
    8. '```' → logprob: -10.889152526855469
    9. ' dp' → logprob: -11.514152526855469
    10. '           ' → logprob: -11.764152526855469

Token 179: ' dp' (ID: 21546)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5231726169586182
    2. ' val' → logprob: -0.8981726169586182
    3. 'best' → logprob: -11.273172378540039
    4. '	val' → logprob: -11.773172378540039
    5. '(val' → logprob: -11.773172378540039
    6. ' best' → logprob: -12.023172378540039
    7. 'v' → logprob: -13.210672378540039
    8. ' ' → logprob: -13.398172378540039
    9. ' ' → logprob: -13.398172378540039
    10. '[val' → logprob: -13.460672378540039

Token 180: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007015953888185322
    2. 'j' → logprob: -7.375701427459717
    3. '[i' → logprob: -9.750701904296875
    4. ' [' → logprob: -11.875701904296875
    5. '[' → logprob: -12.500701904296875
    6. ' j' → logprob: -13.000701904296875
    7. '][' → logprob: -14.375701904296875
    8. '   ' → logprob: -14.500701904296875
    9. '
' → logprob: -14.750701904296875
    10. '```' → logprob: -15.000701904296875

Token 181: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0588710717856884
    2. ' +' → logprob: -3.308871030807495
    3. '>' → logprob: -3.933871030807495
    4. ' >' → logprob: -7.683871269226074
    5. ']+' → logprob: -8.808871269226074
    6. '
' → logprob: -9.433871269226074
    7. '+r' → logprob: -9.933871269226074
    8. '+
' → logprob: -10.058871269226074
    9. '-' → logprob: -10.933871269226074
    10. '+i' → logprob: -11.058871269226074

Token 182: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0010375719284638762
    2. ' val' → logprob: -6.87603759765625
    3. '[val' → logprob: -13.50103759765625
    4. '	val' → logprob: -14.37603759765625
    5. ',val' → logprob: -14.62603759765625
    6. '1' → logprob: -14.62603759765625
    7. '(val' → logprob: -14.75103759765625
    8. '   ' → logprob: -14.75103759765625
    9. '  ' → logprob: -15.62603759765625
    10. ' ' → logprob: -15.62603759765625

Token 183: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7755016088485718
    2. '<' → logprob: -0.9005016088485718
    3. ' >' → logprob: -2.6505017280578613
    4. ' <' → logprob: -2.7755017280578613
    5. ' ' → logprob: -9.650501251220703
    6. '<n' → logprob: -10.275501251220703
    7. '[' → logprob: -11.775501251220703
    8. '<ll' → logprob: -11.963001251220703
    9. '<N' → logprob: -12.025501251220703
    10. '<len' → logprob: -12.150501251220703

Token 184: 'best' (ID: 17844)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04673551395535469
    2. 'best' → logprob: -3.1717355251312256
    3. ' dp' → logprob: -5.7967352867126465
    4. ' best' → logprob: -7.2967352867126465
    5. '   ' → logprob: -12.296735763549805
    6. '	dp' → logprob: -12.421735763549805
    7. '
' → logprob: -13.671735763549805
    8. 'b' → logprob: -14.421735763549805
    9. 'bp' → logprob: -14.671735763549805
    10. ' ' → logprob: -14.671735763549805

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021965294145047665
    2. ':
' → logprob: -6.127196311950684
    3. '=' → logprob: -12.127196311950684
    4. 'best' → logprob: -13.252196311950684
    5. '[' → logprob: -13.627196311950684
    6. '):' → logprob: -13.627196311950684
    7. '(best' → logprob: -15.252196311950684
    8. '	best' → logprob: -15.252196311950684
    9. '==' → logprob: -15.502196311950684
    10. '_best' → logprob: -15.877196311950684

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5888976454734802
    2. ' best' → logprob: -0.9638976454734802
    3. 'best' → logprob: -2.838897705078125
    4. '       ' → logprob: -5.588897705078125
    5. '	best' → logprob: -6.963897705078125
    6. '               ' → logprob: -8.713897705078125
    7. '(best' → logprob: -8.713897705078125
    8. '```' → logprob: -9.963897705078125
    9. 'dp' → logprob: -10.588897705078125
    10. ' dp' → logprob: -11.338897705078125

Token 187: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.10126650333404541
    2. ' best' → logprob: -2.351266384124756
    3. 'dp' → logprob: -7.476266384124756
    4. '           ' → logprob: -7.851266384124756
    5. ' dp' → logprob: -9.476266860961914
    6. '               ' → logprob: -11.351266860961914
    7. '	best' → logprob: -11.351266860961914
    8. '(best' → logprob: -13.726266860961914
    9. '_best' → logprob: -14.351266860961914
    10. '.best' → logprob: -14.601266860961914

Token 188: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002661039761733264
    2. ' =' → logprob: -8.250266075134277
    3. '=

' → logprob: -13.750266075134277
    4. '=df' → logprob: -13.875266075134277
    5. '=d' → logprob: -14.000266075134277
    6. '=s' → logprob: -14.875266075134277
    7. '=cv' → logprob: -15.250266075134277
    8. '=data' → logprob: -15.750266075134277
    9. '=max' → logprob: -15.875266075134277
    10. '=b' → logprob: -15.875266075134277

Token 189: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.9424725148128346e-05
    2. ' dp' → logprob: -10.000049591064453
    3. '	dp' → logprob: -13.625049591064453
    4. '   ' → logprob: -13.750049591064453
    5. 'd' → logprob: -14.500049591064453
    6. '(dp' → logprob: -14.750049591064453
    7. 'dj' → logprob: -15.500049591064453
    8. '```' → logprob: -15.500049591064453
    9. '           ' → logprob: -16.750049591064453
    10. 'int' → logprob: -17.000049591064453

Token 190: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018213391304016113
    2. 'j' → logprob: -4.018213272094727
    3. '[' → logprob: -10.518213272094727
    4. '[i' → logprob: -11.018213272094727
    5. ' j' → logprob: -11.268213272094727
    6. '	j' → logprob: -12.643213272094727
    7. '_j' → logprob: -13.768213272094727
    8. ',j' → logprob: -14.518213272094727
    9. '```' → logprob: -14.643213272094727
    10. '][' → logprob: -14.768213272094727

Token 191: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0025967035908252
    2. ']' → logprob: -6.127596855163574
    3. '[j' → logprob: -8.002596855163574
    4. '+' → logprob: -10.127596855163574
    5. '+j' → logprob: -10.627596855163574
    6. '[' → logprob: -11.752596855163574
    7. ']+=' → logprob: -13.252596855163574
    8. ')+' → logprob: -13.877596855163574
    9. '}+' → logprob: -14.002596855163574
    10. '][' → logprob: -15.002596855163574

Token 192: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.8624639324116288e-06
    2. ' val' → logprob: -13.250001907348633
    3. '	val' → logprob: -19.000001907348633
    4. '[val' → logprob: -19.500001907348633
    5. '(val' → logprob: -19.750001907348633
    6. '_val' → logprob: -21.875001907348633
    7. '.val' → logprob: -22.375001907348633
    8. ',val' → logprob: -22.625001907348633
    9. '```' → logprob: -22.625001907348633
    10. '   ' → logprob: -23.375001907348633

Token 193: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2006128579378128
    2. ' dp' → logprob: -2.325612783432007
    3. '   ' → logprob: -2.575612783432007
    4. '
' → logprob: -5.950613021850586
    5. '	dp' → logprob: -5.950613021850586
    6. '    
' → logprob: -6.450613021850586
    7. '(dp' → logprob: -8.325613021850586
    8. ' 
' → logprob: -8.450613021850586
    9. '_dp' → logprob: -8.700613021850586
    10. '   
' → logprob: -8.950613021850586

Token 194: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01344208512455225
    2. '   ' → logprob: -4.638442039489746
    3. ' dp' → logprob: -5.638442039489746
    4. '	dp' → logprob: -9.138442039489746
    5. '
' → logprob: -12.138442039489746
    6. '       ' → logprob: -12.888442039489746
    7. '```' → logprob: -13.263442039489746
    8. '(dp' → logprob: -13.388442039489746
    9. '_dp' → logprob: -14.138442039489746
    10. '.dp' → logprob: -14.888442039489746

Token 195: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0001637300301808864
    2. '   ' → logprob: -9.000164031982422
    3. ' dp' → logprob: -10.250164031982422
    4. '	dp' → logprob: -12.250164031982422
    5. '(dp' → logprob: -17.500164031982422
    6. '```' → logprob: -17.625164031982422
    7. ' ' → logprob: -17.875164031982422
    8. '_dp' → logprob: -18.375164031982422
    9. '  ' → logprob: -19.250164031982422
    10. '.dp' → logprob: -19.625164031982422

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. '[j' → logprob: -15.375001907348633
    4. '\[' → logprob: -16.750001907348633
    5. '[I' → logprob: -18.000001907348633
    6. '```' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.750001907348633
    8. 'i' → logprob: -20.125001907348633
    9. '[s' → logprob: -20.375001907348633
    10. '[index' → logprob: -20.500001907348633

Token 197: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.34173455834388733
    2. '=' → logprob: -1.341734528541565
    3. ']' → logprob: -3.5917346477508545
    4. ')=' → logprob: -8.341734886169434
    5. ' =' → logprob: -8.591734886169434
    6. '=i' → logprob: -10.341734886169434
    7. ']+=' → logprob: -11.091734886169434
    8. ']=(' → logprob: -11.716734886169434
    9. '}=' → logprob: -11.841734886169434
    10. ')' → logprob: -12.091734886169434

Token 198: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -2.339278580620885e-06
    2. ' best' → logprob: -13.000001907348633
    3. '	best' → logprob: -17.250001907348633
    4. 'int' → logprob: -17.750001907348633
    5. '(best' → logprob: -18.625001907348633
    6. 'b' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '-best' → logprob: -21.000001907348633
    9. 'bet' → logprob: -21.750001907348633
    10. 'bes' → logprob: -22.125001907348633

Token 199: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19681373238563538
    2. '
' → logprob: -2.1968138217926025
    3. '<|end|>' → logprob: -2.8218138217926025
    4. ' print' → logprob: -5.321813583374023
    5. ' 
' → logprob: -6.946813583374023
    6. ')' → logprob: -7.321813583374023
    7. '  
' → logprob: -7.821813583374023
    8. '+' → logprob: -8.196813583374023
    9. '[' → logprob: -8.821813583374023
    10. '```' → logprob: -8.946813583374023

Token 200: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015330599620938301
    2. ' print' → logprob: -5.640330791473389
    3. ')' → logprob: -5.890330791473389
    4. '<|end|>' → logprob: -5.890330791473389
    5. 'max' → logprob: -7.015330791473389
    6. ' 
' → logprob: -7.015330791473389
    7. ']' → logprob: -7.265330791473389
    8. ' ' → logprob: -7.265330791473389
    9. '
' → logprob: -7.390330791473389
    10. '[' → logprob: -7.765330791473389

Token 201: '(f' (ID: 1526)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.020857052877545357
    2. '(dp' → logprob: -4.020856857299805
    3. '(sum' → logprob: -6.645856857299805
    4. '(' → logprob: -7.270856857299805
    5. '(int' → logprob: -7.895856857299805
    6. '(round' → logprob: -8.395856857299805
    7. '(max' → logprob: -9.520856857299805
    8. '(np' → logprob: -11.270856857299805
    9. 'min' → logprob: -11.395856857299805
    10. '(f' → logprob: -12.645856857299805

Token 202: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.7827548384666443
    2. 'loat' → logprob: -1.032754898071289
    3. ''{' → logprob: -2.282754898071289
    4. '{' → logprob: -2.907754898071289
    5. '(dp' → logprob: -4.032754898071289
    6. 'p' → logprob: -5.657754898071289
    7. 'dp' → logprob: -5.907754898071289
    8. '"' → logprob: -6.532754898071289
    9. 'orm' → logprob: -7.157754898071289
    10. 'ormat' → logprob: -7.407754898071289

Token 203: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5295137763023376
    2. 'min' → logprob: -0.9045137763023376
    3. 'sum' → logprob: -5.654513835906982
    4. 'max' → logprob: -6.029513835906982
    5. ' min' → logprob: -8.654513359069824
    6. '(dp' → logprob: -9.154513359069824
    7. ' dp' → logprob: -9.404513359069824
    8. '(min' → logprob: -9.904513359069824
    9. 'math' → logprob: -10.779513359069824
    10. '(' → logprob: -11.904513359069824

Token 204: '[M' (ID: 98407)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.08687880635261536
    2. '[M' → logprob: -2.586878776550293
    3. '[i' → logprob: -4.836878776550293
    4. '[' → logprob: -11.461878776550293
    5. '[N' → logprob: -11.711878776550293
    6. '[len' → logprob: -12.586878776550293
    7. '[m' → logprob: -13.961878776550293
    8. '[I' → logprob: -14.086878776550293
    9. '[T' → logprob: -15.336878776550293
    10. '[min' → logprob: -15.461878776550293

Token 205: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.790129555156454e-05
    2. ' -' → logprob: -10.000067710876465
    3. '[-' → logprob: -11.125067710876465
    4. '1' → logprob: -11.875067710876465
    5. '[' → logprob: -14.875067710876465
    6. '[i' → logprob: -15.875067710876465
    7. ']' → logprob: -16.00006866455078
    8. ']-' → logprob: -16.12506866455078
    9. '```' → logprob: -17.12506866455078
    10. '−' → logprob: -17.87506866455078

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.000003814697266
    3. '
' → logprob: -14.500003814697266
    4. '-' → logprob: -15.000003814697266
    5. '   ' → logprob: -15.000003814697266
    6. ']' → logprob: -16.375003814697266
    7. '```' → logprob: -16.375003814697266
    8. '

' → logprob: -16.500003814697266
    9. '  ' → logprob: -17.250003814697266
    10. '
' → logprob: -18.500003814697266

Token 207: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0041852486319839954
    2. ']}' → logprob: -5.754185199737549
    3. ']' → logprob: -7.129185199737549
    4. '])' → logprob: -9.004185676574707
    5. ']}"' → logprob: -10.004185676574707
    6. ' ]' → logprob: -11.754185676574707
    7. ']):' → logprob: -11.754185676574707
    8. '-' → logprob: -12.254185676574707
    9. '):' → logprob: -12.754185676574707
    10. '}")' → logprob: -13.004185676574707

Token 208: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.2020991056924686e-05
    2. ' .' → logprob: -10.625032424926758
    3. '0' → logprob: -12.250032424926758
    4. '".' → logprob: -13.500032424926758
    5. ':.' → logprob: -14.375032424926758
    6. ''.' → logprob: -14.625032424926758
    7. ',.' → logprob: -15.375032424926758
    8. '}.' → logprob: -16.500032424926758
    9. 'f' → logprob: -16.625032424926758
    10. '\.' → logprob: -17.000032424926758

Token 209: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.41751712560653687
    2. '10' → logprob: -2.1675171852111816
    3. '9' → logprob: -2.5425171852111816
    4. '12' → logprob: -3.4175171852111816
    5. '8' → logprob: -3.4175171852111816
    6. '4' → logprob: -4.042517185211182
    7. '15' → logprob: -4.042517185211182
    8. '7' → logprob: -4.167517185211182
    9. '5' → logprob: -4.542517185211182
    10. '2' → logprob: -4.917517185211182

Token 210: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.127333340875339e-06
    2. 'g' → logprob: -12.625003814697266
    3. 'e' → logprob: -14.125003814697266
    4. '6' → logprob: -17.250003814697266
    5. 'lf' → logprob: -17.750003814697266
    6. '```' → logprob: -17.875003814697266
    7. ' f' → logprob: -18.250003814697266
    8. '}' → logprob: -19.000003814697266
    9. '{' → logprob: -19.250003814697266
    10. '

' → logprob: -19.875003814697266

Token 211: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -7.743758760625497e-05
    2. '")' → logprob: -9.875077247619629
    3. ')")' → logprob: -10.625077247619629
    4. '}")
' → logprob: -13.625077247619629
    5. '})' → logprob: -16.500078201293945
    6. '}"' → logprob: -16.625078201293945
    7. ' }' → logprob: -16.750078201293945
    8. ')}' → logprob: -17.375078201293945
    9. '}")
' → logprob: -17.625078201293945
    10. '}' → logprob: -17.875078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 46.89%
Précision adaptée (1ère position): 50.24%
Précision (top 10): 85.17%
================================================================================
