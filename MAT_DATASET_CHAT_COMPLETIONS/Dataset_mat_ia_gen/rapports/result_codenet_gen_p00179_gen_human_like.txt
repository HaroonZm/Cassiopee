================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def next_states(s):
    colors = {'r','g','b'}
    res = []
    n = len(s)
    for i in range(n-1):
        if s[i] != s[i+1]:
            # determine next color different from both
            next_color = (colors - {s[i], s[i+1]}).pop()
            new_s = s[:i] + next_color*2 + s[i+2:]
            res.append(new_s)
    return res

def bfs(start):
    if all(c == start[0] for c in start):
        return 0
    visited = set([start])
    queue = deque([(start,0)])
    while queue:
        state, t = queue.popleft()
        for nxt in next_states(state):
            if nxt not in visited:
                if all(c == nxt[0] for c in nxt):
                    return t+1
                visited.add(nxt)
                queue.append((nxt, t+1))
    return "NA"

while True:
    s = input().strip()
    if s == "0":
        break
    print(bfs(s))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41563940048217773
    2. 'deque' → logprob: -1.7906394004821777
    3. ' abc' → logprob: -2.6656394004821777
    4. ' defaultdict' → logprob: -2.7906394004821777
    5. 'default' → logprob: -3.6656394004821777
    6. 'Counter' → logprob: -5.165639400482178
    7. ' deque' → logprob: -5.790639400482178
    8. ' Counter' → logprob: -5.915639400482178
    9. '```' → logprob: -6.040639400482178
    10. 'named' → logprob: -6.540639400482178

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01551173534244299
    2. '.' → logprob: -4.515511512756348
    3. '\(' → logprob: -6.015511512756348
    4. '\' → logprob: -7.640511512756348
    5. '[' → logprob: -7.765511512756348
    6. '```' → logprob: -8.265511512756348
    7. ',' → logprob: -8.765511512756348
    8. '\[' → logprob: -8.890511512756348
    9. 'import' → logprob: -9.015511512756348
    10. 'newline' → logprob: -9.390511512756348

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022621462121605873
    2. 'd' → logprob: -4.5226216316223145
    3. ' (' → logprob: -6.3976216316223145
    4. 'a' → logprob: -6.5226216316223145
    5. '[' → logprob: -6.6476216316223145
    6. '\' → logprob: -6.8976216316223145
    7. 'newline' → logprob: -7.1476216316223145
    8. '(
' → logprob: -7.2726216316223145
    9. ',' → logprob: -7.3976216316223145
    10. '`' → logprob: -8.022621154785156

Token 6: ' next' (ID: 2613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0029859058558940887
    2. ' bfs' → logprob: -6.502985954284668
    3. ' deque' → logprob: -8.002985954284668
    4. ' ' → logprob: -8.252985954284668
    5. ' dfs' → logprob: -8.877985954284668
    6. ' de' → logprob: -9.252985954284668
    7. ' a' → logprob: -9.627985954284668
    8. ' process' → logprob: -9.752985954284668
    9. ' queue' → logprob: -10.002985954284668
    10. ' append' → logprob: -10.127985954284668

Token 7: '_states' (ID: 53795)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08250311762094498
    2. '_token' → logprob: -2.582503080368042
    3. '(' → logprob: -6.457503318786621
    4. '_space' → logprob: -6.582503318786621
    5. '_word' → logprob: -8.082503318786621
    6. '_item' → logprob: -9.457503318786621
    7. '_queue' → logprob: -10.332503318786621
    8. '_step' → logprob: -10.707503318786621
    9. ' _' → logprob: -10.707503318786621
    10. '_(' → logprob: -10.832503318786621

Token 8: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.220573363360018e-05
    2. ' (' → logprob: -10.750082015991211
    3. ':' → logprob: -11.375082015991211
    4. '(:' → logprob: -11.875082015991211
    5. '(user' → logprob: -11.875082015991211
    6. '_' → logprob: -12.125082015991211
    7. '(
' → logprob: -12.875082015991211
    8. '():' → logprob: -13.125082015991211
    9. '((' → logprob: -13.500082015991211
    10. '(s' → logprob: -13.500082015991211

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017364613711833954
    2. ')' → logprob: -4.267364501953125
    3. ',' → logprob: -6.767364501953125
    4. 't' → logprob: -7.017364501953125
    5. '):
' → logprob: -7.392364501953125
    6. 'u' → logprob: -8.392364501953125
    7. '[' → logprob: -9.517364501953125
    8. '):

' → logprob: -9.767364501953125
    9. ':' → logprob: -10.517364501953125
    10. 'a' → logprob: -10.767364501953125

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026946518570184708
    2. '(' → logprob: -4.901946544647217
    3. '   ' → logprob: -4.901946544647217
    4. ':
' → logprob: -5.151946544647217
    5. ' :' → logprob: -6.401946544647217
    6. '():' → logprob: -6.401946544647217
    7. '[' → logprob: -7.776946544647217
    8. ':return' → logprob: -8.276946067810059
    9. '):' → logprob: -8.401946067810059
    10. ''' → logprob: -8.901946067810059

Token 11: ' colors' (ID: 10803)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2398306131362915
    2. ' states' → logprob: -1.2398306131362915
    3. '```' → logprob: -1.4898306131362915
    4. ' return' → logprob: -3.489830493927002
    5. '`' → logprob: -3.739830493927002
    6. '[' → logprob: -3.739830493927002
    7. ':' → logprob: -4.239830493927002
    8. 'return' → logprob: -4.239830493927002
    9. '``' → logprob: -4.739830493927002
    10. ''' → logprob: -4.739830493927002

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9557597041130066
    2. ' =' → logprob: -1.0807597637176514
    3. '=' → logprob: -1.5807597637176514
    4. '_' → logprob: -2.9557597637176514
    5. ')' → logprob: -4.455759525299072
    6. '[next' → logprob: -6.705759525299072
    7. '.' → logprob: -6.830759525299072
    8. '[:]' → logprob: -7.580759525299072
    9. 's' → logprob: -7.705759525299072
    10. '_colors' → logprob: -7.705759525299072

Token 13: ' {'' (ID: 11881)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.43408894538879395
    2. '['' → logprob: -1.184088945388794
    3. '["' → logprob: -3.559088945388794
    4. ' ["' → logprob: -4.434088706970215
    5. ' {'' → logprob: -5.809088706970215
    6. ' [' → logprob: -6.684088706970215
    7. '[' → logprob: -7.809088706970215
    8. '{'' → logprob: -8.059088706970215
    9. ' {"' → logprob: -8.684088706970215
    10. '{"' → logprob: -8.934088706970215

Token 14: 'r' (ID: 81)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06594212353229523
    2. 'r' → logprob: -3.8159420490264893
    3. 'B' → logprob: -4.440942287445068
    4. 'W' → logprob: -4.565942287445068
    5. 'G' → logprob: -5.565942287445068
    6. 'A' → logprob: -5.565942287445068
    7. 'a' → logprob: -6.440942287445068
    8. '0' → logprob: -6.565942287445068
    9. '#' → logprob: -6.565942287445068
    10. 'b' → logprob: -6.940942287445068

Token 15: '','' (ID: 4074)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.3699987828731537
    2. '':' → logprob: -2.1199986934661865
    3. '',' → logprob: -2.2449986934661865
    4. '','' → logprob: -3.1199986934661865
    5. '':'' → logprob: -3.8699986934661865
    6. 'e' → logprob: -4.494998931884766
    7. 'd' → logprob: -6.369998931884766
    8. ''' → logprob: -6.619998931884766
    9. 'b' → logprob: -6.619998931884766
    10. 'g' → logprob: -6.869998931884766

Token 16: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.046192824840545654
    2. 'b' → logprob: -3.1711928844451904
    3. ''g' → logprob: -6.546192646026611
    4. 'y' → logprob: -6.671192646026611
    5. 'w' → logprob: -9.17119312286377
    6. ''b' → logprob: -9.42119312286377
    7. ''' → logprob: -9.67119312286377
    8. 'r' → logprob: -10.29619312286377
    9. ' g' → logprob: -10.42119312286377
    10. 'o' → logprob: -10.42119312286377

Token 17: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.023419706150889397
    2. '',' → logprob: -3.7734196186065674
    3. ','' → logprob: -9.648419380187988
    4. ''}' → logprob: -10.398419380187988
    5. 'r' → logprob: -10.648419380187988
    6. ''' → logprob: -11.023419380187988
    7. ',' → logprob: -11.648419380187988
    8. ' ','' → logprob: -11.773419380187988
    9. 'b' → logprob: -11.898419380187988
    10. '',"' → logprob: -12.023419380187988

Token 18: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006102138431742787
    2. 'y' → logprob: -7.5006103515625
    3. 'w' → logprob: -10.3756103515625
    4. ' b' → logprob: -11.2506103515625
    5. ''b' → logprob: -12.5006103515625
    6. 'r' → logprob: -12.8756103515625
    7. 'p' → logprob: -13.6256103515625
    8. 'g' → logprob: -14.0006103515625
    9. 'u' → logprob: -14.0006103515625
    10. ''' → logprob: -14.5631103515625

Token 19: ''}
' (ID: 32701)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.04549770802259445
    2. '}' → logprob: -3.6704976558685303
    3. '','' → logprob: -4.045497894287109
    4. '',' → logprob: -7.045497894287109
    5. ','' → logprob: -8.04549789428711
    6. ''' → logprob: -8.29549789428711
    7. '}'' → logprob: -11.42049789428711
    8. '}','' → logprob: -11.54549789428711
    9. ' '}' → logprob: -11.67049789428711
    10. ',' → logprob: -11.67049789428711

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3821864128112793
    2. '   ' → logprob: -1.3821864128112793
    3. ':' → logprob: -4.007186412811279
    4. ',' → logprob: -4.257186412811279
    5. ' states' → logprob: -4.507186412811279
    6. 'states' → logprob: -5.757186412811279
    7. ':
' → logprob: -6.007186412811279
    8. ' return' → logprob: -6.007186412811279
    9. 'return' → logprob: -6.257186412811279
    10. '    
' → logprob: -6.507186412811279

Token 21: ' res' (ID: 694)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.8637933135032654
    2. ' next' → logprob: -1.6137933731079102
    3. ' for' → logprob: -2.48879337310791
    4. '   ' → logprob: -2.48879337310791
    5. 'states' → logprob: -2.86379337310791
    6. ' result' → logprob: -3.23879337310791
    7. 'result' → logprob: -3.61379337310791
    8. ' return' → logprob: -3.73879337310791
    9. 'next' → logprob: -4.23879337310791
    10. ',' → logprob: -4.86379337310791

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04905976727604866
    2. '=' → logprob: -3.0490598678588867
    3. 'ult' → logprob: -8.174059867858887
    4. '.' → logprob: -8.924059867858887
    5. '.append' → logprob: -11.299059867858887
    6. '.add' → logprob: -11.799059867858887
    7. ' ' → logprob: -12.049059867858887
    8. 't' → logprob: -12.174059867858887
    9. ' +=' → logprob: -12.299059867858887
    10. '=[]' → logprob: -12.424059867858887

Token 23: ' []
' (ID: 8911)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.09745580703020096
    2. 'deque' → logprob: -3.2224557399749756
    3. ' set' → logprob: -3.5974557399749756
    4. ' []' → logprob: -3.7224557399749756
    5. 'set' → logprob: -7.847455978393555
    6. ' {' → logprob: -7.847455978393555
    7. '[]' → logprob: -7.972455978393555
    8. ' ' → logprob: -8.472455978393555
    9. ' [' → logprob: -10.347455978393555
    10. ' {}' → logprob: -10.847455978393555

Token 24: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.539174497127533
    2. '   ' → logprob: -1.4141745567321777
    3. 'for' → logprob: -1.9141745567321777
    4. ' ' → logprob: -4.789174556732178
    5. '    
' → logprob: -5.039174556732178
    6. ' 
' → logprob: -5.664174556732178
    7. '    ' → logprob: -6.539174556732178
    8. ':' → logprob: -6.914174556732178
    9. '
' → logprob: -7.164174556732178
    10. '   
' → logprob: -7.164174556732178

Token 25: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3509918749332428
    2. 'for' → logprob: -1.2259918451309204
    3. '   ' → logprob: -6.350991725921631
    4. ' ' → logprob: -7.600991725921631
    5. ' 
' → logprob: -9.975992202758789
    6. '	for' → logprob: -10.100992202758789
    7. '    ' → logprob: -10.225992202758789
    8. 'n' (adapté à ' n') → logprob: -10.225992202758789
    9. '\' → logprob: -10.600992202758789
    10. '    
' → logprob: -10.850992202758789

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012800507247447968
    2. '=' → logprob: -4.387800693511963
    3. 'ext' → logprob: -8.262800216674805
    4. ' ' → logprob: -10.637800216674805
    5. 'e' → logprob: -12.887800216674805
    6. ',' → logprob: -13.262800216674805
    7. '   ' → logprob: -13.762800216674805
    8. '=len' → logprob: -14.012800216674805
    9. '-' → logprob: -14.512800216674805
    10. '  ' → logprob: -14.762800216674805

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0297548845410347
    2. 'len' → logprob: -3.529754877090454
    3. ' ' → logprob: -13.154754638671875
    4. '(len' → logprob: -13.904754638671875
    5. '=len' → logprob: -14.029754638671875
    6. '[len' → logprob: -15.904754638671875
    7. '4' → logprob: -16.279754638671875
    8. '6' → logprob: -16.529754638671875
    9. '3' → logprob: -16.529754638671875
    10. '1' → logprob: -16.529754638671875

Token 28: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002517873188480735
    2. '(' → logprob: -6.0025177001953125
    3. 's' → logprob: -10.502517700195312
    4. ' (' → logprob: -11.252517700195312
    5. '(n' → logprob: -14.252517700195312
    6. ')' → logprob: -15.002517700195312
    7. ' s' → logprob: -16.127517700195312
    8. '(S' → logprob: -16.127517700195312
    9. '(
' → logprob: -16.252517700195312
    10. '(res' → logprob: -16.502517700195312

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1318875446449965e-05
    2. ')
' → logprob: -10.875041007995605
    3. '')' → logprob: -11.750041007995605
    4. ' )' → logprob: -12.000041007995605
    5. '   ' → logprob: -12.625041007995605
    6. '))' → logprob: -14.375041007995605
    7. '-' → logprob: -14.375041007995605
    8. '`)' → logprob: -14.375041007995605
    9. ')s' → logprob: -14.625041007995605
    10. '```' → logprob: -14.875041007995605

Token 30: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12432966381311417
    2. '   ' → logprob: -2.6243295669555664
    3. 'for' → logprob: -3.3743295669555664
    4. ' ' → logprob: -5.749329566955566
    5. '\t' → logprob: -5.999329566955566
    6. ' 
' → logprob: -7.124329566955566
    7. '    
' → logprob: -7.124329566955566
    8. '	for' → logprob: -7.249329566955566
    9. '<|end|>' → logprob: -7.374329566955566
    10. ' ' → logprob: -8.249329566955566

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762065052986145
    2. 'for' (adapté à ' for') → logprob: -0.8262065052986145
    3. '   ' → logprob: -8.45120620727539
    4. '```' → logprob: -10.57620620727539
    5. '	for' → logprob: -11.20120620727539
    6. ' ' → logprob: -11.32620620727539
    7. '  ' → logprob: -14.07620620727539
    8. ')' → logprob: -15.45120620727539
    9. '[' → logprob: -15.57620620727539
    10. ' ' → logprob: -15.70120620727539

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008894255734048784
    2. 'i' → logprob: -7.375889301300049
    3. ' ' → logprob: -8.750889778137207
    4. ' range' → logprob: -10.000889778137207
    5. ' _' → logprob: -10.500889778137207
    6. '_' → logprob: -11.250889778137207
    7. ' ' → logprob: -11.500889778137207
    8. ' color' → logprob: -12.625889778137207
    9. 'range' → logprob: -13.500889778137207
    10. '_i' → logprob: -14.375889778137207

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04977479204535484
    2. 'in' → logprob: -3.0497748851776123
    3. ' ' → logprob: -7.174774646759033
    4. '+' → logprob: -8.049775123596191
    5. '  ' → logprob: -10.549775123596191
    6. '	in' → logprob: -11.049775123596191
    7. ')' → logprob: -11.174775123596191
    8. '0' → logprob: -11.424775123596191
    9. '1' → logprob: -12.299775123596191
    10. '   ' → logprob: -12.549775123596191

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011049470864236355
    2. 'range' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.636049270629883
    4. '	range' → logprob: -15.011049270629883
    5. ' xrange' → logprob: -16.261049270629883
    6. '  ' → logprob: -17.386049270629883
    7. '   ' → logprob: -18.011049270629883
    8. '(range' → logprob: -18.011049270629883
    9. '```' → logprob: -18.511049270629883
    10. ')' → logprob: -19.011049270629883

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01423625461757183
    2. '(' → logprob: -4.2642364501953125
    3. ' (' → logprob: -9.639236450195312
    4. 'n' → logprob: -12.639236450195312
    5. '(len' → logprob: -13.389236450195312
    6. ' n' → logprob: -13.514236450195312
    7. ')' → logprob: -14.264236450195312
    8. '1' → logprob: -15.389236450195312
    9. ' ' → logprob: -15.639236450195312
    10. '(i' → logprob: -15.639236450195312

Token 36: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02099072001874447
    2. '-' → logprob: -4.02099084854126
    3. ')' → logprob: -6.52099084854126
    4. ' ):' → logprob: -7.52099084854126
    5. ' -' → logprob: -8.020990371704102
    6. '):
' → logprob: -8.270990371704102
    7. '+' → logprob: -8.520990371704102
    8. '   ' → logprob: -11.145990371704102
    9. ':' → logprob: -11.770990371704102
    10. ' ' → logprob: -11.895990371704102

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019662656995933503
    2. ' ' → logprob: -8.75019645690918
    3. '2' → logprob: -10.25019645690918
    4. '3' → logprob: -14.12519645690918
    5. '   ' → logprob: -14.43769645690918
    6. '-' → logprob: -14.68769645690918
    7. '```' → logprob: -15.06269645690918
    8. '  ' → logprob: -15.37519645690918
    9. ')' → logprob: -16.68769645690918
    10. '4' → logprob: -16.81269645690918

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006585335824638605
    2. ')' → logprob: -5.506585121154785
    3. ' ):' → logprob: -6.506585121154785
    4. '):
' → logprob: -7.256585121154785
    5. ',' → logprob: -8.631585121154785
    6. ':' → logprob: -9.631585121154785
    7. ' )' → logprob: -11.006585121154785
    8. '   ' → logprob: -11.881585121154785
    9. '):
' → logprob: -11.881585121154785
    10. '():' → logprob: -12.256585121154785

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07620443403720856
    2. ':' → logprob: -2.826204538345337
    3. '    ' → logprob: -5.451204299926758
    4. ',' → logprob: -5.826204299926758
    5. '   ' → logprob: -6.326204299926758
    6. ' ' → logprob: -6.451204299926758
    7. '<|end|>' → logprob: -6.826204299926758
    8. ' if' → logprob: -7.326204299926758
    9. '        
' → logprob: -7.951204299926758
    10. ' :' → logprob: -8.201204299926758

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09345982223749161
    2. 'if' (adapté à ' if') → logprob: -3.2184598445892334
    3. '       ' → logprob: -3.7184598445892334
    4. ' ' → logprob: -4.468459606170654
    5. ' for' → logprob: -5.093459606170654
    6. '    ' → logprob: -6.218459606170654
    7. '        ' → logprob: -6.968459606170654
    8. 'for' → logprob: -7.218459606170654
    9. ' new' → logprob: -7.343459606170654
    10. ' s' → logprob: -7.718459606170654

Token 41: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.002476724097505212
    2. 's' → logprob: -6.002476692199707
    3. '{s' → logprob: -14.752476692199707
    4. ' ' → logprob: -14.877476692199707
    5. ' not' → logprob: -16.502477645874023
    6. ' (' → logprob: -16.752477645874023
    7. '{' → logprob: -17.252477645874023
    8. ' ' → logprob: -17.502477645874023
    9. '(s' → logprob: -18.127477645874023
    10. '    ' → logprob: -18.377477645874023

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. '[I' → logprob: -16.625001907348633
    4. 'i' → logprob: -17.250001907348633
    5. '[
' → logprob: -18.250001907348633
    6. '[j' → logprob: -19.250001907348633
    7. '[index' → logprob: -19.625001907348633
    8. '[n' → logprob: -19.750001907348633
    9. '[a' → logprob: -19.875001907348633
    10. '{i' → logprob: -20.125001907348633

Token 43: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.2560176849365234
    2. ']' → logprob: -1.3810176849365234
    3. '!=' → logprob: -1.8810176849365234
    4. ' ' → logprob: -2.2560176849365234
    5. ' ==' → logprob: -2.5060176849365234
    6. '==' → logprob: -2.5060176849365234
    7. ' ]' → logprob: -4.131017684936523
    8. ']==' → logprob: -5.006017684936523
    9. '=' → logprob: -5.131017684936523
    10. ']!=' → logprob: -5.506017684936523

Token 44: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.28469833731651306
    2. ' !=' → logprob: -2.034698247909546
    3. '==' → logprob: -2.284698247909546
    4. ' ==' → logprob: -4.659698486328125
    5. ' ' → logprob: -5.284698486328125
    6. '=' → logprob: -8.159698486328125
    7. ' in' → logprob: -8.784698486328125
    8. ' not' → logprob: -9.159698486328125
    9. '>' → logprob: -10.659698486328125
    10. ']!=' → logprob: -11.034698486328125

Token 45: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38693881034851074
    2. ' s' → logprob: -1.1369388103485107
    3. ' ' → logprob: -10.26193904876709
    4. ''s' → logprob: -11.88693904876709
    5. ' '' → logprob: -12.01193904876709
    6. '<|end|>' → logprob: -12.01193904876709
    7. '<|end|>' → logprob: -12.76193904876709
    8. ''' → logprob: -13.13693904876709
    9. '-' → logprob: -14.07443904876709
    10. '#' → logprob: -14.32443904876709

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.764977686339989e-05
    2. '[' → logprob: -9.875057220458984
    3. '```' → logprob: -13.375057220458984
    4. '[
' → logprob: -13.875057220458984
    5. 'i' → logprob: -14.375057220458984
    6. '[next' → logprob: -14.625057220458984
    7. '   ' → logprob: -14.750057220458984
    8. '[I' → logprob: -14.875057220458984
    9. '[j' → logprob: -15.000057220458984
    10. 's' → logprob: -15.125057220458984

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012603526702150702
    2. '[i' → logprob: -6.876260280609131
    3. ' +' → logprob: -8.626260757446289
    4. ']' → logprob: -10.751260757446289
    5. '+i' → logprob: -11.626260757446289
    6. '+]' → logprob: -11.876260757446289
    7. '1' → logprob: -12.376260757446289
    8. '[' → logprob: -13.126260757446289
    9. '-' → logprob: -13.626260757446289
    10. '+
' → logprob: -13.751260757446289

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6696149840718135e-05
    2. ' ' → logprob: -9.875056266784668
    3. ']' → logprob: -13.250056266784668
    4. '```' → logprob: -13.500056266784668
    5. '   ' → logprob: -15.062556266784668
    6. 'i' → logprob: -15.375056266784668
    7. '2' → logprob: -15.562556266784668
    8. '0' → logprob: -15.875056266784668
    9. '-' → logprob: -15.937556266784668
    10. '  ' → logprob: -16.062557220458984

Token 49: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.3046371936798096
    2. ']' → logprob: -1.5546371936798096
    3. ']:' → logprob: -1.5546371936798096
    4. ' and' → logprob: -1.8046371936798096
    5. ':' → logprob: -3.0546371936798096
    6. ')' → logprob: -3.0546371936798096
    7. 'and' → logprob: -4.1796369552612305
    8. ' ):' → logprob: -4.6796369552612305
    9. ' ]' → logprob: -5.4296369552612305
    10. '):
' → logprob: -5.8046369552612305

Token 50: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4210183918476105
    2. '           ' → logprob: -1.921018362045288
    3. '       ' → logprob: -2.046018362045288
    4. ':
' → logprob: -3.046018362045288
    5. ' and' → logprob: -5.046018600463867
    6. ' :' → logprob: -5.171018600463867
    7. ',' → logprob: -5.796018600463867
    8. ' :
' → logprob: -6.671018600463867
    9. '               ' → logprob: -7.171018600463867
    10. '):
' → logprob: -8.046018600463867

Token 51: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4488019645214081
    2. ' for' → logprob: -1.3238019943237305
    3. ' c' → logprob: -3.6988019943237305
    4. '           ' → logprob: -3.9488019943237305
    5. 'for' → logprob: -4.0738019943237305
    6. ' colors' → logprob: -4.1988019943237305
    7. 'new' → logprob: -5.1988019943237305
    8. 'colors' → logprob: -5.4488019943237305
    9. ' next' → logprob: -6.3238019943237305
    10. 'c' → logprob: -6.4488019943237305

Token 52: ' determine' (ID: 11433)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7993030548095703
    2. ' for' → logprob: -1.0493030548095703
    3. 'for' → logprob: -2.5493030548095703
    4. ' c' → logprob: -3.0493030548095703
    5. 'new' → logprob: -4.17430305480957
    6. ' colors' → logprob: -4.67430305480957
    7. ' common' → logprob: -4.79930305480957
    8. 'c' → logprob: -5.29930305480957
    9. 'colors' → logprob: -5.42430305480957
    10. ' next' → logprob: -5.54930305480957

Token 53: ' next' (ID: 2613)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12445925921201706
    2. ' the' → logprob: -3.1244592666625977
    3. ' next' → logprob: -3.3744592666625977
    4. ' replacement' → logprob: -4.874459266662598
    5. ' colors' → logprob: -5.124459266662598
    6. ' c' → logprob: -5.124459266662598
    7. 'new' → logprob: -5.749459266662598
    8. ' possible' → logprob: -5.874459266662598
    9. ' which' → logprob: -6.124459266662598
    10. ' color' → logprob: -6.249459266662598

Token 54: ' color' (ID: 3089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5559091567993164
    2. '_color' → logprob: -1.8059091567993164
    3. ' color' → logprob: -2.0559091567993164
    4. 'color' → logprob: -2.1809091567993164
    5. '_colors' → logprob: -3.0559091567993164
    6. 'state' → logprob: -3.1809091567993164
    7. '_state' → logprob: -3.3059091567993164
    8. ' s' → logprob: -3.4309091567993164
    9. 'colors' → logprob: -3.4309091567993164
    10. '_states' → logprob: -3.4309091567993164

Token 55: ' different' (ID: 2647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7394323945045471
    2. ' =' → logprob: -1.6144323348999023
    3. 's' → logprob: -1.9894323348999023
    4. ':' → logprob: -3.1144323348999023
    5. '<|end|>' → logprob: -3.4894323348999023
    6. ')' → logprob: -3.8644323348999023
    7. '=' → logprob: -4.239432334899902
    8. '       ' → logprob: -4.489432334899902
    9. ',' → logprob: -5.114432334899902
    10. ' ' → logprob: -5.114432334899902

Token 56: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5332195162773132
    2. 'from' → logprob: -0.9082195162773132
    3. 's' → logprob: -5.408219337463379
    4. '_colors' → logprob: -6.408219337463379
    5. ' =' → logprob: -7.158219337463379
    6. ' ' → logprob: -7.658219337463379
    7. '<|end|>' → logprob: -7.908219337463379
    8. ' s' → logprob: -8.158219337463379
    9. '   ' → logprob: -8.158219337463379
    10. 'colors' → logprob: -8.283219337463379

Token 57: ' both' (ID: 2973)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6935965418815613
    2. 's' → logprob: -0.8185965418815613
    3. ' both' → logprob: -2.943596601486206
    4. 'both' → logprob: -5.068596363067627
    5. 'colors' → logprob: -9.443596839904785
    6. ' colors' → logprob: -10.068596839904785
    7. '{s' → logprob: -10.568596839904785
    8. ' the' → logprob: -10.818596839904785
    9. ' ' → logprob: -10.818596839904785
    10. '{' → logprob: -12.193596839904785

Token 58: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47105443477630615
    2. ' s' → logprob: -1.8460544347763062
    3. '(s' → logprob: -3.0960545539855957
    4. '{' → logprob: -3.0960545539855957
    5. ' =' → logprob: -3.4710545539855957
    6. ')' → logprob: -4.346054553985596
    7. 'colors' → logprob: -4.471054553985596
    8. ',' → logprob: -4.596054553985596
    9. ' ' → logprob: -4.721054553985596
    10. '=' → logprob: -4.846054553985596

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05367785692214966
    2. ' c' → logprob: -4.178678035736084
    3. ' next' → logprob: -4.178678035736084
    4. ' colors' → logprob: -5.053678035736084
    5. 'colors' → logprob: -5.928678035736084
    6. ' for' → logprob: -6.053678035736084
    7. ',' → logprob: -6.303678035736084
    8. ' color' → logprob: -6.803678035736084
    9. ' {' → logprob: -6.928678035736084
    10. ' and' → logprob: -7.053678035736084

Token 60: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9175516963005066
    2. ' c' → logprob: -1.7925517559051514
    3. ' colors' → logprob: -1.7925517559051514
    4. '   ' → logprob: -2.0425517559051514
    5. 'colors' → logprob: -2.7925517559051514
    6. ' for' → logprob: -4.167551517486572
    7. 'next' (adapté à ' next') → logprob: -4.667551517486572
    8. 'c' → logprob: -4.792551517486572
    9. ' new' → logprob: -5.042551517486572
    10. ' ' → logprob: -5.417551517486572

Token 61: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.009208060801029205
    2. '_colors' → logprob: -4.8842082023620605
    3. '_c' → logprob: -7.2592082023620605
    4. '_' → logprob: -7.5092082023620605
    5. '_col' → logprob: -8.009207725524902
    6. 'color' → logprob: -12.509207725524902
    7. ' =' → logprob: -12.884207725524902
    8. 'Color' → logprob: -13.384207725524902
    9. '_colour' → logprob: -13.509207725524902
    10. 's' → logprob: -13.634207725524902

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017095671501010656
    2. '=' → logprob: -6.501709461212158
    3. 's' → logprob: -8.501709938049316
    4. ' ' → logprob: -12.751709938049316
    5. ' =
' → logprob: -15.126709938049316
    6. '  ' → logprob: -15.251709938049316
    7. '_' → logprob: -15.501709938049316
    8. ')' → logprob: -15.876709938049316
    9. ',' → logprob: -15.876709938049316
    10. '   ' → logprob: -16.751708984375

Token 63: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.028281807899475
    2. '(colors' → logprob: -1.403281807899475
    3. 'colors' → logprob: -1.903281807899475
    4. ' colors' → logprob: -2.0282816886901855
    5. ' list' → logprob: -2.9032816886901855
    6. '(list' → logprob: -3.1532816886901855
    7. 'list' → logprob: -5.0282816886901855
    8. '(next' → logprob: -6.0282816886901855
    9. ' next' → logprob: -6.0282816886901855
    10. '({' → logprob: -6.4032816886901855

Token 64: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.006874860264360905
    2. ' colors' → logprob: -5.006875038146973
    3. '(colors' → logprob: -9.381875038146973
    4. '{' → logprob: -10.381875038146973
    5. '   ' → logprob: -10.631875038146973
    6. 'color' → logprob: -12.381875038146973
    7. ' ' → logprob: -13.131875038146973
    8. '  ' → logprob: -13.381875038146973
    9. 'col' → logprob: -13.506875038146973
    10. ')' → logprob: -13.506875038146973

Token 65: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002495991066098213
    2. '-' → logprob: -6.002495765686035
    3. ' ' → logprob: -10.877495765686035
    4. '-{' → logprob: -14.377495765686035
    5. ' ' → logprob: -15.252495765686035
    6. ' -
' → logprob: -15.502495765686035
    7. ')' → logprob: -15.627495765686035
    8. ' {' → logprob: -15.752495765686035
    9. '{' → logprob: -16.50249671936035
    10. '.d' → logprob: -17.00249671936035

Token 66: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2752689719200134
    2. ' {' → logprob: -1.5252690315246582
    3. '{s' → logprob: -3.775269031524658
    4. '{i' → logprob: -9.2752685546875
    5. 'set' → logprob: -10.5252685546875
    6. ' set' → logprob: -12.0252685546875
    7. '{x' → logprob: -12.4002685546875
    8. '{sub' → logprob: -12.6502685546875
    9. '{text' → logprob: -12.9002685546875
    10. '{return' → logprob: -14.4002685546875

Token 67: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003404687449801713
    2. ' s' → logprob: -8.625340461730957
    3. '{s' → logprob: -8.750340461730957
    4. '{' → logprob: -13.375340461730957
    5. '`s' → logprob: -15.500340461730957
    6. '}s' → logprob: -15.625340461730957
    7. '```' → logprob: -15.625340461730957
    8. ' ' → logprob: -16.375341415405273
    9. '<s' → logprob: -17.000341415405273
    10. ' {' → logprob: -17.125341415405273

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.500001907348633
    3. '[
' → logprob: -14.875001907348633
    4. '{i' → logprob: -15.250001907348633
    5. 'i' → logprob: -15.375001907348633
    6. '```' → logprob: -16.125001907348633
    7. ' [' → logprob: -16.875001907348633
    8. 's' → logprob: -17.625001907348633
    9. '[s' → logprob: -17.750001907348633
    10. ' ' → logprob: -17.750001907348633

Token 69: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028917932882905006
    2. '[i' → logprob: -3.9039180278778076
    3. ' ,' → logprob: -5.1539177894592285
    4. ',i' → logprob: -6.2789177894592285
    5. ',s' → logprob: -8.903918266296387
    6. '',' → logprob: -8.903918266296387
    7. '],' → logprob: -9.028918266296387
    8. '   ' → logprob: -9.403918266296387
    9. ']' → logprob: -9.528918266296387
    10. ','' → logprob: -10.403918266296387

Token 70: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03368581458926201
    2. 's' → logprob: -3.4086859226226807
    3. ' ' → logprob: -10.283685684204102
    4. ' ' → logprob: -12.908685684204102
    5. '{s' → logprob: -13.658685684204102
    6. '	s' → logprob: -14.908685684204102
    7. ''s' → logprob: -14.908685684204102
    8. '   ' → logprob: -15.033685684204102
    9. '(s' → logprob: -15.158685684204102
    10. '    ' → logprob: -15.283685684204102

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. '[
' → logprob: -14.875003814697266
    4. 'i' → logprob: -15.625003814697266
    5. '{i' → logprob: -16.500003814697266
    6. ' [' → logprob: -16.625003814697266
    7. '[j' → logprob: -16.750003814697266
    8. '[n' → logprob: -17.125003814697266
    9. ']' → logprob: -17.625003814697266
    10. '[I' → logprob: -17.625003814697266

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00028171599842607975
    2. '[i' → logprob: -8.25028133392334
    3. ' +' → logprob: -11.25028133392334
    4. '+i' → logprob: -12.00028133392334
    5. ']' → logprob: -14.87528133392334
    6. '   ' → logprob: -15.37528133392334
    7. '+]' → logprob: -15.75028133392334
    8. '-' → logprob: -16.000282287597656
    9. '1' → logprob: -16.625282287597656
    10. '[' → logprob: -16.750282287597656

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '+' → logprob: -14.125016212463379
    4. '   ' → logprob: -15.250016212463379
    5. 'i' → logprob: -16.500015258789062
    6. '```' → logprob: -16.750015258789062
    7. '{' → logprob: -17.812515258789062
    8. '  ' → logprob: -17.937515258789062
    9. '2' → logprob: -18.000015258789062
    10. '۱' → logprob: -18.562515258789062

Token 74: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3329297602176666
    2. '}}' → logprob: -1.4579297304153442
    3. ']}' → logprob: -3.832929849624634
    4. '})' → logprob: -4.207929611206055
    5. ']' → logprob: -4.457929611206055
    6. '}).' → logprob: -6.832929611206055
    7. ' }' → logprob: -7.332929611206055
    8. ')}' → logprob: -8.707929611206055
    9. '']' → logprob: -8.957929611206055
    10. ''}' → logprob: -9.582929611206055

Token 75: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00011617878044489771
    2. '.pop' → logprob: -9.625116348266602
    3. ')' → logprob: -10.500116348266602
    4. ' ).' → logprob: -11.125116348266602
    5. 'pop' → logprob: -12.250116348266602
    6. '}.' → logprob: -14.000116348266602
    7. '   ' → logprob: -14.000116348266602
    8. ').__' → logprob: -14.875116348266602
    9. '}).' → logprob: -14.875116348266602
    10. '").' → logprob: -15.875116348266602

Token 76: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -2.165027217415627e-05
    2. '.pop' → logprob: -10.750021934509277
    3. 'copy' → logprob: -15.875021934509277
    4. '_pop' → logprob: -17.75002098083496
    5. ' pop' → logprob: -19.25002098083496
    6. '/pop' → logprob: -21.12502098083496
    7. 'Pop' → logprob: -21.25002098083496
    8. '	pop' → logprob: -21.37502098083496
    9. 'next' → logprob: -21.62502098083496
    10. '(pop' → logprob: -22.37502098083496

Token 77: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.219262624857947e-05
    2. '(' → logprob: -9.625072479248047
    3. '()}' → logprob: -12.375072479248047
    4. ']()' → logprob: -14.875072479248047
    5. '()(' → logprob: -15.000072479248047
    6. '()]' → logprob: -15.250072479248047
    7. '}' → logprob: -15.250072479248047
    8. '()`' → logprob: -15.750072479248047
    9. '()
' → logprob: -16.000072479248047
    10. '()?>' → logprob: -17.000072479248047

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023863529786467552
    2. '<|end|>' → logprob: -6.377386569976807
    3. '<|end|>' → logprob: -8.627386093139648
    4. '       ' → logprob: -8.627386093139648
    5. ')' → logprob: -9.002386093139648
    6. '            
' → logprob: -9.252386093139648
    7. '   ' → logprob: -10.377386093139648
    8. ',' → logprob: -10.877386093139648
    9. '               ' → logprob: -11.252386093139648
    10. '          ' → logprob: -12.002386093139648

Token 79: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019447000697255135
    2. ' res' → logprob: -4.394446849822998
    3. 'res' → logprob: -5.144446849822998
    4. ' s' → logprob: -8.144447326660156
    5. '<|end|>' → logprob: -8.144447326660156
    6. 's' → logprob: -9.019447326660156
    7. '       ' → logprob: -9.769447326660156
    8. '            
' → logprob: -9.769447326660156
    9. ' ' → logprob: -10.019447326660156
    10. '   ' → logprob: -10.019447326660156

Token 80: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004131237976253033
    2. 's' → logprob: -5.629131317138672
    3. '_state' → logprob: -7.629131317138672
    4. '_' → logprob: -11.004131317138672
    5. ' =' → logprob: -11.379131317138672
    6. '_str' → logprob: -11.504131317138672
    7. 'state' → logprob: -13.004131317138672
    8. '=' → logprob: -13.379131317138672
    9. '_states' → logprob: -13.379131317138672
    10. '   ' → logprob: -14.754131317138672

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42875197529792786
    2. '=' → logprob: -1.0537519454956055
    3. '[i' → logprob: -11.303751945495605
    4. 's' → logprob: -11.303751945495605
    5. '   ' → logprob: -11.678751945495605
    6. '[' → logprob: -13.178751945495605
    7. ' ' → logprob: -13.303751945495605
    8. 'f' → logprob: -13.428751945495605
    9. '=[' → logprob: -13.553751945495605
    10. '=i' → logprob: -13.553751945495605

Token 82: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1426764875650406
    2. 's' → logprob: -2.017676591873169
    3. '(s' → logprob: -14.39267635345459
    4. ' ' → logprob: -15.39267635345459
    5. '{s' → logprob: -15.76767635345459
    6. '	s' → logprob: -15.89267635345459
    7. '   ' → logprob: -16.142677307128906
    8. '_s' → logprob: -17.267677307128906
    9. ''s' → logprob: -17.267677307128906
    10. '`s' → logprob: -17.392677307128906

Token 83: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -2.1008713702030946e-06
    2. '[:]' → logprob: -13.250001907348633
    3. '[' → logprob: -16.000001907348633
    4. ':' → logprob: -16.500001907348633
    5. '[i' → logprob: -17.500001907348633
    6. '][:' → logprob: -18.125001907348633
    7. '[:-' → logprob: -18.250001907348633
    8. ' [:' → logprob: -18.500001907348633
    9. ':i' → logprob: -20.750001907348633
    10. '[:,' → logprob: -21.000001907348633

Token 84: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.896309739408025e-07
    2. ' i' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.5
    4. '	i' → logprob: -18.75
    5. '(i' → logprob: -19.0
    6. '[i' → logprob: -19.25
    7. '+' → logprob: -19.375
    8. ' ' → logprob: -19.5
    9. ',i' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025143080856651068
    2. ']+' → logprob: -6.002514362335205
    3. '+' → logprob: -10.377513885498047
    4. ' ]' → logprob: -12.877513885498047
    5. ']+"' → logprob: -13.252513885498047
    6. '+i' → logprob: -13.502513885498047
    7. 'i' → logprob: -14.252513885498047
    8. ':i' → logprob: -15.627513885498047
    9. '']' → logprob: -15.752513885498047
    10. '"]' → logprob: -15.752513885498047

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11314460635185242
    2. ' +' → logprob: -2.238144636154175
    3. '+i' → logprob: -8.113144874572754
    4. ')' → logprob: -12.613144874572754
    5. ']' → logprob: -12.738144874572754
    6. ']+' → logprob: -13.238144874572754
    7. '+"' → logprob: -13.363144874572754
    8. '   ' → logprob: -13.738144874572754
    9. '+'' → logprob: -13.738144874572754
    10. '       ' → logprob: -13.863144874572754

Token 87: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.001930301426909864
    2. ' next' → logprob: -6.251930236816406
    3. '[next' → logprob: -13.751930236816406
    4. '(next' → logprob: -14.251930236816406
    5. '	next' → logprob: -17.126930236816406
    6. '.next' → logprob: -19.376930236816406
    7. '```' → logprob: -19.751930236816406
    8. ',next' → logprob: -20.626930236816406
    9. 'Next' → logprob: -20.751930236816406
    10. '`' → logprob: -20.876930236816406

Token 88: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.45848218582978e-06
    2. '_token' → logprob: -14.00000286102295
    3. '_COLOR' → logprob: -14.37500286102295
    4. '_colors' → logprob: -14.75000286102295
    5. '_' → logprob: -15.62500286102295
    6. 'Color' → logprob: -16.250001907348633
    7. '_c' → logprob: -16.250001907348633
    8. '_Color' → logprob: -16.500001907348633
    9. '_colour' → logprob: -17.000001907348633
    10. 'color' → logprob: -17.125001907348633

Token 89: '*' (ID: 9)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16217480599880219
    2. '+' → logprob: -2.662174701690674
    3. '+s' → logprob: -3.162174701690674
    4. 's' → logprob: -3.287174701690674
    5. ' s' → logprob: -8.662175178527832
    6. '(s' → logprob: -10.912175178527832
    7. ' ' → logprob: -11.037175178527832
    8. '```' → logprob: -12.662175178527832
    9. '           ' → logprob: -13.412175178527832
    10. '   ' → logprob: -13.912175178527832

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003912311512976885
    2. ' ' → logprob: -8.125391006469727
    3. '3' → logprob: -9.375391006469727
    4. '1' → logprob: -12.625391006469727
    5. '(' → logprob: -12.750391006469727
    6. '   ' → logprob: -14.000391006469727
    7. '  ' → logprob: -14.250391006469727
    8. '```' → logprob: -14.375391006469727
    9. '`' → logprob: -14.500391006469727
    10. '"' → logprob: -14.875391006469727

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5792845487594604
    2. ' +' → logprob: -0.8292845487594604
    3. '+s' → logprob: -5.82928466796875
    4. 's' → logprob: -7.82928466796875
    5. ' s' → logprob: -15.07928466796875
    6. ' ' → logprob: -15.20428466796875
    7. '+c' → logprob: -16.07928466796875
    8. '+i' → logprob: -16.20428466796875
    9. '   ' → logprob: -16.20428466796875
    10. '+p' → logprob: -16.57928466796875

Token 92: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889056205749512
    2. ' s' → logprob: -2.578890562057495
    3. '(s' → logprob: -14.953890800476074
    4. '>s' → logprob: -14.953890800476074
    5. '_s' → logprob: -16.453889846801758
    6. ' ' → logprob: -17.078889846801758
    7. '	s' → logprob: -17.203889846801758
    8. '+s' → logprob: -17.703889846801758
    9. '<s' → logprob: -17.828889846801758
    10. '`s' → logprob: -17.953889846801758

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[:' → logprob: -14.500004768371582
    4. '[' → logprob: -15.000004768371582
    5. '(i' → logprob: -16.2500057220459
    6. '{i' → logprob: -16.3750057220459
    7. ' i' → logprob: -18.0000057220459
    8. '[(' → logprob: -18.3750057220459
    9. 's' → logprob: -19.2500057220459
    10. ':i' → logprob: -19.5000057220459

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002111694193445146
    2. '2' → logprob: -8.750210762023926
    3. ' +' → logprob: -9.875210762023926
    4. ' ' → logprob: -14.375210762023926
    5. '[' → logprob: -15.375210762023926
    6. '3' → logprob: -15.750210762023926
    7. ']+' → logprob: -16.500211715698242
    8. '()+' → logprob: -16.625211715698242
    9. '```' → logprob: -17.125211715698242
    10. '{' → logprob: -17.500211715698242

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -14.75001335144043
    4. '   ' → logprob: -17.50001335144043
    5. '  ' → logprob: -18.00001335144043
    6. ')' → logprob: -18.00001335144043
    7. '<|end|>' → logprob: -18.37501335144043
    8. '۲' → logprob: -18.56251335144043
    9. '+' → logprob: -18.93751335144043
    10. ']' → logprob: -19.06251335144043

Token 96: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.524538516998291
    2. ':]' → logprob: -0.899538516998291
    3. ':' → logprob: -7.899538516998291
    4. ' :]' → logprob: -8.149538040161133
    5. ' ]' → logprob: -8.149538040161133
    6. 's' → logprob: -8.399538040161133
    7. ')' → logprob: -9.024538040161133
    8. '']' → logprob: -10.524538040161133
    9. ':]
' → logprob: -11.149538040161133
    10. '"]' → logprob: -11.149538040161133

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.706686690449715e-05
    2. '
' → logprob: -10.625066757202148
    3. 'res' → logprob: -11.000066757202148
    4. '       ' → logprob: -11.625066757202148
    5. ' res' → logprob: -11.875066757202148
    6. '   ' → logprob: -12.375066757202148
    7. '```' → logprob: -12.625066757202148
    8. '            
' → logprob: -14.000066757202148
    9. '<|end|>' → logprob: -14.875066757202148
    10. '               ' → logprob: -15.500066757202148

Token 98: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.7597945332527161
    2. ' res' → logprob: -0.7597945332527161
    3. '           ' → logprob: -2.7597944736480713
    4. '       ' → logprob: -7.13479471206665
    5. '   ' → logprob: -8.134794235229492
    6. '
' → logprob: -10.009794235229492
    7. '	res' → logprob: -11.384794235229492
    8. '               ' → logprob: -11.759794235229492
    9. '```' → logprob: -12.884794235229492
    10. ' ' → logprob: -13.009794235229492

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2521041929721832
    2. '.' → logprob: -1.5021041631698608
    3. '.extend' → logprob: -9.502103805541992
    4. '.app' → logprob: -9.627103805541992
    5. ' .' → logprob: -11.502103805541992
    6. '.Append' → logprob: -12.252103805541992
    7. '​.' → logprob: -12.252103805541992
    8. '.py' → logprob: -12.502103805541992
    9. '.ap' → logprob: -12.627103805541992
    10. '.push' → logprob: -13.002103805541992

Token 100: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. '((' → logprob: -16.250009536743164
    4. 'new' → logprob: -16.625009536743164
    5. ' (' → logprob: -16.875009536743164
    6. ' new' → logprob: -20.250009536743164
    7. '('' → logprob: -20.375009536743164
    8. '(s' → logprob: -20.625009536743164
    9. '(New' → logprob: -20.750009536743164
    10. ',new' → logprob: -20.875009536743164

Token 101: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.018982049077749252
    2. 'w' → logprob: -4.26898193359375
    3. 'ew' → logprob: -6.14398193359375
    4. 's' → logprob: -6.14398193359375
    5. '_w' → logprob: -8.26898193359375
    6. ')' → logprob: -9.26898193359375
    7. '(s' → logprob: -11.01898193359375
    8. ' s' → logprob: -11.26898193359375
    9. ' ' → logprob: -11.26898193359375
    10. 'res' → logprob: -11.26898193359375

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000763287884183228
    2. ')
' → logprob: -7.375763416290283
    3. '   ' → logprob: -9.000762939453125
    4. ')return' → logprob: -11.625762939453125
    5. ' )' → logprob: -13.500762939453125
    6. ')
' → logprob: -14.125762939453125
    7. '       ' → logprob: -14.500762939453125
    8. ')`' → logprob: -14.500762939453125
    9. ' ' → logprob: -14.875762939453125
    10. '`)' → logprob: -15.250762939453125

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017587877810001373
    2. 'return' → logprob: -4.267587661743164
    3. ' return' → logprob: -5.767587661743164
    4. '	return' → logprob: -8.267587661743164
    5. '       ' → logprob: -11.017587661743164
    6. '    
' → logprob: -11.767587661743164
    7. ':return' → logprob: -12.517587661743164
    8. '
' → logprob: -13.017587661743164
    9. '```' → logprob: -13.642587661743164
    10. '<|end|>' → logprob: -14.392587661743164

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06847453117370605
    2. '   ' → logprob: -2.818474531173706
    3. ' return' → logprob: -5.068474769592285
    4. '	return' → logprob: -8.943474769592285
    5. '```' → logprob: -9.943474769592285
    6. '    
' → logprob: -12.068474769592285
    7. ':return' → logprob: -12.818474769592285
    8. ' ' → logprob: -12.943474769592285
    9. 'eturn' → logprob: -13.443474769592285
    10. '
' → logprob: -14.193474769592285

Token 105: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004306692280806601
    2. ' res' → logprob: -7.750430583953857
    3. '(res' → logprob: -19.875431060791016
    4. '	res' → logprob: -22.000431060791016
    5. '$res' → logprob: -23.250431060791016
    6. '   ' → logprob: -24.125431060791016
    7. ' ' → logprob: -24.875431060791016
    8. 'r' → logprob: -24.875431060791016
    9. '```' → logprob: -25.000431060791016
    10. 're' → logprob: -25.125431060791016

Token 106: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007098246365785599
    2. '<|end|>' → logprob: -5.632098197937012
    3. 'deque' → logprob: -6.132098197937012
    4. '
' → logprob: -7.882098197937012
    5. 'from' → logprob: -7.882098197937012
    6. 's' → logprob: -8.882098197937012
    7. ')' → logprob: -9.007098197937012
    8. '<|end|>' → logprob: -10.007098197937012
    9. '#' → logprob: -10.257098197937012
    10. '```' → logprob: -10.507098197937012

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022824073676019907
    2. 'deque' → logprob: -6.752282619476318
    3. 'queue' → logprob: -7.377282619476318
    4. 'b' → logprob: -9.00228214263916
    5. 'from' → logprob: -9.00228214263916
    6. 'q' → logprob: -9.87728214263916
    7. 's' → logprob: -10.00228214263916
    8. '
' → logprob: -10.12728214263916
    9. 'visited' → logprob: -10.50228214263916
    10. ')' → logprob: -10.75228214263916

Token 108: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.45070263743400574
    2. ' shortest' → logprob: -1.9507026672363281
    3. 'b' → logprob: -2.450702667236328
    4. ' can' → logprob: -3.575702667236328
    5. ' solve' → logprob: -3.825702667236328
    6. 'solve' → logprob: -4.075702667236328
    7. 'min' → logprob: -4.200702667236328
    8. ' min' → logprob: -4.325702667236328
    9. 'can' → logprob: -4.950702667236328
    10. 'short' → logprob: -4.950702667236328

Token 109: '(start' (ID: 20008)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.19348084926605225
    2. '(start' → logprob: -2.193480968475342
    3. '(queue' → logprob: -3.193480968475342
    4. '(' → logprob: -4.568480968475342
    5. '(root' → logprob: -4.943480968475342
    6. '(state' → logprob: -5.443480968475342
    7. '(graph' → logprob: -7.568480968475342
    8. '(initial' → logprob: -8.318480491638184
    9. '(q' → logprob: -8.443480491638184
    10. '(source' → logprob: -9.318480491638184

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29781925678253174
    2. '):
' → logprob: -1.4228192567825317
    3. ',' → logprob: -5.047819137573242
    4. '(start' → logprob: -5.422819137573242
    5. '(s' → logprob: -5.797819137573242
    6. '):
' → logprob: -6.797819137573242
    7. 's' → logprob: -7.297819137573242
    8. ':' → logprob: -7.922819137573242
    9. '):

' → logprob: -8.922819137573242
    10. ')' → logprob: -9.297819137573242

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003532198315951973
    2. ' queue' → logprob: -8.50035285949707
    3. ' visited' → logprob: -9.87535285949707
    4. '```' → logprob: -9.87535285949707
    5. 'visited' → logprob: -10.62535285949707
    6. 'queue' → logprob: -10.87535285949707
    7. '	queue' → logprob: -13.75035285949707
    8. 'q' → logprob: -14.62535285949707
    9. 'def' → logprob: -15.00035285949707
    10. '(queue' → logprob: -15.25035285949707

Token 112: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08934780955314636
    2. 'queue' → logprob: -3.3393478393554688
    3. ' queue' → logprob: -3.5893478393554688
    4. 'visited' → logprob: -4.214347839355469
    5. ' visited' → logprob: -5.339347839355469
    6. '```' → logprob: -5.964347839355469
    7. '
' → logprob: -9.464347839355469
    8. 'q' → logprob: -10.089347839355469
    9. 'from' → logprob: -10.464347839355469
    10. ' seen' → logprob: -10.464347839355469

Token 113: ' all' (ID: 722)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.31756600737571716
    2. ' start' → logprob: -1.3175660371780396
    3. ' not' → logprob: -5.56756591796875
    4. 'not' → logprob: -7.69256591796875
    5. 'len' → logprob: -11.56756591796875
    6. ' len' → logprob: -12.19256591796875
    7. ' ' → logprob: -13.94256591796875
    8. '[start' → logprob: -14.06756591796875
    9. 's' → logprob: -14.19256591796875
    10. '(start' → logprob: -14.31756591796875

Token 114: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00232296041212976
    2. '(x' → logprob: -6.752323150634766
    3. '(ch' → logprob: -7.252323150634766
    4. '(s' → logprob: -7.877323150634766
    5. '(' → logprob: -10.377323150634766
    6. '(color' → logprob: -10.752323150634766
    7. 'c' → logprob: -12.752323150634766
    8. '((' → logprob: -13.127323150634766
    9. '([' → logprob: -13.377323150634766
    10. '(char' → logprob: -13.502323150634766

Token 115: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812281847000122
    2. '==' → logprob: -1.4062281847000122
    3. '=='' → logprob: -10.781228065490723
    4. ' in' → logprob: -10.781228065490723
    5. '=' → logprob: -12.281228065490723
    6. '=="' → logprob: -12.406228065490723
    7. 's' → logprob: -12.531228065490723
    8. 'e' → logprob: -12.656228065490723
    9. ' ' → logprob: -12.656228065490723
    10. ')==' → logprob: -13.031228065490723

Token 116: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4752453565597534
    2. ' start' → logprob: -0.9752453565597534
    3. ''s' → logprob: -7.600245475769043
    4. ' s' → logprob: -8.225245475769043
    5. ''' → logprob: -8.600245475769043
    6. 's' → logprob: -8.725245475769043
    7. ' '' → logprob: -10.225245475769043
    8. ' ' → logprob: -11.850245475769043
    9. '[start' → logprob: -12.475245475769043
    10. '(start' → logprob: -13.350245475769043

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7491250875755213e-05
    2. ' for' → logprob: -10.875027656555176
    3. '[start' → logprob: -12.125027656555176
    4. '[-' → logprob: -13.625027656555176
    5. 'for' → logprob: -14.000027656555176
    6. 's' → logprob: -15.125027656555176
    7. ' ' → logprob: -15.250027656555176
    8. '   ' → logprob: -15.500027656555176
    9. 'start' → logprob: -16.50002670288086
    10. ' [' → logprob: -16.62502670288086

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.750018119812012
    4. '[' → logprob: -14.750018119812012
    5. ':' → logprob: -15.000018119812012
    6. '-' → logprob: -17.125017166137695
    7. '```' → logprob: -17.750017166137695
    8. '1' → logprob: -17.875017166137695
    9. '  ' → logprob: -18.000017166137695
    10. ']' → logprob: -18.875017166137695

Token 119: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11306433379650116
    2. ']' → logprob: -2.3630642890930176
    3. 'for' → logprob: -4.488064289093018
    4. ')' → logprob: -7.363064289093018
    5. ' ' → logprob: -8.113064765930176
    6. ' ]' → logprob: -8.113064765930176
    7. '}' → logprob: -8.613064765930176
    8. '   ' → logprob: -9.488064765930176
    9. '  ' → logprob: -11.863064765930176
    10. '    ' → logprob: -11.863064765930176

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0073053608648478985
    2. 'for' → logprob: -5.257305145263672
    3. ')' → logprob: -6.882305145263672
    4. '):' → logprob: -7.007305145263672
    5. '   ' → logprob: -10.007305145263672
    6. ' ' → logprob: -10.382305145263672
    7. '):
' → logprob: -10.507305145263672
    8. ':' → logprob: -11.382305145263672
    9. '    ' → logprob: -12.382305145263672
    10. ' or' → logprob: -12.507305145263672

Token 121: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47416767477989197
    2. 'c' → logprob: -0.9741677045822144
    3. ' in' → logprob: -9.474167823791504
    4. '_' → logprob: -12.349167823791504
    5. ' start' → logprob: -12.599167823791504
    6. '_c' → logprob: -12.849167823791504
    7. ' s' → logprob: -14.099167823791504
    8. 'start' → logprob: -14.224167823791504
    9. ')' → logprob: -14.349167823791504
    10. ')c' → logprob: -14.474167823791504

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02640131302177906
    2. 'in' → logprob: -3.6514012813568115
    3. ' ' → logprob: -9.52640151977539
    4. 'c' → logprob: -10.65140151977539
    5. '  ' → logprob: -12.90140151977539
    6. '<|end|>' → logprob: -14.40140151977539
    7. ' c' → logprob: -14.52640151977539
    8. '   ' → logprob: -15.02640151977539
    9. 's' → logprob: -15.52640151977539
    10. 'start' → logprob: -15.90140151977539

Token 123: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3132637143135071
    2. ' start' → logprob: -1.3132636547088623
    3. '[start' → logprob: -13.313263893127441
    4. '(start' → logprob: -16.063262939453125
    5. ' ' → logprob: -16.313262939453125
    6. '=start' → logprob: -16.563262939453125
    7. '	start' → logprob: -17.438262939453125
    8. '
' → logprob: -18.438262939453125
    9. '[' → logprob: -18.938262939453125
    10. 's' → logprob: -19.188262939453125

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006713286275044084
    2. '):
' → logprob: -7.37567138671875
    3. ' ):' → logprob: -10.25067138671875
    4. ')' → logprob: -11.87567138671875
    5. '   ' → logprob: -14.12567138671875
    6. '):

' → logprob: -14.50067138671875
    7. '):
' → logprob: -14.87567138671875
    8. ':' → logprob: -14.87567138671875
    9. 's' → logprob: -15.87567138671875
    10. ')):' → logprob: -16.12567138671875

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025689988397061825
    2. ':
' → logprob: -6.877569198608398
    3. ':' → logprob: -7.502569198608398
    4. ' return' → logprob: -7.627569198608398
    5. '   ' → logprob: -8.502569198608398
    6. '):
' → logprob: -9.502569198608398
    7. '
' → logprob: -9.877569198608398
    8. '<|end|>' → logprob: -10.127569198608398
    9. '```' → logprob: -10.252569198608398
    10. ':return' → logprob: -10.252569198608398

Token 126: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5460690259933472
    2. '       ' → logprob: -0.9210690259933472
    3. 'return' (adapté à ' return') → logprob: -4.421069145202637
    4. '   ' → logprob: -4.546069145202637
    5. ' ' → logprob: -11.171069145202637
    6. '	return' → logprob: -11.421069145202637
    7. '           ' → logprob: -12.546069145202637
    8. '
' → logprob: -12.671069145202637
    9. '```' → logprob: -12.796069145202637
    10. ' True' → logprob: -13.046069145202637

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43174290657043457
    2. ' ' → logprob: -1.0567429065704346
    3. 'len' → logprob: -6.3067426681518555
    4. ' len' → logprob: -7.0567426681518555
    5. '1' → logprob: -8.556742668151855
    6. ' None' → logprob: -9.556742668151855
    7. 'None' → logprob: -10.306742668151855
    8. '-' → logprob: -11.556742668151855
    9. '
' → logprob: -11.681742668151855
    10. '   ' → logprob: -12.181742668151855

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -18.125019073486328
    4. '   ' → logprob: -18.875019073486328
    5. 'True' → logprob: -19.500019073486328
    6. '"' → logprob: -20.125019073486328
    7. 'len' → logprob: -20.500019073486328
    8. '  ' → logprob: -21.000019073486328
    9. '[' → logprob: -21.125019073486328
    10. 'start' → logprob: -21.125019073486328

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08015205711126328
    2. '   ' → logprob: -3.3301520347595215
    3. '    
' → logprob: -3.3301520347595215
    4. '  
' → logprob: -5.7051520347595215
    5. '   
' → logprob: -7.4551520347595215
    6. ' 
' → logprob: -7.5801520347595215
    7. '
' → logprob: -8.20515251159668
    8. '<|end|>' → logprob: -8.33015251159668
    9. '	
' → logprob: -8.58015251159668
    10. '```' → logprob: -9.45515251159668

Token 130: '   ' (ID: 271)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.15289339423179626
    2. '   ' → logprob: -2.027893304824829
    3. ' visited' → logprob: -5.527893543243408
    4. '
' → logprob: -6.277893543243408
    5. 'queue' → logprob: -6.277893543243408
    6. '    
' → logprob: -6.402893543243408
    7. ' q' → logprob: -7.777893543243408
    8. 'visited' → logprob: -9.40289306640625
    9. 'q' → logprob: -10.02789306640625
    10. '```' → logprob: -10.02789306640625

Token 131: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1587849259376526
    2. ' queue' → logprob: -2.658784866333008
    3. '   ' → logprob: -3.158784866333008
    4. 'visited' (adapté à ' visited') → logprob: -4.033784866333008
    5. '    
' → logprob: -4.533784866333008
    6. 'q' → logprob: -5.783784866333008
    7. ' visited' → logprob: -6.783784866333008
    8. '
' → logprob: -7.033784866333008
    9. '```' → logprob: -7.783784866333008
    10. '   
' → logprob: -8.908784866333008

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018155328929424286
    2. '=' → logprob: -4.018155097961426
    3. '=set' → logprob: -12.268155097961426
    4. ' ' → logprob: -14.893155097961426
    5. '.add' → logprob: -15.518155097961426
    6. ',' → logprob: -16.768156051635742
    7. ' ={' → logprob: -17.393156051635742
    8. ' ' → logprob: -17.518156051635742
    9. '```' → logprob: -18.393156051635742
    10. 'add' → logprob: -18.768156051635742

Token 133: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7138674855232239
    2. 'set' → logprob: -0.7138674855232239
    3. ' {' → logprob: -4.463867664337158
    4. ' set' → logprob: -4.713867664337158
    5. 'deque' → logprob: -11.2138671875
    6. '=set' → logprob: -12.7138671875
    7. '   ' → logprob: -13.2138671875
    8. '	set' → logprob: -14.7138671875
    9. ' ' → logprob: -16.2138671875
    10. '(set' → logprob: -16.2138671875

Token 134: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07694236934185028
    2. '()
' → logprob: -3.0769424438476562
    3. '(queue' → logprob: -4.451942443847656
    4. '(' → logprob: -4.701942443847656
    5. '([' → logprob: -6.201942443847656
    6. '(start' → logprob: -6.451942443847656
    7. '(de' → logprob: -6.701942443847656
    8. '([(' → logprob: -7.701942443847656
    9. '()

' → logprob: -7.951942443847656
    10. 'deque' → logprob: -8.201942443847656

Token 135: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7729658540920354e-05
    2. ' start' → logprob: -10.500027656555176
    3. '(start' → logprob: -16.250028610229492
    4. '   ' → logprob: -19.375028610229492
    5. '[start' → logprob: -19.375028610229492
    6. 's' → logprob: -20.250028610229492
    7. ')' → logprob: -21.000028610229492
    8. ' ' → logprob: -21.250028610229492
    9. '	start' → logprob: -21.250028610229492
    10. '.start' → logprob: -21.875028610229492

Token 136: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001013876055367291
    2. ')' → logprob: -7.50101375579834
    3. '])
' → logprob: -7.87601375579834
    4. ')])' → logprob: -10.37601375579834
    5. ',' → logprob: -10.75101375579834
    6. ' ])' → logprob: -11.25101375579834
    7. '))' → logprob: -12.50101375579834
    8. ''])' → logprob: -12.62601375579834
    9. ')]' → logprob: -12.75101375579834
    10. ')
' → logprob: -13.50101375579834

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05001601204276085
    2. ' queue' → logprob: -3.300015926361084
    3. 'queue' → logprob: -4.550015926361084
    4. '
' → logprob: -7.550015926361084
    5. '```' → logprob: -7.550015926361084
    6. '	queue' → logprob: -8.925016403198242
    7. '    
' → logprob: -9.175016403198242
    8. '  ' → logprob: -11.175016403198242
    9. 'q' → logprob: -12.300016403198242
    10. '    ' → logprob: -12.425016403198242

Token 138: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.014800313860177994
    2. ' queue' → logprob: -4.264800548553467
    3. 'q' → logprob: -7.764800548553467
    4. '```' → logprob: -8.764800071716309
    5. '   ' → logprob: -9.889800071716309
    6. 'que' → logprob: -13.514800071716309
    7. '
' → logprob: -14.014800071716309
    8. '	queue' → logprob: -14.264800071716309
    9. 'dq' → logprob: -14.264800071716309
    10. ' q' → logprob: -14.389800071716309

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18013246357440948
    2. '=' → logprob: -1.805132508277893
    3. '(' → logprob: -7.9301323890686035
    4. '   ' → logprob: -11.180132865905762
    5. '.append' → logprob: -12.305132865905762
    6. ')' → logprob: -12.555132865905762
    7. '(queue' → logprob: -13.805132865905762
    8. ' ' → logprob: -14.305132865905762
    9. '([(' → logprob: -14.555132865905762
    10. '```' → logprob: -14.555132865905762

Token 140: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.1602245420217514
    2. 'deque' → logprob: -1.9102245569229126
    3. 'Deque' → logprob: -15.160224914550781
    4. 'de' → logprob: -18.16022491455078
    5. '(de' → logprob: -18.41022491455078
    6. '	de' → logprob: -19.78522491455078
    7. '   ' → logprob: -20.03522491455078
    8. ' dequeue' → logprob: -20.66022491455078
    9. '```' → logprob: -21.41022491455078
    10. 'collections' → logprob: -22.41022491455078

Token 141: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.004150580149143934
    2. '([' → logprob: -5.504150390625
    3. '[(' → logprob: -10.129150390625
    4. '()' → logprob: -10.379150390625
    5. '([[' → logprob: -14.754150390625
    6. '()
' → logprob: -15.004150390625
    7. '([
' → logprob: -15.629150390625
    8. '(' → logprob: -15.879150390625
    9. '(["' → logprob: -17.004150390625
    10. '((' → logprob: -17.254150390625

Token 142: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.319370302458992e-06
    2. ' start' → logprob: -12.250005722045898
    3. '0' → logprob: -15.000005722045898
    4. '(start' → logprob: -16.8750057220459
    5. '[start' → logprob: -18.6250057220459
    6. ',start' → logprob: -19.3750057220459
    7. ')' → logprob: -20.3750057220459
    8. 's' → logprob: -20.5000057220459
    9. '   ' → logprob: -20.6250057220459
    10. '	start' → logprob: -20.8750057220459

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.000017166137695
    3. '0' → logprob: -14.875017166137695
    4. '1' → logprob: -17.250017166137695
    5. ',
' → logprob: -17.375017166137695
    6. '```' → logprob: -17.375017166137695
    7. '‌,' → logprob: -17.625017166137695
    8. '
' → logprob: -18.000017166137695
    9. ' ' → logprob: -18.250017166137695
    10. '   ' → logprob: -18.500017166137695

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716913543641567
    2. ' ' → logprob: -5.006716728210449
    3. '1' → logprob: -13.38171672821045
    4. '   ' → logprob: -19.131717681884766
    5. ')' → logprob: -19.256717681884766
    6. ',' → logprob: -20.756717681884766
    7. '  ' → logprob: -20.881717681884766
    8. '
' → logprob: -20.881717681884766
    9. ' ' → logprob: -21.256717681884766
    10. ' 
' → logprob: -21.381717681884766

Token 145: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0001305950863752514
    2. ')' → logprob: -9.000130653381348
    3. ')]' → logprob: -12.250130653381348
    4. ')])
' → logprob: -13.750130653381348
    5. ')])

' → logprob: -14.250130653381348
    6. ' )' → logprob: -14.375130653381348
    7. ')))' → logprob: -16.87512969970703
    8. ')],' → logprob: -17.62512969970703
    9. '])' → logprob: -17.62512969970703
    10. '))' → logprob: -18.00012969970703

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022473193239420652
    2. '    
' → logprob: -6.627247333526611
    3. ' while' → logprob: -8.502246856689453
    4. ')' → logprob: -8.502246856689453
    5. '<|end|>' → logprob: -8.502246856689453
    6. '	while' → logprob: -9.252246856689453
    7. '
' → logprob: -9.502246856689453
    8. '```' → logprob: -9.877246856689453
    9. ',' → logprob: -10.377246856689453
    10. 'while' → logprob: -11.127246856689453

Token 147: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04312354326248169
    2. ' while' → logprob: -3.293123483657837
    3. '   ' → logprob: -5.293123722076416
    4. '
' → logprob: -10.543123245239258
    5. '	while' → logprob: -12.168123245239258
    6. '```' → logprob: -12.418123245239258
    7. ')' → logprob: -12.543123245239258
    8. '    
' → logprob: -12.918123245239258
    9. 'While' → logprob: -14.418123245239258
    10. ' 
' → logprob: -15.168123245239258

Token 148: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.014165983535349369
    2. ' queue' → logprob: -4.264165878295898
    3. '(queue' → logprob: -13.889165878295898
    4. '	queue' → logprob: -14.264165878295898
    5. '   ' → logprob: -14.639165878295898
    6. ' ' → logprob: -15.264165878295898
    7. 'True' → logprob: -16.0141658782959
    8. '```' → logprob: -16.8891658782959
    9. '       ' → logprob: -17.3891658782959
    10. 'len' → logprob: -17.5141658782959

Token 149: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.065880186855793
    2. ':' → logprob: -2.815880298614502
    3. ',' → logprob: -6.190880298614502
    4. '):
' → logprob: -6.815880298614502
    5. '.pop' → logprob: -8.940879821777344
    6. '   ' → logprob: -8.940879821777344
    7. '.dequeue' → logprob: -9.190879821777344
    8. '[' → logprob: -9.815879821777344
    9. '():
' → logprob: -9.940879821777344
    10. '=' → logprob: -10.315879821777344

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017261108150705695
    2. ' s' → logprob: -6.751726150512695
    3. 's' → logprob: -7.751726150512695
    4. ',' → logprob: -9.501726150512695
    5. 'state' → logprob: -10.376726150512695
    6. ' (' → logprob: -12.501726150512695
    7. ' state' → logprob: -12.626726150512695
    8. ' current' → logprob: -13.001726150512695
    9. 'current' → logprob: -13.001726150512695
    10. '   ' → logprob: -13.251726150512695

Token 151: ' state' (ID: 2608)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5866485834121704
    2. 's' → logprob: -0.9616485834121704
    3. 'state' (adapté à ' state') → logprob: -3.086648464202881
    4. ' state' → logprob: -4.711648464202881
    5. 'current' → logprob: -5.711648464202881
    6. ' current' → logprob: -5.836648464202881
    7. 'cur' → logprob: -8.086648941040039
    8. 'curr' → logprob: -8.711648941040039
    9. '       ' → logprob: -9.586648941040039
    10. '_s' → logprob: -10.586648941040039

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017912088660523295
    2. ',state' → logprob: -6.376791000366211
    3. ',current' → logprob: -10.126791000366211
    4. ',next' → logprob: -10.501791000366211
    5. ' ,' → logprob: -11.376791000366211
    6. ',size' → logprob: -13.376791000366211
    7. ',s' → logprob: -13.501791000366211
    8. ',length' → logprob: -13.876791000366211
    9. ',status' → logprob: -14.376791000366211
    10. ',new' → logprob: -14.376791000366211

Token 153: ' t' (ID: 260)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7398229241371155
    2. 'steps' → logprob: -0.9898229241371155
    3. 'depth' → logprob: -1.9898228645324707
    4. ' dist' → logprob: -4.989822864532471
    5. ' steps' → logprob: -5.489822864532471
    6. 'd' → logprob: -6.239822864532471
    7. 'step' → logprob: -7.239822864532471
    8. ' depth' → logprob: -7.489822864532471
    9. 'cost' → logprob: -8.739823341369629
    10. 'moves' → logprob: -9.989823341369629

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04118075594305992
    2. 'ime' → logprob: -3.7911808490753174
    3. ' =' → logprob: -4.041180610656738
    4. ')' → logprob: -8.666180610656738
    5. 'imes' → logprob: -11.166180610656738
    6. 'imestamp' → logprob: -12.041180610656738
    7. ')=' → logprob: -12.916180610656738
    8. 'imestep' → logprob: -14.041180610656738
    9. 'IME' → logprob: -14.291180610656738
    10. 'me' → logprob: -15.041180610656738

Token 155: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.03804263845086098
    2. 'queue' → logprob: -3.2880425453186035
    3. '	queue' → logprob: -14.288043022155762
    4. '(queue' → logprob: -14.788043022155762
    5. '.queue' → logprob: -16.413042068481445
    6. ' ' → logprob: -16.788042068481445
    7. 'que' → logprob: -18.288042068481445
    8. '   ' → logprob: -18.288042068481445
    9. '
' → logprob: -19.538042068481445
    10. '_queue' → logprob: -19.663042068481445

Token 156: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1426984965801239
    2. ' =' → logprob: -2.0176985263824463
    3. '.pop' → logprob: -11.642698287963867
    4. ')' → logprob: -11.892698287963867
    5. '   ' → logprob: -12.767698287963867
    6. '.' → logprob: -13.767698287963867
    7. ':' → logprob: -13.767698287963867
    8. ' ' → logprob: -13.892698287963867
    9. ',' → logprob: -14.392698287963867
    10. '       ' → logprob: -15.517698287963867

Token 157: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0009338518721051514
    2. 'op' → logprob: -7.000933647155762
    3. 'ople' → logprob: -10.750933647155762
    4. 'opl' → logprob: -14.000933647155762
    5. 'oplevel' → logprob: -18.125934600830078
    6. 'opt' → logprob: -18.125934600830078
    7. 'opup' → logprob: -18.625934600830078
    8. 'opf' → logprob: -18.750934600830078
    9. 'opy' → logprob: -19.000934600830078
    10. 'left' → logprob: -19.000934600830078

Token 158: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022471455857157707
    2. ')' → logprob: -4.2724714279174805
    3. '
' → logprob: -5.3974714279174805
    4. '<|end|>' → logprob: -6.6474714279174805
    5. ')
' → logprob: -7.3974714279174805
    6. '        
' → logprob: -7.6474714279174805
    7. ',' → logprob: -8.27247142791748
    8. '<|end|>' → logprob: -8.52247142791748
    9. '()' → logprob: -9.14747142791748
    10. '```' → logprob: -9.14747142791748

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011803273111581802
    2. ' for' → logprob: -4.886803150177002
    3. 'for' → logprob: -5.511803150177002
    4. '   ' → logprob: -9.51180362701416
    5. '        
' → logprob: -10.01180362701416
    6. 'next' → logprob: -11.38680362701416
    7. '
' → logprob: -11.51180362701416
    8. ' next' → logprob: -13.13680362701416
    9. '           ' → logprob: -13.63680362701416
    10. ',' → logprob: -13.63680362701416

Token 160: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00320563861168921
    2. ' for' → logprob: -5.7532057762146
    3. 'next' → logprob: -10.753205299377441
    4. 'if' → logprob: -12.628205299377441
    5. '   ' → logprob: -13.253205299377441
    6. '       ' → logprob: -14.003205299377441
    7. ' next' → logprob: -15.253205299377441
    8. '        
' → logprob: -15.503205299377441
    9. '	for' → logprob: -16.253206253051758
    10. '    
' → logprob: -17.003206253051758

Token 161: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1973845511674881
    2. 'ns' → logprob: -2.4473845958709717
    3. ' next' → logprob: -3.0723845958709717
    4. ' nxt' → logprob: -3.1973845958709717
    5. 'new' → logprob: -5.572384357452393
    6. ' ns' → logprob: -7.322384357452393
    7. 'n' → logprob: -7.947384357452393
    8. ' new' → logprob: -8.57238483428955
    9. 'neighbor' → logprob: -8.69738483428955
    10. 'nst' → logprob: -9.07238483428955

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17863138020038605
    2. 'in' → logprob: -2.05363130569458
    3. '_state' → logprob: -3.55363130569458
    4. '_states' → logprob: -5.92863130569458
    5. 'state' → logprob: -6.05363130569458
    6. '_' → logprob: -6.92863130569458
    7. 'n' → logprob: -7.80363130569458
    8. 's' → logprob: -9.428631782531738
    9. '_in' → logprob: -9.928631782531738
    10. 'states' → logprob: -10.053631782531738

Token 163: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0380416102707386
    2. ' next' → logprob: -3.288041591644287
    3. '(next' → logprob: -16.288042068481445
    4. '[next' → logprob: -17.038042068481445
    5. '	next' → logprob: -18.788042068481445
    6. '   ' → logprob: -19.163042068481445
    7. ' ' → logprob: -20.163042068481445
    8. '.next' → logprob: -22.163042068481445
    9. ',next' → logprob: -22.288042068481445
    10. '_next' → logprob: -22.413042068481445

Token 164: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.5048530030981055e-06
    2. '_state' → logprob: -13.750001907348633
    3. '_' → logprob: -15.625001907348633
    4. 'States' → logprob: -17.500001907348633
    5. '_s' → logprob: -17.875001907348633
    6. 'states' → logprob: -18.125001907348633
    7. '_next' → logprob: -18.375001907348633
    8. 's' → logprob: -18.500001907348633
    9. '_st' → logprob: -19.000001907348633
    10. ')_' → logprob: -19.125001907348633

Token 165: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -1.2948405128554441e-05
    2. '(s' → logprob: -12.00001335144043
    3. '(' → logprob: -12.75001335144043
    4. ' (' → logprob: -13.00001335144043
    5. '(states' → logprob: -13.75001335144043
    6. ',state' → logprob: -15.37501335144043
    7. '[state' → logprob: -16.00001335144043
    8. '(
' → logprob: -17.37501335144043
    9. '(State' → logprob: -17.62501335144043
    10. 'state' → logprob: -17.87501335144043

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20162051916122437
    2. '):
' → logprob: -1.7016205787658691
    3. ':' → logprob: -9.576620101928711
    4. '):
' → logprob: -9.701620101928711
    5. ' ):' → logprob: -10.201620101928711
    6. ',' → logprob: -11.326620101928711
    7. ')' → logprob: -11.701620101928711
    8. '       ' → logprob: -11.826620101928711
    9. '   ' → logprob: -12.326620101928711
    10. ' ):
' → logprob: -12.451620101928711

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018417751416563988
    2. ' if' → logprob: -6.5018415451049805
    3. '<|end|>' → logprob: -8.75184154510498
    4. 'if' → logprob: -9.25184154510498
    5. '               ' → logprob: -10.75184154510498
    6. '            
' → logprob: -11.00184154510498
    7. '       ' → logprob: -11.50184154510498
    8. '
' → logprob: -11.50184154510498
    9. '	       ' → logprob: -12.12684154510498
    10. '```' → logprob: -12.25184154510498

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22611971199512482
    2. 'if' (adapté à ' if') → logprob: -1.7261197566986084
    3. '               ' → logprob: -3.7261197566986084
    4. '           ' → logprob: -8.101119995117188
    5. '
' → logprob: -12.226119995117188
    6. '       ' → logprob: -12.476119995117188
    7. '```' → logprob: -13.601119995117188
    8. '   ' → logprob: -13.976119995117188
    9. '            ' → logprob: -14.226119995117188
    10. '                ' → logprob: -14.476119995117188

Token 169: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008074867073446512
    2. ' nxt' → logprob: -7.125807285308838
    3. ' all' → logprob: -14.000807762145996
    4. 'n't' → logprob: -14.500807762145996
    5. '(n' → logprob: -15.000807762145996
    6. ' ' → logprob: -15.000807762145996
    7. 'all' → logprob: -15.625807762145996
    8. 'not' → logprob: -15.750807762145996
    9. ' n' → logprob: -15.875807762145996
    10. '   ' → logprob: -15.875807762145996

Token 170: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01815134845674038
    2. 'not' → logprob: -4.01815128326416
    3. ')' → logprob: -14.64315128326416
    4. '==' → logprob: -14.64315128326416
    5. ' in' → logprob: -14.89315128326416
    6. '	not' → logprob: -15.64315128326416
    7. ' ==' → logprob: -16.643152236938477
    8. 'in' → logprob: -18.393152236938477
    9. ':not' → logprob: -18.393152236938477
    10. ']' → logprob: -18.893152236938477

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027293173596262932
    2. 'in' → logprob: -3.7772932052612305
    3. 'visited' → logprob: -5.7772932052612305
    4. ' visited' → logprob: -7.1522932052612305
    5. '           ' → logprob: -9.65229320526123
    6. '<|end|>' → logprob: -10.52729320526123
    7. '   ' → logprob: -10.65229320526123
    8. '       ' → logprob: -11.65229320526123
    9. ' ' → logprob: -11.77729320526123
    10. ')' → logprob: -12.40229320526123

Token 172: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02975083328783512
    2. ' visited' → logprob: -3.5297508239746094
    3. 'Visited' → logprob: -16.27975082397461
    4. 'seen' → logprob: -16.77975082397461
    5. '
' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. 'visit' → logprob: -17.77975082397461
    8. '   ' → logprob: -18.02975082397461
    9. '```' → logprob: -18.02975082397461
    10. 'vist' → logprob: -18.65475082397461

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10220231115818024
    2. ':
' → logprob: -2.3522024154663086
    3. '               ' → logprob: -6.977202415466309
    4. '):
' → logprob: -7.477202415466309
    5. '           ' → logprob: -8.727202415466309
    6. '):' → logprob: -9.102202415466309
    7. '<|end|>' → logprob: -9.727202415466309
    8. ' and' → logprob: -9.852202415466309
    9. ':

' → logprob: -10.602202415466309
    10. ')' → logprob: -10.727202415466309

Token 174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020684218034148216
    2. '                
' → logprob: -7.127068519592285
    3. '<|end|>' → logprob: -7.627068519592285
    4. '           ' → logprob: -8.627068519592285
    5. ' visited' → logprob: -9.127068519592285
    6. 'visited' → logprob: -9.502068519592285
    7. '
' → logprob: -9.627068519592285
    8. '                   ' → logprob: -9.877068519592285
    9. '```' → logprob: -9.877068519592285
    10. ':
' → logprob: -10.502068519592285

Token 175: ' if' (ID: 538)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.0830664113163948
    2. 'visited' → logprob: -2.583066463470459
    3. '                   ' → logprob: -5.583066463470459
    4. '               ' → logprob: -8.5830659866333
    5. '
' → logprob: -8.9580659866333
    6. 'Visited' → logprob: -10.5830659866333
    7. '                       ' → logprob: -10.7080659866333
    8. '                    
' → logprob: -10.9580659866333
    9. '                ' → logprob: -11.9580659866333
    10. ' 
' → logprob: -12.2080659866333

Token 176: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4287275969982147
    2. 'all' → logprob: -1.053727626800537
    3. ' len' → logprob: -12.178727149963379
    4. 'len' → logprob: -12.303727149963379
    5. ' ' → logprob: -12.678727149963379
    6. ' nxt' → logprob: -12.678727149963379
    7. '	all' → logprob: -12.803727149963379
    8. '(all' → logprob: -13.553727149963379
    9. '   ' → logprob: -13.553727149963379
    10. 'n' → logprob: -13.553727149963379

Token 177: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -11.125021934509277
    3. 'c' → logprob: -12.000021934509277
    4. '(x' → logprob: -14.375021934509277
    5. '(ch' → logprob: -15.500021934509277
    6. ' (' → logprob: -16.37502098083496
    7. ' c' → logprob: -17.25002098083496
    8. ')c' → logprob: -17.87502098083496
    9. '   ' → logprob: -18.25002098083496
    10. '(
' → logprob: -18.37502098083496

Token 178: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048590775579214096
    2. '==' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.798590660095215
    4. 'n' → logprob: -13.923590660095215
    5. '(n' → logprob: -14.298590660095215
    6. '=' → logprob: -14.923590660095215
    7. ')==' → logprob: -16.42359161376953
    8. ')' → logprob: -16.54859161376953
    9. ' nxt' → logprob: -16.79859161376953
    10. '===' → logprob: -16.92359161376953

Token 179: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.10026426613330841
    2. 'n' → logprob: -2.350264310836792
    3. ' n' → logprob: -11.350264549255371
    4. 't' → logprob: -11.475264549255371
    5. 'start' → logprob: -12.225264549255371
    6. ' ' → logprob: -12.600264549255371
    7. 'nx' → logprob: -12.725264549255371
    8. '   ' → logprob: -12.850264549255371
    9. 'x' → logprob: -12.850264549255371
    10. 's' → logprob: -13.100264549255371

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017600801947992295
    2. ' for' → logprob: -9.250176429748535
    3. 'for' → logprob: -9.500176429748535
    4. '[start' → logprob: -13.500176429748535
    5. 'start' → logprob: -13.750176429748535
    6. ' [' → logprob: -14.750176429748535
    7. '[next' → logprob: -14.750176429748535
    8. ')' → logprob: -15.000176429748535
    9. 'state' → logprob: -15.250176429748535
    10. '[n' → logprob: -15.375176429748535

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.375003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '
' → logprob: -16.000003814697266
    6. 'n' → logprob: -16.125003814697266
    7. '  ' → logprob: -18.125003814697266
    8. '(' → logprob: -18.125003814697266
    9. 'o' → logprob: -18.500003814697266
    10. '`' → logprob: -18.500003814697266

Token 182: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761218667030334
    2. ' for' → logprob: -0.8261218667030334
    3. ']' → logprob: -9.326122283935547
    4. ')' → logprob: -10.076122283935547
    5. ' ' → logprob: -11.076122283935547
    6. '   ' → logprob: -11.576122283935547
    7. '	for' → logprob: -11.701122283935547
    8. 'or' → logprob: -12.826122283935547
    9. '  ' → logprob: -12.951122283935547
    10. '           ' → logprob: -13.201122283935547

Token 183: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04858816787600517
    2. 'for' → logprob: -3.048588275909424
    3. ')' → logprob: -15.423587799072266
    4. '	for' → logprob: -15.423587799072266
    5. ' ' → logprob: -15.798587799072266
    6. '           ' → logprob: -16.173587799072266
    7. '  ' → logprob: -16.423587799072266
    8. '               ' → logprob: -16.798587799072266
    9. '   ' → logprob: -16.798587799072266
    10. '          ' → logprob: -17.548587799072266

Token 184: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38687145709991455
    2. 'c' → logprob: -1.1368714570999146
    3. ' ' → logprob: -16.136871337890625
    4. ')c' → logprob: -16.511871337890625
    5. ' in' → logprob: -16.636871337890625
    6. '	c' → logprob: -16.636871337890625
    7. ' ' → logprob: -16.886871337890625
    8. '_c' → logprob: -17.136871337890625
    9. '   ' → logprob: -18.261871337890625
    10. 'n' → logprob: -18.261871337890625

Token 185: ' in' (ID: 306)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.5266790390014648
    2. 'n' → logprob: -0.9016790390014648
    3. ' in' → logprob: -5.776679039001465
    4. ' n' → logprob: -8.901679039001465
    5. 'c' → logprob: -9.026679039001465
    6. ' ' → logprob: -9.776679039001465
    7. 'in' → logprob: -10.026679039001465
    8. '   ' → logprob: -11.026679039001465
    9. '_n' → logprob: -11.401679039001465
    10. ' c' → logprob: -11.401679039001465

Token 186: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020849853754044
    2. ' nxt' → logprob: -2.3502085208892822
    3. ' n' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.975208282470703
    5. '   ' → logprob: -15.600208282470703
    6. 'nx' → logprob: -15.725208282470703
    7. '[n' → logprob: -15.975208282470703
    8. '  ' → logprob: -16.475208282470703
    9. 'next' → logprob: -16.600208282470703
    10. 'nth' → logprob: -16.600208282470703

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576194703578949
    2. '):
' → logprob: -0.826194703578949
    3. '):
' → logprob: -9.076194763183594
    4. ')' → logprob: -9.576194763183594
    5. '               ' → logprob: -10.326194763183594
    6. ':' → logprob: -11.076194763183594
    7. '):

' → logprob: -11.201194763183594
    8. '                   ' → logprob: -12.326194763183594
    9. '           ' → logprob: -12.951194763183594
    10. '   ' → logprob: -14.451194763183594

Token 188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006462882738560438
    2. '               ' → logprob: -6.006463050842285
    3. ' return' → logprob: -6.381463050842285
    4. '
' → logprob: -6.881463050842285
    5. '                       ' → logprob: -7.631463050842285
    6. 'return' → logprob: -8.131463050842285
    7. '                    
' → logprob: -8.881463050842285
    8. '                  ' → logprob: -9.256463050842285
    9. ':
' → logprob: -9.506463050842285
    10. '           ' → logprob: -10.256463050842285

Token 189: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22435227036476135
    2. 'return' (adapté à ' return') → logprob: -1.724352240562439
    3. '                   ' → logprob: -3.8493523597717285
    4. '                       ' → logprob: -7.0993523597717285
    5. '               ' → logprob: -8.09935188293457
    6. '
' → logprob: -8.59935188293457
    7. '   ' → logprob: -10.34935188293457
    8. '       ' → logprob: -11.34935188293457
    9. '           ' → logprob: -11.72435188293457
    10. '	return' → logprob: -11.72435188293457

Token 190: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004078758880496025
    2. ' t' → logprob: -5.5040788650512695
    3. '                   ' → logprob: -15.87907886505127
    4. '   ' → logprob: -16.129077911376953
    5. '`t' → logprob: -16.129077911376953
    6. '	t' → logprob: -16.754077911376953
    7. '               ' → logprob: -17.629077911376953
    8. ' ' → logprob: -18.254077911376953
    9. '                       ' → logprob: -19.004077911376953
    10. '(t' → logprob: -20.129077911376953

Token 191: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005253560841083527
    2. ' +' → logprob: -5.255253791809082
    3. '1' → logprob: -11.130253791809082
    4. ' ' → logprob: -12.255253791809082
    5. '+
' → logprob: -17.005252838134766
    6. '                   ' → logprob: -17.255252838134766
    7. ''+' → logprob: -17.380252838134766
    8. '   ' → logprob: -17.505252838134766
    9. '+t' → logprob: -17.755252838134766
    10. '               ' → logprob: -17.880252838134766

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -19.0
    6. '۱' → logprob: -19.6875
    7. '１' → logprob: -20.3125
    8. '
' → logprob: -20.6875
    9. '  ' → logprob: -21.125
    10. '' → logprob: -21.1875

Token 193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000600572966504842
    2. '                
' → logprob: -8.125600814819336
    3. '
' → logprob: -8.375600814819336
    4. 'visited' → logprob: -10.125600814819336
    5. '```' → logprob: -11.125600814819336
    6. '              ' → logprob: -12.000600814819336
    7. '<|end|>' → logprob: -13.000600814819336
    8. ' visited' → logprob: -13.125600814819336
    9. '           ' → logprob: -13.250600814819336
    10. '               
' → logprob: -13.625600814819336

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017376589821651578
    2. '                
' → logprob: -7.001737594604492
    3. 'visited' → logprob: -8.001737594604492
    4. '
' → logprob: -8.001737594604492
    5. '```' → logprob: -9.626737594604492
    6. ' visited' → logprob: -10.501737594604492
    7. '              ' → logprob: -11.001737594604492
    8. '                   ' → logprob: -11.251737594604492
    9. '           ' → logprob: -11.876737594604492
    10. '               
' → logprob: -12.001737594604492

Token 195: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0489235557615757
    2. '               ' → logprob: -3.2989234924316406
    3. ' visited' → logprob: -4.548923492431641
    4. '                   ' → logprob: -8.42392349243164
    5. '           ' → logprob: -11.67392349243164
    6. '```' → logprob: -12.17392349243164
    7. '
' → logprob: -12.29892349243164
    8. '                       ' → logprob: -13.79892349243164
    9. '                
' → logprob: -13.79892349243164
    10. '                ' → logprob: -13.92392349243164

Token 196: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.875000953674316
    3. 'add' → logprob: -16.125001907348633
    4. ' .' → logprob: -17.375001907348633
    5. ')add' → logprob: -18.125001907348633
    6. '.append' → logprob: -19.125001907348633
    7. '.update' → logprob: -19.250001907348633
    8. '.Add' → logprob: -19.375001907348633
    9. '_add' → logprob: -19.625001907348633
    10. ' add' → logprob: -19.875001907348633

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -16.625017166137695
    4. '((' → logprob: -19.500017166137695
    5. '(next' → logprob: -19.875017166137695
    6. ' (' → logprob: -20.250017166137695
    7. 'n' → logprob: -21.125017166137695
    8. '(new' → logprob: -22.250017166137695
    9. '(

' → logprob: -22.250017166137695
    10. '(nx' → logprob: -22.500017166137695

Token 198: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -9.968312951968983e-06
    2. 't' → logprob: -11.750009536743164
    3. 'x' → logprob: -13.125009536743164
    4. '[' → logprob: -18.125009536743164
    5. '(t' → logprob: -18.375009536743164
    6. '   ' → logprob: -18.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. 'ext' → logprob: -19.250009536743164
    9. 'w' → logprob: -20.125009536743164
    10. 'j' → logprob: -20.125009536743164

Token 199: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2716990113258362
    2. ')
' → logprob: -1.5216989517211914
    3. ')' → logprob: -4.146698951721191
    4. ',' → logprob: -5.646698951721191
    5. '           ' → logprob: -9.396698951721191
    6. '),' → logprob: -10.646698951721191
    7. ',
' → logprob: -10.771698951721191
    8. ')
' → logprob: -11.021698951721191
    9. '                   ' → logprob: -11.271698951721191
    10. '			' → logprob: -11.396698951721191

Token 200: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01446128822863102
    2. 'queue' → logprob: -4.889461517333984
    3. ' queue' → logprob: -5.014461517333984
    4. '```' → logprob: -9.764461517333984
    5. '           ' → logprob: -10.014461517333984
    6. '	queue' → logprob: -10.639461517333984
    7. '			' → logprob: -11.014461517333984
    8. '       ' → logprob: -11.139461517333984
    9. '	           ' → logprob: -12.389461517333984
    10. '(queue' → logprob: -12.514461517333984

Token 201: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.014163747429847717
    2. ' queue' → logprob: -4.264163970947266
    3. '               ' → logprob: -16.139163970947266
    4. '       ' → logprob: -16.889163970947266
    5. '	queue' → logprob: -17.639163970947266
    6. '           ' → logprob: -18.014163970947266
    7. '   ' → logprob: -18.764163970947266
    8. 'deque' → logprob: -20.639163970947266
    9. '.queue' → logprob: -21.014163970947266
    10. '                   ' → logprob: -21.389163970947266

Token 202: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.153795766294934e-06
    2. '.' → logprob: -12.750005722045898
    3. '.extend' → logprob: -13.625005722045898
    4. '.enqueue' → logprob: -14.125005722045898
    5. ' .' → logprob: -15.000005722045898
    6. 'append' → logprob: -15.125005722045898
    7. '.put' → logprob: -15.250005722045898
    8. ').' → logprob: -15.375005722045898
    9. '.Append' → logprob: -16.2500057220459
    10. '.push' → logprob: -16.3750057220459

Token 203: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000572094286326319
    2. '(' → logprob: -7.500572204589844
    3. '(n' → logprob: -10.875572204589844
    4. ' ((' → logprob: -15.875572204589844
    5. ' (' → logprob: -17.000572204589844
    6. '(((' → logprob: -18.000572204589844
    7. '[(' → logprob: -18.125572204589844
    8. '(
' → logprob: -18.250572204589844
    9. '(('' → logprob: -19.000572204589844
    10. '   ' → logprob: -19.500572204589844

Token 204: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0683535037969705e-05
    2. ' nxt' → logprob: -11.50001049041748
    3. '(n' → logprob: -15.62501049041748
    4. '	n' → logprob: -15.87501049041748
    5. ')n' → logprob: -16.125011444091797
    6. 'n't' → logprob: -17.125011444091797
    7. ' n' → logprob: -17.875011444091797
    8. '   ' → logprob: -18.375011444091797
    9. ''n' → logprob: -18.375011444091797
    10. 'nt' → logprob: -18.500011444091797

Token 205: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.704273118884885e-07
    2. 't' → logprob: -14.625000953674316
    3. 'x' → logprob: -16.0
    4. '[' → logprob: -18.125
    5. '```' → logprob: -18.625
    6. '>' → logprob: -19.5
    7. '"' → logprob: -19.5
    8. 'gt' → logprob: -19.625
    9. '{' → logprob: -19.75
    10. 'ext' → logprob: -19.875

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04381885379552841
    2. ',n' → logprob: -3.168818950653076
    3. ',t' → logprob: -7.918818950653076
    4. ' ,' → logprob: -8.293818473815918
    5. 'n' → logprob: -9.043818473815918
    6. ',next' → logprob: -10.418818473815918
    7. '[' → logprob: -11.043818473815918
    8. ',
' → logprob: -12.168818473815918
    9. 't' → logprob: -12.293818473815918
    10. '),' → logprob: -12.543818473815918

Token 207: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031777136027812958
    2. ' t' → logprob: -5.753177642822266
    3. '`t' → logprob: -17.253177642822266
    4. ' ' → logprob: -18.628177642822266
    5. '	t' → logprob: -18.878177642822266
    6. '   ' → logprob: -19.003177642822266
    7. ')t' → logprob: -19.128177642822266
    8. '(t' → logprob: -20.503177642822266
    9. '    ' → logprob: -21.378177642822266
    10. '
' → logprob: -21.378177642822266

Token 208: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.014684110297821e-06
    2. ' +' → logprob: -11.625008583068848
    3. '+
' → logprob: -19.875009536743164
    4. '1' → logprob: -20.000009536743164
    5. ')+' → logprob: -21.125009536743164
    6. '＋' → logprob: -21.875009536743164
    7. '```' → logprob: -22.250009536743164
    8. '+xml' → logprob: -22.625009536743164
    9. '+)' → logprob: -22.875009536743164
    10. '()+' → logprob: -23.000009536743164

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -17.750003814697266
    5. ')' → logprob: -17.875003814697266
    6. '+' → logprob: -17.875003814697266
    7. '  ' → logprob: -18.625003814697266
    8. '))' → logprob: -19.000003814697266
    9. '       ' → logprob: -19.000003814697266
    10. '           ' → logprob: -19.375003814697266

Token 210: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017064384883269668
    2. '))
' → logprob: -8.750170707702637
    3. ')' → logprob: -11.375170707702637
    4. ')))' → logprob: -14.625170707702637
    5. ' ))' → logprob: -16.12516975402832
    6. '))

' → logprob: -17.75016975402832
    7. '   ' → logprob: -18.12516975402832
    8. '))
' → logprob: -18.62516975402832
    9. ')
' → logprob: -18.62516975402832
    10. '           ' → logprob: -18.75016975402832

Token 211: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021705929189920425
    2. '   ' → logprob: -4.5217061042785645
    3. ' return' → logprob: -4.7717061042785645
    4. '<|end|>' → logprob: -7.1467061042785645
    5. ')' → logprob: -7.6467061042785645
    6. '```' → logprob: -8.146705627441406
    7. '
' → logprob: -8.646705627441406
    8. 'raise' → logprob: -9.521705627441406
    9. 'print' → logprob: -9.646705627441406
    10. '	return' → logprob: -9.771705627441406

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022348284255713224
    2. '   ' → logprob: -6.252234935760498
    3. ' return' → logprob: -8.25223445892334
    4. '	return' → logprob: -10.12723445892334
    5. '```' → logprob: -12.87723445892334
    6. '
' → logprob: -13.25223445892334
    7. '{return' → logprob: -14.87723445892334
    8. 'raise' → logprob: -15.00223445892334
    9. ' ' → logprob: -15.25223445892334
    10. '  ' → logprob: -16.377235412597656

Token 213: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010690123308449984
    2. ' -' → logprob: -6.876069068908691
    3. 'None' → logprob: -10.251069068908691
    4. ' None' → logprob: -14.626069068908691
    5. '0' → logprob: -14.751069068908691
    6. 'float' → logprob: -16.626068115234375
    7. 'False' → logprob: -17.251068115234375
    8. ' ' → logprob: -17.376068115234375
    9. '-none' → logprob: -17.501068115234375
    10. '-f' → logprob: -18.626068115234375

Token 214: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005542247672565281
    2. '"' → logprob: -8.500554084777832
    3. 'None' → logprob: -9.375554084777832
    4. 'im' → logprob: -9.500554084777832
    5. 'float' → logprob: -9.750554084777832
    6. 'Impossible' → logprob: -9.750554084777832
    7. '-im' → logprob: -11.000554084777832
    8. 'False' → logprob: -11.000554084777832
    9. ' -' → logprob: -11.125554084777832
    10. '0' → logprob: -11.125554084777832

Token 215: '"

' (ID: 2678)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38738980889320374
    2. '"' → logprob: -1.1373897790908813
    3. ')"' → logprob: -7.762389659881592
    4. ')' → logprob: -9.63739013671875
    5. '")
' → logprob: -11.88739013671875
    6. '')"' → logprob: -12.76239013671875
    7. 'I' → logprob: -13.01239013671875
    8. '')' → logprob: -13.13739013671875
    9. 'A' → logprob: -13.38739013671875
    10. '"
' → logprob: -13.51239013671875

Token 216: 'while' (ID: 7032)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21993304789066315
    2. 'start' → logprob: -1.969933032989502
    3. '#' → logprob: -3.344933032989502
    4. 'n' → logprob: -5.094933032989502
    5. 'result' → logprob: -5.469933032989502
    6. 's' → logprob: -5.594933032989502
    7. '
' → logprob: -6.344933032989502
    8. 'input' → logprob: -6.594933032989502
    9. 'def' → logprob: -6.719933032989502
    10. 'while' → logprob: -6.844933032989502

Token 217: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.023256778717041016
    2. 'True' → logprob: -3.773256778717041
    3. '(True' → logprob: -11.523256301879883
    4. '1' → logprob: -14.023256301879883
    5. '=True' → logprob: -14.898256301879883
    6. ' ' → logprob: -15.648256301879883
    7. '_' → logprob: -17.648256301879883
    8. ' true' → logprob: -18.773256301879883
    9. 'true' → logprob: -19.273256301879883
    10. ' Tru' → logprob: -19.273256301879883

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010870245285332203
    2. ' :' → logprob: -4.885870456695557
    3. '():' → logprob: -5.760870456695557
    4. ':
' → logprob: -9.385869979858398
    5. '(' → logprob: -12.010869979858398
    6. '():
' → logprob: -12.135869979858398
    7. ' ():' → logprob: -12.885869979858398
    8. '(input' → logprob: -13.385869979858398
    9. 'input' → logprob: -13.510869979858398
    10. ' (' → logprob: -13.510869979858398

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12778882682323456
    2. ' try' → logprob: -2.377788782119751
    3. ' s' → logprob: -3.752788782119751
    4. ' line' → logprob: -5.87778902053833
    5. 'try' → logprob: -7.25278902053833
    6. ' input' → logprob: -9.252788543701172
    7. ' inp' → logprob: -9.502788543701172
    8. 's' → logprob: -10.877788543701172
    9. ' n' → logprob: -11.252788543701172
    10. ' user' → logprob: -11.252788543701172

Token 220: ' s' (ID: 265)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.49118655920028687
    2. ' try' → logprob: -1.7411866188049316
    3. 's' (adapté à ' s') → logprob: -1.8661866188049316
    4. ' s' → logprob: -3.7411866188049316
    5. ' line' → logprob: -3.9911866188049316
    6. 'line' → logprob: -4.741186618804932
    7. '   ' → logprob: -4.991186618804932
    8. 'n' → logprob: -8.241186141967773
    9. ' n' → logprob: -11.116186141967773
    10. '    
' → logprob: -11.366186141967773

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20626971125602722
    2. ' =' → logprob: -1.7062697410583496
    3. '=input' → logprob: -5.33126974105835
    4. 'input' → logprob: -11.956269264221191
    5. ' input' → logprob: -16.331270217895508
    6. '_input' → logprob: -16.831270217895508
    7. '=

' → logprob: -17.081270217895508
    8. '＝' → logprob: -17.081270217895508
    9. '=
' → logprob: -17.206270217895508
    10. '=line' → logprob: -17.206270217895508

Token 222: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040785204619169235
    2. ' input' → logprob: -5.504078388214111
    3. '(input' → logprob: -17.629077911376953
    4. '=input' → logprob: -18.629077911376953
    5. '	input' → logprob: -19.504077911376953
    6. 'raw' → logprob: -20.879077911376953
    7. 's' → logprob: -21.129077911376953
    8. '<input' → logprob: -21.629077911376953
    9. ',input' → logprob: -21.879077911376953
    10. '.input' → logprob: -22.129077911376953

Token 223: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014181245118379593
    2. '().' → logprob: -4.264181137084961
    3. '()
' → logprob: -11.889181137084961
    4. '(' → logprob: -12.764181137084961
    5. '()>' → logprob: -12.889181137084961
    6. '())' → logprob: -13.514181137084961
    7. ' ()' → logprob: -13.639181137084961
    8. '("' → logprob: -14.389181137084961
    9. '("")' → logprob: -14.514181137084961
    10. '('' → logprob: -14.889181137084961

Token 224: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.842555426876061e-06
    2. 'rstrip' → logprob: -12.250004768371582
    3. ' strip' → logprob: -18.6250057220459
    4. 'split' → logprob: -20.2500057220459
    5. 'trip' → logprob: -20.3750057220459
    6. 'stop' → logprob: -20.6250057220459
    7. 'str' → logprob: -20.8750057220459
    8. '_strip' → logprob: -22.2500057220459
    9. 'replace' → logprob: -22.3750057220459
    10. 'stripe' → logprob: -22.7500057220459

Token 225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12695330381393433
    2. '()
' → logprob: -2.126953363418579
    3. '()
' → logprob: -11.126953125
    4. '())' → logprob: -12.376953125
    5. '()`' → logprob: -13.376953125
    6. '())
' → logprob: -13.751953125
    7. '()\' → logprob: -14.001953125
    8. '()

' → logprob: -14.501953125
    9. ')' → logprob: -14.501953125
    10. '(' → logprob: -15.126953125

Token 226: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38732457160949707
    2. ' if' → logprob: -1.137324571609497
    3. '   ' → logprob: -8.387324333190918
    4. '<|end|>' → logprob: -8.637324333190918
    5. '...' → logprob: -11.387324333190918
    6. ';if' → logprob: -11.637324333190918
    7. ',' → logprob: -11.887324333190918
    8. 'If' → logprob: -12.637324333190918
    9. '#' → logprob: -12.637324333190918
    10. '
' → logprob: -12.762324333190918

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.700132997939363e-05
    2. ' if' → logprob: -11.000017166137695
    3. '
' → logprob: -15.750017166137695
    4. 'break' → logprob: -15.875017166137695
    5. '   ' → logprob: -17.000017166137695
    6. 'i' → logprob: -19.125017166137695
    7. '#' → logprob: -19.375017166137695
    8. 'If' → logprob: -19.375017166137695
    9. ' ' → logprob: -20.250017166137695
    10. ';if' → logprob: -20.250017166137695

Token 228: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03535616025328636
    2. ' s' → logprob: -3.535356044769287
    3. 'not' → logprob: -5.535356044769287
    4. 's' → logprob: -6.410356044769287
    5. ' ' → logprob: -14.785356521606445
    6. '!' → logprob: -16.160356521606445
    7. '	not' → logprob: -16.410356521606445
    8. ' ' → logprob: -16.660356521606445
    9. 'n't' → logprob: -16.910356521606445
    10. '(not' → logprob: -17.097856521606445

Token 229: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.474132239818573
    2. ' ==' → logprob: -0.974132239818573
    3. '=' → logprob: -10.724132537841797
    4. '=="' → logprob: -11.599132537841797
    5. '()==' → logprob: -11.849132537841797
    6. '=='' → logprob: -12.099132537841797
    7. '===' → logprob: -12.724132537841797
    8. ' =' → logprob: -13.349132537841797
    9. '[' → logprob: -13.599132537841797
    10. ')' → logprob: -13.849132537841797

Token 230: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0185966491699219
    2. ''' → logprob: -1.1435966491699219
    3. ''#' → logprob: -1.5185966491699219
    4. '"#' → logprob: -2.393596649169922
    5. ''*' → logprob: -5.268596649169922
    6. '0' → logprob: -6.643596649169922
    7. ''end' → logprob: -7.018596649169922
    8. '"*' → logprob: -7.518596649169922
    9. '""' → logprob: -7.643596649169922
    10. '''' → logprob: -8.143596649169922

Token 231: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1009585857391357
    2. '#' → logprob: -1.3509585857391357
    3. '"#' → logprob: -1.8509585857391357
    4. '":' → logprob: -1.9759585857391357
    5. '""' → logprob: -3.3509585857391357
    6. '0' → logprob: -3.7259585857391357
    7. '"":' → logprob: -4.100958824157715
    8. 'END' → logprob: -4.225958824157715
    9. ''#' → logprob: -5.100958824157715
    10. ''' → logprob: -5.850958824157715

Token 232: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.4744899272918701
    2. '":' → logprob: -0.9744899272918701
    3. '"' → logprob: -8.22449016571045
    4. '":
' → logprob: -9.59949016571045
    5. ':
' → logprob: -9.84949016571045
    6. ':' → logprob: -11.22449016571045
    7. '"):
' → logprob: -11.84949016571045
    8. '():
' → logprob: -13.72449016571045
    9. '0' → logprob: -14.22449016571045
    10. '":

' → logprob: -14.34949016571045

Token 233: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003380846756044775
    2. '       ' → logprob: -8.125338554382324
    3. ' break' → logprob: -10.625338554382324
    4. 'break' → logprob: -11.250338554382324
    5. '	break' → logprob: -12.500338554382324
    6. '   ' → logprob: -14.375338554382324
    7. ' ' → logprob: -16.125337600708008
    8. '```' → logprob: -16.250337600708008
    9. '  ' → logprob: -17.000337600708008
    10. '    ' → logprob: -17.375337600708008

Token 234: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05188346654176712
    2. ' break' → logprob: -3.0518834590911865
    3. '   ' → logprob: -5.801883697509766
    4. '	break' → logprob: -8.301883697509766
    5. '       ' → logprob: -10.801883697509766
    6. '_break' → logprob: -15.551883697509766
    7. '```' → logprob: -17.051883697509766
    8. '  ' → logprob: -17.176883697509766
    9. '           ' → logprob: -17.301883697509766
    10. '    
' → logprob: -17.301883697509766

Token 235: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13268131017684937
    2. '   ' → logprob: -2.132681369781494
    3. ' print' → logprob: -5.382681369781494
    4. '
' → logprob: -7.007681369781494
    5. '```' → logprob: -8.882680892944336
    6. '    
' → logprob: -9.757680892944336
    7. '<|end|>' → logprob: -11.132680892944336
    8. '	print' → logprob: -11.632680892944336
    9. '  
' → logprob: -12.507680892944336
    10. 'output' → logprob: -13.257680892944336

Token 236: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022971592843532562
    2. ' print' → logprob: -6.1272969245910645
    3. '   ' → logprob: -9.377297401428223
    4. '```' → logprob: -10.752297401428223
    5. '
' → logprob: -12.252297401428223
    6. 'result' → logprob: -14.502297401428223
    7. '    
' → logprob: -15.377297401428223
    8. '``' → logprob: -16.002296447753906
    9. '	print' → logprob: -16.752296447753906
    10. '<|end|>' → logprob: -16.752296447753906

Token 237: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.353008499601856e-05
    2. 'result' → logprob: -9.875093460083008
    3. ' print' → logprob: -10.750093460083008
    4. '   ' → logprob: -11.000093460083008
    5. 'res' → logprob: -12.500093460083008
    6. '```' → logprob: -16.375093460083008
    7. '    
' → logprob: -16.875093460083008
    8. 'r' → logprob: -17.250093460083008
    9. 'answer' → logprob: -17.500093460083008
    10. 'output' → logprob: -17.875093460083008

Token 238: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.625005722045898
    3. 'b' → logprob: -13.000005722045898
    4. ' bfs' → logprob: -16.0000057220459
    5. '(B' → logprob: -19.7500057220459
    6. '((' → logprob: -20.1250057220459
    7. '(bs' → logprob: -20.2500057220459
    8. '(len' → logprob: -20.2500057220459
    9. '(abs' → logprob: -20.8750057220459
    10. '()' → logprob: -21.0000057220459

Token 239: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -3.4121114822482923e-06
    2. 's' → logprob: -13.000003814697266
    3. 'sf' → logprob: -13.750003814697266
    4. 'f' → logprob: -16.750003814697266
    5. 'FS' → logprob: -18.750003814697266
    6. ' fs' → logprob: -21.500003814697266
    7. 'bs' → logprob: -22.250003814697266
    8. '(fs' → logprob: -22.625003814697266
    9. 'ss' → logprob: -22.750003814697266
    10. 'fsp' → logprob: -22.875003814697266

Token 240: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.00012493133545
    3. ' (' → logprob: -14.25012493133545
    4. ')' → logprob: -15.00012493133545
    5. 's' → logprob: -15.87512493133545
    6. '((' → logprob: -18.000123977661133
    7. ')(' → logprob: -18.125123977661133
    8. '(
' → logprob: -18.250123977661133
    9. '(f' → logprob: -18.750123977661133
    10. '(string' → logprob: -19.500123977661133

Token 241: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014164102263748646
    2. ')' → logprob: -4.264163970947266
    3. ')))' → logprob: -15.514163970947266
    4. '))
' → logprob: -15.889163970947266
    5. '()))' → logprob: -16.264163970947266
    6. ' ))' → logprob: -16.514163970947266
    7. '())' → logprob: -16.889163970947266
    8. '})' → logprob: -18.264163970947266
    9. ')s' → logprob: -18.889163970947266
    10. ')}' → logprob: -19.139163970947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 239
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 213
Précision stricte (1ère position): 51.46%
Précision adaptée (1ère position): 56.07%
Précision (top 10): 89.12%
================================================================================
