================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
cw=[tuple(map(int,input().split())) for _ in range(N)]
c=[x[0] for x in cw]
w=[x[1] for x in cw]
dp=[float('inf')]*(N+1)
dp[0]=0
for i in range(N):
    sum_w=0
    max_c=0
    for j in range(i,-1,-1):
        sum_w+=w[j]
        max_c=max(max_c,c[j])
        if max_c>=sum_w:
            dp[i+1]=min(dp[i+1],dp[j]+1)
        else:
            break
print(dp[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7358755469322205
    2. ')' → logprob: -0.7358755469322205
    3. '()' → logprob: -3.3608756065368652
    4. '())' → logprob: -5.235875606536865
    5. '`)' → logprob: -7.860875606536865
    6. '(
' → logprob: -7.860875606536865
    7. '```' → logprob: -8.485875129699707
    8. '")' → logprob: -8.860875129699707
    9. '')' → logprob: -8.860875129699707
    10. '(

' → logprob: -9.735875129699707

Token 4: 'cw' (ID: 97179)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7019301056861877
    2. 'if' → logprob: -1.826930046081543
    3. 's' → logprob: -2.451930046081543
    4. 'i' → logprob: -2.701930046081543
    5. '[' → logprob: -3.451930046081543
    6. 'a' → logprob: -3.701930046081543
    7. '\n' → logprob: -3.826930046081543
    8. 'f' → logprob: -4.326930046081543
    9. '#' → logprob: -4.326930046081543
    10. ''' → logprob: -4.451930046081543

Token 5: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03697410598397255
    2. ' =' → logprob: -3.9119741916656494
    3. '_' → logprob: -5.78697395324707
    4. ',' → logprob: -6.16197395324707
    5. 'idth' → logprob: -6.41197395324707
    6. 'hile' → logprob: -6.41197395324707
    7. 'a' → logprob: -6.66197395324707
    8. 'h' → logprob: -7.16197395324707
    9. ' ' → logprob: -7.16197395324707
    10. '[' → logprob: -7.53697395324707

Token 6: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6719914674758911
    2. 'int' → logprob: -0.9219914674758911
    3. 'list' → logprob: -2.7969913482666016
    4. ']' → logprob: -4.046991348266602
    5. '[]' → logprob: -5.671991348266602
    6. 'tuple' → logprob: -5.671991348266602
    7. '(int' → logprob: -6.046991348266602
    8. '()]' → logprob: -6.421991348266602
    9. ']int' → logprob: -7.421991348266602
    10. '[int' → logprob: -7.921991348266602

Token 7: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03745913878083229
    2. '(int' → logprob: -3.912459135055542
    3. '(input' → logprob: -4.162459373474121
    4. '(' → logprob: -6.787459373474121
    5. 'map' → logprob: -10.287459373474121
    6. '(i' → logprob: -11.412459373474121
    7. '(
' → logprob: -11.662459373474121
    8. '((' → logprob: -12.912459373474121
    9. '([' → logprob: -12.912459373474121
    10. 'input' → logprob: -13.037459373474121

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021451128646731377
    2. 'int' → logprob: -4.396450996398926
    3. '(str' → logprob: -5.271450996398926
    4. 'str' → logprob: -6.021450996398926
    5. 'list' → logprob: -7.896450996398926
    6. '```' → logprob: -8.521450996398926
    7. '(' → logprob: -8.896450996398926
    8. '=int' → logprob: -8.896450996398926
    9. '<int' → logprob: -9.021450996398926
    10. '<|end|>' → logprob: -9.396450996398926

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006443934515118599
    2. ')' → logprob: -6.381443977355957
    3. '))' → logprob: -6.506443977355957
    4. 'input' → logprob: -6.881443977355957
    5. ',input' → logprob: -6.881443977355957
    6. '(' → logprob: -7.131443977355957
    7. '=input' → logprob: -9.131443977355957
    8. '<|end|>' → logprob: -9.631443977355957
    9. '(x' → logprob: -10.006443977355957
    10. '[input' → logprob: -10.131443977355957

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9981420336989686e-05
    2. '()' → logprob: -11.000020027160645
    3. ' ().' → logprob: -13.875020027160645
    4. '()))' → logprob: -14.000020027160645
    5. '.split' → logprob: -14.500020027160645
    6. '())' → logprob: -14.875020027160645
    7. '()
' → logprob: -15.750020027160645
    8. '.readline' → logprob: -16.000019073486328
    9. 'split' → logprob: -16.000019073486328
    10. '.' → logprob: -16.625019073486328

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.023293538717553e-05
    2. 'strip' → logprob: -10.625030517578125
    3. 'rstrip' → logprob: -12.250030517578125
    4. '(split' → logprob: -14.375030517578125
    5. ' split' → logprob: -14.750030517578125
    6. 'spl' → logprob: -16.250030517578125
    7. 's' → logprob: -17.625030517578125
    8. '.split' → logprob: -18.625030517578125
    9. 'startswith' → logprob: -19.125030517578125
    10. '_split' → logprob: -19.375030517578125

Token 12: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06752362847328186
    2. '))' → logprob: -2.942523717880249
    3. '())' → logprob: -4.69252347946167
    4. '('' → logprob: -6.06752347946167
    5. '()' → logprob: -7.44252347946167
    6. '()))
' → logprob: -8.817523956298828
    7. ')' → logprob: -9.067523956298828
    8. ''))' → logprob: -9.317523956298828
    9. '())))' → logprob: -9.942523956298828
    10. '(' → logprob: -10.192523956298828

Token 13: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47932273149490356
    2. ')]' → logprob: -0.9793227314949036
    3. ']' → logprob: -6.229322910308838
    4. ')])' → logprob: -6.479322910308838
    5. '])' → logprob: -7.354322910308838
    6. '),' → logprob: -7.854322910308838
    7. ')],' → logprob: -8.72932243347168
    8. 'for' → logprob: -8.72932243347168
    9. '`)' → logprob: -9.60432243347168
    10. ' for' → logprob: -9.85432243347168

Token 14: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.052496958523988724
    2. '_' → logprob: -3.052496910095215
    3. ' _' → logprob: -6.302496910095215
    4. '_range' → logprob: -6.677496910095215
    5. ' i' → logprob: -7.927496910095215
    6. 'range' → logprob: -8.052496910095215
    7. ' in' → logprob: -9.552496910095215
    8. ' ' → logprob: -9.927496910095215
    9. '(range' → logprob: -12.302496910095215
    10. ' xrange' → logprob: -13.052496910095215

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04317925497889519
    2. 'in' → logprob: -3.1681792736053467
    3. 'range' → logprob: -9.043179512023926
    4. ' ' → logprob: -10.543179512023926
    5. ' range' → logprob: -10.793179512023926
    6. '(' → logprob: -13.293179512023926
    7. '<|end|>' → logprob: -13.543179512023926
    8. '_' → logprob: -13.668179512023926
    9. 'i' → logprob: -13.668179512023926
    10. 'n' → logprob: -13.918179512023926

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006268949946388602
    2. ' range' → logprob: -7.375627040863037
    3. '[' → logprob: -15.750626564025879
    4. '(range' → logprob: -16.375627517700195
    5. '	range' → logprob: -17.250627517700195
    6. 'rang' → logprob: -17.750627517700195
    7. 'r' → logprob: -18.125627517700195
    8. '```' → logprob: -18.250627517700195
    9. ' ' → logprob: -18.375627517700195
    10. 'c' → logprob: -19.000627517700195

Token 17: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024904031306505203
    2. '(' → logprob: -6.002490520477295
    3. 'N' → logprob: -11.627490043640137
    4. '(n' → logprob: -12.377490043640137
    5. '(
' → logprob: -14.627490043640137
    6. '(len' → logprob: -14.752490043640137
    7. '(C' → logprob: -14.752490043640137
    8. '(c' → logprob: -16.002490997314453
    9. ' (' → logprob: -16.377490997314453
    10. ')' → logprob: -16.877490997314453

Token 18: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.64839569455944e-05
    2. ')' → logprob: -9.750076293945312
    3. ')])' → logprob: -11.375076293945312
    4. '])]' → logprob: -13.125076293945312
    5. '))' → logprob: -13.625076293945312
    6. ']' → logprob: -13.875076293945312
    7. '')]' → logprob: -14.125076293945312
    8. ')]
' → logprob: -14.875076293945312
    9. ' )' → logprob: -15.000076293945312
    10. '])' → logprob: -15.250076293945312

Token 19: 'c' (ID: 66)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.3285655379295349
    2. 'sorted' → logprob: -2.4535655975341797
    3. '```' → logprob: -3.0785655975341797
    4. 'dp' → logprob: -3.2035655975341797
    5. 'c' → logprob: -3.5785655975341797
    6. 's' → logprob: -4.45356559753418
    7. 'for' → logprob: -4.57856559753418
    8. 'ans' → logprob: -4.70356559753418
    9. 'cnt' → logprob: -5.07856559753418
    10. 'result' → logprob: -5.20356559753418

Token 20: '=[' (ID: 13370)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001032691914588213
    2. 'ws' → logprob: -7.876032829284668
    3. 'W' → logprob: -8.376032829284668
    4. '[' → logprob: -9.501032829284668
    5. 'cw' → logprob: -9.626032829284668
    6. '=' → logprob: -10.001032829284668
    7. 'h' → logprob: -10.126032829284668
    8. 'c' → logprob: -10.501032829284668
    9. '#' → logprob: -10.876032829284668
    10. '_w' → logprob: -10.876032829284668

Token 21: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23368507623672485
    2. 'cw' → logprob: -1.73368501663208
    3. 'x' → logprob: -3.85868501663208
    4. 'c' → logprob: -5.23368501663208
    5. ']' → logprob: -5.60868501663208
    6. 'w' → logprob: -7.10868501663208
    7. ')' → logprob: -8.733685493469238
    8. 'i' → logprob: -8.983685493469238
    9. 't' → logprob: -9.733685493469238
    10. 'tuple' → logprob: -9.858685493469238

Token 22: '[' (ID: 58)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35095012187957764
    2. '[' → logprob: -1.8509501218795776
    3. 'for' → logprob: -1.9759501218795776
    4. ' ' → logprob: -8.975950241088867
    5. '	for' → logprob: -9.225950241088867
    6. '
' → logprob: -11.225950241088867
    7. '][' → logprob: -11.725950241088867
    8. '   ' → logprob: -12.350950241088867
    9. '0' → logprob: -12.725950241088867
    10. 'w' → logprob: -12.850950241088867

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.812503814697266
    5. '０' → logprob: -16.375003814697266
    6. '۰' → logprob: -16.812503814697266
    7. '[' → logprob: -17.187503814697266
    8. '
' → logprob: -17.250003814697266
    9. '```' → logprob: -17.437503814697266
    10. '00' → logprob: -17.500003814697266

Token 24: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.251091377227567e-05
    2. ' ]' → logprob: -10.375042915344238
    3. ')]' → logprob: -13.250042915344238
    4. '],' → logprob: -13.250042915344238
    5. ' for' → logprob: -13.375042915344238
    6. ')' → logprob: -13.500042915344238
    7. 'for' → logprob: -13.500042915344238
    8. ']
' → logprob: -13.750042915344238
    9. '`]' → logprob: -14.375042915344238
    10. ']]' → logprob: -14.625042915344238

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06423862278461456
    2. 'for' → logprob: -2.8142385482788086
    3. ']' → logprob: -6.189238548278809
    4. '	for' → logprob: -9.564238548278809
    5. ')' → logprob: -9.689238548278809
    6. ' ]' → logprob: -10.064238548278809
    7. ' ' → logprob: -11.189238548278809
    8. '```' → logprob: -11.689238548278809
    9. '
' → logprob: -12.439238548278809
    10. ')]' → logprob: -13.064238548278809

Token 26: ' x' (ID: 1215)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.3132699728012085
    2. ' cw' → logprob: -1.3132699728012085
    3. 'cwd' → logprob: -12.81326961517334
    4. 'c' → logprob: -12.93826961517334
    5. 'cow' → logprob: -14.31326961517334
    6. ')c' → logprob: -15.06326961517334
    7. '	c' → logprob: -15.43826961517334
    8. ')' → logprob: -15.68826961517334
    9. ' cwd' → logprob: -15.68826961517334
    10. ' ' → logprob: -15.93826961517334

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021102547645568848
    2. 'in' → logprob: -4.021102428436279
    3. 'cw' → logprob: -5.896102428436279
    4. ' cw' → logprob: -9.021102905273438
    5. 'x' → logprob: -10.271102905273438
    6. 's' → logprob: -10.771102905273438
    7. 'c' → logprob: -11.646102905273438
    8. ']' → logprob: -12.396102905273438
    9. ' ' → logprob: -13.521102905273438
    10. ')' → logprob: -13.646102905273438

Token 28: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.01417174469679594
    2. ' cw' → logprob: -4.264171600341797
    3. 'c' → logprob: -12.514171600341797
    4. 'cwd' → logprob: -13.014171600341797
    5. 'range' → logprob: -15.389171600341797
    6. '```' → logprob: -15.389171600341797
    7. '`' → logprob: -15.514171600341797
    8. ' range' → logprob: -15.639171600341797
    9. 'cow' → logprob: -15.764171600341797
    10. '	c' → logprob: -15.889171600341797

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007394690765067935
    2. ')]' → logprob: -7.250739574432373
    3. '])' → logprob: -10.875739097595215
    4. '`]' → logprob: -12.500739097595215
    5. ')' → logprob: -12.875739097595215
    6. '])]' → logprob: -13.625739097595215
    7. ' ]' → logprob: -13.875739097595215
    8. ']
' → logprob: -14.000739097595215
    9. '],' → logprob: -15.375739097595215
    10. '()]' → logprob: -15.500739097595215

Token 30: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001603652024641633
    2. '
' → logprob: -7.376603603363037
    3. 's' → logprob: -8.126604080200195
    4. ']' → logprob: -8.751604080200195
    5. '```' → logprob: -9.501604080200195
    6. 'i' → logprob: -9.626604080200195
    7. '<|end|>' → logprob: -9.751604080200195
    8. '[' → logprob: -10.001604080200195
    9. ' w' → logprob: -10.251604080200195
    10. 'c' → logprob: -10.876604080200195

Token 31: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.3977283537387848
    2. '[' → logprob: -1.5227283239364624
    3. '=' → logprob: -2.272728443145752
    4. ' =' → logprob: -6.147728443145752
    5. '=[]' → logprob: -6.522728443145752
    6. ']' → logprob: -7.272728443145752
    7. '=[
' → logprob: -7.522728443145752
    8. ' =[' → logprob: -7.772728443145752
    9. 's' → logprob: -7.897728443145752
    10. '=['' → logprob: -8.522727966308594

Token 32: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.500000953674316
    3. '(x' → logprob: -17.625
    4. '	x' → logprob: -19.25
    5. ')x' → logprob: -20.125
    6. '"x' → logprob: -21.125
    7. ']' → logprob: -21.25
    8. '-' → logprob: -21.25
    9. '$x' → logprob: -21.75
    10. ''x' → logprob: -21.75

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.991464786347933e-05
    2. '][' → logprob: -9.750060081481934
    3. ' [' → logprob: -14.875060081481934
    4. '
' → logprob: -15.375060081481934
    5. 'for' → logprob: -15.500060081481934
    6. '```' → logprob: -15.500060081481934
    7. '>[' → logprob: -16.125059127807617
    8. '1' → logprob: -16.250059127807617
    9. ')[' → logprob: -16.375059127807617
    10. ' for' → logprob: -16.625059127807617

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. '0' → logprob: -11.875011444091797
    3. '```' → logprob: -13.250011444091797
    4. '-' → logprob: -13.625011444091797
    5. ' ' → logprob: -15.250011444091797
    6. '[' → logprob: -15.375011444091797
    7. '``' → logprob: -15.437511444091797
    8. '１' → logprob: -16.312511444091797
    9. '
' → logprob: -16.312511444091797
    10. ']' → logprob: -16.625011444091797

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018840155098587275
    2. ')' → logprob: -6.3768839836120605
    3. ')]' → logprob: -9.251884460449219
    4. 'for' → logprob: -9.626884460449219
    5. ' for' → logprob: -11.751884460449219
    6. '])' → logprob: -11.876884460449219
    7. ' ]' → logprob: -12.501884460449219
    8. ']
' → logprob: -14.626884460449219
    9. ']]' → logprob: -15.501884460449219
    10. '）' → logprob: -16.00188446044922

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6411874890327454
    2. 'for' → logprob: -0.8911874890327454
    3. ']' → logprob: -2.8911874294281006
    4. ')' → logprob: -4.89118766784668
    5. ' ]' → logprob: -10.01618766784668
    6. '	for' → logprob: -10.14118766784668
    7. ')]' → logprob: -10.64118766784668
    8. ' ' → logprob: -10.89118766784668
    9. '```' → logprob: -12.39118766784668
    10. ' in' → logprob: -12.64118766784668

Token 37: ' x' (ID: 1215)
  Prédit: ' cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cw' → logprob: -0.0636412501335144
    2. 'cw' → logprob: -3.313641309738159
    3. 'x' → logprob: -4.31364107131958
    4. ' x' → logprob: -4.43864107131958
    5. 'w' → logprob: -9.813641548156738
    6. ' w' → logprob: -11.063641548156738
    7. 'c' → logprob: -13.688641548156738
    8. '_' → logprob: -13.938641548156738
    9. ' in' → logprob: -14.313641548156738
    10. ' ' → logprob: -14.563641548156738

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48770636320114136
    2. 'in' → logprob: -1.1127064228057861
    3. 'w' → logprob: -3.362706422805786
    4. 'x' → logprob: -4.487706184387207
    5. ']' → logprob: -5.112706184387207
    6. ' ' → logprob: -6.362706184387207
    7. ')' → logprob: -6.362706184387207
    8. 'cw' → logprob: -6.987706184387207
    9. ' cw' → logprob: -7.362706184387207
    10. ' ]' → logprob: -9.487706184387207

Token 39: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.1602281779050827
    2. ' cw' → logprob: -1.9102281332015991
    3. 'c' → logprob: -13.28522777557373
    4. ' range' → logprob: -14.41022777557373
    5. 'cwd' → logprob: -14.66022777557373
    6. 'x' → logprob: -15.16022777557373
    7. 'range' → logprob: -15.66022777557373
    8. ' ' → logprob: -15.91022777557373
    9. ' ' → logprob: -16.160228729248047
    10. 'cow' → logprob: -16.160228729248047

Token 40: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007672756444662809
    2. ')' → logprob: -4.8826727867126465
    3. '])' → logprob: -10.382672309875488
    4. ')]' → logprob: -10.507672309875488
    5. ']
' → logprob: -12.632672309875488
    6. '）' → logprob: -12.882672309875488
    7. ' ]' → logprob: -13.882672309875488
    8. '']' → logprob: -14.132672309875488
    9. ']

' → logprob: -14.882672309875488
    10. '`]' → logprob: -16.132673263549805

Token 41: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0803351178765297
    2. 'max' → logprob: -4.0803351402282715
    3. 'M' → logprob: -4.4553351402282715
    4. 'S' → logprob: -4.5803351402282715
    5. 'K' → logprob: -4.5803351402282715
    6. 's' → logprob: -4.8303351402282715
    7. 'DP' → logprob: -5.0803351402282715
    8. 'W' → logprob: -5.5803351402282715
    9. 'd' → logprob: -6.2053351402282715
    10. 'w' → logprob: -6.7053351402282715

Token 42: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8958243131637573
    2. '=' → logprob: -1.1458243131637573
    3. '[' → logprob: -1.3958243131637573
    4. '_' → logprob: -3.770824432373047
    5. ' ' → logprob: -6.395824432373047
    6. '=[' → logprob: -7.520824432373047
    7. ' =[' → logprob: -8.145824432373047
    8. ' [' → logprob: -8.895824432373047
    9. '=[]' → logprob: -9.145824432373047
    10. '0' → logprob: -9.395824432373047

Token 43: 'float' (ID: 7829)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16066376864910126
    2. '0' → logprob: -1.9106637239456177
    3. ' [' → logprob: -9.035663604736328
    4. '[[' → logprob: -9.285663604736328
    5. '[-' → logprob: -9.660663604736328
    6. '(' → logprob: -9.785663604736328
    7. '{' → logprob: -10.285663604736328
    8. '{}' → logprob: -10.785663604736328
    9. 'False' → logprob: -11.410663604736328
    10. '[w' → logprob: -11.660663604736328

Token 44: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5823225378990173
    2. '('-' → logprob: -0.8323225378990173
    3. '(' → logprob: -5.082322597503662
    4. '(-' → logprob: -9.832322120666504
    5. '("-' → logprob: -9.957322120666504
    6. ''-' → logprob: -11.457322120666504
    7. '("' → logprob: -11.457322120666504
    8. '-' → logprob: -11.582322120666504
    9. '-inf' → logprob: -11.707322120666504
    10. 'inf' → logprob: -12.332322120666504

Token 45: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.012853359803557396
    2. '-inf' → logprob: -4.387853145599365
    3. '-i' → logprob: -8.137853622436523
    4. ''in' → logprob: -11.387853622436523
    5. ''' → logprob: -11.512853622436523
    6. ''-' → logprob: -11.637853622436523
    7. ''i' → logprob: -12.137853622436523
    8. 'INF' → logprob: -12.387853622436523
    9. '_inf' → logprob: -12.762853622436523
    10. 'Inf' → logprob: -13.012853622436523

Token 46: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.052433960139751434
    2. ')' → logprob: -3.552433967590332
    3. ']' → logprob: -4.052433967590332
    4. '')]' → logprob: -5.552433967590332
    5. ' )' → logprob: -7.552433967590332
    6. '[' → logprob: -8.177433967590332
    7. ' ]' → logprob: -8.802433967590332
    8. ')][' → logprob: -9.802433967590332
    9. '']' → logprob: -10.677433967590332
    10. ',' → logprob: -10.802433967590332

Token 47: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.4138859510421753
    2. ']*' → logprob: -1.6638859510421753
    3. ']' → logprob: -1.9138859510421753
    4. ']+' → logprob: -6.538886070251465
    5. 'for' → logprob: -7.663886070251465
    6. ' for' → logprob: -9.413886070251465
    7. '][' → logprob: -12.038886070251465
    8. ' ]' → logprob: -12.663886070251465
    9. ')]' → logprob: -13.288886070251465
    10. '*' → logprob: -13.413886070251465

Token 48: 'N' (ID: 45)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20239703357219696
    2. 'sum' → logprob: -2.452397108078003
    3. '101' → logprob: -2.702397108078003
    4. '500' → logprob: -4.327396869659424
    5. '(sum' → logprob: -5.452396869659424
    6. '10' → logprob: -5.702396869659424
    7. '510' → logprob: -6.327396869659424
    8. '250' → logprob: -6.327396869659424
    9. '200' → logprob: -6.577396869659424
    10. '110' → logprob: -7.077396869659424

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007268921006470919
    2. '*' → logprob: -5.507268905639648
    3. ' +' → logprob: -5.757268905639648
    4. '+
' → logprob: -11.382268905639648
    5. ' *' → logprob: -11.632268905639648
    6. '1' → logprob: -14.257268905639648
    7. '*N' → logprob: -14.257268905639648
    8. '*(' → logprob: -14.632268905639648
    9. '```' → logprob: -14.632268905639648
    10. '0' → logprob: -14.757268905639648

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040290577453561127
    2. '100' → logprob: -9.375402450561523
    3. ' ' → logprob: -9.500402450561523
    4. '2' → logprob: -9.750402450561523
    5. '101' → logprob: -9.750402450561523
    6. '501' → logprob: -9.875402450561523
    7. '500' → logprob: -10.500402450561523
    8. '51' → logprob: -11.250402450561523
    9. '10' → logprob: -11.750402450561523
    10. '11' → logprob: -12.000402450561523

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.576873758807778e-05
    2. '+' → logprob: -10.125075340270996
    3. ' )' → logprob: -10.750075340270996
    4. '*' → logprob: -11.750075340270996
    5. ')
' → logprob: -12.625075340270996
    6. '),' → logprob: -14.500075340270996
    7. ')

' → logprob: -14.750075340270996
    8. '```' → logprob: -14.750075340270996
    9. '))' → logprob: -15.000075340270996
    10. ')*' → logprob: -16.000076293945312

Token 52: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5465155243873596
    2. '
' → logprob: -0.9215155243873596
    3. '0' → logprob: -4.546515464782715
    4. ' 
' → logprob: -5.546515464782715
    5. '<|end|>' → logprob: -5.921515464782715
    6. '\n' → logprob: -6.171515464782715
    7. '[' → logprob: -6.671515464782715
    8. ' dp' → logprob: -7.046515464782715
    9. '(dp' → logprob: -7.921515464782715
    10. '\' → logprob: -8.046515464782715

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001182052365038544
    2. '\[' → logprob: -9.250118255615234
    3. '[
' → logprob: -12.375118255615234
    4. '```' → logprob: -12.375118255615234
    5. '0' → logprob: -13.000118255615234
    6. '\' → logprob: -13.500118255615234
    7. '.' → logprob: -13.500118255615234
    8. '<|end|>' → logprob: -14.000118255615234
    9. '=' → logprob: -14.125118255615234
    10. '[:]' → logprob: -14.125118255615234

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003582263889256865
    2. '1' → logprob: -8.000358581542969
    3. ']' → logprob: -11.625358581542969
    4. ' ' → logprob: -11.625358581542969
    5. ')' → logprob: -13.437858581542969
    6. '-' → logprob: -14.125358581542969
    7. '```' → logprob: -14.750358581542969
    8. '[' → logprob: -15.000358581542969
    9. '2' → logprob: -15.625358581542969
    10. ' ]' → logprob: -15.750358581542969

Token 55: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2872745990753174
    2. ']=' → logprob: -1.4122745990753174
    3. '=' → logprob: -5.287274360656738
    4. ' ]' → logprob: -7.287274360656738
    5. ')' → logprob: -8.787274360656738
    6. ')=' → logprob: -8.787274360656738
    7. ' =' → logprob: -11.037274360656738
    8. '0' → logprob: -12.037274360656738
    9. '[' → logprob: -12.162274360656738
    10. ')]' → logprob: -12.537274360656738

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '00' → logprob: -17.375001907348633
    4. '000' → logprob: -18.750001907348633
    5. '1' → logprob: -19.625001907348633
    6. '۰' → logprob: -20.125001907348633
    7. '```' → logprob: -20.187501907348633
    8. ' ' → logprob: -20.500001907348633
    9. '０' → logprob: -20.687501907348633
    10. '[' → logprob: -20.687501907348633

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04520447552204132
    2. '<|end|>' → logprob: -4.0452046394348145
    3. ' 
' → logprob: -4.4202046394348145
    4. ' for' → logprob: -5.2952046394348145
    5. 'for' → logprob: -5.5452046394348145
    6. '\n' → logprob: -5.9202046394348145
    7. '
' → logprob: -7.4202046394348145
    8. ' ' → logprob: -7.4202046394348145
    9. '' → logprob: -7.5452046394348145
    10. '  
' → logprob: -7.9202046394348145

Token 58: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7571703791618347
    2. 'for' → logprob: -1.3821704387664795
    3. ' 
' → logprob: -2.0071704387664795
    4. '<|end|>' → logprob: -2.6321704387664795
    5. ' ' → logprob: -3.5071704387664795
    6. '\n' → logprob: -3.8821704387664795
    7. '
' → logprob: -4.1321702003479
    8. '+' → logprob: -6.7571702003479
    9. '```' → logprob: -6.7571702003479
    10. '1' → logprob: -7.0071702003479

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006273117382079363
    2. 'i' → logprob: -5.13127326965332
    3. ' _' → logprob: -8.63127326965332
    4. ' ' → logprob: -9.38127326965332
    5. ' c' → logprob: -10.50627326965332
    6. '_' → logprob: -10.63127326965332
    7. '_i' → logprob: -11.63127326965332
    8. ' j' → logprob: -11.75627326965332
    9. '	i' → logprob: -12.50627326965332
    10. ' ' → logprob: -13.50627326965332

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007043329067528248
    2. 'in' → logprob: -5.007043361663818
    3. ' ' → logprob: -8.13204288482666
    4. ' i' → logprob: -11.25704288482666
    5. '	in' → logprob: -12.25704288482666
    6. '+' → logprob: -12.63204288482666
    7. 'range' → logprob: -12.63204288482666
    8. '1' → logprob: -13.13204288482666
    9. ',' → logprob: -13.38204288482666
    10. '  ' → logprob: -13.88204288482666

Token 61: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931517124176025
    2. 'range' → logprob: -0.6931517124176025
    3. ' ' → logprob: -13.443151473999023
    4. '	range' → logprob: -13.943151473999023
    5. '(range' → logprob: -14.693151473999023
    6. 'c' → logprob: -14.818151473999023
    7. 'r' → logprob: -14.943151473999023
    8. '```' → logprob: -15.068151473999023
    9. ' xrange' → logprob: -16.193151473999023
    10. ' ran' → logprob: -16.443151473999023

Token 62: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12703950703144073
    2. '(N' → logprob: -2.1270394325256348
    3. '(n' → logprob: -9.752039909362793
    4. '1' → logprob: -10.377039909362793
    5. ' (' → logprob: -12.002039909362793
    6. '(
' → logprob: -12.127039909362793
    7. 'N' → logprob: -12.377039909362793
    8. '(len' → logprob: -12.752039909362793
    9. '(i' → logprob: -13.502039909362793
    10. ')' → logprob: -14.127039909362793

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03457695245742798
    2. '+' → logprob: -3.409576892852783
    3. '):
' → logprob: -7.409576892852783
    4. ')' → logprob: -8.784577369689941
    5. ' ):' → logprob: -8.784577369689941
    6. ':' → logprob: -12.284577369689941
    7. '1' → logprob: -12.784577369689941
    8. '-' → logprob: -13.034577369689941
    9. ',' → logprob: -13.159577369689941
    10. ' +' → logprob: -13.409577369689941

Token 64: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08632522076368332
    2. 'for' → logprob: -3.086325168609619
    3. ' dp' → logprob: -3.836325168609619
    4. '   ' → logprob: -4.461325168609619
    5. 'dp' → logprob: -5.961325168609619
    6. '	for' → logprob: -7.461325168609619
    7. ' ' → logprob: -8.336325645446777
    8. ' j' → logprob: -9.586325645446777
    9. 'j' → logprob: -9.961325645446777
    10. '    ' → logprob: -10.336325645446777

Token 65: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12917736172676086
    2. ' for' → logprob: -2.3791773319244385
    3. '   ' → logprob: -4.004177570343018
    4. 'dp' → logprob: -5.254177570343018
    5. 'j' → logprob: -5.879177570343018
    6. ' dp' → logprob: -7.504177570343018
    7. 'max' → logprob: -8.12917709350586
    8. ' j' → logprob: -8.12917709350586
    9. 'min' → logprob: -8.37917709350586
    10. 'w' → logprob: -8.62917709350586

Token 66: '_w' (ID: 3567)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.8020961284637451
    2. '_w' → logprob: -1.1770961284637451
    3. '_' → logprob: -2.177096128463745
    4. '=' → logprob: -3.177096128463745
    5. 'c' → logprob: -3.552096128463745
    6. 'w' → logprob: -3.552096128463745
    7. ' =' → logprob: -4.177096366882324
    8. '_=' → logprob: -4.802096366882324
    9. '_weight' → logprob: -5.677096366882324
    10. '_weights' → logprob: -7.302096366882324

Token 67: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4323660731315613
    2. ' =' → logprob: -1.057366132736206
    3. '+=' → logprob: -6.932365894317627
    4. '=w' → logprob: -6.932365894317627
    5. '=sum' → logprob: -7.057365894317627
    6. ' +=' → logprob: -7.432365894317627
    7. '+' → logprob: -8.807366371154785
    8. '=
' → logprob: -10.807366371154785
    9. ' +' → logprob: -11.057366371154785
    10. 'w' → logprob: -11.057366371154785

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025684027932584286
    2. 'w' → logprob: -6.002568244934082
    3. ' ' → logprob: -9.377568244934082
    4. ' w' → logprob: -12.627568244934082
    5. '+w' → logprob: -13.502568244934082
    6. '   ' → logprob: -13.752568244934082
    7. '+' → logprob: -14.127568244934082
    8. 'dp' → logprob: -14.502568244934082
    9. '```' → logprob: -15.252568244934082
    10. '=' → logprob: -16.2525691986084

Token 69: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10607828199863434
    2. '<|end|>' → logprob: -2.4810783863067627
    3. '   ' → logprob: -4.981078147888184
    4. ' for' → logprob: -5.481078147888184
    5. ' 
' → logprob: -5.606078147888184
    6. '    ' → logprob: -7.231078147888184
    7. '  ' → logprob: -7.481078147888184
    8. 'for' → logprob: -8.231078147888184
    9. '    
' → logprob: -9.231078147888184
    10. '<|end|>' → logprob: -9.356078147888184

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4375084340572357
    2. '<|end|>' → logprob: -1.437508463859558
    3. ' ' → logprob: -2.9375083446502686
    4. ' for' → logprob: -3.0625083446502686
    5. '    ' → logprob: -5.187508583068848
    6. 'for' → logprob: -5.812508583068848
    7. '  ' → logprob: -6.062508583068848
    8. ' 
' → logprob: -6.062508583068848
    9. '<|end|>' → logprob: -7.437508583068848
    10. '+' → logprob: -7.562508583068848

Token 71: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12566374242305756
    2. ' for' → logprob: -2.2506637573242188
    3. 'sum' → logprob: -5.000663757324219
    4. 'max' (adapté à ' max') → logprob: -6.125663757324219
    5. '   ' → logprob: -6.875663757324219
    6. 'min' → logprob: -7.000663757324219
    7. ' sum' → logprob: -7.625663757324219
    8. 'j' → logprob: -7.750663757324219
    9. 'dp' → logprob: -8.750663757324219
    10. ' max' → logprob: -8.750663757324219

Token 72: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0016413808334618807
    2. 'c' → logprob: -6.501641273498535
    3. '_' → logprob: -9.126641273498535
    4. 'C' → logprob: -11.876641273498535
    5. '_w' → logprob: -12.001641273498535
    6. '=' → logprob: -12.376641273498535
    7. '<|end|>' → logprob: -12.751641273498535
    8. '```' → logprob: -13.126641273498535
    9. ' =' → logprob: -13.376641273498535
    10. '=c' → logprob: -13.501641273498535

Token 73: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6574535965919495
    2. '=max' → logprob: -0.7824535965919495
    3. ' =' → logprob: -3.9074535369873047
    4. '=c' → logprob: -5.532453536987305
    5. '=w' → logprob: -8.532453536987305
    6. '=int' → logprob: -9.407453536987305
    7. '=float' → logprob: -10.282453536987305
    8. '=min' → logprob: -10.532453536987305
    9. '=i' → logprob: -11.032453536987305
    10. '=cut' → logprob: -11.157453536987305

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004135112394578755
    2. 'c' → logprob: -8.25041389465332
    3. ' ' → logprob: -9.12541389465332
    4. '-' → logprob: -10.37541389465332
    5. '-c' → logprob: -11.75041389465332
    6. ' -' → logprob: -13.50041389465332
    7. ' c' → logprob: -14.00041389465332
    8. 'w' → logprob: -14.87541389465332
    9. 'float' → logprob: -14.87541389465332
    10. '```' → logprob: -15.37541389465332

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16129469871520996
    2. '
' → logprob: -2.78629469871521
    3. '<|end|>' → logprob: -2.91129469871521
    4. ' 
' → logprob: -4.286294937133789
    5. '    
' → logprob: -4.411294937133789
    6. '  
' → logprob: -5.911294937133789
    7. '   
' → logprob: -7.161294937133789
    8. '<|end|>' → logprob: -7.411294937133789
    9. '\n' → logprob: -7.536294937133789
    10. ' ' → logprob: -7.661294937133789

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14977814257144928
    2. '<|end|>' → logprob: -2.149778127670288
    3. '
' → logprob: -4.524778366088867
    4. ' for' → logprob: -5.024778366088867
    5. ' 
' → logprob: -6.274778366088867
    6. '    
' → logprob: -7.149778366088867
    7. ' ' → logprob: -7.524778366088867
    8. '<|end|>' → logprob: -7.899778366088867
    9. '	for' → logprob: -8.024778366088867
    10. '  ' → logprob: -8.399778366088867

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34445562958717346
    2. ' for' → logprob: -1.344455599784851
    3. '   ' → logprob: -3.5944557189941406
    4. '<|end|>' → logprob: -6.094455718994141
    5. '	for' → logprob: -6.969455718994141
    6. ' ' → logprob: -11.59445571899414
    7. '```' → logprob: -11.71945571899414
    8. 'j' → logprob: -12.09445571899414
    9. '  ' → logprob: -12.09445571899414
    10. '<|end|>' → logprob: -12.84445571899414

Token 78: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.17981185019016266
    2. 'j' → logprob: -1.8048118352890015
    3. ' range' → logprob: -10.429811477661133
    4. '	j' → logprob: -11.429811477661133
    5. 'range' → logprob: -11.429811477661133
    6. '   ' → logprob: -12.679811477661133
    7. ' ' → logprob: -12.929811477661133
    8. '_j' → logprob: -13.429811477661133
    9. '```' → logprob: -13.554811477661133
    10. ')' → logprob: -14.054811477661133

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004688226152211428
    2. 'in' → logprob: -5.379688262939453
    3. ' range' → logprob: -10.129688262939453
    4. 'range' → logprob: -11.004688262939453
    5. '	in' → logprob: -12.754688262939453
    6. ' j' → logprob: -13.254688262939453
    7. '   ' → logprob: -13.254688262939453
    8. ' ' → logprob: -13.379688262939453
    9. ' i' → logprob: -13.504688262939453
    10. '<|end|>' → logprob: -14.504688262939453

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029777569696307182
    2. 'range' → logprob: -3.5297775268554688
    3. '(range' → logprob: -10.654777526855469
    4. '	range' → logprob: -13.529777526855469
    5. ' ' → logprob: -14.404777526855469
    6. ' i' → logprob: -14.654777526855469
    7. ' reversed' → logprob: -15.029777526855469
    8. '   ' → logprob: -15.529777526855469
    9. 'i' → logprob: -15.529777526855469
    10. ' xrange' → logprob: -15.654777526855469

Token 81: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002905334113165736
    2. 'i' → logprob: -8.875290870666504
    3. '(' → logprob: -9.375290870666504
    4. ' i' → logprob: -9.750290870666504
    5. '(j' → logprob: -12.500290870666504
    6. ' (' → logprob: -13.000290870666504
    7. '(N' → logprob: -14.875290870666504
    8. ',i' → logprob: -15.250290870666504
    9. 'j' → logprob: -15.375290870666504
    10. '   ' → logprob: -15.875290870666504

Token 82: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5213668346405029
    2. ',-' → logprob: -1.021366834640503
    3. ',N' → logprob: -3.396366834640503
    4. '-' → logprob: -5.146367073059082
    5. ' ,' → logprob: -6.146367073059082
    6. '+' → logprob: -6.271367073059082
    7. ',i' → logprob: -6.771367073059082
    8. ',len' → logprob: -7.646367073059082
    9. ' -' → logprob: -8.271367073059082
    10. ',j' → logprob: -8.271367073059082

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.000003814697266
    3. '-' → logprob: -14.500003814697266
    4. ' -' → logprob: -15.500003814697266
    5. '```' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.937503814697266
    8. '１' → logprob: -17.312503814697266
    9. '

' → logprob: -17.437503814697266
    10. '2' → logprob: -17.625003814697266

Token 84: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0017599097918719053
    2. '-' → logprob: -6.501760005950928
    3. ',' → logprob: -8.37675952911377
    4. ' ,-' → logprob: -10.75175952911377
    5. '1' → logprob: -12.87675952911377
    6. ' -' → logprob: -13.37675952911377
    7. ',--' → logprob: -14.62675952911377
    8. ',-

' → logprob: -14.75175952911377
    9. '```' → logprob: -15.00175952911377
    10. ',-
' → logprob: -15.00175952911377

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '１' → logprob: -15.500008583068848
    5. '```' → logprob: -15.562508583068848
    6. '
' → logprob: -16.50000762939453
    7. '  ' → logprob: -16.93750762939453
    8. ',' → logprob: -17.25000762939453
    9. '

' → logprob: -17.25000762939453
    10. '    ' → logprob: -17.37500762939453

Token 86: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5695579051971436
    2. ',-' → logprob: -0.9445579051971436
    3. '):' → logprob: -3.5695579051971436
    4. ',' → logprob: -4.194558143615723
    5. ' -' → logprob: -6.819558143615723
    6. '):-' → logprob: -7.944558143615723
    7. '):
' → logprob: -8.069558143615723
    8. '   ' → logprob: -8.694558143615723
    9. ')' → logprob: -9.569558143615723
    10. '```' → logprob: -10.569558143615723

Token 87: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39658063650131226
    2. '       ' → logprob: -1.646580696105957
    3. ' 
' → logprob: -2.896580696105957
    4. '   ' → logprob: -3.521580696105957
    5. '    ' → logprob: -3.646580696105957
    6. '<|end|>' → logprob: -4.521580696105957
    7. '    
' → logprob: -6.396580696105957
    8. ')' → logprob: -6.396580696105957
    9. '        
' → logprob: -6.771580696105957
    10. '  ' → logprob: -6.771580696105957

Token 88: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3031897246837616
    2. ' sum' → logprob: -2.428189754486084
    3. ' ' → logprob: -3.303189754486084
    4. '        ' → logprob: -3.428189754486084
    5. 'sum' (adapté à ' sum') → logprob: -3.553189754486084
    6. '
' → logprob: -4.178189754486084
    7. '   ' → logprob: -4.553189754486084
    8. '```' → logprob: -4.553189754486084
    9. '    ' → logprob: -4.678189754486084
    10. '           ' → logprob: -5.178189754486084

Token 89: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.8789383830153383e-05
    2. 'w' → logprob: -11.125019073486328
    3. '_' → logprob: -13.250019073486328
    4. '_j' → logprob: -14.375019073486328
    5. ' _' → logprob: -15.000019073486328
    6. '_s' → logprob: -15.000019073486328
    7. 's' → logprob: -15.750019073486328
    8. '<|end|>' → logprob: -16.125019073486328
    9. '```' → logprob: -16.875019073486328
    10. '_wsgi' → logprob: -16.875019073486328

Token 90: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009579126490280032
    2. ' +=' → logprob: -7.62595796585083
    3. '+' → logprob: -8.125957489013672
    4. ']+=' → logprob: -8.750957489013672
    5. '+=(' → logprob: -12.625957489013672
    6. '=' → logprob: -12.750957489013672
    7. '+w' → logprob: -13.125957489013672
    8. '+='' → logprob: -13.125957489013672
    9. 'w' → logprob: -13.375957489013672
    10. '```' → logprob: -13.875957489013672

Token 91: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.613945101387799e-05
    2. ' w' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.875085830688477
    4. '[w' → logprob: -15.375085830688477
    5. '	w' → logprob: -15.750085830688477
    6. '<w' → logprob: -15.875085830688477
    7. 'W' → logprob: -16.250085830688477
    8. '_w' → logprob: -16.500085830688477
    9. '>w' → logprob: -16.625085830688477
    10. ''w' → logprob: -16.875085830688477

Token 92: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.513339445111342e-05
    2. 'j' → logprob: -10.500044822692871
    3. '[' → logprob: -11.000044822692871
    4. '[i' → logprob: -15.250044822692871
    5. '```' → logprob: -15.500044822692871
    6. '[
' → logprob: -15.750044822692871
    7. ' [' → logprob: -16.625045776367188
    8. '[js' → logprob: -17.375045776367188
    9. '[w' → logprob: -17.875045776367188
    10. '	j' → logprob: -18.000045776367188

Token 93: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043462127447128296
    2. ')
' → logprob: -3.168462038040161
    3. ' )' → logprob: -8.043461799621582
    4. ']' → logprob: -9.918461799621582
    5. ' )
' → logprob: -10.043461799621582
    6. ')
' → logprob: -11.168461799621582
    7. '<|end|>' → logprob: -12.043461799621582
    8. '）' → logprob: -12.168461799621582
    9. '])' → logprob: -12.293461799621582
    10. ')

' → logprob: -12.418461799621582

Token 94: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029089784249663353
    2. '<|end|>' → logprob: -3.6540896892547607
    3. '       ' → logprob: -6.77908992767334
    4. ' if' → logprob: -7.15408992767334
    5. 'if' → logprob: -8.65408992767334
    6. '        
' → logprob: -8.77908992767334
    7. '
' → logprob: -8.77908992767334
    8. '```' → logprob: -9.40408992767334
    9. ' 
' → logprob: -9.52908992767334
    10. '<|end|>' → logprob: -9.65408992767334

Token 95: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03884575143456459
    2. 'if' → logprob: -3.2888457775115967
    3. ' if' → logprob: -7.788845539093018
    4. ' max' → logprob: -8.038846015930176
    5. '
' → logprob: -10.663846015930176
    6. 'c' → logprob: -11.163846015930176
    7. '```' → logprob: -12.038846015930176
    8. '[max' → logprob: -12.163846015930176
    9. '=max' → logprob: -12.663846015930176
    10. '   ' → logprob: -13.163846015930176

Token 96: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.861651490908116e-05
    2. '_' → logprob: -9.750068664550781
    3. 'c' → logprob: -12.625068664550781
    4. ' _' → logprob: -13.625068664550781
    5. '```' → logprob: -13.750068664550781
    6. '=_' → logprob: -14.000068664550781
    7. '}_' → logprob: -14.250068664550781
    8. '<|end|>' → logprob: -14.500068664550781
    9. '=' → logprob: -15.250068664550781
    10. '_j' → logprob: -15.250068664550781

Token 97: '=max' (ID: 102952)
  Prédit: '=max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=max' → logprob: -0.048911064863204956
    2. '=' → logprob: -3.0489110946655273
    3. ' =' → logprob: -8.048911094665527
    4. 'max' → logprob: -13.048911094665527
    5. '=
' → logprob: -14.673911094665527
    6. '=int' → logprob: -14.798911094665527
    7. '=

' → logprob: -14.923911094665527
    8. '=Math' → logprob: -15.798911094665527
    9. '=min' → logprob: -16.42391014099121
    10. '=c' → logprob: -16.54891014099121

Token 98: '(max' (ID: 17178)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.16236494481563568
    2. '(max' → logprob: -2.287364959716797
    3. '(' → logprob: -3.037364959716797
    4. 'c' → logprob: -8.662364959716797
    5. '(
' → logprob: -9.412364959716797
    6. 'max' → logprob: -9.787364959716797
    7. ' (' → logprob: -11.037364959716797
    8. ')c' → logprob: -11.162364959716797
    9. '(

' → logprob: -11.287364959716797
    10. '```' → logprob: -13.037364959716797

Token 99: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0024158458691090345
    2. 'c' → logprob: -6.127415657043457
    3. '_' → logprob: -9.752415657043457
    4. '<|end|>' → logprob: -10.127415657043457
    5. '[' → logprob: -11.064915657043457
    6. 'w' → logprob: -11.377415657043457
    7. '[c' → logprob: -11.502415657043457
    8. ')' → logprob: -11.877415657043457
    9. '_[' → logprob: -12.064915657043457
    10. 's' → logprob: -12.064915657043457

Token 100: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.21485161781311035
    2. ',' → logprob: -1.7148516178131104
    3. 'c' → logprob: -4.339851379394531
    4. ' ,' → logprob: -8.589851379394531
    5. ' c' → logprob: -9.964851379394531
    6. ',
' → logprob: -9.964851379394531
    7. ',max' → logprob: -11.839851379394531
    8. '   ' → logprob: -12.339851379394531
    9. '[c' → logprob: -13.089851379394531
    10. ')c' → logprob: -13.464851379394531

Token 101: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0009140860638581216
    2. 'j' → logprob: -7.000914096832275
    3. '[' → logprob: -13.750913619995117
    4. '[
' → logprob: -14.625913619995117
    5. '```' → logprob: -14.625913619995117
    6. '
' → logprob: -15.625913619995117
    7. '	j' → logprob: -15.750913619995117
    8. '[i' → logprob: -16.625913619995117
    9. '   ' → logprob: -16.750913619995117
    10. ')' → logprob: -17.875913619995117

Token 102: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1449218988418579
    2. ')' → logprob: -2.5199217796325684
    3. '])
' → logprob: -3.1449217796325684
    4. '])' → logprob: -4.519921779632568
    5. ' )
' → logprob: -9.144922256469727
    6. ')
' → logprob: -9.769922256469727
    7. '))
' → logprob: -10.019922256469727
    8. '   ' → logprob: -10.144922256469727
    9. '       ' → logprob: -10.394922256469727
    10. ')

' → logprob: -10.894922256469727

Token 103: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08327527344226837
    2. '       ' → logprob: -2.708275318145752
    3. ' if' → logprob: -4.958275318145752
    4. '<|end|>' → logprob: -5.458275318145752
    5. '        
' → logprob: -7.458275318145752
    6. 'if' → logprob: -7.583275318145752
    7. ' 
' → logprob: -8.458274841308594
    8. '
' → logprob: -8.708274841308594
    9. '   ' → logprob: -8.958274841308594
    10. '  
' → logprob: -9.583274841308594

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010683097876608372
    2. '       ' → logprob: -5.385683059692383
    3. 'dp' → logprob: -5.385683059692383
    4. ' if' → logprob: -6.635683059692383
    5. '```' → logprob: -9.135683059692383
    6. '
' → logprob: -10.635683059692383
    7. '   ' → logprob: -12.010683059692383
    8. '           ' → logprob: -12.885683059692383
    9. '        
' → logprob: -13.010683059692383
    10. ' dp' → logprob: -13.385683059692383

Token 105: ' max' (ID: 2999)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004704714752733707
    2. ' sum' → logprob: -5.37970495223999
    3. 'dp' → logprob: -9.754704475402832
    4. '   ' → logprob: -11.379704475402832
    5. '(sum' → logprob: -12.254704475402832
    6. '	sum' → logprob: -12.629704475402832
    7. ' ' → logprob: -13.629704475402832
    8. ' ' → logprob: -13.629704475402832
    9. '           ' → logprob: -13.879704475402832
    10. ' dp' → logprob: -14.129704475402832

Token 106: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.466968650580384e-05
    2. '(max' → logprob: -11.000054359436035
    3. 'c' → logprob: -11.750054359436035
    4. '_' → logprob: -12.562554359436035
    5. '(sum' → logprob: -12.562554359436035
    6. '```' → logprob: -12.625054359436035
    7. '(' → logprob: -12.812554359436035
    8. 'sum' → logprob: -13.062554359436035
    9. '>' → logprob: -13.250054359436035
    10. '=max' → logprob: -14.062554359436035

Token 107: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6787427067756653
    2. '<=' → logprob: -0.9287427067756653
    3. '>' → logprob: -2.8037426471710205
    4. ' <=' → logprob: -4.6787428855896
    5. '<' → logprob: -4.6787428855896
    6. '*' → logprob: -5.0537428855896
    7. ' >=' → logprob: -5.3037428855896
    8. '==' → logprob: -5.4287428855896
    9. 'sum' → logprob: -7.0537428855896
    10. ' >' → logprob: -7.3037428855896

Token 108: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0011405730620026588
    2. ' sum' → logprob: -7.251140594482422
    3. 'dp' → logprob: -7.876140594482422
    4. '   ' → logprob: -10.501140594482422
    5. '100' → logprob: -11.751140594482422
    6. '(sum' → logprob: -13.126140594482422
    7. ' ' → logprob: -13.251140594482422
    8. '  ' → logprob: -13.376140594482422
    9. '10' → logprob: -13.501140594482422
    10. '	sum' → logprob: -13.876140594482422

Token 109: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0003864630125463009
    2. 'w' → logprob: -7.8753862380981445
    3. '_' → logprob: -13.375386238098145
    4. '   ' → logprob: -14.000386238098145
    5. ' _' → logprob: -14.625386238098145
    6. '_s' → logprob: -15.125386238098145
    7. '-w' → logprob: -15.125386238098145
    8. '<|end|>' → logprob: -15.250386238098145
    9. '+w' → logprob: -15.250386238098145
    10. 's' → logprob: -15.500386238098145

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.524036705493927
    2. ':
' → logprob: -0.899036705493927
    3. '       ' → logprob: -7.524036884307861
    4. '           ' → logprob: -8.899036407470703
    5. '   ' → logprob: -9.274036407470703
    6. 'dp' → logprob: -9.649036407470703
    7. ':
' → logprob: -10.649036407470703
    8. '):
' → logprob: -11.524036407470703
    9. ':

' → logprob: -11.524036407470703
    10. ' and' → logprob: -11.899036407470703

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1606927067041397
    2. 'dp' → logprob: -2.0356926918029785
    3. ' dp' → logprob: -4.5356926918029785
    4. '       ' → logprob: -5.0356926918029785
    5. '               ' → logprob: -7.9106926918029785
    6. '	dp' → logprob: -9.410693168640137
    7. '   ' → logprob: -9.660693168640137
    8. '```' → logprob: -9.785693168640137
    9. ':' → logprob: -10.660693168640137
    10. '(dp' → logprob: -11.035693168640137

Token 112: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.002336281817406416
    2. ' dp' → logprob: -6.877336502075195
    3. '               ' → logprob: -7.127336502075195
    4. '           ' → logprob: -7.752336502075195
    5. 'continue' → logprob: -10.377336502075195
    6. '	dp' → logprob: -10.752336502075195
    7. 'break' → logprob: -11.877336502075195
    8. '   ' → logprob: -12.752336502075195
    9. '```' → logprob: -13.002336502075195
    10. '
' → logprob: -13.627336502075195

Token 113: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4741465747356415
    2. '[i' → logprob: -0.9741466045379639
    3. '[max' → logprob: -10.599146842956543
    4. '[min' → logprob: -10.599146842956543
    5. '[' → logprob: -11.099146842956543
    6. '[m' → logprob: -13.974146842956543
    7. 'i' → logprob: -14.099146842956543
    8. ' [' → logprob: -15.224146842956543
    9. 'j' → logprob: -15.349146842956543
    10. '[x' → logprob: -15.724146842956543

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014228851534426212
    2. ']' → logprob: -4.764228820800781
    3. ']=' → logprob: -5.514228820800781
    4. ' +' → logprob: -6.889228820800781
    5. ']+' → logprob: -8.639228820800781
    6. '[' → logprob: -9.014228820800781
    7. '1' → logprob: -9.639228820800781
    8. '[j' → logprob: -9.764228820800781
    9. ']+=' → logprob: -9.764228820800781
    10. '+j' → logprob: -10.889228820800781

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -11.250024795532227
    3. ']' → logprob: -12.812524795532227
    4. '2' → logprob: -13.062524795532227
    5. '   ' → logprob: -13.312524795532227
    6. '```' → logprob: -14.000024795532227
    7. ')' → logprob: -14.062524795532227
    8. '`' → logprob: -14.937524795532227
    9. '+' → logprob: -15.375024795532227
    10. '][' → logprob: -15.500024795532227

Token 116: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.04891367256641388
    2. ']' → logprob: -3.0489137172698975
    3. '=min' → logprob: -8.673913955688477
    4. '']=' → logprob: -9.548913955688477
    5. ' ]' → logprob: -9.923913955688477
    6. '"]=' → logprob: -10.798913955688477
    7. ']+=' → logprob: -12.798913955688477
    8. ')=' → logprob: -13.048913955688477
    9. ' =' → logprob: -13.048913955688477
    10. '=' → logprob: -13.298913955688477

Token 117: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.52919222577475e-05
    2. ' min' → logprob: -9.500075340270996
    3. 'max' → logprob: -15.000075340270996
    4. '   ' → logprob: -17.25007438659668
    5. '	min' → logprob: -17.87507438659668
    6. 'dp' → logprob: -18.00007438659668
    7. 'mi' → logprob: -18.87507438659668
    8. '=min' → logprob: -19.00007438659668
    9. '(min' → logprob: -19.12507438659668
    10. '[min' → logprob: -19.50007438659668

Token 118: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0011723674833774567
    2. '(' → logprob: -6.7511725425720215
    3. '(
' → logprob: -13.251172065734863
    4. '(

' → logprob: -15.251172065734863
    5. 'dp' → logprob: -16.12617301940918
    6. '(d' → logprob: -17.62617301940918
    7. '	dp' → logprob: -17.75117301940918
    8. ' (' → logprob: -18.37617301940918
    9. '(df' → logprob: -18.75117301940918
    10. '(dt' → logprob: -18.87617301940918

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010397175792604685
    2. '[j' → logprob: -6.876039505004883
    3. '[' → logprob: -12.001039505004883
    4. 'i' → logprob: -15.376039505004883
    5. '[
' → logprob: -15.376039505004883
    6. 'dp' → logprob: -16.251039505004883
    7. ' [' → logprob: -17.126039505004883
    8. '```' → logprob: -17.376039505004883
    9. ')' → logprob: -17.751039505004883
    10. '[len' → logprob: -18.001039505004883

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000260382192209363
    2. '[' → logprob: -8.875260353088379
    3. ' +' → logprob: -10.250260353088379
    4. '1' → logprob: -10.625260353088379
    5. '][' → logprob: -10.750260353088379
    6. ']+' → logprob: -10.875260353088379
    7. ']' → logprob: -12.250260353088379
    8. '   ' → logprob: -13.000260353088379
    9. '[j' → logprob: -13.000260353088379
    10. '+j' → logprob: -13.125260353088379

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.437508583068848
    4. '```' → logprob: -15.125008583068848
    5. '+' → logprob: -15.875008583068848
    6. '-' → logprob: -16.18750762939453
    7. '
' → logprob: -16.31250762939453
    8. ']' → logprob: -16.50000762939453
    9. '

' → logprob: -16.56250762939453
    10. ')' → logprob: -16.62500762939453

Token 122: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008358351769857109
    2. ' ,' → logprob: -7.12583589553833
    3. 'dp' → logprob: -11.000835418701172
    4. ' dp' → logprob: -12.250835418701172
    5. '(dp' → logprob: -13.125835418701172
    6. ',d' → logprob: -13.375835418701172
    7. ',p' → logprob: -13.875835418701172
    8. ',
' → logprob: -14.000835418701172
    9. '	dp' → logprob: -14.375835418701172
    10. ',

' → logprob: -14.375835418701172

Token 123: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003706373507156968
    2. ' dp' → logprob: -5.628706455230713
    3. '	dp' → logprob: -9.628705978393555
    4. '   ' → logprob: -10.628705978393555
    5. '(dp' → logprob: -11.753705978393555
    6. 'max' → logprob: -13.128705978393555
    7. '```' → logprob: -13.628705978393555
    8. '_dp' → logprob: -13.878705978393555
    9. '.dp' → logprob: -14.378705978393555
    10. '           ' → logprob: -14.378705978393555

Token 124: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.632542913896032e-05
    2. 'j' → logprob: -10.000046730041504
    3. '(j' → logprob: -15.375046730041504
    4. '[' → logprob: -15.500046730041504
    5. '   ' → logprob: -16.000045776367188
    6. '][' → logprob: -16.125045776367188
    7. '
' → logprob: -16.250045776367188
    8. '```' → logprob: -16.750045776367188
    9. '[
' → logprob: -17.375045776367188
    10. ' [' → logprob: -17.500045776367188

Token 125: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.03305213898420334
    2. '])' → logprob: -3.9080522060394287
    3. ']' → logprob: -4.40805196762085
    4. '])+' → logprob: -8.658052444458008
    5. '+' → logprob: -10.658052444458008
    6. ' ]' → logprob: -11.033052444458008
    7. '[' → logprob: -11.908052444458008
    8. ']*)' → logprob: -12.658052444458008
    9. ']+"' → logprob: -12.783052444458008
    10. '])
' → logprob: -12.908052444458008

Token 126: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011725869961082935
    2. '1' → logprob: -4.636725902557373
    3. ' max' → logprob: -6.261725902557373
    4. 'sum' → logprob: -10.761725425720215
    5. 'c' → logprob: -11.261725425720215
    6. '(max' → logprob: -11.886725425720215
    7. ' ' → logprob: -11.886725425720215
    8. '   ' → logprob: -13.011725425720215
    9. '	max' → logprob: -13.761725425720215
    10. 'm' → logprob: -14.261725425720215

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. ')
' → logprob: -10.875020980834961
    3. ' )' → logprob: -13.250020980834961
    4. '）' → logprob: -16.12502098083496
    5. ')return' → logprob: -16.50002098083496
    6. ')

' → logprob: -16.62502098083496
    7. '```' → logprob: -16.62502098083496
    8. '
' → logprob: -17.25002098083496
    9. '))' → logprob: -17.50002098083496
    10. '+' → logprob: -18.00002098083496

Token 128: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006866985349915922
    2. '
' → logprob: -7.7506866455078125
    3. ')' → logprob: -9.000686645507812
    4. ' print' → logprob: -9.125686645507812
    5. '```' → logprob: -11.375686645507812
    6. ')
' → logprob: -12.125686645507812
    7. 'for' → logprob: -13.000686645507812
    8. 'return' → logprob: -13.250686645507812
    9. '(print' → logprob: -14.625686645507812
    10. '<|end|>' → logprob: -14.625686645507812

Token 129: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.016596008092164993
    2. ' else' → logprob: -4.266595840454102
    3. 'print' → logprob: -6.141595840454102
    4. 'elif' → logprob: -8.766595840454102
    5. '```' → logprob: -9.391595840454102
    6. 'return' → logprob: -10.641595840454102
    7. '<|end|>' → logprob: -12.266595840454102
    8. '	else' → logprob: -12.391595840454102
    9. 'dp' → logprob: -14.391595840454102
    10. ')' → logprob: -14.516595840454102

Token 130: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08052091300487518
    2. ':' → logprob: -2.5805208683013916
    3. 'break' → logprob: -7.330521106719971
    4. ':
' → logprob: -7.705521106719971
    5. ' break' → logprob: -8.205520629882812
    6. '               ' → logprob: -9.455520629882812
    7. '          ' → logprob: -9.705520629882812
    8. '       ' → logprob: -10.580520629882812
    9. ' ' → logprob: -11.455520629882812
    10. '   ' → logprob: -11.580520629882812

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14800101518630981
    2. 'break' → logprob: -2.023000955581665
    3. ' break' → logprob: -5.273001194000244
    4. ' ' → logprob: -10.148000717163086
    5. '	break' → logprob: -10.273000717163086
    6. '```' → logprob: -10.273000717163086
    7. '       ' → logprob: -10.523000717163086
    8. '               ' → logprob: -10.773000717163086
    9. '   ' → logprob: -11.898000717163086
    10. '		' → logprob: -12.523000717163086

Token 132: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.000158842682139948
    2. ' break' → logprob: -8.75015926361084
    3. '	break' → logprob: -16.000158309936523
    4. '   ' → logprob: -16.375158309936523
    5. '           ' → logprob: -17.000158309936523
    6. '       ' → logprob: -17.000158309936523
    7. 'br' → logprob: -18.500158309936523
    8. '```' → logprob: -18.625158309936523
    9. '_break' → logprob: -19.375158309936523
    10. 'Break' → logprob: -19.625158309936523

Token 133: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07077299058437347
    2. '
' → logprob: -2.695772886276245
    3. ')' → logprob: -7.945773124694824
    4. '<|end|>' → logprob: -8.320773124694824
    5. ' print' → logprob: -9.070773124694824
    6. '\n' → logprob: -10.195773124694824
    7. '
' → logprob: -10.695773124694824
    8. '```' → logprob: -11.320773124694824
    9. '  
' → logprob: -11.570773124694824
    10. 'for' → logprob: -12.195773124694824

Token 134: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037095772568136454
    2. '
' → logprob: -5.75370979309082
    3. ')' → logprob: -7.87870979309082
    4. ' print' → logprob: -9.37870979309082
    5. '```' → logprob: -10.12870979309082
    6. ')
' → logprob: -11.87870979309082
    7. '\n' → logprob: -12.00370979309082
    8. '<|end|>' → logprob: -12.12870979309082
    9. 'for' → logprob: -13.37870979309082
    10. '
' → logprob: -13.50370979309082

Token 135: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005538671393878758
    2. '(' → logprob: -7.500554084777832
    3. 'dp' → logprob: -14.500554084777832
    4. ' (' → logprob: -16.000553131103516
    5. '(
' → logprob: -17.000553131103516
    6. '(max' → logprob: -17.750553131103516
    7. '(dc' → logprob: -17.875553131103516
    8. '(sum' → logprob: -18.125553131103516
    9. '(df' → logprob: -18.125553131103516
    10. ' dp' → logprob: -18.125553131103516

Token 136: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.04858816787600517
    2. '[-' → logprob: -3.048588275909424
    3. '(N' → logprob: -14.673587799072266
    4. '[len' → logprob: -16.048587799072266
    5. '[n' → logprob: -16.298587799072266
    6. '[' → logprob: -16.673587799072266
    7. 'N' → logprob: -17.298587799072266
    8. ')' → logprob: -17.673587799072266
    9. '[i' → logprob: -18.548587799072266
    10. ' [-' → logprob: -19.673587799072266

Token 137: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.47473955154418945
    2. ')' → logprob: -0.9747395515441895
    3. '))' → logprob: -7.9747395515441895
    4. '})' → logprob: -8.474739074707031
    5. ']' → logprob: -10.349739074707031
    6. '>)' → logprob: -11.099739074707031
    7. '）' → logprob: -11.349739074707031
    8. ')
' → logprob: -11.349739074707031
    9. ')])' → logprob: -11.849739074707031
    10. ')]' → logprob: -12.099739074707031


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 135
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 57.04%
Précision adaptée (1ère position): 61.48%
Précision (top 10): 89.63%
================================================================================
