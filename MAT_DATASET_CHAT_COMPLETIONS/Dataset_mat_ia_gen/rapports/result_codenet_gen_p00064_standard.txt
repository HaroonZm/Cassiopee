================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re

total = 0
for line in sys.stdin:
    total += sum(map(int, re.findall(r'\d+', line)))
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0004311460361350328
    2. 'os' → logprob: -7.750431060791016
    3. ' re' → logprob: -15.875431060791016
    4. '"os' → logprob: -16.250431060791016
    5. '_os' → logprob: -16.375431060791016
    6. ' math' → logprob: -16.500431060791016
    7. ' json' → logprob: -17.000431060791016
    8. '	os' → logprob: -17.625431060791016
    9. ' argparse' → logprob: -18.750431060791016
    10. ' o' → logprob: -19.000431060791016

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06305448710918427
    2. 'import' → logprob: -3.6880545616149902
    3. '```' → logprob: -4.81305456161499
    4. '.' → logprob: -4.93805456161499
    5. '\' → logprob: -4.93805456161499
    6. '

' → logprob: -5.81305456161499
    7. '
' → logprob: -5.81305456161499
    8. '[' → logprob: -6.06305456161499
    9. '<|end|>' → logprob: -6.68805456161499
    10. 'newline' → logprob: -7.06305456161499

Token 6: 'total' (ID: 9577)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5360608100891113
    2. 'import' → logprob: -1.9110608100891113
    3. '^' → logprob: -2.6610608100891113
    4. '```' → logprob: -2.9110608100891113
    5. '\n' → logprob: -3.0360608100891113
    6. 'pattern' → logprob: -3.4110608100891113
    7. '[' → logprob: -4.661060810089111
    8. 'data' → logprob: -4.911060810089111
    9. 'for' → logprob: -5.286060810089111
    10. '#' → logprob: -5.286060810089111

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09221556782722473
    2. '_count' → logprob: -3.2172155380249023
    3. ' =' → logprob: -4.342215538024902
    4. '.' → logprob: -4.342215538024902
    5. '_size' → logprob: -5.592215538024902
    6. '=' → logprob: -5.717215538024902
    7. '_counts' → logprob: -6.217215538024902
    8. '_sum' → logprob: -6.342215538024902
    9. '_lines' → logprob: -6.467215538024902
    10. '_amount' → logprob: -6.467215538024902

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759449005126953
    2. '0' → logprob: -0.8259449005126953
    3. 'int' → logprob: -12.700944900512695
    4. ' int' → logprob: -14.700944900512695
    5. ' ' → logprob: -14.825944900512695
    6. '100' → logprob: -15.325944900512695
    7. 're' → logprob: -15.325944900512695
    8. '  ' → logprob: -15.450944900512695
    9. '1' → logprob: -15.450944900512695
    10. 'sum' → logprob: -15.950944900512695

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.125017166137695
    3. 'int' → logprob: -13.250017166137695
    4. '100' → logprob: -16.625017166137695
    5. 're' → logprob: -17.500017166137695
    6. '1' → logprob: -17.625017166137695
    7. '10' → logprob: -17.750017166137695
    8. '{}' → logprob: -17.875017166137695
    9. 'sum' → logprob: -18.500017166137695
    10. '"' → logprob: -18.750017166137695

Token 10: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25924766063690186
    2. '\n' → logprob: -2.0092477798461914
    3. '\' → logprob: -2.8842477798461914
    4. ' for' → logprob: -4.384247779846191
    5. '
' → logprob: -5.009247779846191
    6. '.' → logprob: -5.259247779846191
    7. '```' → logprob: -5.884247779846191
    8. 'newline' → logprob: -6.134247779846191
    9. '' → logprob: -6.384247779846191
    10. '<|end|>' → logprob: -6.509247779846191

Token 11: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11156544089317322
    2. 'for' → logprob: -3.111565351486206
    3. '+' → logprob: -3.861565351486206
    4. '\' → logprob: -4.361565589904785
    5. 'newline' → logprob: -4.736565589904785
    6. '
' → logprob: -5.111565589904785
    7. ' ' → logprob: -6.236565589904785
    8. 'n' → logprob: -6.361565589904785
    9. '_' → logprob: -6.611565589904785
    10. '.' → logprob: -6.861565589904785

Token 12: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09341605752706528
    2. ' line' → logprob: -3.2184159755706787
    3. ' i' → logprob: -3.5934159755706787
    4. ' item' → logprob: -4.218416213989258
    5. ' token' → logprob: -5.843416213989258
    6. '  ' → logprob: -6.218416213989258
    7. ' word' → logprob: -7.093416213989258
    8. ' file' → logprob: -8.593416213989258
    9. ' _' → logprob: -8.718416213989258
    10. ' filename' → logprob: -8.968416213989258

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02688256837427616
    2. 'in' → logprob: -3.6518826484680176
    3. ' ' → logprob: -7.651882648468018
    4. '  ' → logprob: -10.90188217163086
    5. '<|end|>' → logprob: -11.02688217163086
    6. '[' → logprob: -11.27688217163086
    7. 'import' → logprob: -11.40188217163086
    8. '```' → logprob: -11.65188217163086
    9. ':' → logprob: -12.15188217163086
    10. ',' → logprob: -12.27688217163086

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12709935009479523
    2. 'sys' → logprob: -2.1270992755889893
    3. '=sys' → logprob: -10.12709903717041
    4. '(sys' → logprob: -10.25209903717041
    5. ' ' → logprob: -11.12709903717041
    6. ' iter' → logprob: -11.37709903717041
    7. '	sys' → logprob: -11.50209903717041
    8. 'in' → logprob: -11.62709903717041
    9. ' in' → logprob: -11.75209903717041
    10. '```' → logprob: -11.87709903717041

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5860639214515686
    2. '.' → logprob: -0.8360639214515686
    3. '.readline' → logprob: -5.461063861846924
    4. '.stdout' → logprob: -5.711063861846924
    5. '.argv' → logprob: -6.086063861846924
    6. ' .' → logprob: -9.711064338684082
    7. '.std' → logprob: -9.836064338684082
    8. '.input' → logprob: -10.211064338684082
    9. '.stderr' → logprob: -10.711064338684082
    10. '.path' → logprob: -11.211064338684082

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000522650487255305
    2. '.' → logprob: -8.00052261352539
    3. ' :' → logprob: -10.25052261352539
    4. '.:' → logprob: -10.25052261352539
    5. ':**' → logprob: -10.50052261352539
    6. '[:]' → logprob: -10.50052261352539
    7. ':
' → logprob: -10.87552261352539
    8. '.readline' → logprob: -11.00052261352539
    9. '':' → logprob: -12.50052261352539
    10. '   ' → logprob: -13.00052261352539

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03290565684437752
    2. ' total' → logprob: -4.032905578613281
    3. ' ' → logprob: -4.532905578613281
    4. 'total' → logprob: -6.907905578613281
    5. '    
' → logprob: -7.407905578613281
    6. '    ' → logprob: -7.407905578613281
    7. '<|end|>' → logprob: -7.657905578613281
    8. ' if' → logprob: -7.782905578613281
    9. '  ' → logprob: -8.157905578613281
    10. ' 
' → logprob: -9.282905578613281

Token 18: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37067022919654846
    2. ' line' → logprob: -2.1206703186035156
    3. ' total' → logprob: -2.4956703186035156
    4. ' match' → logprob: -3.1206703186035156
    5. ' if' → logprob: -3.7456703186035156
    6. 'total' (adapté à ' total') → logprob: -3.8706703186035156
    7. 'match' → logprob: -5.245670318603516
    8. '    ' → logprob: -5.745670318603516
    9. ' matches' → logprob: -5.870670318603516
    10. 'line' → logprob: -5.995670318603516

Token 19: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0016241183038800955
    2. '+=' → logprob: -6.62662410736084
    3. '+' → logprob: -8.25162410736084
    4. ' ' → logprob: -11.00162410736084
    5. ' +' → logprob: -11.37662410736084
    6. '    ' → logprob: -12.50162410736084
    7. '+='' → logprob: -14.12662410736084
    8. ' -=' → logprob: -14.12662410736084
    9. '   ' → logprob: -14.37662410736084
    10. ' =' → logprob: -14.75162410736084

Token 20: ' sum' (ID: 4215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24558883905410767
    2. ' int' → logprob: -2.245588779449463
    3. '1' → logprob: -2.745588779449463
    4. 'len' → logprob: -3.370588779449463
    5. ' len' → logprob: -4.620588779449463
    6. ' ' → logprob: -6.245588779449463
    7. 'float' → logprob: -7.245588779449463
    8. 'line' → logprob: -8.245589256286621
    9. ' float' → logprob: -8.370589256286621
    10. ' line' → logprob: -8.995589256286621

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0879737064242363
    2. '(int' → logprob: -3.0879735946655273
    3. '(re' → logprob: -3.3379735946655273
    4. '(map' → logprob: -6.462973594665527
    5. '(ord' → logprob: -7.462973594665527
    6. '(list' → logprob: -7.587973594665527
    7. '(len' → logprob: -8.962973594665527
    8. '(line' → logprob: -9.212973594665527
    9. '((' → logprob: -10.087973594665527
    10. '(word' → logprob: -10.587973594665527

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014486778527498245
    2. '(' → logprob: -4.639486789703369
    3. '(ord' → logprob: -6.014486789703369
    4. '(lambda' → logprob: -6.264486789703369
    5. 'int' → logprob: -8.764486312866211
    6. '(abs' → logprob: -9.389486312866211
    7. '(len' → logprob: -9.764486312866211
    8. '(float' → logprob: -9.889486312866211
    9. '(str' → logprob: -12.139486312866211
    10. '(
' → logprob: -12.264486312866211

Token 23: ',' (ID: 11)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.004873773083090782
    2. '(' → logprob: -6.004873752593994
    3. ',' → logprob: -6.629873752593994
    4. ',re' → logprob: -7.129873752593994
    5. '(line' → logprob: -9.129874229431152
    6. 're' → logprob: -9.629874229431152
    7. ' (' → logprob: -9.879874229431152
    8. '(filter' → logprob: -11.254874229431152
    9. ')' → logprob: -11.504874229431152
    10. '```' → logprob: -12.129874229431152

Token 24: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.25307750701904297
    2. 're' → logprob: -1.503077507019043
    3. '   ' → logprob: -7.003077507019043
    4. ' ' → logprob: -9.628077507019043
    5. '  ' → logprob: -10.003077507019043
    6. '	re' → logprob: -10.128077507019043
    7. '(re' → logprob: -10.253077507019043
    8. ' filter' → logprob: -10.878077507019043
    9. 'filter' → logprob: -11.253077507019043
    10. ' line' → logprob: -11.628077507019043

Token 25: '.findall' (ID: 95997)
  Prédit: '.findall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.findall' → logprob: -0.00010902655776590109
    2. '\.' → logprob: -9.25010871887207
    3. '.find' → logprob: -12.37510871887207
    4. '.' → logprob: -12.50010871887207
    5. '.split' → logprob: -13.00010871887207
    6. '```' → logprob: -13.87510871887207
    7. '.search' → logprob: -14.25010871887207
    8. '.compile' → logprob: -15.25010871887207
    9. '``' → logprob: -15.62510871887207
    10. 'find' → logprob: -15.75010871887207

Token 26: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00929404515773058
    2. '('\' → logprob: -4.759294033050537
    3. 'r' → logprob: -7.759294033050537
    4. '   ' → logprob: -9.259294509887695
    5. '(' → logprob: -9.884294509887695
    6. ''\' → logprob: -10.259294509887695
    7. '('\\' → logprob: -10.884294509887695
    8. '\' → logprob: -11.009294509887695
    9. '('' → logprob: -11.634294509887695
    10. '\(' → logprob: -12.009294509887695

Token 27: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.006757170893251896
    2. '"\' → logprob: -5.5067572593688965
    3. '('\' → logprob: -6.2567572593688965
    4. 'r' → logprob: -8.381756782531738
    5. '(r' → logprob: -8.631756782531738
    6. ''-' → logprob: -8.756756782531738
    7. ''' → logprob: -9.256756782531738
    8. '\d' → logprob: -9.756756782531738
    9. '"' → logprob: -11.381756782531738
    10. '("\' → logprob: -12.131756782531738

Token 28: 'd' (ID: 67)
  Prédit: '\d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\d' → logprob: -0.21897998452186584
    2. ''\' → logprob: -1.7189799547195435
    3. ''-' → logprob: -4.718979835510254
    4. '\b' → logprob: -5.593979835510254
    5. '-' → logprob: -5.718979835510254
    6. 'd' → logprob: -7.593979835510254
    7. '"\' → logprob: -7.968979835510254
    8. '\-' → logprob: -8.718979835510254
    9. '\' → logprob: -9.093979835510254
    10. '-\' → logprob: -9.343979835510254

Token 29: '+',' (ID: 141314)
  Prédit: '+','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+',' → logprob: -0.10114951431751251
    2. '+' → logprob: -2.351149559020996
    3. '+'' → logprob: -7.101149559020996
    4. '+\' → logprob: -9.351149559020996
    5. '+')' → logprob: -10.601149559020996
    6. '+'\' → logprob: -12.976149559020996
    7. '+'.' → logprob: -13.226149559020996
    8. '+
' → logprob: -14.601149559020996
    9. '+",' → logprob: -14.851149559020996
    10. '+,' → logprob: -14.976149559020996

Token 30: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.026357775554060936
    2. ' line' → logprob: -3.651357889175415
    3. '   ' → logprob: -10.026357650756836
    4. '(line' → logprob: -11.901357650756836
    5. '	line' → logprob: -13.151357650756836
    6. '#line' → logprob: -13.776357650756836
    7. '[line' → logprob: -13.776357650756836
    8. ' ' → logprob: -14.401357650756836
    9. '```' → logprob: -14.776357650756836
    10. '=line' → logprob: -14.901357650756836

Token 31: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0007329129730351269
    2. ')' → logprob: -8.125733375549316
    3. '))' → logprob: -8.875733375549316
    4. ')))
' → logprob: -8.875733375549316
    5. '))))' → logprob: -8.875733375549316
    6. ' ' → logprob: -12.250733375549316
    7. '')))' → logprob: -12.250733375549316
    8. '   ' → logprob: -12.500733375549316
    9. ')))

' → logprob: -13.250733375549316
    10. ')));' → logprob: -13.750733375549316

Token 32: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.868328920158092e-05
    2. ' print' → logprob: -10.875028610229492
    3. '```' → logprob: -12.500028610229492
    4. '
' → logprob: -12.625028610229492
    5. '<|end|>' → logprob: -13.500028610229492
    6. '#print' → logprob: -15.000028610229492
    7. '#' → logprob: -15.125028610229492
    8. '  
' → logprob: -15.375028610229492
    9. '    
' → logprob: -15.625028610229492
    10. '\n' → logprob: -16.250028610229492

Token 33: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006933470256626606
    2. '(total' → logprob: -5.006933689117432
    3. '('' → logprob: -8.631933212280273
    4. '("("' → logprob: -10.631933212280273
    5. '(f' → logprob: -11.756933212280273
    6. ' (' → logprob: -13.006933212280273
    7. '(`' → logprob: -13.881933212280273
    8. '(
' → logprob: -14.256933212280273
    9. '(

' → logprob: -14.506933212280273
    10. '()' → logprob: -14.756933212280273

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001126026691053994
    2. '))' → logprob: -9.125112533569336
    3. ' )' → logprob: -12.750112533569336
    4. ')
' → logprob: -15.500112533569336
    5. ')))' → logprob: -15.875112533569336
    6. '`)' → logprob: -15.875112533569336
    7. ')`' → logprob: -16.000112533569336
    8. '})' → logprob: -17.750112533569336
    9. '())' → logprob: -17.875112533569336
    10. '()' → logprob: -18.250112533569336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 46.88%
Précision adaptée (1ère position): 46.88%
Précision (top 10): 93.75%
================================================================================
