================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:04:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
submitted = {int(input()) for _ in range(28)}
all_students = set(range(1, 31))
not_submitted = sorted(all_students - submitted)
print(not_submitted[0])
print(not_submitted[1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'submitted' (ID: 148545)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' {' (ID: 354)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.38985297083854675
    2. ''' → logprob: -1.6398530006408691
    3. ''user' → logprob: -2.639853000640869
    4. '"user' → logprob: -4.014853000640869
    5. ''s' → logprob: -4.389853000640869
    6. ''}' → logprob: -4.389853000640869
    7. '"' → logprob: -5.389853000640869
    8. '   ' → logprob: -5.889853000640869
    9. '"}' → logprob: -6.264853000640869
    10. ''name' → logprob: -6.889853000640869

Token 4: '(input' (ID: 10054)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1313310861587524
    2. '}' → logprob: -1.5063310861587524
    3. ':' → logprob: -1.6313310861587524
    4. '(' → logprob: -2.256330966949463
    5. '('_' → logprob: -3.256330966949463
    6. 's' → logprob: -4.006330966949463
    7. ''s' → logprob: -4.131330966949463
    8. ''' → logprob: -4.131330966949463
    9. ',' → logprob: -4.506330966949463
    10. ''}' → logprob: -4.631330966949463

Token 5: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08747479319572449
    2. '(' → logprob: -3.212474822998047
    3. '('' → logprob: -4.087474822998047
    4. '())' → logprob: -4.587474822998047
    5. ')}' → logprob: -4.712474822998047
    6. '')' → logprob: -5.462474822998047
    7. '))' → logprob: -6.587474822998047
    8. '")' → logprob: -7.212474822998047
    9. ' )' → logprob: -8.587474822998047
    10. ''' → logprob: -8.962474822998047

Token 6: ' for' (ID: 395)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.025238893926143646
    2. ',' → logprob: -3.9002389907836914
    3. ')' → logprob: -6.275238990783691
    4. ')}' → logprob: -6.650238990783691
    5. ':' → logprob: -7.775238990783691
    6. ' }' → logprob: -7.900238990783691
    7. ' for' → logprob: -8.525238990783691
    8. ',
' → logprob: -8.900238990783691
    9. '})' → logprob: -9.025238990783691
    10. '`}' → logprob: -10.150238990783691

Token 7: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16240131855010986
    2. ' input' → logprob: -2.2874011993408203
    3. ' range' → logprob: -3.0374011993408203
    4. 'input' → logprob: -9.16240119934082
    5. 'range' → logprob: -9.91240119934082
    6. ' item' → logprob: -10.16240119934082
    7. ' data' → logprob: -10.28740119934082
    8. ' s' → logprob: -10.41240119934082
    9. ' iter' → logprob: -10.53740119934082
    10. ' a' → logprob: -10.91240119934082

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033763842657208443
    2. 'in' → logprob: -6.128376483917236
    3. ' range' → logprob: -7.378376483917236
    4. ' ' → logprob: -7.878376483917236
    5. 'range' → logprob: -8.628376007080078
    6. '_' → logprob: -12.878376007080078
    7. '<|end|>' → logprob: -13.378376007080078
    8. '_range' → logprob: -13.753376007080078
    9. ' _' → logprob: -14.628376007080078
    10. ' xrange' → logprob: -14.940876007080078

Token 9: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029751067981123924
    2. 'range' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.90475082397461
    4. '	range' → logprob: -15.52975082397461
    5. '_range' → logprob: -17.52975082397461
    6. ' ran' → logprob: -18.15475082397461
    7. ' xrange' → logprob: -18.27975082397461
    8. '(range' → logprob: -18.90475082397461
    9. '"' → logprob: -19.02975082397461
    10. 'Range' → logprob: -19.40475082397461

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004678497789427638
    2. ' (' → logprob: -7.750467777252197
    3. '(
' → logprob: -10.750468254089355
    4. '(int' → logprob: -12.375468254089355
    5. '(len' → logprob: -12.625468254089355
    6. '(n' → logprob: -13.000468254089355
    7. '(

' → logprob: -13.125468254089355
    8. '```' → logprob: -13.875468254089355
    9. '<|end|>' → logprob: -15.000468254089355
    10. '(
' → logprob: -15.125468254089355

Token 11: '28' (ID: 2029)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.27166977524757385
    2. '5' → logprob: -2.146669864654541
    3. ' int' → logprob: -2.771669864654541
    4. '10' → logprob: -3.271669864654541
    5. 'n' → logprob: -4.771669864654541
    6. '3' → logprob: -4.896669864654541
    7. '7' → logprob: -6.521669864654541
    8. ')' → logprob: -6.771669864654541
    9. ' ' → logprob: -7.771669864654541
    10. '6' → logprob: -8.521669387817383

Token 12: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00282413512468338
    2. '}' → logprob: -6.127824306488037
    3. ')' → logprob: -7.502824306488037
    4. '})' → logprob: -9.627823829650879
    5. ');}' → logprob: -12.127823829650879
    6. ' )' → logprob: -12.502823829650879
    7. '")}' → logprob: -12.877823829650879
    8. ',' → logprob: -12.877823829650879
    9. '))' → logprob: -13.252823829650879
    10. ' }' → logprob: -14.127823829650879

Token 13: 'all' (ID: 586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.27711939811706543
    2. ',' → logprob: -2.9021193981170654
    3. ')' → logprob: -3.1521193981170654
    4. '```' → logprob: -3.5271193981170654
    5. 'newline' → logprob: -3.5271193981170654
    6. '\' → logprob: -4.5271196365356445
    7. '.' → logprob: -4.6521196365356445
    8. 'print' → logprob: -4.7771196365356445
    9. ' ' → logprob: -4.9021196365356445
    10. '(' → logprob: -4.9021196365356445

Token 14: '_students' (ID: 190132)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.248517394065857
    2. '(' → logprob: -1.998517394065857
    3. '_s' → logprob: -1.998517394065857
    4. '_' → logprob: -1.998517394065857
    5. '_students' → logprob: -2.2485175132751465
    6. '_numbers' → logprob: -3.2485175132751465
    7. '_nums' → logprob: -3.7485175132751465
    8. '_part' → logprob: -4.3735175132751465
    9. '_scores' → logprob: -4.4985175132751465
    10. '_tasks' → logprob: -4.4985175132751465

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004087897017598152
    2. '=' → logprob: -5.504087924957275
    3. ' ' → logprob: -12.754087448120117
    4. '_' → logprob: -12.879087448120117
    5. '<|end|>' → logprob: -13.629087448120117
    6. ' =
' → logprob: -14.254087448120117
    7. '.' → logprob: -14.629087448120117
    8. 's' → logprob: -15.129087448120117
    9. '=set' → logprob: -15.379087448120117
    10. '_=' → logprob: -15.629087448120117

Token 16: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5622918009757996
    2. ' set' → logprob: -1.1872918605804443
    3. '{' → logprob: -2.5622918605804443
    4. ' {' → logprob: -3.0622918605804443
    5. '(set' → logprob: -7.187291622161865
    6. '   ' → logprob: -8.812292098999023
    7. ' ' → logprob: -9.062292098999023
    8. '=set' → logprob: -10.687292098999023
    9. '{sub' → logprob: -11.187292098999023
    10. '	set' → logprob: -11.312292098999023

Token 17: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.750029563903809
    3. '(i' → logprob: -12.125029563903809
    4. '([' → logprob: -14.000029563903809
    5. '()' → logprob: -14.125029563903809
    6. '({' → logprob: -14.625029563903809
    7. '((' → logprob: -14.750029563903809
    8. 'range' → logprob: -15.000029563903809
    9. '```' → logprob: -16.000030517578125
    10. '(list' → logprob: -16.000030517578125

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -13.750000953674316
    3. '1' → logprob: -16.500001907348633
    4. '(
' → logprob: -16.875001907348633
    5. ')' → logprob: -20.250001907348633
    6. '(-' → logprob: -20.875001907348633
    7. ')(' → logprob: -21.500001907348633
    8. '```' → logprob: -21.500001907348633
    9. ',' → logprob: -22.000001907348633
    10. ' ' → logprob: -22.625001907348633

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031270162435248494
    2. '(' → logprob: -8.500312805175781
    3. '30' → logprob: -10.000312805175781
    4. ' ' → logprob: -10.250312805175781
    5. '31' → logprob: -11.125312805175781
    6. '2' → logprob: -12.875312805175781
    7. '```' → logprob: -12.875312805175781
    8. '11' → logprob: -13.500312805175781
    9. '0' → logprob: -13.875312805175781
    10. '   ' → logprob: -14.000312805175781

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002941095153801143
    2. ' ,' → logprob: -8.875293731689453
    3. '1' → logprob: -9.375293731689453
    4. '26' → logprob: -11.750293731689453
    5. '30' → logprob: -12.000293731689453
    6. '36' → logprob: -12.000293731689453
    7. '29' → logprob: -12.125293731689453
    8. '40' → logprob: -12.500293731689453
    9. '42' → logprob: -12.500293731689453
    10. '27' → logprob: -12.875293731689453

Token 21: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.00015062130114529282
    2. '30' → logprob: -8.875150680541992
    3. '32' → logprob: -12.250150680541992
    4. '29' → logprob: -12.875150680541992
    5. '101' → logprob: -13.625150680541992
    6. '51' → logprob: -14.625150680541992
    7. '301' → logprob: -14.750150680541992
    8. '33' → logprob: -15.500150680541992
    9. '```' → logprob: -15.500150680541992
    10. '{' → logprob: -15.500150680541992

Token 22: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -4.23917081207037e-05
    2. '30' → logprob: -10.125041961669922
    3. '32' → logprob: -14.000041961669922
    4. '101' → logprob: -14.500041961669922
    5. '{' → logprob: -14.750041961669922
    6. '```' → logprob: -15.875041961669922
    7. '51' → logprob: -16.500041961669922
    8. '301' → logprob: -16.750041961669922
    9. '`' → logprob: -17.125041961669922
    10. '29' → logprob: -17.375041961669922

Token 23: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3602200448513031
    2. '))' → logprob: -1.3602200746536255
    3. ')}' → logprob: -3.110219955444336
    4. '})' → logprob: -6.985219955444336
    5. '+' → logprob: -8.610219955444336
    6. '}' → logprob: -8.985219955444336
    7. ')))' → logprob: -11.110219955444336
    8. ' )' → logprob: -11.235219955444336
    9. ')}}' → logprob: -12.485219955444336
    10. '}))' → logprob: -13.235219955444336

Token 24: 'not' (ID: 2878)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3563189208507538
    2. '.' → logprob: -2.356318950653076
    3. '
' → logprob: -2.481318950653076
    4. ''\' → logprob: -3.981318950653076
    5. '```' → logprob: -3.981318950653076
    6. '<|end|>' → logprob: -4.606318950653076
    7. '\' → logprob: -4.731318950653076
    8. '.
' → logprob: -4.731318950653076
    9. 'difference' → logprob: -4.731318950653076
    10. 'print' → logprob: -5.606318950653076

Token 25: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.01133604533970356
    2. '_' → logprob: -4.511335849761963
    3. '_s' → logprob: -8.886336326599121
    4. '_in' → logprob: -9.261336326599121
    5. '_submit' → logprob: -10.261336326599121
    6. '_registered' → logprob: -12.886336326599121
    7. '_taken' → logprob: -12.886336326599121
    8. '_completed' → logprob: -13.386336326599121
    9. '_enter' → logprob: -13.636336326599121
    10. 'sub' → logprob: -13.761336326599121

Token 26: 'mitted' (ID: 10391)
  Prédit: 'mitted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mitted' → logprob: -0.18211400508880615
    2. '_m' → logprob: -2.3071141242980957
    3. '```' → logprob: -2.9321141242980957
    4. '_' → logprob: -6.057114124298096
    5. '   ' → logprob: -6.057114124298096
    6. 'm' → logprob: -6.557114124298096
    7. 'mitting' → logprob: -6.932114124298096
    8. '__' → logprob: -7.057114124298096
    9. ' =' → logprob: -7.557114124298096
    10. 'itted' → logprob: -7.932114124298096

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054898083209991455
    2. '=' → logprob: -2.9298980236053467
    3. ' ' → logprob: -12.054898262023926
    4. '_' → logprob: -12.929898262023926
    5. ' =
' → logprob: -13.054898262023926
    6. 's' → logprob: -13.054898262023926
    7. ' =
' → logprob: -13.804898262023926
    8. ')' → logprob: -14.054898262023926
    9. '=sub' → logprob: -15.429898262023926
    10. '=set' → logprob: -15.679898262023926

Token 28: ' sorted' (ID: 20099)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.10025627166032791
    2. 'all' → logprob: -2.3502562046051025
    3. ' submitted' → logprob: -10.350255966186523
    4. ' ' → logprob: -11.600255966186523
    5. '(all' → logprob: -11.850255966186523
    6. 'submitted' → logprob: -13.850255966186523
    7. '_all' → logprob: -16.475255966186523
    8. ' (' → logprob: -16.475255966186523
    9. '	all' → logprob: -16.600255966186523
    10. ''all' → logprob: -16.850255966186523

Token 29: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.0023346166126430035
    2. '(sub' → logprob: -6.2523345947265625
    3. '(' → logprob: -7.8773345947265625
    4. '(not' → logprob: -11.002334594726562
    5. '((' → logprob: -12.877334594726562
    6. '(list' → logprob: -13.252334594726562
    7. 'all' → logprob: -13.252334594726562
    8. '(s' → logprob: -13.752334594726562
    9. '(All' → logprob: -14.002334594726562
    10. ' (' → logprob: -14.502334594726562

Token 30: '_students' (ID: 190132)
  Prédit: '_students'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_students' → logprob: -3.273621405242011e-05
    2. '_st' → logprob: -11.375032424926758
    3. 'students' → logprob: -11.500032424926758
    4. '-st' → logprob: -12.625032424926758
    5. '-_' → logprob: -12.750032424926758
    6. '_' → logprob: -13.625032424926758
    7. '_sub' → logprob: -13.625032424926758
    8. 'Students' → logprob: -14.375032424926758
    9. '_-' → logprob: -14.500032424926758
    10. '-' → logprob: -15.000032424926758

Token 31: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4742196798324585
    2. ' -' → logprob: -0.9742196798324585
    3. ')' → logprob: -9.22421932220459
    4. ' ' → logprob: -10.34921932220459
    5. '-d' → logprob: -13.22421932220459
    6. '   ' → logprob: -13.34921932220459
    7. '-sub' → logprob: -13.34921932220459
    8. ' -
' → logprob: -13.84921932220459
    9. ' ' → logprob: -13.97421932220459
    10. '-
' → logprob: -13.97421932220459

Token 32: ' submitted' (ID: 19847)
  Prédit: 'submitted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'submitted' → logprob: -0.03371267020702362
    2. ' submitted' → logprob: -3.40871262550354
    3. 'sub' → logprob: -10.033712387084961
    4. 'submit' → logprob: -11.158712387084961
    5. ' ' → logprob: -12.283712387084961
    6. '   ' → logprob: -13.908712387084961
    7. '	sub' → logprob: -14.783712387084961
    8. ' ' → logprob: -14.908712387084961
    9. 'substr' → logprob: -15.096212387084961
    10. 'submission' → logprob: -15.283712387084961

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017894209595397115
    2. '})' → logprob: -6.626789569854736
    3. '}' → logprob: -7.876789569854736
    4. ')}' → logprob: -9.626789093017578
    5. '))' → logprob: -11.626789093017578
    6. '`)' → logprob: -13.001789093017578
    7. ')`' → logprob: -13.001789093017578
    8. ' )' → logprob: -13.876789093017578
    9. ')
' → logprob: -13.876789093017578
    10. '）' → logprob: -14.001789093017578

Token 34: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12444209307432175
    2. 'print' → logprob: -2.3744421005249023
    3. '[' → logprob: -4.749442100524902
    4. 'for' → logprob: -5.749442100524902
    5. ':' → logprob: -5.874442100524902
    6. '()' → logprob: -6.624442100524902
    7. '(' → logprob: -6.749442100524902
    8. ')
' → logprob: -6.874442100524902
    9. '[:]' → logprob: -6.874442100524902
    10. '```' → logprob: -6.999442100524902

Token 35: '(not' (ID: 44576)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048662420362234116
    2. '(not' → logprob: -3.1736624240875244
    3. '("("' → logprob: -5.548662185668945
    4. '('' → logprob: -6.673662185668945
    5. '(len' → logprob: -8.798662185668945
    6. '(*' → logprob: -9.048662185668945
    7. '((' → logprob: -9.298662185668945
    8. '(f' → logprob: -10.048662185668945
    9. '(list' → logprob: -10.548662185668945
    10. '("(' → logprob: -11.798662185668945

Token 36: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.00000286102295
    3. '_s' → logprob: -14.75000286102295
    4. '_submit' → logprob: -15.75000286102295
    5. 'submitted' → logprob: -16.375003814697266
    6. '_not' → logprob: -16.875003814697266
    7. '_students' → logprob: -17.125003814697266
    8. '_SUB' → logprob: -17.500003814697266
    9. '_sent' → logprob: -17.500003814697266
    10. '_)' → logprob: -17.750003814697266

Token 37: 'mitted' (ID: 10391)
  Prédit: 'mitted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mitted' → logprob: -0.027293873950839043
    2. 'itted' → logprob: -3.6522939205169678
    3. 'm' → logprob: -7.777293682098389
    4. '```' → logprob: -7.902293682098389
    5. '_m' → logprob: -10.652294158935547
    6. 'ed' → logprob: -11.027294158935547
    7. '_' → logprob: -11.277294158935547
    8. ')' → logprob: -11.402294158935547
    9. 'mi' → logprob: -11.402294158935547
    10. '   ' → logprob: -11.777294158935547

Token 38: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001932205050252378
    2. '))' → logprob: -6.251932144165039
    3. '`)' → logprob: -13.751932144165039
    4. '])' → logprob: -14.001932144165039
    5. '')' → logprob: -14.626932144165039
    6. ')")' → logprob: -15.001932144165039
    7. '})' → logprob: -15.251932144165039
    8. ')))' → logprob: -15.626932144165039
    9. ' )' → logprob: -15.626932144165039
    10. ')`' → logprob: -15.751932144165039

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002593130338937044
    2. ' ' → logprob: -8.375259399414062
    3. ')' → logprob: -11.625259399414062
    4. '2' → logprob: -11.750259399414062
    5. '])' → logprob: -12.375259399414062
    6. '1' → logprob: -12.750259399414062
    7. ':' → logprob: -13.125259399414062
    8. '-' → logprob: -13.750259399414062
    9. ']' → logprob: -14.500259399414062
    10. '3' → logprob: -15.875259399414062

Token 40: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005130100063979626
    2. ')' → logprob: -5.380130290985107
    3. ']' → logprob: -7.755130290985107
    4. ' ])' → logprob: -9.88012981414795
    5. '])
' → logprob: -11.63012981414795
    6. '],' → logprob: -12.00512981414795
    7. ')])' → logprob: -12.00512981414795
    8. '))' → logprob: -13.50512981414795
    9. ')]' → logprob: -13.63012981414795
    10. ']])' → logprob: -13.75512981414795

Token 41: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6097411513328552
    2. '<|end|>' → logprob: -0.9847411513328552
    3. '\n' → logprob: -3.4847412109375
    4. ',' → logprob: -4.1097412109375
    5. '```' → logprob: -4.3597412109375
    6. '
' → logprob: -4.7347412109375
    7. 'print' → logprob: -6.1097412109375
    8. ',
' → logprob: -6.4847412109375
    9. '0' → logprob: -6.6097412109375
    10. '<|end|>' → logprob: -6.8597412109375

Token 42: '(not' (ID: 44576)
  Prédit: '(not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.2015535682439804
    2. '(' → logprob: -1.7015535831451416
    3. '('' → logprob: -9.201553344726562
    4. '("("' → logprob: -10.576553344726562
    5. 'not' → logprob: -11.951553344726562
    6. '(
' → logprob: -12.826553344726562
    7. '()' → logprob: -13.326553344726562
    8. ' (' → logprob: -14.951553344726562
    9. '(

' → logprob: -14.951553344726562
    10. '((' → logprob: -14.951553344726562

Token 43: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.2200749754119897e-06
    2. '_not' → logprob: -13.375001907348633
    3. 'sub' → logprob: -15.500001907348633
    4. 'not' → logprob: -15.750001907348633
    5. '_s' → logprob: -16.000001907348633
    6. '_' → logprob: -16.125001907348633
    7. '_SUB' → logprob: -16.750001907348633
    8. 'submitted' → logprob: -17.750001907348633
    9. '_Sub' → logprob: -19.125001907348633
    10. '(sub' → logprob: -19.500001907348633

Token 44: 'mitted' (ID: 10391)
  Prédit: 'mitted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mitted' → logprob: -0.017482688650488853
    2. 'itted' → logprob: -4.142482757568359
    3. 'm' → logprob: -6.892482757568359
    4. '```' → logprob: -8.64248275756836
    5. 'b' → logprob: -10.01748275756836
    6. '[' → logprob: -10.01748275756836
    7. '_m' → logprob: -10.26748275756836
    8. '_' → logprob: -10.39248275756836
    9. 'ited' → logprob: -11.14248275756836
    10. '_b' → logprob: -11.51748275756836

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008055794751271605
    2. '])' → logprob: -7.500805377960205
    3. ']' → logprob: -8.375805854797363
    4. '[-' → logprob: -11.375805854797363
    5. ')' → logprob: -12.125805854797363
    6. '1' → logprob: -12.875805854797363
    7. ' [' → logprob: -14.000805854797363
    8. '][' → logprob: -14.750805854797363
    9. '   ' → logprob: -14.875805854797363
    10. '])
' → logprob: -14.875805854797363

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '])' → logprob: -11.750012397766113
    3. '-' → logprob: -13.000012397766113
    4. ' ' → logprob: -13.500012397766113
    5. ']' → logprob: -15.625012397766113
    6. '0' → logprob: -15.875012397766113
    7. ')' → logprob: -15.875012397766113
    8. '```' → logprob: -16.125011444091797
    9. '2' → logprob: -16.687511444091797
    10. '   ' → logprob: -17.187511444091797

Token 47: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.029774438589811325
    2. ')' → logprob: -3.5297744274139404
    3. '))' → logprob: -11.90477466583252
    4. '})' → logprob: -11.90477466583252
    5. ']' → logprob: -12.27977466583252
    6. ')])' → logprob: -12.90477466583252
    7. ''])' → logprob: -14.15477466583252
    8. '])
' → logprob: -14.40477466583252
    9. '>)' → logprob: -14.52977466583252
    10. ' ])' → logprob: -14.77977466583252


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 51.11%
Précision adaptée (1ère position): 51.11%
Précision (top 10): 75.56%
================================================================================
