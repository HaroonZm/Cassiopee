================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def solve(max_roll, n, moves):
    end = n + 1
    # Compute next position after rolling i from position pos (0=start)
    def next_pos(pos, roll):
        p = pos + roll
        if p > end:
            p = end
        else:
            if 1 <= p <= n:
                mv = moves[p-1]
                if mv != 0:
                    p2 = p + mv
                    if mv > 0 and p2 > end:
                        p2 = end
                    if mv < 0 and p2 < 0:
                        p2 = 0
                    p = p2
        if p > end:
            p = end
        if p < 0:
            p = 0
        return p

    from collections import deque
    # Build graph: from each node, edges to next positions by each roll
    graph = [[] for _ in range(end+1)]
    for pos in range(end+1):
        if pos == end:
            continue
        for roll in range(1, max_roll+1):
            np = next_pos(pos, roll)
            graph[pos].append(np)

    # Detect if starting from 0, can get stuck in cycle not reaching end
    # Use DFS with coloring: 0=unvisited,1=visiting,2=done
    color = [0]*(end+1)
    def dfs(u):
        if u == end:
            return False
        if color[u] == 1:
            return True
        if color[u] == 2:
            return False
        color[u] = 1
        for w in graph[u]:
            if dfs(w):
                return True
        color[u] = 2
        return False

    # Additionally check reachability to end from 0:
    # If no path to end, then "NG"
    visited = [False]*(end+1)
    q = deque([0])
    visited[0] = True
    while q:
        u = q.popleft()
        if u == end:
            break
        for w in graph[u]:
            if not visited[w]:
                visited[w] = True
                q.append(w)
    if not visited[end]:
        return "NG"

    # Check cycles reachable from 0 not containing end
    if dfs(0):
        return "NG"
    else:
        return "OK"

input = sys.stdin.readline
while True:
    line = input()
    if not line:
        break
    max_roll = int(line)
    if max_roll == 0:
        break
    n = int(input())
    moves = [int(input()) for _ in range(n)]
    print(solve(max_roll, n, moves))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.314270555973053
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.939270973205566
    5. ' limit' → logprob: -9.939270973205566
    6. 'lim' → logprob: -10.314270973205566
    7. '_stack' → logprob: -12.189270973205566
    8. '_lim' → logprob: -12.314270973205566
    9. '(limit' → logprob: -12.314270973205566
    10. '-limit' → logprob: -12.939270973205566

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1602897197008133
    2. '100' → logprob: -1.9102897644042969
    3. '300' → logprob: -10.910289764404297
    4. ' ' → logprob: -11.035289764404297
    5. '500' → logprob: -11.285289764404297
    6. '150' → logprob: -12.160289764404297
    7. '999' → logprob: -12.660289764404297
    8. '1' → logprob: -12.785289764404297
    9. '200' → logprob: -12.910289764404297
    10. '   ' → logprob: -13.285289764404297

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' solve' (ID: 17722)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.1688832938671112
    2. ' dfs' → logprob: -2.1688833236694336
    3. ' ' → logprob: -3.5438833236694336
    4. ' fibonacci' → logprob: -4.918883323669434
    5. ' factor' → logprob: -5.793883323669434
    6. ' f' → logprob: -7.918883323669434
    7. ' fib' → logprob: -8.043883323669434
    8. ' solve' → logprob: -8.543883323669434
    9. ' foo' → logprob: -9.043883323669434
    10. ' recursive' → logprob: -9.043883323669434

Token 15: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016018999740481377
    2. '_' → logprob: -4.266018867492676
    3. '():' → logprob: -7.141018867492676
    4. ':' → logprob: -8.516018867492676
    5. '(:' → logprob: -8.641018867492676
    6. ' (' → logprob: -8.891018867492676
    7. '```' → logprob: -9.266018867492676
    8. '(_' → logprob: -9.891018867492676
    9. '("("' → logprob: -10.016018867492676
    10. '_:' → logprob: -10.266018867492676

Token 16: '_roll' (ID: 121924)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.1754734069108963
    2. '_length' → logprob: -3.05047345161438
    3. '_n' → logprob: -3.92547345161438
    4. '_' → logprob: -4.050473213195801
    5. '_val' → logprob: -4.050473213195801
    6. '_value' → logprob: -4.175473213195801
    7. '_len' → logprob: -4.300473213195801
    8. '_count' → logprob: -5.300473213195801
    9. '_stack' → logprob: -5.675473213195801
    10. '_height' → logprob: -5.800473213195801

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.137082040309906
    2. 's' → logprob: -2.137082099914551
    3. ',' → logprob: -5.012082099914551
    4. ')' → logprob: -6.637082099914551
    5. '):
' → logprob: -7.137082099914551
    6. '=' → logprob: -8.13708209991455
    7. '):
' → logprob: -8.38708209991455
    8. '_' → logprob: -8.76208209991455
    9. '_count' → logprob: -9.13708209991455
    10. '_size' → logprob: -9.51208209991455

Token 18: ' n' (ID: 297)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4741392135620117
    2. ' n' → logprob: -1.5991392135620117
    3. ' dice' → logprob: -1.5991392135620117
    4. ' num' → logprob: -2.9741392135620117
    5. ' min' → logprob: -3.4741392135620117
    6. ' target' → logprob: -3.4741392135620117
    7. 'n' → logprob: -3.4741392135620117
    8. 'dice' → logprob: -3.7241392135620117
    9. ' sides' → logprob: -4.224139213562012
    10. 'num' → logprob: -4.224139213562012

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05922054871916771
    2. ')' → logprob: -2.934220552444458
    3. ',' → logprob: -5.559220314025879
    4. '=' → logprob: -8.559220314025879
    5. ':' → logprob: -8.934220314025879
    6. '_' → logprob: -10.184220314025879
    7. '):
' → logprob: -10.809220314025879
    8. ' ):' → logprob: -10.934220314025879
    9. 's' → logprob: -11.184220314025879
    10. '*' → logprob: -11.684220314025879

Token 20: ' moves' (ID: 19523)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.5717360973358154
    2. ' dice' → logprob: -1.6967360973358154
    3. ' k' → logprob: -2.5717360973358154
    4. ' rolls' → logprob: -2.9467360973358154
    5. ' p' → logprob: -3.0717360973358154
    6. ' faces' → logprob: -3.1967360973358154
    7. 'm' → logprob: -3.2592360973358154
    8. 'dice' → logprob: -3.5717360973358154
    9. ' target' → logprob: -3.6967360973358154
    10. ' current' → logprob: -3.9467360973358154

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003663212701212615
    2. ',' → logprob: -8.3753662109375
    3. ')' → logprob: -9.3753662109375
    4. '):
' → logprob: -10.3753662109375
    5. ' ):' → logprob: -12.1253662109375
    6. ':' → logprob: -12.3753662109375
    7. '_list' → logprob: -12.7503662109375
    8. '=' → logprob: -13.3753662109375
    9. '):
' → logprob: -13.5003662109375
    10. ' ' → logprob: -14.8753662109375

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5926711559295654
    2. '   ' → logprob: -0.8426711559295654
    3. '```' → logprob: -4.7176713943481445
    4. ':
' → logprob: -6.3426713943481445
    5. '\' → logprob: -6.5926713943481445
    6. '    ' → logprob: -6.7176713943481445
    7. '\n' → logprob: -6.9676713943481445
    8. ' ' → logprob: -7.9676713943481445
    9. '    
' → logprob: -7.9676713943481445
    10. ':\' → logprob: -8.217671394348145

Token 23: ' end' (ID: 1268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194354057312012
    2. '```' → logprob: -1.7694354057312012
    3. '
' → logprob: -2.019435405731201
    4. '\n' → logprob: -3.144435405731201
    5. '\' → logprob: -3.769435405731201
    6. '    
' → logprob: -4.519435405731201
    7. '    ' → logprob: -4.519435405731201
    8. ' 
' → logprob: -5.769435405731201
    9. ' indentation' → logprob: -6.519435405731201
    10. ' if' → logprob: -6.644435405731201

Token 24: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9577926993370056
    2. '=' → logprob: -1.0827927589416504
    3. ' =' → logprob: -1.3327927589416504
    4. '_pos' → logprob: -4.70779275894165
    5. ':' → logprob: -6.20779275894165
    6. '_position' → logprob: -7.58279275894165
    7. '_point' → logprob: -7.58279275894165
    8. ',' → logprob: -8.082792282104492
    9. ')' → logprob: -8.457792282104492
    10. 'point' → logprob: -8.957792282104492

Token 25: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2685340940952301
    2. ' max' → logprob: -1.6435340642929077
    3. ' ' → logprob: -4.268534183502197
    4. 'max' → logprob: -4.518534183502197
    5. 'n' → logprob: -4.643534183502197
    6. ' len' → logprob: -5.768534183502197
    7. ' (' → logprob: -6.143534183502197
    8. '0' → logprob: -7.643534183502197
    9. '100' → logprob: -8.018533706665039
    10. '10' → logprob: -8.393533706665039

Token 26: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.852478563785553
    2. '-' → logprob: -0.977478563785553
    3. '+' → logprob: -2.227478504180908
    4. ' +' → logprob: -3.227478504180908
    5. ' ' → logprob: -4.102478504180908
    6. '*' → logprob: -4.352478504180908
    7. ')' → logprob: -5.477478504180908
    8. ' *' → logprob: -5.602478504180908
    9. '
' → logprob: -5.602478504180908
    10. '**' → logprob: -6.227478504180908

Token 27: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6454325914382935
    2. '1' → logprob: -0.7704325914382935
    3. '2' → logprob: -5.395432472229004
    4. 'len' → logprob: -6.270432472229004
    5. '10' → logprob: -6.395432472229004
    6. '6' → logprob: -7.020432472229004
    7. ' max' → logprob: -7.020432472229004
    8. '5' → logprob: -7.395432472229004
    9. ' ' → logprob: -7.395432472229004
    10. '3' → logprob: -7.395432472229004

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5828968286514282
    2. 'max' → logprob: -0.8328968286514282
    3. '10' → logprob: -6.332896709442139
    4. '2' → logprob: -6.832896709442139
    5. '-' → logprob: -6.957896709442139
    6. '6' → logprob: -7.207896709442139
    7. '5' → logprob: -7.207896709442139
    8. 'len' → logprob: -8.207897186279297
    9. 'n' → logprob: -8.457897186279297
    10. 'moves' → logprob: -8.582897186279297

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08823774755001068
    2. ':' → logprob: -3.713237762451172
    3. '   ' → logprob: -4.213237762451172
    4. '
' → logprob: -4.463237762451172
    5. '    
' → logprob: -4.713237762451172
    6. '\n' → logprob: -5.338237762451172
    7. ')' → logprob: -5.838237762451172
    8. '' → logprob: -5.963237762451172
    9. ' 
' → logprob: -6.088237762451172
    10. '  
' → logprob: -6.338237762451172

Token 30: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18782353401184082
    2. '
' → logprob: -2.187823534011841
    3. '   ' → logprob: -3.437823534011841
    4. '    
' → logprob: -4.937823295593262
    5. ')' → logprob: -5.812823295593262
    6. '\n' → logprob: -5.937823295593262
    7. '' → logprob: -6.187823295593262
    8. '
' → logprob: -6.687823295593262
    9. '\' → logprob: -6.812823295593262
    10. '0' → logprob: -6.937823295593262

Token 31: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.181789755821228
    2. '
' → logprob: -1.306789755821228
    3. ' dp' → logprob: -1.556789755821228
    4. '   ' → logprob: -2.5567898750305176
    5. ':' → logprob: -2.9317898750305176
    6. ' DP' → logprob: -3.9317898750305176
    7. 'DP' → logprob: -4.681789875030518
    8. '    
' → logprob: -4.806789875030518
    9. 'def' → logprob: -5.181789875030518
    10. 'dist' → logprob: -5.306789875030518

Token 32: ' Compute' (ID: 45438)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3117872476577759
    2. 'dp' → logprob: -2.3117871284484863
    3. ' for' → logprob: -2.9367871284484863
    4. ' current' → logprob: -3.3117871284484863
    5. ' pos' → logprob: -4.061787128448486
    6. 'pos' → logprob: -4.311787128448486
    7. ' visited' → logprob: -4.811787128448486
    8. '   ' → logprob: -5.311787128448486
    9. ' position' → logprob: -5.311787128448486
    10. 'current' → logprob: -5.436787128448486

Token 33: ' next' (ID: 2613)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3734077513217926
    2. 'dp' → logprob: -1.3734077215194702
    3. ' dist' → logprob: -4.12340784072876
    4. ' ways' → logprob: -4.49840784072876
    5. 'dist' → logprob: -4.74840784072876
    6. ' distances' → logprob: -4.87340784072876
    7. '   ' → logprob: -6.37340784072876
    8. 'distance' → logprob: -6.62340784072876
    9. ' reachable' → logprob: -6.74840784072876
    10. 'reachable' → logprob: -6.99840784072876

Token 34: ' position' (ID: 4010)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.9237987995147705
    2. '_pos' → logprob: -1.2987987995147705
    3. '_move' → logprob: -2.0487987995147705
    4. '_position' → logprob: -2.7987987995147705
    5. '_moves' → logprob: -2.7987987995147705
    6. '_states' → logprob: -3.5487987995147705
    7. '_' → logprob: -3.6737987995147705
    8. '_state' → logprob: -4.923798561096191
    9. '_cell' → logprob: -6.298798561096191
    10. '_cells' → logprob: -6.423798561096191

Token 35: ' after' (ID: 1934)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11206869781017303
    2. ' =' → logprob: -2.3620686531066895
    3. '=' → logprob: -4.7370686531066895
    4. '[' → logprob: -7.3620686531066895
    5. '[next' → logprob: -7.8620686531066895
    6. '   ' → logprob: -8.237069129943848
    7. ' s' → logprob: -8.362069129943848
    8. '_s' → logprob: -8.487069129943848
    9. '[]' → logprob: -8.737069129943848
    10. ' for' → logprob: -8.862069129943848

Token 36: ' rolling' (ID: 30530)
  Prédit: ' making'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' making' → logprob: -1.3074181079864502
    2. ' each' → logprob: -2.05741810798645
    3. ' taking' → logprob: -2.18241810798645
    4. ' a' → logprob: -2.30741810798645
    5. ' move' → logprob: -2.80741810798645
    6. 'rolling' → logprob: -3.05741810798645
    7. 'roll' → logprob: -3.30741810798645
    8. 'each' → logprob: -3.30741810798645
    9. 'taking' → logprob: -3.30741810798645
    10. ' rolling' → logprob: -3.43241810798645

Token 37: ' i' (ID: 575)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8156278729438782
    2. '_' → logprob: -2.3156278133392334
    3. 's' → logprob: -2.3156278133392334
    4. ' for' → logprob: -2.5656278133392334
    5. ' =' → logprob: -3.4406278133392334
    6. ' ' → logprob: -3.4406278133392334
    7. ' a' → logprob: -3.4406278133392334
    8. '   ' → logprob: -3.5656278133392334
    9. ',' → logprob: -3.8156278133392334
    10. 'the' → logprob: -4.1906280517578125

Token 38: ' from' (ID: 591)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48710742592811584
    2. ' ' → logprob: -2.112107515335083
    3. ' +' → logprob: -2.112107515335083
    4. ' for' → logprob: -2.862107515335083
    5. 's' → logprob: -3.862107515335083
    6. ' in' → logprob: -4.362107276916504
    7. ',' → logprob: -4.612107276916504
    8. '_' → logprob: -4.862107276916504
    9. ' from' → logprob: -4.862107276916504
    10. ' a' → logprob: -5.987107276916504

Token 39: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2215819358825684
    2. 'current' → logprob: -1.4715819358825684
    3. ' current' → logprob: -1.5965819358825684
    4. ' ' → logprob: -1.7215819358825684
    5. 'position' → logprob: -3.7215819358825684
    6. ' position' → logprob: -3.8465819358825684
    7. ' a' → logprob: -4.346581935882568
    8. 'a' → logprob: -4.846581935882568
    9. '0' → logprob: -4.846581935882568
    10. 'pos' → logprob: -5.346581935882568

Token 40: ' pos' (ID: 1253)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3178050518035889
    2. '+' → logprob: -2.192805051803589
    3. ' i' → logprob: -2.317805051803589
    4. ' s' → logprob: -2.692805051803589
    5. ' p' → logprob: -2.942805051803589
    6. ' `' → logprob: -2.942805051803589
    7. 's' → logprob: -3.067805051803589
    8. ' end' → logprob: -3.317805051803589
    9. ' +' → logprob: -3.692805051803589
    10. ' pos' → logprob: -3.817805051803589

Token 41: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5631968975067139
    2. 'def' → logprob: -1.4381968975067139
    3. ':' → logprob: -2.313196897506714
    4. '
' → logprob: -3.438196897506714
    5. ' def' → logprob: -4.438197135925293
    6. '```' → logprob: -5.063197135925293
    7. 's' → logprob: -5.438197135925293
    8. '    ' → logprob: -5.438197135925293
    9. ' for' → logprob: -5.438197135925293
    10. ' ' → logprob: -5.438197135925293

Token 42: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23966491222381592
    2. '):' → logprob: -2.3646650314331055
    3. ' )' → logprob: -2.6146650314331055
    4. ' ):' → logprob: -4.9896650314331055
    5. 'pos' → logprob: -5.1146650314331055
    6. 'def' → logprob: -5.2396650314331055
    7. ' for' → logprob: -5.3646650314331055
    8. ',' → logprob: -5.7396650314331055
    9. '):
' → logprob: -5.8646650314331055
    10. '   ' → logprob: -5.9896650314331055

Token 43: '=start' (ID: 125395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1841527670621872
    2. ')' → logprob: -1.9341527223587036
    3. '):' → logprob: -4.309152603149414
    4. 'to' → logprob: -5.434152603149414
    5. ' )' → logprob: -6.184152603149414
    6. ' through' → logprob: -7.809152603149414
    7. ' onwards' → logprob: -7.809152603149414
    8. ',' → logprob: -7.934152603149414
    9. '+' → logprob: -7.934152603149414
    10. '=' → logprob: -8.559152603149414

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015391293913125992
    2. ' )' → logprob: -4.8903913497924805
    3. '):' → logprob: -6.0153913497924805
    4. ',' → logprob: -6.1403913497924805
    5. ')
' → logprob: -7.5153913497924805
    6. '   ' → logprob: -7.5153913497924805
    7. 'pos' → logprob: -8.26539134979248
    8. 'def' → logprob: -8.39039134979248
    9. ')

' → logprob: -8.76539134979248
    10. ' ' → logprob: -9.14039134979248

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3051154911518097
    2. '
' → logprob: -1.9301154613494873
    3. 'def' → logprob: -3.3051154613494873
    4. ':' → logprob: -3.6801154613494873
    5. '\n' → logprob: -4.555115699768066
    6. '```' → logprob: -4.805115699768066
    7. ')' → logprob: -5.430115699768066
    8. ',' → logprob: -5.555115699768066
    9. '    
' → logprob: -5.555115699768066
    10. ' ' → logprob: -5.555115699768066

Token 46: ' def' (ID: 1056)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.48296409845352173
    2. 'next' → logprob: -2.357964038848877
    3. '   ' → logprob: -2.482964038848877
    4. 'def' (adapté à ' def') → logprob: -2.857964038848877
    5. ' ' → logprob: -3.982964038848877
    6. ' def' → logprob: -4.107964038848877
    7. ' nxt' → logprob: -4.482964038848877
    8. '
' → logprob: -4.482964038848877
    9. ' positions' → logprob: -4.732964038848877
    10. ',' → logprob: -4.857964038848877

Token 47: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.02101757936179638
    2. ' get' → logprob: -4.396017551422119
    3. 'next' → logprob: -5.146017551422119
    4. ' move' → logprob: -7.271017551422119
    5. ' nxt' → logprob: -7.271017551422119
    6. ' ' → logprob: -7.896017551422119
    7. ' nex' → logprob: -8.896018028259277
    8. ' compute' → logprob: -9.021018028259277
    9. '   ' → logprob: -9.646018028259277
    10. ' jump' → logprob: -9.646018028259277

Token 48: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.04396442323923111
    2. '_position' → logprob: -3.418964385986328
    3. '_move' → logprob: -4.793964385986328
    4. '_' → logprob: -6.918964385986328
    5. '_positions' → logprob: -7.668964385986328
    6. '_step' → logprob: -8.418964385986328
    7. 'pos' → logprob: -9.418964385986328
    8. '_moves' → logprob: -9.668964385986328
    9. '_roll' → logprob: -9.793964385986328
    10. '(' → logprob: -10.293964385986328

Token 49: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.013076704926788807
    2. '(' → logprob: -4.3880767822265625
    3. '(position' → logprob: -8.013076782226562
    4. ' (' → logprob: -8.513076782226562
    5. '(p' → logprob: -12.513076782226562
    6. '(prev' → logprob: -12.513076782226562
    7. '(i' → logprob: -12.763076782226562
    8. '(current' → logprob: -12.763076782226562
    9. '(Pos' → logprob: -12.888076782226562
    10. '(paren' → logprob: -12.888076782226562

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043221889063715935
    2. ' ,' → logprob: -7.875432014465332
    3. ',i' → logprob: -10.000432014465332
    4. '   ' → logprob: -12.500432014465332
    5. ',int' → logprob: -14.375432014465332
    6. '):' → logprob: -14.375432014465332
    7. ',n' → logprob: -14.750432014465332
    8. '‌,' → logprob: -15.875432014465332
    9. ',k' → logprob: -15.875432014465332
    10. ',num' → logprob: -16.00043296813965

Token 51: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.7689111828804016
    2. 'i' → logprob: -1.5189111232757568
    3. 'roll' → logprob: -1.7689111232757568
    4. ' i' → logprob: -2.018911123275757
    5. ' move' → logprob: -5.518911361694336
    6. ' dice' → logprob: -6.018911361694336
    7. 'r' → logprob: -6.393911361694336
    8. 'move' → logprob: -6.768911361694336
    9. 'dice' → logprob: -6.768911361694336
    10. ' die' → logprob: -6.893911361694336

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004529566504061222
    2. ')' → logprob: -8.000452995300293
    3. ' ):' → logprob: -9.375452995300293
    4. '):
' → logprob: -11.000452995300293
    5. ',' → logprob: -12.000452995300293
    6. ':' → logprob: -12.375452995300293
    7. '   ' → logprob: -13.500452995300293
    8. '=' → logprob: -13.625452995300293
    9. ' ' → logprob: -14.000452995300293
    10. '}:' → logprob: -15.125452995300293

Token 53: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20588022470474243
    2. '):' → logprob: -1.7058801651000977
    3. '   ' → logprob: -6.205880165100098
    4. '       ' → logprob: -7.080880165100098
    5. '):
' → logprob: -8.205880165100098
    6. ',' → logprob: -8.205880165100098
    7. '<|end|>' → logprob: -8.455880165100098
    8. ':return' → logprob: -8.830880165100098
    9. ':
' → logprob: -8.955880165100098
    10. ' :' → logprob: -9.455880165100098

Token 54: ' p' (ID: 275)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7603495717048645
    2. ' if' → logprob: -1.0103495121002197
    3. '   ' → logprob: -2.8853495121002197
    4. 'if' → logprob: -3.6353495121002197
    5. '       ' → logprob: -3.7603495121002197
    6. ' return' → logprob: -4.010349750518799
    7. ' next' → logprob: -4.760349750518799
    8. ' ' → logprob: -4.885349750518799
    9. 'return' → logprob: -4.885349750518799
    10. '        ' → logprob: -5.885349750518799

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1474601924419403
    2. 'os' → logprob: -2.2724602222442627
    3. '=' → logprob: -3.7724602222442627
    4. '+' → logprob: -5.647459983825684
    5. '=os' → logprob: -5.772459983825684
    6. 'osition' → logprob: -6.647459983825684
    7. '   ' → logprob: -7.272459983825684
    8. ' ' → logprob: -7.772459983825684
    9. ' os' → logprob: -7.897459983825684
    10. ' +' → logprob: -8.022459983825684

Token 56: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3563541769981384
    2. 'pos' → logprob: -1.2313542366027832
    3. ' min' → logprob: -5.731354236602783
    4. ' moves' → logprob: -5.856354236602783
    5. 'min' → logprob: -7.481354236602783
    6. 'moves' → logprob: -7.606354236602783
    7. ' (' → logprob: -8.731353759765625
    8. ' max' → logprob: -9.106353759765625
    9. '(pos' → logprob: -9.606353759765625
    10. 'max' → logprob: -10.106353759765625

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575953483581543
    2. '+' → logprob: -0.825953483581543
    3. '+p' → logprob: -12.575953483581543
    4. '+i' → logprob: -13.200953483581543
    5. ' plus' → logprob: -13.700953483581543
    6. '+r' → logprob: -13.950953483581543
    7. '＋' → logprob: -13.950953483581543
    8. '<|end|>' → logprob: -14.075953483581543
    9. '	' → logprob: -14.575953483581543
    10. ' +
' → logprob: -14.825953483581543

Token 58: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.07774042338132858
    2. ' roll' → logprob: -3.077740430831909
    3. '1' → logprob: -3.577740430831909
    4. ' ' → logprob: -7.20274019241333
    5. ' rolls' → logprob: -11.327740669250488
    6. '_roll' → logprob: -11.702740669250488
    7. '   ' → logprob: -11.952740669250488
    8. 'roller' → logprob: -12.702740669250488
    9. '.roll' → logprob: -12.702740669250488
    10. '-roll' → logprob: -13.140240669250488

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1584932953119278
    2. ' if' → logprob: -2.6584932804107666
    3. '<|end|>' → logprob: -3.1584932804107666
    4. '<|end|>' → logprob: -4.533493518829346
    5. '   ' → logprob: -4.783493518829346
    6. 'if' → logprob: -5.283493518829346
    7. ')' → logprob: -5.783493518829346
    8. '	if' → logprob: -6.783493518829346
    9. '+' → logprob: -6.908493518829346
    10. '
' → logprob: -6.908493518829346

Token 60: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21688280999660492
    2. '
' → logprob: -1.9668828248977661
    3. 'if' → logprob: -3.2168827056884766
    4. '   ' → logprob: -5.216882705688477
    5. '<|end|>' → logprob: -5.466882705688477
    6. '	if' → logprob: -6.091882705688477
    7. '<|end|>' → logprob: -7.216882705688477
    8. ')' → logprob: -7.716882705688477
    9. ';' → logprob: -8.341882705688477
    10. '\n' → logprob: -8.341882705688477

Token 61: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5242713689804077
    2. ' if' → logprob: -0.8992713689804077
    3. 'return' → logprob: -7.274271488189697
    4. ' return' → logprob: -8.899271011352539
    5. '   ' → logprob: -8.899271011352539
    6. '       ' → logprob: -9.274271011352539
    7. 'p' → logprob: -10.024271011352539
    8. '
' → logprob: -11.399271011352539
    9. ' p' → logprob: -11.524271011352539
    10. '	if' → logprob: -11.899271011352539

Token 62: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04867434501647949
    2. 'p' → logprob: -3.0486743450164795
    3. ' ' → logprob: -9.798674583435059
    4. '>' → logprob: -11.798674583435059
    5. ' ' → logprob: -11.798674583435059
    6. '	p' → logprob: -12.923674583435059
    7. '1' → logprob: -13.173674583435059
    8. '(p' → logprob: -13.736174583435059
    9. ' end' → logprob: -14.111174583435059
    10. '0' → logprob: -14.298674583435059

Token 63: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5297217965126038
    2. ' >' → logprob: -1.029721736907959
    3. '>=' → logprob: -3.529721736907959
    4. ' >=' → logprob: -3.779721736907959
    5. ' <=' → logprob: -7.279721736907959
    6. '<=' → logprob: -7.404721736907959
    7. '==' → logprob: -8.529722213745117
    8. '>end' → logprob: -8.779722213745117
    9. ' ==' → logprob: -9.404722213745117
    10. '<|end|>' → logprob: -10.029722213745117

Token 64: ' end' (ID: 1268)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.095030426979065
    2. ' end' → logprob: -1.220030426979065
    3. 'n' → logprob: -1.345030426979065
    4. 'end' → logprob: -2.2200303077697754
    5. ' ' → logprob: -7.345030307769775
    6. '   ' → logprob: -9.345030784606934
    7. '	end' → logprob: -9.595030784606934
    8. '=end' → logprob: -9.595030784606934
    9. '  ' → logprob: -9.720030784606934
    10. '	n' → logprob: -10.595030784606934

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019329968839883804
    2. ':
' → logprob: -4.019330024719238
    3. ':return' → logprob: -7.519330024719238
    4. '):' → logprob: -7.769330024719238
    5. ')' → logprob: -9.519330024719238
    6. '):
' → logprob: -9.769330024719238
    7. ' :' → logprob: -10.144330024719238
    8. ' or' → logprob: -10.894330024719238
    9. ':

' → logprob: -11.519330024719238
    10. ':
' → logprob: -12.269330024719238

Token 66: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11124124377965927
    2. ':
' → logprob: -2.861241340637207
    3. '           ' → logprob: -3.736241340637207
    4. ':return' → logprob: -4.111241340637207
    5. '       ' → logprob: -6.111241340637207
    6. ' return' → logprob: -6.361241340637207
    7. ':
' → logprob: -7.486241340637207
    8. ' :' → logprob: -7.611241340637207
    9. 'return' → logprob: -7.736241340637207
    10. '   ' → logprob: -7.736241340637207

Token 67: ' p' (ID: 275)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1844021081924438
    2. 'pos' → logprob: -1.4344021081924438
    3. ' pos' → logprob: -1.5594021081924438
    4. 'return' → logprob: -1.6844021081924438
    5. 'eturn' → logprob: -3.0594019889831543
    6. '
' → logprob: -5.184401988983154
    7. ' p' → logprob: -6.309401988983154
    8. '       ' → logprob: -6.809401988983154
    9. '           ' → logprob: -7.184401988983154
    10. 'p' (adapté à ' p') → logprob: -7.184401988983154

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38708898425102234
    2. ' =' → logprob: -1.1370890140533447
    3. 'eturn' → logprob: -8.762088775634766
    4. '=p' → logprob: -11.137088775634766
    5. '=end' → logprob: -11.387088775634766
    6. ' ' → logprob: -11.887088775634766
    7. 'return' → logprob: -12.262088775634766
    8. ')' → logprob: -12.387088775634766
    9. '==' → logprob: -13.137088775634766
    10. '=None' → logprob: -13.137088775634766

Token 69: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.23988935351371765
    2. 'end' → logprob: -1.61488938331604
    3. ' pos' → logprob: -4.614889144897461
    4. ' end' → logprob: -5.864889144897461
    5. '2' → logprob: -7.239889144897461
    6. 'n' → logprob: -7.364889144897461
    7. 'p' → logprob: -9.364889144897461
    8. ' ' → logprob: -9.364889144897461
    9. ' n' → logprob: -10.864889144897461
    10. '   ' → logprob: -11.114889144897461

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4460049867630005
    2. '       ' → logprob: -1.0710049867630005
    3. '
' → logprob: -5.071004867553711
    4. '<|end|>' → logprob: -5.946004867553711
    5. 'return' → logprob: -6.196004867553711
    6. '   ' → logprob: -6.321004867553711
    7. '-' → logprob: -6.571004867553711
    8. ' return' → logprob: -7.571004867553711
    9. ' -' → logprob: -8.071004867553711
    10. ')' → logprob: -8.321004867553711

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049608729779720306
    2. '   ' → logprob: -3.7996087074279785
    3. '
' → logprob: -4.2996087074279785
    4. 'return' → logprob: -5.2996087074279785
    5. ' return' → logprob: -5.9246087074279785
    6. '           ' → logprob: -7.4246087074279785
    7. '```' → logprob: -7.7996087074279785
    8. '<|end|>' → logprob: -7.7996087074279785
    9. '
' → logprob: -8.049609184265137
    10. 'elif' → logprob: -8.049609184265137

Token 72: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11489342898130417
    2. ' if' → logprob: -3.4898934364318848
    3. 'return' → logprob: -3.6148934364318848
    4. ' return' → logprob: -3.9898934364318848
    5. '
' → logprob: -4.239893436431885
    6. 'if' → logprob: -4.614893436431885
    7. '   ' → logprob: -6.239893436431885
    8. '        
' → logprob: -6.364893436431885
    9. 'elif' → logprob: -7.239893436431885
    10. ' elif' → logprob: -7.489893436431885

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12297094613313675
    2. ' if' → logprob: -2.7479710578918457
    3. ':
' → logprob: -3.6229710578918457
    4. 'if' → logprob: -3.7479710578918457
    5. ',' → logprob: -7.997971057891846
    6. '   ' → logprob: -8.372970581054688
    7. '       ' → logprob: -8.747970581054688
    8. ' :' → logprob: -8.872970581054688
    9. 'If' → logprob: -9.122970581054688
    10. ':

' → logprob: -9.372970581054688

Token 74: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28208959102630615
    2. '           ' → logprob: -2.0320897102355957
    3. ' if' → logprob: -2.4070897102355957
    4. 'p' → logprob: -4.782089710235596
    5. ':' → logprob: -5.032089710235596
    6. ':
' → logprob: -5.782089710235596
    7. '       ' → logprob: -6.157089710235596
    8. ' p' → logprob: -6.532089710235596
    9. 'return' → logprob: -6.907089710235596
    10. '0' → logprob: -7.907089710235596

Token 75: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.533551812171936
    2. 'if' (adapté à ' if') → logprob: -1.033551812171936
    3. ' if' → logprob: -3.9085516929626465
    4. '           ' → logprob: -4.0335516929626465
    5. ' p' → logprob: -4.1585516929626465
    6. 'return' → logprob: -6.1585516929626465
    7. '               ' → logprob: -7.0335516929626465
    8. 'for' → logprob: -7.9085516929626465
    9. 'moves' → logprob: -8.033552169799805
    10. 'pos' → logprob: -8.658552169799805

Token 76: ' ' (ID: 220)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6549994349479675
    2. ' moves' → logprob: -0.7799994349479675
    3. 'p' → logprob: -4.529999256134033
    4. 'moves' → logprob: -5.404999256134033
    5. ' pos' → logprob: -5.654999256134033
    6. ' ' → logprob: -6.404999256134033
    7. ' (' → logprob: -7.904999256134033
    8. 'pos' → logprob: -8.404999732971191
    9. '_moves' → logprob: -8.779999732971191
    10. '(p' → logprob: -9.154999732971191

Token 77: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07429919391870499
    2. 'moves' → logprob: -3.0742990970611572
    3. ' p' → logprob: -4.074299335479736
    4. 'pos' → logprob: -5.574299335479736
    5. ' moves' → logprob: -5.949299335479736
    6. '(p' → logprob: -7.324299335479736
    7. '0' → logprob: -8.199298858642578
    8. ' ' → logprob: -8.324298858642578
    9. '   ' → logprob: -9.324298858642578
    10. 'move' → logprob: -9.636798858642578

Token 78: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02014509029686451
    2. '<=' → logprob: -4.020144939422607
    3. ' in' → logprob: -6.645144939422607
    4. '0' → logprob: -8.520145416259766
    5. ')' → logprob: -9.645145416259766
    6. '<|end|>' → logprob: -10.020145416259766
    7. '+' → logprob: -10.145145416259766
    8. ' not' → logprob: -10.270145416259766
    9. ' +' → logprob: -10.395145416259766
    10. ' ' → logprob: -10.395145416259766

Token 79: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011085073463618755
    2. ' p' → logprob: -4.761085033416748
    3. 'moves' → logprob: -6.136085033416748
    4. ' moves' → logprob: -8.636085510253906
    5. 'pos' → logprob: -9.636085510253906
    6. 'm' → logprob: -10.511085510253906
    7. ' ' → logprob: -12.136085510253906
    8. '   ' → logprob: -12.573585510253906
    9. 'positions' → logprob: -12.761085510253906
    10. '[' → logprob: -13.198585510253906

Token 80: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11491160839796066
    2. ' <=' → logprob: -2.4899115562438965
    3. 'and' → logprob: -3.7399115562438965
    4. ' and' → logprob: -6.7399115562438965
    5. '<' → logprob: -7.6149115562438965
    6. '-' → logprob: -9.364912033081055
    7. '<len' → logprob: -10.364912033081055
    8. '+' → logprob: -10.489912033081055
    9. ' <' → logprob: -10.614912033081055
    10. 'p' → logprob: -11.739912033081055

Token 81: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06996844708919525
    2. ' n' → logprob: -2.6949684619903564
    3. ' ' → logprob: -11.194968223571777
    4. 'end' → logprob: -11.694968223571777
    5. '	n' → logprob: -13.069968223571777
    6. '10' → logprob: -13.569968223571777
    7. '   ' → logprob: -14.069968223571777
    8. ' end' → logprob: -14.069968223571777
    9. '9' → logprob: -14.194968223571777
    10. '6' → logprob: -14.694968223571777

Token 82: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3180257976055145
    2. 'and' → logprob: -1.318025827407837
    3. ':' → logprob: -5.693025588989258
    4. ':
' → logprob: -6.943025588989258
    5. '           ' → logprob: -8.068025588989258
    6. '               ' → logprob: -10.443025588989258
    7. ',' → logprob: -10.818025588989258
    8. '       ' → logprob: -11.068025588989258
    9. ')' → logprob: -11.693025588989258
    10. ' ' → logprob: -12.068025588989258

Token 83: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02983865514397621
    2. 'and' → logprob: -3.9048385620117188
    3. '               ' → logprob: -4.904838562011719
    4. '           ' → logprob: -6.529838562011719
    5. ':
' → logprob: -8.154838562011719
    6. ':' → logprob: -9.904838562011719
    7. ',' → logprob: -10.654838562011719
    8. '
' → logprob: -12.404838562011719
    9. '0' → logprob: -13.279838562011719
    10. 'p' → logprob: -13.404838562011719

Token 84: ' mv' (ID: 40274)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18969082832336426
    2. ' p' → logprob: -2.0646908283233643
    3. 'if' → logprob: -3.6896908283233643
    4. ' if' → logprob: -4.564690589904785
    5. '                   ' → logprob: -4.814690589904785
    6. '               ' → logprob: -6.939690589904785
    7. ',' → logprob: -8.314690589904785
    8. ' and' → logprob: -8.564690589904785
    9. 'return' → logprob: -8.814690589904785
    10. '                       ' → logprob: -8.814690589904785

Token 85: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4969957172870636
    2. 'es' → logprob: -1.3719956874847412
    3. ' =' → logprob: -2.371995687484741
    4. '=' → logprob: -3.246995687484741
    5. 'oves' → logprob: -6.49699592590332
    6. 'ove' → logprob: -6.49699592590332
    7. '   ' → logprob: -6.74699592590332
    8. '=e' → logprob: -7.24699592590332
    9. 'o' → logprob: -8.87199592590332
    10. 's' → logprob: -9.12199592590332

Token 86: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.023695195093750954
    2. ' moves' → logprob: -3.773695230484009
    3. 'm' → logprob: -8.14869499206543
    4. '   ' → logprob: -9.39869499206543
    5. 'move' → logprob: -10.14869499206543
    6. 'mov' → logprob: -11.14869499206543
    7. '.moves' → logprob: -12.27369499206543
    8. '[m' → logprob: -12.77369499206543
    9. '_moves' → logprob: -12.89869499206543
    10. ' ' → logprob: -13.02369499206543

Token 87: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0337759405374527
    2. '.get' → logprob: -3.408776044845581
    3. 'p' → logprob: -9.78377628326416
    4. '[' → logprob: -9.90877628326416
    5. 'get' → logprob: -11.15877628326416
    6. '.p' → logprob: -13.28377628326416
    7. '.' → logprob: -13.53377628326416
    8. '[get' → logprob: -13.53377628326416
    9. '[pos' → logprob: -14.03377628326416
    10. '[i' → logprob: -14.53377628326416

Token 88: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01636383682489395
    2. '-' → logprob: -4.891363620758057
    3. ']
' → logprob: -5.516363620758057
    4. '[p' → logprob: -5.641363620758057
    5. ' -' → logprob: -7.391363620758057
    6. '][' → logprob: -8.891364097595215
    7. '].' → logprob: -9.266364097595215
    8. '[' → logprob: -9.391364097595215
    9. ']
' → logprob: -9.391364097595215
    10. ']

' → logprob: -10.141364097595215

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.000019073486328
    3. '2' → logprob: -13.625019073486328
    4. ']' → logprob: -14.625019073486328
    5. '-' → logprob: -15.375019073486328
    6. '0' → logprob: -16.937519073486328
    7. '```' → logprob: -17.000019073486328
    8. ')' → logprob: -17.062519073486328
    9. '１' → logprob: -17.187519073486328
    10. '

' → logprob: -17.500019073486328

Token 90: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.48057714104652405
    2. ']' → logprob: -0.9805771112442017
    3. ']
' → logprob: -5.105576992034912
    4. '               ' → logprob: -8.60557746887207
    5. ']()
' → logprob: -9.60557746887207
    6. ']

' → logprob: -10.10557746887207
    7. ')' → logprob: -10.73057746887207
    8. ')
' → logprob: -10.98057746887207
    9. '][' → logprob: -11.10557746887207
    10. '](' → logprob: -11.35557746887207

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012020966038107872
    2. ' if' → logprob: -5.387021064758301
    3. '<|end|>' → logprob: -6.637021064758301
    4. ')' → logprob: -6.762021064758301
    5. '[' → logprob: -6.762021064758301
    6. 'if' → logprob: -7.137021064758301
    7. '
' → logprob: -7.262021064758301
    8. '                   ' → logprob: -7.387021064758301
    9. '           ' → logprob: -7.762021064758301
    10. ' and' → logprob: -7.887021064758301

Token 92: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4853270351886749
    2. '               ' → logprob: -1.6103270053863525
    3. ' if' → logprob: -1.7353270053863525
    4. 'p' → logprob: -4.985327243804932
    5. ' p' → logprob: -6.860327243804932
    6. '                   ' → logprob: -8.485326766967773
    7. '           ' → logprob: -10.235326766967773
    8. '                ' → logprob: -10.235326766967773
    9. ' ' → logprob: -10.985326766967773
    10. 'for' → logprob: -10.985326766967773

Token 93: ' mv' (ID: 40274)
  Prédit: ' mv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mv' → logprob: -0.08968766033649445
    2. 'mv' → logprob: -2.4646875858306885
    3. ' isinstance' → logprob: -8.08968734741211
    4. '	mv' → logprob: -8.21468734741211
    5. '   ' → logprob: -11.08968734741211
    6. ' ' → logprob: -11.08968734741211
    7. ' moves' → logprob: -11.46468734741211
    8. '0' → logprob: -11.65218734741211
    9. 'moves' → logprob: -11.65218734741211
    10. '_mv' → logprob: -11.71468734741211

Token 94: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.49309632182121277
    2. ' !=' → logprob: -0.9930963516235352
    3. ' is' → logprob: -5.118096351623535
    4. '!=-' → logprob: -5.118096351623535
    5. '>' → logprob: -5.743096351623535
    6. '[' → logprob: -6.118096351623535
    7. ':' → logprob: -7.868096351623535
    8. ' >' → logprob: -8.493096351623535
    9. ')!=' → logprob: -8.618096351623535
    10. ')' → logprob: -8.868096351623535

Token 95: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3100844919681549
    2. '0' → logprob: -1.4350844621658325
    3. ' ' → logprob: -4.060084342956543
    4. ' -' → logprob: -4.560084342956543
    5. 'None' → logprob: -7.935084342956543
    6. 'p' → logprob: -8.435084342956543
    7. '1' → logprob: -9.810084342956543
    8. ' p' → logprob: -10.185084342956543
    9. ' None' → logprob: -10.560084342956543
    10. '-p' → logprob: -10.872584342956543

Token 96: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10736280679702759
    2. '0' → logprob: -2.357362747192383
    3. 'p' → logprob: -5.732362747192383
    4. 'None' → logprob: -6.107362747192383
    5. ' -' → logprob: -6.857362747192383
    6. ' ' → logprob: -8.232362747192383
    7. '-p' → logprob: -9.107362747192383
    8. '1' → logprob: -10.294862747192383
    9. 'pos' → logprob: -10.294862747192383
    10. '   ' → logprob: -10.544862747192383

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6983422636985779
    2. ':
' → logprob: -0.6983422636985779
    3. ' and' → logprob: -5.323342323303223
    4. ':return' → logprob: -8.823342323303223
    5. 'and' → logprob: -9.198342323303223
    6. '):
' → logprob: -10.698342323303223
    7. ':

' → logprob: -11.198342323303223
    8. ':
' → logprob: -12.073342323303223
    9. '                   ' → logprob: -12.323342323303223
    10. ' :' → logprob: -13.073342323303223

Token 98: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006117794197052717
    2. ' p' → logprob: -5.756117820739746
    3. 'p' → logprob: -6.631117820739746
    4. '               ' → logprob: -7.506117820739746
    5. ' return' → logprob: -8.131117820739746
    6. '                       ' → logprob: -8.881117820739746
    7. 'return' → logprob: -9.006117820739746
    8. ',' → logprob: -9.256117820739746
    9. '           ' → logprob: -9.631117820739746
    10. ' and' → logprob: -9.631117820739746

Token 99: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1873556226491928
    2. 'p' (adapté à ' p') → logprob: -1.812355637550354
    3. ' return' → logprob: -5.3123555183410645
    4. 'return' → logprob: -6.4373555183410645
    5. '                   ' → logprob: -6.9373555183410645
    6. '               ' → logprob: -10.312355995178223
    7. '                       ' → logprob: -10.812355995178223
    8. '           ' → logprob: -11.812355995178223
    9. ' ' → logprob: -12.562355995178223
    10. '	p' → logprob: -13.062355995178223

Token 100: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3460451662540436
    2. ' +=' → logprob: -1.3460451364517212
    3. '=' → logprob: -3.5960452556610107
    4. '+=' → logprob: -5.346045017242432
    5. ' ' → logprob: -10.09604549407959
    6. ' *=' → logprob: -12.97104549407959
    7. ' +' → logprob: -13.09604549407959
    8. ' ' → logprob: -13.47104549407959
    9. ' -=' → logprob: -13.84604549407959
    10. '+' → logprob: -14.09604549407959

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07007215172052383
    2. '=' → logprob: -2.6950721740722656
    3. ' +=' → logprob: -9.070072174072266
    4. ' ' → logprob: -11.695072174072266
    5. '+=' → logprob: -12.320072174072266
    6. ',' → logprob: -12.695072174072266
    7. '=p' → logprob: -12.695072174072266
    8. ' ' → logprob: -14.195072174072266
    9. ' -=' → logprob: -15.945072174072266
    10. '   ' → logprob: -16.320072174072266

Token 102: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8006675243377686
    2. ' p' → logprob: -1.5506675243377686
    3. 'mv' → logprob: -1.9256675243377686
    4. ' mv' → logprob: -2.4256675243377686
    5. 'pos' → logprob: -2.8006675243377686
    6. 'moves' → logprob: -4.050667762756348
    7. ' pos' → logprob: -4.175667762756348
    8. ' moves' → logprob: -4.925667762756348
    9. ' ' → logprob: -7.175667762756348
    10. ' next' → logprob: -7.300667762756348

Token 103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06997044384479523
    2. '+' → logprob: -2.6949703693389893
    3. '+m' → logprob: -11.81997013092041
    4. ' -' → logprob: -12.19497013092041
    5. '                   ' → logprob: -12.44497013092041
    6. '+p' → logprob: -12.94497013092041
    7. '+n' → logprob: -13.31997013092041
    8. '+b' → logprob: -13.31997013092041
    9. '+k' → logprob: -13.69497013092041
    10. '+j' → logprob: -13.81997013092041

Token 104: ' mv' (ID: 40274)
  Prédit: 'mv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mv' → logprob: -0.004102977458387613
    2. ' mv' → logprob: -5.504103183746338
    3. '	mv' → logprob: -11.25410270690918
    4. 'moves' → logprob: -12.00410270690918
    5. '   ' → logprob: -13.37910270690918
    6. 'mov' → logprob: -13.75410270690918
    7. 'm' → logprob: -14.00410270690918
    8. ' ' → logprob: -14.25410270690918
    9. '_mv' → logprob: -15.00410270690918
    10. 'move' → logprob: -15.37910270690918

Token 105: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021650051698088646
    2. '
' → logprob: -3.8966500759124756
    3. '           ' → logprob: -8.146650314331055
    4. '               ' → logprob: -8.396650314331055
    5. '                       ' → logprob: -8.896650314331055
    6. '
' → logprob: -8.896650314331055
    7. '<|end|>' → logprob: -9.271650314331055
    8. '		           ' → logprob: -10.146650314331055
    9. '```' → logprob: -10.646650314331055
    10. '                    ' → logprob: -10.896650314331055

Token 106: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5255154967308044
    2. '                   ' → logprob: -0.9005154967308044
    3. '<|end|>' → logprob: -6.275515556335449
    4. '<|end|>' → logprob: -9.40051555633545
    5. '		           ' → logprob: -9.65051555633545
    6. '
' → logprob: -9.65051555633545
    7. '           ' → logprob: -9.77551555633545
    8. '                    
' → logprob: -10.15051555633545
    9. '```' → logprob: -10.27551555633545
    10. '               ' → logprob: -10.40051555633545

Token 107: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3684314787387848
    2. 'if' (adapté à ' if') → logprob: -1.4934314489364624
    3. ' if' → logprob: -2.493431568145752
    4. 'return' → logprob: -7.868431568145752
    5. '           ' → logprob: -7.993431568145752
    6. 'p' → logprob: -9.493431091308594
    7. '		           ' → logprob: -10.368431091308594
    8. '               ' → logprob: -10.493431091308594
    9. ' return' → logprob: -10.993431091308594
    10. '
' → logprob: -10.993431091308594

Token 108: ' mv' (ID: 40274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33622995018959045
    2. '1' → logprob: -1.336229920387268
    3. ' p' → logprob: -4.2112298011779785
    4. 'p' → logprob: -5.5862298011779785
    5. '0' → logprob: -5.5862298011779785
    6. ' not' → logprob: -8.336230278015137
    7. '2' → logprob: -10.273730278015137
    8. '   ' → logprob: -11.398730278015137
    9. 'not' → logprob: -11.648730278015137
    10. '(' → logprob: -11.773730278015137

Token 109: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0705180168151855
    2. ' <' → logprob: -1.3205180168151855
    3. '>' → logprob: -1.4455180168151855
    4. ' >' → logprob: -1.9455180168151855
    5. '!=' → logprob: -5.8205180168151855
    6. ' !=' → logprob: -5.8205180168151855
    7. ' >=' → logprob: -6.0705180168151855
    8. '>=' → logprob: -6.1955180168151855
    9. ' ' → logprob: -7.9455180168151855
    10. ' <=' → logprob: -8.570518493652344

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02328147180378437
    2. ' ' → logprob: -3.7732815742492676
    3. '=' → logprob: -11.14828109741211
    4. '>' → logprob: -11.27328109741211
    5. '
' → logprob: -12.64828109741211
    6. '-' → logprob: -13.27328109741211
    7. ' -' → logprob: -13.89828109741211
    8. 'p' → logprob: -14.64828109741211
    9. '>
' → logprob: -14.89828109741211
    10. '1' → logprob: -15.33578109741211

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0948158382670954e-05
    2. ' ' → logprob: -10.500030517578125
    3. '=' → logprob: -14.375030517578125
    4. '>' → logprob: -14.500030517578125
    5. '<|end|>' → logprob: -14.625030517578125
    6. '
' → logprob: -15.125030517578125
    7. '

' → logprob: -15.500030517578125
    8. '-' → logprob: -15.562530517578125
    9. '1' → logprob: -15.562530517578125
    10. '<|end|>' → logprob: -15.875030517578125

Token 112: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0649864599108696
    2. 'and' → logprob: -2.81498646736145
    3. ':
' → logprob: -6.439986228942871
    4. ':' → logprob: -7.064986228942871
    5. '                       ' → logprob: -8.064986228942871
    6. '                   ' → logprob: -8.439986228942871
    7. ':

' → logprob: -12.064986228942871
    8. '                           ' → logprob: -12.189986228942871
    9. '):
' → logprob: -12.189986228942871
    10. ' ' → logprob: -12.564986228942871

Token 113: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4057020843029022
    2. ' p' → logprob: -1.1557021141052246
    3. '1' → logprob: -4.155702114105225
    4. ' ' → logprob: -5.905702114105225
    5. '0' → logprob: -9.155701637268066
    6. '(p' → logprob: -10.030701637268066
    7. ' (' → logprob: -10.280701637268066
    8. '(' → logprob: -10.780701637268066
    9. '   ' → logprob: -11.280701637268066
    10. ' mv' → logprob: -11.405701637268066

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005049452651292086
    2. ' <' → logprob: -6.630049228668213
    3. '<p' → logprob: -6.880049228668213
    4. '+' → logprob: -7.255049228668213
    5. ' <=' → logprob: -7.255049228668213
    6. '<' → logprob: -7.880049228668213
    7. ' +' → logprob: -7.880049228668213
    8. '<=' → logprob: -8.380049705505371
    9. ' >' → logprob: -9.755049705505371
    10. 'p' → logprob: -10.255049705505371

Token 115: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.17067308723926544
    2. '<=' → logprob: -1.920673131942749
    3. ' >' → logprob: -4.79567289352417
    4. '>' → logprob: -6.42067289352417
    5. '<' → logprob: -9.045673370361328
    6. ' <' → logprob: -9.170673370361328
    7. '<|end|>' → logprob: -9.170673370361328
    8. ')' → logprob: -10.045673370361328
    9. ' >=' → logprob: -10.295673370361328
    10. '>=' → logprob: -10.920673370361328

Token 116: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5731155276298523
    2. 'n' → logprob: -1.198115587234497
    3. ' end' → logprob: -2.323115587234497
    4. ' n' → logprob: -3.323115587234497
    5. ' ' → logprob: -8.698115348815918
    6. '=end' → logprob: -9.323115348815918
    7. '	end' → logprob: -10.323115348815918
    8. '<|end|>' → logprob: -10.760615348815918
    9. '>end' → logprob: -11.323115348815918
    10. '(end' → logprob: -11.385615348815918

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06789416074752808
    2. ':
' → logprob: -2.817894220352173
    3. '                       ' → logprob: -5.317893981933594
    4. '                   ' → logprob: -8.067893981933594
    5. ':

' → logprob: -8.067893981933594
    6. ' or' → logprob: -8.942893981933594
    7. '):
' → logprob: -9.442893981933594
    8. ':return' → logprob: -10.067893981933594
    9. ':
' → logprob: -10.317893981933594
    10. '):' → logprob: -11.192893981933594

Token 118: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.23016119003295898
    2. ':' → logprob: -1.605161190032959
    3. ':
' → logprob: -6.105161190032959
    4. ' :' → logprob: -7.355161190032959
    5. '<|end|>' → logprob: -8.105161666870117
    6. '):
' → logprob: -8.230161666870117
    7. ' or' → logprob: -8.480161666870117
    8. '                   ' → logprob: -8.605161666870117
    9. ',' → logprob: -8.605161666870117
    10. '                        ' → logprob: -9.105161666870117

Token 119: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.3185708820819855
    2. ' p' → logprob: -1.318570852279663
    3. '                       ' → logprob: -5.318571090698242
    4. '                   ' → logprob: -9.193571090698242
    5. 'return' → logprob: -9.818571090698242
    6. ' ' → logprob: -10.068571090698242
    7. '                           ' → logprob: -10.443571090698242
    8. '           ' → logprob: -10.443571090698242
    9. '       ' → logprob: -10.568571090698242
    10. ' return' → logprob: -10.943571090698242

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5135246515274048
    2. ' =' → logprob: -1.3885246515274048
    3. '=' → logprob: -1.8885246515274048
    4. ' ' → logprob: -7.763524532318115
    5. '<|end|>' → logprob: -8.763525009155273
    6. ')' → logprob: -9.388525009155273
    7. '=p' → logprob: -9.513525009155273
    8. '=None' → logprob: -11.263525009155273
    9. '   ' → logprob: -11.513525009155273
    10. '<|end|>' → logprob: -11.638525009155273

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. '=p' → logprob: -14.423588752746582
    4. '=end' → logprob: -16.048587799072266
    5. 'p' → logprob: -16.298587799072266
    6. ' ' → logprob: -16.923587799072266
    7. ')' → logprob: -17.548587799072266
    8. '=

' → logprob: -17.673587799072266
    9. '=}' → logprob: -17.798587799072266
    10. '＝' → logprob: -17.923587799072266

Token 122: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31350675225257874
    2. ' end' → logprob: -1.3135067224502563
    3. 'n' → logprob: -8.438507080078125
    4. ' n' → logprob: -11.063507080078125
    5. '	end' → logprob: -12.688507080078125
    6. ' ' → logprob: -12.813507080078125
    7. '=end' → logprob: -13.438507080078125
    8. '(end' → logprob: -14.188507080078125
    9. 'p' → logprob: -14.313507080078125
    10. ' p' → logprob: -14.688507080078125

Token 123: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016313062980771065
    2. '
' → logprob: -4.141313076019287
    3. 'return' → logprob: -9.391312599182129
    4. '<|end|>' → logprob: -10.266312599182129
    5. '               ' → logprob: -10.641312599182129
    6. ',' → logprob: -11.266312599182129
    7. ' return' → logprob: -11.391312599182129
    8. '
' → logprob: -11.391312599182129
    9. '				' → logprob: -11.391312599182129
    10. '           ' → logprob: -11.391312599182129

Token 124: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004281872883439064
    2. '
' → logprob: -5.504281997680664
    3. 'return' → logprob: -10.129281997680664
    4. '<|end|>' → logprob: -10.254281997680664
    5. '               ' → logprob: -11.129281997680664
    6. ',' → logprob: -11.504281997680664
    7. 'elif' → logprob: -11.629281997680664
    8. ' return' → logprob: -11.754281997680664
    9. '
' → logprob: -11.754281997680664
    10. '				' → logprob: -11.879281997680664

Token 125: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08337244391441345
    2. 'return' → logprob: -3.4583723545074463
    3. '
' → logprob: -3.8333723545074463
    4. ' return' → logprob: -4.583372592926025
    5. 'else' → logprob: -4.833372592926025
    6. ' else' → logprob: -5.458372592926025
    7. 'elif' → logprob: -6.333372592926025
    8. '               ' → logprob: -7.083372592926025
    9. ' elif' → logprob: -7.333372592926025
    10. 'p' → logprob: -8.208372116088867

Token 126: ' mv' (ID: 40274)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.39667224884033203
    2. ' mv' → logprob: -1.271672248840332
    3. 'p' → logprob: -3.396672248840332
    4. 'mv' → logprob: -5.021672248840332
    5. ' ' → logprob: -5.521672248840332
    6. '0' → logprob: -6.396672248840332
    7. '1' → logprob: -7.021672248840332
    8. '	mv' → logprob: -8.521672248840332
    9. '_mv' → logprob: -9.959172248840332
    10. '   ' → logprob: -10.771672248840332

Token 127: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010001024231314659
    2. '<' → logprob: -4.635001182556152
    3. ' >' → logprob: -9.010001182556152
    4. ' ' → logprob: -9.885001182556152
    5. '[' → logprob: -10.885001182556152
    6. ' <=' → logprob: -11.260001182556152
    7. ' ==' → logprob: -11.510001182556152
    8. '<|end|>' → logprob: -11.635001182556152
    9. '>' → logprob: -12.947501182556152
    10. '0' → logprob: -13.072501182556152

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326181888580322
    2. ' ' → logprob: -0.7576181888580322
    3. '<|end|>' → logprob: -11.882617950439453
    4. 'end' → logprob: -12.632617950439453
    5. 'p' → logprob: -12.632617950439453
    6. ' p' → logprob: -13.132617950439453
    7. ' end' → logprob: -14.007617950439453
    8. '=' → logprob: -14.257617950439453
    9. '
' → logprob: -15.070117950439453
    10. '1' → logprob: -15.445117950439453

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002812005812302232
    2. ' ' → logprob: -5.877811908721924
    3. 'end' → logprob: -12.752812385559082
    4. '=' → logprob: -13.252812385559082
    5. 'p' → logprob: -13.252812385559082
    6. ' p' → logprob: -15.627812385559082
    7. ' end' → logprob: -16.002811431884766
    8. '
' → logprob: -16.627811431884766
    9. '>' → logprob: -16.752811431884766
    10. '1' → logprob: -16.815311431884766

Token 130: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014172090217471123
    2. 'and' → logprob: -4.264172077178955
    3. '<|end|>' → logprob: -12.639172554016113
    4. ' ' → logprob: -12.764172554016113
    5. '	and' → logprob: -14.014172554016113
    6. '                   ' → logprob: -15.139172554016113
    7. '                       ' → logprob: -15.389172554016113
    8. ',' → logprob: -15.639172554016113
    9. '                           ' → logprob: -15.764172554016113
    10. ' <' → logprob: -15.889172554016113

Token 131: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004082078114151955
    2. ' p' → logprob: -5.504082202911377
    3. ' ' → logprob: -13.254081726074219
    4. '1' → logprob: -14.004081726074219
    5. '   ' → logprob: -14.254081726074219
    6. '0' → logprob: -15.379081726074219
    7. '  ' → logprob: -16.37908172607422
    8. '<p' → logprob: -17.50408172607422
    9. '	p' → logprob: -17.75408172607422
    10. '
' → logprob: -17.75408172607422

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -13.125007629394531
    3. 'os' → logprob: -13.250007629394531
    4. '<p' → logprob: -13.375007629394531
    5. '```' → logprob: -14.875007629394531
    6. '<' → logprob: -15.000007629394531
    7. ' p' → logprob: -15.125007629394531
    8. 'osition' → logprob: -15.125007629394531
    9. '+' → logprob: -16.00000762939453
    10. '
' → logprob: -16.62500762939453

Token 133: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008626160211861134
    2. '<' → logprob: -4.7586259841918945
    3. ' ' → logprob: -12.508625984191895
    4. '<|end|>' → logprob: -12.508625984191895
    5. '0' → logprob: -13.633625984191895
    6. '<p' → logprob: -14.258625984191895
    7. ' <=' → logprob: -15.133625984191895
    8. '<size' → logprob: -15.258625984191895
    9. '<int' → logprob: -15.758625984191895
    10. '1' → logprob: -16.07112693786621

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052495296113193035
    2. '1' → logprob: -5.380249500274658
    3. ' ' → logprob: -7.380249500274658
    4. '=' → logprob: -12.880249977111816
    5. 'start' → logprob: -14.067749977111816
    6. '   ' → logprob: -14.692749977111816
    7. ')' → logprob: -15.130249977111816
    8. 'end' → logprob: -15.255249977111816
    9. '```' → logprob: -15.630249977111816
    10. '2' → logprob: -15.880249977111816

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0053771180100739
    2. '1' → logprob: -5.255377292633057
    3. ' ' → logprob: -8.880376815795898
    4. 'start' → logprob: -13.005376815795898
    5. '2' → logprob: -14.005376815795898
    6. '-' → logprob: -15.005376815795898
    7. 'end' → logprob: -15.255376815795898
    8. '   ' → logprob: -15.755376815795898
    9. '```' → logprob: -15.942876815795898
    10. '=' → logprob: -16.2553768157959

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5292914509773254
    2. ':
' → logprob: -0.9042914509773254
    3. '                       ' → logprob: -5.15429162979126
    4. '):
' → logprob: -8.904291152954102
    5. ':

' → logprob: -10.029291152954102
    6. ',' → logprob: -10.154291152954102
    7. ' :
' → logprob: -10.154291152954102
    8. '                   ' → logprob: -10.279291152954102
    9. '():
' → logprob: -11.029291152954102
    10. ' :' → logprob: -11.279291152954102

Token 137: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03825630620121956
    2. '0' → logprob: -3.7882564067840576
    3. ' p' → logprob: -5.0382561683654785
    4. 'p' → logprob: -5.0382561683654785
    5. '                   ' → logprob: -7.4132561683654785
    6. ' ' → logprob: -8.413256645202637
    7. '       ' → logprob: -8.913256645202637
    8. '
' → logprob: -9.038256645202637
    9. '                           ' → logprob: -9.038256645202637
    10. '                        ' → logprob: -9.163256645202637

Token 138: ' p' (ID: 275)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06351741403341293
    2. 'p' (adapté à ' p') → logprob: -3.0635173320770264
    3. ' ' → logprob: -4.5635175704956055
    4. ' p' → logprob: -5.4385175704956055
    5. '                       ' → logprob: -10.813517570495605
    6. '                   ' → logprob: -11.563517570495605
    7. '1' → logprob: -11.688517570495605
    8. '   ' → logprob: -12.438517570495605
    9. '2' → logprob: -13.938517570495605
    10. '                           ' → logprob: -14.188517570495605

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020950057660229504
    2. ' =' → logprob: -9.50020980834961
    3. ' ' → logprob: -9.50020980834961
    4. '=' → logprob: -9.75020980834961
    5. 'os' → logprob: -14.75020980834961
    6. '
' → logprob: -15.50020980834961
    7. '۲' → logprob: -16.12520980834961
    8. '```' → logprob: -16.25020980834961
    9. '#' → logprob: -16.31270980834961
    10. ':' → logprob: -16.56270980834961

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. 'p' → logprob: -17.686967849731445
    4. '=p' → logprob: -18.561967849731445
    5. '0' → logprob: -18.936967849731445
    6. '＝' → logprob: -19.061967849731445
    7. ' ' → logprob: -19.311967849731445
    8. '=
' → logprob: -19.436967849731445
    9. '```' → logprob: -20.936967849731445
    10. '=

' → logprob: -21.061967849731445

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -15.253177642822266
    4. '   ' → logprob: -17.315677642822266
    5. 'start' → logprob: -17.753177642822266
    6. '  ' → logprob: -17.940677642822266
    7. '۰' → logprob: -19.003177642822266
    8. 'end' → logprob: -19.190677642822266
    9. '<|end|>' → logprob: -19.190677642822266
    10. '00' → logprob: -19.253177642822266

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -15.375015258789062
    4. 'start' → logprob: -17.500015258789062
    5. '۰' → logprob: -18.125015258789062
    6. '```' → logprob: -18.625015258789062
    7. 'end' → logprob: -18.812515258789062
    8. '00' → logprob: -19.062515258789062
    9. 'pos' → logprob: -19.375015258789062
    10. '０' → logprob: -19.812515258789062

Token 143: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026528246235102415
    2. 'return' → logprob: -6.377652645111084
    3. '               ' → logprob: -7.627652645111084
    4. '           ' → logprob: -8.252653121948242
    5. ' return' → logprob: -9.627653121948242
    6. 'p' → logprob: -9.877653121948242
    7. '
' → logprob: -10.752653121948242
    8. '                       ' → logprob: -11.002653121948242
    9. '```' → logprob: -11.627653121948242
    10. '   ' → logprob: -11.752653121948242

Token 144: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022688599303364754
    2. 'return' → logprob: -3.897688627243042
    3. ' return' → logprob: -6.897688388824463
    4. '               ' → logprob: -7.647688388824463
    5. '
' → logprob: -8.522688865661621
    6. 'p' → logprob: -9.022688865661621
    7. '           ' → logprob: -9.397688865661621
    8. '```' → logprob: -9.647688865661621
    9. '   ' → logprob: -10.147688865661621
    10. 'else' → logprob: -10.397688865661621

Token 145: ' p' (ID: 275)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19765372574329376
    2. 'return' → logprob: -2.0726537704467773
    3. ' return' → logprob: -3.4476537704467773
    4. '               ' → logprob: -4.322653770446777
    5. 'p' (adapté à ' p') → logprob: -5.697653770446777
    6. '           ' → logprob: -6.322653770446777
    7. ' p' → logprob: -6.447653770446777
    8. '
' → logprob: -7.572653770446777
    9. '       ' → logprob: -7.572653770446777
    10. '   ' → logprob: -8.072653770446777

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42492300271987915
    2. '=' → logprob: -1.1749229431152344
    3. '2' → logprob: -3.2999229431152344
    4. '=p' → logprob: -8.299922943115234
    5. ' ' → logprob: -10.049922943115234
    6. ' +=' → logprob: -10.049922943115234
    7. '=os' → logprob: -10.424922943115234
    8. '+=' → logprob: -11.549922943115234
    9. 'os' → logprob: -11.674922943115234
    10. 'osition' → logprob: -12.174922943115234

Token 147: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12692810595035553
    2. ' p' → logprob: -2.1269280910491943
    3. '                   ' → logprob: -16.876928329467773
    4. 'max' → logprob: -17.251928329467773
    5. '	p' → logprob: -17.626928329467773
    6. ' ' → logprob: -18.376928329467773
    7. ' ' → logprob: -18.501928329467773
    8. ' max' → logprob: -18.876928329467773
    9. '0' → logprob: -19.376928329467773
    10. '```' → logprob: -19.376928329467773

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -14.000004768371582
    3. 'p' → logprob: -14.000004768371582
    4. ' p' → logprob: -14.250004768371582
    5. '```' → logprob: -14.375004768371582
    6. '₂' → logprob: -15.187504768371582
    7. '-' → logprob: -15.250004768371582
    8. '+' → logprob: -15.812504768371582
    9. '
' → logprob: -15.812504768371582
    10. '۲' → logprob: -15.812504768371582

Token 149: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013250819407403469
    2. '
' → logprob: -5.138250827789307
    3. '               ' → logprob: -5.513250827789307
    4. '           ' → logprob: -6.388250827789307
    5. 'return' → logprob: -7.263250827789307
    6. ' return' → logprob: -7.763250827789307
    7. '        
' → logprob: -9.138250350952148
    8. '	' → logprob: -9.763250350952148
    9. '   ' → logprob: -9.763250350952148
    10. '    
' → logprob: -10.013250350952148

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01434190571308136
    2. '               ' → logprob: -5.264341831207275
    3. '	' → logprob: -5.764341831207275
    4. 'return' → logprob: -6.139341831207275
    5. ' return' → logprob: -6.514341831207275
    6. '           ' → logprob: -7.014341831207275
    7. '	return' → logprob: -7.389341831207275
    8. '<|end|>' → logprob: -8.014342308044434
    9. '   ' → logprob: -8.889342308044434
    10. '
' → logprob: -9.139342308044434

Token 151: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018183421343564987
    2. 'return' → logprob: -5.14318323135376
    3. ' return' → logprob: -5.26818323135376
    4. '           ' → logprob: -5.89318323135376
    5. '   ' → logprob: -6.01818323135376
    6. '	return' → logprob: -7.14318323135376
    7. '	' → logprob: -7.26818323135376
    8. '               ' → logprob: -8.768183708190918
    9. '
' → logprob: -9.393183708190918
    10. '	   ' → logprob: -10.393183708190918

Token 152: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01937088370323181
    2. 'p' → logprob: -4.019371032714844
    3. ' pos' → logprob: -7.394371032714844
    4. 'pos' → logprob: -7.519371032714844
    5. 'False' → logprob: -11.144371032714844
    6. ' isinstance' → logprob: -11.269371032714844
    7. ' ' → logprob: -11.769371032714844
    8. ' False' → logprob: -11.894371032714844
    9. '0' → logprob: -12.144371032714844
    10. ' ' → logprob: -12.644371032714844

Token 153: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11940779536962509
    2. ' <' → logprob: -2.994407892227173
    3. '==' → logprob: -2.994407892227173
    4. ' >' → logprob: -5.369407653808594
    5. ' >=' → logprob: -5.869407653808594
    6. '<' → logprob: -5.994407653808594
    7. ' <=' → logprob: -6.619407653808594
    8. '>' → logprob: -7.619407653808594
    9. ' ' → logprob: -8.369407653808594
    10. '=' → logprob: -8.994407653808594

Token 154: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4288312494754791
    2. ' end' → logprob: -1.0538312196731567
    3. ' ' → logprob: -9.678831100463867
    4. 'n' → logprob: -10.678831100463867
    5. '0' → logprob: -11.053831100463867
    6. '=end' → logprob: -11.303831100463867
    7. ' n' → logprob: -11.803831100463867
    8. '	end' → logprob: -12.553831100463867
    9. '(end' → logprob: -12.928831100463867
    10. '>end' → logprob: -14.178831100463867

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05218302458524704
    2. ':
' → logprob: -3.052182912826538
    3. ':return' → logprob: -5.677183151245117
    4. ' :' → logprob: -9.927183151245117
    5. '):' → logprob: -11.177183151245117
    6. '):
' → logprob: -11.302183151245117
    7. '       ' → logprob: -11.427183151245117
    8. ':

' → logprob: -11.677183151245117
    9. '   ' → logprob: -11.677183151245117
    10. ')' → logprob: -11.927183151245117

Token 156: '           ' (ID: 352)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12515835464000702
    2. '       ' → logprob: -3.0001583099365234
    3. '           ' → logprob: -3.1251583099365234
    4. '<|end|>' → logprob: -5.250158309936523
    5. ' end' → logprob: -5.625158309936523
    6. 'p' → logprob: -5.625158309936523
    7. ' ' → logprob: -5.750158309936523
    8. ' return' → logprob: -6.000158309936523
    9. '=end' → logprob: -7.250158309936523
    10. '        ' → logprob: -7.250158309936523

Token 157: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2549650967121124
    2. 'p' (adapté à ' p') → logprob: -1.50496506690979
    3. '           ' → logprob: -6.004965305328369
    4. '       ' → logprob: -8.129964828491211
    5. 'return' → logprob: -9.004964828491211
    6. 'end' → logprob: -9.379964828491211
    7. ' return' → logprob: -10.504964828491211
    8. ' end' → logprob: -11.129964828491211
    9. '   ' → logprob: -11.754964828491211
    10. '               ' → logprob: -12.254964828491211

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868749439716339
    2. ' =' → logprob: -1.1368749141693115
    3. '=p' → logprob: -13.51187515258789
    4. '<|end|>' → logprob: -14.01187515258789
    5. '=end' → logprob: -14.13687515258789
    6. ' ' → logprob: -15.38687515258789
    7. ')' → logprob: -15.63687515258789
    8. '=}' → logprob: -15.76187515258789
    9. 'p' → logprob: -16.63687515258789
    10. ' =)' → logprob: -16.63687515258789

Token 159: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.061967797577381134
    2. ' end' → logprob: -2.8119678497314453
    3. '(end' → logprob: -16.686967849731445
    4. '=end' → logprob: -16.811967849731445
    5. '	end' → logprob: -16.936967849731445
    6. ' ' → logprob: -17.936967849731445
    7. '[end' → logprob: -18.436967849731445
    8. 'End' → logprob: -18.561967849731445
    9. '   ' → logprob: -18.561967849731445
    10. 'endon' → logprob: -18.686967849731445

Token 160: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2915537655353546
    2. '<|end|>' → logprob: -1.9165537357330322
    3. '   ' → logprob: -3.0415537357330322
    4. '       ' → logprob: -4.041553974151611
    5. 'return' → logprob: -4.291553974151611
    6. ' return' → logprob: -4.541553974151611
    7. '\n' → logprob: -5.291553974151611
    8. '<|end|>' → logprob: -5.666553974151611
    9. '	return' → logprob: -6.166553974151611
    10. '    
' → logprob: -6.416553974151611

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7292194366455078
    2. '   ' → logprob: -1.4792194366455078
    3. ' return' → logprob: -1.7292194366455078
    4. 'return' → logprob: -3.104219436645508
    5. '<|end|>' → logprob: -3.604219436645508
    6. '	return' → logprob: -3.729219436645508
    7. '\n' → logprob: -5.354219436645508
    8. '
' → logprob: -5.604219436645508
    9. '	' → logprob: -6.229219436645508
    10. '<|end|>' → logprob: -6.729219436645508

Token 162: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3665357828140259
    2. '   ' → logprob: -1.8665357828140259
    3. ' return' → logprob: -1.9915357828140259
    4. 'return' → logprob: -4.241535663604736
    5. '	return' → logprob: -6.866535663604736
    6. '    
' → logprob: -9.366536140441895
    7. '        
' → logprob: -9.616536140441895
    8. '
' → logprob: -10.241536140441895
    9. '           ' → logprob: -10.741536140441895
    10. ':return' → logprob: -11.116536140441895

Token 163: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0030777675565332174
    2. 'p' → logprob: -5.878077983856201
    3. ' pos' → logprob: -8.753077507019043
    4. 'pos' → logprob: -9.378077507019043
    5. ' isinstance' → logprob: -11.753077507019043
    6. ' ' → logprob: -12.003077507019043
    7. ' not' → logprob: -12.628077507019043
    8. '0' → logprob: -12.628077507019043
    9. ' ' → logprob: -14.128077507019043
    10. '(p' → logprob: -14.190577507019043

Token 164: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1144968569278717
    2. ' ==' → logprob: -2.239496946334839
    3. '<' → logprob: -6.98949670791626
    4. '==' → logprob: -7.73949670791626
    5. ' ' → logprob: -8.614497184753418
    6. '<|end|>' → logprob: -9.739497184753418
    7. ' <=' → logprob: -10.739497184753418
    8. ' >' → logprob: -10.989497184753418
    9. ' >=' → logprob: -11.239497184753418
    10. '0' → logprob: -12.239497184753418

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010730616049841046
    2. ' ' → logprob: -6.876072883605957
    3. '=' → logprob: -10.126072883605957
    4. ' =' → logprob: -17.001073837280273
    5. '<|end|>' → logprob: -17.001073837280273
    6. '1' → logprob: -17.126073837280273
    7. '```' → logprob: -17.501073837280273
    8. ')' → logprob: -18.501073837280273
    9. '   ' → logprob: -18.626073837280273
    10. '۰' → logprob: -18.876073837280273

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6550729419104755e-05
    2. '=' → logprob: -10.500036239624023
    3. ' ' → logprob: -11.625036239624023
    4. '1' → logprob: -17.625036239624023
    5. '```' → logprob: -17.625036239624023
    6. ' =' → logprob: -18.250036239624023
    7. '-' → logprob: -18.875036239624023
    8. '۰' → logprob: -19.250036239624023
    9. '`' → logprob: -19.625036239624023
    10. ' ' → logprob: -19.750036239624023

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7216429710388184
    2. ':
' → logprob: -0.9716429710388184
    3. '       ' → logprob: -2.0966429710388184
    4. '           ' → logprob: -5.096642971038818
    5. '   ' → logprob: -6.221642971038818
    6. ',' → logprob: -6.596642971038818
    7. '0' → logprob: -6.721642971038818
    8. '):
' → logprob: -7.346642971038818
    9. '=' → logprob: -7.971642971038818
    10. '<|end|>' → logprob: -8.471643447875977

Token 168: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017525337170809507
    2. '       ' → logprob: -6.5017523765563965
    3. ' ' → logprob: -8.376752853393555
    4. '   ' → logprob: -11.501752853393555
    5. '           ' → logprob: -12.126752853393555
    6. 'p' → logprob: -12.751752853393555
    7. ' p' → logprob: -14.626752853393555
    8. '	' → logprob: -14.876752853393555
    9. '	       ' → logprob: -16.001752853393555
    10. '        ' → logprob: -16.251752853393555

Token 169: ' p' (ID: 275)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009759039618074894
    2. ' ' → logprob: -4.634758949279785
    3. '           ' → logprob: -12.884758949279785
    4. '       ' → logprob: -15.634758949279785
    5. 'p' (adapté à ' p') → logprob: -16.0097599029541
    6. '   ' → logprob: -16.0097599029541
    7. ' p' → logprob: -16.8847599029541
    8. ' ' → logprob: -17.1347599029541
    9. '```' → logprob: -17.3847599029541
    10. '=' → logprob: -18.3222599029541

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. 'p' → logprob: -17.288042068481445
    4. ' ' → logprob: -17.663042068481445
    5. '0' → logprob: -18.288042068481445
    6. ')' → logprob: -18.538042068481445
    7. ' ' → logprob: -19.038042068481445
    8. '<|end|>' → logprob: -19.288042068481445
    9. '＝' → logprob: -19.288042068481445
    10. '=
' → logprob: -19.413042068481445

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.625051498413086
    4. '۰' → logprob: -20.375051498413086
    5. '  ' → logprob: -21.250051498413086
    6. ' ' → logprob: -21.750051498413086
    7. '０' → logprob: -21.937551498413086
    8. '00' → logprob: -22.375051498413086
    9. '
' → logprob: -22.437551498413086
    10. '```' → logprob: -22.500051498413086

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -19.75
    4. '```' → logprob: -21.125
    5. '０' → logprob: -21.625
    6. '00' → logprob: -21.6875
    7. '`' → logprob: -21.8125
    8. '   ' → logprob: -22.375
    9. '﻿' → logprob: -22.5625
    10. '
' → logprob: -22.625

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03171352297067642
    2. ' return' → logprob: -4.406713485717773
    3. 'return' → logprob: -4.781713485717773
    4. '	return' → logprob: -5.031713485717773
    5. '   ' → logprob: -5.781713485717773
    6. '
' → logprob: -7.781713485717773
    7. '<|end|>' → logprob: -8.406713485717773
    8. '	' → logprob: -8.656713485717773
    9. ':return' → logprob: -9.781713485717773
    10. ',' → logprob: -10.781713485717773

Token 174: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6462902426719666
    2. '       ' → logprob: -0.8962902426719666
    3. '	return' → logprob: -3.3962903022766113
    4. ' return' → logprob: -3.7712903022766113
    5. 'return' → logprob: -5.646290302276611
    6. '	' → logprob: -5.771290302276611
    7. '<|end|>' → logprob: -6.021290302276611
    8. ':return' → logprob: -6.896290302276611
    9. '    
' → logprob: -8.396289825439453
    10. '	   ' → logprob: -8.646289825439453

Token 175: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.989698052406311
    2. ' return' → logprob: -0.989698052406311
    3. 'return' (adapté à ' return') → logprob: -1.614698052406311
    4. '	return' → logprob: -3.9896979331970215
    5. '       ' → logprob: -4.2396979331970215
    6. ':return' → logprob: -4.3646979331970215
    7. '
' → logprob: -4.9896979331970215
    8. '    
' → logprob: -5.8646979331970215
    9. '\n' → logprob: -7.1146979331970215
    10. '<|end|>' → logprob: -7.7396979331970215

Token 176: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03804149478673935
    2. ' p' → logprob: -3.288041591644287
    3. '​' → logprob: -20.913042068481445
    4. ' ' → logprob: -21.163042068481445
    5. '(p' → logprob: -21.663042068481445
    6. '	p' → logprob: -21.663042068481445
    7. 'pos' → logprob: -22.288042068481445
    8. '```' → logprob: -23.038042068481445
    9. '‌' → logprob: -23.413042068481445
    10. '$p' → logprob: -23.538042068481445

Token 177: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09583606570959091
    2. ':' → logprob: -3.4708361625671387
    3. ')' → logprob: -4.720836162567139
    4. 'dp' → logprob: -4.845836162567139
    5. 'def' → logprob: -5.095836162567139
    6. '    
' → logprob: -5.095836162567139
    7. 'visited' → logprob: -5.095836162567139
    8. ' ' → logprob: -5.345836162567139
    9. '
' → logprob: -5.470836162567139
    10. 'memo' → logprob: -6.095836162567139

Token 179: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5294130444526672
    2. '   ' → logprob: -1.7794129848480225
    3. 'visited' → logprob: -2.5294129848480225
    4. 'memo' → logprob: -2.9044129848480225
    5. 'mem' → logprob: -3.5294129848480225
    6. 'cache' → logprob: -4.029413223266602
    7. 'def' → logprob: -4.154413223266602
    8. 'dist' → logprob: -4.279413223266602
    9. 'from' (adapté à ' from') → logprob: -4.779413223266602
    10. ':' → logprob: -5.154413223266602

Token 180: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.023279258981347084
    2. ' collections' → logprob: -3.7732791900634766
    3. 'heap' → logprob: -11.023279190063477
    4. 'math' → logprob: -11.523279190063477
    5. ' functools' → logprob: -12.148279190063477
    6. 'fun' → logprob: -13.898279190063477
    7. 'sys' → logprob: -14.023279190063477
    8. ' math' → logprob: -15.273279190063477
    9. 'queue' → logprob: -15.398279190063477
    10. ' heap' → logprob: -16.648279190063477

Token 181: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03365468978881836
    2. ' import' → logprob: -3.4086546897888184
    3. '	import' → logprob: -12.158655166625977
    4. '```' → logprob: -13.283655166625977
    5. '_import' → logprob: -14.658655166625977
    6. 'deque' → logprob: -15.408655166625977
    7. 'from' → logprob: -15.658655166625977
    8. '<|end|>' → logprob: -16.033655166625977
    9. ' importar' → logprob: -16.158655166625977
    10. ''import' → logprob: -16.283655166625977

Token 182: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.008616226725280285
    2. ' deque' → logprob: -4.7586164474487305
    3. ' defaultdict' → logprob: -13.63361644744873
    4. 'de' → logprob: -15.38361644744873
    5. 'default' → logprob: -16.133615493774414
    6. 'collections' → logprob: -16.133615493774414
    7. 'l' → logprob: -17.883615493774414
    8. 'queue' → logprob: -20.008615493774414
    9. 'fun' → logprob: -21.008615493774414
    10. 'Deque' → logprob: -21.758615493774414

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49192655086517334
    2. '
' → logprob: -1.1169265508651733
    3. '    
' → logprob: -2.991926670074463
    4. 'queue' → logprob: -4.991926670074463
    5. 'visited' → logprob: -6.991926670074463
    6. ' queue' → logprob: -7.241926670074463
    7. '  
' → logprob: -7.491926670074463
    8. 'dp' → logprob: -7.991926670074463
    9. '   
' → logprob: -8.116926193237305
    10. '	queue' → logprob: -8.116926193237305

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03777417540550232
    2. 'visited' → logprob: -3.912774085998535
    3. 'dist' → logprob: -4.787774085998535
    4. 'queue' → logprob: -5.787774085998535
    5. '
' → logprob: -5.912774085998535
    6. '    
' → logprob: -6.287774085998535
    7. 'distance' → logprob: -7.537774085998535
    8. ' visited' → logprob: -8.287774085998535
    9. 'q' → logprob: -9.162774085998535
    10. 'dp' → logprob: -9.662774085998535

Token 185: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13688379526138306
    2. 'queue' → logprob: -3.1368837356567383
    3. '   ' → logprob: -3.2618837356567383
    4. 'q' → logprob: -4.011883735656738
    5. 'dp' → logprob: -4.011883735656738
    6. 'visited' → logprob: -4.761883735656738
    7. 'dq' → logprob: -8.011883735656738
    8. 'Q' → logprob: -8.011883735656738
    9. 'que' → logprob: -8.636883735656738
    10. 'distance' → logprob: -9.136883735656738

Token 186: ' Build' (ID: 10885)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21035423874855042
    2. 'visited' → logprob: -2.5853543281555176
    3. 'queue' → logprob: -2.9603543281555176
    4. 'q' → logprob: -3.2103543281555176
    5. 'dp' → logprob: -4.960354328155518
    6. 'def' → logprob: -5.710354328155518
    7. 'que' → logprob: -5.835354328155518
    8. ' dist' → logprob: -6.085354328155518
    9. ' visited' → logprob: -6.710354328155518
    10. 'dq' → logprob: -6.835354328155518

Token 187: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.45262610912323
    2. ' graph' → logprob: -1.20262610912323
    3. 'dist' → logprob: -3.3276262283325195
    4. 'adj' → logprob: -4.2026262283325195
    5. 'queue' → logprob: -5.0776262283325195
    6. ' dist' → logprob: -6.7026262283325195
    7. ' queue' → logprob: -6.8276262283325195
    8. 'q' → logprob: -6.9526262283325195
    9. 'next' → logprob: -7.2026262283325195
    10. 'dp' → logprob: -7.3276262283325195

Token 188: ':' (ID: 25)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8591932058334351
    2. ' =' → logprob: -1.859193205833435
    3. 'graph' → logprob: -1.859193205833435
    4. '   ' → logprob: -1.984193205833435
    5. 'adj' → logprob: -3.3591933250427246
    6. '=' → logprob: -3.9841933250427246
    7. '(graph' → logprob: -4.109193325042725
    8. ':' → logprob: -4.484193325042725
    9. ' edges' → logprob: -4.484193325042725
    10. ' adjacency' → logprob: -4.609193325042725

Token 189: ' from' (ID: 591)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2561117708683014
    2. 'graph' → logprob: -1.506111741065979
    3. ' adj' → logprob: -6.6311116218566895
    4. 'adj' → logprob: -7.0061116218566895
    5. ' edges' → logprob: -7.6311116218566895
    6. '   ' → logprob: -8.006112098693848
    7. 'dist' → logprob: -8.006112098693848
    8. 'g' → logprob: -8.631112098693848
    9. ' dist' → logprob: -9.006112098693848
    10. 'edges' → logprob: -9.506112098693848

Token 190: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7299389839172363
    2. '0' → logprob: -1.6049389839172363
    3. 'each' → logprob: -2.2299389839172363
    4. ' each' → logprob: -3.1049389839172363
    5. 'position' → logprob: -3.1049389839172363
    6. ' position' → logprob: -3.6049389839172363
    7. ' pos' → logprob: -4.354938983917236
    8. 'positions' → logprob: -4.479938983917236
    9. 'range' → logprob: -4.604938983917236
    10. 'collections' → logprob: -4.729938983917236

Token 191: ' node' (ID: 4596)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.5107900500297546
    2. 'pos' → logprob: -1.3857901096343994
    3. 'position' → logprob: -2.1357901096343994
    4. ' node' → logprob: -4.13578987121582
    5. ' pos' → logprob: -4.26078987121582
    6. 'node' → logprob: -6.76078987121582
    7. ' positions' → logprob: -9.26078987121582
    8. 'positions' → logprob: -9.63578987121582
    9. 'p' → logprob: -10.13578987121582
    10. 'state' → logprob: -10.88578987121582

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44501739740371704
    2. ' ,' → logprob: -2.1950173377990723
    3. ' =' → logprob: -2.1950173377990723
    4. ' for' → logprob: -2.4450173377990723
    5. '   ' → logprob: -4.820017337799072
    6. 'for' → logprob: -4.820017337799072
    7. ' in' → logprob: -5.070017337799072
    8. '[' → logprob: -5.695017337799072
    9. ' (' → logprob: -5.695017337799072
    10. ' of' → logprob: -5.945017337799072

Token 193: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5578776001930237
    2. 'for' → logprob: -1.682877540588379
    3. ' edges' → logprob: -2.307877540588379
    4. ' neighbors' → logprob: -2.807877540588379
    5. 'neighbors' → logprob: -4.307877540588379
    6. ' there' → logprob: -4.307877540588379
    7. ' we' → logprob: -4.682877540588379
    8. ' all' → logprob: -4.807877540588379
    9. ' the' → logprob: -5.057877540588379
    10. ' next' → logprob: -5.307877540588379

Token 194: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31352242827415466
    2. '=' → logprob: -1.313522458076477
    3. '=[]' → logprob: -8.938522338867188
    4. 'for' → logprob: -9.813522338867188
    5. '   ' → logprob: -10.813522338867188
    6. '[' → logprob: -11.313522338867188
    7. ' for' → logprob: -11.438522338867188
    8. 'to' → logprob: -11.438522338867188
    9. 's' → logprob: -12.063522338867188
    10. ' to' → logprob: -13.188522338867188

Token 195: ' next' (ID: 2613)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.169051170349121
    2. 'all' → logprob: -1.294051170349121
    3. ' all' → logprob: -1.919051170349121
    4. '[pos' → logprob: -2.669051170349121
    5. 'next' → logprob: -2.919051170349121
    6. 'positions' → logprob: -3.294051170349121
    7. '[]' → logprob: -3.544051170349121
    8. '[' → logprob: -4.419051170349121
    9. '[node' → logprob: -4.669051170349121
    10. ' next' → logprob: -4.794051170349121

Token 196: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.6027239561080933
    2. 'positions' → logprob: -1.6027239561080933
    3. '_nodes' → logprob: -2.227724075317383
    4. '[' → logprob: -3.602724075317383
    5. '_pos' → logprob: -3.852724075317383
    6. '=[]' → logprob: -4.227724075317383
    7. '[]' → logprob: -4.352724075317383
    8. ' positions' → logprob: -4.352724075317383
    9. 'nodes' → logprob: -4.852724075317383
    10. '   ' → logprob: -4.852724075317383

Token 197: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6408882141113281
    2. ' =' → logprob: -1.6408882141113281
    3. ' graph' → logprob: -1.7658882141113281
    4. 'graph' → logprob: -2.640888214111328
    5. ':' → logprob: -4.765888214111328
    6. ' edges' → logprob: -5.015888214111328
    7. '=' → logprob: -5.515888214111328
    8. '
' → logprob: -5.515888214111328
    9. ' for' → logprob: -5.765888214111328
    10. 'adj' → logprob: -6.140888214111328

Token 198: ' each' (ID: 2454)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.3719971477985382
    2. 'i' → logprob: -1.9969971179962158
    3. ' roll' → logprob: -2.371997117996216
    4. 'range' → logprob: -3.246997117996216
    5. ' range' → logprob: -3.996997117996216
    6. ' i' → logprob: -4.121997356414795
    7. ' rolls' → logprob: -5.871997356414795
    8. 'rolling' → logprob: -6.371997356414795
    9. ' rolling' → logprob: -6.746997356414795
    10. '   ' → logprob: -8.371996879577637

Token 199: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.07687956094741821
    2. ' range' → logprob: -3.2018795013427734
    3. 'roll' → logprob: -3.8268795013427734
    4. ' i' → logprob: -5.326879501342773
    5. 'range' → logprob: -6.326879501342773
    6. ' for' → logprob: -6.451879501342773
    7. '   ' → logprob: -7.326879501342773
    8. '_roll' → logprob: -7.326879501342773
    9. ' possible' → logprob: -7.576879501342773
    10. ' ' → logprob: -7.701879501342773

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06576666980981827
    2. ' graph' → logprob: -3.1907665729522705
    3. '
' → logprob: -4.56576681137085
    4. 'graph' → logprob: -4.69076681137085
    5. ' edges' → logprob: -7.31576681137085
    6. 'edges' → logprob: -7.31576681137085
    7. '	graph' → logprob: -7.44076681137085
    8. '    
' → logprob: -8.190766334533691
    9. ',' → logprob: -9.065766334533691
    10. 'adj' → logprob: -9.190766334533691

Token 201: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1004343032836914
    2. '   ' → logprob: -1.3504343032836914
    3. ' graph' → logprob: -1.4754343032836914
    4. 'graph' → logprob: -1.8504343032836914
    5. '	graph' → logprob: -4.725434303283691
    6. 'visited' → logprob: -6.475434303283691
    7. 'adj' → logprob: -6.475434303283691
    8. 'edges' → logprob: -6.725434303283691
    9. '    
' → logprob: -7.100434303283691
    10. 'raph' → logprob: -7.225434303283691

Token 202: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.4818175137042999
    2. ' graph' → logprob: -0.9818174839019775
    3. '   ' → logprob: -5.856817722320557
    4. 'adj' → logprob: -6.356817722320557
    5. 'g' → logprob: -7.231817722320557
    6. '
' → logprob: -7.731817722320557
    7. 'edges' → logprob: -7.856817722320557
    8. 'dist' → logprob: -7.981817722320557
    9. ' adj' → logprob: -7.981817722320557
    10. ' edges' → logprob: -8.106817245483398

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132653534412384
    2. '=' → logprob: -1.313265323638916
    3. '[' → logprob: -13.063265800476074
    4. ',' → logprob: -15.063265800476074
    5. ' ' → logprob: -15.188265800476074
    6. ')' → logprob: -15.438265800476074
    7. '={}' → logprob: -15.438265800476074
    8. '   ' → logprob: -15.563265800476074
    9. '=[]' → logprob: -15.813265800476074
    10. ' ={' → logprob: -16.563264846801758

Token 204: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0323357917368412
    2. '{' → logprob: -4.0323357582092285
    3. ' [[]' → logprob: -4.2823357582092285
    4. '{}' → logprob: -8.532336235046387
    5. ' [' → logprob: -9.782336235046387
    6. ' {' → logprob: -11.282336235046387
    7. '[[' → logprob: -12.282336235046387
    8. '[]' → logprob: -13.532336235046387
    9. 'default' → logprob: -13.907336235046387
    10. '   ' → logprob: -14.532336235046387

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3887285590171814
    2. ' for' → logprob: -1.1387286186218262
    3. ']' → logprob: -7.513728618621826
    4. ',' → logprob: -8.013728141784668
    5. ')' → logprob: -8.263728141784668
    6. '   ' → logprob: -8.388728141784668
    7. '(range' → logprob: -9.138728141784668
    8. '(' → logprob: -9.513728141784668
    9. ' in' → logprob: -9.638728141784668
    10. '
' → logprob: -9.888728141784668

Token 206: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0075784665532410145
    2. ' range' → logprob: -5.007578372955322
    3. 'range' → logprob: -7.257578372955322
    4. ' _' → logprob: -9.38257884979248
    5. 'i' → logprob: -10.13257884979248
    6. ' i' → logprob: -10.63257884979248
    7. '_range' → logprob: -12.25757884979248
    8. '_i' → logprob: -13.13257884979248
    9. '_
' → logprob: -14.38257884979248
    10. ' in' → logprob: -14.50757884979248

Token 207: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038261111825704575
    2. ' range' → logprob: -3.2882611751556396
    3. 'in' → logprob: -8.913261413574219
    4. ' in' → logprob: -9.788261413574219
    5. '(range' → logprob: -10.913261413574219
    6. 'end' → logprob: -12.288261413574219
    7. ' ' → logprob: -12.538261413574219
    8. '  ' → logprob: -14.413261413574219
    9. '   ' → logprob: -14.913261413574219
    10. 'i' → logprob: -14.913261413574219

Token 208: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019294669618830085
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -14.37692928314209
    4. '   ' → logprob: -15.50192928314209
    5. ' ' → logprob: -18.126930236816406
    6. '	range' → logprob: -19.376930236816406
    7. '  ' → logprob: -19.876930236816406
    8. '
' → logprob: -20.501930236816406
    9. '`' → logprob: -20.876930236816406
    10. '```' → logprob: -21.001930236816406

Token 209: '(end' (ID: 29409)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4764813482761383
    2. '(end' → logprob: -1.101481318473816
    3. 'n' → logprob: -3.8514814376831055
    4. '(n' → logprob: -3.9764814376831055
    5. ' end' → logprob: -5.1014814376831055
    6. '(' → logprob: -8.351481437683105
    7. ' n' → logprob: -8.476481437683105
    8. ' (' → logprob: -9.976481437683105
    9. '   ' → logprob: -10.226481437683105
    10. '=end' → logprob: -10.976481437683105

Token 210: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.31645965576171875
    2. '+' → logprob: -1.3164596557617188
    3. ' +' → logprob: -5.941459655761719
    4. ')]
' → logprob: -7.941459655761719
    5. ' )' → logprob: -8.691459655761719
    6. ')' → logprob: -11.566459655761719
    7. ')]

' → logprob: -11.691459655761719
    8. '   ' → logprob: -11.816459655761719
    9. ')]
' → logprob: -12.191459655761719
    10. ')][' → logprob: -12.941459655761719

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026345467194914818
    2. '2' → logprob: -3.6513454914093018
    3. ' ' → logprob: -10.651345252990723
    4. '0' → logprob: -11.651345252990723
    5. '3' → logprob: -12.276345252990723
    6. '7' → logprob: -13.401345252990723
    7. '
' → logprob: -13.838845252990723
    8. '10' → logprob: -13.963845252990723
    9. '   ' → logprob: -14.026345252990723
    10. '5' → logprob: -14.151345252990723

Token 212: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014350365847349167
    2. ')]
' → logprob: -4.264350414276123
    3. ')]

' → logprob: -9.264349937438965
    4. ')]
' → logprob: -9.639349937438965
    5. ']' → logprob: -10.889349937438965
    6. ' )' → logprob: -12.264349937438965
    7. ')' → logprob: -13.514349937438965
    8. ' ]' → logprob: -14.514349937438965
    9. '   ' → logprob: -15.014349937438965
    10. '])' → logprob: -15.014349937438965

Token 213: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3342902660369873
    2. ' for' → logprob: -1.3342902660369873
    3. '   ' → logprob: -3.9592902660369873
    4. '
' → logprob: -6.584290504455566
    5. '	for' → logprob: -8.459290504455566
    6. '    
' → logprob: -9.959290504455566
    7. '  
' → logprob: -10.459290504455566
    8. ')' → logprob: -11.334290504455566
    9. '```' → logprob: -11.459290504455566
    10. '<|end|>' → logprob: -11.459290504455566

Token 214: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1603194773197174
    2. ' for' → logprob: -1.910319447517395
    3. '   ' → logprob: -9.285319328308105
    4. '	for' → logprob: -13.160319328308105
    5. '
' → logprob: -14.910319328308105
    6. ' ' → logprob: -16.035320281982422
    7. '    
' → logprob: -17.035320281982422
    8. ' 
' → logprob: -17.035320281982422
    9. '```' → logprob: -17.035320281982422
    10. 'range' → logprob: -17.535320281982422

Token 215: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4744512140750885
    2. ' pos' → logprob: -0.9744511842727661
    3. 'i' → logprob: -8.349451065063477
    4. ' i' → logprob: -9.224451065063477
    5. 'p' → logprob: -10.474451065063477
    6. 'u' → logprob: -13.099451065063477
    7. ' p' → logprob: -13.349451065063477
    8. '	pos' → logprob: -13.349451065063477
    9. '(pos' → logprob: -13.974451065063477
    10. ' node' → logprob: -13.974451065063477

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005255933851003647
    2. 'in' → logprob: -5.255255699157715
    3. ' ' → logprob: -11.380255699157715
    4. ',' → logprob: -12.505255699157715
    5. '+' → logprob: -13.630255699157715
    6. ')' → logprob: -14.005255699157715
    7. '   ' → logprob: -14.255255699157715
    8. '0' → logprob: -14.630255699157715
    9. 'import' → logprob: -14.630255699157715
    10. '	in' → logprob: -15.005255699157715

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10060883313417435
    2. ' range' → logprob: -2.3506088256835938
    3. '0' → logprob: -7.850608825683594
    4. ' ' → logprob: -11.350608825683594
    5. '(range' → logprob: -15.100608825683594
    6. '   ' → logprob: -15.600608825683594
    7. ' xrange' → logprob: -16.725608825683594
    8. 'r' → logprob: -16.850608825683594
    9. '	range' → logprob: -17.100608825683594
    10. ' in' → logprob: -17.475608825683594

Token 218: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.012155110947787762
    2. 'end' → logprob: -5.262155055999756
    3. '(' → logprob: -5.387155055999756
    4. ' end' → logprob: -6.262155055999756
    5. ' (' → logprob: -8.137155532836914
    6. '0' → logprob: -9.387155532836914
    7. ' ' → logprob: -11.137155532836914
    8. ',end' → logprob: -11.762155532836914
    9. '=end' → logprob: -12.887155532836914
    10. 's' → logprob: -13.012155532836914

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07039140909910202
    2. ' +' → logprob: -2.9453914165496826
    3. '):' → logprob: -4.3203911781311035
    4. '):
' → logprob: -6.1953911781311035
    5. '   ' → logprob: -10.445391654968262
    6. '-' → logprob: -11.195391654968262
    7. ' ):' → logprob: -12.195391654968262
    8. ' -' → logprob: -12.695391654968262
    9. '):

' → logprob: -13.820391654968262
    10. '):
' → logprob: -14.445391654968262

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004228091274853796
    2. ' ' → logprob: -8.125422477722168
    3. '2' → logprob: -9.000422477722168
    4. '   ' → logprob: -14.000422477722168
    5. '0' → logprob: -14.125422477722168
    6. '
' → logprob: -14.375422477722168
    7. '+' → logprob: -15.000422477722168
    8. ')' → logprob: -15.250422477722168
    9. '7' → logprob: -15.375422477722168
    10. '```' → logprob: -16.062923431396484

Token 221: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932983994483948
    2. '):' → logprob: -0.6932983994483948
    3. '):
' → logprob: -9.44329833984375
    4. '   ' → logprob: -10.56829833984375
    5. ':' → logprob: -10.81829833984375
    6. ' ):' → logprob: -11.56829833984375
    7. ')' → logprob: -11.94329833984375
    8. ' ):
' → logprob: -12.19329833984375
    9. '+' → logprob: -13.06829833984375
    10. '):

' → logprob: -13.94329833984375

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28947776556015015
    2. ' for' → logprob: -1.539477825164795
    3. '   ' → logprob: -3.414477825164795
    4. 'for' → logprob: -6.164477825164795
    5. ',' → logprob: -7.914477825164795
    6. '	   ' → logprob: -8.289477348327637
    7. '    ' → logprob: -8.414477348327637
    8. '    
' → logprob: -8.539477348327637
    9. '	for' → logprob: -8.664477348327637
    10. ' ' → logprob: -8.789477348327637

Token 223: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3297506272792816
    2. ' for' → logprob: -1.454750657081604
    3. '   ' → logprob: -3.0797505378723145
    4. '       ' → logprob: -6.5797505378723145
    5. '	for' → logprob: -9.829751014709473
    6. ' ' → logprob: -10.954751014709473
    7. 'if' (adapté à ' if') → logprob: -12.829751014709473
    8. '   ' → logprob: -13.829751014709473
    9. '    ' → logprob: -14.079751014709473
    10. '           ' → logprob: -14.204751014709473

Token 224: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5231912732124329
    2. 'pos' → logprob: -0.8981912732124329
    3. '	pos' → logprob: -11.773191452026367
    4. ' not' → logprob: -11.835691452026367
    5. 'graph' → logprob: -11.898191452026367
    6. 'p' → logprob: -12.148191452026367
    7. ' graph' → logprob: -12.148191452026367
    8. '(pos' → logprob: -12.460691452026367
    9. ' ' → logprob: -12.585691452026367
    10. '   ' → logprob: -12.773191452026367

Token 225: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6348661780357361
    2. '<' → logprob: -0.7598661780357361
    3. ' ==' → logprob: -7.759866237640381
    4. '==' → logprob: -7.759866237640381
    5. '<len' → logprob: -7.759866237640381
    6. ' !=' → logprob: -8.009865760803223
    7. '!=' → logprob: -8.884865760803223
    8. '<n' → logprob: -8.884865760803223
    9. '<num' → logprob: -9.634865760803223
    10. ' ' → logprob: -9.634865760803223

Token 226: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3134101927280426
    2. ' end' → logprob: -1.3134101629257202
    3. ' ' → logprob: -9.313409805297852
    4. '0' → logprob: -10.063409805297852
    5. '=end' → logprob: -12.688409805297852
    6. '	end' → logprob: -13.063409805297852
    7. ' n' → logprob: -13.188409805297852
    8. '   ' → logprob: -13.313409805297852
    9. 'n' → logprob: -13.313409805297852
    10. '(end' → logprob: -13.438409805297852

Token 227: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39017733931541443
    2. ':' → logprob: -1.1401773691177368
    3. '       ' → logprob: -6.390177249908447
    4. '           ' → logprob: -6.640177249908447
    5. '   ' → logprob: -8.265177726745605
    6. 'continue' → logprob: -10.765177726745605
    7. ':
' → logprob: -11.640177726745605
    8. '):
' → logprob: -12.140177726745605
    9. ' continue' → logprob: -12.765177726745605
    10. '	' → logprob: -13.140177726745605

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3563007414340973
    2. '       ' → logprob: -1.231300711631775
    3. '   ' → logprob: -5.6063008308410645
    4. ' continue' → logprob: -5.9813008308410645
    5. 'continue' → logprob: -7.3563008308410645
    6. ':' → logprob: -7.7313008308410645
    7. ',' → logprob: -9.231300354003906
    8. ' for' → logprob: -9.356300354003906
    9. '	   ' → logprob: -9.606300354003906
    10. ':
' → logprob: -10.106300354003906

Token 229: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5523991584777832
    2. 'continue' (adapté à ' continue') → logprob: -1.6773991584777832
    3. '       ' → logprob: -1.9273991584777832
    4. '   ' → logprob: -2.427399158477783
    5. '	continue' → logprob: -5.927399158477783
    6. ' break' → logprob: -7.802399158477783
    7. '           ' → logprob: -8.052398681640625
    8. 'break' → logprob: -8.427398681640625
    9. ' ' → logprob: -10.427398681640625
    10. '	break' → logprob: -10.802398681640625

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20644040405750275
    2. '   ' → logprob: -1.9564404487609863
    3. '
' → logprob: -3.4564404487609863
    4. ' for' → logprob: -4.956440448760986
    5. '    
' → logprob: -5.581440448760986
    6. '        
' → logprob: -7.331440448760986
    7. '	' → logprob: -7.706440448760986
    8. '  
' → logprob: -8.331439971923828
    9. ',' → logprob: -8.581439971923828
    10. '<|end|>' → logprob: -8.581439971923828

Token 231: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14001506567001343
    2. '       ' → logprob: -2.515015125274658
    3. ' for' → logprob: -3.140015125274658
    4. '	for' → logprob: -5.765015125274658
    5. 'for' → logprob: -7.015015125274658
    6. '    
' → logprob: -7.015015125274658
    7. '
' → logprob: -7.890015125274658
    8. '\t' → logprob: -8.3900146484375
    9. '   ' → logprob: -8.3900146484375
    10. '        
' → logprob: -9.0150146484375

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.689344584941864
    2. ' for' → logprob: -0.814344584941864
    3. '   ' → logprob: -3.064344644546509
    4. '       ' → logprob: -4.81434440612793
    5. '	for' → logprob: -8.06434440612793
    6. ' ' → logprob: -11.18934440612793
    7. '    
' → logprob: -11.31434440612793
    8. '```' → logprob: -11.56434440612793
    9. '   ' → logprob: -12.68934440612793
    10. '           ' → logprob: -12.93934440612793

Token 233: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.20116613805294037
    2. 'roll' → logprob: -1.8261661529541016
    3. ' i' → logprob: -4.451166152954102
    4. 'i' → logprob: -4.951166152954102
    5. 'r' → logprob: -6.701166152954102
    6. ' r' → logprob: -7.951166152954102
    7. '_roll' → logprob: -7.951166152954102
    8. '1' → logprob: -8.701166152954102
    9. ' ' → logprob: -8.951166152954102
    10. ' _' → logprob: -9.451166152954102

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018173592165112495
    2. 'in' → logprob: -4.018173694610596
    3. ' ' → logprob: -11.143173217773438
    4. 'import' → logprob: -12.643173217773438
    5. 'range' → logprob: -13.643173217773438
    6. 'space' → logprob: -14.268173217773438
    7. '1' → logprob: -14.518173217773438
    8. '```' → logprob: -14.768173217773438
    9. '	in' → logprob: -14.768173217773438
    10. 'n' → logprob: -15.268173217773438

Token 235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150178715586662
    2. ' range' → logprob: -4.018150329589844
    3. '1' → logprob: -15.643150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '(range' → logprob: -16.768150329589844
    6. '   ' → logprob: -17.018150329589844
    7. '	range' → logprob: -17.018150329589844
    8. ')' → logprob: -18.268150329589844
    9. '```' → logprob: -18.643150329589844
    10. '  ' → logprob: -18.893150329589844

Token 236: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007112398743629456
    2. '1' → logprob: -7.250711441040039
    3. ' (' → logprob: -13.750711441040039
    4. ' ' → logprob: -15.250711441040039
    5. '   ' → logprob: -17.75071144104004
    6. ',' → logprob: -17.75071144104004
    7. '[' → logprob: -19.87571144104004
    8. '(
' → logprob: -20.25071144104004
    9. 'from' → logprob: -20.25071144104004
    10. '(max' → logprob: -20.37571144104004

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -10.875020027160645
    3. 'max' → logprob: -14.000020027160645
    4. '   ' → logprob: -17.500019073486328
    5. ' max' → logprob: -18.250019073486328
    6. '(' → logprob: -19.250019073486328
    7. '１' → logprob: -21.125019073486328
    8. '
' → logprob: -21.125019073486328
    9. '0' → logprob: -21.250019073486328
    10. '(max' → logprob: -21.500019073486328

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031770815257914364
    2. ',max' → logprob: -8.125317573547363
    3. ' ,' → logprob: -10.875317573547363
    4. 'max' → logprob: -13.125317573547363
    5. ',
' → logprob: -15.625317573547363
    6. ',m' → logprob: -16.00031852722168
    7. '(max' → logprob: -16.25031852722168
    8. '1' → logprob: -16.50031852722168
    9. ' ' → logprob: -17.37531852722168
    10. '   ' → logprob: -17.50031852722168

Token 239: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000553151941858232
    2. ' max' → logprob: -7.500553131103516
    3. '(max' → logprob: -16.625553131103516
    4. '10' → logprob: -16.875553131103516
    5. 'min' → logprob: -18.125553131103516
    6. '   ' → logprob: -18.250553131103516
    7. '	max' → logprob: -18.500553131103516
    8. '=max' → logprob: -18.750553131103516
    9. '[max' → logprob: -18.750553131103516
    10. '
' → logprob: -19.125553131103516

Token 240: '_roll' (ID: 121924)
  Prédit: '_roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_roll' → logprob: -1.0280383548888494e-06
    2. 'roll' → logprob: -14.000000953674316
    3. 'Roll' → logprob: -16.625001907348633
    4. '_' → logprob: -17.500001907348633
    5. ' roll' → logprob: -18.125001907348633
    6. '.roll' → logprob: -18.250001907348633
    7. '_move' → logprob: -18.375001907348633
    8. '-roll' → logprob: -18.375001907348633
    9. '+' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.625001907348633

Token 241: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804241120815277
    2. ' +' → logprob: -3.2880423069000244
    3. ')+' → logprob: -14.663042068481445
    4. 'max' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.413042068481445
    6. '   ' → logprob: -16.538042068481445
    7. '()+' → logprob: -16.788042068481445
    8. '```' → logprob: -17.038042068481445
    9. '＋' → logprob: -17.288042068481445
    10. ')' → logprob: -17.663042068481445

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005052540800534189
    2. ' ' → logprob: -7.875505447387695
    3. '+' → logprob: -9.125505447387695
    4. ' +' → logprob: -11.625505447387695
    5. '):
' → logprob: -13.125505447387695
    6. '```' → logprob: -13.250505447387695
    7. ')' → logprob: -13.375505447387695
    8. '   ' → logprob: -14.000505447387695
    9. '2' → logprob: -14.875505447387695
    10. ',' → logprob: -15.625505447387695

Token 243: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520211935043335
    2. '):' → logprob: -1.5020211935043335
    3. ':' → logprob: -10.127020835876465
    4. '):
' → logprob: -11.127020835876465
    5. '   ' → logprob: -11.377020835876465
    6. ':
' → logprob: -11.627020835876465
    7. ' ):
' → logprob: -11.752020835876465
    8. '       ' → logprob: -13.002020835876465
    9. ' ):' → logprob: -13.127020835876465
    10. ')' → logprob: -13.502020835876465

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06904822587966919
    2. '       ' → logprob: -2.8190481662750244
    3. '<|end|>' → logprob: -6.1940484046936035
    4. ':' → logprob: -6.9440484046936035
    5. '<|end|>' → logprob: -6.9440484046936035
    6. ',' → logprob: -7.0690484046936035
    7. '	       ' → logprob: -7.9440484046936035
    8. '   ' → logprob: -8.444047927856445
    9. '            
' → logprob: -8.569047927856445
    10. '):
' → logprob: -8.694047927856445

Token 245: ' np' (ID: 5374)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7235161066055298
    2. ' next' → logprob: -1.3485161066055298
    3. ' nxt' → logprob: -1.7235161066055298
    4. 'graph' → logprob: -3.3485159873962402
    5. 'next' → logprob: -3.3485159873962402
    6. '           ' → logprob: -6.09851598739624
    7. ' to' → logprob: -6.72351598739624
    8. 'n' → logprob: -7.22351598739624
    9. 'to' → logprob: -7.84851598739624
    10. '               ' → logprob: -7.97351598739624

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2681853175163269
    2. '=' → logprob: -1.8931853771209717
    3. 'os' → logprob: -2.5181853771209717
    4. '=os' → logprob: -5.768185138702393
    5. '(os' → logprob: -7.768185138702393
    6. '```' → logprob: -9.51818561553955
    7. ' os' → logprob: -9.64318561553955
    8. 's' → logprob: -9.64318561553955
    9. '.append' → logprob: -9.64318561553955
    10. 'osit' → logprob: -10.26818561553955

Token 247: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.014164566993713379
    2. 'next' → logprob: -4.264164447784424
    3. '(next' → logprob: -14.014164924621582
    4. '	next' → logprob: -15.639164924621582
    5. '.next' → logprob: -16.764163970947266
    6. '_next' → logprob: -17.014163970947266
    7. '[next' → logprob: -17.139163970947266
    8. ',next' → logprob: -17.764163970947266
    9. 'Next' → logprob: -20.014163970947266
    10. '    ' → logprob: -20.264163970947266

Token 248: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.735893965815194e-05
    2. 'pos' → logprob: -11.125017166137695
    3. '_token' → logprob: -13.750017166137695
    4. '(pos' → logprob: -14.000017166137695
    5. '_' → logprob: -15.500017166137695
    6. '[pos' → logprob: -15.625017166137695
    7. '_POS' → logprob: -16.625017166137695
    8. 'Pos' → logprob: -16.750017166137695
    9. ' pos' → logprob: -17.000017166137695
    10. '_position' → logprob: -17.250017166137695

Token 249: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.750046730041504
    4. '[pos' → logprob: -16.25004768371582
    5. ',pos' → logprob: -16.62504768371582
    6. '(Pos' → logprob: -16.62504768371582
    7. '(
' → logprob: -17.87504768371582
    8. '(position' → logprob: -18.62504768371582
    9. '(prev' → logprob: -19.25004768371582
    10. '(p' → logprob: -19.87504768371582

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022392053506337106
    2. ' ,' → logprob: -8.500224113464355
    3. ')' → logprob: -11.750224113464355
    4. ',pos' → logprob: -11.875224113464355
    5. ',
' → logprob: -13.125224113464355
    6. '           ' → logprob: -13.250224113464355
    7. '   ' → logprob: -14.500224113464355
    8. '       ' → logprob: -15.250224113464355
    9. '(' → logprob: -15.375224113464355
    10. ',p' → logprob: -15.500224113464355

Token 251: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.020543519407510757
    2. ' roll' → logprob: -3.8955435752868652
    3. ')' → logprob: -14.645543098449707
    4. ' ' → logprob: -15.145543098449707
    5. '_roll' → logprob: -15.270543098449707
    6. '   ' → logprob: -16.020544052124023
    7. '
' → logprob: -16.020544052124023
    8. 'rol' → logprob: -16.020544052124023
    9. '.roll' → logprob: -16.645544052124023
    10. 'roller' → logprob: -17.145544052124023

Token 252: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3283798098564148
    2. ')' → logprob: -1.3283798694610596
    3. '           ' → logprob: -4.2033796310424805
    4. ')
' → logprob: -9.82837963104248
    5. '               ' → logprob: -13.57837963104248
    6. '       ' → logprob: -13.57837963104248
    7. ' )
' → logprob: -14.32837963104248
    8. ')

' → logprob: -14.57837963104248
    9. '          ' → logprob: -15.07837963104248
    10. ' )' → logprob: -15.32837963104248

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.248469718324486e-05
    2. '		' → logprob: -12.125022888183594
    3. '<|end|>' → logprob: -12.375022888183594
    4. ',' → logprob: -13.250022888183594
    5. '            
' → logprob: -13.250022888183594
    6. '	       ' → logprob: -13.250022888183594
    7. '       ' → logprob: -13.375022888183594
    8. '
' → logprob: -13.375022888183594
    9. '<|end|>' → logprob: -13.625022888183594
    10. '               ' → logprob: -14.250022888183594

Token 254: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.5654333829879761
    2. '           ' → logprob: -0.9404333829879761
    3. ' graph' → logprob: -3.1904335021972656
    4. '	graph' → logprob: -8.815433502197266
    5. 'if' → logprob: -10.315433502197266
    6. '   ' → logprob: -10.565433502197266
    7. '       ' → logprob: -10.940433502197266
    8. '(graph' → logprob: -11.065433502197266
    9. ' if' → logprob: -11.690433502197266
    10. '```' → logprob: -12.440433502197266

Token 255: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. '[position' → logprob: -16.00000762939453
    4. '```' → logprob: -17.12500762939453
    5. '[prop' → logprob: -17.12500762939453
    6. '[param' → logprob: -17.62500762939453
    7. '[parent' → logprob: -17.87500762939453
    8. '\[' → logprob: -18.87500762939453
    9. '.append' → logprob: -19.00000762939453
    10. '[p' → logprob: -19.12500762939453

Token 256: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.030478166416287422
    2. '.append' → logprob: -3.5304782390594482
    3. ').' → logprob: -7.280478000640869
    4. '.' → logprob: -10.530478477478027
    5. 'append' → logprob: -12.530478477478027
    6. '.app' → logprob: -13.405478477478027
    7. ']' → logprob: -13.530478477478027
    8. '   ' → logprob: -13.780478477478027
    9. '}.' → logprob: -13.780478477478027
    10. ' ].' → logprob: -14.155478477478027

Token 257: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.0
    3. '.append' → logprob: -18.0
    4. 'appen' → logprob: -20.5
    5. 'push' → logprob: -21.875
    6. 'app' → logprob: -21.875
    7. '_append' → logprob: -22.375
    8. 'Append' → logprob: -22.625
    9. '	append' → logprob: -23.25
    10. 'add' → logprob: -24.75

Token 258: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. 'np' → logprob: -15.000075340270996
    4. '(
' → logprob: -16.500076293945312
    5. '(n' → logprob: -17.250076293945312
    6. '((' → logprob: -18.125076293945312
    7. ',np' → logprob: -18.250076293945312
    8. '[np' → logprob: -18.375076293945312
    9. ' (' → logprob: -18.500076293945312
    10. '(nd' → logprob: -18.750076293945312

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ' )' → logprob: -11.875009536743164
    3. ')
' → logprob: -13.125009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '<|end|>' → logprob: -16.000009536743164
    6. '           ' → logprob: -16.875009536743164
    7. '       ' → logprob: -17.000009536743164
    8. ')#' → logprob: -17.500009536743164
    9. ')}' → logprob: -17.500009536743164
    10. '))' → logprob: -17.750009536743164

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19029563665390015
    2. 'dist' → logprob: -1.940295696258545
    3. 'distance' → logprob: -4.690295696258545
    4. '
' → logprob: -4.815295696258545
    5. 'visited' → logprob: -5.065295696258545
    6. 'from' → logprob: -5.815295696258545
    7. '```' → logprob: -6.565295696258545
    8. 'def' → logprob: -7.940295696258545
    9. 'queue' → logprob: -8.065295219421387
    10. ' dist' → logprob: -8.190295219421387

Token 261: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01117561012506485
    2. 'from' → logprob: -5.636175632476807
    3. 'visited' → logprob: -6.011175632476807
    4. '   ' → logprob: -6.261175632476807
    5. 'dp' → logprob: -6.386175632476807
    6. 'queue' → logprob: -7.386175632476807
    7. 'distance' → logprob: -7.511175632476807
    8. 'def' → logprob: -9.136175155639648
    9. '
' → logprob: -9.386175155639648
    10. 'level' → logprob: -10.636175155639648

Token 262: ' Detect' (ID: 60694)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009744521230459213
    2. 'from' → logprob: -5.259744644165039
    3. '#' → logprob: -5.884744644165039
    4. 'visited' → logprob: -7.009744644165039
    5. 'dp' → logprob: -8.384744644165039
    6. 'queue' → logprob: -8.509744644165039
    7. ' dist' → logprob: -9.009744644165039
    8. 'distance' → logprob: -9.134744644165039
    9. 'import' → logprob: -10.384744644165039
    10. '
' → logprob: -10.384744644165039

Token 263: ' if' (ID: 538)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -1.1119953393936157
    2. ' cycles' → logprob: -1.3619953393936157
    3. ' cycle' → logprob: -1.9869953393936157
    4. 'visited' → logprob: -2.861995220184326
    5. 'cycles' → logprob: -2.861995220184326
    6. ' distances' → logprob: -3.236995220184326
    7. 'dist' → logprob: -3.361995220184326
    8. ' dist' → logprob: -3.736995220184326
    9. 'cycle' → logprob: -3.861995220184326
    10. 'def' → logprob: -4.111995220184326

Token 264: ' starting' (ID: 8601)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.7736992239952087
    2. 'cycle' → logprob: -1.7736992835998535
    3. ' there' → logprob: -2.5236992835998535
    4. ' any' → logprob: -2.7736992835998535
    5. ' cycles' → logprob: -3.1486992835998535
    6. ' end' → logprob: -3.1486992835998535
    7. 'end' → logprob: -3.7736992835998535
    8. 'visited' → logprob: -3.7736992835998535
    9. ' visited' → logprob: -4.0236992835998535
    10. ' graph' → logprob: -4.6486992835998535

Token 265: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5124751329421997
    2. ' from' → logprob: -1.2624751329421997
    3. ' at' → logprob: -2.51247501373291
    4. 'pos' → logprob: -5.01247501373291
    5. '_pos' → logprob: -5.01247501373291
    6. 'node' → logprob: -5.51247501373291
    7. 'position' → logprob: -5.63747501373291
    8. ' node' → logprob: -5.63747501373291
    9. 'point' → logprob: -6.13747501373291
    10. '_from' → logprob: -6.26247501373291

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11733507364988327
    2. 'end' → logprob: -2.867335081100464
    3. ' ' → logprob: -2.992335081100464
    4. ' end' → logprob: -6.242334842681885
    5. 'any' → logprob: -7.367334842681885
    6. 'node' → logprob: -8.492335319519043
    7. ' any' → logprob: -8.742335319519043
    8. 'the' → logprob: -8.742335319519043
    9. 'pos' → logprob: -8.992335319519043
    10. 'start' → logprob: -9.242335319519043

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003706126008182764
    2. 'end' → logprob: -8.250370979309082
    3. 'start' → logprob: -10.000370979309082
    4. ' ' → logprob: -10.625370979309082
    5. 'pos' → logprob: -10.875370979309082
    6. 'node' → logprob: -11.875370979309082
    7. 'position' → logprob: -12.250370979309082
    8. 'graph' → logprob: -13.125370979309082
    9. '```' → logprob: -13.375370979309082
    10. '
' → logprob: -13.625370979309082

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5940369367599487
    2. ' there' → logprob: -0.9690369367599487
    3. ' is' → logprob: -4.719037055969238
    4. 'there' → logprob: -5.094037055969238
    5. ' can' → logprob: -5.344037055969238
    6. ' there's' → logprob: -5.469037055969238
    7. ' we' → logprob: -5.469037055969238
    8. 'from' → logprob: -5.469037055969238
    9. 'visited' → logprob: -5.469037055969238
    10. ' cycle' → logprob: -5.594037055969238

Token 269: ' can' (ID: 665)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6246024966239929
    2. ' visited' → logprob: -1.7496025562286377
    3. ' there' → logprob: -2.1246025562286377
    4. 'dist' → logprob: -2.9996025562286377
    5. ' can' → logprob: -3.4996025562286377
    6. 'there' → logprob: -4.249602317810059
    7. ' we' → logprob: -4.499602317810059
    8. ' dist' → logprob: -4.874602317810059
    9. 'reachable' → logprob: -4.874602317810059
    10. 'can' → logprob: -5.249602317810059

Token 270: ' get' (ID: 717)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.11385559290647507
    2. 'reach' → logprob: -2.2388556003570557
    3. ' ' → logprob: -8.238855361938477
    4. '   ' → logprob: -8.738855361938477
    5. 're' → logprob: -9.238855361938477
    6. ' be' → logprob: -9.238855361938477
    7. 'reachable' → logprob: -9.363855361938477
    8. ' we' → logprob: -9.488855361938477
    9. '_re' → logprob: -10.363855361938477
    10. ' reached' → logprob: -10.488855361938477

Token 271: ' stuck' (ID: 24327)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1561255306005478
    2. 'to' → logprob: -2.156125545501709
    3. ' trapped' → logprob: -5.156125545501709
    4. ' stuck' → logprob: -5.281125545501709
    5. ' ' → logprob: -5.781125545501709
    6. 'st' → logprob: -5.906125545501709
    7. 'end' → logprob: -6.031125545501709
    8. 'from' → logprob: -6.156125545501709
    9. ' from' → logprob: -6.156125545501709
    10. ' into' → logprob: -6.656125545501709

Token 272: ' in' (ID: 306)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4965149164199829
    2. ' visited' → logprob: -1.746514916419983
    3. 'dist' → logprob: -2.3715147972106934
    4. '   ' → logprob: -2.4965147972106934
    5. ' dist' → logprob: -3.7465147972106934
    6. ' in' → logprob: -4.871514797210693
    7. 'def' → logprob: -5.746514797210693
    8. 'in' → logprob: -6.496514797210693
    9. ' ' → logprob: -7.246514797210693
    10. 'distance' → logprob: -7.371514797210693

Token 273: ' cycle' (ID: 15839)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41039782762527466
    2. ' a' → logprob: -1.2853977680206299
    3. ' an' → logprob: -3.16039776802063
    4. 'an' → logprob: -4.285398006439209
    5. ' cycle' → logprob: -6.285398006439209
    6. 'in' → logprob: -7.035398006439209
    7. ' cycles' → logprob: -7.410398006439209
    8. 'cycle' → logprob: -8.41039752960205
    9. 'cycles' → logprob: -8.66039752960205
    10. ' infinite' → logprob: -9.16039752960205

Token 274: ' not' (ID: 625)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.272136390209198
    2. '   ' → logprob: -2.1471364498138428
    3. 'dist' → logprob: -2.6471364498138428
    4. 'def' → logprob: -3.8971364498138428
    5. ' visited' → logprob: -4.022136211395264
    6. 'from' → logprob: -5.522136211395264
    7. '
' → logprob: -6.022136211395264
    8. ' dist' → logprob: -6.147136211395264
    9. 'distance' → logprob: -7.022136211395264
    10. 'import' → logprob: -7.647136211395264

Token 275: ' reaching' (ID: 29787)
  Prédit: ' reaching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reaching' → logprob: -0.08522280305624008
    2. '=' → logprob: -3.9602227210998535
    3. 'ending' → logprob: -4.2102227210998535
    4. 're' → logprob: -4.5852227210998535
    5. ' visiting' → logprob: -5.3352227210998535
    6. '=end' → logprob: -5.5852227210998535
    7. ' leading' → logprob: -5.7102227210998535
    8. ' equal' → logprob: -5.8352227210998535
    9. '==' → logprob: -5.8352227210998535
    10. '   ' → logprob: -5.9602227210998535

Token 276: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0031936357263475657
    2. ' end' → logprob: -5.7531938552856445
    3. 'the' → logprob: -11.878193855285645
    4. '   ' → logprob: -12.753193855285645
    5. ' the' → logprob: -12.878193855285645
    6. '[end' → logprob: -13.128193855285645
    7. '=end' → logprob: -14.128193855285645
    8. '(end' → logprob: -15.378193855285645
    9. '`' → logprob: -15.878193855285645
    10. '```' → logprob: -16.003192901611328

Token 277: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.46178799867630005
    2. 'def' → logprob: -2.0867879390716553
    3. ' visited' → logprob: -2.2117879390716553
    4. 'dist' → logprob: -3.2117879390716553
    5. '   ' → logprob: -3.7117879390716553
    6. '
' → logprob: -4.211788177490234
    7. 'from' → logprob: -4.461788177490234
    8. ':' → logprob: -4.711788177490234
    9. 'distance' → logprob: -4.711788177490234
    10. ' dist' → logprob: -5.336788177490234

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028754882514476776
    2. 'visited' → logprob: -6.127875328063965
    3. ' visited' → logprob: -7.502875328063965
    4. '
' → logprob: -9.877875328063965
    5. 'dist' → logprob: -10.752875328063965
    6. '    
' → logprob: -10.877875328063965
    7. 'from' → logprob: -11.627875328063965
    8. '```' → logprob: -11.877875328063965
    9. ' dist' → logprob: -12.002875328063965
    10. 'queue' → logprob: -12.002875328063965

Token 279: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.11898601800203323
    2. '   ' → logprob: -3.118986129760742
    3. 'dist' → logprob: -3.118986129760742
    4. 'color' → logprob: -4.118986129760742
    5. 'queue' → logprob: -5.743986129760742
    6. ' visited' → logprob: -6.243986129760742
    7. 'def' → logprob: -7.243986129760742
    8. 'from' → logprob: -7.493986129760742
    9. 'seen' → logprob: -8.493986129760742
    10. 'distance' → logprob: -8.618986129760742

Token 280: ' Use' (ID: 7649)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1736403852701187
    2. 'dist' → logprob: -1.9236403703689575
    3. 'color' → logprob: -4.923640251159668
    4. 'from' → logprob: -6.298640251159668
    5. ' visited' → logprob: -6.673640251159668
    6. 'def' → logprob: -6.673640251159668
    7. 'queue' → logprob: -7.798640251159668
    8. 'distance' → logprob: -7.923640251159668
    9. 'INF' → logprob: -8.673640251159668
    10. '   ' → logprob: -8.798640251159668

Token 281: ' DFS' (ID: 115767)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2924007177352905
    2. ' visited' → logprob: -2.41740083694458
    3. 'color' → logprob: -2.54240083694458
    4. 'dist' → logprob: -4.04240083694458
    5. '[' → logprob: -4.04240083694458
    6. 'colors' → logprob: -4.41740083694458
    7. ' color' → logprob: -4.54240083694458
    8. 'depth' → logprob: -5.04240083694458
    9. '[-' → logprob: -5.04240083694458
    10. ' colors' → logprob: -5.16740083694458

Token 282: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5446557998657227
    2. '(' → logprob: -2.1696557998657227
    3. 'def' → logprob: -2.2946557998657227
    4. '
' → logprob: -2.5446557998657227
    5. 'visited' → logprob: -3.0446557998657227
    6. ':' → logprob: -3.6696557998657227
    7. ' visited' → logprob: -4.919655799865723
    8. ' (' → logprob: -4.919655799865723
    9. '(stack' → logprob: -5.044655799865723
    10. '_stack' → logprob: -5.294655799865723

Token 283: ' coloring' (ID: 50205)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.482405424118042
    2. ' colors' → logprob: -1.607405424118042
    3. 'color' → logprob: -2.107405424118042
    4. ' color' → logprob: -4.107405662536621
    5. ' states' → logprob: -4.357405662536621
    6. '3' → logprob: -4.857405662536621
    7. 'visited' → logprob: -5.232405662536621
    8. 'state' → logprob: -5.607405662536621
    9. 'states' → logprob: -5.857405662536621
    10. ' stack' → logprob: -6.107405662536621

Token 284: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030618416145443916
    2. '
' → logprob: -4.405618190765381
    3. 'color' → logprob: -5.280618190765381
    4. 'colors' → logprob: -5.905618190765381
    5. 'visited' → logprob: -6.030618190765381
    6. ' color' → logprob: -6.155618190765381
    7. ':' → logprob: -6.280618190765381
    8. ' visited' → logprob: -7.280618190765381
    9. ' colors' → logprob: -7.405618190765381
    10. 'def' → logprob: -7.405618190765381

Token 285: ' ' (ID: 220)
  Prédit: ' WHITE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' WHITE' → logprob: -0.9000523090362549
    2. ' color' → logprob: -1.5250523090362549
    3. 'WHITE' → logprob: -1.7750523090362549
    4. 'color' → logprob: -2.150052309036255
    5. ' visited' → logprob: -4.025052070617676
    6. ' colors' → logprob: -4.275052070617676
    7. 'visited' → logprob: -4.275052070617676
    8. '0' → logprob: -4.275052070617676
    9. 'colors' → logprob: -4.275052070617676
    10. '   ' → logprob: -4.775052070617676

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018040362745523453
    2. '[' → logprob: -4.518040180206299
    3. 'WHITE' → logprob: -5.143040180206299
    4. '
' → logprob: -7.768040180206299
    5. ' ' → logprob: -8.518040657043457
    6. 'def' → logprob: -8.768040657043457
    7. ' WHITE' → logprob: -8.893040657043457
    8. ' [' → logprob: -9.393040657043457
    9. '[-' → logprob: -9.893040657043457
    10. '[
' → logprob: -11.393040657043457

Token 287: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09879261255264282
    2. ' =' → logprob: -2.473792552947998
    3. ' (' → logprob: -4.973792552947998
    4. ':' → logprob: -6.473792552947998
    5. ',' → logprob: -7.598792552947998
    6. '<|end|>' → logprob: -7.723792552947998
    7. '(' → logprob: -8.598793029785156
    8. ' for' → logprob: -9.848793029785156
    9. ' ' → logprob: -10.973793029785156
    10. ' -' → logprob: -11.098793029785156

Token 288: 'un' (ID: 373)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011997176334261894
    2. 'white' → logprob: -4.636997222900391
    3. ' ' → logprob: -6.511997222900391
    4. ' white' → logprob: -8.01199722290039
    5. 'un' → logprob: -8.26199722290039
    6. 'WHITE' → logprob: -9.26199722290039
    7. ' un' → logprob: -10.26199722290039
    8. '-' → logprob: -11.38699722290039
    9. '白' → logprob: -11.51199722290039
    10. '1' → logprob: -12.38699722290039

Token 289: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.786196975852363e-05
    2. 'vis' → logprob: -10.625038146972656
    3. ' visited' → logprob: -11.750038146972656
    4. '
' → logprob: -13.375038146972656
    5. 'v' → logprob: -14.125038146972656
    6. 'Visited' → logprob: -14.250038146972656
    7. 'marked' → logprob: -14.500038146972656
    8. '```' → logprob: -14.625038146972656
    9. 'vist' → logprob: -15.125038146972656
    10. 'visit' → logprob: -15.125038146972656

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014060820103622973
    2. ' ,' → logprob: -9.750140190124512
    3. '1' → logprob: -9.875140190124512
    4. ' ' → logprob: -10.750140190124512
    5. '
' → logprob: -12.125140190124512
    6. ',
' → logprob: -12.875140190124512
    7. '<|end|>' → logprob: -14.250140190124512
    8. '```' → logprob: -15.375140190124512
    9. '2' → logprob: -15.750140190124512
    10. ';' → logprob: -16.250141143798828

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '
' → logprob: -17.625911712646484
    4. '```' → logprob: -18.250911712646484
    5. '  ' → logprob: -19.250911712646484
    6. '   ' → logprob: -19.250911712646484
    7. ' ' → logprob: -20.375911712646484
    8. '

' → logprob: -20.625911712646484
    9. '  
' → logprob: -21.000911712646484
    10. '    ' → logprob: -21.063411712646484

Token 292: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003391574718989432
    2. '=in' → logprob: -8.00033950805664
    3. '=open' → logprob: -14.00033950805664
    4. '=re' → logprob: -14.25033950805664
    5. ' =' → logprob: -14.37533950805664
    6. '=com' → logprob: -14.75033950805664
    7. '=edge' → logprob: -15.12533950805664
    8. '=int' → logprob: -15.25033950805664
    9. '=d' → logprob: -16.12533950805664
    10. '=color' → logprob: -16.37533950805664

Token 293: 'vis' (ID: 2083)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04897088557481766
    2. 'vis' → logprob: -3.048970937728882
    3. 'visited' → logprob: -8.548971176147461
    4. ' visiting' → logprob: -9.548971176147461
    5. 'processing' → logprob: -10.048971176147461
    6. 'in' → logprob: -10.173971176147461
    7. ' ' → logprob: -11.673971176147461
    8. 'gray' → logprob: -11.798971176147461
    9. 'running' → logprob: -12.173971176147461
    10. '```' → logprob: -12.423971176147461

Token 294: 'iting' (ID: 6906)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.007047236431390047
    2. 'iting' → logprob: -5.007047176361084
    3. 'it' → logprob: -8.132047653198242
    4. 'isted' → logprob: -10.757047653198242
    5. 'ITED' → logprob: -12.257047653198242
    6. 'ite' → logprob: -12.882047653198242
    7. 'ted' → logprob: -13.257047653198242
    8. '1' → logprob: -13.632047653198242
    9. ' ' → logprob: -14.007047653198242
    10. '
' → logprob: -14.007047653198242

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015809243777766824
    2. '2' → logprob: -7.126580715179443
    3. ' ,' → logprob: -7.251580715179443
    4. '
' → logprob: -10.876581192016602
    5. ' ' → logprob: -10.876581192016602
    6. ',color' → logprob: -11.751581192016602
    7. 'color' → logprob: -11.876581192016602
    8. 'visited' → logprob: -12.751581192016602
    9. '=' → logprob: -12.876581192016602
    10. ' color' → logprob: -13.126581192016602

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '```' → logprob: -14.500262260437012
    4. '
' → logprob: -16.000261306762695
    5. '   ' → logprob: -17.375261306762695
    6. '  ' → logprob: -17.750261306762695
    7. '۲' → logprob: -18.750261306762695
    8. '

' → logprob: -18.750261306762695
    9. '-' → logprob: -19.125261306762695
    10. '3' → logprob: -19.500261306762695

Token 297: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0206720617134124e-05
    2. 'visited' → logprob: -12.12501049041748
    3. '=com' → logprob: -12.37501049041748
    4. '=d' → logprob: -14.87501049041748
    5. '=re' → logprob: -17.000009536743164
    6. 'done' → logprob: -17.500009536743164
    7. 'completed' → logprob: -17.625009536743164
    8. ' =' → logprob: -17.750009536743164
    9. '2' → logprob: -17.750009536743164
    10. '=end' → logprob: -18.125009536743164

Token 298: 'done' (ID: 21715)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03005985915660858
    2. '2' → logprob: -3.530059814453125
    3. ' visited' → logprob: -8.155059814453125
    4. 'completed' → logprob: -11.405059814453125
    5. 'finished' → logprob: -12.405059814453125
    6. 'done' → logprob: -12.905059814453125
    7. 'processed' → logprob: -13.155059814453125
    8. ' ' → logprob: -13.155059814453125
    9. '```' → logprob: -16.155059814453125
    10. 'Visited' → logprob: -16.280059814453125

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04792000353336334
    2. '
' → logprob: -3.547919988632202
    3. 'color' → logprob: -4.297920227050781
    4. ' color' → logprob: -6.047920227050781
    5. 'colors' → logprob: -6.672920227050781
    6. '    
' → logprob: -7.547920227050781
    7. ' colors' → logprob: -9.172920227050781
    8. '	color' → logprob: -9.422920227050781
    9. 'visited' → logprob: -11.297920227050781
    10. 'def' → logprob: -11.547920227050781

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1183897852897644
    2. 'color' → logprob: -2.493389844894409
    3. ' color' → logprob: -3.868389844894409
    4. 'def' → logprob: -5.61838960647583
    5. 'colors' → logprob: -5.86838960647583
    6. '```' → logprob: -7.61838960647583
    7. ' colors' → logprob: -8.118390083312988
    8. 'visited' → logprob: -8.243390083312988
    9. '
' → logprob: -8.368390083312988
    10. '	color' → logprob: -8.868390083312988

Token 301: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.07304086536169052
    2. ' color' → logprob: -2.8230409622192383
    3. '   ' → logprob: -4.698040962219238
    4. 'def' → logprob: -6.698040962219238
    5. 'colors' → logprob: -7.573040962219238
    6. 'state' → logprob: -10.198040962219238
    7. 'visited' → logprob: -10.323040962219238
    8. ' def' → logprob: -10.698040962219238
    9. ' colors' → logprob: -11.073040962219238
    10. '
' → logprob: -11.823040962219238

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001953371800482273
    2. '=' → logprob: -6.251953601837158
    3. '[' → logprob: -10.876953125
    4. '=[' → logprob: -12.376953125
    5. ' =[' → logprob: -13.751953125
    6. ')' → logprob: -15.876953125
    7. '```' → logprob: -16.501953125
    8. ' ' → logprob: -16.501953125
    9. ',' → logprob: -16.751953125
    10. ']' → logprob: -17.126953125

Token 303: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005233763717114925
    2. ' [' → logprob: -5.2552337646484375
    3. '{' → logprob: -19.255233764648438
    4. '0' → logprob: -19.630233764648438
    5. '=[' → logprob: -20.880233764648438
    6. '[len' → logprob: -21.005233764648438
    7. '([' → logprob: -21.130233764648438
    8. '[-' → logprob: -21.255233764648438
    9. '(' → logprob: -22.130233764648438
    10. '   ' → logprob: -22.255233764648438

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -21.5
    4. '[' → logprob: -22.625
    5. '```' → logprob: -22.75
    6. '۰' → logprob: -23.0
    7. '-' → logprob: -23.625
    8. '000' → logprob: -24.0
    9. '  ' → logprob: -24.25
    10. ')' → logprob: -24.25

Token 305: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014602351002395153
    2. ' for' → logprob: -7.501460075378418
    3. ' ]' → logprob: -7.876460075378418
    4. '<|end|>' → logprob: -8.626460075378418
    5. ']*' → logprob: -8.751460075378418
    6. ']+' → logprob: -9.626460075378418
    7. '<|end|>' → logprob: -10.001460075378418
    8. 'for' → logprob: -10.251460075378418
    9. ']*(' → logprob: -11.376460075378418
    10. ',' → logprob: -12.251460075378418

Token 306: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0001882823125924915
    2. 'len' → logprob: -9.000187873840332
    3. ' end' → logprob: -9.750187873840332
    4. '(end' → logprob: -12.375187873840332
    5. '   ' → logprob: -13.375187873840332
    6. '=end' → logprob: -15.375187873840332
    7. 'END' → logprob: -15.875187873840332
    8. '
' → logprob: -16.37518882751465
    9. '	end' → logprob: -16.50018882751465
    10. 'endl' → logprob: -17.00018882751465

Token 307: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.517272024415433e-05
    2. ' +' → logprob: -9.500075340270996
    3. ')+' → logprob: -16.00007438659668
    4. '+
' → logprob: -16.50007438659668
    5. '```' → logprob: -16.75007438659668
    6. '()+' → logprob: -17.62507438659668
    7. '1' → logprob: -18.12507438659668
    8. '＋' → logprob: -18.25007438659668
    9. ']+' → logprob: -18.62507438659668
    10. '   ' → logprob: -19.00007438659668

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01420475635677576
    2. '2' → logprob: -4.264204978942871
    3. '
' → logprob: -11.514204978942871
    4. ' ' → logprob: -11.701704978942871
    5. '+' → logprob: -12.201704978942871
    6. '3' → logprob: -12.701704978942871
    7. '```' → logprob: -13.264204978942871
    8. '7' → logprob: -13.514204978942871
    9. '5' → logprob: -13.639204978942871
    10. '6' → logprob: -13.826704978942871

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006723064463585615
    2. ')
' → logprob: -5.006722927093506
    3. ')

' → logprob: -12.631723403930664
    4. ')
' → logprob: -12.756723403930664
    5. ' )' → logprob: -13.631723403930664
    6. '   ' → logprob: -15.256723403930664
    7. ')`' → logprob: -16.881723403930664
    8. ' )
' → logprob: -17.006723403930664
    9. '```' → logprob: -17.381723403930664
    10. 'def' → logprob: -17.506723403930664

Token 310: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3773736357688904
    2. '   ' → logprob: -1.2523736953735352
    3. ' def' → logprob: -4.002373695373535
    4. '
' → logprob: -4.752373695373535
    5. ' stack' → logprob: -7.877373695373535
    6. '    
' → logprob: -8.002373695373535
    7. '```' → logprob: -8.252373695373535
    8. '<|end|>' → logprob: -8.877373695373535
    9. '	def' → logprob: -9.002373695373535
    10. '	stack' → logprob: -9.127373695373535

Token 311: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010235205991193652
    2. 'stack' → logprob: -7.251023292541504
    3. '   ' → logprob: -8.501023292541504
    4. ' def' → logprob: -9.251023292541504
    5. '
' → logprob: -12.376023292541504
    6. '```' → logprob: -12.376023292541504
    7. ' stack' → logprob: -12.876023292541504
    8. 'for' → logprob: -13.001023292541504
    9. 'from' → logprob: -14.501023292541504
    10. 'import' → logprob: -15.251023292541504

Token 312: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3132683336734772
    2. ' dfs' → logprob: -1.3132683038711548
    3. 'detect' → logprob: -12.063268661499023
    4. ' detect' → logprob: -15.313268661499023
    5. 'DFS' → logprob: -15.813268661499023
    6. 'has' → logprob: -15.938268661499023
    7. 'is' → logprob: -16.688268661499023
    8. 'visit' → logprob: -16.813268661499023
    9. '_d' → logprob: -16.813268661499023
    10. ' has' → logprob: -16.938268661499023

Token 313: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.14808130264282227
    2. '(node' → logprob: -2.2730813026428223
    3. '(pos' → logprob: -3.5230813026428223
    4. '(v' → logprob: -5.898081302642822
    5. ' (' → logprob: -6.273081302642822
    6. '(' → logprob: -7.773081302642822
    7. '(vertex' → logprob: -9.773080825805664
    8. '(token' → logprob: -11.523080825805664
    9. '(color' → logprob: -12.148080825805664
    10. '(x' → logprob: -13.148080825805664

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.201504647731781
    2. '):
' → logprob: -1.7015047073364258
    3. '):
' → logprob: -9.451504707336426
    4. ',' → logprob: -12.076504707336426
    5. '):

' → logprob: -13.201504707336426
    6. '   ' → logprob: -13.201504707336426
    7. ')' → logprob: -13.826504707336426
    8. ' ):' → logprob: -13.826504707336426
    9. ':' → logprob: -14.201504707336426
    10. 'u' → logprob: -15.576504707336426

Token 315: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2095719277858734
    2. '       ' → logprob: -1.7095719575881958
    3. '<|end|>' → logprob: -5.959571838378906
    4. ':' → logprob: -6.709571838378906
    5. ' color' → logprob: -6.959571838378906
    6. '    
' → logprob: -7.459571838378906
    7. '[' → logprob: -7.709571838378906
    8. '    ' → logprob: -7.959571838378906
    9. '	color' → logprob: -8.209571838378906
    10. '(color' → logprob: -8.584571838378906

Token 316: ' if' (ID: 538)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.07247347384691238
    2. ' color' → logprob: -2.8224735260009766
    3. '   ' → logprob: -4.697473526000977
    4. ' if' → logprob: -6.822473526000977
    5. 'if' (adapté à ' if') → logprob: -8.447473526000977
    6. '	color' → logprob: -11.197473526000977
    7. ' ' → logprob: -12.447473526000977
    8. '    ' → logprob: -12.572473526000977
    9. '       ' → logprob: -13.197473526000977
    10. '```' → logprob: -13.697473526000977

Token 317: ' u' (ID: 337)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0040785204619169235
    2. ' color' → logprob: -5.504078388214111
    3. 'u' → logprob: -16.379077911376953
    4. ' ' → logprob: -18.004077911376953
    5. '	color' → logprob: -18.379077911376953
    6. '(color' → logprob: -18.879077911376953
    7. '[color' → logprob: -19.254077911376953
    8. '   ' → logprob: -19.504077911376953
    9. '
' → logprob: -20.004077911376953
    10. ' u' → logprob: -20.254077911376953

Token 318: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4775552451610565
    2. '==' → logprob: -0.9775552749633789
    3. ']==' → logprob: -6.602555274963379
    4. '[' → logprob: -6.977555274963379
    5. ')==' → logprob: -6.977555274963379
    6. ')' → logprob: -9.602555274963379
    7. 'color' → logprob: -10.227555274963379
    8. '   ' → logprob: -10.352555274963379
    9. '[color' → logprob: -10.352555274963379
    10. ' color' → logprob: -11.227555274963379

Token 319: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0006271334132179618
    2. ' end' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.250627517700195
    4. ''end' → logprob: -16.500627517700195
    5. '(end' → logprob: -16.500627517700195
    6. '	end' → logprob: -16.875627517700195
    7. ' ' → logprob: -17.000627517700195
    8. '0' → logprob: -17.625627517700195
    9. '=end' → logprob: -17.625627517700195
    10. '[end' → logprob: -18.000627517700195

Token 320: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08483322709798813
    2. ':' → logprob: -2.8348331451416016
    3. '           ' → logprob: -4.084833145141602
    4. ':return' → logprob: -5.709833145141602
    5. ' or' → logprob: -6.209833145141602
    6. '       ' → logprob: -8.084833145141602
    7. '):
' → logprob: -9.709833145141602
    8. ':
' → logprob: -10.584833145141602
    9. 'return' → logprob: -10.959833145141602
    10. '   ' → logprob: -11.459833145141602

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2954837381839752
    2. ' return' → logprob: -1.7954837083816528
    3. 'return' → logprob: -2.7954838275909424
    4. '       ' → logprob: -4.170483589172363
    5. '
' → logprob: -4.920483589172363
    6. ':return' → logprob: -5.670483589172363
    7. '   ' → logprob: -6.920483589172363
    8. '	return' → logprob: -7.920483589172363
    9. ' ' → logprob: -8.545483589172363
    10. ':
' → logprob: -8.795483589172363

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1604427546262741
    2. ' return' → logprob: -1.9104427099227905
    3. '           ' → logprob: -8.535442352294922
    4. '       ' → logprob: -11.410442352294922
    5. ':return' → logprob: -11.910442352294922
    6. '   ' → logprob: -13.660442352294922
    7. '	return' → logprob: -13.660442352294922
    8. '
' → logprob: -14.035442352294922
    9. '{return' → logprob: -14.535442352294922
    10. ' ' → logprob: -15.160442352294922

Token 323: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.22642222046852112
    2. ' True' → logprob: -1.7264221906661987
    3. '2' → logprob: -3.9764223098754883
    4. 'False' → logprob: -5.226422309875488
    5. ' False' → logprob: -8.351422309875488
    6. ' ' → logprob: -8.476422309875488
    7. '1' → logprob: -9.101422309875488
    8. '   ' → logprob: -11.726422309875488
    9. '0' → logprob: -11.976422309875488
    10. '(True' → logprob: -13.601422309875488

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03226596117019653
    2. '<|end|>' → logprob: -4.032266139984131
    3. '
' → logprob: -4.782266139984131
    4. '        
' → logprob: -6.157266139984131
    5. '\n' → logprob: -6.907266139984131
    6. '  
' → logprob: -6.907266139984131
    7. ')' → logprob: -7.907266139984131
    8. '    
' → logprob: -8.032265663146973
    9. ' 
' → logprob: -8.407265663146973
    10. '   ' → logprob: -8.532265663146973

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04762237146496773
    2. '   ' → logprob: -3.4226224422454834
    3. '
' → logprob: -5.172622203826904
    4. '<|end|>' → logprob: -5.547622203826904
    5. '  
' → logprob: -6.422622203826904
    6. '    
' → logprob: -7.047622203826904
    7. '        
' → logprob: -7.172622203826904
    8. '```' → logprob: -8.422622680664062
    9. ' 
' → logprob: -8.797622680664062
    10. '	' → logprob: -9.172622680664062

Token 326: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8944501280784607
    2. '       ' → logprob: -0.8944501280784607
    3. ' color' → logprob: -2.3944501876831055
    4. ' if' → logprob: -2.6444501876831055
    5. 'color' → logprob: -4.2694501876831055
    6. '
' → logprob: -6.1444501876831055
    7. '    ' → logprob: -6.8944501876831055
    8. '    
' → logprob: -7.0194501876831055
    9. '	color' → logprob: -7.7694501876831055
    10. ' ' → logprob: -8.144450187683105

Token 327: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06196768581867218
    2. ' color' → logprob: -2.811967611312866
    3. '	color' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.436967849731445
    5. '[color' → logprob: -18.061967849731445
    6. '(color' → logprob: -18.686967849731445
    7. '
' → logprob: -18.936967849731445
    8. '   ' → logprob: -19.061967849731445
    9. 'Color' → logprob: -19.936967849731445
    10. '```' → logprob: -20.186967849731445

Token 328: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.25
    3. ' [' → logprob: -17.375
    4. '[user' → logprob: -18.875
    5. ' u' → logprob: -19.5
    6. '[' → logprob: -19.875
    7. '	u' → logprob: -20.0
    8. '(u' → logprob: -20.0
    9. '   ' → logprob: -20.25
    10. '==' → logprob: -20.375

Token 329: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.043116696178913116
    2. '==' → logprob: -3.543116807937622
    3. ']' → logprob: -4.793116569519043
    4. ']==' → logprob: -5.418116569519043
    5. ' ==' → logprob: -7.668116569519043
    6. ')==' → logprob: -10.668116569519043
    7. '[' → logprob: -11.043116569519043
    8. ')' → logprob: -11.543116569519043
    9. 'u' → logprob: -11.543116569519043
    10. '   ' → logprob: -11.543116569519043

Token 330: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14355836808681488
    2. ' ==' → logprob: -2.0185582637786865
    3. '[' → logprob: -7.643558502197266
    4. '[u' → logprob: -8.518558502197266
    5. ']==' → logprob: -8.768558502197266
    6. ')==' → logprob: -10.643558502197266
    7. '=' → logprob: -11.893558502197266
    8. '==
' → logprob: -12.643558502197266
    9. ')' → logprob: -13.268558502197266
    10. '[user' → logprob: -13.268558502197266

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '  ' → logprob: -16.625017166137695
    5. '2' → logprob: -17.875017166137695
    6. '0' → logprob: -17.875017166137695
    7. '    ' → logprob: -18.000017166137695
    8. '
' → logprob: -18.625017166137695
    9. '```' → logprob: -19.500017166137695
    10. '     ' → logprob: -20.000017166137695

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -14.250001907348633
    4. '  ' → logprob: -17.875001907348633
    5. '
' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '```' → logprob: -18.875001907348633
    8. '

' → logprob: -19.000001907348633
    9. '0' → logprob: -19.625001907348633
    10. '    ' → logprob: -20.250001907348633

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02973267063498497
    2. ':
' → logprob: -3.7797327041625977
    3. ':return' → logprob: -5.154732704162598
    4. '<|end|>' → logprob: -7.904732704162598
    5. ')' → logprob: -8.779732704162598
    6. '       ' → logprob: -10.154732704162598
    7. '           ' → logprob: -10.654732704162598
    8. '<|end|>' → logprob: -10.904732704162598
    9. '):' → logprob: -11.279732704162598
    10. '   ' → logprob: -11.404732704162598

Token 334: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19421568512916565
    2. 'return' → logprob: -2.444215774536133
    3. '       ' → logprob: -3.569215774536133
    4. ' True' → logprob: -3.694215774536133
    5. ':return' → logprob: -4.819215774536133
    6. '<|end|>' → logprob: -4.819215774536133
    7. ' ' → logprob: -4.944215774536133
    8. '           ' → logprob: -5.444215774536133
    9. 'True' → logprob: -5.694215774536133
    10. '   ' → logprob: -6.569215774536133

Token 335: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011048054322600365
    2. ' True' → logprob: -4.511047840118408
    3. 'return' (adapté à ' return') → logprob: -15.261048316955566
    4. '
' → logprob: -17.38604736328125
    5. '           ' → logprob: -17.38604736328125
    6. ' return' → logprob: -18.26104736328125
    7. '(True' → logprob: -18.26104736328125
    8. '=True' → logprob: -19.13604736328125
    9. 'False' → logprob: -19.13604736328125
    10. '   ' → logprob: -19.13604736328125

Token 336: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.676292231422849e-05
    2. ' True' → logprob: -11.000017166137695
    3. 'False' → logprob: -19.125017166137695
    4. '   ' → logprob: -20.250017166137695
    5. '1' → logprob: -20.625017166137695
    6. '(True' → logprob: -21.500017166137695
    7. 'true' → logprob: -23.000017166137695
    8. '           ' → logprob: -23.125017166137695
    9. '       ' → logprob: -23.250017166137695
    10. '  ' → logprob: -24.125017166137695

Token 337: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07262013852596283
    2. '<|end|>' → logprob: -2.697620153427124
    3. '
' → logprob: -6.572619915008545
    4. '        
' → logprob: -8.197620391845703
    5. '<|end|>' → logprob: -8.822620391845703
    6. ')' → logprob: -8.947620391845703
    7. '   ' → logprob: -8.947620391845703
    8. '        ' → logprob: -9.197620391845703
    9. '```' → logprob: -9.197620391845703
    10. '      ' → logprob: -10.072620391845703

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019877620041370392
    2. '<|end|>' → logprob: -4.0198774337768555
    3. '   ' → logprob: -7.2698774337768555
    4. '```' → logprob: -8.394877433776855
    5. ')' → logprob: -8.519877433776855
    6. '<|end|>' → logprob: -9.019877433776855
    7. '	' → logprob: -9.894877433776855
    8. '           ' → logprob: -10.019877433776855
    9. '        ' → logprob: -10.019877433776855
    10. '
' → logprob: -10.144877433776855

Token 339: ' if' (ID: 538)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.21661657094955444
    2. 'color' → logprob: -1.7166166305541992
    3. '   ' → logprob: -4.966616630554199
    4. '       ' → logprob: -5.716616630554199
    5. '    ' → logprob: -6.091616630554199
    6. ' ' → logprob: -6.591616630554199
    7. '	color' → logprob: -7.341616630554199
    8. ' 
' → logprob: -8.4666166305542
    9. '
' → logprob: -9.8416166305542
    10. '.color' → logprob: -9.9666166305542

Token 340: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.47407761216163635
    2. ' color' → logprob: -0.974077582359314
    3. ' ' → logprob: -14.724077224731445
    4. '	color' → logprob: -15.974077224731445
    5. '(color' → logprob: -17.599077224731445
    6. '   ' → logprob: -17.849077224731445
    7. '[color' → logprob: -18.099077224731445
    8. '_color' → logprob: -18.474077224731445
    9. ' not' → logprob: -18.599077224731445
    10. '.color' → logprob: -18.599077224731445

Token 341: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.8624639324116288e-06
    2. 'u' → logprob: -13.375001907348633
    3. '[' → logprob: -16.250001907348633
    4. '[user' → logprob: -17.125001907348633
    5. ' u' → logprob: -18.250001907348633
    6. '	u' → logprob: -18.250001907348633
    7. '(u' → logprob: -18.875001907348633
    8. '<|end|>' → logprob: -19.000001907348633
    9. '<u' → logprob: -19.375001907348633
    10. ' [' → logprob: -19.375001907348633

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5905249714851379
    2. '==' → logprob: -1.5905249118804932
    3. ']==' → logprob: -1.7155249118804932
    4. ' ==' → logprob: -3.090524911880493
    5. '[' → logprob: -4.465525150299072
    6. '[u' → logprob: -5.465525150299072
    7. ')' → logprob: -8.090524673461914
    8. ')==' → logprob: -8.465524673461914
    9. '']==' → logprob: -8.840524673461914
    10. '=' → logprob: -9.340524673461914

Token 343: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28125330805778503
    2. '==' → logprob: -1.4062533378601074
    3. '[' → logprob: -10.15625286102295
    4. ']==' → logprob: -10.40625286102295
    5. '=' → logprob: -11.40625286102295
    6. ' ' → logprob: -11.53125286102295
    7. ')==' → logprob: -12.28125286102295
    8. ')' → logprob: -13.03125286102295
    9. ']' → logprob: -13.65625286102295
    10. '===' → logprob: -14.03125286102295

Token 344: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004620591644197702
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -14.879620552062988
    4. '  ' → logprob: -17.504621505737305
    5. '       ' → logprob: -18.129621505737305
    6. '۲' → logprob: -18.754621505737305
    7. '
' → logprob: -18.879621505737305
    8. '           ' → logprob: -18.942121505737305
    9. '```' → logprob: -19.129621505737305
    10. '    ' → logprob: -19.379621505737305

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.250011444091797
    4. '```' → logprob: -18.250011444091797
    5. '0' → logprob: -18.375011444091797
    6. '
' → logprob: -18.500011444091797
    7. '  ' → logprob: -18.937511444091797
    8. '۲' → logprob: -19.750011444091797
    9. '-' → logprob: -20.187511444091797
    10. '২' → logprob: -20.875011444091797

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6388919949531555
    2. '           ' → logprob: -0.8888919949531555
    3. ':
' → logprob: -3.3888919353485107
    4. ':return' → logprob: -4.01389217376709
    5. '       ' → logprob: -5.01389217376709
    6. ' return' → logprob: -7.01389217376709
    7. 'return' → logprob: -7.01389217376709
    8. '   ' → logprob: -8.51389217376709
    9. ')' → logprob: -8.88889217376709
    10. '               ' → logprob: -9.26389217376709

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4553000330924988
    2. '       ' → logprob: -1.4553000926971436
    3. ' return' → logprob: -2.2053000926971436
    4. 'return' → logprob: -3.8303000926971436
    5. '   ' → logprob: -8.580300331115723
    6. '	       ' → logprob: -9.455300331115723
    7. '```' → logprob: -9.580300331115723
    8. ':return' → logprob: -9.830300331115723
    9. '	return' → logprob: -10.455300331115723
    10. '{return' → logprob: -11.455300331115723

Token 348: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08493167161941528
    2. 'False' → logprob: -2.5849316120147705
    3. ' return' → logprob: -5.33493185043335
    4. '           ' → logprob: -6.83493185043335
    5. ' False' → logprob: -9.084931373596191
    6. '       ' → logprob: -11.834931373596191
    7. '   ' → logprob: -12.709931373596191
    8. 'false' → logprob: -13.584931373596191
    9. '
' → logprob: -13.709931373596191
    10. '               ' → logprob: -15.084931373596191

Token 349: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'color' → logprob: -17.62500762939453
    4. 'false' → logprob: -20.37500762939453
    5. '0' → logprob: -21.87500762939453
    6. 'True' → logprob: -22.87500762939453
    7. '(False' → logprob: -23.00000762939453
    8. '   ' → logprob: -23.50000762939453
    9. '=False' → logprob: -25.37500762939453
    10. ' ' → logprob: -25.50000762939453

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531995415687561
    2. '       ' → logprob: -0.906995415687561
    3. '    
' → logprob: -6.1569952964782715
    4. '
' → logprob: -6.4069952964782715
    5. '<|end|>' → logprob: -6.4069952964782715
    6. ' color' → logprob: -6.9069952964782715
    7. '	color' → logprob: -6.9069952964782715
    8. '        
' → logprob: -7.6569952964782715
    9. 'color' → logprob: -8.15699577331543
    10. '  
' → logprob: -8.65699577331543

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006945891305804253
    2. '       ' → logprob: -5.381946086883545
    3. ' color' → logprob: -6.506946086883545
    4. '	color' → logprob: -8.006945610046387
    5. 'color' → logprob: -8.131945610046387
    6. '    
' → logprob: -9.256945610046387
    7. '
' → logprob: -9.381945610046387
    8. '        
' → logprob: -11.631945610046387
    9. '```' → logprob: -12.506945610046387
    10. '[color' → logprob: -13.256945610046387

Token 352: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.538237988948822
    2. '   ' → logprob: -1.0382380485534668
    3. 'color' (adapté à ' color') → logprob: -2.788238048553467
    4. '	color' → logprob: -7.413238048553467
    5. '       ' → logprob: -11.913237571716309
    6. '   ' → logprob: -12.788237571716309
    7. '
' → logprob: -14.288237571716309
    8. '```' → logprob: -14.413237571716309
    9. ',color' → logprob: -14.788237571716309
    10. '_color' → logprob: -14.788237571716309

Token 353: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -18.5
    3. '[user' → logprob: -18.75
    4. '```' → logprob: -20.125
    5. '[' → logprob: -20.5
    6. '[
' → logprob: -22.25
    7. '	u' → logprob: -22.375
    8. ' [' → logprob: -22.375
    9. '
' → logprob: -23.625
    10. '[v' → logprob: -23.75

Token 354: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.02137819491326809
    2. ']' → logprob: -4.021378040313721
    3. '=' → logprob: -6.021378040313721
    4. ']=' → logprob: -7.396378040313721
    5. ' =' → logprob: -8.771378517150879
    6. '[' → logprob: -11.146378517150879
    7. 'u' → logprob: -12.646378517150879
    8. ')' → logprob: -12.771378517150879
    9. '=u' → logprob: -12.771378517150879
    10. '[
' → logprob: -13.521378517150879

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008410204201936722
    2. '[u' → logprob: -5.0084099769592285
    3. ' =' → logprob: -6.3834099769592285
    4. '[' → logprob: -12.758410453796387
    5. '=u' → logprob: -14.258410453796387
    6. ']' → logprob: -15.883410453796387
    7. '=
' → logprob: -16.25840950012207
    8. 'u' → logprob: -16.38340950012207
    9. ']=' → logprob: -17.00840950012207
    10. '[user' → logprob: -17.25840950012207

Token 356: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -21.12502098083496
    4. '```' → logprob: -22.87502098083496
    5. '  ' → logprob: -24.00002098083496
    6. '`' → logprob: -24.00002098083496
    7. '[' → logprob: -24.12502098083496
    8. '۱' → logprob: -24.12502098083496
    9. '１' → logprob: -24.50002098083496
    10. '
' → logprob: -24.87502098083496

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.625
    4. '<|end|>' → logprob: -22.0
    5. '[' → logprob: -22.5
    6. '۱' → logprob: -22.875
    7. '   ' → logprob: -22.875
    8. '१' → logprob: -23.25
    9. '১' → logprob: -23.375
    10. '"""' → logprob: -24.4375

Token 358: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3707744777202606
    2. '   ' → logprob: -1.245774507522583
    3. 'for' → logprob: -3.995774507522583
    4. '
' → logprob: -6.495774269104004
    5. '       ' → logprob: -6.620774269104004
    6. '	for' → logprob: -7.870774269104004
    7. '```' → logprob: -8.495774269104004
    8. '<|end|>' → logprob: -8.870774269104004
    9. '    
' → logprob: -9.745774269104004
    10. '        
' → logprob: -11.620774269104004

Token 360: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015943869948387146
    2. ' for' → logprob: -8.75015926361084
    3. '       ' → logprob: -14.25015926361084
    4. '   ' → logprob: -15.25015926361084
    5. '	for' → logprob: -17.750160217285156
    6. '
' → logprob: -20.500160217285156
    7. '        
' → logprob: -21.000160217285156
    8. '           ' → logprob: -21.125160217285156
    9. '```' → logprob: -21.250160217285156
    10. 'res' → logprob: -21.500160217285156

Token 361: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.9186317482963204e-05
    2. 'w' → logprob: -10.500049591064453
    3. ' v' → logprob: -10.750049591064453
    4. 'nv' → logprob: -16.500049591064453
    5. 'vv' → logprob: -18.375049591064453
    6. '	v' → logprob: -18.750049591064453
    7. 'vw' → logprob: -19.125049591064453
    8. ' nxt' → logprob: -19.125049591064453
    9. 'nei' → logprob: -19.375049591064453
    10. ' w' → logprob: -19.625049591064453

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607220206409693
    2. 'in' → logprob: -4.8826069831848145
    3. '	in' → logprob: -14.132607460021973
    4. ' ' → logprob: -15.382607460021973
    5. ',' → logprob: -17.507606506347656
    6. '<|end|>' → logprob: -17.882606506347656
    7. '_in' → logprob: -18.007606506347656
    8. ' ' → logprob: -18.007606506347656
    9. 'n' → logprob: -18.007606506347656
    10. 'import' → logprob: -18.007606506347656

Token 363: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.029760558158159256
    2. ' graph' → logprob: -3.5297605991363525
    3. '(graph' → logprob: -11.904760360717773
    4. 'raph' → logprob: -13.404760360717773
    5. '	graph' → logprob: -13.404760360717773
    6. 'range' → logprob: -15.404760360717773
    7. '_graph' → logprob: -16.904760360717773
    8. ' range' → logprob: -17.404760360717773
    9. 'graphql' → logprob: -17.529760360717773
    10. '[' → logprob: -17.654760360717773

Token 364: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -18.0
    3. '[w' → logprob: -18.5
    4. '[s' → logprob: -22.125
    5. '(u' → logprob: -22.375
    6. '<u' → logprob: -22.5
    7. '[user' → logprob: -22.5
    8. '[' → logprob: -22.75
    9. ' [' → logprob: -23.375
    10. '```' → logprob: -23.375

Token 365: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.017313873395323753
    2. ']:
' → logprob: -4.5173139572143555
    3. ':' → logprob: -5.1423139572143555
    4. '):' → logprob: -8.517313957214355
    5. ']' → logprob: -9.642313957214355
    6. '[u' → logprob: -10.392313957214355
    7. ']:
' → logprob: -10.892313957214355
    8. ':
' → logprob: -11.267313957214355
    9. '       ' → logprob: -11.642313957214355
    10. ']):' → logprob: -11.642313957214355

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002439467643853277
    2. ' if' → logprob: -9.250244140625
    3. '
' → logprob: -10.125244140625
    4. '<|end|>' → logprob: -10.375244140625
    5. '       ' → logprob: -11.000244140625
    6. '            
' → logprob: -11.250244140625
    7. 'if' → logprob: -11.250244140625
    8. '```' → logprob: -11.500244140625
    9. '               ' → logprob: -11.750244140625
    10. '	       ' → logprob: -12.000244140625

Token 367: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9033782482147217
    2. '           ' → logprob: -1.1533782482147217
    3. 'if' (adapté à ' if') → logprob: -1.2783782482147217
    4. '               ' → logprob: -7.278378486633301
    5. '       ' → logprob: -10.4033784866333
    6. '	       ' → logprob: -12.0283784866333
    7. '   ' → logprob: -12.9033784866333
    8. '	if' → logprob: -13.1533784866333
    9. '```' → logprob: -13.1533784866333
    10. 'return' → logprob: -13.2783784866333

Token 368: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.20141352713108063
    2. 'dfs' → logprob: -1.7014135122299194
    3. 'd' → logprob: -15.45141315460205
    4. '
' → logprob: -17.201414108276367
    5. '(d' → logprob: -17.451414108276367
    6. 'df' → logprob: -18.326414108276367
    7. '	d' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.826414108276367
    9. '   ' → logprob: -19.076414108276367
    10. 'DFS' → logprob: -19.451414108276367

Token 369: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -14.87500286102295
    4. ' (' → logprob: -15.75000286102295
    5. 'w' → logprob: -18.000001907348633
    6. '(u' → logprob: -20.125001907348633
    7. '<w' → logprob: -20.125001907348633
    8. '(wx' → logprob: -20.500001907348633
    9. '(s' → logprob: -20.625001907348633
    10. '[w' → logprob: -20.625001907348633

Token 370: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006925300229340792
    2. '):
' → logprob: -5.006925106048584
    3. ' ):' → logprob: -8.756925582885742
    4. ')' → logprob: -10.381925582885742
    5. '():' → logprob: -11.631925582885742
    6. '()' → logprob: -12.006925582885742
    7. '()):
' → logprob: -13.131925582885742
    8. '():
' → logprob: -13.631925582885742
    9. '(u' → logprob: -14.131925582885742
    10. ')):' → logprob: -14.756925582885742

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.113290095934644e-05
    2. ' return' → logprob: -9.750081062316895
    3. 'return' → logprob: -11.000081062316895
    4. ':return' → logprob: -12.875081062316895
    5. ':
' → logprob: -13.875081062316895
    6. ':' → logprob: -14.375081062316895
    7. '           ' → logprob: -14.500081062316895
    8. '                   ' → logprob: -14.625081062316895
    9. '              ' → logprob: -15.125081062316895
    10. '                       ' → logprob: -16.00008201599121

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5918179750442505
    2. ' return' → logprob: -0.8418179750442505
    3. '               ' → logprob: -4.216817855834961
    4. '                   ' → logprob: -6.966817855834961
    5. '           ' → logprob: -10.341817855834961
    6. '
' → logprob: -11.716817855834961
    7. 'True' → logprob: -11.966817855834961
    8. ':return' → logprob: -12.091817855834961
    9. ' True' → logprob: -13.091817855834961
    10. '                       ' → logprob: -13.091817855834961

Token 373: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. 'true' → logprob: -19.1250057220459
    4. '   ' → logprob: -20.6250057220459
    5. '=True' → logprob: -21.1250057220459
    6. '
' → logprob: -21.1250057220459
    7. '           ' → logprob: -22.2500057220459
    8. '(True' → logprob: -22.5000057220459
    9. '               ' → logprob: -24.0000057220459
    10. '       ' → logprob: -24.1250057220459

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3915141355246305e-05
    2. '
' → logprob: -11.25002384185791
    3. '   ' → logprob: -13.00002384185791
    4. ' return' → logprob: -13.00002384185791
    5. '```' → logprob: -13.87502384185791
    6. 'return' → logprob: -13.87502384185791
    7. '<|end|>' → logprob: -13.87502384185791
    8. '           ' → logprob: -14.00002384185791
    9. ',' → logprob: -14.25002384185791
    10. '      ' → logprob: -14.62502384185791

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.465036105713807e-06
    2. ' return' → logprob: -12.625007629394531
    3. '   ' → logprob: -13.875007629394531
    4. '```' → logprob: -13.875007629394531
    5. '      ' → logprob: -14.750007629394531
    6. '           ' → logprob: -15.000007629394531
    7. '
' → logprob: -15.125007629394531
    8. ' color' → logprob: -15.250007629394531
    9. 'return' → logprob: -15.250007629394531
    10. ',' → logprob: -15.375007629394531

Token 376: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.3518371284008026
    2. ' color' → logprob: -1.351837158203125
    3. '   ' → logprob: -3.851837158203125
    4. '       ' → logprob: -4.101837158203125
    5. '	color' → logprob: -11.226837158203125
    6. ',color' → logprob: -11.726837158203125
    7. '```' → logprob: -11.976837158203125
    8. '
' → logprob: -12.101837158203125
    9. '[color' → logprob: -12.101837158203125
    10. '.color' → logprob: -12.101837158203125

Token 377: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.0100624169572257e-05
    2. '[w' → logprob: -10.875020027160645
    3. 'u' → logprob: -14.250020027160645
    4. 'w' → logprob: -15.500020027160645
    5. '[v' → logprob: -15.875020027160645
    6. '(u' → logprob: -16.37502098083496
    7. '[' → logprob: -17.62502098083496
    8. '```' → logprob: -18.25002098083496
    9. '	u' → logprob: -18.50002098083496
    10. 'return' → logprob: -18.75002098083496

Token 378: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05960157513618469
    2. '=' → logprob: -3.0596015453338623
    3. ']=' → logprob: -4.684601783752441
    4. ' =' → logprob: -6.559601783752441
    5. ')' → logprob: -8.809601783752441
    6. '[u' → logprob: -8.934601783752441
    7. ' ]' → logprob: -12.184601783752441
    8. ')=' → logprob: -12.309601783752441
    9. '[' → logprob: -12.434601783752441
    10. ']==' → logprob: -12.684601783752441

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861681904643774
    2. ' =' → logprob: -4.758616924285889
    3. '[u' → logprob: -13.38361644744873
    4. ']' → logprob: -14.50861644744873
    5. ')' → logprob: -15.88361644744873
    6. '=u' → logprob: -16.383617401123047
    7. ']=' → logprob: -17.008617401123047
    8. '[' → logprob: -17.508617401123047
    9. ')=' → logprob: -18.508617401123047
    10. '.=' → logprob: -18.883617401123047

Token 380: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.75020408630371
    4. '۲' → logprob: -18.62520408630371
    5. '
' → logprob: -18.75020408630371
    6. '  ' → logprob: -19.00020408630371
    7. '２' → logprob: -19.56270408630371
    8. '```' → logprob: -19.56270408630371
    9. '    ' → logprob: -20.75020408630371
    10. '=' → logprob: -21.06270408630371

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۲' → logprob: -19.250001907348633
    4. '２' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '0' → logprob: -21.312501907348633
    7. '  ' → logprob: -21.562501907348633
    8. '২' → logprob: -22.000001907348633
    9. '२' → logprob: -22.125001907348633
    10. '₂' → logprob: -22.312501907348633

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007878291653469205
    2. '
' → logprob: -8.250787734985352
    3. ' return' → logprob: -8.375787734985352
    4. 'return' → logprob: -8.500787734985352
    5. '<|end|>' → logprob: -10.000787734985352
    6. '   ' → logprob: -11.125787734985352
    7. '	return' → logprob: -11.625787734985352
    8. ',' → logprob: -12.000787734985352
    9. '        
' → logprob: -12.375787734985352
    10. '<|end|>' → logprob: -13.000787734985352

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02718297205865383
    2. '   ' → logprob: -3.9021830558776855
    3. ' return' → logprob: -6.0271830558776855
    4. '
' → logprob: -6.2771830558776855
    5. '	return' → logprob: -6.9021830558776855
    6. 'return' → logprob: -7.0271830558776855
    7. '<|end|>' → logprob: -8.402182579040527
    8. '```' → logprob: -10.402182579040527
    9. '        
' → logprob: -10.402182579040527
    10. '           ' → logprob: -10.527182579040527

Token 384: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012048874981701374
    2. ' return' → logprob: -4.512048721313477
    3. '       ' → logprob: -7.012048721313477
    4. 'False' → logprob: -9.262048721313477
    5. '	return' → logprob: -13.262048721313477
    6. '   ' → logprob: -13.762048721313477
    7. '
' → logprob: -14.387048721313477
    8. ' False' → logprob: -14.637048721313477
    9. '           ' → logprob: -15.012048721313477
    10. 'eturn' → logprob: -15.762048721313477

Token 385: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. 'True' → logprob: -22.0000057220459
    4. '(False' → logprob: -22.0000057220459
    5. 'false' → logprob: -23.6250057220459
    6. 'F' → logprob: -26.0000057220459
    7. '_false' → logprob: -26.3750057220459
    8. '=False' → logprob: -26.6250057220459
    9. '.False' → logprob: -27.0000057220459
    10. 'FALSE' → logprob: -27.1250057220459

Token 386: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07723792642354965
    2. '
' → logprob: -2.952237844467163
    3. '    
' → logprob: -4.202238082885742
    4. '<|end|>' → logprob: -5.327238082885742
    5. ')' → logprob: -6.827238082885742
    6. '  
' → logprob: -8.202238082885742
    7. 'return' → logprob: -9.077238082885742
    8. ' return' → logprob: -9.702238082885742
    9. '<|end|>' → logprob: -9.702238082885742
    10. '```' → logprob: -9.827238082885742

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6117147207260132
    2. 'if' → logprob: -1.1117147207260132
    3. ' if' → logprob: -2.6117148399353027
    4. 'return' → logprob: -3.7367148399353027
    5. '
' → logprob: -4.486714839935303
    6. 'result' → logprob: -4.486714839935303
    7. '    
' → logprob: -5.736714839935303
    8. ' return' → logprob: -6.111714839935303
    9. '```' → logprob: -6.736714839935303
    10. ' has' → logprob: -8.486714363098145

Token 388: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18740452826023102
    2. 'can' → logprob: -2.1874046325683594
    3. 'has' → logprob: -3.5624046325683594
    4. 'cycle' → logprob: -3.8124046325683594
    5. '   ' → logprob: -5.687404632568359
    6. 'is' → logprob: -7.187404632568359
    7. 'result' → logprob: -7.562404632568359
    8. 'st' → logprob: -7.812404632568359
    9. 'return' → logprob: -7.937404632568359
    10. 'reachable' → logprob: -8.06240463256836

Token 389: ' Additionally' (ID: 25563)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0058204797096550465
    2. 'cycle' → logprob: -6.255820274353027
    3. '   ' → logprob: -6.380820274353027
    4. 'has' → logprob: -6.755820274353027
    5. '#' → logprob: -7.880820274353027
    6. ' if' → logprob: -8.005820274353027
    7. 'can' → logprob: -8.880820274353027
    8. 'cy' → logprob: -10.130820274353027
    9. 'return' → logprob: -10.755820274353027
    10. 'is' → logprob: -11.005820274353027

Token 390: ' check' (ID: 2371)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4848490059375763
    2. '   ' → logprob: -1.734848976135254
    3. '#' → logprob: -2.484848976135254
    4. 'from' → logprob: -2.609848976135254
    5. 'def' → logprob: -3.609848976135254
    6. 'dist' → logprob: -4.734848976135254
    7. ' from' → logprob: -5.109848976135254
    8. 'visited' → logprob: -6.484848976135254
    9. '
' → logprob: -6.609848976135254
    10. ' #' → logprob: -6.734848976135254

Token 391: ' reach' (ID: 7627)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7817713022232056
    2. ' if' → logprob: -0.7817713022232056
    3. 'if' → logprob: -3.031771183013916
    4. 'dist' → logprob: -5.281771183013916
    5. 'from' → logprob: -5.281771183013916
    6. ' can' → logprob: -5.406771183013916
    7. ' from' → logprob: -5.531771183013916
    8. ' cycle' → logprob: -5.781771183013916
    9. ' for' → logprob: -6.156771183013916
    10. ' dist' → logprob: -6.406771183013916

Token 392: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.004411247558891773
    2. 'able' → logprob: -5.504411220550537
    3. '   ' → logprob: -8.254411697387695
    4. '_' → logprob: -10.129411697387695
    5. 'abil' → logprob: -11.004411697387695
    6. '=' → logprob: -11.629411697387695
    7. ' =' → logprob: -13.254411697387695
    8. ' ' → logprob: -13.379411697387695
    9. 'ab' → logprob: -13.754411697387695
    10. '[' → logprob: -14.254411697387695

Token 393: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6981037259101868
    2. '   ' → logprob: -1.198103666305542
    3. ' from' → logprob: -1.698103666305542
    4. 'visited' → logprob: -4.323103904724121
    5. ' visited' → logprob: -6.948103904724121
    6. 'def' → logprob: -7.198103904724121
    7. ':' → logprob: -7.323103904724121
    8. ' reachable' → logprob: -7.573103904724121
    9. 'reachable' → logprob: -8.073103904724121
    10. ' to' → logprob: -8.323103904724121

Token 394: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1275201290845871
    2. ' end' → logprob: -2.1275200843811035
    3. ' the' → logprob: -8.752520561218262
    4. '[end' → logprob: -8.752520561218262
    5. 'the' → logprob: -8.877520561218262
    6. '=end' → logprob: -10.127520561218262
    7. ' ' → logprob: -10.752520561218262
    8. 'from' → logprob: -11.002520561218262
    9. '   ' → logprob: -11.502520561218262
    10. '	end' → logprob: -11.752520561218262

Token 395: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026961607858538628
    2. 'visited' → logprob: -4.526961803436279
    3. 'from' → logprob: -5.151961803436279
    4. '
' → logprob: -5.401961803436279
    5. ' from' → logprob: -6.026961803436279
    6. 'reachable' → logprob: -6.776961803436279
    7. ' visited' → logprob: -7.276961803436279
    8. 'def' → logprob: -8.026961326599121
    9. 'color' → logprob: -8.151961326599121
    10. ' reachable' → logprob: -8.776961326599121

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007850422523915768
    2. ' ' → logprob: -4.882850646972656
    3. 'start' → logprob: -8.632850646972656
    4. 'end' → logprob: -11.132850646972656
    5. 'all' → logprob: -11.632850646972656
    6. '[' → logprob: -11.632850646972656
    7. 'any' → logprob: -11.757850646972656
    8. 'range' → logprob: -12.632850646972656
    9. 'collections' → logprob: -13.007850646972656
    10. 'def' → logprob: -13.132850646972656

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.266944157890975e-05
    2. 'start' → logprob: -10.125072479248047
    3. 'end' → logprob: -11.000072479248047
    4. ' ' → logprob: -11.375072479248047
    5. 'range' → logprob: -14.000072479248047
    6. '[' → logprob: -14.250072479248047
    7. 'all' → logprob: -14.750072479248047
    8. 'def' → logprob: -15.000072479248047
    9. 'pos' → logprob: -15.125072479248047
    10. 'any' → logprob: -15.250072479248047

Token 398: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005906988866627216
    2. '
' → logprob: -5.38090705871582
    3. 'visited' → logprob: -7.50590705871582
    4. 'def' → logprob: -8.25590705871582
    5. 'from' → logprob: -8.38090705871582
    6. '    
' → logprob: -8.88090705871582
    7. 'reachable' → logprob: -10.75590705871582
    8. ' visited' → logprob: -10.88090705871582
    9. 'queue' → logprob: -10.88090705871582
    10. ' from' → logprob: -11.13090705871582

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14329902827739716
    2. ' from' → logprob: -2.893299102783203
    3. 'from' → logprob: -2.893299102783203
    4. ' visited' → logprob: -4.643299102783203
    5. 'visited' → logprob: -4.768299102783203
    6. ' reachable' → logprob: -6.393299102783203
    7. ' queue' → logprob: -7.143299102783203
    8. 'reachable' → logprob: -7.268299102783203
    9. 'import' → logprob: -7.643299102783203
    10. 'queue' → logprob: -7.768299102783203

Token 400: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06370579451322556
    2. 'from' → logprob: -3.3137056827545166
    3. 'reachable' → logprob: -4.688705921173096
    4. 'queue' → logprob: -5.063705921173096
    5. ' visited' → logprob: -5.313705921173096
    6. 'q' → logprob: -5.938705921173096
    7. 'def' → logprob: -7.063705921173096
    8. '   ' → logprob: -7.563705921173096
    9. 'dist' → logprob: -8.313705444335938
    10. 'que' → logprob: -8.563705444335938

Token 401: ' If' (ID: 1843)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0343005433678627
    2. ' visited' → logprob: -4.659300327301025
    3. 'from' → logprob: -4.784300327301025
    4. 'reachable' → logprob: -4.909300327301025
    5. 'queue' → logprob: -5.409300327301025
    6. 'q' → logprob: -6.159300327301025
    7. '   ' → logprob: -7.534300327301025
    8. ' reachable' → logprob: -7.659300327301025
    9. 'def' → logprob: -8.159300804138184
    10. 'que' → logprob: -9.034300804138184

Token 402: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.49869704246520996
    2. ' not' → logprob: -0.99869704246521
    3. 'dfs' → logprob: -4.123697280883789
    4. ' dfs' → logprob: -4.873697280883789
    5. 'any' → logprob: -8.873697280883789
    6. 'color' → logprob: -9.373697280883789
    7. ' any' → logprob: -9.623697280883789
    8. ' color' → logprob: -10.123697280883789
    9. 'all' → logprob: -10.373697280883789
    10. '(not' → logprob: -10.748697280883789

Token 403: ' path' (ID: 3104)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.26735708117485046
    2. 'dfs' → logprob: -2.142357110977173
    3. ' cycle' → logprob: -3.392357110977173
    4. ' reachable' → logprob: -3.892357110977173
    5. 'reachable' → logprob: -4.142356872558594
    6. ' path' → logprob: -4.517356872558594
    7. ' cycles' → logprob: -5.142356872558594
    8. ' not' → logprob: -5.142356872558594
    9. ' color' → logprob: -5.142356872558594
    10. ' bfs' → logprob: -5.142356872558594

Token 404: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2808223068714142
    2. 'to' → logprob: -1.9058222770690918
    3. ' to' → logprob: -2.780822277069092
    4. ' from' → logprob: -3.780822277069092
    5. ' exists' → logprob: -6.030822277069092
    6. 'exists' → logprob: -6.155822277069092
    7. '   ' → logprob: -6.530822277069092
    8. 'found' → logprob: -6.530822277069092
    9. '[' → logprob: -6.905822277069092
    10. ':' → logprob: -7.405822277069092

Token 405: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.020567815750837326
    2. ' end' → logprob: -3.8955678939819336
    3. ' ' → logprob: -11.145567893981934
    4. 'reach' → logprob: -12.520567893981934
    5. '0' → logprob: -13.645567893981934
    6. ' reach' → logprob: -13.895567893981934
    7. '	end' → logprob: -13.895567893981934
    8. 'the' → logprob: -14.020567893981934
    9. '[end' → logprob: -14.020567893981934
    10. '=end' → logprob: -14.145567893981934

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8988054990768433
    2. '   ' → logprob: -1.5238054990768433
    3. 'from' → logprob: -1.6488054990768433
    4. ':' → logprob: -2.398805618286133
    5. ' or' → logprob: -3.773805618286133
    6. ' from' → logprob: -3.773805618286133
    7. ' exists' → logprob: -3.773805618286133
    8. 'exists' → logprob: -4.773805618286133
    9. 'found' → logprob: -5.523805618286133
    10. ' is' → logprob: -6.023805618286133

Token 407: ' then' (ID: 1815)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.305733859539032
    2. ' print' → logprob: -1.5557339191436768
    3. 'return' → logprob: -3.3057339191436768
    4. 'print' → logprob: -4.680733680725098
    5. '   ' → logprob: -5.430733680725098
    6. ' queue' → logprob: -7.055733680725098
    7. ' from' → logprob: -8.430733680725098
    8. ' visited' → logprob: -8.805733680725098
    9. 'from' → logprob: -9.305733680725098
    10. ' q' → logprob: -9.430733680725098

Token 408: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0995766744017601
    2. 'return' → logprob: -2.724576711654663
    3. '   ' → logprob: -4.224576473236084
    4. ' print' → logprob: -4.349576473236084
    5. ' return' → logprob: -6.474576473236084
    6. '```' → logprob: -10.599576950073242
    7. ' ' → logprob: -11.349576950073242
    8. '  ' → logprob: -11.474576950073242
    9. '       ' → logprob: -11.599576950073242
    10. 'color' → logprob: -11.599576950073242

Token 409: 'NG' (ID: 19236)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05579860135912895
    2. 'return' → logprob: -3.0557985305786133
    3. ' print' → logprob: -5.305798530578613
    4. '   ' → logprob: -7.180798530578613
    5. ' return' → logprob: -7.930798530578613
    6. 'im' → logprob: -8.055798530578613
    7. 'Impossible' → logprob: -9.055798530578613
    8. '"' → logprob: -9.180798530578613
    9. 'No' → logprob: -9.305798530578613
    10. '-' → logprob: -9.805798530578613

Token 410: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04375985637307167
    2. '"
' → logprob: -3.168759822845459
    3. '"
' → logprob: -7.793759822845459
    4. '\n' → logprob: -8.418760299682617
    5. '"\' → logprob: -9.668760299682617
    6. '"

' → logprob: -10.543760299682617
    7. '",' → logprob: -11.668760299682617
    8. 'print' → logprob: -11.793760299682617
    9. '".' → logprob: -12.168760299682617
    10. '"""
' → logprob: -12.418760299682617

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00832437351346016
    2. '
' → logprob: -4.883324146270752
    3. 'visited' → logprob: -8.50832462310791
    4. 'from' → logprob: -8.63332462310791
    5. ' from' → logprob: -9.25832462310791
    6. ' visited' → logprob: -9.50832462310791
    7. '    
' → logprob: -9.75832462310791
    8. 'queue' → logprob: -10.63332462310791
    9. ' queue' → logprob: -10.75832462310791
    10. '```' → logprob: -10.75832462310791

Token 412: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0729149729013443
    2. '   ' → logprob: -3.4479150772094727
    3. 'from' → logprob: -4.197915077209473
    4. ' visited' → logprob: -4.822915077209473
    5. 'queue' → logprob: -4.947915077209473
    6. 'reachable' → logprob: -5.447915077209473
    7. 'q' → logprob: -6.447915077209473
    8. 'def' → logprob: -6.947915077209473
    9. 'dist' → logprob: -7.697915077209473
    10. ' from' → logprob: -8.322915077209473

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06206459924578667
    2. '=' → logprob: -2.8120646476745605
    3. '[' → logprob: -9.562064170837402
    4. '=[' → logprob: -11.062064170837402
    5. ' =[' → logprob: -11.562064170837402
    6. ' ' → logprob: -14.437064170837402
    7. '=set' → logprob: -15.812064170837402
    8. ')' → logprob: -15.937064170837402
    9. ' ' → logprob: -16.06206512451172
    10. '=[]' → logprob: -16.43706512451172

Token 414: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043233807082287967
    2. ' [' → logprob: -7.75043249130249
    3. '[start' → logprob: -14.625432014465332
    4. 'set' → logprob: -15.500432014465332
    5. '[b' → logprob: -15.625432014465332
    6. '{' → logprob: -16.12543296813965
    7. '[node' → logprob: -16.25043296813965
    8. '   ' → logprob: -16.37543296813965
    9. '[end' → logprob: -16.37543296813965
    10. '[int' → logprob: -16.50043296813965

Token 415: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000742803153116256
    2. '0' → logprob: -7.2507429122924805
    3. ' False' → logprob: -10.37574291229248
    4. '(False' → logprob: -13.62574291229248
    5. 'end' → logprob: -14.75074291229248
    6. '[' → logprob: -16.625741958618164
    7. '=False' → logprob: -17.125741958618164
    8. '   ' → logprob: -18.375741958618164
    9. ' ' → logprob: -19.125741958618164
    10. '[end' → logprob: -19.250741958618164

Token 416: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.3170599043369293
    2. ']' → logprob: -1.317059874534607
    3. ']*' → logprob: -5.6920599937438965
    4. '](' → logprob: -8.442059516906738
    5. ']+' → logprob: -9.192059516906738
    6. '*(' → logprob: -9.942059516906738
    7. '(end' → logprob: -11.317059516906738
    8. ']
' → logprob: -11.317059516906738
    9. ' ]' → logprob: -11.442059516906738
    10. '(' → logprob: -12.192059516906738

Token 417: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -8.537868779967539e-06
    2. ' end' → logprob: -11.750008583068848
    3. '(end' → logprob: -14.625008583068848
    4. 'len' → logprob: -16.50000762939453
    5. '
' → logprob: -19.00000762939453
    6. '=end' → logprob: -19.37500762939453
    7. '   ' → logprob: -19.50000762939453
    8. '[end' → logprob: -19.87500762939453
    9. '	end' → logprob: -21.00000762939453
    10. ' ' → logprob: -21.25000762939453

Token 418: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.318681188422488e-05
    2. ' +' → logprob: -11.25001335144043
    3. '+
' → logprob: -16.37501335144043
    4. '```' → logprob: -17.25001335144043
    5. ')+' → logprob: -17.37501335144043
    6. '()+' → logprob: -17.87501335144043
    7. '＋' → logprob: -18.62501335144043
    8. '1' → logprob: -18.75001335144043
    9. '
' → logprob: -19.37501335144043
    10. '[' → logprob: -19.37501335144043

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001999642699956894
    2. '2' → logprob: -8.750200271606445
    3. ' ' → logprob: -10.250200271606445
    4. '+' → logprob: -12.625200271606445
    5. '(' → logprob: -14.312700271606445
    6. '   ' → logprob: -14.875200271606445
    7. 'end' → logprob: -15.312700271606445
    8. '
' → logprob: -15.437700271606445
    9. '```' → logprob: -15.437700271606445
    10. '0' → logprob: -15.500200271606445

Token 420: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01113848201930523
    2. ')' → logprob: -4.511138439178467
    3. ')
' → logprob: -9.386138916015625
    4. ' )
' → logprob: -12.511138916015625
    5. ')

' → logprob: -13.511138916015625
    6. '
' → logprob: -14.136138916015625
    7. '   ' → logprob: -14.136138916015625
    8. 'def' → logprob: -16.636138916015625
    9. ']
' → logprob: -17.261138916015625
    10. ' ' → logprob: -17.761138916015625

Token 421: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2287025898694992
    2. '   ' → logprob: -1.8537025451660156
    3. '
' → logprob: -3.8537025451660156
    4. 'from' → logprob: -4.478702545166016
    5. 'queue' → logprob: -4.728702545166016
    6. ' def' → logprob: -6.228702545166016
    7. 'deque' → logprob: -6.728702545166016
    8. '```' → logprob: -6.853702545166016
    9. ' queue' → logprob: -7.103702545166016
    10. ' from' → logprob: -7.228702545166016

Token 422: ' q' (ID: 2335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3394635319709778
    2. 'queue' → logprob: -1.339463472366333
    3. 'from' → logprob: -4.589463710784912
    4. 'q' (adapté à ' q') → logprob: -5.089463710784912
    5. '
' → logprob: -5.339463710784912
    6. 'visited' → logprob: -6.214463710784912
    7. 'stack' → logprob: -6.839463710784912
    8. '   ' → logprob: -7.464463710784912
    9. 'deque' → logprob: -7.589463710784912
    10. ' queue' → logprob: -8.589463233947754

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021001845598221
    2. ' =' → logprob: -2.350209951400757
    3. '.append' → logprob: -13.725210189819336
    4. '=q' → logprob: -13.975210189819336
    5. '=[]' → logprob: -15.350210189819336
    6. '=int' → logprob: -15.475210189819336
    7. 'ue' → logprob: -16.225210189819336
    8. 'deque' → logprob: -16.350210189819336
    9. '＝' → logprob: -16.350210189819336
    10. '=u' → logprob: -16.475210189819336

Token 424: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.306760805164231e-05
    2. ' deque' → logprob: -11.25001335144043
    3. 'collections' → logprob: -18.62501335144043
    4. 'de' → logprob: -18.75001335144043
    5. 'from' → logprob: -21.12501335144043
    6. 'Deque' → logprob: -21.37501335144043
    7. '   ' → logprob: -21.87501335144043
    8. '```' → logprob: -22.00001335144043
    9. '[' → logprob: -23.00001335144043
    10. 'dq' → logprob: -24.12501335144043

Token 425: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01637544296681881
    2. '()
' → logprob: -4.266375541687012
    3. '()' → logprob: -6.141375541687012
    4. '[' → logprob: -10.516375541687012
    5. '([(' → logprob: -10.766375541687012
    6. '(' → logprob: -12.141375541687012
    7. '()

' → logprob: -12.766375541687012
    8. '(range' → logprob: -15.141375541687012
    9. '()\' → logprob: -15.391375541687012
    10. '()
' → logprob: -15.516375541687012

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -17.875
    4. '[' → logprob: -18.875
    5. '
' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. '(' → logprob: -19.625
    8. ')' → logprob: -19.75
    9. 'start' → logprob: -20.1875
    10. 's' → logprob: -20.625

Token 427: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.12697304785251617
    2. '])' → logprob: -2.1269731521606445
    3. ')
' → logprob: -10.751973152160645
    4. '])

' → logprob: -11.501973152160645
    5. '])
' → logprob: -11.751973152160645
    6. ')' → logprob: -12.501973152160645
    7. ' ])
' → logprob: -13.501973152160645
    8. ' ])' → logprob: -15.876973152160645
    9. ']' → logprob: -16.626972198486328
    10. ']
' → logprob: -17.126972198486328

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14467406272888184
    2. 'while' → logprob: -2.394674062728882
    3. ' while' → logprob: -3.394674062728882
    4. '
' → logprob: -4.769674301147461
    5. 'visited' → logprob: -7.019674301147461
    6. '	while' → logprob: -7.894674301147461
    7. '```' → logprob: -9.769674301147461
    8. '    
' → logprob: -9.894674301147461
    9. 'While' → logprob: -10.894674301147461
    10. ' visited' → logprob: -11.269674301147461

Token 429: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007229624316096306
    2. 'visited' (adapté à ' visited') → logprob: -5.007229804992676
    3. ' while' → logprob: -7.632229804992676
    4. '   ' → logprob: -10.882229804992676
    5. '
' → logprob: -12.132229804992676
    6. 'While' → logprob: -13.257229804992676
    7. '```' → logprob: -13.257229804992676
    8. ' visited' → logprob: -13.882229804992676
    9. '	while' → logprob: -14.257229804992676
    10. '    
' → logprob: -16.25722885131836

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.75
    3. ']' → logprob: -17.875
    4. '=' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. ' =' → logprob: -18.125
    7. '][' → logprob: -19.125
    8. '[q' → logprob: -19.25
    9. '\[' → logprob: -19.375
    10. ')' → logprob: -19.75

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.625001907348633
    4. ']' → logprob: -17.375001907348633
    5. '
' → logprob: -18.000001907348633
    6. ')' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '{' → logprob: -20.750001907348633
    9. '```' → logprob: -20.750001907348633
    10. '])' → logprob: -20.875001907348633

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006844072602689266
    2. ']=' → logprob: -5.0068440437316895
    3. ' ]' → logprob: -9.756844520568848
    4. '=' → logprob: -10.506844520568848
    5. '=True' → logprob: -10.506844520568848
    6. ' =' → logprob: -11.506844520568848
    7. 'True' → logprob: -12.256844520568848
    8. '])' → logprob: -14.506844520568848
    9. ')' → logprob: -14.631844520568848
    10. ' True' → logprob: -16.13184356689453

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011717714369297028
    2. ' =' → logprob: -6.751171588897705
    3. '=True' → logprob: -13.376172065734863
    4. 'True' → logprob: -19.626171112060547
    5. ']=' → logprob: -19.626171112060547
    6. '=False' → logprob: -19.876171112060547
    7. '[' → logprob: -20.751171112060547
    8. ' ' → logprob: -21.001171112060547
    9. '＝' → logprob: -21.501171112060547
    10. ']' → logprob: -21.501171112060547

Token 434: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. '(True' → logprob: -21.62502670288086
    4. '=True' → logprob: -21.87502670288086
    5. 'False' → logprob: -22.75002670288086
    6. 'true' → logprob: -23.37502670288086
    7. '
' → logprob: -23.62502670288086
    8. '1' → logprob: -23.62502670288086
    9. '   ' → logprob: -24.12502670288086
    10. 'Tr' → logprob: -25.50002670288086

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26958543062210083
    2. ' while' → logprob: -2.269585371017456
    3. '   ' → logprob: -2.394585371017456
    4. 'while' → logprob: -3.644585371017456
    5. '```' → logprob: -5.144585609436035
    6. '<|end|>' → logprob: -5.519585609436035
    7. '	while' → logprob: -5.894585609436035
    8. ')' → logprob: -7.144585609436035
    9. '    
' → logprob: -7.269585609436035
    10. '``' → logprob: -8.019585609436035

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041574787348508835
    2. 'while' → logprob: -3.791574716567993
    3. ' while' → logprob: -4.166574954986572
    4. '
' → logprob: -6.291574954986572
    5. '```' → logprob: -7.666574954986572
    6. '	while' → logprob: -8.166574478149414
    7. '    
' → logprob: -10.291574478149414
    8. '``' → logprob: -11.541574478149414
    9. 'While' → logprob: -12.791574478149414
    10. '  
' → logprob: -12.916574478149414

Token 437: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006951338145881891
    2. ' while' → logprob: -5.006951332092285
    3. '   ' → logprob: -8.506951332092285
    4. '
' → logprob: -11.131951332092285
    5. '```' → logprob: -11.506951332092285
    6. '	while' → logprob: -11.756951332092285
    7. 'While' → logprob: -13.756951332092285
    8. '``' → logprob: -16.0069522857666
    9. '    
' → logprob: -16.3819522857666
    10. 'q' → logprob: -17.8819522857666

Token 438: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10021119564771652
    2. ' q' → logprob: -2.3502111434936523
    3. '	q' → logprob: -13.100211143493652
    4. 'len' → logprob: -13.850211143493652
    5. ' ' → logprob: -14.475211143493652
    6. '   ' → logprob: -15.100211143493652
    7. '  ' → logprob: -16.60021209716797
    8. ' ' → logprob: -16.72521209716797
    9. '_q' → logprob: -16.72521209716797
    10. '(q' → logprob: -16.85021209716797

Token 439: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42883065342903137
    2. ':' → logprob: -1.053830623626709
    3. '):
' → logprob: -9.428831100463867
    4. '   ' → logprob: -11.053831100463867
    5. '():
' → logprob: -11.553831100463867
    6. '):' → logprob: -12.178831100463867
    7. 'opleft' → logprob: -12.928831100463867
    8. '```' → logprob: -13.053831100463867
    9. '.pop' → logprob: -13.303831100463867
    10. ':

' → logprob: -13.428831100463867

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48101308941841125
    2. ' u' → logprob: -0.9810130596160889
    3. 'u' → logprob: -5.981013298034668
    4. '   ' → logprob: -6.231013298034668
    5. ' v' → logprob: -6.356013298034668
    6. '    ' → logprob: -8.356013298034668
    7. ' q' → logprob: -8.981013298034668
    8. ' pos' → logprob: -9.606013298034668
    9. '	   ' → logprob: -9.856013298034668
    10. ' w' → logprob: -10.106013298034668

Token 441: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.008634542115032673
    2. ' u' → logprob: -4.758634567260742
    3. 'pos' → logprob: -11.008634567260742
    4. '   ' → logprob: -13.258634567260742
    5. 'v' → logprob: -14.383634567260742
    6. 'cur' → logprob: -14.758634567260742
    7. 'current' → logprob: -14.883634567260742
    8. '	u' → logprob: -15.508634567260742
    9. 'curr' → logprob: -17.008634567260742
    10. ' pos' → logprob: -17.508634567260742

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38784199953079224
    2. '=' → logprob: -1.1378419399261475
    3. '=q' → logprob: -7.262842178344727
    4. '=u' → logprob: -9.012842178344727
    5. '   ' → logprob: -9.262842178344727
    6. '.append' → logprob: -11.137842178344727
    7. '.pop' → logprob: -11.262842178344727
    8. '=get' → logprob: -12.012842178344727
    9. '=p' → logprob: -12.137842178344727
    10. '.=' → logprob: -13.137842178344727

Token 443: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0001584850688232109
    2. ' q' → logprob: -8.750158309936523
    3. '	q' → logprob: -20.625158309936523
    4. 'queue' → logprob: -21.875158309936523
    5. 'deque' → logprob: -23.375158309936523
    6. '=q' → logprob: -23.750158309936523
    7. '$q' → logprob: -24.125158309936523
    8. '   ' → logprob: -24.250158309936523
    9. '.q' → logprob: -24.500158309936523
    10. '_q' → logprob: -25.125158309936523

Token 444: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -7.5649528298527e-05
    2. '.' → logprob: -10.125075340270996
    3. '.pop' → logprob: -10.250075340270996
    4. ' .' → logprob: -16.250076293945312
    5. '   ' → logprob: -16.750076293945312
    6. '.dequeue' → logprob: -18.000076293945312
    7. '.append' → logprob: -18.000076293945312
    8. 'p' → logprob: -18.750076293945312
    9. '=' → logprob: -19.125076293945312
    10. '​.' → logprob: -19.375076293945312

Token 445: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0011873723706230521
    2. 'op' → logprob: -6.751187324523926
    3. 'ople' → logprob: -11.126187324523926
    4. 'opl' → logprob: -13.126187324523926
    5. 'opup' → logprob: -16.251188278198242
    6. 'opf' → logprob: -16.501188278198242
    7. 'oplevel' → logprob: -16.626188278198242
    8. 'o' → logprob: -17.876188278198242
    9. 'oppable' → logprob: -18.001188278198242
    10. '```' → logprob: -18.126188278198242

Token 446: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012032082304358482
    2. 'for' → logprob: -7.5012030601501465
    3. ' for' → logprob: -8.251203536987305
    4. '
' → logprob: -8.251203536987305
    5. '           ' → logprob: -10.001203536987305
    6. ')' → logprob: -10.751203536987305
    7. '   ' → logprob: -11.001203536987305
    8. '<|end|>' → logprob: -11.126203536987305
    9. ',' → logprob: -11.626203536987305
    10. ')
' → logprob: -12.251203536987305

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029268302023410797
    2. 'for' → logprob: -6.002926826477051
    3. ' for' → logprob: -7.752926826477051
    4. '   ' → logprob: -11.12792682647705
    5. '	for' → logprob: -12.87792682647705
    6. '           ' → logprob: -13.00292682647705
    7. '```' → logprob: -13.75292682647705
    8. '	' → logprob: -14.62792682647705
    9. '<|end|>' → logprob: -16.252927780151367
    10. '	   ' → logprob: -16.377927780151367

Token 448: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06198493763804436
    2. ' for' → logprob: -2.8119850158691406
    3. '           ' → logprob: -11.31198501586914
    4. '       ' → logprob: -13.18698501586914
    5. '	for' → logprob: -13.31198501586914
    6. '   ' → logprob: -14.18698501586914
    7. '
' → logprob: -14.81198501586914
    8. '```' → logprob: -14.81198501586914
    9. '        
' → logprob: -17.81198501586914
    10. '``' → logprob: -18.81198501586914

Token 449: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -9.615255839889869e-05
    2. ' u' → logprob: -9.250096321105957
    3. '	u' → logprob: -17.50009536743164
    4. '
' → logprob: -18.50009536743164
    5. '   ' → logprob: -19.12509536743164
    6. ' ' → logprob: -20.25009536743164
    7. '[u' → logprob: -20.50009536743164
    8. '

' → logprob: -21.62509536743164
    9. '  ' → logprob: -21.75009536743164
    10. '_u' → logprob: -21.75009536743164

Token 450: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519310414791107
    2. ' ==' → logprob: -1.501931071281433
    3. '==
' → logprob: -14.001931190490723
    4. ']==' → logprob: -15.251931190490723
    5. 'u' → logprob: -15.501931190490723
    6. ')==' → logprob: -15.501931190490723
    7. '==(' → logprob: -16.001930236816406
    8. '===' → logprob: -16.126930236816406
    9. '```' → logprob: -16.751930236816406
    10. '=' → logprob: -16.751930236816406

Token 451: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.014163628220558167
    2. ' end' → logprob: -4.264163494110107
    3. '(end' → logprob: -17.014163970947266
    4. '=end' → logprob: -17.264163970947266
    5. '	end' → logprob: -18.139163970947266
    6. '[end' → logprob: -19.014163970947266
    7. 'n' → logprob: -19.389163970947266
    8. '   ' → logprob: -19.514163970947266
    9. ' ' → logprob: -19.764163970947266
    10. ''end' → logprob: -20.639163970947266

Token 452: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.508836567401886
    2. ':
' → logprob: -1.0088365077972412
    3. ':' → logprob: -3.383836507797241
    4. '):
' → logprob: -8.88383674621582
    5. '               ' → logprob: -10.63383674621582
    6. '       ' → logprob: -10.63383674621582
    7. ':return' → logprob: -10.63383674621582
    8. '          ' → logprob: -11.38383674621582
    9. '		' → logprob: -12.38383674621582
    10. ' :
' → logprob: -12.75883674621582

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.394135612528771e-05
    2. 'break' → logprob: -11.375043869018555
    3. 'return' → logprob: -11.625043869018555
    4. '               ' → logprob: -12.250043869018555
    5. ' return' → logprob: -12.625043869018555
    6. ' break' → logprob: -12.750043869018555
    7. '	       ' → logprob: -12.875043869018555
    8. '		' → logprob: -13.000043869018555
    9. 'continue' → logprob: -13.375043869018555
    10. '
' → logprob: -13.750043869018555

Token 454: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24384401738643646
    2. '           ' → logprob: -2.1188440322875977
    3. 'print' → logprob: -3.1188440322875977
    4. ' print' → logprob: -3.2438440322875977
    5. 'break' (adapté à ' break') → logprob: -5.368844032287598
    6. ' break' → logprob: -5.493844032287598
    7. ' return' → logprob: -6.118844032287598
    8. 'return' → logprob: -6.243844032287598
    9. '       ' → logprob: -9.868844032287598
    10. '   ' → logprob: -12.243844032287598

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012023169983876869
    2. 'for' → logprob: -9.750120162963867
    3. ' for' → logprob: -10.125120162963867
    4. '   ' → logprob: -11.000120162963867
    5. '           ' → logprob: -12.750120162963867
    6. '
' → logprob: -13.750120162963867
    7. '        
' → logprob: -14.875120162963867
    8. '<|end|>' → logprob: -15.375120162963867
    9. ',' → logprob: -15.625120162963867
    10. '	for' → logprob: -15.875120162963867

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007641059812158346
    2. ' for' → logprob: -5.507640838623047
    3. 'for' → logprob: -5.757640838623047
    4. '   ' → logprob: -8.007640838623047
    5. '<|end|>' → logprob: -10.382640838623047
    6. '           ' → logprob: -11.507640838623047
    7. '	for' → logprob: -11.757640838623047
    8. '```' → logprob: -12.257640838623047
    9. '        
' → logprob: -12.507640838623047
    10. ',' → logprob: -13.382640838623047

Token 457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018822348210960627
    2. ' for' → logprob: -6.751882076263428
    3. '       ' → logprob: -7.376882076263428
    4. '   ' → logprob: -9.501882553100586
    5. '	for' → logprob: -11.626882553100586
    6. '           ' → logprob: -13.376882553100586
    7. '```' → logprob: -14.501882553100586
    8. ' ' → logprob: -14.876882553100586
    9. ' ' → logprob: -17.251882553100586
    10. '
' → logprob: -17.376882553100586

Token 458: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.011257786303758621
    2. 'v' → logprob: -4.511257648468018
    3. ' w' → logprob: -8.511258125305176
    4. 'nv' → logprob: -12.636258125305176
    5. 'nx' → logprob: -12.886258125305176
    6. ' v' → logprob: -13.511258125305176
    7. 'wv' → logprob: -14.261258125305176
    8. 'vw' → logprob: -14.761258125305176
    9. ' nxt' → logprob: -14.886258125305176
    10. 'nw' → logprob: -15.386258125305176

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021055489778519
    2. 'in' → logprob: -2.350210666656494
    3. ' ' → logprob: -13.725210189819336
    4. 'import' → logprob: -13.725210189819336
    5. '	in' → logprob: -14.225210189819336
    6. '   ' → logprob: -16.225210189819336
    7. 'w' → logprob: -16.350210189819336
    8. '[' → logprob: -16.350210189819336
    9. 'In' → logprob: -16.350210189819336
    10. '```' → logprob: -16.475210189819336

Token 460: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0010342379100620747
    2. ' graph' → logprob: -6.876034259796143
    3. '	graph' → logprob: -13.876033782958984
    4. '(graph' → logprob: -14.626033782958984
    5. '[' → logprob: -17.626033782958984
    6. '   ' → logprob: -17.751033782958984
    7. 'range' → logprob: -17.876033782958984
    8. 'graphql' → logprob: -18.001033782958984
    9. ' ' → logprob: -18.001033782958984
    10. '```' → logprob: -18.376033782958984

Token 461: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0206720617134124e-05
    2. 'u' → logprob: -11.50001049041748
    3. '[' → logprob: -18.375009536743164
    4. '(u' → logprob: -18.750009536743164
    5. '	u' → logprob: -19.000009536743164
    6. '<u' → logprob: -19.125009536743164
    7. ' u' → logprob: -20.000009536743164
    8. ' [' → logprob: -20.875009536743164
    9. '[
' → logprob: -20.875009536743164
    10. ',u' → logprob: -21.000009536743164

Token 462: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5569161772727966
    2. ']:' → logprob: -1.8069162368774414
    3. '):
' → logprob: -1.8069162368774414
    4. '):' → logprob: -2.8069162368774414
    5. ':' → logprob: -3.6819162368774414
    6. ':
' → logprob: -5.556916236877441
    7. ']' → logprob: -5.806916236877441
    8. '       ' → logprob: -6.431916236877441
    9. ']):' → logprob: -6.681916236877441
    10. ']):
' → logprob: -7.056916236877441

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004343645414337516
    2. ' if' → logprob: -8.125433921813965
    3. '	       ' → logprob: -9.500433921813965
    4. 'if' → logprob: -9.875433921813965
    5. '          ' → logprob: -13.250433921813965
    6. ',' → logprob: -13.250433921813965
    7. '		' → logprob: -13.500433921813965
    8. '    	   ' → logprob: -13.750433921813965
    9. '<|end|>' → logprob: -13.875433921813965
    10. '```' → logprob: -14.250433921813965

Token 464: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4816981554031372
    2. ' if' → logprob: -1.6066981554031372
    3. 'if' (adapté à ' if') → logprob: -2.2316980361938477
    4. '           ' → logprob: -2.6066980361938477
    5. '	           ' → logprob: -7.731698036193848
    6. '	if' → logprob: -9.981698036193848
    7. '	       ' → logprob: -10.481698036193848
    8. '   ' → logprob: -10.981698036193848
    9. '            ' → logprob: -11.231698036193848
    10. '		       ' → logprob: -11.731698036193848

Token 465: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01815415732562542
    2. ' not' → logprob: -4.018154144287109
    3. '!' → logprob: -12.89315414428711
    4. 'w' → logprob: -13.89315414428711
    5. 'visited' → logprob: -14.76815414428711
    6. '(not' → logprob: -15.01815414428711
    7. '	not' → logprob: -16.01815414428711
    8. '   ' → logprob: -18.01815414428711
    9. ' w' → logprob: -18.26815414428711
    10. '_not' → logprob: -18.51815414428711

Token 466: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0031777136027812958
    2. ' visited' → logprob: -5.753177642822266
    3. '
' → logprob: -19.128177642822266
    4. 'visible' → logprob: -20.628177642822266
    5. '   ' → logprob: -20.628177642822266
    6. ' ' → logprob: -21.128177642822266
    7. 'Visited' → logprob: -21.128177642822266
    8. ' ' → logprob: -21.253177642822266
    9. 'visit' → logprob: -22.378177642822266
    10. 'vis' → logprob: -23.128177642822266

Token 467: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -1.9361264946837764e-07
    2. 'w' → logprob: -15.75
    3. '[' → logprob: -17.25
    4. '<w' → logprob: -19.375
    5. '[u' → logprob: -19.625
    6. ' [' → logprob: -19.75
    7. '	w' → logprob: -20.125
    8. '(w' → logprob: -21.25
    9. '[
' → logprob: -22.375
    10. '[v' → logprob: -22.5

Token 468: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.154727041721344
    2. ':
' → logprob: -2.029726982116699
    3. ']:' → logprob: -4.779726982116699
    4. ':' → logprob: -6.404726982116699
    5. ']' → logprob: -6.904726982116699
    6. '):
' → logprob: -7.779726982116699
    7. '():
' → logprob: -8.2797269821167
    8. '           ' → logprob: -9.6547269821167
    9. ']:
' → logprob: -10.1547269821167
    10. '']:
' → logprob: -10.9047269821167

Token 469: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.8497312895488e-05
    2. '```' → logprob: -10.750068664550781
    3. 'visited' → logprob: -10.875068664550781
    4. '                   ' → logprob: -11.750068664550781
    5. ':
' → logprob: -11.875068664550781
    6. ' visited' → logprob: -12.375068664550781
    7. '           ' → logprob: -13.125068664550781
    8. '                       ' → logprob: -13.750068664550781
    9. ',' → logprob: -14.000068664550781
    10. ' =' → logprob: -14.125068664550781

Token 470: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.049825601279735565
    2. 'visited' (adapté à ' visited') → logprob: -3.049825668334961
    3. '                   ' → logprob: -6.799825668334961
    4. '               ' → logprob: -9.049825668334961
    5. '                       ' → logprob: -13.049825668334961
    6. 'Visited' → logprob: -13.549825668334961
    7. '                ' → logprob: -14.049825668334961
    8. '```' → logprob: -14.174825668334961
    9. '
' → logprob: -15.674825668334961
    10. '                    
' → logprob: -15.799825668334961

Token 471: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: 0.0
    2. '[' → logprob: -18.375
    3. 'w' → logprob: -19.0
    4. '=w' → logprob: -21.0
    5. '<w' → logprob: -21.125
    6. '	w' → logprob: -21.25
    7. ' [' → logprob: -22.625
    8. '[u' → logprob: -22.75
    9. '(w' → logprob: -22.875
    10. '[x' → logprob: -24.5

Token 472: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1933261901140213
    2. '[w' → logprob: -1.9433262348175049
    3. ']=' → logprob: -3.443326234817505
    4. '=' → logprob: -8.443325996398926
    5. '=True' → logprob: -8.693325996398926
    6. '[u' → logprob: -9.068325996398926
    7. '[' → logprob: -9.943325996398926
    8. ' ]' → logprob: -10.818325996398926
    9. ' =' → logprob: -11.443325996398926
    10. '=w' → logprob: -12.318325996398926

Token 473: ' =' (ID: 314)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.5983914732933044
    2. '=' → logprob: -0.8483914732933044
    3. ' =' → logprob: -4.348391532897949
    4. '=True' → logprob: -4.973391532897949
    5. '[' → logprob: -6.598391532897949
    6. ']' → logprob: -7.223391532897949
    7. ']=' → logprob: -8.97339153289795
    8. '=w' → logprob: -9.72339153289795
    9. 'True' → logprob: -10.84839153289795
    10. '[u' → logprob: -10.97339153289795

Token 474: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '=True' → logprob: -20.50020408630371
    4. '(True' → logprob: -21.00020408630371
    5. 'true' → logprob: -21.62520408630371
    6. '   ' → logprob: -22.75020408630371
    7. '
' → logprob: -22.87520408630371
    8. '           ' → logprob: -24.12520408630371
    9. '1' → logprob: -24.50020408630371
    10. '               ' → logprob: -24.62520408630371

Token 475: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011706985533237457
    2. ' q' → logprob: -7.876170635223389
    3. 'q' → logprob: -8.251171112060547
    4. ',' → logprob: -8.251171112060547
    5. '                   ' → logprob: -9.126171112060547
    6. ',q' → logprob: -10.126171112060547
    7. '              ' → logprob: -10.876171112060547
    8. '                ' → logprob: -10.876171112060547
    9. '<|end|>' → logprob: -11.251171112060547
    10. '			' → logprob: -11.251171112060547

Token 476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008741820929571986
    2. ' q' → logprob: -7.750874042510986
    3. 'q' → logprob: -8.625874519348145
    4. ',' → logprob: -9.125874519348145
    5. '                   ' → logprob: -10.000874519348145
    6. ',q' → logprob: -10.625874519348145
    7. '```' → logprob: -11.000874519348145
    8. '              ' → logprob: -11.125874519348145
    9. '                       ' → logprob: -11.375874519348145
    10. '                ' → logprob: -11.625874519348145

Token 477: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -2.165027217415627e-05
    2. ' q' → logprob: -10.750021934509277
    3. '               ' → logprob: -15.625021934509277
    4. '	q' → logprob: -18.12502098083496
    5. '                   ' → logprob: -19.37502098083496
    6. 'queue' → logprob: -19.50002098083496
    7. '_q' → logprob: -20.12502098083496
    8. '
' → logprob: -21.25002098083496
    9. '$q' → logprob: -22.25002098083496
    10. '```' → logprob: -22.25002098083496

Token 478: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -10.375059127807617
    3. 'append' → logprob: -10.875059127807617
    4. '.put' → logprob: -12.500059127807617
    5. '.extend' → logprob: -13.375059127807617
    6. '.push' → logprob: -13.750059127807617
    7. '.app' → logprob: -14.375059127807617
    8. '.p' → logprob: -14.875059127807617
    9. '.enqueue' → logprob: -15.000059127807617
    10. '.add' → logprob: -15.125059127807617

Token 479: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. 'w' → logprob: -16.6250057220459
    4. '((' → logprob: -17.8750057220459
    5. '(
' → logprob: -19.1250057220459
    6. ' (' → logprob: -19.8750057220459
    7. '(s' → logprob: -20.8750057220459
    8. '()' → logprob: -22.0000057220459
    9. '	w' → logprob: -22.0000057220459
    10. '(b' → logprob: -22.0000057220459

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.00000286102295
    3. '))' → logprob: -16.625001907348633
    4. ' )' → logprob: -16.625001907348633
    5. '               ' → logprob: -16.750001907348633
    6. '`)' → logprob: -18.000001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.250001907348633
    9. '）' → logprob: -18.375001907348633
    10. '())' → logprob: -18.750001907348633

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008977937512099743
    2. 'if' → logprob: -5.383977890014648
    3. '```' → logprob: -5.758977890014648
    4. '
' → logprob: -7.758977890014648
    5. ' if' → logprob: -8.258977890014648
    6. '<|end|>' → logprob: -8.508977890014648
    7. '    
' → logprob: -8.758977890014648
    8. 'next' → logprob: -10.508977890014648
    9. ' next' → logprob: -10.883977890014648
    10. '<|end|>' → logprob: -11.008977890014648

Token 482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2626529335975647
    2. '   ' → logprob: -1.51265287399292
    3. ' if' → logprob: -4.76265287399292
    4. 'return' → logprob: -6.76265287399292
    5. '```' → logprob: -7.01265287399292
    6. 'result' → logprob: -11.012653350830078
    7. 'for' → logprob: -11.012653350830078
    8. '    
' → logprob: -11.637653350830078
    9. ' return' → logprob: -11.762653350830078
    10. '
' → logprob: -12.262653350830078

Token 483: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22632934153079987
    2. 'not' → logprob: -1.6013293266296387
    3. ' color' → logprob: -8.226329803466797
    4. 'color' → logprob: -8.226329803466797
    5. 'visited' → logprob: -8.601329803466797
    6. '(not' → logprob: -9.101329803466797
    7. ' visited' → logprob: -9.476329803466797
    8. ' (' → logprob: -12.726329803466797
    9. ' dfs' → logprob: -13.226329803466797
    10. 'dfs' → logprob: -13.726329803466797

Token 484: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03804149478673935
    2. ' visited' → logprob: -3.288041591644287
    3. ' ' → logprob: -19.913042068481445
    4. 'visible' → logprob: -20.413042068481445
    5. 'Visited' → logprob: -21.038042068481445
    6. 'reachable' → logprob: -22.663042068481445
    7. ' visible' → logprob: -23.038042068481445
    8. ' ' → logprob: -23.163042068481445
    9. 'visit' → logprob: -23.413042068481445
    10. 'vis' → logprob: -23.413042068481445

Token 485: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. '[-' → logprob: -19.25
    4. '```' → logprob: -19.75
    5. '[out' → logprob: -19.75
    6. '(end' → logprob: -20.375
    7. 'end' → logprob: -20.625
    8. ' [' → logprob: -20.625
    9. '=end' → logprob: -21.625
    10. '\[' → logprob: -21.625

Token 486: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29067379236221313
    2. '):
' → logprob: -1.7906737327575684
    3. ':' → logprob: -2.6656737327575684
    4. '):' → logprob: -4.165673732757568
    5. '   ' → logprob: -8.665674209594727
    6. ')' → logprob: -9.790674209594727
    7. ']:
' → logprob: -9.915674209594727
    8. '():
' → logprob: -10.915674209594727
    9. ' or' → logprob: -11.915674209594727
    10. ']:' → logprob: -12.290674209594727

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011048642918467522
    2. ':' → logprob: -5.136048793792725
    3. ':
' → logprob: -5.386048793792725
    4. ' return' → logprob: -8.511048316955566
    5. ':return' → logprob: -9.136048316955566
    6. '   ' → logprob: -9.886048316955566
    7. 'return' → logprob: -10.011048316955566
    8. '():
' → logprob: -10.011048316955566
    9. '):
' → logprob: -10.261048316955566
    10. ' and' → logprob: -11.886048316955566

Token 488: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42598995566368103
    2. '       ' → logprob: -1.5509899854660034
    3. 'return' (adapté à ' return') → logprob: -2.175989866256714
    4. ' print' → logprob: -4.550990104675293
    5. ' return' → logprob: -4.925990104675293
    6. '   ' → logprob: -5.675990104675293
    7. '```' → logprob: -9.550990104675293
    8. '           ' → logprob: -11.050990104675293
    9. '
' → logprob: -11.800990104675293
    10. ' ' → logprob: -13.050990104675293

Token 489: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007957462221384048
    2. ' "' → logprob: -5.382957458496094
    3. ''' → logprob: -5.882957458496094
    4. '   ' → logprob: -8.132957458496094
    5. '"No' → logprob: -9.382957458496094
    6. ' ' → logprob: -9.632957458496094
    7. 'print' → logprob: -10.757957458496094
    8. ' '' → logprob: -10.882957458496094
    9. '
' → logprob: -11.257957458496094
    10. '"\' → logprob: -11.257957458496094

Token 490: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.038148101419210434
    2. '"' → logprob: -3.2881481647491455
    3. ''' → logprob: -9.288147926330566
    4. ' NG' → logprob: -11.913147926330566
    5. '   ' → logprob: -13.038147926330566
    6. 'ng' → logprob: -13.663147926330566
    7. 'NO' → logprob: -13.788147926330566
    8. '`' → logprob: -14.538147926330566
    9. '"No' → logprob: -14.538147926330566
    10. 'NA' → logprob: -14.913147926330566

Token 491: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008637497201561928
    2. '"
' → logprob: -4.758637428283691
    3. '"
' → logprob: -11.758637428283691
    4. '\n' → logprob: -12.008637428283691
    5. '")' → logprob: -12.133637428283691
    6. '"

' → logprob: -13.633637428283691
    7. ')"' → logprob: -14.633637428283691
    8. '```' → logprob: -14.758637428283691
    9. '"\' → logprob: -14.883637428283691
    10. '"N' → logprob: -15.383637428283691

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004751934204250574
    2. 'if' → logprob: -6.254752159118652
    3. ' if' → logprob: -6.254752159118652
    4. '    
' → logprob: -7.504752159118652
    5. '
' → logprob: -8.129752159118652
    6. '```' → logprob: -10.254752159118652
    7. 'cycle' → logprob: -12.379752159118652
    8. ' cycle' → logprob: -12.629752159118652
    9. '  
' → logprob: -13.004752159118652
    10. '        
' → logprob: -13.754752159118652

Token 493: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760500431060791
    2. 'if' → logprob: -0.8260500431060791
    3. ' if' → logprob: -9.3260498046875
    4. '```' → logprob: -11.2010498046875
    5. '    
' → logprob: -11.8260498046875
    6. 'cycle' → logprob: -15.4510498046875
    7. '
' → logprob: -16.3260498046875
    8. '``' → logprob: -16.8260498046875
    9. 'If' → logprob: -17.2010498046875
    10. 'is' → logprob: -17.3260498046875

Token 494: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.456358823925257e-05
    2. 'has' → logprob: -10.750064849853516
    3. 'cycle' → logprob: -10.750064849853516
    4. '#' → logprob: -12.125064849853516
    5. 'res' → logprob: -12.250064849853516
    6. '   ' → logprob: -12.875064849853516
    7. 'is' → logprob: -13.500064849853516
    8. '
' → logprob: -13.500064849853516
    9. 'can' → logprob: -13.500064849853516
    10. ' if' → logprob: -14.000064849853516

Token 495: ' cycles' (ID: 41478)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.292268842458725
    2. ' if' → logprob: -1.4172688722610474
    3. 'cycle' → logprob: -4.792268753051758
    4. ' cycle' → logprob: -6.542268753051758
    5. 'res' → logprob: -7.292268753051758
    6. '   ' → logprob: -8.917268753051758
    7. 'for' → logprob: -9.042268753051758
    8. 'result' → logprob: -9.042268753051758
    9. ' res' → logprob: -9.917268753051758
    10. 'cy' → logprob: -10.042268753051758

Token 496: ' reachable' (ID: 143580)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10033121705055237
    2. ' =' → logprob: -2.8503313064575195
    3. ' if' → logprob: -3.6003313064575195
    4. ' in' → logprob: -5.6003313064575195
    5. '
' → logprob: -5.9753313064575195
    6. 'result' → logprob: -6.7253313064575195
    7. 'if' → logprob: -7.6003313064575195
    8. ' result' → logprob: -7.9753313064575195
    9. '    
' → logprob: -8.10033130645752
    10. 'in' → logprob: -8.35033130645752

Token 497: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.466401070356369
    2. '=' → logprob: -1.5914011001586914
    3. ' =' → logprob: -1.9664011001586914
    4. '_from' → logprob: -3.8414011001586914
    5. '   ' → logprob: -5.216401100158691
    6. 'if' → logprob: -6.466401100158691
    7. ' from' → logprob: -8.341401100158691
    8. '(' → logprob: -9.216401100158691
    9. '_result' → logprob: -9.216401100158691
    10. 'result' → logprob: -9.591401100158691

Token 498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -18.87501335144043
    4. '```' → logprob: -19.00001335144043
    5. 'start' → logprob: -19.50001335144043
    6. '[' → logprob: -20.00001335144043
    7. '   ' → logprob: -20.12501335144043
    8. 'def' → logprob: -20.87501335144043
    9. '`' → logprob: -21.00001335144043
    10. 'range' → logprob: -22.00001335144043

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'start' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '
' → logprob: -18.75
    6. 'zero' → logprob: -19.0
    7. '   ' → logprob: -20.75
    8. '[' → logprob: -21.375
    9. '０' → logprob: -21.5
    10. '`' → logprob: -21.5

Token 500: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07726539671421051
    2. ' if' → logprob: -2.952265501022339
    3. 'if' → logprob: -3.952265501022339
    4. '
' → logprob: -5.95226526260376
    5. '```' → logprob: -8.702265739440918
    6. ' and' → logprob: -9.827265739440918
    7. '    
' → logprob: -10.452265739440918
    8. ':' → logprob: -11.702265739440918
    9. ':
' → logprob: -11.702265739440918
    10. 'and' → logprob: -11.702265739440918

Token 501: ' containing' (ID: 15683)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.55885910987854
    2. ' leading' → logprob: -1.68385910987854
    3. ' reaching' → logprob: -1.68385910987854
    4. 're' → logprob: -3.80885910987854
    5. 'ending' → logprob: -4.433858871459961
    6. 'reachable' → logprob: -4.558858871459961
    7. 'visited' → logprob: -5.433858871459961
    8. ' reachable' → logprob: -6.558858871459961
    9. '   ' → logprob: -6.683858871459961
    10. 'passing' → logprob: -7.058858871459961

Token 502: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00010425841173855588
    2. ' end' → logprob: -9.250103950500488
    3. 'the' → logprob: -12.000103950500488
    4. '=end' → logprob: -14.250103950500488
    5. '[end' → logprob: -14.500103950500488
    6. '(end' → logprob: -15.750103950500488
    7. ' ' → logprob: -15.750103950500488
    8. ' the' → logprob: -15.750103950500488
    9. '0' → logprob: -15.875103950500488
    10. ''end' → logprob: -16.000104904174805

Token 503: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04918641597032547
    2. 'if' → logprob: -3.1741864681243896
    3. ' if' → logprob: -5.1741862297058105
    4. '```' → logprob: -8.549186706542969
    5. 'cycle' → logprob: -9.049186706542969
    6. '    
' → logprob: -9.174186706542969
    7. '
' → logprob: -10.174186706542969
    8. 'return' → logprob: -10.674186706542969
    9. 'result' → logprob: -11.549186706542969
    10. ' cycle' → logprob: -11.924186706542969

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01656118780374527
    2. 'if' → logprob: -5.141561031341553
    3. ' if' → logprob: -5.516561031341553
    4. ' for' → logprob: -5.891561031341553
    5. 'for' → logprob: -6.141561031341553
    6. '```' → logprob: -7.016561031341553
    7. '
' → logprob: -7.516561031341553
    8. 'cycle' → logprob: -9.891561508178711
    9. '    
' → logprob: -10.016561508178711
    10. 'result' → logprob: -10.641561508178711

Token 505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004092235758434981
    2. '   ' → logprob: -8.750409126281738
    3. ' if' → logprob: -8.875409126281738
    4. 'return' → logprob: -9.250409126281738
    5. '```' → logprob: -11.250409126281738
    6. '    
' → logprob: -14.500409126281738
    7. 'cycle' → logprob: -14.625409126281738
    8. 'has' → logprob: -14.875409126281738
    9. 'res' → logprob: -15.250409126281738
    10. 'result' → logprob: -15.875409126281738

Token 506: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5759449005126953
    2. 'dfs' → logprob: -0.8259449005126953
    3. 'd' → logprob: -13.325944900512695
    4. '(d' → logprob: -13.825944900512695
    5. 'df' → logprob: -14.325944900512695
    6. ' ' → logprob: -14.325944900512695
    7. '   ' → logprob: -14.825944900512695
    8. ' DFS' → logprob: -15.575944900512695
    9. ' bfs' → logprob: -15.700944900512695
    10. '(' → logprob: -15.825944900512695

Token 507: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. ' (' → logprob: -11.25001335144043
    3. '(
' → logprob: -19.50001335144043
    4. ')(' → logprob: -19.87501335144043
    5. ')' → logprob: -20.00001335144043
    6. '((' → logprob: -20.62501335144043
    7. '```' → logprob: -20.62501335144043
    8. '（' → logprob: -20.87501335144043
    9. '[' → logprob: -21.12501335144043
    10. ' ' → logprob: -21.12501335144043

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '(' → logprob: -16.875
    4. ')' → logprob: -17.75
    5. '   ' → logprob: -21.625
    6. '[' → logprob: -22.875
    7. '۰' → logprob: -23.25
    8. '```' → logprob: -23.25
    9. '０' → logprob: -24.0
    10. '
' → logprob: -24.25

Token 509: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06676574796438217
    2. '):' → logprob: -2.816765785217285
    3. ' ):
' → logprob: -6.066765785217285
    4. '():
' → logprob: -6.441765785217285
    5. ' ):' → logprob: -7.566765785217285
    6. '()):
' → logprob: -8.566765785217285
    7. ')' → logprob: -9.316765785217285
    8. '():' → logprob: -10.066765785217285
    9. ':
' → logprob: -11.941765785217285
    10. ')==' → logprob: -12.066765785217285

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.9888433093437925e-05
    2. ' return' → logprob: -10.375040054321289
    3. 'return' → logprob: -11.750040054321289
    4. '   ' → logprob: -15.000040054321289
    5. '```' → logprob: -15.375040054321289
    6. '
' → logprob: -16.25004005432129
    7. '           ' → logprob: -17.12504005432129
    8. ',' → logprob: -17.75004005432129
    9. '	return' → logprob: -18.12504005432129
    10. '	' → logprob: -19.00004005432129

Token 511: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016324084252119064
    2. ' return' → logprob: -4.766324043273926
    3. '       ' → logprob: -5.016324043273926
    4. '   ' → logprob: -6.891324043273926
    5. '	return' → logprob: -10.766324043273926
    6. '           ' → logprob: -11.891324043273926
    7. '"' → logprob: -12.516324043273926
    8. '```' → logprob: -13.391324043273926
    9. ' ' → logprob: -14.391324043273926
    10. ':return' → logprob: -15.641324043273926

Token 512: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003644972573965788
    2. ' "' → logprob: -5.628644943237305
    3. ''' → logprob: -10.753644943237305
    4. ''"' → logprob: -11.128644943237305
    5. ' ' → logprob: -12.503644943237305
    6. '   ' → logprob: -13.128644943237305
    7. '"N' → logprob: -13.628644943237305
    8. '"No' → logprob: -14.003644943237305
    9. ' '' → logprob: -14.503644943237305
    10. '"I' → logprob: -15.878644943237305

Token 513: 'NG' (ID: 19236)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00012821101699955761
    2. ''' → logprob: -10.375127792358398
    3. '"N' → logprob: -10.625127792358398
    4. '"H' → logprob: -10.875127792358398
    5. 'NG' → logprob: -11.000127792358398
    6. '"S' → logprob: -11.750127792358398
    7. '"L' → logprob: -11.875127792358398
    8. '"M' → logprob: -12.250127792358398
    9. '"No' → logprob: -12.625127792358398
    10. '"D' → logprob: -12.625127792358398

Token 514: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09167415648698807
    2. ')' → logprob: -2.9666740894317627
    3. '")' → logprob: -3.8416740894317627
    4. '"' → logprob: -4.716674327850342
    5. '
' → logprob: -5.841674327850342
    6. '<|end|>' → logprob: -6.841674327850342
    7. '\n' → logprob: -7.591674327850342
    8. ')
' → logprob: -7.841674327850342
    9. '    
' → logprob: -8.216673851013184
    10. '<|end|>' → logprob: -8.466673851013184

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1995384395122528
    2. '
' → logprob: -1.9495384693145752
    3. '    
' → logprob: -3.324538469314575
    4. 'return' → logprob: -6.574538230895996
    5. '  
' → logprob: -8.074538230895996
    6. ' return' → logprob: -8.449538230895996
    7. '\n' → logprob: -8.824538230895996
    8. '```' → logprob: -8.824538230895996
    9. '        
' → logprob: -9.199538230895996
    10. ' 
' → logprob: -9.574538230895996

Token 516: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01866220124065876
    2. 'return' → logprob: -5.018661975860596
    3. 'dist' → logprob: -5.518661975860596
    4. 'dp' → logprob: -6.518661975860596
    5. '    
' → logprob: -6.643661975860596
    6. 'q' → logprob: -6.893661975860596
    7. 'distance' → logprob: -6.893661975860596
    8. '
' → logprob: -7.268661975860596
    9. 'count' → logprob: -7.518661975860596
    10. 'queue' → logprob: -7.643661975860596

Token 517: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39941954612731934
    2. '       ' → logprob: -1.5244195461273193
    3. ':' → logprob: -2.2744195461273193
    4. '   ' → logprob: -5.149419784545898
    5. ' return' → logprob: -6.649419784545898
    6. '
' → logprob: -7.399419784545898
    7. 'return' → logprob: -8.399419784545898
    8. ':return' → logprob: -8.399419784545898
    9. ' :
' → logprob: -8.649419784545898
    10. '	return' → logprob: -10.399419784545898

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16145426034927368
    2. ' return' → logprob: -2.161454200744629
    3. 'return' → logprob: -3.411454200744629
    4. '   ' → logprob: -7.536454200744629
    5. '"' → logprob: -7.911454200744629
    6. '```' → logprob: -11.161454200744629
    7. ' "' → logprob: -11.411454200744629
    8. '	return' → logprob: -11.411454200744629
    9. '           ' → logprob: -12.911454200744629
    10. '`' → logprob: -13.786454200744629

Token 519: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01389291975647211
    2. '   ' → logprob: -4.763893127441406
    3. ' return' → logprob: -5.638893127441406
    4. '       ' → logprob: -7.013893127441406
    5. '"' → logprob: -7.138893127441406
    6. '	return' → logprob: -12.513893127441406
    7. '```' → logprob: -12.638893127441406
    8. ' ' → logprob: -13.763893127441406
    9. '  ' → logprob: -13.888893127441406
    10. '           ' → logprob: -14.013893127441406

Token 520: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0023698240984231234
    2. '"B' → logprob: -6.7523698806762695
    3. '"M' → logprob: -7.3773698806762695
    4. ' "' → logprob: -9.12736988067627
    5. '"W' → logprob: -9.50236988067627
    6. '"P' → logprob: -9.62736988067627
    7. '"H' → logprob: -10.00236988067627
    8. '"G' → logprob: -10.12736988067627
    9. '"N' → logprob: -10.37736988067627
    10. '"D' → logprob: -10.50236988067627

Token 521: 'OK' (ID: 5175)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.043566323816776276
    2. 'OK' → logprob: -3.1685662269592285
    3. '"M' → logprob: -9.043566703796387
    4. '"A' → logprob: -9.418566703796387
    5. '"H' → logprob: -9.418566703796387
    6. '"S' → logprob: -9.668566703796387
    7. '""' → logprob: -9.918566703796387
    8. '"P' → logprob: -10.168566703796387
    9. ''' → logprob: -10.543566703796387
    10. '"D' → logprob: -11.168566703796387

Token 522: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 524: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04518476873636246
    2. '_data' → logprob: -3.420184850692749
    3. '_line' → logprob: -5.67018461227417
    4. '_' → logprob: -5.92018461227417
    5. '_lines' → logprob: -6.67018461227417
    6. ' =' → logprob: -6.67018461227417
    7. '(' → logprob: -6.92018461227417
    8. '=' → logprob: -8.045185089111328
    9. '().' → logprob: -8.045185089111328
    10. '_str' → logprob: -8.295185089111328

Token 525: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1867123544216156
    2. 'sys' → logprob: -1.936712384223938
    3. ' input' → logprob: -3.9367122650146484
    4. ' sys' → logprob: -5.061712265014648
    5. 'lambda' → logprob: -8.811712265014648
    6. 'int' → logprob: -9.311712265014648
    7. 'open' → logprob: -10.561712265014648
    8. '__' → logprob: -11.686712265014648
    9. ' lambda' → logprob: -11.936712265014648
    10. 'stdin' → logprob: -12.561712265014648

Token 526: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0014269021339714527
    2. '.readline' → logprob: -7.001426696777344
    3. '.' → logprob: -7.876426696777344
    4. '.stdout' → logprob: -9.876426696777344
    5. 'stdin' → logprob: -10.126426696777344
    6. '.argv' → logprob: -10.251426696777344
    7. '.std' → logprob: -12.376426696777344
    8. ' .' → logprob: -13.501426696777344
    9. '(stdin' → logprob: -14.251426696777344
    10. '.setdefault' → logprob: -14.376426696777344

Token 527: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0013847592053934932
    2. '.' → logprob: -6.751384735107422
    3. '.readlines' → logprob: -9.251384735107422
    4. '.read' → logprob: -9.501384735107422
    5. '.stdin' → logprob: -10.126384735107422
    6. ' readline' → logprob: -13.376384735107422
    7. '.buffer' → logprob: -14.376384735107422
    8. '.Read' → logprob: -15.126384735107422
    9. 'read' → logprob: -15.251384735107422
    10. '._' → logprob: -15.501384735107422

Token 528: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7316645383834839
    2. '<|end|>' → logprob: -0.9816645383834839
    3. 'for' → logprob: -3.1066646575927734
    4. '\n' → logprob: -3.6066646575927734
    5. '```' → logprob: -3.9816646575927734
    6. '<|end|>' → logprob: -4.481664657592773
    7. 'def' → logprob: -4.731664657592773
    8. '()' → logprob: -5.106664657592773
    9. 'n' → logprob: -5.106664657592773
    10. '(' → logprob: -5.356664657592773

Token 529: 'while' (ID: 7032)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4841763377189636
    2. 'def' → logprob: -1.6091763973236084
    3. 'T' → logprob: -2.4841763973236084
    4. 'n' → logprob: -2.9841763973236084
    5. 'if' → logprob: -3.1091763973236084
    6. 'max' → logprob: -6.609176158905029
    7. 'for' → logprob: -6.734176158905029
    8. 'q' → logprob: -7.359176158905029
    9. 'data' → logprob: -7.359176158905029
    10. 'print' → logprob: -7.609176158905029

Token 530: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03831413388252258
    2. 'True' → logprob: -3.2883141040802
    3. ' line' → logprob: -8.538313865661621
    4. '(True' → logprob: -9.663313865661621
    5. 'line' → logprob: -11.913313865661621
    6. '1' → logprob: -12.788313865661621
    7. ' ' → logprob: -13.288313865661621
    8. ' input' → logprob: -14.788313865661621
    9. '=True' → logprob: -14.788313865661621
    10. '   ' → logprob: -15.538313865661621

Token 531: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.44217318296432495
    2. '():' → logprob: -1.1921732425689697
    3. ':' → logprob: -3.6921732425689697
    4. '   ' → logprob: -4.442173004150391
    5. ':
' → logprob: -4.442173004150391
    6. ' line' → logprob: -6.567173004150391
    7. '()' → logprob: -7.192173004150391
    8. '(True' → logprob: -7.317173004150391
    9. '().' → logprob: -7.692173004150391
    10. '(' → logprob: -7.942173004150391

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0801105722784996
    2. ' line' → logprob: -2.580110549926758
    3. 'line' → logprob: -6.830110549926758
    4. '	line' → logprob: -9.455110549926758
    5. 'try' → logprob: -10.455110549926758
    6. '```' → logprob: -11.330110549926758
    7. ' try' → logprob: -11.455110549926758
    8. '(line' → logprob: -12.830110549926758
    9. '   ' → logprob: -12.955110549926758
    10. '    
' → logprob: -14.080110549926758

Token 533: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.25813642144203186
    2. ' line' → logprob: -1.5081363916397095
    3. 's' → logprob: -5.75813627243042
    4. '   ' → logprob: -6.25813627243042
    5. 'l' → logprob: -7.00813627243042
    6. ' s' → logprob: -9.508136749267578
    7. 'n' → logprob: -9.633136749267578
    8. ' l' → logprob: -11.383136749267578
    9. 'try' → logprob: -11.383136749267578
    10. 'N' → logprob: -12.008136749267578

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5256608724594116
    2. '=' → logprob: -0.9006608724594116
    3. '=line' → logprob: -6.025660991668701
    4. '.strip' → logprob: -9.275660514831543
    5. '.rstrip' → logprob: -12.400660514831543
    6. '(line' → logprob: -12.400660514831543
    7. '.readline' → logprob: -12.775660514831543
    8. '=input' → logprob: -13.275660514831543
    9. '   ' → logprob: -13.275660514831543
    10. '＝' → logprob: -13.400660514831543

Token 535: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06535826623439789
    2. ' input' → logprob: -2.8153581619262695
    3. 'sys' → logprob: -5.8153581619262695
    4. ' sys' → logprob: -7.8153581619262695
    5. 'import' → logprob: -18.065359115600586
    6. '(input' → logprob: -18.815359115600586
    7. '=input' → logprob: -19.190359115600586
    8. '(sys' → logprob: -19.565359115600586
    9. 'stdin' → logprob: -19.690359115600586
    10. '_input' → logprob: -19.690359115600586

Token 536: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1835630238056183
    2. '().' → logprob: -1.808562994003296
    3. '()
' → logprob: -5.808563232421875
    4. '.strip' → logprob: -7.558563232421875
    5. '.rstrip' → logprob: -8.933563232421875
    6. 'rstrip' → logprob: -10.183563232421875
    7. '.readline' → logprob: -10.683563232421875
    8. '=' → logprob: -10.683563232421875
    9. '()

' → logprob: -10.933563232421875
    10. 'strip' → logprob: -11.183563232421875

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06018483266234398
    2. ' if' → logprob: -3.1851847171783447
    3. 'if' → logprob: -5.310184955596924
    4. '.strip' → logprob: -5.810184955596924
    5. 'tokens' → logprob: -6.560184955596924
    6. '    
' → logprob: -6.560184955596924
    7. '
' → logprob: -6.935184955596924
    8. ',' → logprob: -6.935184955596924
    9. '.rstrip' → logprob: -7.060184955596924
    10. '<|end|>' → logprob: -7.435184955596924

Token 538: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3351326882839203
    2. 'if' (adapté à ' if') → logprob: -1.3351327180862427
    3. '   ' → logprob: -3.835132598876953
    4. '	if' → logprob: -10.335132598876953
    5. ' ' → logprob: -14.460132598876953
    6. '    ' → logprob: -14.835132598876953
    7. '  ' → logprob: -14.835132598876953
    8. '
' → logprob: -15.085132598876953
    9. 'If' → logprob: -15.460132598876953
    10. ' line' → logprob: -15.835132598876953

Token 539: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023630348965525627
    2. 'not' → logprob: -3.773630380630493
    3. ' line' → logprob: -8.023630142211914
    4. 'line' → logprob: -9.773630142211914
    5. ' ' → logprob: -16.648630142211914
    6. '#line' → logprob: -16.773630142211914
    7. '	not' → logprob: -17.148630142211914
    8. '=line' → logprob: -18.148630142211914
    9. '(not' → logprob: -18.273630142211914
    10. '(line' → logprob: -18.398630142211914

Token 540: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005233763717114925
    2. ' line' → logprob: -5.2552337646484375
    3. '	line' → logprob: -21.130233764648438
    4. '(line' → logprob: -21.630233764648438
    5. '#line' → logprob: -21.755233764648438
    6. '=line' → logprob: -23.130233764648438
    7. '_line' → logprob: -23.755233764648438
    8. '[line' → logprob: -24.130233764648438
    9. 'Line' → logprob: -25.380233764648438
    10. 'l' → logprob: -26.130233764648438

Token 541: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05096070468425751
    2. ':
' → logprob: -3.9259607791900635
    3. ':' → logprob: -4.300960540771484
    4. '.' → logprob: -4.425960540771484
    5. '   ' → logprob: -6.300960540771484
    6. '.rstrip' → logprob: -6.550960540771484
    7. '.startswith' → logprob: -7.800960540771484
    8. '.readline' → logprob: -8.175960540771484
    9. 'strip' → logprob: -8.800960540771484
    10. ':return' → logprob: -9.675960540771484

Token 542: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03808945417404175
    2. '       ' → logprob: -3.2880895137786865
    3. '	break' → logprob: -11.413089752197266
    4. ' break' → logprob: -11.663089752197266
    5. ':' → logprob: -11.788089752197266
    6. '   ' → logprob: -11.913089752197266
    7. ' ' → logprob: -12.038089752197266
    8. ',' → logprob: -13.663089752197266
    9. '     ' → logprob: -13.913089752197266
    10. '	' → logprob: -14.038089752197266

Token 543: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2849659025669098
    2. ' break' → logprob: -2.034965991973877
    3. '   ' → logprob: -2.534965991973877
    4. '       ' → logprob: -3.659965991973877
    5. '	break' → logprob: -4.409965991973877
    6. ' ' → logprob: -9.409965515136719
    7. '_break' → logprob: -11.159965515136719
    8. '           ' → logprob: -12.034965515136719
    9. '```' → logprob: -12.784965515136719
    10. '   ' → logprob: -12.784965515136719

Token 544: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011139309965074062
    2. 'tokens' → logprob: -5.386139392852783
    3. '    
' → logprob: -5.511139392852783
    4. ' parts' → logprob: -6.761139392852783
    5. 'parts' → logprob: -8.136138916015625
    6. 'max' → logprob: -8.761138916015625
    7. ' tokens' → logprob: -9.011138916015625
    8. 'data' → logprob: -9.386138916015625
    9. '```' → logprob: -9.636138916015625
    10. 'n' → logprob: -9.636138916015625

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035095500061288476
    2. '    
' → logprob: -8.625350952148438
    3. 'tokens' → logprob: -9.125350952148438
    4. ' parts' → logprob: -10.750350952148438
    5. 'a' → logprob: -11.750350952148438
    6. 'parts' → logprob: -12.125350952148438
    7. 'n' → logprob: -12.250350952148438
    8. '
' → logprob: -12.625350952148438
    9. 'max' → logprob: -12.750350952148438
    10. '```' → logprob: -13.250350952148438

Token 546: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.14073745906352997
    2. 'm' → logprob: -2.640737533569336
    3. 'a' → logprob: -4.140737533569336
    4. 'l' → logprob: -4.390737533569336
    5. 'n' → logprob: -4.515737533569336
    6. '   ' → logprob: -5.015737533569336
    7. 'L' → logprob: -5.515737533569336
    8. 'r' → logprob: -5.890737533569336
    9. 'M' → logprob: -6.515737533569336
    10. 'parts' → logprob: -6.515737533569336

Token 547: '_roll' (ID: 121924)
  Prédit: '_roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_roll' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -11.375012397766113
    3. '_move' → logprob: -15.375012397766113
    4. 'Roll' → logprob: -15.750012397766113
    5. 'roll' → logprob: -16.375011444091797
    6. '_max' → logprob: -16.625011444091797
    7. '_RO' → logprob: -17.250011444091797
    8. '_ro' → logprob: -17.375011444091797
    9. '_turn' → logprob: -17.875011444091797
    10. '_r' → logprob: -18.375011444091797

Token 548: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01828327216207981
    2. ',n' → logprob: -4.143283367156982
    3. ',max' → logprob: -6.893283367156982
    4. ',num' → logprob: -8.018282890319824
    5. ' ,' → logprob: -8.143282890319824
    6. ',int' → logprob: -8.143282890319824
    7. '=' → logprob: -9.393282890319824
    8. ',line' → logprob: -10.143282890319824
    9. ' =' → logprob: -10.268282890319824
    10. ',k' → logprob: -10.893282890319824

Token 549: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038042180240154266
    2. ' int' → logprob: -3.2880420684814453
    3. '[int' → logprob: -14.538042068481445
    4. '(int' → logprob: -15.663042068481445
    5. '=int' → logprob: -16.663042068481445
    6. '<int' → logprob: -17.163042068481445
    7. ' ' → logprob: -17.663042068481445
    8. '   ' → logprob: -17.788042068481445
    9. 'max' → logprob: -18.038042068481445
    10. '	int' → logprob: -18.413042068481445

Token 550: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. 'line' → logprob: -14.750001907348633
    4. '=line' → logprob: -16.500001907348633
    5. ' line' → logprob: -17.000001907348633
    6. '[line' → logprob: -17.625001907348633
    7. '#line' → logprob: -17.625001907348633
    8. '	line' → logprob: -19.375001907348633
    9. ' (' → logprob: -19.625001907348633
    10. ',line' → logprob: -20.000001907348633

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010447999462485313
    2. '.strip' → logprob: -4.635447978973389
    3. '.rstrip' → logprob: -7.635447978973389
    4. ')
' → logprob: -9.385448455810547
    5. '.readline' → logprob: -9.635448455810547
    6. '())' → logprob: -10.260448455810547
    7. '.split' → logprob: -11.260448455810547
    8. 'rstrip' → logprob: -12.760448455810547
    9. ')\' → logprob: -13.510448455810547
    10. ')#' → logprob: -13.760448455810547

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5672099590301514
    2. ' line' → logprob: -1.1922099590301514
    3. 'line' → logprob: -2.3172099590301514
    4. 'n' → logprob: -4.3172101974487305
    5. ' n' → logprob: -4.3172101974487305
    6. '	line' → logprob: -6.1922101974487305
    7. '<|end|>' → logprob: -7.1922101974487305
    8. '[line' → logprob: -8.31721019744873
    9. ',line' → logprob: -8.56721019744873
    10. ' next' → logprob: -8.81721019744873

Token 553: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0016218608943745494
    2. ' n' → logprob: -7.126621723175049
    3. '   ' → logprob: -7.376621723175049
    4. 'line' → logprob: -8.626622200012207
    5. ' line' → logprob: -11.876622200012207
    6. 'if' (adapté à ' if') → logprob: -13.001622200012207
    7. '	n' → logprob: -13.376622200012207
    8. ' if' → logprob: -14.251622200012207
    9. '_n' → logprob: -15.501622200012207
    10. 'next' → logprob: -15.626622200012207

Token 554: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0110511165112257
    2. ' max' → logprob: -4.511051177978516
    3. ' not' → logprob: -13.261051177978516
    4. 'not' → logprob: -13.386051177978516
    5. '(max' → logprob: -18.761051177978516
    6. '	max' → logprob: -18.886051177978516
    7. ' ' → logprob: -19.136051177978516
    8. '=max' → logprob: -20.136051177978516
    9. '   ' → logprob: -20.386051177978516
    10. '0' → logprob: -20.511051177978516

Token 555: '_roll' (ID: 121924)
  Prédit: '_roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_roll' → logprob: -3.173704271830502e-06
    2. 'roll' → logprob: -13.50000286102295
    3. '==' → logprob: -14.37500286102295
    4. '-roll' → logprob: -15.00000286102295
    5. 'Roll' → logprob: -15.62500286102295
    6. '_ro' → logprob: -16.250003814697266
    7. '_' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '=' → logprob: -16.750003814697266
    10. '_RO' → logprob: -16.750003814697266

Token 556: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0620296411216259
    2. '==' → logprob: -2.8120296001434326
    3. ' <=' → logprob: -10.062029838562012
    4. '<=' → logprob: -11.687029838562012
    5. ')==' → logprob: -12.812029838562012
    6. ' <' → logprob: -13.437029838562012
    7. '()==' → logprob: -13.437029838562012
    8. ' ' → logprob: -13.562029838562012
    9. '```' → logprob: -14.312029838562012
    10. '===' → logprob: -14.312029838562012

Token 557: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '-' → logprob: -18.5000057220459
    4. '```' → logprob: -20.2500057220459
    5. '00' → logprob: -21.0000057220459
    6. '=' → logprob: -21.1250057220459
    7. '０' → logprob: -21.3750057220459
    8. '_' → logprob: -22.1250057220459
    9. ' -' → logprob: -22.2500057220459
    10. '1' → logprob: -22.6250057220459

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.625001907348633
    4. '```' → logprob: -20.250001907348633
    5. '０' → logprob: -20.250001907348633
    6. ' -' → logprob: -21.125001907348633
    7. '00' → logprob: -21.375001907348633
    8. '=' → logprob: -22.000001907348633
    9. '_' → logprob: -22.250001907348633
    10. '۰' → logprob: -22.500001907348633

Token 559: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1030935049057007
    2. ':
' → logprob: -1.1030935049057007
    3. ':' → logprob: -1.4780935049057007
    4. '       ' → logprob: -2.2280936241149902
    5. '	break' → logprob: -8.353093147277832
    6. '):
' → logprob: -9.853093147277832
    7. '     ' → logprob: -10.228093147277832
    8. '():
' → logprob: -10.478093147277832
    9. ',' → logprob: -10.603093147277832
    10. '    ' → logprob: -10.853093147277832

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07003357261419296
    2. '   ' → logprob: -2.695033550262451
    3. '	break' → logprob: -10.32003402709961
    4. ' ' → logprob: -11.07003402709961
    5. '<|end|>' → logprob: -11.19503402709961
    6. '     ' → logprob: -11.69503402709961
    7. ' break' → logprob: -12.32003402709961
    8. '	   ' → logprob: -12.69503402709961
    9. '   ' → logprob: -12.94503402709961
    10. '           ' → logprob: -13.07003402709961

Token 561: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.043520670384168625
    2. ' break' → logprob: -3.29352068901062
    3. '   ' → logprob: -5.293520450592041
    4. '	break' → logprob: -8.0435209274292
    5. '       ' → logprob: -9.0435209274292
    6. ' ' → logprob: -14.9185209274292
    7. '           ' → logprob: -15.6685209274292
    8. '  ' → logprob: -16.543519973754883
    9. '_break' → logprob: -16.543519973754883
    10. '     ' → logprob: -16.668519973754883

Token 562: '
' (ID: 198)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0676944255828857
    2. 'n' → logprob: -1.1926944255828857
    3. '   ' → logprob: -1.3176944255828857
    4. '```' → logprob: -2.9426944255828857
    5. ' line' → logprob: -4.442694664001465
    6. '	line' → logprob: -4.942694664001465
    7. '<|end|>' → logprob: -5.567694664001465
    8. '    
' → logprob: -5.692694664001465
    9. ' n' → logprob: -6.317694664001465
    10. '#line' → logprob: -6.692694664001465

Token 563: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23096641898155212
    2. '   ' → logprob: -1.6059664487838745
    3. '    
' → logprob: -5.730966567993164
    4. '```' → logprob: -6.730966567993164
    5. 'line' → logprob: -7.605966567993164
    6. ' n' → logprob: -8.980966567993164
    7. '	n' → logprob: -9.230966567993164
    8. '<|end|>' → logprob: -9.230966567993164
    9. '[n' → logprob: -9.605966567993164
    10. 'moves' → logprob: -9.855966567993164

Token 564: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0035202486906200647
    2. '   ' → logprob: -5.7535200119018555
    3. ' n' → logprob: -8.253520011901855
    4. 'line' → logprob: -10.003520011901855
    5. '    
' → logprob: -11.003520011901855
    6. '	n' → logprob: -11.378520011901855
    7. '```' → logprob: -12.378520011901855
    8. 'params' → logprob: -14.253520011901855
    9. ',n' → logprob: -14.378520011901855
    10. '_n' → logprob: -14.378520011901855

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2020694464445114
    2. '=' → logprob: -1.7020694017410278
    3. '=line' → logprob: -7.827069282531738
    4. ',' → logprob: -8.577069282531738
    5. '=int' → logprob: -10.077069282531738
    6. '   ' → logprob: -10.702069282531738
    7. ',line' → logprob: -13.077069282531738
    8. '    ' → logprob: -14.827069282531738
    9. '	' → logprob: -15.327069282531738
    10. 'line' → logprob: -15.327069282531738

Token 566: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012987985974177718
    2. ' int' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.000129699707031
    4. '	int' → logprob: -15.875129699707031
    5. '[int' → logprob: -15.875129699707031
    6. '(int' → logprob: -18.50012969970703
    7. '=int' → logprob: -18.50012969970703
    8. '<int' → logprob: -18.87512969970703
    9. '  ' → logprob: -19.12512969970703
    10. '    ' → logprob: -19.87512969970703

Token 567: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018153218552470207
    2. 'input' → logprob: -4.018153190612793
    3. '(sys' → logprob: -12.893153190612793
    4. 'sys' → logprob: -14.518153190612793
    5. ' input' → logprob: -16.26815414428711
    6. '=input' → logprob: -16.39315414428711
    7. '(' → logprob: -17.26815414428711
    8. 'line' → logprob: -17.39315414428711
    9. '()' → logprob: -18.14315414428711
    10. '(line' → logprob: -18.26815414428711

Token 568: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.061960287392139435
    2. ')' → logprob: -3.311960220336914
    3. '()' → logprob: -3.811960220336914
    4. '())
' → logprob: -6.561960220336914
    5. '().' → logprob: -9.311960220336914
    6. '()
' → logprob: -11.436960220336914
    7. ')
' → logprob: -11.561960220336914
    8. ' ())' → logprob: -12.936960220336914
    9. '())

' → logprob: -13.436960220336914
    10. '   ' → logprob: -14.436960220336914

Token 569: '   ' (ID: 271)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0038975838106125593
    2. '   ' → logprob: -5.628897666931152
    3. 'm' → logprob: -8.753897666931152
    4. ' moves' → logprob: -9.253897666931152
    5. '```' → logprob: -10.378897666931152
    6. '_moves' → logprob: -12.128897666931152
    7. 'mov' → logprob: -13.253897666931152
    8. '	m' → logprob: -13.253897666931152
    9. '.moves' → logprob: -13.253897666931152
    10. '    
' → logprob: -14.253897666931152

Token 570: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' (adapté à ' moves') → logprob: -5.049755782238208e-05
    2. '   ' → logprob: -10.25005054473877
    3. ' moves' → logprob: -11.62505054473877
    4. 'm' → logprob: -12.12505054473877
    5. '```' → logprob: -15.25005054473877
    6. '_moves' → logprob: -15.50005054473877
    7. 'mov' → logprob: -15.87505054473877
    8. '.moves' → logprob: -16.750049591064453
    9. 'move' → logprob: -17.375049591064453
    10. '	m' → logprob: -18.125049591064453

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143644511699677
    2. '=' → logprob: -1.7014364004135132
    3. '=[]' → logprob: -11.451436042785645
    4. ' =[' → logprob: -12.076436042785645
    5. '[:]' → logprob: -13.451436042785645
    6. '   ' → logprob: -13.701436042785645
    7. '	' → logprob: -13.701436042785645
    8. '＝' → logprob: -14.201436042785645
    9. '[]' → logprob: -14.326436042785645
    10. '=[' → logprob: -14.451436042785645

Token 572: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03172159940004349
    2. '[list' → logprob: -3.781721591949463
    3. ' list' → logprob: -4.781721591949463
    4. '[' → logprob: -9.781722068786621
    5. ' [' → logprob: -13.906722068786621
    6. '[int' → logprob: -14.781722068786621
    7. '[List' → logprob: -14.906722068786621
    8. '=list' → logprob: -15.531722068786621
    9. '	list' → logprob: -16.031721115112305
    10. '(list' → logprob: -16.281721115112305

Token 573: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3856492842023727e-06
    2. ' int' → logprob: -13.750000953674316
    3. '0' → logprob: -15.250000953674316
    4. '(int' → logprob: -18.250001907348633
    5. ']int' → logprob: -18.250001907348633
    6. '[int' → logprob: -18.625001907348633
    7. '	int' → logprob: -18.875001907348633
    8. ':int' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.125001907348633
    10. ',int' → logprob: -20.000001907348633

Token 574: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001929228543303907
    2. 'input' → logprob: -6.25192928314209
    3. ' input' → logprob: -15.12692928314209
    4. '(' → logprob: -16.001928329467773
    5. '=input' → logprob: -16.376928329467773
    6. '(sys' → logprob: -17.001928329467773
    7. ',input' → logprob: -17.251928329467773
    8. '(x' → logprob: -17.376928329467773
    9. 'sys' → logprob: -18.001928329467773
    10. '(line' → logprob: -18.001928329467773

Token 575: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31453317403793335
    2. '()' → logprob: -1.3145332336425781
    3. ')' → logprob: -6.939533233642578
    4. '()]' → logprob: -8.689533233642578
    5. '().' → logprob: -9.314533233642578
    6. '())
' → logprob: -10.689533233642578
    7. '()
' → logprob: -11.689533233642578
    8. ' ())' → logprob: -12.189533233642578
    9. ' ()' → logprob: -12.689533233642578
    10. '()),' → logprob: -14.314533233642578

Token 576: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3190976083278656
    2. 'for' → logprob: -1.319097638130188
    3. '()' → logprob: -5.444097518920898
    4. '	for' → logprob: -7.069097518920898
    5. ')' → logprob: -7.569097518920898
    6. '   ' → logprob: -9.069097518920898
    7. ']' → logprob: -11.444097518920898
    8. '()]' → logprob: -14.319097518920898
    9. '    ' → logprob: -14.569097518920898
    10. '(' → logprob: -14.569097518920898

Token 577: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005204470828175545
    2. '_range' → logprob: -6.130204677581787
    3. ' in' → logprob: -6.630204677581787
    4. '_i' → logprob: -7.380204677581787
    5. ' range' → logprob: -7.630204677581787
    6. ' _' → logprob: -8.630204200744629
    7. '_in' → logprob: -8.755204200744629
    8. '_n' → logprob: -9.130204200744629
    9. 'range' → logprob: -10.380204200744629
    10. '_tokens' → logprob: -10.380204200744629

Token 578: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019869250245392323
    2. ' range' → logprob: -6.251986980438232
    3. 'in' → logprob: -9.876986503601074
    4. '_' → logprob: -12.501986503601074
    5. ' in' → logprob: -12.751986503601074
    6. '	range' → logprob: -15.626986503601074
    7. '_range' → logprob: -15.876986503601074
    8. '(range' → logprob: -17.75198745727539
    9. 'ange' → logprob: -18.50198745727539
    10. '
' → logprob: -19.00198745727539

Token 579: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -19.000017166137695
    4. '(range' → logprob: -19.500017166137695
    5. '
' → logprob: -21.500017166137695
    6. '   ' → logprob: -22.375017166137695
    7. '```' → logprob: -22.625017166137695
    8. ' ' → logprob: -23.500017166137695
    9. 'rang' → logprob: -23.750017166137695
    10. '.range' → logprob: -24.125017166137695

Token 580: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.0629870858974755e-05
    2. '(n' → logprob: -9.75006103515625
    3. ' n' → logprob: -13.00006103515625
    4. '	n' → logprob: -17.12506103515625
    5. ')n' → logprob: -17.75006103515625
    6. '(' → logprob: -20.37506103515625
    7. ',n' → logprob: -20.37506103515625
    8. '[n' → logprob: -20.50006103515625
    9. '_n' → logprob: -20.62506103515625
    10. '<n' → logprob: -21.25006103515625

Token 581: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1271444857120514
    2. ']' → logprob: -2.1271445751190186
    3. ')' → logprob: -8.502144813537598
    4. ']
' → logprob: -12.127144813537598
    5. '()]' → logprob: -12.252144813537598
    6. ')]
' → logprob: -14.127144813537598
    7. '])]' → logprob: -14.377144813537598
    8. '])' → logprob: -14.752144813537598
    9. ' ]' → logprob: -14.752144813537598
    10. '   ' → logprob: -15.377144813537598

Token 582: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43001917004585266
    2. 'result' → logprob: -1.0550191402435303
    3. '   ' → logprob: -7.555019378662109
    4. ' result' → logprob: -8.55501937866211
    5. 'res' → logprob: -8.93001937866211
    6. '```' → logprob: -8.93001937866211
    7. ' print' → logprob: -9.05501937866211
    8. 'output' → logprob: -9.43001937866211
    9. '
' → logprob: -9.80501937866211
    10. 'answer' → logprob: -10.93001937866211

Token 583: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006726383697241545
    2. 'result' → logprob: -5.006726264953613
    3. ' print' → logprob: -12.006726264953613
    4. 'res' → logprob: -12.506726264953613
    5. 'answer' → logprob: -15.006726264953613
    6. '```' → logprob: -15.131726264953613
    7. ' result' → logprob: -15.256726264953613
    8. '   ' → logprob: -15.256726264953613
    9. 'output' → logprob: -16.50672721862793
    10. 'ans' → logprob: -17.13172721862793

Token 584: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00047416388406418264
    2. '(' → logprob: -7.750473976135254
    3. '("' → logprob: -10.375473976135254
    4. 'solve' → logprob: -12.125473976135254
    5. '('' → logprob: -12.250473976135254
    6. '(f' → logprob: -13.875473976135254
    7. '(solution' → logprob: -14.750473976135254
    8. '()' → logprob: -15.000473976135254
    9. '(sol' → logprob: -15.125473976135254
    10. ' solve' → logprob: -17.37547492980957

Token 585: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.375001907348633
    3. 'solve' → logprob: -15.375001907348633
    4. 'OLVE' → logprob: -16.125001907348633
    5. 'olver' → logprob: -16.375001907348633
    6. 'olv' → logprob: -16.750001907348633
    7. '(s' → logprob: -17.125001907348633
    8. 'ove' → logprob: -17.125001907348633
    9. 'ol' → logprob: -17.125001907348633
    10. 'erve' → logprob: -17.625001907348633

Token 586: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -9.007317567011341e-05
    2. '(' → logprob: -9.375089645385742
    3. ')' → logprob: -12.875089645385742
    4. ' (' → logprob: -13.750089645385742
    5. 'max' → logprob: -14.250089645385742
    6. ')(' → logprob: -14.625089645385742
    7. ',max' → logprob: -15.625089645385742
    8. ' max' → logprob: -16.000089645385742
    9. '(
' → logprob: -16.375089645385742
    10. '[max' → logprob: -18.000089645385742

Token 587: '_roll' (ID: 121924)
  Prédit: '_roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_roll' → logprob: -1.5451681974809617e-05
    2. 'roll' → logprob: -11.125015258789062
    3. 'Roll' → logprob: -15.375015258789062
    4. '-roll' → logprob: -15.625015258789062
    5. 'oll' → logprob: -16.625015258789062
    6. 'max' → logprob: -17.500015258789062
    7. '롤' → logprob: -17.625015258789062
    8. ',_' → logprob: -18.125015258789062
    9. ',' → logprob: -18.375015258789062
    10. ' \xeb\xa1' → logprob: -18.625015258789062

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02979157119989395
    2. ',n' → logprob: -3.5297915935516357
    3. ' ,' → logprob: -10.404791831970215
    4. '(n' → logprob: -11.654791831970215
    5. '(' → logprob: -13.904791831970215
    6. ',
' → logprob: -15.279791831970215
    7. ',max' → logprob: -15.279791831970215
    8. ',m' → logprob: -15.404791831970215
    9. ')' → logprob: -15.779791831970215
    10. '   ' → logprob: -16.4047908782959

Token 589: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861468818038702
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -16.133615493774414
    4. ')n' → logprob: -17.133615493774414
    5. '   ' → logprob: -18.883615493774414
    6. ')' → logprob: -19.258615493774414
    7. '(n' → logprob: -19.758615493774414
    8. '
' → logprob: -19.758615493774414
    9. ',n' → logprob: -20.133615493774414
    10. '_n' → logprob: -20.133615493774414

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005539863486774266
    2. ',m' → logprob: -7.500554084777832
    3. ' ,' → logprob: -13.875554084777832
    4. '   ' → logprob: -18.250553131103516
    5. 'm' → logprob: -18.625553131103516
    6. ',
' → logprob: -19.000553131103516
    7. 'moves' → logprob: -19.875553131103516
    8. '```' → logprob: -21.125553131103516
    9. '),' → logprob: -21.250553131103516
    10. '[' → logprob: -21.875553131103516

Token 591: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0019293478690087795
    2. ' moves' → logprob: -6.25192928314209
    3. 'm' → logprob: -14.62692928314209
    4. 'move' → logprob: -15.62692928314209
    5. 'mov' → logprob: -16.251930236816406
    6. '   ' → logprob: -17.751930236816406
    7. '.moves' → logprob: -18.501930236816406
    8. '_moves' → logprob: -19.626930236816406
    9. ' ' → logprob: -19.876930236816406
    10. 'Moves' → logprob: -20.626930236816406

Token 592: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009149204124696553
    2. ')' → logprob: -7.000915050506592
    3. '))
' → logprob: -13.375914573669434
    4. '()))' → logprob: -13.875914573669434
    5. ' ))' → logprob: -14.750914573669434
    6. ')))' → logprob: -15.000914573669434
    7. '   ' → logprob: -16.12591552734375
    8. '()' → logprob: -17.25091552734375
    9. '),' → logprob: -17.37591552734375
    10. '(' → logprob: -17.50091552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 590
Tokens correctement prédits (1ère position, stricte): 234
Tokens correctement prédits (1ère position, avec adaptation): 265
Tokens correctement prédits (top 10): 513
Précision stricte (1ère position): 39.66%
Précision adaptée (1ère position): 44.92%
Précision (top 10): 86.95%
================================================================================
