================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Protocol

class Comparable(Protocol):
    def __lt__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...

class Number(Comparable):
    def __init__(self, value: int):
        self.value = value

    def __lt__(self, other: "Number") -> bool:
        return self.value < other.value
    
    def __gt__(self, other: "Number") -> bool:
        return self.value > other.value

    def __repr__(self):
        return str(self.value)

class SortStrategy(ABC):
    @abstractmethod
    def sort(self, items: List[Comparable]) -> List[Comparable]:
        pass

class DescendingSortStrategy(SortStrategy):
    def sort(self, items: List[Comparable]) -> List[Comparable]:
        # Highly abstracted sorting using built-in for simplicity
        return sorted(items, reverse=True)

class InputReader(ABC):
    @abstractmethod
    def read(self) -> List[Number]:
        pass

class ConsoleInputReader(InputReader):
    def read(self) -> List[Number]:
        raw_input = input()
        numbers = [Number(int(x)) for x in raw_input.strip().split()]
        if len(numbers) != 5:
            raise ValueError("Exactly five numbers are required.")
        return numbers

class OutputWriter(ABC):
    @abstractmethod
    def write(self, items: List[Number]) -> None:
        pass

class ConsoleOutputWriter(OutputWriter):
    def write(self, items: List[Number]) -> None:
        print(" ".join(str(n) for n in items))

class SortingContext:
    def __init__(self, strategy: SortStrategy):
        self.strategy = strategy

    def execute_sort(self, items: List[Comparable]) -> List[Comparable]:
        return self.strategy.sort(items)

def main():
    input_reader: InputReader = ConsoleInputReader()
    numbers = input_reader.read()

    sorter = SortingContext(DescendingSortStrategy())
    sorted_numbers = sorter.execute_sort(numbers)

    output_writer = ConsoleOutputWriter()
    output_writer.write(sorted_numbers)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.42944446206092834
    2. 'ABC' → logprob: -1.054444432258606
    3. 'AB' → logprob: -7.804444313049316
    4. ' A' → logprob: -9.179444313049316
    5. 'ABCDE' → logprob: -9.429444313049316
    6. 'import' → logprob: -9.929444313049316
    7. 'abstract' → logprob: -10.554444313049316
    8. 'A' → logprob: -10.679444313049316
    9. 'abc' → logprob: -10.929444313049316
    10. 'ABS' → logprob: -12.054444313049316

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00011629798245849088
    2. 'classmethod' → logprob: -9.250116348266602
    3. 'staticmethod' → logprob: -11.875116348266602
    4. '_method' → logprob: -11.875116348266602
    5. 'abstract' → logprob: -12.375116348266602
    6. 'meth' → logprob: -14.625116348266602
    7. 'm' → logprob: -14.750116348266602
    8. 'base' → logprob: -15.250116348266602
    9. 'ethod' → logprob: -15.250116348266602
    10. ' method' → logprob: -15.500116348266602

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20573963224887848
    2. '```' → logprob: -2.205739736557007
    3. '\n' → logprob: -3.705739736557007
    4. '

' → logprob: -4.205739498138428
    5. '' → logprob: -4.955739498138428
    6. 'class' → logprob: -5.205739498138428
    7. '
' → logprob: -5.205739498138428
    8. '<|end|>' → logprob: -5.205739498138428
    9. '\' → logprob: -5.330739498138428
    10. '``' → logprob: -6.455739498138428

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3400079905986786
    2. '

' → logprob: -1.465008020401001
    3. 'class' → logprob: -3.465008020401001
    4. '```' → logprob: -4.215007781982422
    5. '
' → logprob: -5.840007781982422
    6. '' → logprob: -6.090007781982422
    7. ' 

' → logprob: -6.840007781982422
    8. '\n' → logprob: -6.965007781982422
    9. '


' → logprob: -7.090007781982422
    10. ' class' → logprob: -7.215007781982422

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13474808633327484
    2. 'import' → logprob: -2.1347479820251465
    3. '.' → logprob: -5.2597479820251465
    4. '<|end|>' → logprob: -7.0097479820251465
    5. '.import' → logprob: -7.8847479820251465
    6. '[' → logprob: -8.009748458862305
    7. '```' → logprob: -8.384748458862305
    8. ' as' → logprob: -8.634748458862305
    9. '_import' → logprob: -9.509748458862305
    10. '.space' → logprob: -9.509748458862305

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35420724749565125
    2. 'Any' → logprob: -1.4792072772979736
    3. ' List' → logprob: -3.8542072772979736
    4. ' Union' → logprob: -4.1042070388793945
    5. ' Protocol' → logprob: -4.3542070388793945
    6. ' Callable' → logprob: -4.7292070388793945
    7. 'List' → logprob: -5.8542070388793945
    8. 'Protocol' → logprob: -6.3542070388793945
    9. ' Optional' → logprob: -6.3542070388793945
    10. 'Union' → logprob: -6.4792070388793945

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Protocol' (ID: 41914)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4093403816223145
    2. ' Union' → logprob: -1.5343403816223145
    3. ' Any' → logprob: -1.7843403816223145
    4. ' Callable' → logprob: -2.0343403816223145
    5. 'Any' → logprob: -2.4093403816223145
    6. 'Optional' → logprob: -2.5343403816223145
    7. ' Tuple' → logprob: -4.1593403816223145
    8. 'Union' → logprob: -4.2843403816223145
    9. 'Callable' → logprob: -4.5343403816223145
    10. 'Tuple' → logprob: -4.7843403816223145

Token 14: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7307037115097046
    2. 'class' → logprob: -0.9807037115097046
    3. '

' → logprob: -1.9807037115097046
    4. '```' → logprob: -5.480703830718994
    5. ' class' → logprob: -7.605703830718994
    6. '
' → logprob: -8.855703353881836
    7. '\n' → logprob: -9.105703353881836
    8. '``' → logprob: -9.105703353881836
    9. '


' → logprob: -9.480703353881836
    10. '<class' → logprob: -9.730703353881836

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.030219130218029022
    2. '
' → logprob: -3.530219078063965
    3. '```' → logprob: -7.905219078063965
    4. '

' → logprob: -10.530219078063965
    5. '
' → logprob: -10.655219078063965
    6. '``' → logprob: -11.280219078063965
    7. 'c' → logprob: -11.655219078063965
    8. '\n' → logprob: -12.030219078063965
    9. ' class' → logprob: -12.280219078063965
    10. '`
' → logprob: -12.655219078063965

Token 16: ' Comparable' (ID: 100634)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35545262694358826
    2. ' Abstract' → logprob: -2.355452537536621
    3. ' My' → logprob: -3.355452537536621
    4. ' Serializer' → logprob: -3.355452537536621
    5. ' ABC' → logprob: -3.980452537536621
    6. ' Base' → logprob: -4.230452537536621
    7. ' Serializable' → logprob: -4.855452537536621
    8. ' User' → logprob: -4.855452537536621
    9. ' Space' → logprob: -4.855452537536621
    10. ' Actor' → logprob: -5.105452537536621

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02671021968126297
    2. ':' → logprob: -3.651710271835327
    3. '[' → logprob: -7.901710033416748
    4. '(Abstract' → logprob: -10.776710510253906
    5. '():' → logprob: -11.776710510253906
    6. ' :' → logprob: -12.901710510253906
    7. '):' → logprob: -13.401710510253906
    8. '(object' → logprob: -13.901710510253906
    9. ':**' → logprob: -13.901710510253906
    10. '[Any' → logprob: -14.151710510253906

Token 18: 'Protocol' (ID: 19824)
  Prédit: 'Protocol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Protocol' → logprob: -0.08917903900146484
    2. ' Protocol' → logprob: -2.964179039001465
    3. ')' → logprob: -3.714179039001465
    4. ''' → logprob: -5.339179039001465
    5. 'object' → logprob: -6.589179039001465
    6. 'ABC' → logprob: -7.089179039001465
    7. 'protocol' → logprob: -7.839179039001465
    8. '):
' → logprob: -8.589179039001465
    9. '):' → logprob: -8.589179039001465
    10. ' )' → logprob: -8.714179039001465

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13168948888778687
    2. '[' → logprob: -2.1316895484924316
    3. '[T' → logprob: -5.756689548492432
    4. '[int' → logprob: -7.256689548492432
    5. '):
' → logprob: -8.381689071655273
    6. '[str' → logprob: -8.631689071655273
    7. '['' → logprob: -8.756689071655273
    8. '[]):' → logprob: -9.506689071655273
    9. '[Any' → logprob: -9.631689071655273
    10. ')' → logprob: -9.756689071655273

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04637197032570839
    2. '   ' → logprob: -3.7963719367980957
    3. ':
' → logprob: -4.296371936798096
    4. '):' → logprob: -5.921371936798096
    5. '[' → logprob: -6.796371936798096
    6. 'def' → logprob: -7.046371936798096
    7. '[T' → logprob: -7.171371936798096
    8. ')' → logprob: -7.421371936798096
    9. '```' → logprob: -7.546371936798096
    10. '
' → logprob: -7.546371936798096

Token 21: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4858829081058502
    2. 'def' (adapté à ' def') → logprob: -0.9858828783035278
    3. '   ' → logprob: -4.485882759094238
    4. '    
' → logprob: -8.485882759094238
    5. '    ' → logprob: -9.360882759094238
    6. '_def' → logprob: -10.485882759094238
    7. '	def' → logprob: -10.485882759094238
    8. '
' → logprob: -10.610882759094238
    9. ':def' → logprob: -10.735882759094238
    10. '```' → logprob: -11.110882759094238

Token 22: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.8014439940452576
    2. ' def' → logprob: -1.5514440536499023
    3. ' compare' → logprob: -1.9264440536499023
    4. ' ' → logprob: -1.9264440536499023
    5. 'def' → logprob: -5.051444053649902
    6. ' ' → logprob: -5.051444053649902
    7. '(' → logprob: -5.051444053649902
    8. '_' → logprob: -5.551444053649902
    9. '_compare' → logprob: -5.676444053649902
    10. ' Comparable' → logprob: -5.676444053649902

Token 23: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.030002359300851822
    2. 'eq' → logprob: -3.5300023555755615
    3. 'le' → logprob: -9.03000259399414
    4. 'ge' → logprob: -9.53000259399414
    5. 'gt' → logprob: -9.78000259399414
    6. 'call' → logprob: -13.40500259399414
    7. 'init' → logprob: -13.78000259399414
    8. 'sub' → logprob: -15.65500259399414
    9. 'getitem' → logprob: -16.28000259399414
    10. 'cmp' → logprob: -16.78000259399414

Token 24: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1006237119436264
    2. '__' → logprob: -2.350623607635498
    3. '__('' → logprob: -8.350624084472656
    4. '__((' → logprob: -9.100624084472656
    5. '___' → logprob: -10.475624084472656
    6. '__(
' → logprob: -10.600624084472656
    7. '__("' → logprob: -11.600624084472656
    8. '__.__' → logprob: -12.850624084472656
    9. '__(*' → logprob: -13.600624084472656
    10. '____' → logprob: -13.975624084472656

Token 25: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028708502650260925
    2. ''s' → logprob: -5.877871036529541
    3. '"' → logprob: -10.627870559692383
    4. ' self' → logprob: -10.752870559692383
    5. ''' → logprob: -12.502870559692383
    6. ' ' → logprob: -12.627870559692383
    7. 'Self' → logprob: -12.752870559692383
    8. '   ' → logprob: -13.002870559692383
    9. '__' → logprob: -13.502870559692383
    10. '```' → logprob: -14.252870559692383

Token 26: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7062762975692749
    2. ',' → logprob: -0.8312762975692749
    3. ' self' → logprob: -3.4562764167785645
    4. ')' → logprob: -3.9562764167785645
    5. ' ,' → logprob: -4.3312764167785645
    6. ' ' → logprob: -5.5812764167785645
    7. ' )' → logprob: -7.0812764167785645
    8. '(self' → logprob: -7.2062764167785645
    9. 'other' → logprob: -7.2062764167785645
    10. ',self' → logprob: -7.5812764167785645

Token 27: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40328720211982727
    2. 'other' → logprob: -1.1532871723175049
    3. ' self' → logprob: -4.403287410736084
    4. ' other' → logprob: -5.528287410736084
    5. '__' → logprob: -10.028286933898926
    6. ' ' → logprob: -11.278286933898926
    7. 'Other' → logprob: -12.903286933898926
    8. '	self' → logprob: -13.278286933898926
    9. '___' → logprob: -13.278286933898926
    10. ')' → logprob: -13.403286933898926

Token 28: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02589637041091919
    2. ')' → logprob: -3.9008963108062744
    3. '):' → logprob: -5.2758965492248535
    4. ' :' → logprob: -8.650896072387695
    5. ' )' → logprob: -10.525896072387695
    6. ' ):' → logprob: -11.650896072387695
    7. '   ' → logprob: -13.025896072387695
    8. ':int' → logprob: -13.275896072387695
    9. ':)' → logprob: -13.525896072387695
    10. '):
' → logprob: -13.650896072387695

Token 29: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029626553878188133
    2. ')' → logprob: -4.029626369476318
    3. '):' → logprob: -4.529626369476318
    4. ' :' → logprob: -7.779626369476318
    5. '   ' → logprob: -9.654626846313477
    6. ')->' → logprob: -10.029626846313477
    7. '->' → logprob: -10.404626846313477
    8. ' ->' → logprob: -10.904626846313477
    9. '       ' → logprob: -11.404626846313477
    10. ':void' → logprob: -11.654626846313477

Token 30: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3134007751941681
    2. 'bool' → logprob: -1.3134007453918457
    3. '...' → logprob: -10.313401222229004
    4. ' '' → logprob: -10.813401222229004
    5. ' object' → logprob: -11.063401222229004
    6. ' ' → logprob: -11.063401222229004
    7. '<bool' → logprob: -11.438401222229004
    8. 'object' → logprob: -11.688401222229004
    9. '  ' → logprob: -11.688401222229004
    10. '	bool' → logprob: -11.813401222229004

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003534582501742989
    2. '<|end|>' → logprob: -8.625353813171387
    3. ':return' → logprob: -9.125353813171387
    4. ':
' → logprob: -10.750353813171387
    5. ' :' → logprob: -10.875353813171387
    6. '):' → logprob: -12.000353813171387
    7. '   ' → logprob: -12.250353813171387
    8. ':def' → logprob: -12.500353813171387
    9. ':**' → logprob: -13.000353813171387
    10. '<|end|>' → logprob: -13.250353813171387

Token 32: ' ...
' (ID: 12646)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33529120683670044
    2. '<|end|>' → logprob: -1.5852911472320557
    3. '   ' → logprob: -3.7102911472320557
    4. 'class' → logprob: -3.8352911472320557
    5. ':' → logprob: -4.585291385650635
    6. '

' → logprob: -4.710291385650635
    7. '```' → logprob: -5.710291385650635
    8. '    
' → logprob: -5.960291385650635
    9. '<|end|>' → logprob: -6.460291385650635
    10. ' 
' → logprob: -6.460291385650635

Token 34: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4287877678871155
    2. '__' → logprob: -1.0537877082824707
    3. '   ' → logprob: -10.178788185119629
    4. '_' → logprob: -11.178788185119629
    5. ' def' → logprob: -11.553788185119629
    6. '>' → logprob: -12.428788185119629
    7. ' ' → logprob: -12.678788185119629
    8. 'def' → logprob: -12.803788185119629
    9. 'gt' → logprob: -12.928788185119629
    10. ' ' → logprob: -13.303788185119629

Token 36: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.5768285393714905
    2. 'eq' → logprob: -0.9518285393714905
    3. 'le' → logprob: -2.9518284797668457
    4. 'ge' → logprob: -10.951828956604004
    5. 'lt' → logprob: -11.701828956604004
    6. 'hash' → logprob: -12.326828956604004
    7. 'repr' → logprob: -12.701828956604004
    8. 'getitem' → logprob: -12.701828956604004
    9. '```' → logprob: -13.576828956604004
    10. 'str' → logprob: -14.576828956604004

Token 37: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38689184188842773
    2. '__' → logprob: -1.1368918418884277
    3. '__(
' → logprob: -11.511892318725586
    4. '__('' → logprob: -12.636892318725586
    5. '___' → logprob: -13.136892318725586
    6. '__((' → logprob: -13.261892318725586
    7. '_' → logprob: -13.761892318725586
    8. '__[' → logprob: -14.136892318725586
    9. '_(' → logprob: -14.761892318725586
    10. '(' → logprob: -14.761892318725586

Token 38: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3874046206474304
    2. 'other' → logprob: -1.1374046802520752
    3. ' self' → logprob: -8.262404441833496
    4. ' other' → logprob: -8.637404441833496
    5. '<|end|>' → logprob: -9.762404441833496
    6. 'othe' → logprob: -11.137404441833496
    7. ' ' → logprob: -12.137404441833496
    8. 'the' → logprob: -12.512404441833496
    9. 'Other' → logprob: -12.637404441833496
    10. '
' → logprob: -12.887404441833496

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5649200677871704
    2. '(self' → logprob: -1.0649200677871704
    3. ')' → logprob: -3.189919948577881
    4. '(' → logprob: -3.814919948577881
    5. ' (' → logprob: -5.189919948577881
    6. '<|end|>' → logprob: -5.189919948577881
    7. 'self' → logprob: -5.314919948577881
    8. ' ,' → logprob: -5.689919948577881
    9. ' ' → logprob: -6.689919948577881
    10. '__(' → logprob: -6.814919948577881

Token 40: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.14292028546333313
    2. ' other' → logprob: -2.0179202556610107
    3. 'self' → logprob: -8.64292049407959
    4. 'o' → logprob: -11.01792049407959
    5. '<|end|>' → logprob: -11.14292049407959
    6. 'Other' → logprob: -11.39292049407959
    7. ' ' → logprob: -11.51792049407959
    8. ' self' → logprob: -12.01792049407959
    9. 'othe' → logprob: -12.76792049407959
    10. '(other' → logprob: -13.14292049407959

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.052377623040229e-05
    2. ' )' → logprob: -9.625070571899414
    3. '`)' → logprob: -13.000070571899414
    4. '   ' → logprob: -15.000070571899414
    5. ' ' → logprob: -15.000070571899414
    6. ')->' → logprob: -15.125070571899414
    7. '):' → logprob: -15.750070571899414
    8. '')' → logprob: -16.250070571899414
    9. '):
' → logprob: -16.250070571899414
    10. ')object' → logprob: -16.375070571899414

Token 42: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5549736022949219
    2. ')' → logprob: -1.0549736022949219
    3. '->' → logprob: -2.804973602294922
    4. ')->' → logprob: -4.179973602294922
    5. ' ' → logprob: -6.679973602294922
    6. ' )' → logprob: -8.054973602294922
    7. '   ' → logprob: -8.804973602294922
    8. ' )->' → logprob: -9.929973602294922
    9. '>' → logprob: -10.179973602294922
    10. '       ' → logprob: -10.679973602294922

Token 43: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10026328265666962
    2. ' bool' → logprob: -2.3502633571624756
    3. ' ' → logprob: -10.100263595581055
    4. '<bool' → logprob: -11.975263595581055
    5. '	bool' → logprob: -12.975263595581055
    6. '  ' → logprob: -13.225263595581055
    7. 'b' → logprob: -13.475263595581055
    8. ' ' → logprob: -14.475263595581055
    9. '```' → logprob: -14.475263595581055
    10. '   ' → logprob: -14.600263595581055

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.721228368813172e-05
    2. ' :' → logprob: -9.375086784362793
    3. ':
' → logprob: -13.875086784362793
    4. '):' → logprob: -14.500086784362793
    5. ':return' → logprob: -15.125086784362793
    6. '   ' → logprob: -15.250086784362793
    7. ' ' → logprob: -16.12508773803711
    8. '```' → logprob: -17.12508773803711
    9. '<|end|>' → logprob: -17.12508773803711
    10. '...' → logprob: -17.50008773803711

Token 45: ' ...

' (ID: 5231)
  Prédit: ' ...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ...' → logprob: -0.029778262600302696
    2. '...' → logprob: -3.654778242111206
    3. ' True' → logprob: -6.279778480529785
    4. ' ' → logprob: -6.779778480529785
    5. ' bool' → logprob: -7.904778480529785
    6. 'True' → logprob: -10.154778480529785
    7. ' ...
' → logprob: -11.279778480529785
    8. 'bool' → logprob: -11.654778480529785
    9. ':' → logprob: -12.029778480529785
    10. ' ' → logprob: -12.279778480529785

Token 46: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.43330448865890503
    2. '
' → logprob: -1.0583045482635498
    3. '

' → logprob: -6.058304309844971
    4. 'c' → logprob: -6.808304309844971
    5. '```' → logprob: -7.683304309844971
    6. ':' → logprob: -8.558304786682129
    7. '' → logprob: -9.058304786682129
    8. ' class' → logprob: -9.433304786682129
    9. '
' → logprob: -9.683304786682129
    10. ' 
' → logprob: -9.808304786682129

Token 47: ' Number' (ID: 9184)
  Prédit: ' Abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Abstract' → logprob: -1.5816829204559326
    2. ' Stack' → logprob: -1.5816829204559326
    3. ' Binary' → logprob: -1.9566829204559326
    4. ' Sort' → logprob: -2.3316829204559326
    5. ' Sorted' → logprob: -2.8316829204559326
    6. ' Ordered' → logprob: -3.3316829204559326
    7. ' Container' → logprob: -3.3316829204559326
    8. ' Shape' → logprob: -3.5816829204559326
    9. ' Number' → logprob: -3.8316829204559326
    10. ' Value' → logprob: -4.206683158874512

Token 48: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35016703605651855
    2. ':' → logprob: -1.2251670360565186
    3. '):' → logprob: -7.975167274475098
    4. '(int' → logprob: -8.100167274475098
    5. ':
' → logprob: -8.350167274475098
    6. '():' → logprob: -8.350167274475098
    7. 'Comparer' → logprob: -8.975167274475098
    8. 's' → logprob: -9.225167274475098
    9. '(Abstract' → logprob: -9.225167274475098
    10. 'ed' → logprob: -9.850167274475098

Token 49: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -0.4119473993778229
    2. 'ABC' → logprob: -1.5369473695755005
    3. 'int' → logprob: -3.28694748878479
    4. ' Comparable' → logprob: -3.28694748878479
    5. ')' → logprob: -3.53694748878479
    6. '):' → logprob: -4.661947250366211
    7. ' ABC' → logprob: -5.661947250366211
    8. ' int' → logprob: -6.786947250366211
    9. ' ' → logprob: -7.286947250366211
    10. ',' → logprob: -7.661947250366211

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006695830728858709
    2. ',' → logprob: -5.631695747375488
    3. ')' → logprob: -5.881695747375488
    4. '[int' → logprob: -8.381695747375488
    5. '[' → logprob: -10.506695747375488
    6. ':' → logprob: -10.756695747375488
    7. '):
' → logprob: -11.631695747375488
    8. ' ):' → logprob: -12.006695747375488
    9. ',int' → logprob: -13.381695747375488
    10. ' ,' → logprob: -13.881695747375488

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5871022939682007
    2. '   ' → logprob: -0.8371022939682007
    3. ':
' → logprob: -5.58710241317749
    4. 'int' → logprob: -6.33710241317749
    5. '(' → logprob: -6.71210241317749
    6. ')' → logprob: -6.83710241317749
    7. ',' → logprob: -7.21210241317749
    8. '):' → logprob: -7.46210241317749
    9. ' :' → logprob: -8.087101936340332
    10. ':int' → logprob: -8.212101936340332

Token 52: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6997711062431335
    2. ' def' → logprob: -0.9497711062431335
    3. 'def' (adapté à ' def') → logprob: -2.1997711658477783
    4. '    ' → logprob: -5.574770927429199
    5. '    
' → logprob: -6.949770927429199
    6. '  ' → logprob: -8.1997709274292
    7. ' ' → logprob: -8.3247709274292
    8. ' 
' → logprob: -9.4497709274292
    9. ' pass' → logprob: -9.8247709274292
    10. '
' → logprob: -10.0747709274292

Token 53: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04271618276834488
    2. ' __' → logprob: -3.7927162647247314
    3. '_' → logprob: -4.792716026306152
    4. ' value' → logprob: -5.417716026306152
    5. '  ' → logprob: -6.417716026306152
    6. ' def' → logprob: -6.667716026306152
    7. ' _' → logprob: -6.917716026306152
    8. ' ```' → logprob: -7.292716026306152
    9. 'value' → logprob: -7.417716026306152
    10. ')' → logprob: -8.167716026306152

Token 54: 'init' (ID: 3287)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.03808647021651268
    2. 'init' → logprob: -3.288086414337158
    3. 'gt' → logprob: -10.413086891174316
    4. 'int' → logprob: -12.038086891174316
    5. 'eq' → logprob: -12.663086891174316
    6. 'add' → logprob: -13.038086891174316
    7. '_lt' → logprob: -13.288086891174316
    8. ' lt' → logprob: -14.288086891174316
    9. '```' → logprob: -14.788086891174316
    10. '<' → logprob: -15.538086891174316

Token 55: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21573390066623688
    2. '(self' → logprob: -2.4657340049743652
    3. '__(' → logprob: -2.7157340049743652
    4. '<|end|>' → logprob: -3.9657340049743652
    5. ' (' → logprob: -4.215734004974365
    6. '__(
' → logprob: -5.965734004974365
    7. 'self' → logprob: -6.340734004974365
    8. '__' → logprob: -6.465734004974365
    9. '<|end|>' → logprob: -7.215734004974365
    10. '_' → logprob: -7.590734004974365

Token 56: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3663626305060461e-05
    2. ' self' → logprob: -11.25001335144043
    3. 'value' → logprob: -14.25001335144043
    4. '(self' → logprob: -19.25001335144043
    5. '	self' → logprob: -19.75001335144043
    6. ' ' → logprob: -20.12501335144043
    7. '0' → logprob: -20.25001335144043
    8. '_self' → logprob: -21.12501335144043
    9. '
' → logprob: -21.37501335144043
    10. '   ' → logprob: -21.62501335144043

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029065461829304695
    2. ' ,' → logprob: -3.6540653705596924
    3. 'self' → logprob: -6.6540656089782715
    4. ' ' → logprob: -7.2790656089782715
    5. '<|end|>' → logprob: -8.404065132141113
    6. ' self' → logprob: -8.529065132141113
    7. 'value' → logprob: -9.029065132141113
    8. ')' → logprob: -9.029065132141113
    9. ' value' → logprob: -10.404065132141113
    10. '<|end|>' → logprob: -10.779065132141113

Token 58: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.06229715421795845
    2. 'value' → logprob: -2.8122971057891846
    3. ' self' → logprob: -8.437296867370605
    4. 'self' → logprob: -9.312296867370605
    5. ' ' → logprob: -10.812296867370605
    6. ' ' → logprob: -14.437296867370605
    7. ' val' → logprob: -14.937296867370605
    8. '	value' → logprob: -14.937296867370605
    9. '   ' → logprob: -15.312296867370605
    10. '"value' → logprob: -15.312296867370605

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002694416616577655
    2. '):' → logprob: -8.750269889831543
    3. ':int' → logprob: -9.375269889831543
    4. ')' → logprob: -11.000269889831543
    5. ' :' → logprob: -12.250269889831543
    6. '=' → logprob: -13.000269889831543
    7. ' ):' → logprob: -13.875269889831543
    8. '<|end|>' → logprob: -14.875269889831543
    9. ' )' → logprob: -15.125269889831543
    10. '<|end|>' → logprob: -15.500269889831543

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07949507981538773
    2. 'int' → logprob: -2.5794951915740967
    3. ' float' → logprob: -7.454494953155518
    4. 'float' → logprob: -11.204495429992676
    5. ' ' → logprob: -11.954495429992676
    6. '	int' → logprob: -12.704495429992676
    7. ' ' → logprob: -13.454495429992676
    8. '[int' → logprob: -14.204495429992676
    9. '=int' → logprob: -15.204495429992676
    10. '<int' → logprob: -15.704495429992676

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03829072043299675
    2. ')' → logprob: -3.2882907390594482
    3. ':' → logprob: -8.663290977478027
    4. '):
' → logprob: -10.413290977478027
    5. ' ):' → logprob: -10.663290977478027
    6. '   ' → logprob: -11.663290977478027
    7. '<|end|>' → logprob: -12.413290977478027
    8. '<|end|>' → logprob: -13.163290977478027
    9. ' ' → logprob: -13.413290977478027
    10. ',' → logprob: -13.538290977478027

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6040084362030029
    2. ' ' → logprob: -1.354008436203003
    3. '    ' → logprob: -2.104008436203003
    4. ' )' → logprob: -3.729008436203003
    5. ')' → logprob: -3.854008436203003
    6. '   ' → logprob: -3.979008436203003
    7. '        ' → logprob: -5.854008674621582
    8. '     ' → logprob: -6.729008674621582
    9. '<|end|>' → logprob: -7.104008674621582
    10. '  ' → logprob: -7.354008674621582

Token 63: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1274251490831375
    2. 'self' (adapté à ' self') → logprob: -2.127425193786621
    3. '        ' → logprob: -8.002425193786621
    4. ' ' → logprob: -9.377425193786621
    5. '       ' → logprob: -10.127425193786621
    6. ' ' → logprob: -10.377425193786621
    7. ' value' → logprob: -12.502425193786621
    8. 'value' → logprob: -13.502425193786621
    9. '    ' → logprob: -15.127425193786621
    10. '_self' → logprob: -15.627425193786621

Token 64: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09117773920297623
    2. '.value' → logprob: -2.4661777019500732
    3. 'value' → logprob: -6.716177940368652
    4. ' ' → logprob: -7.216177940368652
    5. ' value' → logprob: -8.466177940368652
    6. ' .' → logprob: -10.966177940368652
    7. '<|end|>' → logprob: -11.091177940368652
    8. '_value' → logprob: -11.841177940368652
    9. '._' → logprob: -12.216177940368652
    10. '.values' → logprob: -12.341177940368652

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760910511016846
    2. '=' → logprob: -0.8260910511016846
    3. ' ' → logprob: -8.951090812683105
    4. '<|end|>' → logprob: -11.076090812683105
    5. ':' → logprob: -13.326090812683105
    6. ')' → logprob: -13.701090812683105
    7. ' =
' → logprob: -13.826090812683105
    8. ' ==' → logprob: -14.701090812683105
    9. '<|end|>' → logprob: -15.076090812683105
    10. '_' → logprob: -15.076090812683105

Token 66: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.22962504625320435
    2. 'value' → logprob: -1.6046249866485596
    3. ' ' → logprob: -5.479625225067139
    4. ' ' → logprob: -11.35462474822998
    5. '"value' → logprob: -11.85462474822998
    6. '	value' → logprob: -12.60462474822998
    7. ')value' → logprob: -12.72962474822998
    8. '(value' → logprob: -13.22962474822998
    9. ''value' → logprob: -13.22962474822998
    10. '    ' → logprob: -13.97962474822998

Token 67: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20996856689453125
    2. '<|end|>' → logprob: -1.8349685668945312
    3. ' 
' → logprob: -3.9599685668945312
    4. '   ' → logprob: -5.334968566894531
    5. '    
' → logprob: -6.084968566894531
    6. '<|end|>' → logprob: -6.709968566894531
    7. ' ' → logprob: -6.834968566894531
    8. '

' → logprob: -7.834968566894531
    9. '  
' → logprob: -8.334968566894531
    10. 'def' → logprob: -8.459968566894531

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25725874304771423
    2. '   ' → logprob: -1.8822587728500366
    3. '<|end|>' → logprob: -3.382258653640747
    4. '    
' → logprob: -4.257258892059326
    5. ' 
' → logprob: -4.257258892059326
    6. 'def' → logprob: -5.382258892059326
    7. ' ' → logprob: -6.132258892059326
    8. '  
' → logprob: -6.507258892059326
    9. ' def' → logprob: -7.007258892059326
    10. ')' → logprob: -7.507258892059326

Token 69: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001884015218820423
    2. '   ' → logprob: -9.125188827514648
    3. ' def' → logprob: -9.500188827514648
    4. '@' → logprob: -12.500188827514648
    5. '@property' → logprob: -15.125188827514648
    6. ' ' → logprob: -16.00018882751465
    7. '    
' → logprob: -16.12518882751465
    8. '```' → logprob: -16.75018882751465
    9. '	def' → logprob: -16.75018882751465
    10. 'd' → logprob: -16.87518882751465

Token 70: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.017466871067881584
    2. ' <' → logprob: -4.392467021942139
    3. '__' → logprob: -5.517467021942139
    4. ' ' → logprob: -7.392467021942139
    5. '<' → logprob: -9.26746654510498
    6. ' ' → logprob: -9.39246654510498
    7. ' _' → logprob: -9.39246654510498
    8. '_' → logprob: -11.51746654510498
    9. ' ___' → logprob: -11.51746654510498
    10. ' `' → logprob: -12.01746654510498

Token 71: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -9.088346359931165e-07
    2. 'gt' → logprob: -14.000000953674316
    3. '_lt' → logprob: -17.125
    4. 'l' → logprob: -17.125
    5. '<' → logprob: -17.75
    6. ' lt' → logprob: -18.375
    7. 'ltk' → logprob: -19.75
    8. 'ltf' → logprob: -19.75
    9. 'eq' → logprob: -21.25
    10. 'll' → logprob: -21.25

Token 72: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.13250496983528137
    2. '__' → logprob: -2.132504940032959
    3. '_' → logprob: -5.257504940032959
    4. '_(' → logprob: -8.632505416870117
    5. '__('' → logprob: -9.632505416870117
    6. '__((' → logprob: -10.007505416870117
    7. '__(
' → logprob: -10.382505416870117
    8. '__("' → logprob: -11.257505416870117
    9. '___' → logprob: -11.632505416870117
    10. '(' → logprob: -12.007505416870117

Token 73: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5766569972038269
    2. 'other' → logprob: -0.8266569972038269
    3. ' other' → logprob: -7.826656818389893
    4. ' self' → logprob: -8.07665729522705
    5. ' ' → logprob: -12.32665729522705
    6. '   ' → logprob: -14.32665729522705
    7. 'o' → logprob: -14.57665729522705
    8. 'othe' → logprob: -14.70165729522705
    9. 'Other' → logprob: -14.70165729522705
    10. 'oth' → logprob: -15.45165729522705

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02748269774019718
    2. '__(' → logprob: -4.902482509613037
    3. 'self' → logprob: -5.277482509613037
    4. ' ,' → logprob: -5.402482509613037
    5. ' ' → logprob: -5.902482509613037
    6. 'other' → logprob: -6.152482509613037
    7. '__' → logprob: -6.402482509613037
    8. ')' → logprob: -7.027482509613037
    9. '__,' → logprob: -7.027482509613037
    10. '(self' → logprob: -7.027482509613037

Token 75: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.12694920599460602
    2. 'other' → logprob: -2.1269493103027344
    3. ' ' → logprob: -11.001949310302734
    4. ' o' → logprob: -13.251949310302734
    5. 'self' → logprob: -13.876949310302734
    6. ' self' → logprob: -14.126949310302734
    7. 'o' → logprob: -14.751949310302734
    8. ' oth' → logprob: -15.626949310302734
    9. ' ' → logprob: -16.251949310302734
    10. '  ' → logprob: -16.501949310302734

Token 76: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6893277764320374
    2. ')' → logprob: -0.8143277764320374
    3. ':' → logprob: -3.1893277168273926
    4. ' )' → logprob: -4.939327716827393
    5. ' ):' → logprob: -5.189327716827393
    6. '):
' → logprob: -8.43932819366455
    7. '<|end|>' → logprob: -8.43932819366455
    8. ',' → logprob: -8.81432819366455
    9. '       ' → logprob: -9.18932819366455
    10. ' ' → logprob: -9.18932819366455

Token 77: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.47875988483428955
    2. ' Number' → logprob: -1.3537598848342896
    3. 'Number' → logprob: -2.603759765625
    4. ' ' → logprob: -3.853759765625
    5. ')' → logprob: -4.728759765625
    6. ' "' → logprob: -4.853759765625
    7. ' )' → logprob: -5.353759765625
    8. ''' → logprob: -5.478759765625
    9. ' ' → logprob: -7.228759765625
    10. '"' → logprob: -8.728759765625

Token 78: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -5.512236498361744e-07
    2. ' Number' → logprob: -14.500000953674316
    3. 'Num' → logprob: -17.75
    4. ' ' → logprob: -18.5
    5. 'N' → logprob: -19.125
    6. '_Number' → logprob: -19.5
    7. 'number' → logprob: -19.625
    8. '_number' → logprob: -20.25
    9. 'Numbers' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 79: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005408184602856636
    2. '"):' → logprob: -5.38040828704834
    3. ')' → logprob: -7.25540828704834
    4. '"' → logprob: -10.25540828704834
    5. ')")' → logprob: -11.00540828704834
    6. '"):
' → logprob: -11.13040828704834
    7. ' ")' → logprob: -11.63040828704834
    8. '`)' → logprob: -13.00540828704834
    9. '):' → logprob: -13.50540828704834
    10. '"):
' → logprob: -14.13040828704834

Token 80: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010567495599389076
    2. ')' → logprob: -5.385567665100098
    3. '):' → logprob: -5.385567665100098
    4. ':return' → logprob: -8.260567665100098
    5. '<|end|>' → logprob: -8.385567665100098
    6. ' ->' → logprob: -8.385567665100098
    7. ')->' → logprob: -8.385567665100098
    8. ' :' → logprob: -8.760567665100098
    9. '->' → logprob: -8.885567665100098
    10. ':
' → logprob: -10.260567665100098

Token 81: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.25193649530410767
    2. ' bool' → logprob: -1.501936435699463
    3. '<bool' → logprob: -12.751936912536621
    4. ' ' → logprob: -13.251936912536621
    5. '	bool' → logprob: -14.126936912536621
    6. ' ' → logprob: -14.251936912536621
    7. 'b' → logprob: -15.251936912536621
    8. '  ' → logprob: -15.376936912536621
    9. '```' → logprob: -15.501936912536621
    10. '   ' → logprob: -16.251935958862305

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040993880247697234
    2. ':
' → logprob: -8.375410079956055
    3. '):' → logprob: -9.125410079956055
    4. ' :' → logprob: -10.125410079956055
    5. ':return' → logprob: -10.875410079956055
    6. '       ' → logprob: -11.750410079956055
    7. '():' → logprob: -14.375410079956055
    8. ')' → logprob: -14.500410079956055
    9. '   ' → logprob: -14.625410079956055
    10. '<|end|>' → logprob: -14.750410079956055

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005804349202662706
    2. ' return' → logprob: -7.875580310821533
    3. 'return' → logprob: -8.625580787658691
    4. '    ' → logprob: -12.500580787658691
    5. '      ' → logprob: -12.500580787658691
    6. '        ' → logprob: -12.625580787658691
    7. '   ' → logprob: -13.125580787658691
    8. ' ' → logprob: -13.375580787658691
    9. '```' → logprob: -13.625580787658691
    10. '
' → logprob: -14.000580787658691

Token 84: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24737735092639923
    2. ' return' → logprob: -2.247377395629883
    3. 'self' → logprob: -2.247377395629883
    4. ' self' → logprob: -4.997377395629883
    5. '       ' → logprob: -6.872377395629883
    6. ' ' → logprob: -12.997377395629883
    7. '        ' → logprob: -12.997377395629883
    8. ' ' → logprob: -13.497377395629883
    9. '   ' → logprob: -14.247377395629883
    10. '```' → logprob: -14.497377395629883

Token 85: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0181527491658926
    2. 'self' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.018153190612793
    4. ' ' → logprob: -14.768153190612793
    5. '	self' → logprob: -16.143152236938477
    6. '(self' → logprob: -17.018152236938477
    7. '```' → logprob: -18.018152236938477
    8. 'Self' → logprob: -18.268152236938477
    9. '_self' → logprob: -18.518152236938477
    10. '   ' → logprob: -19.268152236938477

Token 86: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0008195152622647583
    2. '.' → logprob: -7.125819683074951
    3. '.user' → logprob: -12.125819206237793
    4. 'value' → logprob: -12.375819206237793
    5. '.val' → logprob: -13.250819206237793
    6. ' .' → logprob: -13.750819206237793
    7. '.token' → logprob: -14.125819206237793
    8. '.code' → logprob: -14.750819206237793
    9. '.number' → logprob: -15.250819206237793
    10. '.values' → logprob: -15.500819206237793

Token 87: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00043817906407639384
    2. '<' → logprob: -7.750438213348389
    3. ' ' → logprob: -11.87543773651123
    4. '  ' → logprob: -16.125438690185547
    5. ' <",' → logprob: -16.125438690185547
    6. ' ' → logprob: -16.125438690185547
    7. ' \<' → logprob: -16.875438690185547
    8. ' <
' → logprob: -17.000438690185547
    9. '<|end|>' → logprob: -17.625438690185547
    10. '<int' → logprob: -18.000438690185547

Token 88: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.03804194927215576
    2. 'other' → logprob: -3.2880420684814453
    3. '(other' → logprob: -15.163042068481445
    4. '.other' → logprob: -16.413042068481445
    5. ' ' → logprob: -16.663042068481445
    6. ' oth' → logprob: -17.038042068481445
    7. '_other' → logprob: -17.913042068481445
    8. ' ' → logprob: -18.413042068481445
    9. ' o' → logprob: -18.788042068481445
    10. 'othe' → logprob: -18.913042068481445

Token 89: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.006048128008842468
    2. '.' → logprob: -5.131048202514648
    3. 'value' → logprob: -9.131048202514648
    4. ' .' → logprob: -11.756048202514648
    5. '`.' → logprob: -14.131048202514648
    6. ').' → logprob: -14.881048202514648
    7. '".' → logprob: -15.131048202514648
    8. '```' → logprob: -15.256048202514648
    9. '.values' → logprob: -15.506048202514648
    10. ' value' → logprob: -15.756048202514648

Token 90: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26931026577949524
    2. '   ' → logprob: -1.7693102359771729
    3. '    
' → logprob: -4.144310474395752
    4. ' 
' → logprob: -4.394310474395752
    5. '\n' → logprob: -4.769310474395752
    6. '<|end|>' → logprob: -4.894310474395752
    7. '```' → logprob: -5.144310474395752
    8. '  
' → logprob: -5.394310474395752
    9. 'newline' → logprob: -6.144310474395752
    10. '

' → logprob: -6.269310474395752

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0977393090724945
    2. ' 
' → logprob: -2.9727392196655273
    3. '    
' → logprob: -3.7227392196655273
    4. '
' → logprob: -5.222739219665527
    5. ' ' → logprob: -5.472739219665527
    6. '  
' → logprob: -6.097739219665527
    7. '```' → logprob: -6.472739219665527
    8. '   
' → logprob: -6.722739219665527
    9. '    ' → logprob: -7.097739219665527
    10. '  ' → logprob: -7.347739219665527

Token 92: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5242128372192383
    2. 'def' (adapté à ' def') → logprob: -1.0242128372192383
    3. ' def' → logprob: -3.1492128372192383
    4. ' ' → logprob: -5.399212837219238
    5. '  ' → logprob: -7.399212837219238
    6. '    ' → logprob: -8.149212837219238
    7. '    
' → logprob: -8.399212837219238
    8. '       ' → logprob: -9.649212837219238
    9. '```' → logprob: -9.774212837219238
    10. ' 
' → logprob: -10.149212837219238

Token 93: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0808955654501915
    2. '__' → logprob: -2.7058956623077393
    3. ' ' → logprob: -4.58089542388916
    4. ' ' → logprob: -8.20589542388916
    5. '_' → logprob: -9.58089542388916
    6. ' `' → logprob: -9.70589542388916
    7. '>' → logprob: -9.83089542388916
    8. '```' → logprob: -10.08089542388916
    9. ' def' → logprob: -10.33089542388916
    10. '`' → logprob: -10.83089542388916

Token 94: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -3.173704271830502e-06
    2. '_gt' → logprob: -13.00000286102295
    3. 'g' → logprob: -14.75000286102295
    4. ' gt' → logprob: -15.50000286102295
    5. 'ght' → logprob: -16.000003814697266
    6. 't' → logprob: -17.375003814697266
    7. '>' → logprob: -17.750003814697266
    8. 'tg' → logprob: -19.250003814697266
    9. '(gt' → logprob: -19.500003814697266
    10. '.gt' → logprob: -20.000003814697266

Token 95: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.062240246683359146
    2. '__' → logprob: -2.8122403621673584
    3. '__(
' → logprob: -9.187240600585938
    4. '_(' → logprob: -10.062240600585938
    5. '_' → logprob: -10.187240600585938
    6. '__((' → logprob: -10.312240600585938
    7. '(self' → logprob: -11.187240600585938
    8. '__('' → logprob: -11.187240600585938
    9. '___' → logprob: -11.437240600585938
    10. '(' → logprob: -11.937240600585938

Token 96: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.694679856300354
    2. 'other' → logprob: -0.694679856300354
    3. ' self' → logprob: -7.1946797370910645
    4. ' other' → logprob: -7.1946797370910645
    5. ' ' → logprob: -11.069680213928223
    6. 'othe' → logprob: -12.819680213928223
    7. '"' → logprob: -13.319680213928223
    8. 'Other' → logprob: -13.444680213928223
    9. '(self' → logprob: -13.444680213928223
    10. '   ' → logprob: -13.819680213928223

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008221378084272146
    2. 'other' → logprob: -7.875822067260742
    3. '(self' → logprob: -8.750822067260742
    4. '(' → logprob: -9.250822067260742
    5. ' ,' → logprob: -9.500822067260742
    6. '(other' → logprob: -9.750822067260742
    7. ')' → logprob: -10.875822067260742
    8. 'self' → logprob: -11.000822067260742
    9. ' other' → logprob: -12.000822067260742
    10. ',
' → logprob: -12.375822067260742

Token 98: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.018153570592403412
    2. 'other' → logprob: -4.018153667449951
    3. ' self' → logprob: -13.268153190612793
    4. '(other' → logprob: -13.893153190612793
    5. 'self' → logprob: -14.518153190612793
    6. ' ' → logprob: -15.393153190612793
    7. 'Other' → logprob: -16.26815414428711
    8. '.other' → logprob: -16.64315414428711
    9. '_other' → logprob: -16.76815414428711
    10. ' oth' → logprob: -17.51815414428711

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014728360110893846
    2. ' :' → logprob: -9.000146865844727
    3. ')' → logprob: -10.875146865844727
    4. '):' → logprob: -12.875146865844727
    5. '<|end|>' → logprob: -13.875146865844727
    6. '<|end|>' → logprob: -14.375146865844727
    7. '"' → logprob: -15.875146865844727
    8. ' ' → logprob: -16.125146865844727
    9. '[' → logprob: -16.875146865844727
    10. '```' → logprob: -16.875146865844727

Token 100: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.48122891783714294
    2. ' "' → logprob: -0.9812289476394653
    3. ')' → logprob: -5.731228828430176
    4. ' other' → logprob: -5.981228828430176
    5. 'other' → logprob: -7.356228828430176
    6. ' ' → logprob: -7.481228828430176
    7. ' ' → logprob: -9.606228828430176
    8. 'Other' → logprob: -10.481228828430176
    9. '")' → logprob: -10.606228828430176
    10. '">' → logprob: -11.606228828430176

Token 101: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -2.935296834039036e-06
    2. ' Number' → logprob: -12.75000286102295
    3. '"' → logprob: -17.625003814697266
    4. 'number' → logprob: -18.875003814697266
    5. '_number' → logprob: -20.125003814697266
    6. ' ' → logprob: -20.250003814697266
    7. '_Number' → logprob: -20.625003814697266
    8. 'Num' → logprob: -21.000003814697266
    9. ' number' → logprob: -21.000003814697266
    10. 'Numbers' → logprob: -21.500003814697266

Token 102: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015566397923976183
    2. ')' → logprob: -6.501556873321533
    3. ' ")' → logprob: -10.376556396484375
    4. ')")' → logprob: -11.376556396484375
    5. '"' → logprob: -11.876556396484375
    6. '"):' → logprob: -13.376556396484375
    7. '   ' → logprob: -13.501556396484375
    8. '`)' → logprob: -14.876556396484375
    9. '")
' → logprob: -15.126556396484375
    10. ' )' → logprob: -15.126556396484375

Token 103: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1327792406082153
    2. ' return' → logprob: -1.2577792406082153
    3. ' ->' → logprob: -2.007779121398926
    4. ')' → logprob: -2.382779121398926
    5. ':' → logprob: -3.007779121398926
    6. '->' → logprob: -3.507779121398926
    7. 'return' → logprob: -3.882779121398926
    8. '   ' → logprob: -4.007779121398926
    9. '>' → logprob: -4.257779121398926
    10. ' ' → logprob: -4.382779121398926

Token 104: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3484949767589569
    2. 'bool' → logprob: -1.2234950065612793
    3. ' ' → logprob: -11.098494529724121
    4. ' ' → logprob: -11.223494529724121
    5. '	bool' → logprob: -12.223494529724121
    6. '  ' → logprob: -12.848494529724121
    7. '<bool' → logprob: -12.848494529724121
    8. 'b' → logprob: -12.973494529724121
    9. '    ' → logprob: -13.973494529724121
    10. '   ' → logprob: -13.973494529724121

Token 105: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3926434814929962
    2. ':' → logprob: -1.1426434516906738
    3. ' :' → logprob: -5.892643451690674
    4. ':return' → logprob: -6.642643451690674
    5. ' return' → logprob: -7.267643451690674
    6. '        ' → logprob: -8.267643928527832
    7. 'return' → logprob: -8.767643928527832
    8. ':
' → logprob: -9.267643928527832
    9. '      ' → logprob: -9.892643928527832
    10. ',' → logprob: -10.142643928527832

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020698724314570427
    2. ' return' → logprob: -4.020698547363281
    3. 'return' → logprob: -6.270698547363281
    4. ' self' → logprob: -7.645698547363281
    5. 'self' → logprob: -9.020698547363281
    6. '        ' → logprob: -10.270698547363281
    7. '    ' → logprob: -12.145698547363281
    8. ' ' → logprob: -12.270698547363281
    9. '      ' → logprob: -12.645698547363281
    10. ' ' → logprob: -13.145698547363281

Token 107: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6691641211509705
    2. ' return' → logprob: -0.9191641211509705
    3. '       ' → logprob: -2.4191641807556152
    4. '```' → logprob: -12.044163703918457
    5. '	return' → logprob: -12.419163703918457
    6. '   ' → logprob: -12.669163703918457
    7. ' ' → logprob: -14.294163703918457
    8. '     ' → logprob: -14.669163703918457
    9. '      ' → logprob: -15.044163703918457
    10. '{return' → logprob: -15.169163703918457

Token 108: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17995016276836395
    2. 'self' → logprob: -1.8049501180648804
    3. ' other' → logprob: -8.679949760437012
    4. 'other' → logprob: -10.554949760437012
    5. ' ' → logprob: -12.679949760437012
    6. ' ' → logprob: -12.804949760437012
    7. '(self' → logprob: -13.304949760437012
    8. '	self' → logprob: -14.179949760437012
    9. '    ' → logprob: -15.304949760437012
    10. '   ' → logprob: -15.929949760437012

Token 109: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.02673715353012085
    2. '.' → logprob: -3.6517372131347656
    3. 'value' → logprob: -8.026737213134766
    4. ' .' → logprob: -9.401737213134766
    5. '>.' → logprob: -11.151737213134766
    6. '.user' → logprob: -12.901737213134766
    7. '.v' → logprob: -13.526737213134766
    8. '.<' → logprob: -13.776737213134766
    9. '.val' → logprob: -14.151737213134766
    10. ' ' → logprob: -14.151737213134766

Token 110: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0009470687946304679
    2. '>' → logprob: -7.000946998596191
    3. ' ' → logprob: -10.250946998596191
    4. ' >

' → logprob: -16.375947952270508
    5. ' ' → logprob: -16.500947952270508
    6. ' >
' → logprob: -16.625947952270508
    7. ' >
' → logprob: -17.000947952270508
    8. ' <' → logprob: -17.250947952270508
    9. '  ' → logprob: -18.375947952270508
    10. '1' → logprob: -18.625947952270508

Token 111: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.005235291086137295
    2. 'other' → logprob: -5.255235195159912
    3. '(other' → logprob: -14.00523567199707
    4. ' oth' → logprob: -15.13023567199707
    5. ' ' → logprob: -15.38023567199707
    6. '.other' → logprob: -16.13023567199707
    7. ' ' → logprob: -16.75523567199707
    8. '_other' → logprob: -16.88023567199707
    9. 'Other' → logprob: -17.50523567199707
    10. '<|end|>' → logprob: -17.50523567199707

Token 112: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.011077644303441048
    2. '.' → logprob: -4.511077880859375
    3. 'value' → logprob: -11.011077880859375
    4. ' .' → logprob: -11.386077880859375
    5. '.other' → logprob: -15.261077880859375
    6. '.values' → logprob: -15.386077880859375
    7. '.code' → logprob: -15.761077880859375
    8. '.user' → logprob: -15.886077880859375
    9. ').' → logprob: -15.886077880859375
    10. ' ' → logprob: -16.261077880859375

Token 113: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41079846024513245
    2. '<|end|>' → logprob: -1.16079843044281
    3. '   ' → logprob: -4.5357985496521
    4. 'class' → logprob: -5.2857985496521
    5. ' ' → logprob: -6.5357985496521
    6. ')' → logprob: -6.6607985496521
    7. '    
' → logprob: -6.6607985496521
    8. '<|end|>' → logprob: -6.7857985496521
    9. '#' → logprob: -7.0357985496521
    10. '```' → logprob: -8.035798072814941

Token 114: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.27816373109817505
    2. '
' → logprob: -1.6531636714935303
    3. '<|end|>' → logprob: -4.278163909912109
    4. 'n' → logprob: -4.653163909912109
    5. '#' → logprob: -5.278163909912109
    6. 'c' → logprob: -5.653163909912109
    7. ' class' → logprob: -5.778163909912109
    8. ' ' → logprob: -6.153163909912109
    9. '[' → logprob: -6.153163909912109
    10. 'a' → logprob: -6.653163909912109

Token 115: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5163498520851135
    2. '#' → logprob: -2.2663497924804688
    3. 'def' (adapté à ' def') → logprob: -2.2663497924804688
    4. '<|end|>' → logprob: -2.2663497924804688
    5. '
' → logprob: -3.3913497924804688
    6. 'class' → logprob: -4.141349792480469
    7. ' ' → logprob: -4.266349792480469
    8. '    
' → logprob: -5.266349792480469
    9. ')' → logprob: -5.391349792480469
    10. '```' → logprob: -5.891349792480469

Token 116: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009178523905575275
    2. '__' → logprob: -5.134178638458252
    3. ' ' → logprob: -5.884178638458252
    4. ' _' → logprob: -8.634178161621094
    5. ' def' → logprob: -9.384178161621094
    6. ' ' → logprob: -9.509178161621094
    7. '_' → logprob: -9.509178161621094
    8. ' add' → logprob: -11.759178161621094
    9. ' ___' → logprob: -11.759178161621094
    10. '_add' → logprob: -12.259178161621094

Token 117: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.002955947071313858
    2. 'repr' → logprob: -6.377955913543701
    3. 'str' → logprob: -7.127955913543701
    4. 'add' → logprob: -7.752955913543701
    5. 'int' → logprob: -11.12795639038086
    6. 'le' → logprob: -12.25295639038086
    7. 'e' → logprob: -14.50295639038086
    8. '==' → logprob: -15.50295639038086
    9. 'init' → logprob: -15.75295639038086
    10. 'abs' → logprob: -15.87795639038086

Token 118: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10649770498275757
    2. '__' → logprob: -2.3564977645874023
    3. '__('' → logprob: -5.731497764587402
    4. '__(
' → logprob: -5.981497764587402
    5. '__("' → logprob: -7.856497764587402
    6. '__((' → logprob: -10.231497764587402
    7. '_' → logprob: -10.356497764587402
    8. '__(*' → logprob: -11.231497764587402
    9. '(' → logprob: -11.356497764587402
    10. '___' → logprob: -11.731497764587402

Token 119: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.375001907348633
    3. ')' → logprob: -14.125001907348633
    4. 'Self' → logprob: -17.625001907348633
    5. '(self' → logprob: -19.000001907348633
    6. '
' → logprob: -19.000001907348633
    7. '_self' → logprob: -19.750001907348633
    8. '	self' → logprob: -20.750001907348633
    9. 's' → logprob: -20.750001907348633
    10. 'f' → logprob: -21.000001907348633

Token 120: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7409820556640625
    2. '__' → logprob: -0.8659820556640625
    3. '__)' → logprob: -2.3659820556640625
    4. '__('' → logprob: -5.8659820556640625
    5. '__(' → logprob: -6.1159820556640625
    6. ')__' → logprob: -7.1159820556640625
    7. 'self' → logprob: -7.8659820556640625
    8. '):' → logprob: -8.115982055664062
    9. '__("' → logprob: -8.240982055664062
    10. '(' → logprob: -8.240982055664062

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037333741784095764
    2. ' f' → logprob: -4.287333965301514
    3. 'return' → logprob: -4.662333965301514
    4. ' return' → logprob: -4.787333965301514
    5. 'f' → logprob: -5.287333965301514
    6. 'self' → logprob: -10.287333488464355
    7. '   ' → logprob: -10.662333488464355
    8. ' self' → logprob: -12.787333488464355
    9. '      ' → logprob: -13.162333488464355
    10. '           ' → logprob: -13.287333488464355

Token 122: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09267649054527283
    2. 'return' (adapté à ' return') → logprob: -2.8426764011383057
    3. ' f' → logprob: -3.5926764011383057
    4. ' return' → logprob: -6.342676639556885
    5. '       ' → logprob: -7.592676639556885
    6. '   ' → logprob: -7.717676639556885
    7. '           ' → logprob: -13.217676162719727
    8. ' ' → logprob: -13.342676162719727
    9. '     ' → logprob: -13.842676162719727
    10. '    ' → logprob: -13.842676162719727

Token 123: ' str' (ID: 989)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.06197071075439453
    2. 'f' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.186970710754395
    4. ' ' → logprob: -14.061970710754395
    5. '	f' → logprob: -15.436970710754395
    6. ' str' → logprob: -16.936969757080078
    7. 'F' → logprob: -16.936969757080078
    8. ' F' → logprob: -17.061969757080078
    9. '<f' → logprob: -17.186969757080078
    10. ''f' → logprob: -17.311969757080078

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002334568416699767
    2. '(' → logprob: -8.37523365020752
    3. 'self' → logprob: -13.62523365020752
    4. ' (' → logprob: -13.75023365020752
    5. '(
' → logprob: -14.87523365020752
    6. '(f' → logprob: -16.125232696533203
    7. '(s' → logprob: -16.875232696533203
    8. ' self' → logprob: -17.875232696533203
    9. '(`' → logprob: -18.250232696533203
    10. '((' → logprob: -18.625232696533203

Token 125: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.375001907348633
    3. 'value' → logprob: -14.750001907348633
    4. ').' → logprob: -15.125001907348633
    5. ')' → logprob: -17.375001907348633
    6. ' .' → logprob: -17.750001907348633
    7. 'self' → logprob: -18.500001907348633
    8. '.number' → logprob: -19.375001907348633
    9. '.val' → logprob: -19.875001907348633
    10. '"value' → logprob: -20.125001907348633

Token 126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '}' → logprob: -15.250000953674316
    3. ')
' → logprob: -16.25
    4. ' )' → logprob: -16.25
    5. '<|end|>' → logprob: -18.125
    6. '')' → logprob: -19.375
    7. ')`' → logprob: -19.375
    8. '#' → logprob: -19.5
    9. '   ' → logprob: -19.625
    10. '")' → logprob: -19.625

Token 127: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.020813848823308945
    2. 'def' → logprob: -3.8958139419555664
    3. '
' → logprob: -8.895813941955566
    4. 'from' → logprob: -9.895813941955566
    5. ' class' → logprob: -10.395813941955566
    6. '  
' → logprob: -10.895813941955566
    7. 'n' → logprob: -12.145813941955566
    8. '#' → logprob: -12.645813941955566
    9. ' 
' → logprob: -12.645813941955566
    10. 'c' → logprob: -12.895813941955566

Token 128: ' Sort' (ID: 25945)
  Prédit: 'Sorter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sorter' → logprob: -0.42033058404922485
    2. ' Sort' → logprob: -1.54533052444458
    3. ' Max' → logprob: -3.42033052444458
    4. 'Sort' → logprob: -4.17033052444458
    5. ' Container' → logprob: -4.17033052444458
    6. 'Max' → logprob: -4.54533052444458
    7. ' Sorted' → logprob: -4.67033052444458
    8. ' Min' → logprob: -4.67033052444458
    9. ' Stack' → logprob: -4.79533052444458
    10. ' Sorting' → logprob: -5.29533052444458

Token 129: 'Strategy' (ID: 21488)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0038539899978786707
    2. 'able' → logprob: -5.628853797912598
    3. 'ing' → logprob: -9.003853797912598
    4. 'Strategy' → logprob: -9.003853797912598
    5. 'erer' → logprob: -12.628853797912598
    6. 'Algorithm' → logprob: -13.378853797912598
    7. '(' → logprob: -13.753853797912598
    8. 'Helper' → logprob: -14.003853797912598
    9. 'or' → logprob: -15.628853797912598
    10. 'ed' → logprob: -15.753853797912598

Token 130: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.180258191714529e-06
    2. ':' → logprob: -12.125008583068848
    3. '(Abstract' → logprob: -12.875008583068848
    4. ' (' → logprob: -15.250008583068848
    5. '(S' → logprob: -17.12500762939453
    6. '():' → logprob: -17.37500762939453
    7. '```' → logprob: -18.75000762939453
    8. '(AST' → logprob: -19.12500762939453
    9. ':(' → logprob: -19.25000762939453
    10. '(Enum' → logprob: -19.62500762939453

Token 131: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00034750174381770194
    2. 'Protocol' → logprob: -8.000347137451172
    3. 'abc' → logprob: -12.250347137451172
    4. 'AB' → logprob: -12.750347137451172
    5. 'Abstract' → logprob: -13.875347137451172
    6. '(' → logprob: -14.000347137451172
    7. ' ABC' → logprob: -14.000347137451172
    8. 'A' → logprob: -14.750347137451172
    9. ')' → logprob: -15.125347137451172
    10. 'ABCDE' → logprob: -15.500347137451172

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.231182826217264e-05
    2. ')' → logprob: -10.000072479248047
    3. '):
' → logprob: -11.250072479248047
    4. ':' → logprob: -11.375072479248047
    5. ' ):' → logprob: -13.625072479248047
    6. '):
' → logprob: -14.375072479248047
    7. '):

' → logprob: -15.250072479248047
    8. '():' → logprob: -17.000072479248047
    9. ' ' → logprob: -17.375072479248047
    10. '   ' → logprob: -17.375072479248047

Token 133: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43992528319358826
    2. '   ' → logprob: -1.0649253129959106
    3. '
' → logprob: -4.814925193786621
    4. '):' → logprob: -6.814925193786621
    5. ')' → logprob: -7.314925193786621
    6. ':
' → logprob: -7.814925193786621
    7. '    
' → logprob: -8.439925193786621
    8. '<|end|>' → logprob: -8.564925193786621
    9. ' :' → logprob: -8.814925193786621
    10. 'def' → logprob: -9.814925193786621

Token 134: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07732244580984116
    2. '
' → logprob: -3.202322483062744
    3. ' @' → logprob: -3.952322483062744
    4. '    
' → logprob: -4.702322483062744
    5. '@' (adapté à ' @') → logprob: -5.452322483062744
    6. ' 
' → logprob: -6.952322483062744
    7. '  
' → logprob: -10.077322006225586
    8. '    ' → logprob: -10.202322006225586
    9. '   
' → logprob: -10.452322006225586
    10. '  ' → logprob: -10.577322006225586

Token 135: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.961759259458631e-06
    2. 'staticmethod' → logprob: -13.125004768371582
    3. 'ab' → logprob: -13.625004768371582
    4. ' abstract' → logprob: -14.125004768371582
    5. 'abs' → logprob: -14.375004768371582
    6. 'abc' → logprob: -15.750004768371582
    7. 'classmethod' → logprob: -16.0000057220459
    8. 'a' → logprob: -16.8750057220459
    9. '.abstract' → logprob: -17.1250057220459
    10. 'property' → logprob: -18.2500057220459

Token 136: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0005545823951251805
    2. '_method' → logprob: -7.50055456161499
    3. 'classmethod' → logprob: -14.375555038452148
    4. 'meth' → logprob: -15.125555038452148
    5. 'def' → logprob: -15.375555038452148
    6. 'ethod' → logprob: -15.500555038452148
    7. '	method' → logprob: -16.00055503845215
    8. 'staticmethod' → logprob: -16.75055503845215
    9. '
' → logprob: -17.25055503845215
    10. '   ' → logprob: -17.37555503845215

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00024631983251310885
    2. 'def' → logprob: -8.625246047973633
    3. '    
' → logprob: -10.250246047973633
    4. '
' → logprob: -11.250246047973633
    5. '  
' → logprob: -12.000246047973633
    6. 'method' → logprob: -12.375246047973633
    7. ' def' → logprob: -13.250246047973633
    8. '   ' → logprob: -13.375246047973633
    9. '\' → logprob: -13.625246047973633
    10. ' 
' → logprob: -13.875246047973633

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6908823251724243
    2. 'def' → logprob: -0.8158823251724243
    3. ' def' → logprob: -3.9408822059631348
    4. '(' → logprob: -4.065882205963135
    5. 'method' → logprob: -5.190882205963135
    6. '    
' → logprob: -5.565882205963135
    7. '<|end|>' → logprob: -5.565882205963135
    8. '  
' → logprob: -6.940882205963135
    9. '(
' → logprob: -7.065882205963135
    10. '	def' → logprob: -7.190882205963135

Token 139: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03605473414063454
    2. '
' → logprob: -3.536054849624634
    3. 'method' → logprob: -5.786054611206055
    4. ' def' → logprob: -6.536054611206055
    5. 'classmethod' → logprob: -7.161054611206055
    6. 'staticmethod' → logprob: -7.786054611206055
    7. 'abstract' → logprob: -8.036054611206055
    8. 'property' → logprob: -9.161054611206055
    9. 'call' → logprob: -10.036054611206055
    10. 's' → logprob: -10.911054611206055

Token 140: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.006493438500910997
    2. 'sort' → logprob: -5.13149356842041
    3. ' def' → logprob: -7.88149356842041
    4. ' apply' → logprob: -9.75649356842041
    5. ' ' → logprob: -10.00649356842041
    6. '	sort' → logprob: -10.00649356842041
    7. ' ' → logprob: -11.88149356842041
    8. '   ' → logprob: -12.13149356842041
    9. 'def' → logprob: -12.25649356842041
    10. ' sorte' → logprob: -12.38149356842041

Token 141: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.482821431243792e-05
    2. '(' → logprob: -9.62508487701416
    3. ' (' → logprob: -11.50008487701416
    4. 'self' → logprob: -11.87508487701416
    5. '
' → logprob: -14.75008487701416
    6. '(
' → logprob: -15.00008487701416
    7. '(sel' → logprob: -15.62508487701416
    8. '   ' → logprob: -15.75008487701416
    9. '```' → logprob: -16.375083923339844
    10. '(cls' → logprob: -16.500083923339844

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008818074711598456
    2. 'self' → logprob: -7.375881671905518
    3. 'items' → logprob: -9.125882148742676
    4. ' ,' → logprob: -10.125882148742676
    5. '_items' → logprob: -10.375882148742676
    6. ')' → logprob: -10.750882148742676
    7. '_list' → logprob: -10.875882148742676
    8. '   ' → logprob: -12.375882148742676
    9. ',List' → logprob: -12.375882148742676
    10. '       ' → logprob: -12.625882148742676

Token 143: ' items' (ID: 4732)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3740042448043823
    2. 'items' → logprob: -1.7490042448043823
    3. 'self' → logprob: -2.249004364013672
    4. ' data' → logprob: -3.624004364013672
    5. ' items' → logprob: -5.499004364013672
    6. ' self' → logprob: -6.624004364013672
    7. 'arr' → logprob: -8.999004364013672
    8. 'elements' → logprob: -8.999004364013672
    9. 'lst' → logprob: -9.374004364013672
    10. 'numbers' → logprob: -10.124004364013672

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.368984107510187e-05
    2. ')' → logprob: -10.500033378601074
    3. ' :' → logprob: -12.625033378601074
    4. '):' → logprob: -13.250033378601074
    5. '[' → logprob: -15.125033378601074
    6. '```' → logprob: -15.625033378601074
    7. '_:' → logprob: -15.875033378601074
    8. ',' → logprob: -16.37503433227539
    9. ' )' → logprob: -16.75003433227539
    10. '[List' → logprob: -16.75003433227539

Token 145: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.47408756613731384
    2. 'List' → logprob: -0.9740875959396362
    3. '	List' → logprob: -11.849087715148926
    4. ' ' → logprob: -13.474087715148926
    5. '[List' → logprob: -14.224087715148926
    6. '   ' → logprob: -14.849087715148926
    7. ')' → logprob: -14.849087715148926
    8. ' list' → logprob: -15.849087715148926
    9. 'list' → logprob: -16.47408676147461
    10. '<List' → logprob: -16.59908676147461

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.256334695033729e-05
    2. ')' → logprob: -10.125082969665527
    3. '[
' → logprob: -10.750082969665527
    4. '<|end|>' → logprob: -11.500082969665527
    5. '["' → logprob: -12.500082969665527
    6. '[Serialize' → logprob: -13.250082969665527
    7. ' ' → logprob: -13.375082969665527
    8. ' [' → logprob: -13.750082969665527
    9. '<|end|>' → logprob: -14.250082969665527
    10. '[...,' → logprob: -15.250082969665527

Token 147: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -0.0002116462419508025
    2. ' Comparable' → logprob: -8.500211715698242
    3. 'Number' → logprob: -11.750211715698242
    4. ' comparable' → logprob: -16.000211715698242
    5. 'Compatible' → logprob: -16.625211715698242
    6. 'Compar' → logprob: -18.750211715698242
    7. ')' → logprob: -19.875211715698242
    8. 'Compared' → logprob: -20.375211715698242
    9. 'Comparator' → logprob: -20.500211715698242
    10. '"' → logprob: -20.500211715698242

Token 148: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000936355150770396
    2. ')' → logprob: -7.125936508178711
    3. ']' → logprob: -9.750936508178711
    4. '[' → logprob: -10.375936508178711
    5. ']):' → logprob: -10.750936508178711
    6. '"])' → logprob: -11.750936508178711
    7. ' ])' → logprob: -12.250936508178711
    8. ']
' → logprob: -13.250936508178711
    9. ''])' → logprob: -13.625936508178711
    10. ' ' → logprob: -13.625936508178711

Token 149: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32041895389556885
    2. ' ->' → logprob: -1.6954189538955688
    3. '->' → logprob: -2.4454188346862793
    4. ')->' → logprob: -6.195418834686279
    5. ':' → logprob: -6.445418834686279
    6. '   ' → logprob: -8.445419311523438
    7. '       ' → logprob: -10.445419311523438
    8. '):' → logprob: -10.695419311523438
    9. ' )' → logprob: -10.820419311523438
    10. ' )->' → logprob: -12.195419311523438

Token 150: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.20232713222503662
    2. ' List' → logprob: -1.7023271322250366
    3. 'None' → logprob: -7.327327251434326
    4. ' None' → logprob: -8.327326774597168
    5. '	List' → logprob: -12.077326774597168
    6. '   ' → logprob: -12.577326774597168
    7. ' ' → logprob: -13.077326774597168
    8. 'list' → logprob: -13.577326774597168
    9. ' list' → logprob: -13.827326774597168
    10. '[List' → logprob: -15.327326774597168

Token 151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. '[int' → logprob: -12.500008583068848
    3. '[
' → logprob: -13.250008583068848
    4. ' ' → logprob: -13.750008583068848
    5. '<|end|>' → logprob: -13.875008583068848
    6. '  ' → logprob: -15.250008583068848
    7. '[Serialize' → logprob: -16.12500762939453
    8. '<|end|>' → logprob: -16.37500762939453
    9. ' [' → logprob: -16.50000762939453
    10. 'Comparable' → logprob: -16.62500762939453

Token 152: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -8.2994620242971e-06
    2. ' Comparable' → logprob: -11.750008583068848
    3. 'Compatible' → logprob: -15.375008583068848
    4. 'Compar' → logprob: -17.37500762939453
    5. ' comparable' → logprob: -17.62500762939453
    6. 'Compared' → logprob: -18.12500762939453
    7. 'Composable' → logprob: -18.37500762939453
    8. 'int' → logprob: -20.00000762939453
    9. 'Convertible' → logprob: -20.12500762939453
    10. 'Comparator' → logprob: -20.12500762939453

Token 153: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44681334495544434
    2. ']:' → logprob: -1.0718133449554443
    3. ':' → logprob: -4.071813583374023
    4. ']' → logprob: -7.696813583374023
    5. ')' → logprob: -8.946813583374023
    6. '   ' → logprob: -9.196813583374023
    7. '):
' → logprob: -9.946813583374023
    8. '"]:' → logprob: -10.071813583374023
    9. ']):' → logprob: -10.821813583374023
    10. '>:' → logprob: -10.821813583374023

Token 154: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7000617980957031
    2. '   ' → logprob: -1.5750617980957031
    3. '
' → logprob: -2.075061798095703
    4. '<|end|>' → logprob: -2.200061798095703
    5. '       ' → logprob: -3.825061798095703
    6. ':return' → logprob: -4.450061798095703
    7. ' ' → logprob: -4.950061798095703
    8. '):' → logprob: -5.700061798095703
    9. '    ' → logprob: -5.950061798095703
    10. ')' → logprob: -6.075061798095703

Token 155: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.21327747404575348
    2. 'pass' (adapté à ' pass') → logprob: -1.9632774591445923
    3. '...' → logprob: -3.463277578353882
    4. '       ' → logprob: -4.088277339935303
    5. ' ...' → logprob: -5.963277339935303
    6. '   ' → logprob: -7.088277339935303
    7. '    ' → logprob: -9.338277816772461
    8. '	pass' → logprob: -10.463277816772461
    9. ' ' → logprob: -10.838277816772461
    10. 'raise' → logprob: -11.588277816772461

Token 156: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13586561381816864
    2. 'class' → logprob: -2.3858656883239746
    3. '

' → logprob: -3.3858656883239746
    4. '
' → logprob: -6.760865688323975
    5. '' → logprob: -12.010865211486816
    6. '\n' → logprob: -12.385865211486816
    7. ' class' → logprob: -12.760865211486816
    8. '


' → logprob: -13.010865211486816
    9. '```' → logprob: -13.635865211486816
    10. '<class' → logprob: -13.760865211486816

Token 157: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5822925567626953
    2. 'class' → logprob: -0.8322925567626953
    3. '

' → logprob: -5.082292556762695
    4. '
' → logprob: -9.082292556762695
    5. ' class' → logprob: -12.207292556762695
    6. '```' → logprob: -13.207292556762695
    7. '\n' → logprob: -13.582292556762695
    8. '<class' → logprob: -13.832292556762695
    9. '' → logprob: -13.832292556762695
    10. '


' → logprob: -14.207292556762695

Token 158: ' Desc' (ID: 47040)
  Prédit: ' Bubble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Bubble' → logprob: -0.25081050395965576
    2. 'Bubble' → logprob: -1.6258105039596558
    3. ' Quick' → logprob: -3.8758106231689453
    4. 'Quick' → logprob: -5.625810623168945
    5. ' Merge' → logprob: -8.000810623168945
    6. 'Merge' → logprob: -8.625810623168945
    7. ' ' → logprob: -9.500810623168945
    8. 'Insertion' → logprob: -9.875810623168945
    9. ' Selection' → logprob: -10.625810623168945
    10. 'Selection' → logprob: -11.375810623168945

Token 159: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.16656887531280518
    2. 'Sort' → logprob: -1.9165688753128052
    3. 'sort' → logprob: -5.416568756103516
    4. 'Sorting' → logprob: -7.166568756103516
    5. 'end' → logprob: -7.416568756103516
    6. '_sort' → logprob: -9.166568756103516
    7. 'ent' → logprob: -9.416568756103516
    8. 'r' → logprob: -9.416568756103516
    9. 'endant' → logprob: -10.041568756103516
    10. 'endent' → logprob: -10.166568756103516

Token 160: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -7.135819760151207e-05
    2. 'Sorter' → logprob: -10.25007152557373
    3. 'Bubble' → logprob: -10.75007152557373
    4. 'Strategy' → logprob: -11.62507152557373
    5. 'Sorting' → logprob: -13.25007152557373
    6. 'sort' → logprob: -13.37507152557373
    7. 'Merge' → logprob: -13.87507152557373
    8. ' sort' → logprob: -15.00007152557373
    9. 'Order' → logprob: -15.00007152557373
    10. ' Sort' → logprob: -15.75007152557373

Token 161: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.007679146248847246
    2. '(S' → logprob: -4.882678985595703
    3. 'Sort' → logprob: -10.382678985595703
    4. '(' → logprob: -10.632678985595703
    5. 'S' → logprob: -12.132678985595703
    6. 'strategy' → logprob: -12.632678985595703
    7. 'er' → logprob: -12.757678985595703
    8. 'Strateg' → logprob: -13.007678985595703
    9. 'ategy' → logprob: -14.132678985595703
    10. 'Str' → logprob: -14.382678985595703

Token 162: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0043191490694880486
    2. '(' → logprob: -5.629319190979004
    3. ':' → logprob: -7.254319190979004
    4. '():' → logprob: -12.379319190979004
    5. ' :' → logprob: -12.754319190979004
    6. '(Abstract' → logprob: -13.629319190979004
    7. ' (' → logprob: -13.879319190979004
    8. 'Sort' → logprob: -14.004319190979004
    9. '):' → logprob: -15.004319190979004
    10. '(sort' → logprob: -15.379319190979004

Token 163: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -8.41866585687967e-06
    2. 'orting' → logprob: -12.375008583068848
    3. 'o' → logprob: -13.125008583068848
    4. '```' → logprob: -14.375008583068848
    5. 'орт' → logprob: -15.625008583068848
    6. 'ortal' → logprob: -15.750008583068848
    7. 'orted' → logprob: -15.875008583068848
    8. 'or' → logprob: -15.875008583068848
    9. '``' → logprob: -16.00000762939453
    10. 't' → logprob: -16.12500762939453

Token 164: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0016382889589294791
    2. 'ategy' → logprob: -6.751638412475586
    3. 'ing' → logprob: -8.376638412475586
    4. 'strategy' → logprob: -8.876638412475586
    5. '_strategy' → logprob: -9.626638412475586
    6. 'ending' → logprob: -11.626638412475586
    7. ')' → logprob: -11.876638412475586
    8. ' strategy' → logprob: -12.751638412475586
    9. ' Strategy' → logprob: -12.876638412475586
    10. 'Strateg' → logprob: -13.251638412475586

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002637199067976326
    2. '):
' → logprob: -8.250264167785645
    3. ')' → logprob: -13.750264167785645
    4. ':' → logprob: -14.000264167785645
    5. '   ' → logprob: -15.250264167785645
    6. ' ):' → logprob: -15.875264167785645
    7. '):
' → logprob: -16.000263214111328
    8. '):

' → logprob: -17.125263214111328
    9. '():' → logprob: -18.375263214111328
    10. ']:' → logprob: -18.750263214111328

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025864813942462206
    2. '
' → logprob: -6.002586364746094
    3. ' def' → logprob: -10.002586364746094
    4. '    
' → logprob: -10.502586364746094
    5. 'def' → logprob: -10.502586364746094
    6. ':' → logprob: -12.377586364746094
    7. '```' → logprob: -12.877586364746094
    8. '    ' → logprob: -13.877586364746094
    9. ':
' → logprob: -14.627586364746094
    10. '  ' → logprob: -14.752586364746094

Token 167: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17230595648288727
    2. ' def' → logprob: -1.922305941581726
    3. '   ' → logprob: -4.422306060791016
    4. '
' → logprob: -13.672306060791016
    5. ' ' → logprob: -14.547306060791016
    6. '	def' → logprob: -14.547306060791016
    7. '  ' → logprob: -15.297306060791016
    8. '    ' → logprob: -15.797306060791016
    9. '    
' → logprob: -17.047306060791016
    10. '```' → logprob: -17.547306060791016

Token 168: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.11438575387001038
    2. ' def' → logprob: -2.3643858432769775
    3. 'sort' → logprob: -4.364385604858398
    4. 'def' → logprob: -6.614385604858398
    5. ' ' → logprob: -11.864385604858398
    6. ' ' → logprob: -12.364385604858398
    7. '   ' → logprob: -13.614385604858398
    8. '_sort' → logprob: -13.989385604858398
    9. '	sort' → logprob: -14.489385604858398
    10. ' sorted' → logprob: -14.614385604858398

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.750027656555176
    3. 'self' → logprob: -12.125027656555176
    4. '   ' → logprob: -15.500027656555176
    5. '       ' → logprob: -15.875027656555176
    6. '(
' → logprob: -15.875027656555176
    7. ' (' → logprob: -16.12502670288086
    8. ' self' → logprob: -17.75002670288086
    9. 'def' → logprob: -17.87502670288086
    10. ' ' → logprob: -18.37502670288086

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03983840346336365
    2. 'self' → logprob: -3.2898383140563965
    3. '       ' → logprob: -6.4148383140563965
    4. '   ' → logprob: -9.914838790893555
    5. ' self' → logprob: -10.039838790893555
    6. ',self' → logprob: -11.039838790893555
    7. ' ,' → logprob: -11.289838790893555
    8. ')' → logprob: -11.539838790893555
    9. 'items' → logprob: -11.789838790893555
    10. ',
' → logprob: -12.289838790893555

Token 171: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.6600298285484314
    2. ' items' → logprob: -1.0350298881530762
    3. 'self' → logprob: -2.285029888153076
    4. ' self' → logprob: -3.660029888153076
    5. '       ' → logprob: -7.785029888153076
    6. ' ' → logprob: -11.535029411315918
    7. '   ' → logprob: -11.660029411315918
    8. '	items' → logprob: -12.535029411315918
    9. '.items' → logprob: -13.410029411315918
    10. '_items' → logprob: -14.035029411315918

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012928384239785373
    2. '):' → logprob: -9.125129699707031
    3. ')' → logprob: -11.375129699707031
    4. ' :' → logprob: -11.875129699707031
    5. '   ' → logprob: -14.250129699707031
    6. ' ):' → logprob: -14.375129699707031
    7. '):
' → logprob: -15.250129699707031
    8. '[' → logprob: -15.500129699707031
    9. ' )' → logprob: -16.87512969970703
    10. '```' → logprob: -16.87512969970703

Token 173: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.048602137714624405
    2. 'List' → logprob: -3.0486021041870117
    3. ' list' → logprob: -11.798602104187012
    4. '[List' → logprob: -12.673602104187012
    5. ')' → logprob: -13.298602104187012
    6. '   ' → logprob: -14.048602104187012
    7. 'list' → logprob: -14.548602104187012
    8. '       ' → logprob: -14.673602104187012
    9. ' ' → logprob: -15.423602104187012
    10. '	List' → logprob: -15.798602104187012

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. ')' → logprob: -13.500003814697266
    3. '[List' → logprob: -13.500003814697266
    4. '[
' → logprob: -14.625003814697266
    5. ' [' → logprob: -16.125003814697266
    6. '[int' → logprob: -16.750003814697266
    7. '```' → logprob: -16.875003814697266
    8. '[Serialize' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.250003814697266
    10. ' ' → logprob: -17.500003814697266

Token 175: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -8.180258191714529e-06
    2. ' Comparable' → logprob: -11.750008583068848
    3. 'Compatible' → logprob: -15.750008583068848
    4. 'Compar' → logprob: -17.87500762939453
    5. '   ' → logprob: -18.37500762939453
    6. 'Compared' → logprob: -18.62500762939453
    7. ' comparable' → logprob: -19.25000762939453
    8. 'Comparator' → logprob: -19.37500762939453
    9. ' ' → logprob: -19.75000762939453
    10. 'Composable' → logprob: -19.87500762939453

Token 176: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006725199054926634
    2. '])' → logprob: -5.006725311279297
    3. '   ' → logprob: -12.256725311279297
    4. ' )' → logprob: -13.131725311279297
    5. '>)' → logprob: -13.756725311279297
    6. '`)' → logprob: -14.631725311279297
    7. ']' → logprob: -15.006725311279297
    8. '")' → logprob: -15.381725311279297
    9. '})' → logprob: -15.506725311279297
    10. '))' → logprob: -15.631725311279297

Token 177: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5621880292892456
    2. '->' → logprob: -0.9371880292892456
    3. ')' → logprob: -3.312188148498535
    4. ':' → logprob: -6.437188148498535
    5. ')->' → logprob: -9.187188148498535
    6. '   ' → logprob: -9.312188148498535
    7. ' ' → logprob: -11.187188148498535
    8. ']' → logprob: -11.312188148498535
    9. '>' → logprob: -11.437188148498535
    10. '       ' → logprob: -11.437188148498535

Token 178: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.47600531578063965
    2. 'List' → logprob: -0.9760053157806396
    3. 'sorted' → logprob: -7.101005554199219
    4. ' sorted' → logprob: -7.101005554199219
    5. 'Sorted' → logprob: -8.351005554199219
    6. ' list' → logprob: -11.226005554199219
    7. 'list' → logprob: -11.476005554199219
    8. '[List' → logprob: -11.726005554199219
    9. ' Sorted' → logprob: -12.351005554199219
    10. ' ' → logprob: -12.976005554199219

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.491498531133402e-06
    2. '[int' → logprob: -12.000009536743164
    3. ':' → logprob: -13.750009536743164
    4. '[List' → logprob: -14.000009536743164
    5. '[
' → logprob: -14.000009536743164
    6. ']' → logprob: -16.500009536743164
    7. '[]' → logprob: -16.875009536743164
    8. ' [' → logprob: -17.000009536743164
    9. '[Index' → logprob: -17.000009536743164
    10. '[Int' → logprob: -17.625009536743164

Token 180: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -5.080963092041202e-06
    2. ' Comparable' → logprob: -12.375004768371582
    3. 'Compatible' → logprob: -14.250004768371582
    4. 'Compared' → logprob: -16.7500057220459
    5. 'Composable' → logprob: -17.6250057220459
    6. 'Compar' → logprob: -18.1250057220459
    7. ' ' → logprob: -18.7500057220459
    8. ' comparable' → logprob: -18.8750057220459
    9. 'Convertible' → logprob: -19.1250057220459
    10. 'Queryable' → logprob: -19.2500057220459

Token 181: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.759982705116272
    2. ':' → logprob: -1.384982705116272
    3. ']:' → logprob: -1.759982705116272
    4. '):
' → logprob: -2.6349825859069824
    5. ':
' → logprob: -3.5099825859069824
    6. ']:
' → logprob: -5.009982585906982
    7. '   ' → logprob: -7.509982585906982
    8. '):
' → logprob: -7.759982585906982
    9. '       ' → logprob: -8.25998306274414
    10. ')' → logprob: -9.00998306274414

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004953675088472664
    2. ' return' → logprob: -8.125494956970215
    3. 'return' → logprob: -9.250494956970215
    4. ' sorted' → logprob: -9.375494956970215
    5. 'sorted' → logprob: -11.625494956970215
    6. '      ' → logprob: -12.500494956970215
    7. '        ' → logprob: -13.000494956970215
    8. '   ' → logprob: -13.875494956970215
    9. '     ' → logprob: -14.375494956970215
    10. '    ' → logprob: -14.375494956970215

Token 183: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20638008415699005
    2. '       ' → logprob: -1.7063801288604736
    3. ' return' → logprob: -5.3313798904418945
    4. 'sorted' → logprob: -9.331379890441895
    5. 'items' → logprob: -11.331379890441895
    6. '   ' → logprob: -11.706379890441895
    7. ' sorted' → logprob: -12.956379890441895
    8. '      ' → logprob: -13.081379890441895
    9. 'result' → logprob: -13.456379890441895
    10. '```' → logprob: -14.331379890441895

Token 184: ' Highly' (ID: 60173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2009809911251068
    2. ' return' → logprob: -2.2009809017181396
    3. 'sorted' → logprob: -3.0759809017181396
    4. '       ' → logprob: -4.075981140136719
    5. ' sorted' → logprob: -5.200981140136719
    6. 'result' → logprob: -6.325981140136719
    7. ' result' → logprob: -7.950981140136719
    8. '   ' → logprob: -8.200981140136719
    9. 'items' → logprob: -9.200981140136719
    10. ' items' → logprob: -9.825981140136719

Token 185: ' abstract' (ID: 13004)
  Prédit: ' inefficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inefficient' → logprob: -0.07791909575462341
    2. 'ine' → logprob: -3.0779190063476562
    3. 'optimized' → logprob: -4.577919006347656
    4. 'custom' → logprob: -4.702919006347656
    5. 'efficient' → logprob: -5.827919006347656
    6. 'sorted' → logprob: -6.077919006347656
    7. 'ind' → logprob: -7.202919006347656
    8. 'un' → logprob: -7.702919006347656
    9. '       ' → logprob: -7.827919006347656
    10. '   ' → logprob: -8.202919006347656

Token 186: 'ed' (ID: 295)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044643182307481766
    2. 'return' → logprob: -3.7946431636810303
    3. ' return' → logprob: -3.9196431636810303
    4. '   ' → logprob: -8.16964340209961
    5. '        ' → logprob: -8.41964340209961
    6. ' sorted' → logprob: -8.41964340209961
    7. 'sorted' → logprob: -9.04464340209961
    8. ' items' → logprob: -9.04464340209961
    9. 'items' → logprob: -9.16964340209961
    10. '      ' → logprob: -9.54464340209961

Token 187: ' sorting' (ID: 51375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19353319704532623
    2. 'return' → logprob: -1.943533182144165
    3. ' return' → logprob: -3.443533182144165
    4. '   ' → logprob: -8.818532943725586
    5. '        
' → logprob: -8.818532943725586
    6. ' sorted' → logprob: -9.318532943725586
    7. 'items' → logprob: -9.318532943725586
    8. 'sorted' → logprob: -9.443532943725586
    9. '        ' → logprob: -10.068532943725586
    10. '      ' → logprob: -10.068532943725586

Token 188: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47502604126930237
    2. 'return' → logprob: -1.22502601146698
    3. ' return' → logprob: -2.9750261306762695
    4. 'items' → logprob: -4.9750261306762695
    5. '        
' → logprob: -4.9750261306762695
    6. '   ' → logprob: -5.1000261306762695
    7. '
' → logprob: -5.2250261306762695
    8. '    
' → logprob: -6.7250261306762695
    9. '        ' → logprob: -6.9750261306762695
    10. ':' → logprob: -7.2250261306762695

Token 189: ' built' (ID: 8113)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0326029472053051
    2. ' sorted' → logprob: -3.5326030254364014
    3. 'return' → logprob: -6.032602787017822
    4. '   ' → logprob: -8.28260326385498
    5. ' return' → logprob: -8.65760326385498
    6. 'reverse' → logprob: -11.78260326385498
    7. '       ' → logprob: -12.53260326385498
    8. '```' → logprob: -12.65760326385498
    9. '
' → logprob: -12.78260326385498
    10. ' ' → logprob: -14.15760326385498

Token 190: '-in' (ID: 4200)
  Prédit: '-in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-in' → logprob: -0.5590436458587646
    2. 'in' → logprob: -0.9340436458587646
    3. 'ins' → logprob: -3.4340436458587646
    4. '-' → logprob: -6.184043884277344
    5. 'int' → logprob: -8.309043884277344
    6. '```' → logprob: -8.309043884277344
    7. 'sorted' → logprob: -8.809043884277344
    8. '   ' → logprob: -9.434043884277344
    9. '-ins' → logprob: -9.684043884277344
    10. 'i' → logprob: -9.809043884277344

Token 191: ' for' (ID: 395)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.038720183074474335
    2. ' sorted' → logprob: -3.28872013092041
    3. '   ' → logprob: -7.66372013092041
    4. '(sorted' → logprob: -8.91372013092041
    5. 'return' → logprob: -10.66372013092041
    6. 'sort' → logprob: -10.78872013092041
    7. '.sorted' → logprob: -12.03872013092041
    8. 'reverse' → logprob: -12.41372013092041
    9. '_sorted' → logprob: -12.53872013092041
    10. '```' → logprob: -12.53872013092041

Token 192: ' simplicity' (ID: 57516)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5200175642967224
    2. 'sorted' → logprob: -1.1450176239013672
    3. ' reverse' → logprob: -3.270017623901367
    4. ' item' → logprob: -3.395017623901367
    5. ' items' → logprob: -5.270017623901367
    6. 'reverse' → logprob: -5.395017623901367
    7. 'item' → logprob: -6.395017623901367
    8. ' ' → logprob: -6.770017623901367
    9. ' key' → logprob: -7.270017623901367
    10. 'items' → logprob: -7.520017623901367

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01784471608698368
    2. 'return' → logprob: -4.1428446769714355
    3. ' return' → logprob: -6.3928446769714355
    4. '        
' → logprob: -10.267845153808594
    5. ':' → logprob: -10.517845153808594
    6. ':
' → logprob: -11.017845153808594
    7. ':return' → logprob: -11.267845153808594
    8. '   ' → logprob: -11.642845153808594
    9. '[::-' → logprob: -12.267845153808594
    10. ',' → logprob: -12.267845153808594

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009537547826766968
    2. 'return' → logprob: -4.759537696838379
    3. ' return' → logprob: -7.009537696838379
    4. '        
' → logprob: -12.134537696838379
    5. '   ' → logprob: -12.384537696838379
    6. '      ' → logprob: -13.134537696838379
    7. '        ' → logprob: -13.259537696838379
    8. 'items' → logprob: -13.634537696838379
    9. '```' → logprob: -14.009537696838379
    10. ' sorted' → logprob: -14.259537696838379

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00029995047952979803
    2. '       ' → logprob: -8.500300407409668
    3. ' return' → logprob: -9.250300407409668
    4. '   ' → logprob: -14.875300407409668
    5. 'sorted' → logprob: -17.37529945373535
    6. '	return' → logprob: -17.87529945373535
    7. 'ret' → logprob: -19.00029945373535
    8. 'result' → logprob: -19.25029945373535
    9. ' ' → logprob: -19.62529945373535
    10. '        
' → logprob: -19.75029945373535

Token 196: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0008087906171567738
    2. ' sorted' → logprob: -7.1258087158203125
    3. 'list' → logprob: -12.875808715820312
    4. '   ' → logprob: -13.875808715820312
    5. '(sorted' → logprob: -14.625808715820312
    6. '[' → logprob: -15.125808715820312
    7. '.sorted' → logprob: -16.750808715820312
    8. ' ' → logprob: -17.625808715820312
    9. 'Sorted' → logprob: -18.250808715820312
    10. '  ' → logprob: -18.375808715820312

Token 197: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -0.001173321157693863
    2. '(' → logprob: -6.751173496246338
    3. '(
' → logprob: -13.37617301940918
    4. 'items' → logprob: -13.87617301940918
    5. '(iter' → logprob: -15.12617301940918
    6. '(elements' → logprob: -16.75117301940918
    7. '(objects' → logprob: -16.75117301940918
    8. '((' → logprob: -17.12617301940918
    9. ' (' → logprob: -17.12617301940918
    10. '```' → logprob: -17.25117301940918

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. 'reverse' → logprob: -11.375017166137695
    3. ' ,' → logprob: -12.250017166137695
    4. '[::-' → logprob: -15.000017166137695
    5. '   ' → logprob: -16.500017166137695
    6. ')' → logprob: -16.625017166137695
    7. '(reverse' → logprob: -17.000017166137695
    8. '.reverse' → logprob: -17.500017166137695
    9. ' reverse' → logprob: -17.750017166137695
    10. ',key' → logprob: -18.500017166137695

Token 199: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.02975454181432724
    2. ' reverse' → logprob: -3.529754638671875
    3. '   ' → logprob: -12.654754638671875
    4. '       ' → logprob: -15.279754638671875
    5. 'key' → logprob: -15.404754638671875
    6. ' key' → logprob: -16.279754638671875
    7. ' ' → logprob: -16.279754638671875
    8. '           ' → logprob: -16.529754638671875
    9. '
' → logprob: -17.404754638671875
    10. '.reverse' → logprob: -17.779754638671875

Token 200: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00020699729793705046
    2. '=' → logprob: -8.50020694732666
    3. 'True' → logprob: -12.75020694732666
    4. ' True' → logprob: -15.00020694732666
    5. ' =' → logprob: -16.125207901000977
    6. ')' → logprob: -16.875207901000977
    7. '(True' → logprob: -17.125207901000977
    8. '   ' → logprob: -18.625207901000977
    9. '=False' → logprob: -19.375207901000977
    10. '=T' → logprob: -20.000207901000977

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -12.50001049041748
    3. '       ' → logprob: -12.50001049041748
    4. ' )' → logprob: -13.00001049041748
    5. '<|end|>' → logprob: -14.62501049041748
    6. ')return' → logprob: -15.50001049041748
    7. '   ' → logprob: -15.87501049041748
    8. '))' → logprob: -17.000011444091797
    9. ')}' → logprob: -17.875011444091797
    10. ')

' → logprob: -18.125011444091797

Token 202: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0001584850688232109
    2. '
' → logprob: -9.000158309936523
    3. ' class' → logprob: -11.000158309936523
    4. '<class' → logprob: -11.625158309936523
    5. '<|end|>' → logprob: -13.000158309936523
    6. '

' → logprob: -13.125158309936523
    7. '  
' → logprob: -13.500158309936523
    8. '"class' → logprob: -14.000158309936523
    9. '```' → logprob: -14.500158309936523
    10. '-class' → logprob: -14.875158309936523

Token 203: ' Input' (ID: 10090)
  Prédit: ' Asc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Asc' → logprob: -0.6989309787750244
    2. 'Ascending' → logprob: -0.6989309787750244
    3. 'class' → logprob: -5.448930740356445
    4. ' class' → logprob: -6.573930740356445
    5. 'Asc' → logprob: -10.948930740356445
    6. ' ascending' → logprob: -10.948930740356445
    7. ' Bubble' → logprob: -11.573930740356445
    8. 'Descending' → logprob: -12.448930740356445
    9. 'ascending' → logprob: -12.823930740356445
    10. ' Sort' → logprob: -12.948930740356445

Token 204: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.12227905541658401
    2. 'Strategy' → logprob: -3.997279167175293
    3. 'Data' → logprob: -4.122279167175293
    4. 'Manager' → logprob: -4.247279167175293
    5. 'Processor' → logprob: -4.247279167175293
    6. 'Reader' → logprob: -4.497279167175293
    7. 'Parser' → logprob: -4.622279167175293
    8. 'Context' → logprob: -5.247279167175293
    9. 'Sort' → logprob: -5.247279167175293
    10. 'Sorter' → logprob: -5.747279167175293

Token 205: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017656205454841256
    2. '(S' → logprob: -7.501765727996826
    3. '():' → logprob: -7.626765727996826
    4. '(' → logprob: -7.876765727996826
    5. ':
' → logprob: -8.001765251159668
    6. ' :' → logprob: -12.251765251159668
    7. '(Abstract' → logprob: -13.001765251159668
    8. '():
' → logprob: -14.751765251159668
    9. '):' → logprob: -15.126765251159668
    10. ' ():' → logprob: -15.126765251159668

Token 206: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.015301358886063099
    2. 'Protocol' → logprob: -4.26530122756958
    3. '):' → logprob: -7.26530122756958
    4. '):
' → logprob: -8.140301704406738
    5. ')' → logprob: -9.265301704406738
    6. 'abc' → logprob: -11.015301704406738
    7. '(' → logprob: -11.765301704406738
    8. ' ABC' → logprob: -11.890301704406738
    9. 'Abstract' → logprob: -12.390301704406738
    10. '```' → logprob: -12.515301704406738

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006917126476764679
    2. '):
' → logprob: -5.0069169998168945
    3. ':' → logprob: -9.131916999816895
    4. ')' → logprob: -9.381916999816895
    5. '):
' → logprob: -12.256916999816895
    6. '):

' → logprob: -12.881916999816895
    7. ' ):' → logprob: -14.006916999816895
    8. '   ' → logprob: -15.131916999816895
    9. '():' → logprob: -15.506916999816895
    10. '**' → logprob: -16.25691795349121

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018341571558266878
    2. ':' → logprob: -6.376834392547607
    3. '<|end|>' → logprob: -10.25183391571045
    4. ':
' → logprob: -10.37683391571045
    5. 'class' → logprob: -11.00183391571045
    6. ')' → logprob: -11.12683391571045
    7. '  ' → logprob: -11.62683391571045
    8. '):
' → logprob: -12.37683391571045
    9. '
' → logprob: -12.50183391571045
    10. 'def' → logprob: -13.12683391571045

Token 209: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10057444870471954
    2. '@' (adapté à ' @') → logprob: -2.350574493408203
    3. ' @' → logprob: -8.100574493408203
    4. 'def' → logprob: -10.100574493408203
    5. '
' → logprob: -11.350574493408203
    6. 'abstract' → logprob: -12.850574493408203
    7. '  ' → logprob: -12.975574493408203
    8. '    
' → logprob: -13.225574493408203
    9. '    ' → logprob: -13.475574493408203
    10. '@property' → logprob: -14.100574493408203

Token 210: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.1008713702030946e-06
    2. ' abstract' → logprob: -13.375001907348633
    3. 'abc' → logprob: -14.875001907348633
    4. 'staticmethod' → logprob: -16.000001907348633
    5. 'property' → logprob: -17.000001907348633
    6. 'classmethod' → logprob: -18.250001907348633
    7. 'ab' → logprob: -19.625001907348633
    8. '
' → logprob: -19.625001907348633
    9. '.abstract' → logprob: -20.625001907348633
    10. 'ABC' → logprob: -20.875001907348633

Token 211: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00027730545843951404
    2. '_method' → logprob: -8.250277519226074
    3. 'def' → logprob: -11.375277519226074
    4. 'classmethod' → logprob: -12.750277519226074
    5. 'abstract' → logprob: -14.500277519226074
    6. 'staticmethod' → logprob: -14.625277519226074
    7. '   ' → logprob: -15.250277519226074
    8. 'ethod' → logprob: -15.875277519226074
    9. ' method' → logprob: -16.000276565551758
    10. 'methods' → logprob: -16.375276565551758

Token 212: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04083429276943207
    2. '
' → logprob: -3.4158341884613037
    3. ' def' → logprob: -5.415834426879883
    4. '   ' → logprob: -5.915834426879883
    5. '	def' → logprob: -11.290834426879883
    6. '    
' → logprob: -12.040834426879883
    7. '<|end|>' → logprob: -14.790834426879883
    8. '  ' → logprob: -14.915834426879883
    9. '  
' → logprob: -15.165834426879883
    10. '_def' → logprob: -15.415834426879883

Token 213: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004049313720315695
    2. '
' → logprob: -5.754049301147461
    3. '   ' → logprob: -7.254049301147461
    4. ' def' → logprob: -8.754049301147461
    5. '	def' → logprob: -12.504049301147461
    6. '
' → logprob: -13.629049301147461
    7. '    
' → logprob: -15.379049301147461
    8. '```' → logprob: -15.504049301147461
    9. 'method' → logprob: -15.879049301147461
    10. '\' → logprob: -16.12904930114746

Token 214: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3306015716807451e-05
    2. '
' → logprob: -12.00001335144043
    3. 'method' → logprob: -12.87501335144043
    4. 'staticmethod' → logprob: -13.37501335144043
    5. 'classmethod' → logprob: -13.87501335144043
    6. ' def' → logprob: -13.87501335144043
    7. 'property' → logprob: -14.62501335144043
    8. 'abstract' → logprob: -15.37501335144043
    9. '   ' → logprob: -16.00001335144043
    10. 'abc' → logprob: -16.87501335144043

Token 215: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04303082078695297
    2. ' read' → logprob: -3.1680307388305664
    3. 'def' → logprob: -10.918030738830566
    4. '	read' → logprob: -12.418030738830566
    5. ' readline' → logprob: -12.793030738830566
    6. ' def' → logprob: -12.918030738830566
    7. '   ' → logprob: -14.043030738830566
    8. '.read' → logprob: -14.168030738830566
    9. 'rea' → logprob: -14.293030738830566
    10. ' ' → logprob: -14.668030738830566

Token 216: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012164250947535038
    2. '_input' → logprob: -7.501216411590576
    3. '()' → logprob: -8.251216888427734
    4. '_data' → logprob: -8.251216888427734
    5. 'self' → logprob: -9.251216888427734
    6. '_items' → logprob: -10.751216888427734
    7. '_line' → logprob: -12.501216888427734
    8. 'data' → logprob: -12.751216888427734
    9. '(' → logprob: -12.876216888427734
    10. 'input' → logprob: -13.001216888427734

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029439476784318686
    2. ',' → logprob: -6.502943992614746
    3. 'self' → logprob: -6.752943992614746
    4. '):' → logprob: -8.752943992614746
    5. '):
' → logprob: -10.252943992614746
    6. '   ' → logprob: -10.752943992614746
    7. ' )' → logprob: -10.877943992614746
    8. '_input' → logprob: -12.127943992614746
    9. 'input' → logprob: -12.377943992614746
    10. 'data' → logprob: -12.502943992614746

Token 218: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21505305171012878
    2. '()' → logprob: -2.465053081512451
    3. ' ->' → logprob: -3.090053081512451
    4. ')' → logprob: -3.465053081512451
    5. 'self' → logprob: -3.965053081512451
    6. '->' → logprob: -4.590053081512451
    7. '()->' → logprob: -6.465053081512451
    8. ' self' → logprob: -8.340052604675293
    9. ')->' → logprob: -8.465052604675293
    10. '       ' → logprob: -8.465052604675293

Token 219: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.012609132565557957
    2. ' List' → logprob: -4.512609004974365
    3. 'str' → logprob: -6.512609004974365
    4. ' str' → logprob: -10.137609481811523
    5. 'int' → logprob: -11.012609481811523
    6. 'None' → logprob: -11.887609481811523
    7. 'list' → logprob: -12.012609481811523
    8. '	List' → logprob: -12.512609481811523
    9. '[List' → logprob: -14.012609481811523
    10. ' ' → logprob: -14.637609481811523

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011134477332234383
    2. '[str' → logprob: -5.136134624481201
    3. '[int' → logprob: -5.261134624481201
    4. '[List' → logprob: -13.511134147644043
    5. '[Int' → logprob: -14.511134147644043
    6. '[String' → logprob: -14.886134147644043
    7. 'int' → logprob: -15.636134147644043
    8. '[Serialize' → logprob: -16.13613510131836
    9. '  ' → logprob: -16.38613510131836
    10. ' [' → logprob: -16.51113510131836

Token 221: 'Number' (ID: 3695)
  Prédit: 'Comparable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -0.005035813897848129
    2. 'str' → logprob: -6.005035877227783
    3. 'int' → logprob: -6.255035877227783
    4. 'Number' → logprob: -7.380035877227783
    5. ' Comparable' → logprob: -11.880035400390625
    6. 'Compatible' → logprob: -13.255035400390625
    7. 'Compar' → logprob: -14.255035400390625
    8. 'Str' → logprob: -14.755035400390625
    9. 'Readable' → logprob: -14.880035400390625
    10. ' str' → logprob: -15.255035400390625

Token 222: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0008879951201379299
    2. '"]:' → logprob: -7.750887870788574
    3. ']:
' → logprob: -8.375887870788574
    4. ']' → logprob: -8.875887870788574
    5. '):' → logprob: -9.875887870788574
    6. '']:' → logprob: -11.125887870788574
    7. '():' → logprob: -11.875887870788574
    8. ']:
' → logprob: -12.125887870788574
    9. ':' → logprob: -12.750887870788574
    10. '[' → logprob: -13.625887870788574

Token 223: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36589673161506653
    2. '...' → logprob: -1.3658967018127441
    3. ' pass' → logprob: -3.615896701812744
    4. 'pass' (adapté à ' pass') → logprob: -3.865896701812744
    5. ' ...' → logprob: -5.865896701812744
    6. '   ' → logprob: -8.115897178649902
    7. '...
' → logprob: -9.240897178649902
    8. '<|end|>' → logprob: -9.365897178649902
    9. '	pass' → logprob: -9.990897178649902
    10. ' ' → logprob: -11.365897178649902

Token 225: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10151252150535583
    2. '
' → logprob: -2.3515124320983887
    3. '

' → logprob: -6.726512432098389
    4. '<|end|>' → logprob: -9.351512908935547
    5. '```' → logprob: -12.476512908935547
    6. ' class' → logprob: -12.726512908935547
    7. '<class' → logprob: -12.851512908935547
    8. '
' → logprob: -12.976512908935547
    9. '  
' → logprob: -13.476512908935547
    10. '    
' → logprob: -13.601512908935547

Token 226: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000492268183734268
    2. '
' → logprob: -7.625492095947266
    3. '

' → logprob: -13.875492095947266
    4. '<|end|>' → logprob: -14.000492095947266
    5. 'from' → logprob: -14.250492095947266
    6. 'import' → logprob: -14.375492095947266
    7. ' class' → logprob: -15.000492095947266
    8. '<class' → logprob: -15.000492095947266
    9. '```' → logprob: -15.625492095947266
    10. '  
' → logprob: -15.625492095947266

Token 227: ' Console' (ID: 11404)
  Prédit: 'Console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Console' → logprob: -0.8706083297729492
    2. 'File' → logprob: -1.1206083297729492
    3. ' Console' → logprob: -2.245608329772949
    4. 'List' → logprob: -2.245608329772949
    5. ' List' → logprob: -4.245608329772949
    6. 'User' → logprob: -4.745608329772949
    7. 'Static' → logprob: -4.995608329772949
    8. ' File' → logprob: -5.370608329772949
    9. 'Random' → logprob: -5.620608329772949
    10. 'Concrete' → logprob: -7.245608329772949

Token 228: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.03804149478673935
    2. 'Reader' → logprob: -3.288041591644287
    3. 'Read' → logprob: -17.663042068481445
    4. '\Input' → logprob: -18.913042068481445
    5. '_input' → logprob: -19.163042068481445
    6. 'Writer' → logprob: -19.288042068481445
    7. 'input' → logprob: -19.288042068481445
    8. ' Input' → logprob: -19.663042068481445
    9. 'User' → logprob: -19.663042068481445
    10. '	Input' → logprob: -19.788042068481445

Token 229: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.0009144435753114522
    2. 'Input' → logprob: -7.000914573669434
    3. '(Input' → logprob: -12.875914573669434
    4. 'reader' → logprob: -15.000914573669434
    5. '(' → logprob: -17.250913619995117
    6. '_reader' → logprob: -17.250913619995117
    7. 'Read' → logprob: -17.625913619995117
    8. ' Reader' → logprob: -18.000913619995117
    9. '\Input' → logprob: -19.000913619995117
    10. 'Listener' → logprob: -19.125913619995117

Token 230: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03003544546663761
    2. '():' → logprob: -3.7800354957580566
    3. '(Input' → logprob: -5.155035495758057
    4. '(' → logprob: -7.280035495758057
    5. '(Abstract' → logprob: -8.655035018920898
    6. '):' → logprob: -9.905035018920898
    7. '(I' → logprob: -10.530035018920898
    8. ':
' → logprob: -11.155035018920898
    9. '(Console' → logprob: -11.405035018920898
    10. '>:' → logprob: -12.155035018920898

Token 231: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'reader' → logprob: -17.875
    3. '_reader' → logprob: -18.25
    4. 'Input' → logprob: -18.375
    5. 'Read' → logprob: -18.625
    6. ' Reader' → logprob: -20.125
    7. '-reader' → logprob: -20.25
    8. ')' → logprob: -20.625
    9. '.Reader' → logprob: -20.625
    10. '   ' → logprob: -20.875

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013466615928336978
    2. '):
' → logprob: -6.626346588134766
    3. ')' → logprob: -11.376346588134766
    4. ':' → logprob: -12.001346588134766
    5. '   ' → logprob: -13.501346588134766
    6. '):
' → logprob: -14.126346588134766
    7. '):

' → logprob: -15.376346588134766
    8. '[]):' → logprob: -15.626346588134766
    9. ' ):' → logprob: -15.876346588134766
    10. '():' → logprob: -15.876346588134766

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.47757811343763e-05
    2. ':' → logprob: -10.500044822692871
    3. ' def' → logprob: -11.250044822692871
    4. ':
' → logprob: -13.375044822692871
    5. 'def' → logprob: -13.625044822692871
    6. '
' → logprob: -15.000044822692871
    7. '	def' → logprob: -15.250044822692871
    8. '    
' → logprob: -15.375044822692871
    9. ',' → logprob: -15.500044822692871
    10. '<|end|>' → logprob: -15.750044822692871

Token 234: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048738498240709305
    2. ' def' → logprob: -3.048738479614258
    3. '   ' → logprob: -8.798738479614258
    4. '	def' → logprob: -15.673738479614258
    5. '
' → logprob: -18.673738479614258
    6. 'de' → logprob: -21.173738479614258
    7. ' ' → logprob: -21.548738479614258
    8. '```' → logprob: -22.298738479614258
    9. '  ' → logprob: -22.423738479614258
    10. 'import' → logprob: -23.298738479614258

Token 235: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.2454281598329544
    2. ' def' → logprob: -1.745428204536438
    3. 'read' → logprob: -3.2454280853271484
    4. 'def' → logprob: -5.495428085327148
    5. '_read' → logprob: -13.870428085327148
    6. ' ' → logprob: -13.995428085327148
    7. '   ' → logprob: -14.370428085327148
    8. '	read' → logprob: -15.495428085327148
    9. ' ' → logprob: -15.870428085327148
    10. '.read' → logprob: -16.49542808532715

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. 'self' → logprob: -15.875
    4. ' (' → logprob: -16.75
    5. '   ' → logprob: -18.75
    6. '       ' → logprob: -19.375
    7. '()' → logprob: -19.5
    8. '(s' → logprob: -19.5
    9. '(Self' → logprob: -20.25
    10. '(sel' → logprob: -20.75

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01623236946761608
    2. 'self' → logprob: -4.266232490539551
    3. '):
' → logprob: -6.641232490539551
    4. '):' → logprob: -7.266232490539551
    5. '   ' → logprob: -10.39123249053955
    6. '(self' → logprob: -11.39123249053955
    7. ' ' → logprob: -12.14123249053955
    8. '       ' → logprob: -12.39123249053955
    9. ' self' → logprob: -12.64123249053955
    10. '	self' → logprob: -12.76623249053955

Token 238: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -1.0196847915649414
    2. 'self' → logprob: -1.3946847915649414
    3. '(self' → logprob: -1.6446847915649414
    4. '->' → logprob: -2.2696847915649414
    5. ')' → logprob: -2.5196847915649414
    6. ' self' → logprob: -4.519684791564941
    7. '       ' → logprob: -6.394684791564941
    8. ')->' → logprob: -7.269684791564941
    9. '   ' → logprob: -7.394684791564941
    10. ':' → logprob: -8.394684791564941

Token 239: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.0463780015707016
    2. 'List' → logprob: -3.2963778972625732
    3. '[List' → logprob: -4.796378135681152
    4. ' [' → logprob: -10.296378135681152
    5. '[' → logprob: -12.046378135681152
    6. '[int' → logprob: -13.796378135681152
    7. ' []' → logprob: -14.421378135681152
    8. ' list' → logprob: -15.171378135681152
    9. ' ' → logprob: -15.421378135681152
    10. '[]' → logprob: -16.046377182006836

Token 240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '[
' → logprob: -12.875004768371582
    3. '[int' → logprob: -13.125004768371582
    4. '["' → logprob: -15.625004768371582
    5. 'Number' → logprob: -16.6250057220459
    6. '[List' → logprob: -16.7500057220459
    7. '(Number' → logprob: -17.1250057220459
    8. ' [' → logprob: -17.5000057220459
    9. '```' → logprob: -17.7500057220459
    10. '[(' → logprob: -18.0000057220459

Token 241: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9361264946837764e-07
    2. ' Number' → logprob: -16.0
    3. 'int' → logprob: -19.75
    4. 'number' → logprob: -20.875
    5. '_number' → logprob: -21.375
    6. '_Number' → logprob: -21.375
    7. '(Number' → logprob: -22.0
    8. '[' → logprob: -22.0
    9. '.Number' → logprob: -23.5
    10. '   ' → logprob: -23.875

Token 242: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.599128246307373
    2. '):
' → logprob: -1.599128246307373
    3. ':' → logprob: -2.099128246307373
    4. ':
' → logprob: -2.849128246307373
    5. '():' → logprob: -3.599128246307373
    6. '(self' → logprob: -3.974128246307373
    7. '():
' → logprob: -4.099128246307373
    8. '   ' → logprob: -6.224128246307373
    9. 'self' → logprob: -6.599128246307373
    10. '       ' → logprob: -7.224128246307373

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030140725430101156
    2. 'n' → logprob: -6.753014087677002
    3. ' n' → logprob: -7.878014087677002
    4. 'input' → logprob: -7.878014087677002
    5. 'num' → logprob: -8.378013610839844
    6. ' lines' → logprob: -8.753013610839844
    7. ' line' → logprob: -9.003013610839844
    8. 'numbers' → logprob: -9.128013610839844
    9. ' input' → logprob: -9.378013610839844
    10. 'line' → logprob: -9.753013610839844

Token 244: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2277376651763916
    2. 'n' → logprob: -1.6027376651763916
    3. ' input' → logprob: -2.4777376651763916
    4. 'numbers' → logprob: -2.7277376651763916
    5. 'nums' → logprob: -2.8527376651763916
    6. '       ' → logprob: -2.8527376651763916
    7. ' n' → logprob: -3.1027376651763916
    8. 'line' → logprob: -3.2277376651763916
    9. ' numbers' → logprob: -3.3527376651763916
    10. ' line' → logprob: -3.4777376651763916

Token 245: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.14709454774856567
    2. ' =' → logprob: -2.147094488143921
    3. '=' → logprob: -5.0220947265625
    4. '_data' → logprob: -5.1470947265625
    5. '()' → logprob: -6.2720947265625
    6. 'input' → logprob: -6.3970947265625
    7. 's' → logprob: -6.7720947265625
    8. '_line' → logprob: -7.0220947265625
    9. '_values' → logprob: -8.0220947265625
    10. '=input' → logprob: -8.0220947265625

Token 246: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02824508212506771
    2. '=' → logprob: -4.278244972229004
    3. ' =' → logprob: -4.778244972229004
    4. 's' → logprob: -6.153244972229004
    5. '(' → logprob: -6.403244972229004
    6. '_str' → logprob: -7.528244972229004
    7. '_line' → logprob: -7.903244972229004
    8. '()
' → logprob: -8.528244972229004
    9. '().' → logprob: -8.903244972229004
    10. '_data' → logprob: -9.403244972229004

Token 247: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196858361363411
    2. ' input' → logprob: -2.8119685649871826
    3. '[input' → logprob: -14.811968803405762
    4. '   ' → logprob: -15.686968803405762
    5. '(input' → logprob: -16.311967849731445
    6. '	input' → logprob: -16.561967849731445
    7. '<input' → logprob: -16.561967849731445
    8. '[' → logprob: -16.686967849731445
    9. '=input' → logprob: -17.186967849731445
    10. '```' → logprob: -17.311967849731445

Token 248: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05392208322882652
    2. '("' → logprob: -3.053922176361084
    3. '().' → logprob: -5.553922176361084
    4. '(' → logprob: -6.928922176361084
    5. '("(' → logprob: -9.053921699523926
    6. '("")' → logprob: -9.178921699523926
    7. '()
' → logprob: -9.303921699523926
    8. '("("' → logprob: -9.428921699523926
    9. '(">' → logprob: -10.178921699523926
    10. '('' → logprob: -10.678921699523926

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6090366244316101
    2. '.split' → logprob: -0.9840366244316101
    3. '.strip' → logprob: -3.359036684036255
    4. '().' → logprob: -3.484036684036255
    5. '.' → logprob: -4.734036445617676
    6. 'numbers' → logprob: -6.109036445617676
    7. '()' → logprob: -6.109036445617676
    8. 'split' → logprob: -6.859036445617676
    9. ' .' → logprob: -7.734036445617676
    10. ' numbers' → logprob: -7.984036445617676

Token 250: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.20899240672588348
    2. 'numbers' (adapté à ' numbers') → logprob: -2.2089924812316895
    3. ' values' → logprob: -3.0839924812316895
    4. ' nums' → logprob: -4.5839924812316895
    5. 'values' → logprob: -4.9589924812316895
    6. '       ' → logprob: -5.3339924812316895
    7. ' return' → logprob: -5.9589924812316895
    8. 'nums' → logprob: -6.0839924812316895
    9. ' parts' → logprob: -6.5839924812316895
    10. ' tokens' → logprob: -6.7089924812316895

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025013405829668045
    2. '=' → logprob: -6.377501487731934
    3. '_str' → logprob: -8.002501487731934
    4. '_strings' → logprob: -8.627501487731934
    5. '_values' → logprob: -8.877501487731934
    6. '_list' → logprob: -10.002501487731934
    7. ' ' → logprob: -10.127501487731934
    8. 's' → logprob: -10.752501487731934
    9. '_raw' → logprob: -11.627501487731934
    10. '_ids' → logprob: -11.752501487731934

Token 252: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5335332155227661
    2. '[' → logprob: -1.4085332155227661
    3. ' list' → logprob: -2.1585330963134766
    4. '[list' → logprob: -3.4085330963134766
    5. 'list' → logprob: -4.033533096313477
    6. '[List' → logprob: -6.658533096313477
    7. ' raw' → logprob: -7.533533096313477
    8. '[int' → logprob: -8.408533096313477
    9. 'raw' → logprob: -8.408533096313477
    10. '[line' → logprob: -9.283533096313477

Token 253: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9743012671824545e-05
    2. 'int' → logprob: -11.000020027160645
    3. ' Number' → logprob: -12.750020027160645
    4. '   ' → logprob: -16.500019073486328
    5. '(Number' → logprob: -20.000019073486328
    6. '       ' → logprob: -20.125019073486328
    7. 'Num' → logprob: -20.375019073486328
    8. '_Number' → logprob: -20.625019073486328
    9. '  ' → logprob: -21.375019073486328
    10. ' int' → logprob: -21.625019073486328

Token 254: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -15.750020027160645
    4. '(i' → logprob: -15.875020027160645
    5. '(value' → logprob: -15.875020027160645
    6. 'int' → logprob: -16.750019073486328
    7. '(num' → logprob: -17.000019073486328
    8. '(Number' → logprob: -17.250019073486328
    9. '(x' → logprob: -17.500019073486328
    10. '   ' → logprob: -18.125019073486328

Token 255: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12558415532112122
    2. '(num' → logprob: -2.375584125518799
    3. '(n' → logprob: -4.625584125518799
    4. '(token' → logprob: -4.875584125518799
    5. '(i' → logprob: -5.750584125518799
    6. '(s' → logprob: -6.625584125518799
    7. '(value' → logprob: -6.750584125518799
    8. '(part' → logprob: -7.000584125518799
    9. '(item' → logprob: -7.500584125518799
    10. 'x' → logprob: -8.875584602355957

Token 256: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010950922733172774
    2. ')' → logprob: -7.126095294952393
    3. '(x' → logprob: -8.501094818115234
    4. ' ))' → logprob: -9.626094818115234
    5. '.strip' → logprob: -11.751094818115234
    6. '))
' → logprob: -12.376094818115234
    7. '(' → logprob: -13.126094818115234
    8. '   ' → logprob: -13.376094818115234
    9. ' ' → logprob: -13.501094818115234
    10. ' )' → logprob: -14.251094818115234

Token 257: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20904067158699036
    2. '(x' → logprob: -2.209040641784668
    3. 'for' → logprob: -2.584040641784668
    4. '(' → logprob: -5.709040641784668
    5. ' (' → logprob: -10.709040641784668
    6. ' in' → logprob: -11.584040641784668
    7. '(i' → logprob: -12.334040641784668
    8. '   ' → logprob: -13.084040641784668
    9. ')' → logprob: -13.209040641784668
    10. '	for' → logprob: -13.459040641784668

Token 258: ' x' (ID: 1215)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.2014310657978058
    2. 'raw' → logprob: -1.7014310359954834
    3. 'x' → logprob: -11.451431274414062
    4. ' x' → logprob: -12.326431274414062
    5. '	raw' → logprob: -12.951431274414062
    6. ' ' → logprob: -15.826431274414062
    7. '_raw' → logprob: -16.201431274414062
    8. '(raw' → logprob: -16.451431274414062
    9. 'Raw' → logprob: -16.826431274414062
    10. '.raw' → logprob: -17.951431274414062

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00946611538529396
    2. 'in' → logprob: -5.009466171264648
    3. ' raw' → logprob: -6.259466171264648
    4. 'raw' → logprob: -7.134466171264648
    5. '(raw' → logprob: -10.384466171264648
    6. ' ' → logprob: -13.634466171264648
    7. '	raw' → logprob: -13.634466171264648
    8. '.raw' → logprob: -14.259466171264648
    9. '_raw' → logprob: -14.384466171264648
    10. '  ' → logprob: -14.384466171264648

Token 260: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.3868757486343384
    2. ' raw' → logprob: -1.1368757486343384
    3. '(raw' → logprob: -12.636876106262207
    4. '	raw' → logprob: -14.011876106262207
    5. '.raw' → logprob: -15.011876106262207
    6. '_raw' → logprob: -15.011876106262207
    7. ' ' → logprob: -17.38687515258789
    8. '/raw' → logprob: -17.76187515258789
    9. 'Raw' → logprob: -17.88687515258789
    10. '
' → logprob: -18.88687515258789

Token 261: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00067966926144436
    2. 'input' → logprob: -7.6256794929504395
    3. 'split' → logprob: -9.500679969787598
    4. 'raw' → logprob: -9.750679969787598
    5. 'Input' → logprob: -11.250679969787598
    6. '   ' → logprob: -11.875679969787598
    7. '_raw' → logprob: -12.000679969787598
    8. '       ' → logprob: -12.500679969787598
    9. ')' → logprob: -12.625679969787598
    10. 'import' → logprob: -13.000679969787598

Token 262: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.019725803285837173
    2. '.strip' → logprob: -4.019725799560547
    3. '.' → logprob: -7.019725799560547
    4. ' .' → logprob: -7.769725799560547
    5. '().' → logprob: -8.269725799560547
    6. 'split' → logprob: -13.269725799560547
    7. '.rstrip' → logprob: -16.144725799560547
    8. ' split' → logprob: -16.394725799560547
    9. '()' → logprob: -16.769725799560547
    10. '.Split' → logprob: -17.144725799560547

Token 263: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.250015258789062
    3. ' ().' → logprob: -13.125015258789062
    4. '(' → logprob: -19.000015258789062
    5. '('' → logprob: -19.750015258789062
    6. '()]' → logprob: -19.875015258789062
    7. '().'' → logprob: -20.000015258789062
    8. '.split' → logprob: -20.625015258789062
    9. ' ()' → logprob: -20.875015258789062
    10. '('').' → logprob: -21.000015258789062

Token 264: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.25
    3. 'spl' → logprob: -19.625
    4. '(split' → logprob: -19.875
    5. '.split' → logprob: -20.5
    6. 'plit' → logprob: -21.125
    7. 'sp' → logprob: -23.125
    8. 'strip' → logprob: -23.25
    9. 'rstrip' → logprob: -23.75
    10. 'replace' → logprob: -23.75

Token 265: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0009418348199687898
    2. '()' → logprob: -7.250941753387451
    3. '('' → logprob: -8.50094223022461
    4. '(' → logprob: -10.87594223022461
    5. '()]
' → logprob: -11.75094223022461
    6. '("' → logprob: -13.75094223022461
    7. '(',' → logprob: -15.25094223022461
    8. '())' → logprob: -15.75094223022461
    9. '()],' → logprob: -16.37594223022461
    10. ' ()' → logprob: -16.87594223022461

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000387535837944597
    2. '	' → logprob: -8.625387191772461
    3. 'return' → logprob: -8.625387191772461
    4. ' return' → logprob: -11.375387191772461
    5. '	return' → logprob: -12.250387191772461
    6. '        
' → logprob: -12.375387191772461
    7. '   ' → logprob: -12.750387191772461
    8. '      ' → logprob: -13.375387191772461
    9. '
' → logprob: -13.875387191772461
    10. '<|end|>' → logprob: -15.000387191772461

Token 267: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015272838994860649
    2. ' return' → logprob: -4.765272617340088
    3. '       ' → logprob: -5.015272617340088
    4. '	return' → logprob: -16.39027214050293
    5. '   ' → logprob: -16.64027214050293
    6. '      ' → logprob: -17.01527214050293
    7. '
' → logprob: -17.26527214050293
    8. ' ' → logprob: -17.26527214050293
    9. '```' → logprob: -18.01527214050293
    10. ':return' → logprob: -18.14027214050293

Token 268: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07552985101938248
    2. ' any' → logprob: -3.3255298137664795
    3. 'not' → logprob: -3.4505298137664795
    4. ' len' → logprob: -5.825530052185059
    5. 'any' → logprob: -6.575530052185059
    6. 'len' → logprob: -7.325530052185059
    7. ' all' → logprob: -10.325530052185059
    8. ' __' → logprob: -12.075530052185059
    9. '__' → logprob: -12.200530052185059
    10. 'numbers' → logprob: -12.700530052185059

Token 269: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -8.399378566537052e-05
    2. 'numbers' → logprob: -9.875083923339844
    3. '(' → logprob: -10.625083923339844
    4. '(number' → logprob: -12.250083923339844
    5. ' numbers' → logprob: -13.625083923339844
    6. ' (' → logprob: -13.750083923339844
    7. '(n' → logprob: -14.500083923339844
    8. '(raw' → logprob: -14.875083923339844
    9. '()' → logprob: -16.375083923339844
    10. '(items' → logprob: -16.500083923339844

Token 270: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2265373319387436
    2. ' ==' → logprob: -1.8515373468399048
    3. ')' → logprob: -3.8515372276306152
    4. '<' → logprob: -4.851537227630615
    5. ' >' → logprob: -4.851537227630615
    6. '==' → logprob: -5.601537227630615
    7. ' <=' → logprob: -6.726537227630615
    8. '<|end|>' → logprob: -6.851537227630615
    9. ' ' → logprob: -6.976537227630615
    10. '()<' → logprob: -7.476537227630615

Token 271: ' !=' (ID: 1666)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6681618094444275
    2. ' ==' → logprob: -0.7931618094444275
    3. ' >' → logprob: -4.043161869049072
    4. '==' → logprob: -4.793161869049072
    5. '<' → logprob: -5.293161869049072
    6. ' <=' → logprob: -6.418161869049072
    7. ' ' → logprob: -6.668161869049072
    8. '<|end|>' → logprob: -7.543161869049072
    9. '>' → logprob: -8.293161392211914
    10. ' %' → logprob: -9.168161392211914

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24071712791919708
    2. ' ' → logprob: -1.6157171726226807
    3. '5' → logprob: -4.740716934204102
    4. '1' → logprob: -5.990716934204102
    5. '10' → logprob: -6.115716934204102
    6. '2' → logprob: -7.740716934204102
    7. '3' → logprob: -7.865716934204102
    8. '6' → logprob: -8.365716934204102
    9. 'len' → logprob: -8.365716934204102
    10. '4' → logprob: -8.740716934204102

Token 273: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23079930245876312
    2. '5' → logprob: -2.2307991981506348
    3. 'len' → logprob: -3.3557991981506348
    4. '10' → logprob: -3.6057991981506348
    5. '1' → logprob: -4.730799198150635
    6. 'numbers' → logprob: -4.730799198150635
    7. '2' → logprob: -5.230799198150635
    8. '3' → logprob: -5.355799198150635
    9. 'int' → logprob: -5.480799198150635
    10. ' ' → logprob: -6.230799198150635

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003538417164236307
    2. ':
' → logprob: -5.878538608551025
    3. ' :' → logprob: -7.628538608551025
    4. ' or' → logprob: -8.503538131713867
    5. ':return' → logprob: -10.753538131713867
    6. ' :
' → logprob: -11.378538131713867
    7. '):' → logprob: -12.128538131713867
    8. ',' → logprob: -12.878538131713867
    9. ' and' → logprob: -14.378538131713867
    10. '.' → logprob: -14.628538131713867

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006336859660223126
    2. ' raise' → logprob: -7.750633716583252
    3. '            ' → logprob: -9.250633239746094
    4. 'raise' → logprob: -9.875633239746094
    5. '            
' → logprob: -10.750633239746094
    6. '          ' → logprob: -11.000633239746094
    7. '       ' → logprob: -13.000633239746094
    8. ',' → logprob: -13.000633239746094
    9. '	raise' → logprob: -13.000633239746094
    10. '   ' → logprob: -13.125633239746094

Token 276: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.062156904488801956
    2. 'raise' (adapté à ' raise') → logprob: -2.812156915664673
    3. '	raise' → logprob: -9.312156677246094
    4. '           ' → logprob: -9.687156677246094
    5. ' print' → logprob: -10.437156677246094
    6. 'print' → logprob: -12.562156677246094
    7. '            ' → logprob: -13.062156677246094
    8. '    ' → logprob: -15.062156677246094
    9. '   ' → logprob: -15.312156677246094
    10. '
' → logprob: -15.312156677246094

Token 277: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.014164221473038197
    2. 'Value' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.389163970947266
    4. '	Value' → logprob: -15.514163970947266
    5. '(Value' → logprob: -16.264163970947266
    6. 'value' → logprob: -16.639163970947266
    7. '```' → logprob: -17.014163970947266
    8. ' Runtime' → logprob: -17.139163970947266
    9. '_value' → logprob: -17.639163970947266
    10. '<Value' → logprob: -17.889163970947266

Token 278: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0622180737555027
    2. 'rror' → logprob: -2.812218189239502
    3. 'ror' → logprob: -8.437217712402344
    4. 'r' → logprob: -10.312217712402344
    5. 'SError' → logprob: -15.687217712402344
    6. 'LError' → logprob: -16.062217712402344
    7. 'Value' → logprob: -16.187217712402344
    8. 'ro' → logprob: -16.687217712402344
    9. 'n' → logprob: -16.687217712402344
    10. 'error' → logprob: -17.562217712402344

Token 279: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003408263437449932
    2. '(' → logprob: -8.000340461730957
    3. '('' → logprob: -12.250340461730957
    4. '(
' → logprob: -14.250340461730957
    5. '(f' → logprob: -17.375341415405273
    6. '()' → logprob: -18.375341415405273
    7. '"' → logprob: -18.750341415405273
    8. '("'' → logprob: -19.375341415405273
    9. '("")' → logprob: -19.750341415405273
    10. '(",' → logprob: -20.125341415405273

Token 280: 'Exactly' (ID: 91021)
  Prédit: 'Exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exactly' → logprob: -0.21783502399921417
    2. ' Exactly' → logprob: -2.217834949493408
    3. 'Expected' → logprob: -2.717834949493408
    4. 'Input' → logprob: -4.592834949493408
    5. 'Please' → logprob: -5.717834949493408
    6. ' Expected' → logprob: -5.967834949493408
    7. 'Five' → logprob: -6.217834949493408
    8. ' Five' → logprob: -6.467834949493408
    9. ' exactly' → logprob: -7.717834949493408
    10. 'Must' → logprob: -8.717835426330566

Token 281: ' five' (ID: 6468)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18436911702156067
    2. ' five' → logprob: -2.1843690872192383
    3. '5' → logprob: -2.9343690872192383
    4. 'five' → logprob: -5.934369087219238
    5. '    ' → logprob: -12.434369087219238
    6. 'Five' → logprob: -13.184369087219238
    7. ' cinco' → logprob: -13.559369087219238
    8. ' exactly' → logprob: -14.184369087219238
    9. ' vijf' → logprob: -14.684369087219238
    10. ' numbers' → logprob: -14.684369087219238

Token 282: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.023679593577980995
    2. ' integers' → logprob: -3.898679494857788
    3. 'numbers' → logprob: -5.773679733276367
    4. ' values' → logprob: -11.398679733276367
    5. 'inte' → logprob: -12.898679733276367
    6. ' elements' → logprob: -13.273679733276367
    7. ' space' → logprob: -13.398679733276367
    8. ' items' → logprob: -13.648679733276367
    9. '<|end|>' → logprob: -13.773679733276367
    10. 'space' → logprob: -13.898679733276367

Token 283: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.018575385212898254
    2. ' must' → logprob: -4.268575191497803
    3. ' required' → logprob: -5.643575191497803
    4. 'are' → logprob: -7.518575191497803
    5. 'required' → logprob: -8.768575668334961
    6. 'must' → logprob: -9.643575668334961
    7. ' should' → logprob: -10.268575668334961
    8. ' expected' → logprob: -10.268575668334961
    9. ' is' → logprob: -11.518575668334961
    10. ' were' → logprob: -11.518575668334961

Token 284: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.12811610102653503
    2. 'required' → logprob: -2.1281161308288574
    3. ' expected' → logprob: -7.003116130828857
    4. 'expected' → logprob: -8.2531156539917
    5. ' needed' → logprob: -11.8781156539917
    6. '	required' → logprob: -12.0031156539917
    7. '_required' → logprob: -13.7531156539917
    8. 'needed' → logprob: -14.0031156539917
    9. 'require' → logprob: -14.2531156539917
    10. ' ' → logprob: -14.5031156539917

Token 285: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.482219934463501
    2. '")' → logprob: -0.982219934463501
    3. '.")
' → logprob: -5.107219696044922
    4. '")
' → logprob: -6.357219696044922
    5. '!")' → logprob: -8.357219696044922
    6. ' for' → logprob: -10.107219696044922
    7. ',' → logprob: -10.232219696044922
    8. '.")

' → logprob: -12.732219696044922
    9. '.")
' → logprob: -13.232219696044922
    10. ' to' → logprob: -13.357219696044922

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013666658196598291
    2. '	' → logprob: -6.62636661529541
    3. 'return' → logprob: -11.12636661529541
    4. '   ' → logprob: -11.62636661529541
    5. '	return' → logprob: -11.87636661529541
    6. '	   ' → logprob: -12.87636661529541
    7. '        
' → logprob: -13.25136661529541
    8. '           ' → logprob: -13.87636661529541
    9. '<|end|>' → logprob: -13.87636661529541
    10. '      ' → logprob: -14.12636661529541

Token 287: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011166787706315517
    2. 'return' (adapté à ' return') → logprob: -4.511166572570801
    3. ' return' → logprob: -9.1361665725708
    4. '   ' → logprob: -12.0111665725708
    5. '	return' → logprob: -12.5111665725708
    6. '	' → logprob: -14.3861665725708
    7. '      ' → logprob: -14.6361665725708
    8. '           ' → logprob: -15.3861665725708
    9. '               ' → logprob: -17.261167526245117
    10. '        
' → logprob: -17.261167526245117

Token 288: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.048588961362838745
    2. ' numbers' → logprob: -3.048588991165161
    3. '(numbers' → logprob: -14.298588752746582
    4. 'number' → logprob: -14.798588752746582
    5. '   ' → logprob: -16.0485897064209
    6. '[' → logprob: -16.2985897064209
    7. 'self' → logprob: -17.1735897064209
    8. ' ' → logprob: -17.2985897064209
    9. 'num' → logprob: -17.2985897064209
    10. 'n' → logprob: -17.2985897064209

Token 289: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09227122366428375
    2. '<|end|>' → logprob: -2.717271327972412
    3. '
' → logprob: -3.842271327972412
    4. '```' → logprob: -8.342270851135254
    5. '

' → logprob: -8.717270851135254
    6. ' class' → logprob: -9.217270851135254
    7. '<|end|>' → logprob: -9.342270851135254
    8. 'newline' → logprob: -11.967270851135254
    9. '  
' → logprob: -12.092270851135254
    10. '#' → logprob: -12.217270851135254

Token 290: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.961759259458631e-06
    2. '
' → logprob: -13.125004768371582
    3. 'from' → logprob: -13.875004768371582
    4. '<|end|>' → logprob: -13.875004768371582
    5. ' class' → logprob: -15.250004768371582
    6. '```' → logprob: -15.500004768371582
    7. '  
' → logprob: -16.1250057220459
    8. 'numbers' → logprob: -16.2500057220459
    9. '#' → logprob: -16.3750057220459
    10. '    
' → logprob: -16.8750057220459

Token 291: ' Output' (ID: 18315)
  Prédit: 'Ascending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ascending' → logprob: -0.7055886387825012
    2. 'File' → logprob: -1.0805885791778564
    3. 'Sort' → logprob: -3.3305885791778564
    4. 'Random' → logprob: -3.7055885791778564
    5. 'Sorting' → logprob: -3.7055885791778564
    6. 'Descending' → logprob: -3.8305885791778564
    7. 'Sorter' → logprob: -4.0805888175964355
    8. 'Bubble' → logprob: -4.0805888175964355
    9. 'Sorted' → logprob: -4.9555888175964355
    10. ' Asc' → logprob: -5.5805888175964355

Token 292: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.003288466949015856
    2. 'Printer' → logprob: -5.753288269042969
    3. 'Handler' → logprob: -9.628288269042969
    4. 'Formatter' → logprob: -10.753288269042969
    5. 'Renderer' → logprob: -11.128288269042969
    6. 'Reader' → logprob: -13.503288269042969
    7. 'writer' → logprob: -13.628288269042969
    8. 'ter' → logprob: -13.753288269042969
    9. '_writer' → logprob: -14.003288269042969
    10. 'Processor' → logprob: -14.503288269042969

Token 293: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38055112957954407
    2. '(' → logprob: -1.2555510997772217
    3. '(Output' → logprob: -4.005551338195801
    4. ':
' → logprob: -4.505551338195801
    5. '(Abstract' → logprob: -6.630551338195801
    6. '(Console' → logprob: -7.130551338195801
    7. '(Input' → logprob: -9.3805513381958
    8. '():' → logprob: -10.1305513381958
    9. '(Print' → logprob: -10.5055513381958
    10. '(S' → logprob: -10.8805513381958

Token 294: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -3.4121114822482923e-06
    2. 'Output' → logprob: -13.625003814697266
    3. '(' → logprob: -13.875003814697266
    4. 'Protocol' → logprob: -15.000003814697266
    5. ')' → logprob: -15.375003814697266
    6. ' ABC' → logprob: -15.750003814697266
    7. 'abc' → logprob: -15.875003814697266
    8. 'AB' → logprob: -15.875003814697266
    9. 'Abstract' → logprob: -16.000003814697266
    10. '):
' → logprob: -16.125003814697266

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009708050638437271
    2. '):
' → logprob: -5.009707927703857
    3. ':' → logprob: -6.134707927703857
    4. ')' → logprob: -7.134707927703857
    5. '(' → logprob: -11.509708404541016
    6. '):

' → logprob: -12.259708404541016
    7. '):
' → logprob: -13.134708404541016
    8. '():' → logprob: -13.384708404541016
    9. '```' → logprob: -13.634708404541016
    10. '**' → logprob: -13.884708404541016

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010708003537729383
    2. '<|end|>' → logprob: -7.126070976257324
    3. 'class' → logprob: -8.751070976257324
    4. ':' → logprob: -10.876070976257324
    5. '  ' → logprob: -11.001070976257324
    6. '@' → logprob: -11.251070976257324
    7. ' ' → logprob: -11.376070976257324
    8. '```' → logprob: -11.876070976257324
    9. '<|end|>' → logprob: -11.876070976257324
    10. ')' → logprob: -12.126070976257324

Token 297: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.38709917664527893
    2. '   ' → logprob: -1.1370991468429565
    3. ' @' → logprob: -8.512099266052246
    4. 'abstract' → logprob: -11.262099266052246
    5. 'def' → logprob: -12.512099266052246
    6. '
' → logprob: -12.762099266052246
    7. '  ' → logprob: -13.262099266052246
    8. ' ' → logprob: -13.637099266052246
    9. '```' → logprob: -13.887099266052246
    10. '[' → logprob: -14.387099266052246

Token 298: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.320199877838604e-07
    2. ' abstract' → logprob: -15.125
    3. 'abc' → logprob: -16.625
    4. 'property' → logprob: -18.375
    5. 'staticmethod' → logprob: -19.375
    6. '.abstract' → logprob: -19.5
    7. 'ab' → logprob: -19.875
    8. 'Abstract' → logprob: -20.625
    9. 'output' → logprob: -21.125
    10. '
' → logprob: -21.5

Token 299: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -4.008129963040119e-06
    2. 'classmethod' → logprob: -13.000003814697266
    3. '_method' → logprob: -13.500003814697266
    4. 'def' → logprob: -15.750003814697266
    5. 'staticmethod' → logprob: -16.625003814697266
    6. 'methods' → logprob: -17.375003814697266
    7. ' method' → logprob: -18.250003814697266
    8. 'ethod' → logprob: -18.750003814697266
    9. '	method' → logprob: -18.875003814697266
    10. 'meth' → logprob: -19.000003814697266

Token 300: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03778175637125969
    2. '   ' → logprob: -3.5377817153930664
    3. ' def' → logprob: -4.912781715393066
    4. '
' → logprob: -7.412781715393066
    5. '	def' → logprob: -11.162781715393066
    6. 'method' → logprob: -11.912781715393066
    7. '<|end|>' → logprob: -11.912781715393066
    8. '    
' → logprob: -12.162781715393066
    9. '  ' → logprob: -12.912781715393066
    10. '```' → logprob: -13.537781715393066

Token 301: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02417728677392006
    2. '   ' → logprob: -3.774177312850952
    3. 'method' → logprob: -7.274177074432373
    4. '
' → logprob: -8.649177551269531
    5. ' def' → logprob: -10.524177551269531
    6. 'class' → logprob: -10.649177551269531
    7. '```' → logprob: -12.524177551269531
    8. '	def' → logprob: -12.649177551269531
    9. 'classmethod' → logprob: -13.399177551269531
    10. '  ' → logprob: -13.899177551269531

Token 302: ' def' (ID: 1056)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.018373750150203705
    2. 'def' (adapté à ' def') → logprob: -4.018373966217041
    3. 'method' → logprob: -9.018373489379883
    4. 'abc' → logprob: -10.268373489379883
    5. 'staticmethod' → logprob: -10.768373489379883
    6. 'classmethod' → logprob: -11.143373489379883
    7. '   ' → logprob: -11.143373489379883
    8. 'property' → logprob: -12.018373489379883
    9. '
' → logprob: -12.018373489379883
    10. ' abstract' → logprob: -12.893373489379883

Token 303: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.002811290556564927
    2. ' write' → logprob: -5.877811431884766
    3. 'print' → logprob: -12.752811431884766
    4. 'w' → logprob: -13.127811431884766
    5. '	write' → logprob: -14.377811431884766
    6. '.write' → logprob: -14.752811431884766
    7. '_write' → logprob: -15.877811431884766
    8. 'output' → logprob: -15.877811431884766
    9. ' ' → logprob: -16.502811431884766
    10. '   ' → logprob: -16.877811431884766

Token 304: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001342903997283429
    2. '(' → logprob: -9.000134468078613
    3. ' (' → logprob: -11.875134468078613
    4. 'self' → logprob: -13.000134468078613
    5. '(s' → logprob: -14.000134468078613
    6. '   ' → logprob: -15.000134468078613
    7. '(
' → logprob: -15.875134468078613
    8. ')' → logprob: -16.500133514404297
    9. ' ' → logprob: -16.750133514404297
    10. '(cls' → logprob: -16.750133514404297

Token 305: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024695901665836573
    2. ')' → logprob: -6.752469539642334
    3. ',' → logprob: -7.377469539642334
    4. 'self' → logprob: -7.877469539642334
    5. ')(' → logprob: -8.877470016479492
    6. ' (' → logprob: -9.002470016479492
    7. ' self' → logprob: -11.127470016479492
    8. '   ' → logprob: -12.002470016479492
    9. '(' → logprob: -12.877470016479492
    10. '       ' → logprob: -13.127470016479492

Token 306: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.014178323559463024
    2. ' items' → logprob: -4.889178276062012
    3. 'numbers' → logprob: -6.139178276062012
    4. 'output' → logprob: -6.639178276062012
    5. 'sorted' → logprob: -6.889178276062012
    6. 'data' → logprob: -7.014178276062012
    7. 'message' → logprob: -7.389178276062012
    8. 'result' → logprob: -8.514178276062012
    9. 'results' → logprob: -9.014178276062012
    10. 'text' → logprob: -9.889178276062012

Token 307: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018732868193183094
    2. ')' → logprob: -8.625186920166016
    3. '):' → logprob: -12.250186920166016
    4. '[' → logprob: -13.750186920166016
    5. ' )' → logprob: -14.750186920166016
    6. '   ' → logprob: -14.875186920166016
    7. ' :' → logprob: -15.000186920166016
    8. '[List' → logprob: -15.125186920166016
    9. '```' → logprob: -15.750186920166016
    10. ':)' → logprob: -16.500186920166016

Token 308: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -9.65101717156358e-05
    2. ' List' → logprob: -9.250096321105957
    3. '[List' → logprob: -15.500096321105957
    4. '	List' → logprob: -16.125097274780273
    5. 'list' → logprob: -18.125097274780273
    6. ')' → logprob: -18.625097274780273
    7. '   ' → logprob: -18.750097274780273
    8. ' ' → logprob: -19.750097274780273
    9. '<List' → logprob: -19.875097274780273
    10. '(List' → logprob: -19.875097274780273

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.670925358776003e-05
    2. ')' → logprob: -9.750066757202148
    3. '[int' → logprob: -12.375066757202148
    4. '[
' → logprob: -13.625066757202148
    5. '   ' → logprob: -14.000066757202148
    6. '[List' → logprob: -14.750066757202148
    7. '  ' → logprob: -15.500066757202148
    8. '       ' → logprob: -15.500066757202148
    9. '[Serialize' → logprob: -15.750066757202148
    10. 'Number' → logprob: -15.875066757202148

Token 310: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.3132794201374054
    2. 'Comparable' → logprob: -1.313279390335083
    3. 'Compatible' → logprob: -12.188279151916504
    4. 'number' → logprob: -12.688279151916504
    5. ' Comparable' → logprob: -12.938279151916504
    6. '[' → logprob: -14.063279151916504
    7. 'Compar' → logprob: -14.063279151916504
    8. 'Readable' → logprob: -14.188279151916504
    9. 'Composite' → logprob: -14.563279151916504
    10. 'Printable' → logprob: -14.563279151916504

Token 311: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03807671740651131
    2. ')' → logprob: -3.288076639175415
    3. ']):' → logprob: -11.288076400756836
    4. ']):
' → logprob: -11.788076400756836
    5. '"])' → logprob: -12.413076400756836
    6. '):' → logprob: -12.788076400756836
    7. ' ])' → logprob: -12.913076400756836
    8. '[' → logprob: -13.538076400756836
    9. '):
' → logprob: -13.788076400756836
    10. '")' → logprob: -14.288076400756836

Token 312: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')->' → logprob: -11.875024795532227
    3. ' )' → logprob: -11.875024795532227
    4. ':' → logprob: -12.500024795532227
    5. '   ' → logprob: -12.500024795532227
    6. ' ->' → logprob: -13.875024795532227
    7. '):' → logprob: -14.125024795532227
    8. '->' → logprob: -14.625024795532227
    9. '[' → logprob: -14.750024795532227
    10. '       ' → logprob: -15.500024795532227

Token 313: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16022492945194244
    2. ' None' → logprob: -1.9102249145507812
    3. 'str' → logprob: -15.160224914550781
    4. '   ' → logprob: -15.285224914550781
    5. ' str' → logprob: -15.285224914550781
    6. ' ' → logprob: -16.91022491455078
    7. 'none' → logprob: -18.66022491455078
    8. ')' → logprob: -19.53522491455078
    9. '(None' → logprob: -19.53522491455078
    10. '_None' → logprob: -19.53522491455078

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009587471140548587
    2. '<|end|>' → logprob: -7.3759589195251465
    3. '):' → logprob: -8.750958442687988
    4. ':
' → logprob: -8.875958442687988
    5. '       ' → logprob: -11.500958442687988
    6. '   ' → logprob: -11.750958442687988
    7. ' :' → logprob: -12.500958442687988
    8. ':def' → logprob: -12.875958442687988
    9. '():' → logprob: -12.875958442687988
    10. '<|end|>' → logprob: -13.625958442687988

Token 315: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027987537905573845
    2. '<|end|>' → logprob: -3.902987480163574
    3. '
' → logprob: -5.402987480163574
    4. '    
' → logprob: -6.277987480163574
    5. 'def' → logprob: -8.027987480163574
    6. '       ' → logprob: -9.027987480163574
    7. '<|end|>' → logprob: -9.152987480163574
    8. '  
' → logprob: -9.652987480163574
    9. ' 
' → logprob: -9.902987480163574
    10. '    ' → logprob: -9.902987480163574

Token 316: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025067783892154694
    2. ' pass' → logprob: -4.2750678062438965
    3. 'pass' (adapté à ' pass') → logprob: -4.5250678062438965
    4. '   ' → logprob: -12.400067329406738
    5. '      ' → logprob: -13.150067329406738
    6. 'abstract' → logprob: -13.150067329406738
    7. '	pass' → logprob: -14.025067329406738
    8. 'print' → logprob: -14.400067329406738
    9. 'raise' → logprob: -14.650067329406738
    10. '...' → logprob: -14.900067329406738

Token 317: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008184424950741231
    2. '
' → logprob: -7.125818252563477
    3. '<|end|>' → logprob: -11.500818252563477
    4. ' class' → logprob: -13.375818252563477
    5. '  
' → logprob: -13.875818252563477
    6. '<class' → logprob: -14.375818252563477
    7. '

' → logprob: -15.125818252563477
    8. ' 
' → logprob: -15.750818252563477
    9. '    
' → logprob: -16.250818252563477
    10. '```' → logprob: -16.750818252563477

Token 318: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.531315314830863e-06
    2. '
' → logprob: -12.875003814697266
    3. ' class' → logprob: -14.500003814697266
    4. '  
' → logprob: -16.000003814697266
    5. '<class' → logprob: -16.000003814697266
    6. '<|end|>' → logprob: -16.125003814697266
    7. '"class' → logprob: -17.375003814697266
    8. '    
' → logprob: -17.375003814697266
    9. ' 
' → logprob: -18.125003814697266
    10. 'classmethod' → logprob: -18.875003814697266

Token 319: ' Console' (ID: 11404)
  Prédit: 'Console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Console' → logprob: -0.0003843173326458782
    2. ' Console' → logprob: -8.500384330749512
    3. 'List' → logprob: -8.750384330749512
    4. 'Print' → logprob: -11.250384330749512
    5. 'Output' → logprob: -12.875384330749512
    6. 'Screen' → logprob: -13.500384330749512
    7. 'Descending' → logprob: -13.500384330749512
    8. 'Sorted' → logprob: -13.625384330749512
    9. 'Number' → logprob: -13.750384330749512
    10. 'Printer' → logprob: -14.875384330749512

Token 320: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.9361264946837764e-07
    2. 'Writer' → logprob: -16.875
    3. 'output' → logprob: -17.375
    4. 'Write' → logprob: -17.5
    5. 'Input' → logprob: -17.75
    6. ' Output' → logprob: -20.0
    7. '(Output' → logprob: -20.875
    8. '	Output' → logprob: -21.125
    9. '_output' → logprob: -21.625
    10. '.Output' → logprob: -21.875

Token 321: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.9361264946837764e-07
    2. 'Write' → logprob: -17.25
    3. 'writer' → logprob: -17.375
    4. 'Reader' → logprob: -17.5
    5. '_writer' → logprob: -18.25
    6. 'W' → logprob: -21.25
    7. '.Writer' → logprob: -21.875
    8. ' Writer' → logprob: -22.25
    9. 'Handler' → logprob: -22.5
    10. 'Wrapper' → logprob: -22.625

Token 322: '(Output' (ID: 132866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16934382915496826
    2. '(Output' → logprob: -2.044343948364258
    3. '(Console' → logprob: -4.044343948364258
    4. '(' → logprob: -4.794343948364258
    5. '(Abstract' → logprob: -8.294343948364258
    6. '():' → logprob: -9.294343948364258
    7. '(Input' → logprob: -9.669343948364258
    8. ':
' → logprob: -9.794343948364258
    9. '(Print' → logprob: -11.794343948364258
    10. '):' → logprob: -12.044343948364258

Token 323: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -6.0391463193809614e-05
    2. 'Output' → logprob: -9.750060081481934
    3. 'Reader' → logprob: -13.750060081481934
    4. 'Write' → logprob: -14.750060081481934
    5. '(Output' → logprob: -15.125060081481934
    6. 'W' → logprob: -15.875060081481934
    7. ')' → logprob: -16.50006103515625
    8. '_writer' → logprob: -17.00006103515625
    9. 'Handler' → logprob: -17.12506103515625
    10. '(' → logprob: -17.75006103515625

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04866151511669159
    2. '):
' → logprob: -3.048661470413208
    3. ')' → logprob: -9.923661231994629
    4. ':' → logprob: -11.423661231994629
    5. '):
' → logprob: -11.798661231994629
    6. '):

' → logprob: -12.548661231994629
    7. '   ' → logprob: -12.923661231994629
    8. ' ):' → logprob: -15.173661231994629
    9. ':
' → logprob: -16.423662185668945
    10. 'def' → logprob: -16.673662185668945

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023405285901390016
    2. ' def' → logprob: -8.62523365020752
    3. ':' → logprob: -10.37523365020752
    4. 'def' → logprob: -10.87523365020752
    5. '```' → logprob: -13.62523365020752
    6. '    
' → logprob: -14.25023365020752
    7. ':
' → logprob: -14.25023365020752
    8. '
' → logprob: -14.50023365020752
    9. '[' → logprob: -15.25023365020752
    10. '    ' → logprob: -15.62523365020752

Token 326: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.30043303966522217
    2. 'def' (adapté à ' def') → logprob: -1.5504330396652222
    3. '   ' → logprob: -3.0504331588745117
    4. '	def' → logprob: -11.925433158874512
    5. ' ' → logprob: -14.425433158874512
    6. '  ' → logprob: -15.425433158874512
    7. '
' → logprob: -15.675433158874512
    8. '```' → logprob: -15.800433158874512
    9. ' indentation' → logprob: -16.175432205200195
    10. ' ind' → logprob: -16.550432205200195

Token 327: ' write' (ID: 5067)
  Prédit: ' write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.16097111999988556
    2. 'write' → logprob: -1.9109711647033691
    3. ' def' → logprob: -7.410971164703369
    4. 'def' → logprob: -8.910970687866211
    5. '.write' → logprob: -12.660970687866211
    6. '_write' → logprob: -13.410970687866211
    7. '	write' → logprob: -14.160970687866211
    8. '```' → logprob: -14.535970687866211
    9. ' ' → logprob: -14.660970687866211
    10. '   ' → logprob: -15.035970687866211

Token 328: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -16.5
    3. '(' → logprob: -16.875
    4. '   ' → logprob: -17.625
    5. 'self' → logprob: -18.0
    6. '       ' → logprob: -19.0
    7. '(
' → logprob: -20.0
    8. ' ' → logprob: -20.375
    9. '[self' → logprob: -20.5
    10. '```' → logprob: -22.25

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041095416992902756
    2. 'self' → logprob: -3.791095495223999
    3. '(self' → logprob: -4.16609525680542
    4. '       ' → logprob: -6.54109525680542
    5. '   ' → logprob: -7.79109525680542
    6. ')' → logprob: -8.791095733642578
    7. ' (' → logprob: -10.291095733642578
    8. ' ,' → logprob: -10.291095733642578
    9. ',
' → logprob: -10.416095733642578
    10. '
' → logprob: -10.916095733642578

Token 330: ' items' (ID: 4732)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02926761843264103
    2. ' self' → logprob: -4.27926778793335
    3. 'items' → logprob: -4.27926778793335
    4. ' items' → logprob: -6.77926778793335
    5. '(self' → logprob: -15.654267311096191
    6. 'numbers' → logprob: -15.654267311096191
    7. '   ' → logprob: -16.654268264770508
    8. '       ' → logprob: -17.154268264770508
    9. ' ' → logprob: -17.154268264770508
    10. '.items' → logprob: -17.279268264770508

Token 331: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7007833123207092
    2. '(self' → logprob: -0.8257833123207092
    3. ':' → logprob: -3.3257832527160645
    4. ',' → logprob: -4.2007832527160645
    5. 'self' → logprob: -4.8257832527160645
    6. '       ' → logprob: -6.3257832527160645
    7. '   ' → logprob: -6.3257832527160645
    8. ' (' → logprob: -7.2007832527160645
    9. '```' → logprob: -7.3257832527160645
    10. '[self' → logprob: -7.4507832527160645

Token 332: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.078987717628479
    2. ' List' → logprob: -2.5789875984191895
    3. '[List' → logprob: -9.328988075256348
    4. 'self' → logprob: -12.703988075256348
    5. ' list' → logprob: -13.078988075256348
    6. 'list' → logprob: -13.203988075256348
    7. '[' → logprob: -13.328988075256348
    8. ' self' → logprob: -15.703988075256348
    9. '   ' → logprob: -15.953988075256348
    10. '       ' → logprob: -16.57898712158203

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.978233846486546e-05
    2. '[int' → logprob: -10.125049591064453
    3. ')' → logprob: -12.375049591064453
    4. '[List' → logprob: -12.875049591064453
    5. '[Index' → logprob: -14.125049591064453
    6. '):' → logprob: -14.375049591064453
    7. '):
' → logprob: -14.875049591064453
    8. '[
' → logprob: -14.875049591064453
    9. '[number' → logprob: -15.125049591064453
    10. 'Number' → logprob: -15.750049591064453

Token 334: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: 0.0
    2. ' Number' → logprob: -19.625
    3. '[' → logprob: -20.875
    4. '(Number' → logprob: -23.0
    5. 'Comparable' → logprob: -23.375
    6. 'number' → logprob: -23.5
    7. 'int' → logprob: -24.0
    8. '"' → logprob: -24.0
    9. '_Number' → logprob: -24.25
    10. ')' → logprob: -24.5

Token 335: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053855376318097115
    2. '])' → logprob: -5.255385398864746
    3. '):
' → logprob: -9.005385398864746
    4. '):' → logprob: -10.630385398864746
    5. ']):
' → logprob: -13.880385398864746
    6. '")' → logprob: -14.255385398864746
    7. '`)' → logprob: -14.255385398864746
    8. '   ' → logprob: -14.380385398864746
    9. ']' → logprob: -14.755385398864746
    10. '）' → logprob: -15.130385398864746

Token 336: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02983957715332508
    2. ':' → logprob: -4.154839515686035
    3. '       ' → logprob: -5.279839515686035
    4. ':
' → logprob: -5.404839515686035
    5. '   ' → logprob: -5.904839515686035
    6. ')' → logprob: -7.279839515686035
    7. 'self' → logprob: -8.654839515686035
    8. '):' → logprob: -8.779839515686035
    9. '):
' → logprob: -9.154839515686035
    10. '[self' → logprob: -9.654839515686035

Token 337: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.18037179112434387
    2. ' print' → logprob: -2.1803717613220215
    3. 'None' → logprob: -3.4303717613220215
    4. 'print' → logprob: -3.9303717613220215
    5. ' str' → logprob: -11.43037223815918
    6. 'Print' → logprob: -11.80537223815918
    7. '   ' → logprob: -11.93037223815918
    8. ' ' → logprob: -12.93037223815918
    9. ' Print' → logprob: -14.43037223815918
    10. ')' → logprob: -14.80537223815918

Token 338: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8521974086761475
    2. '(self' → logprob: -0.9771974086761475
    3. ':
' → logprob: -2.3521974086761475
    4. ':' → logprob: -2.3521974086761475
    5. '   ' → logprob: -5.477197647094727
    6. '(' → logprob: -7.102197647094727
    7. 'self' → logprob: -8.352197647094727
    8. '):
' → logprob: -8.477197647094727
    9. '(
' → logprob: -8.852197647094727
    10. '<|end|>' → logprob: -8.852197647094727

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020950057660229504
    2. ' for' → logprob: -8.75020980834961
    3. 'for' → logprob: -10.25020980834961
    4. 'print' → logprob: -11.50020980834961
    5. ' print' → logprob: -12.50020980834961
    6. '   ' → logprob: -13.75020980834961
    7. '      ' → logprob: -15.37520980834961
    8. '    ' → logprob: -15.75020980834961
    9. '	   ' → logprob: -16.37520980834961
    10. '```' → logprob: -16.37520980834961

Token 340: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015062438324093819
    2. ' print' → logprob: -4.26506233215332
    3. '       ' → logprob: -7.01506233215332
    4. 'for' → logprob: -15.64006233215332
    5. '```' → logprob: -16.01506233215332
    6. '	print' → logprob: -18.01506233215332
    7. ' for' → logprob: -18.51506233215332
    8. '   ' → logprob: -19.26506233215332
    9. '        
' → logprob: -20.39006233215332
    10. 'output' → logprob: -20.64006233215332

Token 341: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7646567225456238
    2. '(*' → logprob: -1.0146567821502686
    3. '('' → logprob: -1.7646567821502686
    4. '(' → logprob: -7.7646565437316895
    5. '([' → logprob: -8.764657020568848
    6. '(items' → logprob: -9.014657020568848
    7. '(",' → logprob: -11.389657020568848
    8. '(*(' → logprob: -11.639657020568848
    9. '(list' → logprob: -13.264657020568848
    10. ''' → logprob: -13.389657020568848

Token 342: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20543012022972107
    2. ''' → logprob: -1.7054301500320435
    3. ' ".' → logprob: -6.455430030822754
    4. 'sorted' → logprob: -6.955430030822754
    5. 'Sorted' → logprob: -7.455430030822754
    6. '".' → logprob: -7.830430030822754
    7. ' "' → logprob: -8.455430030822754
    8. 'Descending' → logprob: -10.205430030822754
    9. '*' → logprob: -10.455430030822754
    10. '",' → logprob: -10.580430030822754

Token 343: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. 'print' → logprob: -14.875000953674316
    3. 'j' → logprob: -15.125000953674316
    4. ' join' → logprob: -15.750000953674316
    5. 'write' → logprob: -15.750000953674316
    6. 'jo' → logprob: -15.875000953674316
    7. '".' → logprob: -16.250001907348633
    8. '.' → logprob: -16.750001907348633
    9. '.join' → logprob: -18.375001907348633
    10. '```' → logprob: -19.125001907348633

Token 344: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.007411159109324217
    2. '[str' → logprob: -5.257411003112793
    3. '(map' → logprob: -6.257411003112793
    4. 'str' → logprob: -8.507411003112793
    5. '([' → logprob: -10.257411003112793
    6. 'map' → logprob: -10.882411003112793
    7. '(re' → logprob: -13.382411003112793
    8. 'repr' → logprob: -13.632411003112793
    9. '```' → logprob: -16.63241195678711
    10. '=str' → logprob: -16.75741195678711

Token 345: '(n' (ID: 2406)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.07046906650066376
    2. '(num' → logprob: -3.0704691410064697
    3. '(x' → logprob: -4.570468902587891
    4. '(number' → logprob: -5.195468902587891
    5. '(i' → logprob: -5.945468902587891
    6. '(n' → logprob: -6.570468902587891
    7. 'item' → logprob: -6.695468902587891
    8. '(' → logprob: -7.945468902587891
    9. 'num' → logprob: -9.19546890258789
    10. 'number' → logprob: -11.07046890258789

Token 346: ')' (ID: 8)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08322317898273468
    2. '(item' → logprob: -2.9582231044769287
    3. ')' → logprob: -4.208223342895508
    4. 'item' → logprob: -5.083223342895508
    5. '(num' → logprob: -5.458223342895508
    6. '(i' → logprob: -6.583223342895508
    7. '(number' → logprob: -7.208223342895508
    8. 'num' → logprob: -8.958223342895508
    9. 'number' → logprob: -9.458223342895508
    10. '(x' → logprob: -9.583223342895508

Token 347: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03849617391824722
    2. '(item' → logprob: -3.288496255874634
    3. '(number' → logprob: -8.788496017456055
    4. '(num' → logprob: -9.038496017456055
    5. 'item' → logprob: -9.663496017456055
    6. '(i' → logprob: -10.413496017456055
    7. 'for' → logprob: -10.413496017456055
    8. ')' → logprob: -11.038496017456055
    9. '(x' → logprob: -11.288496017456055
    10. 'n' → logprob: -12.163496017456055

Token 348: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048590321093797684
    2. ' n' → logprob: -3.0485904216766357
    3. '_n' → logprob: -14.048590660095215
    4. ' in' → logprob: -14.423590660095215
    5. '<|end|>' → logprob: -14.423590660095215
    6. '	n' → logprob: -14.923590660095215
    7. '
' → logprob: -15.298590660095215
    8. '_' → logprob: -15.298590660095215
    9. '<|end|>' → logprob: -15.673590660095215
    10. ')n' → logprob: -16.9235897064209

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29391786456108093
    2. 'in' → logprob: -1.4189178943634033
    3. 'n' → logprob: -4.418917655944824
    4. ' n' → logprob: -7.418917655944824
    5. '<|end|>' → logprob: -10.793917655944824
    6. ')' → logprob: -11.543917655944824
    7. ')n' → logprob: -13.293917655944824
    8. ' ' → logprob: -13.293917655944824
    9. '<|end|>' → logprob: -13.418917655944824
    10. '
' → logprob: -14.168917655944824

Token 350: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0019287518225610256
    2. ' items' → logprob: -6.251928806304932
    3. '	items' → logprob: -16.376928329467773
    4. '.items' → logprob: -17.126928329467773
    5. '(items' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.751928329467773
    7. 'numbers' → logprob: -18.251928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '  ' → logprob: -20.251928329467773
    10. '_items' → logprob: -20.626928329467773

Token 351: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005628037615679204
    2. ')' → logprob: -7.50056266784668
    3. ')))' → logprob: -12.50056266784668
    4. '))
' → logprob: -12.75056266784668
    5. '       ' → logprob: -13.12556266784668
    6. '   ' → logprob: -14.62556266784668
    7. ' ))' → logprob: -14.87556266784668
    8. '),' → logprob: -15.75056266784668
    9. '()))' → logprob: -16.37556266784668
    10. ')}' → logprob: -16.62556266784668

Token 352: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008198728901334107
    2. 'if' → logprob: -7.625819683074951
    3. 'def' → logprob: -8.25082015991211
    4. '#' → logprob: -10.25082015991211
    5. 'from' → logprob: -10.50082015991211
    6. 'numbers' → logprob: -12.87582015991211
    7. 'items' → logprob: -13.12582015991211
    8. 'number' → logprob: -13.75082015991211
    9. 'n' → logprob: -14.87582015991211
    10. ' class' → logprob: -14.87582015991211

Token 353: ' Sorting' (ID: 152134)
  Prédit: 'Sorter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sorter' → logprob: -0.4186799228191376
    2. 'Sorting' → logprob: -1.79367995262146
    3. 'Sort' → logprob: -2.04367995262146
    4. 'Number' → logprob: -3.41867995262146
    5. 'Context' → logprob: -5.293679714202881
    6. 'Sorted' → logprob: -5.543679714202881
    7. 'Descending' → logprob: -6.543679714202881
    8. 'Sortable' → logprob: -7.293679714202881
    9. 'Processor' → logprob: -7.793679714202881
    10. 'Application' → logprob: -7.918679714202881

Token 354: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -0.01250942051410675
    2. 'Machine' → logprob: -5.012509346008301
    3. 'Client' → logprob: -5.887509346008301
    4. 'Manager' → logprob: -6.887509346008301
    5. 'Processor' → logprob: -7.512509346008301
    6. 'App' → logprob: -7.637509346008301
    7. 'System' → logprob: -8.0125093460083
    8. 'Service' → logprob: -8.5125093460083
    9. 'Application' → logprob: -8.8875093460083
    10. 'Strategy' → logprob: -9.6375093460083

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006181967910379171
    2. ':
' → logprob: -7.500617980957031
    3. '():' → logprob: -10.500617980957031
    4. '(S' → logprob: -10.875617980957031
    5. '(' → logprob: -11.125617980957031
    6. '(Abstract' → logprob: -13.125617980957031
    7. ':

' → logprob: -14.000617980957031
    8. '):' → logprob: -14.750617980957031
    9. '>:' → logprob: -16.00061798095703
    10. ':def' → logprob: -16.00061798095703

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006355931982398033
    2. ' def' → logprob: -7.750635623931885
    3. 'def' → logprob: -8.500635147094727
    4. '```' → logprob: -13.625635147094727
    5. '   ' → logprob: -15.250635147094727
    6. '	def' → logprob: -17.125635147094727
    7. '    
' → logprob: -17.625635147094727
    8. '    ' → logprob: -18.625635147094727
    9. 'class' → logprob: -18.875635147094727
    10. ':' → logprob: -19.500635147094727

Token 357: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.38695499300956726
    2. ' def' → logprob: -1.1369550228118896
    3. '   ' → logprob: -9.386955261230469
    4. 'class' → logprob: -15.761955261230469
    5. ' ' → logprob: -17.51195526123047
    6. '	def' → logprob: -17.76195526123047
    7. '```' → logprob: -18.63695526123047
    8. '    ' → logprob: -19.01195526123047
    9. 'strategy' → logprob: -19.26195526123047
    10. 'de' → logprob: -19.63695526123047

Token 358: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38724663853645325
    2. '__' → logprob: -1.1372466087341309
    3. 'init' → logprob: -8.012247085571289
    4. '_init' → logprob: -10.762247085571289
    5. 'def' → logprob: -11.512247085571289
    6. ' init' → logprob: -11.887247085571289
    7. ' def' → logprob: -13.137247085571289
    8. '___' → logprob: -13.512247085571289
    9. '.__' → logprob: -14.012247085571289
    10. '```' → logprob: -14.887247085571289

Token 359: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.0
    3. ' init' → logprob: -18.75
    4. '```' → logprob: -18.75
    5. 'inite' → logprob: -19.0
    6. '_init' → logprob: -19.25
    7. '
' → logprob: -20.0
    8. 'in' → logprob: -20.25
    9. 'innit' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 360: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -6.253713218029588e-05
    2. '__' → logprob: -10.000062942504883
    3. '(self' → logprob: -11.625062942504883
    4. '__(
' → logprob: -11.750062942504883
    5. '_(' → logprob: -15.250062942504883
    6. '__((' → logprob: -17.000062942504883
    7. '(' → logprob: -17.125062942504883
    8. '__('' → logprob: -17.625062942504883
    9. '__("' → logprob: -18.500062942504883
    10. ' (' → logprob: -18.875062942504883

Token 361: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.629921436891891e-05
    2. '
' → logprob: -11.00002670288086
    3. ' self' → logprob: -12.00002670288086
    4. '   ' → logprob: -13.50002670288086
    5. '       ' → logprob: -13.75002670288086
    6. '(self' → logprob: -14.62502670288086
    7. '    
' → logprob: -16.25002670288086
    8. ',' → logprob: -16.25002670288086
    9. ' ' → logprob: -17.25002670288086
    10. '
' → logprob: -17.50002670288086

Token 362: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.45774945616722107
    2. ',' → logprob: -1.4577494859695435
    3. 'self' → logprob: -2.582749366760254
    4. '__(' → logprob: -3.207749366760254
    5. ' (' → logprob: -4.207749366760254
    6. ' self' → logprob: -6.332749366760254
    7. '   ' → logprob: -7.457749366760254
    8. '__(
' → logprob: -7.832749366760254
    9. '       ' → logprob: -7.957749366760254
    10. '(
' → logprob: -8.457749366760254

Token 363: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.08313672989606857
    2. ' strategy' → logprob: -2.708136796951294
    3. 'sort' → logprob: -4.833136558532715
    4. 'self' → logprob: -5.458136558532715
    5. 'input' → logprob: -7.458136558532715
    6. 'sorting' → logprob: -9.083136558532715
    7. ' self' → logprob: -9.583136558532715
    8. ' sort' → logprob: -10.083136558532715
    9. 'reader' → logprob: -10.708136558532715
    10. '   ' → logprob: -10.833136558532715

Token 364: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.7689099018462e-05
    2. '):' → logprob: -9.50008773803711
    3. ')' → logprob: -11.50008773803711
    4. ' :' → logprob: -13.87508773803711
    5. '=None' → logprob: -14.00008773803711
    6. '):
' → logprob: -14.75008773803711
    7. '=' → logprob: -15.25008773803711
    8. ' ):' → logprob: -16.12508773803711
    9. '_:' → logprob: -16.75008773803711
    10. '```' → logprob: -17.12508773803711

Token 365: ' Sort' (ID: 25945)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.16022644937038422
    2. ' Sort' → logprob: -1.9102264642715454
    3. 'Sorting' → logprob: -13.160226821899414
    4. ' ' → logprob: -15.410226821899414
    5. ' Sorting' → logprob: -16.535226821899414
    6. ' sort' → logprob: -16.785226821899414
    7. 'Sorted' → logprob: -17.410226821899414
    8. '_sort' → logprob: -17.910226821899414
    9. 'sort' → logprob: -18.160226821899414
    10. 'Sorter' → logprob: -18.660226821899414

Token 366: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -6.704273118884885e-07
    2. 'ing' → logprob: -14.625000953674316
    3. '_strategy' → logprob: -16.875
    4. ' Strategy' → logprob: -17.0
    5. 'Strateg' → logprob: -18.0
    6. 'ategy' → logprob: -18.125
    7. 'strategy' → logprob: -18.5
    8. ' strategy' → logprob: -19.0
    9. 'Str' → logprob: -20.0
    10. 'Strategies' → logprob: -20.5

Token 367: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33800941705703735
    2. '):' → logprob: -1.3380093574523926
    3. '):
' → logprob: -3.7130093574523926
    4. ':' → logprob: -10.33800983428955
    5. ',' → logprob: -12.96300983428955
    6. '):
' → logprob: -13.21300983428955
    7. '   ' → logprob: -13.96300983428955
    8. '):

' → logprob: -14.08800983428955
    9. ' )' → logprob: -14.71300983428955
    10. ' ):' → logprob: -15.08800983428955

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018814420327544212
    2. ' self' → logprob: -4.643814563751221
    3. 'self' → logprob: -4.893814563751221
    4. '   ' → logprob: -6.643814563751221
    5. '    ' → logprob: -10.018814086914062
    6. ')' → logprob: -10.518814086914062
    7. '     ' → logprob: -11.018814086914062
    8. '        
' → logprob: -11.018814086914062
    9. '<|end|>' → logprob: -11.143814086914062
    10. '    
' → logprob: -11.393814086914062

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038725804537534714
    2. ' self' → logprob: -3.2887258529663086
    3. '       ' → logprob: -7.288725852966309
    4. '   ' → logprob: -14.163725852966309
    5. '	self' → logprob: -15.413725852966309
    6. ' ' → logprob: -18.538724899291992
    7. ' ' → logprob: -19.038724899291992
    8. '     ' → logprob: -19.038724899291992
    9. '(self' → logprob: -19.663724899291992
    10. '      ' → logprob: -19.788724899291992

Token 370: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.08083697408437729
    2. '.' → logprob: -2.5808370113372803
    3. 'strategy' → logprob: -6.330836772918701
    4. '._' → logprob: -9.83083724975586
    5. ' .' → logprob: -9.83083724975586
    6. ' strategy' → logprob: -10.08083724975586
    7. '.str' → logprob: -11.58083724975586
    8. '_strategy' → logprob: -12.45583724975586
    9. '(strategy' → logprob: -13.83083724975586
    10. 'strateg' → logprob: -14.58083724975586

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31330108642578125
    2. ' =' → logprob: -1.3133010864257812
    3. ' ' → logprob: -10.813301086425781
    4. '.' → logprob: -11.563301086425781
    5. '_' → logprob: -12.438301086425781
    6. '   ' → logprob: -13.188301086425781
    7. ')' → logprob: -14.563301086425781
    8. ':' → logprob: -14.688301086425781
    9. '_strategy' → logprob: -14.688301086425781
    10. '  ' → logprob: -15.063301086425781

Token 372: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.1269284337759018
    2. 'strategy' → logprob: -2.1269283294677734
    3. '(strategy' → logprob: -15.626928329467773
    4. 'strateg' → logprob: -16.251928329467773
    5. '.strategy' → logprob: -18.001928329467773
    6. '_strategy' → logprob: -18.876928329467773
    7. ' strategi' → logprob: -19.126928329467773
    8. 'strategie' → logprob: -19.251928329467773
    9. ' ' → logprob: -19.376928329467773
    10. ' strategie' → logprob: -20.126928329467773

Token 373: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18392132222652435
    2. '<|end|>' → logprob: -2.3089213371276855
    3. '   ' → logprob: -3.3089213371276855
    4. '    
' → logprob: -4.0589213371276855
    5. ' 
' → logprob: -5.3089213371276855
    6. '  
' → logprob: -5.8089213371276855
    7. ' def' → logprob: -5.9339213371276855
    8. 'def' → logprob: -6.0589213371276855
    9. '<|end|>' → logprob: -6.9339213371276855
    10. '   
' → logprob: -8.558920860290527

Token 374: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.031938910484314
    2. '   ' → logprob: -1.031938910484314
    3. 'def' → logprob: -1.781938910484314
    4. ' def' → logprob: -2.7819390296936035
    5. '<|end|>' → logprob: -3.0319390296936035
    6. '    
' → logprob: -5.6569390296936035
    7. '	def' → logprob: -6.2819390296936035
    8. '  
' → logprob: -6.9069390296936035
    9. ' 
' → logprob: -6.9069390296936035
    10. '<|end|>' → logprob: -7.7819390296936035

Token 375: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000553151941858232
    2. ' def' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.875553131103516
    4. '	def' → logprob: -19.125553131103516
    5. '
' → logprob: -20.750553131103516
    6. ' ' → logprob: -21.250553131103516
    7. '    
' → logprob: -22.500553131103516
    8. '```' → logprob: -22.750553131103516
    9. '  ' → logprob: -24.375553131103516
    10. 'self' → logprob: -24.625553131103516

Token 376: ' execute' (ID: 15792)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.014190422371029854
    2. ' sort' → logprob: -4.264190196990967
    3. 'execute' → logprob: -10.889190673828125
    4. 'set' → logprob: -12.639190673828125
    5. '_sort' → logprob: -13.139190673828125
    6. ' ' → logprob: -14.514190673828125
    7. 'def' → logprob: -14.514190673828125
    8. '   ' → logprob: -14.889190673828125
    9. '	sort' → logprob: -14.889190673828125
    10. 'apply' → logprob: -15.139190673828125

Token 377: '_sort' (ID: 43815)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003464532783254981
    2. '(' → logprob: -5.878464698791504
    3. '_sort' → logprob: -7.378464698791504
    4. '(
' → logprob: -11.003464698791504
    5. '(sort' → logprob: -12.128464698791504
    6. '(s' → logprob: -12.378464698791504
    7. ' (' → logprob: -12.753464698791504
    8. '   ' → logprob: -13.503464698791504
    9. '_' → logprob: -13.628464698791504
    10. 'sort' → logprob: -14.128464698791504

Token 378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011797507759183645
    2. '(' → logprob: -6.7511796951293945
    3. 'self' → logprob: -12.001179695129395
    4. 'ing' → logprob: -13.376179695129395
    5. ' (' → logprob: -13.501179695129395
    6. '   ' → logprob: -15.751179695129395
    7. '(
' → logprob: -16.00118064880371
    8. 'er' → logprob: -16.87618064880371
    9. '       ' → logprob: -17.00118064880371
    10. ' self' → logprob: -17.50118064880371

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.875031471252441
    3. 'self' → logprob: -11.375031471252441
    4. 'items' → logprob: -14.125031471252441
    5. '(items' → logprob: -16.125032424926758
    6. ')' → logprob: -16.625032424926758
    7. ',self' → logprob: -17.000032424926758
    8. ',List' → logprob: -17.000032424926758
    9. '   ' → logprob: -17.375032424926758
    10. ',list' → logprob: -17.500032424926758

Token 380: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.14434659481048584
    2. ' items' → logprob: -2.3943467140197754
    3. 'self' → logprob: -3.2693467140197754
    4. 'numbers' → logprob: -5.644346714019775
    5. ' self' → logprob: -6.644346714019775
    6. ' numbers' → logprob: -8.269346237182617
    7. 'data' → logprob: -10.394346237182617
    8. ' data' → logprob: -12.394346237182617
    9. '       ' → logprob: -12.519346237182617
    10. '   ' → logprob: -13.144346237182617

Token 381: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02000884711742401
    2. ')' → logprob: -4.2700090408325195
    3. '):' → logprob: -5.5200090408325195
    4. ',' → logprob: -6.6450090408325195
    5. '   ' → logprob: -7.8950090408325195
    6. '       ' → logprob: -9.39500904083252
    7. ' )' → logprob: -10.14500904083252
    8. ' :' → logprob: -11.52000904083252
    9. '```' → logprob: -12.39500904083252
    10. ' ):' → logprob: -12.89500904083252

Token 382: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.029763570055365562
    2. ' List' → logprob: -3.5297634601593018
    3. 'list' → logprob: -11.904763221740723
    4. ')' → logprob: -12.279763221740723
    5. '[List' → logprob: -13.904763221740723
    6. ' list' → logprob: -15.404763221740723
    7. '	List' → logprob: -15.529763221740723
    8. '   ' → logprob: -15.904763221740723
    9. ' ' → logprob: -16.40476417541504
    10. '_list' → logprob: -17.15476417541504

Token 383: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -12.75000286102295
    3. '[int' → logprob: -16.500003814697266
    4. '(' → logprob: -17.000003814697266
    5. '[List' → logprob: -17.125003814697266
    6. '[
' → logprob: -18.000003814697266
    7. '[Serialize' → logprob: -18.125003814697266
    8. '```' → logprob: -18.625003814697266
    9. ' [' → logprob: -18.875003814697266
    10. '):
' → logprob: -18.875003814697266

Token 384: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -0.00015920029545668513
    2. 'Number' → logprob: -8.75015926361084
    3. ' Comparable' → logprob: -14.50015926361084
    4. 'Compatible' → logprob: -15.25015926361084
    5. 'Compar' → logprob: -18.875158309936523
    6. 'Composable' → logprob: -20.375158309936523
    7. 'Compared' → logprob: -20.625158309936523
    8. 'Convertible' → logprob: -20.875158309936523
    9. 'Comparator' → logprob: -21.000158309936523
    10. ' comparable' → logprob: -21.125158309936523

Token 385: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. '])' → logprob: -10.625030517578125
    3. '")' → logprob: -12.750030517578125
    4. ' )' → logprob: -13.500030517578125
    5. '`)' → logprob: -13.875030517578125
    6. '   ' → logprob: -14.875030517578125
    7. ' ' → logprob: -16.250030517578125
    8. '）' → logprob: -16.250030517578125
    9. '})' → logprob: -16.750030517578125
    10. '))' → logprob: -17.000030517578125

Token 386: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9214940071105957
    2. '->' → logprob: -0.9214940071105957
    3. ')' → logprob: -1.9214940071105957
    4. ')->' → logprob: -3.5464940071105957
    5. ' ->' → logprob: -3.6714940071105957
    6. '):' → logprob: -5.796494007110596
    7. '   ' → logprob: -8.546493530273438
    8. '       ' → logprob: -9.171493530273438
    9. '()->' → logprob: -10.046493530273438
    10. ' )->' → logprob: -10.421493530273438

Token 387: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2519505023956299
    2. ' List' → logprob: -1.5019505023956299
    3. 'list' → logprob: -11.50195026397705
    4. 'self' → logprob: -11.75195026397705
    5. ' list' → logprob: -12.87695026397705
    6. ' self' → logprob: -14.50195026397705
    7. '[List' → logprob: -15.62695026397705
    8. '_list' → logprob: -15.75195026397705
    9. '	List' → logprob: -17.251951217651367
    10. 'return' → logprob: -17.626951217651367

Token 388: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.250015258789062
    3. '[List' → logprob: -13.875015258789062
    4. '[int' → logprob: -15.125015258789062
    5. '[
' → logprob: -15.250015258789062
    6. '<' → logprob: -15.375015258789062
    7. '[...]' → logprob: -16.000015258789062
    8. '   ' → logprob: -16.375015258789062
    9. '```' → logprob: -16.750015258789062
    10. '<|end|>' → logprob: -16.750015258789062

Token 389: 'Comparable' (ID: 118000)
  Prédit: 'Comparable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparable' → logprob: -5.080963092041202e-06
    2. 'Compatible' → logprob: -12.750004768371582
    3. ' Comparable' → logprob: -13.125004768371582
    4. 'Compared' → logprob: -17.0000057220459
    5. 'Convertible' → logprob: -17.7500057220459
    6. 'Compar' → logprob: -18.1250057220459
    7. 'Composable' → logprob: -18.2500057220459
    8. ' comparable' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.7500057220459
    10. 'Callable' → logprob: -19.7500057220459

Token 390: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030586393550038338
    2. '):
' → logprob: -3.5305864810943604
    3. ':' → logprob: -8.155586242675781
    4. ']:' → logprob: -8.405586242675781
    5. ')' → logprob: -8.530586242675781
    6. '   ' → logprob: -9.405586242675781
    7. '):
' → logprob: -10.530586242675781
    8. ':
' → logprob: -11.655586242675781
    9. ']:
' → logprob: -13.030586242675781
    10. '       ' → logprob: -13.280586242675781

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013387739658355713
    2. 'return' → logprob: -5.013387680053711
    3. ' return' → logprob: -5.013387680053711
    4. '```' → logprob: -14.513387680053711
    5. '
' → logprob: -14.763387680053711
    6. '   ' → logprob: -15.013387680053711
    7. '{return' → logprob: -15.513387680053711
    8. '	return' → logprob: -15.888387680053711
    9. '      ' → logprob: -16.63838768005371
    10. '	' → logprob: -16.76338768005371

Token 392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012368128227535635
    2. ' return' → logprob: -9.250123977661133
    3. '       ' → logprob: -10.500123977661133
    4. 'self' → logprob: -18.875123977661133
    5. '	return' → logprob: -20.125123977661133
    6. '   ' → logprob: -22.000123977661133
    7. '{return' → logprob: -22.250123977661133
    8. '```' → logprob: -22.625123977661133
    9. 'ret' → logprob: -24.250123977661133
    10. ':return' → logprob: -24.500123977661133

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715728435665369
    2. ' self' → logprob: -5.006715774536133
    3. '       ' → logprob: -14.881715774536133
    4. '   ' → logprob: -17.506715774536133
    5. '	self' → logprob: -18.006715774536133
    6. '(self' → logprob: -18.506715774536133
    7. '[self' → logprob: -19.631715774536133
    8. ' ' → logprob: -19.881715774536133
    9. '```' → logprob: -21.631715774536133
    10. ' ' → logprob: -21.881715774536133

Token 394: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0004510493890848011
    2. 'strategy' → logprob: -7.75045108795166
    3. '.' → logprob: -10.87545108795166
    4. '.str' → logprob: -13.75045108795166
    5. ' .' → logprob: -15.75045108795166
    6. ' strategy' → logprob: -16.625450134277344
    7. '(strategy' → logprob: -17.250450134277344
    8. 'strateg' → logprob: -17.500450134277344
    9. 'Strategy' → logprob: -18.250450134277344
    10. '.policy' → logprob: -19.125450134277344

Token 395: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01108389999717474
    2. '.' → logprob: -4.511084079742432
    3. ' .' → logprob: -10.261083602905273
    4. '.sorted' → logprob: -14.636083602905273
    5. ').' → logprob: -16.011083602905273
    6. 'sort' → logprob: -16.136083602905273
    7. '.s' → logprob: -16.886083602905273
    8. '.execute' → logprob: -17.011083602905273
    9. '.perform' → logprob: -17.136083602905273
    10. '.solve' → logprob: -17.511083602905273

Token 396: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. 'items' → logprob: -14.500075340270996
    4. ' (' → logprob: -15.750075340270996
    5. '(objects' → logprob: -17.125076293945312
    6. '(
' → logprob: -17.250076293945312
    7. '(tokens' → logprob: -17.375076293945312
    8. ' items' → logprob: -18.500076293945312
    9. '(events' → logprob: -19.000076293945312
    10. '(points' → logprob: -19.125076293945312

Token 397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '   ' → logprob: -12.25001335144043
    3. '       ' → logprob: -12.75001335144043
    4. ' )' → logprob: -12.87501335144043
    5. '(items' → logprob: -13.25001335144043
    6. 'items' → logprob: -14.37501335144043
    7. ')
' → logprob: -14.75001335144043
    8. '))' → logprob: -15.62501335144043
    9. '[' → logprob: -16.50001335144043
    10. ' ' → logprob: -16.62501335144043

Token 398: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38315361738204956
    2. 'def' → logprob: -1.2581536769866943
    3. '#' → logprob: -3.5081536769866943
    4. '```' → logprob: -7.008153438568115
    5. '
' → logprob: -7.133153438568115
    6. 'items' → logprob: -7.633153438568115
    7. 'numbers' → logprob: -7.633153438568115
    8. 'input' → logprob: -7.758153438568115
    9. 'number' → logprob: -7.883153438568115
    10. '<|end|>' → logprob: -8.883153915405273

Token 399: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -6.968934758333489e-05
    2. 'main' → logprob: -9.750069618225098
    3. ' run' → logprob: -11.625069618225098
    4. ' process' → logprob: -13.625069618225098
    5. ' solve' → logprob: -14.750069618225098
    6. '	main' → logprob: -15.250069618225098
    7. ' sort' → logprob: -15.625069618225098
    8. '_main' → logprob: -16.125070571899414
    9. ' perform' → logprob: -17.375070571899414
    10. ' m' → logprob: -17.500070571899414

Token 400: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.47626737493556e-05
    2. ' ():' → logprob: -10.37503433227539
    3. '()' → logprob: -13.00003433227539
    4. '():
' → logprob: -13.62503433227539
    5. '(' → logprob: -18.00003433227539
    6. '()>' → logprob: -18.50003433227539
    7. ':' → logprob: -18.62503433227539
    8. '():
' → logprob: -18.87503433227539
    9. '()->' → logprob: -19.00003433227539
    10. '().' → logprob: -19.12503433227539

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020324920769780874
    2. ' reader' → logprob: -7.002032279968262
    3. 'input' → logprob: -7.502032279968262
    4. 'reader' → logprob: -7.627032279968262
    5. ' input' → logprob: -9.752032279968262
    6. '   ' → logprob: -12.252032279968262
    7. '```' → logprob: -12.502032279968262
    8. 'console' → logprob: -12.752032279968262
    9. '_reader' → logprob: -12.877032279968262
    10. '	reader' → logprob: -13.377032279968262

Token 402: ' input' (ID: 3422)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.14484311640262604
    2. 'input' (adapté à ' input') → logprob: -3.019843101501465
    3. ' reader' → logprob: -3.019843101501465
    4. '   ' → logprob: -3.394843101501465
    5. ' input' → logprob: -5.644843101501465
    6. '       ' → logprob: -10.019843101501465
    7. 'try' → logprob: -10.644843101501465
    8. 'console' → logprob: -10.644843101501465
    9. '	reader' → logprob: -11.019843101501465
    10. 'strategy' → logprob: -12.144843101501465

Token 403: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.00018685187387745827
    2. 'Reader' → logprob: -8.750186920166016
    3. 'reader' → logprob: -10.875186920166016
    4. '()' → logprob: -12.250186920166016
    5. '_data' → logprob: -13.625186920166016
    6. '_' → logprob: -14.000186920166016
    7. '_writer' → logprob: -14.250186920166016
    8. 'er' → logprob: -14.500186920166016
    9. '_numbers' → logprob: -14.500186920166016
    10. '=' → logprob: -15.625186920166016

Token 404: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -15.883614540100098
    4. '   ' → logprob: -17.508615493774414
    5. ' =
' → logprob: -18.508615493774414
    6. '  ' → logprob: -18.758615493774414
    7. '()' → logprob: -19.133615493774414
    8. ' ' → logprob: -19.508615493774414
    9. ':' → logprob: -20.008615493774414
    10. ')' → logprob: -20.258615493774414

Token 405: ' Input' (ID: 10090)
  Prédit: ' Console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Console' → logprob: -0.019409000873565674
    2. 'Console' → logprob: -4.3944091796875
    3. ' Input' → logprob: -5.0194091796875
    4. 'Input' → logprob: -8.5194091796875
    5. ' =' → logprob: -10.3944091796875
    6. '=' → logprob: -10.6444091796875
    7. '	Console' → logprob: -12.1444091796875
    8. '   ' → logprob: -12.3944091796875
    9. ' console' → logprob: -13.7694091796875
    10. '(Console' → logprob: -14.1444091796875

Token 406: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -7.896309739408025e-07
    2. 'Writer' → logprob: -14.750000953674316
    3. '_reader' → logprob: -15.125000953674316
    4. 'Readers' → logprob: -17.875
    5. ' Reader' → logprob: -18.625
    6. '.Reader' → logprob: -18.875
    7. 'Reading' → logprob: -19.375
    8. 'Handler' → logprob: -19.75
    9. 'Read' → logprob: -19.875
    10. '=' → logprob: -20.375

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. '   ' → logprob: -14.063262939453125
    4. ' ' → logprob: -14.813262939453125
    5. '=input' → logprob: -17.313262939453125
    6. '=
' → logprob: -17.688262939453125
    7. '=

' → logprob: -18.188262939453125
    8. ')' → logprob: -18.188262939453125
    9. ' =
' → logprob: -18.313262939453125
    10. '    ' → logprob: -18.438262939453125

Token 408: ' Console' (ID: 11404)
  Prédit: ' Console'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Console' → logprob: -0.6931681632995605
    2. 'Console' → logprob: -0.6931681632995605
    3. '	Console' → logprob: -11.443168640136719
    4. '   ' → logprob: -11.943168640136719
    5. '(Console' → logprob: -12.568168640136719
    6. '.Console' → logprob: -15.693168640136719
    7. ' console' → logprob: -17.06816864013672
    8. ' ' → logprob: -17.19316864013672
    9. '    ' → logprob: -17.31816864013672
    10. ' ' → logprob: -17.44316864013672

Token 409: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'In' → logprob: -19.625
    3. 'Inp' → logprob: -20.625
    4. '	Input' → logprob: -21.375
    5. '\Input' → logprob: -22.125
    6. ' Input' → logprob: -22.5
    7. 'I' → logprob: -22.625
    8. '```' → logprob: -22.625
    9. '<Input' → logprob: -22.875
    10. '_input' → logprob: -22.875

Token 410: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -2.5776860184123507e-06
    2. 'reader' → logprob: -13.12500286102295
    3. 'Input' → logprob: -15.00000286102295
    4. '_reader' → logprob: -16.000001907348633
    5. 'Writer' → logprob: -18.375001907348633
    6. '.Reader' → logprob: -18.625001907348633
    7. '-reader' → logprob: -19.250001907348633
    8. ' Reader' → logprob: -20.375001907348633
    9. ' reader' → logprob: -20.625001907348633
    10. 'Read' → logprob: -20.625001907348633

Token 411: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024769625160843134
    2. '()
' → logprob: -6.002477169036865
    3. '()
' → logprob: -14.377476692199707
    4. '   ' → logprob: -15.002476692199707
    5. '()`' → logprob: -16.002477645874023
    6. '()\' → logprob: -16.127477645874023
    7. '()

' → logprob: -16.627477645874023
    8. ' ()' → logprob: -17.377477645874023
    9. '())' → logprob: -18.002477645874023
    10. '()"' → logprob: -18.502477645874023

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017001720843836665
    2. 'output' → logprob: -6.626700401306152
    3. '
' → logprob: -8.876700401306152
    4. 'items' → logprob: -9.501700401306152
    5. 'input' → logprob: -9.751700401306152
    6. '    
' → logprob: -10.001700401306152
    7. ' output' → logprob: -10.251700401306152
    8. ' items' → logprob: -12.001700401306152
    9. 'numbers' → logprob: -12.626700401306152
    10. '```' → logprob: -12.751700401306152

Token 413: ' numbers' (ID: 8663)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.09668285399675369
    2. 'numbers' (adapté à ' numbers') → logprob: -2.8466827869415283
    3. 'items' → logprob: -4.346683025360107
    4. 'sort' → logprob: -5.221683025360107
    5. 'sorting' → logprob: -5.221683025360107
    6. ' output' → logprob: -5.596683025360107
    7. '   ' → logprob: -6.221683025360107
    8. ' numbers' → logprob: -6.221683025360107
    9. 'input' → logprob: -6.596683025360107
    10. 'strategy' → logprob: -6.971683025360107

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0181526318192482
    2. '=' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.518152236938477
    4. '.' → logprob: -14.518152236938477
    5. ':' → logprob: -15.268152236938477
    6. ' ' → logprob: -15.768152236938477
    7. ')' → logprob: -15.893152236938477
    8. ',' → logprob: -16.893152236938477
    9. ' :' → logprob: -17.018152236938477
    10. ' ' → logprob: -17.143152236938477

Token 415: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687965273857117
    2. ' input' → logprob: -1.1368796825408936
    3. '   ' → logprob: -11.761879920959473
    4. 'Input' → logprob: -14.636879920959473
    5. '(input' → logprob: -16.011878967285156
    6. '	input' → logprob: -16.011878967285156
    7. '=input' → logprob: -16.636878967285156
    8. '_input' → logprob: -17.261878967285156
    9. '[input' → logprob: -17.261878967285156
    10. '<input' → logprob: -17.511878967285156

Token 416: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -2.7729658540920354e-05
    2. '_writer' → logprob: -10.500027656555176
    3. 'reader' → logprob: -16.875028610229492
    4. '_runner' → logprob: -17.875028610229492
    5. '_re' → logprob: -18.000028610229492
    6. '_receiver' → logprob: -19.125028610229492
    7. 'Reader' → logprob: -19.250028610229492
    8. '_' → logprob: -20.000028610229492
    9. '   ' → logprob: -20.000028610229492
    10. '_parser' → logprob: -20.250028610229492

Token 417: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -2.939851037808694e-05
    2. '.' → logprob: -10.500029563903809
    3. 'read' → logprob: -13.500029563903809
    4. ' .' → logprob: -14.750029563903809
    5. '.readline' → logprob: -16.625028610229492
    6. '.readlines' → logprob: -19.625028610229492
    7. '.Read' → logprob: -19.750028610229492
    8. '.write' → logprob: -20.000028610229492
    9. '.re' → logprob: -20.125028610229492
    10. '   ' → logprob: -20.625028610229492

Token 418: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8444881536415778e-05
    2. '()
' → logprob: -10.500028610229492
    3. ' ()' → logprob: -15.250028610229492
    4. '()

' → logprob: -15.625028610229492
    5. '()<' → logprob: -16.250028610229492
    6. '()]' → logprob: -16.500028610229492
    7. '()`' → logprob: -16.625028610229492
    8. '()
' → logprob: -16.625028610229492
    9. '()\' → logprob: -17.625028610229492
    10. '（）' → logprob: -17.875028610229492

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04032845422625542
    2. ' sorting' → logprob: -3.5403285026550293
    3. 'sorting' → logprob: -4.915328502655029
    4. ' strategy' → logprob: -6.665328502655029
    5. ' sorter' → logprob: -7.540328502655029
    6. ' sort' → logprob: -7.540328502655029
    7. 'sort' → logprob: -7.915328502655029
    8. 'strategy' → logprob: -8.415328025817871
    9. '    
' → logprob: -9.415328025817871
    10. '
' → logprob: -9.790328025817871

Token 420: ' sorter' (ID: 174966)
  Prédit: 'sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorting' → logprob: -0.3536893129348755
    2. 'sort' → logprob: -1.6036893129348755
    3. '   ' → logprob: -3.353689193725586
    4. 'strategy' → logprob: -3.478689193725586
    5. ' sorting' → logprob: -4.353689193725586
    6. 'context' → logprob: -4.353689193725586
    7. ' sorter' → logprob: -6.353689193725586
    8. 'descending' → logprob: -6.728689193725586
    9. ' sort' → logprob: -6.978689193725586
    10. ' strategy' → logprob: -6.978689193725586

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5852966904640198
    2. ':' → logprob: -0.8352966904640198
    3. '=' → logprob: -4.710296630859375
    4. ' :' → logprob: -8.085296630859375
    5. ' ' → logprob: -13.835296630859375
    6. '   ' → logprob: -13.960296630859375
    7. ' :=' → logprob: -14.835296630859375
    8. '_context' → logprob: -15.335296630859375
    9. '=context' → logprob: -15.460296630859375
    10. ':=' → logprob: -15.585296630859375

Token 422: ' Sorting' (ID: 152134)
  Prédit: ' Sorting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sorting' → logprob: -0.501814603805542
    2. 'Sorting' → logprob: -1.001814603805542
    3. 'Descending' → logprob: -3.626814603805542
    4. ' Desc' → logprob: -7.251814842224121
    5. ' Sort' → logprob: -10.376814842224121
    6. '   ' → logprob: -12.501814842224121
    7. 'Sort' → logprob: -12.501814842224121
    8. ' sorting' → logprob: -12.751814842224121
    9. ' descending' → logprob: -13.376814842224121
    10. ' Sorted' → logprob: -13.751814842224121

Token 423: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -2.081584716506768e-05
    2. 'Strategy' → logprob: -10.875020980834961
    3. 'context' → logprob: -13.875020980834961
    4. 'Descending' → logprob: -15.125020980834961
    5. '_context' → logprob: -15.625020980834961
    6. '(' → logprob: -15.750020980834961
    7. '	Context' → logprob: -16.25002098083496
    8. '(Context' → logprob: -16.50002098083496
    9. '_Context' → logprob: -16.62502098083496
    10. 'Ctx' → logprob: -16.87502098083496

Token 424: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042114028474316
    2. '(
' → logprob: -8.375421524047852
    3. '(strategy' → logprob: -8.625421524047852
    4. 'Descending' → logprob: -11.750421524047852
    5. '(S' → logprob: -14.000421524047852
    6. '(desc' → logprob: -14.375421524047852
    7. 'strategy' → logprob: -14.750421524047852
    8. '((' → logprob: -15.250421524047852
    9. '(s' → logprob: -15.375421524047852
    10. '(

' → logprob: -15.500421524047852

Token 425: 'Descending' (ID: 104384)
  Prédit: 'Descending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Descending' → logprob: -6.704273118884885e-07
    2. 'Ascending' → logprob: -14.875000953674316
    3. ' Desc' → logprob: -16.125
    4. 'Desc' → logprob: -16.5
    5. ')' → logprob: -17.625
    6. 'descending' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. 'strategy' → logprob: -18.5
    9. '(' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 426: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: 0.0
    2. 'sort' → logprob: -19.5
    3. ')' → logprob: -19.625
    4. 'Sorting' → logprob: -19.875
    5. ' Sort' → logprob: -20.375
    6. '_sort' → logprob: -20.5
    7. '(S' → logprob: -20.875
    8. 'S' → logprob: -21.0
    9. ' sort' → logprob: -21.125
    10. '```' → logprob: -21.5

Token 427: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0033563014585524797
    2. 'ing' → logprob: -6.128356456756592
    3. 'ategy' → logprob: -6.753356456756592
    4. 'strategy' → logprob: -14.128355979919434
    5. 'g' → logprob: -14.503355979919434
    6. 'ng' → logprob: -14.753355979919434
    7. '_strategy' → logprob: -14.753355979919434
    8. ' Strategy' → logprob: -15.003355979919434
    9. 'eg' → logprob: -15.503355979919434
    10. '   ' → logprob: -15.878355979919434

Token 428: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05092807859182358
    2. '())
' → logprob: -3.0509281158447266
    3. '()' → logprob: -6.300928115844727
    4. ')' → logprob: -7.675928115844727
    5. '()
' → logprob: -10.550928115844727
    6. '())
' → logprob: -11.675928115844727
    7. ')
' → logprob: -12.675928115844727
    8. '())

' → logprob: -13.550928115844727
    9. ' ())' → logprob: -15.800928115844727
    10. '(' → logprob: -16.175928115844727

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045200303429737687
    2. 'sorted' → logprob: -8.000452041625977
    3. 'result' → logprob: -10.500452041625977
    4. '```' → logprob: -10.750452041625977
    5. ' sorted' → logprob: -11.000452041625977
    6. '    
' → logprob: -11.250452041625977
    7. 'results' → logprob: -11.250452041625977
    8. '
' → logprob: -11.375452041625977
    9. 'output' → logprob: -11.875452041625977
    10. ' result' → logprob: -13.500452041625977

Token 430: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' (adapté à ' sorted') → logprob: -0.0002509687910787761
    2. 'result' → logprob: -8.750250816345215
    3. ' sorted' → logprob: -9.500250816345215
    4. '   ' → logprob: -11.000250816345215
    5. 'results' → logprob: -15.000250816345215
    6. 'Sorted' → logprob: -15.875250816345215
    7. '    
' → logprob: -15.875250816345215
    8. ' result' → logprob: -16.25025177001953
    9. 'descending' → logprob: -16.75025177001953
    10. 'numbers' → logprob: -16.87525177001953

Token 431: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.004132661037147045
    2. 'numbers' → logprob: -5.5041327476501465
    3. '_nums' → logprob: -11.004132270812988
    4. '_items' → logprob: -11.004132270812988
    5. '_list' → logprob: -11.629132270812988
    6. '_' → logprob: -12.129132270812988
    7. '=' → logprob: -12.879132270812988
    8. '_results' → logprob: -13.879132270812988
    9. '(numbers' → logprob: -14.379132270812988
    10. ' =' → logprob: -14.504132270812988

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519293427467346
    2. '=' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.251930236816406
    4. ')' → logprob: -17.126930236816406
    5. ' ' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.376930236816406
    7. 's' → logprob: -17.626930236816406
    8. '_' → logprob: -18.376930236816406
    9. ':' → logprob: -18.501930236816406
    10. ' =)' → logprob: -18.876930236816406

Token 433: ' sorter' (ID: 174966)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.3870297372341156
    2. ' sorter' → logprob: -1.137029767036438
    3. ' sort' → logprob: -8.887029647827148
    4. 'sorted' → logprob: -11.387029647827148
    5. '(sort' → logprob: -12.762029647827148
    6. '   ' → logprob: -13.262029647827148
    7. '	sort' → logprob: -13.512029647827148
    8. ' sortir' → logprob: -14.012029647827148
    9. 'Sorter' → logprob: -14.512029647827148
    10. ' sorted' → logprob: -14.637029647827148

Token 434: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -0.0017072015907615423
    2. '.' → logprob: -6.376707077026367
    3. ' .' → logprob: -12.876707077026367
    4. 'execute' → logprob: -13.376707077026367
    5. '._' → logprob: -14.751707077026367
    6. '   ' → logprob: -16.001707077026367
    7. '.exec' → logprob: -16.126707077026367
    8. '_execute' → logprob: -16.501707077026367
    9. '.perform' → logprob: -17.376707077026367
    10. '.exe' → logprob: -17.376707077026367

Token 435: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.500004768371582
    3. 'sort' → logprob: -15.000004768371582
    4. '_sorted' → logprob: -15.875004768371582
    5. ' _' → logprob: -16.000003814697266
    6. '_s' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. '_SORT' → logprob: -17.500003814697266
    9. '
' → logprob: -17.750003814697266
    10. '_print' → logprob: -18.375003814697266

Token 436: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -3.5358694731257856e-05
    2. '(items' → logprob: -10.375035285949707
    3. '(' → logprob: -12.875035285949707
    4. '(sorted' → logprob: -14.250035285949707
    5. '(n' → logprob: -15.000035285949707
    6. '(nums' → logprob: -15.750035285949707
    7. '(number' → logprob: -16.125036239624023
    8. ' (' → logprob: -16.250036239624023
    9. 'numbers' → logprob: -16.625036239624023
    10. '(objects' → logprob: -16.875036239624023

Token 437: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '   ' → logprob: -13.62500286102295
    3. ' )' → logprob: -13.75000286102295
    4. ')
' → logprob: -14.50000286102295
    5. ' ' → logprob: -17.250003814697266
    6. '))' → logprob: -18.250003814697266
    7. ')

' → logprob: -18.375003814697266
    8. '  ' → logprob: -18.875003814697266
    9. ')`' → logprob: -19.000003814697266
    10. '[' → logprob: -19.125003814697266

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004693994123954326
    2. 'output' → logprob: -8.875469207763672
    3. 'Console' → logprob: -9.125469207763672
    4. ' output' → logprob: -9.750469207763672
    5. ' Console' → logprob: -9.875469207763672
    6. '```' → logprob: -9.875469207763672
    7. 'Output' → logprob: -10.750469207763672
    8. '  ' → logprob: -11.250469207763672
    9. '
' → logprob: -11.625469207763672
    10. ' ' → logprob: -12.250469207763672

Token 439: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.00011605957115534693
    2. 'Output' → logprob: -9.750116348266602
    3. 'writer' → logprob: -10.250116348266602
    4. ' output' → logprob: -10.750116348266602
    5. 'Console' → logprob: -14.375116348266602
    6. '```' → logprob: -15.875116348266602
    7. '   ' → logprob: -16.1251163482666
    8. 'console' → logprob: -17.3751163482666
    9. 'out' → logprob: -17.3751163482666
    10. '(output' → logprob: -17.5001163482666

Token 440: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -9.13388703338569e-06
    2. '_reader' → logprob: -12.125009536743164
    3. 'Writer' → logprob: -12.625009536743164
    4. '_write' → logprob: -15.625009536743164
    5. '_output' → logprob: -16.875009536743164
    6. '   ' → logprob: -16.875009536743164
    7. '=_' → logprob: -17.875009536743164
    8. 'writer' → logprob: -18.125009536743164
    9. '_w' → logprob: -18.750009536743164
    10. '```' → logprob: -18.875009536743164

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0898529589176178
    2. '=' → logprob: -2.464853048324585
    3. '.write' → logprob: -7.714852809906006
    4. ':' → logprob: -7.839852809906006
    5. '.' → logprob: -9.714853286743164
    6. ' ' → logprob: -12.089853286743164
    7. '  ' → logprob: -12.839853286743164
    8. '.Write' → logprob: -13.339853286743164
    9. '   ' → logprob: -13.714853286743164
    10. 'write' → logprob: -15.339853286743164

Token 442: ' Console' (ID: 11404)
  Prédit: ' Console'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Console' → logprob: -0.38687121868133545
    2. 'Console' → logprob: -1.1368712186813354
    3. '	Console' → logprob: -16.136871337890625
    4. '(Console' → logprob: -17.136871337890625
    5. '   ' → logprob: -19.011871337890625
    6. '.Console' → logprob: -20.636871337890625
    7. ' console' → logprob: -21.636871337890625
    8. ' Consol' → logprob: -21.761871337890625
    9. ' ' → logprob: -21.886871337890625
    10. ' ' → logprob: -22.386871337890625

Token 443: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 't' → logprob: -19.125
    3. ' Output' → logprob: -20.25
    4. 'output' → logprob: -21.375
    5. '(Output' → logprob: -21.5
    6. 'Out' → logprob: -21.5
    7. '	Output' → logprob: -21.5
    8. 'Input' → logprob: -21.625
    9. 'Outputs' → logprob: -21.875
    10. '.Output' → logprob: -22.25

Token 444: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.9361264946837764e-07
    2. 'Reader' → logprob: -16.625
    3. 'Write' → logprob: -16.875
    4. 'Output' → logprob: -18.125
    5. 'writer' → logprob: -19.0
    6. '_writer' → logprob: -19.375
    7. 'W' → logprob: -19.625
    8. ' Writer' → logprob: -21.875
    9. 'Handler' → logprob: -22.125
    10. 'Worker' → logprob: -23.0

Token 445: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024799390230327845
    2. '()
' → logprob: -6.0024800300598145
    3. '()

' → logprob: -13.627479553222656
    4. '(' → logprob: -13.752479553222656
    5. '().' → logprob: -13.752479553222656
    6. '()
' → logprob: -15.252479553222656
    7. ' ()' → logprob: -15.502479553222656
    8. '()`' → logprob: -15.752479553222656
    9. '(output' → logprob: -16.377479553222656
    10. '();' → logprob: -17.002479553222656

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006808918435126543
    2. 'output' → logprob: -5.006808757781982
    3. ' output' → logprob: -9.38180923461914
    4. '	output' → logprob: -12.63180923461914
    5. '    
' → logprob: -13.00680923461914
    6. '(output' → logprob: -14.13180923461914
    7. '_output' → logprob: -14.25680923461914
    8. '
' → logprob: -14.50680923461914
    9. '.output' → logprob: -14.50680923461914
    10. 'Output' → logprob: -14.88180923461914

Token 447: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -8.895480277715251e-06
    2. 'write' → logprob: -11.750008583068848
    3. ' output' → logprob: -14.000008583068848
    4. '.output' → logprob: -16.125009536743164
    5. '.write' → logprob: -19.250009536743164
    6. '(output' → logprob: -20.375009536743164
    7. '   ' → logprob: -20.500009536743164
    8. '_output' → logprob: -21.000009536743164
    9. '	output' → logprob: -21.750009536743164
    10. 'out' → logprob: -22.250009536743164

Token 448: '_writer' (ID: 71011)
  Prédit: '_writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_writer' → logprob: -1.664371848164592e-05
    2. '.write' → logprob: -12.000016212463379
    3. '_write' → logprob: -12.125016212463379
    4. '._' → logprob: -13.500016212463379
    5. '   ' → logprob: -13.750016212463379
    6. '.Writer' → logprob: -14.125016212463379
    7. '_.' → logprob: -14.250016212463379
    8. 'Writer' → logprob: -14.500016212463379
    9. '_w' → logprob: -15.000016212463379
    10. 'write' → logprob: -16.375017166137695

Token 449: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00029744720086455345
    2. '.' → logprob: -8.125297546386719
    3. '.w' → logprob: -13.750297546386719
    4. ' .' → logprob: -15.250297546386719
    5. 'write' → logprob: -16.87529754638672
    6. '.
' → logprob: -17.87529754638672
    7. '.print' → logprob: -17.87529754638672
    8. '.Write' → logprob: -18.00029754638672
    9. '.WRITE' → logprob: -18.50029754638672
    10. '   ' → logprob: -18.62529754638672

Token 450: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. '(sort' → logprob: -14.750006675720215
    4. 'sorted' → logprob: -17.62500762939453
    5. '(filtered' → logprob: -17.75000762939453
    6. '(s' → logprob: -17.87500762939453
    7. '(selected' → logprob: -18.00000762939453
    8. ' (' → logprob: -18.50000762939453
    9. '(saved' → logprob: -18.75000762939453
    10. '(
' → logprob: -19.25000762939453

Token 451: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.45848218582978e-06
    2. 'numbers' → logprob: -13.12500286102295
    3. '(numbers' → logprob: -15.37500286102295
    4. '_' → logprob: -16.125001907348633
    5. '_number' → logprob: -17.500001907348633
    6. '```' → logprob: -18.750001907348633
    7. '(_' → logprob: -19.125001907348633
    8. 'Numbers' → logprob: -19.500001907348633
    9. '_n' → logprob: -19.875001907348633
    10. 's' → logprob: -20.125001907348633

Token 452: ')

' (ID: 1029)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25421199202537537
    2. '())' → logprob: -1.5042120218276978
    3. ')' → logprob: -6.129211902618408
    4. '()
' → logprob: -9.379212379455566
    5. '())
' → logprob: -11.879212379455566
    6. '()]' → logprob: -12.754212379455566
    7. '(' → logprob: -13.129212379455566
    8. '()}' → logprob: -13.504212379455566
    9. ' ())' → logprob: -13.504212379455566
    10. '()`' → logprob: -13.879212379455566

Token 453: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07893771678209305
    2. '
' → logprob: -2.5789377689361572
    3. ' if' → logprob: -11.078937530517578
    4. 'i' → logprob: -11.828937530517578
    5. '\n' → logprob: -11.953937530517578
    6. '```' → logprob: -12.203937530517578
    7. '

' → logprob: -12.328937530517578
    8. '<|end|>' → logprob: -12.578937530517578
    9. '  
' → logprob: -13.578937530517578
    10. '#' → logprob: -13.953937530517578

Token 454: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008653691969811916
    2. '__' → logprob: -4.75865364074707
    3. '_' → logprob: -10.25865364074707
    4. ' ' → logprob: -13.63365364074707
    5. ' _' → logprob: -14.00865364074707
    6. ' ___' → logprob: -14.38365364074707
    7. '_name' → logprob: -14.63365364074707
    8. ' ' → logprob: -14.75865364074707
    9. '___' → logprob: -14.88365364074707
    10. '  ' → logprob: -16.63365364074707

Token 455: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007026038598269224
    2. ' ==' → logprob: -5.382026195526123
    3. ' __' → logprob: -6.507026195526123
    4. '==' → logprob: -7.132026195526123
    5. '=="' → logprob: -10.132025718688965
    6. '.__' → logprob: -11.007025718688965
    7. '___' → logprob: -11.382025718688965
    8. '_' → logprob: -11.382025718688965
    9. '_name' → logprob: -12.132025718688965
    10. '____' → logprob: -12.382025718688965

Token 456: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.961759259458631e-06
    2. '__.__' → logprob: -12.750004768371582
    3. '==' → logprob: -13.750004768371582
    4. '=="' → logprob: -14.500004768371582
    5. ' ==' → logprob: -15.625004768371582
    6. '__["' → logprob: -16.3750057220459
    7. '__.' → logprob: -16.6250057220459
    8. '____' → logprob: -16.6250057220459
    9. '___' → logprob: -16.7500057220459
    10. '__
' → logprob: -18.1250057220459

Token 457: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.674492359161377
    2. ' ==' → logprob: -0.924492359161377
    3. '==' → logprob: -2.799492359161377
    4. '=="' → logprob: -3.674492359161377
    5. '.__' → logprob: -5.299492359161377
    6. '_' → logprob: -6.924492359161377
    7. '__.__' → logprob: -7.424492359161377
    8. '.' → logprob: -7.924492359161377
    9. '=='' → logprob: -8.799491882324219
    10. ' =="' → logprob: -9.299491882324219

Token 458: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001510335598140955
    2. ''' → logprob: -6.501510143280029
    3. ' "__' → logprob: -11.876510620117188
    4. '__' → logprob: -14.501510620117188
    5. '"user' → logprob: -15.501510620117188
    6. '"name' → logprob: -16.376510620117188
    7. '"class' → logprob: -17.876510620117188
    8. ' '__' → logprob: -18.001510620117188
    9. '"_' → logprob: -18.501510620117188
    10. '"type' → logprob: -18.501510620117188

Token 459: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4743165373802185
    2. 'main' → logprob: -0.9743165373802185
    3. '_main' → logprob: -8.724316596984863
    4. '"' → logprob: -10.099316596984863
    5. 'name' → logprob: -10.474316596984863
    6. ' main' → logprob: -12.974316596984863
    7. '_MAIN' → logprob: -13.599316596984863
    8. '__":
' → logprob: -13.974316596984863
    9. '___' → logprob: -14.224316596984863
    10. ''' → logprob: -14.599316596984863

Token 460: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6932268142700195
    2. '__":
' → logprob: -0.6932268142700195
    3. '__':
' → logprob: -10.19322681427002
    4. '__["' → logprob: -11.44322681427002
    5. '__.' → logprob: -11.69322681427002
    6. '__.__' → logprob: -11.69322681427002
    7. '__
' → logprob: -12.19322681427002
    8. '__
' → logprob: -12.44322681427002
    9. '"' → logprob: -12.94322681427002
    10. '__("' → logprob: -13.94322681427002

Token 461: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12218021601438522
    2. '"' → logprob: -2.372180223464966
    3. 'main' → logprob: -3.872180223464966
    4. ''' → logprob: -7.122179985046387
    5. ' "__' → logprob: -9.997179985046387
    6. '_main' → logprob: -10.622179985046387
    7. '____' → logprob: -11.247179985046387
    8. ' main' → logprob: -11.372179985046387
    9. '__":
' → logprob: -11.747179985046387
    10. '___' → logprob: -12.747179985046387

Token 462: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -21.0
    4. 'mai' → logprob: -21.75
    5. 'ma' → logprob: -22.375
    6. 'm' → logprob: -23.125
    7. 'maine' → logprob: -23.625
    8. '.main' → logprob: -23.875
    9. '   ' → logprob: -23.875
    10. '(main' → logprob: -24.0

Token 463: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17302685976028442
    2. '<|end|>' → logprob: -2.0480268001556396
    3. '
' → logprob: -4.048027038574219
    4. '```' → logprob: -5.048027038574219
    5. '(' → logprob: -6.298027038574219
    6. '#' → logprob: -6.548027038574219
    7. ')' → logprob: -6.673027038574219
    8. '()
' → logprob: -7.798027038574219
    9. '\n' → logprob: -7.798027038574219
    10. '<|end|>' → logprob: -8.173027038574219


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 461
Tokens correctement prédits (1ère position, stricte): 251
Tokens correctement prédits (1ère position, avec adaptation): 269
Tokens correctement prédits (top 10): 419
Précision stricte (1ère position): 54.45%
Précision adaptée (1ère position): 58.35%
Précision (top 10): 90.89%
================================================================================
