================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:53:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TrainFareSystem:
    class Edge:
        def __init__(self, u: int, v: int):
            self.u = u
            self.v = v

        def other(self, node: int) -> int:
            return self.v if node == self.u else self.u

    class Graph:
        def __init__(self, n: int):
            self.n = n
            self.adj = [[] for _ in range(n + 1)]  # 1-based nodes
            self.edges = []

        def add_edge(self, u: int, v: int):
            edge = TrainFareSystem.Edge(u, v)
            eid = len(self.edges)
            self.edges.append(edge)
            self.adj[u].append(eid)
            self.adj[v].append(eid)

    class DijkstraResult:
        def __init__(self, dist, parent_edge):
            self.dist = dist
            self.parent_edge = parent_edge

    def __init__(self, n: int, edges_uv, q: int, raise_plan):
        self.n = n
        self.m = len(edges_uv)
        self.q = q
        self.graph = self.Graph(n)
        for u, v in edges_uv:
            self.graph.add_edge(u, v)
        self.raise_plan = raise_plan

    def calculate_initial_distances(self):
        from collections import deque
        # Because initial weight = 1 for all edges, shortest path dist = BFS layers
        dist = [float('inf')] * (self.n + 1)
        parent_edge = [-1] * (self.n + 1)
        dist[1] = 0
        queue = deque([1])
        while queue:
            node = queue.popleft()
            for eid in self.graph.adj[node]:
                e = self.graph.edges[eid]
                nxt = e.other(node)
                if dist[nxt] > dist[node] + 1:
                    dist[nxt] = dist[node] + 1
                    parent_edge[nxt] = eid
                    queue.append(nxt)
        return self.DijkstraResult(dist, parent_edge)

    def build_tree_from_parents(self, parent_edge):
        # Build tree from parent edges, root=1
        tree = [[] for _ in range(self.n + 1)]
        for v in range(2, self.n + 1):
            eid = parent_edge[v]
            if eid == -1:
                continue
            edge = self.graph.edges[eid]
            u = edge.other(v)
            tree[u].append(v)
        return tree

    def dfs_subtree_size(self, tree, node, size_arr):
        size_arr[node] = 1
        for nxt in tree[node]:
            self.dfs_subtree_size(tree, nxt, size_arr)
            size_arr[node] += size_arr[nxt]

    def solve(self):
        # Step 1: compute initial shortest path tree from node 1 with weight=1
        dres = self.calculate_initial_distances()
        dist_init = dres.dist
        parent_edge = dres.parent_edge

        # Step 2: Build shortest path tree from initial shortest paths (edges on shortest path)
        tree = self.build_tree_from_parents(parent_edge)

        # Step 3: DFS to get subtree sizes to count nodes affected by incrementing an edge in the shortest path tree
        subtree_size = [0] * (self.n + 1)
        self.dfs_subtree_size(tree, 1, subtree_size)

        # Step 4: Mark edges that are in the shortest path tree
        in_tree = [False] * self.m
        for v in range(2, self.n + 1):
            eid = parent_edge[v]
            if eid != -1:
                in_tree[eid] = True

        # Step 5: Initialize dissatisfaction counts per year
        # Initially, no dissatisfaction (year 0)
        dissatisfactions = [0] * (self.q + 1)  # 1-based year; dissatisfactions[j] = count in year j

        # Step 6: We simulate years and price raises.
        # Each price increase changes cost of one edge from 1 to 2.
        # Increasing an edge on the shortest path tree increases cost to all in its subtree by 1.
        # Increasing edge not in shortest path tree has no effect on shortest path costs, because alternate routes cost >= current.
        # When an edge in the tree is increased, dissatisfaction increases by size of subtree except root (city1).

        # We will track dissatisfaction count incrementally.
        current_dissatisfaction = 0
        # Map from edge id to iteration/year index
        edge_price_up_year = [-1] * self.m
        for year, eid in enumerate(self.raise_plan, 1):
            edge_price_up_year[eid - 1] = year

        # We prepare a list of (year, impact) for all relevant edges (those in tree)
        # At the year when edge's price increases, dissatisfaction += subtree_size of child node connected by that edge.
        year_events = [0] * (self.q + 2)  # +2 for safety
        for eid in range(self.m):
            if in_tree[eid]:
                # Identify child node of this edge in tree (since tree edges go from parent to child)
                u = self.graph.edges[eid].u
                v = self.graph.edges[eid].v
                # parent is the endpoint with lower dist (ie, closer to root)
                if dist_init[u] < dist_init[v]:
                    parent = u
                    child = v
                else:
                    parent = v
                    child = u
                year = edge_price_up_year[eid]
                if year != -1:
                    # At year-th price raise, dissatisfaction increases by subtree_size[child]
                    year_events[year] += subtree_size[child]

        # Step 7: Accumulate dissatisfaction over years
        for year in range(1, self.q + 1):
            current_dissatisfaction += year_events[year]
            dissatisfactions[year] = current_dissatisfaction

        # Step 8: Output dissatisfaction count for each year
        # City 1 never dissatisfied by problem statement
        # The subtree sizes exclude city 1 from increment count naturally (root's subtree size includes whole)
        return dissatisfactions[1:]  # year 1 to Q


def main():
    import sys
    input = sys.stdin.readline

    N, M, Q = map(int, input().split())
    edges_uv = [tuple(map(int, input().split())) for _ in range(M)]
    raise_plan = [int(input()) for _ in range(Q)]

    system = TrainFareSystem(N, edges_uv, Q, raise_plan)
    results = system.solve()
    print('\n'.join(map(str, results)))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Train' (ID: 32131)
  → Token d'amorce (pas de prédiction)

Token 2: 'Fare' (ID: 131526)
  → Token d'amorce (pas de prédiction)

Token 3: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40608569979667664
    2. '(' → logprob: -1.281085729598999
    3. '{' → logprob: -2.906085729598999
    4. '.' → logprob: -7.78108549118042
    5. '(:' → logprob: -8.406085968017578
    6. ' {' → logprob: -8.656085968017578
    7. ' :' → logprob: -8.781085968017578
    8. '```' → logprob: -9.156085968017578
    9. '():' → logprob: -9.281085968017578
    10. ' ' → logprob: -10.781085968017578

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3735096752643585
    2. '{' → logprob: -1.3735096454620361
    3. '(' → logprob: -2.998509645462036
    4. '.' → logprob: -4.873509883880615
    5. ' {' → logprob: -7.123509883880615
    6. '```' → logprob: -10.248509407043457
    7. '(:' → logprob: -10.623509407043457
    8. ' ' → logprob: -11.123509407043457
    9. ' :' → logprob: -11.373509407043457
    10. '[' → logprob: -11.498509407043457

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15009121596813202
    2. ':' → logprob: -2.4000911712646484
    3. '(' → logprob: -3.5250911712646484
    4. '```' → logprob: -4.525091171264648
    5. ' def' → logprob: -6.525091171264648
    6. '\' → logprob: -6.775091171264648
    7. ' ' → logprob: -6.900091171264648
    8. '    ' → logprob: -6.900091171264648
    9. '(
' → logprob: -7.525091171264648
    10. '    
' → logprob: -7.650091171264648

Token 6: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2599392235279083
    2. '(' → logprob: -2.009939193725586
    3. '```' → logprob: -3.509939193725586
    4. '\' → logprob: -4.009939193725586
    5. ' ' → logprob: -4.509939193725586
    6. 'def' → logprob: -4.884939193725586
    7. ' def' → logprob: -5.009939193725586
    8. ':' → logprob: -5.759939193725586
    9. ''' → logprob: -6.009939193725586
    10. '\n' → logprob: -6.134939193725586

Token 7: ' Edge' (ID: 16396)
  Prédit: ' Train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Train' → logprob: -1.0342817306518555
    2. ' ' → logprob: -1.1592817306518555
    3. ' Ticket' → logprob: -2.7842817306518555
    4. ' Booking' → logprob: -2.9092817306518555
    5. ' Fare' → logprob: -3.5342817306518555
    6. '   ' → logprob: -3.5342817306518555
    7. ' Variable' → logprob: -3.9092817306518555
    8. '  ' → logprob: -4.4092817306518555
    9. 'Train' → logprob: -4.6592817306518555
    10. ' Passenger' → logprob: -4.6592817306518555

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34923508763313293
    2. '(' → logprob: -1.2242350578308105
    3. ' :' → logprob: -8.724235534667969
    4. '(:' → logprob: -8.724235534667969
    5. '```' → logprob: -9.224235534667969
    6. ':
' → logprob: -9.724235534667969
    7. '   ' → logprob: -9.974235534667969
    8. '():' → logprob: -10.099235534667969
    9. '{' → logprob: -10.099235534667969
    10. '[' → logprob: -10.224235534667969

Token 9: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.361739158630371
    2. ':' → logprob: -1.361739158630371
    3. '       ' → logprob: -1.361739158630371
    4. '    ' → logprob: -2.111739158630371
    5. '   ' → logprob: -2.861739158630371
    6. '<|end|>' → logprob: -4.236739158630371
    7. '        ' → logprob: -4.611739158630371
    8. ' (' → logprob: -5.236739158630371
    9. '(object' → logprob: -5.486739158630371
    10. ' ' → logprob: -5.486739158630371

Token 10: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9633684754371643
    2. '        ' → logprob: -1.8383684158325195
    3. '(' → logprob: -1.9633684158325195
    4. '           ' → logprob: -2.0883684158325195
    5. '            ' → logprob: -3.2133684158325195
    6. ' (' → logprob: -3.3383684158325195
    7. ' def' → logprob: -3.5883684158325195
    8. ' ' → logprob: -3.7133684158325195
    9. '       ' → logprob: -3.7133684158325195
    10. '    ' → logprob: -4.9633684158325195

Token 11: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003597760514821857
    2. ' init' → logprob: -8.125359535217285
    3. '__' → logprob: -10.000359535217285
    4. ' ' → logprob: -11.875359535217285
    5. ' ' → logprob: -12.500359535217285
    6. ' _' → logprob: -12.875359535217285
    7. 'init' → logprob: -13.250359535217285
    8. '_init' → logprob: -13.500359535217285
    9. ' initialize' → logprob: -14.250359535217285
    10. '_' → logprob: -14.750359535217285

Token 12: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.008129963040119e-06
    2. 'ini' → logprob: -13.125003814697266
    3. ' init' → logprob: -13.500003814697266
    4. 'i' → logprob: -15.000003814697266
    5. 'in' → logprob: -15.750003814697266
    6. 'int' → logprob: -16.375003814697266
    7. '_init' → logprob: -17.250003814697266
    8. 'inite' → logprob: -17.250003814697266
    9. '	init' → logprob: -17.375003814697266
    10. 'inti' → logprob: -17.375003814697266

Token 13: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.627582848072052
    2. '(' → logprob: -1.0025827884674072
    3. ' (' → logprob: -2.8775827884674072
    4. '(self' → logprob: -3.2525827884674072
    5. '__' → logprob: -6.002583026885986
    6. '__(
' → logprob: -7.002583026885986
    7. '<|end|>' → logprob: -8.127582550048828
    8. 'self' → logprob: -8.502582550048828
    9. '__((' → logprob: -10.002582550048828
    10. '_(' → logprob: -10.127582550048828

Token 14: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043893471360206604
    2. ' self' → logprob: -3.168893575668335
    3. 'source' → logprob: -7.293893337249756
    4. ' source' → logprob: -9.668893814086914
    5. 'src' → logprob: -10.168893814086914
    6. ')' → logprob: -10.668893814086914
    7. '(self' → logprob: -10.793893814086914
    8. ',self' → logprob: -10.918893814086914
    9. '	self' → logprob: -11.418893814086914
    10. ',' → logprob: -12.293893814086914

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8699119687080383
    2. '(self' → logprob: -1.2449119091033936
    3. 'self' → logprob: -1.8699119091033936
    4. ' self' → logprob: -2.4949119091033936
    5. ' ,' → logprob: -3.4949119091033936
    6. ' (' → logprob: -4.244912147521973
    7. ')' → logprob: -5.244912147521973
    8. '(' → logprob: -5.994912147521973
    9. ' )' → logprob: -6.619912147521973
    10. '<|end|>' → logprob: -6.869912147521973

Token 16: ' u' (ID: 337)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' source' → logprob: -1.203717589378357
    2. 'self' → logprob: -1.328717589378357
    3. 'source' → logprob: -1.328717589378357
    4. ' self' → logprob: -2.0787177085876465
    5. 'from' → logprob: -3.7037177085876465
    6. ' from' → logprob: -4.7037177085876465
    7. 'src' → logprob: -5.5787177085876465
    8. 'u' → logprob: -6.4537177085876465
    9. ' src' → logprob: -6.8287177085876465
    10. 'origin' → logprob: -6.8287177085876465

Token 17: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015460490249097347
    2. ' ,' → logprob: -6.5015459060668945
    3. ')' → logprob: -11.001545906066895
    4. 's' → logprob: -12.251545906066895
    5. ',n' → logprob: -12.501545906066895
    6. ',u' → logprob: -12.501545906066895
    7. ':' → logprob: -13.251545906066895
    8. ' ' → logprob: -13.376545906066895
    9. ',)' → logprob: -13.376545906066895
    10. '',' → logprob: -13.626545906066895

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3209916055202484
    2. 'int' → logprob: -1.3209916353225708
    3. ' str' → logprob: -4.945991516113281
    4. 'str' → logprob: -8.320991516113281
    5. '[int' → logprob: -9.570991516113281
    6. '<|end|>' → logprob: -9.695991516113281
    7. ' ' → logprob: -10.070991516113281
    8. ':int' → logprob: -10.195991516113281
    9. '=int' → logprob: -10.320991516113281
    10. ',int' → logprob: -10.445991516113281

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011916564544662833
    2. ' ,' → logprob: -6.75119161605835
    3. '<|end|>' → logprob: -11.876192092895508
    4. ')' → logprob: -12.376192092895508
    5. ',u' → logprob: -12.376192092895508
    6. '‌,' → logprob: -12.751192092895508
    7. '<|end|>' → logprob: -13.876192092895508
    8. ',int' → logprob: -14.251192092895508
    9. 'u' → logprob: -15.251192092895508
    10. ',user' → logprob: -15.751192092895508

Token 20: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12695036828517914
    2. 'v' → logprob: -2.126950263977051
    3. '	v' → logprob: -12.50195026397705
    4. ',' → logprob: -12.50195026397705
    5. ' ' → logprob: -12.75195026397705
    6. ',v' → logprob: -13.00195026397705
    7. ' ' → logprob: -13.12695026397705
    8. ')v' → logprob: -13.75195026397705
    9. 'space' → logprob: -13.87695026397705
    10. ' w' → logprob: -13.87695026397705

Token 21: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004080420359969139
    2. ' ,' → logprob: -6.129080295562744
    3. ':' → logprob: -6.504080295562744
    4. ')' → logprob: -8.129080772399902
    5. '):' → logprob: -9.754080772399902
    6. ':int' → logprob: -10.379080772399902
    7. ',int' → logprob: -12.629080772399902
    8. '   ' → logprob: -13.129080772399902
    9. ' )' → logprob: -13.504080772399902
    10. ' ' → logprob: -14.129080772399902

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.42873892188072205
    2. 'int' → logprob: -1.0537389516830444
    3. ':int' → logprob: -10.803738594055176
    4. '[int' → logprob: -12.053738594055176
    5. '=int' → logprob: -12.553738594055176
    6. '<int' → logprob: -12.803738594055176
    7. ',int' → logprob: -13.678738594055176
    8. '(int' → logprob: -13.803738594055176
    9. ']int' → logprob: -13.803738594055176
    10. '	int' → logprob: -14.053738594055176

Token 23: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006901554297655821
    2. '):' → logprob: -7.62568998336792
    3. ' ,' → logprob: -9.000690460205078
    4. ')' → logprob: -9.500690460205078
    5. '<|end|>' → logprob: -14.250690460205078
    6. ',int' → logprob: -14.375690460205078
    7. ':' → logprob: -14.875690460205078
    8. '):
' → logprob: -14.875690460205078
    9. '<|end|>' → logprob: -15.000690460205078
    10. '       ' → logprob: -15.250690460205078

Token 24: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2689567506313324
    2. '           ' → logprob: -1.7689567804336548
    3. '):' → logprob: -3.3939566612243652
    4. ':' → logprob: -4.393956661224365
    5. ')' → logprob: -4.768956661224365
    6. ' ,' → logprob: -5.643956661224365
    7. '            ' → logprob: -6.018956661224365
    8. '       ' → logprob: -7.268956661224365
    9. '          ' → logprob: -7.268956661224365
    10. '<|end|>' → logprob: -7.393956661224365

Token 25: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23854021728038788
    2. ' self' → logprob: -1.6135401725769043
    3. '               ' → logprob: -5.113540172576904
    4. '           ' → logprob: -5.738540172576904
    5. '            ' → logprob: -6.113540172576904
    6. ' ' → logprob: -7.738540172576904
    7. '                ' → logprob: -8.488540649414062
    8. '             ' → logprob: -8.488540649414062
    9. '   ' → logprob: -9.113540649414062
    10. ' super' → logprob: -9.488540649414062

Token 26: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.6516668796539307
    2. '.' → logprob: -0.7766668796539307
    3. ' .' → logprob: -4.401666641235352
    4. ' =' → logprob: -6.401666641235352
    5. 'u' → logprob: -7.026666641235352
    6. '._' → logprob: -7.526666641235352
    7. '.user' → logprob: -7.651666641235352
    8. ' u' → logprob: -7.901666641235352
    9. '=' → logprob: -8.151666641235352
    10. ',' → logprob: -8.276666641235352

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1256645917892456
    2. ',' → logprob: -2.750664710998535
    3. '=' → logprob: -3.500664710998535
    4. ' ' → logprob: -4.375664710998535
    5. ' ,' → logprob: -4.750664710998535
    6. ')' → logprob: -6.750664710998535
    7. '<|end|>' → logprob: -7.000664710998535
    8. ' ==' → logprob: -8.750664710998535
    9. '<|end|>' → logprob: -9.000664710998535
    10. '.' → logprob: -9.125664710998535

Token 28: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5231379866600037
    2. 'u' → logprob: -0.8981379866600037
    3. ' ' → logprob: -11.898138046264648
    4. '	u' → logprob: -12.148138046264648
    5. ' ' → logprob: -13.523138046264648
    6. '=u' → logprob: -15.023138046264648
    7. '(u' → logprob: -15.523138046264648
    8. '<|end|>' → logprob: -16.27313804626465
    9. '[u' → logprob: -16.39813804626465
    10. 'v' → logprob: -16.83563804626465

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6708384156227112
    2. '           ' → logprob: -1.1708383560180664
    3. 'self' (adapté à ' self') → logprob: -2.6708383560180664
    4. 'v' → logprob: -4.045838356018066
    5. '=' → logprob: -4.045838356018066
    6. ' self' → logprob: -4.170838356018066
    7. ' v' → logprob: -4.295838356018066
    8. '            ' → logprob: -4.670838356018066
    9. ',' → logprob: -5.045838356018066
    10. '       ' → logprob: -5.170838356018066

Token 32: '.v' (ID: 5520)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05034910887479782
    2. '.v' → logprob: -3.050348997116089
    3. ' .' → logprob: -7.050349235534668
    4. '.u' → logprob: -7.175349235534668
    5. 'v' → logprob: -10.175349235534668
    6. '.f' → logprob: -10.675349235534668
    7. 'u' → logprob: -11.300349235534668
    8. ')' → logprob: -12.050349235534668
    9. '.e' → logprob: -12.550349235534668
    10. '.y' → logprob: -12.550349235534668

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3411025106906891
    2. '<|end|>' → logprob: -1.8411024808883667
    3. '=' → logprob: -2.0911026000976562
    4. ' ' → logprob: -5.341102600097656
    5. '<|end|>' → logprob: -6.716102600097656
    6. '=v' → logprob: -8.466102600097656
    7. ' v' → logprob: -8.716102600097656
    8. ')' → logprob: -9.091102600097656
    9. 'v' → logprob: -9.591102600097656
    10. ' ==' → logprob: -9.716102600097656

Token 34: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.42870500683784485
    2. 'v' → logprob: -1.0537049770355225
    3. ' ' → logprob: -13.178705215454102
    4. 'u' → logprob: -13.803705215454102
    5. ' ' → logprob: -14.803705215454102
    6. '	v' → logprob: -15.303705215454102
    7. '0' → logprob: -15.428705215454102
    8. ' u' → logprob: -15.428705215454102
    9. ')v' → logprob: -16.5537052154541
    10. '_v' → logprob: -17.0537052154541

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.392961710691452
    2. '<|end|>' → logprob: -1.2679617404937744
    3. '       ' → logprob: -4.017961502075195
    4. ' 
' → logprob: -5.017961502075195
    5. '    
' → logprob: -5.392961502075195
    6. 'newline' → logprob: -5.892961502075195
    7. '<|end|>' → logprob: -6.267961502075195
    8. '   ' → logprob: -6.517961502075195
    9. '\n' → logprob: -6.767961502075195
    10. '```' → logprob: -6.892961502075195

Token 36: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16093245148658752
    2. '       ' → logprob: -2.5359325408935547
    3. '    
' → logprob: -4.410932540893555
    4. '        
' → logprob: -4.410932540893555
    5. 'def' (adapté à ' def') → logprob: -4.410932540893555
    6. '   ' → logprob: -4.660932540893555
    7. '```' → logprob: -5.160932540893555
    8. '<|end|>' → logprob: -5.910932540893555
    9. ' 
' → logprob: -6.285932540893555
    10. '

' → logprob: -6.410932540893555

Token 38: ' other' (ID: 1273)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06764529645442963
    2. ' ' → logprob: -2.942645311355591
    3. ' str' → logprob: -5.567645072937012
    4. ' get' → logprob: -6.317645072937012
    5. ' equal' → logprob: -6.567645072937012
    6. ' def' → logprob: -7.192645072937012
    7. '_' → logprob: -7.192645072937012
    8. '  ' → logprob: -7.317645072937012
    9. ' _' → logprob: -7.567645072937012
    10. ' is' → logprob: -7.567645072937012

Token 39: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018495459109544754
    2. '(self' → logprob: -4.018495559692383
    3. '(u' → logprob: -8.518495559692383
    4. ' (' → logprob: -9.643495559692383
    5. 's' → logprob: -10.768495559692383
    6. '(node' → logprob: -11.518495559692383
    7. '(

' → logprob: -11.518495559692383
    8. '(
' → logprob: -12.018495559692383
    9. '(token' → logprob: -12.268495559692383
    10. '_' → logprob: -12.393495559692383

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016096075996756554
    2. ' ,' → logprob: -4.141096115112305
    3. ',u' → logprob: -9.891096115112305
    4. ')' → logprob: -12.266096115112305
    5. ' )' → logprob: -13.266096115112305
    6. ',node' → logprob: -13.766096115112305
    7. ',v' → logprob: -14.516096115112305
    8. ' ' → logprob: -14.641096115112305
    9. ',user' → logprob: -14.766096115112305
    10. ',int' → logprob: -14.891096115112305

Token 41: ' node' (ID: 4596)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5433368682861328
    2. ' x' → logprob: -1.2933368682861328
    3. ' node' → logprob: -2.418336868286133
    4. 'node' → logprob: -3.918336868286133
    5. ' vertex' → logprob: -4.043336868286133
    6. 'vertex' → logprob: -4.293336868286133
    7. ' u' → logprob: -6.668336868286133
    8. 'w' → logprob: -6.793336868286133
    9. 'u' → logprob: -6.918336868286133
    10. ' w' → logprob: -7.043336868286133

Token 42: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007115995045751333
    2. ':' → logprob: -5.632115840911865
    3. ')' → logprob: -6.132115840911865
    4. ',' → logprob: -7.257115840911865
    5. ' ):' → logprob: -7.632115840911865
    6. '):
' → logprob: -9.007116317749023
    7. ' )' → logprob: -11.757116317749023
    8. ' ,' → logprob: -12.257116317749023
    9. '):

' → logprob: -13.257116317749023
    10. ' ' → logprob: -13.507116317749023

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4309643805027008
    2. 'int' → logprob: -1.1809643507003784
    3. ' )' → logprob: -3.555964469909668
    4. ')' → logprob: -4.305964469909668
    5. ':int' → logprob: -7.305964469909668
    6. '[int' → logprob: -8.805964469909668
    7. ' ):' → logprob: -10.055964469909668
    8. '):
' → logprob: -10.055964469909668
    9. ' ' → logprob: -10.180964469909668
    10. '):' → logprob: -10.680964469909668

Token 44: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1148897185921669
    2. ')' → logprob: -2.239889621734619
    3. ' ):' → logprob: -6.614889621734619
    4. ' )' → logprob: -8.239890098571777
    5. '):
' → logprob: -8.239890098571777
    6. ')->' → logprob: -8.739890098571777
    7. ':' → logprob: -10.989890098571777
    8. ',' → logprob: -12.114890098571777
    9. '   ' → logprob: -12.114890098571777
    10. '):
' → logprob: -12.864890098571777

Token 45: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033365758135914803
    2. '):' → logprob: -6.003336429595947
    3. ' :' → logprob: -7.878336429595947
    4. ':return' → logprob: -7.878336429595947
    5. ')' → logprob: -10.503336906433105
    6. ':
' → logprob: -10.753336906433105
    7. '->' → logprob: -11.253336906433105
    8. ',' → logprob: -11.878336906433105
    9. '():' → logprob: -12.003336906433105
    10. ':**' → logprob: -12.128336906433105

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20146821439266205
    2. 'int' → logprob: -1.7014682292938232
    3. '[int' → logprob: -11.326468467712402
    4. ' ' → logprob: -11.576468467712402
    5. ' '' → logprob: -12.201468467712402
    6. '	int' → logprob: -12.326468467712402
    7. ':int' → logprob: -12.451468467712402
    8. '(int' → logprob: -12.576468467712402
    9. '  ' → logprob: -12.576468467712402
    10. '<int' → logprob: -12.701468467712402

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027337539358995855
    2. '):' → logprob: -8.625273704528809
    3. ' :' → logprob: -10.125273704528809
    4. ':return' → logprob: -10.125273704528809
    5. ':
' → logprob: -11.500273704528809
    6. '():' → logprob: -13.875273704528809
    7. ':**' → logprob: -14.000273704528809
    8. ')' → logprob: -14.875273704528809
    9. ',' → logprob: -15.125273704528809
    10. ':def' → logprob: -15.125273704528809

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04056325927376747
    2. ' if' → logprob: -3.9155633449554443
    3. ' return' → logprob: -4.540563106536865
    4. '       ' → logprob: -5.915563106536865
    5. 'return' → logprob: -6.040563106536865
    6. '               ' → logprob: -6.790563106536865
    7. '        ' → logprob: -6.915563106536865
    8. '            ' → logprob: -7.415563106536865
    9. 'if' → logprob: -8.040563583374023
    10. ':' → logprob: -8.415563583374023

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.484745055437088
    2. ' return' → logprob: -0.9847450256347656
    3. ' if' → logprob: -4.734745025634766
    4. 'if' → logprob: -6.859745025634766
    5. '           ' → logprob: -7.234745025634766
    6. '```' → logprob: -10.609745025634766
    7. 'self' → logprob: -10.984745025634766
    8. ' self' → logprob: -12.109745025634766
    9. '            ' → logprob: -12.734745025634766
    10. '   ' → logprob: -13.609745025634766

Token 50: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11286532878875732
    2. 'self' → logprob: -2.237865447998047
    3. ' ' → logprob: -10.487865447998047
    4. '	self' → logprob: -12.362865447998047
    5. '   ' → logprob: -12.737865447998047
    6. ' node' → logprob: -12.987865447998047
    7. ' v' → logprob: -13.487865447998047
    8. ' ' → logprob: -13.612865447998047
    9. '(self' → logprob: -14.112865447998047
    10. '  ' → logprob: -14.237865447998047

Token 51: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.5236038565635681
    2. '.u' → logprob: -0.8986038565635681
    3. 'u' → logprob: -8.273603439331055
    4. '.' → logprob: -8.773603439331055
    5. 'v' → logprob: -9.898603439331055
    6. '.other' → logprob: -11.773603439331055
    7. ' .' → logprob: -12.398603439331055
    8. '```' → logprob: -13.898603439331055
    9. ' u' → logprob: -14.148603439331055
    10. '	u' → logprob: -14.648603439331055

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0105424914509058
    2. 'if' → logprob: -5.135542392730713
    3. '<|end|>' → logprob: -5.385542392730713
    4. ' ' → logprob: -12.010542869567871
    5. '<|end|>' → logprob: -12.135542869567871
    6. '       ' → logprob: -12.760542869567871
    7. '
' → logprob: -12.885542869567871
    8. '	if' → logprob: -13.885542869567871
    9. '```' → logprob: -14.635542869567871
    10. ' ' → logprob: -14.760542869567871

Token 53: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.20524196326732635
    2. ' self' → logprob: -1.7052419185638428
    3. 'self' → logprob: -6.205242156982422
    4. 'node' → logprob: -6.330242156982422
    5. ' ' → logprob: -11.705242156982422
    6. ' ' → logprob: -12.455242156982422
    7. '	node' → logprob: -12.705242156982422
    8. '(node' → logprob: -13.080242156982422
    9. '  ' → logprob: -14.205242156982422
    10. ' u' → logprob: -14.830242156982422

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026499314233660698
    2. '==' → logprob: -3.9014992713928223
    3. ' !=' → logprob: -5.151499271392822
    4. '!=' → logprob: -9.15149974822998
    5. ' else' → logprob: -10.77649974822998
    6. ' ' → logprob: -10.90149974822998
    7. '=' → logprob: -13.77649974822998
    8. 'else' → logprob: -13.90149974822998
    9. ' ' → logprob: -14.02649974822998
    10. ')==' → logprob: -15.65149974822998

Token 55: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519548535346985
    2. 'self' → logprob: -1.5019547939300537
    3. '	self' → logprob: -11.251955032348633
    4. ' ' → logprob: -11.626955032348633
    5. ' ' → logprob: -13.376955032348633
    6. '<|end|>' → logprob: -15.001955032348633
    7. '.' → logprob: -15.376955032348633
    8. '   ' → logprob: -15.501955032348633
    9. '[self' → logprob: -15.626955032348633
    10. '(self' → logprob: -15.626955032348633

Token 56: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.0009917225688695908
    2. '.' → logprob: -7.0009918212890625
    3. 'u' → logprob: -10.000991821289062
    4. ' .' → logprob: -11.250991821289062
    5. '.v' → logprob: -11.500991821289062
    6. ''.' → logprob: -13.250991821289062
    7. ').' → logprob: -13.375991821289062
    8. '`.' → logprob: -13.875991821289062
    9. '.user' → logprob: -13.875991821289062

Token 57: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029751529917120934
    2. 'else' → logprob: -3.5297515392303467
    3. '	else' → logprob: -13.904751777648926
    4. '        ' → logprob: -17.52975082397461
    5. '_else' → logprob: -17.77975082397461
    6. 'els' → logprob: -18.27975082397461
    7. '```' → logprob: -18.52975082397461
    8. ' ' → logprob: -18.65475082397461
    9. ' ' → logprob: -18.90475082397461
    10. '  ' → logprob: -18.90475082397461

Token 58: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141665637493134
    2. ' self' → logprob: -1.7014166116714478
    3. '           ' → logprob: -13.451416969299316
    4. '	self' → logprob: -13.826416969299316
    5. ' ' → logprob: -15.326416969299316
    6. '(self' → logprob: -15.576416969299316
    7. '            ' → logprob: -15.576416969299316
    8. 's' → logprob: -16.451416015625
    9. ' ' → logprob: -16.451416015625
    10. '[self' → logprob: -17.326416015625

Token 59: '.u' (ID: 22262)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6332764029502869
    2. '.u' → logprob: -0.7582764029502869
    3. ' .' → logprob: -7.508276462554932
    4. '.v' → logprob: -9.883275985717773
    5. 'u' → logprob: -10.508275985717773
    6. '<|end|>' → logprob: -11.258275985717773
    7. '‌.' → logprob: -12.133275985717773
    8. '.​' → logprob: -12.758275985717773
    9. '	u' → logprob: -13.258275985717773
    10. ' u' → logprob: -13.383275985717773

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7381446361541748
    2. '   ' → logprob: -1.3631446361541748
    3. '<|end|>' → logprob: -1.4881446361541748
    4. '    
' → logprob: -4.113144874572754
    5. 'class' → logprob: -4.988144874572754
    6. '<|end|>' → logprob: -5.238144874572754
    7. '       ' → logprob: -5.863144874572754
    8. ' 
' → logprob: -6.363144874572754
    9. ' ' → logprob: -6.613144874572754
    10. '\n' → logprob: -6.863144874572754

Token 62: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41618865728378296
    2. '   ' → logprob: -1.6661887168884277
    3. 'def' → logprob: -2.7911887168884277
    4. 'class' (adapté à ' class') → logprob: -3.0411887168884277
    5. '    
' → logprob: -3.5411887168884277
    6. '        
' → logprob: -6.041188716888428
    7. '```' → logprob: -6.416188716888428
    8. ' def' → logprob: -6.666188716888428
    9. '<|end|>' → logprob: -6.666188716888428
    10. '       ' → logprob: -6.791188716888428

Token 63: ' Graph' (ID: 15559)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.7743496894836426
    2. ' Graph' → logprob: -1.7743496894836426
    3. ' Station' → logprob: -2.0243496894836426
    4. 'Node' → logprob: -2.1493496894836426
    5. 'Graph' → logprob: -3.3993496894836426
    6. 'Station' → logprob: -3.7743496894836426
    7. ' Vertex' → logprob: -3.8993496894836426
    8. ' Ticket' → logprob: -4.024349689483643
    9. ' Edge' → logprob: -5.274349689483643
    10. ' Train' → logprob: -5.649349689483643

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000146687583765015
    2. ':
' → logprob: -9.000146865844727
    3. '<|end|>' → logprob: -11.500146865844727
    4. '):' → logprob: -12.125146865844727
    5. '():' → logprob: -13.125146865844727
    6. '(' → logprob: -13.875146865844727
    7. ':**' → logprob: -13.875146865844727
    8. '>:' → logprob: -14.000146865844727
    9. '(object' → logprob: -14.125146865844727
    10. ' :' → logprob: -14.750146865844727

Token 65: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6995636224746704
    2. ':
' → logprob: -0.6995636224746704
    3. '   ' → logprob: -5.699563503265381
    4. '       ' → logprob: -6.199563503265381
    5. '<|end|>' → logprob: -8.824563980102539
    6. '
' → logprob: -8.949563980102539
    7. '```' → logprob: -9.074563980102539
    8. 'def' → logprob: -9.199563980102539
    9. ' def' → logprob: -9.449563980102539
    10. '(' → logprob: -9.699563980102539

Token 66: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1149374321103096
    2. 'def' (adapté à ' def') → logprob: -2.2399375438690186
    3. '       ' → logprob: -6.7399373054504395
    4. '   ' → logprob: -7.2399373054504395
    5. 'class' → logprob: -9.364937782287598
    6. ' class' → logprob: -10.489937782287598
    7. '    ' → logprob: -10.489937782287598
    8. ' ' → logprob: -10.989937782287598
    9. '        ' → logprob: -10.989937782287598
    10. '	def' → logprob: -11.239937782287598

Token 67: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0022895447909832
    2. ' ' → logprob: -6.127289772033691
    3. ' init' → logprob: -10.002289772033691
    4. '__' → logprob: -11.127289772033691
    5. '_init' → logprob: -11.502289772033691
    6. 'init' → logprob: -11.627289772033691
    7. ' ```' → logprob: -11.627289772033691
    8. ' ' → logprob: -12.127289772033691
    9. ' _' → logprob: -12.377289772033691
    10. ' ___' → logprob: -13.002289772033691

Token 68: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.040982142090797424
    2. '__' → logprob: -3.290982246398926
    3. ' __' → logprob: -7.040982246398926
    4. '   ' → logprob: -7.665982246398926
    5. 'Graph' → logprob: -7.665982246398926
    6. '_init' → logprob: -7.790982246398926
    7. ' init' → logprob: -8.165982246398926
    8. '       ' → logprob: -9.290982246398926
    9. '```' → logprob: -9.540982246398926
    10. 'def' → logprob: -10.040982246398926

Token 69: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.7467710375785828
    2. '(self' → logprob: -1.1217710971832275
    3. '(' → logprob: -1.7467710971832275
    4. ' (' → logprob: -3.9967710971832275
    5. '__' → logprob: -5.496770858764648
    6. '_(' → logprob: -5.996770858764648
    7. '_' → logprob: -7.371770858764648
    8. '```' → logprob: -8.871770858764648
    9. 'self' → logprob: -9.371770858764648
    10. '__(
' → logprob: -9.996770858764648

Token 70: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023254677653312683
    2. ' self' → logprob: -3.773254632949829
    3. ')' → logprob: -12.77325439453125
    4. ',' → logprob: -13.52325439453125
    5. ' ' → logprob: -13.77325439453125
    6. '       ' → logprob: -13.77325439453125
    7. '   ' → logprob: -13.89825439453125
    8. '	self' → logprob: -14.27325439453125
    9. '):
' → logprob: -14.52325439453125
    10. '
' → logprob: -15.89825439453125

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005351595464162529
    2. ' ,' → logprob: -7.625535011291504
    3. '):' → logprob: -11.125535011291504
    4. ')' → logprob: -11.375535011291504
    5. ' ' → logprob: -11.625535011291504
    6. 'self' → logprob: -11.875535011291504
    7. '   ' → logprob: -13.875535011291504
    8. '<|end|>' → logprob: -14.250535011291504
    9. '  ' → logprob: -14.375535011291504
    10. ' ):' → logprob: -14.500535011291504

Token 72: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1812419444322586
    2. ' self' → logprob: -2.806241989135742
    3. ' num' → logprob: -3.056241989135742
    4. 'n' → logprob: -3.431241989135742
    5. 'self' → logprob: -4.556241989135742
    6. 'num' → logprob: -5.306241989135742
    7. ')' → logprob: -6.181241989135742
    8. '   ' → logprob: -6.431241989135742
    9. '       ' → logprob: -6.431241989135742
    10. ' )' → logprob: -7.181241989135742

Token 73: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5160253643989563
    2. ':' → logprob: -1.0160253047943115
    3. ' ):' → logprob: -3.3910253047943115
    4. ',' → logprob: -5.641025543212891
    5. ')' → logprob: -6.141025543212891
    6. ' )' → logprob: -7.391025543212891
    7. ' :' → logprob: -7.891025543212891
    8. ':int' → logprob: -8.14102554321289
    9. '):
' → logprob: -8.89102554321289
    10. '_nodes' → logprob: -9.26602554321289

Token 74: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5847341418266296
    2. ' )' → logprob: -0.9597341418266296
    3. 'int' → logprob: -3.2097342014312744
    4. '  ' → logprob: -5.209733963012695
    5. ' ' → logprob: -5.334733963012695
    6. ' int' → logprob: -5.459733963012695
    7. ',' → logprob: -6.584733963012695
    8. ' ,' → logprob: -7.084733963012695
    9. ',int' → logprob: -7.834733963012695
    10. '=int' → logprob: -8.084733963012695

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12883548438549042
    2. ',' → logprob: -2.128835439682007
    3. ' ):' → logprob: -6.628835678100586
    4. '):
' → logprob: -7.753835678100586
    5. ' ,' → logprob: -9.878835678100586
    6. ')' → logprob: -10.253835678100586
    7. '       ' → logprob: -10.503835678100586
    8. '   ' → logprob: -11.003835678100586
    9. ':' → logprob: -11.128835678100586
    10. ' )' → logprob: -13.503835678100586

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09905166178941727
    2. '       ' → logprob: -3.0990517139434814
    3. ' self' → logprob: -3.4740517139434814
    4. ' ' → logprob: -5.224051475524902
    5. 'self' → logprob: -5.224051475524902
    6. ',' → logprob: -6.474051475524902
    7. '<|end|>' → logprob: -6.474051475524902
    8. '   ' → logprob: -6.974051475524902
    9. '               ' → logprob: -7.474051475524902
    10. ' ' → logprob: -7.474051475524902

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02497313916683197
    2. 'self' (adapté à ' self') → logprob: -3.774973154067993
    3. ' ' → logprob: -6.774972915649414
    4. '        ' → logprob: -8.274972915649414
    5. '	self' → logprob: -9.149972915649414
    6. '       ' → logprob: -9.399972915649414
    7. ' ' → logprob: -9.649972915649414
    8. '           ' → logprob: -11.274972915649414
    9. '(self' → logprob: -11.524972915649414
    10. '```' → logprob: -11.524972915649414

Token 78: '.n' (ID: 1835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1639987975358963
    2. '.n' → logprob: -2.78899884223938
    3. ' .' → logprob: -3.28899884223938
    4. ' n' → logprob: -3.66399884223938
    5. '.' → logprob: -4.788998603820801
    6. ' ' → logprob: -4.913998603820801
    7. '=' → logprob: -5.913998603820801
    8. '   ' → logprob: -6.288998603820801
    9. '_nodes' → logprob: -6.663998603820801
    10. '_n' → logprob: -6.913998603820801

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019814051687717438
    2. '=' → logprob: -4.3948140144348145
    3. '<|end|>' → logprob: -5.1448140144348145
    4. '<|end|>' → logprob: -7.3948140144348145
    5. ' ' → logprob: -7.8948140144348145
    6. ',' → logprob: -8.019814491271973
    7. ')' → logprob: -9.769814491271973
    8. ' ,' → logprob: -10.519814491271973
    9. ' =
' → logprob: -12.019814491271973
    10. '  ' → logprob: -12.144814491271973

Token 80: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007747529074549675
    2. 'n' → logprob: -4.882747650146484
    3. ' ' → logprob: -8.882747650146484
    4. ' ' → logprob: -13.382747650146484
    5. '	n' → logprob: -14.132747650146484
    6. ' н' → logprob: -16.507747650146484
    7. '    ' → logprob: -16.507747650146484
    8. '0' → logprob: -17.007747650146484
    9. ' 
' → logprob: -17.632747650146484
    10. ' ‌' → logprob: -17.882747650146484

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23539865016937256
    2. '           ' → logprob: -1.6103986501693726
    3. '<|end|>' → logprob: -4.860398769378662
    4. 'self' → logprob: -7.110398769378662
    5. '       ' → logprob: -7.860398769378662
    6. '<|end|>' → logprob: -8.360398292541504
    7. '               ' → logprob: -8.610398292541504
    8. '
' → logprob: -9.110398292541504
    9. '  
' → logprob: -9.110398292541504
    10. '   ' → logprob: -9.235398292541504

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5309572219848633
    2. '       ' → logprob: -1.0309572219848633
    3. '
' → logprob: -3.7809572219848633
    4. '<|end|>' → logprob: -3.9059572219848633
    5. '   ' → logprob: -5.655957221984863
    6. '        ' → logprob: -5.780957221984863
    7. '        
' → logprob: -6.155957221984863
    8. '               ' → logprob: -7.530957221984863
    9. ',' → logprob: -7.655957221984863
    10. ' ' → logprob: -7.655957221984863

Token 83: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3367307484149933
    2. ' self' → logprob: -1.711730718612671
    3. '           ' → logprob: -2.336730718612671
    4. '       ' → logprob: -5.83673095703125
    5. ' ' → logprob: -6.21173095703125
    6. '   ' → logprob: -6.83673095703125
    7. '
' → logprob: -7.46173095703125
    8. '	self' → logprob: -8.08673095703125
    9. ' 
' → logprob: -8.21173095703125
    10. '0' → logprob: -8.33673095703125

Token 84: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3000074625015259
    2. '.edges' → logprob: -1.9250074625015259
    3. ' .' → logprob: -3.0500073432922363
    4. '.ad' → logprob: -3.9250073432922363
    5. '_edges' → logprob: -4.425007343292236
    6. '._' → logprob: -4.425007343292236
    7. '.graph' → logprob: -5.425007343292236
    8. 'Edges' → logprob: -5.675007343292236
    9. ' ' → logprob: -6.175007343292236
    10. 'edges' → logprob: -6.175007343292236

Token 85: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005249176174402237
    2. 'jac' → logprob: -5.2552490234375
    3. 'ja' → logprob: -11.7552490234375
    4. 'js' → logprob: -12.8802490234375
    5. '[j' → logprob: -13.8802490234375
    6. 'd' → logprob: -14.0052490234375
    7. 'jec' → logprob: -14.3802490234375
    8. '[' → logprob: -14.3802490234375
    9. 'a' → logprob: -14.7552490234375
    10. '_list' → logprob: -15.2552490234375

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2861169576644897
    2. '[' → logprob: -1.4111169576644897
    3. 'acency' → logprob: -1.4111169576644897
    4. '=' → logprob: -1.5361169576644897
    5. '_list' → logprob: -4.911117076873779
    6. 'List' → logprob: -5.286117076873779
    7. 'acent' → logprob: -5.661117076873779
    8. '_lists' → logprob: -7.161117076873779
    9. '[:]' → logprob: -7.411117076873779
    10. 'ac' → logprob: -7.661117076873779

Token 87: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.3979247510433197
    2. '[' → logprob: -1.147924780845642
    3. ' [' → logprob: -4.522924900054932
    4. ' ' → logprob: -10.022924423217773
    5. '[]' → logprob: -10.272924423217773
    6. ' defaultdict' → logprob: -10.772924423217773
    7. '[:]' → logprob: -11.147924423217773
    8. ' []' → logprob: -11.272924423217773
    9. ' {' → logprob: -12.272924423217773
    10. ' [{}' → logprob: -13.772924423217773

Token 88: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6745723485946655
    2. ')' → logprob: -0.7995723485946655
    3. '(' → logprob: -3.799572467803955
    4. ',' → logprob: -5.299572467803955
    5. '[' → logprob: -5.549572467803955
    6. ' ]' → logprob: -5.799572467803955
    7. ')]' → logprob: -6.424572467803955
    8. ' )' → logprob: -6.549572467803955
    9. ' ' → logprob: -6.924572467803955
    10. '<|end|>' → logprob: -7.299572467803955

Token 89: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0917059183120728
    2. '(' → logprob: -1.3417059183120728
    3. '(range' → logprob: -1.9667059183120728
    4. ' (' → logprob: -2.091705799102783
    5. ' range' → logprob: -2.841705799102783
    6. ' _' → logprob: -3.216705799102783
    7. '<|end|>' → logprob: -3.966705799102783
    8. '_' → logprob: -4.091705799102783
    9. '<|end|>' → logprob: -6.341705799102783
    10. 'range' → logprob: -6.466705799102783

Token 90: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1446617841720581
    2. ' in' → logprob: -2.0196619033813477
    3. 'range' → logprob: -6.269661903381348
    4. ' range' → logprob: -10.019661903381348
    5. 'i' → logprob: -11.019661903381348
    6. ' ' → logprob: -11.019661903381348
    7. 'n' → logprob: -12.519661903381348
    8. '  ' → logprob: -13.144661903381348
    9. '(range' → logprob: -13.144661903381348
    10. ')' → logprob: -13.644661903381348

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889363914728165
    2. ' range' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.453893661499023
    4. '(range' → logprob: -13.453893661499023
    5. '	range' → logprob: -15.078893661499023
    6. '  ' → logprob: -15.203893661499023
    7. '   ' → logprob: -15.453893661499023
    8. 'rang' → logprob: -16.078893661499023
    9. 'r' → logprob: -16.203893661499023
    10. '    ' → logprob: -17.828893661499023

Token 92: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006732541602104902
    2. '(' → logprob: -5.00673246383667
    3. '(self' → logprob: -11.256732940673828
    4. ' (' → logprob: -12.631732940673828
    5. '(
' → logprob: -14.756732940673828
    6. '(s' → logprob: -15.006732940673828
    7. ')' → logprob: -16.631732940673828
    8. 'n' → logprob: -17.006732940673828
    9. ')n' → logprob: -17.131732940673828
    10. '(

' → logprob: -17.756732940673828

Token 93: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007497096667066216
    2. ')' → logprob: -7.250749588012695
    3. ']' → logprob: -10.875749588012695
    4. ' )' → logprob: -11.125749588012695
    5. ')]
' → logprob: -13.000749588012695
    6. ' ' → logprob: -13.875749588012695
    7. ')
' → logprob: -13.875749588012695
    8. ')])' → logprob: -14.000749588012695
    9. '])' → logprob: -15.500749588012695
    10. '))' → logprob: -15.625749588012695

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042999427765607834
    2. ' ' → logprob: -3.167999505996704
    3. '2' → logprob: -15.792999267578125
    4. ')' → logprob: -17.167999267578125
    5. '0' → logprob: -17.167999267578125
    6. '  ' → logprob: -17.730499267578125
    7. '```' → logprob: -17.917999267578125
    8. '   ' → logprob: -17.980499267578125
    9. ' )' → logprob: -18.167999267578125
    10. '<|end|>' → logprob: -18.667999267578125

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -15.875015258789062
    4. ')' → logprob: -16.625015258789062
    5. '2' → logprob: -16.750015258789062
    6. '```' → logprob: -17.500015258789062
    7. '   ' → logprob: -18.000015258789062
    8. '１' → logprob: -19.500015258789062
    9. '  ' → logprob: -19.750015258789062
    10. '۱' → logprob: -20.062515258789062

Token 96: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.021034257486462593
    2. ')' → logprob: -3.8960342407226562
    3. ')])' → logprob: -8.271034240722656
    4. ' )' → logprob: -8.771034240722656
    5. '])' → logprob: -9.896034240722656
    6. ']' → logprob: -10.896034240722656
    7. '])]' → logprob: -12.771034240722656
    8. '       ' → logprob: -13.271034240722656
    9. ' ' → logprob: -13.896034240722656
    10. ' ])' → logprob: -14.021034240722656

Token 97: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6369178891181946
    2. '<|end|>' → logprob: -0.7619178891181946
    3. '       ' → logprob: -7.136918067932129
    4. '

' → logprob: -7.386918067932129
    5. ' 
' → logprob: -7.511918067932129
    6. ' ' → logprob: -7.511918067932129
    7. '<|end|>' → logprob: -7.761918067932129
    8. '    
' → logprob: -8.136918067932129
    9. 'def' → logprob: -8.261918067932129
    10. '        
' → logprob: -8.511918067932129

Token 99: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14946404099464417
    2. '<|end|>' → logprob: -2.0244641304016113
    3. ' 
' → logprob: -6.149464130401611
    4. ' #' → logprob: -6.899464130401611
    5. '1' → logprob: -7.024464130401611
    6. '<|end|>' → logprob: -7.774464130401611
    7. '
' → logprob: -8.149463653564453
    8. '#' → logprob: -8.274463653564453
    9. '  ' → logprob: -8.524463653564453
    10. '0' → logprob: -8.774463653564453

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16588300466537476
    2. '#' → logprob: -3.2908830642700195
    3. '0' → logprob: -3.6658830642700195
    4. ' ' → logprob: -4.1658830642700195
    5. ' range' → logprob: -4.4158830642700195
    6. 'range' → logprob: -4.4158830642700195
    7. ' indexing' → logprob: -4.5408830642700195
    8. ' #' → logprob: -5.2908830642700195
    9. 'index' → logprob: -5.5408830642700195
    10. '```' → logprob: -5.6658830642700195

Token 101: '-based' (ID: 8235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' nodes' (ID: 15749)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009541683830320835
    2. '<|end|>' → logprob: -5.3845415115356445
    3. 'def' → logprob: -5.7595415115356445
    4. '        
' → logprob: -7.7595415115356445
    5. '       ' → logprob: -7.8845415115356445
    6. '
' → logprob: -8.259541511535645
    7. ' 
' → logprob: -8.509541511535645
    8. '    
' → logprob: -8.759541511535645
    9. '

' → logprob: -9.009541511535645
    10. ' def' → logprob: -9.884541511535645

Token 106: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.11714644730091095
    2. '.' → logprob: -2.3671464920043945
    3. '.edge' → logprob: -4.9921464920043945
    4. '._' → logprob: -6.6171464920043945
    5. '.weights' → logprob: -6.8671464920043945
    6. 'Edges' → logprob: -6.8671464920043945
    7. '_edges' → logprob: -6.9921464920043945
    8. 'edges' → logprob: -7.3671464920043945
    9. '.Edge' → logprob: -7.4921464920043945
    10. '.vertices' → logprob: -7.6171464920043945

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023955129086971283
    2. '=' → logprob: -3.7739551067352295
    3. '.append' → logprob: -7.523955345153809
    4. '.' → logprob: -9.398955345153809
    5. '=[]' → logprob: -10.023955345153809
    6. ' .' → logprob: -11.648955345153809
    7. ' ' → logprob: -11.648955345153809
    8. '.extend' → logprob: -11.898955345153809
    9. '[:]' → logprob: -12.523955345153809
    10. '[' → logprob: -12.648955345153809

Token 108: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.001954563893377781
    2. '[]' → logprob: -6.251954555511475
    3. ' []
' → logprob: -10.626955032348633
    4. ' ' → logprob: -14.251955032348633
    5. ' []

' → logprob: -15.376955032348633
    6. '[]
' → logprob: -15.626955032348633
    7. ' [' → logprob: -16.001955032348633
    8. ' [])' → logprob: -16.251955032348633
    9. '[]}' → logprob: -16.376955032348633
    10. ' [];' → logprob: -16.376955032348633

Token 109: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41058549284935
    2. '<|end|>' → logprob: -1.7855855226516724
    3. '       ' → logprob: -1.9105855226516724
    4. '   ' → logprob: -5.160585403442383
    5. '        
' → logprob: -5.285585403442383
    6. ' 
' → logprob: -5.410585403442383
    7. '    
' → logprob: -5.785585403442383
    8. '<|end|>' → logprob: -7.410585403442383
    9. '  
' → logprob: -7.785585403442383
    10. '

' → logprob: -7.910585403442383

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4892534017562866
    2. '   ' → logprob: -1.2392534017562866
    3. ' def' → logprob: -2.364253520965576
    4. '
' → logprob: -6.364253520965576
    5. '       ' → logprob: -6.739253520965576
    6. ' ' → logprob: -8.364253044128418
    7. '    
' → logprob: -9.489253044128418
    8. '	def' → logprob: -10.114253044128418
    9. '        
' → logprob: -11.114253044128418
    10. '  ' → logprob: -11.614253044128418

Token 111: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.03813294693827629
    2. 'add' → logprob: -3.288132905960083
    3. '_add' → logprob: -9.538132667541504
    4. ' ' → logprob: -12.038132667541504
    5. '	add' → logprob: -12.538132667541504
    6. '.add' → logprob: -12.788132667541504
    7. ' addedge' → logprob: -13.413132667541504
    8. 'Add' → logprob: -13.413132667541504
    9. ')add' → logprob: -13.788132667541504
    10. ' ad' → logprob: -14.663132667541504

Token 112: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.006725906860083342
    2. '_' → logprob: -5.006725788116455
    3. '_e' → logprob: -12.631726264953613
    4. '_edges' → logprob: -13.006726264953613
    5. 'Edge' → logprob: -14.006726264953613
    6. '_node' → logprob: -14.131726264953613
    7. '_ed' → logprob: -14.131726264953613
    8. '_vertex' → logprob: -14.756726264953613
    9. '_neighbor' → logprob: -14.881726264953613
    10. ' _' → logprob: -14.881726264953613

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018568944185972214
    2. '(' → logprob: -4.018568992614746
    3. ' (' → logprob: -8.268568992614746
    4. '(s' → logprob: -9.018568992614746
    5. '(
' → logprob: -10.393568992614746
    6. '(u' → logprob: -12.393568992614746
    7. 'self' → logprob: -13.518568992614746
    8. '<|end|>' → logprob: -13.643568992614746
    9. '(sel' → logprob: -13.768568992614746
    10. ' self' → logprob: -14.018568992614746

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006754682399332523
    2. ' ,' → logprob: -5.7567548751831055
    3. '(self' → logprob: -5.8817548751831055
    4. 'self' → logprob: -8.506754875183105
    5. ',u' → logprob: -8.631754875183105
    6. ')' → logprob: -9.131754875183105
    7. '(' → logprob: -9.506754875183105
    8. '       ' → logprob: -9.881754875183105
    9. ',self' → logprob: -10.256754875183105
    10. '(u' → logprob: -10.256754875183105

Token 115: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.18598255515098572
    2. 'u' → logprob: -1.935982584953308
    3. ' self' → logprob: -4.310982704162598
    4. 'self' → logprob: -4.435982704162598
    5. ')' → logprob: -9.560982704162598
    6. '	u' → logprob: -10.310982704162598
    7. '<|end|>' → logprob: -10.685982704162598
    8. '       ' → logprob: -11.810982704162598
    9. '   ' → logprob: -11.810982704162598
    10. 'from' → logprob: -12.560982704162598

Token 116: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000570667558349669
    2. ' ,' → logprob: -7.500570774078369
    3. ',u' → logprob: -11.375570297241211
    4. ')' → logprob: -13.000570297241211
    5. '<|end|>' → logprob: -13.375570297241211
    6. ' ' → logprob: -14.375570297241211
    7. 'u' → logprob: -15.000570297241211
    8. ',int' → logprob: -15.125570297241211
    9. '‌,' → logprob: -15.250570297241211
    10. '=' → logprob: -15.500570297241211

Token 117: ' int' (ID: 677)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.020936131477356
    2. 'int' → logprob: -1.770936131477356
    3. ' int' → logprob: -2.0209360122680664
    4. 'v' → logprob: -2.2709360122680664
    5. ',' → logprob: -2.3959360122680664
    6. ' ' → logprob: -2.6459360122680664
    7. '<|end|>' → logprob: -3.3959360122680664
    8. ' ,' → logprob: -4.145936012268066
    9. ' u' → logprob: -4.770936012268066
    10. ',int' → logprob: -5.395936012268066

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',u' → logprob: -14.250016212463379
    4. '‌,' → logprob: -15.250016212463379
    5. ',
' → logprob: -16.125015258789062
    6. ')' → logprob: -16.500015258789062
    7. '<|end|>' → logprob: -16.750015258789062
    8. ',v' → logprob: -16.750015258789062
    9. ' ' → logprob: -17.250015258789062
    10. ',int' → logprob: -18.000015258789062

Token 119: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06994554400444031
    2. 'v' → logprob: -2.6949455738067627
    3. ' ' → logprob: -11.944945335388184
    4. '	v' → logprob: -14.569945335388184
    5. '<|end|>' → logprob: -14.569945335388184
    6. ')v' → logprob: -14.882445335388184
    7. ' 
' → logprob: -15.194945335388184
    8. ',' → logprob: -15.444945335388184
    9. ')' → logprob: -15.444945335388184
    10. '    ' → logprob: -15.882445335388184

Token 120: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5574198365211487
    2. '):' → logprob: -0.9324198365211487
    3. ')' → logprob: -3.557419776916504
    4. '):
' → logprob: -5.932419776916504
    5. ':' → logprob: -6.057419776916504
    6. ' ):' → logprob: -9.307419776916504
    7. ' ,' → logprob: -9.932419776916504
    8. ' )' → logprob: -11.307419776916504
    9. '   ' → logprob: -11.307419776916504
    10. '):
' → logprob: -11.432419776916504

Token 121: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3192886412143707
    2. 'int' → logprob: -1.4442886114120483
    3. ' )' → logprob: -3.819288730621338
    4. ')' → logprob: -4.319288730621338
    5. ' ' → logprob: -6.569288730621338
    6. ':int' → logprob: -8.31928825378418
    7. ' ):
' → logprob: -8.94428825378418
    8. ' ):' → logprob: -9.06928825378418
    9. '):
' → logprob: -9.44428825378418
    10. '1' → logprob: -9.94428825378418

Token 122: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24451345205307007
    2. '):' → logprob: -2.119513511657715
    3. ')' → logprob: -2.369513511657715
    4. '):
' → logprob: -5.869513511657715
    5. ' ,' → logprob: -8.369513511657715
    6. ' ):' → logprob: -8.869513511657715
    7. ' )' → logprob: -9.994513511657715
    8. ')->' → logprob: -10.869513511657715
    9. '):
' → logprob: -10.994513511657715
    10. ':' → logprob: -11.994513511657715

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002883214270696044
    2. '            
' → logprob: -7.377883434295654
    3. '               ' → logprob: -7.752883434295654
    4. ' 
' → logprob: -8.002882957458496
    5. '    
' → logprob: -8.002882957458496
    6. ' self' → logprob: -8.127882957458496
    7. '       ' → logprob: -8.627882957458496
    8. '<|end|>' → logprob: -9.002882957458496
    9. '
' → logprob: -9.377882957458496
    10. '  
' → logprob: -9.502882957458496

Token 124: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.5257914066314697
    2. 'edge' (adapté à ' edge') → logprob: -1.4007914066314697
    3. ' e' → logprob: -2.5257914066314697
    4. 'e' → logprob: -2.6507914066314697
    5. '           ' → logprob: -4.775791168212891
    6. ' self' → logprob: -6.525791168212891
    7. 'self' → logprob: -7.025791168212891
    8. '       ' → logprob: -8.02579116821289
    9. ' new' → logprob: -8.02579116821289
    10. '   ' → logprob: -8.52579116821289

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615515194833279
    2. '=' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.133615493774414
    4. ' =
' → logprob: -16.008615493774414
    5. '_' → logprob: -16.508615493774414
    6. 's' → logprob: -17.133615493774414
    7. ')' → logprob: -18.008615493774414
    8. '=edge' → logprob: -18.383615493774414
    9. '	' → logprob: -18.633615493774414
    10. '=
' → logprob: -18.758615493774414

Token 126: ' Train' (ID: 32131)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25272196531295776
    2. 'self' → logprob: -1.5027220249176025
    3. ' Train' → logprob: -7.877721786499023
    4. 'Train' → logprob: -7.877721786499023
    5. '	self' → logprob: -10.502721786499023
    6. '=self' → logprob: -13.252721786499023
    7. '[self' → logprob: -13.627721786499023
    8. ' ' → logprob: -13.627721786499023
    9. '(self' → logprob: -13.752721786499023
    10. 'Self' → logprob: -14.752721786499023

Token 127: 'Fare' (ID: 131526)
  Prédit: 'Fare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fare' → logprob: -1.0325924449716695e-05
    2. 'F' → logprob: -12.62501049041748
    3. 'Fair' → logprob: -12.75001049041748
    4. ' Fare' → logprob: -13.50001049041748
    5. 'Far' → logprob: -14.50001049041748
    6. 'Edge' → logprob: -14.62501049041748
    7. 'Fa' → logprob: -15.00001049041748
    8. 'Faire' → logprob: -15.12501049041748
    9. 'Fear' → logprob: -15.50001049041748
    10. '   ' → logprob: -16.125009536743164

Token 128: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -1.6240566083070007e-06
    2. 'Edge' → logprob: -13.750001907348633
    3. 'Systems' → logprob: -15.500001907348633
    4. ' System' → logprob: -15.625001907348633
    5. 'Sy' → logprob: -16.875001907348633
    6. 'S' → logprob: -17.125001907348633
    7. '<System' → logprob: -17.500001907348633
    8. 'system' → logprob: -17.875001907348633
    9. 'Sys' → logprob: -17.875001907348633
    10. '	System' → logprob: -18.125001907348633

Token 129: '.Edge' (ID: 195894)
  Prédit: '.Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Edge' → logprob: -0.005304196383804083
    2. '.' → logprob: -5.255304336547852
    3. '.Ed' → logprob: -9.880304336547852
    4. ' .' → logprob: -11.630304336547852
    5. '.E' → logprob: -12.505304336547852
    6. '.Graph' → logprob: -12.630304336547852
    7. '<Edge' → logprob: -13.505304336547852
    8. '   ' → logprob: -15.005304336547852
    9. 'Edge' → logprob: -15.005304336547852
    10. ''.' → logprob: -15.755304336547852

Token 130: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. '(self' → logprob: -18.6250057220459
    4. 'u' → logprob: -18.6250057220459
    5. '(v' → logprob: -19.8750057220459
    6. ' (' → logprob: -20.0000057220459
    7. '(
' → logprob: -20.3750057220459
    8. ')(' → logprob: -21.1250057220459
    9. '(U' → logprob: -21.2500057220459
    10. '[u' → logprob: -21.5000057220459

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039623770862817764
    2. ',v' → logprob: -7.875396251678467
    3. ' ,' → logprob: -11.125395774841309
    4. ',
' → logprob: -14.250395774841309
    5. ')' → logprob: -15.750395774841309
    6. ',u' → logprob: -15.750395774841309
    7. '<|end|>' → logprob: -15.875395774841309
    8. 'v' → logprob: -16.250396728515625
    9. ' ' → logprob: -16.375396728515625
    10. '‌,' → logprob: -16.500396728515625

Token 132: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12713870406150818
    2. 'v' → logprob: -2.127138614654541
    3. ')' → logprob: -8.7521390914917
    4. ' ' → logprob: -10.8771390914917
    5. ')v' → logprob: -11.6271390914917
    6. ' )' → logprob: -11.7521390914917
    7. ' 
' → logprob: -11.8771390914917
    8. '	v' → logprob: -12.2521390914917
    9. ' ' → logprob: -13.7521390914917
    10. ')
' → logprob: -14.2521390914917

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741271734237671
    2. ')
' → logprob: -0.9741271734237671
    3. ')
' → logprob: -9.974126815795898
    4. '           ' → logprob: -13.349126815795898
    5. ' )
' → logprob: -13.974126815795898
    6. '       ' → logprob: -14.349126815795898
    7. ' )' → logprob: -15.349126815795898
    8. ')

' → logprob: -15.599126815795898
    9. ')`
' → logprob: -17.5991268157959
    10. '   ' → logprob: -17.8491268157959

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03612050041556358
    2. '
' → logprob: -3.5361204147338867
    3. ' self' → logprob: -5.911120414733887
    4. 'self' → logprob: -6.661120414733887
    5. '<|end|>' → logprob: -6.786120414733887
    6. '       ' → logprob: -7.911120414733887
    7. '            
' → logprob: -8.786120414733887
    8. ')' → logprob: -8.786120414733887
    9. ',' → logprob: -9.286120414733887
    10. ')
' → logprob: -9.661120414733887

Token 135: ' eid' (ID: 131397)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6811375617980957
    2. ' self' → logprob: -0.9311375617980957
    3. '           ' → logprob: -2.3061375617980957
    4. '       ' → logprob: -9.681137084960938
    5. '
' → logprob: -10.181137084960938
    6. ' ' → logprob: -10.431137084960938
    7. '	self' → logprob: -11.056137084960938
    8. '          ' → logprob: -11.306137084960938
    9. '   ' → logprob: -11.556137084960938
    10. '         ' → logprob: -12.181137084960938

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19815202057361603
    2. '=' → logprob: -1.9481520652770996
    3. 'x' → logprob: -3.9481520652770996
    4. 's' → logprob: -4.0731520652771
    5. ')' → logprob: -7.1981520652771
    6. ' ' → logprob: -10.073151588439941
    7. '.append' → logprob: -10.198151588439941
    8. '.' → logprob: -11.073151588439941
    9. ' =
' → logprob: -11.573151588439941
    10. '=len' → logprob: -11.573151588439941

Token 137: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0024780353996902704
    2. 'len' → logprob: -6.002478122711182
    3. '	len' → logprob: -13.252477645874023
    4. '(len' → logprob: -15.002477645874023
    5. '=len' → logprob: -16.377477645874023
    6. '[len' → logprob: -16.627477645874023
    7. ' ' → logprob: -17.002477645874023
    8. ' self' → logprob: -18.127477645874023
    9. ',len' → logprob: -18.502477645874023
    10. '<len' → logprob: -19.127477645874023

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010378103470429778
    2. '(' → logprob: -6.87603759765625
    3. '(s' → logprob: -13.50103759765625
    4. '(
' → logprob: -13.50103759765625
    5. '(this' → logprob: -14.00103759765625
    6. 'self' → logprob: -14.50103759765625
    7. '(sel' → logprob: -14.75103759765625
    8. '(edge' → logprob: -15.75103759765625
    9. ' (' → logprob: -16.25103759765625
    10. '(se' → logprob: -17.12603759765625

Token 139: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0006299942615441978
    2. '.' → logprob: -7.750629901885986
    3. 'edges' → logprob: -9.375630378723145
    4. ' .' → logprob: -10.250630378723145
    5. '.ed' → logprob: -10.625630378723145
    6. '.edge' → logprob: -11.625630378723145
    7. '
' → logprob: -12.500630378723145
    8. ').' → logprob: -12.625630378723145
    9. '.faces' → logprob: -12.750630378723145
    10. '.lines' → logprob: -12.750630378723145

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10095307230949402
    2. ')
' → logprob: -2.3509531021118164
    3. ' )' → logprob: -7.475953102111816
    4. ' )
' → logprob: -8.725953102111816
    5. ')
' → logprob: -11.725953102111816
    6. ')

' → logprob: -12.975953102111816
    7. '<|end|>' → logprob: -13.100953102111816
    8. '
' → logprob: -13.600953102111816
    9. ')add' → logprob: -13.975953102111816
    10. ' ' → logprob: -14.475953102111816

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16046762466430664
    2. '
' → logprob: -2.0354676246643066
    3. '<|end|>' → logprob: -4.535467624664307
    4. '       ' → logprob: -6.160467624664307
    5. '            
' → logprob: -6.535467624664307
    6. '<|end|>' → logprob: -6.785467624664307
    7. ')' → logprob: -7.910467624664307
    8. 'self' → logprob: -8.285467147827148
    9. '               ' → logprob: -8.410467147827148
    10. ' 
' → logprob: -8.410467147827148

Token 142: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10991521179676056
    2. 'self' (adapté à ' self') → logprob: -2.609915256500244
    3. '           ' → logprob: -3.609915256500244
    4. '
' → logprob: -6.734915256500244
    5. ' 
' → logprob: -7.109915256500244
    6. '<|end|>' → logprob: -7.359915256500244
    7. '            
' → logprob: -8.484914779663086
    8. '       ' → logprob: -8.609914779663086
    9. ' ' → logprob: -8.609914779663086
    10. '            ' → logprob: -9.984914779663086

Token 143: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.00040421701851300895
    2. '.' → logprob: -7.875404357910156
    3. 'edges' → logprob: -11.250404357910156
    4. ' .' → logprob: -11.625404357910156
    5. '.faces' → logprob: -15.000404357910156
    6. ' edges' → logprob: -15.125404357910156
    7. '.entries' → logprob: -15.500404357910156
    8. '.ed' → logprob: -15.625404357910156
    9. '.points' → logprob: -15.750404357910156
    10. '.ad' → logprob: -16.375404357910156

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005620885640382767
    2. '.' → logprob: -7.5005621910095215
    3. '.app' → logprob: -12.875561714172363
    4. '.push' → logprob: -13.625561714172363
    5. '.ap' → logprob: -13.750561714172363
    6. '.extend' → logprob: -13.875561714172363
    7. '.add' → logprob: -14.000561714172363
    8. 'append' → logprob: -14.250561714172363
    9. '.insert' → logprob: -14.250561714172363
    10. '.Append' → logprob: -14.500561714172363

Token 145: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -4.310693111619912e-05
    2. '(' → logprob: -10.625042915344238
    3. 'edge' → logprob: -11.125042915344238
    4. ' (' → logprob: -13.000042915344238
    5. ' edge' → logprob: -14.125042915344238
    6. '(
' → logprob: -14.625042915344238
    7. '=edge' → logprob: -14.875042915344238
    8. '(edges' → logprob: -16.500043869018555
    9. '(e' → logprob: -16.625043869018555
    10. '(event' → logprob: -18.750043869018555

Token 146: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05895198881626129
    2. ')' → logprob: -2.9339520931243896
    3. '           ' → logprob: -5.5589518547058105
    4. ' )
' → logprob: -8.683952331542969
    5. ')
' → logprob: -11.058952331542969
    6. '
' → logprob: -11.183952331542969
    7. ' )' → logprob: -12.558952331542969
    8. '       ' → logprob: -12.933952331542969
    9. ')

' → logprob: -13.433952331542969
    10. '   ' → logprob: -14.683952331542969

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004584634210914373
    2. '
' → logprob: -5.879584789276123
    3. '            
' → logprob: -7.254584789276123
    4. '<|end|>' → logprob: -7.629584789276123
    5. '    
' → logprob: -9.129584312438965
    6. '  
' → logprob: -9.379584312438965
    7. ' 
' → logprob: -9.504584312438965
    8. ',' → logprob: -9.629584312438965
    9. '```' → logprob: -10.254584312438965
    10. '       ' → logprob: -10.254584312438965

Token 148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.42031410336494446
    2. ' self' → logprob: -1.170314073562622
    3. '           ' → logprob: -3.420314073562622
    4. ' ' → logprob: -10.045313835144043
    5. '	self' → logprob: -10.045313835144043
    6. '   ' → logprob: -10.420313835144043
    7. ' ' → logprob: -11.045313835144043
    8. '            
' → logprob: -11.795313835144043
    9. '
' → logprob: -11.795313835144043
    10. '  ' → logprob: -11.920313835144043

Token 149: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0006675214972347021
    2. '.' → logprob: -7.375667572021484
    3. ' .' → logprob: -10.625667572021484
    4. '
' → logprob: -12.250667572021484
    5. '.edges' → logprob: -12.750667572021484
    6. 'adj' → logprob: -12.750667572021484
    7. '`.' → logprob: -14.500667572021484
    8. '.Ad' → logprob: -14.750667572021484
    9. '.euler' → logprob: -14.875667572021484
    10. '.user' → logprob: -15.000667572021484

Token 150: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00011868205183418468
    2. '[' → logprob: -9.875118255615234
    3. '[j' → logprob: -9.875118255615234
    4. 'd' → logprob: -11.250118255615234
    5. 'c' → logprob: -14.125118255615234
    6. '.append' → logprob: -14.625118255615234
    7. '[self' → logprob: -14.875118255615234
    8. '(self' → logprob: -15.500118255615234
    9. '[u' → logprob: -16.125118255615234
    10. 'jac' → logprob: -16.125118255615234

Token 151: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.625003814697266
    3. 'u' → logprob: -17.125003814697266
    4. '[user' → logprob: -17.375003814697266
    5. '[self' → logprob: -18.000003814697266
    6. '[v' → logprob: -18.125003814697266
    7. ' [' → logprob: -18.750003814697266
    8. '```' → logprob: -19.000003814697266
    9. '[
' → logprob: -20.125003814697266
    10. '[node' → logprob: -20.375003814697266

Token 152: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00023452966706827283
    2. ']' → logprob: -8.500234603881836
    3. ' ].' → logprob: -10.750234603881836
    4. '.append' → logprob: -12.125234603881836
    5. ').' → logprob: -12.875234603881836
    6. '.' → logprob: -13.625234603881836
    7. '][' → logprob: -16.750234603881836
    8. '[' → logprob: -17.000234603881836
    9. '   ' → logprob: -17.500234603881836
    10. '}.' → logprob: -17.750234603881836

Token 153: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.625000953674316
    3. '.append' → logprob: -15.125000953674316
    4. 'appen' → logprob: -16.875
    5. 'add' → logprob: -19.625
    6. '	append' → logprob: -19.625
    7. '_append' → logprob: -20.625
    8. 'Append' → logprob: -20.625
    9. 'push' → logprob: -20.625
    10. 'app' → logprob: -20.625

Token 154: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.03455163165926933
    2. '((' → logprob: -3.4095516204833984
    3. '(' → logprob: -7.034551620483398
    4. 'e' → logprob: -11.784551620483398
    5. ' (' → logprob: -11.909551620483398
    6. 'eid' → logprob: -12.034551620483398
    7. '(
' → logprob: -13.659551620483398
    8. ' eid' → logprob: -14.034551620483398
    9. '(('' → logprob: -14.909551620483398
    10. ' e' → logprob: -15.409551620483398

Token 155: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00978796649724245
    2. 'd' → logprob: -4.6347880363464355
    3. '(d' → logprob: -11.884787559509277
    4. '_id' → logprob: -12.134787559509277
    5. 'dge' → logprob: -12.134787559509277
    6. '(id' → logprob: -12.384787559509277
    7. '(' → logprob: -12.634787559509277
    8. 'i' → logprob: -13.759787559509277
    9. 'д' → logprob: -14.134787559509277
    10. 'eid' → logprob: -14.259787559509277

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030585117638111115
    2. ')
' → logprob: -3.5305850505828857
    3. ' )' → logprob: -7.280585289001465
    4. ' )
' → logprob: -8.905585289001465
    5. ')
' → logprob: -11.780585289001465
    6. '           ' → logprob: -14.155585289001465
    7. ')

' → logprob: -14.405585289001465
    8. '),' → logprob: -15.655585289001465
    9. ')#' → logprob: -15.780585289001465
    10. ');' → logprob: -15.780585289001465

Token 157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.468279752880335e-05
    2. '       ' → logprob: -10.500064849853516
    3. '            
' → logprob: -11.125064849853516
    4. '   ' → logprob: -12.500064849853516
    5. '
' → logprob: -12.625064849853516
    6. ' ' → logprob: -12.750064849853516
    7. ' self' → logprob: -13.000064849853516
    8. ' 
' → logprob: -13.250064849853516
    9. 'self' → logprob: -13.375064849853516
    10. '<|end|>' → logprob: -13.750064849853516

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08091887086629868
    2. ' self' → logprob: -2.580918788909912
    3. '           ' → logprob: -6.205918788909912
    4. '       ' → logprob: -12.83091926574707
    5. '   ' → logprob: -13.20591926574707
    6. '	self' → logprob: -13.33091926574707
    7. '[self' → logprob: -14.33091926574707
    8. ' ' → logprob: -14.45591926574707
    9. '               ' → logprob: -14.95591926574707
    10. '            
' → logprob: -14.95591926574707

Token 159: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.004545946139842272
    2. '.v' → logprob: -5.504546165466309
    3. '.' → logprob: -7.754546165466309
    4. ' .' → logprob: -10.629546165466309
    5. 'adj' → logprob: -12.254546165466309
    6. '.
' → logprob: -12.879546165466309
    7. '[v' → logprob: -13.754546165466309
    8. '.Ad' → logprob: -13.879546165466309
    9. '.vi' → logprob: -14.754546165466309
    10. 'v' → logprob: -15.004546165466309

Token 160: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.8828707804204896e-05
    2. '[v' → logprob: -10.500048637390137
    3. 'v' → logprob: -11.000048637390137
    4. '[j' → logprob: -12.750048637390137
    5. 'd' → logprob: -13.875048637390137
    6. ' j' → logprob: -15.500048637390137
    7. '
' → logprob: -16.125049591064453
    8. '[' → logprob: -16.125049591064453
    9. 'jac' → logprob: -16.875049591064453
    10. '[u' → logprob: -17.000049591064453

Token 161: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -10.500030517578125
    3. '[u' → logprob: -13.500030517578125
    4. 'v' → logprob: -13.875030517578125
    5. ' [' → logprob: -15.125030517578125
    6. '[
' → logprob: -15.125030517578125
    7. '```' → logprob: -16.750030517578125
    8. '	v' → logprob: -17.500030517578125
    9. '[val' → logprob: -17.875030517578125
    10. '[V' → logprob: -18.000030517578125

Token 162: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001446545124053955
    2. ').' → logprob: -6.751446723937988
    3. ']' → logprob: -8.876446723937988
    4. ' ].' → logprob: -9.126446723937988
    5. '.' → logprob: -11.251446723937988
    6. '.append' → logprob: -11.751446723937988
    7. ')' → logprob: -13.001446723937988
    8. '           ' → logprob: -13.876446723937988
    9. '   ' → logprob: -14.001446723937988
    10. '[u' → logprob: -14.126446723937988

Token 163: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.306760805164231e-05
    2. ' append' → logprob: -11.50001335144043
    3. '.append' → logprob: -13.00001335144043
    4. 'appen' → logprob: -14.50001335144043
    5. 'app' → logprob: -16.87501335144043
    6. '	append' → logprob: -17.12501335144043
    7. 'add' → logprob: -18.12501335144043
    8. 'pend' → logprob: -18.12501335144043
    9. 'appe' → logprob: -18.62501335144043
    10. 'Append' → logprob: -19.25001335144043

Token 164: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0005905635771341622
    2. '(u' → logprob: -7.875590801239014
    3. '(' → logprob: -8.500590324401855
    4. 'eid' → logprob: -12.375590324401855
    5. '(
' → logprob: -13.500590324401855
    6. 'e' → logprob: -14.125590324401855
    7. '(uid' → logprob: -15.125590324401855
    8. ' eid' → logprob: -15.500590324401855
    9. ' (' → logprob: -15.875590324401855
    10. '((' → logprob: -16.625591278076172

Token 165: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.07010271400213242
    2. 'd' → logprob: -2.6951026916503906
    3. ' d' → logprob: -9.82010269165039
    4. ' id' → logprob: -10.82010269165039
    5. ')' → logprob: -11.07010269165039
    6. ' eid' → logprob: -11.57010269165039
    7. 'eid' → logprob: -11.57010269165039
    8. '   ' → logprob: -11.94510269165039
    9. '_d' → logprob: -12.07010269165039
    10. ' ' → logprob: -12.07010269165039

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4894986785948277e-05
    2. ')
' → logprob: -10.500044822692871
    3. ' )' → logprob: -11.000044822692871
    4. '<|end|>' → logprob: -15.250044822692871
    5. ')

' → logprob: -15.625044822692871
    6. '       ' → logprob: -17.125045776367188
    7. ')return' → logprob: -17.500045776367188
    8. '),' → logprob: -17.750045776367188
    9. ')
' → logprob: -18.125045776367188
    10. '   ' → logprob: -18.250045776367188

Token 167: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12258598208427429
    2. '<|end|>' → logprob: -2.2475860118865967
    3. '<|end|>' → logprob: -5.997585773468018
    4. '   ' → logprob: -5.997585773468018
    5. '       ' → logprob: -6.372585773468018
    6. '    
' → logprob: -6.622585773468018
    7. '```' → logprob: -7.122585773468018
    8. '        
' → logprob: -8.247586250305176
    9. ' 
' → logprob: -8.997586250305176
    10. 'def' → logprob: -9.747586250305176

Token 168: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7819476127624512
    2. '
' → logprob: -0.9069476127624512
    3. '       ' → logprob: -2.781947612762451
    4. '    
' → logprob: -3.531947612762451
    5. '<|end|>' → logprob: -3.656947612762451
    6. '        
' → logprob: -4.781947612762451
    7. 'def' → logprob: -5.031947612762451
    8. '```' → logprob: -6.406947612762451
    9. 'class' (adapté à ' class') → logprob: -7.156947612762451
    10. '    ' → logprob: -7.281947612762451

Token 169: ' D' (ID: 415)
  Prédit: ' Train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Train' → logprob: -1.7404470443725586
    2. ' Solution' → logprob: -1.8654470443725586
    3. ' DS' → logprob: -2.8654470443725586
    4. ' Query' → logprob: -2.8654470443725586
    5. ' DFS' → logprob: -2.8654470443725586
    6. ' Union' → logprob: -2.9904470443725586
    7. ' Solver' → logprob: -3.1154470443725586
    8. ' Tree' → logprob: -3.2404470443725586
    9. ' Fare' → logprob: -3.2404470443725586
    10. ' D' → logprob: -3.3654470443725586

Token 170: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.06446608901023865
    2. '   ' → logprob: -3.5644659996032715
    3. 'ijk' → logprob: -4.1894659996032715
    4. 'ij' → logprob: -5.5644659996032715
    5. 'is' → logprob: -5.6894659996032715
    6. 'i' → logprob: -5.9394659996032715
    7. 'FS' → logprob: -6.1894659996032715
    8. 'I' → logprob: -6.5644659996032715
    9. 'e' → logprob: -7.1894659996032715
    10. 'jik' → logprob: -7.4394659996032715

Token 171: 'Result' (ID: 2769)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013840439496561885
    2. ':
' → logprob: -6.626384258270264
    3. '):' → logprob: -10.876383781433105
    4. '():' → logprob: -11.751383781433105
    5. '(' → logprob: -11.876383781433105
    6. ' :' → logprob: -12.001383781433105
    7. 'Solver' → logprob: -12.501383781433105
    8. '{' → logprob: -12.626383781433105
    9. 'Algorithm' → logprob: -13.001383781433105
    10. '   ' → logprob: -14.126383781433105

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016587569552939385
    2. ':
' → logprob: -8.750165939331055
    3. '(' → logprob: -12.500165939331055
    4. ' :' → logprob: -13.125165939331055
    5. '):' → logprob: -14.125165939331055
    6. ':

' → logprob: -14.875165939331055
    7. ':def' → logprob: -15.875165939331055
    8. '(object' → logprob: -16.000165939331055
    9. '():' → logprob: -16.375165939331055
    10. '：' → logprob: -16.625165939331055

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45469143986701965
    2. ':
' → logprob: -1.7046914100646973
    3. '   ' → logprob: -2.0796914100646973
    4. ':' → logprob: -2.9546914100646973
    5. '(' → logprob: -6.579691410064697
    6. '    ' → logprob: -6.829691410064697
    7. 'def' → logprob: -7.329691410064697
    8. '<|end|>' → logprob: -7.329691410064697
    9. '
' → logprob: -7.704691410064697
    10. '(object' → logprob: -7.954691410064697

Token 174: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5770686864852905
    2. 'def' (adapté à ' def') → logprob: -0.8270686864852905
    3. '   ' → logprob: -7.20206880569458
    4. '    ' → logprob: -8.702068328857422
    5. ' ' → logprob: -9.327068328857422
    6. '	def' → logprob: -9.952068328857422
    7. 'class' → logprob: -10.577068328857422
    8. '       ' → logprob: -10.827068328857422
    9. '  ' → logprob: -10.952068328857422
    10. ':def' → logprob: -12.702068328857422

Token 175: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009036296978592873
    2. '__' → logprob: -4.759036064147949
    3. 'init' → logprob: -8.00903606414795
    4. ' init' → logprob: -10.00903606414795
    5. ' def' → logprob: -10.50903606414795
    6. '_init' → logprob: -11.63403606414795
    7. '___' → logprob: -13.13403606414795
    8. ' ' → logprob: -13.13403606414795
    9. 'def' → logprob: -13.25903606414795
    10. ' ' → logprob: -13.88403606414795

Token 176: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.941850526549388e-06
    2. ' init' → logprob: -12.250007629394531
    3. 'i' → logprob: -14.375007629394531
    4. 'in' → logprob: -14.375007629394531
    5. '   ' → logprob: -14.500007629394531
    6. 'inite' → logprob: -14.875007629394531
    7. 'int' → logprob: -15.000007629394531
    8. 'ini' → logprob: -15.375007629394531
    9. '  ' → logprob: -15.750007629394531
    10. '```' → logprob: -15.875007629394531

Token 177: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6359446048736572
    2. '(self' → logprob: -0.7609446048736572
    3. '(' → logprob: -6.010944366455078
    4. ' (' → logprob: -7.260944366455078
    5. '__(
' → logprob: -9.510944366455078
    6. 'self' → logprob: -10.135944366455078
    7. '__' → logprob: -10.510944366455078
    8. '_(' → logprob: -11.760944366455078
    9. ' ' → logprob: -11.885944366455078
    10. '   ' → logprob: -12.010944366455078

Token 178: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00040755473310127854
    2. ' self' → logprob: -8.125407218933105
    3. ')' → logprob: -9.875407218933105
    4. '       ' → logprob: -10.500407218933105
    5. '):
' → logprob: -10.500407218933105
    6. '(self' → logprob: -13.125407218933105
    7. '   ' → logprob: -14.125407218933105
    8. '	self' → logprob: -14.750407218933105
    9. ',' → logprob: -14.875407218933105
    10. '
' → logprob: -15.500407218933105

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009836840443313122
    2. ' ,' → logprob: -4.884836673736572
    3. '):' → logprob: -6.259836673736572
    4. ' ):' → logprob: -9.00983715057373
    5. ',n' → logprob: -9.88483715057373
    6. 'self' → logprob: -9.88483715057373
    7. '):
' → logprob: -10.00983715057373
    8. ')' → logprob: -11.00983715057373
    9. ' )' → logprob: -12.38483715057373
    10. ' ' → logprob: -12.63483715057373

Token 180: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6080873608589172
    2. 'dist' → logprob: -0.9830873608589172
    3. ' distances' → logprob: -2.7330873012542725
    4. ' n' → logprob: -5.233087539672852
    5. 'n' → logprob: -5.608087539672852
    6. 'self' → logprob: -5.983087539672852
    7. 'distance' → logprob: -6.858087539672852
    8. ' self' → logprob: -6.983087539672852
    9. '   ' → logprob: -7.358087539672852
    10. ' distance' → logprob: -7.733087539672852

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6688414812088013
    2. '):' → logprob: -1.1688414812088013
    3. ':' → logprob: -1.7938414812088013
    4. ' ):' → logprob: -5.418841361999512
    5. '):
' → logprob: -5.543841361999512
    6. ' ,' → logprob: -6.293841361999512
    7. ')' → logprob: -9.543841361999512
    8. ' :' → logprob: -9.668841361999512
    9. '   ' → logprob: -9.793841361999512
    10. ':list' → logprob: -9.918841361999512

Token 182: ' parent' (ID: 5980)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.15475359559059143
    2. ' prev' → logprob: -2.0297536849975586
    3. 'parent' → logprob: -4.904753684997559
    4. ' parent' → logprob: -5.654753684997559
    5. 'pre' → logprob: -7.654753684997559
    6. '   ' → logprob: -8.654753684997559
    7. 'par' → logprob: -8.654753684997559
    8. 'pred' → logprob: -9.404753684997559
    9. ' ' → logprob: -10.654753684997559
    10. ' par' → logprob: -10.779753684997559

Token 183: '_edge' (ID: 43226)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0704621747136116
    2. '):
' → logprob: -2.695462226867676
    3. '):
' → logprob: -8.320462226867676
    4. ')' → logprob: -9.070462226867676
    5. ' ):' → logprob: -9.570462226867676
    6. '=None' → logprob: -9.695462226867676
    7. ':' → logprob: -11.320462226867676
    8. ',' → logprob: -11.445462226867676
    9. '=' → logprob: -12.695462226867676
    10. ' ):
' → logprob: -12.945462226867676

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1288738250732422
    2. '):
' → logprob: -2.128873825073242
    3. '=None' → logprob: -6.628873825073242
    4. ')' → logprob: -8.378873825073242
    5. '):
' → logprob: -8.503873825073242
    6. ' ):' → logprob: -9.378873825073242
    7. ':' → logprob: -10.628873825073242
    8. '=' → logprob: -10.628873825073242
    9. 's' → logprob: -10.753873825073242
    10. ',' → logprob: -11.003873825073242

Token 185: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04780739173293114
    2. '       ' → logprob: -4.172807216644287
    3. '):
' → logprob: -4.422807216644287
    4. '):' → logprob: -4.922807216644287
    5. ':
' → logprob: -4.922807216644287
    6. ',' → logprob: -6.047807216644287
    7. '           ' → logprob: -6.797807216644287
    8. ')' → logprob: -8.172807693481445
    9. ' :' → logprob: -8.172807693481445
    10. '=' → logprob: -8.672807693481445

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12703530490398407
    2. ' self' → logprob: -2.12703537940979
    3. '           ' → logprob: -9.252035140991211
    4. '       ' → logprob: -11.877035140991211
    5. '   ' → logprob: -13.002035140991211
    6. '	self' → logprob: -14.002035140991211
    7. ' ' → logprob: -14.877035140991211
    8. ' ' → logprob: -15.127035140991211
    9. '               ' → logprob: -16.12703514099121
    10. '        ' → logprob: -16.37703514099121

Token 187: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.0015100972959771752
    2. '.' → logprob: -6.501510143280029
    3. 'dist' → logprob: -12.251509666442871
    4. ' .' → logprob: -13.001509666442871
    5. '	dist' → logprob: -15.376509666442871
    6. '.
' → logprob: -15.751509666442871
    7. '.d' → logprob: -15.876509666442871
    8. ' dist' → logprob: -16.001510620117188
    9. '.distance' → logprob: -16.626510620117188
    10. '.dis' → logprob: -16.751510620117188

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31397730112075806
    2. ' =' → logprob: -1.3139772415161133
    3. ',' → logprob: -7.563977241516113
    4. '[' → logprob: -8.813977241516113
    5. ' ' → logprob: -11.063977241516113
    6. '<|end|>' → logprob: -11.438977241516113
    7. '   ' → logprob: -12.313977241516113
    8. ')' → logprob: -12.813977241516113
    9. '=[]' → logprob: -13.063977241516113
    10. ' =
' → logprob: -13.438977241516113

Token 189: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12692894041538239
    2. ' dist' → logprob: -2.1269290447235107
    3. '	dist' → logprob: -14.25192928314209
    4. '(dist' → logprob: -15.62692928314209
    5. '_dist' → logprob: -16.876928329467773
    6. '.dist' → logprob: -17.251928329467773
    7. 'Dist' → logprob: -17.501928329467773
    8. 'd' → logprob: -18.251928329467773
    9. ' ' → logprob: -19.251928329467773
    10. 'dict' → logprob: -19.376928329467773

Token 190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009345670696347952
    2. '
' → logprob: -7.250934600830078
    3. 'self' → logprob: -8.875934600830078
    4. '       ' → logprob: -9.750934600830078
    5. ' self' → logprob: -11.625934600830078
    6. '<|end|>' → logprob: -12.125934600830078
    7. '   ' → logprob: -12.250934600830078
    8. '            
' → logprob: -14.000934600830078
    9. '          ' → logprob: -14.125934600830078
    10. ',' → logprob: -14.125934600830078

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038446132093667984
    2. '
' → logprob: -6.003844738006592
    3. 'self' → logprob: -7.003844738006592
    4. '       ' → logprob: -7.753844738006592
    5. ' self' → logprob: -11.378844261169434
    6. '   ' → logprob: -11.628844261169434
    7. '            
' → logprob: -12.753844261169434
    8. 'parent' → logprob: -13.753844261169434
    9. '    
' → logprob: -14.003844261169434
    10. ',' → logprob: -14.128844261169434

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03832662105560303
    2. ' self' → logprob: -3.2883267402648926
    3. '           ' → logprob: -8.538326263427734
    4. 'parent' → logprob: -9.413326263427734
    5. ' parent' → logprob: -12.163326263427734
    6. '   ' → logprob: -13.913326263427734
    7. '       ' → logprob: -14.413326263427734
    8. ' ' → logprob: -15.413326263427734
    9. '	self' → logprob: -15.413326263427734
    10. '            ' → logprob: -16.163326263427734

Token 193: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0012517772847786546
    2. 'parent' → logprob: -6.876251697540283
    3. '.' → logprob: -8.876252174377441
    4. '_parent' → logprob: -9.626252174377441
    5. ' parent' → logprob: -12.501252174377441
    6. 'Parent' → logprob: -13.001252174377441
    7. '[parent' → logprob: -13.376252174377441
    8. '.Parent' → logprob: -13.501252174377441
    9. ' .' → logprob: -13.626252174377441
    10. ',parent' → logprob: -14.126252174377441

Token 194: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0012969005620107055
    2. '_edges' → logprob: -7.3762969970703125
    3. '_' → logprob: -7.5012969970703125
    4. ' _' → logprob: -9.626296997070312
    5. '_e' → logprob: -10.251296997070312
    6. '_ed' → logprob: -12.626296997070312
    7. '_EDGE' → logprob: -13.501296997070312
    8. '_line' → logprob: -13.626296997070312
    9. ')' → logprob: -13.751296997070312
    10. '
' → logprob: -14.126296997070312

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693430483341217
    2. ' =' → logprob: -2.126934289932251
    3. ' ' → logprob: -13.376934051513672
    4. '=[]' → logprob: -13.626934051513672
    5. '=
' → logprob: -13.876934051513672
    6. ')' → logprob: -14.251934051513672
    7. ' =
' → logprob: -14.501934051513672
    8. '[' → logprob: -14.626934051513672
    9. '=

' → logprob: -15.751934051513672
    10. '=None' → logprob: -15.876934051513672

Token 196: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6933233737945557
    2. ' parent' → logprob: -0.6933233737945557
    3. '[parent' → logprob: -9.568323135375977
    4. '[' → logprob: -10.568323135375977
    5. ' None' → logprob: -10.693323135375977
    6. 'None' → logprob: -10.818323135375977
    7. '	parent' → logprob: -11.068323135375977
    8. ' ' → logprob: -12.068323135375977
    9. '(parent' → logprob: -12.443323135375977
    10. '.parent' → logprob: -12.568323135375977

Token 197: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00046868418576195836
    2. 'edge' → logprob: -7.750468730926514
    3. '_' → logprob: -10.500468254089355
    4. '_e' → logprob: -12.750468254089355
    5. '_edges' → logprob: -13.375468254089355
    6. '_ed' → logprob: -13.500468254089355
    7. 'ed' → logprob: -13.875468254089355
    8. ' edge' → logprob: -14.250468254089355
    9. '_EDGE' → logprob: -14.375468254089355
    10. 'e' → logprob: -14.625468254089355

Token 198: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06976980715990067
    2. '<|end|>' → logprob: -2.944769859313965
    3. '   ' → logprob: -5.069769859313965
    4. '       ' → logprob: -5.819769859313965
    5. 'def' → logprob: -5.944769859313965
    6. '    
' → logprob: -6.944769859313965
    7. '<|end|>' → logprob: -7.069769859313965
    8. '

' → logprob: -7.819769859313965
    9. '        
' → logprob: -7.944769859313965
    10. ' def' → logprob: -9.319769859313965

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08684492856264114
    2. '
' → logprob: -2.8368449211120605
    3. '    
' → logprob: -4.7118449211120605
    4. 'def' → logprob: -4.8368449211120605
    5. '       ' → logprob: -5.0868449211120605
    6. '        
' → logprob: -6.7118449211120605
    7. ' 
' → logprob: -10.086845397949219
    8. '            
' → logprob: -10.336845397949219
    9. ' def' → logprob: -10.586845397949219
    10. '

' → logprob: -10.711845397949219

Token 200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.578544557094574
    2. '   ' → logprob: -0.828544557094574
    3. ' def' → logprob: -6.203544616699219
    4. '
' → logprob: -7.953544616699219
    5. 'class' → logprob: -9.453544616699219
    6. '    
' → logprob: -9.828544616699219
    7. '	def' → logprob: -9.828544616699219
    8. '       ' → logprob: -10.953544616699219
    9. '        
' → logprob: -11.578544616699219
    10. 'import' → logprob: -11.578544616699219

Token 201: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012361899949610233
    2. '__' → logprob: -4.512362003326416
    3. ' _' → logprob: -7.262362003326416
    4. ' ' → logprob: -8.262361526489258
    5. ' calculate' → logprob: -8.887361526489258
    6. ' find' → logprob: -9.637361526489258
    7. ' init' → logprob: -10.387361526489258
    8. ' ' → logprob: -10.512361526489258
    9. ' def' → logprob: -10.762361526489258
    10. '_' → logprob: -11.012361526489258

Token 202: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.3557529857498594e-05
    2. 'i' → logprob: -11.25002384185791
    3. ' init' → logprob: -11.50002384185791
    4. 'ini' → logprob: -16.000022888183594
    5. ' i' → logprob: -16.125022888183594
    6. '_init' → logprob: -16.625022888183594
    7. 'in' → logprob: -16.875022888183594
    8. 'int' → logprob: -16.875022888183594
    9. ' ' → logprob: -19.750022888183594
    10. 'inite' → logprob: -19.750022888183594

Token 203: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -8.506661833962426e-05
    2. '(self' → logprob: -9.62508487701416
    3. '__' → logprob: -11.12508487701416
    4. '__(
' → logprob: -12.75008487701416
    5. '_(' → logprob: -13.87508487701416
    6. '(' → logprob: -16.375085830688477
    7. '__((' → logprob: -16.875085830688477
    8. ' (' → logprob: -16.875085830688477
    9. '__('' → logprob: -17.000085830688477
    10. '<>(' → logprob: -17.250085830688477

Token 204: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006400037091225386
    2. ' self' → logprob: -7.375639915466309
    3. '
' → logprob: -12.000639915466309
    4. '   ' → logprob: -12.250639915466309
    5. ')' → logprob: -13.750639915466309
    6. ' ' → logprob: -14.125639915466309
    7. ',' → logprob: -15.000639915466309
    8. '       ' → logprob: -15.875639915466309
    9. '0' → logprob: -16.500640869140625
    10. '(self' → logprob: -16.875640869140625

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033844609279185534
    2. ' ,' → logprob: -6.128384590148926
    3. 'self' → logprob: -6.753384590148926
    4. ')' → logprob: -10.878384590148926
    5. ',self' → logprob: -12.628384590148926
    6. '):' → logprob: -13.128384590148926
    7. ' self' → logprob: -13.253384590148926
    8. ' ' → logprob: -13.378384590148926
    9. '(self' → logprob: -13.628384590148926
    10. ' )' → logprob: -14.253384590148926

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37626099586486816
    2. ' n' → logprob: -1.5012609958648682
    3. 'num' → logprob: -2.876260995864868
    4. 'self' → logprob: -4.376260757446289
    5. ' num' → logprob: -5.126260757446289
    6. ' station' → logprob: -5.376260757446289
    7. ' self' → logprob: -5.751260757446289
    8. '   ' → logprob: -6.001260757446289
    9. ')' → logprob: -6.501260757446289
    10. 'station' → logprob: -7.001260757446289

Token 207: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5797283053398132
    2. ',' → logprob: -1.079728364944458
    3. '):
' → logprob: -2.829728364944458
    4. ':' → logprob: -3.204728364944458
    5. ' ):' → logprob: -7.829728126525879
    6. ')' → logprob: -8.954728126525879
    7. ' ,' → logprob: -10.329728126525879
    8. '=' → logprob: -10.704728126525879
    9. '):
' → logprob: -11.079728126525879
    10. '   ' → logprob: -11.329728126525879

Token 208: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1582739353179932
    2. ' int' → logprob: -1.4082739353179932
    3. ' )' → logprob: -1.5332739353179932
    4. ')' → logprob: -1.9082739353179932
    5. ' n' → logprob: -2.908273935317993
    6. ' ' → logprob: -4.658273696899414
    7. 'n' → logprob: -4.783273696899414
    8. ')n' → logprob: -6.533273696899414
    9. ',' → logprob: -7.408273696899414
    10. ')>' → logprob: -7.533273696899414

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47694721817970276
    2. '):' → logprob: -0.9769471883773804
    3. ')' → logprob: -5.97694730758667
    4. '):
' → logprob: -8.476946830749512
    5. ' ):' → logprob: -9.351946830749512
    6. ' ,' → logprob: -10.851946830749512
    7. ':' → logprob: -11.851946830749512
    8. ',
' → logprob: -13.101946830749512
    9. ' ' → logprob: -13.601946830749512
    10. ' )' → logprob: -13.601946830749512

Token 210: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5677273869514465
    2. 'edges' → logprob: -1.8177273273468018
    3. 'm' → logprob: -2.0677273273468018
    4. ' m' → logprob: -2.1927273273468018
    5. ' fares' → logprob: -4.567727565765381
    6. '   ' → logprob: -4.692727565765381
    7. 'k' → logprob: -6.567727565765381
    8. ')' → logprob: -7.067727565765381
    9. 'fare' → logprob: -7.192727565765381
    10. ' k' → logprob: -7.317727565765381

Token 211: '_uv' (ID: 150764)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014387142844498158
    2. ':' → logprob: -5.139387130737305
    3. ',' → logprob: -5.389387130737305
    4. '):
' → logprob: -6.139387130737305
    5. ')' → logprob: -6.639387130737305
    6. ' ):' → logprob: -8.389387130737305
    7. '=' → logprob: -9.639387130737305
    8. '=[]' → logprob: -10.389387130737305
    9. '_list' → logprob: -10.889387130737305
    10. ':list' → logprob: -11.389387130737305

Token 212: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02540208213031292
    2. '):
' → logprob: -4.150402069091797
    3. ':' → logprob: -4.775402069091797
    4. ')' → logprob: -7.525402069091797
    5. 's' → logprob: -9.025402069091797
    6. '_list' → logprob: -9.650402069091797
    7. ' ):' → logprob: -9.775402069091797
    8. ',' → logprob: -10.150402069091797
    9. '_pairs' → logprob: -11.025402069091797
    10. ':list' → logprob: -11.400402069091797

Token 213: ' q' (ID: 2335)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4574132561683655
    2. ' fares' → logprob: -1.7074131965637207
    3. 'edges' → logprob: -1.9574131965637207
    4. 'fa' → logprob: -4.707413196563721
    5. 'fare' → logprob: -4.707413196563721
    6. ' edge' → logprob: -5.332413196563721
    7. ' fare' → logprob: -5.457413196563721
    8. 'f' → logprob: -5.832413196563721
    9. ' base' → logprob: -5.832413196563721
    10. 'edge' → logprob: -6.394913196563721

Token 214: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06582939624786377
    2. '):
' → logprob: -3.190829277038574
    3. 'u' → logprob: -4.440829277038574
    4. ':' → logprob: -5.065829277038574
    5. ',' → logprob: -6.815829277038574
    6. ')' → logprob: -7.065829277038574
    7. '_' → logprob: -7.315829277038574
    8. 'uries' → logprob: -7.565829277038574
    9. 's' → logprob: -7.815829277038574
    10. '_queries' → logprob: -7.940829277038574

Token 215: ' int' (ID: 677)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18175923824310303
    2. 'int' → logprob: -2.5567593574523926
    3. '):
' → logprob: -3.1817593574523926
    4. ')' → logprob: -4.306759357452393
    5. ':' → logprob: -4.306759357452393
    6. ':int' → logprob: -4.931759357452393
    7. ' ):' → logprob: -5.556759357452393
    8. '=None' → logprob: -7.056759357452393
    9. '   ' → logprob: -7.181759357452393
    10. 'n' → logprob: -7.181759357452393

Token 216: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018322836607694626
    2. ',' → logprob: -4.143322944641113
    3. ')' → logprob: -6.143322944641113
    4. '):
' → logprob: -9.018322944641113
    5. ':' → logprob: -11.268322944641113
    6. ' ):' → logprob: -13.143322944641113
    7. '   ' → logprob: -14.393322944641113
    8. '=' → logprob: -15.018322944641113
    9. '),' → logprob: -15.143322944641113
    10. '):
' → logprob: -15.768322944641113

Token 217: ' raise' (ID: 9338)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0026330947875977
    2. 'queries' → logprob: -1.6276330947875977
    3. ')' → logprob: -2.7526330947875977
    4. ' edges' → logprob: -2.7526330947875977
    5. 'fa' → logprob: -2.8776330947875977
    6. 'fare' → logprob: -3.2526330947875977
    7. ' fares' → logprob: -4.002633094787598
    8. 'prices' → logprob: -4.252633094787598
    9. ' queries' → logprob: -4.377633094787598
    10. 'stations' → logprob: -4.377633094787598

Token 218: '_plan' (ID: 53840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23821993172168732
    2. '_on' → logprob: -2.738219976425171
    3. '_amount' → logprob: -2.988219976425171
    4. '_errors' → logprob: -4.363219738006592
    5. '_exception' → logprob: -4.488219738006592
    6. '_)' → logprob: -4.613219738006592
    7. '_error' → logprob: -4.613219738006592
    8. 's' → logprob: -4.988219738006592
    9. '_for' → logprob: -5.238219738006592
    10. '_f' → logprob: -5.363219738006592

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7455137372016907
    2. 's' → logprob: -1.370513677597046
    3. ':' → logprob: -2.245513677597046
    4. '=' → logprob: -3.120513677597046
    5. ',' → logprob: -3.370513677597046
    6. ')' → logprob: -3.495513677597046
    7. ' ):' → logprob: -3.745513677597046
    8. '):
' → logprob: -4.120513916015625
    9. '_' → logprob: -5.370513916015625
    10. ' =' → logprob: -5.995513916015625

Token 220: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014254944398999214
    2. '):' → logprob: -5.389255046844482
    3. ':
' → logprob: -5.514255046844482
    4. '       ' → logprob: -5.639255046844482
    5. '):
' → logprob: -6.514255046844482
    6. ')' → logprob: -8.389254570007324
    7. ',' → logprob: -8.514254570007324
    8. '<|end|>' → logprob: -9.764254570007324
    9. '():' → logprob: -11.889254570007324
    10. '<|end|>' → logprob: -12.014254570007324

Token 221: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3357331156730652
    2. '       ' → logprob: -1.33573317527771
    3. 'self' (adapté à ' self') → logprob: -3.83573317527771
    4. ' ' → logprob: -8.210733413696289
    5. '   ' → logprob: -8.710733413696289
    6. '	self' → logprob: -9.210733413696289
    7. '        ' → logprob: -10.585733413696289
    8. '           ' → logprob: -10.585733413696289
    9. ' ' → logprob: -11.710733413696289
    10. '        
' → logprob: -12.210733413696289

Token 222: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.11438310146331787
    2. '.' → logprob: -2.6143832206726074
    3. ' .' → logprob: -3.3643832206726074
    4. 'n' → logprob: -9.48938274383545
    5. '.graph' → logprob: -9.73938274383545
    6. '.user' → logprob: -11.48938274383545
    7. ' n' → logprob: -11.48938274383545
    8. '.train' → logprob: -11.48938274383545
    9. '.q' → logprob: -11.61438274383545
    10. '.Graph' → logprob: -11.61438274383545

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289683729410172
    2. '=' → logprob: -2.2378969192504883
    3. ',' → logprob: -9.987896919250488
    4. ' =
' → logprob: -11.362896919250488
    5. ' ' → logprob: -11.737896919250488
    6. '=n' → logprob: -13.112896919250488
    7. '<|end|>' → logprob: -13.737896919250488
    8. ' ,' → logprob: -13.862896919250488
    9. '.' → logprob: -13.862896919250488
    10. '    ' → logprob: -14.237896919250488

Token 224: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.003177952254191041
    2. 'n' → logprob: -5.753178119659424
    3. '	n' → logprob: -15.128177642822266
    4. ' ' → logprob: -18.878177642822266
    5. ')n' → logprob: -19.253177642822266
    6. '<|end|>' → logprob: -19.753177642822266
    7. ' 
' → logprob: -20.003177642822266
    8. '_n' → logprob: -20.003177642822266
    9. '$n' → logprob: -20.378177642822266
    10. ' ' → logprob: -20.378177642822266

Token 225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049844544380903244
    2. '<|end|>' → logprob: -3.42484450340271
    3. '       ' → logprob: -4.424844741821289
    4. '        
' → logprob: -6.299844741821289
    5. '<|end|>' → logprob: -7.424844741821289
    6. 'self' → logprob: -7.799844741821289
    7. ',' → logprob: -7.924844741821289
    8. '  
' → logprob: -8.049844741821289
    9. '
' → logprob: -8.674844741821289
    10. ' 
' → logprob: -9.174844741821289

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02834208309650421
    2. '
' → logprob: -3.7783420085906982
    3. 'self' → logprob: -5.778342247009277
    4. '<|end|>' → logprob: -6.778342247009277
    5. '        
' → logprob: -7.528342247009277
    6. ' self' → logprob: -9.153342247009277
    7. '   ' → logprob: -9.653342247009277
    8. '  
' → logprob: -10.403342247009277
    9. ',' → logprob: -10.403342247009277
    10. ' ' → logprob: -10.903342247009277

Token 227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.026390982791781425
    2. ' self' → logprob: -3.65139102935791
    3. '
' → logprob: -9.77639102935791
    4. 's' → logprob: -11.90139102935791
    5. '<|end|>' → logprob: -12.02639102935791
    6. '       ' → logprob: -12.15139102935791
    7. '        
' → logprob: -12.40139102935791
    8. 'from' → logprob: -12.65139102935791
    9. ' 
' → logprob: -12.90139102935791
    10. 'def' → logprob: -14.15139102935791

Token 228: '.m' (ID: 1021)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.18203949928283691
    2. '.' → logprob: -2.182039499282837
    3. '.q' → logprob: -3.682039499282837
    4. ' .' → logprob: -4.182039260864258
    5. '.Graph' → logprob: -4.932039260864258
    6. '.g' → logprob: -5.682039260864258
    7. '.edges' → logprob: -6.807039260864258
    8. '.train' → logprob: -7.932039260864258
    9. 'Graph' → logprob: -8.432039260864258
    10. '.raise' → logprob: -8.432039260864258

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1001635268330574
    2. '=' → logprob: -2.475163459777832
    3. '<|end|>' → logprob: -4.600163459777832
    4. ' ' → logprob: -7.225163459777832
    5. ',' → logprob: -8.225163459777832
    6. '<|end|>' → logprob: -10.100163459777832
    7. ' ,' → logprob: -10.725163459777832
    8. ' +=' → logprob: -11.725163459777832
    9. ' =
' → logprob: -11.725163459777832
    10. ')' → logprob: -11.975163459777832

Token 230: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023258987814188004
    2. ' len' → logprob: -3.773258924484253
    3. '	len' → logprob: -11.898259162902832
    4. '(len' → logprob: -13.148259162902832
    5. '[len' → logprob: -13.398259162902832
    6. '0' → logprob: -13.773259162902832
    7. '=len' → logprob: -14.273259162902832
    8. 'q' → logprob: -14.773259162902832
    9. ' q' → logprob: -14.773259162902832
    10. ' ' → logprob: -15.273259162902832

Token 231: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.00016325322212651372
    2. '(' → logprob: -9.000163078308105
    3. 'edges' → logprob: -10.250163078308105
    4. ' edges' → logprob: -13.000163078308105
    5. '(
' → logprob: -13.875163078308105
    6. '(edge' → logprob: -14.500163078308105
    7. '(self' → logprob: -15.125163078308105
    8. '(e' → logprob: -16.875164031982422
    9. '(vertices' → logprob: -17.000164031982422
    10. ' (' → logprob: -17.125164031982422

Token 232: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -1.0280383548888494e-06
    2. '_u' → logprob: -14.500000953674316
    3. '_' → logprob: -15.375000953674316
    4. 'uv' → logprob: -15.625000953674316
    5. '_)' → logprob: -18.875001907348633
    6. ')' → logprob: -19.000001907348633
    7. '_ut' → logprob: -19.125001907348633
    8. '_ud' → logprob: -19.375001907348633
    9. '_uc' → logprob: -19.500001907348633
    10. ' uv' → logprob: -19.875001907348633

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005632805987261236
    2. ')
' → logprob: -8.125563621520996
    3. ' )' → logprob: -8.250563621520996
    4. ',' → logprob: -13.250563621520996
    5. ' )
' → logprob: -13.750563621520996
    6. '),' → logprob: -14.000563621520996
    7. ' ' → logprob: -14.750563621520996
    8. '       ' → logprob: -15.750563621520996
    9. ')m' → logprob: -15.875563621520996
    10. ']' → logprob: -16.00056266784668

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007202956476248801
    2. '
' → logprob: -8.000720024108887
    3. '<|end|>' → logprob: -8.750720024108887
    4. '   ' → logprob: -9.625720024108887
    5. '           ' → logprob: -9.875720024108887
    6. ',' → logprob: -10.500720024108887
    7. 'self' → logprob: -10.750720024108887
    8. '        
' → logprob: -10.875720024108887
    9. ' self' → logprob: -11.125720024108887
    10. ' ' → logprob: -11.750720024108887

Token 235: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6978721022605896
    2. 'self' (adapté à ' self') → logprob: -0.6978721022605896
    3. '       ' → logprob: -5.447872161865234
    4. '
' → logprob: -8.447872161865234
    5. '	self' → logprob: -9.822872161865234
    6. '        
' → logprob: -10.572872161865234
    7. ' 
' → logprob: -10.572872161865234
    8. '   ' → logprob: -10.697872161865234
    9. ' ' → logprob: -10.947872161865234
    10. '        ' → logprob: -12.072872161865234

Token 236: '.q' (ID: 20954)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.2546202540397644
    2. '.' → logprob: -2.254620313644409
    3. '.q' → logprob: -2.629620313644409
    4. ' .' → logprob: -3.254620313644409
    5. '.g' → logprob: -5.25462007522583
    6. '.Graph' → logprob: -6.75462007522583
    7. '.train' → logprob: -7.25462007522583
    8. '.raise' → logprob: -7.50462007522583
    9. '.edges' → logprob: -8.254620552062988
    10. '.f' → logprob: -8.254620552062988

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1429303139448166
    2. '=' → logprob: -2.017930269241333
    3. ',' → logprob: -8.892930030822754
    4. ' ' → logprob: -10.017930030822754
    5. '<|end|>' → logprob: -10.142930030822754
    6. ' =
' → logprob: -11.142930030822754
    7. '  ' → logprob: -12.767930030822754
    8. ' ,' → logprob: -12.767930030822754
    9. '    ' → logprob: -12.892930030822754
    10. '<|end|>' → logprob: -13.017930030822754

Token 238: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.004090627655386925
    2. 'q' → logprob: -5.504090785980225
    3. ' ' → logprob: -11.379090309143066
    4. ' ' → logprob: -14.879090309143066
    5. '	q' → logprob: -15.379090309143066
    6. ' 
' → logprob: -15.879090309143066
    7. '?q' → logprob: -17.129091262817383
    8. ''q' → logprob: -17.629091262817383
    9. '[q' → logprob: -17.879091262817383
    10. ' ‌' → logprob: -18.129091262817383

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5776843428611755
    2. '<|end|>' → logprob: -1.2026844024658203
    3. '
' → logprob: -2.0776844024658203
    4. 'self' → logprob: -4.82768440246582
    5. '        
' → logprob: -6.82768440246582
    6. '<|end|>' → logprob: -7.07768440246582
    7. ' self' → logprob: -7.20268440246582
    8. ' 
' → logprob: -7.20268440246582
    9. ',' → logprob: -7.82768440246582
    10. ' ' → logprob: -8.32768440246582

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008706517517566681
    2. '
' → logprob: -5.008706569671631
    3. 'self' → logprob: -6.883706569671631
    4. '<|end|>' → logprob: -8.258706092834473
    5. '        
' → logprob: -8.758706092834473
    6. ',' → logprob: -9.008706092834473
    7. ' self' → logprob: -9.008706092834473
    8. '           ' → logprob: -9.258706092834473
    9. '   ' → logprob: -9.508706092834473
    10. '  
' → logprob: -10.633706092834473

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10716042667627335
    2. ' self' → logprob: -2.3571603298187256
    3. '       ' → logprob: -4.982160568237305
    4. '
' → logprob: -10.482160568237305
    5. '   ' → logprob: -10.857160568237305
    6. '	self' → logprob: -11.857160568237305
    7. ' ' → logprob: -11.982160568237305
    8. '           ' → logprob: -12.982160568237305
    9. '        
' → logprob: -13.232160568237305
    10. '(self' → logprob: -14.482160568237305

Token 242: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.4541129469871521
    2. '.raise' → logprob: -1.2041130065917969
    3. ' .' → logprob: -3.829113006591797
    4. '.' → logprob: -3.829113006591797
    5. '.g' → logprob: -4.329113006591797
    6. 'raise' → logprob: -5.579113006591797
    7. 'graph' → logprob: -6.204113006591797
    8. '.Graph' → logprob: -7.829113006591797
    9. '.edges' → logprob: -7.829113006591797
    10. ' raise' → logprob: -7.829113006591797

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28121262788772583
    2. ' =' → logprob: -1.406212568283081
    3. '.' → logprob: -10.03121280670166
    4. '.=' → logprob: -11.28121280670166
    5. ' =
' → logprob: -13.40621280670166
    6. ' ' → logprob: -14.15621280670166
    7. '=
' → logprob: -14.15621280670166
    8. '=create' → logprob: -14.90621280670166
    9. ')' → logprob: -15.15621280670166
    10. '.add' → logprob: -15.28121280670166

Token 244: ' self' (ID: 1051)
  Prédit: 'Train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Train' → logprob: -0.10349059849977493
    2. ' Train' → logprob: -2.3534905910491943
    3. 'self' → logprob: -6.353490829467773
    4. ' self' → logprob: -6.478490829467773
    5. ' train' → logprob: -14.353490829467773
    6. '_train' → logprob: -14.603490829467773
    7. 'train' → logprob: -14.728490829467773
    8. 'Self' → logprob: -16.103490829467773
    9. '   ' → logprob: -16.603490829467773
    10. ' ' → logprob: -16.603490829467773

Token 245: '.Graph' (ID: 20759)
  Prédit: '.Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Graph' → logprob: -0.008555353619158268
    2. '.' → logprob: -4.8835554122924805
    3. '.Tr' → logprob: -7.1335554122924805
    4. '.Graphics' → logprob: -9.88355541229248
    5. ' .' → logprob: -11.25855541229248
    6. '.G' → logprob: -11.25855541229248
    7. '.Class' → logprob: -11.25855541229248
    8. '
' → logprob: -11.63355541229248
    9. '.Edge' → logprob: -11.75855541229248
    10. '.Ge' → logprob: -12.25855541229248

Token 246: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.126521035796031e-05
    2. '(' → logprob: -9.750091552734375
    3. '(self' → logprob: -10.375091552734375
    4. ' (' → logprob: -13.375091552734375
    5. '(
' → logprob: -15.875091552734375
    6. '(N' → logprob: -19.500091552734375
    7. 'n' → logprob: -19.625091552734375
    8. '```' → logprob: -19.625091552734375
    9. '((' → logprob: -19.750091552734375
    10. ')(' → logprob: -19.750091552734375

Token 247: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869646191596985
    2. ')' → logprob: -1.1369645595550537
    3. ')

' → logprob: -9.386964797973633
    4. ')
' → logprob: -12.011964797973633
    5. ' )
' → logprob: -12.761964797973633
    6. ' )' → logprob: -14.511964797973633
    7. ' ' → logprob: -16.261964797973633
    8. '       ' → logprob: -16.511964797973633
    9. '   ' → logprob: -16.761964797973633
    10. '
' → logprob: -17.011964797973633

Token 248: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1659954935312271
    2. 'for' (adapté à ' for') → logprob: -2.0409955978393555
    3. '       ' → logprob: -3.7909955978393555
    4. '
' → logprob: -7.7909955978393555
    5. '	for' → logprob: -10.415995597839355
    6. '        
' → logprob: -11.290995597839355
    7. '   ' → logprob: -11.790995597839355
    8. ' 
' → logprob: -12.540995597839355
    9. '```' → logprob: -13.040995597839355
    10. ' ' → logprob: -13.165995597839355

Token 250: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.36912015080451965
    2. 'u' → logprob: -1.2441201210021973
    3. '(u' → logprob: -4.119120121002197
    4. ' (' → logprob: -5.494120121002197
    5. '   ' → logprob: -9.869120597839355
    6. '(' → logprob: -11.244120597839355
    7. '	u' → logprob: -11.869120597839355
    8. ' ' → logprob: -11.994120597839355
    9. ',u' → logprob: -12.369120597839355
    10. '_u' → logprob: -12.744120597839355

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014961333014070988
    2. ',v' → logprob: -4.264961242675781
    3. ' ,' → logprob: -7.139961242675781
    4. ',_' → logprob: -13.889961242675781
    5. '_,' → logprob: -13.889961242675781
    6. ',u' → logprob: -14.639961242675781
    7. 'v' → logprob: -14.764961242675781
    8. ',value' → logprob: -14.764961242675781
    9. ',
' → logprob: -15.139961242675781
    10. '‌,' → logprob: -15.764961242675781

Token 252: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1269465833902359
    2. 'v' → logprob: -2.1269466876983643
    3. ' ' → logprob: -11.001946449279785
    4. '	v' → logprob: -13.501946449279785
    5. '_v' → logprob: -15.501946449279785
    6. ' ' → logprob: -16.3769474029541
    7. ',v' → logprob: -16.6269474029541
    8. '<|end|>' → logprob: -17.1269474029541
    9. 'space' → logprob: -17.3769474029541
    10. ' 
' → logprob: -17.3769474029541

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01117266621440649
    2. 'in' → logprob: -4.511172771453857
    3. '<|end|>' → logprob: -9.7611722946167
    4. ' ' → logprob: -10.3861722946167
    5. ',' → logprob: -11.1361722946167
    6. '	in' → logprob: -12.0111722946167
    7. '<|end|>' → logprob: -12.1361722946167
    8. '        ' → logprob: -13.5111722946167
    9. '    ' → logprob: -13.6361722946167
    10. ' ,' → logprob: -13.6361722946167

Token 254: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.07890620082616806
    2. 'edges' → logprob: -2.578906297683716
    3. '(edges' → logprob: -11.328906059265137
    4. '_edges' → logprob: -12.703906059265137
    5. '.edges' → logprob: -14.203906059265137
    6. 'Edges' → logprob: -15.328906059265137
    7. '
' → logprob: -15.703906059265137
    8. ' ' → logprob: -15.828906059265137
    9. '<|end|>' → logprob: -16.828907012939453
    10. 'edge' → logprob: -17.453907012939453

Token 255: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -7.386147626675665e-05
    2. '_' → logprob: -9.750073432922363
    3. ' in' → logprob: -12.375073432922363
    4. '_u' → logprob: -12.625073432922363
    5. 'uv' → logprob: -13.125073432922363
    6. '   ' → logprob: -14.000073432922363
    7. ',' → logprob: -14.125073432922363
    8. ':' → logprob: -14.250073432922363
    9. ' uv' → logprob: -14.500073432922363
    10. ')' → logprob: -15.000073432922363

Token 256: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023250321100931615
    2. ':
' → logprob: -8.750232696533203
    3. ' :' → logprob: -10.125232696533203
    4. '):' → logprob: -10.625232696533203
    5. ',' → logprob: -11.875232696533203
    6. '<|end|>' → logprob: -14.375232696533203
    7. ')' → logprob: -14.750232696533203
    8. '):
' → logprob: -15.000232696533203
    9. '.' → logprob: -15.125232696533203
    10. '():' → logprob: -15.625232696533203

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014227678067982197
    2. '               ' → logprob: -5.514227867126465
    3. '            ' → logprob: -5.514227867126465
    4. ' self' → logprob: -6.014227867126465
    5. '            
' → logprob: -7.514227867126465
    6. ':' → logprob: -7.514227867126465
    7. ' ' → logprob: -7.639227867126465
    8. 'self' → logprob: -7.764227867126465
    9. ' 
' → logprob: -7.764227867126465
    10. '       ' → logprob: -8.139227867126465

Token 258: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011156757362186909
    2. 'self' (adapté à ' self') → logprob: -4.5111565589904785
    3. '               ' → logprob: -9.886157035827637
    4. '            ' → logprob: -10.761157035827637
    5. '           ' → logprob: -11.011157035827637
    6. ' ' → logprob: -11.261157035827637
    7. ' ' → logprob: -12.511157035827637
    8. '	self' → logprob: -13.261157035827637
    9. '   ' → logprob: -14.261157035827637
    10. '    ' → logprob: -15.136157035827637

Token 259: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0005888947052881122
    2. '.' → logprob: -7.500588893890381
    3. ' .' → logprob: -10.375589370727539
    4. 'graph' → logprob: -13.000589370727539
    5. '	graph' → logprob: -14.000589370727539
    6. '.g' → logprob: -14.125589370727539
    7. ' graph' → logprob: -15.250589370727539
    8. '.add' → logprob: -15.375589370727539
    9. '.git' → logprob: -16.25058937072754
    10. '.graphics' → logprob: -16.62558937072754

Token 260: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007142199319787323
    2. '.' → logprob: -7.250714302062988
    3. ' .' → logprob: -12.625714302062988
    4. '.ad' → logprob: -14.250714302062988
    5. '.append' → logprob: -16.625713348388672
    6. '   ' → logprob: -16.750713348388672
    7. 'add' → logprob: -17.250713348388672
    8. '.
' → logprob: -17.625713348388672
    9. '.Add' → logprob: -17.750713348388672
    10. ').' → logprob: -18.000713348388672

Token 261: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.75000286102295
    3. '_edges' → logprob: -15.75000286102295
    4. '_ed' → logprob: -16.000003814697266
    5. '_e' → logprob: -16.625003814697266
    6. 'edge' → logprob: -17.500003814697266
    7. '_EDGE' → logprob: -18.875003814697266
    8. ' _' → logprob: -19.000003814697266
    9. '_
' → logprob: -19.500003814697266
    10. ' edge' → logprob: -19.625003814697266

Token 262: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0031929241959005594
    2. '(' → logprob: -5.753192901611328
    3. ' (' → logprob: -11.128192901611328
    4. '(
' → logprob: -15.253192901611328
    5. '((' → logprob: -15.628192901611328
    6. 'u' → logprob: -17.128192901611328
    7. ' u' → logprob: -17.128192901611328
    8. '(user' → logprob: -17.503192901611328
    9. '(v' → logprob: -18.003192901611328
    10. ' ' → logprob: -18.503192901611328

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005007936619222164
    2. ',v' → logprob: -5.380007743835449
    3. ' ,' → logprob: -7.880007743835449
    4. ',
' → logprob: -12.00500774383545
    5. ',u' → logprob: -13.50500774383545
    6. 'v' → logprob: -14.13000774383545
    7. ' v' → logprob: -14.75500774383545
    8. '(v' → logprob: -15.38000774383545
    9. '‌,' → logprob: -15.88000774383545
    10. ')' → logprob: -16.380008697509766

Token 264: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38687190413475037
    2. ' v' → logprob: -1.1368719339370728
    3. ' ' → logprob: -15.261872291564941
    4. '
' → logprob: -15.636872291564941
    5. ' 
' → logprob: -15.761872291564941
    6. ')v' → logprob: -15.886872291564941
    7. ')' → logprob: -16.636871337890625
    8. '	v' → logprob: -16.761871337890625
    9. '<|end|>' → logprob: -17.136871337890625
    10. ' ' → logprob: -18.636871337890625

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010306637705070898
    2. ')
' → logprob: -9.250102996826172
    3. ' )' → logprob: -12.000102996826172
    4. '
' → logprob: -15.125102996826172
    5. '       ' → logprob: -15.500102996826172
    6. ')return' → logprob: -16.500102996826172
    7. ')

' → logprob: -16.500102996826172
    8. ')n' → logprob: -16.750102996826172
    9. ')#' → logprob: -17.125102996826172
    10. '           ' → logprob: -17.125102996826172

Token 266: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3706763982772827
    2. '       ' → logprob: -1.4956763982772827
    3. '<|end|>' → logprob: -2.4956765174865723
    4. '   ' → logprob: -6.995676517486572
    5. '        
' → logprob: -7.495676517486572
    6. '    
' → logprob: -7.620676517486572
    7. '<|end|>' → logprob: -8.245676040649414
    8. 'self' → logprob: -8.370676040649414
    9. 'def' → logprob: -8.745676040649414
    10. ' 
' → logprob: -9.370676040649414

Token 267: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5750084519386292
    2. 'self' (adapté à ' self') → logprob: -1.0750083923339844
    3. '
' → logprob: -2.4500083923339844
    4. ' self' → logprob: -5.075008392333984
    5. '   ' → logprob: -6.325008392333984
    6. '<|end|>' → logprob: -7.450008392333984
    7. 'def' → logprob: -7.700008392333984
    8. '        
' → logprob: -8.575008392333984
    9. '    
' → logprob: -9.450008392333984
    10. ' ' → logprob: -9.700008392333984

Token 268: '.raise' (ID: 164718)
  Prédit: '.raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raise' → logprob: -0.07912848889827728
    2. '.' → logprob: -2.7041285037994385
    3. ' .' → logprob: -5.454128265380859
    4. '.q' → logprob: -5.579128265380859
    5. 'raise' → logprob: -7.454128265380859
    6. '.r' → logprob: -8.70412826538086
    7. '.raises' → logprob: -8.95412826538086
    8. ' raise' → logprob: -10.20412826538086
    9. '.plan' → logprob: -10.45412826538086
    10. '.f' → logprob: -10.57912826538086

Token 269: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -0.0010245933663100004
    2. '_pl' → logprob: -7.3760247230529785
    3. 's' → logprob: -8.00102424621582
    4. '_' → logprob: -10.62602424621582
    5. 'plan' → logprob: -11.12602424621582
    6. '_map' → logprob: -12.00102424621582
    7. 'd' → logprob: -12.62602424621582
    8. '_s' → logprob: -12.62602424621582
    9. '_price' → logprob: -13.12602424621582
    10. '_cost' → logprob: -13.75102424621582

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327128410339355
    2. ' =' → logprob: -1.3132712841033936
    3. 's' → logprob: -12.063271522521973
    4. ' ' → logprob: -12.813271522521973
    5. '_' → logprob: -14.563271522521973
    6. '   ' → logprob: -16.063270568847656
    7. '[' → logprob: -16.563270568847656
    8. '=[]' → logprob: -16.813270568847656
    9. '_=' → logprob: -16.938270568847656
    10. 'd' → logprob: -17.188270568847656

Token 271: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6931530237197876
    2. 'raise' → logprob: -0.6931530237197876
    3. '_raise' → logprob: -13.318153381347656
    4. '	raise' → logprob: -13.443153381347656
    5. '[]' → logprob: -14.193153381347656
    6. '[' → logprob: -14.693153381347656
    7. 'rais' → logprob: -14.943153381347656
    8. ' ' → logprob: -15.318153381347656
    9. ' ' → logprob: -15.568153381347656
    10. '.raise' → logprob: -15.568153381347656

Token 272: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.000001907348633
    3. 'plan' → logprob: -14.750001907348633
    4. '_pl' → logprob: -15.125001907348633
    5. ' _' → logprob: -16.000001907348633
    6. 'ed' → logprob: -16.375001907348633
    7. '_PLAN' → logprob: -16.500001907348633
    8. '_p' → logprob: -17.125001907348633
    9. '_raise' → logprob: -17.125001907348633
    10. 'Plan' → logprob: -17.750001907348633

Token 273: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.58218914270401
    2. '<|end|>' → logprob: -0.83218914270401
    3. '<|end|>' → logprob: -5.457189083099365
    4. '

' → logprob: -6.832189083099365
    5. 'def' → logprob: -8.207189559936523
    6. '   ' → logprob: -8.582189559936523
    7. ' def' → logprob: -8.832189559936523
    8. '    
' → logprob: -9.457189559936523
    9. '
    
' → logprob: -10.207189559936523
    10. '       ' → logprob: -10.207189559936523

Token 274: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2620984613895416
    2. '<|end|>' → logprob: -1.7620984315872192
    3. 'def' → logprob: -3.637098550796509
    4. '   ' → logprob: -3.887098550796509
    5. '<|end|>' → logprob: -5.13709831237793
    6. '    
' → logprob: -5.63709831237793
    7. ' def' → logprob: -6.63709831237793
    8. '

' → logprob: -8.01209831237793
    9. '        
' → logprob: -8.63709831237793
    10. '       ' → logprob: -8.88709831237793

Token 275: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011539347469806671
    2. ' def' → logprob: -4.511539459228516
    3. '   ' → logprob: -8.136539459228516
    4. 'import' → logprob: -9.886539459228516
    5. ')' → logprob: -10.386539459228516
    6. 'from' → logprob: -10.761539459228516
    7. '    
' → logprob: -10.761539459228516
    8. ',' → logprob: -11.511539459228516
    9. ' ' → logprob: -11.761539459228516
    10. '
' → logprob: -11.886539459228516

Token 276: ' calculate' (ID: 17950)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8284826278686523
    2. ' d' → logprob: -1.3284826278686523
    3. ' raise' → logprob: -1.9534826278686523
    4. ' compute' → logprob: -2.9534826278686523
    5. ' calculate' → logprob: -3.5784826278686523
    6. '_' → logprob: -4.078482627868652
    7. ' find' → logprob: -4.328482627868652
    8. ' _' → logprob: -4.828482627868652
    9. ' shortest' → logprob: -5.203482627868652
    10. ' dfs' → logprob: -5.203482627868652

Token 277: '_initial' (ID: 45740)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.025655746459961
    2. '_dist' → logprob: -1.025655746459961
    3. '_' → logprob: -1.900655746459961
    4. '_distance' → logprob: -3.025655746459961
    5. '_short' → logprob: -4.400655746459961
    6. '_path' → logprob: -4.650655746459961
    7. '_train' → logprob: -4.775655746459961
    8. '_d' → logprob: -5.025655746459961
    9. '_tr' → logprob: -5.025655746459961
    10. '_min' → logprob: -5.025655746459961

Token 278: '_dist' (ID: 37968)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.11784723401069641
    2. '_dist' → logprob: -2.367847204208374
    3. '_cost' → logprob: -4.867847442626953
    4. '_' → logprob: -4.867847442626953
    5. '_prices' → logprob: -6.992847442626953
    6. '_distance' → logprob: -7.742847442626953
    7. '_d' → logprob: -8.117847442626953
    8. '_short' → logprob: -9.867847442626953
    9. '_tr' → logprob: -10.117847442626953
    10. '_train' → logprob: -10.117847442626953

Token 279: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.024436865001916885
    2. '(self' → logprob: -4.149436950683594
    3. 'ance' → logprob: -5.024436950683594
    4. '()' → logprob: -7.024436950683594
    5. '(' → logprob: -7.149436950683594
    6. 's' → logprob: -9.649436950683594
    7. '```' → logprob: -11.024436950683594
    8. '(s' → logprob: -11.774436950683594
    9. '   ' → logprob: -12.149436950683594
    10. '(
' → logprob: -12.399436950683594

Token 280: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00040242893737740815
    2. '(' → logprob: -7.875402450561523
    3. ' (' → logprob: -10.750402450561523
    4. '(s' → logprob: -14.750402450561523
    5. '   ' → logprob: -15.625402450561523
    6. '(
' → logprob: -15.875402450561523
    7. 'self' → logprob: -16.375402450561523
    8. '(sel' → logprob: -16.375402450561523
    9. '(Self' → logprob: -16.500402450561523
    10. '(se' → logprob: -18.000402450561523

Token 281: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39775294065475464
    2. ',' → logprob: -2.1477530002593994
    3. '):' → logprob: -2.2727530002593994
    4. '(self' → logprob: -2.2727530002593994
    5. ' self' → logprob: -6.27275276184082
    6. '):
' → logprob: -6.89775276184082
    7. '   ' → logprob: -7.39775276184082
    8. ')' → logprob: -7.64775276184082
    9. ' ):' → logprob: -8.14775276184082
    10. ' ' → logprob: -8.39775276184082

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004052040632814169
    2. 'import' → logprob: -5.87905216217041
    3. '
' → logprob: -7.62905216217041
    4. ' import' → logprob: -8.12905216217041
    5. 'dist' → logprob: -8.37905216217041
    6. 'from' → logprob: -9.75405216217041
    7. '```' → logprob: -9.87905216217041
    8. '        
' → logprob: -9.87905216217041
    9. ',' → logprob: -11.00405216217041
    10. ' distances' → logprob: -11.12905216217041

Token 283: ' from' (ID: 591)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12431609630584717
    2. 'import' → logprob: -2.4993162155151367
    3. '       ' → logprob: -3.6243162155151367
    4. ' dist' → logprob: -5.499316215515137
    5. ' from' → logprob: -5.999316215515137
    6. 'dist' → logprob: -6.999316215515137
    7. 'from' (adapté à ' from') → logprob: -7.624316215515137
    8. '   ' → logprob: -9.499316215515137
    9. '```' → logprob: -11.499316215515137
    10. ' inf' → logprob: -11.999316215515137

Token 284: ' collections' (ID: 22690)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.009361479431390762
    2. 'heap' → logprob: -5.009361267089844
    3. ' queue' → logprob: -6.259361267089844
    4. ' collections' → logprob: -7.259361267089844
    5. 'queue' → logprob: -11.884361267089844
    6. ' ' → logprob: -12.009361267089844
    7. '_heap' → logprob: -12.134361267089844
    8. 'collections' → logprob: -12.384361267089844
    9. ' sys' → logprob: -13.509361267089844
    10. ' math' → logprob: -14.134361267089844

Token 285: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03716593608260155
    2. ' import' → logprob: -3.787165880203247
    3. 'port' → logprob: -4.662166118621826
    4. 'ort' → logprob: -6.662166118621826
    5. 'ptions' → logprob: -6.912166118621826
    6. 't' → logprob: -7.912166118621826
    7. 'n' → logprob: -8.037165641784668
    8. ' ' → logprob: -8.162165641784668
    9. 'heap' → logprob: -9.162165641784668
    10. 'tion' → logprob: -9.162165641784668

Token 286: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.011058545671403408
    2. 'deque' → logprob: -4.511058330535889
    3. ' defaultdict' → logprob: -11.636058807373047
    4. ' heap' → logprob: -13.761058807373047
    5. 'heap' → logprob: -14.386058807373047
    6. 'de' → logprob: -15.761058807373047
    7. ' queue' → logprob: -16.761058807373047
    8. '_de' → logprob: -17.886058807373047
    9. 'import' → logprob: -17.886058807373047
    10. 'collections' → logprob: -18.136058807373047

Token 287: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007855392061173916
    2. 'dist' → logprob: -5.382855415344238
    3. '

' → logprob: -6.632855415344238
    4. '       ' → logprob: -7.132855415344238
    5. '        
' → logprob: -7.382855415344238
    6. ' 
' → logprob: -9.132855415344238
    7. '
' → logprob: -9.382855415344238
    8. '
        
' → logprob: -9.882855415344238
    9. '  
' → logprob: -10.132855415344238
    10. 'distance' → logprob: -10.757855415344238

Token 288: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02863057516515255
    2. '       ' → logprob: -3.653630495071411
    3. '        
' → logprob: -6.52863073348999
    4. '<|end|>' → logprob: -8.153630256652832
    5. '

' → logprob: -9.278630256652832
    6. '' → logprob: -9.403630256652832
    7. 'dist' → logprob: -9.403630256652832
    8. 'n' → logprob: -9.778630256652832
    9. 'd' → logprob: -10.278630256652832
    10. '
' → logprob: -10.278630256652832

Token 289: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20516322553157806
    2. 'dist' → logprob: -1.9551632404327393
    3. ' dist' → logprob: -3.4551632404327393
    4. '
' → logprob: -4.83016300201416
    5. '        
' → logprob: -6.58016300201416
    6. ' distances' → logprob: -6.70516300201416
    7. 'self' → logprob: -7.83016300201416
    8. 'distance' → logprob: -8.45516300201416
    9. 'queue' → logprob: -8.58016300201416
    10. ' self' → logprob: -8.58016300201416

Token 290: ' Because' (ID: 13602)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6962642073631287
    2. 'dist' → logprob: -0.6962642073631287
    3. '       ' → logprob: -6.571264266967773
    4. 'self' → logprob: -7.821264266967773
    5. ' queue' → logprob: -7.821264266967773
    6. 'queue' → logprob: -7.946264266967773
    7. ' self' → logprob: -8.321264266967773
    8. ' import' → logprob: -10.321264266967773
    9. 'def' → logprob: -10.321264266967773
    10. 'import' → logprob: -10.696264266967773

Token 291: ' initial' (ID: 4871)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3046315312385559
    2. ' the' → logprob: -1.5546314716339111
    3. ' this' → logprob: -4.55463171005249
    4. ' edges' → logprob: -4.67963171005249
    5. ' train' → logprob: -4.92963171005249
    6. 'all' → logprob: -5.30463171005249
    7. 'the' → logprob: -5.42963171005249
    8. ' self' → logprob: -5.80463171005249
    9. ' each' → logprob: -6.67963171005249
    10. ' trains' → logprob: -6.80463171005249

Token 292: ' weight' (ID: 6049)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.3317764401435852
    2. 'dist' → logprob: -2.2067763805389404
    3. ' fares' → logprob: -2.7067763805389404
    4. ' dist' → logprob: -3.9567763805389404
    5. ' edges' → logprob: -4.3317766189575195
    6. ' code' → logprob: -4.5817766189575195
    7. ' graph' → logprob: -4.7067766189575195
    8. ' fare' → logprob: -4.8317766189575195
    9. 'distance' → logprob: -5.2067766189575195
    10. '   ' → logprob: -5.3317766189575195

Token 293: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31234246492385864
    2. ' is' → logprob: -1.8123424053192139
    3. '=' → logprob: -3.437342405319214
    4. '0' → logprob: -3.687342405319214
    5. ' edges' → logprob: -4.062342643737793
    6. 'ed' → logprob: -4.812342643737793
    7. ' of' → logprob: -5.437342643737793
    8. ' =' → logprob: -5.687342643737793
    9. ' ' → logprob: -5.812342643737793
    10. 'is' → logprob: -5.937342643737793

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6946561932563782
    2. '0' → logprob: -0.9446561932563782
    3. ' ' → logprob: -2.1946561336517334
    4. '   ' → logprob: -7.8196563720703125
    5. ' ' → logprob: -10.694656372070312
    6. '
' → logprob: -11.069656372070312
    7. ' zero' → logprob: -11.194656372070312
    8. '  ' → logprob: -11.194656372070312
    9. 'all' → logprob: -11.569656372070312
    10. 'zero' → logprob: -11.694656372070312

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12730172276496887
    2. '0' → logprob: -2.1273016929626465
    3. ' ' → logprob: -8.252302169799805
    4. '{' → logprob: -10.377302169799805
    5. 'all' → logprob: -10.752302169799805
    6. '[' → logprob: -11.127302169799805
    7. '   ' → logprob: -11.752302169799805
    8. 'zero' → logprob: -12.377302169799805
    9. ' ' → logprob: -12.439802169799805
    10. '
' → logprob: -12.502302169799805

Token 296: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19000446796417236
    2. ',' → logprob: -2.565004348754883
    3. '
' → logprob: -2.940004348754883
    4. 'for' → logprob: -4.190004348754883
    5. '       ' → logprob: -4.940004348754883
    6. 'def' → logprob: -5.190004348754883
    7. 's' → logprob: -5.190004348754883
    8. ' distances' → logprob: -6.190004348754883
    9. ' def' → logprob: -6.690004348754883
    10. ' ,' → logprob: -6.690004348754883

Token 297: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5987253189086914
    2. 'all' → logprob: -0.8487253189086914
    3. ' every' → logprob: -4.723725318908691
    4. ' each' → logprob: -5.348725318908691
    5. 'each' → logprob: -5.473725318908691
    6. 'every' → logprob: -5.473725318908691
    7. ' edges' → logprob: -8.473725318908691
    8. '   ' → logprob: -9.598725318908691
    9. 'edges' → logprob: -9.723725318908691
    10. ' ' → logprob: -10.348725318908691

Token 298: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.03885297104716301
    2. 'edges' → logprob: -3.4138529300689697
    3. ',' → logprob: -6.038853168487549
    4. ' for' → logprob: -7.038853168487549
    5. '   ' → logprob: -7.663853168487549
    6. '       ' → logprob: -7.913853168487549
    7. '
' → logprob: -8.28885269165039
    8. 'for' → logprob: -9.16385269165039
    9. ' ' → logprob: -9.53885269165039
    10. '_edges' → logprob: -9.66385269165039

Token 299: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0452595055103302
    2. ',' → logprob: -4.170259475708008
    3. '       ' → logprob: -4.170259475708008
    4. ',
' → logprob: -5.170259475708008
    5. 'dist' → logprob: -5.295259475708008
    6. '        
' → logprob: -6.670259475708008
    7. '

' → logprob: -7.920259475708008
    8. ' dist' → logprob: -9.045259475708008
    9. ' distances' → logprob: -9.170259475708008
    10. ' and' → logprob: -9.295259475708008

Token 300: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42012080550193787
    2. ' dist' → logprob: -1.4201208353042603
    3. '       ' → logprob: -2.2951207160949707
    4. ' self' → logprob: -8.795121192932129
    5. 'def' → logprob: -8.920121192932129
    6. 'self' → logprob: -9.170121192932129
    7. '   ' → logprob: -9.545121192932129
    8. ' distances' → logprob: -10.795121192932129
    9. 'queue' → logprob: -10.920121192932129
    10. ' def' → logprob: -10.920121192932129

Token 301: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6797001957893372
    2. ' paths' → logprob: -1.6797001361846924
    3. 'path' → logprob: -1.8047001361846924
    4. 'paths' → logprob: -2.5547001361846924
    5. '_path' → logprob: -3.0547001361846924
    6. '_paths' → logprob: -4.8047003746032715
    7. ' distances' → logprob: -5.3047003746032715
    8. 'dist' → logprob: -6.3047003746032715
    9. '   ' → logprob: -6.4297003746032715
    10. 'distance' → logprob: -8.179699897766113

Token 302: ' dist' (ID: 3601)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5587969422340393
    2. ' distances' → logprob: -1.4337968826293945
    3. 's' → logprob: -2.9337968826293945
    4. ' from' → logprob: -3.4337968826293945
    5. 'from' → logprob: -3.8087968826293945
    6. 'is' → logprob: -4.0587968826293945
    7. ' lengths' → logprob: -4.0587968826293945
    8. 'dist' → logprob: -4.1837968826293945
    9. ' can' → logprob: -5.4337968826293945
    10. '       ' → logprob: -5.6837968826293945

Token 303: ' =' (ID: 314)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0012368950992822647
    2. 'ance' → logprob: -6.751236915588379
    3. 's' → logprob: -10.501236915588379
    4. ' =' → logprob: -10.626236915588379
    5. '   ' → logprob: -11.876236915588379
    6. '=' → logprob: -12.376236915588379
    7. 'ANCES' → logprob: -13.626236915588379
    8. ' is' → logprob: -13.876236915588379
    9. 'anc' → logprob: -15.376236915588379
    10. ',' → logprob: -15.376236915588379

Token 304: ' BFS' (ID: 190016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7350136637687683
    2. ' self' → logprob: -1.860013723373413
    3. 'b' → logprob: -2.485013723373413
    4. '[' → logprob: -2.735013723373413
    5. ' [' → logprob: -3.235013723373413
    6. ' the' → logprob: -3.860013723373413
    7. '[self' → logprob: -3.860013723373413
    8. ' BFS' → logprob: -3.985013723373413
    9. ' bfs' → logprob: -3.985013723373413
    10. 'the' → logprob: -4.110013484954834

Token 305: ' layers' (ID: 22119)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5171528458595276
    2. '       ' → logprob: -1.0171527862548828
    3. '()
' → logprob: -3.642152786254883
    4. '()' → logprob: -5.767152786254883
    5. 'dist' → logprob: -5.892152786254883
    6. '        
' → logprob: -6.267152786254883
    7. '   ' → logprob: -6.642152786254883
    8. 'def' → logprob: -6.892152786254883
    9. '

' → logprob: -7.017152786254883
    10. ' distances' → logprob: -7.517152786254883

Token 306: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09651345759630203
    2. '       ' → logprob: -2.471513509750366
    3. '        
' → logprob: -5.596513271331787
    4. 'dist' → logprob: -6.596513271331787
    5. ' distances' → logprob: -7.721513271331787
    6. '

' → logprob: -7.846513271331787
    7. ',' → logprob: -7.971513271331787
    8. '    
' → logprob: -8.346513748168945
    9. 'def' → logprob: -8.346513748168945
    10. '<|end|>' → logprob: -8.721513748168945

Token 307: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2295006364583969
    2. '       ' → logprob: -1.604500651359558
    3. '        
' → logprob: -5.854500770568848
    4. 'dist' → logprob: -8.229500770568848
    5. '  
' → logprob: -8.229500770568848
    6. '

' → logprob: -8.979500770568848
    7. '    
' → logprob: -9.354500770568848
    8. ',' → logprob: -9.354500770568848
    9. '
' → logprob: -9.479500770568848
    10. 'def' → logprob: -9.979500770568848

Token 308: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.16201291978359222
    2. '       ' → logprob: -1.9120129346847534
    3. 'self' → logprob: -6.912013053894043
    4. ' dist' → logprob: -7.537013053894043
    5. 'from' → logprob: -8.537013053894043
    6. 'queue' → logprob: -10.787013053894043
    7. '   ' → logprob: -11.162013053894043
    8. 'import' → logprob: -11.412013053894043
    9. ' self' → logprob: -12.287013053894043
    10. '        
' → logprob: -13.162013053894043

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067201098427176476
    2. '=' → logprob: -5.006720066070557
    3. ' ' → logprob: -13.131720542907715
    4. '[' → logprob: -13.256720542907715
    5. ',' → logprob: -14.756720542907715
    6. ' =[' → logprob: -15.006720542907715
    7. ' =
' → logprob: -16.2567195892334
    8. ' ' → logprob: -16.2567195892334
    9. '   ' → logprob: -16.7567195892334
    10. '  ' → logprob: -17.0067195892334

Token 310: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.024924658238887787
    2. ' [-' → logprob: -4.2749247550964355
    3. '[' → logprob: -5.0249247550964355
    4. ' [' → logprob: -5.5249247550964355
    5. '   ' → logprob: -9.024924278259277
    6. '[self' → logprob: -11.149924278259277
    7. '[int' → logprob: -12.524924278259277
    8. ' ' → logprob: -12.774924278259277
    9. '{' → logprob: -14.024924278259277
    10. ' ' → logprob: -14.274924278259277

Token 311: 'float' (ID: 7829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019702186807990074
    2. 'float' → logprob: -4.144701957702637
    3. ' -' → logprob: -5.644701957702637
    4. ' float' → logprob: -9.894701957702637
    5. '0' → logprob: -10.519701957702637
    6. 'None' → logprob: -10.644701957702637
    7. 'self' → logprob: -11.769701957702637
    8. '-f' → logprob: -12.519701957702637
    9. ' ' → logprob: -12.769701957702637
    10. '-self' → logprob: -13.144701957702637

Token 312: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -11.250015258789062
    3. '("' → logprob: -13.375015258789062
    4. '('-' → logprob: -14.375015258789062
    5. ''in' → logprob: -16.250015258789062
    6. 'inf' → logprob: -16.375015258789062
    7. ']' → logprob: -16.500015258789062
    8. '(
' → logprob: -16.875015258789062
    9. ''' → logprob: -17.250015258789062
    10. ''s' → logprob: -17.750015258789062

Token 313: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. 'in' → logprob: -16.875
    3. '_inf' → logprob: -19.375
    4. ' inf' → logprob: -19.5
    5. '.inf' → logprob: -20.125
    6. 'info' → logprob: -20.375
    7. ''' → logprob: -20.75
    8. ''in' → logprob: -21.25
    9. '-inf' → logprob: -21.625
    10. 'Inf' → logprob: -21.75

Token 314: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.058173004537820816
    2. ')]' → logprob: -2.9331729412078857
    3. ']' → logprob: -6.558173179626465
    4. '')' → logprob: -6.933173179626465
    5. ')' → logprob: -7.308173179626465
    6. ' '' → logprob: -8.933173179626465
    7. ''' → logprob: -10.433173179626465
    8. '']' → logprob: -10.558173179626465
    9. '")]' → logprob: -11.433173179626465
    10. ''),' → logprob: -11.933173179626465

Token 315: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41861245036125183
    2. ' for' → logprob: -1.1686124801635742
    3. ' ]' → logprob: -4.418612480163574
    4. ',' → logprob: -4.668612480163574
    5. ']*(' → logprob: -5.543612480163574
    6. ' ' → logprob: -6.293612480163574
    7. ']*' → logprob: -6.918612480163574
    8. '(' → logprob: -7.043612480163574
    9. 'for' → logprob: -7.293612480163574
    10. '[' → logprob: -7.793612480163574

Token 316: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008680520579218864
    2. ' (' → logprob: -4.75868034362793
    3. '(n' → logprob: -9.88368034362793
    4. '((' → logprob: -11.88368034362793
    5. '(' → logprob: -12.50868034362793
    6. '(this' → logprob: -13.75868034362793
    7. '   ' → logprob: -13.75868034362793
    8. '(len' → logprob: -14.25868034362793
    9. ' ' → logprob: -15.38368034362793
    10. ' ((' → logprob: -15.63368034362793

Token 317: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06655842810869217
    2. '(self' → logprob: -2.816558361053467
    3. ' self' → logprob: -5.441558361053467
    4. ' (' → logprob: -8.816558837890625
    5. '   ' → logprob: -9.691558837890625
    6. '
' → logprob: -11.316558837890625
    7. '       ' → logprob: -11.316558837890625
    8. '[self' → logprob: -12.566558837890625
    9. '           ' → logprob: -13.316558837890625
    10. '0' → logprob: -13.566558837890625

Token 318: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0006322591798380017
    2. '.' → logprob: -8.125632286071777
    3. 'n' → logprob: -9.000632286071777
    4. '.
' → logprob: -9.250632286071777
    5. '
' → logprob: -9.500632286071777
    6. ' .' → logprob: -11.250632286071777
    7. '+' → logprob: -12.125632286071777
    8. '(n' → logprob: -12.375632286071777
    9. '.q' → logprob: -12.625632286071777
    10. '   ' → logprob: -13.375632286071777

Token 319: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519737482070923
    2. '+' → logprob: -1.5019737482070923
    3. ' +
' → logprob: -10.626974105834961
    4. ' ' → logprob: -11.126974105834961
    5. '+
' → logprob: -12.501974105834961
    6. ')' → logprob: -15.001974105834961
    7. ' plus' → logprob: -15.126974105834961
    8. '
' → logprob: -15.251974105834961
    9. '1' → logprob: -15.376974105834961
    10. '   ' → logprob: -15.376974105834961

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '
' → logprob: -15.000804901123047
    4. '   ' → logprob: -15.500804901123047
    5. ')' → logprob: -16.125804901123047
    6. '  ' → logprob: -17.750804901123047
    7. '```' → logprob: -17.875804901123047
    8. '

' → logprob: -18.188304901123047
    9. '    ' → logprob: -18.563304901123047
    10. '0' → logprob: -18.875804901123047

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.875024795532227
    3. '0' → logprob: -12.375024795532227
    4. '
' → logprob: -13.625024795532227
    5. '   ' → logprob: -15.250024795532227
    6. ')' → logprob: -16.875024795532227
    7. '

' → logprob: -17.312524795532227
    8. '```' → logprob: -17.312524795532227
    9. '  ' → logprob: -18.125024795532227
    10. '2' → logprob: -18.312524795532227

Token 322: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0620969720184803
    2. ')' → logprob: -2.8120970726013184
    3. ')
' → logprob: -9.81209659576416
    4. ' )
' → logprob: -9.81209659576416
    5. '       ' → logprob: -11.68709659576416
    6. ')

' → logprob: -12.18709659576416
    7. '
' → logprob: -12.31209659576416
    8. ' )' → logprob: -14.06209659576416
    9. '   ' → logprob: -14.81209659576416
    10. ']
' → logprob: -15.68709659576416

Token 323: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05410313606262207
    2. 'dist' → logprob: -3.054103136062622
    3. ' dist' → logprob: -5.304102897644043
    4. '	dist' → logprob: -8.929102897644043
    5. '
' → logprob: -9.054102897644043
    6. ' 
' → logprob: -9.679102897644043
    7. '<|end|>' → logprob: -10.429102897644043
    8. '    
' → logprob: -10.554102897644043
    9. '_dist' → logprob: -10.804102897644043
    10. '        
' → logprob: -11.054102897644043

Token 324: ' parent' (ID: 5980)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22592173516750336
    2. ' dist' → logprob: -1.6009217500686646
    3. '       ' → logprob: -8.100921630859375
    4. '   ' → logprob: -9.100921630859375
    5. '
' → logprob: -10.350921630859375
    6. 'queue' → logprob: -10.725921630859375
    7. ' queue' → logprob: -11.225921630859375
    8. '	dist' → logprob: -11.600921630859375
    9. '```' → logprob: -11.975921630859375
    10. 'deque' → logprob: -12.975921630859375

Token 325: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00548537215217948
    2. '_edges' → logprob: -5.505485534667969
    3. '_' → logprob: -7.005485534667969
    4. ' =' → logprob: -8.755485534667969
    5. '_queue' → logprob: -8.755485534667969
    6. '_node' → logprob: -9.630485534667969
    7. '_e' → logprob: -10.755485534667969
    8. '_ed' → logprob: -11.380485534667969
    9. ' _' → logprob: -11.630485534667969
    10. '   ' → logprob: -11.630485534667969

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798790693283081
    2. '=' → logprob: -1.804879069328308
    3. '[' → logprob: -9.054879188537598
    4. '<|end|>' → logprob: -12.429879188537598
    5. ' =[' → logprob: -12.554879188537598
    6. 's' → logprob: -13.054879188537598
    7. ' ' → logprob: -13.304879188537598
    8. ' =
' → logprob: -13.804879188537598
    9. '=[' → logprob: -13.804879188537598
    10. ']' → logprob: -13.929879188537598

Token 327: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2217031717300415
    2. '[-' → logprob: -1.7217031717300415
    3. ' [' → logprob: -3.971703052520752
    4. ' [-' → logprob: -6.971703052520752
    5. '   ' → logprob: -8.22170352935791
    6. '[n' → logprob: -11.22170352935791
    7. '[self' → logprob: -11.72170352935791
    8. '[num' → logprob: -13.09670352935791
    9. '       ' → logprob: -13.22170352935791
    10. '[int' → logprob: -13.34670352935791

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -19.5
    4. '2' → logprob: -19.875
    5. '۱' → logprob: -20.125
    6. '

' → logprob: -20.3125
    7. 'None' → logprob: -20.3125
    8. '
' → logprob: -20.75
    9. '  ' → logprob: -20.875
    10. '```' → logprob: -20.9375

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008579814457334578
    2. ' ]' → logprob: -7.125857830047607
    3. ' for' → logprob: -10.000858306884766
    4. ')' → logprob: -12.375858306884766
    5. ']*' → logprob: -13.000858306884766
    6. 'for' → logprob: -13.750858306884766
    7. '   ' → logprob: -16.125858306884766
    8. ')]' → logprob: -16.250858306884766
    9. ',' → logprob: -16.375858306884766
    10. ']
' → logprob: -16.625858306884766

Token 330: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009050591848790646
    2. ' for' → logprob: -5.759050369262695
    3. ' 
' → logprob: -5.884050369262695
    4. '<|end|>' → logprob: -6.634050369262695
    5. '
' → logprob: -7.884050369262695
    6. '[' → logprob: -8.134050369262695
    7. ' ' → logprob: -8.509050369262695
    8. '  
' → logprob: -8.634050369262695
    9. '       ' → logprob: -9.134050369262695
    10. 'for' → logprob: -9.259050369262695

Token 331: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011048289015889168
    2. ' (' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.261048316955566
    4. '(' → logprob: -16.26104736328125
    5. ' self' → logprob: -16.26104736328125
    6. 'self' → logprob: -16.88604736328125
    7. '(s' → logprob: -17.01104736328125
    8. '   ' → logprob: -17.88604736328125
    9. '(sel' → logprob: -18.13604736328125
    10. '       ' → logprob: -18.38604736328125

Token 332: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019657472148537636
    2. '(self' → logprob: -6.251965522766113
    3. ' self' → logprob: -10.376965522766113
    4. '
' → logprob: -12.626965522766113
    5. '       ' → logprob: -13.626965522766113
    6. '[self' → logprob: -14.126965522766113
    7. '   ' → logprob: -15.376965522766113
    8. '           ' → logprob: -15.501965522766113
    9. '=self' → logprob: -16.25196647644043
    10. ' (' → logprob: -16.50196647644043

Token 333: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0001882823125924915
    2. 'n' → logprob: -8.750187873840332
    3. 'self' → logprob: -10.625187873840332
    4. '(n' → logprob: -13.625187873840332
    5. '   ' → logprob: -13.750187873840332
    6. ')' → logprob: -13.750187873840332
    7. '
' → logprob: -14.875187873840332
    8. '       ' → logprob: -14.875187873840332
    9. '_n' → logprob: -15.125187873840332
    10. ')n' → logprob: -15.625187873840332

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016050910577178
    2. ' +' → logprob: -4.141050815582275
    3. '+
' → logprob: -11.266051292419434
    4. ')' → logprob: -12.891051292419434
    5. ' +
' → logprob: -14.766051292419434
    6. '1' → logprob: -15.141051292419434
    7. '
' → logprob: -15.641051292419434
    8. '   ' → logprob: -16.141050338745117
    9. ')+' → logprob: -16.141050338745117
    10. ')
' → logprob: -16.266050338745117

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '
' → logprob: -14.875004768371582
    4. '   ' → logprob: -15.375004768371582
    5. ')' → logprob: -16.000003814697266
    6. '```' → logprob: -16.250003814697266
    7. '0' → logprob: -16.625003814697266
    8. '       ' → logprob: -17.500003814697266
    9. '

' → logprob: -17.500003814697266
    10. '           ' → logprob: -17.687503814697266

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '
' → logprob: -15.00000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '

' → logprob: -16.687501907348633
    6. '```' → logprob: -16.687501907348633
    7. ')' → logprob: -16.875001907348633
    8. '0' → logprob: -17.250001907348633
    9. '+' → logprob: -18.125001907348633
    10. 'n' → logprob: -18.187501907348633

Token 337: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5761486291885376
    2. ')' → logprob: -0.8261486291885376
    3. '       ' → logprob: -8.701148986816406
    4. ')
' → logprob: -10.451148986816406
    5. ' )
' → logprob: -12.326148986816406
    6. '
' → logprob: -12.451148986816406
    7. ')

' → logprob: -12.701148986816406
    8. '   ' → logprob: -13.576148986816406
    9. ' )' → logprob: -14.201148986816406
    10. '	' → logprob: -15.826148986816406

Token 338: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33256062865257263
    2. '       ' → logprob: -1.582560658454895
    3. 'dist' → logprob: -2.7075605392456055
    4. '        
' → logprob: -5.0825605392456055
    5. '    
' → logprob: -6.4575605392456055
    6. ' 
' → logprob: -7.9575605392456055
    7. 'n' → logprob: -8.082560539245605
    8. 'd' → logprob: -8.082560539245605
    9. '  
' → logprob: -8.207560539245605
    10. '```' → logprob: -8.332560539245605

Token 339: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.22163046896457672
    2. ' dist' → logprob: -1.7216304540634155
    3. '       ' → logprob: -3.971630573272705
    4. '
' → logprob: -7.346630573272705
    5. 'queue' → logprob: -8.596630096435547
    6. '   ' → logprob: -9.096630096435547
    7. ' queue' → logprob: -9.721630096435547
    8. 'from' → logprob: -9.846630096435547
    9. '        
' → logprob: -10.221630096435547
    10. '	dist' → logprob: -10.221630096435547

Token 340: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. ' =' → logprob: -13.250005722045898
    3. '[
' → logprob: -13.250005722045898
    4. ' [' → logprob: -13.625005722045898
    5. '=' → logprob: -14.375005722045898
    6. ')' → logprob: -16.1250057220459
    7. ' ' → logprob: -16.3750057220459
    8. ']' → logprob: -16.3750057220459
    9. '[self' → logprob: -16.3750057220459
    10. '```' → logprob: -17.1250057220459

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004651672672480345
    2. ' ' → logprob: -6.0046515464782715
    3. '0' → logprob: -6.8796515464782715
    4. '[' → logprob: -7.0046515464782715
    5. ']' → logprob: -8.87965202331543
    6. ')' → logprob: -10.50465202331543
    7. '][' → logprob: -10.50465202331543
    8. ',' → logprob: -11.37965202331543
    9. '
' → logprob: -11.37965202331543
    10. '[
' → logprob: -12.25465202331543

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012689977302215993
    2. ']=' → logprob: -9.875126838684082
    3. ' ]' → logprob: -9.875126838684082
    4. '=' → logprob: -11.250126838684082
    5. ' =' → logprob: -11.625126838684082
    6. ')' → logprob: -13.250126838684082
    7. ',' → logprob: -16.0001277923584
    8. '[' → logprob: -16.5001277923584
    9. ']
' → logprob: -17.7501277923584
    10. '0' → logprob: -18.5001277923584

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868716359138489
    2. '=' → logprob: -1.136871576309204
    3. ']' → logprob: -15.386871337890625
    4. '[' → logprob: -15.886871337890625
    5. ',' → logprob: -16.386871337890625
    6. ']=' → logprob: -16.761871337890625
    7. ')' → logprob: -17.261871337890625
    8. ' =
' → logprob: -17.511871337890625
    9. '＝' → logprob: -17.636871337890625
    10. ')=' → logprob: -18.386871337890625

Token 344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -20.500030517578125
    4. '  ' → logprob: -22.000030517578125
    5. ' ' → logprob: -22.625030517578125
    6. '۰' → logprob: -22.750030517578125
    7. '00' → logprob: -23.625030517578125
    8. '1' → logprob: -24.000030517578125
    9. '
' → logprob: -24.250030517578125
    10. '    ' → logprob: -24.375030517578125

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. '۰' → logprob: -19.75
    5. '1' → logprob: -20.75
    6. '
' → logprob: -20.75
    7. '  ' → logprob: -21.0625
    8. '00' → logprob: -21.25
    9. ' ' → logprob: -21.375
    10. '０' → logprob: -21.4375

Token 346: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05985928699374199
    2. '       ' → logprob: -2.934859275817871
    3. 'queue' → logprob: -6.059859275817871
    4. '	queue' → logprob: -6.809859275817871
    5. ' queue' → logprob: -7.309859275817871
    6. '<|end|>' → logprob: -8.934859275817871
    7. '' → logprob: -9.059859275817871
    8. '        
' → logprob: -9.059859275817871
    9. '
' → logprob: -9.184859275817871
    10. 'deque' → logprob: -9.809859275817871

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3691045641899109
    2. '
' → logprob: -1.2441046237945557
    3. 'queue' → logprob: -4.744104385375977
    4. 'deque' → logprob: -5.494104385375977
    5. '	queue' → logprob: -5.619104385375977
    6. ' queue' → logprob: -7.244104385375977
    7. '   ' → logprob: -7.619104385375977
    8. '        
' → logprob: -7.744104385375977
    9. '<|end|>' → logprob: -7.869104385375977
    10. '' → logprob: -8.369104385375977

Token 348: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.015393395908176899
    2. '       ' → logprob: -4.515393257141113
    3. ' queue' → logprob: -5.515393257141113
    4. 'q' → logprob: -8.265393257141113
    5. 'deque' → logprob: -10.640393257141113
    6. 'dq' → logprob: -11.265393257141113
    7. 'que' → logprob: -12.015393257141113
    8. '   ' → logprob: -12.265393257141113
    9. 'from' → logprob: -12.765393257141113
    10. '	queue' → logprob: -13.265393257141113

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21287354826927185
    2. '=' → logprob: -1.7128735780715942
    3. '.' → logprob: -4.837873458862305
    4. '.append' → logprob: -5.712873458862305
    5. ' ' → logprob: -9.837873458862305
    6. ')' → logprob: -10.337873458862305
    7. '.=' → logprob: -11.462873458862305
    8. '.enqueue' → logprob: -11.462873458862305
    9. '=[]' → logprob: -11.587873458862305
    10. '.p' → logprob: -11.712873458862305

Token 350: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.12694406509399414
    2. ' deque' → logprob: -2.126944065093994
    3. 'de' → logprob: -11.876943588256836
    4. 'Deque' → logprob: -11.876943588256836
    5. 'collections' → logprob: -14.251943588256836
    6. '[' → logprob: -14.251943588256836
    7. ' [' → logprob: -15.126943588256836
    8. ' ' → logprob: -16.001943588256836
    9. '```' → logprob: -16.501943588256836
    10. ' collections' → logprob: -16.751943588256836

Token 351: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16725388169288635
    2. '([' → logprob: -1.917253851890564
    3. '()
' → logprob: -5.0422539710998535
    4. '([(' → logprob: -7.7922539710998535
    5. '(' → logprob: -9.542253494262695
    6. '([
' → logprob: -10.917253494262695
    7. '()

' → logprob: -11.042253494262695
    8. '([]' → logprob: -11.292253494262695
    9. '[' → logprob: -12.417253494262695
    10. '(['' → logprob: -12.917253494262695

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.5
    4. '(' → logprob: -17.875
    5. '
' → logprob: -18.875
    6. '```' → logprob: -20.625
    7. '  ' → logprob: -21.1875
    8. ']' → logprob: -21.25
    9. '0' → logprob: -21.3125
    10. '１' → logprob: -21.4375

Token 353: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.3915141355246305e-05
    2. '])
' → logprob: -10.75002384185791
    3. ')' → logprob: -14.00002384185791
    4. ' ])' → logprob: -14.00002384185791
    5. ')])' → logprob: -14.87502384185791
    6. '])]' → logprob: -16.375024795532227
    7. ')]' → logprob: -16.375024795532227
    8. '))' → logprob: -17.000024795532227
    9. '       ' → logprob: -17.250024795532227
    10. ']);' → logprob: -17.500024795532227

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08789236098527908
    2. '
' → logprob: -2.7128922939300537
    3. ' while' → logprob: -5.087892532348633
    4. '	while' → logprob: -5.587892532348633
    5. 'while' → logprob: -5.837892532348633
    6. '   ' → logprob: -6.212892532348633
    7. '        
' → logprob: -7.212892532348633
    8. '<|end|>' → logprob: -7.587892532348633
    9. '  
' → logprob: -7.962892532348633
    10. '    
' → logprob: -8.337892532348633

Token 355: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5727035403251648
    2. 'while' (adapté à ' while') → logprob: -1.0727035999298096
    3. ' while' → logprob: -2.4477035999298096
    4. '
' → logprob: -5.3227033615112305
    5. '	while' → logprob: -6.6977033615112305
    6. '   ' → logprob: -7.4477033615112305
    7. '        
' → logprob: -7.8227033615112305
    8. ' 
' → logprob: -8.69770336151123
    9. '  
' → logprob: -10.57270336151123
    10. '    
' → logprob: -10.94770336151123

Token 356: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.01417174469679594
    2. 'queue' → logprob: -4.264171600341797
    3. '(queue' → logprob: -11.764171600341797
    4. '	queue' → logprob: -14.764171600341797
    5. ' ' → logprob: -17.139171600341797
    6. ' len' → logprob: -17.639171600341797
    7. '.queue' → logprob: -17.889171600341797
    8. 'len' → logprob: -18.014171600341797
    9. 'que' → logprob: -18.139171600341797
    10. ' que' → logprob: -18.514171600341797

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01092615071684122
    2. '.p' → logprob: -4.635926246643066
    3. '.' → logprob: -7.135926246643066
    4. ':
' → logprob: -9.135926246643066
    5. '):' → logprob: -9.135926246643066
    6. '.pop' → logprob: -10.010926246643066
    7. '.:' → logprob: -10.510926246643066
    8. '>:' → logprob: -11.135926246643066
    9. 'opleft' → logprob: -11.260926246643066
    10. '.append' → logprob: -11.385926246643066

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002527268137782812
    2. ',' → logprob: -7.627527236938477
    3. 'node' → logprob: -7.877527236938477
    4. ' node' → logprob: -8.252527236938477
    5. 'n' → logprob: -8.377527236938477
    6. '       ' → logprob: -8.502527236938477
    7. '   ' → logprob: -8.627527236938477
    8. 'u' → logprob: -9.127527236938477
    9. '
' → logprob: -9.627527236938477
    10. ')' → logprob: -9.627527236938477

Token 359: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.050379991531372
    2. ' u' → logprob: -1.300379991531372
    3. 'u' → logprob: -1.550379991531372
    4. 'node' (adapté à ' node') → logprob: -1.800379991531372
    5. ' current' → logprob: -8.425379753112793
    6. 'current' → logprob: -9.425379753112793
    7. '   ' → logprob: -10.050379753112793
    8. '           ' → logprob: -11.425379753112793
    9. 'cur' → logprob: -12.675379753112793
    10. 'curr' → logprob: -13.175379753112793

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029767030850052834
    2. '=' → logprob: -3.5297670364379883
    3. '.' → logprob: -11.279767036437988
    4. ' ' → logprob: -13.029767036437988
    5. '.append' → logprob: -14.529767036437988
    6. '.=' → logprob: -15.154767036437988
    7. ' .' → logprob: -15.404767036437988
    8. ' =
' → logprob: -15.529767036437988
    9. '.p' → logprob: -15.654767036437988
    10. '.pop' → logprob: -16.529766082763672

Token 361: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.25193390250205994
    2. 'queue' → logprob: -1.5019339323043823
    3. '	queue' → logprob: -12.501934051513672
    4. 'que' → logprob: -15.001934051513672
    5. '(queue' → logprob: -15.501934051513672
    6. ' ' → logprob: -15.501934051513672
    7. '.queue' → logprob: -15.626934051513672
    8. '   ' → logprob: -16.001934051513672
    9. '    ' → logprob: -17.251934051513672
    10. '       ' → logprob: -17.751934051513672

Token 362: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0006921819876879454
    2. '.pop' → logprob: -7.750692367553711
    3. '.' → logprob: -8.250692367553711
    4. ' .' → logprob: -15.000692367553711
    5. '   ' → logprob: -17.37569236755371
    6. '.dequeue' → logprob: -17.37569236755371
    7. 'p' → logprob: -18.62569236755371
    8. '.get' → logprob: -19.75069236755371
    9. '.append' → logprob: -19.75069236755371
    10. 'pop' → logprob: -19.87569236755371

Token 363: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029854966327548027
    2. 'op' → logprob: -3.5298550128936768
    3. 'ople' → logprob: -9.529854774475098
    4. 'opl' → logprob: -10.779854774475098
    5. 'opt' → logprob: -12.654854774475098
    6. 'oplevel' → logprob: -13.029854774475098
    7. 'opup' → logprob: -13.404854774475098
    8. 'p' → logprob: -13.529854774475098
    9. 'opf' → logprob: -14.029854774475098
    10. 'oph' → logprob: -14.654854774475098

Token 364: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004691661335527897
    2. '           ' → logprob: -5.8796916007995605
    3. '()' → logprob: -7.5046916007995605
    4. '
' → logprob: -7.8796916007995605
    5. ')
' → logprob: -8.129692077636719
    6. '       ' → logprob: -8.129692077636719
    7. '               ' → logprob: -8.754692077636719
    8. '<|end|>' → logprob: -10.504692077636719
    9. '   ' → logprob: -10.754692077636719
    10. ']' → logprob: -11.129692077636719

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023050719872117043
    2. '       ' → logprob: -4.773050785064697
    3. ' for' → logprob: -4.898050785064697
    4. '            
' → logprob: -6.023050785064697
    5. ' 
' → logprob: -6.148050785064697
    6. 'for' → logprob: -7.898050785064697
    7. '   ' → logprob: -8.148050308227539
    8. '            ' → logprob: -8.398050308227539
    9. '               ' → logprob: -8.398050308227539
    10. ' ' → logprob: -8.648050308227539

Token 366: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32141828536987305
    2. 'for' (adapté à ' for') → logprob: -1.321418285369873
    3. '           ' → logprob: -4.821418285369873
    4. '               ' → logprob: -11.071418762207031
    5. '   ' → logprob: -11.696418762207031
    6. '       ' → logprob: -11.696418762207031
    7. ' ' → logprob: -11.821418762207031
    8. '            
' → logprob: -11.946418762207031
    9. ' ' → logprob: -12.071418762207031
    10. '            ' → logprob: -12.571418762207031

Token 367: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.0002783783129416406
    2. ' eid' → logprob: -8.25027847290039
    3. 'edge' → logprob: -11.00027847290039
    4. '   ' → logprob: -15.62527847290039
    5. 'ei' → logprob: -16.12527847290039
    6. 'ead' → logprob: -16.87527847290039
    7. 'e' → logprob: -17.12527847290039
    8. '  ' → logprob: -17.50027847290039
    9. '`' → logprob: -17.50027847290039
    10. '
' → logprob: -18.50027847290039

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03366345167160034
    2. 'in' → logprob: -3.408663511276245
    3. ' ' → logprob: -11.658663749694824
    4. '	in' → logprob: -11.908663749694824
    5. ')' → logprob: -14.533663749694824
    6. ' ' → logprob: -14.783663749694824
    7. ',' → logprob: -14.908663749694824
    8. 's' → logprob: -15.283663749694824
    9. ' i' → logprob: -15.408663749694824
    10. 'e' → logprob: -16.158662796020508

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08896061778068542
    2. ' self' → logprob: -2.463960647583008
    3. '   ' → logprob: -11.838960647583008
    4. '(self' → logprob: -12.463960647583008
    5. '[self' → logprob: -12.463960647583008
    6. '	self' → logprob: -12.838960647583008
    7. '       ' → logprob: -13.838960647583008
    8. '=self' → logprob: -14.838960647583008
    9. '           ' → logprob: -14.963960647583008
    10. ':self' → logprob: -15.338960647583008

Token 370: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0006733550690114498
    2. '.' → logprob: -7.750673294067383
    3. 'graph' → logprob: -9.375673294067383
    4. ' .' → logprob: -9.625673294067383
    5. '.ad' → logprob: -10.375673294067383
    6. '.g' → logprob: -10.875673294067383
    7. '	graph' → logprob: -11.000673294067383
    8. 'raph' → logprob: -11.875673294067383
    9. '.
' → logprob: -11.875673294067383
    10. ' graph' → logprob: -13.250673294067383

Token 371: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -9.269565634895116e-05
    2. '.' → logprob: -9.500092506408691
    3. ' .' → logprob: -11.000092506408691
    4. '.e' → logprob: -15.000092506408691
    5. 'adj' → logprob: -15.375092506408691
    6. '.Ad' → logprob: -16.375093460083008
    7. '.edges' → logprob: -16.500093460083008
    8. '.ed' → logprob: -16.750093460083008
    9. 'Adj' → logprob: -16.875093460083008
    10. '.euler' → logprob: -17.500093460083008

Token 372: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: 0.0
    2. '[j' → logprob: -17.25
    3. 'jac' → logprob: -17.5
    4. ' j' → logprob: -18.125
    5. 'ј' → logprob: -20.5
    6. '[' → logprob: -21.375
    7. '[node' → logprob: -21.5
    8. '	j' → logprob: -22.125
    9. '[u' → logprob: -22.625
    10. 'js' → logprob: -22.625

Token 373: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.106736039626412e-05
    2. '[' → logprob: -10.500031471252441
    3. '(node' → logprob: -13.375031471252441
    4. '[
' → logprob: -13.625031471252441
    5. 'node' → logprob: -15.000031471252441
    6. ' [' → logprob: -15.375031471252441
    7. '```' → logprob: -17.250030517578125
    8. '
' → logprob: -17.625030517578125
    9. '   ' → logprob: -17.750030517578125
    10. ' node' → logprob: -17.875030517578125

Token 374: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1018984392285347
    2. ']:
' → logprob: -2.351898431777954
    3. '):' → logprob: -7.101898670196533
    4. '):
' → logprob: -7.851898670196533
    5. ':' → logprob: -8.101898193359375
    6. ']' → logprob: -9.476898193359375
    7. ']:
' → logprob: -9.601898193359375
    8. '           ' → logprob: -11.601898193359375
    9. ':
' → logprob: -11.601898193359375
    10. '       ' → logprob: -12.476898193359375

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3557879328727722
    2. '           ' → logprob: -1.230787992477417
    3. '                
' → logprob: -5.855787754058838
    4. '            ' → logprob: -6.605787754058838
    5. ' 
' → logprob: -6.980787754058838
    6. '            
' → logprob: -7.730787754058838
    7. ' edge' → logprob: -7.855787754058838
    8. '   ' → logprob: -8.355788230895996
    9. '                ' → logprob: -8.480788230895996
    10. '             
' → logprob: -9.105788230895996

Token 376: ' e' (ID: 319)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.021748390048742294
    2. ' edge' → logprob: -4.1467485427856445
    3. 'neighbor' → logprob: -5.3967485427856445
    4. '               ' → logprob: -7.2717485427856445
    5. 'e' (adapté à ' e') → logprob: -9.146748542785645
    6. 'next' → logprob: -9.271748542785645
    7. ' neighbor' → logprob: -9.646748542785645
    8. '                   ' → logprob: -9.771748542785645
    9. 'other' → logprob: -10.021748542785645
    10. '   ' → logprob: -10.021748542785645

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6190280914306641
    2. 'dge' → logprob: -0.9940280914306641
    3. '=' → logprob: -2.494028091430664
    4. '=edge' → logprob: -5.369028091430664
    5. 'd' → logprob: -5.494028091430664
    6. 'edge' → logprob: -10.119028091430664
    7. 'dg' → logprob: -11.369028091430664
    8. '       ' → logprob: -11.994028091430664
    9. '=
' → logprob: -12.119028091430664
    10. 'e' → logprob: -12.369028091430664

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007160080131143332
    2. ' self' → logprob: -7.250716209411621
    3. 'elf' → logprob: -12.375716209411621
    4. '(self' → logprob: -14.625716209411621
    5. '   ' → logprob: -15.125716209411621
    6. '           ' → logprob: -15.250716209411621
    7. '=self' → logprob: -15.500716209411621
    8. '               ' → logprob: -16.000715255737305
    9. '	self' → logprob: -16.250715255737305
    10. '       ' → logprob: -16.500715255737305

Token 379: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.4750975966453552
    2. '.edges' → logprob: -0.9750975966453552
    3. 'edges' → logprob: -7.97509765625
    4. 'dge' → logprob: -8.35009765625
    5. 'graph' → logprob: -8.72509765625
    6. '.' → logprob: -8.97509765625
    7. '.edge' → logprob: -9.72509765625
    8. 'd' → logprob: -9.97509765625
    9. 'raph' → logprob: -11.72509765625
    10. 'self' → logprob: -12.10009765625

Token 380: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0002366753324167803
    2. '.' → logprob: -8.625236511230469
    3. 'edges' → logprob: -10.125236511230469
    4. ' .' → logprob: -11.875236511230469
    5. '.ed' → logprob: -13.625236511230469
    6. '.edge' → logprob: -13.625236511230469
    7. '.Ed' → logprob: -13.625236511230469
    8. '.Edge' → logprob: -13.875236511230469
    9. '.
' → logprob: -14.000236511230469
    10. ' edges' → logprob: -14.000236511230469

Token 381: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00027599421446211636
    2. '[' → logprob: -8.375275611877441
    3. '(e' → logprob: -11.125275611877441
    4. 'e' → logprob: -11.625275611877441
    5. 'eid' → logprob: -11.750275611877441
    6. '[
' → logprob: -12.750275611877441
    7. '       ' → logprob: -13.500275611877441
    8. ' [' → logprob: -13.625275611877441
    9. '   ' → logprob: -13.625275611877441
    10. '[self' → logprob: -14.000275611877441

Token 382: 'id' (ID: 315)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4287463128566742
    2. 'id' → logprob: -1.0537463426589966
    3. 'dge' → logprob: -11.428746223449707
    4. 'д' → logprob: -12.178746223449707
    5. '[' → logprob: -12.553746223449707
    6. '_id' → logprob: -13.053746223449707
    7. 'did' → logprob: -13.303746223449707
    8. ']' → logprob: -13.428746223449707
    9. '[id' → logprob: -13.428746223449707
    10. 'D' → logprob: -13.553746223449707

Token 383: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04456178843975067
    2. ']' → logprob: -3.7945618629455566
    3. '               ' → logprob: -4.294561862945557
    4. ')
' → logprob: -5.044561862945557
    5. ']
' → logprob: -8.044561386108398
    6. ')' → logprob: -8.294561386108398
    7. '           ' → logprob: -8.419561386108398
    8. '                   ' → logprob: -9.919561386108398
    9. '       ' → logprob: -10.169561386108398
    10. '
' → logprob: -10.419561386108398

Token 384: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11357342451810837
    2. ' ' → logprob: -3.1135733127593994
    3. ' 
' → logprob: -3.6135733127593994
    4. '                
' → logprob: -4.1135735511779785
    5. ' if' → logprob: -4.3635735511779785
    6. '                ' → logprob: -5.3635735511779785
    7. '<|end|>' → logprob: -7.3635735511779785
    8. '  
' → logprob: -8.11357307434082
    9. '                 
' → logprob: -8.11357307434082
    10. ',' → logprob: -8.98857307434082

Token 385: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5512166619300842
    2. 'next' → logprob: -1.1762166023254395
    3. ' nxt' → logprob: -3.3012166023254395
    4. 'nbr' → logprob: -3.5512166023254395
    5. ' neighbor' → logprob: -4.1762166023254395
    6. ' next' → logprob: -4.6762166023254395
    7. 'to' → logprob: -4.9262166023254395
    8. 'other' → logprob: -5.5512166023254395
    9. 'n' → logprob: -5.6762166023254395
    10. 'ne' → logprob: -5.8012166023254395

Token 386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286649852991104
    2. '=' → logprob: -2.2378664016723633
    3. '_node' → logprob: -11.237866401672363
    4. '=node' → logprob: -11.362866401672363
    5. ' ' → logprob: -11.862866401672363
    6. '_' → logprob: -12.237866401672363
    7. ')' → logprob: -13.737866401672363
    8. 'node' → logprob: -13.737866401672363
    9. '	' → logprob: -14.362866401672363
    10. ' =
' → logprob: -14.612866401672363

Token 387: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5759406089782715
    2. 'e' → logprob: -0.8259406089782715
    3. '                   ' → logprob: -14.57594108581543
    4. '               ' → logprob: -15.32594108581543
    5. '   ' → logprob: -15.57594108581543
    6. '
' → logprob: -16.45094108581543
    7. 'self' → logprob: -17.20094108581543
    8. '                       ' → logprob: -17.57594108581543
    9. '	e' → logprob: -17.57594108581543
    10. '           ' → logprob: -17.70094108581543

Token 388: '.other' (ID: 85859)
  Prédit: '.other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.other' → logprob: -0.003607436316087842
    2. '.' → logprob: -5.628607273101807
    3. ' .' → logprob: -12.378607749938965
    4. '.
' → logprob: -14.003607749938965
    5. 'other' → logprob: -14.003607749938965
    6. '   ' → logprob: -14.128607749938965
    7. ' other' → logprob: -16.00360679626465
    8. '.Other' → logprob: -16.12860679626465
    9. ' ' → logprob: -16.25360679626465
    10. ').' → logprob: -16.37860679626465

Token 389: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.50012493133545
    4. '(n' → logprob: -15.62512493133545
    5. ' (' → logprob: -16.625125885009766
    6. 'node' → logprob: -16.875125885009766
    7. '(

' → logprob: -17.875125885009766
    8. '[node' → logprob: -18.375125885009766
    9. ',node' → logprob: -18.875125885009766
    10. '=node' → logprob: -19.125125885009766

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931788325309753
    2. ')
' → logprob: -0.6931788325309753
    3. ')
' → logprob: -10.5681791305542
    4. '               ' → logprob: -12.6931791305542
    5. ' )
' → logprob: -13.8181791305542
    6. ')

' → logprob: -13.8181791305542
    7. '           ' → logprob: -15.0681791305542
    8. ')`
' → logprob: -15.5681791305542
    9. ' )' → logprob: -15.6931791305542
    10. '),' → logprob: -17.193178176879883

Token 391: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007035631220787764
    2. '<|end|>' → logprob: -5.632035732269287
    3. '                
' → logprob: -6.757035732269287
    4. ' 
' → logprob: -7.132035732269287
    5. '  
' → logprob: -8.007035255432129
    6. '                ' → logprob: -8.132035255432129
    7. ' ' → logprob: -8.257035255432129
    8. '
' → logprob: -8.382035255432129
    9. ' if' → logprob: -9.632035255432129
    10. '                   ' → logprob: -9.882035255432129

Token 392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.763976514339447
    2. '               ' → logprob: -1.0139765739440918
    3. ' if' → logprob: -1.7639765739440918
    4. '                   ' → logprob: -10.888976097106934
    5. '                ' → logprob: -11.388976097106934
    6. '           ' → logprob: -11.388976097106934
    7. '                
' → logprob: -12.763976097106934
    8. 'If' → logprob: -12.888976097106934
    9. '              ' → logprob: -13.388976097106934
    10. ' ' → logprob: -13.888976097106934

Token 393: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.42872822284698486
    2. 'dist' → logprob: -1.0537282228469849
    3. '	dist' → logprob: -11.178728103637695
    4. '   ' → logprob: -12.553728103637695
    5. '(dist' → logprob: -12.678728103637695
    6. ' ' → logprob: -13.178728103637695
    7. ' ' → logprob: -13.178728103637695
    8. '_dist' → logprob: -13.928728103637695
    9. '```' → logprob: -14.428728103637695
    10. 'Dist' → logprob: -15.178728103637695

Token 394: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00010020548506872728
    2. '[' → logprob: -9.375100135803223
    3. '[next' → logprob: -12.250100135803223
    4. '[
' → logprob: -12.375100135803223
    5. 'n' → logprob: -12.750100135803223
    6. ' [' → logprob: -14.250100135803223
    7. '
' → logprob: -14.375100135803223
    8. '```' → logprob: -14.625100135803223
    9. '[node' → logprob: -15.000100135803223
    10. '   ' → logprob: -15.125100135803223

Token 395: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0005488642491400242
    2. 'x' → logprob: -7.625548839569092
    3. '[x' → logprob: -9.87554931640625
    4. '[' → logprob: -12.50054931640625
    5. '[n' → logprob: -12.87554931640625
    6. ']' → logprob: -13.37554931640625
    7. '```' → logprob: -14.37554931640625
    8. '``' → logprob: -15.62554931640625
    9. '[
' → logprob: -15.75054931640625
    10. 'ext' → logprob: -15.87554931640625

Token 396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5263110995292664
    2. '[node' → logprob: -1.1513111591339111
    3. '>' → logprob: -2.526311159133911
    4. '[' → logprob: -5.401310920715332
    5. ' >' → logprob: -6.401310920715332
    6. ' ]' → logprob: -6.401310920715332
    7. ']==' → logprob: -6.526310920715332
    8. '==' → logprob: -6.526310920715332
    9. ']>' → logprob: -7.401310920715332
    10. ' ==' → logprob: -7.901310920715332

Token 397: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48502251505851746
    2. '==' → logprob: -1.4850225448608398
    3. '>' → logprob: -2.23502254486084
    4. ' >' → logprob: -2.98502254486084
    5. '=' → logprob: -8.61002254486084
    6. ' ' → logprob: -9.61002254486084
    7. '==
' → logprob: -11.23502254486084
    8. ' ' → logprob: -11.48502254486084
    9. '[' → logprob: -12.11002254486084
    10. ' >
' → logprob: -12.36002254486084

Token 398: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.28118085861206055
    2. ' dist' → logprob: -1.4061808586120605
    3. '	dist' → logprob: -10.906181335449219
    4. ' ' → logprob: -12.781181335449219
    5. '(dist' → logprob: -12.781181335449219
    6. '   ' → logprob: -12.781181335449219
    7. '_dist' → logprob: -13.656181335449219
    8. '
' → logprob: -14.531181335449219
    9. 'd' → logprob: -14.656181335449219
    10. '.dist' → logprob: -15.156181335449219

Token 399: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.1782583391759545e-05
    2. '[' → logprob: -11.375031471252441
    3. '[n' → logprob: -11.375031471252441
    4. 'node' → logprob: -12.250031471252441
    5. '[
' → logprob: -13.250031471252441
    6. ' [' → logprob: -14.000031471252441
    7. 'dist' → logprob: -14.625031471252441
    8. ' node' → logprob: -14.750031471252441
    9. '(node' → logprob: -15.625031471252441
    10. '   ' → logprob: -16.375032424926758

Token 400: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10027405619621277
    2. '+' → logprob: -2.350274085998535
    3. ' ' → logprob: -10.350274085998535
    4. ']+' → logprob: -11.350274085998535
    5. ' +
' → logprob: -11.975274085998535
    6. ']' → logprob: -12.600274085998535
    7. ' plus' → logprob: -12.850274085998535
    8. '[' → logprob: -13.100274085998535
    9. '   ' → logprob: -13.225274085998535
    10. '1' → logprob: -13.350274085998535

Token 401: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869379758834839
    2. '+' → logprob: -1.1369379758834839
    3. '1' → logprob: -10.886938095092773
    4. '[' → logprob: -11.011938095092773
    5. ' ' → logprob: -11.011938095092773
    6. ' +
' → logprob: -12.261938095092773
    7. '[node' → logprob: -13.136938095092773
    8. '+
' → logprob: -13.386938095092773
    9. ':
' → logprob: -13.761938095092773
    10. ':' → logprob: -14.136938095092773

Token 402: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004624868277460337
    2. ' ' → logprob: -5.379624843597412
    3. '   ' → logprob: -12.50462532043457
    4. '    ' → logprob: -15.75462532043457
    5. '           ' → logprob: -15.81712532043457
    6. '```' → logprob: -16.12962532043457
    7. '  ' → logprob: -16.19212532043457
    8. '                   ' → logprob: -16.75462532043457
    9. '               ' → logprob: -16.87962532043457
    10. ' ' → logprob: -17.12962532043457

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.750024795532227
    4. '  ' → logprob: -17.750024795532227
    5. '```' → logprob: -18.125024795532227
    6. '           ' → logprob: -18.500024795532227
    7. '
' → logprob: -18.750024795532227
    8. '    ' → logprob: -18.750024795532227
    9. '                   ' → logprob: -19.000024795532227
    10. '       ' → logprob: -19.312524795532227

Token 404: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029800137504935265
    2. ':
' → logprob: -3.5298001766204834
    3. '               ' → logprob: -11.404800415039062
    4. ' and' → logprob: -12.029800415039062
    5. ' :' → logprob: -12.279800415039062
    6. '):
' → logprob: -12.279800415039062
    7. '):' → logprob: -12.279800415039062
    8. '           ' → logprob: -12.654800415039062
    9. ':
' → logprob: -12.779800415039062
    10. '                   ' → logprob: -12.779800415039062

Token 405: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1077129915356636
    2. '               ' → logprob: -2.857712984085083
    3. '                       ' → logprob: -4.107713222503662
    4. '                           ' → logprob: -4.857713222503662
    5. '                    
' → logprob: -5.232713222503662
    6. '                               ' → logprob: -5.982713222503662
    7. ' 
' → logprob: -6.107713222503662
    8. ':' → logprob: -6.232713222503662
    9. '                    ' → logprob: -6.482713222503662
    10. '                        
' → logprob: -6.482713222503662

Token 406: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.371625691652298
    2. '                   ' → logprob: -1.8716256618499756
    3. '                       ' → logprob: -2.6216256618499756
    4. 'dist' (adapté à ' dist') → logprob: -3.3716256618499756
    5. '                    ' → logprob: -3.3716256618499756
    6. ' 
' → logprob: -5.371625900268555
    7. '                    
' → logprob: -6.246625900268555
    8. '                        
' → logprob: -6.246625900268555
    9. '                        ' → logprob: -6.621625900268555
    10. ' ' → logprob: -6.621625900268555

Token 407: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -11.375012397766113
    3. 'n' → logprob: -14.375012397766113
    4. '[
' → logprob: -15.000012397766113
    5. ' =' → logprob: -17.00001335144043
    6. ' [' → logprob: -17.00001335144043
    7. '=' → logprob: -17.00001335144043
    8. '=n' → logprob: -17.12501335144043
    9. '	n' → logprob: -17.37501335144043
    10. '```' → logprob: -17.50001335144043

Token 408: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.685015082359314
    2. 'x' → logprob: -0.810015082359314
    3. '[n' → logprob: -3.0600152015686035
    4. '[x' → logprob: -6.6850152015686035
    5. '[' → logprob: -6.9350152015686035
    6. 'n' → logprob: -7.0600152015686035
    7. '[
' → logprob: -7.9350152015686035
    8. 'ext' → logprob: -8.435014724731445
    9. '[node' → logprob: -9.185014724731445
    10. 't' → logprob: -9.560014724731445

Token 409: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166101813316345
    2. '=' → logprob: -4.264165878295898
    3. ' =
' → logprob: -13.764165878295898
    4. ' ' → logprob: -14.014165878295898
    5. ']' → logprob: -14.389165878295898
    6. ']=' → logprob: -17.0141658782959
    7. ')' → logprob: -17.1391658782959
    8. ' ]' → logprob: -17.7641658782959
    9. ' =)' → logprob: -17.8891658782959
    10. ' +=' → logprob: -18.2641658782959

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. ' =
' → logprob: -16.41022491455078
    4. '.=' → logprob: -16.41022491455078
    5. ' ' → logprob: -17.53522491455078
    6. ',' → logprob: -17.53522491455078
    7. '=
' → logprob: -18.03522491455078
    8. '＝' → logprob: -18.78522491455078
    9. '[' → logprob: -18.91022491455078
    10. ')' → logprob: -19.78522491455078

Token 411: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.31326231360435486
    2. 'dist' → logprob: -1.3132623434066772
    3. '	dist' → logprob: -14.813261985778809
    4. '(dist' → logprob: -16.438262939453125
    5. '_dist' → logprob: -16.813262939453125
    6. '                   ' → logprob: -17.063262939453125
    7. '                    ' → logprob: -17.813262939453125
    8. '.dist' → logprob: -17.938262939453125
    9. '    ' → logprob: -18.063262939453125
    10. 'Dist' → logprob: -19.688262939453125

Token 412: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.319370302458992e-06
    2. '[
' → logprob: -12.875005722045898
    3. '[' → logprob: -13.375005722045898
    4. 'node' → logprob: -14.000005722045898
    5. ' node' → logprob: -15.875005722045898
    6. ' [' → logprob: -16.3750057220459
    7. '(node' → logprob: -16.5000057220459
    8. '[n' → logprob: -16.7500057220459
    9. '	node' → logprob: -18.6250057220459
    10. '[token' → logprob: -18.8750057220459

Token 413: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011052416637539864
    2. '+' → logprob: -4.51105260848999
    3. ' ' → logprob: -13.261052131652832
    4. '[' → logprob: -13.886052131652832
    5. ' plus' → logprob: -14.136052131652832
    6. ' +
' → logprob: -14.511052131652832
    7. ')+' → logprob: -15.761052131652832
    8. ']+' → logprob: -16.01105308532715
    9. ' ' → logprob: -16.13605308532715
    10. ')' → logprob: -16.13605308532715

Token 414: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06994076818227768
    2. '+' → logprob: -2.6949408054351807
    3. ' ' → logprob: -13.069940567016602
    4. ' +
' → logprob: -13.944940567016602
    5. '[' → logprob: -14.319940567016602
    6. ' plus' → logprob: -15.069940567016602
    7. ' ' → logprob: -15.444940567016602
    8. '1' → logprob: -15.944940567016602
    9. '+
' → logprob: -16.0699405670166
    10. '[node' → logprob: -17.0699405670166

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '```' → logprob: -15.628600120544434
    4. '   ' → logprob: -16.50360107421875
    5. '
' → logprob: -17.19110107421875
    6. '                   ' → logprob: -17.31610107421875
    7. ' ' → logprob: -18.25360107421875
    8. ' 
' → logprob: -18.25360107421875
    9. '' → logprob: -18.62860107421875
    10. ',' → logprob: -18.81610107421875

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.250001907348633
    4. '
' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '{
' → logprob: -21.000001907348633
    7. '۱' → logprob: -21.312501907348633
    8. '' → logprob: -21.312501907348633
    9. '  ' → logprob: -21.562501907348633
    10. '

' → logprob: -21.562501907348633

Token 417: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002972591435536742
    2. '           ' → logprob: -6.752972602844238
    3. '               ' → logprob: -7.377972602844238
    4. '                    ' → logprob: -7.877972602844238
    5. 'parent' → logprob: -8.627972602844238
    6. '                    
' → logprob: -9.002972602844238
    7. '                       ' → logprob: -9.377972602844238
    8. '
' → logprob: -9.377972602844238
    9. ',' → logprob: -9.502972602844238
    10. '       ' → logprob: -9.627972602844238

Token 418: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000713266315869987
    2. '           ' → logprob: -8.125713348388672
    3. '               ' → logprob: -8.750713348388672
    4. '                    ' → logprob: -9.500713348388672
    5. '                    
' → logprob: -9.750713348388672
    6. '                       ' → logprob: -10.375713348388672
    7. 'parent' → logprob: -10.500713348388672
    8. '       ' → logprob: -10.750713348388672
    9. '				' → logprob: -11.125713348388672
    10. ',' → logprob: -12.125713348388672

Token 419: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.00018280261429026723
    2. ' parent' → logprob: -8.62518310546875
    3. '                   ' → logprob: -13.00018310546875
    4. 'queue' → logprob: -15.37518310546875
    5. '	parent' → logprob: -15.50018310546875
    6. '.parent' → logprob: -15.87518310546875
    7. '[parent' → logprob: -15.87518310546875
    8. '   ' → logprob: -16.00018310546875
    9. '           ' → logprob: -16.37518310546875
    10. ',parent' → logprob: -17.50018310546875

Token 420: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00033581978641450405
    2. '_' → logprob: -9.125335693359375
    3. '_edges' → logprob: -9.250335693359375
    4. '_e' → logprob: -9.625335693359375
    5. '_line' → logprob: -11.250335693359375
    6. '[_' → logprob: -11.875335693359375
    7. '_eye' → logprob: -12.250335693359375
    8. '_node' → logprob: -12.250335693359375
    9. ' _' → logprob: -12.375335693359375
    10. '[' → logprob: -12.750335693359375

Token 421: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.999452772201039e-05
    2. '[e' → logprob: -10.875029563903809
    3. '[' → logprob: -11.625029563903809
    4. '[node' → logprob: -13.750029563903809
    5. '[
' → logprob: -14.875029563903809
    6. ' [' → logprob: -15.250029563903809
    7. '```' → logprob: -15.625029563903809
    8. '=' → logprob: -16.125030517578125
    9. ' =' → logprob: -17.250030517578125
    10. '=n' → logprob: -17.750030517578125

Token 422: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.003921195399016142
    2. 'ode' → logprob: -6.003921031951904
    3. 'x' → logprob: -6.628921031951904
    4. '   ' → logprob: -10.003921508789062
    5. '[' → logprob: -11.753921508789062
    6. '[node' → logprob: -11.753921508789062
    7. '
' → logprob: -11.878921508789062
    8. 'ext' → logprob: -12.003921508789062
    9. '[x' → logprob: -12.128921508789062
    10. '       ' → logprob: -12.128921508789062

Token 423: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11023867130279541
    2. ' =' → logprob: -2.860238552093506
    3. ']' → logprob: -3.110238552093506
    4. ']=' → logprob: -5.985238552093506
    5. '[' → logprob: -11.860239028930664
    6. ')' → logprob: -12.360239028930664
    7. ' ]' → logprob: -12.485239028930664
    8. ')=' → logprob: -12.985239028930664
    9. '<|end|>' → logprob: -15.110239028930664
    10. '=
' → logprob: -15.485239028930664

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '[' → logprob: -15.936967849731445
    4. '=e' → logprob: -16.561967849731445
    5. '=
' → logprob: -16.561967849731445
    6. '＝' → logprob: -17.061967849731445
    7. '=

' → logprob: -17.311967849731445
    8. ' =
' → logprob: -18.186967849731445
    9. '.=' → logprob: -18.561967849731445
    10. ')=' → logprob: -18.686967849731445

Token 425: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.0002615742268972099
    2. ' eid' → logprob: -8.250261306762695
    3. 'id' → logprob: -16.500261306762695
    4. '   ' → logprob: -16.625261306762695
    5. 'ead' → logprob: -17.250261306762695
    6. 'nid' → logprob: -17.500261306762695
    7. 'e' → logprob: -17.500261306762695
    8. 'ei' → logprob: -17.500261306762695
    9. '
' → logprob: -18.125261306762695
    10. 'iid' → logprob: -18.625261306762695

Token 426: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006467910134233534
    2. '
' → logprob: -7.875646591186523
    3. '               ' → logprob: -9.375646591186523
    4. '           ' → logprob: -9.750646591186523
    5. '                    
' → logprob: -10.500646591186523
    6. '				' → logprob: -10.875646591186523
    7. '                       ' → logprob: -11.250646591186523
    8. '                    ' → logprob: -11.500646591186523
    9. '       ' → logprob: -11.750646591186523
    10. '<|end|>' → logprob: -11.750646591186523

Token 427: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017910730093717575
    2. 'queue' → logprob: -9.500179290771484
    3. '               ' → logprob: -10.625179290771484
    4. ' queue' → logprob: -10.750179290771484
    5. '                       ' → logprob: -11.000179290771484
    6. '           ' → logprob: -11.375179290771484
    7. '				' → logprob: -11.625179290771484
    8. '   ' → logprob: -12.375179290771484
    9. '                    
' → logprob: -12.375179290771484
    10. '                    ' → logprob: -12.625179290771484

Token 428: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.00012356207298580557
    2. ' queue' → logprob: -9.000123977661133
    3. '	queue' → logprob: -16.500123977661133
    4. '                   ' → logprob: -17.125123977661133
    5. '.queue' → logprob: -17.875123977661133
    6. '```' → logprob: -18.125123977661133
    7. '(queue' → logprob: -19.250123977661133
    8. '   ' → logprob: -19.250123977661133
    9. '       ' → logprob: -20.500123977661133
    10. 'deque' → logprob: -20.500123977661133

Token 429: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.790129555156454e-05
    2. '.p' → logprob: -10.000067710876465
    3. '.' → logprob: -11.125067710876465
    4. '.extend' → logprob: -12.375067710876465
    5. '.enqueue' → logprob: -13.625067710876465
    6. '.app' → logprob: -14.250067710876465
    7. ').' → logprob: -14.500067710876465
    8. '.put' → logprob: -14.625067710876465
    9. 'append' → logprob: -14.875067710876465
    10. '.push' → logprob: -15.875067710876465

Token 430: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. '(
' → logprob: -14.375431060791016
    4. 'n' → logprob: -16.375431060791016
    5. ' (' → logprob: -17.750431060791016
    6. '(

' → logprob: -18.250431060791016
    7. '((' → logprob: -18.500431060791016
    8. '(next' → logprob: -18.875431060791016
    9. '(nx' → logprob: -19.500431060791016
    10. '()' → logprob: -20.125431060791016

Token 431: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.27099974633893e-05
    2. 'x' → logprob: -11.375012397766113
    3. 't' → logprob: -14.500012397766113
    4. '```' → logprob: -15.500012397766113
    5. '   ' → logprob: -16.25001335144043
    6. ')' → logprob: -16.37501335144043
    7. '[' → logprob: -16.62501335144043
    8. 'ext' → logprob: -16.62501335144043
    9. ']' → logprob: -16.62501335144043
    10. 'w' → logprob: -16.87501335144043

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ')
' → logprob: -11.37501335144043
    3. '               ' → logprob: -14.62501335144043
    4. ' )' → logprob: -14.62501335144043
    5. '<|end|>' → logprob: -15.25001335144043
    6. '       ' → logprob: -16.37501335144043
    7. '           ' → logprob: -16.62501335144043
    8. '）' → logprob: -16.75001335144043
    9. ')return' → logprob: -16.87501335144043
    10. '                   ' → logprob: -17.37501335144043

Token 433: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006230233237147331
    2. 'return' (adapté à ' return') → logprob: -6.381230354309082
    3. ' return' → logprob: -6.506230354309082
    4. '<|end|>' → logprob: -6.631230354309082
    5. '   ' → logprob: -7.006230354309082
    6. '
' → logprob: -8.506230354309082
    7. '    ' → logprob: -9.256230354309082
    8. '	return' → logprob: -9.381230354309082
    9. '	' → logprob: -9.506230354309082
    10. ' ' → logprob: -9.506230354309082

Token 435: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007969287224113941
    2. 'dist' → logprob: -5.007969379425049
    3. 'Train' → logprob: -7.007969379425049
    4. ' self' → logprob: -8.25796890258789
    5. '(self' → logprob: -9.88296890258789
    6. ' dist' → logprob: -11.38296890258789
    7. '[self' → logprob: -11.50796890258789
    8. ' Train' → logprob: -11.75796890258789
    9. '(dist' → logprob: -12.88296890258789
    10. 'd' → logprob: -13.00796890258789

Token 436: '.D' (ID: 1696)
  Prédit: '.D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -0.0006554892170242965
    2. 'D' → logprob: -7.375655651092529
    3. '.Graph' → logprob: -11.500655174255371
    4. '.d' → logprob: -11.875655174255371
    5. ' .' → logprob: -12.500655174255371
    6. 'class' → logprob: -13.375655174255371
    7. '
' → logprob: -13.875655174255371
    8. '.' → logprob: -14.125655174255371
    9. ' D' → logprob: -14.500655174255371
    10. ',' → logprob: -14.750655174255371

Token 437: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.1637164789135568e-05
    2. 'ijk' → logprob: -11.375011444091797
    3. 'ij' → logprob: -15.875011444091797
    4. 'jik' → logprob: -18.375011444091797
    5. 'ijks' → logprob: -18.500011444091797
    6. 'ijkl' → logprob: -18.750011444091797
    7. 'i' → logprob: -19.750011444091797
    8. 'ijek' → logprob: -20.125011444091797
    9. '```' → logprob: -20.125011444091797
    10. 'ijkt' → logprob: -20.875011444091797

Token 438: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -5.512236498361744e-07
    2. 'result' → logprob: -15.125000953674316
    3. 'Results' → logprob: -16.75
    4. 'Res' → logprob: -17.25
    5. 'Response' → logprob: -17.625
    6. 'System' → logprob: -18.25
    7. '_result' → logprob: -18.625
    8. 'Re' → logprob: -18.625
    9. '   ' → logprob: -19.25
    10. '[' → logprob: -19.375

Token 439: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00021069261129014194
    2. '(' → logprob: -8.500210762023926
    3. '(
' → logprob: -12.625210762023926
    4. 'dist' → logprob: -13.000210762023926
    5. ' (' → logprob: -14.000210762023926
    6. '(distance' → logprob: -14.375210762023926
    7. '(`' → logprob: -17.12520980834961
    8. '```' → logprob: -17.75020980834961
    9. '(d' → logprob: -18.12520980834961
    10. '(div' → logprob: -18.37520980834961

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ',parent' → logprob: -9.875060081481934
    3. ',
' → logprob: -12.250060081481934
    4. ' ,' → logprob: -12.625060081481934
    5. ')' → logprob: -15.375060081481934
    6. ',

' → logprob: -16.00006103515625
    7. '[parent' → logprob: -17.00006103515625
    8. 'parent' → logprob: -17.12506103515625
    9. '‌,' → logprob: -17.62506103515625
    10. '=' → logprob: -17.87506103515625

Token 441: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0067154900170862675
    2. ' parent' → logprob: -5.006715297698975
    3. '
' → logprob: -17.131715774536133
    4. '   ' → logprob: -17.756715774536133
    5. 'paren' → logprob: -17.881715774536133
    6. '	parent' → logprob: -18.006715774536133
    7. '[parent' → logprob: -18.381715774536133
    8. '(parent' → logprob: -18.381715774536133
    9. ',parent' → logprob: -19.631715774536133
    10. '.parent' → logprob: -19.881715774536133

Token 442: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.4736459888808895e-05
    2. 'edge' → logprob: -12.250014305114746
    3. 'ent' → logprob: -12.500014305114746
    4. '_' → logprob: -13.625014305114746
    5. '_node' → logprob: -13.875014305114746
    6. '_parent' → logprob: -14.000014305114746
    7. '_e' → logprob: -14.500014305114746
    8. '_ent' → logprob: -14.625014305114746
    9. ')' → logprob: -14.875014305114746
    10. 'e' → logprob: -15.125014305114746

Token 443: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')
' → logprob: -12.125009536743164
    3. ' )' → logprob: -13.375009536743164
    4. '<|end|>' → logprob: -13.375009536743164
    5. '       ' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.500009536743164
    7. ')return' → logprob: -15.750009536743164
    8. ')}' → logprob: -16.875009536743164
    9. ')

' → logprob: -17.500009536743164
    10. '),' → logprob: -18.000009536743164

Token 444: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029959095641970634
    2. '   ' → logprob: -4.154959201812744
    3. '<|end|>' → logprob: -4.529959201812744
    4. ' def' → logprob: -6.529959201812744
    5. '
' → logprob: -7.154959201812744
    6. '    
' → logprob: -7.529959201812744
    7. '<|end|>' → logprob: -9.279958724975586
    8. '```' → logprob: -9.654958724975586
    9. '	def' → logprob: -10.654958724975586
    10. ' 
' → logprob: -11.029958724975586

Token 446: ' build' (ID: 3024)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -1.4947322607040405
    2. ' shortest' → logprob: -1.9947322607040405
    3. 'raise' → logprob: -2.24473237991333
    4. 'calculate' → logprob: -2.49473237991333
    5. ' update' → logprob: -2.74473237991333
    6. ' run' → logprob: -2.99473237991333
    7. ' calculate' → logprob: -2.99473237991333
    8. '_' → logprob: -3.24473237991333
    9. ' process' → logprob: -3.24473237991333
    10. 'update' → logprob: -3.49473237991333

Token 447: '_tree' (ID: 27118)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6619373559951782
    2. '_short' → logprob: -1.9119373559951782
    3. '_' → logprob: -2.2869372367858887
    4. '_raise' → logprob: -3.2869372367858887
    5. '_paths' → logprob: -3.5369372367858887
    6. '(self' → logprob: -3.5369372367858887
    7. '_graph' → logprob: -3.6619372367858887
    8. '_tree' → logprob: -3.6619372367858887
    9. '_min' → logprob: -4.411937236785889
    10. '_sp' → logprob: -4.911937236785889

Token 448: '_from' (ID: 12526)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010521204239921644
    2. '(' → logprob: -9.250104904174805
    3. 'self' → logprob: -12.125104904174805
    4. ' (' → logprob: -13.500104904174805
    5. '   ' → logprob: -14.125104904174805
    6. '(
' → logprob: -14.125104904174805
    7. '(s' → logprob: -15.750104904174805
    8. '(sel' → logprob: -15.750104904174805
    9. '_(' → logprob: -15.750104904174805
    10. '       ' → logprob: -16.125104904174805

Token 449: '_par' (ID: 31329)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7376689910888672
    2. 'initial' → logprob: -1.7376689910888672
    3. '_initial' → logprob: -2.237668991088867
    4. 'dist' → logprob: -2.487668991088867
    5. '(self' → logprob: -3.112668991088867
    6. 'parent' → logprob: -3.737668991088867
    7. '_dist' → logprob: -3.987668991088867
    8. '_b' → logprob: -4.112668991088867
    9. '_parent' → logprob: -4.237668991088867
    10. 'root' → logprob: -4.737668991088867

Token 450: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -8.399378566537052e-05
    2. 'ents' → logprob: -9.500083923339844
    3. 'rent' → logprob: -12.625083923339844
    4. '```' → logprob: -13.000083923339844
    5. '   ' → logprob: -14.125083923339844
    6. 'nt' → logprob: -14.500083923339844
    7. 't' → logprob: -15.125083923339844
    8. 'en' → logprob: -15.250083923339844
    9. 'e' → logprob: -15.500083923339844
    10. '_ent' → logprob: -15.500083923339844

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.875019073486328
    4. 'self' → logprob: -14.375019073486328
    5. '(parent' → logprob: -14.875019073486328
    6. '       ' → logprob: -15.125019073486328
    7. ' (' → logprob: -15.125019073486328
    8. '(
' → logprob: -17.000019073486328
    9. 'def' → logprob: -17.375019073486328
    10. 'parent' → logprob: -17.750019073486328

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6496114134788513
    2. '(self' → logprob: -1.024611473083496
    3. 'self' → logprob: -2.899611473083496
    4. '       ' → logprob: -3.274611473083496
    5. '   ' → logprob: -4.149611473083496
    6. '):
' → logprob: -5.149611473083496
    7. '):' → logprob: -6.524611473083496
    8. 'parent' → logprob: -6.774611473083496
    9. ',self' → logprob: -7.524611473083496
    10. ',parent' → logprob: -8.024611473083496

Token 453: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7340372800827026
    2. ' parent' → logprob: -0.7340372800827026
    3. 'self' → logprob: -3.484037399291992
    4. ' self' → logprob: -4.984037399291992
    5. '   ' → logprob: -6.859037399291992
    6. ' dist' → logprob: -7.484037399291992
    7. 'dist' → logprob: -7.484037399291992
    8. 'parents' → logprob: -9.234037399291992
    9. '       ' → logprob: -9.484037399291992
    10. ' parents' → logprob: -9.734037399291992

Token 454: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.7146746763028204e-05
    2. '_edges' → logprob: -11.37503719329834
    3. ')' → logprob: -11.62503719329834
    4. '_' → logprob: -11.87503719329834
    5. ')_' → logprob: -12.87503719329834
    6. '_node' → logprob: -13.25003719329834
    7. '_ed' → logprob: -13.50003719329834
    8. 'edge' → logprob: -13.62503719329834
    9. '_e' → logprob: -14.50003719329834
    10. '_EDGE' → logprob: -15.00003719329834

Token 455: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22785510122776031
    2. '):
' → logprob: -1.6028550863265991
    3. '):
' → logprob: -7.602855205535889
    4. '   ' → logprob: -7.727855205535889
    5. 'self' → logprob: -7.977855205535889
    6. ')' → logprob: -7.977855205535889
    7. ' ):' → logprob: -7.977855205535889
    8. '       ' → logprob: -8.47785472869873
    9. ',' → logprob: -9.35285472869873
    10. ' ):
' → logprob: -10.10285472869873

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004228091274853796
    2. 'self' → logprob: -8.875422477722168
    3. ',' → logprob: -9.750422477722168
    4. '```' → logprob: -10.125422477722168
    5. '        
' → logprob: -10.125422477722168
    6. ':' → logprob: -10.500422477722168
    7. '   ' → logprob: -10.625422477722168
    8. ' self' → logprob: -11.000422477722168
    9. ':
' → logprob: -11.375422477722168
    10. '
' → logprob: -11.500422477722168

Token 457: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4982451796531677
    2. 'self' → logprob: -1.4982452392578125
    3. 'children' → logprob: -2.6232452392578125
    4. 'tree' → logprob: -2.6232452392578125
    5. ' tree' → logprob: -4.9982452392578125
    6. ' children' → logprob: -5.1232452392578125
    7. 'parent' → logprob: -5.7482452392578125
    8. ' self' → logprob: -5.7482452392578125
    9. 'from' → logprob: -5.7482452392578125
    10. '   ' → logprob: -8.123245239257812

Token 458: ' Build' (ID: 10885)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.6739482879638672
    2. 'self' → logprob: -1.4239482879638672
    3. 'tree' → logprob: -1.4239482879638672
    4. 'child' → logprob: -5.798948287963867
    5. 'from' → logprob: -5.923948287963867
    6. ' tree' → logprob: -7.173948287963867
    7. ' children' → logprob: -7.173948287963867
    8. 'parent' → logprob: -7.423948287963867
    9. '       ' → logprob: -7.923948287963867
    10. '   ' → logprob: -7.923948287963867

Token 459: ' tree' (ID: 8165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6148964166641235
    2. ' self' → logprob: -1.4898964166641235
    3. ' tree' → logprob: -2.614896297454834
    4. 'tree' → logprob: -2.739896297454834
    5. 'children' → logprob: -2.739896297454834
    6. ' children' → logprob: -3.614896297454834
    7. '       ' → logprob: -6.739896297454834
    8. ' parent' → logprob: -7.489896297454834
    9. 'adj' → logprob: -7.739896297454834
    10. 'graph' → logprob: -7.989896297454834

Token 460: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.395435094833374
    2. '=' → logprob: -1.145435094833374
    3. '       ' → logprob: -5.770435333251953
    4. 'self' → logprob: -5.895435333251953
    5. '   ' → logprob: -7.145435333251953
    6. 'from' → logprob: -7.270435333251953
    7. ' self' → logprob: -8.145435333251953
    8. 'children' → logprob: -8.270435333251953
    9. '=self' → logprob: -8.770435333251953
    10. 'adj' → logprob: -9.145435333251953

Token 461: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.019280744716525078
    2. ' parent' → logprob: -4.269280910491943
    3. 'self' → logprob: -6.269280910491943
    4. '[parent' → logprob: -6.644280910491943
    5. '   ' → logprob: -7.269280910491943
    6. '[' → logprob: -8.269280433654785
    7. 'range' → logprob: -8.519280433654785
    8. '       ' → logprob: -8.769280433654785
    9. 'edges' → logprob: -9.519280433654785
    10. 'node' → logprob: -9.894280433654785

Token 462: ' edges' (ID: 22569)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.030210917815566063
    2. '_' → logprob: -4.530210971832275
    3. '_edges' → logprob: -4.655210971832275
    4. ' =' → logprob: -5.280210971832275
    5. '_child' → logprob: -6.530210971832275
    6. '   ' → logprob: -7.030210971832275
    7. 's' → logprob: -7.030210971832275
    8. '_node' → logprob: -7.780210971832275
    9. ' edges' → logprob: -8.405210494995117
    10. ' _' → logprob: -9.780210494995117

Token 463: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060129500925540924
    2. '
' → logprob: -3.185129404067993
    3. 'self' → logprob: -5.810129642486572
    4. ':' → logprob: -6.185129642486572
    5. ' tree' → logprob: -6.560129642486572
    6. 'tree' → logprob: -6.560129642486572
    7. ':
' → logprob: -6.685129642486572
    8. ' self' → logprob: -6.810129642486572
    9. ',' → logprob: -7.060129642486572
    10. '(self' → logprob: -7.185129642486572

Token 464: ' root' (ID: 6577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2559388875961304
    2. 'self' → logprob: -1.3809388875961304
    3. ' tree' → logprob: -2.00593900680542
    4. 'children' → logprob: -2.13093900680542
    5. 'tree' → logprob: -2.13093900680542
    6. ' children' → logprob: -2.75593900680542
    7. ' self' → logprob: -3.63093900680542
    8. ' parent' → logprob: -7.88093900680542
    9. 'parent' → logprob: -8.005938529968262
    10. 'n' → logprob: -8.255938529968262

Token 465: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.633520781993866
    2. '=' → logprob: -0.758520781993866
    3. ' at' → logprob: -7.508520603179932
    4. ' is' → logprob: -8.88352108001709
    5. '1' → logprob: -9.88352108001709
    6. ':' → logprob: -10.25852108001709
    7. '   ' → logprob: -10.63352108001709
    8. ',' → logprob: -10.75852108001709
    9. ' node' → logprob: -10.75852108001709
    10. ' ' → logprob: -11.00852108001709

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004329341172706336
    2. ' ' → logprob: -7.750432968139648
    3. '       ' → logprob: -14.000432968139648
    4. '   ' → logprob: -14.250432968139648
    5. '=' → logprob: -15.500432968139648
    6. '0' → logprob: -16.00043296813965
    7. '
' → logprob: -16.25043296813965
    8. ')' → logprob: -17.00043296813965
    9. '        ' → logprob: -17.12543296813965
    10. '`' → logprob: -17.25043296813965

Token 467: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.438229501247406
    2. '       ' → logprob: -1.0632295608520508
    3. ',' → logprob: -5.438229560852051
    4. '        
' → logprob: -6.688229560852051
    5. ':
' → logprob: -6.938229560852051
    6. '
' → logprob: -6.938229560852051
    7. 'self' → logprob: -7.313229560852051
    8. ':' → logprob: -7.938229560852051
    9. '):
' → logprob: -8.93822956085205
    10. ' tree' → logprob: -9.06322956085205

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006762263830751181
    2. '
' → logprob: -5.6317620277404785
    3. ' tree' → logprob: -6.8817620277404785
    4. ' children' → logprob: -7.2567620277404785
    5. 'tree' → logprob: -7.8817620277404785
    6. ',' → logprob: -8.631762504577637
    7. '```' → logprob: -8.631762504577637
    8. 'children' → logprob: -8.631762504577637
    9. ' self' → logprob: -8.756762504577637
    10. '        
' → logprob: -9.256762504577637

Token 469: ' tree' (ID: 8165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0041024684906006
    2. 'tree' (adapté à ' tree') → logprob: -1.0041024684906006
    3. 'children' → logprob: -1.8791024684906006
    4. '       ' → logprob: -2.5041024684906006
    5. ' tree' → logprob: -3.7541024684906006
    6. ' children' → logprob: -5.50410270690918
    7. ' self' → logprob: -5.87910270690918
    8. 'from' → logprob: -6.37910270690918
    9. 'parent' → logprob: -8.37910270690918
    10. '   ' → logprob: -8.50410270690918

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048621658235788345
    2. '=' → logprob: -3.048621654510498
    3. '   ' → logprob: -11.173622131347656
    4. ' ' → logprob: -12.298622131347656
    5. '       ' → logprob: -12.298622131347656
    6. '[' → logprob: -12.673622131347656
    7. '_' → logprob: -13.173622131347656
    8. '	' → logprob: -14.048622131347656
    9. '    ' → logprob: -14.673622131347656
    10. '           ' → logprob: -14.798622131347656

Token 471: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06437499821186066
    2. ' [[]' → logprob: -2.8143749237060547
    3. '{' → logprob: -6.064374923706055
    4. '[self' → logprob: -9.939374923706055
    5. '   ' → logprob: -10.689374923706055
    6. '[[' → logprob: -12.189374923706055
    7. 'default' → logprob: -12.939374923706055
    8. 'self' → logprob: -14.314374923706055
    9. '       ' → logprob: -14.689374923706055
    10. ' {' → logprob: -16.064374923706055

Token 472: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06407181173563004
    2. 'for' → logprob: -2.9390718936920166
    3. ' (' → logprob: -5.4390716552734375
    4. '(self' → logprob: -6.3140716552734375
    5. '(' → logprob: -6.4390716552734375
    6. ',' → logprob: -7.1890716552734375
    7. ']' → logprob: -8.314071655273438
    8. '
' → logprob: -8.939071655273438
    9. '       ' → logprob: -9.939071655273438
    10. ' self' → logprob: -10.064071655273438

Token 473: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12753576040267944
    2. ' in' → logprob: -2.252535820007324
    3. ' _' → logprob: -4.252535820007324
    4. ' range' → logprob: -8.502535820007324
    5. 'range' → logprob: -9.502535820007324
    6. 'in' → logprob: -9.627535820007324
    7. '_in' → logprob: -12.002535820007324
    8. '(_' → logprob: -12.377535820007324
    9. '(range' → logprob: -12.502535820007324
    10. '_range' → logprob: -12.752535820007324

Token 474: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3386693596839905
    2. 'in' → logprob: -1.5886693000793457
    3. ' in' → logprob: -2.9636693000793457
    4. ' range' → logprob: -3.4636693000793457
    5. '(range' → logprob: -9.088669776916504
    6. 'self' → logprob: -11.588669776916504
    7. ' ' → logprob: -12.338669776916504
    8. 'i' → logprob: -12.463669776916504
    9. 'x' → logprob: -12.963669776916504
    10. 'size' → logprob: -13.963669776916504

Token 475: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00317783304490149
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -15.753177642822266
    4. '   ' → logprob: -18.503177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '    ' → logprob: -20.753177642822266
    7. '
' → logprob: -20.753177642822266
    8. '	range' → logprob: -20.878177642822266
    9. '  ' → logprob: -21.003177642822266
    10. 'rang' → logprob: -22.003177642822266

Token 476: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010950337309623137
    2. 'self' → logprob: -9.125109672546387
    3. '(' → logprob: -15.250109672546387
    4. '(len' → logprob: -15.750109672546387
    5. ' (' → logprob: -16.00010871887207
    6. ' self' → logprob: -17.37510871887207
    7. '((' → logprob: -17.62510871887207
    8. '(
' → logprob: -18.37510871887207
    9. '[self' → logprob: -18.50010871887207
    10. '   ' → logprob: -19.00010871887207

Token 477: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00011033779446734115
    2. 'n' → logprob: -10.250110626220703
    3. 'self' → logprob: -10.250110626220703
    4. '(n' → logprob: -10.500110626220703
    5. '.' → logprob: -12.000110626220703
    6. '(self' → logprob: -12.750110626220703
    7. ' .' → logprob: -14.000110626220703
    8. '(' → logprob: -14.125110626220703
    9. '   ' → logprob: -14.750110626220703
    10. '.self' → logprob: -15.500110626220703

Token 478: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07003135234117508
    2. ' +' → logprob: -2.6950314044952393
    3. '+
' → logprob: -9.57003116607666
    4. ')]' → logprob: -11.32003116607666
    5. ' +
' → logprob: -12.19503116607666
    6. ')' → logprob: -13.19503116607666
    7. '   ' → logprob: -13.19503116607666
    8. ')]
' → logprob: -13.44503116607666
    9. ' ' → logprob: -13.69503116607666
    10. '
' → logprob: -13.94503116607666

Token 479: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.375033378601074
    3. '(' → logprob: -14.375033378601074
    4. '   ' → logprob: -14.500033378601074
    5. '
' → logprob: -14.875033378601074
    6. '+' → logprob: -15.875033378601074
    7. '0' → logprob: -16.875032424926758
    8. ')' → logprob: -17.000032424926758
    9. 'self' → logprob: -17.750032424926758
    10. '```' → logprob: -18.000032424926758

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.375003814697266
    4. '
' → logprob: -16.625003814697266
    5. '0' → logprob: -18.125003814697266
    6. '```' → logprob: -19.000003814697266
    7. ')' → logprob: -19.125003814697266
    8. '+' → logprob: -19.500003814697266
    9. '(' → logprob: -19.875003814697266
    10. '2' → logprob: -20.000003814697266

Token 481: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6875988245010376
    2. ')]' → logprob: -0.9375988245010376
    3. ']
' → logprob: -2.562598705291748
    4. ')' → logprob: -4.062598705291748
    5. ')]
' → logprob: -4.562598705291748
    6. ')
' → logprob: -7.437598705291748
    7. ']
' → logprob: -9.062599182128906
    8. '       ' → logprob: -9.812599182128906
    9. ' ]' → logprob: -9.812599182128906
    10. ']

' → logprob: -10.437599182128906

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05008280277252197
    2. ' for' → logprob: -3.5500826835632324
    3. 'for' → logprob: -4.550082683563232
    4. '
' → logprob: -4.675082683563232
    5. '   ' → logprob: -8.67508316040039
    6. '        
' → logprob: -11.17508316040039
    7. '           ' → logprob: -11.30008316040039
    8. '```' → logprob: -11.42508316040039
    9. '	for' → logprob: -11.92508316040039
    10. ' ' → logprob: -12.30008316040039

Token 483: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017231308156624436
    2. ' for' → logprob: -6.751723289489746
    3. '       ' → logprob: -7.501723289489746
    4. '   ' → logprob: -14.501723289489746
    5. '	for' → logprob: -16.00172233581543
    6. '
' → logprob: -16.87672233581543
    7. '           ' → logprob: -18.12672233581543
    8. '```' → logprob: -19.25172233581543
    9. ' ' → logprob: -19.37672233581543
    10. '               ' → logprob: -19.62672233581543

Token 484: ' v' (ID: 323)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.49943509697914124
    2. 'v' → logprob: -0.9994350671768188
    3. ' node' → logprob: -4.499434947967529
    4. 'i' → logprob: -4.499434947967529
    5. ' v' → logprob: -6.374434947967529
    6. 'u' → logprob: -6.874434947967529
    7. ' i' → logprob: -10.124435424804688
    8. 'x' → logprob: -10.874435424804688
    9. 'child' → logprob: -12.374435424804688
    10. ' u' → logprob: -12.624435424804688

Token 485: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02682025358080864
    2. 'in' → logprob: -3.651820182800293
    3. ',' → logprob: -7.651820182800293
    4. ' ' → logprob: -10.776820182800293
    5. ' ,' → logprob: -11.526820182800293
    6. 'v' → logprob: -12.776820182800293
    7. ' i' → logprob: -13.026820182800293
    8. 'range' → logprob: -13.151820182800293
    9. 'n' → logprob: -13.276820182800293
    10. '	in' → logprob: -13.901820182800293

Token 486: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048587486147880554
    2. ' range' → logprob: -3.0485875606536865
    3. '(range' → logprob: -16.673587799072266
    4. '   ' → logprob: -18.798587799072266
    5. '	range' → logprob: -18.923587799072266
    6. ' ' → logprob: -19.923587799072266
    7. '.range' → logprob: -20.798587799072266
    8. 'rang' → logprob: -21.048587799072266
    9. '_range' → logprob: -21.173587799072266
    10. ' xrange' → logprob: -21.548587799072266

Token 487: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6941429376602173
    2. '2' → logprob: -0.6941429376602173
    3. '1' → logprob: -7.069142818450928
    4. '(
' → logprob: -9.694143295288086
    5. ' ' → logprob: -9.819143295288086
    6. '   ' → logprob: -10.944143295288086
    7. ' (' → logprob: -12.069143295288086
    8. '
' → logprob: -13.069143295288086
    9. ',' → logprob: -13.069143295288086
    10. ')' → logprob: -15.944143295288086

Token 488: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002678920282050967
    2. '1' → logprob: -8.25026798248291
    3. ' ' → logprob: -12.00026798248291
    4. '   ' → logprob: -14.75026798248291
    5. '
' → logprob: -17.250267028808594
    6. '(' → logprob: -17.625267028808594
    7. 'self' → logprob: -18.625267028808594
    8. '    ' → logprob: -20.250267028808594
    9. '  ' → logprob: -20.250267028808594
    10. '       ' → logprob: -20.500267028808594

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007613879279233515
    2. ' ,' → logprob: -7.25076150894165
    3. ',
' → logprob: -10.375761032104492
    4. ',self' → logprob: -11.000761032104492
    5. '<|end|>' → logprob: -14.625761032104492
    6. '
' → logprob: -14.875761032104492
    7. ' ' → logprob: -14.875761032104492
    8. ',n' → logprob: -15.125761032104492
    9. '       ' → logprob: -15.250761032104492
    10. ' to' → logprob: -15.250761032104492

Token 490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001605115394340828
    2. ' self' → logprob: -8.750160217285156
    3. '(self' → logprob: -14.500160217285156
    4. '   ' → logprob: -14.750160217285156
    5. '       ' → logprob: -14.875160217285156
    6. 'len' → logprob: -15.000160217285156
    7. '           ' → logprob: -15.625160217285156
    8. '
' → logprob: -15.750160217285156
    9. '```' → logprob: -17.000160217285156
    10. '[self' → logprob: -17.375160217285156

Token 491: '.n' (ID: 1835)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11500416696071625
    2. ' +' → logprob: -2.240004062652588
    3. '+
' → logprob: -7.865004062652588
    4. '):
' → logprob: -7.990004062652588
    5. '+self' → logprob: -8.115004539489746
    6. 'n' → logprob: -8.365004539489746
    7. '       ' → logprob: -8.615004539489746
    8. '+n' → logprob: -8.865004539489746
    9. ',' → logprob: -9.115004539489746
    10. '   ' → logprob: -9.490004539489746

Token 492: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31327155232429504
    2. ' +' → logprob: -1.3132715225219727
    3. '+
' → logprob: -12.438271522521973
    4. ' +
' → logprob: -13.063271522521973
    5. '()+' → logprob: -13.313271522521973
    6. ' ' → logprob: -14.438271522521973
    7. '
' → logprob: -15.063271522521973
    8. '):
' → logprob: -15.063271522521973
    9. '   ' → logprob: -15.188271522521973
    10. '(' → logprob: -16.18827247619629

Token 493: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '+' → logprob: -15.250004768371582
    4. '   ' → logprob: -15.875004768371582
    5. '2' → logprob: -17.6250057220459
    6. '
' → logprob: -18.5000057220459
    7. '       ' → logprob: -19.0000057220459
    8. ',' → logprob: -19.3750057220459
    9. '```' → logprob: -19.5625057220459
    10. '           ' → logprob: -19.8125057220459

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.750011444091797
    3. '+' → logprob: -13.500011444091797
    4. '2' → logprob: -13.875011444091797
    5. '   ' → logprob: -14.875011444091797
    6. '
' → logprob: -15.625011444091797
    7. 'self' → logprob: -16.250011444091797
    8. '(' → logprob: -17.000011444091797
    9. '```' → logprob: -17.500011444091797
    10. ')' → logprob: -17.500011444091797

Token 495: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014276213012635708
    2. '):' → logprob: -4.264276027679443
    3. ':' → logprob: -9.764276504516602
    4. '):
' → logprob: -10.139276504516602
    5. ':
' → logprob: -12.139276504516602
    6. '       ' → logprob: -12.514276504516602
    7. ' ):
' → logprob: -12.514276504516602
    8. '           ' → logprob: -13.764276504516602
    9. ')' → logprob: -14.389276504516602
    10. '   ' → logprob: -15.014276504516602

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007014083210378885
    2. ' if' → logprob: -5.882014274597168
    3. 'e' → logprob: -6.882014274597168
    4. ' eid' → logprob: -7.507014274597168
    5. ':' → logprob: -7.632014274597168
    6. '```' → logprob: -7.882014274597168
    7. ' edge' → logprob: -8.632014274597168
    8. '   ' → logprob: -8.632014274597168
    9. 'eid' → logprob: -8.757014274597168
    10. ':
' → logprob: -8.757014274597168

Token 497: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' (adapté à ' eid') → logprob: -0.6303035020828247
    2. 'e' → logprob: -1.2553035020828247
    3. 'pe' → logprob: -2.005303382873535
    4. 'p' → logprob: -4.505303382873535
    5. ' eid' → logprob: -4.755303382873535
    6. 'u' → logprob: -4.755303382873535
    7. 'edge' → logprob: -5.130303382873535
    8. '           ' → logprob: -5.755303382873535
    9. 'pid' → logprob: -5.755303382873535
    10. ' e' → logprob: -6.255303382873535

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521059513092041
    2. ' =' → logprob: -1.502105951309204
    3. '=
' → logprob: -9.252105712890625
    4. ')' → logprob: -10.752105712890625
    5. ' ' → logprob: -11.127105712890625
    6. ' =
' → logprob: -11.252105712890625
    7. '.' → logprob: -11.627105712890625
    8. '=self' → logprob: -12.252105712890625
    9. ',' → logprob: -12.502105712890625
    10. ']' → logprob: -12.752105712890625

Token 499: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3132626414299011
    2. 'parent' → logprob: -1.313262701034546
    3. '	parent' → logprob: -14.688262939453125
    4. '(parent' → logprob: -15.688262939453125
    5. '[parent' → logprob: -16.313262939453125
    6. '.parent' → logprob: -16.938262939453125
    7. '_parent' → logprob: -17.188262939453125
    8. '    ' → logprob: -17.438262939453125
    9. ',parent' → logprob: -17.938262939453125
    10. '           ' → logprob: -18.313262939453125

Token 500: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -8.2994620242971e-06
    2. '_edges' → logprob: -12.625008583068848
    3. '_e' → logprob: -13.000008583068848
    4. '_' → logprob: -13.750008583068848
    5. '[_' → logprob: -15.125008583068848
    6. '_ed' → logprob: -15.375008583068848
    7. '
' → logprob: -15.500008583068848
    8. 'edge' → logprob: -15.750008583068848
    9. '_EDGE' → logprob: -16.12500762939453
    10. 's' → logprob: -16.37500762939453

Token 501: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.4140441635390744e-05
    2. '[' → logprob: -11.625014305114746
    3. 'v' → logprob: -12.375014305114746
    4. '[
' → logprob: -14.250014305114746
    5. ' [' → logprob: -16.12501335144043
    6. '   ' → logprob: -17.00001335144043
    7. '
' → logprob: -17.75001335144043
    8. '<v' → logprob: -18.00001335144043
    9. '[e' → logprob: -18.00001335144043
    10. ']' → logprob: -18.25001335144043

Token 502: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.480038046836853
    2. ']' → logprob: -0.980038046836853
    3. ')
' → logprob: -5.355038166046143
    4. ')' → logprob: -6.855038166046143
    5. ' ]
' → logprob: -9.730037689208984
    6. ' ]' → logprob: -10.355037689208984
    7. ']
' → logprob: -10.980037689208984
    8. '])
' → logprob: -11.105037689208984
    9. '])' → logprob: -11.355037689208984
    10. ']

' → logprob: -11.480037689208984

Token 503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019861606881022453
    2. ' if' → logprob: -5.019861698150635
    3. '
' → logprob: -5.519861698150635
    4. '       ' → logprob: -6.269861698150635
    5. ':
' → logprob: -6.519861698150635
    6. ':' → logprob: -6.769861698150635
    7. '   ' → logprob: -7.019861698150635
    8. ',' → logprob: -7.019861698150635
    9. '```' → logprob: -7.519861698150635
    10. 'if' → logprob: -7.769861698150635

Token 504: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4917374551296234
    2. '           ' → logprob: -1.7417374849319458
    3. ' if' → logprob: -1.9917374849319458
    4. 'e' → logprob: -3.1167373657226562
    5. 'u' → logprob: -3.8667373657226562
    6. 'edge' → logprob: -4.991737365722656
    7. ' e' → logprob: -6.491737365722656
    8. ' u' → logprob: -6.616737365722656
    9. '   ' → logprob: -7.241737365722656
    10. ' edge' → logprob: -7.366737365722656

Token 505: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.31330040097236633
    2. ' eid' → logprob: -1.313300371170044
    3. 'e' → logprob: -10.813300132751465
    4. '   ' → logprob: -11.438300132751465
    5. ' ' → logprob: -12.563300132751465
    6. '    ' → logprob: -14.063300132751465
    7. '
' → logprob: -14.188300132751465
    8. ' e' → logprob: -14.938300132751465
    9. 'ei' → logprob: -15.188300132751465
    10. '	e' → logprob: -15.438300132751465

Token 506: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6506231427192688
    2. '!=' → logprob: -0.7756231427192688
    3. '!=-' → logprob: -4.775623321533203
    4. 'is' → logprob: -6.025623321533203
    5. ' is' → logprob: -6.150623321533203
    6. '==' → logprob: -6.275623321533203
    7. ')' → logprob: -6.900623321533203
    8. ' ==' → logprob: -6.900623321533203
    9. '>=' → logprob: -7.900623321533203
    10. '[' → logprob: -8.400623321533203

Token 507: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.500911712646484
    4. ' ' → logprob: -19.500911712646484
    5. '           ' → logprob: -20.750911712646484
    6. '−' → logprob: -21.625911712646484
    7. '-
' → logprob: -21.750911712646484
    8. '	' → logprob: -22.000911712646484
    9. '               ' → logprob: -22.125911712646484
    10. '  ' → logprob: -22.250911712646484

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '<|end|>' → logprob: -17.0625
    4. '```' → logprob: -17.25
    5. '
' → logprob: -18.0
    6. ',' → logprob: -18.1875
    7. '

' → logprob: -18.3125
    8. '१' → logprob: -18.3125
    9. '۱' → logprob: -18.4375
    10. '১' → logprob: -18.5

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5960381627082825
    2. ':
' → logprob: -0.8460381627082825
    3. '               ' → logprob: -3.9710381031036377
    4. '           ' → logprob: -7.721038341522217
    5. ':return' → logprob: -7.721038341522217
    6. 'continue' → logprob: -10.096037864685059
    7. ' or' → logprob: -10.346037864685059
    8. ' continue' → logprob: -10.846037864685059
    9. '):
' → logprob: -10.971037864685059
    10. ',' → logprob: -11.471037864685059

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002616801531985402
    2. ' continue' → logprob: -6.252616882324219
    3. 'continue' → logprob: -7.377616882324219
    4. '           ' → logprob: -10.002616882324219
    5. '	continue' → logprob: -12.002616882324219
    6. '                   ' → logprob: -12.877616882324219
    7. '   ' → logprob: -13.252616882324219
    8. '
' → logprob: -13.627616882324219
    9. ',' → logprob: -13.877616882324219
    10. '       ' → logprob: -13.877616882324219

Token 511: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5771766304969788
    2. 'continue' (adapté à ' continue') → logprob: -1.077176570892334
    3. '               ' → logprob: -2.327176570892334
    4. '                   ' → logprob: -8.952177047729492
    5. '	continue' → logprob: -9.077177047729492
    6. '           ' → logprob: -9.327177047729492
    7. '
' → logprob: -10.327177047729492
    8. '   ' → logprob: -11.327177047729492
    9. '_continue' → logprob: -12.452177047729492
    10. 'contin' → logprob: -13.452177047729492

Token 512: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12740710377693176
    2. '
' → logprob: -2.1274070739746094
    3. '            
' → logprob: -8.37740707397461
    4. '               ' → logprob: -9.87740707397461
    5. '   ' → logprob: -10.75240707397461
    6. 'e' → logprob: -10.87740707397461
    7. '    
' → logprob: -10.87740707397461
    8. ' 
' → logprob: -11.00240707397461
    9. '  
' → logprob: -11.00240707397461
    10. '       ' → logprob: -11.00240707397461

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006326909177005291
    2. '
' → logprob: -5.256326675415039
    3. 'e' → logprob: -7.506326675415039
    4. '   ' → logprob: -9.006326675415039
    5. '            
' → logprob: -9.256326675415039
    6. ' e' → logprob: -9.506326675415039
    7. '       ' → logprob: -10.006326675415039
    8. 'edge' → logprob: -10.256326675415039
    9. '               ' → logprob: -10.381326675415039
    10. '```' → logprob: -10.881326675415039

Token 514: ' edge' (ID: 11165)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8127051591873169
    2. 'u' → logprob: -0.8127051591873169
    3. 'p' → logprob: -3.3127050399780273
    4. '           ' → logprob: -3.3127050399780273
    5. 'edge' (adapté à ' edge') → logprob: -3.8127050399780273
    6. ' e' → logprob: -4.812705039978027
    7. ' u' → logprob: -5.187705039978027
    8. 'parent' → logprob: -6.562705039978027
    9. ' p' → logprob: -6.812705039978027
    10. ' edge' → logprob: -7.187705039978027

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061974067240953445
    2. '=' → logprob: -2.811974048614502
    3. '   ' → logprob: -12.56197452545166
    4. 'obj' → logprob: -14.68697452545166
    5. '       ' → logprob: -14.93697452545166
    6. '=edge' → logprob: -15.06197452545166
    7. '=self' → logprob: -15.06197452545166
    8. '           ' → logprob: -15.18697452545166
    9. '_id' → logprob: -15.31197452545166
    10. '    ' → logprob: -15.43697452545166

Token 516: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003208372974768281
    2. ' self' → logprob: -5.753208160400391
    3. '           ' → logprob: -10.62820816040039
    4. '	self' → logprob: -12.87820816040039
    5. '   ' → logprob: -13.50320816040039
    6. '       ' → logprob: -13.87820816040039
    7. '(self' → logprob: -14.25320816040039
    8. '=self' → logprob: -15.12820816040039
    9. '               ' → logprob: -15.50320816040039
    10. '[self' → logprob: -15.87820816040039

Token 517: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0005000127712264657
    2. 'graph' → logprob: -8.125499725341797
    3. '.' → logprob: -8.625499725341797
    4. 'self' → logprob: -11.750499725341797
    5. '	graph' → logprob: -12.375499725341797
    6. ' .' → logprob: -12.750499725341797
    7. '   ' → logprob: -13.000499725341797
    8. '.train' → logprob: -13.875499725341797
    9. '.edge' → logprob: -13.875499725341797
    10. '.self' → logprob: -14.000499725341797

Token 518: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0004387750814203173
    2. '.' → logprob: -7.875438690185547
    3. 'edges' → logprob: -10.250438690185547
    4. '.Edge' → logprob: -11.250438690185547
    5. '.edge' → logprob: -12.500438690185547
    6. ' .' → logprob: -13.250438690185547
    7. '(edges' → logprob: -13.750438690185547
    8. '   ' → logprob: -14.125438690185547
    9. '.Ed' → logprob: -14.250438690185547
    10. '       ' → logprob: -14.875438690185547

Token 519: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00021962920436635613
    2. 'eid' → logprob: -8.750219345092773
    3. '[' → logprob: -10.500219345092773
    4. 'e' → logprob: -11.125219345092773
    5. '[
' → logprob: -12.125219345092773
    6. '[parent' → logprob: -13.125219345092773
    7. 'parent' → logprob: -13.250219345092773
    8. '	e' → logprob: -13.375219345092773
    9. '
' → logprob: -13.500219345092773
    10. '(e' → logprob: -13.625219345092773

Token 520: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -7.107425062713446e-06
    2. 'd' → logprob: -12.500006675720215
    3. 'i' → logprob: -13.500006675720215
    4. 'eid' → logprob: -14.250006675720215
    5. '[' → logprob: -15.000006675720215
    6. '[id' → logprob: -15.250006675720215
    7. 'idf' → logprob: -15.875006675720215
    8. '[
' → logprob: -16.75000762939453
    9. '_id' → logprob: -17.00000762939453
    10. '[i' → logprob: -17.12500762939453

Token 521: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17583562433719635
    2. '           ' → logprob: -2.300835609436035
    3. ']
' → logprob: -3.425835609436035
    4. ')' → logprob: -3.925835609436035
    5. ']' → logprob: -5.675835609436035
    6. '               ' → logprob: -6.175835609436035
    7. '       ' → logprob: -6.300835609436035
    8. '
' → logprob: -7.675835609436035
    9. ')
' → logprob: -8.175835609436035
    10. '   ' → logprob: -8.550835609436035

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022698009852319956
    2. '
' → logprob: -6.377269744873047
    3. ' 
' → logprob: -8.877269744873047
    4. '            
' → logprob: -9.627269744873047
    5. 'u' → logprob: -9.752269744873047
    6. '   ' → logprob: -9.877269744873047
    7. ' u' → logprob: -9.877269744873047
    8. '```' → logprob: -9.877269744873047
    9. 'n' → logprob: -10.127269744873047
    10. '       ' → logprob: -10.502269744873047

Token 523: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.06894730776548386
    2. ' u' → logprob: -3.0689473152160645
    3. 'p' → logprob: -5.0689473152160645
    4. 'tree' → logprob: -5.0689473152160645
    5. 'if' → logprob: -6.1939473152160645
    6. 'parent' → logprob: -6.6939473152160645
    7. ' tree' → logprob: -6.6939473152160645
    8. ' if' → logprob: -7.0689473152160645
    9. '   ' → logprob: -7.1939473152160645
    10. ' p' → logprob: -7.6939473152160645

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741699993610382
    2. ' =' → logprob: -0.9741699695587158
    3. ',' → logprob: -9.474169731140137
    4. '=
' → logprob: -11.849169731140137
    5. ' =
' → logprob: -12.599169731140137
    6. '.' → logprob: -13.474169731140137
    7. '           ' → logprob: -13.849169731140137
    8. ' ' → logprob: -14.349169731140137
    9. '   ' → logprob: -14.974169731140137
    10. '=edge' → logprob: -14.974169731140137

Token 525: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.31326910853385925
    2. ' edge' → logprob: -1.3132691383361816
    3. '(edge' → logprob: -12.313268661499023
    4. '           ' → logprob: -13.813268661499023
    5. '=edge' → logprob: -14.813268661499023
    6. 'e' → logprob: -15.063268661499023
    7. '            ' → logprob: -15.063268661499023
    8. '.edge' → logprob: -15.813268661499023
    9. '
' → logprob: -15.938268661499023
    10. '   ' → logprob: -16.063268661499023

Token 526: '.other' (ID: 85859)
  Prédit: '.u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.002578751416876912
    2. '.other' → logprob: -6.0025787353515625
    3. '.' → logprob: -9.252578735351562
    4. 'u' → logprob: -12.252578735351562
    5. '.v' → logprob: -13.377578735351562
    6. ' .' → logprob: -14.502578735351562
    7. '.o' → logprob: -15.627578735351562
    8. 'other' → logprob: -16.252578735351562
    9. '   ' → logprob: -16.752578735351562
    10. '.e' → logprob: -17.502578735351562

Token 527: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0025397518184036016
    2. 'v' → logprob: -6.00253963470459
    3. '(' → logprob: -10.37753963470459
    4. '(
' → logprob: -10.50253963470459
    5. '(e' → logprob: -13.00253963470459
    6. '(self' → logprob: -13.75253963470459
    7. '(edge' → logprob: -13.75253963470459
    8. '(u' → logprob: -14.50253963470459
    9. '(

' → logprob: -15.75253963470459
    10. ' (' → logprob: -15.87753963470459

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0597856268286705
    2. '(v' → logprob: -3.5597856044769287
    3. ')
' → logprob: -3.9347856044769287
    4. 'v' → logprob: -4.809785842895508
    5. ')v' → logprob: -7.184785842895508
    6. '(' → logprob: -7.309785842895508
    7. ' v' → logprob: -8.684785842895508
    8. ' )' → logprob: -8.809785842895508
    9. '(
' → logprob: -10.184785842895508
    10. ' (' → logprob: -10.434785842895508

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032950565218925476
    2. '
' → logprob: -9.125329971313477
    3. '       ' → logprob: -9.250329971313477
    4. 'tree' → logprob: -10.500329971313477
    5. '	       ' → logprob: -10.625329971313477
    6. '   ' → logprob: -10.750329971313477
    7. '            
' → logprob: -10.875329971313477
    8. '		' → logprob: -11.750329971313477
    9. '```' → logprob: -12.250329971313477
    10. '	tree' → logprob: -12.750329971313477

Token 530: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.11543504893779755
    2. '           ' → logprob: -2.3654351234436035
    3. ' tree' → logprob: -4.2404351234436035
    4. '       ' → logprob: -7.8654351234436035
    5. '   ' → logprob: -8.365434646606445
    6. '	tree' → logprob: -9.740434646606445
    7. '
' → logprob: -10.740434646606445
    8. '(tree' → logprob: -12.740434646606445
    9. '```' → logprob: -12.865434646606445
    10. '.tree' → logprob: -13.115434646606445

Token 531: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.625001907348633
    3. '[v' → logprob: -14.250001907348633
    4. 'u' → logprob: -16.375001907348633
    5. '
' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.750001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '[node' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.500001907348633

Token 532: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.204720582696609e-05
    2. ']' → logprob: -10.125052452087402
    3. '.' → logprob: -12.000052452087402
    4. ' ].' → logprob: -12.375052452087402
    5. '.append' → logprob: -14.000052452087402
    6. ').' → logprob: -15.125052452087402
    7. '   ' → logprob: -16.250051498413086
    8. '       ' → logprob: -16.375051498413086
    9. '           ' → logprob: -16.625051498413086
    10. '[' → logprob: -16.750051498413086

Token 533: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.250000953674316
    3. ' append' → logprob: -14.500000953674316
    4. 'appen' → logprob: -18.000001907348633
    5. '_append' → logprob: -19.875001907348633
    6. 'Append' → logprob: -20.500001907348633
    7. 'app' → logprob: -20.750001907348633
    8. '	append' → logprob: -21.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. 'ap' → logprob: -22.500001907348633

Token 534: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00012451570364646614
    2. '(' → logprob: -9.50012493133545
    3. 'v' → logprob: -10.50012493133545
    4. '((' → logprob: -10.75012493133545
    5. '(
' → logprob: -14.37512493133545
    6. ' (' → logprob: -17.500123977661133
    7. '(u' → logprob: -19.250123977661133
    8. ')v' → logprob: -19.500123977661133
    9. '(f' → logprob: -19.750123977661133
    10. ' v' → logprob: -20.000123977661133

Token 535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.625041007995605
    4. '       ' → logprob: -15.125041007995605
    5. '<|end|>' → logprob: -16.375041961669922
    6. ')return' → logprob: -16.875041961669922
    7. ')

' → logprob: -17.250041961669922
    8. '           ' → logprob: -17.500041961669922
    9. '),' → logprob: -18.375041961669922
    10. '`)' → logprob: -18.500041961669922

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0628308430314064
    2. '
' → logprob: -2.812830924987793
    3. 'return' → logprob: -8.562830924987793
    4. '<|end|>' → logprob: -8.562830924987793
    5. '   ' → logprob: -8.812830924987793
    6. '        
' → logprob: -9.187830924987793
    7. ' return' → logprob: -9.687830924987793
    8. '    
' → logprob: -9.937830924987793
    9. '  
' → logprob: -10.437830924987793
    10. '
' → logprob: -10.937830924987793

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25906771421432495
    2. '       ' → logprob: -1.5090677738189697
    3. ' return' → logprob: -5.384067535400391
    4. '   ' → logprob: -6.259067535400391
    5. '
' → logprob: -7.509067535400391
    6. ' ' → logprob: -10.88406753540039
    7. '	return' → logprob: -10.88406753540039
    8. 'def' → logprob: -11.63406753540039
    9. '{return' → logprob: -12.63406753540039
    10. '<|end|>' → logprob: -12.88406753540039

Token 538: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.03804516792297363
    2. ' tree' → logprob: -3.2880451679229736
    3. '	tree' → logprob: -13.288044929504395
    4. '(tree' → logprob: -13.538044929504395
    5. 't' → logprob: -15.288044929504395
    6. 'tre' → logprob: -15.538044929504395
    7. 'Tree' → logprob: -16.28804588317871
    8. 'table' → logprob: -17.03804588317871
    9. 'self' → logprob: -17.03804588317871
    10. ' ' → logprob: -17.28804588317871

Token 539: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03276504576206207
    2. '<|end|>' → logprob: -3.7827651500701904
    3. '   ' → logprob: -5.032764911651611
    4. '    
' → logprob: -6.782764911651611
    5. 'def' → logprob: -6.907764911651611
    6. '

' → logprob: -8.65776538848877
    7. '```' → logprob: -8.78276538848877
    8. '<|end|>' → logprob: -9.03276538848877
    9. ' 
' → logprob: -9.28276538848877
    10. '  
' → logprob: -9.53276538848877

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38327422738075256
    2. 'def' → logprob: -1.3832741975784302
    3. '
' → logprob: -3.6332743167877197
    4. '    
' → logprob: -3.8832743167877197
    5. '```' → logprob: -4.508274078369141
    6. '<|end|>' → logprob: -6.258274078369141
    7. ' def' → logprob: -6.633274078369141
    8. ' 
' → logprob: -6.633274078369141
    9. '10' → logprob: -6.758274078369141
    10. '@' → logprob: -7.633274078369141

Token 541: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004919093102216721
    2. ' def' → logprob: -6.004919052124023
    3. '   ' → logprob: -6.129919052124023
    4. '
' → logprob: -8.379919052124023
    5. '    
' → logprob: -11.004919052124023
    6. '	def' → logprob: -12.004919052124023
    7. ' ' → logprob: -12.504919052124023
    8. ' 
' → logprob: -12.879919052124023
    9. '```' → logprob: -13.754919052124023
    10. '

' → logprob: -14.004919052124023

Token 542: ' dfs' (ID: 51252)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6724485754966736
    2. ' process' → logprob: -1.0474486351013184
    3. ' update' → logprob: -3.9224486351013184
    4. 'update' → logprob: -3.9224486351013184
    5. 'dfs' → logprob: -4.297448635101318
    6. 'run' → logprob: -4.547448635101318
    7. 'raise' → logprob: -4.797448635101318
    8. 'calculate' → logprob: -4.797448635101318
    9. ' dfs' → logprob: -4.922448635101318
    10. ' run' → logprob: -5.047448635101318

Token 543: '_sub' (ID: 11572)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06507928669452667
    2. '(' → logprob: -2.8150792121887207
    3. '_' → logprob: -6.565079212188721
    4. '_(' → logprob: -7.190079212188721
    5. '(node' → logprob: -8.190079689025879
    6. 'self' → logprob: -8.690079689025879
    7. '_tree' → logprob: -8.815079689025879
    8. '_recursive' → logprob: -9.190079689025879
    9. '_self' → logprob: -9.940079689025879
    10. '(tree' → logprob: -10.565079689025879

Token 544: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -2.15310683415737e-05
    2. '(tree' → logprob: -11.500021934509277
    3. 'trees' → logprob: -12.000021934509277
    4. 'tre' → logprob: -13.000021934509277
    5. ' tree' → logprob: -13.875021934509277
    6. '_tree' → logprob: -14.125021934509277
    7. 'tr' → logprob: -14.625021934509277
    8. 'tract' → logprob: -15.500021934509277
    9. 'ree' → logprob: -15.625021934509277
    10. '(node' → logprob: -16.50002098083496

Token 545: '_size' (ID: 5044)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009000496938824654
    2. '(' → logprob: -4.759000301361084
    3. '(node' → logprob: -9.009000778198242
    4. '_size' → logprob: -9.259000778198242
    5. '_(' → logprob: -10.134000778198242
    6. '_depth' → logprob: -10.509000778198242
    7. ' (' → logprob: -11.009000778198242
    8. 'self' → logprob: -11.134000778198242
    9. 'size' → logprob: -11.384000778198242
    10. '_' → logprob: -11.509000778198242

Token 546: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004090035799890757
    2. '(' → logprob: -5.504089832305908
    3. ' (' → logprob: -11.879090309143066
    4. 'self' → logprob: -13.004090309143066
    5. '(
' → logprob: -14.004090309143066
    6. '(s' → logprob: -14.004090309143066
    7. '   ' → logprob: -15.379090309143066
    8. '(sel' → logprob: -15.879090309143066
    9. ' ' → logprob: -16.12908935546875
    10. 'def' → logprob: -16.25408935546875

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05685465410351753
    2. 'self' → logprob: -3.431854724884033
    3. '(self' → logprob: -3.806854724884033
    4. ')(' → logprob: -8.681854248046875
    5. '   ' → logprob: -9.181854248046875
    6. '       ' → logprob: -9.306854248046875
    7. ' ,' → logprob: -9.306854248046875
    8. ' (' → logprob: -9.681854248046875
    9. ')' → logprob: -9.681854248046875
    10. '(' → logprob: -10.306854248046875

Token 548: ' tree' (ID: 8165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12369877845048904
    2. 'node' → logprob: -2.3736987113952637
    3. ' self' → logprob: -4.123698711395264
    4. ' node' → logprob: -5.498698711395264
    5. 'u' → logprob: -5.998698711395264
    6. 'root' → logprob: -8.623699188232422
    7. '   ' → logprob: -8.873699188232422
    8. ' u' → logprob: -9.373699188232422
    9. ')' → logprob: -11.123699188232422
    10. '(self' → logprob: -11.498699188232422

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024156268045771867
    2. 'self' → logprob: -8.62524127960205
    3. ' ,' → logprob: -10.25024127960205
    4. '       ' → logprob: -10.87524127960205
    5. '   ' → logprob: -13.00024127960205
    6. ',self' → logprob: -13.12524127960205
    7. ',
' → logprob: -13.62524127960205
    8. '(self' → logprob: -14.50024127960205
    9. ',node' → logprob: -14.62524127960205
    10. ' self' → logprob: -15.50024127960205

Token 550: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.09611158072948456
    2. 'u' → logprob: -2.596111536026001
    3. ' node' → logprob: -4.09611177444458
    4. ' u' → logprob: -7.84611177444458
    5. 'v' → logprob: -10.846111297607422
    6. '   ' → logprob: -11.096111297607422
    7. 'root' → logprob: -11.846111297607422
    8. '    
' → logprob: -13.721111297607422
    9. '	node' → logprob: -14.096111297607422
    10. '(node' → logprob: -14.346111297607422

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.24310302757658e-05
    2. '):' → logprob: -9.750072479248047
    3. ' ,' → logprob: -12.000072479248047
    4. '):
' → logprob: -12.250072479248047
    5. ':' → logprob: -13.125072479248047
    6. '   ' → logprob: -14.375072479248047
    7. ',node' → logprob: -15.250072479248047
    8. '‌,' → logprob: -15.875072479248047
    9. ',
' → logprob: -16.625072479248047
    10. ')' → logprob: -16.625072479248047

Token 552: ' size' (ID: 2349)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.8364700078964233
    2. 'parent' → logprob: -1.0864700078964233
    3. 'size' → logprob: -2.211470127105713
    4. ' parent' → logprob: -3.211470127105713
    5. ' sizes' → logprob: -3.211470127105713
    6. 'sub' → logprob: -3.336470127105713
    7. ' size' → logprob: -5.961470127105713
    8. ' sz' → logprob: -8.336469650268555
    9. 'sz' → logprob: -8.586469650268555
    10. 'visited' → logprob: -8.586469650268555

Token 553: '_arr' (ID: 25121)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03185127675533295
    2. '):
' → logprob: -3.906851291656494
    3. 's' → logprob: -5.156851291656494
    4. ',' → logprob: -5.281851291656494
    5. '   ' → logprob: -9.406850814819336
    6. '_list' → logprob: -9.531850814819336
    7. '_map' → logprob: -9.656850814819336
    8. ')' → logprob: -9.906850814819336
    9. ' ):' → logprob: -10.406850814819336
    10. ':' → logprob: -10.656850814819336

Token 554: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5898481607437134
    2. '):
' → logprob: -1.0898481607437134
    3. '):' → logprob: -2.214848041534424
    4. '   ' → logprob: -9.964848518371582
    5. '):
' → logprob: -10.089848518371582
    6. ')' → logprob: -10.464848518371582
    7. ' ,' → logprob: -11.339848518371582
    8. '):

' → logprob: -11.839848518371582
    9. ':' → logprob: -12.089848518371582
    10. '       ' → logprob: -12.839848518371582

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011613822542130947
    2. ':' → logprob: -4.636613845825195
    3. ':
' → logprob: -7.261613845825195
    4. ',' → logprob: -7.386613845825195
    5. '   ' → logprob: -7.761613845825195
    6. '):
' → logprob: -10.761613845825195
    7. '```' → logprob: -10.761613845825195
    8. '[' → logprob: -11.386613845825195
    9. '):' → logprob: -12.011613845825195
    10. '        
' → logprob: -12.261613845825195

Token 556: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4806005656719208
    2. 'size' (adapté à ' size') → logprob: -1.2306005954742432
    3. ' size' → logprob: -2.605600595474243
    4. '   ' → logprob: -4.480600357055664
    5. 'stack' → logprob: -5.605600357055664
    6. ' stack' → logprob: -8.105600357055664
    7. ' if' → logprob: -9.105600357055664
    8. 'count' → logprob: -9.230600357055664
    9. 'if' → logprob: -9.855600357055664
    10. ' for' → logprob: -11.480600357055664

Token 557: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.24763375520706177
    2. '[node' → logprob: -1.872633695602417
    3. '[' → logprob: -3.622633695602417
    4. '=' → logprob: -3.997633695602417
    5. 'arr' → logprob: -5.247633934020996
    6. '_' → logprob: -5.247633934020996
    7. ' =' → logprob: -5.747633934020996
    8. ',' → logprob: -6.372633934020996
    9. 'Arr' → logprob: -6.622633934020996
    10. '   ' → logprob: -6.747633934020996

Token 558: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.250096321105957
    3. '=node' → logprob: -16.250097274780273
    4. '(node' → logprob: -17.250097274780273
    5. '[
' → logprob: -17.375097274780273
    6. ' [' → logprob: -17.500097274780273
    7. ',node' → logprob: -17.500097274780273
    8. '[n' → logprob: -18.000097274780273
    9. '\[' → logprob: -18.000097274780273
    10. '```' → logprob: -18.500097274780273

Token 559: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3469942510128021
    2. '=' → logprob: -1.5969942808151245
    3. ']' → logprob: -2.596994161605835
    4. ' =' → logprob: -4.471994400024414
    5. ')=' → logprob: -6.096994400024414
    6. ']+=' → logprob: -7.221994400024414
    7. ']=' → logprob: -7.346994400024414
    8. '+=' → logprob: -7.596994400024414
    9. ' +=' → logprob: -8.221994400024414
    10. ' )' → logprob: -8.346994400024414

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27849167585372925
    2. ' =' → logprob: -1.528491735458374
    3. ' +=' → logprob: -4.028491497039795
    4. '+=' → logprob: -4.778491497039795
    5. ' ' → logprob: -14.028491973876953
    6. '=len' → logprob: -14.153491973876953
    7. '   ' → logprob: -14.653491973876953
    8. '.=' → logprob: -15.653491973876953
    9. '=int' → logprob: -15.778491973876953
    10. ']+=' → logprob: -16.028491973876953

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.250015258789062
    3. '0' → logprob: -13.750015258789062
    4. '   ' → logprob: -14.125015258789062
    5. '```' → logprob: -18.125015258789062
    6. ' ' → logprob: -18.187515258789062
    7. 'len' → logprob: -18.625015258789062
    8. '       ' → logprob: -18.625015258789062
    9. '
' → logprob: -19.250015258789062
    10. '۱' → logprob: -19.312515258789062

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -11.875006675720215
    3. ' ' → logprob: -15.875006675720215
    4. '   ' → logprob: -18.25000762939453
    5. 'len' → logprob: -20.25000762939453
    6. '
' → logprob: -20.50000762939453
    7. '```' → logprob: -20.75000762939453
    8. '[' → logprob: -21.31250762939453
    9. '۱' → logprob: -21.43750762939453
    10. 'sum' → logprob: -21.81250762939453

Token 563: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6397526860237122
    2. '       ' → logprob: -0.7647526860237122
    3. ' for' → logprob: -5.5147528648376465
    4. '   ' → logprob: -6.7647528648376465
    5. 'for' → logprob: -7.2647528648376465
    6. '        
' → logprob: -7.7647528648376465
    7. '    
' → logprob: -8.764752388000488
    8. ' 
' → logprob: -8.764752388000488
    9. '	for' → logprob: -9.014752388000488
    10. '
' → logprob: -9.389752388000488

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05668468400835991
    2. '
' → logprob: -2.931684732437134
    3. '   ' → logprob: -7.181684494018555
    4. ' for' → logprob: -7.681684494018555
    5. '        
' → logprob: -9.056684494018555
    6. '	' → logprob: -9.181684494018555
    7. 'for' → logprob: -9.306684494018555
    8. ' 
' → logprob: -9.681684494018555
    9. '<|end|>' → logprob: -10.306684494018555
    10. '\n' → logprob: -10.681684494018555

Token 565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2200749754119897e-06
    2. ' for' → logprob: -13.250001907348633
    3. '       ' → logprob: -15.000001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '	for' → logprob: -17.250001907348633
    6. '
' → logprob: -21.500001907348633
    7. '           ' → logprob: -22.250001907348633
    8. '        
' → logprob: -23.875001907348633
    9. '```' → logprob: -24.500001907348633
    10. '    
' → logprob: -24.875001907348633

Token 566: ' nxt' (ID: 160200)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.3132958710193634
    2. ' child' → logprob: -1.313295841217041
    3. 'ch' → logprob: -11.5632963180542
    4. 'neighbor' → logprob: -11.8132963180542
    5. ' nei' → logprob: -12.3132963180542
    6. 'c' → logprob: -12.6882963180542
    7. '	child' → logprob: -12.9382963180542
    8. ' ch' → logprob: -13.3132963180542
    9. 'v' → logprob: -13.4382963180542
    10. ' nxt' → logprob: -13.5632963180542

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16040000319480896
    2. 'in' → logprob: -1.9104000329971313
    3. '	in' → logprob: -9.035400390625
    4. ' ' → logprob: -10.410400390625
    5. 'n' → logprob: -11.035400390625
    6. ',' → logprob: -12.160400390625
    7. '
' → logprob: -14.285400390625
    8. 'i' → logprob: -14.660400390625
    9. ' 
' → logprob: -14.785400390625
    10. 'import' → logprob: -14.785400390625

Token 568: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.10023427754640579
    2. ' tree' → logprob: -2.350234270095825
    3. '(tree' → logprob: -11.225234031677246
    4. '	tree' → logprob: -11.225234031677246
    5. '   ' → logprob: -15.350234031677246
    6. ' ' → logprob: -15.600234031677246
    7. '.tree' → logprob: -15.975234031677246
    8. 'table' → logprob: -16.100234985351562
    9. '
' → logprob: -16.600234985351562
    10. 't' → logprob: -16.600234985351562

Token 569: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '(node' → logprob: -16.75
    4. '   ' → logprob: -16.75
    5. '       ' → logprob: -17.5
    6. 'node' → logprob: -17.75
    7. ':' → logprob: -17.75
    8. '[
' → logprob: -18.25
    9. ',node' → logprob: -18.375
    10. '=node' → logprob: -19.75

Token 570: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.030094902962446213
    2. ']:
' → logprob: -3.530094861984253
    3. ':' → logprob: -8.530095100402832
    4. ']' → logprob: -9.030095100402832
    5. ']:
' → logprob: -10.905095100402832
    6. ']>' → logprob: -13.030095100402832
    7. ']:

' → logprob: -13.155095100402832
    8. '       ' → logprob: -13.405095100402832
    9. ':
' → logprob: -13.905095100402832
    10. '   ' → logprob: -14.530095100402832

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.000763510703109e-05
    2. '               ' → logprob: -11.000040054321289
    3. ':
' → logprob: -12.250040054321289
    4. ':' → logprob: -12.625040054321289
    5. ' self' → logprob: -12.625040054321289
    6. '	       ' → logprob: -12.875040054321289
    7. 'self' → logprob: -13.000040054321289
    8. '   ' → logprob: -13.125040054321289
    9. '            
' → logprob: -13.625040054321289
    10. '       ' → logprob: -14.500040054321289

Token 572: ' self' (ID: 1051)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.27836039662361145
    2. 'self' (adapté à ' self') → logprob: -1.528360366821289
    3. ' size' → logprob: -4.278360366821289
    4. '           ' → logprob: -4.778360366821289
    5. ' self' → logprob: -5.778360366821289
    6. '   ' → logprob: -7.528360366821289
    7. '               ' → logprob: -9.278360366821289
    8. '       ' → logprob: -9.653360366821289
    9. ' ' → logprob: -12.653360366821289
    10. '                   ' → logprob: -12.778360366821289

Token 573: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.001031619030982256
    2. 'dfs' → logprob: -7.251031398773193
    3. '.' → logprob: -8.126031875610352
    4. ' .' → logprob: -11.251031875610352
    5. '.
' → logprob: -12.501031875610352
    6. ').' → logprob: -13.376031875610352
    7. '
' → logprob: -13.501031875610352
    8. '.df' → logprob: -13.751031875610352
    9. 'd' → logprob: -14.001031875610352
    10. ' dfs' → logprob: -14.376031875610352

Token 574: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -3.128163257315464e-07
    2. 'f' → logprob: -15.25
    3. 'dfs' → logprob: -17.125
    4. ' fs' → logprob: -18.75
    5. '_fs' → logprob: -19.0
    6. '
' → logprob: -20.25
    7. 'efs' → logprob: -21.125
    8. 'FS' → logprob: -21.375
    9. 'fsi' → logprob: -21.375
    10. '(fs' → logprob: -21.875

Token 575: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00027218335890211165
    2. '_' → logprob: -8.375271797180176
    3. 'sub' → logprob: -10.375271797180176
    4. '(tree' → logprob: -11.875271797180176
    5. '_
' → logprob: -14.125271797180176
    6. '_tree' → logprob: -14.875271797180176
    7. 'dfs' → logprob: -15.125271797180176
    8. 'tree' → logprob: -15.250271797180176
    9. '(sub' → logprob: -15.375271797180176
    10. '_s' → logprob: -15.375271797180176

Token 576: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -4.11996734328568e-05
    2. '_sub' → logprob: -10.375041007995605
    3. 'sub' → logprob: -12.125041007995605
    4. 'tre' → logprob: -13.000041007995605
    5. '_tree' → logprob: -13.875041007995605
    6. 't' → logprob: -14.875041007995605
    7. 'tr' → logprob: -15.375041007995605
    8. 'ub' → logprob: -15.500041007995605
    9. ' subtree' → logprob: -15.625041007995605
    10. 'node' → logprob: -16.125041961669922

Token 577: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.688212614681106e-05
    2. 'size' → logprob: -11.625017166137695
    3. '_sub' → logprob: -12.500017166137695
    4. '_' → logprob: -12.750017166137695
    5. 'sub' → logprob: -15.250017166137695
    6. 's' → logprob: -16.000017166137695
    7. 'n' → logprob: -16.125017166137695
    8. '_s' → logprob: -16.125017166137695
    9. '_
' → logprob: -16.125017166137695
    10. 'e' → logprob: -16.625017166137695

Token 578: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0005537479883059859
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.125554084777832
    4. '(Tree' → logprob: -16.750553131103516
    5. '(t' → logprob: -17.000553131103516
    6. ' (' → logprob: -17.125553131103516
    7. '(tr' → logprob: -17.875553131103516
    8. '(table' → logprob: -18.125553131103516
    9. '(

' → logprob: -19.500553131103516
    10. '(thread' → logprob: -19.875553131103516

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019645029678940773
    2. '(tree' → logprob: -4.0196452140808105
    3. '(' → logprob: -6.7696452140808105
    4. '(n' → logprob: -8.769644737243652
    5. ',n' → logprob: -8.894644737243652
    6. ',
' → logprob: -10.644644737243652
    7. ' ,' → logprob: -11.019644737243652
    8. ',t' → logprob: -12.644644737243652
    9. '(
' → logprob: -12.644644737243652
    10. ',(' → logprob: -13.394644737243652

Token 580: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001238004770129919
    2. ' nxt' → logprob: -9.000123977661133
    3. '(n' → logprob: -15.625123977661133
    4. '	n' → logprob: -16.500123977661133
    5. '
' → logprob: -16.750123977661133
    6. ' n' → logprob: -17.250123977661133
    7. '[n' → logprob: -17.500123977661133
    8. 'nx' → logprob: -17.625123977661133
    9. '   ' → logprob: -18.000123977661133
    10. '```' → logprob: -18.125123977661133

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001126026691053994
    2. ',size' → logprob: -9.125112533569336
    3. ',
' → logprob: -13.000112533569336
    4. ' ,' → logprob: -13.875112533569336
    5. 'size' → logprob: -14.750112533569336
    6. '           ' → logprob: -17.750112533569336
    7. '),' → logprob: -17.875112533569336
    8. ')' → logprob: -18.125112533569336
    9. '   ' → logprob: -18.750112533569336
    10. '
' → logprob: -18.875112533569336

Token 582: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0009114635176956654
    2. ' size' → logprob: -7.000911235809326
    3. '	size' → logprob: -20.125911712646484
    4. '(size' → logprob: -20.875911712646484
    5. '   ' → logprob: -21.125911712646484
    6. '
' → logprob: -21.375911712646484
    7. '[size' → logprob: -21.500911712646484
    8. ' ' → logprob: -21.875911712646484
    9. 'sizes' → logprob: -22.875911712646484
    10. '.size' → logprob: -23.375911712646484

Token 583: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.1472419600977446e-06
    2. 'arr' → logprob: -13.875000953674316
    3. '_size' → logprob: -17.000001907348633
    4. '_array' → logprob: -17.250001907348633
    5. '	arr' → logprob: -17.625001907348633
    6. '_' → logprob: -18.375001907348633
    7. 'Arr' → logprob: -18.375001907348633
    8. '[arr' → logprob: -19.375001907348633
    9. '(arr' → logprob: -19.750001907348633
    10. '_
' → logprob: -20.250001907348633

Token 584: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006734318565577269
    2. ')' → logprob: -5.006734371185303
    3. '           ' → logprob: -11.006733894348145
    4. ')
' → logprob: -13.756733894348145
    5. ' )
' → logprob: -14.131733894348145
    6. '       ' → logprob: -15.506733894348145
    7. ')

' → logprob: -15.631733894348145
    8. '               ' → logprob: -16.13173484802246
    9. '                   ' → logprob: -17.38173484802246
    10. '   ' → logprob: -17.38173484802246

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003421375877223909
    2. '       ' → logprob: -8.37534236907959
    3. '   ' → logprob: -9.37534236907959
    4. 'size' → logprob: -11.12534236907959
    5. ' size' → logprob: -11.87534236907959
    6. '```' → logprob: -12.75034236907959
    7. '               ' → logprob: -14.00034236907959
    8. '
' → logprob: -14.50034236907959
    9. '                   ' → logprob: -15.75034236907959
    10. '	       ' → logprob: -16.000341415405273

Token 586: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.0015130772953853011
    2. ' size' → logprob: -6.5015130043029785
    3. '           ' → logprob: -11.501513481140137
    4. '       ' → logprob: -14.751513481140137
    5. '   ' → logprob: -15.751513481140137
    6. '
' → logprob: -18.12651252746582
    7. '	size' → logprob: -18.37651252746582
    8. ' ' → logprob: -19.25151252746582
    9. '_size' → logprob: -19.75151252746582
    10. '               ' → logprob: -20.62651252746582

Token 587: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -7.226628895296017e-06
    2. '[node' → logprob: -12.500007629394531
    3. 'arr' → logprob: -13.500007629394531
    4. 'Arr' → logprob: -13.500007629394531
    5. '[arr' → logprob: -14.500007629394531
    6. '_' → logprob: -17.00000762939453
    7. '	arr' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.87500762939453
    9. '[' → logprob: -17.87500762939453
    10. '_ar' → logprob: -18.00000762939453

Token 588: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. '[n' → logprob: -17.375
    4. '[
' → logprob: -18.0
    5. ' [' → logprob: -18.875
    6. '```' → logprob: -19.0
    7. '=node' → logprob: -19.75
    8. 'node' → logprob: -19.875
    9. '[token' → logprob: -19.875
    10. '
' → logprob: -20.125

Token 589: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1379893273115158
    2. ' +=' → logprob: -2.1379892826080322
    3. ']+=' → logprob: -4.512989521026611
    4. ']' → logprob: -11.512989044189453
    5. ')+' → logprob: -11.762989044189453
    6. ')' → logprob: -11.762989044189453
    7. '    ' → logprob: -12.762989044189453
    8. '   ' → logprob: -13.762989044189453
    9. '+' → logprob: -13.762989044189453
    10. '	' → logprob: -14.012989044189453

Token 590: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0789230540394783
    2. ' +=' → logprob: -2.578922986984253
    3. ']+=' → logprob: -10.578923225402832
    4. '+' → logprob: -13.078923225402832
    5. '    ' → logprob: -13.078923225402832
    6. '	' → logprob: -13.578923225402832
    7. '+=(' → logprob: -13.828923225402832
    8. '   ' → logprob: -14.953923225402832
    9. '[' → logprob: -15.078923225402832
    10. '
' → logprob: -15.953923225402832

Token 591: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07889033854007721
    2. ' size' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.203890800476074
    4. ' ' → logprob: -16.453889846801758
    5. '	size' → logprob: -16.453889846801758
    6. '(size' → logprob: -17.328889846801758
    7. '    ' → logprob: -17.453889846801758
    8. '
' → logprob: -17.703889846801758
    9. '           ' → logprob: -17.953889846801758
    10. 'siz' → logprob: -18.328889846801758

Token 592: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0029736608266830444
    2. '[n' → logprob: -6.252973556518555
    3. 'arr' → logprob: -7.752973556518555
    4. 'n' → logprob: -8.002973556518555
    5. 'Arr' → logprob: -9.377973556518555
    6. '_n' → logprob: -9.502973556518555
    7. '[_' → logprob: -10.252973556518555
    8. '_[' → logprob: -10.377973556518555
    9. '```' → logprob: -11.627973556518555
    10. '[node' → logprob: -11.877973556518555

Token 593: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00026991849881596863
    2. 'n' → logprob: -8.250269889831543
    3. '[' → logprob: -12.375269889831543
    4. '[
' → logprob: -12.750269889831543
    5. '(n' → logprob: -13.875269889831543
    6. '	n' → logprob: -15.625269889831543
    7. '```' → logprob: -16.37527084350586
    8. ' n' → logprob: -16.62527084350586
    9. '<n' → logprob: -16.62527084350586
    10. '[node' → logprob: -16.75027084350586

Token 594: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.1756367712223437e-05
    2. 'x' → logprob: -12.125011444091797
    3. '[' → logprob: -12.625011444091797
    4. ']' → logprob: -13.125011444091797
    5. '```' → logprob: -14.875011444091797
    6. '[x' → logprob: -15.875011444091797
    7. '][' → logprob: -16.250011444091797
    8. '   ' → logprob: -16.375011444091797
    9. '[]' → logprob: -16.500011444091797
    10. '``' → logprob: -17.000011444091797

Token 595: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11583570390939713
    2. '<|end|>' → logprob: -2.615835666656494
    3. ']' → logprob: -3.365835666656494
    4. '
' → logprob: -7.365835666656494
    5. '<|end|>' → logprob: -7.615835666656494
    6. '}' → logprob: -7.990835666656494
    7. ')
' → logprob: -8.990836143493652
    8. '```' → logprob: -10.240836143493652
    9. '       ' → logprob: -10.490836143493652
    10. ')return' → logprob: -11.115836143493652

Token 596: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2035454958677292
    2. '
' → logprob: -2.203545570373535
    3. '   ' → logprob: -3.078545570373535
    4. ' def' → logprob: -3.828545570373535
    5. '```' → logprob: -6.203545570373535
    6. '    
' → logprob: -6.453545570373535
    7. '<|end|>' → logprob: -6.703545570373535
    8. '

' → logprob: -7.578545570373535
    9. ' 
' → logprob: -8.703545570373535
    10. '	def' → logprob: -9.328545570373535

Token 598: ' solve' (ID: 17722)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.45877787470817566
    2. 'dfs' → logprob: -2.458777904510498
    3. ' process' → logprob: -2.708777904510498
    4. 'update' → logprob: -2.833777904510498
    5. 'raise' → logprob: -3.208777904510498
    6. 'apply' → logprob: -3.458777904510498
    7. 'calculate' → logprob: -3.583777904510498
    8. ' update' → logprob: -4.833777904510498
    9. 'get' → logprob: -5.333777904510498
    10. ' dfs' → logprob: -5.583777904510498

Token 599: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30058974027633667
    2. '(' → logprob: -1.5505897998809814
    3. '_' → logprob: -3.3005897998809814
    4. '_(' → logprob: -4.675589561462402
    5. '__(' → logprob: -8.300589561462402
    6. '_query' → logprob: -8.675589561462402
    7. ' (' → logprob: -8.800589561462402
    8. '(
' → logprob: -8.925589561462402
    9. 'self' → logprob: -9.175589561462402
    10. '_raise' → logprob: -9.800589561462402

Token 600: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19370706379413605
    2. '_' → logprob: -1.9437071084976196
    3. '):' → logprob: -4.44370698928833
    4. 'self' → logprob: -4.81870698928833
    5. '_,' → logprob: -5.19370698928833
    6. ')' → logprob: -5.69370698928833
    7. ')_' → logprob: -6.06870698928833
    8. '_self' → logprob: -7.44370698928833
    9. '(self' → logprob: -8.818707466125488
    10. ',_' → logprob: -8.943707466125488

Token 601: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014753682538866997
    2. '
' → logprob: -4.639753818511963
    3. '```' → logprob: -6.014753818511963
    4. '#' → logprob: -7.514753818511963
    5. '   ' → logprob: -7.639753818511963
    6. ':' → logprob: -7.764753818511963
    7. '(self' → logprob: -8.389753341674805
    8. 'self' → logprob: -8.514753341674805
    9. 'import' → logprob: -9.264753341674805
    10. 'from' → logprob: -9.514753341674805

Token 602: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0367463827133179
    2. ' dist' → logprob: -1.5367463827133179
    3. 'dist' → logprob: -2.2867465019226074
    4. ' res' → logprob: -2.9117465019226074
    5. ' result' → logprob: -2.9117465019226074
    6. ' initial' → logprob: -3.2867465019226074
    7. ' import' → logprob: -3.6617465019226074
    8. 'd' → logprob: -3.7867465019226074
    9. 'import' → logprob: -3.7867465019226074
    10. 'result' → logprob: -3.7867465019226074

Token 603: ' Step' (ID: 22291)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7268655896186829
    2. 'res' → logprob: -1.351865530014038
    3. 'initial' → logprob: -2.601865530014038
    4. 'result' → logprob: -2.726865530014038
    5. 'dist' → logprob: -2.726865530014038
    6. 'import' → logprob: -3.726865530014038
    7. '#' → logprob: -4.476865768432617
    8. 'from' → logprob: -5.226865768432617
    9. '       ' → logprob: -6.101865768432617
    10. 'dr' → logprob: -6.226865768432617

Token 604: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11143343150615692
    2. ' =' → logprob: -2.986433506011963
    3. ':' → logprob: -3.736433506011963
    4. '=' → logprob: -3.986433506011963
    5. '1' → logprob: -4.986433506011963
    6. ' by' → logprob: -6.611433506011963
    7. '   ' → logprob: -6.736433506011963
    8. '        ' → logprob: -7.111433506011963
    9. '0' → logprob: -7.486433506011963
    10. ' ' → logprob: -7.736433506011963

Token 605: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.532442033290863
    2. '1' → logprob: -1.1574420928955078
    3. '=' → logprob: -3.407442092895508
    4. '       ' → logprob: -3.907442092895508
    5. '   ' → logprob: -4.782442092895508
    6. '#' → logprob: -4.782442092895508
    7. ' ' → logprob: -5.032442092895508
    8. 'result' → logprob: -5.032442092895508
    9. ':' → logprob: -5.282442092895508
    10. ' =' → logprob: -6.157442092895508

Token 606: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5068731904029846
    2. ' d' → logprob: -2.13187313079834
    3. ' result' → logprob: -2.38187313079834
    4. ':' → logprob: -3.00687313079834
    5. 'result' → logprob: -3.25687313079834
    6. 'd' → logprob: -3.38187313079834
    7. ' initial' → logprob: -3.38187313079834
    8. ' dist' → logprob: -5.00687313079834
    9. ' res' → logprob: -5.50687313079834
    10. 'res' → logprob: -5.63187313079834

Token 607: ' compute' (ID: 23864)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.199987769126892
    2. 'dist' → logprob: -1.324987769126892
    3. 'res' → logprob: -1.574987769126892
    4. 'result' → logprob: -2.1999878883361816
    5. 'initial' → logprob: -2.3249878883361816
    6. 'dr' → logprob: -5.199987888336182
    7. ' res' → logprob: -5.824987888336182
    8. ' dist' → logprob: -5.824987888336182
    9. 'init' → logprob: -6.074987888336182
    10. ' initial' → logprob: -6.949987888336182

Token 608: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.6122631430625916
    2. 'initial' → logprob: -0.8622631430625916
    3. 'dist' → logprob: -4.862263202667236
    4. 'res' → logprob: -5.112263202667236
    5. ' dist' → logprob: -5.237263202667236
    6. ' res' → logprob: -5.362263202667236
    7. 'd' → logprob: -5.362263202667236
    8. ' d' → logprob: -5.987263202667236
    9. 'result' → logprob: -6.112263202667236
    10. ' result' → logprob: -6.737263202667236

Token 609: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.27341076731681824
    2. '_dist' → logprob: -2.0234107971191406
    3. ' distances' → logprob: -2.6484107971191406
    4. ' dist' → logprob: -3.7734107971191406
    5. '_d' → logprob: -5.023410797119141
    6. 'd' → logprob: -5.648410797119141
    7. '_result' → logprob: -6.273410797119141
    8. ' d' → logprob: -7.523410797119141
    9. '_distance' → logprob: -8.89841079711914
    10. ' result' → logprob: -9.02341079711914

Token 610: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.4883964955806732
    2. '_paths' → logprob: -1.4883965253829956
    3. ' path' → logprob: -2.988396406173706
    4. 'path' → logprob: -3.363396406173706
    5. '_dist' → logprob: -3.613396406173706
    6. ' paths' → logprob: -3.738396406173706
    7. 'paths' → logprob: -4.613396644592285
    8. '_' → logprob: -4.988396644592285
    9. ' distances' → logprob: -5.363396644592285
    10. 'dist' → logprob: -6.238396644592285

Token 611: ' tree' (ID: 8165)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.496915727853775
    2. 'dist' → logprob: -1.2469156980514526
    3. '       ' → logprob: -3.496915817260742
    4. '   ' → logprob: -3.996915817260742
    5. '_dist' → logprob: -4.371915817260742
    6. 's' → logprob: -4.496915817260742
    7. 'result' → logprob: -4.621915817260742
    8. ' dist' → logprob: -4.746915817260742
    9. ' result' → logprob: -5.121915817260742
    10. ' =' → logprob: -5.621915817260742

Token 612: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07828302681446075
    2. '
' → logprob: -3.2032830715179443
    3. 'result' → logprob: -3.7032830715179443
    4. 'd' → logprob: -5.078282833099365
    5. ' result' → logprob: -6.453282833099365
    6. ',' → logprob: -6.953282833099365
    7. 'res' → logprob: -8.203283309936523
    8. '        
' → logprob: -8.453283309936523
    9. ' d' → logprob: -8.828283309936523
    10. '   ' → logprob: -9.328283309936523

Token 613: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.31903305649757385
    2. '1' → logprob: -2.069033145904541
    3. 'source' → logprob: -2.069033145904541
    4. ' node' → logprob: -4.069033145904541
    5. 'station' → logprob: -6.819033145904541
    6. ' source' → logprob: -7.069033145904541
    7. 'vertex' → logprob: -7.444033145904541
    8. 'start' → logprob: -8.319032669067383
    9. 'the' → logprob: -8.819032669067383
    10. 's' → logprob: -8.944032669067383

Token 614: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40550532937049866
    2. ' ' → logprob: -1.1555052995681763
    3. '       ' → logprob: -4.405505180358887
    4. '=' → logprob: -5.905505180358887
    5. ' =' → logprob: -6.780505180358887
    6. '   ' → logprob: -7.030505180358887
    7. '(' → logprob: -7.280505180358887
    8. '
' → logprob: -8.030505180358887
    9. ' (' → logprob: -8.530505180358887
    10. '        ' → logprob: -9.655505180358887

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030316898482851684
    2. ' ' → logprob: -8.250303268432617
    3. '```' → logprob: -10.750303268432617
    4. '
' → logprob: -11.875303268432617
    5. '=' → logprob: -12.500303268432617
    6. 's' → logprob: -12.625303268432617
    7. '`' → logprob: -12.625303268432617
    8. ',' → logprob: -13.750303268432617
    9. '(' → logprob: -14.500303268432617
    10. ':' → logprob: -14.500303268432617

Token 616: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2363496571779251
    2. '
' → logprob: -1.7363497018814087
    3. 'result' → logprob: -4.111349582672119
    4. ',' → logprob: -4.736349582672119
    5. '        
' → logprob: -5.986349582672119
    6. ' result' → logprob: -6.611349582672119
    7. 'd' → logprob: -6.611349582672119
    8. ':' → logprob: -6.861349582672119
    9. '```' → logprob: -7.861349582672119
    10. '
' → logprob: -8.486350059509277

Token 617: ' weight' (ID: 6049)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.25350281596183777
    2. 'initial' → logprob: -2.62850284576416
    3. 'weight' → logprob: -2.87850284576416
    4. 'equal' → logprob: -3.37850284576416
    5. 'uniform' → logprob: -3.62850284576416
    6. 'unit' → logprob: -3.87850284576416
    7. 'edges' → logprob: -5.25350284576416
    8. 'weights' → logprob: -5.50350284576416
    9. 'edge' → logprob: -5.75350284576416
    10. 'default' → logprob: -7.87850284576416

Token 618: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6363991498947144
    2. ' =' → logprob: -0.7613991498947144
    3. '1' → logprob: -6.011399269104004
    4. ' ' → logprob: -7.011399269104004
    5. 's' → logprob: -8.136399269104004
    6. '```' → logprob: -9.386399269104004
    7. '   ' → logprob: -10.261399269104004
    8. '`' → logprob: -12.511399269104004
    9. ' equal' → logprob: -12.636399269104004
    10. '
' → logprob: -12.636399269104004

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16026149690151215
    2. ' ' → logprob: -1.9102615118026733
    3. '```' → logprob: -11.035261154174805
    4. ' =' → logprob: -13.285261154174805
    5. '`' → logprob: -13.347761154174805
    6. '_' → logprob: -13.472761154174805
    7. '   ' → logprob: -13.535261154174805
    8. '=' → logprob: -13.597761154174805
    9. '0' → logprob: -13.722761154174805
    10. '    ' → logprob: -13.785261154174805

Token 620: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09314154088497162
    2. '
' → logprob: -2.468141555786133
    3. ',' → logprob: -6.593141555786133
    4. '        
' → logprob: -6.718141555786133
    5. 'result' → logprob: -7.718141555786133
    6. 'dist' → logprob: -8.093141555786133
    7. '```' → logprob: -8.968141555786133
    8. ':' → logprob: -9.093141555786133
    9. ' result' → logprob: -9.593141555786133
    10. ' and' → logprob: -9.718141555786133

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005064633209258318
    2. '
' → logprob: -5.630064487457275
    3. ',' → logprob: -7.255064487457275
    4. '        
' → logprob: -7.630064487457275
    5. '```' → logprob: -9.755064964294434
    6. 'result' → logprob: -9.880064964294434
    7. 'dist' → logprob: -10.880064964294434
    8. '   ' → logprob: -11.005064964294434
    9. 'd' → logprob: -11.005064964294434
    10. '<|end|>' → logprob: -11.380064964294434

Token 622: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.2846282124519348
    2. 'res' → logprob: -2.15962815284729
    3. 'result' → logprob: -2.53462815284729
    4. 'dist' → logprob: -3.40962815284729
    5. 'initial' → logprob: -4.534628391265869
    6. '       ' → logprob: -5.284628391265869
    7. 'init' → logprob: -6.159628391265869
    8. 'dr' → logprob: -6.659628391265869
    9. '   ' → logprob: -8.034627914428711
    10. ' res' → logprob: -9.284627914428711

Token 623: 'res' (ID: 430)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.613892674446106
    2. 'ijkstra' → logprob: -1.113892674446106
    3. 'ij' → logprob: -2.8638925552368164
    4. 'ijk' → logprob: -2.9888925552368164
    5. 'i' → logprob: -4.113892555236816
    6. 'is' → logprob: -5.863892555236816
    7. ' =' → logprob: -6.238892555236816
    8. 'ists' → logprob: -6.988892555236816
    9. 'ik' → logprob: -8.488892555236816
    10. 'isti' → logprob: -9.113892555236816

Token 624: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.05503055453300476
    2. ' =' → logprob: -3.055030584335327
    3. '=' → logprob: -5.305030345916748
    4. 'ultat' → logprob: -7.555030345916748
    5. 'u' → logprob: -7.680030345916748
    6. '   ' → logprob: -8.555030822753906
    7. 'ults' → logprob: -8.805030822753906
    8. '.' → logprob: -10.805030822753906
    9. ',' → logprob: -10.930030822753906
    10. ' ' → logprob: -11.305030822753906

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620720356702805
    2. ' self' → logprob: -4.758620738983154
    3. '       ' → logprob: -12.008620262145996
    4. '(self' → logprob: -17.758621215820312
    5. '   ' → logprob: -18.258621215820312
    6. '           ' → logprob: -19.258621215820312
    7. '	self' → logprob: -20.008621215820312
    8. ' ' → logprob: -20.258621215820312
    9. '=self' → logprob: -20.383621215820312
    10. '        ' → logprob: -20.383621215820312

Token 626: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -0.0028419606387615204
    2. '.' → logprob: -5.877841949462891
    3. 'calculate' → logprob: -10.75284194946289
    4. '.compute' → logprob: -11.62784194946289
    5. ' .' → logprob: -12.75284194946289
    6. '.calc' → logprob: -13.62784194946289
    7. '.cal' → logprob: -13.87784194946289
    8. '.
' → logprob: -15.62784194946289
    9. '.evaluate' → logprob: -15.75284194946289
    10. '.c' → logprob: -15.87784194946289

Token 627: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.0006332091288641095
    2. '_' → logprob: -7.375633239746094
    3. '_init' → logprob: -12.875633239746094
    4. '_dist' → logprob: -13.750633239746094
    5. '_
' → logprob: -14.625633239746094
    6. 'initial' → logprob: -14.750633239746094
    7. '_final' → logprob: -15.000633239746094
    8. '_in' → logprob: -15.000633239746094
    9. '_distance' → logprob: -15.250633239746094
    10. '_i' → logprob: -15.500633239746094

Token 628: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.62500286102295
    3. 'dist' → logprob: -14.25000286102295
    4. '_distance' → logprob: -15.62500286102295
    5. '_d' → logprob: -15.75000286102295
    6. ' distances' → logprob: -16.000001907348633
    7. '_
' → logprob: -16.375001907348633
    8. 'Distances' → logprob: -17.250001907348633
    9. '
' → logprob: -17.500001907348633
    10. '_dis' → logprob: -19.000001907348633

Token 629: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -1.9385402993066236e-05
    2. 'ance' → logprob: -11.500019073486328
    3. '[' → logprob: -12.625019073486328
    4. 'anc' → logprob: -13.000019073486328
    5. '   ' → logprob: -13.375019073486328
    6. '_' → logprob: -14.500019073486328
    7. '```' → logprob: -15.000019073486328
    8. ' distances' → logprob: -15.625019073486328
    9. 'ancies' → logprob: -15.750019073486328
    10. 'Distances' → logprob: -16.125019073486328

Token 630: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007653949782252312
    2. '()
' → logprob: -4.882653713226318
    3. '       ' → logprob: -10.132654190063477
    4. '()

' → logprob: -13.132654190063477
    5. '()
' → logprob: -13.257654190063477
    6. ')' → logprob: -14.382654190063477
    7. '(' → logprob: -14.507654190063477
    8. '())' → logprob: -14.507654190063477
    9. '()`' → logprob: -14.507654190063477
    10. '(),' → logprob: -14.882654190063477

Token 631: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2054949551820755
    2. '       ' → logprob: -1.705494999885559
    3. '        
' → logprob: -6.0804948806762695
    4. '```' → logprob: -7.0804948806762695
    5. '<|end|>' → logprob: -8.33049488067627
    6. '
' → logprob: -8.95549488067627
    7. ',' → logprob: -9.08049488067627
    8. '#' → logprob: -9.83049488067627
    9. '  
' → logprob: -9.95549488067627
    10. '[' → logprob: -10.08049488067627

Token 632: ' dist' (ID: 3601)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.04135474935173988
    2. 'parent' → logprob: -3.4163546562194824
    3. 'dist' (adapté à ' dist') → logprob: -5.166354656219482
    4. '       ' → logprob: -6.666354656219482
    5. ' tree' → logprob: -7.791354656219482
    6. ' parent' → logprob: -9.29135513305664
    7. '   ' → logprob: -9.54135513305664
    8. '#' → logprob: -9.91635513305664
    9. 'd' → logprob: -10.54135513305664
    10. ' dist' → logprob: -11.54135513305664

Token 633: '_init' (ID: 13909)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20859353244304657
    2. '=' → logprob: -1.708593487739563
    3. ',' → logprob: -4.958593368530273
    4. '[' → logprob: -9.333593368530273
    5. 's' → logprob: -12.083593368530273
    6. '.' → logprob: -12.083593368530273
    7. '```' → logprob: -12.583593368530273
    8. ')' → logprob: -12.708593368530273
    9. '<|end|>' → logprob: -12.708593368530273
    10. '<|end|>' → logprob: -12.833593368530273

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5876951217651367
    2. ' =' → logprob: -0.9626951217651367
    3. '[' → logprob: -2.8376951217651367
    4. ',' → logprob: -6.087695121765137
    5. '[:]' → logprob: -7.212695121765137
    6. '```' → logprob: -8.337695121765137
    7. '[]' → logprob: -8.587695121765137
    8. '[
' → logprob: -9.462695121765137
    9. ']' → logprob: -9.462695121765137
    10. '<|end|>' → logprob: -9.712695121765137

Token 635: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0036037517711520195
    2. ' d' → logprob: -5.628603935241699
    3. '   ' → logprob: -13.8786039352417
    4. '[' → logprob: -13.8786039352417
    5. ' ' → logprob: -14.5036039352417
    6. 'self' → logprob: -15.0036039352417
    7. 'list' → logprob: -15.3786039352417
    8. '[d' → logprob: -15.3786039352417
    9. '       ' → logprob: -16.253602981567383
    10. ' [' → logprob: -16.253602981567383

Token 636: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.040972188115119934
    2. 'ist' → logprob: -3.2909722328186035
    3. '[' → logprob: -6.1659722328186035
    4. '_init' → logprob: -8.290971755981445
    5. '_res' → logprob: -8.665971755981445
    6. ' =' → logprob: -9.790971755981445
    7. 'es' → logprob: -9.790971755981445
    8. '=res' → logprob: -10.040971755981445
    9. '   ' → logprob: -10.415971755981445
    10. '=' → logprob: -10.540971755981445

Token 637: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.007664716802537441
    2. '.' → logprob: -4.882664680480957
    3. '.d' → logprob: -10.257664680480957
    4. '.dis' → logprob: -12.132664680480957
    5. '.def' → logprob: -12.382664680480957
    6. '.
' → logprob: -12.882664680480957
    7. ' .' → logprob: -13.507664680480957
    8. '.dest' → logprob: -14.007664680480957
    9. '.dim' → logprob: -14.632664680480957
    10. '.token' → logprob: -14.757664680480957

Token 638: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6625099778175354
    2. '       ' → logprob: -0.7875099778175354
    3. ',' → logprob: -4.662509918212891
    4. '        
' → logprob: -5.162509918212891
    5. '<|end|>' → logprob: -5.287509918212891
    6. 'parent' → logprob: -5.662509918212891
    7. ')' → logprob: -6.912509918212891
    8. ',
' → logprob: -6.912509918212891
    9. '```' → logprob: -7.412509918212891
    10. '[' → logprob: -7.537509918212891

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3389531672000885
    2. 'parent' → logprob: -1.8389531373977661
    3. ' parent' → logprob: -2.3389532566070557
    4. '
' → logprob: -3.7139532566070557
    5. '```' → logprob: -5.213953018188477
    6. '        
' → logprob: -7.088953018188477
    7. ',' → logprob: -7.463953018188477
    8. '[parent' → logprob: -8.463953018188477
    9. ',parent' → logprob: -8.713953018188477
    10. '#' → logprob: -9.213953018188477

Token 640: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0014077324885874987
    2. 'tree' → logprob: -6.751407623291016
    3. '#' → logprob: -9.126407623291016
    4. 'dist' → logprob: -10.376407623291016
    5. 'd' → logprob: -10.626407623291016
    6. 'size' → logprob: -11.001407623291016
    7. 'for' → logprob: -11.626407623291016
    8. '```' → logprob: -11.876407623291016
    9. 'q' → logprob: -12.251407623291016
    10. ' parent' → logprob: -12.251407623291016

Token 641: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00016432604752480984
    2. '_edges' → logprob: -9.375164031982422
    3. '_' → logprob: -9.500164031982422
    4. '_ed' → logprob: -14.000164031982422
    5. '_e' → logprob: -14.125164031982422
    6. ' _' → logprob: -14.500164031982422
    7. 'Edge' → logprob: -14.750164031982422
    8. '```' → logprob: -14.875164031982422
    9. '_line' → logprob: -15.125164031982422
    10. '_EDGE' → logprob: -15.375164031982422

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694060802459717
    2. '=' → logprob: -2.1269407272338867
    3. '[' → logprob: -12.751940727233887
    4. '<|end|>' → logprob: -13.251940727233887
    5. ',' → logprob: -13.501940727233887
    6. '=self' → logprob: -13.751940727233887
    7. '=line' → logprob: -14.501940727233887
    8. '=
' → logprob: -14.626940727233887
    9. ' ' → logprob: -14.751940727233887
    10. '[:]' → logprob: -14.876940727233887

Token 643: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026301106438040733
    2. ' d' → logprob: -3.651301145553589
    3. '[' → logprob: -14.526301383972168
    4. ' ' → logprob: -16.15130043029785
    5. '_d' → logprob: -16.90130043029785
    6. '	d' → logprob: -16.90130043029785
    7. ' ' → logprob: -17.65130043029785
    8. '[:]' → logprob: -18.15130043029785
    9. '[]' → logprob: -18.27630043029785
    10. '   ' → logprob: -18.96380043029785

Token 644: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0006167700630612671
    2. 'ist' → logprob: -7.625616550445557
    3. 'es' → logprob: -9.750617027282715
    4. 'd' → logprob: -10.875617027282715
    5. 'parent' → logprob: -11.250617027282715
    6. '_res' → logprob: -11.625617027282715
    7. 'dist' → logprob: -11.625617027282715
    8. 'ef' → logprob: -12.750617027282715
    9. '_parent' → logprob: -12.750617027282715
    10. '_edge' → logprob: -13.125617027282715

Token 645: '.parent' (ID: 17454)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06064019724726677
    2. '[' → logprob: -3.0606400966644287
    3. '
' → logprob: -5.810640335083008
    4. '.copy' → logprob: -5.810640335083008
    5. '       ' → logprob: -7.060640335083008
    6. '[
' → logprob: -7.185640335083008
    7. '[line' → logprob: -8.185640335083008
    8. '[:' → logprob: -8.310640335083008
    9. '[parent' → logprob: -8.435640335083008
    10. '[node' → logprob: -8.435640335083008

Token 646: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.8789383830153383e-05
    2. 'edge' → logprob: -11.250019073486328
    3. '_' → logprob: -12.500019073486328
    4. '_ed' → logprob: -15.000019073486328
    5. '_edges' → logprob: -15.000019073486328
    6. '_e' → logprob: -15.250019073486328
    7. '_EDGE' → logprob: -15.500019073486328
    8. 'Edge' → logprob: -15.750019073486328
    9. '_node' → logprob: -16.000019073486328
    10. '
' → logprob: -16.500019073486328

Token 647: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12611518800258636
    2. '       ' → logprob: -2.251115083694458
    3. '        
' → logprob: -4.876115322113037
    4. '<|end|>' → logprob: -5.626115322113037
    5. ',' → logprob: -7.001115322113037
    6. '```' → logprob: -8.126114845275879
    7. '#' → logprob: -8.751114845275879
    8. '
' → logprob: -9.376114845275879
    9. ',
' → logprob: -9.626114845275879
    10. '  
' → logprob: -10.126114845275879

Token 648: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32356947660446167
    2. '       ' → logprob: -1.3235695362091064
    3. '        
' → logprob: -4.948569297790527
    4. '```' → logprob: -6.698569297790527
    5. '#' → logprob: -7.073569297790527
    6. 'tree' → logprob: -7.698569297790527
    7. '    
' → logprob: -8.823569297790527
    8. '   ' → logprob: -9.448569297790527
    9. '  
' → logprob: -9.573569297790527
    10. '<|end|>' → logprob: -9.698569297790527

Token 649: ' #' (ID: 1069)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.003705896669998765
    2. '#' (adapté à ' #') → logprob: -5.753705978393555
    3. '       ' → logprob: -7.628705978393555
    4. ' tree' → logprob: -11.003705978393555
    5. '
' → logprob: -12.253705978393555
    6. '   ' → logprob: -12.378705978393555
    7. 'self' → logprob: -12.503705978393555
    8. '```' → logprob: -12.878705978393555
    9. 'if' → logprob: -13.378705978393555
    10. 'tre' → logprob: -13.628705978393555

Token 650: ' Step' (ID: 22291)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.012682695873081684
    2. '#' → logprob: -4.387682914733887
    3. 'size' → logprob: -10.137682914733887
    4. 'self' → logprob: -10.637682914733887
    5. '   ' → logprob: -11.012682914733887
    6. '       ' → logprob: -11.137682914733887
    7. 'for' → logprob: -11.512682914733887
    8. 'if' → logprob: -11.762682914733887
    9. ' tree' → logprob: -12.012682914733887
    10. 'import' → logprob: -12.012682914733887

Token 651: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5155957341194153
    2. '1' → logprob: -1.3905956745147705
    3. ' =' → logprob: -2.5155956745147705
    4. '       ' → logprob: -3.2655956745147705
    5. '_' → logprob: -4.64059591293335
    6. '2' → logprob: -5.14059591293335
    7. ':' → logprob: -5.26559591293335
    8. ' #' → logprob: -5.76559591293335
    9. '   ' → logprob: -5.89059591293335
    10. '    ' → logprob: -6.01559591293335

Token 652: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023235227912664413
    2. '2' → logprob: -3.898235321044922
    3. '0' → logprob: -7.023235321044922
    4. '3' → logprob: -7.398235321044922
    5. '#' → logprob: -7.773235321044922
    6. ' ' → logprob: -8.273235321044922
    7. '   ' → logprob: -8.398235321044922
    8. '```' → logprob: -9.273235321044922
    9. '       ' → logprob: -10.273235321044922
    10. '4' → logprob: -10.773235321044922

Token 653: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015516899526119232
    2. '       ' → logprob: -4.390516757965088
    3. ':
' → logprob: -6.265516757965088
    4. '#' → logprob: -8.515517234802246
    5. '=' → logprob: -8.640517234802246
    6. ' :' → logprob: -8.765517234802246
    7. ',' → logprob: -8.890517234802246
    8. ' =' → logprob: -9.265517234802246
    9. 'tree' → logprob: -9.390517234802246
    10. ' tree' → logprob: -9.515517234802246

Token 654: ' Build' (ID: 10885)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0009699412039481103
    2. ' tree' → logprob: -7.125969886779785
    3. '#' → logprob: -9.000969886779785
    4. '       ' → logprob: -10.250969886779785
    5. 'Build' → logprob: -13.000969886779785
    6. '   ' → logprob: -13.750969886779785
    7. ' #' → logprob: -14.500969886779785
    8. '	tree' → logprob: -14.625969886779785
    9. '
' → logprob: -15.250969886779785
    10. '```' → logprob: -15.250969886779785

Token 655: ' shortest' (ID: 70564)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.021265003830194473
    2. ' tree' → logprob: -3.8962650299072266
    3. 'the' → logprob: -7.771265029907227
    4. '_tree' → logprob: -8.771265029907227
    5. '       ' → logprob: -9.771265029907227
    6. ' the' → logprob: -9.771265029907227
    7. '```' → logprob: -12.021265029907227
    8. '   ' → logprob: -12.396265029907227
    9. 'sub' → logprob: -12.521265029907227
    10. '(tree' → logprob: -12.521265029907227

Token 656: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.39139261841773987
    2. ' path' → logprob: -1.5163925886154175
    3. '_path' → logprob: -2.266392707824707
    4. '       ' → logprob: -7.516392707824707
    5. '```' → logprob: -10.141392707824707
    6. '_' → logprob: -10.641392707824707
    7. '
' → logprob: -11.016392707824707
    8. 'distance' → logprob: -11.391392707824707
    9. 'spath' → logprob: -11.516392707824707
    10. '   ' → logprob: -11.766392707824707

Token 657: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.13471285998821259
    2. ' tree' → logprob: -2.3847129344940186
    3. '_tree' → logprob: -3.3847129344940186
    4. '       ' → logprob: -11.009713172912598
    5. '```' → logprob: -12.009713172912598
    6. '
' → logprob: -12.759713172912598
    7. '   ' → logprob: -13.509713172912598
    8. '_' → logprob: -13.884713172912598
    9. '	tree' → logprob: -14.134713172912598
    10. 'trees' → logprob: -14.884713172912598

Token 658: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17811816930770874
    2. 'tree' → logprob: -1.9281182289123535
    3. ' tree' → logprob: -4.1781182289123535
    4. '
' → logprob: -6.5531182289123535
    5. 'from' → logprob: -7.9281182289123535
    6. '(tree' → logprob: -8.553117752075195
    7. ',' → logprob: -8.803117752075195
    8. '	tree' → logprob: -9.678117752075195
    9. '   ' → logprob: -9.928117752075195
    10. ' from' → logprob: -10.178117752075195

Token 659: ' initial' (ID: 4871)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10680501908063889
    2. 'parents' → logprob: -2.3568050861358643
    3. ' parent' → logprob: -5.106804847717285
    4. ' parents' → logprob: -7.606804847717285
    5. 'the' → logprob: -11.356804847717285
    6. 'par' → logprob: -13.356804847717285
    7. '```' → logprob: -13.606804847717285
    8. '(parent' → logprob: -13.731804847717285
    9. '
' → logprob: -13.856804847717285
    10. ' the' → logprob: -13.981804847717285

Token 660: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9486367106437683
    2. 'parent' → logprob: -1.323636770248413
    3. 'parents' → logprob: -1.573636770248413
    4. '_dist' → logprob: -3.323636770248413
    5. 'tree' → logprob: -4.073636531829834
    6. 'edges' → logprob: -4.323636531829834
    7. ' distances' → logprob: -4.573636531829834
    8. ' parents' → logprob: -4.698636531829834
    9. '```' → logprob: -4.948636531829834
    10. ' parent' → logprob: -5.073636531829834

Token 661: ' paths' (ID: 23373)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.04668806865811348
    2. ' path' → logprob: -3.1716880798339844
    3. '_path' → logprob: -6.046688079833984
    4. '       ' → logprob: -7.546688079833984
    5. 'edges' → logprob: -8.296688079833984
    6. 'paths' → logprob: -8.671688079833984
    7. ' edges' → logprob: -9.046688079833984
    8. 'distance' → logprob: -10.046688079833984
    9. 'dist' → logprob: -10.046688079833984
    10. '_edges' → logprob: -10.171688079833984

Token 662: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1204494833946228
    2. 'tree' → logprob: -2.3704495429992676
    3. ' tree' → logprob: -4.620449542999268
    4. '
' → logprob: -4.620449542999268
    5. '        
' → logprob: -9.12044906616211
    6. '```' → logprob: -9.87044906616211
    7. '	tree' → logprob: -10.12044906616211
    8. '(tree' → logprob: -10.37044906616211
    9. '   ' → logprob: -10.37044906616211
    10. ',' → logprob: -10.49544906616211

Token 663: 'edges' (ID: 39127)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2455741912126541
    2. ')' → logprob: -1.6205742359161377
    3. ')
' → logprob: -4.120573997497559
    4. ' parent' → logprob: -6.620573997497559
    5. 'tree' → logprob: -6.745573997497559
    6. '       ' → logprob: -7.745573997497559
    7. '(parent' → logprob: -8.495573997497559
    8. 'self' → logprob: -9.120573997497559
    9. ')
' → logprob: -10.245573997497559
    10. 'parents' → logprob: -10.245573997497559

Token 664: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19638673961162567
    2. ')
' → logprob: -2.4463868141174316
    3. '       ' → logprob: -3.3213868141174316
    4. '=' → logprob: -4.571386814117432
    5. ' used' → logprob: -4.571386814117432
    6. '):
' → logprob: -5.321386814117432
    7. ' =' → logprob: -5.446386814117432
    8. ' in' → logprob: -5.696386814117432
    9. 'used' → logprob: -5.821386814117432
    10. '):' → logprob: -6.071386814117432

Token 665: ' shortest' (ID: 70564)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2977484464645386
    2. 'path' → logprob: -2.422748565673828
    3. 'the' → logprob: -2.797748565673828
    4. 'short' → logprob: -3.172748565673828
    5. 'tree' → logprob: -3.297748565673828
    6. 'paths' → logprob: -4.047748565673828
    7. 'which' → logprob: -4.922748565673828
    8. ' shortest' → logprob: -6.672748565673828
    9. '```' → logprob: -7.047748565673828
    10. 'parents' → logprob: -7.172748565673828

Token 666: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.036208342760801315
    2. ' path' → logprob: -3.411208391189575
    3. '_path' → logprob: -6.161208152770996
    4. 'paths' → logprob: -8.286208152770996
    5. '   ' → logprob: -9.286208152770996
    6. '       ' → logprob: -10.036208152770996
    7. ' paths' → logprob: -10.911208152770996
    8. ')' → logprob: -11.286208152770996
    9. '_paths' → logprob: -11.911208152770996
    10. '-path' → logprob: -12.036208152770996

Token 667: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7487127780914307
    2. ' tree' → logprob: -1.1237127780914307
    3. 'tree' → logprob: -2.1237127780914307
    4. ')' → logprob: -2.6237127780914307
    5. '       ' → logprob: -5.748712539672852
    6. 's' → logprob: -6.123712539672852
    7. '   ' → logprob: -6.873712539672852
    8. '):
' → logprob: -7.123712539672852
    9. ' )
' → logprob: -7.373712539672852
    10. ' edges' → logprob: -8.123712539672852

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2619604766368866
    2. 'tree' → logprob: -1.636960506439209
    3. ' tree' → logprob: -3.386960506439209
    4. '
' → logprob: -6.761960506439209
    5. '```' → logprob: -7.761960506439209
    6. '	tree' → logprob: -9.13696002960205
    7. '        
' → logprob: -9.26196002960205
    8. '#' → logprob: -9.38696002960205
    9. ',' → logprob: -10.01196002960205
    10. '(tree' → logprob: -10.13696002960205

Token 669: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.022030288353562355
    2. ' tree' → logprob: -3.8970303535461426
    3. '       ' → logprob: -6.522030353546143
    4. '   ' → logprob: -12.397029876708984
    5. '```' → logprob: -12.522029876708984
    6. '	tree' → logprob: -13.022029876708984
    7. '
' → logprob: -13.647029876708984
    8. 'self' → logprob: -13.772029876708984
    9. 'short' → logprob: -14.397029876708984
    10. ' ' → logprob: -14.522029876708984

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. '[' → logprob: -15.078890800476074
    4. ' ' → logprob: -16.203889846801758
    5. ' =
' → logprob: -16.203889846801758
    6. ',' → logprob: -16.328889846801758
    7. '_' → logprob: -16.578889846801758
    8. '        ' → logprob: -16.703889846801758
    9. ' =[' → logprob: -17.203889846801758
    10. ' ' → logprob: -17.328889846801758

Token 671: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029773052781820297
    2. ' self' → logprob: -3.529772996902466
    3. '[self' → logprob: -10.779772758483887
    4. '       ' → logprob: -13.779772758483887
    5. '(self' → logprob: -15.279772758483887
    6. '[' → logprob: -15.529772758483887
    7. '	self' → logprob: -15.904772758483887
    8. '   ' → logprob: -16.029773712158203
    9. '[]' → logprob: -16.904773712158203
    10. ' [' → logprob: -17.154773712158203

Token 672: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.0009003812447190285
    2. '.' → logprob: -7.2509002685546875
    3. 'build' → logprob: -8.625900268554688
    4. ' .' → logprob: -12.125900268554688
    5. '.b' → logprob: -13.125900268554688
    6. '   ' → logprob: -13.250900268554688
    7. ' build' → logprob: -14.750900268554688
    8. '.
' → logprob: -15.000900268554688
    9. '
' → logprob: -15.750900268554688
    10. '\.' → logprob: -15.875900268554688

Token 673: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.9623810658231378e-05
    2. 'tree' → logprob: -11.000020027160645
    3. '(tree' → logprob: -13.000020027160645
    4. '_' → logprob: -15.750020027160645
    5. '```' → logprob: -15.750020027160645
    6. '_t' → logprob: -16.000019073486328
    7. '(_' → logprob: -16.500019073486328
    8. ' tree' → logprob: -17.250019073486328
    9. '
' → logprob: -17.500019073486328
    10. '_TREE' → logprob: -17.750019073486328

Token 674: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0042719002813100815
    2. 'from' → logprob: -5.504271984100342
    3. '(tree' → logprob: -8.879271507263184
    4. 'tree' → logprob: -10.504271507263184
    5. '_tree' → logprob: -11.629271507263184
    6. '
' → logprob: -12.879271507263184
    7. '_for' → logprob: -13.129271507263184
    8. '```' → logprob: -13.254271507263184
    9. '(_' → logprob: -13.504271507263184
    10. '_f' → logprob: -13.504271507263184

Token 675: '_par' (ID: 31329)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.0029552392661571503
    2. 'parent' → logprob: -5.877955436706543
    3. '_par' → logprob: -9.502955436706543
    4. 'par' → logprob: -9.627955436706543
    5. ' parents' → logprob: -12.002955436706543
    6. '_parent' → logprob: -13.627955436706543
    7. 'paren' → logprob: -14.377955436706543
    8. '
' → logprob: -15.002955436706543
    9. 'children' → logprob: -15.127955436706543
    10. '(parent' → logprob: -15.627955436706543

Token 676: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.020573072135448456
    2. 'ent' → logprob: -3.895573139190674
    3. 'parents' → logprob: -11.645572662353516
    4. 'ants' → logprob: -11.770572662353516
    5. '```' → logprob: -12.770572662353516
    6. 'nts' → logprob: -13.520572662353516
    7. 'parent' → logprob: -13.520572662353516
    8. '   ' → logprob: -13.645572662353516
    9. 'rent' → logprob: -13.645572662353516
    10. 'e' → logprob: -13.645572662353516

Token 677: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.029818760231137276
    2. 'parent' → logprob: -3.5298187732696533
    3. '       ' → logprob: -10.654818534851074
    4. ' parent' → logprob: -10.779818534851074
    5. ',parent' → logprob: -11.529818534851074
    6. '[parent' → logprob: -12.404818534851074
    7. '_parent' → logprob: -13.404818534851074
    8. '	parent' → logprob: -13.404818534851074
    9. '   ' → logprob: -13.529818534851074
    10. '(' → logprob: -13.529818534851074

Token 678: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.190178904333152e-05
    2. 'edge' → logprob: -10.750031471252441
    3. ')' → logprob: -12.375031471252441
    4. '_' → logprob: -13.500031471252441
    5. '_edges' → logprob: -13.625031471252441
    6. '_e' → logprob: -14.625031471252441
    7. '_parent' → logprob: -15.125031471252441
    8. ')_' → logprob: -15.375031471252441
    9. '(edge' → logprob: -15.500031471252441
    10. '_ed' → logprob: -15.500031471252441

Token 679: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014286901568993926
    2. ')
' → logprob: -7.251428604125977
    3. '       ' → logprob: -7.251428604125977
    4. ' )' → logprob: -12.876428604125977
    5. ')

' → logprob: -13.001428604125977
    6. '
' → logprob: -13.251428604125977
    7. ')
' → logprob: -14.251428604125977
    8. '<|end|>' → logprob: -14.751428604125977
    9. ',' → logprob: -15.126428604125977
    10. '),' → logprob: -15.376428604125977

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026837078854441643
    2. 'size' → logprob: -4.02683687210083
    3. '
' → logprob: -4.90183687210083
    4. ' size' → logprob: -7.77683687210083
    5. '```' → logprob: -7.77683687210083
    6. '        
' → logprob: -8.151837348937988
    7. 'sizes' → logprob: -10.901837348937988
    8. '   ' → logprob: -10.901837348937988
    9. 'import' → logprob: -11.776837348937988
    10. '    
' → logprob: -12.026837348937988

Token 681: ' #' (ID: 1069)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.12823805212974548
    2. '       ' → logprob: -2.1282379627227783
    3. ' size' → logprob: -7.003238201141357
    4. '```' → logprob: -9.2532377243042
    5. '
' → logprob: -9.3782377243042
    6. 'sizes' → logprob: -9.6282377243042
    7. 'import' → logprob: -10.0032377243042
    8. '#' (adapté à ' #') → logprob: -10.1282377243042
    9. '        
' → logprob: -10.3782377243042
    10. '   ' → logprob: -11.6282377243042

Token 682: ' Step' (ID: 22291)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0011286636581644416
    2. '#' → logprob: -7.251128673553467
    3. '       ' → logprob: -8.126128196716309
    4. 'import' → logprob: -9.626128196716309
    5. 'from' → logprob: -10.126128196716309
    6. ' size' → logprob: -12.376128196716309
    7. 'for' → logprob: -12.876128196716309
    8. 'sizes' → logprob: -12.876128196716309
    9. 'self' → logprob: -13.001128196716309
    10. 'sub' → logprob: -14.501128196716309

Token 683: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06389457732439041
    2. '1' → logprob: -2.938894510269165
    3. '       ' → logprob: -5.313894748687744
    4. '2' → logprob: -6.438894748687744
    5. '   ' → logprob: -7.438894748687744
    6. 'size' → logprob: -7.813894748687744
    7. ':' → logprob: -8.313894271850586
    8. '        ' → logprob: -8.313894271850586
    9. '_size' → logprob: -8.313894271850586
    10. ' size' → logprob: -9.063894271850586

Token 684: '3' (ID: 18)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6128121614456177
    2. '1' → logprob: -0.8628121614456177
    3. ' ' → logprob: -4.362812042236328
    4. '   ' → logprob: -5.112812042236328
    5. '2' → logprob: -5.362812042236328
    6. '3' → logprob: -5.612812042236328
    7. '       ' → logprob: -5.737812042236328
    8. '0' → logprob: -5.987812042236328
    9. 'line' → logprob: -7.112812042236328
    10. 'self' → logprob: -7.737812042236328

Token 685: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4786268472671509
    2. ':' → logprob: -0.9786268472671509
    3. ' size' → logprob: -5.853626728057861
    4. 'size' → logprob: -7.353626728057861
    5. ',' → logprob: -7.728626728057861
    6. '#' → logprob: -8.22862720489502
    7. '   ' → logprob: -9.35362720489502
    8. ' :' → logprob: -10.10362720489502
    9. ':size' → logprob: -10.10362720489502
    10. '      ' → logprob: -10.47862720489502

Token 686: ' DFS' (ID: 115767)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.000662280130200088
    2. '       ' → logprob: -8.250661849975586
    3. ' size' → logprob: -8.250661849975586
    4. '#' → logprob: -9.000661849975586
    5. 'from' → logprob: -11.750661849975586
    6. 'Calculate' → logprob: -12.750661849975586
    7. 'import' → logprob: -13.125661849975586
    8. '   ' → logprob: -14.125661849975586
    9. 'sizes' → logprob: -14.125661849975586
    10. 'Compute' → logprob: -15.000661849975586

Token 687: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1106984093785286
    2. ' for' → logprob: -3.3606984615325928
    3. ' size' → logprob: -3.3606984615325928
    4. 'size' → logprob: -3.8606984615325928
    5. 'for' → logprob: -5.235698223114014
    6. '_size' → logprob: -5.610698223114014
    7. ' to' → logprob: -6.860698223114014
    8. '   ' → logprob: -6.985698223114014
    9. '_sub' → logprob: -6.985698223114014
    10. ' self' → logprob: -8.235698699951172

Token 688: ' get' (ID: 717)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.06717212498188019
    2. ' size' → logprob: -3.067172050476074
    3. '       ' → logprob: -4.692172050476074
    4. 'compute' → logprob: -5.067172050476074
    5. 'calculate' → logprob: -6.817172050476074
    6. 'get' → logprob: -7.317172050476074
    7. ' compute' → logprob: -7.317172050476074
    8. 'self' → logprob: -8.442172050476074
    9. 'collect' → logprob: -9.317172050476074
    10. 'for' → logprob: -10.067172050476074

Token 689: ' subtree' (ID: 126158)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.46931764483451843
    2. ' size' → logprob: -1.4693176746368408
    3. ' subtree' → logprob: -2.469317674636841
    4. 'sub' → logprob: -2.969317674636841
    5. 'sizes' → logprob: -5.594317436218262
    6. ' sizes' → logprob: -5.719317436218262
    7. '       ' → logprob: -7.844317436218262
    8. ' the' → logprob: -8.094317436218262
    9. ' sub' → logprob: -8.344317436218262
    10. 'the' → logprob: -8.344317436218262

Token 690: ' sizes' (ID: 16174)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.15890736877918243
    2. '_size' → logprob: -2.783907413482666
    3. '_sizes' → logprob: -3.283907413482666
    4. ' sizes' → logprob: -3.408907413482666
    5. 'size' → logprob: -4.283907413482666
    6. '       ' → logprob: -8.158906936645508
    7. ' size' → logprob: -8.533906936645508
    8. 's' → logprob: -9.158906936645508
    9. '   ' → logprob: -9.158906936645508
    10. '_' → logprob: -10.158906936645508

Token 691: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005588871892541647
    2. '
' → logprob: -5.380589008331299
    3. 'size' → logprob: -7.255589008331299
    4. ',' → logprob: -9.38058853149414
    5. ' size' → logprob: -9.75558853149414
    6. '```' → logprob: -10.63058853149414
    7. '        
' → logprob: -10.75558853149414
    8. ' for' → logprob: -11.25558853149414
    9. 'for' → logprob: -11.25558853149414
    10. '   ' → logprob: -11.25558853149414

Token 692: ' count' (ID: 3605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6451363563537598
    2. 'calculate' → logprob: -1.8951363563537598
    3. 'count' → logprob: -2.1451363563537598
    4. 'self' → logprob: -2.1451363563537598
    5. 'compute' → logprob: -2.2701363563537598
    6. 'size' → logprob: -2.7701363563537598
    7. '       ' → logprob: -3.0201363563537598
    8. 'det' → logprob: -3.0201363563537598
    9. '   ' → logprob: -3.5201363563537598
    10. 'get' → logprob: -3.8951363563537598

Token 693: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.095494031906128
    2. ' the' → logprob: -2.345494031906128
    3. '       ' → logprob: -2.345494031906128
    4. ' for' → logprob: -2.345494031906128
    5. ' nodes' → logprob: -2.345494031906128
    6. 'for' → logprob: -2.470494031906128
    7. '   ' → logprob: -2.595494031906128
    8. 'the' → logprob: -3.095494031906128
    9. 'all' → logprob: -4.220494270324707
    10. 'sub' → logprob: -4.470494270324707

Token 694: ' affected' (ID: 18155)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030523387249559164
    2. ' for' → logprob: -6.753052234649658
    3. 'size' → logprob: -7.628052234649658
    4. ',' → logprob: -7.878052234649658
    5. 'for' → logprob: -8.253052711486816
    6. '	' → logprob: -8.878052711486816
    7. ' and' → logprob: -9.003052711486816
    8. '   ' → logprob: -9.003052711486816
    9. ' size' → logprob: -9.753052711486816
    10. '           ' → logprob: -9.878052711486816

Token 695: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011484556831419468
    2. 'size' → logprob: -4.761484622955322
    3. '
' → logprob: -6.386484622955322
    4. ' size' → logprob: -7.886484622955322
    5. ',' → logprob: -8.636484146118164
    6. 'for' → logprob: -8.761484146118164
    7. '(size' → logprob: -9.261484146118164
    8. ' for' → logprob: -9.511484146118164
    9. '```' → logprob: -9.511484146118164
    10. '        
' → logprob: -9.636484146118164

Token 696: ' increment' (ID: 24032)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.628429889678955
    2. ' each' → logprob: -1.878429889678955
    3. ' updates' → logprob: -2.503429889678955
    4. ' weight' → logprob: -2.628429889678955
    5. 'raise' → logprob: -3.003429889678955
    6. ' raised' → logprob: -3.128429889678955
    7. ' increases' → logprob: -3.128429889678955
    8. ' raise' → logprob: -3.378429889678955
    9. 'updates' → logprob: -3.378429889678955
    10. ' increased' → logprob: -3.503429889678955

Token 697: 'ing' (ID: 289)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031175557523965836
    2. 's' → logprob: -3.7811756134033203
    3. ' in' → logprob: -6.28117561340332
    4. 'd' → logprob: -6.78117561340332
    5. '
' → logprob: -7.28117561340332
    6. '   ' → logprob: -7.65617561340332
    7. ' of' → logprob: -7.78117561340332
    8. 'ed' → logprob: -7.90617561340332
    9. ',' → logprob: -8.15617561340332
    10. 'size' → logprob: -8.15617561340332

Token 698: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.5911412835121155
    2. ' edges' → logprob: -1.8411412239074707
    3. ' the' → logprob: -2.3411412239074707
    4. ' a' → logprob: -2.7161412239074707
    5. ' edge' → logprob: -3.9661412239074707
    6. 'edges' → logprob: -3.9661412239074707
    7. 'an' → logprob: -4.091141223907471
    8. 'a' → logprob: -4.341141223907471
    9. ' weights' → logprob: -4.341141223907471
    10. 'edge' → logprob: -4.841141223907471

Token 699: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.19033299386501312
    2. ' edge' → logprob: -1.8153330087661743
    3. '_edge' → logprob: -5.315332889556885
    4. '   ' → logprob: -6.690332889556885
    5. 'space' → logprob: -7.065332889556885
    6. 'e' → logprob: -7.440332889556885
    7. '       ' → logprob: -7.440332889556885
    8. '
' → logprob: -8.190333366394043
    9. '_' → logprob: -8.190333366394043
    10. 'increment' → logprob: -8.565333366394043

Token 700: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012319033034145832
    2. '
' → logprob: -4.512319087982178
    3. 'size' → logprob: -7.512319087982178
    4. ',' → logprob: -7.887319087982178
    5. '        
' → logprob: -9.01231861114502
    6. '```' → logprob: -9.88731861114502
    7. ' size' → logprob: -10.13731861114502
    8. '   ' → logprob: -10.51231861114502
    9. '
' → logprob: -10.63731861114502
    10. ' for' → logprob: -11.01231861114502

Token 701: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3919537663459778
    2. ' the' → logprob: -1.891953706741333
    3. 'tree' → logprob: -2.016953706741333
    4. ' tree' → logprob: -3.391953706741333
    5. '       ' → logprob: -6.266953945159912
    6. 'this' → logprob: -6.391953945159912
    7. ' this' → logprob: -6.891953945159912
    8. '   ' → logprob: -7.641953945159912
    9. ' shortest' → logprob: -8.391953468322754
    10. ' subtree' → logprob: -8.391953468322754

Token 702: ' shortest' (ID: 70564)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.08889584243297577
    2. 'short' → logprob: -3.213895797729492
    3. ' tree' → logprob: -3.588895797729492
    4. ' shortest' → logprob: -4.463895797729492
    5. 'path' → logprob: -5.963895797729492
    6. '
' → logprob: -7.088895797729492
    7. 'sub' → logprob: -7.213895797729492
    8. '   ' → logprob: -7.838895797729492
    9. 'parent' → logprob: -8.713895797729492
    10. '```' → logprob: -8.838895797729492

Token 703: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.058387115597724915
    2. ' path' → logprob: -3.683387041091919
    3. '_path' → logprob: -3.933387041091919
    4. '       ' → logprob: -4.433387279510498
    5. '```' → logprob: -10.18338680267334
    6. '
' → logprob: -11.05838680267334
    7. '   ' → logprob: -11.05838680267334
    8. '	path' → logprob: -11.93338680267334
    9. 'tree' → logprob: -12.05838680267334
    10. '_' → logprob: -12.18338680267334

Token 704: ' tree' (ID: 8165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10246972739696503
    2. 'size' → logprob: -2.8524696826934814
    3. '
' → logprob: -3.3524696826934814
    4. ' size' → logprob: -6.3524699211120605
    5. '        
' → logprob: -6.8524699211120605
    6. '```' → logprob: -7.6024699211120605
    7. ',' → logprob: -7.7274699211120605
    8. '   ' → logprob: -8.727469444274902
    9. 'sizes' → logprob: -8.727469444274902
    10. '
' → logprob: -8.852469444274902

Token 705: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13623622059822083
    2. '
' → logprob: -2.2612361907958984
    3. 'size' → logprob: -3.8862361907958984
    4. ' size' → logprob: -7.136236190795898
    5. '        
' → logprob: -7.386236190795898
    6. ',' → logprob: -7.511236190795898
    7. '```' → logprob: -8.261236190795898
    8. '
' → logprob: -9.636236190795898
    9. '<|end|>' → logprob: -9.636236190795898
    10. '   ' → logprob: -9.761236190795898

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022073546424508095
    2. '
' → logprob: -6.877207279205322
    3. 'size' → logprob: -6.877207279205322
    4. ' size' → logprob: -9.75220775604248
    5. '```' → logprob: -10.00220775604248
    6. '        
' → logprob: -11.12720775604248
    7. ',' → logprob: -11.62720775604248
    8. '   ' → logprob: -12.12720775604248
    9. '
' → logprob: -13.25220775604248
    10. 'self' → logprob: -13.37720775604248

Token 707: ' subtree' (ID: 126158)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.12416005879640579
    2. '       ' → logprob: -2.374160051345825
    3. ' size' → logprob: -3.749160051345825
    4. '   ' → logprob: -9.499159812927246
    5. '```' → logprob: -10.624159812927246
    6. 'sizes' → logprob: -11.124159812927246
    7. '      ' → logprob: -12.499159812927246
    8. '	size' → logprob: -13.249159812927246
    9. '     ' → logprob: -13.374159812927246
    10. '        
' → logprob: -13.499159812927246

Token 708: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.20179687440395355
    2. '_sizes' → logprob: -1.7017968893051147
    3. '_' → logprob: -8.076796531677246
    4. 'size' → logprob: -10.826796531677246
    5. 'sizes' → logprob: -11.201796531677246
    6. ' _' → logprob: -11.451796531677246
    7. '_s' → logprob: -12.076796531677246
    8. ' =' → logprob: -12.451796531677246
    9. '
' → logprob: -12.951796531677246
    10. 's' → logprob: -13.076796531677246

Token 709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07007525861263275
    2. ' =' → logprob: -2.695075273513794
    3. 's' → logprob: -9.695075035095215
    4. '[' → logprob: -10.195075035095215
    5. '=[' → logprob: -11.445075035095215
    6. '_' → logprob: -11.445075035095215
    7. ',' → logprob: -11.570075035095215
    8. ' ' → logprob: -12.570075035095215
    9. '   ' → logprob: -12.945075035095215
    10. ' =[' → logprob: -14.320075035095215

Token 710: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002386472187936306
    2. ' [' → logprob: -6.252386569976807
    3. '[self' → logprob: -8.252386093139648
    4. '[size' → logprob: -8.877386093139648
    5. '[node' → logprob: -10.502386093139648
    6. '[sub' → logprob: -11.877386093139648
    7. '[len' → logprob: -12.127386093139648
    8. '[s' → logprob: -12.502386093139648
    9. '[class' → logprob: -12.502386093139648
    10. '[n' → logprob: -12.752386093139648

Token 711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -17.75
    4. '   ' → logprob: -19.25
    5. '-' → logprob: -19.375
    6. '
' → logprob: -19.625
    7. 'self' → logprob: -19.75
    8. '```' → logprob: -20.5625
    9. 'float' → logprob: -20.6875
    10. '０' → logprob: -21.1875

Token 712: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007375618442893028
    2. ' for' → logprob: -7.62573766708374
    3. 'for' → logprob: -9.500737190246582
    4. ']*(' → logprob: -9.500737190246582
    5. ' ]' → logprob: -9.750737190246582
    6. '   ' → logprob: -10.875737190246582
    7. ']*' → logprob: -11.125737190246582
    8. ' *' → logprob: -13.000737190246582
    9. '```' → logprob: -13.875737190246582
    10. ' ' → logprob: -14.125737190246582

Token 713: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08659297972917557
    2. '*(' → logprob: -2.71159291267395
    3. '*' → logprob: -4.461593151092529
    4. ']' → logprob: -6.336593151092529
    5. '(self' → logprob: -7.336593151092529
    6. '(' → logprob: -7.586593151092529
    7. '       ' → logprob: -7.711593151092529
    8. ')' → logprob: -7.836593151092529
    9. '
' → logprob: -8.461592674255371
    10. ' ' → logprob: -8.961592674255371

Token 714: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.077528764260933e-05
    2. '(len' → logprob: -9.500081062316895
    3. ' (' → logprob: -12.125081062316895
    4. '       ' → logprob: -15.875081062316895
    5. '(' → logprob: -16.000080108642578
    6. '(
' → logprob: -16.750080108642578
    7. '   ' → logprob: -16.750080108642578
    8. 'self' → logprob: -16.875080108642578
    9. '(n' → logprob: -16.875080108642578
    10. '((' → logprob: -17.250080108642578

Token 715: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.474161297082901
    2. 'self' → logprob: -0.9741612672805786
    3. ' self' → logprob: -10.474161148071289
    4. ' (' → logprob: -10.599161148071289
    5. '       ' → logprob: -11.224161148071289
    6. '
' → logprob: -11.599161148071289
    7. '(len' → logprob: -13.099161148071289
    8. '[self' → logprob: -13.224161148071289
    9. '   ' → logprob: -13.349161148071289
    10. '           ' → logprob: -13.599161148071289

Token 716: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00022272850037552416
    2. 'n' → logprob: -9.250223159790039
    3. '+' → logprob: -10.250223159790039
    4. '       ' → logprob: -10.625223159790039
    5. '   ' → logprob: -11.000223159790039
    6. '.' → logprob: -11.375223159790039
    7. ' .' → logprob: -11.750223159790039
    8. '
' → logprob: -11.875223159790039
    9. '(n' → logprob: -12.375223159790039
    10. '.
' → logprob: -12.375223159790039

Token 717: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038053546100854874
    2. ' +' → logprob: -3.288053512573242
    3. '+
' → logprob: -11.413053512573242
    4. ' +
' → logprob: -14.538053512573242
    5. '
' → logprob: -14.913053512573242
    6. ')' → logprob: -16.163053512573242
    7. '[' → logprob: -17.788053512573242
    8. '＋' → logprob: -17.913053512573242
    9. '       ' → logprob: -18.038053512573242
    10. '   ' → logprob: -18.163053512573242

Token 718: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.625004768371582
    3. '
' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '```' → logprob: -16.0000057220459
    6. '2' → logprob: -16.6250057220459
    7. '+' → logprob: -17.0625057220459
    8. '(' → logprob: -17.4375057220459
    9. '{
' → logprob: -17.5000057220459
    10. ')' → logprob: -17.6250057220459

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.250001907348633
    3. '
' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '```' → logprob: -16.500001907348633
    6. '2' → logprob: -17.562501907348633
    7. '

' → logprob: -18.000001907348633
    8. '{
' → logprob: -18.187501907348633
    9. ')' → logprob: -18.250001907348633
    10. '+' → logprob: -18.312501907348633

Token 720: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03845430538058281
    2. ')' → logprob: -3.288454294204712
    3. ')
' → logprob: -7.913454532623291
    4. '       ' → logprob: -10.413454055786133
    5. ')

' → logprob: -11.288454055786133
    6. ' )
' → logprob: -13.413454055786133
    7. '
' → logprob: -13.788454055786133
    8. ')`
' → logprob: -14.413454055786133
    9. ')
/' → logprob: -14.663454055786133
    10. '   ' → logprob: -15.038454055786133

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024500858853571117
    2. '
' → logprob: -9.125245094299316
    3. 'self' → logprob: -9.625245094299316
    4. ' self' → logprob: -10.250245094299316
    5. '	' → logprob: -11.375245094299316
    6. '        
' → logprob: -12.000245094299316
    7. '```' → logprob: -12.125245094299316
    8. '   ' → logprob: -12.875245094299316
    9. ' for' → logprob: -13.250245094299316
    10. '           ' → logprob: -13.250245094299316

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013285996101330966
    2. '       ' → logprob: -9.00013256072998
    3. ' self' → logprob: -11.62513256072998
    4. 'for' → logprob: -14.75013256072998
    5. '	self' → logprob: -17.250133514404297
    6. '   ' → logprob: -17.375133514404297
    7. '
' → logprob: -17.500133514404297
    8. '        
' → logprob: -18.000133514404297
    9. 'def' → logprob: -18.750133514404297
    10. '```' → logprob: -19.250133514404297

Token 723: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0005513638607226312
    2. 'dfs' → logprob: -7.875551223754883
    3. '.' → logprob: -9.500551223754883
    4. ' .' → logprob: -9.500551223754883
    5. '.df' → logprob: -12.125551223754883
    6. '   ' → logprob: -12.500551223754883
    7. '._' → logprob: -13.250551223754883
    8. ' dfs' → logprob: -13.375551223754883
    9. '\.' → logprob: -13.875551223754883
    10. '`.' → logprob: -14.000551223754883

Token 724: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -4.3822154111694545e-05
    2. 'dfs' → logprob: -10.125043869018555
    3. 'f' → logprob: -12.625043869018555
    4. '_fs' → logprob: -15.250043869018555
    5. 's' → logprob: -16.625043869018555
    6. ' fs' → logprob: -17.125043869018555
    7. 'sf' → logprob: -17.250043869018555
    8. '
' → logprob: -17.625043869018555
    9. '   ' → logprob: -17.875043869018555
    10. '_f' → logprob: -17.875043869018555

Token 725: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.7120533811976202e-05
    2. '(tree' → logprob: -11.125017166137695
    3. '_tree' → logprob: -13.375017166137695
    4. 'sub' → logprob: -14.500017166137695
    5. '_' → logprob: -15.375017166137695
    6. '(sub' → logprob: -17.000017166137695
    7. 'tree' → logprob: -18.000017166137695
    8. '_s' → logprob: -18.625017166137695
    9. '   ' → logprob: -19.125017166137695
    10. '_(' → logprob: -19.500017166137695

Token 726: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -9.17420256882906e-05
    2. '_tree' → logprob: -10.000091552734375
    3. '_sub' → logprob: -10.500091552734375
    4. 'sub' → logprob: -11.750091552734375
    5. 'ub' → logprob: -12.250091552734375
    6. 'tre' → logprob: -12.375091552734375
    7. 'trees' → logprob: -14.125091552734375
    8. ' subtree' → logprob: -14.625091552734375
    9. 't' → logprob: -15.875091552734375
    10. 'TREE' → logprob: -16.250091552734375

Token 727: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.375000953674316
    3. '_sub' → logprob: -15.625000953674316
    4. '_s' → logprob: -16.375
    5. 'size' → logprob: -16.5
    6. '_tree' → logprob: -16.5
    7. '_SIZE' → logprob: -16.875
    8. '\' → logprob: -17.75
    9. '[' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 728: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00010318557906430215
    2. '(' → logprob: -9.250102996826172
    3. '(
' → logprob: -11.875102996826172
    4. ' (' → logprob: -17.125102996826172
    5. '(Tree' → logprob: -17.875102996826172
    6. '(table' → logprob: -18.250102996826172
    7. '(t' → logprob: -18.375102996826172
    8. 'tree' → logprob: -18.750102996826172
    9. '(tr' → logprob: -18.750102996826172
    10. '(

' → logprob: -18.875102996826172

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ',node' → logprob: -12.250008583068848
    3. ',
' → logprob: -13.000008583068848
    4. ' ,' → logprob: -13.500008583068848
    5. ')' → logprob: -17.37500762939453
    6. ',

' → logprob: -17.75000762939453
    7. ',parent' → logprob: -17.87500762939453
    8. '       ' → logprob: -18.00000762939453
    9. '(' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.50000762939453

Token 730: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16888955235481262
    2. '1' → logprob: -1.9188895225524902
    3. ' ' → logprob: -4.79388952255249
    4. '
' → logprob: -8.043889999389648
    5. '   ' → logprob: -11.168889999389648
    6. 'node' → logprob: -13.418889999389648
    7. '  ' → logprob: -13.543889999389648
    8. '    
' → logprob: -13.543889999389648
    9. '

' → logprob: -13.668889999389648
    10. ' 
' → logprob: -13.793889999389648

Token 731: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006510609295219183
    2. '1' → logprob: -5.1315107345581055
    3. ' ' → logprob: -7.7565107345581055
    4. '
' → logprob: -9.006510734558105
    5. 'node' → logprob: -11.131510734558105
    6. '   ' → logprob: -12.131510734558105
    7. 'tree' → logprob: -13.131510734558105
    8. '  ' → logprob: -13.381510734558105
    9. ')' → logprob: -13.694010734558105
    10. 'root' → logprob: -13.694010734558105

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ',
' → logprob: -13.500003814697266
    3. ' ,' → logprob: -14.000003814697266
    4. '       ' → logprob: -14.000003814697266
    5. ')' → logprob: -14.375003814697266
    6. '   ' → logprob: -16.875003814697266
    7. ',node' → logprob: -17.625003814697266
    8. '
' → logprob: -17.875003814697266
    9. ',parent' → logprob: -19.000003814697266
    10. ',s' → logprob: -19.000003814697266

Token 733: ' subtree' (ID: 126158)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.007637509144842625
    2. ' subtree' → logprob: -4.8826375007629395
    3. ' sub' → logprob: -11.007637977600098
    4. 'subplot' → logprob: -12.757637977600098
    5. '(sub' → logprob: -12.882637977600098
    6. 'subcategory' → logprob: -13.132637977600098
    7. '
' → logprob: -13.257637977600098
    8. '	sub' → logprob: -13.382637977600098
    9. 'submenu' → logprob: -13.882637977600098
    10. '[sub' → logprob: -14.007637977600098

Token 734: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.7120533811976202e-05
    2. '_sub' → logprob: -12.125017166137695
    3. ')' → logprob: -12.750017166137695
    4. 'size' → logprob: -13.000017166137695
    5. '_s' → logprob: -13.000017166137695
    6. '_' → logprob: -13.250017166137695
    7. 's' → logprob: -14.625017166137695
    8. '   ' → logprob: -14.875017166137695
    9. '_
' → logprob: -15.625017166137695
    10. '_sizes' → logprob: -15.625017166137695

Token 735: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003676324849948287
    2. ')
' → logprob: -8.125367164611816
    3. '       ' → logprob: -9.625367164611816
    4. ' )' → logprob: -13.250367164611816
    5. '
' → logprob: -13.375367164611816
    6. ')

' → logprob: -13.875367164611816
    7. '<|end|>' → logprob: -14.750367164611816
    8. ')return' → logprob: -15.375367164611816
    9. ')\
' → logprob: -16.250368118286133
    10. ')#' → logprob: -16.375368118286133

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024898070842027664
    2. '#' → logprob: -7.377490043640137
    3. '        
' → logprob: -7.377490043640137
    4. 'for' → logprob: -8.502490043640137
    5. '```' → logprob: -8.627490043640137
    6. '
' → logprob: -8.877490043640137
    7. 'prev' → logprob: -9.502490043640137
    8. 'total' → logprob: -9.502490043640137
    9. '   ' → logprob: -9.877490043640137
    10. ' for' → logprob: -10.127490043640137

Token 737: ' #' (ID: 1069)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.9980646967887878
    2. '#' (adapté à ' #') → logprob: -1.2480647563934326
    3. 'raise' → logprob: -2.6230647563934326
    4. 'increment' → logprob: -2.6230647563934326
    5. 'inc' → logprob: -4.1230645179748535
    6. '       ' → logprob: -4.1230645179748535
    7. 'increments' → logprob: -4.1230645179748535
    8. 'res' → logprob: -4.2480645179748535
    9. 'new' → logprob: -4.6230645179748535
    10. 'affected' → logprob: -4.7480645179748535

Token 738: ' Step' (ID: 22291)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.956581711769104
    2. 'raise' → logprob: -1.831581711769104
    3. '#' → logprob: -2.2065815925598145
    4. 'increment' → logprob: -2.4565815925598145
    5. 'increments' → logprob: -2.7065815925598145
    6. 'cost' → logprob: -3.7065815925598145
    7. 'for' → logprob: -4.2065815925598145
    8. 'edges' → logprob: -4.2065815925598145
    9. 'inc' → logprob: -4.5815815925598145
    10. 'total' → logprob: -4.5815815925598145

Token 739: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14881709218025208
    2. '1' → logprob: -2.5238170623779297
    3. '4' → logprob: -3.0238170623779297
    4. '       ' → logprob: -5.52381706237793
    5. '2' → logprob: -6.14881706237793
    6. ':' → logprob: -6.89881706237793
    7. '   ' → logprob: -7.39881706237793
    8. ' #' → logprob: -7.77381706237793
    9. '5' → logprob: -8.39881706237793
    10. '#' → logprob: -8.64881706237793

Token 740: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05036872252821922
    2. '2' → logprob: -3.5503687858581543
    3. '3' → logprob: -4.425368785858154
    4. '0' → logprob: -5.675368785858154
    5. '4' → logprob: -5.675368785858154
    6. '5' → logprob: -7.050368785858154
    7. '```' → logprob: -8.675368309020996
    8. '7' → logprob: -9.175368309020996
    9. '       ' → logprob: -9.425368309020996
    10. '#' → logprob: -9.675368309020996

Token 741: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009221763350069523
    2. '       ' → logprob: -4.75922155380249
    3. ':
' → logprob: -8.134222030639648
    4. ' =' → logprob: -9.134222030639648
    5. ' :' → logprob: -9.634222030639648
    6. '
' → logprob: -10.759222030639648
    7. ',' → logprob: -10.759222030639648
    8. '#' → logprob: -10.759222030639648
    9. '=' → logprob: -10.884222030639648
    10. '   ' → logprob: -11.134222030639648

Token 742: ' Mark' (ID: 5070)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3338906466960907
    2. '#' → logprob: -2.833890676498413
    3. 'increments' → logprob: -2.833890676498413
    4. 'increment' → logprob: -2.958890676498413
    5. 'answer' → logprob: -4.583890438079834
    6. 'total' → logprob: -4.708890438079834
    7. 'result' → logprob: -4.833890438079834
    8. 'affected' → logprob: -4.833890438079834
    9. 'res' → logprob: -4.958890438079834
    10. 'import' → logprob: -4.958890438079834

Token 743: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5968095660209656
    2. 'affected' → logprob: -2.0968096256256104
    3. ' edges' → logprob: -2.5968096256256104
    4. 'used' → logprob: -2.7218096256256104
    5. 'in' → logprob: -2.9718096256256104
    6. 'edge' → logprob: -3.5968096256256104
    7. 'on' → logprob: -3.9718096256256104
    8. 'visited' → logprob: -4.346809387207031
    9. '   ' → logprob: -4.596809387207031
    10. ' shortest' → logprob: -4.596809387207031

Token 744: ' that' (ID: 484)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.33399027585983276
    2. '_on' → logprob: -1.7089903354644775
    3. 'in' → logprob: -3.0839903354644775
    4. 'on' → logprob: -3.2089903354644775
    5. '_used' → logprob: -5.083990097045898
    6. ' =' → logprob: -5.583990097045898
    7. 'used' → logprob: -6.208990097045898
    8. '   ' → logprob: -6.833990097045898
    9. '_to' → logprob: -7.708990097045898
    10. '       ' → logprob: -7.708990097045898

Token 745: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.14246045053005219
    2. ' are' → logprob: -2.392460346221924
    3. 'appear' → logprob: -3.767460346221924
    4. ' lie' → logprob: -4.767460346221924
    5. 'lie' → logprob: -5.642460346221924
    6. 'in' → logprob: -6.267460346221924
    7. '
' → logprob: -6.517460346221924
    8. ' appear' → logprob: -7.142460346221924
    9. 'parent' → logprob: -7.392460346221924
    10. ' in' → logprob: -8.517460823059082

Token 746: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8227190375328064
    2. 'in' → logprob: -1.4477190971374512
    3. ' part' → logprob: -1.8227190971374512
    4. 'part' → logprob: -1.9477190971374512
    5. ' on' → logprob: -4.447719097137451
    6. 'used' → logprob: -5.572719097137451
    7. ' in' → logprob: -6.197719097137451
    8. 'parent' → logprob: -6.572719097137451
    9. '
' → logprob: -6.947719097137451
    10. '   ' → logprob: -7.822719097137451

Token 747: ' the' (ID: 290)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7114754915237427
    2. 'the' → logprob: -0.8364754915237427
    3. 'self' → logprob: -3.336475372314453
    4. ' parent' → logprob: -4.086475372314453
    5. ' the' → logprob: -4.336475372314453
    6. 'short' → logprob: -5.336475372314453
    7. 'set' → logprob: -5.711475372314453
    8. ' shortest' → logprob: -6.711475372314453
    9. 'a' → logprob: -7.961475372314453
    10. ' self' → logprob: -8.961475372314453

Token 748: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.408194899559021
    2. 'parent' → logprob: -1.783194899559021
    3. ' shortest' → logprob: -1.908194899559021
    4. 'initial' → logprob: -4.5331950187683105
    5. ' parent' → logprob: -5.4081950187683105
    6. 'self' → logprob: -6.6581950187683105
    7. 'set' → logprob: -7.9081950187683105
    8. ' initial' → logprob: -8.158194541931152
    9. '
' → logprob: -8.283194541931152
    10. 'tree' → logprob: -8.533194541931152

Token 749: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.030806198716163635
    2. '_path' → logprob: -3.530806303024292
    3. ' path' → logprob: -6.905806064605713
    4. '       ' → logprob: -9.905806541442871
    5. 'paths' → logprob: -14.280806541442871
    6. '   ' → logprob: -14.405806541442871
    7. '
' → logprob: -14.905806541442871
    8. 'pat' → logprob: -15.030806541442871
    9. '_paths' → logprob: -15.155806541442871
    10. '	path' → logprob: -15.280806541442871

Token 750: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.10139403492212296
    2. ' tree' → logprob: -2.601393938064575
    3. '       ' → logprob: -3.851393938064575
    4. '_tree' → logprob: -7.976394176483154
    5. 'parent' → logprob: -8.601393699645996
    6. '   ' → logprob: -8.601393699645996
    7. 'for' → logprob: -8.976393699645996
    8. ' for' → logprob: -9.976393699645996
    9. '```' → logprob: -10.101393699645996
    10. 'edges' → logprob: -11.351393699645996

Token 751: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019400229677557945
    2. ' for' → logprob: -4.644400119781494
    3. 'for' → logprob: -4.894400119781494
    4. '
' → logprob: -7.144400119781494
    5. ' edges' → logprob: -8.519400596618652
    6. 'edges' → logprob: -8.519400596618652
    7. '        
' → logprob: -9.019400596618652
    8. '   ' → logprob: -9.019400596618652
    9. ',' → logprob: -9.269400596618652
    10. ' in' → logprob: -9.394400596618652

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02205897681415081
    2. 'for' → logprob: -4.397058963775635
    3. ' for' → logprob: -4.897058963775635
    4. 'in' → logprob: -7.647058963775635
    5. 'edges' → logprob: -8.272059440612793
    6. 'edge' → logprob: -8.397059440612793
    7. ' in' → logprob: -8.772059440612793
    8. ' edges' → logprob: -8.897059440612793
    9. '
' → logprob: -9.147059440612793
    10. '#' → logprob: -9.147059440612793

Token 753: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.09593506157398224
    2. 'sp' → logprob: -3.470935106277466
    3. 'edge' → logprob: -4.095934867858887
    4. 's' → logprob: -4.095934867858887
    5. '   ' → logprob: -4.470934867858887
    6. '       ' → logprob: -5.470934867858887
    7. 'is' → logprob: -5.470934867858887
    8. 'short' → logprob: -6.095934867858887
    9. 'for' → logprob: -6.970934867858887
    10. 'edges' → logprob: -6.970934867858887

Token 754: '_tree' (ID: 27118)
  Prédit: '_short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.16423724591732025
    2. '_path' → logprob: -2.4142372608184814
    3. '_tree' → logprob: -3.0392372608184814
    4. '_s' → logprob: -4.914237022399902
    5. '_sp' → logprob: -6.164237022399902
    6. '_' → logprob: -6.289237022399902
    7. '_edge' → logprob: -7.039237022399902
    8. '_self' → logprob: -7.914237022399902
    9. 'self' → logprob: -8.039237022399902
    10. 'short' → logprob: -8.039237022399902

Token 755: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.759443461894989
    2. '_edges' → logprob: -1.1344435214996338
    3. ' =' → logprob: -2.509443521499634
    4. '[' → logprob: -2.759443521499634
    5. '_edge' → logprob: -3.134443521499634
    6. '=' → logprob: -4.259443283081055
    7. '_e' → logprob: -6.384443283081055
    8. '[e' → logprob: -6.509443283081055
    9. '[_' → logprob: -6.759443283081055
    10. '_ed' → logprob: -7.259443283081055

Token 756: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029757089912891388
    2. ' [' → logprob: -3.529757022857666
    3. 'set' → logprob: -12.654757499694824
    4. '   ' → logprob: -13.404757499694824
    5. '[self' → logprob: -14.279757499694824
    6. '{' → logprob: -14.779757499694824
    7. ' set' → logprob: -15.154757499694824
    8. '[len' → logprob: -15.529757499694824
    9. ' ' → logprob: -16.279756546020508
    10. '[node' → logprob: -16.529756546020508

Token 757: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.4974866644479334e-05
    2. ' False' → logprob: -11.250015258789062
    3. '0' → logprob: -13.375015258789062
    4. '   ' → logprob: -15.500015258789062
    5. 'True' → logprob: -16.875015258789062
    6. '(False' → logprob: -17.000015258789062
    7. 'len' → logprob: -18.625015258789062
    8. '=False' → logprob: -19.500015258789062
    9. 'false' → logprob: -19.500015258789062
    10. '       ' → logprob: -19.750015258789062

Token 758: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002088165609166026
    2. ' ]' → logprob: -7.0020880699157715
    3. ']*' → logprob: -7.2520880699157715
    4. ' for' → logprob: -7.7520880699157715
    5. ']*(' → logprob: -10.87708854675293
    6. ')' → logprob: -12.25208854675293
    7. ',' → logprob: -12.75208854675293
    8. ']+' → logprob: -12.87708854675293
    9. '   ' → logprob: -13.25208854675293
    10. 'for' → logprob: -13.50208854675293

Token 759: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.034235112369060516
    2. 'for' → logprob: -4.284235000610352
    3. ' *' → logprob: -4.409235000610352
    4. '*' → logprob: -5.284235000610352
    5. ']' → logprob: -6.534235000610352
    6. ' ' → logprob: -7.784235000610352
    7. ')' → logprob: -8.784235000610352
    8. '           ' → logprob: -9.034235000610352
    9. ']*' → logprob: -9.034235000610352
    10. '[' → logprob: -9.784235000610352

Token 760: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49157702922821045
    2. '(self' → logprob: -0.9915770292282104
    3. '(len' → logprob: -4.2415771484375
    4. 'len' → logprob: -5.8665771484375
    5. ' self' → logprob: -9.6165771484375
    6. ' (' → logprob: -10.6165771484375
    7. '(' → logprob: -10.9915771484375
    8. '       ' → logprob: -11.6165771484375
    9. '           ' → logprob: -12.4915771484375
    10. '   ' → logprob: -12.8665771484375

Token 761: '.m' (ID: 1021)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.12039769440889359
    2. '.m' → logprob: -2.4953978061676025
    3. 'm' → logprob: -4.245397567749023
    4. '(self' → logprob: -4.620397567749023
    5. 'self' → logprob: -5.620397567749023
    6. '(len' → logprob: -6.995397567749023
    7. '       ' → logprob: -7.245397567749023
    8. '   ' → logprob: -7.995397567749023
    9. '(' → logprob: -8.495397567749023
    10. ' (' → logprob: -8.495397567749023

Token 762: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08791256695985794
    2. '       ' → logprob: -2.5879125595092773
    3. ' for' → logprob: -5.337912559509277
    4. 'for' → logprob: -5.837912559509277
    5. '<|end|>' → logprob: -7.712912559509277
    6. '        
' → logprob: -7.837912559509277
    7. '
' → logprob: -9.087912559509277
    8. ' 
' → logprob: -9.837912559509277
    9. '' → logprob: -10.337912559509277
    10. '    
' → logprob: -10.337912559509277

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2636873126029968
    2. ' for' → logprob: -1.7636873722076416
    3. '
' → logprob: -3.1386873722076416
    4. 'for' → logprob: -4.2636871337890625
    5. '        
' → logprob: -6.7636871337890625
    6. '<|end|>' → logprob: -7.3886871337890625
    7. '   ' → logprob: -7.6386871337890625
    8. '  
' → logprob: -9.138687133789062
    9. '    
' → logprob: -9.263687133789062
    10. '[' → logprob: -9.263687133789062

Token 764: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005062076961621642
    2. '       ' → logprob: -7.750506401062012
    3. ' for' → logprob: -9.500506401062012
    4. '   ' → logprob: -14.500506401062012
    5. '
' → logprob: -16.750505447387695
    6. '	for' → logprob: -16.875505447387695
    7. '```' → logprob: -17.625505447387695
    8. 'parent' → logprob: -18.000505447387695
    9. '           ' → logprob: -18.250505447387695
    10. '               ' → logprob: -20.125505447387695

Token 765: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.009267585352063179
    2. ' v' → logprob: -4.759267807006836
    3. '   ' → logprob: -8.384267807006836
    4. 'i' → logprob: -8.509267807006836
    5. 'node' → logprob: -9.134267807006836
    6. 'u' → logprob: -10.384267807006836
    7. 'eid' → logprob: -10.634267807006836
    8. ' eid' → logprob: -10.884267807006836
    9. ' node' → logprob: -11.384267807006836
    10. ' i' → logprob: -11.509267807006836

Token 766: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016095254570245743
    2. 'in' → logprob: -4.141095161437988
    3. 'v' → logprob: -10.891095161437988
    4. ',' → logprob: -11.141095161437988
    5. ' ' → logprob: -11.516095161437988
    6. '   ' → logprob: -12.141095161437988
    7. '	in' → logprob: -13.016095161437988
    8. ' v' → logprob: -13.141095161437988
    9. '[' → logprob: -13.766095161437988
    10. ')' → logprob: -14.266095161437988

Token 767: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005237668287009001
    2. ' range' → logprob: -5.255237579345703
    3. '(range' → logprob: -12.755237579345703
    4. '   ' → logprob: -14.755237579345703
    5. '(' → logprob: -15.755237579345703
    6. ' ' → logprob: -15.755237579345703
    7. 'in' → logprob: -16.630237579345703
    8. '	range' → logprob: -16.630237579345703
    9. '  ' → logprob: -17.255237579345703
    10. ' in' → logprob: -17.755237579345703

Token 768: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25253361463546753
    2. '(' → logprob: -1.5025336742401123
    3. '1' → logprob: -7.502533435821533
    4. ' ' → logprob: -10.627533912658691
    5. '   ' → logprob: -11.127533912658691
    6. ' (' → logprob: -12.002533912658691
    7. '       ' → logprob: -12.127533912658691
    8. ',' → logprob: -13.502533912658691
    9. '(
' → logprob: -14.877533912658691
    10. '           ' → logprob: -15.627533912658691

Token 769: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. '1' → logprob: -11.75001049041748
    3. ' ' → logprob: -13.12501049041748
    4. '   ' → logprob: -14.87501049041748
    5. '(' → logprob: -17.375009536743164
    6. '
' → logprob: -17.500009536743164
    7. '```' → logprob: -18.625009536743164
    8. '    ' → logprob: -19.000009536743164
    9. '       ' → logprob: -19.250009536743164
    10. '  ' → logprob: -19.375009536743164

Token 770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012749579036608338
    2. ' ,' → logprob: -9.625127792358398
    3. ',
' → logprob: -10.250127792358398
    4. '       ' → logprob: -11.500127792358398
    5. ',self' → logprob: -12.375127792358398
    6. '   ' → logprob: -13.000127792358398
    7. ',v' → logprob: -13.375127792358398
    8. ',n' → logprob: -13.625127792358398
    9. '           ' → logprob: -13.875127792358398
    10. ',len' → logprob: -14.000127792358398

Token 771: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005937566980719566
    2. ' self' → logprob: -5.130937576293945
    3. '(self' → logprob: -12.255937576293945
    4. '[self' → logprob: -13.755937576293945
    5. '       ' → logprob: -14.005937576293945
    6. '
' → logprob: -14.630937576293945
    7. '           ' → logprob: -14.755937576293945
    8. '   ' → logprob: -15.130937576293945
    9. 'len' → logprob: -15.380937576293945
    10. ' ' → logprob: -15.630937576293945

Token 772: '.n' (ID: 1835)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.485409677028656
    2. ' +' → logprob: -1.4854097366333008
    3. '.n' → logprob: -2.360409736633301
    4. 'n' → logprob: -2.860409736633301
    5. '+n' → logprob: -6.610409736633301
    6. ' n' → logprob: -7.360409736633301
    7. '
' → logprob: -7.485409736633301
    8. '```' → logprob: -7.610409736633301
    9. '       ' → logprob: -7.735409736633301
    10. ',' → logprob: -7.735409736633301

Token 773: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5763161778450012
    2. ' +' → logprob: -0.8263161778450012
    3. '):
' → logprob: -8.201315879821777
    4. '):' → logprob: -10.451315879821777
    5. '       ' → logprob: -10.951315879821777
    6. '+
' → logprob: -11.451315879821777
    7. '   ' → logprob: -11.826315879821777
    8. ' +
' → logprob: -11.951315879821777
    9. ')' → logprob: -12.076315879821777
    10. ' ' → logprob: -12.701315879821777

Token 774: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003076950670219958
    2. ' ' → logprob: -8.1253080368042
    3. '+' → logprob: -11.6253080368042
    4. '   ' → logprob: -14.1253080368042
    5. 'self' → logprob: -14.2503080368042
    6. '```' → logprob: -14.8753080368042
    7. 'v' → logprob: -15.2503080368042
    8. ' +' → logprob: -16.000307083129883
    9. '       ' → logprob: -16.375307083129883
    10. '           ' → logprob: -16.750307083129883

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031532408320344985
    2. '+' → logprob: -8.25031566619873
    3. 'self' → logprob: -10.37531566619873
    4. ' ' → logprob: -11.62531566619873
    5. 'n' → logprob: -12.12531566619873
    6. 'v' → logprob: -12.50031566619873
    7. ')' → logprob: -14.00031566619873
    8. '   ' → logprob: -14.12531566619873
    9. '```' → logprob: -14.12531566619873
    10. ' +' → logprob: -14.62531566619873

Token 776: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.032283395528793335
    2. '):' → logprob: -4.157283306121826
    3. ':' → logprob: -4.282283306121826
    4. ':
' → logprob: -6.157283306121826
    5. '):
' → logprob: -9.532283782958984
    6. '       ' → logprob: -9.782283782958984
    7. '           ' → logprob: -10.782283782958984
    8. ']:
' → logprob: -11.657283782958984
    9. '   ' → logprob: -11.782283782958984
    10. ',' → logprob: -11.782283782958984

Token 777: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059382885694503784
    2. '       ' → logprob: -3.434382915496826
    3. ':
' → logprob: -4.309382915496826
    4. '   ' → logprob: -5.559382915496826
    5. ':' → logprob: -5.934382915496826
    6. '               ' → logprob: -6.309382915496826
    7. '```' → logprob: -6.934382915496826
    8. '          ' → logprob: -7.934382915496826
    9. ' :
' → logprob: -8.309382438659668
    10. '                   ' → logprob: -8.309382438659668

Token 778: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' (adapté à ' eid') → logprob: -0.007266916800290346
    2. 'in' → logprob: -5.507266998291016
    3. ' eid' → logprob: -6.632266998291016
    4. 'ei' → logprob: -7.257266998291016
    5. 'e' → logprob: -7.507266998291016
    6. '   ' → logprob: -7.882266998291016
    7. 'if' → logprob: -9.382266998291016
    8. '           ' → logprob: -10.632266998291016
    9. '       ' → logprob: -10.757266998291016
    10. 'idx' → logprob: -10.757266998291016

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1732606440782547
    2. ' =' → logprob: -2.2982606887817383
    3. '[' → logprob: -3.4232606887817383
    4. '[e' → logprob: -4.173260688781738
    5. '[v' → logprob: -4.923260688781738
    6. '[
' → logprob: -6.923260688781738
    7. '=[' → logprob: -7.298260688781738
    8. ']' → logprob: -8.298260688781738
    9. '=v' → logprob: -8.298260688781738
    10. '=
' → logprob: -8.423260688781738

Token 780: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.20141363143920898
    2. ' parent' → logprob: -1.701413631439209
    3. '	parent' → logprob: -15.701414108276367
    4. '[parent' → logprob: -16.201414108276367
    5. '(parent' → logprob: -16.326414108276367
    6. '.parent' → logprob: -16.951414108276367
    7. '_parent' → logprob: -18.701414108276367
    8. 'Parent' → logprob: -19.451414108276367
    9. ',parent' → logprob: -19.451414108276367
    10. '   ' → logprob: -20.326414108276367

Token 781: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.941850526549388e-06
    2. '_edges' → logprob: -13.125007629394531
    3. '_e' → logprob: -13.500007629394531
    4. '[_' → logprob: -14.000007629394531
    5. '
' → logprob: -14.500007629394531
    6. '_' → logprob: -14.500007629394531
    7. 'edge' → logprob: -14.875007629394531
    8. '[' → logprob: -15.250007629394531
    9. '_EDGE' → logprob: -15.375007629394531
    10. '```' → logprob: -15.375007629394531

Token 782: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.4987974029500037e-05
    2. 'v' → logprob: -10.750024795532227
    3. '[' → logprob: -13.250024795532227
    4. '[e' → logprob: -13.625024795532227
    5. ' [' → logprob: -15.875024795532227
    6. '[
' → logprob: -16.250024795532227
    7. '   ' → logprob: -16.250024795532227
    8. '```' → logprob: -16.625024795532227
    9. '	v' → logprob: -16.750024795532227
    10. '<v' → logprob: -17.875024795532227

Token 783: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038391903042793274
    2. ']
' → logprob: -3.2883918285369873
    3. ']:
' → logprob: -8.913392066955566
    4. ']==' → logprob: -9.413392066955566
    5. '           ' → logprob: -10.163392066955566
    6. ' ]' → logprob: -10.788392066955566
    7. ']>' → logprob: -11.163392066955566
    8. ')' → logprob: -11.163392066955566
    9. ']!=' → logprob: -11.163392066955566
    10. ']<' → logprob: -12.288392066955566

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017539622262120247
    2. ' if' → logprob: -4.6425395011901855
    3. '       ' → logprob: -6.0175395011901855
    4. '               ' → logprob: -6.1425395011901855
    5. ':
' → logprob: -7.1425395011901855
    6. '   ' → logprob: -7.3925395011901855
    7. '[' → logprob: -8.267539978027344
    8. '=True' → logprob: -8.767539978027344
    9. '          ' → logprob: -8.892539978027344
    10. ':' → logprob: -8.892539978027344

Token 785: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.32298743724823
    2. 'True' → logprob: -1.44798743724823
    3. 'in' → logprob: -1.69798743724823
    4. ' True' → logprob: -1.82298743724823
    5. ' in' → logprob: -2.5729875564575195
    6. 'if' (adapté à ' if') → logprob: -2.9479875564575195
    7. '           ' → logprob: -4.5729875564575195
    8. '   ' → logprob: -4.6979875564575195
    9. ' e' → logprob: -7.0729875564575195
    10. ' 
' → logprob: -7.1979875564575195

Token 786: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.14278367161750793
    2. ' eid' → logprob: -2.0177836418151855
    3. '   ' → logprob: -9.892784118652344
    4. 'e' → logprob: -10.392784118652344
    5. ' ' → logprob: -12.017784118652344
    6. 'ei' → logprob: -12.517784118652344
    7. '    ' → logprob: -13.267784118652344
    8. ' -' → logprob: -13.392784118652344
    9. '-' → logprob: -13.642784118652344
    10. '       ' → logprob: -14.142784118652344

Token 787: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5514490008354187
    2. '!=' → logprob: -0.9264490008354187
    3. '!=-' → logprob: -3.6764490604400635
    4. '[' → logprob: -6.926448822021484
    5. '>' → logprob: -7.176448822021484
    6. '>=' → logprob: -8.051448822021484
    7. '==' → logprob: -8.926448822021484
    8. ')' → logprob: -9.926448822021484
    9. ' ==' → logprob: -9.926448822021484
    10. ']' → logprob: -10.051448822021484

Token 788: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033546582562848926
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.375335693359375
    4. ' ' → logprob: -19.000335693359375
    5. '           ' → logprob: -19.750335693359375
    6. '=' → logprob: -20.375335693359375
    7. '−' → logprob: -20.375335693359375
    8. '
' → logprob: -21.000335693359375
    9. '	' → logprob: -21.125335693359375
    10. '  ' → logprob: -21.125335693359375

Token 789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '2' → logprob: -17.5
    4. '```' → logprob: -18.375
    5. '0' → logprob: -18.75
    6. ' -' → logprob: -19.125
    7. '=' → logprob: -19.625
    8. '`' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. '-' → logprob: -19.9375

Token 790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5802892446517944
    2. ':' → logprob: -0.8302892446517944
    3. '               ' → logprob: -5.830289363861084
    4. '           ' → logprob: -6.830289363861084
    5. ' and' → logprob: -8.830288887023926
    6. '):
' → logprob: -9.705288887023926
    7. '       ' → logprob: -11.080288887023926
    8. '                   ' → logprob: -11.330288887023926
    9. '                       ' → logprob: -11.455288887023926
    10. ':
' → logprob: -11.455288887023926

Token 791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0749751478433609
    2. ' in' → logprob: -2.6999752521514893
    3. 'in' → logprob: -5.82497501373291
    4. '           ' → logprob: -6.44997501373291
    5. '                   ' → logprob: -8.19997501373291
    6. '   ' → logprob: -9.94997501373291
    7. '       ' → logprob: -10.07497501373291
    8. '[in' → logprob: -10.19997501373291
    9. '                       ' → logprob: -10.57497501373291
    10. '	in' → logprob: -10.94997501373291

Token 792: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5273860096931458
    2. 'in' (adapté à ' in') → logprob: -0.9023860096931458
    3. '               ' → logprob: -5.52738618850708
    4. '   ' → logprob: -8.902385711669922
    5. '           ' → logprob: -9.777385711669922
    6. '                   ' → logprob: -10.027385711669922
    7. '	in' → logprob: -10.777385711669922
    8. ' ' → logprob: -12.402385711669922
    9. '[in' → logprob: -12.652385711669922
    10. '       ' → logprob: -12.652385711669922

Token 793: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -8.876193169271573e-05
    2. '_' → logprob: -10.000088691711426
    3. '_t' → logprob: -11.250088691711426
    4. 'tree' → logprob: -11.250088691711426
    5. 'in' → logprob: -12.750088691711426
    6. 'tre' → logprob: -13.500088691711426
    7. '_TREE' → logprob: -13.625088691711426
    8. ' _' → logprob: -13.625088691711426
    9. '
' → logprob: -13.750088691711426
    10. 'Tree' → logprob: -13.875088691711426

Token 794: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.003672282909974456
    2. '[v' → logprob: -5.628672122955322
    3. '[' → logprob: -9.62867259979248
    4. '[
' → logprob: -13.62867259979248
    5. '
' → logprob: -14.37867259979248
    6. '[i' → logprob: -14.50367259979248
    7. '\[' → logprob: -14.50367259979248
    8. '```' → logprob: -14.50367259979248
    9. 'v' → logprob: -14.62867259979248
    10. ' [' → logprob: -14.62867259979248

Token 795: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.16122296452522278
    2. 'd' → logprob: -1.9112229347229004
    3. '[v' → logprob: -7.5362229347229
    4. '[' → logprob: -8.911223411560059
    5. 'v' → logprob: -9.161223411560059
    6. '   ' → logprob: -10.661223411560059
    7. ']' → logprob: -10.911223411560059
    8. '=' → logprob: -10.911223411560059
    9. 'i' → logprob: -11.036223411560059
    10. '[id' → logprob: -11.286223411560059

Token 796: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5065767168998718
    2. '=' → logprob: -1.0065767765045166
    3. ' =' → logprob: -3.5065767765045166
    4. ']=' → logprob: -6.2565765380859375
    5. '=True' → logprob: -10.381576538085938
    6. ' ]' → logprob: -10.756576538085938
    7. ')' → logprob: -12.381576538085938
    8. '           ' → logprob: -14.006576538085938
    9. '[' → logprob: -14.006576538085938
    10. ']
' → logprob: -15.006576538085938

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164921827614307
    2. ' =' → logprob: -4.264164924621582
    3. '=True' → logprob: -13.514164924621582
    4. '=
' → logprob: -17.389163970947266
    5. ' ' → logprob: -18.389163970947266
    6. '[' → logprob: -18.889163970947266
    7. ']' → logprob: -19.014163970947266
    8. '           ' → logprob: -19.139163970947266
    9. '       ' → logprob: -19.139163970947266
    10. '   ' → logprob: -19.264163970947266

Token 798: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009114635176956654
    2. ' True' → logprob: -7.000911235809326
    3. '(True' → logprob: -20.250911712646484
    4. '=True' → logprob: -20.500911712646484
    5. 'Tr' → logprob: -20.625911712646484
    6. 'T' → logprob: -21.875911712646484
    7. 'true' → logprob: -22.875911712646484
    8. '1' → logprob: -22.875911712646484
    9. '.True' → logprob: -24.125911712646484
    10. '   ' → logprob: -24.375911712646484

Token 799: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10287710279226303
    2. '<|end|>' → logprob: -2.352877140045166
    3. '       ' → logprob: -6.352877140045166
    4. '<|end|>' → logprob: -7.727877140045166
    5. '        
' → logprob: -8.477876663208008
    6. '

' → logprob: -9.727876663208008
    7. '
' → logprob: -10.227876663208008
    8. '#' → logprob: -10.227876663208008
    9. '  
' → logprob: -10.977876663208008
    10. ' 
' → logprob: -11.227876663208008

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04227107763290405
    2. '#' → logprob: -4.167271137237549
    3. 'for' → logprob: -4.417271137237549
    4. '
' → logprob: -4.667271137237549
    5. '        
' → logprob: -5.792271137237549
    6. '```' → logprob: -7.542271137237549
    7. 'edges' → logprob: -9.16727066040039
    8. '    
' → logprob: -9.29227066040039
    9. '   ' → logprob: -9.29227066040039
    10. 'result' → logprob: -9.66727066040039

Token 801: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1480172872543335
    2. 'edge' → logprob: -1.5230172872543335
    3. 'increment' → logprob: -2.273017406463623
    4. 'cost' → logprob: -3.148017406463623
    5. 'dp' → logprob: -3.148017406463623
    6. 'for' → logprob: -3.148017406463623
    7. 'raise' → logprob: -3.398017406463623
    8. 'res' → logprob: -3.523017406463623
    9. 'answer' → logprob: -4.023017406463623
    10. 'new' → logprob: -4.023017406463623

Token 802: ' Step' (ID: 22291)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.6701663732528687
    2. '#' → logprob: -1.9201663732528687
    3. 'raise' → logprob: -2.545166492462158
    4. 'increment' → logprob: -3.045166492462158
    5. 'for' → logprob: -3.295166492462158
    6. 'cost' → logprob: -3.420166492462158
    7. 'dp' → logprob: -4.420166492462158
    8. 'increments' → logprob: -4.545166492462158
    9. 'res' → logprob: -4.795166492462158
    10. 'total' → logprob: -4.795166492462158

Token 803: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1106044054031372
    2. '       ' → logprob: -1.4856044054031372
    3. '4' → logprob: -1.6106044054031372
    4. ' ' → logprob: -2.4856042861938477
    5. '   ' → logprob: -2.8606042861938477
    6. '```' → logprob: -3.8606042861938477
    7. ' #' → logprob: -4.110604286193848
    8. '#' → logprob: -4.110604286193848
    9. '_' → logprob: -4.860604286193848
    10. '[' → logprob: -5.235604286193848

Token 804: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5518143773078918
    2. '5' → logprob: -1.801814317703247
    3. '6' → logprob: -3.051814317703247
    4. '7' → logprob: -3.176814317703247
    5. '```' → logprob: -3.426814317703247
    6. 'for' → logprob: -3.676814317703247
    7. '       ' → logprob: -3.801814317703247
    8. '3' → logprob: -3.926814317703247
    9. '   ' → logprob: -3.926814317703247
    10. '2' → logprob: -4.301814556121826

Token 805: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4399445950984955
    2. '       ' → logprob: -1.0649446249008179
    3. '
' → logprob: -5.564944744110107
    4. ' =' → logprob: -6.064944744110107
    5. ':
' → logprob: -6.814944744110107
    6. 'for' → logprob: -7.439944744110107
    7. '#' → logprob: -7.564944744110107
    8. ' for' → logprob: -7.814944744110107
    9. '        
' → logprob: -7.939944744110107
    10. 'def' → logprob: -7.939944744110107

Token 806: ' Initialize' (ID: 19496)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5973060131072998
    2. 'increment' → logprob: -2.2223060131073
    3. '#' → logprob: -3.0973060131073
    4. 'answer' → logprob: -3.3473060131073
    5. 'cost' → logprob: -3.3473060131073
    6. 'res' → logprob: -3.7223060131073
    7. 'increments' → logprob: -3.9723060131073
    8. 'affected' → logprob: -4.222306251525879
    9. 'dp' → logprob: -4.347306251525879
    10. 'total' → logprob: -4.347306251525879

Token 807: ' dissatisfaction' (ID: 183931)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4364336431026459
    2. 'increment' → logprob: -2.4364335536956787
    3. 'import' → logprob: -3.1864335536956787
    4. 'dp' → logprob: -3.5614335536956787
    5. 'increments' → logprob: -3.5614335536956787
    6. 'dist' → logprob: -3.6864335536956787
    7. 'fare' → logprob: -4.311433792114258
    8. 'in' → logprob: -4.311433792114258
    9. 'raise' → logprob: -4.436433792114258
    10. 'delta' → logprob: -4.561433792114258

Token 808: ' counts' (ID: 28991)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998778879642487
    2. '=' → logprob: -2.8199877738952637
    3. '_' → logprob: -6.194987773895264
    4. '_score' → logprob: -6.444987773895264
    5. '_d' → logprob: -6.569987773895264
    6. 's' → logprob: -6.694987773895264
    7. '_scores' → logprob: -7.569987773895264
    8. '_s' → logprob: -8.444988250732422
    9. '_level' → logprob: -8.569988250732422
    10. 'd' → logprob: -8.944988250732422

Token 809: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8108111023902893
    2. 'd' → logprob: -1.0608110427856445
    3. '
' → logprob: -2.0608110427856445
    4. 'dis' → logprob: -3.6858110427856445
    5. 'counts' → logprob: -4.3108110427856445
    6. 'self' → logprob: -4.4358110427856445
    7. 'count' → logprob: -4.6858110427856445
    8. ' =' → logprob: -4.6858110427856445
    9. '=' → logprob: -6.5608110427856445
    10. '        
' → logprob: -6.5608110427856445

Token 810: ' year' (ID: 1284)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.04083327203989029
    2. ' edge' → logprob: -4.165833473205566
    3. 'node' → logprob: -4.540833473205566
    4. 'query' → logprob: -5.415833473205566
    5. 'e' → logprob: -6.165833473205566
    6. ' node' → logprob: -6.790833473205566
    7. 'u' → logprob: -6.790833473205566
    8. 'q' → logprob: -7.540833473205566
    9. '=' → logprob: -8.165833473205566
    10. 'eid' → logprob: -8.165833473205566

Token 811: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1486542522907257
    2. 'd' → logprob: -2.3986542224884033
    3. 'self' → logprob: -3.3986542224884033
    4. 'counts' → logprob: -4.898654460906982
    5. 'dis' → logprob: -5.648654460906982
    6. 'count' → logprob: -6.273654460906982
    7. 'year' → logprob: -8.648653984069824
    8. '```' → logprob: -9.023653984069824
    9. '   ' → logprob: -9.148653984069824
    10. ' dissatisfaction' → logprob: -9.523653984069824

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13123588263988495
    2. 'd' → logprob: -2.6312358379364014
    3. 'dis' → logprob: -4.5062360763549805
    4. 'counts' → logprob: -4.5062360763549805
    5. ' dissatisfaction' → logprob: -5.2562360763549805
    6. ' counts' → logprob: -5.2562360763549805
    7. 'count' → logprob: -5.3812360763549805
    8. ' dis' → logprob: -5.5062360763549805
    9. 'self' → logprob: -6.3812360763549805
    10. '
' → logprob: -6.5062360763549805

Token 813: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14577768743038177
    2. 'self' → logprob: -3.145777702331543
    3. 'dis' → logprob: -3.270777702331543
    4. '       ' → logprob: -3.645777702331543
    5. 'counts' → logprob: -4.895777702331543
    6. 'ans' → logprob: -5.770777702331543
    7. 'uns' → logprob: -6.020777702331543
    8. 'un' → logprob: -6.145777702331543
    9. 'count' → logprob: -6.270777702331543
    10. 'year' → logprob: -6.270777702331543

Token 814: ' Initially' (ID: 96924)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16959248483181
    2. 'self' → logprob: -2.2945923805236816
    3. '       ' → logprob: -3.5445923805236816
    4. 'dis' → logprob: -4.044592380523682
    5. 'counts' → logprob: -6.169592380523682
    6. 'uns' → logprob: -7.044592380523682
    7. 'year' → logprob: -7.294592380523682
    8. 'un' → logprob: -7.419592380523682
    9. 'ans' → logprob: -7.419592380523682
    10. 'count' → logprob: -7.544592380523682

Token 815: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7895007133483887
    2. '       ' → logprob: -0.9145007133483887
    3. 'd' → logprob: -2.6645007133483887
    4. ' self' → logprob: -3.0395007133483887
    5. ' dissatisfaction' → logprob: -4.539500713348389
    6. ' dis' → logprob: -5.914500713348389
    7. '```' → logprob: -5.914500713348389
    8. 'dis' → logprob: -6.414500713348389
    9. ' dissatisfied' → logprob: -6.539500713348389
    10. 's' → logprob: -6.664500713348389

Token 816: ' no' (ID: 860)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1143653467297554
    2. 'self' → logprob: -3.614365339279175
    3. 'counts' → logprob: -4.239365577697754
    4. 'dis' → logprob: -4.614365577697754
    5. ' dissatisfaction' → logprob: -4.989365577697754
    6. 'total' → logprob: -4.989365577697754
    7. 'ans' → logprob: -5.239365577697754
    8. 'curr' → logprob: -5.364365577697754
    9. 'res' → logprob: -5.614365577697754
    10. 'current' → logprob: -5.614365577697754

Token 817: ' dissatisfaction' (ID: 183931)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9086713194847107
    2. 'd' → logprob: -1.1586713790893555
    3. ' dissatisfaction' → logprob: -2.1586713790893555
    4. '_d' → logprob: -3.1586713790893555
    5. 's' → logprob: -4.0336713790893555
    6. ' edges' → logprob: -4.4086713790893555
    7. 't' → logprob: -4.5336713790893555
    8. 'r' → logprob: -4.7836713790893555
    9. '_edge' → logprob: -5.0336713790893555
    10. '_edges' → logprob: -5.0336713790893555

Token 818: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9514895081520081
    2. 'd' → logprob: -1.0764894485473633
    3. 'self' → logprob: -1.4514894485473633
    4. '
' → logprob: -4.201489448547363
    5. 'counts' → logprob: -5.451489448547363
    6. ' self' → logprob: -5.701489448547363
    7. ' =' → logprob: -5.826489448547363
    8. 'dis' → logprob: -6.076489448547363
    9. 's' → logprob: -6.326489448547363
    10. '        
' → logprob: -6.576489448547363

Token 819: 'year' (ID: 5682)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8123400211334229
    2. 'self' → logprob: -1.6873400211334229
    3. ')' → logprob: -2.312340021133423
    4. 'counts' → logprob: -2.562340021133423
    5. ' self' → logprob: -3.437340021133423
    6. ' dissatisfaction' → logprob: -3.687340021133423
    7. ' counts' → logprob: -3.937340021133423
    8. '[' → logprob: -4.187339782714844
    9. '#' → logprob: -4.187339782714844
    10. 'dist' → logprob: -4.187339782714844

Token 820: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.851115882396698
    2. '=' → logprob: -0.976115882396698
    3. ' ' → logprob: -2.9761159420013428
    4. '0' → logprob: -3.1011159420013428
    5. 's' → logprob: -3.4761159420013428
    6. '[' → logprob: -3.6011159420013428
    7. ':' → logprob: -4.101115703582764
    8. '_' → logprob: -4.476115703582764
    9. '_counts' → logprob: -5.851115703582764
    10. '_count' → logprob: -6.476115703582764

Token 821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0093472003936768
    2. '=' → logprob: -1.3843472003936768
    3. ' =' → logprob: -1.6343472003936768
    4. 's' → logprob: -2.3843472003936768
    5. ' ' → logprob: -3.0093472003936768
    6. '[' → logprob: -3.8843472003936768
    7. '_counts' → logprob: -5.009346961975098
    8. ':' → logprob: -6.009346961975098
    9. '_' → logprob: -6.259346961975098
    10. 'counts' → logprob: -6.384346961975098

Token 822: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031180528923869133
    2. ')
' → logprob: -4.156180381774902
    3. ' )' → logprob: -5.406180381774902
    4. ':' → logprob: -5.531180381774902
    5. ',' → logprob: -6.406180381774902
    6. '):' → logprob: -6.781180381774902
    7. ' is' → logprob: -6.906180381774902
    8. '),' → logprob: -7.781180381774902
    9. '):
' → logprob: -7.781180381774902
    10. ').' → logprob: -8.031180381774902

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8921222686767578
    2. 'd' → logprob: -1.0171222686767578
    3. 'self' → logprob: -2.142122268676758
    4. ' self' → logprob: -3.392122268676758
    5. 'dis' → logprob: -3.642122268676758
    6. ' dis' → logprob: -4.267122268676758
    7. ' diss' → logprob: -4.392122268676758
    8. ' dissatisfaction' → logprob: -5.142122268676758
    9. 'counts' → logprob: -5.642122268676758
    10. ' counts' → logprob: -5.892122268676758

Token 824: ' diss' (ID: 32434)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09443585574626923
    2. 'self' → logprob: -3.219435930252075
    3. 'dis' → logprob: -3.969435930252075
    4. '       ' → logprob: -4.219435691833496
    5. 'ans' → logprob: -5.844435691833496
    6. 'dp' → logprob: -6.219435691833496
    7. 'counts' → logprob: -6.969435691833496
    8. 'un' → logprob: -7.094435691833496
    9. 's' → logprob: -7.219435691833496
    10. 'count' → logprob: -7.344435691833496

Token 825: 'atisf' (ID: 7639)
  Prédit: 'atisfaction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfaction' → logprob: -0.017291849479079247
    2. '_counts' → logprob: -5.392292022705078
    3. 'atisf' → logprob: -5.392292022705078
    4. 'atisfied' → logprob: -6.017292022705078
    5. 's' → logprob: -6.392292022705078
    6. '_count' → logprob: -6.767292022705078
    7. 'counts' → logprob: -6.767292022705078
    8. 'count' → logprob: -7.642292022705078
    9. ' =' → logprob: -8.017292022705078
    10. 'atis' → logprob: -8.142292022705078

Token 826: 'actions' (ID: 6711)
  Prédit: 'action'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.0349123515188694
    2. 'y' → logprob: -4.409912586212158
    3. 'actions' → logprob: -4.784912586212158
    4. 'act' → logprob: -5.534912586212158
    5. 'ac' → logprob: -6.159912586212158
    6. 'ied' → logprob: -6.159912586212158
    7. '_' → logprob: -6.534912586212158
    8. '```' → logprob: -6.659912586212158
    9. '_action' → logprob: -7.409912586212158
    10. '[' → logprob: -8.159912109375

Token 827: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231720209121704
    2. '=' → logprob: -0.8981720209121704
    3. '[' → logprob: -10.398172378540039
    4. ',' → logprob: -12.148172378540039
    5. ' ' → logprob: -12.273172378540039
    6. '=[' → logprob: -13.148172378540039
    7. ' =[' → logprob: -13.398172378540039
    8. '_' → logprob: -13.898172378540039
    9. ':' → logprob: -13.898172378540039
    10. '=[]' → logprob: -14.273172378540039

Token 828: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013283335138112307
    2. '[]' → logprob: -7.876328468322754
    3. '{' → logprob: -8.126328468322754
    4. '[self' → logprob: -8.251328468322754
    5. '0' → logprob: -8.501328468322754
    6. '[[' → logprob: -10.001328468322754
    7. '{}' → logprob: -10.251328468322754
    8. ' [' → logprob: -11.001328468322754
    9. '[int' → logprob: -11.251328468322754
    10. '[len' → logprob: -11.501328468322754

Token 829: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021494273096323013
    2. '[' → logprob: -6.37714958190918
    3. 'self' → logprob: -8.37714958190918
    4. '[]' → logprob: -9.12714958190918
    5. '[self' → logprob: -10.75214958190918
    6. ']' → logprob: -11.12714958190918
    7. ' ' → logprob: -11.62714958190918
    8. '(' → logprob: -11.87714958190918
    9. '{' → logprob: -12.00214958190918
    10. 'float' → logprob: -12.25214958190918

Token 830: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011335337534546852
    2. ' for' → logprob: -4.761335372924805
    3. 'for' → logprob: -6.886335372924805
    4. ']*(' → logprob: -7.011335372924805
    5. ']*' → logprob: -7.511335372924805
    6. ' ]' → logprob: -9.261335372924805
    7. '   ' → logprob: -10.011335372924805
    8. ']
' → logprob: -10.511335372924805
    9. ']+' → logprob: -10.636335372924805
    10. ',' → logprob: -10.886335372924805

Token 831: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11266564577817917
    2. ' for' → logprob: -2.6126656532287598
    3. 'for' → logprob: -4.11266565322876
    4. ']*' → logprob: -5.48766565322876
    5. ' ]' → logprob: -5.86266565322876
    6. '
' → logprob: -5.98766565322876
    7. ' *' → logprob: -6.11266565322876
    8. '*' → logprob: -6.23766565322876
    9. ']*(' → logprob: -7.11266565322876
    10. '[' → logprob: -7.48766565322876

Token 832: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006220163311809301
    2. '(' → logprob: -5.13122034072876
    3. 'self' → logprob: -8.881219863891602
    4. '(max' → logprob: -9.631219863891602
    5. '(len' → logprob: -9.756219863891602
    6. ' (' → logprob: -11.881219863891602
    7. '((' → logprob: -12.631219863891602
    8. '100' → logprob: -13.506219863891602
    9. '(this' → logprob: -13.756219863891602
    10. '(sel' → logprob: -13.756219863891602

Token 833: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08331619203090668
    2. 'self' → logprob: -2.5833160877227783
    3. '(' → logprob: -5.458316326141357
    4. ' (' → logprob: -10.0833158493042
    5. '((' → logprob: -10.8333158493042
    6. '(len' → logprob: -11.0833158493042
    7. ' self' → logprob: -11.4583158493042
    8. '100' → logprob: -11.7083158493042
    9. '[self' → logprob: -11.8333158493042
    10. '(max' → logprob: -11.9583158493042

Token 834: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.001636024098843336
    2. 'self' → logprob: -6.751636028289795
    3. 'q' → logprob: -8.876635551452637
    4. '(self' → logprob: -9.126635551452637
    5. '(q' → logprob: -9.501635551452637
    6. '.n' → logprob: -10.376635551452637
    7. '.' → logprob: -10.501635551452637
    8. '(' → logprob: -10.501635551452637
    9. '.(' → logprob: -11.001635551452637
    10. '       ' → logprob: -11.501635551452637

Token 835: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04117869585752487
    2. ' +' → logprob: -3.4161787033081055
    3. ')' → logprob: -4.9161787033081055
    4. '+
' → logprob: -9.666178703308105
    5. ')]' → logprob: -10.291178703308105
    6. ' )' → logprob: -11.166178703308105
    7. '
' → logprob: -11.291178703308105
    8. '+)' → logprob: -11.541178703308105
    9. ']' → logprob: -11.666178703308105
    10. '   ' → logprob: -11.791178703308105

Token 836: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014537633978761733
    2. ' ' → logprob: -9.125144958496094
    3. '2' → logprob: -10.250144958496094
    4. '   ' → logprob: -14.125144958496094
    5. '7' → logprob: -16.875144958496094
    6. '10' → logprob: -16.875144958496094
    7. '5' → logprob: -17.750144958496094
    8. '(' → logprob: -18.000144958496094
    9. '
' → logprob: -18.125144958496094
    10. '6' → logprob: -18.125144958496094

Token 837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004365102213341743
    2. '2' → logprob: -7.750436305999756
    3. ' ' → logprob: -12.250436782836914
    4. '10' → logprob: -15.125436782836914
    5. '   ' → logprob: -15.375436782836914
    6. '(' → logprob: -15.875436782836914
    7. '7' → logprob: -16.125436782836914
    8. '5' → logprob: -16.125436782836914
    9. '
' → logprob: -16.500436782836914
    10. '3' → logprob: -17.062936782836914

Token 838: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011009939044015482
    2. ')
' → logprob: -9.250109672546387
    3. '       ' → logprob: -11.500109672546387
    4. ' )' → logprob: -13.375109672546387
    5. ']' → logprob: -13.625109672546387
    6. ')]' → logprob: -15.000109672546387
    7. '
' → logprob: -15.000109672546387
    8. '),' → logprob: -16.500110626220703
    9. '   ' → logprob: -16.750110626220703
    10. ')
' → logprob: -16.875110626220703

Token 839: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3697422742843628
    2. '       ' → logprob: -1.2447422742843628
    3. '        
' → logprob: -5.119742393493652
    4. '<|end|>' → logprob: -5.744742393493652
    5. '\n' → logprob: -6.244742393493652
    6. '#' → logprob: -6.619742393493652
    7. '\' → logprob: -6.619742393493652
    8. ' for' → logprob: -6.744742393493652
    9. '' → logprob: -6.869742393493652
    10. 'for' → logprob: -7.119742393493652

Token 840: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3453023433685303
    2. '       ' → logprob: -1.3453023433685303
    3. 'for' → logprob: -4.720302581787109
    4. '#' → logprob: -5.470302581787109
    5. '\n' → logprob: -5.720302581787109
    6. '        
' → logprob: -5.970302581787109
    7. '' → logprob: -6.095302581787109
    8. ',' → logprob: -6.345302581787109
    9. ' for' → logprob: -6.470302581787109
    10. '\' → logprob: -6.720302581787109

Token 841: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5067448616027832
    2. '
' → logprob: -2.381744861602783
    3. '\n' → logprob: -2.381744861602783
    4. '0' → logprob: -3.131744861602783
    5. '        
' → logprob: -3.131744861602783
    6. ')' → logprob: -3.381744861602783
    7. ' 
' → logprob: -3.506744861602783
    8. 'd' → logprob: -4.381744861602783
    9. '1' → logprob: -4.506744861602783
    10. '#' → logprob: -5.131744861602783

Token 842: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7055225372314453
    2. '#' → logprob: -1.2055225372314453
    3. '1' → logprob: -2.3305225372314453
    4. '0' → logprob: -3.0805225372314453
    5. '
' → logprob: -3.4555225372314453
    6. 'q' → logprob: -4.455522537231445
    7. '+' → logprob: -4.955522537231445
    8. '(self' → logprob: -5.455522537231445
    9. ')' → logprob: -6.205522537231445
    10. '       ' → logprob: -6.580522537231445

Token 843: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4449179172515869
    2. ']' → logprob: -1.444917917251587
    3. '-' → logprob: -2.944917917251587
    4. '[' → logprob: -3.569917917251587
    5. ' -' → logprob: -5.069917678833008
    6. ' )' → logprob: -5.069917678833008
    7. '#' → logprob: -5.444917678833008
    8. '0' → logprob: -5.819917678833008
    9. ' ]' → logprob: -5.819917678833008
    10. '-based' → logprob: -5.944917678833008

Token 844: ' year' (ID: 1284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 845: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4440193176269531
    2. '<|end|>' → logprob: -1.3190193176269531
    3. '
' → logprob: -2.819019317626953
    4. '        
' → logprob: -4.319019317626953
    5. ')' → logprob: -4.944019317626953
    6. '<|end|>' → logprob: -5.819019317626953
    7. '#' → logprob: -6.819019317626953
    8. '        ' → logprob: -7.194019317626953
    9. ',' → logprob: -7.444019317626953
    10. 'for' → logprob: -7.569019317626953

Token 846: ' diss' (ID: 32434)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4359198808670044
    2. 'd' → logprob: -1.5609198808670044
    3. '       ' → logprob: -1.6859198808670044
    4. ' for' → logprob: -2.560919761657715
    5. '
' → logprob: -2.935919761657715
    6. ' #' → logprob: -2.935919761657715
    7. 'for' → logprob: -3.685919761657715
    8. ' year' → logprob: -4.435919761657715
    9. ' total' → logprob: -4.685919761657715
    10. ' prev' → logprob: -4.810919761657715

Token 847: 'atisf' (ID: 7639)
  Prédit: 'atisf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.0028052295092493296
    2. 'atis' → logprob: -6.252805233001709
    3. 'atisfaction' → logprob: -7.502805233001709
    4. 's' → logprob: -9.25280475616455
    5. 'at' → logprob: -9.75280475616455
    6. 'a' → logprob: -10.12780475616455
    7. ' satisf' → logprob: -10.37780475616455
    8. 'atisfied' → logprob: -10.50280475616455
    9. '_' → logprob: -10.87780475616455
    10. 'ati' → logprob: -11.12780475616455

Token 848: 'actions' (ID: 6711)
  Prédit: 'actions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.005957949440926313
    2. 'ations' → logprob: -5.755958080291748
    3. 'acions' → logprob: -7.380958080291748
    4. '_actions' → logprob: -7.755958080291748
    5. '_' → logprob: -8.00595760345459
    6. '#' → logprob: -8.13095760345459
    7. '
' → logprob: -8.63095760345459
    8. 'act' → logprob: -8.88095760345459
    9. 'ections' → logprob: -9.00595760345459
    10. '```' → logprob: -9.13095760345459

Token 849: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03367820754647255
    2. ' =' → logprob: -3.9086782932281494
    3. '=' → logprob: -4.65867805480957
    4. ' is' → logprob: -7.65867805480957
    5. '_per' → logprob: -8.03367805480957
    6. ' will' → logprob: -8.40867805480957
    7. '```' → logprob: -8.65867805480957
    8. '_' → logprob: -8.65867805480957
    9. 'per' → logprob: -8.78367805480957
    10. '=[' → logprob: -8.78367805480957

Token 850: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08254757523536682
    2. '=' → logprob: -3.832547664642334
    3. '[' → logprob: -3.832547664642334
    4. ']=' → logprob: -3.832547664642334
    5. ' ]' → logprob: -5.457547664642334
    6. ' =' → logprob: -5.707547664642334
    7. ']+=' → logprob: -5.832547664642334
    8. '+' → logprob: -7.082547664642334
    9. '-' → logprob: -7.207547664642334
    10. '+=' → logprob: -7.582547664642334

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020031986758112907
    2. ' =' → logprob: -4.645031929016113
    3. '+=' → logprob: -5.395031929016113
    4. '<|end|>' → logprob: -5.770031929016113
    5. '[' → logprob: -6.645031929016113
    6. ' +=' → logprob: -8.020031929016113
    7. '=
' → logprob: -9.270031929016113
    8. ']' → logprob: -9.395031929016113
    9. '<|end|>' → logprob: -9.645031929016113
    10. ')' → logprob: -9.645031929016113

Token 852: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006550289690494537
    2. 'self' → logprob: -6.006550312042236
    3. 'd' → logprob: -6.381550312042236
    4. 'number' → logprob: -6.631550312042236
    5. ' ' → logprob: -7.756550312042236
    6. '[]' → logprob: -9.256549835205078
    7. ' number' → logprob: -9.381549835205078
    8. 'the' → logprob: -9.381549835205078
    9. 'sum' → logprob: -9.506549835205078
    10. ' self' → logprob: -10.006549835205078

Token 853: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6486204266548157
    2. '[' → logprob: -1.898620367050171
    3. '=' → logprob: -2.523620367050171
    4. ' +=' → logprob: -2.898620367050171
    5. '+=' → logprob: -3.273620367050171
    6. ' of' → logprob: -3.898620367050171
    7. ' =' → logprob: -3.898620367050171
    8. 'of' → logprob: -4.14862060546875
    9. 'for' → logprob: -4.14862060546875
    10. '       ' → logprob: -4.27362060546875

Token 854: ' year' (ID: 1284)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.42636117339134216
    2. ' j' → logprob: -1.3013612031936646
    3. ' q' → logprob: -4.051361083984375
    4. ' self' → logprob: -4.551361083984375
    5. 'self' → logprob: -4.676361083984375
    6. '[j' → logprob: -4.801361083984375
    7. 'q' → logprob: -4.926361083984375
    8. ' range' → logprob: -5.676361083984375
    9. ' year' → logprob: -5.676361083984375
    10. ' [' → logprob: -6.051361083984375

Token 855: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25768160820007324
    2. ' j' → logprob: -1.5076816082000732
    3. '0' → logprob: -6.007681846618652
    4. '   ' → logprob: -6.257681846618652
    5. '[j' → logprob: -7.882681846618652
    6. '[' → logprob: -8.382681846618652
    7. ' ' → logprob: -8.632681846618652
    8. '```' → logprob: -9.007681846618652
    9. '`' → logprob: -9.257681846618652
    10. '=' → logprob: -9.382681846618652

Token 856: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29724574089050293
    2. '       ' → logprob: -1.672245740890503
    3. '<|end|>' → logprob: -3.172245740890503
    4. ')' → logprob: -4.297245979309082
    5. '        
' → logprob: -5.047245979309082
    6. ',' → logprob: -6.297245979309082
    7. '#' → logprob: -6.922245979309082
    8. '
' → logprob: -7.797245979309082
    9. '<|end|>' → logprob: -7.922245979309082
    10. '\n' → logprob: -7.922245979309082

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040535107254981995
    2. '#' → logprob: -4.540534973144531
    3. 'current' → logprob: -5.040534973144531
    4. '        
' → logprob: -5.665534973144531
    5. ',' → logprob: -6.165534973144531
    6. 'for' → logprob: -6.290534973144531
    7. '
' → logprob: -6.290534973144531
    8. '```' → logprob: -6.665534973144531
    9. 'edges' → logprob: -6.790534973144531
    10. 'year' → logprob: -6.790534973144531

Token 858: ' #' (ID: 1069)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.1652700901031494
    2. 'for' → logprob: -1.2902700901031494
    3. '#' (adapté à ' #') → logprob: -2.5402700901031494
    4. 'increment' → logprob: -2.6652700901031494
    5. '       ' → logprob: -3.0402700901031494
    6. 'inc' → logprob: -3.4152700901031494
    7. 'year' → logprob: -3.5402700901031494
    8. 'raise' → logprob: -3.7902700901031494
    9. 'increments' → logprob: -4.41526985168457
    10. 'weight' → logprob: -4.54026985168457

Token 859: ' Step' (ID: 22291)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9277753829956055
    2. 'edge' → logprob: -1.4277753829956055
    3. 'increment' → logprob: -2.5527753829956055
    4. 'raise' → logprob: -2.8027753829956055
    5. 'increments' → logprob: -3.5527753829956055
    6. 'current' → logprob: -3.8027753829956055
    7. '#' → logprob: -3.9277753829956055
    8. 'd' → logprob: -4.0527753829956055
    9. 'year' → logprob: -4.1777753829956055
    10. 'inc' → logprob: -4.3027753829956055

Token 860: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6358555555343628
    2. ':' → logprob: -2.2608556747436523
    3. '       ' → logprob: -2.2608556747436523
    4. '=' → logprob: -2.6358556747436523
    5. ' ' → logprob: -2.7608556747436523
    6. '   ' → logprob: -3.1358556747436523
    7. ' =' → logprob: -3.5108556747436523
    8. '_' → logprob: -4.135855674743652
    9. '6' → logprob: -5.010855674743652
    10. '1' → logprob: -5.010855674743652

Token 861: '6' (ID: 21)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49949154257774353
    2. '=' → logprob: -1.624491572380066
    3. ':' → logprob: -2.6244914531707764
    4. '       ' → logprob: -3.6244914531707764
    5. '   ' → logprob: -3.7494914531707764
    6. '5' → logprob: -3.9994914531707764
    7. '#' → logprob: -4.1244916915893555
    8. ' =' → logprob: -4.6244916915893555
    9. '0' → logprob: -4.7494916915893555
    10. '1' → logprob: -5.2494916915893555

Token 862: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02335379272699356
    2. ':' → logprob: -4.398353576660156
    3. ' =' → logprob: -5.648353576660156
    4. '=' → logprob: -5.898353576660156
    5. 'for' → logprob: -6.398353576660156
    6. '
' → logprob: -7.148353576660156
    7. '   ' → logprob: -8.023353576660156
    8. '        
' → logprob: -8.398353576660156
    9. 'weight' → logprob: -8.648353576660156
    10. '#' → logprob: -8.773353576660156

Token 863: ' We' (ID: 1416)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.8776906728744507
    2. 'for' → logprob: -1.5026906728744507
    3. 'increments' → logprob: -2.3776907920837402
    4. '#' → logprob: -2.7526907920837402
    5. 'import' → logprob: -3.0026907920837402
    6. 'increment' → logprob: -3.1276907920837402
    7. 'from' → logprob: -3.6276907920837402
    8. 'raise' → logprob: -4.50269079208374
    9. 'events' → logprob: -4.62769079208374
    10. 'year' → logprob: -4.75269079208374

Token 864: ' simulate' (ID: 66687)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.6415082216262817
    2. 'for' → logprob: -1.0165082216262817
    3. '       ' → logprob: -2.766508102416992
    4. '   ' → logprob: -3.766508102416992
    5. 'i' → logprob: -4.516508102416992
    6. ' for' → logprob: -5.641508102416992
    7. 'ights' → logprob: -5.891508102416992
    8. 'continue' → logprob: -6.016508102416992
    9. 'ght' → logprob: -7.141508102416992
    10. '#' → logprob: -7.391508102416992

Token 865: ' years' (ID: 2101)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33088111877441406
    2. '       ' → logprob: -1.830881118774414
    3. 'the' → logprob: -3.205881118774414
    4. 'for' → logprob: -3.705881118774414
    5. ' for' → logprob: -3.955881118774414
    6. '   ' → logprob: -4.580881118774414
    7. ' each' → logprob: -5.330881118774414
    8. ' self' → logprob: -5.455881118774414
    9. ' a' → logprob: -5.580881118774414
    10. 'self' → logprob: -6.205881118774414

Token 866: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8256150484085083
    2. ' for' → logprob: -1.2006150484085083
    3. ' =' → logprob: -2.2006149291992188
    4. '=' → logprob: -2.8256149291992188
    5. '       ' → logprob: -3.3256149291992188
    6. ',' → logprob: -3.7006149291992188
    7. ' ' → logprob: -4.575614929199219
    8. '   ' → logprob: -5.200614929199219
    9. '
' → logprob: -5.200614929199219
    10. '    ' → logprob: -6.200614929199219

Token 867: ' price' (ID: 3911)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4557918906211853
    2. ' for' → logprob: -1.20579195022583
    3. '
' → logprob: -4.45579195022583
    4. 'increment' → logprob: -4.95579195022583
    5. '       ' → logprob: -5.33079195022583
    6. 'import' → logprob: -5.45579195022583
    7. 'current' → logprob: -5.45579195022583
    8. 'answer' → logprob: -5.45579195022583
    9. 'result' → logprob: -5.70579195022583
    10. '#' → logprob: -5.70579195022583

Token 868: ' raises' (ID: 51090)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.9928826093673706
    2. 's' → logprob: -1.1178826093673706
    3. '_' → logprob: -1.4928826093673706
    4. ' =' → logprob: -3.24288272857666
    5. '_increment' → logprob: -4.99288272857666
    6. '   ' → logprob: -5.11788272857666
    7. '_raise' → logprob: -5.11788272857666
    8. '=' → logprob: -5.24288272857666
    9. '_changes' → logprob: -5.49288272857666
    10. '_updates' → logprob: -6.36788272857666

Token 869: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5239101648330688
    2. '       ' → logprob: -1.0239101648330688
    3. 'for' → logprob: -3.7739100456237793
    4. ' for' → logprob: -3.8989100456237793
    5. ':' → logprob: -6.398910045623779
    6. '        
' → logprob: -6.648910045623779
    7. ',' → logprob: -7.398910045623779
    8. '   ' → logprob: -7.773910045623779
    9. ':
' → logprob: -8.273910522460938
    10. '=' → logprob: -8.398910522460938

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9306287169456482
    2. ' for' → logprob: -1.180628776550293
    3. 'for' → logprob: -1.430628776550293
    4. 'year' → logprob: -3.930628776550293
    5. 'current' → logprob: -4.305628776550293
    6. ' year' → logprob: -4.805628776550293
    7. 'curr' → logprob: -5.555628776550293
    8. 'cur' → logprob: -5.680628776550293
    9. '
' → logprob: -6.055628776550293
    10. ' current' → logprob: -6.555628776550293

Token 871: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2104724645614624
    2. ' for' → logprob: -1.7104724645614624
    3. '       ' → logprob: -1.8354724645614624
    4. 'current' → logprob: -2.335472583770752
    5. 'year' → logprob: -2.960472583770752
    6. 'cur' → logprob: -2.960472583770752
    7. 'curr' → logprob: -3.210472583770752
    8. ' year' → logprob: -3.585472583770752
    9. ' current' → logprob: -3.710472583770752
    10. ' curr' → logprob: -4.710472583770752

Token 872: ' Each' (ID: 11555)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6768208742141724
    2. 'current' → logprob: -1.8018208742141724
    3. 'curr' → logprob: -1.9268208742141724
    4. 'cur' → logprob: -2.801820755004883
    5. 'year' → logprob: -2.801820755004883
    6. '       ' → logprob: -4.551820755004883
    7. ' for' → logprob: -4.676820755004883
    8. 'prev' → logprob: -4.926820755004883
    9. 'last' → logprob: -5.176820755004883
    10. 'raise' → logprob: -5.301820755004883

Token 873: ' price' (ID: 3911)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6805989146232605
    2. ' year' → logprob: -1.4305989742279053
    3. 'raise' → logprob: -2.1805989742279053
    4. 'year' → logprob: -2.5555989742279053
    5. ' for' → logprob: -3.5555989742279053
    6. 'for' → logprob: -4.305598735809326
    7. '_' → logprob: -5.180598735809326
    8. '   ' → logprob: -6.180598735809326
    9. '       ' → logprob: -6.180598735809326
    10. 'price' → logprob: -6.805598735809326

Token 874: ' increase' (ID: 7064)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7412261366844177
    2. '_raise' → logprob: -0.7412261366844177
    3. 'raise' → logprob: -3.7412261962890625
    4. ' raise' → logprob: -4.4912261962890625
    5. ' _' → logprob: -5.4912261962890625
    6. '_in' → logprob: -5.9912261962890625
    7. ' =' → logprob: -6.8662261962890625
    8. '   ' → logprob: -7.1162261962890625
    9. '_increment' → logprob: -7.1162261962890625
    10. '       ' → logprob: -7.2412261962890625

Token 875: ' changes' (ID: 6629)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11496803164482117
    2. ' for' → logprob: -3.9899680614471436
    3. ' is' → logprob: -3.9899680614471436
    4. ' =' → logprob: -4.2399678230285645
    5. '       ' → logprob: -4.4899678230285645
    6. 'for' → logprob: -5.3649678230285645
    7. 'in' → logprob: -5.4899678230285645
    8. '           ' → logprob: -5.7399678230285645
    9. ' raises' → logprob: -5.7399678230285645
    10. ' of' → logprob: -5.8649678230285645

Token 876: ' cost' (ID: 3097)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.08442477136850357
    2. ' the' → logprob: -3.0844247341156006
    3. 'an' → logprob: -4.83442497253418
    4. 'edge' → logprob: -4.95942497253418
    5. 'self' → logprob: -4.95942497253418
    6. 'distance' → logprob: -5.58442497253418
    7. 'one' → logprob: -6.20942497253418
    8. 'dist' → logprob: -6.20942497253418
    9. '       ' → logprob: -6.95942497253418
    10. '   ' → logprob: -7.08442497253418

Token 877: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1852604150772095
    2. 'of' → logprob: -1.5602604150772095
    3. '       ' → logprob: -1.9352604150772095
    4. 'on' → logprob: -2.31026029586792
    5. '=' → logprob: -2.56026029586792
    6. ' on' → logprob: -3.43526029586792
    7. ' =' → logprob: -3.56026029586792
    8. ' of' → logprob: -3.68526029586792
    9. 'for' → logprob: -3.81026029586792
    10. 'by' → logprob: -4.43526029586792

Token 878: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.9908497333526611
    2. 'an' → logprob: -1.1158497333526611
    3. 'edges' → logprob: -2.240849733352661
    4. 'the' → logprob: -2.615849733352661
    5. ' one' → logprob: -3.615849733352661
    6. 'some' → logprob: -3.740849733352661
    7. ' an' → logprob: -4.115849494934082
    8. 'in' → logprob: -4.240849494934082
    9. ' edges' → logprob: -4.490849494934082
    10. ' the' → logprob: -4.740849494934082

Token 879: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.013080351985991001
    2. 'edge' → logprob: -5.01308012008667
    3. ' ' → logprob: -6.26308012008667
    4. ' space' → logprob: -6.38808012008667
    5. '_edge' → logprob: -6.51308012008667
    6. ' of' → logprob: -7.63808012008667
    7. '_' → logprob: -8.763080596923828
    8. ' in' → logprob: -9.013080596923828
    9. '   ' → logprob: -9.138080596923828
    10. 'space' → logprob: -9.888080596923828

Token 880: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17342914640903473
    2. ' in' → logprob: -2.923429250717163
    3. ' for' → logprob: -3.298429250717163
    4. '        
' → logprob: -4.173429012298584
    5. 'for' → logprob: -4.298429012298584
    6. ',' → logprob: -4.298429012298584
    7. '.' → logprob: -4.923429012298584
    8. '           ' → logprob: -5.548429012298584
    9. '   ' → logprob: -6.173429012298584
    10. '
' → logprob: -6.673429012298584

Token 881: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013660696567967534
    2. ' ' → logprob: -6.626366138458252
    3. 'weight' → logprob: -10.876365661621094
    4. '   ' → logprob: -12.126365661621094
    5. '```' → logprob: -12.751365661621094
    6. '`' → logprob: -13.251365661621094
    7. 'cost' → logprob: -13.376365661621094
    8. 'old' → logprob: -13.876365661621094
    9. 'initial' → logprob: -13.876365661621094
    10. '
' → logprob: -14.126365661621094

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.277553620748222e-05
    2. ' ' → logprob: -11.375062942504883
    3. '   ' → logprob: -12.125062942504883
    4. '```' → logprob: -12.250062942504883
    5. 'self' → logprob: -12.375062942504883
    6. 'old' → logprob: -12.375062942504883
    7. '`' → logprob: -12.625062942504883
    8. 'initial' → logprob: -12.750062942504883
    9. 'previous' → logprob: -12.875062942504883
    10. 'current' → logprob: -13.000062942504883

Token 883: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2519581615924835
    2. 'to' → logprob: -1.5019581317901611
    3. '+' → logprob: -11.751957893371582
    4. '   ' → logprob: -12.626957893371582
    5. ' ->' → logprob: -12.751957893371582
    6. '<|end|>' → logprob: -12.751957893371582
    7. '->' → logprob: -13.251957893371582
    8. '
' → logprob: -13.251957893371582
    9. '<|end|>' → logprob: -13.876957893371582
    10. '    ' → logprob: -13.876957893371582

Token 884: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.0020742492051795e-05
    2. ' ' → logprob: -10.125049591064453
    3. '
' → logprob: -12.500049591064453
    4. '```' → logprob: -13.625049591064453
    5. '+' → logprob: -13.875049591064453
    6. '>' → logprob: -14.312549591064453
    7. '1' → logprob: -14.437549591064453
    8. ' +' → logprob: -15.125049591064453
    9. '   ' → logprob: -15.250049591064453
    10. '100' → logprob: -15.500049591064453

Token 885: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.183501293184236e-05
    2. ' ' → logprob: -10.00007152557373
    3. '1' → logprob: -12.25007152557373
    4. '100' → logprob: -12.75007152557373
    5. '
' → logprob: -12.87507152557373
    6. '

' → logprob: -13.81257152557373
    7. '+' → logprob: -13.81257152557373
    8. '>' → logprob: -13.87507152557373
    9. '(' → logprob: -13.87507152557373
    10. '   ' → logprob: -14.00007152557373

Token 886: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11767475306987762
    2. '
' → logprob: -2.4926748275756836
    3. ',' → logprob: -4.242674827575684
    4. '<|end|>' → logprob: -5.242674827575684
    5. '  
' → logprob: -6.117674827575684
    6. '        
' → logprob: -6.242674827575684
    7. ' for' → logprob: -7.242674827575684
    8. '   ' → logprob: -7.242674827575684
    9. '.' → logprob: -7.367674827575684
    10. '#' → logprob: -7.742674827575684

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6090219020843506
    2. 'for' → logprob: -1.9840219020843506
    3. 'curr' → logprob: -2.2340219020843506
    4. 'current' → logprob: -2.6090219020843506
    5. 'cur' → logprob: -2.7340219020843506
    6. 'year' → logprob: -4.10902214050293
    7. 'cost' → logprob: -4.23402214050293
    8. 'prev' → logprob: -4.73402214050293
    9. 'price' → logprob: -5.23402214050293
    10. ' for' → logprob: -5.23402214050293

Token 888: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5876413583755493
    2. '       ' → logprob: -1.7126413583755493
    3. ' for' → logprob: -1.7126413583755493
    4. 'current' → logprob: -3.0876412391662598
    5. 'curr' → logprob: -3.2126412391662598
    6. ' current' → logprob: -3.5876412391662598
    7. 'cur' → logprob: -3.7126412391662598
    8. ' curr' → logprob: -3.8376412391662598
    9. ' res' → logprob: -3.9626412391662598
    10. 'cost' → logprob: -3.9626412391662598

Token 889: ' Increasing' (ID: 120508)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1491963863372803
    2. 'for' → logprob: -1.6491963863372803
    3. 'edge' → logprob: -2.1491963863372803
    4. 'current' → logprob: -2.7741963863372803
    5. 'curr' → logprob: -2.7741963863372803
    6. 'cur' → logprob: -3.1491963863372803
    7. 'price' → logprob: -3.2741963863372803
    8. 'year' → logprob: -3.7741963863372803
    9. 'raise' → logprob: -3.7741963863372803
    10. 'd' → logprob: -4.524196624755859

Token 890: ' an' (ID: 448)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5599685311317444
    2. 'an' → logprob: -1.0599684715270996
    3. 'edge' → logprob: -3.8099684715270996
    4. ' the' → logprob: -4.0599684715271
    5. 'self' → logprob: -4.4349684715271
    6. 'in' → logprob: -4.6849684715271
    7. ' an' → logprob: -4.8099684715271
    8. 'cost' → logprob: -5.3099684715271
    9. 'one' → logprob: -5.6849684715271
    10. 'price' → logprob: -5.9349684715271

Token 891: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.13880375027656555
    2. 'edge' → logprob: -2.263803720474243
    3. ' in' → logprob: -3.763803720474243
    4. 'in' → logprob: -6.138803958892822
    5. ' existing' → logprob: -9.638803482055664
    6. '_edge' → logprob: -9.638803482055664
    7. 'existing' → logprob: -10.388803482055664
    8. 'e' → logprob: -10.513803482055664
    9. '#' → logprob: -11.013803482055664
    10. ' ' → logprob: -11.013803482055664

Token 892: ' on' (ID: 402)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3119441866874695
    2. ' in' → logprob: -1.8119442462921143
    3. ' that' → logprob: -3.1869442462921143
    4. 'that' → logprob: -3.6869442462921143
    5. ''s' → logprob: -4.186944007873535
    6. 'e' → logprob: -4.436944007873535
    7. '   ' → logprob: -5.936944007873535
    8. ' increases' → logprob: -6.686944007873535
    9. 'cost' → logprob: -6.936944007873535
    10. '_in' → logprob: -7.186944007873535

Token 893: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.005526865366846323
    2. ' the' → logprob: -5.380527019500732
    3. 'short' → logprob: -7.505527019500732
    4. ' shortest' → logprob: -8.505526542663574
    5. 'a' → logprob: -8.880526542663574
    6. 'tree' → logprob: -12.130526542663574
    7. '#' → logprob: -12.505526542663574
    8. 'in' → logprob: -13.130526542663574
    9. ' a' → logprob: -13.880526542663574
    10. 'path' → logprob: -14.505526542663574

Token 894: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.3486335575580597
    2. 'short' → logprob: -1.2236335277557373
    3. ' short' → logprob: -9.723633766174316
    4. '_short' → logprob: -10.473633766174316
    5. 'tree' → logprob: -11.098633766174316
    6. ''s' → logprob: -11.473633766174316
    7. ''' → logprob: -11.598633766174316
    8. 'spath' → logprob: -11.598633766174316
    9. ' ' → logprob: -11.723633766174316
    10. 'Shortest' → logprob: -11.848633766174316

Token 895: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6269791126251221
    2. 'path' → logprob: -0.8769791126251221
    3. ' path' → logprob: -3.001979112625122
    4. '_paths' → logprob: -10.501978874206543
    5. '   ' → logprob: -11.126978874206543
    6. '-path' → logprob: -12.001978874206543
    7. ' ' → logprob: -12.251978874206543
    8. '	path' → logprob: -12.376978874206543
    9. ' _' → logprob: -13.001978874206543
    10. 'paths' → logprob: -13.376978874206543

Token 896: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.8661832213401794
    2. ' in' → logprob: -1.9911832809448242
    3. '_' → logprob: -2.491183280944824
    4. '_tree' → logprob: -2.991183280944824
    5. 'tree' → logprob: -3.241183280944824
    6. ' that' → logprob: -3.366183280944824
    7. ' if' → logprob: -3.616183280944824
    8. '   ' → logprob: -3.616183280944824
    9. ',' → logprob: -3.866183280944824
    10. '       ' → logprob: -4.241183280944824

Token 897: ' increases' (ID: 21073)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1769704818725586
    2. '       ' → logprob: -1.5519704818725586
    3. ' will' → logprob: -1.9269704818725586
    4. 'if' → logprob: -3.0519704818725586
    5. ' in' → logprob: -3.1769704818725586
    6. ',' → logprob: -3.1769704818725586
    7. '#' → logprob: -3.3019704818725586
    8. ':' → logprob: -3.9269704818725586
    9. ':
' → logprob: -3.9269704818725586
    10. '<|end|>' → logprob: -4.301970481872559

Token 898: ' cost' (ID: 3097)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7058607935905457
    2. 'd' → logprob: -1.2058608531951904
    3. 'dist' → logprob: -2.4558608531951904
    4. 'distance' → logprob: -2.7058608531951904
    5. ' the' → logprob: -4.205860614776611
    6. 'its' → logprob: -5.080860614776611
    7. 'all' → logprob: -5.080860614776611
    8. 'total' → logprob: -5.205860614776611
    9. 'cost' → logprob: -5.455860614776611
    10. 'sub' → logprob: -5.580860614776611

Token 899: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6570521593093872
    2. ' by' → logprob: -0.9070521593093872
    3. '   ' → logprob: -3.2820520401000977
    4. 'by' → logprob: -4.532052040100098
    5. 'of' → logprob: -4.782052040100098
    6. '       ' → logprob: -5.032052040100098
    7. ' for' → logprob: -5.282052040100098
    8. ' on' → logprob: -5.782052040100098
    9. '_' → logprob: -6.282052040100098
    10. '           ' → logprob: -7.157052040100098

Token 900: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6210182309150696
    2. 'sub' → logprob: -1.7460181713104248
    3. 'reach' → logprob: -3.121018171310425
    4. 'the' → logprob: -3.121018171310425
    5. 'increase' → logprob: -3.496018171310425
    6. '2' → logprob: -4.121018409729004
    7. '1' → logprob: -4.246018409729004
    8. 'some' → logprob: -4.246018409729004
    9. 'pass' → logprob: -4.496018409729004
    10. 'nodes' → logprob: -4.496018409729004

Token 901: ' in' (ID: 306)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.1311565339565277
    2. 'nodes' → logprob: -2.5061564445495605
    3. '   ' → logprob: -3.8811564445495605
    4. ' connected' → logprob: -5.1311564445495605
    5. ' descendants' → logprob: -6.0061564445495605
    6. 'sub' → logprob: -6.2561564445495605
    7. ' vertices' → logprob: -6.3811564445495605
    8. ' subtree' → logprob: -6.5061564445495605
    9. 'connected' → logprob: -6.6311564445495605
    10. 'vertices' → logprob: -7.0061564445495605

Token 902: ' its' (ID: 1617)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.4760626554489136
    2. '   ' → logprob: -1.8510626554489136
    3. 'the' → logprob: -2.101062774658203
    4. '_tree' → logprob: -2.476062774658203
    5. '_sub' → logprob: -2.476062774658203
    6. ' the' → logprob: -2.601062774658203
    7. 'tree' → logprob: -2.851062774658203
    8. ' subtree' → logprob: -2.851062774658203
    9. ' ' → logprob: -3.851062774658203
    10. '       ' → logprob: -3.976062774658203

Token 903: ' subtree' (ID: 126158)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.002329978859052062
    2. ' subtree' → logprob: -6.1273298263549805
    3. '
' → logprob: -9.75232982635498
    4. '   ' → logprob: -10.25232982635498
    5. '```' → logprob: -11.25232982635498
    6. '_sub' → logprob: -11.37732982635498
    7. '`' → logprob: -12.25232982635498
    8. '	sub' → logprob: -12.37732982635498
    9. '       ' → logprob: -12.87732982635498
    10. '[sub' → logprob: -13.50232982635498

Token 904: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06546367704868317
    2. '
' → logprob: -3.0654637813568115
    3. ',' → logprob: -5.315463542938232
    4. '        
' → logprob: -5.690463542938232
    5. ' for' → logprob: -5.940463542938232
    6. '<|end|>' → logprob: -6.190463542938232
    7. 'for' → logprob: -7.065463542938232
    8. '#' → logprob: -7.565463542938232
    9. ' in' → logprob: -7.565463542938232
    10. '.' → logprob: -8.06546401977539

Token 905: ' ' (ID: 220)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.047575533390045166
    2. ' subtree' → logprob: -3.5475754737854004
    3. '1' → logprob: -4.1725754737854
    4. 'size' → logprob: -7.1725754737854
    5. ' sub' → logprob: -7.7975754737854
    6. '2' → logprob: -8.297575950622559
    7. ' ' → logprob: -8.422575950622559
    8. '   ' → logprob: -8.922575950622559
    9. '`' → logprob: -9.672575950622559
    10. '(sub' → logprob: -9.797575950622559

Token 906: '1' (ID: 16)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.002032730495557189
    2. '1' → logprob: -6.37703275680542
    3. ' subtree' → logprob: -8.377032279968262
    4. ' sub' → logprob: -10.627032279968262
    5. ' ' → logprob: -11.002032279968262
    6. 'size' → logprob: -11.502032279968262
    7. '(sub' → logprob: -11.752032279968262
    8. '2' → logprob: -12.127032279968262
    9. '[sub' → logprob: -12.127032279968262
    10. '```' → logprob: -12.627032279968262

Token 907: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0952431857585907
    2. '       ' → logprob: -2.595243215560913
    3. '<|end|>' → logprob: -5.095242977142334
    4. '        
' → logprob: -5.220242977142334
    5. '  
' → logprob: -6.470242977142334
    6. ',' → logprob: -6.720242977142334
    7. ' 
' → logprob: -8.470243453979492
    8. '\n' → logprob: -8.470243453979492
    9. ',
' → logprob: -8.595243453979492
    10. '    
' → logprob: -8.595243453979492

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019497737288475037
    2. ' for' → logprob: -4.894497871398926
    3. '        
' → logprob: -5.644497871398926
    4. '
' → logprob: -6.269497871398926
    5. 'for' → logprob: -6.269497871398926
    6. '\' → logprob: -7.144497871398926
    7. '\n' → logprob: -7.269497871398926
    8. '  
' → logprob: -7.394497871398926
    9. ' 
' → logprob: -7.644497871398926
    10. '   ' → logprob: -8.269497871398926

Token 909: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.589684247970581
    2. '       ' → logprob: -1.964684247970581
    3. 'year' → logprob: -3.339684247970581
    4. ' for' → logprob: -3.714684247970581
    5. 'acc' → logprob: -3.839684247970581
    6. 'current' → logprob: -3.839684247970581
    7. 'd' → logprob: -4.08968448638916
    8. 'result' → logprob: -4.33968448638916
    9. 'diff' → logprob: -4.33968448638916
    10. 'cur' → logprob: -4.46468448638916

Token 910: ' Increasing' (ID: 120508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2930904626846313
    2. 'curr' → logprob: -2.918090343475342
    3. 'total' → logprob: -2.918090343475342
    4. 'current' → logprob: -3.043090343475342
    5. 'cost' → logprob: -3.168090343475342
    6. 'd' → logprob: -3.168090343475342
    7. 'cur' → logprob: -3.293090343475342
    8. 'increment' → logprob: -3.293090343475342
    9. 'year' → logprob: -3.543090343475342
    10. 'inc' → logprob: -3.668090343475342

Token 911: ' edge' (ID: 11165)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.003288701642304659
    2. 'an' → logprob: -5.878288745880127
    3. ' the' → logprob: -8.378288269042969
    4. ' a' → logprob: -8.628288269042969
    5. 'the' → logprob: -10.503288269042969
    6. 'a' → logprob: -11.253288269042969
    7. ' edges' → logprob: -11.253288269042969
    8. '	an' → logprob: -12.628288269042969
    9. ' code' → logprob: -13.003288269042969
    10. ' one' → logprob: -13.253288269042969

Token 912: ' not' (ID: 625)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0990694761276245
    2. ' not' → logprob: -1.0990694761276245
    3. 'not' → logprob: -2.349069595336914
    4. 's' → logprob: -2.724069595336914
    5. 'on' → logprob: -2.724069595336914
    6. ' in' → logprob: -3.099069595336914
    7. ' that' → logprob: -4.349069595336914
    8. '_not' → logprob: -4.724069595336914
    9. '_on' → logprob: -5.099069595336914
    10. ' =' → logprob: -5.099069595336914

Token 913: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5435922145843506
    2. 'in' → logprob: -0.9185922145843506
    3. ' on' → logprob: -4.66859245300293
    4. 'on' → logprob: -4.91859245300293
    5. '_in' → logprob: -5.79359245300293
    6. '.' → logprob: -8.91859245300293
    7. '_' → logprob: -8.91859245300293
    8. '[' → logprob: -9.41859245300293
    9. '_on' → logprob: -9.54359245300293
    10. '
' → logprob: -11.04359245300293

Token 914: ' shortest' (ID: 70564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.43648093938827515
    2. 'tree' → logprob: -1.18648099899292
    3. '_tree' → logprob: -3.68648099899292
    4. ' the' → logprob: -4.43648099899292
    5. ' tree' → logprob: -5.18648099899292
    6. '_short' → logprob: -5.81148099899292
    7. 'short' → logprob: -6.68648099899292
    8. ' shortest' → logprob: -7.06148099899292
    9. '_the' → logprob: -7.56148099899292
    10. '_' → logprob: -8.811480522155762

Token 915: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.009902702644467354
    2. 'path' → logprob: -4.634902477264404
    3. ' path' → logprob: -9.884902954101562
    4. '_' → logprob: -10.759902954101562
    5. '_paths' → logprob: -11.009902954101562
    6. '       ' → logprob: -11.134902954101562
    7. '   ' → logprob: -11.384902954101562
    8. '_plan' → logprob: -12.134902954101562
    9. '_tree' → logprob: -12.384902954101562
    10. '```' → logprob: -12.634902954101562

Token 916: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.6440301537513733
    2. '_tree' → logprob: -0.8940301537513733
    3. ' tree' → logprob: -2.8940300941467285
    4. '   ' → logprob: -5.7690300941467285
    5. ' _' → logprob: -6.1440300941467285
    6. '_' → logprob: -6.3940300941467285
    7. '       ' → logprob: -6.7690300941467285
    8. ' ' → logprob: -7.6440300941467285
    9. '
' → logprob: -8.269030570983887
    10. '  ' → logprob: -8.394030570983887

Token 917: ' has' (ID: 853)
  Prédit: ' increases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' increases' → logprob: -1.4631894826889038
    2. ':
' → logprob: -1.5881894826889038
    3. ' will' → logprob: -1.9631894826889038
    4. 'in' → logprob: -2.3381896018981934
    5. '#' → logprob: -2.5881896018981934
    6. ':' → logprob: -2.9631896018981934
    7. ',' → logprob: -2.9631896018981934
    8. '[' → logprob: -4.088189601898193
    9. 'will' → logprob: -4.213189601898193
    10. '
' → logprob: -4.588189601898193

Token 918: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.47653087973594666
    2. ' no' → logprob: -0.976530909538269
    3. ' minimal' → logprob: -6.601531028747559
    4. 'minimal' → logprob: -7.476531028747559
    5. '0' → logprob: -8.726531028747559
    6. ' negligible' → logprob: -9.101531028747559
    7. ' limited' → logprob: -9.351531028747559
    8. '
' → logprob: -10.351531028747559
    9. 'limited' → logprob: -10.351531028747559
    10. '	no' → logprob: -10.351531028747559

Token 919: ' effect' (ID: 3159)
  Prédit: ' effect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effect' → logprob: -0.38883498311042786
    2. 'effect' → logprob: -1.1388349533081055
    3. '_effect' → logprob: -7.1388349533081055
    4. 'impact' → logprob: -7.6388349533081055
    5. ' impact' → logprob: -7.8888349533081055
    6. '
' → logprob: -8.263834953308105
    7. ' immediate' → logprob: -10.888834953308105
    8. 'im' → logprob: -11.263834953308105
    9. 'ffect' → logprob: -12.388834953308105
    10. ' ' → logprob: -12.513834953308105

Token 920: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.559092104434967
    2. '
' → logprob: -1.0590920448303223
    3. '.' → logprob: -3.1840920448303223
    4. ',' → logprob: -4.684092044830322
    5. '.
' → logprob: -4.934092044830322
    6. '        
' → logprob: -4.934092044830322
    7. '\n' → logprob: -5.559092044830322
    8. ' for' → logprob: -5.684092044830322
    9. '<|end|>' → logprob: -6.184092044830322
    10. '\' → logprob: -6.934092044830322

Token 921: ' shortest' (ID: 70564)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04461868479847908
    2. 'the' → logprob: -4.044618606567383
    3. 'dist' → logprob: -4.419618606567383
    4. 'short' → logprob: -5.794618606567383
    5. ' dissatisfaction' → logprob: -6.169618606567383
    6. ' shortest' → logprob: -6.294618606567383
    7. ' the' → logprob: -6.419618606567383
    8. 'distance' → logprob: -6.544618606567383
    9. 's' → logprob: -6.669618606567383
    10. ' d' → logprob: -7.794618606567383

Token 922: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.2670859694480896
    2. 'path' → logprob: -1.5170860290527344
    3. ' path' → logprob: -4.892086029052734
    4. '_paths' → logprob: -5.392086029052734
    5. 'paths' → logprob: -6.142086029052734
    6. ' paths' → logprob: -8.392086029052734
    7. '_' → logprob: -8.517086029052734
    8. 'line' → logprob: -9.267086029052734
    9. ' _' → logprob: -10.142086029052734
    10. '   ' → logprob: -10.142086029052734

Token 923: ' costs' (ID: 8959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08489905297756195
    2. '
' → logprob: -3.5848989486694336
    3. ' for' → logprob: -4.209898948669434
    4. 'for' → logprob: -4.709898948669434
    5. '        
' → logprob: -4.959898948669434
    6. '<|end|>' → logprob: -5.709898948669434
    7. '   ' → logprob: -5.959898948669434
    8. '\n' → logprob: -6.084898948669434
    9. 's' → logprob: -6.459898948669434
    10. ',' → logprob: -6.584898948669434

Token 924: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3922083377838135
    2. '
' → logprob: -1.3922083377838135
    3. '<|end|>' → logprob: -3.2672083377838135
    4. ',' → logprob: -4.142208099365234
    5. '        
' → logprob: -5.142208099365234
    6. '\n' → logprob: -5.642208099365234
    7. '<|end|>' → logprob: -6.017208099365234
    8. '.' → logprob: -6.267208099365234
    9. '  
' → logprob: -6.892208099365234
    10. ',
' → logprob: -6.892208099365234

Token 925: ' because' (ID: 2236)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.9459637403488159
    2. '#' → logprob: -1.320963740348816
    3. ' so' → logprob: -1.570963740348816
    4. '\n' → logprob: -3.3209638595581055
    5. '       ' → logprob: -4.0709638595581055
    6. '
' → logprob: -4.1959638595581055
    7. ' because' → logprob: -4.3209638595581055
    8. ' as' → logprob: -4.3209638595581055
    9. 'but' → logprob: -4.8209638595581055
    10. 'because' → logprob: -5.3209638595581055

Token 926: ' alternate' (ID: 43193)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.1382144689559937
    2. 'all' → logprob: -1.2632144689559937
    3. 'the' → logprob: -2.263214588165283
    4. ' shortest' → logprob: -2.763214588165283
    5. 'they' → logprob: -2.888214588165283
    6. ' the' → logprob: -3.263214588165283
    7. 'it' → logprob: -3.888214588165283
    8. '   ' → logprob: -4.513214588165283
    9. 'edges' → logprob: -4.513214588165283
    10. 'their' → logprob: -4.638214588165283

Token 927: ' routes' (ID: 19749)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.4347148537635803
    2. 'paths' → logprob: -1.9347147941589355
    3. '_path' → logprob: -2.5597147941589355
    4. ' path' → logprob: -3.0597147941589355
    5. 'path' → logprob: -3.3097147941589355
    6. '_paths' → logprob: -3.3097147941589355
    7. ' edges' → logprob: -5.1847147941589355
    8. 'edges' → logprob: -6.8097147941589355
    9. ' edge' → logprob: -7.4347147941589355
    10. '_edge' → logprob: -7.4347147941589355

Token 928: ' cost' (ID: 3097)
  Prédit: ' exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exist' → logprob: -0.949999988079071
    2. ' are' → logprob: -1.0750000476837158
    3. ' can' → logprob: -2.575000047683716
    4. '<|end|>' → logprob: -2.575000047683716
    5. ' continue' → logprob: -3.575000047683716
    6. 'are' → logprob: -3.825000047683716
    7. ',' → logprob: -4.449999809265137
    8. '.' → logprob: -4.949999809265137
    9. ' may' → logprob: -4.949999809265137
    10. 'continue' → logprob: -5.199999809265137

Token 929: ' >=' (ID: 5064)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.6520282030105591
    2. 'at' → logprob: -1.152028203010559
    3. ' at' → logprob: -3.0270280838012695
    4. 'exact' → logprob: -3.1520280838012695
    5. ' more' → logprob: -4.0270280838012695
    6. '1' → logprob: -4.2770280838012695
    7. 'same' → logprob: -4.7770280838012695
    8. '2' → logprob: -5.0270280838012695
    9. ' exactly' → logprob: -5.2770280838012695
    10. 'less' → logprob: -5.5270280838012695

Token 930: ' current' (ID: 2208)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03266260400414467
    2. '1' → logprob: -3.5326626300811768
    3. ' ' → logprob: -7.032662391662598
    4. 'current' → logprob: -7.407662391662598
    5. 'edge' → logprob: -8.282662391662598
    6. 'in' → logprob: -8.282662391662598
    7. 'existing' → logprob: -8.532662391662598
    8. '3' → logprob: -8.657662391662598
    9. '```' → logprob: -9.657662391662598
    10. '   ' → logprob: -9.657662391662598

Token 931: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1422700881958008
    2. '       ' → logprob: -1.3922700881958008
    3. '
' → logprob: -2.142270088195801
    4. '#' → logprob: -3.017270088195801
    5. '```' → logprob: -3.517270088195801
    6. ')' → logprob: -4.017270088195801
    7. '_
' → logprob: -4.142270088195801
    8. ' _' → logprob: -4.517270088195801
    9. ' for' → logprob: -4.517270088195801
    10. 'for' → logprob: -4.517270088195801

Token 932: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4881841838359833
    2. '
' → logprob: -1.1131842136383057
    3. 'for' → logprob: -3.6131842136383057
    4. ' for' → logprob: -4.738183975219727
    5. '        
' → logprob: -5.113183975219727
    6. '```' → logprob: -6.113183975219727
    7. 'year' → logprob: -6.113183975219727
    8. '\n' → logprob: -6.238183975219727
    9. 'd' → logprob: -6.488183975219727
    10. '\' → logprob: -6.988183975219727

Token 933: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7319950461387634
    2. '       ' → logprob: -1.6069951057434082
    3. 'current' → logprob: -3.231995105743408
    4. ' for' → logprob: -3.606995105743408
    5. 'curr' → logprob: -3.731995105743408
    6. 'acc' → logprob: -3.856995105743408
    7. 'cur' → logprob: -3.856995105743408
    8. 'c' → logprob: -3.981995105743408
    9. 'prefix' → logprob: -4.231995105743408
    10. 'result' → logprob: -4.231995105743408

Token 934: ' When' (ID: 4296)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4608760476112366
    2. '       ' → logprob: -2.335875988006592
    3. 'year' → logprob: -3.210875988006592
    4. 'curr' → logprob: -3.460875988006592
    5. 'c' → logprob: -3.835875988006592
    6. 'acc' → logprob: -3.960875988006592
    7. 'prefix' → logprob: -4.085875988006592
    8. 'current' → logprob: -4.210875988006592
    9. 'd' → logprob: -4.335875988006592
    10. 'increment' → logprob: -4.460875988006592

Token 935: ' an' (ID: 448)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.624884009361267
    2. 'e' → logprob: -2.3748841285705566
    3. 'self' → logprob: -2.3748841285705566
    4. ' in' → logprob: -2.3748841285705566
    5. ' an' → logprob: -2.4998841285705566
    6. ' the' → logprob: -2.8748841285705566
    7. ' i' → logprob: -2.9998841285705566
    8. ' raising' → logprob: -3.1248841285705566
    9. 'in' → logprob: -3.3748841285705566
    10. 'i' → logprob: -3.4998841285705566

Token 936: ' edge' (ID: 11165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21570026874542236
    2. 'e' → logprob: -2.215700149536133
    3. 'y' → logprob: -3.965700149536133
    4. ' _' → logprob: -4.465700149536133
    5. '_
' → logprob: -4.590700149536133
    6. 'd' → logprob: -4.840700149536133
    7. ' ' → logprob: -4.965700149536133
    8. 'i' → logprob: -5.840700149536133
    9. ' edge' → logprob: -5.840700149536133
    10. ' increment' → logprob: -5.965700149536133

Token 937: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9964471459388733
    2. ' in' → logprob: -1.2464470863342285
    3. ' on' → logprob: -1.4964470863342285
    4. ' raise' → logprob: -3.7464470863342285
    5. 'in' → logprob: -4.2464470863342285
    6. ' not' → logprob: -4.4964470863342285
    7. '_' → logprob: -4.4964470863342285
    8. 'on' → logprob: -4.7464470863342285
    9. '_in' → logprob: -4.9964470863342285
    10. ' ' → logprob: -5.1214470863342285

Token 938: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7432402968406677
    2. 'the' → logprob: -0.9932402968406677
    3. '_tree' → logprob: -2.7432403564453125
    4. 'short' → logprob: -3.3682403564453125
    5. 'tree' → logprob: -3.3682403564453125
    6. '_short' → logprob: -4.3682403564453125
    7. 'in' → logprob: -5.7432403564453125
    8. '
' → logprob: -6.7432403564453125
    9. ' the' → logprob: -7.1182403564453125
    10. ' shortest' → logprob: -7.7432403564453125

Token 939: ' tree' (ID: 8165)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.21803346276283264
    2. 'tree' → logprob: -1.9680334329605103
    3. ' shortest' → logprob: -2.9680335521698
    4. 'in' → logprob: -6.718033313751221
    5. ' tree' → logprob: -6.843033313751221
    6. 'parent' → logprob: -7.718033313751221
    7. 's' → logprob: -7.843033313751221
    8. 't' → logprob: -8.468033790588379
    9. '```' → logprob: -8.718033790588379
    10. '`' → logprob: -8.843033790588379

Token 940: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0836729183793068
    2. ' in' → logprob: -3.3336730003356934
    3. 'is' → logprob: -3.8336730003356934
    4. 'in' → logprob: -4.833673000335693
    5. '_in' → logprob: -5.583673000335693
    6. ' on' → logprob: -6.208673000335693
    7. '_' → logprob: -6.208673000335693
    8. ' raises' → logprob: -6.708673000335693
    9. '_is' → logprob: -7.208673000335693
    10. ''s' → logprob: -7.333673000335693

Token 941: ' increased' (ID: 11202)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3569589853286743
    2. 'raised' → logprob: -1.8569589853286743
    3. 'increment' → logprob: -2.3569588661193848
    4. ' raised' → logprob: -3.6069588661193848
    5. ' increased' → logprob: -4.356958866119385
    6. ' increment' → logprob: -4.981958866119385
    7. 'chosen' → logprob: -7.481958866119385
    8. 'updated' → logprob: -7.856958866119385
    9. '   ' → logprob: -7.981958866119385
    10. 'raise' → logprob: -8.356959342956543

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012612665072083473
    2. ':' → logprob: -5.512612819671631
    3. ' in' → logprob: -6.137612819671631
    4. '   ' → logprob: -6.762612819671631
    5. ' ,' → logprob: -6.887612819671631
    6. '_' → logprob: -7.262612819671631
    7. '       ' → logprob: -7.637612819671631
    8. 'in' → logprob: -7.637612819671631
    9. '_,' → logprob: -8.137612342834473
    10. '           ' → logprob: -8.387612342834473

Token 943: ' dissatisfaction' (ID: 183931)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.8937119841575623
    2. 'for' → logprob: -1.143712043762207
    3. '#' → logprob: -2.643712043762207
    4. ' for' → logprob: -3.143712043762207
    5. 'sub' → logprob: -3.518712043762207
    6. 'increment' → logprob: -3.768712043762207
    7. 'count' → logprob: -4.018712043762207
    8. ' affected' → logprob: -4.393712043762207
    9. '   ' → logprob: -4.518712043762207
    10. 'the' → logprob: -4.893712043762207

Token 944: ' increases' (ID: 21073)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.3867194652557373
    2. ' =' → logprob: -1.5117194652557373
    3. '=' → logprob: -1.7617194652557373
    4. '_in' → logprob: -2.1367194652557373
    5. '[' → logprob: -3.3867194652557373
    6. ' increases' → logprob: -3.3867194652557373
    7. '[in' → logprob: -3.5117194652557373
    8. ' +=' → logprob: -3.5117194652557373
    9. '_counts' → logprob: -3.7617194652557373
    10. '+=' → logprob: -3.8867194652557373

Token 945: ' by' (ID: 656)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4694174528121948
    2. 'by' → logprob: -2.0944175720214844
    3. ' by' → logprob: -2.2194175720214844
    4. '       ' → logprob: -2.7194175720214844
    5. 'for' → logprob: -3.5944175720214844
    6. ' =' → logprob: -4.844417572021484
    7. '[
' → logprob: -4.969417572021484
    8. ' for' → logprob: -5.344417572021484
    9. '[e' → logprob: -5.594417572021484
    10. '=' → logprob: -5.844417572021484

Token 946: ' size' (ID: 2349)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.030619226396083832
    2. ' subtree' → logprob: -3.5306191444396973
    3. ' sub' → logprob: -7.780619144439697
    4. '`' → logprob: -9.155619621276855
    5. '```' → logprob: -9.780619621276855
    6. '(sub' → logprob: -9.780619621276855
    7. 'size' → logprob: -9.905619621276855
    8. '[sub' → logprob: -10.280619621276855
    9. '_sub' → logprob: -10.780619621276855
    10. '	sub' → logprob: -11.155619621276855

Token 947: ' of' (ID: 328)
  Prédit: '[in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.1845906525850296
    2. '[e' → logprob: -2.0595905780792236
    3. '_in' → logprob: -4.059590816497803
    4. '_of' → logprob: -4.809590816497803
    5. '[' → logprob: -4.934590816497803
    6. '[_' → logprob: -5.559590816497803
    7. '[sub' → logprob: -6.684590816497803
    8. '_sub' → logprob: -7.309590816497803
    9. '   ' → logprob: -8.059590339660645
    10. '_arr' → logprob: -8.434590339660645

Token 948: ' subtree' (ID: 126158)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.68805992603302
    2. 'sub' → logprob: -1.31305992603302
    3. 'the' → logprob: -1.81305992603302
    4. ' subtree' → logprob: -3.6880598068237305
    5. ' the' → logprob: -4.4380598068237305
    6. ' tree' → logprob: -5.3130598068237305
    7. '[sub' → logprob: -5.4380598068237305
    8. '[' → logprob: -5.4380598068237305
    9. '   ' → logprob: -5.6880598068237305
    10. '[node' → logprob: -5.9380598068237305

Token 949: ' except' (ID: 6384)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21235957741737366
    2. '       ' → logprob: -1.7123595476150513
    3. '        
' → logprob: -6.462359428405762
    4. '
' → logprob: -6.462359428405762
    5. ' for' → logprob: -6.587359428405762
    6. 'for' → logprob: -6.712359428405762
    7. '[' → logprob: -6.837359428405762
    8. ',' → logprob: -7.337359428405762
    9. '  
' → logprob: -8.212359428405762
    10. 's' → logprob: -8.212359428405762

Token 950: ' root' (ID: 6577)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.15810327231884003
    2. 'the' → logprob: -2.9081032276153564
    3. ' the' → logprob: -3.4081032276153564
    4. ' for' → logprob: -4.1581034660339355
    5. 'for' → logprob: -4.4081034660339355
    6. '[' → logprob: -4.5331034660339355
    7. 'node' → logprob: -5.6581034660339355
    8. '[root' → logprob: -6.1581034660339355
    9. ' node' → logprob: -6.2831034660339355
    10. 'self' → logprob: -6.2831034660339355

Token 951: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23479555547237396
    2. '       ' → logprob: -1.7347955703735352
    3. '        
' → logprob: -4.484795570373535
    4. '[' → logprob: -5.359795570373535
    5. '  
' → logprob: -5.859795570373535
    6. ' 
' → logprob: -6.109795570373535
    7. '
' → logprob: -6.359795570373535
    8. ' for' → logprob: -6.609795570373535
    9. 'for' → logprob: -6.734795570373535
    10. ',' → logprob: -6.984795570373535

Token 952: 'city' (ID: 17500)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.6038389801979065
    2. ')' → logprob: -0.9788389801979065
    3. '[' → logprob: -3.2288389205932617
    4. ')
' → logprob: -4.603838920593262
    5. '
' → logprob: -4.853838920593262
    6. '[v' → logprob: -5.728838920593262
    7. '[u' → logprob: -6.353838920593262
    8. ' )' → logprob: -6.353838920593262
    9. '   ' → logprob: -6.353838920593262
    10. '[root' → logprob: -6.603838920593262

Token 953: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7082438468933105
    2. '1' → logprob: -1.7082438468933105
    3. '[' → logprob: -2.0832438468933105
    4. '0' → logprob: -2.4582438468933105
    5. 's' → logprob: -3.0832438468933105
    6. ')' → logprob: -3.8332438468933105
    7. '
' → logprob: -4.3332438468933105
    8. '=' → logprob: -5.4582438468933105
    9. '   ' → logprob: -5.4582438468933105
    10. '```' → logprob: -5.4582438468933105

Token 954: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01463997270911932
    2. ']' → logprob: -5.514639854431152
    3. '])' → logprob: -5.639639854431152
    4. ')
' → logprob: -5.764639854431152
    5. '[' → logprob: -6.764639854431152
    6. ' )' → logprob: -7.389639854431152
    7. ')`' → logprob: -7.889639854431152
    8. ').' → logprob: -8.014639854431152
    9. ')]' → logprob: -8.014639854431152
    10. ')
' → logprob: -9.014639854431152

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15624412894248962
    2. ' 
' → logprob: -3.1562440395355225
    3. '
' → logprob: -3.5312440395355225
    4. '\n' → logprob: -3.6562440395355225
    5. '\' → logprob: -4.656244277954102
    6. '        
' → logprob: -4.781244277954102
    7. '  
' → logprob: -5.031244277954102
    8. ' ' → logprob: -5.656244277954102
    9. '<|end|>' → logprob: -6.156244277954102
    10. '        ' → logprob: -6.406244277954102

Token 956: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46093133091926575
    2. 'curr' → logprob: -2.3359313011169434
    3. '       ' → logprob: -2.5859313011169434
    4. 'current' → logprob: -2.9609313011169434
    5. 'c' → logprob: -3.4609313011169434
    6. 'cur' → logprob: -3.5859313011169434
    7. 'd' → logprob: -4.085931301116943
    8. 'acc' → logprob: -4.335931301116943
    9. 'year' → logprob: -4.335931301116943
    10. 'prefix' → logprob: -4.960931301116943

Token 957: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27332282066345215
    2. 'curr' → logprob: -2.398322820663452
    3. 'current' → logprob: -2.898322820663452
    4. 'cur' → logprob: -3.648322820663452
    5. 'c' → logprob: -4.273323059082031
    6. 'acc' → logprob: -4.523323059082031
    7. 'year' → logprob: -5.023323059082031
    8. 'prefix' → logprob: -5.148323059082031
    9. '       ' → logprob: -5.523323059082031
    10. 'added' → logprob: -5.773323059082031

Token 958: ' will' (ID: 738)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9971348643302917
    2. 'for' → logprob: -1.2471349239349365
    3. ' ' → logprob: -1.7471349239349365
    4. ' for' → logprob: -2.7471349239349365
    5. '       ' → logprob: -3.7471349239349365
    6. ' =' → logprob: -3.8721349239349365
    7. '   ' → logprob: -4.497134685516357
    8. ' _' → logprob: -4.622134685516357
    9. ' continue' → logprob: -5.247134685516357
    10. '
' → logprob: -5.747134685516357

Token 959: ' track' (ID: 5290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2642446756362915
    2. '   ' → logprob: -2.764244556427002
    3. 'process' → logprob: -3.014244556427002
    4. ' process' → logprob: -3.764244556427002
    5. 'count' → logprob: -3.764244556427002
    6. 'simulate' → logprob: -4.139244556427002
    7. 'indent' → logprob: -5.014244556427002
    8. 'continue' → logprob: -5.639244556427002
    9. 'import' → logprob: -5.764244556427002
    10. '           ' → logprob: -5.889244556427002

Token 960: ' dissatisfaction' (ID: 183931)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2521030902862549
    2. ' current' → logprob: -2.252103090286255
    3. 'current' → logprob: -2.502103090286255
    4. '       ' → logprob: -2.877103090286255
    5. 'edge' → logprob: -3.127103090286255
    6. ' cumulative' → logprob: -3.252103090286255
    7. ' raise' → logprob: -3.377103090286255
    8. ' edge' → logprob: -3.377103090286255
    9. '   ' → logprob: -3.377103090286255
    10. 'in' → logprob: -3.502103090286255

Token 961: ' count' (ID: 3605)
  Prédit: '_changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_changes' → logprob: -0.8130091428756714
    2. ' =' → logprob: -2.063009262084961
    3. '_' → logprob: -2.188009262084961
    4. '_in' → logprob: -2.688009262084961
    5. '_per' → logprob: -2.688009262084961
    6. '_diff' → logprob: -3.188009262084961
    7. '_change' → logprob: -3.188009262084961
    8. 's' → logprob: -3.438009262084961
    9. '_counts' → logprob: -3.938009262084961
    10. '_delta' → logprob: -4.563009262084961

Token 962: ' increment' (ID: 24032)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.744519829750061
    2. '_per' → logprob: -0.869519829750061
    3. 's' → logprob: -3.4945197105407715
    4. '=' → logprob: -3.7445197105407715
    5. '_in' → logprob: -3.9945197105407715
    6. '_' → logprob: -4.7445197105407715
    7. '_changes' → logprob: -4.7445197105407715
    8. '_by' → logprob: -5.3695197105407715
    9. '_change' → logprob: -6.1195197105407715
    10. '_diff' → logprob: -6.4945197105407715

Token 963: 'ally' (ID: 2146)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07001712918281555
    2. 'al' → logprob: -3.070017099380493
    3. 'ally' → logprob: -4.570017337799072
    4. '       ' → logprob: -5.945017337799072
    5. '   ' → logprob: -6.070017337799072
    6. ' =' → logprob: -6.320017337799072
    7. '[' → logprob: -6.945017337799072
    8. '_by' → logprob: -7.445017337799072
    9. 'ed' → logprob: -8.195016860961914
    10. '[s' → logprob: -8.195016860961914

Token 964: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3078383505344391
    2. '       ' → logprob: -1.4328383207321167
    3. ',' → logprob: -4.682838439941406
    4. '        
' → logprob: -5.557838439941406
    5. ' =' → logprob: -6.057838439941406
    6. ' for' → logprob: -6.432838439941406
    7. ',
' → logprob: -6.557838439941406
    8. 'for' → logprob: -7.057838439941406
    9. '
' → logprob: -7.182838439941406
    10. '    
' → logprob: -7.432838439941406

Token 965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39680764079093933
    2. 'c' → logprob: -2.6468076705932617
    3. 'curr' → logprob: -2.8968076705932617
    4. 'current' → logprob: -3.1468076705932617
    5. 'cur' → logprob: -3.6468076705932617
    6. 'd' → logprob: -3.6468076705932617
    7. ' cumulative' → logprob: -3.7718076705932617
    8. 'cum' → logprob: -3.8968076705932617
    9. ' current' → logprob: -4.396807670593262
    10. ' curr' → logprob: -4.771807670593262

Token 966: ' current' (ID: 2208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4670860767364502
    2. 'current' (adapté à ' current') → logprob: -1.4670860767364502
    3. 'curr' → logprob: -1.8420860767364502
    4. 'c' → logprob: -2.71708607673645
    5. '       ' → logprob: -2.84208607673645
    6. ' current' → logprob: -2.96708607673645
    7. 'cur' → logprob: -3.09208607673645
    8. ' curr' → logprob: -3.09208607673645
    9. ' cumulative' → logprob: -3.09208607673645
    10. 'cum' → logprob: -3.84208607673645

Token 967: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5958422422409058
    2. '_d' → logprob: -0.8458422422409058
    3. ' _' → logprob: -5.095842361450195
    4. ' =' → logprob: -5.220842361450195
    5. '_space' → logprob: -5.970842361450195
    6. '_dist' → logprob: -6.595842361450195
    7. '_s' → logprob: -6.845842361450195
    8. '_cost' → logprob: -7.220842361450195
    9. '_dis' → logprob: -7.345842361450195
    10. '=' → logprob: -8.345842361450195

Token 968: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.009084376506507397
    2. 'is' → logprob: -5.009084224700928
    3. 'ist' → logprob: -6.634084224700928
    4. 'i' → logprob: -8.009084701538086
    5. 'issat' → logprob: -9.009084701538086
    6. 'e' → logprob: -9.384084701538086
    7. 'istance' → logprob: -9.384084701538086
    8. '=' → logprob: -9.759084701538086
    9. ' iss' → logprob: -9.884084701538086
    10. ' =' → logprob: -10.134084701538086

Token 969: 'atisfaction' (ID: 60876)
  Prédit: 'atisf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.0028290078043937683
    2. 'atisfaction' → logprob: -6.127829074859619
    3. 'atis' → logprob: -7.877829074859619
    4. 'at' → logprob: -8.752828598022461
    5. 'atisfied' → logprob: -10.002828598022461
    6. ' satisf' → logprob: -10.502828598022461
    7. ' at' → logprob: -11.752828598022461
    8. '```' → logprob: -11.877828598022461
    9. 'a' → logprob: -12.252828598022461
    10. '   ' → logprob: -12.377828598022461

Token 970: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062092605978250504
    2. '=' → logprob: -2.8120925426483154
    3. 's' → logprob: -9.562092781066895
    4. '[' → logprob: -10.437092781066895
    5. ' +=' → logprob: -11.562092781066895
    6. '_' → logprob: -11.687092781066895
    7. ' ' → logprob: -12.687092781066895
    8. ',' → logprob: -13.437092781066895
    9. ' =[' → logprob: -14.062092781066895
    10. '_space' → logprob: -15.187092781066895

Token 971: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010420980397611856
    2. ' ' → logprob: -6.876041889190674
    3. '[' → logprob: -11.876042366027832
    4. '   ' → logprob: -14.563542366027832
    5. ' [' → logprob: -14.626042366027832
    6. '
' → logprob: -15.438542366027832
    7. '1' → logprob: -15.626042366027832
    8. '  ' → logprob: -16.188541412353516
    9. '[
' → logprob: -16.438541412353516
    10. 's' → logprob: -16.751041412353516

Token 972: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001444164663553238
    2. 'dist' → logprob: -6.876444339752197
    3. 'sub' → logprob: -8.751443862915039
    4. '[' → logprob: -9.376443862915039
    5. ' ' → logprob: -9.876443862915039
    6. 'sum' → logprob: -10.251443862915039
    7. '1' → logprob: -10.626443862915039
    8. '[sub' → logprob: -10.751443862915039
    9. 'd' → logprob: -12.001443862915039
    10. 'len' → logprob: -12.251443862915039

Token 973: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14681071043014526
    2. '       ' → logprob: -3.14681077003479
    3. '\n' → logprob: -3.64681077003479
    4. '<|end|>' → logprob: -4.021810531616211
    5. ' for' → logprob: -4.521810531616211
    6. ' 
' → logprob: -5.271810531616211
    7. 'for' → logprob: -5.396810531616211
    8. '\' → logprob: -5.396810531616211
    9. '' → logprob: -5.521810531616211
    10. '    
' → logprob: -5.521810531616211

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26047345995903015
    2. '
' → logprob: -1.6354734897613525
    3. '<|end|>' → logprob: -4.260473251342773
    4. ' for' → logprob: -5.135473251342773
    5. '   ' → logprob: -5.510473251342773
    6. '	' → logprob: -5.635473251342773
    7. 'for' → logprob: -6.260473251342773
    8. '\n' → logprob: -6.885473251342773
    9. '        
' → logprob: -7.135473251342773
    10. ',' → logprob: -7.760473251342773

Token 975: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24571183323860168
    2. ' for' → logprob: -1.6207118034362793
    3. '       ' → logprob: -4.370711803436279
    4. '
' → logprob: -4.995711803436279
    5. '        
' → logprob: -8.620712280273438
    6. 'result' → logprob: -9.120712280273438
    7. 'year' → logprob: -9.245712280273438
    8. ' 
' → logprob: -9.370712280273438
    9. '\n' → logprob: -9.620712280273438
    10. '	for' → logprob: -10.995712280273438

Token 976: ' Map' (ID: 7343)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0064935581758618355
    2. ' for' → logprob: -5.25649356842041
    3. '       ' → logprob: -6.75649356842041
    4. 'year' → logprob: -9.63149356842041
    5. 'prev' → logprob: -12.00649356842041
    6. 'i' → logprob: -12.25649356842041
    7. 'edge' → logprob: -12.63149356842041
    8. '```' → logprob: -12.88149356842041
    9. 'increment' → logprob: -13.13149356842041
    10. 'indent' → logprob: -13.75649356842041

Token 977: ' from' (ID: 591)
  Prédit: '_raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_raise' → logprob: -1.2325475215911865
    2. '_' → logprob: -1.3575475215911865
    3. '_edge' → logprob: -1.8575475215911865
    4. ' =' → logprob: -2.3575475215911865
    5. 'raise' → logprob: -3.2325475215911865
    6. ' raise' → logprob: -3.7325475215911865
    7. ' self' → logprob: -3.8575475215911865
    8. 'self' → logprob: -3.9825475215911865
    9. 'edge' → logprob: -4.232547760009766
    10. '_e' → logprob: -4.482547760009766

Token 978: ' edge' (ID: 11165)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.31318414211273193
    2. 'edge' → logprob: -2.4381842613220215
    3. ' eid' → logprob: -2.5631842613220215
    4. 'self' → logprob: -3.0631842613220215
    5. ' edge' → logprob: -3.6881842613220215
    6. 'e' → logprob: -4.5631842613220215
    7. ' self' → logprob: -4.6881842613220215
    8. 'in' → logprob: -6.5631842613220215
    9. ' in' → logprob: -6.6881842613220215
    10. '   ' → logprob: -6.6881842613220215

Token 979: ' id' (ID: 1211)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.49699801206588745
    2. '_id' → logprob: -2.2469980716705322
    3. '_raise' → logprob: -2.4969980716705322
    4. '_in' → logprob: -2.6219980716705322
    5. ' raise' → logprob: -3.4969980716705322
    6. 'raise' → logprob: -3.8719980716705322
    7. ' to' → logprob: -4.121997833251953
    8. 'id' → logprob: -4.621997833251953
    9. ' raised' → logprob: -5.121997833251953
    10. 'to' → logprob: -5.246997833251953

Token 980: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.929610550403595
    2. '_to' → logprob: -0.929610550403595
    3. 'to' → logprob: -2.30461049079895
    4. ':' → logprob: -2.55461049079895
    5. ' :' → logprob: -4.179610729217529
    6. ' ->' → logprob: -4.679610729217529
    7. '_' → logprob: -5.804610729217529
    8. ' ' → logprob: -6.804610729217529
    9. '[' → logprob: -7.179610729217529
    10. ',' → logprob: -7.554610729217529

Token 981: ' iteration' (ID: 43155)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8774067759513855
    2. 'int' → logprob: -1.7524068355560303
    3. 'bool' → logprob: -2.0024068355560303
    4. ' subtree' → logprob: -2.3774068355560303
    5. 'True' → logprob: -2.8774068355560303
    6. '0' → logprob: -3.8774068355560303
    7. 'increment' → logprob: -3.8774068355560303
    8. '1' → logprob: -4.877406597137451
    9. 'count' → logprob: -5.002406597137451
    10. 'size' → logprob: -5.002406597137451

Token 982: '/year' (ID: 143723)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7469966411590576
    2. ' _' → logprob: -1.6219966411590576
    3. '_id' → logprob: -2.2469966411590576
    4. '_idx' → logprob: -2.3719966411590576
    5. '_index' → logprob: -2.7469966411590576
    6. ' =' → logprob: -4.246996879577637
    7. '_count' → logprob: -4.871996879577637
    8. '_to' → logprob: -4.996996879577637
    9. 's' → logprob: -5.121996879577637
    10. '_counter' → logprob: -5.871996879577637

Token 983: ' index' (ID: 3472)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.9944689869880676
    2. '_' → logprob: -1.1194689273834229
    3. ' =' → logprob: -2.494468927383423
    4. ' _' → logprob: -2.744468927383423
    5. '_raise' → logprob: -3.369468927383423
    6. ':' → logprob: -3.619468927383423
    7. '_in' → logprob: -4.244469165802002
    8. '_map' → logprob: -4.494469165802002
    9. '_count' → logprob: -4.494469165802002
    10. '_index' → logprob: -4.619469165802002

Token 984: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04433967545628548
    2. '=' → logprob: -3.419339656829834
    3. '_' → logprob: -5.669339656829834
    4. ':' → logprob: -5.669339656829834
    5. ' =
' → logprob: -6.794339656829834
    6. '_edge' → logprob: -7.794339656829834
    7. '{' → logprob: -8.294340133666992
    8. '_to' → logprob: -8.544340133666992
    9. '_raise' → logprob: -8.544340133666992
    10. ' _' → logprob: -8.669340133666992

Token 985: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03646676242351532
    2. '=' → logprob: -3.7864668369293213
    3. ':' → logprob: -5.661466598510742
    4. ' =
' → logprob: -6.036466598510742
    5. '_' → logprob: -6.536466598510742
    6. '[' → logprob: -6.661466598510742
    7. '       ' → logprob: -7.286466598510742
    8. '{' → logprob: -7.911466598510742
    9. '   ' → logprob: -7.911466598510742
    10. ',' → logprob: -8.036466598510742

Token 986: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.6452082395553589
    2. 'eid' → logprob: -1.8952082395553589
    3. ' eid' → logprob: -2.7702083587646484
    4. ' edge' → logprob: -2.8952083587646484
    5. ' for' → logprob: -3.2702083587646484
    6. ' self' → logprob: -3.2702083587646484
    7. 'self' → logprob: -3.3952083587646484
    8. 'for' → logprob: -3.8952083587646484
    9. 'raise' → logprob: -4.020208358764648
    10. ' raise' → logprob: -4.270208358764648

Token 987: '_price' (ID: 18814)
  Prédit: '_raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_raise' → logprob: -0.5293380618095398
    2. '_id' → logprob: -2.0293381214141846
    3. '_to' → logprob: -2.0293381214141846
    4. '_' → logprob: -3.1543381214141846
    5. '_map' → logprob: -3.2793381214141846
    6. '_ids' → logprob: -3.5293381214141846
    7. '_in' → logprob: -4.5293378829956055
    8. '_idx' → logprob: -5.1543378829956055
    9. '_index' → logprob: -5.4043378829956055
    10. 's' → logprob: -5.5293378829956055

Token 988: '_up' (ID: 18721)
  Prédit: '_raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_raise' → logprob: -0.2087046056985855
    2. '_in' → logprob: -2.083704710006714
    3. '_' → logprob: -2.958704710006714
    4. 'raise' → logprob: -5.208704471588135
    5. '_increment' → logprob: -6.458704471588135
    6. '_r' → logprob: -6.708704471588135
    7. '_map' → logprob: -6.833704471588135
    8. ' =' → logprob: -7.458704471588135
    9. '=' → logprob: -7.458704471588135
    10. '_inc' → logprob: -7.833704471588135

Token 989: '_year' (ID: 33489)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.5693198442459106
    2. 'grade' → logprob: -1.8193198442459106
    3. '_map' → logprob: -1.8193198442459106
    4. 'dates' → logprob: -2.194319725036621
    5. 'map' → logprob: -2.319319725036621
    6. 's' → logprob: -3.194319725036621
    7. 'graded' → logprob: -3.569319725036621
    8. 'raise' → logprob: -3.569319725036621
    9. '_idx' → logprob: -3.569319725036621
    10. 'grades' → logprob: -3.819319725036621

Token 990: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1144132986664772
    2. ' =' → logprob: -2.239413261413574
    3. 's' → logprob: -6.864413261413574
    4. 'raise' → logprob: -9.364413261413574
    5. '_map' → logprob: -9.739413261413574
    6. '_idx' → logprob: -9.739413261413574
    7. '_' → logprob: -10.364413261413574
    8. '   ' → logprob: -10.364413261413574
    9. '_=' → logprob: -10.364413261413574
    10. '={}' → logprob: -10.364413261413574

Token 991: ' [-' (ID: 20191)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.009158804081380367
    2. '[' → logprob: -4.759158611297607
    3. '[-' → logprob: -8.384159088134766
    4. 'dict' → logprob: -8.884159088134766
    5. ' {}' → logprob: -9.384159088134766
    6. '[]' → logprob: -10.384159088134766
    7. '{' → logprob: -10.384159088134766
    8. ' [' → logprob: -11.259159088134766
    9. '{}
' → logprob: -11.509159088134766
    10. '[self' → logprob: -12.634159088134766

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.625
    4. '-' → logprob: -16.75
    5. '   ' → logprob: -18.75
    6. ' -' → logprob: -18.875
    7. '```' → logprob: -19.375
    8. '(' → logprob: -19.4375
    9. '۱' → logprob: -19.6875
    10. '999' → logprob: -20.0625

Token 993: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010607946896925569
    2. ' ]' → logprob: -7.751060962677002
    3. ']*' → logprob: -8.126060485839844
    4. ' for' → logprob: -8.376060485839844
    5. '<|end|>' → logprob: -9.501060485839844
    6. 'for' → logprob: -11.876060485839844
    7. ')' → logprob: -12.001060485839844
    8. ']+' → logprob: -12.501060485839844
    9. '<|end|>' → logprob: -12.751060485839844
    10. ',' → logprob: -13.126060485839844

Token 994: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.043078898685053e-05
    2. '(self' → logprob: -9.500090599060059
    3. ' self' → logprob: -11.125090599060059
    4. '       ' → logprob: -14.750090599060059
    5. '   ' → logprob: -15.500090599060059
    6. '           ' → logprob: -16.375089645385742
    7. '
' → logprob: -17.250089645385742
    8. '[self' → logprob: -17.875089645385742
    9. '(' → logprob: -18.125089645385742
    10. 'len' → logprob: -18.375089645385742

Token 996: '.m' (ID: 1021)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.675452709197998
    2. 'm' → logprob: -0.800452709197998
    3. '.m' → logprob: -3.175452709197998
    4. '
' → logprob: -10.550453186035156
    5. '(self' → logprob: -10.800453186035156
    6. 'user' → logprob: -10.925453186035156
    7. '.self' → logprob: -11.175453186035156
    8. '   ' → logprob: -11.550453186035156
    9. ' self' → logprob: -11.800453186035156
    10. '       ' → logprob: -11.800453186035156

Token 997: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6075625419616699
    2. '<|end|>' → logprob: -1.10756254196167
    3. ' for' → logprob: -2.73256254196167
    4. 'for' → logprob: -4.10756254196167
    5. '
' → logprob: -4.23256254196167
    6. '[' → logprob: -4.98256254196167
    7. '<|end|>' → logprob: -5.10756254196167
    8. '        
' → logprob: -5.73256254196167
    9. '   ' → logprob: -6.48256254196167
    10. ')' → logprob: -6.60756254196167

Token 999: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.047755565494298935
    2. ' for' → logprob: -3.297755479812622
    3. '       ' → logprob: -4.672755718231201
    4. '
' → logprob: -8.672755241394043
    5. 'i' → logprob: -10.047755241394043
    6. 'year' → logprob: -10.172755241394043
    7. '<|end|>' → logprob: -11.172755241394043
    8. '        
' → logprob: -11.297755241394043
    9. '	for' → logprob: -11.547755241394043
    10. ' 
' → logprob: -12.047755241394043

Token 1000: ' year' (ID: 1284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20029842853546143
    2. 'year' → logprob: -2.325298309326172
    3. 'eid' → logprob: -2.825298309326172
    4. ' i' → logprob: -4.825298309326172
    5. 'idx' → logprob: -5.200298309326172
    6. ' eid' → logprob: -5.950298309326172
    7. 'y' → logprob: -6.450298309326172
    8. ' year' → logprob: -6.575298309326172
    9. 'e' → logprob: -7.200298309326172
    10. 'raise' → logprob: -7.200298309326172

Token 1001: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13999155163764954
    2. 'in' → logprob: -2.264991521835327
    3. ',' → logprob: -4.139991760253906
    4. ' i' → logprob: -5.264991760253906
    5. ' ' → logprob: -6.514991760253906
    6. '_' → logprob: -6.514991760253906
    7. ' ,' → logprob: -7.014991760253906
    8. '[' → logprob: -7.389991760253906
    9. '_in' → logprob: -7.889991760253906
    10. '[i' → logprob: -8.764991760253906

Token 1002: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.2911216914653778
    2. ' eid' → logprob: -2.4161217212677
    3. 'edge' → logprob: -2.5411217212677
    4. '(e' → logprob: -3.0411217212677
    5. 'e' → logprob: -4.166121482849121
    6. ' (' → logprob: -4.916121482849121
    7. '(u' → logprob: -5.541121482849121
    8. ' edge' → logprob: -5.791121482849121
    9. '(edge' → logprob: -5.916121482849121
    10. 'raised' → logprob: -7.416121482849121

Token 1003: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043574314564466476
    2. 'in' → logprob: -3.168574333190918
    3. ' ' → logprob: -8.168574333190918
    4. ',' → logprob: -8.418574333190918
    5. '<|end|>' → logprob: -10.793574333190918
    6. ' ,' → logprob: -11.418574333190918
    7. '	in' → logprob: -11.543574333190918
    8. ' i' → logprob: -12.668574333190918
    9. '_in' → logprob: -12.668574333190918
    10. '<|end|>' → logprob: -12.793574333190918

Token 1004: ' enumerate' (ID: 29671)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1310645192861557
    2. ' self' → logprob: -2.3810644149780273
    3. 'enumer' → logprob: -4.131064414978027
    4. ' enumerate' → logprob: -4.256064414978027
    5. '(self' → logprob: -10.381064414978027
    6. ' ' → logprob: -10.631064414978027
    7. '   ' → logprob: -11.006064414978027
    8. ' in' → logprob: -11.256064414978027
    9. '[self' → logprob: -11.381064414978027
    10. '	self' → logprob: -11.381064414978027

Token 1005: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4307524859905243
    2. '(self' → logprob: -1.1807525157928467
    3. ' self' → logprob: -3.1807525157928467
    4. ',' → logprob: -7.430752277374268
    5. ' (' → logprob: -8.055752754211426
    6. '[self' → logprob: -8.555752754211426
    7. ',self' → logprob: -9.305752754211426
    8. '(' → logprob: -9.430752754211426
    9. ')' → logprob: -10.180752754211426
    10. '<|end|>' → logprob: -11.305752754211426

Token 1006: '.raise' (ID: 164718)
  Prédit: '.raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raise' → logprob: -0.00871491152793169
    2. 'raise' → logprob: -5.00871467590332
    3. '_raise' → logprob: -7.25871467590332
    4. '.train' → logprob: -8.00871467590332
    5. '.graph' → logprob: -8.75871467590332
    6. ')' → logprob: -8.88371467590332
    7. 'self' → logprob: -9.13371467590332
    8. '.' → logprob: -9.25871467590332
    9. '	raise' → logprob: -9.75871467590332
    10. '[self' → logprob: -9.88371467590332

Token 1007: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -0.0026020531076937914
    2. 's' → logprob: -6.0026021003723145
    3. '_pl' → logprob: -9.752601623535156
    4. '_' → logprob: -10.127601623535156
    5. ' _' → logprob: -12.002601623535156
    6. 'plan' → logprob: -12.377601623535156
    7. '_p' → logprob: -12.627601623535156
    8. '_s' → logprob: -13.002601623535156
    9. '_
' → logprob: -13.252601623535156
    10. '_PLAN' → logprob: -14.127601623535156

Token 1008: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09331268817186356
    2. ',' → logprob: -2.9683127403259277
    3. '):
' → logprob: -3.4683127403259277
    4. ' ,' → logprob: -5.843312740325928
    5. ' ):' → logprob: -5.843312740325928
    6. ']:' → logprob: -8.59331226348877
    7. ':' → logprob: -8.59331226348877
    8. '       ' → logprob: -9.21831226348877
    9. '):
' → logprob: -10.09331226348877
    10. ' ):
' → logprob: -10.34331226348877

Token 1009: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07984711974859238
    2. ' start' → logprob: -2.7048470973968506
    3. '1' → logprob: -4.70484733581543
    4. '):' → logprob: -7.70484733581543
    5. '):
' → logprob: -8.32984733581543
    6. ' ' → logprob: -9.82984733581543
    7. '       ' → logprob: -11.20484733581543
    8. '0' → logprob: -11.57984733581543
    9. '   ' → logprob: -11.82984733581543
    10. ')' → logprob: -11.95484733581543

Token 1010: '1' (ID: 16)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.128657728433609
    2. '1' → logprob: -2.128657817840576
    3. '0' → logprob: -6.378657817840576
    4. ' start' → logprob: -10.753657341003418
    5. ')' → logprob: -12.253657341003418
    6. '):
' → logprob: -13.753657341003418
    7. 'star' → logprob: -13.878657341003418
    8. 's' → logprob: -14.628657341003418
    9. ' ' → logprob: -14.878657341003418
    10. '(start' → logprob: -15.378657341003418

Token 1011: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2669617533683777
    2. ':' → logprob: -1.7669618129730225
    3. '):
' → logprob: -2.7669618129730225
    4. ':
' → logprob: -7.641961574554443
    5. ')' → logprob: -9.766962051391602
    6. '):
' → logprob: -10.266962051391602
    7. ',' → logprob: -11.891962051391602
    8. '       ' → logprob: -12.141962051391602
    9. ']:' → logprob: -12.891962051391602
    10. '():' → logprob: -13.266962051391602

Token 1012: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002045817207545042
    2. '       ' → logprob: -7.002045631408691
    3. '
' → logprob: -7.502045631408691
    4. '            
' → logprob: -8.127045631408691
    5. '   ' → logprob: -9.377045631408691
    6. '               ' → logprob: -9.752045631408691
    7. '<|end|>' → logprob: -10.252045631408691
    8. '{
' → logprob: -10.877045631408691
    9. '        
' → logprob: -11.252045631408691
    10. '```' → logprob: -11.377045631408691

Token 1013: ' edge' (ID: 11165)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05543788522481918
    2. '           ' → logprob: -3.3054378032684326
    3. 'current' → logprob: -4.680438041687012
    4. 'edge' (adapté à ' edge') → logprob: -5.055438041687012
    5. ' if' → logprob: -7.930438041687012
    6. 'in' → logprob: -8.055438041687012
    7. '       ' → logprob: -8.055438041687012
    8. 'e' → logprob: -8.680438041687012
    9. '               ' → logprob: -8.680438041687012
    10. '   ' → logprob: -8.930438041687012

Token 1014: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0007136239437386394
    2. ' =' → logprob: -8.750713348388672
    3. '=' → logprob: -9.000713348388672
    4. '_cost' → logprob: -9.125713348388672
    5. 'price' → logprob: -9.625713348388672
    6. '_in' → logprob: -9.750713348388672
    7. '_id' → logprob: -9.875713348388672
    8. '_index' → logprob: -10.500713348388672
    9. '_year' → logprob: -10.750713348388672
    10. '_' → logprob: -11.000713348388672

Token 1015: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.0001705246395431459
    2. 'up' → logprob: -10.500170707702637
    3. '_price' → logprob: -10.750170707702637
    4. '_in' → logprob: -11.250170707702637
    5. '_id' → logprob: -11.500170707702637
    6. '   ' → logprob: -11.750170707702637
    7. '_year' → logprob: -11.750170707702637
    8. '```' → logprob: -11.750170707702637
    9. '[' → logprob: -12.000170707702637
    10. '_' → logprob: -12.125170707702637

Token 1016: '_year' (ID: 33489)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.06722138822078705
    2. '[' → logprob: -2.8172214031219482
    3. 'year' → logprob: -6.442221164703369
    4. 's' → logprob: -6.692221164703369
    5. 'eid' → logprob: -6.942221164703369
    6. '_year' → logprob: -7.692221164703369
    7. '=e' → logprob: -8.442221641540527
    8. '=' → logprob: -8.692221641540527
    9. 'ear' → logprob: -9.442221641540527
    10. ' =' → logprob: -9.567221641540527

Token 1017: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0022103239316493273
    2. '[' → logprob: -6.1272101402282715
    3. '[
' → logprob: -11.37721061706543
    4. '\[' → logprob: -12.37721061706543
    5. '```' → logprob: -13.25221061706543
    6. '=' → logprob: -13.25221061706543
    7. '
' → logprob: -14.00221061706543
    8. '[...]' → logprob: -14.37721061706543
    9. '[E' → logprob: -14.62721061706543
    10. '[event' → logprob: -14.75221061706543

Token 1018: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.000295420759357512
    2. 'd' → logprob: -8.625295639038086
    3. 'i' → logprob: -9.500295639038086
    4. '[id' → logprob: -12.250295639038086
    5. 'idf' → logprob: -12.375295639038086
    6. 'di' → logprob: -12.500295639038086
    7. '=' → logprob: -12.687795639038086
    8. ' id' → logprob: -13.062795639038086
    9. '[' → logprob: -13.062795639038086
    10. '_id' → logprob: -13.125295639038086

Token 1019: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05069897696375847
    2. ' =' → logprob: -3.05069899559021
    3. ']' → logprob: -6.550698757171631
    4. ']=' → logprob: -7.300698757171631
    5. ')=' → logprob: -13.175699234008789
    6. ')' → logprob: -13.925699234008789
    7. ' ]' → logprob: -14.050699234008789
    8. '=
' → logprob: -14.050699234008789
    9. ' =
' → logprob: -14.925699234008789
    10. '=True' → logprob: -16.05069923400879

Token 1020: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011069540778407827
    2. ' ' → logprob: -9.125110626220703
    3. '=' → logprob: -13.875110626220703
    4. '>' → logprob: -15.000110626220703
    5. '0' → logprob: -15.750110626220703
    6. '<|end|>' → logprob: -16.500110626220703
    7. 'to' → logprob: -17.000110626220703
    8. '```' → logprob: -17.000110626220703
    9. ':' → logprob: -17.125110626220703
    10. '...' → logprob: -17.500110626220703

Token 1021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.125009536743164
    3. '0' → logprob: -13.250009536743164
    4. '=' → logprob: -14.375009536743164
    5. '<|end|>' → logprob: -14.375009536743164
    6. '>' → logprob: -15.500009536743164
    7. '```' → logprob: -15.750009536743164
    8. '   ' → logprob: -16.750009536743164
    9. '#' → logprob: -17.125009536743164
    10. '...' → logprob: -17.375009536743164

Token 1022: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7706431746482849
    2. ' =' → logprob: -1.2706432342529297
    3. ']' → logprob: -1.3956432342529297
    4. ']=' → logprob: -4.77064323425293
    5. ' ]' → logprob: -7.77064323425293
    6. ')' → logprob: -10.64564323425293
    7. ']+=' → logprob: -11.14564323425293
    8. '[' → logprob: -11.77064323425293
    9. '=True' → logprob: -12.39564323425293
    10. ')=' → logprob: -12.52064323425293

Token 1023: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141440629959106
    2. ' =' → logprob: -1.7014143466949463
    3. '=
' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.076414108276367
    5. ' =
' → logprob: -15.701414108276367
    6. '=True' → logprob: -15.951414108276367
    7. ']=' → logprob: -16.701414108276367
    8. ')=' → logprob: -17.076414108276367
    9. '=end' → logprob: -17.201414108276367
    10. ']' → logprob: -17.451414108276367

Token 1024: ' year' (ID: 1284)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -7.52919222577475e-05
    2. ' year' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.750075340270996
    4. 'y' → logprob: -16.87507438659668
    5. 'ye' → logprob: -17.00007438659668
    6. '
' → logprob: -17.25007438659668
    7. ' ' → logprob: -17.75007438659668
    8. '(year' → logprob: -18.00007438659668
    9. '	' → logprob: -18.37507438659668
    10. '  ' → logprob: -19.00007438659668

Token 1025: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22316209971904755
    2. '
' → logprob: -1.723162055015564
    3. '            
' → logprob: -4.9731621742248535
    4. '<|end|>' → logprob: -5.5981621742248535
    5. 'current' → logprob: -6.0981621742248535
    6. '    
' → logprob: -6.5981621742248535
    7. ' current' → logprob: -6.5981621742248535
    8. ' 
' → logprob: -6.7231621742248535
    9. '  
' → logprob: -6.7231621742248535
    10. ',' → logprob: -6.8481621742248535

Token 1026: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051185447722673416
    2. '
' → logprob: -3.926185369491577
    3. '            
' → logprob: -4.551185607910156
    4. '       ' → logprob: -5.426185607910156
    5. '<|end|>' → logprob: -5.801185607910156
    6. ' ' → logprob: -5.926185607910156
    7. '  
' → logprob: -6.051185607910156
    8. '    
' → logprob: -6.051185607910156
    9. ' 
' → logprob: -6.676185607910156
    10. '        
' → logprob: -6.926185607910156

Token 1027: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17948442697525024
    2. 'current' → logprob: -2.1794843673706055
    3. '       ' → logprob: -3.4294843673706055
    4. '
' → logprob: -4.9294843673706055
    5. ' for' → logprob: -5.1794843673706055
    6. 'd' → logprob: -5.4294843673706055
    7. '        
' → logprob: -8.179484367370605
    8. 'c' → logprob: -8.304484367370605
    9. '```' → logprob: -8.304484367370605
    10. '   ' → logprob: -9.429484367370605

Token 1028: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6715370416641235
    2. 'd' → logprob: -2.296536922454834
    3. 'increments' → logprob: -2.671536922454834
    4. 'year' → logprob: -3.421536922454834
    5. 'increment' → logprob: -3.421536922454834
    6. 'current' → logprob: -3.421536922454834
    7. 'prefix' → logprob: -3.546536922454834
    8. 'c' → logprob: -3.671536922454834
    9. 'dp' → logprob: -4.546536922454834
    10. '#' → logprob: -4.546536922454834

Token 1029: ' prepare' (ID: 13708)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2565594017505646
    2. '       ' → logprob: -2.381559371948242
    3. ' for' → logprob: -2.631559371948242
    4. '=' → logprob: -3.631559371948242
    5. ' =' → logprob: -3.881559371948242
    6. '#' → logprob: -4.881559371948242
    7. ' #' → logprob: -6.381559371948242
    8. 'def' → logprob: -6.631559371948242
    9. '   ' → logprob: -6.756559371948242
    10. 'continue' → logprob: -7.131559371948242

Token 1030: ' a' (ID: 261)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -2.1965272426605225
    2. 'diff' → logprob: -2.4465272426605225
    3. ' prefix' → logprob: -2.5715272426605225
    4. ' diff' → logprob: -2.9465272426605225
    5. ' an' → logprob: -3.1965272426605225
    6. ' a' → logprob: -3.1965272426605225
    7. 'events' → logprob: -3.3215272426605225
    8. 'a' → logprob: -3.5715272426605225
    9. 'edge' → logprob: -3.5715272426605225
    10. 'increment' → logprob: -3.5715272426605225

Token 1031: ' list' (ID: 1562)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7805539965629578
    2. 'diff' → logprob: -2.1555540561676025
    3. 'd' → logprob: -2.5305540561676025
    4. 'count' → logprob: -2.6555540561676025
    5. 'change' → logprob: -3.1555540561676025
    6. 'difference' → logprob: -3.4055540561676025
    7. 'changes' → logprob: -3.7805540561676025
    8. 'delta' → logprob: -4.030553817749023
    9. 'suffix' → logprob: -4.030553817749023
    10. 'current' → logprob: -4.405553817749023

Token 1032: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.9886997938156128
    2. ' of' → logprob: -1.1136997938156128
    3. '       ' → logprob: -2.2386999130249023
    4. ' =' → logprob: -2.6136999130249023
    5. '=' → logprob: -2.9886999130249023
    6. '[' → logprob: -3.9886999130249023
    7. ',' → logprob: -4.988699913024902
    8. '_of' → logprob: -5.113699913024902
    9. 'for' → logprob: -5.238699913024902
    10. '[
' → logprob: -5.613699913024902

Token 1033: ' (' (ID: 350)
  Prédit: 'increments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increments' → logprob: -0.03896213322877884
    2. 'increment' → logprob: -4.288962364196777
    3. 'events' → logprob: -5.288962364196777
    4. ' increments' → logprob: -5.788962364196777
    5. 'effects' → logprob: -5.788962364196777
    6. 'in' → logprob: -6.163962364196777
    7. 'pairs' → logprob: -6.538962364196777
    8. 'changes' → logprob: -6.538962364196777
    9. 'd' → logprob: -6.788962364196777
    10. '(sub' → logprob: -6.913962364196777

Token 1034: 'year' (ID: 5682)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6486140489578247
    2. 'year' → logprob: -2.148613929748535
    3. '(e' → logprob: -2.773613929748535
    4. '(sub' → logprob: -3.023613929748535
    5. 'size' → logprob: -3.148613929748535
    6. 'increments' → logprob: -3.148613929748535
    7. 'edge' → logprob: -3.273613929748535
    8. 'in' → logprob: -3.398613929748535
    9. '(in' → logprob: -4.148613929748535
    10. 'e' → logprob: -4.273613929748535

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006384541047737002
    2. ',
' → logprob: -8.000638008117676
    3. '           ' → logprob: -9.125638008117676
    4. '       ' → logprob: -10.000638008117676
    5. ' ,' → logprob: -10.500638008117676
    6. ')' → logprob: -11.000638008117676
    7. '=' → logprob: -11.125638008117676
    8. 's' → logprob: -11.500638008117676
    9. '[' → logprob: -11.625638008117676
    10. '   ' → logprob: -11.875638008117676

Token 1036: ' impact' (ID: 6232)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.06320423632860184
    2. 'size' → logprob: -3.563204288482666
    3. ' subtree' → logprob: -4.563204288482666
    4. 'count' → logprob: -5.188204288482666
    5. 'delta' → logprob: -5.313204288482666
    6. 'edge' → logprob: -6.188204288482666
    7. 'increment' → logprob: -6.313204288482666
    8. 'change' → logprob: -6.813204288482666
    9. 'node' → logprob: -7.063204288482666
    10. ' sub' → logprob: -7.313204288482666

Token 1037: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1828821748495102
    2. ')' → logprob: -1.9328821897506714
    3. '_count' → logprob: -4.932882308959961
    4. '_size' → logprob: -5.182882308959961
    5. '_increment' → logprob: -6.307882308959961
    6. 'size' → logprob: -6.432882308959961
    7. '   ' → logprob: -6.682882308959961
    8. '_value' → logprob: -7.307882308959961
    9. '),' → logprob: -7.307882308959961
    10. '_amount' → logprob: -7.557882308959961

Token 1038: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5639331936836243
    2. '=' → logprob: -1.1889331340789795
    3. '       ' → logprob: -2.4389331340789795
    4. ',' → logprob: -4.313933372497559
    5. 'impact' → logprob: -4.938933372497559
    6. '_' → logprob: -5.438933372497559
    7. 'events' → logprob: -6.438933372497559
    8. '_imp' → logprob: -6.688933372497559
    9. '_pairs' → logprob: -6.813933372497559
    10. '           ' → logprob: -7.063933372497559

Token 1039: ' all' (ID: 722)
  Prédit: 'increments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increments' → logprob: -0.8465732336044312
    2. 'edge' → logprob: -2.5965733528137207
    3. 'edges' → logprob: -2.5965733528137207
    4. '[' → logprob: -2.7215733528137207
    5. 'each' → logprob: -2.8465733528137207
    6. '(' → logprob: -2.8465733528137207
    7. 'increment' → logprob: -2.9715733528137207
    8. '[
' → logprob: -3.3465733528137207
    9. '[]' → logprob: -3.7215733528137207
    10. ' increments' → logprob: -4.221573352813721

Token 1040: ' relevant' (ID: 12331)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7030512690544128
    2. 'in' → logprob: -0.8280512690544128
    3. ' edges' → logprob: -3.2030513286590576
    4. ' in' → logprob: -4.3280510902404785
    5. 'edge' → logprob: -5.7030510902404785
    6. 'tree' → logprob: -6.2030510902404785
    7. 'increments' → logprob: -6.2030510902404785
    8. 'e' → logprob: -6.3280510902404785
    9. 'nodes' → logprob: -6.3280510902404785
    10. 'v' → logprob: -7.7030510902404785

Token 1041: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11143822968006134
    2. ' edges' → logprob: -2.736438274383545
    3. 'in' → logprob: -4.486438274383545
    4. 'increments' → logprob: -4.986438274383545
    5. '_edges' → logprob: -5.486438274383545
    6. 'tree' → logprob: -5.611438274383545
    7. ')' → logprob: -5.986438274383545
    8. '_in' → logprob: -6.361438274383545
    9. '   ' → logprob: -6.611438274383545
    10. '_tree' → logprob: -6.986438274383545

Token 1042: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0754619836807251
    2. 'edges' → logprob: -3.7004618644714355
    3. ',' → logprob: -3.9504618644714355
    4. '[
' → logprob: -4.5754618644714355
    5. 'impact' → logprob: -5.5754618644714355
    6. ' edges' → logprob: -5.5754618644714355
    7. ',
' → logprob: -6.0754618644714355
    8. '[' → logprob: -6.2004618644714355
    9. 'tokens' → logprob: -6.9504618644714355
    10. ' impact' → logprob: -7.0754618644714355

Token 1043: 'those' (ID: 104647)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8969408273696899
    2. ',' → logprob: -1.39694082736969
    3. ' in' → logprob: -2.6469407081604004
    4. ')' → logprob: -2.8969407081604004
    5. ' (' → logprob: -3.0219407081604004
    6. '(' → logprob: -3.5219407081604004
    7. '[],' → logprob: -3.5219407081604004
    8. '(in' → logprob: -4.2719407081604
    9. '[' → logprob: -4.8969407081604
    10. '[(' → logprob: -4.8969407081604

Token 1044: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12431398034095764
    2. ' in' → logprob: -2.499314069747925
    3. 'that' → logprob: -3.999314069747925
    4. ' that' → logprob: -4.749313831329346
    5. '[in' → logprob: -5.999313831329346
    6. '           ' → logprob: -6.999313831329346
    7. ')' → logprob: -7.124313831329346
    8. '=' → logprob: -7.749313831329346
    9. '[' → logprob: -7.749313831329346
    10. '   ' → logprob: -8.124314308166504

Token 1045: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.3311074674129486
    2. 'the' → logprob: -1.581107497215271
    3. 'in' → logprob: -2.9561073780059814
    4. '_tree' → logprob: -4.2061076164245605
    5. ' tree' → logprob: -5.8311076164245605
    6. 'short' → logprob: -6.4561076164245605
    7. ' the' → logprob: -6.5811076164245605
    8. ' in' → logprob: -6.7061076164245605
    9. 'self' → logprob: -7.2061076164245605
    10. '_short' → logprob: -7.8311076164245605

Token 1046: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1138676181435585
    2. ')' → logprob: -2.6138675212860107
    3. '       ' → logprob: -4.11386775970459
    4. '),' → logprob: -4.98886775970459
    5. ',
' → logprob: -5.36386775970459
    6. ')
' → logprob: -6.23886775970459
    7. '           ' → logprob: -6.86386775970459
    8. '):
' → logprob: -7.36386775970459
    9. '
' → logprob: -7.86386775970459
    10. ' if' → logprob: -8.11386775970459

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17791233956813812
    2. ',' → logprob: -2.0529122352600098
    3. 'edges' → logprob: -4.05291223526001
    4. '
' → logprob: -5.05291223526001
    5. ',
' → logprob: -5.42791223526001
    6. ' edges' → logprob: -6.17791223526001
    7. ' =' → logprob: -6.92791223526001
    8. '```' → logprob: -8.052912712097168
    9. '[
' → logprob: -8.302912712097168
    10. '           ' → logprob: -8.302912712097168

Token 1048: ' #' (ID: 1069)
  Prédit: 'impact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.5527929067611694
    2. '       ' → logprob: -1.6777929067611694
    3. 'events' → logprob: -2.677793025970459
    4. 'imp' → logprob: -2.677793025970459
    5. 'updates' → logprob: -3.302793025970459
    6. 'edges' → logprob: -4.177793025970459
    7. ' impact' → logprob: -4.302793025970459
    8. 'changes' → logprob: -4.552793025970459
    9. 'increments' → logprob: -5.427793025970459
    10. 'effects' → logprob: -6.177793025970459

Token 1049: ' At' (ID: 3604)
  Prédit: 'impact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.5171505212783813
    2. '       ' → logprob: -2.017150402069092
    3. 'imp' → logprob: -2.267150402069092
    4. 'events' → logprob: -2.392150402069092
    5. 'updates' → logprob: -3.517150402069092
    6. 'changes' → logprob: -4.142150402069092
    7. 'edges' → logprob: -4.892150402069092
    8. 'edge' → logprob: -5.642150402069092
    9. ' impact' → logprob: -5.892150402069092
    10. 'change' → logprob: -6.017150402069092

Token 1050: ' the' (ID: 290)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -1.291053056716919
    2. 'for' → logprob: -1.666053056716919
    3. 'each' → logprob: -1.791053056716919
    4. '       ' → logprob: -2.916053056716919
    5. 'the' → logprob: -3.041053056716919
    6. '=' → logprob: -3.666053056716919
    7. 'this' → logprob: -3.791053056716919
    8. '
' → logprob: -4.04105281829834
    9. ' =' → logprob: -4.16605281829834
    10. '[
' → logprob: -4.16605281829834

Token 1051: ' year' (ID: 1284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.394443154335022
    2. 'end' → logprob: -2.0194430351257324
    3. '[
' → logprob: -2.5194430351257324
    4. 'begin' → logprob: -2.7694430351257324
    5. ']' → logprob: -2.8944430351257324
    6. '[' → logprob: -3.0194430351257324
    7. '#' → logprob: -3.1444430351257324
    8. ' end' → logprob: -3.2694430351257324
    9. 'year' → logprob: -3.3944430351257324
    10. 'start' → logprob: -3.3944430351257324

Token 1052: ' when' (ID: 1261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017069095745682716
    2. '=' → logprob: -4.642068862915039
    3. ',
' → logprob: -6.392068862915039
    4. '_,' → logprob: -7.017068862915039
    5. '_' → logprob: -7.142068862915039
    6. '(' → logprob: -7.392068862915039
    7. '[' → logprob: -7.517068862915039
    8. '[
' → logprob: -8.017068862915039
    9. ' =' → logprob: -8.267068862915039
    10. ' ,' → logprob: -8.392068862915039

Token 1053: ' edge' (ID: 11165)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08205626159906387
    2. 'edge' → logprob: -3.3320562839508057
    3. 'an' → logprob: -4.207056045532227
    4. 'the' → logprob: -4.832056045532227
    5. 'they' → logprob: -4.957056045532227
    6. ' in' → logprob: -5.207056045532227
    7. 'each' → logprob: -5.332056045532227
    8. 'eid' → logprob: -7.832056045532227
    9. ' an' → logprob: -7.957056045532227
    10. 'e' → logprob: -8.207056045532227

Token 1054: ''s' (ID: 885)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.16117629408836365
    2. ' in' → logprob: -2.6611762046813965
    3. '_in' → logprob: -3.7861762046813965
    4. 'in' → logprob: -3.9111762046813965
    5. ' is' → logprob: -4.2861762046813965
    6. ',' → logprob: -5.4111762046813965
    7. ')' → logprob: -6.0361762046813965
    8. ' _' → logprob: -6.2861762046813965
    9. '   ' → logprob: -7.1611762046813965
    10. '_' → logprob: -7.1611762046813965

Token 1055: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -1.0996062755584717
    2. 'price' → logprob: -1.0996062755584717
    3. 'in' → logprob: -1.9746062755584717
    4. '_price' → logprob: -2.8496062755584717
    5. 'cost' → logprob: -3.2246062755584717
    6. ' cost' → logprob: -3.2246062755584717
    7. ' in' → logprob: -3.4746062755584717
    8. ' raise' → logprob: -4.849606513977051
    9. 'increase' → logprob: -5.599606513977051
    10. '_in' → logprob: -6.349606513977051

Token 1056: ' increases' (ID: 21073)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.5077739357948303
    2. '_up' → logprob: -1.8827738761901855
    3. 'increase' → logprob: -2.5077738761901855
    4. '_raise' → logprob: -3.1327738761901855
    5. '_' → logprob: -3.6327738761901855
    6. 'is' → logprob: -3.8827738761901855
    7. 'in' → logprob: -4.2577738761901855
    8. ' is' → logprob: -4.3827738761901855
    9. '_is' → logprob: -5.0077738761901855
    10. 'up' → logprob: -5.2577738761901855

Token 1057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022620297968387604
    2. '           ' → logprob: -4.02262020111084
    3. '.append' → logprob: -6.02262020111084
    4. 'append' → logprob: -7.02262020111084
    5. '       ' → logprob: -7.89762020111084
    6. '               ' → logprob: -9.02262020111084
    7. '=' → logprob: -9.14762020111084
    8. ' ,' → logprob: -9.52262020111084
    9. ',e' → logprob: -9.64762020111084
    10. ',(' → logprob: -9.89762020111084

Token 1058: ' dissatisfaction' (ID: 183931)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2423183172941208
    2. 'current' → logprob: -1.9923182725906372
    3. '       ' → logprob: -3.8673183917999268
    4. '           ' → logprob: -3.9923183917999268
    5. 'impact' → logprob: -3.9923183917999268
    6. '#' → logprob: -4.492318153381348
    7. ' current' → logprob: -5.867318153381348
    8. '   ' → logprob: -6.242318153381348
    9. '
' → logprob: -6.992318153381348
    10. '               ' → logprob: -7.367318153381348

Token 1059: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1348884105682373
    2. ' +=' → logprob: -2.3848884105682373
    3. ',' → logprob: -3.7598884105682373
    4. '
' → logprob: -5.384888648986816
    5. '_in' → logprob: -6.134888648986816
    6. ']+=' → logprob: -6.884888648986816
    7. ' ,' → logprob: -7.009888648986816
    8. '+=(' → logprob: -7.759888648986816
    9. 'increments' → logprob: -8.509888648986816
    10. '```' → logprob: -8.634888648986816

Token 1060: ' subtree' (ID: 126158)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.02440173178911209
    2. ' subtree' → logprob: -3.7744016647338867
    3. '(sub' → logprob: -7.524401664733887
    4. ' sub' → logprob: -8.274401664733887
    5. 'size' → logprob: -9.649401664733887
    6. 'space' → logprob: -10.274401664733887
    7. 'substring' → logprob: -10.524401664733887
    8. '"' → logprob: -10.774401664733887
    9. '	sub' → logprob: -10.774401664733887
    10. '   ' → logprob: -10.774401664733887

Token 1061: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0032953477930277586
    2. 'size' → logprob: -6.128295421600342
    3. '
' → logprob: -8.003294944763184
    4. '_sizes' → logprob: -8.378294944763184
    5. '_' → logprob: -8.878294944763184
    6. '[' → logprob: -9.503294944763184
    7. '   ' → logprob: -9.878294944763184
    8. '```' → logprob: -10.003294944763184
    9. '       ' → logprob: -10.253294944763184
    10. '[_' → logprob: -10.503294944763184

Token 1062: ' of' (ID: 328)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5364603400230408
    2. '       ' → logprob: -2.2864603996276855
    3. '           ' → logprob: -2.5364603996276855
    4. '
' → logprob: -2.9114603996276855
    5. ' =' → logprob: -2.9114603996276855
    6. ',' → logprob: -3.4114603996276855
    7. '_' → logprob: -4.1614603996276855
    8. '[
' → logprob: -4.2864603996276855
    9. '=' → logprob: -4.6614603996276855
    10. '[(' → logprob: -5.0364603996276855

Token 1063: ' child' (ID: 2320)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.5795361995697021
    2. 'self' → logprob: -1.8295361995697021
    3. 'edge' → logprob: -2.829536199569702
    4. 'the' → logprob: -2.829536199569702
    5. '[e' → logprob: -3.329536199569702
    6. '[' → logprob: -3.829536199569702
    7. '[self' → logprob: -4.079536437988281
    8. ' tree' → logprob: -4.454536437988281
    9. 'e' → logprob: -4.454536437988281
    10. ' the' → logprob: -4.704536437988281

Token 1064: ' node' (ID: 4596)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0986058712005615
    2. '       ' → logprob: -1.8486058712005615
    3. '[
' → logprob: -1.8486058712005615
    4. ',' → logprob: -2.3486058712005615
    5. '           ' → logprob: -2.4736058712005615
    6. ' =' → logprob: -3.2236058712005615
    7. ',
' → logprob: -3.5986058712005615
    8. '.append' → logprob: -3.9736058712005615
    9. ')
' → logprob: -4.223606109619141
    10. '[' → logprob: -4.473606109619141

Token 1065: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05287977680563927
    2. 'edges' → logprob: -3.552879810333252
    3. '
' → logprob: -4.927879810333252
    4. ',' → logprob: -5.802879810333252
    5. 'impact' → logprob: -6.302879810333252
    6. ' edges' → logprob: -6.302879810333252
    7. 'points' → logprob: -6.427879810333252
    8. '        
' → logprob: -6.677879810333252
    9. 'events' → logprob: -6.927879810333252
    10. '           ' → logprob: -7.427879810333252

Token 1066: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7193782925605774
    2. '(' → logprob: -1.5943782329559326
    3. '(
' → logprob: -1.5943782329559326
    4. ')' → logprob: -3.0943782329559326
    5. '[' → logprob: -4.719378471374512
    6. '=' → logprob: -4.844378471374512
    7. '   ' → logprob: -4.844378471374512
    8. '[
' → logprob: -5.344378471374512
    9. 'by' → logprob: -5.469378471374512
    10. '           ' → logprob: -5.469378471374512

Token 1067: ' that' (ID: 484)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6112150549888611
    2. ' parent' → logprob: -1.9862151145935059
    3. 'the' → logprob: -2.486215114593506
    4. ' that' → logprob: -2.486215114593506
    5. 'that' → logprob: -2.861215114593506
    6. ' the' → logprob: -3.111215114593506
    7. ''' → logprob: -3.736215114593506
    8. 'edge' → logprob: -4.736215114593506
    9. ' edge' → logprob: -5.611215114593506
    10. '`' → logprob: -5.986215114593506

Token 1068: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.10251060128211975
    2. ' edge' → logprob: -2.977510690689087
    3. '_edge' → logprob: -3.977510690689087
    4. '_in' → logprob: -5.602510452270508
    5. '
' → logprob: -5.852510452270508
    6. 'parent' → logprob: -5.977510452270508
    7. '   ' → logprob: -6.227510452270508
    8. 'e' → logprob: -6.227510452270508
    9. 'tree' → logprob: -6.227510452270508
    10. 'in' → logprob: -6.602510452270508

Token 1069: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048104189336299896
    2. '
' → logprob: -3.4231042861938477
    3. 'edges' → logprob: -4.798104286193848
    4. ',' → logprob: -6.673104286193848
    5. '        
' → logprob: -6.798104286193848
    6. ' edges' → logprob: -7.048104286193848
    7. '           ' → logprob: -7.298104286193848
    8. ',
' → logprob: -8.548104286193848
    9. 'for' → logprob: -8.548104286193848
    10. '   ' → logprob: -8.798104286193848

Token 1070: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06968318670988083
    2. 'edges' → logprob: -4.069683074951172
    3. 'for' → logprob: -4.694683074951172
    4. '           ' → logprob: -4.819683074951172
    5. ' for' → logprob: -5.194683074951172
    6. ',' → logprob: -5.569683074951172
    7. '
' → logprob: -5.944683074951172
    8. 'edge' → logprob: -5.944683074951172
    9. '[
' → logprob: -5.944683074951172
    10. '   ' → logprob: -6.569683074951172

Token 1071: ' year' (ID: 1284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34387657046318054
    2. 'impact' → logprob: -2.093876600265503
    3. 'events' → logprob: -2.593876600265503
    4. 'imp' → logprob: -3.718876600265503
    5. 'changes' → logprob: -4.593876361846924
    6. 'increments' → logprob: -4.843876361846924
    7. 'updates' → logprob: -4.843876361846924
    8. 'edges' → logprob: -4.968876361846924
    9. 'change' → logprob: -5.093876361846924
    10. 'd' → logprob: -5.593876361846924

Token 1072: '_events' (ID: 46626)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4621695280075073
    2. '_imp' → logprob: -1.5871695280075073
    3. '_events' → logprob: -2.462169647216797
    4. '_changes' → logprob: -3.212169647216797
    5. '_' → logprob: -3.962169647216797
    6. '=' → logprob: -4.837169647216797
    7. 's' → logprob: -5.837169647216797
    8. '_effect' → logprob: -6.462169647216797
    9. ' =' → logprob: -6.587169647216797
    10. '_,' → logprob: -6.587169647216797

Token 1073: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236025452613831
    2. '=' → logprob: -0.8986025452613831
    3. '=[]' → logprob: -7.898602485656738
    4. '.append' → logprob: -9.773602485656738
    5. '=[]
' → logprob: -11.023602485656738
    6. '=[' → logprob: -11.898602485656738
    7. '[' → logprob: -12.023602485656738
    8. ',' → logprob: -12.398602485656738
    9. '[]' → logprob: -12.398602485656738
    10. '.' → logprob: -12.898602485656738

Token 1074: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0023429463617503643
    2. ' []' → logprob: -6.25234317779541
    3. '[' → logprob: -8.50234317779541
    4. '[]
' → logprob: -8.50234317779541
    5. '[(' → logprob: -13.00234317779541
    6. '[]}' → logprob: -13.25234317779541
    7. '[
' → logprob: -13.50234317779541
    8. '   ' → logprob: -14.25234317779541
    9. '[],' → logprob: -14.75234317779541
    10. '       ' → logprob: -14.87734317779541

Token 1075: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2938748598098755
    2. '(' → logprob: -2.543874740600586
    3. '[]' → logprob: -2.793874740600586
    4. '()]' → logprob: -2.793874740600586
    5. '()' → logprob: -3.293874740600586
    6. '0' → logprob: -5.043874740600586
    7. ']*' → logprob: -6.043874740600586
    8. '[]
' → logprob: -6.168874740600586
    9. ']
' → logprob: -6.293874740600586
    10. 'None' → logprob: -7.293874740600586

Token 1076: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019774073734879494
    2. ']*(' → logprob: -4.394773960113525
    3. ']*' → logprob: -5.144773960113525
    4. ' for' → logprob: -7.019773960113525
    5. 'for' → logprob: -8.019774436950684
    6. ',' → logprob: -9.269774436950684
    7. ']+' → logprob: -9.894774436950684
    8. ' ]' → logprob: -10.894774436950684
    9. ',
' → logprob: -12.019774436950684
    10. '
' → logprob: -12.394774436950684

Token 1077: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07610059529542923
    2. '
' → logprob: -3.8261005878448486
    3. ']*' → logprob: -4.326100826263428
    4. 'for' → logprob: -4.451100826263428
    5. ']*(' → logprob: -4.701100826263428
    6. '*' → logprob: -5.326100826263428
    7. ' for' → logprob: -5.701100826263428
    8. '+' → logprob: -6.076100826263428
    9. ']+' → logprob: -6.451100826263428
    10. ')' → logprob: -7.201100826263428

Token 1078: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3795937522663735e-05
    2. 'self' → logprob: -11.12502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(len' → logprob: -14.37502384185791
    5. '(' → logprob: -14.87502384185791
    6. '((' → logprob: -14.87502384185791
    7. '       ' → logprob: -15.87502384185791
    8. '[self' → logprob: -15.87502384185791
    9. '(sel' → logprob: -16.000022888183594
    10. '(this' → logprob: -16.250022888183594

Token 1079: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004161622375249863
    2. '(self' → logprob: -5.504161834716797
    3. '       ' → logprob: -10.379161834716797
    4. '
' → logprob: -10.629161834716797
    5. '           ' → logprob: -10.879161834716797
    6. ' self' → logprob: -12.504161834716797
    7. '[self' → logprob: -13.129161834716797
    8. '   ' → logprob: -13.379161834716797
    9. '(' → logprob: -14.254161834716797
    10. '=self' → logprob: -14.504161834716797

Token 1080: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.0031243599951267242
    2. 'q' → logprob: -5.878124237060547
    3. '.n' → logprob: -8.503124237060547
    4. '+' → logprob: -9.628124237060547
    5. '(q' → logprob: -10.878124237060547
    6. '
' → logprob: -12.253124237060547
    7. 'n' → logprob: -12.378124237060547
    8. '[q' → logprob: -12.378124237060547
    9. '.' → logprob: -12.503124237060547
    10. '.
' → logprob: -13.003124237060547

Token 1081: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011232078075408936
    2. ' +' → logprob: -4.511231899261475
    3. '+
' → logprob: -8.636232376098633
    4. '
' → logprob: -12.636232376098633
    5. ' +
' → logprob: -12.761232376098633
    6. '＋' → logprob: -16.011232376098633
    7. '1' → logprob: -16.511232376098633
    8. '+

' → logprob: -16.636232376098633
    9. '   ' → logprob: -16.761232376098633
    10. '+[' → logprob: -16.886232376098633

Token 1082: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017094480572268367
    2. '2' → logprob: -6.376709461212158
    3. '
' → logprob: -12.501708984375
    4. ' ' → logprob: -13.251708984375
    5. '   ' → logprob: -14.376708984375
    6. '10' → logprob: -14.501708984375
    7. '+' → logprob: -16.251708984375
    8. '11' → logprob: -16.251708984375
    9. '6' → logprob: -16.376708984375
    10. '7' → logprob: -16.751708984375

Token 1083: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1797870397567749
    2. '2' → logprob: -1.804787039756775
    3. '10' → logprob: -11.179786682128906
    4. ' ' → logprob: -11.304786682128906
    5. '
' → logprob: -11.804786682128906
    6. '   ' → logprob: -12.929786682128906
    7. '5' → logprob: -13.429786682128906
    8. '(' → logprob: -13.992286682128906
    9. '11' → logprob: -14.429786682128906
    10. '3' → logprob: -14.929786682128906

Token 1084: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762644410133362
    2. ')
' → logprob: -0.8262644410133362
    3. '       ' → logprob: -8.201264381408691
    4. ')
' → logprob: -10.826264381408691
    5. ')

' → logprob: -10.951264381408691
    6. '
' → logprob: -12.451264381408691
    7. ']' → logprob: -12.951264381408691
    8. ']
' → logprob: -12.951264381408691
    9. ')]' → logprob: -13.701264381408691
    10. ')`
' → logprob: -14.076264381408691

Token 1085: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.723058819770813
    2. '+' → logprob: -2.2230587005615234
    3. '
' → logprob: -2.3480587005615234
    4. '        
' → logprob: -2.3480587005615234
    5. 'for' → logprob: -2.5980587005615234
    6. '<|end|>' → logprob: -2.7230587005615234
    7. '+
' → logprob: -3.5980587005615234
    8. ' for' → logprob: -4.223058700561523
    9. ')' → logprob: -5.223058700561523
    10. ' 
' → logprob: -5.223058700561523

Token 1086: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6255161762237549
    2. 'for' → logprob: -1.3755161762237549
    3. '       ' → logprob: -1.6255161762237549
    4. ' for' → logprob: -5.375515937805176
    5. '        
' → logprob: -5.625515937805176
    6. ')' → logprob: -6.125515937805176
    7. '  
' → logprob: -7.250515937805176
    8. '+' → logprob: -7.500515937805176
    9. '<|end|>' → logprob: -7.500515937805176
    10. '+
' → logprob: -7.625515937805176

Token 1087: ' +' (ID: 659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4706050157546997
    2. '
' → logprob: -1.0956050157546997
    3. ' 
' → logprob: -3.84560489654541
    4. '\n' → logprob: -4.97060489654541
    5. '1' → logprob: -5.34560489654541
    6. ' ' → logprob: -5.84560489654541
    7. '
' → logprob: -7.09560489654541
    8. '+' → logprob: -7.09560489654541
    9. ')' → logprob: -7.22060489654541
    10. ''\' → logprob: -7.59560489654541

Token 1088: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25549888610839844
    2. '2' → logprob: -1.5054988861083984
    3. '10' → logprob: -6.255498886108398
    4. ' ' → logprob: -7.880498886108398
    5. '           ' → logprob: -8.130498886108398
    6. '       ' → logprob: -8.255498886108398
    7. '   ' → logprob: -8.255498886108398
    8. '5' → logprob: -9.505498886108398
    9. '0' → logprob: -9.505498886108398
    10. '
' → logprob: -9.880498886108398

Token 1089: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019890354946255684
    2. '<|end|>' → logprob: -4.144890308380127
    3. '
' → logprob: -6.269890308380127
    4. ' 
' → logprob: -7.519890308380127
    5. '  
' → logprob: -7.644890308380127
    6. '<|end|>' → logprob: -8.269890785217285
    7. '        
' → logprob: -9.019890785217285
    8. '    
' → logprob: -9.144890785217285
    9. ')' → logprob: -9.144890785217285
    10. ')
' → logprob: -9.519890785217285

Token 1090: ' safety' (ID: 9246)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7124977707862854
    2. '1' → logprob: -1.7124977111816406
    3. 'safe' → logprob: -2.3374977111816406
    4. '2' → logprob: -2.7124977111816406
    5. 'q' → logprob: -2.9624977111816406
    6. '
' → logprob: -3.0874977111816406
    7. 's' → logprob: -3.7124977111816406
    8. ' safe' → logprob: -4.962497711181641
    9. 'padding' → logprob: -5.212497711181641
    10. 'buffer' → logprob: -5.212497711181641

Token 1091: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022182686254382133
    2. '    
' → logprob: -5.647182464599609
    3. '[' → logprob: -5.772182464599609
    4. ' 
' → logprob: -5.897182464599609
    5. '\n' → logprob: -6.147182464599609
    6. '        
' → logprob: -6.272182464599609
    7. '[
' → logprob: -6.272182464599609
    8. '       ' → logprob: -6.522182464599609
    9. '  
' → logprob: -6.647182464599609
    10. 'for' → logprob: -7.022182464599609

Token 1092: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08679454028606415
    2. 'for' → logprob: -3.08679461479187
    3. ' for' → logprob: -4.336794376373291
    4. '
' → logprob: -4.461794376373291
    5. '        
' → logprob: -4.961794376373291
    6. '[' → logprob: -6.336794376373291
    7. '   ' → logprob: -7.586794376373291
    8. '[
' → logprob: -7.961794376373291
    9. '<|end|>' → logprob: -8.08679485321045
    10. '           ' → logprob: -8.21179485321045

Token 1093: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07391664385795593
    2. '       ' → logprob: -2.6989166736602783
    3. ' for' → logprob: -6.073916435241699
    4. 'parent' → logprob: -7.573916435241699
    5. 'child' → logprob: -7.823916435241699
    6. '
' → logprob: -8.4489164352417
    7. '```' → logprob: -8.6989164352417
    8. 'u' → logprob: -9.0739164352417
    9. 'edge' → logprob: -10.1989164352417
    10. '        
' → logprob: -10.4489164352417

Token 1094: ' eid' (ID: 131397)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1822187453508377
    2. 'eid' → logprob: -1.8072187900543213
    3. ' eid' → logprob: -6.432218551635742
    4. ' v' → logprob: -7.682218551635742
    5. 'u' → logprob: -9.557218551635742
    6. '   ' → logprob: -9.807218551635742
    7. 'vid' → logprob: -9.807218551635742
    8. 'i' → logprob: -9.807218551635742
    9. 'e' → logprob: -9.932218551635742
    10. 'edge' → logprob: -10.807218551635742

Token 1095: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16476532816886902
    2. 'in' → logprob: -1.9147653579711914
    3. ',' → logprob: -5.539765357971191
    4. '	in' → logprob: -9.039765357971191
    5. ' ,' → logprob: -9.039765357971191
    6. '[' → logprob: -9.164765357971191
    7. ',e' → logprob: -10.164765357971191
    8. ')' → logprob: -10.289765357971191
    9. '[in' → logprob: -10.289765357971191
    10. '[e' → logprob: -10.789765357971191

Token 1096: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036823786795139313
    2. ' range' → logprob: -5.628682613372803
    3. '(range' → logprob: -10.253682136535645
    4. 'in' → logprob: -10.503682136535645
    5. 'v' → logprob: -11.503682136535645
    6. '[' → logprob: -13.378682136535645
    7. '[v' → logprob: -13.503682136535645
    8. '(' → logprob: -13.628682136535645
    9. 'r' → logprob: -13.628682136535645
    10. ' in' → logprob: -13.878682136535645

Token 1097: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010569029487669468
    2. '0' → logprob: -5.010569095611572
    3. '(self' → logprob: -5.635569095611572
    4. ' self' → logprob: -8.885568618774414
    5. '(' → logprob: -10.260568618774414
    6. '<|end|>' → logprob: -10.260568618774414
    7. 's' → logprob: -11.135568618774414
    8. '(len' → logprob: -11.135568618774414
    9. '(
' → logprob: -11.635568618774414
    10. 'len' → logprob: -11.635568618774414

Token 1098: '.m' (ID: 1021)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.43102163076400757
    2. '.m' → logprob: -1.0560216903686523
    3. ')' → logprob: -7.431021690368652
    4. ')m' → logprob: -7.681021690368652
    5. '[m' → logprob: -8.056021690368652
    6. '   ' → logprob: -8.556021690368652
    7. 'class' → logprob: -8.806021690368652
    8. '.' → logprob: -9.306021690368652
    9. '<m' → logprob: -9.556021690368652
    10. '[' → logprob: -9.806021690368652

Token 1099: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017803138121962547
    2. '):' → logprob: -4.892803192138672
    3. ':' → logprob: -5.642803192138672
    4. ':
' → logprob: -5.642803192138672
    5. '       ' → logprob: -6.517803192138672
    6. ' ):
' → logprob: -8.267803192138672
    7. ']:
' → logprob: -8.267803192138672
    8. ',' → logprob: -8.517803192138672
    9. '           ' → logprob: -8.767803192138672
    10. '+' → logprob: -8.892803192138672

Token 1100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8896644711494446
    2. ' if' → logprob: -0.8896644711494446
    3. '           ' → logprob: -2.8896644115448
    4. 'if' → logprob: -2.8896644115448
    5. '<|end|>' → logprob: -4.264664649963379
    6. '	       ' → logprob: -4.514664649963379
    7. '{' → logprob: -4.639664649963379
    8. '   ' → logprob: -5.139664649963379
    9. '        ' → logprob: -5.139664649963379
    10. '	if' → logprob: -5.514664649963379

Token 1101: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02364431321620941
    2. ' if' → logprob: -3.773644208908081
    3. '           ' → logprob: -8.02364444732666
    4. '   ' → logprob: -9.77364444732666
    5. '	if' → logprob: -11.64864444732666
    6. '       ' → logprob: -12.64864444732666
    7. ' ' → logprob: -14.52364444732666
    8. '               ' → logprob: -14.64864444732666
    9. 'If' → logprob: -14.89864444732666
    10. 'i' → logprob: -15.02364444732666

Token 1102: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.020599117502570152
    2. ' in' → logprob: -3.895599126815796
    3. 'not' → logprob: -10.895599365234375
    4. '   ' → logprob: -11.020599365234375
    5. ' not' → logprob: -11.395599365234375
    6. '	in' → logprob: -12.270599365234375
    7. '           ' → logprob: -13.520599365234375
    8. '               ' → logprob: -14.020599365234375
    9. ' ' → logprob: -14.145599365234375
    10. '                   ' → logprob: -14.270599365234375

Token 1103: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.004908654373139143
    2. '_' → logprob: -6.129908561706543
    3. '[e' → logprob: -6.879908561706543
    4. 'tree' → logprob: -8.004908561706543
    5. 'eid' → logprob: -8.129908561706543
    6. '_t' → logprob: -8.504908561706543
    7. '[_' → logprob: -8.629908561706543
    8. '_edge' → logprob: -8.754908561706543
    9. '_in' → logprob: -9.129908561706543
    10. '_e' → logprob: -9.504908561706543

Token 1104: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0007123126997612417
    2. '[' → logprob: -7.8757123947143555
    3. '[
' → logprob: -8.375712394714355
    4. ' [' → logprob: -10.125712394714355
    5. '
' → logprob: -10.500712394714355
    6. '   ' → logprob: -11.750712394714355
    7. ':
' → logprob: -12.250712394714355
    8. '```' → logprob: -12.250712394714355
    9. ' ' → logprob: -13.125712394714355
    10. 'e' → logprob: -13.125712394714355

Token 1105: 'id' (ID: 315)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.014168919064104557
    2. 'eid' → logprob: -4.764168739318848
    3. 'id' → logprob: -5.639168739318848
    4. '[' → logprob: -7.514168739318848
    5. ']' → logprob: -7.764168739318848
    6. 'd' → logprob: -8.014168739318848
    7. '[id' → logprob: -8.264168739318848
    8. 'e' → logprob: -9.139168739318848
    9. '[
' → logprob: -9.514168739318848
    10. '[d' → logprob: -10.139168739318848

Token 1106: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.011305401101708412
    2. ']:' → logprob: -5.261305332183838
    3. ']' → logprob: -5.886305332183838
    4. ']==' → logprob: -5.886305332183838
    5. ':
' → logprob: -8.386305809020996
    6. ']=' → logprob: -10.011305809020996
    7. '       ' → logprob: -10.011305809020996
    8. '==' → logprob: -10.136305809020996
    9. '):
' → logprob: -10.386305809020996
    10. '           ' → logprob: -10.761305809020996

Token 1107: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6063608527183533
    2. ':' → logprob: -1.731360912322998
    3. '               ' → logprob: -2.106360912322998
    4. ' and' → logprob: -2.356360912322998
    5. '           ' → logprob: -3.356360912322998
    6. ' =' → logprob: -4.856360912322998
    7. '):
' → logprob: -4.981360912322998
    8. ',' → logprob: -5.856360912322998
    9. 'and' → logprob: -5.981360912322998
    10. '=' → logprob: -6.356360912322998

Token 1108: ' #' (ID: 1069)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.44497478008270264
    2. 'v' → logprob: -1.6949747800827026
    3. 'u' → logprob: -2.069974899291992
    4. 'edge' → logprob: -4.194974899291992
    5. 'for' → logprob: -4.944974899291992
    6. '   ' → logprob: -4.944974899291992
    7. 'node' → logprob: -4.944974899291992
    8. '#' (adapté à ' #') → logprob: -5.694974899291992
    9. '               ' → logprob: -6.069974899291992
    10. '           ' → logprob: -6.944974899291992

Token 1109: ' Identify' (ID: 88495)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.25054988265037537
    2. 'u' → logprob: -1.8755499124526978
    3. 'child' → logprob: -3.250549793243408
    4. 'e' → logprob: -4.125549793243408
    5. ' edge' → logprob: -5.375549793243408
    6. 'parent' → logprob: -6.125549793243408
    7. '   ' → logprob: -6.250549793243408
    8. '               ' → logprob: -6.625549793243408
    9. ' u' → logprob: -6.625549793243408
    10. '                   ' → logprob: -7.125549793243408

Token 1110: ' child' (ID: 2320)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0979055166244507
    2. 'child' → logprob: -1.5979055166244507
    3. 'edge' → logprob: -1.7229055166244507
    4. 'v' → logprob: -2.0979056358337402
    5. ' edge' → logprob: -2.9729056358337402
    6. ' child' → logprob: -3.4729056358337402
    7. ' u' → logprob: -3.5979056358337402
    8. 'parent' → logprob: -4.09790563583374
    9. 'e' → logprob: -4.34790563583374
    10. ' v' → logprob: -5.09790563583374

Token 1111: ' node' (ID: 4596)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8573330640792847
    2. ' =' → logprob: -0.8573330640792847
    3. '_node' → logprob: -2.232333183288574
    4. '   ' → logprob: -3.982333183288574
    5. '=' → logprob: -4.857333183288574
    6. ' _' → logprob: -6.107333183288574
    7. 'node' → logprob: -6.107333183288574
    8. '
' → logprob: -6.607333183288574
    9. ',' → logprob: -6.732333183288574
    10. '_v' → logprob: -6.982333183288574

Token 1112: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1213064044713974
    2. '=' → logprob: -2.3713064193725586
    3. ' in' → logprob: -5.371306419372559
    4. '_index' → logprob: -5.996306419372559
    5. 'v' → logprob: -6.121306419372559
    6. '_idx' → logprob: -6.246306419372559
    7. ',' → logprob: -6.496306419372559
    8. '               ' → logprob: -7.371306419372559
    9. ' for' → logprob: -7.621306419372559
    10. 'idx' → logprob: -7.871306419372559

Token 1113: ' this' (ID: 495)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7103198170661926
    2. 'self' → logprob: -0.8353198170661926
    3. 'eid' → logprob: -3.335319757461548
    4. 'e' → logprob: -4.710319995880127
    5. 'edge' → logprob: -4.835319995880127
    6. 'the' → logprob: -5.335319995880127
    7. '   ' → logprob: -5.585319995880127
    8. ' parent' → logprob: -5.835319995880127
    9. 'v' → logprob: -6.085319995880127
    10. ' self' → logprob: -6.460319995880127

Token 1114: ' edge' (ID: 11165)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.20385269820690155
    2. 'edge' → logprob: -2.453852653503418
    3. ' eid' → logprob: -3.078852653503418
    4. 'e' → logprob: -4.203852653503418
    5. '`' → logprob: -4.703852653503418
    6. ' edge' → logprob: -5.453852653503418
    7. '[e' → logprob: -5.703852653503418
    8. '   ' → logprob: -5.828852653503418
    9. '(e' → logprob: -5.953852653503418
    10. ' e' → logprob: -6.203852653503418

Token 1115: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044515274465084076
    2. ' in' → logprob: -4.044515132904053
    3. '=' → logprob: -4.794515132904053
    4. '               ' → logprob: -5.419515132904053
    5. ' for' → logprob: -5.794515132904053
    6. ':' → logprob: -6.294515132904053
    7. 'v' → logprob: -6.919515132904053
    8. ',' → logprob: -7.294515132904053
    9. '                   ' → logprob: -7.294515132904053
    10. '           ' → logprob: -7.294515132904053

Token 1116: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.24919584393501282
    2. 'the' → logprob: -2.2491958141326904
    3. 'self' → logprob: -2.9991958141326904
    4. 'parent' → logprob: -3.1241958141326904
    5. '1' → logprob: -5.1241960525512695
    6. '   ' → logprob: -5.4991960525512695
    7. ' the' → logprob: -5.8741960525512695
    8. ' tree' → logprob: -5.8741960525512695
    9. 'range' → logprob: -7.2491960525512695
    10. ' parent' → logprob: -7.3741960525512695

Token 1117: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5695005059242249
    2. ':
' → logprob: -2.56950044631958
    3. ' u' → logprob: -2.56950044631958
    4. ' for' → logprob: -3.06950044631958
    5. '               ' → logprob: -3.19450044631958
    6. ':' → logprob: -3.31950044631958
    7. 'u' → logprob: -3.56950044631958
    8. 'v' → logprob: -3.69450044631958
    9. '=' → logprob: -4.06950044631958
    10. ' in' → logprob: -4.06950044631958

Token 1118: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.060217022895813
    2. 'self' → logprob: -1.935217022895813
    3. ' self' → logprob: -2.3102169036865234
    4. ' next' → logprob: -2.5602169036865234
    5. '):
' → logprob: -2.6852169036865234
    6. ' v' → logprob: -2.9352169036865234
    7. ' )' → logprob: -3.0602169036865234
    8. 'v' → logprob: -3.3102169036865234
    9. ')
' → logprob: -4.060216903686523
    10. ' )
' → logprob: -4.185216903686523

Token 1119: ' tree' (ID: 8165)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.12072105705738068
    2. 'self' → logprob: -2.3707211017608643
    3. ' parent' → logprob: -4.620720863342285
    4. 'edge' → logprob: -5.370720863342285
    5. ' self' → logprob: -6.620720863342285
    6. '
' → logprob: -7.870720863342285
    7. '   ' → logprob: -7.870720863342285
    8. '                   ' → logprob: -7.870720863342285
    9. '               ' → logprob: -7.995720863342285
    10. 'e' → logprob: -8.120720863342285

Token 1120: ' edges' (ID: 22569)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.2576383054256439
    2. '[node' → logprob: -2.2576382160186768
    3. ' is' → logprob: -2.7576382160186768
    4. '[' → logprob: -3.7576382160186768
    5. ' =' → logprob: -5.382638454437256
    6. 'is' → logprob: -5.382638454437256
    7. '[parent' → logprob: -5.507638454437256
    8. '=' → logprob: -5.757638454437256
    9. ')' → logprob: -5.882638454437256
    10. 'u' → logprob: -5.882638454437256

Token 1121: ' go' (ID: 810)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.280867576599121
    2. ' are' → logprob: -1.405867576599121
    3. '[u' → logprob: -1.530867576599121
    4. '[node' → logprob: -3.030867576599121
    5. '[' → logprob: -3.655867576599121
    6. ' have' → logprob: -3.780867576599121
    7. ' form' → logprob: -3.780867576599121
    8. ')' → logprob: -4.030867576599121
    9. ' represent' → logprob: -4.030867576599121
    10. ' point' → logprob: -4.405867576599121

Token 1122: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10701444000005722
    2. ' from' → logprob: -2.4820144176483154
    3. 'down' → logprob: -4.8570146560668945
    4. 'to' → logprob: -5.4820146560668945
    5. ' to' → logprob: -6.6070146560668945
    6. 'tow' → logprob: -6.7320146560668945
    7. '[from' → logprob: -7.3570146560668945
    8. '[' → logprob: -7.6070146560668945
    9. 'away' → logprob: -7.8570146560668945
    10. '=' → logprob: -8.107014656066895

Token 1123: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.45439213514328003
    2. ' parent' → logprob: -2.079392194747925
    3. 'u' → logprob: -2.329392194747925
    4. 'self' → logprob: -2.579392194747925
    5. ' self' → logprob: -3.704392194747925
    6. ' u' → logprob: -4.079391956329346
    7. 'v' → logprob: -4.954391956329346
    8. ' v' → logprob: -6.079391956329346
    9. '1' → logprob: -6.704391956329346
    10. 'node' → logprob: -6.704391956329346

Token 1124: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.026710106059908867
    2. 'to' → logprob: -3.651710033416748
    3. '[u' → logprob: -9.026710510253906
    4. ' node' → logprob: -9.401710510253906
    5. ' ->' → logprob: -9.651710510253906
    6. ' u' → logprob: -9.901710510253906
    7. '[node' → logprob: -10.276710510253906
    8. '->' → logprob: -11.151710510253906
    9. 'u' → logprob: -11.401710510253906
    10. 'node' → logprob: -11.776710510253906

Token 1125: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.3146706223487854
    2. 'v' → logprob: -1.4396705627441406
    3. ' child' → logprob: -3.5646705627441406
    4. ' v' → logprob: -6.064670562744141
    5. 'children' → logprob: -7.189670562744141
    6. '   ' → logprob: -7.564670562744141
    7. 'node' → logprob: -8.06467056274414
    8. '
' → logprob: -8.56467056274414
    9. '```' → logprob: -8.93967056274414
    10. 'self' → logprob: -9.56467056274414

Token 1126: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0095993280410767
    2. ')
' → logprob: -1.7595993280410767
    3. '[v' → logprob: -1.8845993280410767
    4. ')' → logprob: -2.509599208831787
    5. ' in' → logprob: -2.759599208831787
    6. 'v' → logprob: -3.509599208831787
    7. '[node' → logprob: -3.509599208831787
    8. ',' → logprob: -3.759599208831787
    9. ' for' → logprob: -4.009599208831787
    10. '):' → logprob: -4.259599208831787

Token 1127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31743115186691284
    2. ' u' → logprob: -1.5674312114715576
    3. 'u' → logprob: -3.9424312114715576
    4. ' for' → logprob: -4.9424309730529785
    5. '                   ' → logprob: -4.9424309730529785
    6. 'v' → logprob: -5.0674309730529785
    7. ' =' → logprob: -5.1924309730529785
    8. ' v' → logprob: -5.5674309730529785
    9. '[u' → logprob: -6.4424309730529785
    10. '           ' → logprob: -6.4424309730529785

Token 1128: ' u' (ID: 337)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.0816431045532227
    2. 'u' (adapté à ' u') → logprob: -1.8316431045532227
    3. ' u' → logprob: -1.8316431045532227
    4. ' for' → logprob: -2.3316431045532227
    5. ' edge' → logprob: -2.4566431045532227
    6. 'for' → logprob: -2.9566431045532227
    7. '               ' → logprob: -3.7066431045532227
    8. 'v' → logprob: -4.206643104553223
    9. ' parent' → logprob: -4.581643104553223
    10. 'parent' → logprob: -4.706643104553223

Token 1129: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7347960472106934
    2. '=' → logprob: -0.8597960472106934
    3. ' =' → logprob: -2.4847960472106934
    4. '.' → logprob: -5.984796047210693
    5. ' ,' → logprob: -6.109796047210693
    6. 'for' → logprob: -6.734796047210693
    7. 'u' → logprob: -6.859796047210693
    8. '=
' → logprob: -6.984796047210693
    9. ',u' → logprob: -7.234796047210693
    10. ',
' → logprob: -7.234796047210693

Token 1130: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10471589118242264
    2. 'parent' → logprob: -2.3547158241271973
    3. '1' → logprob: -6.479715824127197
    4. ' self' → logprob: -6.854715824127197
    5. '-' → logprob: -7.729715824127197
    6. '0' → logprob: -7.854715824127197
    7. 'next' → logprob: -8.854716300964355
    8. 'edge' → logprob: -9.104716300964355
    9. ' parent' → logprob: -9.229716300964355
    10. '[parent' → logprob: -9.479716300964355

Token 1131: '.graph' (ID: 18104)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4040190279483795
    2. 'parent' → logprob: -1.1540189981460571
    3. 'self' → logprob: -5.279018878936768
    4. '.parent' → logprob: -5.779018878936768
    5. '.graph' → logprob: -6.279018878936768
    6. '[parent' → logprob: -7.029018878936768
    7. ' graph' → logprob: -7.529018878936768
    8. '_graph' → logprob: -7.654018878936768
    9. 'user' → logprob: -7.779018878936768
    10. '
' → logprob: -7.779018878936768

Token 1132: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.08304611593484879
    2. '.ad' → logprob: -2.5830461978912354
    3. '.' → logprob: -6.208045959472656
    4. '.graph' → logprob: -7.458045959472656
    5. '.Graph' → logprob: -8.083045959472656
    6. '.nodes' → logprob: -8.333045959472656
    7. '.Edge' → logprob: -8.458045959472656
    8. '.u' → logprob: -8.583045959472656
    9. '.Ad' → logprob: -9.083045959472656
    10. '.Ed' → logprob: -9.458045959472656

Token 1133: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0005730479606427252
    2. 'eid' → logprob: -7.75057315826416
    3. 'e' → logprob: -9.37557315826416
    4. '[u' → logprob: -10.12557315826416
    5. '[' → logprob: -12.12557315826416
    6. '[
' → logprob: -13.12557315826416
    7. '	e' → logprob: -13.25057315826416
    8. '
' → logprob: -13.37557315826416
    9. 'edges' → logprob: -13.75057315826416
    10. ' eid' → logprob: -13.87557315826416

Token 1134: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.019621651619672775
    2. 'eid' → logprob: -4.269621849060059
    3. '[e' → logprob: -6.019621849060059
    4. 'd' → logprob: -6.019621849060059
    5. '[' → logprob: -8.769621849060059
    6. '[id' → logprob: -9.144621849060059
    7. '[d' → logprob: -9.394621849060059
    8. ' eid' → logprob: -9.519621849060059
    9. '[i' → logprob: -10.769621849060059
    10. 'i' → logprob: -10.769621849060059

Token 1135: '].' (ID: 1651)
  Prédit: '.u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.015695875510573387
    2. '.' → logprob: -4.640696048736572
    3. '.e' → logprob: -5.390696048736572
    4. '.v' → logprob: -7.140696048736572
    5. '[u' → logprob: -8.640695571899414
    6. ').' → logprob: -8.890695571899414
    7. 'u' → logprob: -9.890695571899414
    8. ' .' → logprob: -10.015695571899414
    9. '].' → logprob: -10.390695571899414
    10. '                   ' → logprob: -10.765695571899414

Token 1136: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019010324031114578
    2. 'other' → logprob: -6.376901149749756
    3. 'v' → logprob: -8.876900672912598
    4. '...' → logprob: -11.376900672912598
    5. '
' → logprob: -11.876900672912598
    6. ' u' → logprob: -12.001900672912598
    7. '<|end|>' → logprob: -12.001900672912598
    8. '.u' → logprob: -12.126900672912598
    9. '	u' → logprob: -12.501900672912598
    10. '```' → logprob: -13.001900672912598

Token 1137: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8717784881591797
    2. '
' → logprob: -1.2467784881591797
    3. ',' → logprob: -2.2467784881591797
    4. '           ' → logprob: -3.3717784881591797
    5. '<|end|>' → logprob: -3.3717784881591797
    6. 'v' → logprob: -3.4967784881591797
    7. ',
' → logprob: -3.9967784881591797
    8. ' if' → logprob: -4.49677848815918
    9. ',v' → logprob: -4.74677848815918
    10. '       ' → logprob: -5.24677848815918

Token 1138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6409274935722351
    2. 'v' → logprob: -1.3909275531768799
    3. ' v' → logprob: -1.6409275531768799
    4. ' ' → logprob: -4.890927314758301
    5. '                ' → logprob: -5.390927314758301
    6. '	v' → logprob: -5.515927314758301
    7. ',v' → logprob: -6.265927314758301
    8. '			' → logprob: -6.390927314758301
    9. '       ' → logprob: -6.765927314758301
    10. ' =' → logprob: -7.015927314758301

Token 1139: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0006628761766478419
    2. ' v' → logprob: -8.000662803649902
    3. '               ' → logprob: -8.125662803649902
    4. '	v' → logprob: -11.125662803649902
    5. '                   ' → logprob: -12.000662803649902
    6. 'for' → logprob: -12.375662803649902
    7. '           ' → logprob: -13.375662803649902
    8. ',v' → logprob: -14.250662803649902
    9. '       ' → logprob: -14.375662803649902
    10. '   ' → logprob: -14.500662803649902

Token 1140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22781060636043549
    2. '=' → logprob: -1.6028106212615967
    3. ' if' → logprob: -7.102810382843018
    4. 'v' → logprob: -8.102810859680176
    5. ',' → logprob: -8.102810859680176
    6. ' v' → logprob: -8.477810859680176
    7. ' ' → logprob: -8.602810859680176
    8. '.' → logprob: -8.977810859680176
    9. ' =
' → logprob: -9.477810859680176
    10. '=v' → logprob: -9.602810859680176

Token 1141: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193843245506287
    2. ' self' → logprob: -1.5019384622573853
    3. 'u' → logprob: -12.626938819885254
    4. ' u' → logprob: -13.376938819885254
    5. ' v' → logprob: -13.751938819885254
    6. 'v' → logprob: -13.751938819885254
    7. '(self' → logprob: -14.001938819885254
    8. '[self' → logprob: -15.001938819885254
    9. '
' → logprob: -15.501938819885254
    10. '   ' → logprob: -15.751938819885254

Token 1142: '.graph' (ID: 18104)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2083766460418701
    2. '.v' → logprob: -1.4583766460418701
    3. '.graph' → logprob: -1.5833766460418701
    4. '.other' → logprob: -2.20837664604187
    5. '.edges' → logprob: -3.58337664604187
    6. '.u' → logprob: -3.58337664604187
    7. '.
' → logprob: -3.70837664604187
    8. 'graph' → logprob: -4.333376884460449
    9. 'v' → logprob: -4.333376884460449
    10. ' .' → logprob: -4.583376884460449

Token 1143: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.5961225628852844
    2. '.v' → logprob: -1.0961225032806396
    3. '.u' → logprob: -2.8461225032806396
    4. '.other' → logprob: -3.5961225032806396
    5. '.' → logprob: -4.096122741699219
    6. '[v' → logprob: -5.096122741699219
    7. 'edges' → logprob: -6.096122741699219
    8. '[u' → logprob: -6.346122741699219
    9. 'v' → logprob: -7.596122741699219
    10. '[' → logprob: -7.971122741699219

Token 1144: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.03946912661194801
    2. '[u' → logprob: -3.6644692420959473
    3. '[v' → logprob: -4.414469242095947
    4. '[' → logprob: -7.789469242095947
    5. 'eid' → logprob: -7.789469242095947
    6. '[id' → logprob: -10.414468765258789
    7. '[
' → logprob: -10.664468765258789
    8. 'u' → logprob: -10.914468765258789
    9. 'v' → logprob: -11.164468765258789
    10. 'e' → logprob: -11.164468765258789

Token 1145: 'id' (ID: 315)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5994275808334351
    2. '1' → logprob: -1.474427580833435
    3. 'd' → logprob: -1.974427580833435
    4. 'id' → logprob: -3.2244277000427246
    5. '[' → logprob: -4.349427700042725
    6. '[v' → logprob: -4.349427700042725
    7. '-' → logprob: -6.099427700042725
    8. ']' → logprob: -6.224427700042725
    9. 'i' → logprob: -6.349427700042725
    10. 'u' → logprob: -6.599427700042725

Token 1146: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.23629724979400635
    2. ']' → logprob: -2.486297130584717
    3. '.' → logprob: -2.986297130584717
    4. '[u' → logprob: -3.486297130584717
    5. '[v' → logprob: -3.986297130584717
    6. '.]' → logprob: -4.611297130584717
    7. '               ' → logprob: -5.486297130584717
    8. '.u' → logprob: -5.736297130584717
    9. ']
' → logprob: -6.861297130584717
    10. '[' → logprob: -6.986297130584717

Token 1147: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1419447511434555
    2. 'u' → logprob: -2.516944646835327
    3. 'other' → logprob: -3.516944646835327
    4. '1' → logprob: -3.891944646835327
    5. '0' → logprob: -7.016944885253906
    6. '```' → logprob: -8.141944885253906
    7. ' v' → logprob: -9.516944885253906
    8. ' other' → logprob: -10.016944885253906
    9. 'append' → logprob: -10.266944885253906
    10. '
' → logprob: -10.766944885253906

Token 1148: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054304689168930054
    2. '
' → logprob: -3.429304599761963
    3. '<|end|>' → logprob: -4.929304599761963
    4. '                
' → logprob: -5.304304599761963
    5. ' if' → logprob: -6.554304599761963
    6. '  
' → logprob: -6.804304599761963
    7. '                ' → logprob: -7.054304599761963
    8. ' 
' → logprob: -7.054304599761963
    9. '[' → logprob: -7.179304599761963
    10. '           ' → logprob: -7.429304599761963

Token 1149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001398333697579801
    2. '                
' → logprob: -7.75139856338501
    3. '                ' → logprob: -8.376398086547852
    4. '<|end|>' → logprob: -8.751398086547852
    5. '
' → logprob: -9.376398086547852
    6. '       ' → logprob: -9.501398086547852
    7. ',' → logprob: -9.626398086547852
    8. '[' → logprob: -10.126398086547852
    9. '			' → logprob: -10.251398086547852
    10. '                   ' → logprob: -10.376398086547852

Token 1150: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5964367985725403
    2. 'if' → logprob: -1.7214367389678955
    3. '               ' → logprob: -1.8464367389678955
    4. 'child' → logprob: -2.5964367389678955
    5. ' child' → logprob: -3.7214367389678955
    6. 'parent' → logprob: -5.971436977386475
    7. ' parent' → logprob: -5.971436977386475
    8. 'node' → logprob: -6.096436977386475
    9. '#' (adapté à ' #') → logprob: -6.471436977386475
    10. ' node' → logprob: -6.471436977386475

Token 1151: ' parent' (ID: 5980)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6412330865859985
    2. 'child' → logprob: -0.7662330865859985
    3. '#' → logprob: -5.516232967376709
    4. '               ' → logprob: -6.391232967376709
    5. ' if' → logprob: -6.516232967376709
    6. '```' → logprob: -7.891232967376709
    7. ' child' → logprob: -8.141233444213867
    8. 'parent' → logprob: -8.641233444213867
    9. 'token' → logprob: -8.891233444213867
    10. 'for' → logprob: -9.266233444213867

Token 1152: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5210228562355042
    2. ',' → logprob: -1.8960227966308594
    3. '=' → logprob: -2.6460227966308594
    4. 'v' → logprob: -3.0210227966308594
    5. 'node' → logprob: -3.3960227966308594
    6. '_node' → logprob: -3.7710227966308594
    7. 'u' → logprob: -4.271022796630859
    8. 'for' → logprob: -4.646022796630859
    9. '[node' → logprob: -5.021022796630859
    10. '_edge' → logprob: -5.271022796630859

Token 1153: ' the' (ID: 290)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19853250682353973
    2. 'parent' → logprob: -1.8235324621200562
    3. 'v' → logprob: -4.573532581329346
    4. ' u' → logprob: -5.698532581329346
    5. ' parent' → logprob: -6.448532581329346
    6. 'dist' → logprob: -7.198532581329346
    7. '[u' → logprob: -7.323532581329346
    8. '   ' → logprob: -7.823532581329346
    9. 'max' → logprob: -8.323532104492188
    10. 'None' → logprob: -8.573532104492188

Token 1154: ' endpoint' (ID: 29703)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03594950959086418
    2. ' parent' → logprob: -4.16094970703125
    3. 'u' → logprob: -4.66094970703125
    4. 'v' → logprob: -4.91094970703125
    5. 'dist' → logprob: -6.53594970703125
    6. 'node' → logprob: -8.28594970703125
    7. '[parent' → logprob: -8.53594970703125
    8. ' v' → logprob: -8.78594970703125
    9. ' u' → logprob: -8.78594970703125
    10. 'edge' → logprob: -9.53594970703125

Token 1155: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2005629539489746
    2. ' =' → logprob: -1.5755629539489746
    3. ' of' → logprob: -2.2005629539489746
    4. '=' → logprob: -2.4505629539489746
    5. 'of' → logprob: -2.7005629539489746
    6. 'if' → logprob: -2.8255629539489746
    7. 'u' → logprob: -3.4505629539489746
    8. ' that' → logprob: -3.8255629539489746
    9. ' in' → logprob: -4.075562953948975
    10. ' with' → logprob: -4.075562953948975

Token 1156: ' lower' (ID: 6931)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11533286422491074
    2. 'in' → logprob: -2.490332841873169
    3. 'parent' → logprob: -4.365333080291748
    4. ' dist' → logprob: -5.240333080291748
    5. 'sub' → logprob: -5.865333080291748
    6. 'depth' → logprob: -6.115333080291748
    7. 'distance' → logprob: -6.990333080291748
    8. ' in' → logprob: -7.865333080291748
    9. 'd' → logprob: -7.990333080291748
    10. 'tree' → logprob: -8.24033260345459

Token 1157: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010021083056926727
    2. ' dist' → logprob: -4.635021209716797
    3. 'd' → logprob: -9.135021209716797
    4. 'distance' → logprob: -9.635021209716797
    5. 'depth' → logprob: -10.010021209716797
    6. '
' → logprob: -11.510021209716797
    7. '```' → logprob: -11.885021209716797
    8. 'self' → logprob: -12.135021209716797
    9. '	dist' → logprob: -12.760021209716797
    10. '`' → logprob: -12.885021209716797

Token 1158: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.276336133480072
    2. '[node' → logprob: -2.276336193084717
    3. 'if' → logprob: -2.901336193084717
    4. '               ' → logprob: -3.026336193084717
    5. ' =' → logprob: -4.276336193084717
    6. 'v' → logprob: -5.276336193084717
    7. '[u' → logprob: -5.651336193084717
    8. '[v' → logprob: -5.901336193084717
    9. '
' → logprob: -6.776336193084717
    10. '[' → logprob: -6.776336193084717

Token 1159: 'ie' (ID: 396)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8281498551368713
    2. 'dist' → logprob: -1.2031497955322266
    3. ' dist' → logprob: -1.9531497955322266
    4. 'self' → logprob: -2.7031497955322266
    5. ' self' → logprob: -3.5781497955322266
    6. ' )' → logprob: -5.078149795532227
    7. ')
' → logprob: -5.828149795532227
    8. '>' → logprob: -5.953149795532227
    9. 'v' → logprob: -6.578149795532227
    10. ' v' → logprob: -6.953149795532227

Token 1160: ',' (ID: 11)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7188712358474731
    2. ' if' → logprob: -1.7188712358474731
    3. ' self' → logprob: -2.2188711166381836
    4. ')' → logprob: -2.2188711166381836
    5. 'dist' → logprob: -3.7188711166381836
    6. 'self' → logprob: -4.093871116638184
    7. '=' → logprob: -4.093871116638184
    8. 't' → logprob: -4.468871116638184
    9. '               ' → logprob: -4.593871116638184
    10. ' s' → logprob: -5.218871116638184

Token 1161: ' closer' (ID: 20039)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.16030241549015045
    2. 'dist' → logprob: -1.9103024005889893
    3. ' v' → logprob: -10.28530216217041
    4. ')' → logprob: -11.91030216217041
    5. 'v' → logprob: -12.16030216217041
    6. ' self' → logprob: -12.28530216217041
    7. ' u' → logprob: -12.28530216217041
    8. '```' → logprob: -12.41030216217041
    9. 'self' → logprob: -12.66030216217041
    10. ' parent' → logprob: -12.91030216217041

Token 1162: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.101760633289814
    2. ' to' → logprob: -2.4767606258392334
    3. ')' → logprob: -4.9767608642578125
    4. '               ' → logprob: -6.4767608642578125
    5. '[node' → logprob: -6.6017608642578125
    6. '_to' → logprob: -6.7267608642578125
    7. '(node' → logprob: -7.8517608642578125
    8. 'node' → logprob: -7.8517608642578125
    9. '=' → logprob: -8.226760864257812
    10. '```' → logprob: -8.601760864257812

Token 1163: ' root' (ID: 6577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002130871871486306
    2. 'node' → logprob: -6.50213098526001
    3. 'root' → logprob: -7.62713098526001
    4. '0' → logprob: -9.377130508422852
    5. ' ' → logprob: -10.377130508422852
    6. ' node' → logprob: -11.752130508422852
    7. '```' → logprob: -12.502130508422852
    8. '
' → logprob: -12.502130508422852
    9. ' root' → logprob: -12.752130508422852
    10. 'source' → logprob: -13.127130508422852

Token 1164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31465163826942444
    2. ')
' → logprob: -1.439651608467102
    3. '               ' → logprob: -4.1896514892578125
    4. '):
' → logprob: -5.0646514892578125
    5. ' )' → logprob: -5.9396514892578125
    6. ' if' → logprob: -5.9396514892578125
    7. ' )
' → logprob: -6.5646514892578125
    8. '),' → logprob: -6.8146514892578125
    9. '):' → logprob: -7.8146514892578125
    10. ' +' → logprob: -7.9396514892578125

Token 1165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005529711954295635
    2. ' if' → logprob: -6.255529880523682
    3. '                ' → logprob: -6.505529880523682
    4. ',' → logprob: -7.755529880523682
    5. '                
' → logprob: -8.255529403686523
    6. '<|end|>' → logprob: -8.380529403686523
    7. ' 
' → logprob: -8.880529403686523
    8. '[' → logprob: -9.005529403686523
    9. ' ' → logprob: -9.005529403686523
    10. ')' → logprob: -9.630529403686523

Token 1166: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2552332282066345
    2. 'if' (adapté à ' if') → logprob: -1.6302332878112793
    3. '               ' → logprob: -3.8802332878112793
    4. ' parent' → logprob: -5.505233287811279
    5. 'parent' → logprob: -5.880233287811279
    6. '
' → logprob: -7.755233287811279
    7. ' i' → logprob: -8.130232810974121
    8. ' p' → logprob: -8.505232810974121
    9. 'p' → logprob: -8.755232810974121
    10. ' 
' → logprob: -8.880232810974121

Token 1167: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07002702355384827
    2. ' dist' → logprob: -2.6950271129608154
    3. 'self' → logprob: -9.695027351379395
    4. ' self' → logprob: -11.445027351379395
    5. '   ' → logprob: -11.820027351379395
    6. '(dist' → logprob: -12.445027351379395
    7. '           ' → logprob: -12.945027351379395
    8. '	dist' → logprob: -13.320027351379395
    9. '
' → logprob: -13.820027351379395
    10. '               ' → logprob: -14.570027351379395

Token 1168: '_init' (ID: 13909)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.11155574023723602
    2. '_init' → logprob: -2.611555814743042
    3. '[v' → logprob: -3.611555814743042
    4. '[node' → logprob: -6.111555576324463
    5. '[e' → logprob: -6.361555576324463
    6. '[' → logprob: -6.986555576324463
    7. '   ' → logprob: -10.236556053161621
    8. ' [' → logprob: -10.236556053161621
    9. 'u' → logprob: -10.486556053161621
    10. '_INIT' → logprob: -10.986556053161621

Token 1169: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.04954508692026138
    2. '[v' → logprob: -3.6745450496673584
    3. '[e' → logprob: -4.4245452880859375
    4. '[' → logprob: -4.7995452880859375
    5. ' [' → logprob: -6.0495452880859375
    6. '[node' → logprob: -8.424545288085938
    7. ' <' → logprob: -10.799545288085938
    8. '```' → logprob: -11.049545288085938
    9. '<u' → logprob: -11.174545288085938
    10. '[o' → logprob: -11.174545288085938

Token 1170: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32531946897506714
    2. '<' → logprob: -1.325319528579712
    3. '[' → logprob: -5.075319290161133
    4. '<u' → logprob: -6.200319290161133
    5. '<v' → logprob: -6.325319290161133
    6. '[u' → logprob: -6.575319290161133
    7. '>' → logprob: -8.825319290161133
    8. ' >' → logprob: -9.575319290161133
    9. '[v' → logprob: -9.575319290161133
    10. ']' → logprob: -10.075319290161133

Token 1171: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.34924548864364624
    2. '<' → logprob: -1.224245548248291
    3. '[' → logprob: -7.599245548248291
    4. '<int' → logprob: -9.599245071411133
    5. ' >' → logprob: -10.349245071411133
    6. '<
' → logprob: -10.474245071411133
    7. '>' → logprob: -10.599245071411133
    8. '<v' → logprob: -10.599245071411133
    9. '<u' → logprob: -10.724245071411133
    10. '<|end|>' → logprob: -10.849245071411133

Token 1172: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002475777640938759
    2. ' dist' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. '	dist' → logprob: -17.00247573852539
    5. '(dist' → logprob: -18.12747573852539
    6. '
' → logprob: -18.50247573852539
    7. 'd' → logprob: -18.75247573852539
    8. '           ' → logprob: -19.62747573852539
    9. '=' → logprob: -19.75247573852539
    10. 'Dist' → logprob: -19.75247573852539

Token 1173: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.06472747772932053
    2. '[v' → logprob: -2.814727544784546
    3. 'v' → logprob: -5.939727306365967
    4. '[u' → logprob: -9.564727783203125
    5. 'init' → logprob: -10.189727783203125
    6. ' v' → logprob: -12.439727783203125
    7. '(v' → logprob: -12.689727783203125
    8. 'dist' → logprob: -13.439727783203125
    9. '<v' → logprob: -13.564727783203125
    10. '[' → logprob: -13.939727783203125

Token 1174: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0017050558235496283
    2. 'v' → logprob: -6.376705169677734
    3. '[u' → logprob: -13.376705169677734
    4. '	v' → logprob: -14.626705169677734
    5. ' v' → logprob: -15.001705169677734
    6. '   ' → logprob: -15.376705169677734
    7. '[' → logprob: -16.126705169677734
    8. '=v' → logprob: -16.501705169677734
    9. '<v' → logprob: -16.626705169677734
    10. ' [' → logprob: -17.126705169677734

Token 1175: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.027611196041107178
    2. ']:' → logprob: -3.652611255645752
    3. ':
' → logprob: -7.652611255645752
    4. ':' → logprob: -8.402610778808594
    5. '               ' → logprob: -8.652610778808594
    6. '):
' → logprob: -8.902610778808594
    7. ']' → logprob: -9.402610778808594
    8. ']:
' → logprob: -9.652610778808594
    9. ']:

' → logprob: -10.527610778808594
    10. '           ' → logprob: -10.652610778808594

Token 1176: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1024334654211998
    2. ':' → logprob: -3.477433443069458
    3. '               ' → logprob: -4.102433681488037
    4. '                       ' → logprob: -4.352433681488037
    5. ' ' → logprob: -4.852433681488037
    6. '                    ' → logprob: -4.977433681488037
    7. '                ' → logprob: -5.727433681488037
    8. ' =' → logprob: -5.977433681488037
    9. '.' → logprob: -6.227433681488037
    10. ')' → logprob: -6.602433681488037

Token 1177: ' parent' (ID: 5980)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.4140304923057556
    2. ' child' → logprob: -1.1640305519104004
    3. 'c' → logprob: -5.1640305519104
    4. ' c' → logprob: -5.1640305519104
    5. '                   ' → logprob: -5.5390305519104
    6. 'node' → logprob: -5.7890305519104
    7. ' node' → logprob: -6.2890305519104
    8. ' next' → logprob: -6.4140305519104
    9. 'next' → logprob: -6.6640305519104
    10. 'parent' (adapté à ' parent') → logprob: -6.7890305519104

Token 1178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3151799142360687
    2. '_' → logprob: -1.9401799440383911
    3. '=' → logprob: -2.1901798248291016
    4. ',' → logprob: -4.940179824829102
    5. ')' → logprob: -6.565179824829102
    6. ' ' → logprob: -7.065179824829102
    7. 'u' → logprob: -7.190179824829102
    8. '_node' → logprob: -7.315179824829102
    9. '=u' → logprob: -7.315179824829102
    10. '_u' → logprob: -7.690179824829102

Token 1179: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04858759790658951
    2. ' u' → logprob: -3.0485875606536865
    3. '	u' → logprob: -16.173587799072266
    4. '[u' → logprob: -16.298587799072266
    5. '
' → logprob: -18.048587799072266
    6. '(u' → logprob: -18.173587799072266
    7. '   ' → logprob: -19.048587799072266
    8. ' 
' → logprob: -19.173587799072266
    9. '    ' → logprob: -19.673587799072266
    10. '`' → logprob: -19.798587799072266

Token 1180: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9567096829414368
    2. '<|end|>' → logprob: -1.581709623336792
    3. 'else' → logprob: -1.706709623336792
    4. '                   ' → logprob: -1.831709623336792
    5. '               ' → logprob: -3.331709623336792
    6. ')' → logprob: -4.956709861755371
    7. '
' → logprob: -5.081709861755371
    8. ',' → logprob: -5.081709861755371
    9. ' 
' → logprob: -5.956709861755371
    10. '                    ' → logprob: -6.831709861755371

Token 1181: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.035033103078603745
    2. ',' → logprob: -4.535033226013184
    3. '
' → logprob: -4.785033226013184
    4. ' else' → logprob: -5.660033226013184
    5. '               ' → logprob: -5.910033226013184
    6. '                    ' → logprob: -6.035033226013184
    7. 'else' → logprob: -6.285033226013184
    8. 'v' → logprob: -7.410033226013184
    9. '   ' → logprob: -7.660033226013184
    10. ')' → logprob: -7.660033226013184

Token 1182: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -5.919942486798391e-05
    2. ' child' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.750059127807617
    4. '	child' → logprob: -16.000059127807617
    5. '
' → logprob: -16.625059127807617
    6. 'parent' → logprob: -16.875059127807617
    7. 'node' → logprob: -17.000059127807617
    8. 'ch' → logprob: -17.500059127807617
    9. '```' → logprob: -18.000059127807617
    10. 'c' → logprob: -18.000059127807617

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151817843317986
    2. ' =' → logprob: -4.018151760101318
    3. '=v' → logprob: -13.643152236938477
    4. '=
' → logprob: -15.268152236938477
    5. ' ' → logprob: -15.393152236938477
    6. ')' → logprob: -16.143152236938477
    7. ',' → logprob: -16.268152236938477
    8. 'v' → logprob: -17.018152236938477
    9. ' v' → logprob: -17.643152236938477
    10. '.' → logprob: -18.018152236938477

Token 1184: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12692873179912567
    2. ' v' → logprob: -2.1269288063049316
    3. '	v' → logprob: -15.501928329467773
    4. ' ' → logprob: -16.251928329467773
    5. '[v' → logprob: -16.626928329467773
    6. '(v' → logprob: -16.751928329467773
    7. '`' → logprob: -16.751928329467773
    8. ' 
' → logprob: -17.126928329467773
    9. '_v' → logprob: -17.876928329467773
    10. ')v' → logprob: -17.876928329467773

Token 1185: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15001004934310913
    2. '
' → logprob: -2.275010108947754
    3. 'else' → logprob: -4.025010108947754
    4. ' else' → logprob: -4.150010108947754
    5. '                   ' → logprob: -6.150010108947754
    6. ' 
' → logprob: -8.650010108947754
    7. '                
' → logprob: -9.275010108947754
    8. '                    
' → logprob: -9.400010108947754
    9. '  
' → logprob: -9.775010108947754
    10. '                ' → logprob: -9.900010108947754

Token 1186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03163209557533264
    2. 'else' → logprob: -3.9066321849823
    3. '                   ' → logprob: -5.281631946563721
    4. ' else' → logprob: -5.406631946563721
    5. '
' → logprob: -6.781631946563721
    6. '```' → logprob: -9.781632423400879
    7. '           ' → logprob: -10.031632423400879
    8. 'elif' → logprob: -10.156632423400879
    9. '                    
' → logprob: -10.281632423400879
    10. '       ' → logprob: -10.406632423400879

Token 1187: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7987794280052185
    2. 'else' (adapté à ' else') → logprob: -1.1737794876098633
    3. '               ' → logprob: -1.4237794876098633
    4. '                ' → logprob: -10.423779487609863
    5. '                   ' → logprob: -10.548779487609863
    6. '
' → logprob: -11.548779487609863
    7. 'elif' → logprob: -11.548779487609863
    8. ' ' → logprob: -11.673779487609863
    9. '           ' → logprob: -11.798779487609863
    10. '	else' → logprob: -12.423779487609863

Token 1188: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.49971699714660645
    2. ':' → logprob: -1.1247169971466064
    3. '                    ' → logprob: -3.7497169971466064
    4. ':
' → logprob: -3.8747169971466064
    5. '{' → logprob: -4.749716758728027
    6. '               ' → logprob: -4.999716758728027
    7. '                ' → logprob: -6.249716758728027
    8. ' {' → logprob: -6.499716758728027
    9. '                       ' → logprob: -6.749716758728027
    10. ' :' → logprob: -7.249716758728027

Token 1189: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10305680334568024
    2. '                    ' → logprob: -2.8530569076538086
    3. '               ' → logprob: -4.103056907653809
    4. '                ' → logprob: -4.728056907653809
    5. '                       ' → logprob: -5.853056907653809
    6. '```' → logprob: -5.978056907653809
    7. '           ' → logprob: -6.478056907653809
    8. ' {' → logprob: -6.853056907653809
    9. '{
' → logprob: -6.978056907653809
    10. '                  ' → logprob: -6.978056907653809

Token 1190: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.09967336058616638
    2. ' parent' → logprob: -2.599673271179199
    3. 'child' → logprob: -3.974673271179199
    4. ' child' → logprob: -6.724673271179199
    5. '                   ' → logprob: -7.599673271179199
    6. '                    ' → logprob: -9.9746732711792
    7. '(parent' → logprob: -11.8496732711792
    8. '   ' → logprob: -12.0996732711792
    9. '               ' → logprob: -12.0996732711792
    10. '                ' → logprob: -12.7246732711792

Token 1191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868737816810608
    2. '=' → logprob: -1.136873722076416
    3. ':' → logprob: -14.386874198913574
    4. ' ' → logprob: -14.511874198913574
    5. ')' → logprob: -14.761874198913574
    6. ' =
' → logprob: -14.761874198913574
    7. '=
' → logprob: -15.261874198913574
    8. '=None' → logprob: -16.136873245239258
    9. ',' → logprob: -16.511873245239258
    10. ' =)' → logprob: -17.261873245239258

Token 1192: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007101670489646494
    2. ' v' → logprob: -7.2507100105285645
    3. 'u' → logprob: -16.625709533691406
    4. '	v' → logprob: -18.500709533691406
    5. 'child' → logprob: -18.875709533691406
    6. '   ' → logprob: -19.375709533691406
    7. 'w' → logprob: -19.500709533691406
    8. '               ' → logprob: -19.750709533691406
    9. '                   ' → logprob: -19.875709533691406
    10. ')v' → logprob: -20.125709533691406

Token 1193: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13395076990127563
    2. '               ' → logprob: -2.633950710296631
    3. '
' → logprob: -3.633950710296631
    4. '<|end|>' → logprob: -4.258950710296631
    5. ',' → logprob: -6.133950710296631
    6. '#' → logprob: -6.258950710296631
    7. ' 
' → logprob: -6.758950710296631
    8. '                    
' → logprob: -7.008950710296631
    9. '                    ' → logprob: -7.258950710296631
    10. '           ' → logprob: -7.258950710296631

Token 1194: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22639010846614838
    2. '                   ' → logprob: -1.9763901233673096
    3. '```' → logprob: -3.7263901233673096
    4. '<|end|>' → logprob: -4.3513898849487305
    5. '                ' → logprob: -4.7263898849487305
    6. '#' → logprob: -6.1013898849487305
    7. ':
' → logprob: -6.3513898849487305
    8. ':' → logprob: -6.3513898849487305
    9. '[' → logprob: -6.3513898849487305
    10. ')' → logprob: -6.6013898849487305

Token 1195: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -9.088346359931165e-07
    2. ' child' → logprob: -14.000000953674316
    3. '
' → logprob: -17.25
    4. '	child' → logprob: -18.75
    5. 'ch' → logprob: -21.625
    6. 'parent' → logprob: -21.75
    7. 'chil' → logprob: -22.0
    8. '.child' → logprob: -22.125
    9. '(child' → logprob: -22.625
    10. '   ' → logprob: -22.625

Token 1196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2685471177101135
    2. ' =' → logprob: -2.0185470581054688
    3. '<|end|>' → logprob: -2.8935470581054688
    4. ':' → logprob: -4.268547058105469
    5. ')' → logprob: -4.518547058105469
    6. '[' → logprob: -4.768547058105469
    7. '
' → logprob: -5.393547058105469
    8. '.' → logprob: -6.518547058105469
    9. ':
' → logprob: -6.518547058105469
    10. '<|end|>' → logprob: -6.768547058105469

Token 1197: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21588051319122314
    2. 'v' → logprob: -1.7158805131912231
    3. ' u' → logprob: -4.465880393981934
    4. ' v' → logprob: -6.465880393981934
    5. 'child' → logprob: -6.840880393981934
    6. ' child' → logprob: -8.965880393981934
    7. 'dist' → logprob: -9.840880393981934
    8. '   ' → logprob: -11.340880393981934
    9. 'parent' → logprob: -11.590880393981934
    10. 'node' → logprob: -11.965880393981934

Token 1198: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11530821770429611
    2. '
' → logprob: -2.2403082847595215
    3. '<|end|>' → logprob: -6.7403082847595215
    4. '                
' → logprob: -7.2403082847595215
    5. '                   ' → logprob: -9.240307807922363
    6. ',' → logprob: -9.365307807922363
    7. ',
' → logprob: -9.865307807922363
    8. '  
' → logprob: -9.865307807922363
    9. '<|end|>' → logprob: -10.115307807922363
    10. '
' → logprob: -10.240307807922363

Token 1199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027176355943083763
    2. '                   ' → logprob: -4.277176380157471
    3. '
' → logprob: -5.277176380157471
    4. '           ' → logprob: -5.527176380157471
    5. '       ' → logprob: -6.777176380157471
    6. ' if' → logprob: -7.402176380157471
    7. '                
' → logprob: -7.402176380157471
    8. '```' → logprob: -8.152175903320312
    9. '<|end|>' → logprob: -8.277175903320312
    10. ',' → logprob: -9.152175903320312

Token 1200: ' year' (ID: 1284)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40823841094970703
    2. 'if' → logprob: -1.658238410949707
    3. 'year' (adapté à ' year') → logprob: -2.158238410949707
    4. 'time' → logprob: -4.533238410949707
    5. 'event' → logprob: -4.783238410949707
    6. 'y' → logprob: -6.283238410949707
    7. '                
' → logprob: -6.408238410949707
    8. 't' → logprob: -6.908238410949707
    9. ' if' → logprob: -6.908238410949707
    10. 'day' → logprob: -7.283238410949707

Token 1201: ' =' (ID: 314)
  Prédit: '_events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_events' → logprob: -0.6665689945220947
    2. '_price' → logprob: -1.1665689945220947
    3. '_' → logprob: -2.4165689945220947
    4. '_event' → logprob: -3.0415689945220947
    5. '=' → logprob: -4.416568756103516
    6. '_year' → logprob: -4.666568756103516
    7. ' =' → logprob: -5.791568756103516
    8. '_index' → logprob: -6.166568756103516
    9. '_idx' → logprob: -6.416568756103516
    10. '_edge' → logprob: -6.541568756103516

Token 1202: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2016584277153015
    2. ' edge' → logprob: -1.7016584873199463
    3. '0' → logprob: -8.576658248901367
    4. '       ' → logprob: -11.201658248901367
    5. '               ' → logprob: -11.326658248901367
    6. '(edge' → logprob: -11.576658248901367
    7. '           ' → logprob: -11.701658248901367
    8. '   ' → logprob: -11.826658248901367
    9. '                   ' → logprob: -13.826658248901367
    10. 'year' → logprob: -14.326658248901367

Token 1203: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00011248346709180623
    2. '_year' → logprob: -9.375112533569336
    3. '_' → logprob: -12.125112533569336
    4. '_prices' → logprob: -12.250112533569336
    5. '_events' → logprob: -12.750112533569336
    6. 'price' → logprob: -13.250112533569336
    7. ''_' → logprob: -13.375112533569336
    8. 'Price' → logprob: -13.750112533569336
    9. '_event' → logprob: -13.875112533569336
    10. '```' → logprob: -14.000112533569336

Token 1204: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.0006973040290176868
    2. '_events' → logprob: -8.000697135925293
    3. '_price' → logprob: -8.375697135925293
    4. '_year' → logprob: -9.125697135925293
    5. '_' → logprob: -11.625697135925293
    6. 'up' → logprob: -12.375697135925293
    7. 'events' → logprob: -13.250697135925293
    8. '_event' → logprob: -14.125697135925293
    9. '[_' → logprob: -14.375697135925293
    10. ''_' → logprob: -14.375697135925293

Token 1205: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.038239892572164536
    2. '_up' → logprob: -3.2882399559020996
    3. 'year' → logprob: -9.413239479064941
    4. '[' → logprob: -10.163239479064941
    5. '[e' → logprob: -10.538239479064941
    6. '[event' → logprob: -11.038239479064941
    7. '_events' → logprob: -11.663239479064941
    8. 's' → logprob: -12.038239479064941
    9. 'Year' → logprob: -12.288239479064941
    10. '[u' → logprob: -13.038239479064941

Token 1206: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0005170515505596995
    2. '[' → logprob: -7.750516891479492
    3. '[
' → logprob: -9.875516891479492
    4. 'e' → logprob: -10.750516891479492
    5. ' [' → logprob: -13.000516891479492
    6. '(e' → logprob: -13.000516891479492
    7. 'eid' → logprob: -13.250516891479492
    8. 'edge' → logprob: -13.625516891479492
    9. '   ' → logprob: -14.000516891479492
    10. '```' → logprob: -14.500516891479492

Token 1207: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.004708630498498678
    2. 'd' → logprob: -5.379708766937256
    3. 'i' → logprob: -9.754708290100098
    4. ']' → logprob: -12.129708290100098
    5. '[i' → logprob: -12.504708290100098
    6. '[' → logprob: -12.879708290100098
    7. '[d' → logprob: -13.004708290100098
    8. 'eid' → logprob: -13.004708290100098
    9. '[id' → logprob: -13.129708290100098
    10. 'dge' → logprob: -13.254708290100098

Token 1208: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6976518034934998
    2. ']
' → logprob: -0.6976518034934998
    3. '               ' → logprob: -5.5726518630981445
    4. '           ' → logprob: -8.697651863098145
    5. '                   ' → logprob: -8.822651863098145
    6. ')' → logprob: -9.447651863098145
    7. ' ]
' → logprob: -9.697651863098145
    8. ']
' → logprob: -9.822651863098145
    9. ')
' → logprob: -10.197651863098145
    10. ' ]' → logprob: -10.572651863098145

Token 1209: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1271495223045349
    2. '           ' → logprob: -2.7521495819091797
    3. ' if' → logprob: -3.0021495819091797
    4. 'if' → logprob: -6.25214958190918
    5. '       ' → logprob: -7.37714958190918
    6. '                   ' → logprob: -7.50214958190918
    7. '[' → logprob: -7.50214958190918
    8. '                
' → logprob: -7.62714958190918
    9. '```' → logprob: -8.25214958190918
    10. '
' → logprob: -8.62714958190918

Token 1210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8121778964996338
    2. '               ' → logprob: -1.0621778964996338
    3. ' if' → logprob: -1.5621778964996338
    4. '           ' → logprob: -7.562177658081055
    5. '                   ' → logprob: -10.312177658081055
    6. '
' → logprob: -10.312177658081055
    7. '                
' → logprob: -10.312177658081055
    8. '       ' → logprob: -10.437177658081055
    9. '```' → logprob: -11.062177658081055
    10. '                ' → logprob: -11.062177658081055

Token 1211: ' year' (ID: 1284)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.25192955136299133
    2. ' year' → logprob: -1.501929521560669
    3. '0' → logprob: -15.75192928314209
    4. '(year' → logprob: -15.75192928314209
    5. '           ' → logprob: -17.251930236816406
    6. '                   ' → logprob: -17.501930236816406
    7. '               ' → logprob: -17.626930236816406
    8. '   ' → logprob: -17.626930236816406
    9. 'None' → logprob: -18.876930236816406
    10. '1' → logprob: -19.626930236816406

Token 1212: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08231386542320251
    2. ' !=' → logprob: -3.2073137760162354
    3. '!=' → logprob: -4.0823140144348145
    4. ' >' → logprob: -4.0823140144348145
    5. '!=-' → logprob: -5.5823140144348145
    6. ' is' → logprob: -7.9573140144348145
    7. '>=' → logprob: -8.332313537597656
    8. '[' → logprob: -9.582313537597656
    9. '==' → logprob: -9.957313537597656
    10. '```' → logprob: -9.957313537597656

Token 1213: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '0' → logprob: -18.37500762939453
    4. '```' → logprob: -18.62500762939453
    5. '-
' → logprob: -18.75000762939453
    6. '
' → logprob: -19.62500762939453
    7. '   ' → logprob: -21.25000762939453
    8. ' ' → logprob: -22.62500762939453
    9. '−' → logprob: -22.75000762939453
    10. '-in' → logprob: -23.12500762939453

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. ' -' → logprob: -17.5
    4. '```' → logprob: -20.625
    5. ' ' → logprob: -21.5
    6. '１' → logprob: -22.375
    7. '   ' → logprob: -22.75
    8. '
' → logprob: -23.0
    9. '۱' → logprob: -23.25
    10. '2' → logprob: -23.375

Token 1215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5413998961448669
    2. ':
' → logprob: -0.9163998961448669
    3. '               ' → logprob: -4.791399955749512
    4. '                   ' → logprob: -5.041399955749512
    5. '[' → logprob: -6.291399955749512
    6. '):
' → logprob: -8.166399955749512
    7. '                       ' → logprob: -8.166399955749512
    8. '           ' → logprob: -8.791399955749512
    9. ')' → logprob: -8.916399955749512
    10. ']' → logprob: -9.291399955749512

Token 1216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018713222816586494
    2. '               ' → logprob: -4.143712997436523
    3. 'year' → logprob: -6.768712997436523
    4. ' year' → logprob: -8.393712997436523
    5. '                       ' → logprob: -8.518712997436523
    6. '```' → logprob: -8.518712997436523
    7. '{
' → logprob: -8.643712997436523
    8. '           ' → logprob: -8.768712997436523
    9. '{' → logprob: -8.893712997436523
    10. '
' → logprob: -9.768712997436523

Token 1217: ' #' (ID: 1069)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.030596446245908737
    2. ' year' → logprob: -3.5305964946746826
    3. '                   ' → logprob: -7.1555962562561035
    4. '                       ' → logprob: -10.405596733093262
    5. '   ' → logprob: -10.780596733093262
    6. '               ' → logprob: -12.655596733093262
    7. '           ' → logprob: -13.155596733093262
    8. '
' → logprob: -13.155596733093262
    9. '                    ' → logprob: -13.405596733093262
    10. '       ' → logprob: -13.655596733093262

Token 1218: ' At' (ID: 3604)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.00015741224342491478
    2. ' year' → logprob: -8.875157356262207
    3. '                   ' → logprob: -11.125157356262207
    4. '   ' → logprob: -13.750157356262207
    5. '
' → logprob: -14.250157356262207
    6. '                       ' → logprob: -14.750157356262207
    7. '           ' → logprob: -15.500157356262207
    8. '```' → logprob: -15.875157356262207
    9. '       ' → logprob: -16.500158309936523
    10. '               ' → logprob: -16.875158309936523

Token 1219: ' year' (ID: 1284)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.011061500757932663
    2. ' year' → logprob: -4.511061668395996
    3. '                   ' → logprob: -11.261061668395996
    4. '                       ' → logprob: -15.386061668395996
    5. '           ' → logprob: -15.636061668395996
    6. '               ' → logprob: -15.886061668395996
    7. '```' → logprob: -16.01106071472168
    8. '   ' → logprob: -16.13606071472168
    9. '                    ' → logprob: -16.76106071472168
    10. '
' → logprob: -17.13606071472168

Token 1220: '-th' (ID: 14928)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.03104209154844284
    2. '[' → logprob: -3.7810420989990234
    3. ' year' → logprob: -5.156042098999023
    4. ']' → logprob: -7.406042098999023
    5. '                   ' → logprob: -7.781042098999023
    6. '][' → logprob: -8.406042098999023
    7. '(year' → logprob: -8.656042098999023
    8. '[
' → logprob: -8.781042098999023
    9. '```' → logprob: -8.781042098999023
    10. '
' → logprob: -9.531042098999023

Token 1221: ' price' (ID: 3911)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.16125036776065826
    2. ' year' → logprob: -2.661250352859497
    3. 'index' → logprob: -3.161250352859497
    4. ']' → logprob: -3.536250352859497
    5. ' index' → logprob: -6.536250591278076
    6. '                   ' → logprob: -6.661250591278076
    7. ']=' → logprob: -7.286250591278076
    8. ']+=' → logprob: -7.411250591278076
    9. 'event' → logprob: -7.536250591278076
    10. ' +=' → logprob: -7.911250591278076

Token 1222: ' raise' (ID: 9338)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.9435606002807617
    2. '_up' → logprob: -1.4435606002807617
    3. 'increase' → logprob: -1.8185606002807617
    4. '_' → logprob: -2.0685606002807617
    5. ' raise' → logprob: -4.068560600280762
    6. ' increase' → logprob: -4.193560600280762
    7. '_raise' → logprob: -4.193560600280762
    8. 'raise' → logprob: -4.943560600280762
    9. ' _' → logprob: -4.943560600280762
    10. ' +=' → logprob: -5.693560600280762

Token 1223: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3197413980960846
    2. ':
' → logprob: -2.3197414875030518
    3. '                       ' → logprob: -2.9447414875030518
    4. 'year' → logprob: -3.0697414875030518
    5. ':' → logprob: -3.1947414875030518
    6. ',' → logprob: -4.069741249084473
    7. ' year' → logprob: -5.569741249084473
    8. ' +=' → logprob: -5.819741249084473
    9. '                    ' → logprob: -6.319741249084473
    10. '                    
' → logprob: -6.819741249084473

Token 1224: ' dissatisfaction' (ID: 183931)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.009035823866724968
    2. ' year' → logprob: -4.884035587310791
    3. '                   ' → logprob: -6.634035587310791
    4. '                       ' → logprob: -9.75903606414795
    5. '
' → logprob: -10.63403606414795
    6. '                           ' → logprob: -11.50903606414795
    7. '   ' → logprob: -11.50903606414795
    8. '                    ' → logprob: -12.75903606414795
    9. '               ' → logprob: -12.88403606414795
    10. '           ' → logprob: -13.13403606414795

Token 1225: ' increases' (ID: 21073)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19286252558231354
    2. '                   ' → logprob: -2.0678625106811523
    3. ' +=' → logprob: -3.9428625106811523
    4. 'year' → logprob: -3.9428625106811523
    5. ']+=' → logprob: -5.442862510681152
    6. '           ' → logprob: -7.067862510681152
    7. '```' → logprob: -7.067862510681152
    8. '                    ' → logprob: -7.192862510681152
    9. '               ' → logprob: -7.317862510681152
    10. '[' → logprob: -7.442862510681152

Token 1226: ' by' (ID: 656)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3109889626502991
    2. '                   ' → logprob: -1.5609889030456543
    3. '+=' → logprob: -3.0609889030456543
    4. ' +=' → logprob: -5.935988903045654
    5. 'year' → logprob: -6.310988903045654
    6. '```' → logprob: -6.810988903045654
    7. '                       ' → logprob: -7.060988903045654
    8. '               ' → logprob: -7.185988903045654
    9. '+' → logprob: -7.310988903045654
    10. '   ' → logprob: -7.685988903045654

Token 1227: ' subtree' (ID: 126158)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00035870319698005915
    2. ' subtree' → logprob: -8.000358581542969
    3. ' sub' → logprob: -11.750358581542969
    4. '(sub' → logprob: -12.750358581542969
    5. 'substring' → logprob: -13.375358581542969
    6. 'subcategory' → logprob: -13.500358581542969
    7. 'size' → logprob: -13.625358581542969
    8. '               ' → logprob: -13.875358581542969
    9. 'subtotal' → logprob: -14.000358581542969
    10. 'submenu' → logprob: -14.000358581542969

Token 1228: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0004263852315489203
    2. 'size' → logprob: -8.000426292419434
    3. '```' → logprob: -10.375426292419434
    4. '[' → logprob: -11.000426292419434
    5. '`' → logprob: -11.500426292419434
    6. '_' → logprob: -12.125426292419434
    7. '[_' → logprob: -12.250426292419434
    8. '
' → logprob: -12.375426292419434
    9. '``' → logprob: -13.000426292419434
    10. 'child' → logprob: -13.250426292419434

Token 1229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030006874352693558
    2. 'child' → logprob: -3.5300068855285645
    3. 'year' → logprob: -9.155006408691406
    4. '```' → logprob: -9.530006408691406
    5. ' child' → logprob: -11.155006408691406
    6. ' [' → logprob: -11.280006408691406
    7. '(child' → logprob: -11.905006408691406
    8. '`' → logprob: -12.030006408691406
    9. '
' → logprob: -12.030006408691406
    10. '[event' → logprob: -12.530006408691406

Token 1230: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -7.827200897736475e-05
    2. ' child' → logprob: -9.500078201293945
    3. '[' → logprob: -12.750078201293945
    4. '(child' → logprob: -15.500078201293945
    5. ']' → logprob: -16.125078201293945
    6. '
' → logprob: -16.875078201293945
    7. '	child' → logprob: -17.375078201293945
    8. '```' → logprob: -18.500078201293945
    9. '[
' → logprob: -19.750078201293945
    10. '][' → logprob: -19.750078201293945

Token 1231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03448552265763283
    2. ']
' → logprob: -3.5344855785369873
    3. ']+' → logprob: -6.409485340118408
    4. '                   ' → logprob: -6.784485340118408
    5. '               ' → logprob: -7.159485340118408
    6. '[' → logprob: -7.409485340118408
    7. '   ' → logprob: -8.909485816955566
    8. '           ' → logprob: -9.534485816955566
    9. '```' → logprob: -9.534485816955566
    10. '[
' → logprob: -9.784485816955566

Token 1232: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001351306913420558
    2. '                       ' → logprob: -8.251351356506348
    3. '               ' → logprob: -8.376351356506348
    4. '           ' → logprob: -8.501351356506348
    5. 'year' → logprob: -8.751351356506348
    6. '
' → logprob: -9.251351356506348
    7. '                    
' → logprob: -9.626351356506348
    8. ')' → logprob: -9.751351356506348
    9. '+' → logprob: -10.001351356506348
    10. '(year' → logprob: -10.001351356506348

Token 1233: ' year' (ID: 1284)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' (adapté à ' year') → logprob: -0.003050200641155243
    2. '                   ' → logprob: -6.003050327301025
    3. ' year' → logprob: -7.628050327301025
    4. '               ' → logprob: -10.128049850463867
    5. '   ' → logprob: -10.753049850463867
    6. '           ' → logprob: -11.253049850463867
    7. '                       ' → logprob: -12.128049850463867
    8. '
' → logprob: -12.378049850463867
    9. '       ' → logprob: -13.253049850463867
    10. '                    ' → logprob: -14.503049850463867

Token 1234: '_events' (ID: 46626)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006152204005047679
    2. '_events' → logprob: -7.875615119934082
    3. '[event' → logprob: -9.000615119934082
    4. '```' → logprob: -10.875615119934082
    5. 'year' → logprob: -11.000615119934082
    6. '][' → logprob: -11.500615119934082
    7. '[
' → logprob: -11.625615119934082
    8. ']' → logprob: -12.125615119934082
    9. '_year' → logprob: -12.125615119934082
    10. ' [' → logprob: -12.375615119934082

Token 1235: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '\[' → logprob: -13.12501049041748
    3. '                   ' → logprob: -13.25001049041748
    4. 'year' → logprob: -13.75001049041748
    5. '[y' → logprob: -13.75001049041748
    6. '[
' → logprob: -14.12501049041748
    7. '           ' → logprob: -14.25001049041748
    8. '```' → logprob: -14.50001049041748
    9. '[e' → logprob: -14.62501049041748
    10. ' [' → logprob: -14.75001049041748

Token 1236: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -1.7120533811976202e-05
    2. ' year' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.250017166137695
    4. '
' → logprob: -16.625017166137695
    5. '[' → logprob: -17.250017166137695
    6. '           ' → logprob: -18.625017166137695
    7. ' ' → logprob: -19.125017166137695
    8. '       ' → logprob: -19.250017166137695
    9. '```' → logprob: -19.250017166137695
    10. ']' → logprob: -19.625017166137695

Token 1237: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6937024593353271
    2. ']+=' → logprob: -0.6937024593353271
    3. ']+' → logprob: -7.693702697753906
    4. ']=' → logprob: -10.568702697753906
    5. '                   ' → logprob: -10.568702697753906
    6. '+=' → logprob: -11.318702697753906
    7. ' ]' → logprob: -11.943702697753906
    8. '[' → logprob: -12.193702697753906
    9. ']
' → logprob: -12.318702697753906
    10. '                    ' → logprob: -12.443702697753906

Token 1238: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004365102213341743
    2. ' +=' → logprob: -8.000436782836914
    3. ']+=' → logprob: -9.375436782836914
    4. '+' → logprob: -11.375436782836914
    5. '=' → logprob: -13.125436782836914
    6. '```' → logprob: -13.875436782836914
    7. '+=(' → logprob: -14.500436782836914
    8. '           ' → logprob: -14.750436782836914
    9. '   ' → logprob: -15.250436782836914
    10. '+='' → logprob: -15.750436782836914

Token 1239: ' subtree' (ID: 126158)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0002100965939462185
    2. ' subtree' → logprob: -8.50020980834961
    3. '(sub' → logprob: -12.62520980834961
    4. ' sub' → logprob: -13.62520980834961
    5. 'submenu' → logprob: -14.75020980834961
    6. 'substring' → logprob: -15.12520980834961
    7. 'subtotal' → logprob: -15.12520980834961
    8. '	sub' → logprob: -15.25020980834961
    9. 'subcategory' → logprob: -15.37520980834961
    10. 'subplot' → logprob: -15.50020980834961

Token 1240: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.2723104848410003e-05
    2. '_s' → logprob: -11.625022888183594
    3. '_' → logprob: -12.125022888183594
    4. 'size' → logprob: -12.375022888183594
    5. 's' → logprob: -13.625022888183594
    6. '[' → logprob: -13.750022888183594
    7. ' _' → logprob: -15.000022888183594
    8. '\' → logprob: -15.250022888183594
    9. '[_' → logprob: -15.750022888183594
    10. '_SIZE' → logprob: -16.000022888183594

Token 1241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.889424836728722e-05
    2. 'child' → logprob: -9.250099182128906
    3. '[
' → logprob: -13.625099182128906
    4. '(child' → logprob: -14.250099182128906
    5. '```' → logprob: -14.625099182128906
    6. ' child' → logprob: -16.125099182128906
    7. ' [' → logprob: -16.250099182128906
    8. 'Child' → logprob: -16.750099182128906
    9. '
' → logprob: -17.125099182128906
    10. '	child' → logprob: -17.250099182128906

Token 1242: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -3.128163257315464e-07
    2. ' child' → logprob: -15.25
    3. '(child' → logprob: -17.25
    4. '[' → logprob: -19.125
    5. '
' → logprob: -20.625
    6. '	child' → logprob: -22.0
    7. 'Child' → logprob: -22.75
    8. 'ch' → logprob: -23.75
    9. '.child' → logprob: -24.0
    10. 'chi' → logprob: -24.625

Token 1243: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001063536386936903
    2. ']
' → logprob: -7.376063346862793
    3. '<|end|>' → logprob: -8.751063346862793
    4. '       ' → logprob: -9.251063346862793
    5. ' ]' → logprob: -9.876063346862793
    6. '+' → logprob: -10.501063346862793
    7. '               ' → logprob: -10.751063346862793
    8. ')' → logprob: -11.001063346862793
    9. '           ' → logprob: -11.376063346862793
    10. '   ' → logprob: -11.751063346862793

Token 1244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6852547526359558
    2. '<|end|>' → logprob: -1.4352548122406006
    3. '
' → logprob: -2.0602548122406006
    4. '   ' → logprob: -3.5602548122406006
    5. ')' → logprob: -3.6852548122406006
    6. '\n' → logprob: -3.9352548122406006
    7. '#' → logprob: -4.3102545738220215
    8. '\' → logprob: -4.5602545738220215
    9. '+' → logprob: -4.6852545738220215
    10. '```' → logprob: -4.9352545738220215

Token 1245: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09661174565553665
    2. '       ' → logprob: -2.471611738204956
    3. '
' → logprob: -5.221611976623535
    4. ' for' → logprob: -7.096611976623535
    5. 'result' → logprob: -7.596611976623535
    6. 'd' → logprob: -7.846611976623535
    7. 'return' → logprob: -8.596611976623535
    8. '        
' → logprob: -9.346611976623535
    9. '   ' → logprob: -9.471611976623535
    10. '```' → logprob: -10.096611976623535

Token 1246: ' Step' (ID: 22291)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7315943241119385
    2. 'prefix' → logprob: -0.9815943241119385
    3. 'd' → logprob: -3.1065943241119385
    4. 'c' → logprob: -3.4815943241119385
    5. 'acc' → logprob: -4.231594085693359
    6. '       ' → logprob: -4.231594085693359
    7. 'current' → logprob: -4.356594085693359
    8. 'pref' → logprob: -4.856594085693359
    9. '#' → logprob: -5.106594085693359
    10. 'cum' → logprob: -5.356594085693359

Token 1247: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45100969076156616
    2. '_' → logprob: -1.326009750366211
    3. '7' → logprob: -3.201009750366211
    4. '6' → logprob: -4.201009750366211
    5. '   ' → logprob: -4.201009750366211
    6. ' _' → logprob: -4.951009750366211
    7. ' ' → logprob: -5.326009750366211
    8. '=' → logprob: -5.826009750366211
    9. ' =' → logprob: -6.201009750366211
    10. '_
' → logprob: -6.201009750366211

Token 1248: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.009353100322186947
    2. '6' → logprob: -4.759353160858154
    3. 'for' → logprob: -8.884352684020996
    4. '1' → logprob: -9.009352684020996
    5. '   ' → logprob: -9.259352684020996
    6. ' ' → logprob: -9.634352684020996
    7. '8' → logprob: -9.884352684020996
    8. '#' → logprob: -9.884352684020996
    9. '_' → logprob: -10.009352684020996
    10. '
' → logprob: -10.009352684020996

Token 1249: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18160893023014069
    2. '
' → logprob: -1.8066089153289795
    3. 'for' → logprob: -7.306609153747559
    4. '        
' → logprob: -7.681609153747559
    5. 'current' → logprob: -8.306609153747559
    6. ' for' → logprob: -8.556609153747559
    7. '   ' → logprob: -9.056609153747559
    8. ' cumulative' → logprob: -9.806609153747559
    9. ' current' → logprob: -10.306609153747559
    10. 'd' → logprob: -10.931609153747559

Token 1250: ' Acc' (ID: 6278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21082285046577454
    2. 'prefix' → logprob: -2.085822820663452
    3. 'c' → logprob: -3.835822820663452
    4. 'acc' → logprob: -4.085823059082031
    5. 'cum' → logprob: -4.210823059082031
    6. 'd' → logprob: -5.460823059082031
    7. 'curr' → logprob: -6.335823059082031
    8. '       ' → logprob: -6.460823059082031
    9. 'pref' → logprob: -6.710823059082031
    10. 'current' → logprob: -6.710823059082031

Token 1251: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00357773806899786
    2. 'um' → logprob: -5.753577709197998
    3. 'umu' → logprob: -8.503578186035156
    4. 'umulative' → logprob: -8.878578186035156
    5. 'umulator' → logprob: -10.503578186035156
    6. 'umul' → logprob: -10.628578186035156
    7. '=' → logprob: -13.378578186035156
    8. 'umsum' → logprob: -13.628578186035156
    9. '
' → logprob: -13.878578186035156
    10. 'umal' → logprob: -14.253578186035156

Token 1252: ' dissatisfaction' (ID: 183931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1048295721411705
    2. ' for' → logprob: -2.4798295497894287
    3. '   ' → logprob: -4.854829788208008
    4. '       ' → logprob: -5.354829788208008
    5. '           ' → logprob: -6.854829788208008
    6. '
' → logprob: -7.354829788208008
    7. '```' → logprob: -7.604829788208008
    8. 'prefix' → logprob: -8.354829788208008
    9. 'd' → logprob: -8.479829788208008
    10. '_' → logprob: -8.854829788208008

Token 1253: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3173854351043701
    2. '       ' → logprob: -1.4423854351043701
    3. ' for' → logprob: -4.067385673522949
    4. ' =' → logprob: -4.942385673522949
    5. '
' → logprob: -4.942385673522949
    6. '=' → logprob: -6.192385673522949
    7. '   ' → logprob: -6.817385673522949
    8. 'd' → logprob: -8.44238567352295
    9. '```' → logprob: -8.69238567352295
    10. 'cum' → logprob: -8.81738567352295

Token 1254: ' years' (ID: 2101)
  Prédit: 'years'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'years' → logprob: -0.3948299288749695
    2. 'range' → logprob: -1.6448299884796143
    3. ' years' → logprob: -2.3948299884796143
    4. ' range' → logprob: -3.7698299884796143
    5. 'year' → logprob: -4.144829750061035
    6. ' year' → logprob: -6.519829750061035
    7. 'the' → logprob: -7.144829750061035
    8. '   ' → logprob: -7.769829750061035
    9. ' the' → logprob: -9.144829750061035
    10. '
' → logprob: -9.269829750061035

Token 1255: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38848811388015747
    2. '       ' → logprob: -1.1384880542755127
    3. ' for' → logprob: -6.763488292694092
    4. '
' → logprob: -8.013487815856934
    5. '   ' → logprob: -9.388487815856934
    6. 'acc' → logprob: -11.013487815856934
    7. 'cum' → logprob: -12.013487815856934
    8. '        
' → logprob: -12.263487815856934
    9. '```' → logprob: -12.388487815856934
    10. 'current' → logprob: -12.513487815856934

Token 1256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12762202322483063
    2. 'for' → logprob: -2.127622127532959
    3. '   ' → logprob: -7.877622127532959
    4. ' for' → logprob: -9.1276216506958
    5. 'acc' → logprob: -9.8776216506958
    6. 'current' → logprob: -10.0026216506958
    7. '```' → logprob: -10.2526216506958
    8. 'cum' → logprob: -10.7526216506958
    9. '
' → logprob: -11.0026216506958
    10. 'c' → logprob: -11.2526216506958

Token 1257: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003240101272240281
    2. '       ' → logprob: -5.75324010848999
    3. ' for' → logprob: -9.878239631652832
    4. '   ' → logprob: -12.378239631652832
    5. '```' → logprob: -12.753239631652832
    6. '
' → logprob: -12.878239631652832
    7. '	for' → logprob: -14.253239631652832
    8. 'prefix' → logprob: -14.628239631652832
    9. 'cum' → logprob: -16.25324058532715
    10. 'acc' → logprob: -16.25324058532715

Token 1258: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.11075518280267715
    2. 'year' → logprob: -2.610755205154419
    3. ' i' → logprob: -3.610755205154419
    4. 'i' → logprob: -5.61075496673584
    5. ' y' → logprob: -7.61075496673584
    6. 'y' → logprob: -8.86075496673584
    7. '   ' → logprob: -10.61075496673584
    8. ' ' → logprob: -11.86075496673584
    9. ' j' → logprob: -13.61075496673584
    10. 'j' → logprob: -13.86075496673584

Token 1259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06232784688472748
    2. 'in' → logprob: -2.8123278617858887
    3. '   ' → logprob: -8.93732738494873
    4. '1' → logprob: -9.18732738494873
    5. '=' → logprob: -10.81232738494873
    6. ',' → logprob: -10.93732738494873
    7. '[' → logprob: -11.06232738494873
    8. '	in' → logprob: -11.43732738494873
    9. ' i' → logprob: -11.43732738494873
    10. '    ' → logprob: -11.81232738494873

Token 1260: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17339587211608887
    2. ' in' → logprob: -2.548395872116089
    3. 'range' → logprob: -3.298395872116089
    4. 'in' → logprob: -3.548395872116089
    5. ' range' → logprob: -4.298396110534668
    6. ' ' → logprob: -6.423396110534668
    7. '0' → logprob: -10.548396110534668
    8. '2' → logprob: -11.548396110534668
    9. '_range' → logprob: -11.923396110534668
    10. '   ' → logprob: -12.298396110534668

Token 1261: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10023277252912521
    2. '(' → logprob: -2.3502328395843506
    3. '   ' → logprob: -11.60023307800293
    4. '       ' → logprob: -11.97523307800293
    5. ' ' → logprob: -11.97523307800293
    6. ' (' → logprob: -13.47523307800293
    7. '(
' → logprob: -13.60023307800293
    8. '           ' → logprob: -13.85023307800293
    9. '2' → logprob: -15.35023307800293
    10. '(year' → logprob: -15.72523307800293

Token 1262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.375000953674316
    3. '       ' → logprob: -15.250000953674316
    4. ' ' → logprob: -15.250000953674316
    5. '           ' → logprob: -16.500001907348633
    6. '
' → logprob: -19.375001907348633
    7. '    ' → logprob: -20.125001907348633
    8. '2' → logprob: -20.500001907348633
    9. '     ' → logprob: -20.750001907348633
    10. '        ' → logprob: -20.875001907348633

Token 1263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014805786777287722
    2. ' ,' → logprob: -8.001480102539062
    3. ',
' → logprob: -8.126480102539062
    4. ',self' → logprob: -8.501480102539062
    5. '       ' → logprob: -8.751480102539062
    6. '   ' → logprob: -8.751480102539062
    7. '
' → logprob: -9.251480102539062
    8. ',len' → logprob: -9.501480102539062
    9. ':' → logprob: -10.501480102539062
    10. '):
' → logprob: -10.751480102539062

Token 1264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011921331752091646
    2. ' self' → logprob: -6.751192092895508
    3. '
' → logprob: -11.376192092895508
    4. '           ' → logprob: -12.251192092895508
    5. '       ' → logprob: -13.001192092895508
    6. 'len' → logprob: -13.376192092895508
    7. '   ' → logprob: -13.751192092895508
    8. '(self' → logprob: -14.751192092895508
    9. '               ' → logprob: -16.126192092895508
    10. '[self' → logprob: -16.251192092895508

Token 1265: '.q' (ID: 20954)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006548931705765426
    2. ' +' → logprob: -7.500654697418213
    3. '+
' → logprob: -10.000655174255371
    4. '+self' → logprob: -10.125655174255371
    5. 'q' → logprob: -12.250655174255371
    6. '[q' → logprob: -12.750655174255371
    7. '   ' → logprob: -13.250655174255371
    8. ']+' → logprob: -13.500655174255371
    9. '.q' → logprob: -14.000655174255371
    10. '
' → logprob: -14.250655174255371

Token 1266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017746652010828257
    2. ' +' → logprob: -6.376774787902832
    3. '+
' → logprob: -9.876774787902832
    4. '):
' → logprob: -11.501774787902832
    5. '
' → logprob: -13.001774787902832
    6. '   ' → logprob: -13.501774787902832
    7. '[' → logprob: -13.501774787902832
    8. '+=' → logprob: -13.626774787902832
    9. '```' → logprob: -14.001774787902832
    10. '()+' → logprob: -14.376774787902832

Token 1267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. '+' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.75002384185791
    4. '   ' → logprob: -14.87502384185791
    5. ' +' → logprob: -16.250022888183594
    6. ')' → logprob: -16.500022888183594
    7. '```' → logprob: -16.500022888183594
    8. '
' → logprob: -17.000022888183594
    9. 'year' → logprob: -17.375022888183594
    10. '           ' → logprob: -17.500022888183594

Token 1268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -12.000018119812012
    3. '
' → logprob: -12.000018119812012
    4. '+' → logprob: -12.375018119812012
    5. '2' → logprob: -14.875018119812012
    6. '   ' → logprob: -15.125018119812012
    7. 'self' → logprob: -15.500018119812012
    8. 'q' → logprob: -15.625018119812012
    9. '```' → logprob: -16.250017166137695
    10. ')' → logprob: -17.125017166137695

Token 1269: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.33198532462120056
    2. ':
' → logprob: -1.706985354423523
    3. ':' → logprob: -2.9569852352142334
    4. '):' → logprob: -3.3319852352142334
    5. '           ' → logprob: -4.8319854736328125
    6. '       ' → logprob: -5.9569854736328125
    7. ']:
' → logprob: -6.4569854736328125
    8. ',' → logprob: -7.5819854736328125
    9. '+' → logprob: -8.706985473632812
    10. ']:' → logprob: -8.956985473632812

Token 1270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026741146575659513
    2. 'year' → logprob: -6.377674102783203
    3. ' year' → logprob: -7.127674102783203
    4. '   ' → logprob: -9.002674102783203
    5. '       ' → logprob: -10.752674102783203
    6. '               ' → logprob: -11.627674102783203
    7. '            
' → logprob: -12.002674102783203
    8. '```' → logprob: -12.502674102783203
    9. 'd' → logprob: -13.627674102783203
    10. '
' → logprob: -13.877674102783203

Token 1271: ' current' (ID: 2208)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.6638181209564209
    2. 'current' (adapté à ' current') → logprob: -1.538818120956421
    3. '           ' → logprob: -1.913818120956421
    4. '   ' → logprob: -2.913818120956421
    5. 'd' → logprob: -3.163818120956421
    6. '               ' → logprob: -4.288818359375
    7. '       ' → logprob: -5.163818359375
    8. ' year' → logprob: -5.413818359375
    9. ' current' → logprob: -6.038818359375
    10. ' ' → logprob: -9.913818359375

Token 1272: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0016982723027467728
    2. '_' → logprob: -6.6266984939575195
    3. 'd' → logprob: -8.50169849395752
    4. '_year' → logprob: -10.25169849395752
    5. '
' → logprob: -10.62669849395752
    6. '_events' → logprob: -10.75169849395752
    7. ' +=' → logprob: -11.12669849395752
    8. '   ' → logprob: -11.12669849395752
    9. '+=' → logprob: -11.25169849395752
    10. '```' → logprob: -11.50169849395752

Token 1273: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.060276757925748825
    2. '_' → logprob: -3.560276746749878
    3. '_d' → logprob: -3.685276746749878
    4. 'is' → logprob: -6.435276985168457
    5. '_s' → logprob: -6.560276985168457
    6. '+=' → logprob: -6.810276985168457
    7. 's' → logprob: -8.560276985168457
    8. 'd' → logprob: -8.560276985168457
    9. '_is' → logprob: -8.935276985168457
    10. 'issim' → logprob: -9.310276985168457

Token 1274: 'atisfaction' (ID: 60876)
  Prédit: 'atisfaction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfaction' → logprob: -0.43182095885276794
    2. 'atisf' → logprob: -1.0568209886550903
    3. 'atis' → logprob: -6.681820869445801
    4. 'at' → logprob: -7.181820869445801
    5. 'atisfied' → logprob: -7.431820869445801
    6. 's' → logprob: -8.6818208694458
    7. 'atisfactory' → logprob: -9.5568208694458
    8. '```' → logprob: -9.8068208694458
    9. '+=' → logprob: -10.0568208694458
    10. '=' → logprob: -10.8068208694458

Token 1275: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02326388470828533
    2. ' +=' → logprob: -3.773263931274414
    3. '=' → logprob: -11.398263931274414
    4. ']+=' → logprob: -12.648263931274414
    5. '   ' → logprob: -13.273263931274414
    6. '+' → logprob: -14.273263931274414
    7. '+=(' → logprob: -14.398263931274414
    8. '```' → logprob: -15.273263931274414
    9. '           ' → logprob: -15.523263931274414
    10. '	' → logprob: -15.773263931274414

Token 1276: ' year' (ID: 1284)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.0002613358374219388
    2. ' year' → logprob: -8.250261306762695
    3. '(year' → logprob: -22.250261306762695
    4. '   ' → logprob: -22.375261306762695
    5. '-year' → logprob: -22.500261306762695
    6. '`' → logprob: -22.750261306762695
    7. '```' → logprob: -22.875261306762695
    8. 'y' → logprob: -23.125261306762695
    9. '
' → logprob: -23.125261306762695
    10. '.year' → logprob: -24.375261306762695

Token 1277: '_events' (ID: 46626)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.002729892730713
    2. 'year' → logprob: -1.127729892730713
    3. '_events' → logprob: -1.252729892730713
    4. ']_' → logprob: -5.252729892730713
    5. '
' → logprob: -5.627729892730713
    6. ']
' → logprob: -5.752729892730713
    7. ' year' → logprob: -5.877729892730713
    8. '_year' → logprob: -5.877729892730713
    9. '   ' → logprob: -7.002729892730713
    10. '_event' → logprob: -7.502729892730713

Token 1278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4987974029500037e-05
    2. 'year' → logprob: -10.750024795532227
    3. '
' → logprob: -13.250024795532227
    4. '[
' → logprob: -14.375024795532227
    5. '```' → logprob: -15.000024795532227
    6. ' [' → logprob: -15.250024795532227
    7. '\[' → logprob: -16.000024795532227
    8. ' year' → logprob: -16.125024795532227
    9. '   ' → logprob: -16.250024795532227
    10. '           ' → logprob: -16.500024795532227

Token 1279: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -5.44312788406387e-05
    2. '[' → logprob: -10.000054359436035
    3. ' year' → logprob: -11.625054359436035
    4. '   ' → logprob: -17.50005531311035
    5. '(year' → logprob: -18.25005531311035
    6. '
' → logprob: -18.87505531311035
    7. '```' → logprob: -18.87505531311035
    8. ' ' → logprob: -19.87505531311035
    9. ']' → logprob: -20.00005531311035
    10. '-year' → logprob: -20.00005531311035

Token 1280: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00215799524448812
    2. ']
' → logprob: -6.377158164978027
    3. '           ' → logprob: -8.752158164978027
    4. ')' → logprob: -9.002158164978027
    5. '<|end|>' → logprob: -9.502158164978027
    6. '
' → logprob: -10.252158164978027
    7. ' ]' → logprob: -11.002158164978027
    8. '       ' → logprob: -11.377158164978027
    9. ')]' → logprob: -11.627158164978027
    10. '[' → logprob: -11.752158164978027

Token 1281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4799029231071472
    2. '
' → logprob: -0.9799029231071472
    3. 'yield' → logprob: -6.229902744293213
    4. 'd' → logprob: -6.479902744293213
    5. '       ' → logprob: -6.854902744293213
    6. '            
' → logprob: -8.104903221130371
    7. '   ' → logprob: -8.479903221130371
    8. '    
' → logprob: -8.854903221130371
    9. '        
' → logprob: -8.979903221130371
    10. ' yield' → logprob: -9.229903221130371

Token 1282: ' diss' (ID: 32434)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5229610800743103
    2. 'yield' → logprob: -1.147961139678955
    3. 'print' → logprob: -2.772961139678955
    4. '           ' → logprob: -3.647961139678955
    5. ' yield' → logprob: -6.647961139678955
    6. '   ' → logprob: -10.147960662841797
    7. ' print' → logprob: -10.397960662841797
    8. '       ' → logprob: -10.522960662841797
    9. '               ' → logprob: -11.272960662841797
    10. '```' → logprob: -12.022960662841797

Token 1283: 'atisf' (ID: 7639)
  Prédit: 'atisf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.0020144060254096985
    2. 's' → logprob: -7.127014636993408
    3. 'atis' → logprob: -7.377014636993408
    4. 'at' → logprob: -8.25201416015625
    5. 'atisfaction' → logprob: -8.50201416015625
    6. ' satisf' → logprob: -9.87701416015625
    7. 'atisfied' → logprob: -10.12701416015625
    8. '_' → logprob: -11.87701416015625
    9. '```' → logprob: -12.62701416015625
    10. 'sat' → logprob: -13.00201416015625

Token 1284: 'actions' (ID: 6711)
  Prédit: 'actions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -2.451116051815916e-05
    2. 'ations' → logprob: -11.750024795532227
    3. 'acions' → logprob: -12.250024795532227
    4. '_actions' → logprob: -12.250024795532227
    5. 'act' → logprob: -13.125024795532227
    6. 'ictions' → logprob: -14.000024795532227
    7. 'ications' → logprob: -14.125024795532227
    8. '_' → logprob: -14.625024795532227
    9. 'action' → logprob: -14.625024795532227
    10. '#' → logprob: -14.750024795532227

Token 1285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '\[' → logprob: -13.875000953674316
    3. '```' → logprob: -15.250000953674316
    4. '[
' → logprob: -16.250001907348633
    5. '
' → logprob: -17.625001907348633
    6. '[current' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.375001907348633
    8. '  
' → logprob: -18.500001907348633
    9. '[level' → logprob: -18.625001907348633
    10. '[word' → logprob: -18.750001907348633

Token 1286: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -4.56102097814437e-05
    2. ' year' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '(year' → logprob: -18.625045776367188
    5. ' ' → logprob: -18.875045776367188
    6. ')' → logprob: -19.000045776367188
    7. ']' → logprob: -19.250045776367188
    8. '
' → logprob: -19.625045776367188
    9. '=' → logprob: -20.000045776367188
    10. '-year' → logprob: -20.375045776367188

Token 1287: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001625379954930395
    2. ' ]' → logprob: -9.250162124633789
    3. ']=' → logprob: -10.000162124633789
    4. ']+=' → logprob: -11.500162124633789
    5. ']
' → logprob: -12.000162124633789
    6. '[' → logprob: -12.500162124633789
    7. '-' → logprob: -14.375162124633789
    8. '   ' → logprob: -16.12516212463379
    9. '[
' → logprob: -16.37516212463379
    10. '[i' → logprob: -16.37516212463379

Token 1288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14662396907806396
    2. '+=' → logprob: -2.5216240882873535
    3. ' +=' → logprob: -3.3966240882873535
    4. '[' → logprob: -4.5216240882873535
    5. ' =' → logprob: -5.1466240882873535
    6. '=
' → logprob: -7.0216240882873535
    7. ']+=' → logprob: -7.0216240882873535
    8. '.append' → logprob: -7.2716240882873535
    9. '.' → logprob: -7.3966240882873535
    10. 'print' → logprob: -7.7716240882873535

Token 1289: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.001170225441455841
    2. ' current' → logprob: -6.7511701583862305
    3. '	current' → logprob: -18.501171112060547
    4. 'cur' → logprob: -19.376171112060547
    5. '$current' → logprob: -19.501171112060547
    6. '(current' → logprob: -20.001171112060547
    7. '_current' → logprob: -20.501171112060547
    8. 'curr' → logprob: -20.626171112060547
    9. '[current' → logprob: -20.626171112060547
    10. '
' → logprob: -20.626171112060547

Token 1290: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.7835754988482222e-05
    2. 'd' → logprob: -11.000018119812012
    3. 'current' → logprob: -14.625018119812012
    4. '_' → logprob: -15.000018119812012
    5. 's' → logprob: -16.000017166137695
    6. '_s' → logprob: -16.125017166137695
    7. '   ' → logprob: -17.875017166137695
    8. ' ' → logprob: -18.000017166137695
    9. '+' → logprob: -18.125017166137695
    10. 'D' → logprob: -18.375017166137695

Token 1291: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.0029679536819458008
    2. 'is' → logprob: -5.877967834472656
    3. 's' → logprob: -9.252967834472656
    4. 'd' → logprob: -9.752967834472656
    5. 'ass' → logprob: -13.252967834472656
    6. 'issent' → logprob: -13.877967834472656
    7. ' dissatisfaction' → logprob: -14.002967834472656
    8. 'i' → logprob: -14.127967834472656
    9. '_s' → logprob: -14.377967834472656
    10. 'ss' → logprob: -14.377967834472656

Token 1292: 'atisfaction' (ID: 60876)
  Prédit: 'atisf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.1260804980993271
    2. 'ations' → logprob: -2.2510805130004883
    3. 'atisfaction' → logprob: -4.876080513000488
    4. 'actions' → logprob: -6.251080513000488
    5. 'ast' → logprob: -6.751080513000488
    6. 'atis' → logprob: -7.001080513000488
    7. ' satisf' → logprob: -7.626080513000488
    8. 'atisfied' → logprob: -8.376080513000488
    9. 's' → logprob: -9.126080513000488
    10. 'ation' → logprob: -9.376080513000488

Token 1293: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6405737996101379
    2. '       ' → logprob: -0.7655737996101379
    3. 'return' → logprob: -5.765573978424072
    4. '<|end|>' → logprob: -6.140573978424072
    5. '        
' → logprob: -6.765573978424072
    6. '   ' → logprob: -7.265573978424072
    7. '    
' → logprob: -9.015573501586914
    8. ' return' → logprob: -9.015573501586914
    9. '	' → logprob: -9.015573501586914
    10. '  
' → logprob: -9.265573501586914

Token 1294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021899950224906206
    2. 'return' → logprob: -6.752190113067627
    3. '   ' → logprob: -7.252190113067627
    4. '
' → logprob: -9.127189636230469
    5. '<|end|>' → logprob: -9.502189636230469
    6. '```' → logprob: -10.002189636230469
    7. ' return' → logprob: -10.127189636230469
    8. '        
' → logprob: -11.377189636230469
    9. '	' → logprob: -11.377189636230469
    10. '           ' → logprob: -11.752189636230469

Token 1295: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038779813330620527
    2. 'return' → logprob: -5.878878116607666
    3. '   ' → logprob: -7.128878116607666
    4. ' return' → logprob: -8.503877639770508
    5. '```' → logprob: -10.128877639770508
    6. '{return' → logprob: -12.003877639770508
    7. '<|end|>' → logprob: -12.128877639770508
    8. '	return' → logprob: -12.628877639770508
    9. '           ' → logprob: -12.753877639770508
    10. '        
' → logprob: -12.878877639770508

Token 1296: ' Step' (ID: 22291)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -3.380904672667384e-05
    2. '       ' → logprob: -10.500033378601074
    3. ' return' → logprob: -12.000033378601074
    4. 'def' → logprob: -17.75003433227539
    5. '   ' → logprob: -18.62503433227539
    6. '
' → logprob: -19.50003433227539
    7. '	return' → logprob: -20.25003433227539
    8. '{return' → logprob: -21.50003433227539
    9. '_return' → logprob: -21.87503433227539
    10. 'Return' → logprob: -21.87503433227539

Token 1297: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011045237071812153
    2. '   ' → logprob: -5.136045455932617
    3. 'return' → logprob: -6.011045455932617
    4. ' return' → logprob: -6.136045455932617
    5. '    ' → logprob: -8.386045455932617
    6. '        ' → logprob: -9.761045455932617
    7. '        
' → logprob: -10.136045455932617
    8. ' ' → logprob: -10.261045455932617
    9. '	' → logprob: -10.886045455932617
    10. '_return' → logprob: -11.261045455932617

Token 1298: '8' (ID: 23)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009082375094294548
    2. '7' → logprob: -5.259082317352295
    3. '       ' → logprob: -6.259082317352295
    4. ' return' → logprob: -6.759082317352295
    5. '8' → logprob: -7.259082317352295
    6. '   ' → logprob: -10.634082794189453
    7. '
' → logprob: -11.009082794189453
    8. '```' → logprob: -11.509082794189453
    9. 'Return' → logprob: -12.134082794189453
    10. '#' → logprob: -13.134082794189453

Token 1299: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034581103827804327
    2. '
' → logprob: -5.878458023071289
    3. '        
' → logprob: -8.128458023071289
    4. ' return' → logprob: -9.003458023071289
    5. '   ' → logprob: -9.253458023071289
    6. 'return' → logprob: -9.878458023071289
    7. '	' → logprob: -11.128458023071289
    8. ':
' → logprob: -11.253458023071289
    9. ':' → logprob: -11.253458023071289
    10. '           ' → logprob: -11.503458023071289

Token 1300: ' Output' (ID: 18315)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00037466554204002023
    2. ' return' → logprob: -8.750374794006348
    3. 'result' → logprob: -9.000374794006348
    4. 'results' → logprob: -10.000374794006348
    5. '       ' → logprob: -10.250374794006348
    6. 'for' → logprob: -12.625374794006348
    7. 'output' → logprob: -13.000374794006348
    8. '#' → logprob: -13.250374794006348
    9. 'Return' → logprob: -13.375374794006348
    10. '   ' → logprob: -13.625374794006348

Token 1301: ' dissatisfaction' (ID: 183931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026813862845301628
    2. 'return' → logprob: -3.7768137454986572
    3. '
' → logprob: -5.776813983917236
    4. ' return' → logprob: -8.901813507080078
    5. '   ' → logprob: -9.526813507080078
    6. 'for' → logprob: -9.526813507080078
    7. '        
' → logprob: -9.901813507080078
    8. '```' → logprob: -9.901813507080078
    9. '[' → logprob: -10.651813507080078
    10. '[]
' → logprob: -11.026813507080078

Token 1302: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0722842887043953
    2. 'return' → logprob: -2.82228422164917
    3. '
' → logprob: -5.32228422164917
    4. 'for' → logprob: -5.32228422164917
    5. '```' → logprob: -8.447284698486328
    6. '        
' → logprob: -9.447284698486328
    7. ' return' → logprob: -9.572284698486328
    8. '[' → logprob: -10.322284698486328
    9. '   ' → logprob: -10.572284698486328
    10. '[]
' → logprob: -10.822284698486328

Token 1303: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017330136615782976
    2. '
' → logprob: -7.12673282623291
    3. 'return' → logprob: -7.25173282623291
    4. '```' → logprob: -9.25173282623291
    5. '   ' → logprob: -9.62673282623291
    6. '        
' → logprob: -10.75173282623291
    7. ' return' → logprob: -11.25173282623291
    8. 'for' → logprob: -12.12673282623291
    9. '           ' → logprob: -12.75173282623291
    10. '	' → logprob: -12.75173282623291

Token 1304: ' each' (ID: 2454)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.2222481518983841
    2. ' year' → logprob: -1.8472481966018677
    3. 'self' → logprob: -4.347248077392578
    4. 'each' → logprob: -4.597248077392578
    5. ' self' → logprob: -5.597248077392578
    6. 'range' → logprob: -5.722248077392578
    7. ' each' → logprob: -5.847248077392578
    8. '   ' → logprob: -5.972248077392578
    9. '_' → logprob: -6.722248077392578
    10. ' _' → logprob: -7.097248077392578

Token 1305: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.38876184821128845
    2. 'year' → logprob: -1.1387618780136108
    3. '   ' → logprob: -6.8887619972229
    4. '       ' → logprob: -7.8887619972229
    5. '
' → logprob: -9.138761520385742
    6. 'range' → logprob: -9.138761520385742
    7. ' range' → logprob: -9.388761520385742
    8. ' in' → logprob: -9.513761520385742
    9. ' for' → logprob: -10.638761520385742
    10. '           ' → logprob: -10.763761520385742

Token 1306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01112091913819313
    2. '
' → logprob: -4.511120796203613
    3. '```' → logprob: -10.011120796203613
    4. '        
' → logprob: -11.261120796203613
    5. 'for' → logprob: -12.261120796203613
    6. '   ' → logprob: -12.511120796203613
    7. 'return' → logprob: -12.636120796203613
    8. '           ' → logprob: -14.011120796203613
    9. '	' → logprob: -14.511120796203613
    10. '    
' → logprob: -14.761120796203613

Token 1307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030948311905376613
    2. '
' → logprob: -8.375309944152832
    3. '```' → logprob: -9.875309944152832
    4. 'return' → logprob: -11.125309944152832
    5. '   ' → logprob: -11.750309944152832
    6. '	' → logprob: -13.375309944152832
    7. '        
' → logprob: -13.625309944152832
    8. '           ' → logprob: -14.125309944152832
    9. ' return' → logprob: -14.250309944152832
    10. 'for' → logprob: -15.125309944152832

Token 1308: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05152222886681557
    2. 'return' → logprob: -3.0515222549438477
    3. 'for' → logprob: -5.926522254943848
    4. 'results' → logprob: -8.926522254943848
    5. '   ' → logprob: -9.926522254943848
    6. 'result' → logprob: -10.801522254943848
    7. ' for' → logprob: -10.926522254943848
    8. ' return' → logprob: -10.926522254943848
    9. '```' → logprob: -10.926522254943848
    10. '	' → logprob: -12.926522254943848

Token 1309: ' City' (ID: 5686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032121442258358
    2. 'return' → logprob: -3.532121419906616
    3. 'for' → logprob: -6.532121658325195
    4. 'results' → logprob: -7.782121658325195
    5. 'result' → logprob: -8.532121658325195
    6. '```' → logprob: -8.657121658325195
    7. '   ' → logprob: -9.532121658325195
    8. ' for' → logprob: -11.032121658325195
    9. ' return' → logprob: -11.407121658325195
    10. 'outputs' → logprob: -11.907121658325195

Token 1310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.076514482498169
    2. 's' → logprob: -1.326514482498169
    3. ' =' → logprob: -2.201514482498169
    4. '_' → logprob: -2.451514482498169
    5. '_s' → logprob: -3.576514482498169
    6. '   ' → logprob: -3.576514482498169
    7. '=' → logprob: -3.701514482498169
    8. ' ' → logprob: -3.826514482498169
    9. '_dist' → logprob: -3.951514482498169
    10. ',' → logprob: -4.20151424407959

Token 1311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08103002607822418
    2. '=' → logprob: -3.9560301303863525
    3. 's' → logprob: -4.081029891967773
    4. ' ' → logprob: -4.706029891967773
    5. 'count' → logprob: -5.206029891967773
    6. '
' → logprob: -5.331029891967773
    7. 'dist' → logprob: -5.331029891967773
    8. 'for' → logprob: -5.456029891967773
    9. ' =' → logprob: -5.956029891967773
    10. '_dist' → logprob: -6.081029891967773

Token 1312: ' never' (ID: 3779)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45676881074905396
    2. ',' → logprob: -2.581768751144409
    3. 'for' → logprob: -2.956768751144409
    4. ' is' → logprob: -3.081768751144409
    5. '   ' → logprob: -3.331768751144409
    6. 'is' → logprob: -3.831768751144409
    7. ' has' → logprob: -4.206768989562988
    8. 'from' → logprob: -4.331768989562988
    9. 'has' → logprob: -4.456768989562988
    10. '```' → logprob: -4.456768989562988

Token 1313: ' dissatisfied' (ID: 151646)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0851045846939087
    2. '
' → logprob: -2.210104465484619
    3. 'has' → logprob: -2.585104465484619
    4. '   ' → logprob: -2.835104465484619
    5. 'los' → logprob: -2.835104465484619
    6. 'is' → logprob: -2.960104465484619
    7. 'ca' → logprob: -3.085104465484619
    8. '=' → logprob: -3.335104465484619
    9. 'd' → logprob: -3.335104465484619
    10. '```' → logprob: -3.460104465484619

Token 1314: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2841583788394928
    2. '
' → logprob: -1.4091583490371704
    3. 'return' → logprob: -6.409158229827881
    4. '```' → logprob: -7.284158229827881
    5. '        
' → logprob: -8.159158706665039
    6. 'for' → logprob: -8.909158706665039
    7. '   ' → logprob: -9.034158706665039
    8. '
' → logprob: -10.659158706665039
    9. ' return' → logprob: -11.159158706665039
    10. '	' → logprob: -11.409158706665039

Token 1315: ' problem' (ID: 4792)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6182352900505066
    2. 'the' → logprob: -2.3682353496551514
    3. 'increment' → logprob: -2.8682353496551514
    4. 'distance' → logprob: -2.9932353496551514
    5. 'raise' → logprob: -3.1182353496551514
    6. 'any' → logprob: -3.3682353496551514
    7. 'd' → logprob: -3.4932353496551514
    8. 'edges' → logprob: -3.7432353496551514
    9. 'increase' → logprob: -3.9932353496551514
    10. 'increments' → logprob: -3.9932353496551514

Token 1316: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2823389768600464
    2. '
' → logprob: -1.4073389768600464
    3. 'return' → logprob: -7.782339096069336
    4. 'for' → logprob: -8.282339096069336
    5. '```' → logprob: -8.532339096069336
    6. '        
' → logprob: -8.782339096069336
    7. '   ' → logprob: -9.532339096069336
    8. '
' → logprob: -10.782339096069336
    9. '           ' → logprob: -10.907339096069336
    10. '	' → logprob: -11.032339096069336

Token 1317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026672380045056343
    2. '
' → logprob: -3.65167236328125
    3. 'return' → logprob: -8.52667236328125
    4. '   ' → logprob: -9.40167236328125
    5. '        
' → logprob: -10.40167236328125
    6. '```' → logprob: -10.52667236328125
    7. 'for' → logprob: -11.27667236328125
    8. '	' → logprob: -12.40167236328125
    9. '           ' → logprob: -12.52667236328125
    10. '
' → logprob: -12.90167236328125

Token 1318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016434036660939455
    2. '
' → logprob: -6.501643180847168
    3. 'for' → logprob: -9.501643180847168
    4. '```' → logprob: -10.376643180847168
    5. '   ' → logprob: -11.126643180847168
    6. 'return' → logprob: -11.876643180847168
    7. '        
' → logprob: -12.001643180847168
    8. '	' → logprob: -12.876643180847168
    9. ' for' → logprob: -13.251643180847168
    10. '           ' → logprob: -13.251643180847168

Token 1319: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014192888513207436
    2. 'return' → logprob: -4.764193058013916
    3. '```' → logprob: -6.014193058013916
    4. 'for' → logprob: -6.639193058013916
    5. '   ' → logprob: -6.889193058013916
    6. '
' → logprob: -7.389193058013916
    7. '           ' → logprob: -9.639192581176758
    8. ' for' → logprob: -10.514192581176758
    9. '``' → logprob: -10.764192581176758
    10. 'results' → logprob: -11.139192581176758

Token 1320: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09611710906028748
    2. 'for' → logprob: -3.0961170196533203
    3. 'return' → logprob: -3.0961170196533203
    4. 'result' → logprob: -7.47111701965332
    5. 'results' → logprob: -8.09611701965332
    6. '```' → logprob: -9.09611701965332
    7. '   ' → logprob: -9.59611701965332
    8. ' for' → logprob: -9.72111701965332
    9. '
' → logprob: -10.34611701965332
    10. 'output' → logprob: -11.47111701965332

Token 1321: ' subtree' (ID: 126158)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1291797161102295
    2. '
' → logprob: -1.7541797161102295
    3. ' for' → logprob: -1.7541797161102295
    4. 'return' → logprob: -2.2541797161102295
    5. 'for' → logprob: -2.3791797161102295
    6. ' 
' → logprob: -3.3791797161102295
    7. ' ' → logprob: -3.6291797161102295
    8. '   ' → logprob: -3.7541797161102295
    9. 'd' → logprob: -4.754179954528809
    10. 'r' → logprob: -5.004179954528809

Token 1322: ' sizes' (ID: 16174)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.01842336729168892
    2. '_sizes' → logprob: -5.393423557281494
    3. 'sizes' → logprob: -5.768423557281494
    4. 'size' → logprob: -6.018423557281494
    5. '_' → logprob: -6.143423557281494
    6. '   ' → logprob: -6.268423557281494
    7. '[' → logprob: -6.643423557281494
    8. '```' → logprob: -7.018423557281494
    9. 's' → logprob: -7.268423557281494
    10. '
' → logprob: -7.643423557281494

Token 1323: ' exclude' (ID: 39566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0118309259414673
    2. '[' → logprob: -1.1368309259414673
    3. '
' → logprob: -1.2618309259414673
    4. '<|end|>' → logprob: -5.011830806732178
    5. 'for' → logprob: -5.136830806732178
    6. '        
' → logprob: -5.386830806732178
    7. '```' → logprob: -5.636830806732178
    8. '   ' → logprob: -6.136830806732178
    9. ' for' → logprob: -6.136830806732178
    10. ',' → logprob: -7.011830806732178

Token 1324: ' city' (ID: 5030)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5552902817726135
    2. 'city' → logprob: -2.0552902221679688
    3. 'the' → logprob: -2.1802902221679688
    4. ' city' → logprob: -2.4302902221679688
    5. ' the' → logprob: -3.0552902221679688
    6. 'root' → logprob: -3.8052902221679688
    7. ' ' → logprob: -4.430290222167969
    8. 'node' → logprob: -5.305290222167969
    9. ' root' → logprob: -5.930290222167969
    10. '[' → logprob: -5.930290222167969

Token 1325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01428044494241476
    2. '0' → logprob: -4.639280319213867
    3. ' ' → logprob: -6.264280319213867
    4. '[' → logprob: -6.639280319213867
    5. '
' → logprob: -7.139280319213867
    6. '   ' → logprob: -8.889280319213867
    7. '       ' → logprob: -9.139280319213867
    8. '2' → logprob: -9.514280319213867
    9. '#' → logprob: -10.264280319213867
    10. '```' → logprob: -10.514280319213867

Token 1326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003299389500170946
    2. '0' → logprob: -5.753299236297607
    3. '[' → logprob: -10.003299713134766
    4. '
' → logprob: -10.378299713134766
    5. ' ' → logprob: -11.128299713134766
    6. '#' → logprob: -11.253299713134766
    7. '```' → logprob: -11.878299713134766
    8. '`' → logprob: -12.128299713134766
    9. '2' → logprob: -14.378299713134766
    10. 'one' → logprob: -14.503299713134766

Token 1327: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4320484399795532
    2. '       ' → logprob: -1.0570484399795532
    3. '   ' → logprob: -6.682048320770264
    4. '        
' → logprob: -6.807048320770264
    5. '  
' → logprob: -8.182048797607422
    6. 'return' → logprob: -8.307048797607422
    7. '```' → logprob: -9.057048797607422
    8. '    
' → logprob: -9.432048797607422
    9. '
' → logprob: -9.932048797607422
    10. '           ' → logprob: -10.182048797607422

Token 1328: ' increment' (ID: 24032)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7285241484642029
    2. 'consider' → logprob: -1.7285242080688477
    3. 'd' → logprob: -1.8535242080688477
    4. 'sub' → logprob: -2.4785242080688477
    5. 'count' → logprob: -3.1035242080688477
    6. 'each' → logprob: -3.9785242080688477
    7. 'all' → logprob: -4.603524208068848
    8. 'being' → logprob: -4.978524208068848
    9. 'counts' → logprob: -4.978524208068848
    10. '#' → logprob: -6.228524208068848

Token 1329: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5783374905586243
    2. '
' → logprob: -0.8283374905586243
    3. '        
' → logprob: -6.578337669372559
    4. '   ' → logprob: -7.703337669372559
    5. '```' → logprob: -8.328337669372559
    6. 'return' → logprob: -9.453337669372559
    7. '  
' → logprob: -9.953337669372559
    8. '    
' → logprob: -10.328337669372559
    9. '
' → logprob: -10.578337669372559
    10. '           ' → logprob: -10.703337669372559

Token 1330: ' naturally' (ID: 24752)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021657519042491913
    2. '
' → logprob: -3.8966574668884277
    3. '   ' → logprob: -7.521657466888428
    4. 'return' → logprob: -7.896657466888428
    5. '        
' → logprob: -9.896657943725586
    6. '	' → logprob: -10.396657943725586
    7. '<|end|>' → logprob: -10.396657943725586
    8. '```' → logprob: -10.521657943725586
    9. 'for' → logprob: -11.021657943725586
    10. '           ' → logprob: -11.646657943725586

Token 1331: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004963100887835026
    2. '
' → logprob: -5.504962921142578
    3. 'return' → logprob: -7.629962921142578
    4. '   ' → logprob: -8.129962921142578
    5. '        
' → logprob: -10.254962921142578
    6. '```' → logprob: -10.254962921142578
    7. 'for' → logprob: -11.004962921142578
    8. '           ' → logprob: -12.254962921142578
    9. '    
' → logprob: -13.004962921142578
    10. '	' → logprob: -13.379962921142578

Token 1332: 'root' (ID: 5488)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.9348161816596985
    2. ')' → logprob: -1.4348161220550537
    3. '       ' → logprob: -2.5598161220550537
    4. ')
' → logprob: -2.6848161220550537
    5. 'because' → logprob: -2.9348161220550537
    6. 'since' → logprob: -3.0598161220550537
    7. ' so' → logprob: -3.3098161220550537
    8. '#' → logprob: -3.4348161220550537
    9. 'return' → logprob: -4.309816360473633
    10. 'as' → logprob: -4.809816360473633

Token 1333: ''s' (ID: 885)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9675579071044922
    2. '+' → logprob: -1.9675579071044922
    3. ')' → logprob: -2.592557907104492
    4. 'excluded' → logprob: -2.717557907104492
    5. '=' → logprob: -3.092557907104492
    6. ' only' → logprob: -3.342557907104492
    7. '
' → logprob: -3.342557907104492
    8. 'is' → logprob: -3.467557907104492
    9. ' +' → logprob: -3.592557907104492
    10. ')
' → logprob: -3.842557907104492

Token 1334: ' subtree' (ID: 126158)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.21627140045166016
    2. 'sub' → logprob: -2.21627140045166
    3. ' children' → logprob: -3.84127140045166
    4. ' subtree' → logprob: -4.09127140045166
    5. 'size' → logprob: -4.46627140045166
    6. 'child' → logprob: -4.71627140045166
    7. ')' → logprob: -4.96627140045166
    8. '```' → logprob: -5.09127140045166
    9. ''s' → logprob: -6.34127140045166
    10. 's' → logprob: -6.34127140045166

Token 1335: ' size' (ID: 2349)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.38898739218711853
    2. 'size' → logprob: -2.1389873027801514
    3. ')' → logprob: -2.2639873027801514
    4. '```' → logprob: -3.8889873027801514
    5. ']' → logprob: -4.1389875411987305
    6. '[' → logprob: -4.2639875411987305
    7. 's' → logprob: -4.3889875411987305
    8. '_sizes' → logprob: -5.0139875411987305
    9. ' is' → logprob: -5.1389875411987305
    10. 'is' → logprob: -5.6389875411987305

Token 1336: ' includes' (ID: 6664)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.808062732219696
    2. '-' → logprob: -2.183062791824341
    3. ' -' → logprob: -2.308062791824341
    4. '```' → logprob: -2.308062791824341
    5. ')' → logprob: -2.808062791824341
    6. ' is' → logprob: -2.933062791824341
    7. '=' → logprob: -3.183062791824341
    8. '
' → logprob: -3.308062791824341
    9. ' =' → logprob: -4.683062553405762
    10. 'is' → logprob: -4.808062553405762

Token 1337: ' whole' (ID: 6062)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7729690670967102
    2. '1' → logprob: -1.0229690074920654
    3. 'city' → logprob: -2.1479690074920654
    4. 'the' → logprob: -4.1479692459106445
    5. 'it' → logprob: -4.6479692459106445
    6. ' itself' → logprob: -4.8979692459106445
    7. ' all' → logprob: -4.8979692459106445
    8. 'self' → logprob: -5.2729692459106445
    9. 'node' → logprob: -5.5229692459106445
    10. ' city' → logprob: -6.0229692459106445

Token 1338: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.547622799873352
    2. 'graph' → logprob: -2.1726226806640625
    3. ' graph' → logprob: -2.7976226806640625
    4. 'city' → logprob: -3.1726226806640625
    5. ' city' → logprob: -3.4226226806640625
    6. 'node' → logprob: -3.6726226806640625
    7. ')
' → logprob: -3.9226226806640625
    8. '```' → logprob: -4.1726226806640625
    9. ' node' → logprob: -4.2976226806640625
    10. '\n' → logprob: -4.2976226806640625

Token 1339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002166913589462638
    2. 'for' → logprob: -7.002166748046875
    3. 'return' → logprob: -7.502166748046875
    4. '   ' → logprob: -7.877166748046875
    5. '
' → logprob: -8.252166748046875
    6. '```' → logprob: -10.127166748046875
    7. '           ' → logprob: -11.377166748046875
    8. ' for' → logprob: -12.002166748046875
    9. '        
' → logprob: -13.252166748046875
    10. 'def' → logprob: -14.002166748046875

Token 1340: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015759823843836784
    2. 'return' (adapté à ' return') → logprob: -4.6407599449157715
    3. '
' → logprob: -5.8907599449157715
    4. '   ' → logprob: -6.7657599449157715
    5. '```' → logprob: -6.8907599449157715
    6. 'for' → logprob: -7.0157599449157715
    7. '           ' → logprob: -10.015759468078613
    8. '        
' → logprob: -10.515759468078613
    9. '``' → logprob: -10.515759468078613
    10. '	' → logprob: -11.140759468078613

Token 1341: ' diss' (ID: 32434)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006017650011926889
    2. ' diss' → logprob: -7.750601768493652
    3. '[' → logprob: -9.000601768493652
    4. '[d' → logprob: -10.250601768493652
    5. ' [' → logprob: -11.750601768493652
    6. '[
' → logprob: -13.375601768493652
    7. '   ' → logprob: -13.625601768493652
    8. ' d' → logprob: -13.750601768493652
    9. '[self' → logprob: -15.500601768493652
    10. 'dis' → logprob: -16.000600814819336

Token 1342: 'atisf' (ID: 7639)
  Prédit: 'atisf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.0007257753168232739
    2. 's' → logprob: -8.375725746154785
    3. 'aff' → logprob: -8.625725746154785
    4. 'at' → logprob: -9.375725746154785
    5. 'ass' → logprob: -10.000725746154785
    6. 'app' → logprob: -10.125725746154785
    7. 'ast' → logprob: -10.625725746154785
    8. 'ats' → logprob: -10.625725746154785
    9. 'atis' → logprob: -10.875725746154785
    10. ' satisf' → logprob: -11.000725746154785

Token 1343: 'actions' (ID: 6711)
  Prédit: 'actions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -5.860340752406046e-05
    2. 'ations' → logprob: -9.8750581741333
    3. 'ections' → logprob: -13.0000581741333
    4. 'estions' → logprob: -13.5000581741333
    5. 'acions' → logprob: -13.6250581741333
    6. 'ast' → logprob: -13.8750581741333
    7. 'act' → logprob: -14.8750581741333
    8. 'ractions' → logprob: -15.1250581741333
    9. '_actions' → logprob: -15.3750581741333
    10. 'ass' → logprob: -15.5000581741333

Token 1344: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11311490088701248
    2. '<|end|>' → logprob: -2.363114833831787
    3. '[
' → logprob: -5.363114833831787
    4. '
' → logprob: -6.238114833831787
    5. '.' → logprob: -6.488114833831787
    6. '\n' → logprob: -6.738114833831787
    7. '```' → logprob: -7.238114833831787
    8. '[]' → logprob: -7.488114833831787
    9. '[:]' → logprob: -7.488114833831787
    10. '<|end|>' → logprob: -7.988114833831787

Token 1345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001884015218820423
    2. ':' → logprob: -9.250188827514648
    3. 'self' → logprob: -9.750188827514648
    4. ':]' → logprob: -10.625188827514648
    5. ':self' → logprob: -12.250188827514648
    6. '
' → logprob: -13.750188827514648
    7. ':]
' → logprob: -13.875188827514648
    8. ':-' → logprob: -14.375188827514648
    9. '-' → logprob: -14.750188827514648
    10. '(' → logprob: -14.750188827514648

Token 1346: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18006497621536255
    2. ':]' → logprob: -1.8050649166107178
    3. ' :]' → logprob: -8.930065155029297
    4. ':' → logprob: -9.555065155029297
    5. ' ]' → logprob: -10.055065155029297
    6. '...]' → logprob: -10.805065155029297
    7. '[' → logprob: -11.180065155029297
    8. ':]
' → logprob: -11.680065155029297
    9. ':],' → logprob: -12.305065155029297
    10. ']
' → logprob: -12.680065155029297

Token 1347: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1348: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1349: ' year' (ID: 1284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1350: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1351: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1352: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1353: ' Q' (ID: 1486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2127087504486553e-05
    2. ' self' → logprob: -11.000021934509277
    3. '-self' → logprob: -12.625021934509277
    4. '[self' → logprob: -14.375021934509277
    5. 'q' → logprob: -14.375021934509277
    6. 'None' → logprob: -14.625021934509277
    7. '```' → logprob: -16.500022888183594
    8. '(self' → logprob: -16.500022888183594
    9. '
' → logprob: -16.875022888183594
    10. '	self' → logprob: -17.000022888183594

Token 1354: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1355: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1356: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7717769742012024
    2. ' solve' → logprob: -1.2717769145965576
    3. ' test' → logprob: -2.7717769145965576
    4. ' Train' → logprob: -3.0217769145965576
    5. ' train' → logprob: -3.1467769145965576
    6. '_' → logprob: -3.2717769145965576
    7. ' solution' → logprob: -4.396777153015137
    8. ' ' → logprob: -4.771777153015137
    9. '_train' → logprob: -5.146777153015137
    10. ' calculate' → logprob: -5.271777153015137

Token 1357: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016145335510373116
    2. '():
' → logprob: -4.1411452293396
    3. '()' → logprob: -9.516145706176758
    4. '(' → logprob: -10.516145706176758
    5. ' ():' → logprob: -12.391145706176758
    6. '():
' → logprob: -13.641145706176758
    7. '(
' → logprob: -13.641145706176758
    8. ':' → logprob: -13.766145706176758
    9. '().' → logprob: -14.141145706176758
    10. '():

' → logprob: -14.516145706176758

Token 1358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004910431336611509
    2. '(n' → logprob: -6.129910469055176
    3. '```' → logprob: -7.004910469055176
    4. 'n' → logprob: -7.379910469055176
    5. 'import' → logprob: -7.629910469055176
    6. ' import' → logprob: -8.754910469055176
    7. '(' → logprob: -9.004910469055176
    8. '    
' → logprob: -9.504910469055176
    9. ' n' → logprob: -9.629910469055176
    10. 'def' → logprob: -9.879910469055176

Token 1359: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35160723328590393
    2. 'import' (adapté à ' import') → logprob: -1.3516072034835815
    3. ' n' → logprob: -3.976607322692871
    4. '   ' → logprob: -4.726607322692871
    5. 'n' → logprob: -4.976607322692871
    6. '
' → logprob: -6.976607322692871
    7. '```' → logprob: -7.351607322692871
    8. ' input' → logprob: -7.976607322692871
    9. ' 
' → logprob: -8.226607322692871
    10. '	import' → logprob: -8.351607322692871

Token 1360: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020473242329899222
    2. ' sys' → logprob: -8.500205039978027
    3. '=sys' → logprob: -13.625205039978027
    4. '	sys' → logprob: -18.62520408630371
    5. 'io' → logprob: -19.62520408630371
    6. '(sys' → logprob: -19.75020408630371
    7. '```' → logprob: -20.37520408630371
    8. '_sys' → logprob: -20.37520408630371
    9. '__' → logprob: -21.50020408630371
    10. 'stdin' → logprob: -22.25020408630371

Token 1361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10546109080314636
    2. '
' → logprob: -2.9804611206054688
    3. 'input' → logprob: -3.4804611206054688
    4. '    
' → logprob: -4.355461120605469
    5. 'data' → logprob: -5.855461120605469
    6. ' input' → logprob: -7.230461120605469
    7. ' 
' → logprob: -7.355461120605469
    8. ' readline' → logprob: -8.105461120605469
    9. '_' → logprob: -9.105461120605469
    10. '(' → logprob: -9.105461120605469

Token 1362: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3961229622364044
    2. '   ' → logprob: -1.146122932434082
    3. ' input' → logprob: -5.146122932434082
    4. 'data' → logprob: -6.021122932434082
    5. '
' → logprob: -7.271122932434082
    6. ' readline' → logprob: -9.021122932434082
    7. 'read' → logprob: -10.396122932434082
    8. '    
' → logprob: -10.646122932434082
    9. 'r' → logprob: -10.646122932434082
    10. 'import' → logprob: -10.896122932434082

Token 1363: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.002746742684394121
    2. 'data' → logprob: -6.50274658203125
    3. '   ' → logprob: -6.75274658203125
    4. ' input' → logprob: -10.12774658203125
    5. '
' → logprob: -11.00274658203125
    6. 'read' → logprob: -11.37774658203125
    7. 'line' → logprob: -13.25274658203125
    8. 'r' → logprob: -13.75274658203125
    9. 'reader' → logprob: -14.00274658203125
    10. 'lines' → logprob: -14.12774658203125

Token 1364: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13884390890598297
    2. '=' → logprob: -2.3888440132141113
    3. '_data' → logprob: -3.8888440132141113
    4. ' =' → logprob: -5.138844013214111
    5. '_line' → logprob: -5.138844013214111
    6. '().' → logprob: -5.888844013214111
    7. 'data' → logprob: -6.763844013214111
    8. '_' → logprob: -7.638844013214111
    9. '_lines' → logprob: -7.638844013214111
    10. '()
' → logprob: -8.263843536376953

Token 1365: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38703885674476624
    2. ' sys' → logprob: -1.1370388269424438
    3. 'input' → logprob: -9.012039184570312
    4. '=sys' → logprob: -10.512039184570312
    5. ' input' → logprob: -11.012039184570312
    6. '	sys' → logprob: -13.637039184570312
    7. 'lambda' → logprob: -14.262039184570312
    8. '(sys' → logprob: -15.637039184570312
    9. ' lambda' → logprob: -15.762039184570312
    10. 'stdin' → logprob: -17.137039184570312

Token 1366: '.stdin' (ID: 93480)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011669430881738663
    2. '.' → logprob: -5.511669635772705
    3. '.readline' → logprob: -5.636669635772705
    4. '.stdin' → logprob: -5.886669635772705
    5. '()
' → logprob: -7.386669635772705
    6. '()' → logprob: -7.886669635772705
    7. '.read' → logprob: -9.511669158935547
    8. 'stdin' → logprob: -9.761669158935547
    9. '().
' → logprob: -11.136669158935547
    10. '()\' → logprob: -11.386669158935547

Token 1367: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004214094020426273
    2. '.' → logprob: -5.629214286804199
    3. '.read' → logprob: -7.629214286804199
    4. '().' → logprob: -9.3792142868042
    5. 'read' → logprob: -10.8792142868042
    6. '()' → logprob: -12.0042142868042
    7. '.readlines' → logprob: -12.2542142868042
    8. ' readline' → logprob: -12.6292142868042
    9. ' .' → logprob: -13.0042142868042
    10. '()
' → logprob: -13.2542142868042

Token 1368: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.034488558769226
    2. '
' → logprob: -1.034488558769226
    3. '   ' → logprob: -1.409488558769226
    4. '()
' → logprob: -3.6594886779785156
    5. '(n' → logprob: -4.659488677978516
    6. '()' → logprob: -5.659488677978516
    7. '    
' → logprob: -6.284488677978516
    8. 'def' → logprob: -6.784488677978516
    9. '(
' → logprob: -7.284488677978516
    10. '```' → logprob: -7.409488677978516

Token 1369: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08518930524587631
    2. '   ' → logprob: -2.5851893424987793
    3. '
' → logprob: -5.585189342498779
    4. '```' → logprob: -7.460189342498779
    5. ' n' → logprob: -7.585189342498779
    6. '(n' → logprob: -7.710189342498779
    7. 't' → logprob: -8.335188865661621
    8. 'q' → logprob: -8.585188865661621
    9. '    
' → logprob: -8.835188865661621
    10. '	n' → logprob: -9.585188865661621

Token 1370: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00039409202872775495
    2. '   ' → logprob: -8.250393867492676
    3. 't' → logprob: -9.000393867492676
    4. 'N' (adapté à ' N') → logprob: -12.375393867492676
    5. ' n' → logprob: -13.000393867492676
    6. '
' → logprob: -13.125393867492676
    7. 'T' → logprob: -14.000393867492676
    8. '	n' → logprob: -16.375394821166992
    9. '    
' → logprob: -16.625394821166992
    10. '_n' → logprob: -17.375394821166992

Token 1371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012061834335327148
    2. '=' → logprob: -5.387062072753906
    3. ' ,' → logprob: -5.762062072753906
    4. '   ' → logprob: -6.387062072753906
    5. ' =' → logprob: -6.387062072753906
    6. ',
' → logprob: -7.262062072753906
    7. ' ' → logprob: -10.137062072753906
    8. '    ' → logprob: -10.137062072753906
    9. ')' → logprob: -10.512062072753906
    10. '  ' → logprob: -11.012062072753906

Token 1372: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.07125421613454819
    2. ' M' → logprob: -3.071254253387451
    3. 'Q' → logprob: -3.821254253387451
    4. ' Q' → logprob: -8.196253776550293
    5. 'q' → logprob: -8.821253776550293
    6. 'K' → logprob: -9.696253776550293
    7. '   ' → logprob: -12.071253776550293
    8. '=' → logprob: -12.446253776550293
    9. ' q' → logprob: -12.446253776550293
    10. ' ' → logprob: -12.571253776550293

Token 1373: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2827517092227936
    2. ',' → logprob: -1.4077516794204712
    3. ' =' → logprob: -6.532751560211182
    4. ' ,' → logprob: -9.40775203704834
    5. '=
' → logprob: -10.65775203704834
    6. ',
' → logprob: -10.78275203704834
    7. '   ' → logprob: -12.40775203704834
    8. ' ' → logprob: -12.90775203704834
    9. ')' → logprob: -13.28275203704834
    10. '[' → logprob: -13.53275203704834

Token 1374: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.06769464910030365
    2. ' Q' → logprob: -2.817694664001465
    3. 'K' → logprob: -5.317694664001465
    4. ' K' → logprob: -7.317694664001465
    5. 'q' → logprob: -9.067694664001465
    6. ' q' → logprob: -11.442694664001465
    7. ' ' → logprob: -11.942694664001465
    8. ' 
' → logprob: -12.692694664001465
    9. ',Q' → logprob: -13.567694664001465
    10. '`' → logprob: -13.942694664001465

Token 1375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03088931180536747
    2. ' =' → logprob: -3.5308892726898193
    3. ',' → logprob: -6.780889511108398
    4. '=input' → logprob: -14.280889511108398
    5. ' ' → logprob: -14.530889511108398
    6. '=
' → logprob: -14.905889511108398
    7. ')' → logprob: -15.155889511108398
    8. '    ' → logprob: -15.280889511108398
    9. '   ' → logprob: -15.280889511108398
    10. ' ,' → logprob: -15.405889511108398

Token 1376: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12693755328655243
    2. 'map' → logprob: -2.1269376277923584
    3. 'input' → logprob: -12.126937866210938
    4. '[' → logprob: -13.376937866210938
    5. ' input' → logprob: -13.501937866210938
    6. ' list' → logprob: -14.876937866210938
    7. '	map' → logprob: -15.251937866210938
    8. 'list' → logprob: -15.626937866210938
    9. '(map' → logprob: -16.001937866210938
    10. ' [' → logprob: -16.126937866210938

Token 1377: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020094106439501047
    2. '(lambda' → logprob: -6.377009391784668
    3. '(str' → logprob: -8.627009391784668
    4. '(' → logprob: -9.377009391784668
    5. 'int' → logprob: -11.002009391784668
    6. '[int' → logprob: -11.252009391784668
    7. '(input' → logprob: -11.877009391784668
    8. 'lambda' → logprob: -13.002009391784668
    9. '=int' → logprob: -13.502009391784668
    10. '<int' → logprob: -14.002009391784668

Token 1378: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.5313454866409302
    2. '(sys' → logprob: -1.5313454866409302
    3. '()' → logprob: -1.7813454866409302
    4. '   ' → logprob: -1.9063454866409302
    5. ')' → logprob: -2.1563453674316406
    6. 'input' → logprob: -3.1563453674316406
    7. ',' → logprob: -3.9063453674316406
    8. '(' → logprob: -4.281345367431641
    9. '(),' → logprob: -4.281345367431641
    10. '(str' → logprob: -4.656345367431641

Token 1379: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.547789674485102e-05
    2. ' input' → logprob: -10.250035285949707
    3. '=input' → logprob: -18.125036239624023
    4. '(input' → logprob: -19.000036239624023
    5. '<input' → logprob: -19.375036239624023
    6. 'str' → logprob: -19.500036239624023
    7. 'int' → logprob: -20.125036239624023
    8. 'map' → logprob: -21.250036239624023
    9. '
' → logprob: -21.375036239624023
    10. ',input' → logprob: -21.375036239624023

Token 1380: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005649457452818751
    2. '()' → logprob: -7.500565052032471
    3. '()
' → logprob: -11.875564575195312
    4. '())' → logprob: -12.375564575195312
    5. '().
' → logprob: -14.750564575195312
    6. '(' → logprob: -15.625564575195312
    7. '()[' → logprob: -16.500564575195312
    8. ')' → logprob: -16.625564575195312
    9. '())
' → logprob: -16.750564575195312
    10. ' ().' → logprob: -18.250564575195312

Token 1381: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0012024929746985435
    2. 'strip' → logprob: -6.876202583312988
    3. 'rstrip' → logprob: -8.751202583312988
    4. '().' → logprob: -12.001202583312988
    5. '(split' → logprob: -13.001202583312988
    6. ' split' → logprob: -13.751202583312988
    7. ')' → logprob: -14.126202583312988
    8. '())' → logprob: -14.376202583312988
    9. 'spl' → logprob: -15.251202583312988
    10. '()' → logprob: -15.876202583312988

Token 1382: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040489560924470425
    2. ')
' → logprob: -5.629048824310303
    3. '())' → logprob: -8.129049301147461
    4. '()' → logprob: -9.129049301147461
    5. '   ' → logprob: -11.254049301147461
    6. '())
' → logprob: -11.379049301147461
    7. ',' → logprob: -12.129049301147461
    8. '(' → logprob: -12.379049301147461
    9. '(
' → logprob: -13.004049301147461
    10. '()
' → logprob: -13.379049301147461

Token 1383: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2998144328594208
    2. '   ' → logprob: -1.4248144626617432
    3. '
' → logprob: -5.174814224243164
    4. '    
' → logprob: -5.549814224243164
    5. ' edges' → logprob: -5.674814224243164
    6. 'u' → logprob: -6.299814224243164
    7. ' 
' → logprob: -7.299814224243164
    8. '```' → logprob: -7.424814224243164
    9. 'train' → logprob: -7.924814224243164
    10. '  
' → logprob: -7.924814224243164

Token 1384: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.011181864887475967
    2. ' edges' → logprob: -4.511181831359863
    3. '   ' → logprob: -9.136181831359863
    4. '
' → logprob: -10.761181831359863
    5. '_edges' → logprob: -13.386181831359863
    6. '    
' → logprob: -14.511181831359863
    7. 'E' → logprob: -14.511181831359863
    8. 'edge' → logprob: -14.636181831359863
    9. 'Edges' → logprob: -14.636181831359863
    10. 'e' → logprob: -14.886181831359863

Token 1385: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -0.2341986745595932
    2. ' =' → logprob: -2.109198570251465
    3. '=' → logprob: -2.484198570251465
    4. '_' → logprob: -5.609198570251465
    5. '=[]' → logprob: -8.609198570251465
    6. '=[]
' → logprob: -9.734198570251465
    7. '_u' → logprob: -9.859198570251465
    8. '[]' → logprob: -10.484198570251465
    9. '_=' → logprob: -10.984198570251465
    10. '=_' → logprob: -11.859198570251465

Token 1386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01819266937673092
    2. ' =' → logprob: -4.018192768096924
    3. '=[]' → logprob: -10.768192291259766
    4. '[]' → logprob: -11.643192291259766
    5. '=[]
' → logprob: -11.768192291259766
    6. '   ' → logprob: -12.643192291259766
    7. '=
' → logprob: -14.018192291259766
    8. '_' → logprob: -15.518192291259766
    9. '=[' → logprob: -15.518192291259766
    10. '[' → logprob: -15.643192291259766

Token 1387: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00529802730306983
    2. '[int' → logprob: -5.505298137664795
    3. '[N' → logprob: -7.505298137664795
    4. '[class' → logprob: -9.255297660827637
    5. '[input' → logprob: -9.380297660827637
    6. '[array' → logprob: -9.505297660827637
    7. '[num' → logprob: -9.880297660827637
    8. '[next' → logprob: -10.130297660827637
    9. '[n' → logprob: -10.505297660827637
    10. ' [' → logprob: -10.630297660827637

Token 1388: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -5.633853652398102e-05
    2. 'list' → logprob: -10.500056266784668
    3. ' tuple' → logprob: -10.500056266784668
    4. '(tuple' → logprob: -14.500056266784668
    5. '
' → logprob: -14.625056266784668
    6. 'map' → logprob: -15.875056266784668
    7. '   ' → logprob: -16.125057220458984
    8. 'tu' → logprob: -18.750057220458984
    9. '[' → logprob: -18.750057220458984
    10. '```' → logprob: -20.375057220458984

Token 1389: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.030622467398643494
    2. 'map' → logprob: -3.5306224822998047
    3. '(input' → logprob: -7.280622482299805
    4. 'input' → logprob: -8.780622482299805
    5. '(int' → logprob: -10.530622482299805
    6. 'int' → logprob: -13.405622482299805
    7. '_map' → logprob: -15.155622482299805
    8. ' map' → logprob: -15.405622482299805
    9. '(
' → logprob: -15.655622482299805
    10. '(' → logprob: -15.655622482299805

Token 1390: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12793727219104767
    2. '(int' → logprob: -2.1279373168945312
    3. 'input' → logprob: -7.002937316894531
    4. '[int' → logprob: -9.502937316894531
    5. '(input' → logprob: -11.627937316894531
    6. '<int' → logprob: -12.752937316894531
    7. ' int' → logprob: -13.002937316894531
    8. 'lambda' → logprob: -13.002937316894531
    9. ',int' → logprob: -13.002937316894531
    10. '   ' → logprob: -13.002937316894531

Token 1391: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6515487432479858
    2. ',' → logprob: -1.0265487432479858
    3. '(input' → logprob: -2.1515488624572754
    4. '   ' → logprob: -6.151548862457275
    5. 'input' → logprob: -6.651548862457275
    6. ' ,' → logprob: -8.276548385620117
    7. '(' → logprob: -8.401548385620117
    8. ',int' → logprob: -9.651548385620117
    9. '=input' → logprob: -9.651548385620117
    10. '[input' → logprob: -10.276548385620117

Token 1392: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '=input' → logprob: -20.25020408630371
    4. '_input' → logprob: -20.62520408630371
    5. '(input' → logprob: -20.87520408630371
    6. '	input' → logprob: -22.00020408630371
    7. '[input' → logprob: -22.12520408630371
    8. '<input' → logprob: -22.12520408630371
    9. ',input' → logprob: -22.62520408630371
    10. 'output' → logprob: -23.50020408630371

Token 1393: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.2166411478538066e-05
    2. '.readline' → logprob: -10.250052452087402
    3. '()' → logprob: -11.625052452087402
    4. '()[' → logprob: -12.625052452087402
    5. '.split' → logprob: -13.000052452087402
    6. '()
' → logprob: -14.000052452087402
    7. '   ' → logprob: -14.125052452087402
    8. ' ().' → logprob: -15.750052452087402
    9. '().__' → logprob: -15.875052452087402
    10. '.' → logprob: -15.875052452087402

Token 1394: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.6312321753939614e-05
    2. 'strip' → logprob: -10.250036239624023
    3. 'rstrip' → logprob: -14.750036239624023
    4. ' split' → logprob: -15.375036239624023
    5. '(split' → logprob: -16.500036239624023
    6. '.split' → logprob: -16.625036239624023
    7. 'spl' → logprob: -18.625036239624023
    8. ')' → logprob: -18.875036239624023
    9. '().' → logprob: -19.625036239624023
    10. 's' → logprob: -19.625036239624023

Token 1395: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0298018716275692
    2. '()))' → logprob: -3.529801845550537
    3. '   ' → logprob: -10.779802322387695
    4. '()' → logprob: -11.404802322387695
    5. '))
' → logprob: -11.654802322387695
    6. '()))
' → logprob: -12.904802322387695
    7. '       ' → logprob: -13.404802322387695
    8. ' ))' → logprob: -13.404802322387695
    9. '(' → logprob: -13.654802322387695
    10. ' ' → logprob: -13.904802322387695

Token 1396: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024274097755551338
    2. ' for' → logprob: -4.399273872375488
    3. 'for' → logprob: -5.024273872375488
    4. ')' → logprob: -5.399273872375488
    5. '   ' → logprob: -8.524273872375488
    6. '())' → logprob: -9.524273872375488
    7. '()]' → logprob: -9.524273872375488
    8. ']' → logprob: -9.899273872375488
    9. ' ()' → logprob: -9.899273872375488
    10. '(' → logprob: -10.024273872375488

Token 1397: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.3199920178740285e-05
    2. '_range' → logprob: -11.625022888183594
    3. '_
' → logprob: -11.875022888183594
    4. '_i' → logprob: -12.625022888183594
    5. ' range' → logprob: -13.500022888183594
    6. ' _' → logprob: -14.500022888183594
    7. 'range' → logprob: -14.500022888183594
    8. '_M' → logprob: -14.500022888183594
    9. '_=' → logprob: -15.000022888183594
    10. '
' → logprob: -15.125022888183594

Token 1398: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003950048238039017
    2. ' range' → logprob: -5.878950119018555
    3. 'in' → logprob: -6.878950119018555
    4. '(range' → logprob: -9.253950119018555
    5. ' in' → logprob: -11.503950119018555
    6. '_' → logprob: -12.003950119018555
    7. '	range' → logprob: -14.128950119018555
    8. '_range' → logprob: -14.378950119018555
    9. '
' → logprob: -15.128950119018555
    10. '0' → logprob: -15.128950119018555

Token 1399: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.054500666621607e-06
    2. ' range' → logprob: -12.75000286102295
    3. '(range' → logprob: -16.375003814697266
    4. '.range' → logprob: -20.125003814697266
    5. '	range' → logprob: -20.625003814697266
    6. '
' → logprob: -20.750003814697266
    7. '[' → logprob: -21.625003814697266
    8. '[M' → logprob: -22.000003814697266
    9. ')' → logprob: -22.875003814697266
    10. '0' → logprob: -23.375003814697266

Token 1400: '(M' (ID: 6103)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005870013497769833
    2. ' range' → logprob: -5.5058698654174805
    3. '(M' → logprob: -6.5058698654174805
    4. '(range' → logprob: -8.25586986541748
    5. 'M' → logprob: -10.25586986541748
    6. 'm' → logprob: -15.75586986541748
    7. '(' → logprob: -16.505870819091797
    8. '[M' → logprob: -16.755870819091797
    9. 'Range' → logprob: -17.255870819091797
    10. '	range' → logprob: -17.630870819091797

Token 1401: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014704519708175212
    2. ']' → logprob: -9.250146865844727
    3. ')' → logprob: -10.625146865844727
    4. '   ' → logprob: -11.125146865844727
    5. ')]
' → logprob: -11.750146865844727
    6. '       ' → logprob: -13.750146865844727
    7. ')],' → logprob: -14.125146865844727
    8. ')])' → logprob: -15.125146865844727
    9. '])]' → logprob: -15.250146865844727
    10. ')][' → logprob: -15.375146865844727

Token 1402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15831391513347626
    2. 'raise' → logprob: -2.0333139896392822
    3. ' raise' → logprob: -4.283313751220703
    4. '	raise' → logprob: -7.908313751220703
    5. '    
' → logprob: -8.033313751220703
    6. 'r' → logprob: -8.408313751220703
    7. '
' → logprob: -8.908313751220703
    8. '```' → logprob: -9.158313751220703
    9. 'raises' → logprob: -10.095813751220703
    10. '_raise' → logprob: -10.158313751220703

Token 1403: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0036586259957402945
    2. ' raise' → logprob: -5.878658771514893
    3. '   ' → logprob: -8.503658294677734
    4. 'R' → logprob: -9.003658294677734
    5. 'edge' → logprob: -9.378658294677734
    6. 'plan' → logprob: -9.628658294677734
    7. 'p' → logprob: -9.878658294677734
    8. 'r' → logprob: -10.003658294677734
    9. 'P' → logprob: -10.003658294677734
    10. 'price' → logprob: -10.378658294677734

Token 1404: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -7.791440293658525e-05
    2. '_' → logprob: -10.125078201293945
    3. '_pl' → logprob: -11.125078201293945
    4. 's' → logprob: -11.250078201293945
    5. ' _' → logprob: -12.250078201293945
    6. '_PLAN' → logprob: -14.125078201293945
    7. '_s' → logprob: -14.375078201293945
    8. '```' → logprob: -14.750078201293945
    9. ''_' → logprob: -15.000078201293945
    10. '_plane' → logprob: -15.125078201293945

Token 1405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. ' =[' → logprob: -16.075939178466797
    4. '[' → logprob: -16.825939178466797
    5. ' =
' → logprob: -16.950939178466797
    6. '=[]' → logprob: -17.075939178466797
    7. '[:]' → logprob: -17.200939178466797
    8. ',' → logprob: -17.450939178466797
    9. 's' → logprob: -17.575939178466797
    10. '_' → logprob: -17.700939178466797

Token 1406: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.28780415654182434
    2. '[list' → logprob: -1.537804126739502
    3. '[' → logprob: -3.787804126739502
    4. ' list' → logprob: -4.787804126739502
    5. ' [' → logprob: -5.537804126739502
    6. '[int' → logprob: -8.91280460357666
    7. '[t' → logprob: -9.16280460357666
    8. '[List' → logprob: -10.16280460357666
    9. '[]
' → logprob: -10.78780460357666
    10. '[l' → logprob: -11.78780460357666

Token 1407: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.054500666621607e-06
    2. ' int' → logprob: -12.75000286102295
    3. 'map' → logprob: -17.000003814697266
    4. 'tuple' → logprob: -18.625003814697266
    5. '0' → logprob: -20.250003814697266
    6. '*' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.750003814697266
    8. '[int' → logprob: -20.875003814697266
    9. '(int' → logprob: -20.875003814697266
    10. '<int' → logprob: -21.000003814697266

Token 1408: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005488642491400242
    2. 'input' → logprob: -7.750548839569092
    3. '()' → logprob: -10.00054931640625
    4. '(' → logprob: -10.62554931640625
    5. '(x' → logprob: -10.62554931640625
    6. '(i' → logprob: -11.37554931640625
    7. '=input' → logprob: -12.25054931640625
    8. '(
' → logprob: -13.25054931640625
    9. '()]' → logprob: -13.37554931640625
    10. ' input' → logprob: -13.87554931640625

Token 1409: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04557038098573685
    2. '()' → logprob: -3.2955703735351562
    3. '().' → logprob: -5.045570373535156
    4. '()]' → logprob: -7.295570373535156
    5. '())
' → logprob: -8.545570373535156
    6. '()
' → logprob: -8.795570373535156
    7. ')' → logprob: -11.295570373535156
    8. '()]
' → logprob: -12.045570373535156
    9. '()[' → logprob: -12.295570373535156
    10. ' ())' → logprob: -12.545570373535156

Token 1410: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02680458314716816
    2. '()]' → logprob: -3.6518046855926514
    3. '().' → logprob: -8.65180492401123
    4. '()
' → logprob: -8.77680492401123
    5. '())' → logprob: -10.02680492401123
    6. '(' → logprob: -10.27680492401123
    7. 'for' → logprob: -10.40180492401123
    8. '()[' → logprob: -10.90180492401123
    9. ' ()' → logprob: -11.27680492401123
    10. '()\' → logprob: -11.52680492401123

Token 1411: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5368252992630005
    2. ' in' → logprob: -2.036825180053711
    3. '_' → logprob: -2.161825180053711
    4. ' range' → logprob: -2.286825180053711
    5. 'range' → logprob: -3.161825180053711
    6. '_Q' → logprob: -4.786825180053711
    7. 'i' → logprob: -4.911825180053711
    8. 'Q' → logprob: -5.786825180053711
    9. '_range' → logprob: -5.786825180053711
    10. ' i' → logprob: -6.036825180053711

Token 1412: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.008055496960878372
    2. ' in' → logprob: -5.258055686950684
    3. 'range' → logprob: -5.883055686950684
    4. ' range' → logprob: -11.133055686950684
    5. '
' → logprob: -12.508055686950684
    6. '0' → logprob: -12.508055686950684
    7. '_' → logprob: -12.758055686950684
    8. 'i' → logprob: -13.508055686950684
    9. 'Q' → logprob: -13.633055686950684
    10. '   ' → logprob: -14.258055686950684

Token 1413: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16993290185928345
    2. 'Q' → logprob: -2.1699328422546387
    3. ' range' → logprob: -3.1699328422546387
    4. '(Q' → logprob: -9.544933319091797
    5. ' Q' → logprob: -11.919933319091797
    6. '
' → logprob: -12.294933319091797
    7. '(range' → logprob: -13.294933319091797
    8. 'Range' → logprob: -14.169933319091797
    9. 'q' → logprob: -14.794933319091797
    10. ')' → logprob: -15.169933319091797

Token 1414: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0002614550176076591
    2. 'Q' → logprob: -8.250261306762695
    3. '(M' → logprob: -17.500261306762695
    4. '(q' → logprob: -17.625261306762695
    5. '	Q' → logprob: -18.500261306762695
    6. '(' → logprob: -18.625261306762695
    7. ' Q' → logprob: -19.250261306762695
    8. '<Q' → logprob: -19.750261306762695
    9. '(Qt' → logprob: -20.875261306762695
    10. '(
' → logprob: -21.125261306762695

Token 1415: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0900038629770279
    2. ']' → logprob: -2.8400039672851562
    3. ')' → logprob: -3.5900039672851562
    4. '])' → logprob: -10.590003967285156
    5. ')])' → logprob: -11.965003967285156
    6. '])]' → logprob: -12.090003967285156
    7. '   ' → logprob: -12.465003967285156
    8. ')]
' → logprob: -13.340003967285156
    9. '()]' → logprob: -13.590003967285156
    10. ']
' → logprob: -13.715003967285156

Token 1416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3546185791492462
    2. 'train' → logprob: -1.8546185493469238
    3. 'system' → logprob: -3.104618549346924
    4. 'ts' → logprob: -3.354618549346924
    5. '
' → logprob: -3.604618549346924
    6. '```' → logprob: -3.979618549346924
    7. '    
' → logprob: -5.229618549346924
    8. 'result' → logprob: -5.354618549346924
    9. 'tr' → logprob: -5.729618549346924
    10. '``' → logprob: -7.104618549346924

Token 1417: ' system' (ID: 2420)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13993732631206512
    2. 'system' (adapté à ' system') → logprob: -2.139937400817871
    3. 'ts' → logprob: -4.889937400817871
    4. 'train' → logprob: -5.889937400817871
    5. 'sys' → logprob: -6.389937400817871
    6. 'tf' → logprob: -8.139937400817871
    7. 'solver' → logprob: -8.139937400817871
    8. 's' → logprob: -8.764937400817871
    9. ' t' → logprob: -9.764937400817871
    10. ' system' → logprob: -10.139937400817871

Token 1418: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8254847526550293
    2. '.solve' → logprob: -0.8254847526550293
    3. ' =' → logprob: -2.2004847526550293
    4. '=' → logprob: -4.700484752655029
    5. '.s' → logprob: -6.950484752655029
    6. '   ' → logprob: -6.950484752655029
    7. '.
' → logprob: -7.450484752655029
    8. '.system' → logprob: -7.825484752655029
    9. '.calculate' → logprob: -8.075485229492188
    10. '.=' → logprob: -8.325485229492188

Token 1419: ' Train' (ID: 32131)
  Prédit: 'Train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Train' → logprob: -0.006715370807796717
    2. ' Train' → logprob: -5.006715297698975
    3. '   ' → logprob: -21.381715774536133
    4. '_train' → logprob: -21.381715774536133
    5. ' train' → logprob: -21.381715774536133
    6. 'Tr' → logprob: -21.881715774536133
    7. 'Trade' → logprob: -22.131715774536133
    8. 'Training' → logprob: -22.256715774536133
    9. 'train' → logprob: -23.131715774536133
    10. 'Trainer' → logprob: -23.381715774536133

Token 1420: 'Fare' (ID: 131526)
  Prédit: 'Fare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fare' → logprob: -3.128163257315464e-07
    2. ' Fare' → logprob: -15.5
    3. 'Fair' → logprob: -16.75
    4. 'Far' → logprob: -17.75
    5. 'Fa' → logprob: -18.125
    6. '
' → logprob: -18.25
    7. '   ' → logprob: -18.625
    8. 'Faire' → logprob: -18.875
    9. 'Fal' → logprob: -19.125
    10. '_F' → logprob: -19.25

Token 1421: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -3.128163257315464e-07
    2. '(System' → logprob: -16.875
    3. 'Fare' → logprob: -17.0
    4. 'S' → logprob: -17.125
    5. 'Train' → logprob: -17.375
    6. 'Systems' → logprob: -17.5
    7. '<System' → logprob: -17.625
    8. 'Sys' → logprob: -17.75
    9. 'system' → logprob: -17.875
    10. 'Sy' → logprob: -17.875

Token 1422: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24212707579135895
    2. '(
' → logprob: -2.2421271800994873
    3. '(N' → logprob: -2.2421271800994873
    4. '(System' → logprob: -6.992126941680908
    5. '(system' → logprob: -7.367126941680908
    6. 'System' → logprob: -7.992126941680908
    7. '(n' → logprob: -8.242127418518066
    8. '.System' → logprob: -9.617127418518066
    9. '.' → logprob: -9.742127418518066
    10. '.Tr' → logprob: -9.867127418518066

Token 1423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. ')' → logprob: -10.62506103515625
    3. ',
' → logprob: -10.62506103515625
    4. '   ' → logprob: -12.50006103515625
    5. ' ,' → logprob: -12.50006103515625
    6. ',System' → logprob: -13.12506103515625
    7. '(edges' → logprob: -14.50006103515625
    8. '<|end|>' → logprob: -14.75006103515625
    9. ',...' → logprob: -14.87506103515625
    10. '(' → logprob: -15.50006103515625

Token 1424: ' edges' (ID: 22569)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0016610202146694064
    2. 'edges' → logprob: -6.5016608238220215
    3. ' M' → logprob: -8.87666130065918
    4. ' edges' → logprob: -11.37666130065918
    5. '[M' → logprob: -13.12666130065918
    6. '   ' → logprob: -13.12666130065918
    7. '
' → logprob: -14.12666130065918
    8. '(edges' → logprob: -14.87666130065918
    9. '	M' → logprob: -15.00166130065918
    10. '(M' → logprob: -15.12666130065918

Token 1425: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -0.00018983196059707552
    2. ',' → logprob: -8.875189781188965
    3. '   ' → logprob: -10.125189781188965
    4. '_,' → logprob: -12.500189781188965
    5. '_u' → logprob: -13.125189781188965
    6. '_uc' → logprob: -14.000189781188965
    7. 'uv' → logprob: -14.375189781188965
    8. 'UV' → logprob: -14.625189781188965
    9. ')' → logprob: -14.875189781188965
    10. '```' → logprob: -15.250189781188965

Token 1426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',
' → logprob: -13.125003814697266
    3. ')' → logprob: -13.750003814697266
    4. ' ,' → logprob: -14.000003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '<|end|>' → logprob: -18.500003814697266
    7. '‌,' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ',",' → logprob: -19.125003814697266
    10. ',)' → logprob: -19.250003814697266

Token 1427: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.306760805164231e-05
    2. 'M' → logprob: -12.00001335144043
    3. ' Q' → logprob: -12.62501335144043
    4. 'raise' → logprob: -12.75001335144043
    5. 'q' → logprob: -15.25001335144043
    6. '   ' → logprob: -15.75001335144043
    7. '
' → logprob: -16.50001335144043
    8. '	Q' → logprob: -17.12501335144043
    9. ' raise' → logprob: -17.37501335144043
    10. '    ' → logprob: -17.50001335144043

Token 1428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2520492374897003
    2. ')' → logprob: -1.502049207687378
    3. ')
' → logprob: -9.502049446105957
    4. '   ' → logprob: -10.502049446105957
    5. ',)' → logprob: -12.127049446105957
    6. ' ,' → logprob: -12.502049446105957
    7. ' )' → logprob: -12.627049446105957
    8. ',
' → logprob: -12.752049446105957
    9. '),' → logprob: -14.627049446105957
    10. ').' → logprob: -15.002049446105957

Token 1429: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -7.941850526549388e-06
    2. ' raise' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.25000762939453
    4. 'rise' → logprob: -21.00000762939453
    5. '    ' → logprob: -21.25000762939453
    6. '	raise' → logprob: -21.37500762939453
    7. '
' → logprob: -22.50000762939453
    8. 'raises' → logprob: -22.87500762939453
    9. '_raise' → logprob: -22.87500762939453
    10. '  ' → logprob: -22.87500762939453

Token 1430: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -3.128163257315464e-07
    2. 'plan' → logprob: -15.5
    3. '_pl' → logprob: -18.25
    4. '_' → logprob: -18.375
    5. '_system' → logprob: -18.5
    6. '_PLAN' → logprob: -18.875
    7. '_p' → logprob: -19.0
    8. '_raise' → logprob: -19.875
    9. 'Plan' → logprob: -20.0
    10. '_plane' → logprob: -21.25

Token 1431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029829632490873337
    2. ')
' → logprob: -3.529829740524292
    3. '   ' → logprob: -9.529829978942871
    4. ')
' → logprob: -12.654829978942871
    5. ').' → logprob: -13.654829978942871
    6. ' )' → logprob: -14.654829978942871
    7. '()' → logprob: -15.529829978942871
    8. '
' → logprob: -15.779829978942871
    9. '()
' → logprob: -16.029829025268555
    10. ')

' → logprob: -16.154829025268555

Token 1432: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5656305551528931
    2. 'result' → logprob: -1.565630555152893
    3. 'results' → logprob: -2.3156304359436035
    4. '   ' → logprob: -2.9406304359436035
    5. 'res' → logprob: -3.5656304359436035
    6. 'output' → logprob: -3.9406304359436035
    7. 'for' → logprob: -4.5656304359436035
    8. 'outputs' → logprob: -5.1906304359436035
    9. 'd' → logprob: -5.5656304359436035
    10. '```' → logprob: -6.3156304359436035

Token 1433: ' results' (ID: 4376)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34761762619018555
    2. 'results' (adapté à ' results') → logprob: -1.5976176261901855
    3. 'print' → logprob: -2.8476176261901855
    4. 'res' → logprob: -3.5976176261901855
    5. 'output' → logprob: -5.3476176261901855
    6. 'd' → logprob: -7.3476176261901855
    7. 'for' → logprob: -8.472618103027344
    8. 'answers' → logprob: -9.347618103027344
    9. 'outputs' → logprob: -9.472618103027344
    10. 'ans' → logprob: -9.597618103027344

Token 1434: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03395375981926918
    2. '=' → logprob: -3.6589536666870117
    3. ' =' → logprob: -6.033953666687012
    4. '.solve' → logprob: -6.033953666687012
    5. '.=' → logprob: -6.158953666687012
    6. '.write' → logprob: -9.408953666687012
    7. '.
' → logprob: -9.533953666687012
    8. '.append' → logprob: -10.283953666687012
    9. '.results' → logprob: -10.283953666687012
    10. '   ' → logprob: -10.408953666687012

Token 1435: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.0024756586644798517
    2. ' system' → logprob: -6.002475738525391
    3. '(system' → logprob: -18.25247573852539
    4. '	system' → logprob: -19.37747573852539
    5. '.system' → logprob: -20.12747573852539
    6. '   ' → logprob: -20.37747573852539
    7. 'System' → logprob: -20.37747573852539
    8. 'ystem' → logprob: -21.37747573852539
    9. 'sys' → logprob: -21.62747573852539
    10. 'ssystem' → logprob: -21.75247573852539

Token 1436: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.002031657611951232
    2. '.' → logprob: -6.2520318031311035
    3. '.s' → logprob: -9.252031326293945
    4. '.sol' → logprob: -12.502031326293945
    5. ' .' → logprob: -13.502031326293945
    6. '.
' → logprob: -14.252031326293945
    7. '.findall' → logprob: -14.502031326293945
    8. 'solve' → logprob: -15.002031326293945
    9. '.run' → logprob: -16.002031326293945
    10. '.calculate' → logprob: -16.127031326293945

Token 1437: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1872328519821167
    2. 'for' → logprob: -1.8122328519821167
    3. ' for' → logprob: -5.562232971191406
    4. '
' → logprob: -6.562232971191406
    5. '```' → logprob: -7.187232971191406
    6. '[' → logprob: -7.687232971191406
    7. '[
' → logprob: -7.937232971191406
    8. 'print' → logprob: -8.312232971191406
    9. '    
' → logprob: -8.437232971191406
    10. '	for' → logprob: -9.687232971191406

Token 1438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6972097754478455
    2. 'for' → logprob: -0.6972097754478455
    3. '```' → logprob: -5.69720983505249
    4. ' for' → logprob: -7.44720983505249
    5. '``' → logprob: -9.947209358215332
    6. '
' → logprob: -10.572209358215332
    7. 'print' → logprob: -10.697209358215332
    8. '    
' → logprob: -11.447209358215332
    9. '[' → logprob: -12.447209358215332
    10. '`' → logprob: -13.197209358215332

Token 1439: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001249877386726439
    2. '```' → logprob: -7.00124979019165
    3. '   ' → logprob: -8.126250267028809
    4. ' for' → logprob: -11.001250267028809
    5. '``' → logprob: -11.251250267028809
    6. '
' → logprob: -11.751250267028809
    7. 'print' (adapté à ' print') → logprob: -12.626250267028809
    8. '    
' → logprob: -13.501250267028809
    9. '	for' → logprob: -15.251250267028809
    10. '`' → logprob: -16.876249313354492

Token 1440: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.04388229548931122
    2. '(' → logprob: -3.293882369995117
    3. '('\' → logprob: -6.168882369995117
    4. '()' → logprob: -6.168882369995117
    5. '('' → logprob: -7.168882369995117
    6. '(
' → logprob: -7.543882369995117
    7. '(*(' → logprob: -8.793882369995117
    8. '("' → logprob: -10.168882369995117
    9. '(*)' → logprob: -10.168882369995117
    10. '*' → logprob: -10.168882369995117

Token 1441: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007212492637336254
    2. ''\' → logprob: -7.750721454620361
    3. '\n' → logprob: -8.250720977783203
    4. '
' → logprob: -11.125720977783203
    5. ''' → logprob: -12.125720977783203
    6. '"\' → logprob: -13.000720977783203
    7. '('\' → logprob: -13.250720977783203
    8. ''n' → logprob: -13.500720977783203
    9. ' '\' → logprob: -13.625720977783203
    10. 'join' → logprob: -14.000720977783203

Token 1442: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.38096022605895996
    2. 'join' → logprob: -1.75596022605896
    3. '.join' → logprob: -2.00596022605896
    4. '.' → logprob: -5.505960464477539
    5. ''\' → logprob: -6.380960464477539
    6. ').' → logprob: -6.505960464477539
    7. '".' → logprob: -7.130960464477539
    8. '''.' → logprob: -7.755960464477539
    9. ' join' → logprob: -8.380960464477539
    10. ''' → logprob: -8.505960464477539

Token 1443: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. 'print' → logprob: -14.125000953674316
    3. ' join' → logprob: -15.500000953674316
    4. 'jo' → logprob: -17.000001907348633
    5. 'j' → logprob: -17.125001907348633
    6. '(join' → logprob: -18.875001907348633
    7. '```' → logprob: -19.500001907348633
    8. '.join' → logprob: -19.625001907348633
    9. 'strip' → logprob: -20.000001907348633
    10. 'write' → logprob: -20.750001907348633

Token 1444: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.6014254689216614
    2. '(map' → logprob: -0.8514254689216614
    3. 'map' → logprob: -3.8514254093170166
    4. 'str' → logprob: -5.601425647735596
    5. '[str' → logprob: -8.476425170898438
    6. '(f' → logprob: -11.851425170898438
    7. '(results' → logprob: -13.351425170898438
    8. ' map' → logprob: -13.476425170898438
    9. '   ' → logprob: -13.726425170898438
    10. 'f' → logprob: -14.601425170898438

Token 1445: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.47437334060668945
    2. 'str' → logprob: -0.9743733406066895
    3. '[str' → logprob: -8.474372863769531
    4. '```' → logprob: -10.099372863769531
    5. '=str' → logprob: -10.599372863769531
    6. '
' → logprob: -11.974372863769531
    7. ' str' → logprob: -12.224372863769531
    8. '	str' → logprob: -12.474372863769531
    9. ')' → logprob: -12.474372863769531
    10. '   ' → logprob: -13.849372863769531

Token 1446: ',' (ID: 11)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -12.000011444091797
    3. ',' → logprob: -12.500011444091797
    4. 'results' → logprob: -13.375011444091797
    5. ' (' → logprob: -16.500011444091797
    6. '(
' → logprob: -17.500011444091797
    7. ' results' → logprob: -17.875011444091797
    8. '	results' → logprob: -18.250011444091797
    9. ')' → logprob: -19.000011444091797
    10. '(res' → logprob: -20.000011444091797

Token 1447: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -2.339278580620885e-06
    2. ' results' → logprob: -13.000001907348633
    3. '(results' → logprob: -17.000001907348633
    4. '	results' → logprob: -21.250001907348633
    5. '.results' → logprob: -23.000001907348633
    6. '
' → logprob: -24.125001907348633
    7. 'Results' → logprob: -25.250001907348633
    8. '_results' → logprob: -25.625001907348633
    9. '   ' → logprob: -27.125001907348633
    10. '/results' → logprob: -27.500001907348633

Token 1448: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -7.874882430769503e-05
    2. ')' → logprob: -9.625079154968262
    3. '))
' → logprob: -12.000079154968262
    4. ')))' → logprob: -12.000079154968262
    5. '()))' → logprob: -15.750079154968262
    6. '   ' → logprob: -16.125078201293945
    7. ''))' → logprob: -16.375078201293945
    8. ' ))' → logprob: -17.500078201293945
    9. '"))' → logprob: -18.750078201293945
    10. ' ' → logprob: -19.500078201293945

Token 1449: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003266361076384783
    2. '```' → logprob: -6.753266334533691
    3. ' if' → logprob: -7.128266334533691
    4. '<|end|>' → logprob: -7.628266334533691
    5. 'main' → logprob: -7.878266334533691
    6. '
' → logprob: -8.378266334533691
    7. '#' → logprob: -8.753266334533691
    8. ')' → logprob: -11.378266334533691
    9. '[' → logprob: -12.878266334533691
    10. '__' → logprob: -13.003266334533691

Token 1450: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02985682152211666
    2. ' __' → logprob: -3.5298569202423096
    3. '_name' → logprob: -10.02985668182373
    4. 'name' → logprob: -10.27985668182373
    5. '___' → logprob: -10.77985668182373
    6. '____' → logprob: -12.65485668182373
    7. '_' → logprob: -13.52985668182373
    8. '__
' → logprob: -14.27985668182373
    9. '.__' → logprob: -14.52985668182373
    10. '(__' → logprob: -15.02985668182373

Token 1451: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0060139987617731094
    2. '==' → logprob: -5.256013870239258
    3. ' ==' → logprob: -7.756013870239258
    4. '__.__' → logprob: -9.631013870239258
    5. '__":
' → logprob: -9.756013870239258
    6. '=="' → logprob: -10.006013870239258
    7. '__
' → logprob: -10.381013870239258
    8. '__':
' → logprob: -10.631013870239258
    9. '.__' → logprob: -10.756013870239258
    10. '[' → logprob: -10.881013870239258

Token 1452: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009090794483199716
    2. '==' → logprob: -7.125908851623535
    3. '=="' → logprob: -9.750908851623535
    4. '__.__' → logprob: -10.375908851623535
    5. ' ==' → logprob: -12.000908851623535
    6. '=='' → logprob: -12.375908851623535
    7. '__('' → logprob: -13.875908851623535
    8. '__.' → logprob: -14.250908851623535
    9. '__":
' → logprob: -14.375908851623535
    10. '__
' → logprob: -14.875908851623535

Token 1453: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1778445839881897
    2. '__' → logprob: -2.177844524383545
    3. '=="' → logprob: -3.302844524383545
    4. ' ==' → logprob: -5.052844524383545
    5. '=='' → logprob: -5.177844524383545
    6. '==
' → logprob: -7.427844524383545
    7. '__.__' → logprob: -9.677845001220703
    8. '.__' → logprob: -10.302845001220703
    9. '=' → logprob: -10.427845001220703
    10. '===' → logprob: -10.802845001220703

Token 1454: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12693335115909576
    2. ''' → logprob: -2.1269333362579346
    3. '__' → logprob: -12.251933097839355
    4. ' "__' → logprob: -14.876933097839355
    5. ' '__' → logprob: -17.501934051513672
    6. '   ' → logprob: -18.001934051513672
    7. '"name' → logprob: -18.001934051513672
    8. '"user' → logprob: -18.751934051513672
    9. ''"' → logprob: -18.876934051513672
    10. '("__' → logprob: -19.126934051513672

Token 1455: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47445765137672424
    2. 'main' → logprob: -0.9744576215744019
    3. '_main' → logprob: -7.974457740783691
    4. 'name' → logprob: -10.974457740783691
    5. '__
' → logprob: -11.849457740783691
    6. '__':
' → logprob: -12.724457740783691
    7. ''' → logprob: -13.099457740783691
    8. '___' → logprob: -13.224457740783691
    9. '_MAIN' → logprob: -13.599457740783691
    10. '__":
' → logprob: -14.099457740783691

Token 1456: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.1285560429096222
    2. '__' → logprob: -2.1285560131073
    3. '__":
' → logprob: -6.503556251525879
    4. '__
' → logprob: -10.628556251525879
    5. '__.' → logprob: -10.753556251525879
    6. '__:' → logprob: -10.753556251525879
    7. '==' → logprob: -11.003556251525879
    8. '__.__' → logprob: -11.503556251525879
    9. '('__' → logprob: -11.878556251525879
    10. '_' → logprob: -12.253556251525879

Token 1457: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00048715711454860866
    2. '   ' → logprob: -8.125487327575684
    3. '	main' → logprob: -9.500487327575684
    4. '_main' → logprob: -9.750487327575684
    5. ' main' → logprob: -10.625487327575684
    6. '```' → logprob: -11.250487327575684
    7. '__' → logprob: -11.625487327575684
    8. '    
' → logprob: -12.250487327575684
    9. 'run' → logprob: -13.500487327575684
    10. '(main' → logprob: -13.625487327575684

Token 1458: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -19.625
    4. '   ' → logprob: -20.125
    5. '_main' → logprob: -23.25
    6. 'import' → logprob: -23.75
    7. '(main' → logprob: -23.875
    8. '.main' → logprob: -24.0
    9. 'm' → logprob: -25.625
    10. 'Main' → logprob: -26.375

Token 1459: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1457
Tokens correctement prédits (1ère position, stricte): 585
Tokens correctement prédits (1ère position, avec adaptation): 638
Tokens correctement prédits (top 10): 1147
Précision stricte (1ère position): 40.15%
Précision adaptée (1ère position): 43.79%
Précision (top 10): 78.72%
================================================================================
