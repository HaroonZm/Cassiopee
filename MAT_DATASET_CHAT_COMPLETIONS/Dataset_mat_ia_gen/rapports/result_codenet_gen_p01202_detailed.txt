================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution au problème Dance Dance Revolution
# On doit déterminer si une séquence d'arrows est "naturelle" selon les règles données.
# Conditions:
# 1) Les pas alternent entre pied gauche et pied droit.
# 2) Le même panneau ne peut pas être pressé deux fois de suite.
# 3 & 4) Sans tourner le haut du corps ni croiser les jambes:
#     - Les positions des pieds ont une relation d'ordre selon la disposition L < U,D < R,
#       ce qui empêche de croiser jambes ou tourner le corps.
# Approche:
# - On modélise l'état par la position du pied gauche et du pied droit.
# - On essaie d'appuyer chaque flèche avec un pied alterné.
# - Pour chaque étape, on teste toutes les combinaisons possibles d'état compatibles.
# - On utilise un codage efficace avec sets pour gérer jusqu'à 100 000 caractères.
# - Si on peut avancer jusqu'à la fin, on retourne "Yes", sinon "No".

import sys

def is_natural(score: str) -> str:
    # Map panels to indices pour faciliter les comparaisons
    # Ordre logique: L < U < D < R (U et D se considèrent égaux côte à côte)
    order_map = {'L': 0, 'U': 1, 'D': 1, 'R': 2}

    n = len(score)
    # Pied gauche (L), pied droit (R) initialement sur rien (-1)
    # On représente les états par un tuple (pos_gauche, pos_droit)
    # positions: 0-3 pour panels, -1 pour "aucun pied dessus encore" au départ
    # Cependant on commence directement à la première flèche.
    # Initialement les pieds peuvent être n'importe où (on peut assumer qu'ils démarent libres).

    # Pour respecter la règle d'interdiction "même panneau deux fois consécutives" et alternance
    # On doit considérer quelle jambe doit marcher (pied gauche ou pied droit)
    # Les pas commencent avec le pied gauche.

    # On encode les panels en 0..3
    panel_to_num = {'L':0,'U':1,'D':2,'R':3}

    # On définit une fonction qui vérifie si les jambes ne se croisent pas et corps reste face avant
    # Règle interprétée comme: la jambe gauche doit toujours être "à gauche" (ordre), jambe droite "à droite"
    # C'est-à-dire: position_gauche < position_droite selon l'ordre étendu.
    # On utilise l'ordre L<U,D<R, donc L=0, U=1, D=1, R=2
    # Pour U et D on met 1, ils se valent.
    def order_panel(p):
        if p=='L': return 0
        if p=='U' or p=='D': return 1
        return 2

    # Initialisation de l'ensemble des états possibles
    # Un état = (pos_gauche, pos_droite)
    # Au départ on n'a pas les pieds sur une flèche (on peut considérer qu'ils sont au repos hors des panels)
    # Pour démarrage, on peut considérer que les pieds sont 'hors de l'arène', par exemple -1
    # Mais il est plus simple d'initialiser avec le pied gauche appuyant sur la première flèche.
    # En fait le premier pas est sur la première flèche, forcément pied gauche, donc
    # Les pieds commencent avec gauche sur score[0], droite sur "rien" (-1)
    # On représentera l'absence de pied sur un panneau par -1

    # Les panneaux sont codés en 0..3:
    first_panel = panel_to_num[score[0]]
    
    # Les états sont stockés dans un set pour éviter doublons.
    # Au départ, pied gauche sur première flèche, pied droit n'a pas bougé
    states = set()
    states.add( (first_panel, -1) )  # (pos_gauche, pos_droite)
    
    # On va parcourir la séquence à partir de la seconde flèche,
    # en alternant le pied qui appuie: 0 -> gauche, 1 -> droite, 2 -> gauche, etc.
    # On commence à i=1, pied droit doit appuyer (i est la position dans la chaîne)
    for i in range(1,n):
        current_panel = panel_to_num[score[i]]
        new_states = set()
        foot = i % 2  # 0 = gauche, 1 = droite

        for (lg, ld) in states:
            if foot == 0:
                # Pied gauche doit appuyer sur current_panel
                # Conditions:
                # - On ne peut pas appuyer deux fois de suite sur même panneau pour un pied (condition 2)
                #   ici on vérifie pour pied gauche: donc current_panel != lg
                if current_panel == lg:
                    continue
                # - Pied gauche et pied droit ne peuvent pas être sur le même panneau (pas interdit explicitement mais c'est implicite car deux pieds sur même panneau impossible)
                if current_panel == ld:
                    continue
                # - Le corps doit rester face avant et jambes sans croiser
                # order_panel(pied gauche) < order_panel(pied droit)
                # pieds sur (current_panel, ld)
                # ld peut être -1 (pas encore posé), alors pas de problème
                if ld != -1:
                    if order_panel(score[i]) >= order_panel(score[ld]):
                        continue
                # ok, on ajoute le nouvel état
                new_states.add((current_panel, ld))
            else:
                # Pied droit appuie sur current_panel
                if current_panel == ld:
                    continue
                if current_panel == lg:
                    continue
                if lg != -1:
                    # pied gauche et pied droit doivent respecter l'ordre:
                    # order_panel(lg) < order_panel(current_panel)
                    if order_panel(score[lg]) >= order_panel(score[i]):
                        continue
                new_states.add((lg, current_panel))

        if not new_states:
            return "No"
        states = new_states

    return "Yes"



def main():
    input = sys.stdin.readline
    t = int(input())
    for _ in range(t):
        score = input().strip()
        print(is_natural(score))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' au' (ID: 2791)
  → Token d'amorce (pas de prédiction)

Token 3: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.5549896955490112
    2. '-pro' → logprob: -2.554989814758301
    3. ' ' → logprob: -2.679989814758301
    4. 'pro' → logprob: -2.679989814758301
    5. ' code' → logprob: -3.304989814758301
    6. ' probl' → logprob: -3.304989814758301
    7. '_pro' → logprob: -3.429989814758301
    8. ' #' → logprob: -3.554989814758301
    9. '#' → logprob: -3.679989814758301
    10. ' probleme' → logprob: -3.929989814758301

Token 4: ' Dance' (ID: 39391)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6163526773452759
    2. '```' → logprob: -1.3663526773452759
    3. ' :' → logprob: -1.8663526773452759
    4. '\n' → logprob: -3.9913525581359863
    5. '\' → logprob: -4.616352558135986
    6. 's' → logprob: -5.366352558135986
    7. ' ' → logprob: -5.866352558135986
    8. '`' → logprob: -5.991352558135986
    9. ' ```' → logprob: -6.241352558135986
    10. '``' → logprob: -6.616352558135986

Token 5: ' Dance' (ID: 39391)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21049755811691284
    2. 's' → logprob: -3.0854976177215576
    3. ' :' → logprob: -3.2104976177215576
    4. '.' → logprob: -4.0854973793029785
    5. '.py' → logprob: -4.0854973793029785
    6. 'def' → logprob: -4.2104973793029785
    7. '_' → logprob: -4.3354973793029785
    8. '#' → logprob: -4.3354973793029785
    9. ' ' → logprob: -5.0854973793029785
    10. '```' → logprob: -5.4604973793029785

Token 6: ' Revolution' (ID: 39351)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4992542266845703
    2. '#' → logprob: -1.6242542266845703
    3. '```' → logprob: -2.1242542266845703
    4. '-' → logprob: -4.62425422668457
    5. '\' → logprob: -4.99925422668457
    6. 'def' → logprob: -5.12425422668457
    7. '\n' → logprob: -5.12425422668457
    8. ' :' → logprob: -5.24925422668457
    9. 'Moves' → logprob: -5.49925422668457
    10. 'Dance' → logprob: -5.74925422668457

Token 7: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8584559559822083
    2. 'def' → logprob: -0.8584559559822083
    3. '#' → logprob: -2.8584558963775635
    4. 'd' → logprob: -3.1084558963775635
    5. 's' → logprob: -4.358456134796143
    6. '\' → logprob: -4.358456134796143
    7. 'n' → logprob: -4.858456134796143
    8. '_' → logprob: -5.483456134796143
    9. '```' → logprob: -5.983456134796143
    10. '.' → logprob: -6.233456134796143

Token 8: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40959683060646057
    2. '```' → logprob: -1.9095968008041382
    3. 's' → logprob: -2.1595969200134277
    4. 'def' → logprob: -3.1595969200134277
    5. '#' → logprob: -4.409596920013428
    6. '\n' → logprob: -5.284596920013428
    7. 'n' → logprob: -5.659596920013428
    8. '\' → logprob: -6.159596920013428
    9. ':
' → logprob: -6.784596920013428
    10. ' :' → logprob: -7.034596920013428

Token 9: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5360958576202393
    2. ' ' → logprob: -1.0360958576202393
    3. ' def' → logprob: -3.9110958576202393
    4. 'n' → logprob: -4.41109561920166
    5. 'd' → logprob: -5.03609561920166
    6. 's' → logprob: -5.03609561920166
    7. '#' → logprob: -5.41109561920166
    8. ' #' → logprob: -6.28609561920166
    9. '_' → logprob: -6.41109561920166
    10. ' n' → logprob: -6.66109561920166

Token 10: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.6264301538467407
    2. ' lit' → logprob: -1.8764301538467407
    3. 'a' → logprob: -2.126430034637451
    4. 'e' → logprob: -2.126430034637451
    5. 'pe' → logprob: -2.376430034637451
    6. 'util' → logprob: -3.001430034637451
    7. 'lit' → logprob: -3.126430034637451
    8. ' a' → logprob: -3.126430034637451
    9. ' continue' → logprob: -3.626430034637451
    10. ' utilise' → logprob: -4.251430034637451

Token 11: ' déterminer' (ID: 122024)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -1.765552282333374
    2. ' résoudre' → logprob: -2.265552282333374
    3. '#' → logprob: -2.515552282333374
    4. 'dan' → logprob: -2.640552282333374
    5. 'res' → logprob: -2.640552282333374
    6. 'tr' → logprob: -2.765552282333374
    7. 'import' → logprob: -3.015552282333374
    8. ' dan' → logprob: -3.015552282333374
    9. 'impl' → logprob: -3.140552282333374
    10. 'ré' → logprob: -3.515552282333374

Token 12: ' si' (ID: 1784)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8411123156547546
    2. ' la' → logprob: -1.0911123752593994
    3. ' si' → logprob: -2.3411123752593994
    4. ' l' → logprob: -2.7161123752593994
    5. 'le' → logprob: -3.9661123752593994
    6. ' combien' → logprob: -3.9661123752593994
    7. ' ' → logprob: -4.34111213684082
    8. ' s' → logprob: -5.71611213684082
    9. 'la' → logprob: -5.96611213684082
    10. ' quelle' → logprob: -6.09111213684082

Token 13: ' une' (ID: 2463)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8829092383384705
    2. ' la' → logprob: -2.0079092979431152
    3. ' une' → logprob: -2.1329092979431152
    4. 'une' → logprob: -2.6329092979431152
    5. ' il' → logprob: -2.8829092979431152
    6. 'on' → logprob: -3.0079092979431152
    7. ' c' → logprob: -3.2579092979431152
    8. 'la' → logprob: -3.8829092979431152
    9. ' un' → logprob: -4.132909297943115
    10. ' oui' → logprob: -4.132909297943115

Token 14: ' sé' (ID: 7462)
  Prédit: ' danse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' danse' → logprob: -0.9552531242370605
    2. ' chaîne' → logprob: -1.5802531242370605
    3. ' sé' → logprob: -2.5802531242370605
    4. 'sé' → logprob: -3.4552531242370605
    5. 'chaine' → logprob: -3.4552531242370605
    6. 's' → logprob: -3.8302531242370605
    7. ' liste' → logprob: -3.8302531242370605
    8. ' sequence' → logprob: -3.9552531242370605
    9. ' solution' → logprob: -4.2052531242370605
    10. 'suite' → logprob: -4.2052531242370605

Token 15: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.11554529517889023
    2. 'rie' → logprob: -2.2405452728271484
    3. 'ance' → logprob: -6.740545272827148
    4. '#' → logprob: -7.115545272827148
    5. 'q' → logprob: -8.865545272827148
    6. 'que' → logprob: -9.615545272827148
    7. 'QUENCE' → logprob: -9.615545272827148
    8. 'qu' → logprob: -9.865545272827148
    9. '|' → logprob: -9.990545272827148
    10. '_' → logprob: -9.990545272827148

Token 16: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11244206130504608
    2. '_' → logprob: -3.1124420166015625
    3. ' ' → logprob: -3.9874420166015625
    4. ' est' → logprob: -4.1124420166015625
    5. ' d' → logprob: -4.2374420166015625
    6. ' donnée' → logprob: -5.6124420166015625
    7. ' complète' → logprob: -5.9874420166015625
    8. 'de' → logprob: -6.3624420166015625
    9. ' peut' → logprob: -6.9874420166015625
    10. 'd' → logprob: -7.6124420166015625

Token 17: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14365243911743164
    2. 'ance' → logprob: -3.7686524391174316
    3. ''in' → logprob: -4.268652439117432
    4. 'ans' → logprob: -4.768652439117432
    5. ''app' → logprob: -4.768652439117432
    6. 'a' → logprob: -4.768652439117432
    7. ' pas' → logprob: -4.893652439117432
    8. 'es' → logprob: -5.143652439117432
    9. ''action' → logprob: -5.268652439117432
    10. ''' → logprob: -5.518652439117432

Token 18: 'rows' (ID: 2668)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4696073830127716
    2. 'g' → logprob: -1.2196073532104492
    3. 'm' → logprob: -3.844607353210449
    4. 't' → logprob: -3.844607353210449
    5. 'gs' → logprob: -5.094607353210449
    6. 'rg' → logprob: -5.344607353210449
    7. 'ts' → logprob: -5.844607353210449
    8. 'riv' → logprob: -5.844607353210449
    9. 'rr' → logprob: -6.219607353210449
    10. 'cs' → logprob: -6.219607353210449

Token 19: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32198283076286316
    2. '_' → logprob: -1.5719828605651855
    3. 's' → logprob: -3.5719828605651855
    4. ' est' → logprob: -4.4469828605651855
    5. ' s' → logprob: -5.8219828605651855
    6. ',' → logprob: -5.8219828605651855
    7. ' (' → logprob: -6.0719828605651855
    8. '\' → logprob: -6.3219828605651855
    9. ' =' → logprob: -6.4469828605651855
    10. ' peut' → logprob: -6.4469828605651855

Token 20: ' "' (ID: 392)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.49766427278518677
    2. 'possible' → logprob: -2.122664213180542
    3. ' ' → logprob: -3.247664213180542
    4. ' valid' → logprob: -3.372664213180542
    5. ' réalis' → logprob: -3.372664213180542
    6. ' jou' → logprob: -3.872664213180542
    7. ' valide' → logprob: -3.872664213180542
    8. ' une' → logprob: -3.997664213180542
    9. ' composée' → logprob: -4.372664451599121
    10. ' gagn' → logprob: -4.872664451599121

Token 21: 'nature' (ID: 170480)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8853030800819397
    2. ' possible' → logprob: -2.010303020477295
    3. ' valide' → logprob: -2.385303020477295
    4. 'valid' → logprob: -2.510303020477295
    5. 'val' → logprob: -3.135303020477295
    6. ' jou' → logprob: -3.510303020477295
    7. 'une' → logprob: -3.885303020477295
    8. ' valid' → logprob: -4.010303020477295
    9. 'compatible' → logprob: -4.135303020477295
    10. 'jou' → logprob: -4.135303020477295

Token 22: 'lle' (ID: 22088)
  Prédit: 'lle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lle' → logprob: -0.023918697610497475
    2. 'l' → logprob: -3.773918628692627
    3. 'lles' → logprob: -7.648918628692627
    4. 'll' → logprob: -8.648919105529785
    5. '#' → logprob: -11.898919105529785
    6. 'ls' → logprob: -12.023919105529785
    7. ' lle' → logprob: -13.148919105529785
    8. 'elle' → logprob: -13.398919105529785
    9. 'lse' → logprob: -14.023919105529785
    10. '```' → logprob: -14.023919105529785

Token 23: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014125308021903038
    2. 'ment' → logprob: -4.639125347137451
    3. ' "' → logprob: -6.639125347137451
    4. 'm' → logprob: -7.764125347137451
    5. '",' → logprob: -8.139124870300293
    6. '#' → logprob: -8.139124870300293
    7. 'e' → logprob: -8.139124870300293
    8. '```' → logprob: -8.139124870300293
    9. ',' → logprob: -8.389124870300293
    10. 's' → logprob: -8.639124870300293

Token 24: ' selon' (ID: 27571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06331781297922134
    2. ' :' → logprob: -3.9383177757263184
    3. '_' → logprob: -4.563317775726318
    4. ' ' → logprob: -4.813317775726318
    5. 'def' → logprob: -4.813317775726318
    6. '#' → logprob: -5.438317775726318
    7. ',' → logprob: -5.813317775726318
    8. '```' → logprob: -6.438317775726318
    9. 'n' → logprob: -7.063317775726318
    10. '\' → logprob: -7.063317775726318

Token 25: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8676654100418091
    2. 'certain' → logprob: -1.617665410041809
    3. ' les' → logprob: -1.867665410041809
    4. ' certain' → logprob: -2.6176652908325195
    5. ' certaines' → logprob: -3.2426652908325195
    6. ' le' → logprob: -3.2426652908325195
    7. ' certains' → logprob: -4.3676652908325195
    8. ' une' → logprob: -4.4926652908325195
    9. '#' → logprob: -4.9926652908325195
    10. 'le' → logprob: -5.1176652908325195

Token 26: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.16966311633586884
    2. 'r' → logprob: -2.294663190841675
    3. ' critères' → logprob: -4.044662952423096
    4. ' cons' → logprob: -4.169662952423096
    5. ' instructions' → logprob: -4.669662952423096
    6. ' r' → logprob: -6.669662952423096
    7. 'instructions' → logprob: -6.794662952423096
    8. ' directions' → logprob: -6.919662952423096
    9. ' contraintes' → logprob: -6.919662952423096
    10. '#' → logprob: -7.044662952423096

Token 27: ' données' (ID: 30580)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11611350625753403
    2. 'def' → logprob: -2.8661134243011475
    3. ' :' → logprob: -3.7411134243011475
    4. ' ' → logprob: -4.366113662719727
    5. '_' → logprob: -5.241113662719727
    6. '```' → logprob: -5.866113662719727
    7. '#' → logprob: -6.366113662719727
    8. 'd' → logprob: -6.491113662719727
    9. 'n' → logprob: -6.866113662719727
    10. ',' → logprob: -7.366113662719727

Token 28: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1470891237258911
    2. 'def' → logprob: -1.3970891237258911
    3. ' ' → logprob: -1.6470891237258911
    4. 'd' → logprob: -2.1470890045166016
    5. '_' → logprob: -2.7720890045166016
    6. '#' → logprob: -3.6470890045166016
    7. ' :' → logprob: -4.897089004516602
    8. 's' → logprob: -5.147089004516602
    9. ',' → logprob: -5.147089004516602
    10. 'n' → logprob: -5.272089004516602

Token 29: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3167012929916382
    2. ':' → logprob: -2.1917014122009277
    3. 'def' → logprob: -2.4417014122009277
    4. ' ' → logprob: -3.5667014122009277
    5. '#' → logprob: -3.9417014122009277
    6. 'i' → logprob: -5.191701412200928
    7. '```' → logprob: -5.816701412200928
    8. '\' → logprob: -5.816701412200928
    9. 'n' → logprob: -6.066701412200928
    10. ' :' → logprob: -6.191701412200928

Token 30: ' Conditions' (ID: 39333)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16197945177555084
    2. 'def' → logprob: -2.0369794368743896
    3. '#' → logprob: -4.911979675292969
    4. 'i' → logprob: -5.536979675292969
    5. ' ' → logprob: -6.286979675292969
    6. '\' → logprob: -6.786979675292969
    7. 'import' → logprob: -6.786979675292969
    8. 'n' → logprob: -7.411979675292969
    9. '```' → logprob: -7.536979675292969
    10. ':' → logprob: -7.536979675292969

Token 31: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.10653039813041687
    2. ':' → logprob: -2.3565304279327393
    3. ' ' → logprob: -5.85653018951416
    4. 's' → logprob: -6.48153018951416
    5. ' =' → logprob: -7.60653018951416
    6. ',' → logprob: -7.73153018951416
    7. ' ,' → logprob: -7.85653018951416
    8. ' :
' → logprob: -8.23153018951416
    9. ' ' → logprob: -10.10653018951416
    10. ' suivantes' → logprob: -10.23153018951416

Token 32: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05539479851722717
    2. ' #' → logprob: -3.5553948879241943
    3. '#' → logprob: -3.9303948879241943
    4. '<|end|>' → logprob: -5.680394649505615
    5. ''' → logprob: -7.805394649505615
    6. '<|end|>' → logprob: -8.180395126342773
    7. ' 
' → logprob: -8.305395126342773
    8. ' "' → logprob: -8.930395126342773
    9. ' (' → logprob: -9.055395126342773
    10. 'def' → logprob: -9.180395126342773

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06968874484300613
    2. ' #' → logprob: -3.0696887969970703
    3. '#' → logprob: -4.56968879699707
    4. ' (' → logprob: -6.44468879699707
    5. ''' → logprob: -6.69468879699707
    6. ' a' → logprob: -6.81968879699707
    7. ' '' → logprob: -6.81968879699707
    8. ' ```' → logprob: -7.31968879699707
    9. '1' → logprob: -7.44468879699707
    10. ' def' → logprob: -7.88218879699707

Token 34: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09321744740009308
    2. 'def' → logprob: -3.843217372894287
    3. '1' → logprob: -4.593217372894287
    4. '-' → logprob: -4.718217372894287
    5. ' #' → logprob: -4.843217372894287
    6. ' ' → logprob: -4.968217372894287
    7. 'La' → logprob: -5.218217372894287
    8. 'Chaque' → logprob: -5.468217372894287
    9. 'Les' → logprob: -6.593217372894287
    10. ' -' → logprob: -6.593217372894287

Token 35: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.12555730342865
    2. '#' → logprob: -1.62555730342865
    3. 'def' → logprob: -1.87555730342865
    4. ' ' → logprob: -2.3755574226379395
    5. ' def' → logprob: -2.8755574226379395
    6. ' =' → logprob: -3.1255574226379395
    7. ' #' → logprob: -3.2505574226379395
    8. '.' → logprob: -3.7505574226379395
    9. ' ' → logprob: -4.2505574226379395
    10. ')' → logprob: -4.7505574226379395

Token 36: ' Les' (ID: 7029)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -1.706140398979187
    2. ' Les' → logprob: -1.706140398979187
    3. ' Chaque' → logprob: -1.706140398979187
    4. ' Le' → logprob: -2.3311405181884766
    5. ' ' → logprob: -2.9561405181884766
    6. ' L' → logprob: -3.2061405181884766
    7. 'Chaque' → logprob: -3.7061405181884766
    8. 'Les' → logprob: -3.8311405181884766
    9. '#' → logprob: -3.8311405181884766
    10. 'La' → logprob: -3.8311405181884766

Token 37: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9272755980491638
    2. ' fl' → logprob: -1.3022756576538086
    3. ' arrows' → logprob: -2.1772756576538086
    4. ' deux' → logprob: -3.3022756576538086
    5. ' ar' → logprob: -4.177275657653809
    6. ' arrow' → logprob: -4.302275657653809
    7. ' espaces' → logprob: -4.302275657653809
    8. ' directions' → logprob: -4.427275657653809
    9. 'ar' → logprob: -4.427275657653809
    10. '_' → logprob: -4.552275657653809

Token 38: ' altern' (ID: 7310)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.27360284328460693
    2. ' doivent' → logprob: -2.5236029624938965
    3. 's' → logprob: -2.7736029624938965
    4. ' sont' → logprob: -3.5236029624938965
    5. ' suivant' → logprob: -3.7736029624938965
    6. ' naturels' → logprob: -4.7736029624938965
    7. ' ' → logprob: -4.8986029624938965
    8. ' suivent' → logprob: -5.3986029624938965
    9. ' suivantes' → logprob: -5.6486029624938965
    10. ' suivante' → logprob: -6.0236029624938965

Token 39: 'ent' (ID: 299)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.13853664696216583
    2. 'es' → logprob: -2.1385366916656494
    3. 'é' → logprob: -5.63853645324707
    4. 'e' → logprob: -6.01353645324707
    5. 's' → logprob: -6.51353645324707
    6. 'atifs' → logprob: -6.76353645324707
    7. 'ent' → logprob: -7.13853645324707
    8. 'ants' → logprob: -7.63853645324707
    9. 'ées' → logprob: -7.63853645324707
    10. '#' → logprob: -7.88853645324707

Token 40: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16774742305278778
    2. '_' → logprob: -2.5427474975585938
    3. 'e' → logprob: -3.4177474975585938
    4. ',' → logprob: -5.042747497558594
    5. 's' → logprob: -5.042747497558594
    6. '  ' → logprob: -5.417747497558594
    7. 'es' → logprob: -6.042747497558594
    8. ' (' → logprob: -6.292747497558594
    9. ' entre' → logprob: -6.542747497558594
    10. ' =' → logprob: -6.667747497558594

Token 41: ' pied' (ID: 20242)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5547129511833191
    2. ' gauche' → logprob: -1.4297130107879639
    3. ' la' → logprob: -3.679713010787964
    4. 'G' → logprob: -4.054712772369385
    5. ' droite' → logprob: -4.304712772369385
    6. 'dro' → logprob: -4.554712772369385
    7. 'le' → logprob: -4.554712772369385
    8. ' pied' → logprob: -4.679712772369385
    9. 'la' → logprob: -4.679712772369385
    10. 'd' → logprob: -4.804712772369385

Token 42: ' gauche' (ID: 58367)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4420277774333954
    2. ' gauche' → logprob: -2.0670278072357178
    3. 'g' → logprob: -2.9420278072357178
    4. 's' → logprob: -3.3170278072357178
    5. ' droit' → logprob: -3.4420278072357178
    6. ' ' → logprob: -3.4420278072357178
    7. '_d' → logprob: -3.5670278072357178
    8. '_g' → logprob: -3.6920278072357178
    9. 'd' → logprob: -3.9420278072357178
    10. ' droite' → logprob: -6.567027568817139

Token 43: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1272425353527069
    2. ' et' → logprob: -2.6272425651550293
    3. '_' → logprob: -3.8772425651550293
    4. ',' → logprob: -4.877242565155029
    5. ' and' → logprob: -4.877242565155029
    6. 's' → logprob: -5.502242565155029
    7. ' ,' → logprob: -6.627242565155029
    8. '  ' → logprob: -7.002242565155029
    9. ' (' → logprob: -7.127242565155029
    10. 'e' → logprob: -7.377242565155029

Token 44: ' pied' (ID: 20242)
  Prédit: ' droit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.21370741724967957
    2. ' ' → logprob: -2.463707447052002
    3. ' pied' → logprob: -2.588707447052002
    4. ' droite' → logprob: -4.213707447052002
    5. 'd' → logprob: -4.713707447052002
    6. 'dro' → logprob: -6.213707447052002
    7. ' espace' → logprob: -6.963707447052002
    8. 'p' → logprob: -7.088707447052002
    9. ' ' → logprob: -7.213707447052002
    10. ' d' → logprob: -7.213707447052002

Token 45: ' droit' (ID: 29964)
  Prédit: ' droit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.39291197061538696
    2. 'dro' → logprob: -2.017911911010742
    3. 'd' → logprob: -2.767911911010742
    4. ' ' → logprob: -2.892911911010742
    5. ' droite' → logprob: -3.767911911010742
    6. ' gauche' → logprob: -4.642911911010742
    7. 's' → logprob: -5.017911911010742
    8. ' droits' → logprob: -5.142911911010742
    9. 'g' → logprob: -5.142911911010742
    10. '_d' → logprob: -5.392911911010742

Token 46: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7349949479103088
    2. ',' → logprob: -1.109994888305664
    3. '#' → logprob: -2.859994888305664
    4. '.' → logprob: -3.234994888305664
    5. '\' → logprob: -3.359994888305664
    6. '2' → logprob: -4.734994888305664
    7. 'def' → logprob: -4.859994888305664
    8. ' ,' → logprob: -4.984994888305664
    9. ':' → logprob: -5.109994888305664
    10. '```' → logprob: -5.109994888305664

Token 47: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3804532587528229
    2. ' ' → logprob: -1.6304532289505005
    3. ' #' → logprob: -2.75545334815979
    4. '2' → logprob: -3.25545334815979
    5. 'def' → logprob: -6.005453109741211
    6. '```' → logprob: -6.255453109741211
    7. '\' → logprob: -6.380453109741211
    8. ' L' → logprob: -6.380453109741211
    9. ',' → logprob: -6.755453109741211
    10. '4' → logprob: -6.880453109741211

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5002135634422302
    2. '#' → logprob: -1.625213623046875
    3. ' #' → logprob: -1.875213623046875
    4. ' L' → logprob: -4.500213623046875
    5. ' l' → logprob: -5.750213623046875
    6. 'def' → logprob: -5.750213623046875
    7. '2' → logprob: -6.250213623046875
    8. ' def' → logprob: -6.500213623046875
    9. 'L' → logprob: -6.625213623046875
    10. '\' → logprob: -6.625213623046875

Token 49: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5910406708717346
    2. '2' → logprob: -1.9660406112670898
    3. 'p' → logprob: -2.34104061126709
    4. 'L' → logprob: -2.71604061126709
    5. 'g' → logprob: -3.21604061126709
    6. 'l' → logprob: -3.46604061126709
    7. 'd' → logprob: -4.21604061126709
    8. ' ' → logprob: -4.71604061126709
    9. 'f' → logprob: -4.71604061126709
    10. 'def' → logprob: -4.84104061126709

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003191501135006547
    2. ' )' → logprob: -5.7531914710998535
    3. '#' → logprob: -12.003191947937012
    4. ' ' → logprob: -13.128191947937012
    5. '')' → logprob: -13.378191947937012
    6. ',' → logprob: -13.878191947937012
    7. ']' → logprob: -14.628191947937012
    8. 'a' → logprob: -14.628191947937012
    9. ':' → logprob: -14.878191947937012
    10. ' #' → logprob: -15.253191947937012

Token 51: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.7667915225028992
    2. ' Les' → logprob: -1.516791582107544
    3. 'Le' → logprob: -3.016791582107544
    4. ' Chaque' → logprob: -3.141791582107544
    5. 'Les' → logprob: -3.391791582107544
    6. ' On' → logprob: -3.391791582107544
    7. ' ' → logprob: -3.516791582107544
    8. ' L' → logprob: -3.766791582107544
    9. ' La' → logprob: -3.891791582107544
    10. ' Aucun' → logprob: -4.266791343688965

Token 52: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -1.3971482515335083
    2. ' pied' → logprob: -1.3971482515335083
    3. ' pas' → logprob: -2.1471481323242188
    4. 's' → logprob: -2.2721481323242188
    5. 'pas' → logprob: -2.3971481323242188
    6. ' premier' → logprob: -2.6471481323242188
    7. 'p' → logprob: -3.3971481323242188
    8. ' code' → logprob: -4.022148132324219
    9. ' ' → logprob: -4.272148132324219
    10. 'prem' → logprob: -4.522148132324219

Token 53: ' panneau' (ID: 186597)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5422344207763672
    2. ' pied' → logprob: -0.9172344207763672
    3. 'pé' → logprob: -6.042234420776367
    4. '```' → logprob: -6.167234420776367
    5. ' pieds' → logprob: -6.792234420776367
    6. 'foot' → logprob: -6.854734420776367
    7. ' ' → logprob: -6.917234420776367
    8. 'pas' → logprob: -7.042234420776367
    9. 'arrow' → logprob: -7.167234420776367
    10. ' côté' → logprob: -7.354734420776367

Token 54: ' ne' (ID: 453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4896354377269745
    2. ' ' → logprob: -1.3646354675292969
    3. ' n' → logprob: -2.614635467529297
    4. ' est' → logprob: -3.489635467529297
    5. 'n' → logprob: -5.489635467529297
    6. ' de' → logprob: -5.989635467529297
    7. ' a' → logprob: -6.114635467529297
    8. 's' → logprob: -6.239635467529297
    9. 'e' → logprob: -6.489635467529297
    10. ' )' → logprob: -6.739635467529297

Token 55: ' peut' (ID: 9216)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.06943941116333
    2. 'pe' → logprob: -1.44443941116333
    3. ' peut' → logprob: -1.94443941116333
    4. 's' → logprob: -1.94443941116333
    5. ' ' → logprob: -3.94443941116333
    6. 'do' → logprob: -4.19443941116333
    7. 'ré' → logprob: -4.31943941116333
    8. ' rép' → logprob: -4.44443941116333
    9. '```' → logprob: -4.56943941116333
    10. 'est' → logprob: -4.81943941116333

Token 56: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.12399736791849136
    2. ' être' → logprob: -2.873997449874878
    3. 'être' → logprob: -3.373997449874878
    4. ' jamais' → logprob: -4.498997211456299
    5. 'pas' → logprob: -4.873997211456299
    6. ' appara' → logprob: -6.123997211456299
    7. ' be' → logprob: -6.373997211456299
    8. ' ' → logprob: -6.748997211456299
    9. ''être' → logprob: -7.873997211456299
    10. 'e' → logprob: -8.248997688293457

Token 57: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.15385524928569794
    2. ' être' → logprob: -2.028855323791504
    3. ' appara' → logprob: -5.153855323791504
    4. ''être' → logprob: -6.903855323791504
    5. ' ' → logprob: -7.153855323791504
    6. ' be' → logprob: -7.778855323791504
    7. ' servir' → logprob: -7.903855323791504
    8. ' se' → logprob: -8.028855323791504
    9. 'ê' → logprob: -8.028855323791504
    10. 'se' → logprob: -8.528855323791504

Token 58: ' press' (ID: 4989)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -1.7197977304458618
    2. ' utilisé' → logprob: -1.7197977304458618
    3. 'util' → logprob: -1.8447977304458618
    4. 'fr' → logprob: -3.4697976112365723
    5. 'cons' → logprob: -3.4697976112365723
    6. ' frapp' → logprob: -3.4697976112365723
    7. 'press' → logprob: -3.5947976112365723
    8. 'app' → logprob: -3.5947976112365723
    9. ' joué' → logprob: -3.5947976112365723
    10. 'cho' → logprob: -3.7197976112365723

Token 59: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -2.7133641196996905e-05
    2. 'e' → logprob: -11.12502670288086
    3. 'er' → logprob: -12.37502670288086
    4. 'ée' → logprob: -12.62502670288086
    5. 'és' → logprob: -13.37502670288086
    6. 'ė' → logprob: -14.12502670288086
    7. 'è' → logprob: -14.25002670288086
    8. 'ê' → logprob: -14.75002670288086
    9. ' é' → logprob: -14.87502670288086
    10. '&eacute' → logprob: -15.25002670288086

Token 60: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.555980384349823
    2. ' cons' → logprob: -0.930980384349823
    3. 'de' → logprob: -4.555980205535889
    4. '_' → logprob: -4.555980205535889
    5. ' two' → logprob: -5.680980205535889
    6. ' ' → logprob: -6.180980205535889
    7. ' de' → logprob: -7.305980205535889
    8. 'e' → logprob: -7.430980205535889
    9. 'cons' → logprob: -7.555980205535889
    10. '2' → logprob: -7.680980205535889

Token 61: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.39470502734184265
    2. ' ' → logprob: -1.144705057144165
    3. 'fois' → logprob: -5.019704818725586
    4. '   ' → logprob: -7.644704818725586
    5. '  ' → logprob: -7.769704818725586
    6. '  
' → logprob: -9.644704818725586
    7. '	' → logprob: -10.019704818725586
    8. '_' → logprob: -10.144704818725586
    9. '```' → logprob: -10.269704818725586
    10. ' ' → logprob: -10.644704818725586

Token 62: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9200769662857056
    2. 's' → logprob: -2.045076847076416
    3. '_' → logprob: -2.170076847076416
    4. 'e' → logprob: -2.795076847076416
    5. 'import' → logprob: -3.295076847076416
    6. '.' → logprob: -3.295076847076416
    7. '```' → logprob: -3.545076847076416
    8. ',' → logprob: -3.795076847076416
    9. ' (' → logprob: -3.795076847076416
    10. ')' → logprob: -4.045076847076416

Token 63: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.19240039587020874
    2. ' ' → logprob: -2.1924004554748535
    3. ' suite' → logprob: -3.0674004554748535
    4. 's' → logprob: -5.8174004554748535
    5. 'r' → logprob: -5.9424004554748535
    6. '_' → logprob: -6.3174004554748535
    7. '	' → logprob: -6.5674004554748535
    8. '   ' → logprob: -6.9424004554748535
    9. 'aff' → logprob: -7.1924004554748535
    10. 't' → logprob: -7.3174004554748535

Token 64: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6073746085166931
    2. 'def' → logprob: -0.8573746085166931
    3. '#' → logprob: -4.107374668121338
    4. 'de' → logprob: -5.607374668121338
    5. '```' → logprob: -6.107374668121338
    6. ' def' → logprob: -6.232374668121338
    7. ' de' → logprob: -6.732374668121338
    8. '\' → logprob: -6.857374668121338
    9. ' ' → logprob: -7.232374668121338
    10. ':' → logprob: -7.482374668121338

Token 65: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4821452796459198
    2. 'd' → logprob: -1.1071453094482422
    3. '#' → logprob: -4.107145309448242
    4. 'i' → logprob: -4.982145309448242
    5. 'de' → logprob: -5.357145309448242
    6. '\' → logprob: -5.357145309448242
    7. '```' → logprob: -5.482145309448242
    8. ' de' → logprob: -5.982145309448242
    9. 'n' → logprob: -5.982145309448242
    10. ' ' → logprob: -6.357145309448242

Token 66: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12851211428642273
    2. 'd' → logprob: -2.503512144088745
    3. '#' → logprob: -3.503512144088745
    4. 's' → logprob: -6.253511905670166
    5. 'import' → logprob: -7.003511905670166
    6. 'n' → logprob: -7.253511905670166
    7. 'arrow' → logprob: -7.378511905670166
    8. '\' → logprob: -7.503511905670166
    9. ' ' → logprob: -7.503511905670166
    10. 'i' → logprob: -7.753511905670166

Token 67: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1390289068222046
    2. 'd' → logprob: -2.389029026031494
    3. '#' → logprob: -3.514029026031494
    4. '\' → logprob: -6.264029026031494
    5. ' ' → logprob: -6.514029026031494
    6. 'import' → logprob: -6.889029026031494
    7. 'de' → logprob: -7.264029026031494
    8. '```' → logprob: -7.264029026031494
    9. 'n' → logprob: -7.764029026031494
    10. 's' → logprob: -7.764029026031494

Token 68: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002867042785510421
    2. '#' → logprob: -6.002867221832275
    3. ' )' → logprob: -8.002866744995117
    4. 'def' → logprob: -11.377866744995117
    5. ')#' → logprob: -11.877866744995117
    6. '')' → logprob: -12.377866744995117
    7. ' #' → logprob: -12.627866744995117
    8. ')
' → logprob: -12.752866744995117
    9. 'a' → logprob: -12.940366744995117
    10. '`)' → logprob: -13.127866744995117

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1966333389282227
    2. '#' → logprob: -1.3216333389282227
    3. ' #' → logprob: -1.8216333389282227
    4. '4' → logprob: -2.8216333389282227
    5. 'nbsp' → logprob: -2.9466333389282227
    6. ')' → logprob: -3.8216333389282227
    7. ' Le' → logprob: -3.9466333389282227
    8. ' le' → logprob: -4.384133338928223
    9. ' l' → logprob: -4.571633338928223
    10. ' la' → logprob: -4.634133338928223

Token 70: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5771604776382446
    2. ' ' → logprob: -0.8271604776382446
    3. '#' → logprob: -7.577160358428955
    4. ' #' → logprob: -9.202160835266113
    5. '3' → logprob: -9.827160835266113
    6. ')' → logprob: -10.077160835266113
    7. ' Le' → logprob: -10.139660835266113
    8. 'def' → logprob: -10.264660835266113
    9. 'Le' → logprob: -10.639660835266113
    10. ' La' → logprob: -10.639660835266113

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016254419460892677
    2. '#' → logprob: -4.891254425048828
    3. ' )' → logprob: -4.891254425048828
    4. ':' → logprob: -7.891254425048828
    5. 'def' → logprob: -8.266254425048828
    6. ' ' → logprob: -9.391254425048828
    7. ' #' → logprob: -9.891254425048828
    8. ')
' → logprob: -10.141254425048828
    9. ')#' → logprob: -10.391254425048828
    10. ',' → logprob: -10.516254425048828

Token 72: ' Sans' (ID: 27070)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.635589838027954
    2. ' Le' → logprob: -1.760589838027954
    3. ' ' → logprob: -2.010589838027954
    4. ' #' → logprob: -2.260589838027954
    5. ' Les' → logprob: -2.260589838027954
    6. 'Les' → logprob: -3.635589838027954
    7. ' les' → logprob: -3.760589838027954
    8. ' ' → logprob: -3.760589838027954
    9. ' L' → logprob: -3.948089838027954
    10. ' (' → logprob: -4.010589599609375

Token 73: ' tourner' (ID: 116000)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8414195775985718
    2. ' doute' → logprob: -2.7164196968078613
    3. 'd' → logprob: -2.9039196968078613
    4. ' répét' → logprob: -2.9664196968078613
    5. ' rép' → logprob: -3.5914196968078613
    6. ' saut' → logprob: -3.6539196968078613
    7. ' double' → logprob: -3.7164196968078613
    8. ' ' → logprob: -3.7164196968078613
    9. ' espace' → logprob: -3.9039196968078613
    10. ' sa' → logprob: -4.028919696807861

Token 74: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09179237484931946
    2. ' def' → logprob: -3.841792345046997
    3. ' ' → logprob: -3.966792345046997
    4. 'import' → logprob: -3.966792345046997
    5. ':' → logprob: -4.591792583465576
    6. ',' → logprob: -5.966792583465576
    7. ' 

' → logprob: -5.966792583465576
    8. '#' → logprob: -6.091792583465576
    9. '\' → logprob: -6.091792583465576
    10. '```' → logprob: -6.216792583465576

Token 75: ' haut' (ID: 28223)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.650209367275238
    2. ' dos' → logprob: -1.9002094268798828
    3. 'cor' → logprob: -2.275209426879883
    4. ' corps' → logprob: -3.150209426879883
    5. 'dos' → logprob: -3.525209426879883
    6. ' pied' → logprob: -3.525209426879883
    7. 't' → logprob: -3.650209426879883
    8. '```' → logprob: -4.150209426879883
    9. ' ' → logprob: -4.275209426879883
    10. 's' → logprob: -5.150209426879883

Token 76: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6070479154586792
    2. '.' → logprob: -2.1070480346679688
    3. 'bas' → logprob: -2.7320480346679688
    4. 'e' → logprob: -2.9820480346679688
    5. '#' → logprob: -3.2320480346679688
    6. ' bas' → logprob: -3.6070480346679688
    7. ' ' → logprob: -3.9820480346679688
    8. ':' → logprob: -4.357048034667969
    9. ')' → logprob: -4.357048034667969
    10. ' (' → logprob: -4.482048034667969

Token 77: ' corps' (ID: 29363)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.46949419379234314
    2. 'p' → logprob: -1.4694942235946655
    3. ' corps' → logprob: -2.094494104385376
    4. 'corp' → logprob: -4.969494342803955
    5. ' ' → logprob: -5.594494342803955
    6. '```' → logprob: -5.969494342803955
    7. '#' → logprob: -6.094494342803955
    8. 'body' → logprob: -6.969494342803955
    9. ' pied' → logprob: -7.469494342803955
    10. 'c' → logprob: -7.719494342803955

Token 78: ' ni' (ID: 2565)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6540129780769348
    2. ':' → logprob: -1.65401291847229
    3. ' ' → logprob: -2.02901291847229
    4. '#' → logprob: -3.02901291847229
    5. ',' → logprob: -3.15401291847229
    6. 'import' → logprob: -4.279013156890869
    7. ' def' → logprob: -4.904013156890869
    8. '\' → logprob: -5.029013156890869
    9. '.' → logprob: -5.029013156890869
    10. 'd' → logprob: -5.279013156890869

Token 79: ' cro' (ID: 11270)
  Prédit: ' bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bou' → logprob: -0.48693758249282837
    2. ' lever' → logprob: -1.7369375228881836
    3. 'lever' → logprob: -2.2369375228881836
    4. ' déplacer' → logprob: -3.1119375228881836
    5. 's' → logprob: -4.236937522888184
    6. 'bou' → logprob: -4.611937522888184
    7. ' tourner' → logprob: -5.361937522888184
    8. 'b' → logprob: -5.611937522888184
    9. ' changer' → logprob: -5.799437522888184
    10. 'dé' → logprob: -6.674437522888184

Token 80: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.1365949511528015
    2. 'i' → logprob: -2.8865950107574463
    3. 'is' → logprob: -3.3865950107574463
    4. 'ise' → logprob: -3.5115950107574463
    5. 'isant' → logprob: -6.386594772338867
    6. 'isé' → logprob: -6.824094772338867
    7. 'isée' → logprob: -7.886594772338867
    8. '-' → logprob: -8.261594772338867
    9. '

' → logprob: -8.449094772338867
    10. '
' → logprob: -8.574094772338867

Token 81: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7154671549797058
    2. ':' → logprob: -1.8404672145843506
    3. '#' → logprob: -2.0904672145843506
    4. 'def' → logprob: -2.3404672145843506
    5. ',' → logprob: -2.7154672145843506
    6. 'import' → logprob: -4.5904669761657715
    7. ' :' → logprob: -4.7154669761657715
    8. '.' → logprob: -5.2154669761657715
    9. ')' → logprob: -5.3404669761657715
    10. 'e' → logprob: -5.4654669761657715

Token 82: ' jambes' (ID: 144942)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2677406966686249
    2. 'j' → logprob: -2.3927407264709473
    3. ' pieds' → logprob: -2.7677407264709473
    4. ' jambes' → logprob: -2.8927407264709473
    5. ' bras' → logprob: -4.892740726470947
    6. 'm' → logprob: -5.267740726470947
    7. 'bras' → logprob: -5.517740726470947
    8. ' ' → logprob: -5.642740726470947
    9. ' p' → logprob: -6.392740726470947
    10. ' ' → logprob: -7.142740726470947

Token 83: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2844816744327545
    2. ':' → logprob: -2.1594817638397217
    3. ' ' → logprob: -3.5344817638397217
    4. '#' → logprob: -3.6594817638397217
    5. ',' → logprob: -4.034481525421143
    6. 'd' → logprob: -4.409481525421143
    7. 'import' → logprob: -4.659481525421143
    8. ' def' → logprob: -4.659481525421143
    9. ' :' → logprob: -5.659481525421143
    10. '\' → logprob: -5.784481525421143

Token 84: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4737478792667389
    2. ' ' → logprob: -1.8487478494644165
    3. ' #' → logprob: -2.598747968673706
    4. 'def' → logprob: -2.598747968673706
    5. 'd' → logprob: -3.848747968673706
    6. ' def' → logprob: -4.973747730255127
    7. 'import' → logprob: -5.223747730255127
    8. 'a' → logprob: -5.661247730255127
    9. ',' → logprob: -5.911247730255127
    10. ' '' → logprob: -6.348747730255127

Token 85: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8150152564048767
    2. ' #' → logprob: -1.3150153160095215
    3. ' ' → logprob: -1.9400153160095215
    4. 'def' → logprob: -3.4400153160095215
    5. ' def' → logprob: -4.1900153160095215
    6. 'd' → logprob: -4.8150153160095215
    7. 'a' → logprob: -5.1900153160095215
    8. ' l' → logprob: -5.3150153160095215
    9. ',' → logprob: -5.5025153160095215
    10. ' le' → logprob: -5.9400153160095215

Token 86: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6000576615333557
    2. ' #' → logprob: -2.600057601928711
    3. ' les' → logprob: -2.600057601928711
    4. ' le' → logprob: -2.725057601928711
    5. ' on' → logprob: -3.475057601928711
    6. 'le' → logprob: -3.475057601928711
    7. ' ' → logprob: -3.600057601928711
    8. 'l' → logprob: -3.850057601928711
    9. ' l' → logprob: -4.350057601928711
    10. ' il' → logprob: -4.475057601928711

Token 87: ' Les' (ID: 7029)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1899311542510986
    2. ' les' → logprob: -1.3149311542510986
    3. ' on' → logprob: -2.4399311542510986
    4. 'le' → logprob: -2.8149311542510986
    5. 'les' → logprob: -2.9399311542510986
    6. ' Le' → logprob: -3.6899311542510986
    7. ' la' → logprob: -4.0649309158325195
    8. ' On' → logprob: -4.1899309158325195
    9. 'Le' → logprob: -4.3149309158325195
    10. ' ' → logprob: -4.4399309158325195

Token 88: ' positions' (ID: 15897)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.0161601305007935
    2. 'p' → logprob: -1.6411601305007935
    3. 'pas' → logprob: -1.8911601305007935
    4. ' pieds' → logprob: -2.391160011291504
    5. ' ' → logprob: -3.391160011291504
    6. ' fl' → logprob: -3.391160011291504
    7. 'g' → logprob: -3.891160011291504
    8. ' mouvements' → logprob: -4.266160011291504
    9. 'fl' → logprob: -4.391160011291504
    10. ' déplacements' → logprob: -4.953660011291504

Token 89: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8803319334983826
    2. ' possibles' → logprob: -2.7553319931030273
    3. ' des' → logprob: -2.8803319931030273
    4. ' valid' → logprob: -3.0053319931030273
    5. ' de' → logprob: -3.5678319931030273
    6. ' val' → logprob: -3.5678319931030273
    7. ' gauche' → logprob: -3.5678319931030273
    8. ' oppos' → logprob: -3.6928319931030273
    9. ' possible' → logprob: -3.7553319931030273
    10. ' suivantes' → logprob: -4.192831993103027

Token 90: ' pieds' (ID: 72670)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9203075766563416
    2. ' pieds' → logprob: -0.9203075766563416
    3. ' pas' → logprob: -2.2953076362609863
    4. ' ' → logprob: -3.2953076362609863
    5. 'pas' → logprob: -3.6703076362609863
    6. 'de' → logprob: -5.420307636260986
    7. 'm' → logprob: -5.545307636260986
    8. ' p' → logprob: -5.795307636260986
    9. '  ' → logprob: -6.107807636260986
    10. ' deux' → logprob: -6.170307636260986

Token 91: ' ont' (ID: 4930)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.6046872735023499
    2. ' ne' → logprob: -1.729687213897705
    3. ' sont' → logprob: -3.104687213897705
    4. 's' → logprob: -3.104687213897705
    5. ' oppos' → logprob: -3.979687213897705
    6. 'ne' → logprob: -3.979687213897705
    7. ' gauche' → logprob: -3.979687213897705
    8. 'do' → logprob: -4.354687213897705
    9. ' peuvent' → logprob: -4.479687213897705
    10. ' ' → logprob: -4.729687213897705

Token 92: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3058778047561646
    2. ' un' → logprob: -2.055877685546875
    3. ' toujours' → logprob: -2.430877685546875
    4. 'être' → logprob: -2.930877685546875
    5. ' une' → logprob: -2.930877685546875
    6. ' être' → logprob: -3.055877685546875
    7. 't' → logprob: -3.180877685546875
    8. 'une' → logprob: -3.430877685546875
    9. 'un' → logprob: -3.993377685546875
    10. ' été' → logprob: -4.430877685546875

Token 93: ' relation' (ID: 18075)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.9563454389572144
    2. 'distance' → logprob: -2.081345558166504
    3. ' relation' → logprob: -2.706345558166504
    4. ' limite' → logprob: -2.831345558166504
    5. ' ' → logprob: -3.206345558166504
    6. ' position' → logprob: -3.581345558166504
    7. ' sens' → logprob: -3.706345558166504
    8. ' même' → logprob: -3.956345558166504
    9. ' correspond' → logprob: -4.206345558166504
    10. ' direction' → logprob: -4.268845558166504

Token 94: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3005304336547852
    2. ' d' → logprob: -1.4255304336547852
    3. 'd' → logprob: -1.9255304336547852
    4. 'de' → logprob: -2.300530433654785
    5. ' ' → logprob: -3.550530433654785
    6. 's' → logprob: -3.675530433654785
    7. '_' → logprob: -4.050530433654785
    8. ' logique' → logprob: -4.050530433654785
    9. ' entre' → logprob: -4.988030433654785
    10. '```' → logprob: -5.113030433654785

Token 95: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.9531065225601196
    2. ''' → logprob: -1.5781065225601196
    3. 'e' → logprob: -1.7031065225601196
    4. ''ad' → logprob: -2.57810640335083
    5. ''op' → logprob: -3.32810640335083
    6. ''équ' → logprob: -3.82810640335083
    7. ''al' → logprob: -4.57810640335083
    8. ''é' → logprob: -4.57810640335083
    9. ''un' → logprob: -4.95310640335083
    10. ''inter' → logprob: -5.20310640335083

Token 96: ' selon' (ID: 27571)
  Prédit: ' naturelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' naturelle' → logprob: -1.225057601928711
    2. 's' → logprob: -2.100057601928711
    3. ' strict' → logprob: -2.225057601928711
    4. ',' → logprob: -2.225057601928711
    5. ' naturel' → logprob: -2.600057601928711
    6. ' ' → logprob: -3.225057601928711
    7. ' entre' → logprob: -3.725057601928711
    8. ' de' → logprob: -3.850057601928711
    9. '.' → logprob: -3.850057601928711
    10. ' logique' → logprob: -4.100057601928711

Token 97: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.152707576751709
    2. 'la' → logprob: -1.902707576751709
    3. ' l' → logprob: -2.027707576751709
    4. 'le' → logprob: -2.527707576751709
    5. ' les' → logprob: -2.777707576751709
    6. 'les' → logprob: -2.777707576751709
    7. 'l' → logprob: -3.402707576751709
    8. ' le' → logprob: -3.402707576751709
    9. ' leur' → logprob: -3.402707576751709
    10. ' ' → logprob: -3.527707576751709

Token 98: ' disposition' (ID: 44707)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8709000945091248
    2. ' position' → logprob: -1.1209001541137695
    3. ' ' → logprob: -3.4959001541137695
    4. ' direction' → logprob: -3.6209001541137695
    5. 'direction' → logprob: -4.1834001541137695
    6. ' fl' → logprob: -4.3084001541137695
    7. ' code' → logprob: -4.4959001541137695
    8. 'ordre' → logprob: -4.6209001541137695
    9. 's' → logprob: -4.9334001541137695
    10. 'code' → logprob: -5.0584001541137695

Token 99: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5973033905029297
    2. 'def' → logprob: -2.5973033905029297
    3. ':' → logprob: -2.7223033905029297
    4. ',' → logprob: -2.8473033905029297
    5. '#' → logprob: -3.0973033905029297
    6. '_' → logprob: -3.0973033905029297
    7. 's' → logprob: -3.2223033905029297
    8. 'import' → logprob: -3.8473033905029297
    9. '.' → logprob: -4.34730339050293
    10. ' ,' → logprob: -4.59730339050293

Token 100: ' <' (ID: 464)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3052819073200226
    2. ',' → logprob: -2.6802818775177
    3. 'E' → logprob: -3.0552818775177
    4. '_' → logprob: -3.3052818775177
    5. ''' → logprob: -4.180282115936279
    6. 'U' → logprob: -4.305282115936279
    7. '>' → logprob: -4.805282115936279
    8. 'u' → logprob: -4.930282115936279
    9. ')' → logprob: -5.055282115936279
    10. '-' → logprob: -5.180282115936279

Token 101: ' U' (ID: 601)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3740929067134857
    2. 'C' → logprob: -2.7490928173065186
    3. 'R' → logprob: -2.8740928173065186
    4. 'U' → logprob: -3.2490928173065186
    5. ' D' → logprob: -3.3740928173065186
    6. 'H' → logprob: -3.3740928173065186
    7. ' ' → logprob: -3.7490928173065186
    8. 'B' → logprob: -4.936593055725098
    9. 'u' → logprob: -5.124093055725098
    10. ' R' → logprob: -5.249093055725098

Token 102: ',D' (ID: 61507)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07954132556915283
    2. '<' → logprob: -2.9545412063598633
    3. ' >' → logprob: -4.579541206359863
    4. ',' → logprob: -5.329541206359863
    5. '>' → logprob: -5.954541206359863
    6. 'L' → logprob: -6.579541206359863
    7. ' ' → logprob: -6.954541206359863
    8. 'D' → logprob: -7.079541206359863
    9. ' ,' → logprob: -7.204541206359863
    10. 'R' → logprob: -7.329541206359863

Token 103: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03844616189599037
    2. '<' → logprob: -3.6634461879730225
    3. ',' → logprob: -4.663445949554443
    4. ' ,' → logprob: -7.163445949554443
    5. ',<' → logprob: -7.163445949554443
    6. ' et' → logprob: -7.788445949554443
    7. ' >' → logprob: -8.663446426391602
    8. ' ' → logprob: -9.288446426391602
    9. 'et' → logprob: -9.788446426391602
    10. 'L' → logprob: -10.288446426391602

Token 104: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.04343370348215103
    2. ' R' → logprob: -3.168433666229248
    3. ' ' → logprob: -8.168434143066406
    4. '>' → logprob: -9.793434143066406
    5. '	R' → logprob: -9.918434143066406
    6. ' ' → logprob: -11.668434143066406
    7. '  ' → logprob: -12.543434143066406
    8. '   ' → logprob: -12.668434143066406
    9. 'L' → logprob: -12.730934143066406
    10. ',R' → logprob: -12.918434143066406

Token 105: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14222264289855957
    2. '\' → logprob: -3.3922226428985596
    3. '#' → logprob: -3.5172226428985596
    4. 'import' → logprob: -4.0172224044799805
    5. ' ' → logprob: -4.7672224044799805
    6. '
' → logprob: -5.0172224044799805
    7. 's' → logprob: -5.3922224044799805
    8. ':' → logprob: -5.3922224044799805
    9. '\n' → logprob: -5.3922224044799805
    10. ',' → logprob: -5.6422224044799805

Token 106: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4349798560142517
    2. '\' → logprob: -2.8099799156188965
    3. ' ' → logprob: -2.8099799156188965
    4. '.' → logprob: -2.9349799156188965
    5. '\n' → logprob: -3.9349799156188965
    6. 'def' → logprob: -4.0599799156188965
    7. ',' → logprob: -4.0599799156188965
    8. '
' → logprob: -4.1849799156188965
    9. ' #' → logprob: -4.3099799156188965
    10. ' 
' → logprob: -4.3099799156188965

Token 107: '      ' (ID: 1699)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13090527057647705
    2. ' ' → logprob: -2.7559051513671875
    3. ' #' → logprob: -3.7559051513671875
    4. 'def' → logprob: -4.8809051513671875
    5. ',' → logprob: -5.2559051513671875
    6. ' 
' → logprob: -5.8809051513671875
    7. ''' → logprob: -6.0059051513671875
    8. '\' → logprob: -6.1309051513671875
    9. '.' → logprob: -6.8809051513671875
    10. '"' → logprob: -7.2559051513671875

Token 108: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23938553035259247
    2. ' #' → logprob: -2.7393856048583984
    3. ' ' → logprob: -3.3643856048583984
    4. ' et' → logprob: -3.6143856048583984
    5. ' L' → logprob: -4.614385604858398
    6. 'et' → logprob: -4.739385604858398
    7. ' ce' → logprob: -4.864385604858398
    8. ' c' → logprob: -4.864385604858398
    9. ',' → logprob: -5.364385604858398
    10. ' donc' → logprob: -5.364385604858398

Token 109: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.1845027506351471
    2. 'ci' → logprob: -2.5595028400421143
    3. 'qui' → logprob: -3.3095028400421143
    4. '#' → logprob: -3.4345028400421143
    5. 'pend' → logprob: -4.434502601623535
    6. 'st' → logprob: -6.059502601623535
    7. 't' → logprob: -6.809502601623535
    8. 'n' → logprob: -6.809502601623535
    9. ' que' → logprob: -6.934502601623535
    10. ' ' → logprob: -7.684502601623535

Token 110: ' emp' (ID: 4927)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.07400199770927429
    2. ' implique' → logprob: -3.4490020275115967
    3. ' veut' → logprob: -3.5740020275115967
    4. ' permet' → logprob: -5.949001789093018
    5. ' impose' → logprob: -6.824001789093018
    6. ' emp' → logprob: -7.074001789093018
    7. ' interdit' → logprob: -7.199001789093018
    8. 'impl' → logprob: -7.324001789093018
    9. 'n' → logprob: -7.324001789093018
    10. ' garantit' → logprob: -7.824001789093018

Token 111: 'êche' (ID: 63993)
  Prédit: 'êche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êche' → logprob: -0.017447661608457565
    2. 'ê' → logprob: -4.267447471618652
    3. 'èche' → logprob: -6.517447471618652
    4. 'é' → logprob: -7.267447471618652
    5. 'e' → logprob: -7.892447471618652
    6. '^' → logprob: -8.017447471618652
    7. 'êcher' → logprob: -9.642447471618652
    8. '#' → logprob: -10.142447471618652
    9. 'è' → logprob: -10.267447471618652
    10. ' ' → logprob: -10.267447471618652

Token 112: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10824461281299591
    2. ' d' → logprob: -3.3582446575164795
    3. 'de' → logprob: -3.4832446575164795
    4. ' que' → logprob: -4.6082444190979
    5. 'd' → logprob: -4.8582444190979
    6. ' le' → logprob: -5.7332444190979
    7. ' ' → logprob: -5.7332444190979
    8. ' un' → logprob: -6.3582444190979
    9. 'le' → logprob: -6.6707444190979
    10. ' qu' → logprob: -6.9832444190979

Token 113: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -1.5211734771728516
    2. 're' → logprob: -1.8961734771728516
    3. 'pres' → logprob: -2.7711734771728516
    4. 'faire' → logprob: -3.0211734771728516
    5. 'app' → logprob: -3.1461734771728516
    6. ' app' → logprob: -3.1461734771728516
    7. 'mettre' → logprob: -3.2711734771728516
    8. 'press' → logprob: -3.5211734771728516
    9. ' cro' → logprob: -3.5211734771728516
    10. ' faire' → logprob: -3.5211734771728516

Token 114: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.470857173204422
    2. 's' → logprob: -1.5958571434020996
    3. 'ss' → logprob: -2.8458571434020996
    4. 'ser' → logprob: -2.9708571434020996
    5. 'i' → logprob: -4.0958571434021
    6. 'isser' → logprob: -4.5958571434021
    7. 'ise' → logprob: -4.8458571434021
    8. 'is' → logprob: -5.0958571434021
    9. 'u' → logprob: -5.7208571434021
    10. 'î' → logprob: -6.0958571434021

Token 115: ' jambes' (ID: 144942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8969864249229431
    2. ' ' → logprob: -1.771986484527588
    3. 'def' → logprob: -2.396986484527588
    4. '_' → logprob: -2.896986484527588
    5. ' #' → logprob: -3.021986484527588
    6. ',' → logprob: -3.271986484527588
    7. '.' → logprob: -3.396986484527588
    8. 's' → logprob: -3.521986484527588
    9. ')' → logprob: -4.521986484527588
    10. 'import' → logprob: -4.646986484527588

Token 116: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1766289323568344
    2. '\' → logprob: -3.426628828048706
    3. ' def' → logprob: -3.801628828048706
    4. ',' → logprob: -3.801628828048706
    5. ' ' → logprob: -3.926628828048706
    6. '
' → logprob: -4.801629066467285
    7. 'import' → logprob: -4.926629066467285
    8. '#' → logprob: -4.926629066467285
    9. ',
' → logprob: -5.176629066467285
    10. 's' → logprob: -5.301629066467285

Token 117: ' tourner' (ID: 116000)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2036181688308716
    2. ' revenir' → logprob: -1.5786181688308716
    3. 'de' → logprob: -2.703618049621582
    4. '#' → logprob: -2.953618049621582
    5. ' d' → logprob: -3.203618049621582
    6. ' desc' → logprob: -3.578618049621582
    7. ' déplacer' → logprob: -3.578618049621582
    8. ' retourner' → logprob: -3.828618049621582
    9. ' passer' → logprob: -4.078618049621582
    10. ' marcher' → logprob: -4.203618049621582

Token 118: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029526911675930023
    2. ' def' → logprob: -4.279526710510254
    3. '#' → logprob: -5.029526710510254
    4. ':' → logprob: -6.154526710510254
    5. '
' → logprob: -6.904526710510254
    6. 'import' → logprob: -7.029526710510254
    7. ',' → logprob: -7.029526710510254
    8. '\' → logprob: -7.279526710510254
    9. ' ' → logprob: -7.529526710510254
    10. 's' → logprob: -7.904526710510254

Token 119: ' corps' (ID: 29363)
  Prédit: ' corps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corps' → logprob: -0.1009167730808258
    2. ' dos' → logprob: -2.975916862487793
    3. 'cor' → logprob: -3.600916862487793
    4. ' haut' → logprob: -5.475916862487793
    5. 'dos' → logprob: -5.475916862487793
    6. ' ' → logprob: -6.225916862487793
    7. 'corp' → logprob: -6.475916862487793
    8. 'haut' → logprob: -6.600916862487793
    9. ' corp' → logprob: -6.975916862487793
    10. 'c' → logprob: -6.975916862487793

Token 120: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015510444529354572
    2. ' def' → logprob: -5.015510559082031
    3. '\' → logprob: -6.265510559082031
    4. '
' → logprob: -6.640510559082031
    5. 'import' → logprob: -6.640510559082031
    6. 's' → logprob: -6.765510559082031
    7. '#' → logprob: -7.515510559082031
    8. ' 
' → logprob: -7.765510559082031
    9. 'n' → logprob: -7.890510559082031
    10. ' ' → logprob: -7.890510559082031

Token 121: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014334382489323616
    2. '#' → logprob: -5.264334201812744
    3. '\' → logprob: -5.514334201812744
    4. 'import' → logprob: -6.014334201812744
    5. '
' → logprob: -7.389334201812744
    6. 's' → logprob: -7.764334201812744
    7. '```' → logprob: -7.889334201812744
    8. '\n' → logprob: -8.264334678649902
    9. ' def' → logprob: -8.889334678649902
    10. 'from' → logprob: -9.264334678649902

Token 122: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12907302379608154
    2. '#' → logprob: -2.879073143005371
    3. 'import' → logprob: -3.754073143005371
    4. ' 
' → logprob: -4.879073143005371
    5. '\' → logprob: -5.004073143005371
    6. '
' → logprob: -5.254073143005371
    7. 's' → logprob: -5.629073143005371
    8. 'from' → logprob: -5.754073143005371
    9. ' #' → logprob: -6.629073143005371
    10. 'foot' → logprob: -6.629073143005371

Token 123: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.035004790872335434
    2. 'ch' → logprob: -3.5350048542022705
    3. 'cher' → logprob: -5.660004615783691
    4. 'ches' → logprob: -6.660004615783691
    5. 'ché' → logprob: -8.660004615783691
    6. 'xim' → logprob: -8.785004615783691
    7. 'ched' → logprob: -10.660004615783691
    8. '_che' → logprob: -10.910004615783691
    9. 'visionnement' → logprob: -11.160004615783691
    10. 'x' → logprob: -11.660004615783691

Token 124: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.12750427424907684
    2. ':' → logprob: -2.752504348754883
    3. 'def' → logprob: -3.877504348754883
    4. ' ' → logprob: -4.127504348754883
    5. ' =' → logprob: -5.252504348754883
    6. ' #' → logprob: -5.252504348754883
    7. '#' → logprob: -5.252504348754883
    8. ' :
' → logprob: -7.127504348754883
    9. ' ' → logprob: -7.127504348754883
    10. ' def' → logprob: -7.627504348754883

Token 125: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28514787554740906
    2. '#' → logprob: -1.7851479053497314
    3. ' #' → logprob: -3.1601479053497314
    4. ' def' → logprob: -3.6601479053497314
    5. 'from' → logprob: -5.535147666931152
    6. ' On' → logprob: -6.035147666931152
    7. 'On' → logprob: -7.035147666931152
    8. 'positions' → logprob: -7.285147666931152
    9. ' from' → logprob: -7.535147666931152
    10. 'position' → logprob: -7.785147666931152

Token 126: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4369160532951355
    2. '#' → logprob: -1.5619161128997803
    3. ' def' → logprob: -2.8119161128997803
    4. ' #' → logprob: -3.4369161128997803
    5. ' On' → logprob: -3.6869161128997803
    6. 'from' → logprob: -4.686915874481201
    7. 'On' → logprob: -4.811915874481201
    8. ' Util' → logprob: -5.936915874481201
    9. ' from' → logprob: -6.061915874481201
    10. 'Util' → logprob: -7.436915874481201

Token 127: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.9073307514190674
    2. ' On' → logprob: -1.5323307514190674
    3. 'Initial' → logprob: -2.5323307514190674
    4. '#' → logprob: -2.7823307514190674
    5. 'Util' → logprob: -3.0323307514190674
    6. ' Util' → logprob: -3.6573307514190674
    7. 'Lire' → logprob: -3.6573307514190674
    8. ' on' → logprob: -3.7823307514190674
    9. 'Sim' → logprob: -4.032330513000488
    10. 'def' → logprob: -4.032330513000488

Token 128: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05082860589027405
    2. ' def' → logprob: -4.175828456878662
    3. 'd' → logprob: -4.925828456878662
    4. 'r' → logprob: -5.550828456878662
    5. ' déf' → logprob: -5.800828456878662
    6. 'dé' → logprob: -5.925828456878662
    7. ' prend' → logprob: -6.550828456878662
    8. '#' → logprob: -6.675828456878662
    9. ' va' → logprob: -7.175828456878662
    10. ' met' → logprob: -7.175828456878662

Token 129: 'él' (ID: 6778)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -1.0121285915374756
    2. 'if' → logprob: -1.7621285915374756
    3. 'é' → logprob: -1.8871285915374756
    4. '#' → logprob: -2.3871285915374756
    5. 'è' → logprob: -2.7621285915374756
    6. 'él' → logprob: -2.8871285915374756
    7. 'èle' → logprob: -3.1371285915374756
    8. 'ifié' → logprob: -3.5121285915374756
    9. 'i' → logprob: -5.262128829956055
    10. 'éf' → logprob: -5.387128829956055

Token 130: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.07662442326545715
    2. 'is' → logprob: -3.2016243934631348
    3. 'isé' → logprob: -3.5766243934631348
    4. 'iser' → logprob: -5.826624393463135
    5. 'é' → logprob: -7.076624393463135
    6. 'él' → logprob: -7.826624393463135
    7. 'isée' → logprob: -7.951624393463135
    8. 'i' → logprob: -9.201624870300293
    9. 'isent' → logprob: -9.326624870300293
    10. 'er' → logprob: -9.451624870300293

Token 131: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3672897219657898
    2. ' la' → logprob: -1.4922897815704346
    3. ' le' → logprob: -3.4922897815704346
    4. 'les' → logprob: -3.6172897815704346
    5. ' chaque' → logprob: -4.8672895431518555
    6. ' ' → logprob: -5.1172895431518555
    7. ' l' → logprob: -5.1172895431518555
    8. 'la' → logprob: -6.3672895431518555
    9. ' une' → logprob: -6.7422895431518555
    10. 'le' → logprob: -6.7422895431518555

Token 132: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13509108126163483
    2. 'e' → logprob: -2.1350910663604736
    3. ''état' → logprob: -6.260091304779053
    4. ''' → logprob: -6.510091304779053
    5. ''ensemble' → logprob: -6.760091304779053
    6. ''ordre' → logprob: -7.010091304779053
    7. 'es' → logprob: -7.385091304779053
    8. ''a' → logprob: -7.885091304779053
    9. ''espace' → logprob: -8.135090827941895
    10. ' a' → logprob: -8.135090827941895

Token 133: ' par' (ID: 686)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12106658518314362
    2. ' ' → logprob: -3.3710665702819824
    3. ' initial' → logprob: -3.3710665702819824
    4. ' de' → logprob: -3.9960665702819824
    5. ' du' → logprob: -4.371066570281982
    6. ' #' → logprob: -5.371066570281982
    7. '#' → logprob: -5.871066570281982
    8. 's' → logprob: -6.496066570281982
    9. ' d' → logprob: -6.871066570281982
    10. ':' → logprob: -7.246066570281982

Token 134: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1793415546417236
    2. ' deux' → logprob: -1.9293415546417236
    3. ' les' → logprob: -2.1793415546417236
    4. ' une' → logprob: -2.3043415546417236
    5. ' l' → logprob: -2.4293415546417236
    6. 'les' → logprob: -2.6793415546417236
    7. ' ' → logprob: -3.1793415546417236
    8. ' un' → logprob: -3.8043415546417236
    9. ' (' → logprob: -4.0543413162231445
    10. 'une' → logprob: -4.0543413162231445

Token 135: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.28156495094299316
    2. ' position' → logprob: -2.281564950942993
    3. 'pos' → logprob: -3.406564950942993
    4. 'tuple' → logprob: -3.406564950942993
    5. 'p' → logprob: -4.031564712524414
    6. 'positions' → logprob: -4.156564712524414
    7. ' tuple' → logprob: -4.781564712524414
    8. 'liste' → logprob: -5.031564712524414
    9. ' liste' → logprob: -5.406564712524414
    10. ' paire' → logprob: -5.531564712524414

Token 136: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3811646103858948
    2. 's' → logprob: -1.38116455078125
    3. 'des' → logprob: -3.75616455078125
    4. ' ' → logprob: -4.13116455078125
    5. ' actuelle' → logprob: -5.13116455078125
    6. ' #' → logprob: -5.38116455078125
    7. '_des' → logprob: -5.75616455078125
    8. '#' → logprob: -6.25616455078125
    9. ' de' → logprob: -6.38116455078125
    10. ' du' → logprob: -6.63116455078125

Token 137: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32312342524528503
    2. ' pied' → logprob: -1.3231234550476074
    3. ' gauche' → logprob: -6.323123455047607
    4. ' ' → logprob: -6.823123455047607
    5. ' premier' → logprob: -6.823123455047607
    6. ' dernier' → logprob: -6.823123455047607
    7. 'prem' → logprob: -7.260623455047607
    8. '#' → logprob: -7.323123455047607
    9. 'dern' → logprob: -7.823123455047607
    10. 'g' → logprob: -7.885623455047607

Token 138: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.5348101258277893
    2. '_' → logprob: -1.2848100662231445
    3. '_g' → logprob: -2.2848100662231445
    4. 'g' → logprob: -3.9098100662231445
    5. ' _' → logprob: -5.2848100662231445
    6. ' ' → logprob: -6.0348100662231445
    7. 's' → logprob: -6.2848100662231445
    8. ' droit' → logprob: -6.6598100662231445
    9. '_d' → logprob: -6.7848100662231445
    10. '_left' → logprob: -7.4098100662231445

Token 139: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45060184597969055
    2. ' ,' → logprob: -1.0756018161773682
    3. ' et' → logprob: -5.575602054595947
    4. ' gauche' → logprob: -5.825602054595947
    5. 'g' → logprob: -6.075602054595947
    6. 's' → logprob: -6.075602054595947
    7. ' ' → logprob: -6.200602054595947
    8. '_' → logprob: -6.325602054595947
    9. '_g' → logprob: -6.575602054595947
    10. '_,' → logprob: -6.700602054595947

Token 140: ' du' (ID: 1462)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1778805255889893
    2. ' celle' → logprob: -1.6778805255889893
    3. '#' → logprob: -1.8028805255889893
    4. 'du' → logprob: -2.0528805255889893
    5. ' du' → logprob: -2.0528805255889893
    6. 'cel' → logprob: -4.30288028717041
    7. ' le' → logprob: -4.30288028717041
    8. ' pied' → logprob: -4.30288028717041
    9. 'celle' → logprob: -4.42788028717041
    10. 'la' → logprob: -4.80288028717041

Token 141: ' pied' (ID: 20242)
  Prédit: ' pied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pied' → logprob: -0.013439733535051346
    2. 'p' → logprob: -4.513439655303955
    3. ' droit' → logprob: -6.513439655303955
    4. ' pieds' → logprob: -8.263440132141113
    5. ' droite' → logprob: -8.263440132141113
    6. 'foot' → logprob: -9.763440132141113
    7. ' ' → logprob: -9.763440132141113
    8. '#' → logprob: -9.888440132141113
    9. ' ' → logprob: -9.888440132141113
    10. 'right' → logprob: -10.513440132141113

Token 142: ' droit' (ID: 29964)
  Prédit: ' droit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.08000251650810242
    2. 'd' → logprob: -2.705002546310425
    3. 'dro' → logprob: -4.830002307891846
    4. ' droite' → logprob: -7.330002307891846
    5. 'right' → logprob: -7.830002307891846
    6. ' ' → logprob: -8.205002784729004
    7. '_d' → logprob: -8.330002784729004
    8. '_' → logprob: -8.580002784729004
    9. ' ' → logprob: -9.705002784729004
    10. ' droits' → logprob: -9.830002784729004

Token 143: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24442158639431
    2. '#' → logprob: -1.8694216012954712
    3. '.' → logprob: -3.4944214820861816
    4. 's' → logprob: -5.119421482086182
    5. ':' → logprob: -5.369421482086182
    6. ' ,' → logprob: -5.619421482086182
    7. ',
' → logprob: -5.619421482086182
    8. ' #' → logprob: -5.869421482086182
    9. 'positions' → logprob: -6.494421482086182
    10. ' ' → logprob: -6.619421482086182

Token 144: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10365837067365646
    2. '#' → logprob: -2.478658437728882
    3. ' def' → logprob: -6.228658199310303
    4. 'positions' → logprob: -6.228658199310303
    5. 'L' → logprob: -6.353658199310303
    6. ' #' → logprob: -6.728658199310303
    7. 'from' → logprob: -6.728658199310303
    8. 'class' → logprob: -6.853658199310303
    9. 'position' → logprob: -7.103658199310303
    10. ',' → logprob: -7.103658199310303

Token 145: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20840288698673248
    2. '#' → logprob: -1.9584028720855713
    3. 'positions' → logprob: -3.7084028720855713
    4. 'from' → logprob: -4.45840311050415
    5. 'class' → logprob: -5.95840311050415
    6. 'import' → logprob: -6.08340311050415
    7. ' #' → logprob: -6.83340311050415
    8. ' def' → logprob: -6.95840311050415
    9. 'position' → logprob: -6.95840311050415
    10. 'states' → logprob: -7.83340311050415

Token 146: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9959364533424377
    2. 'from' → logprob: -1.245936393737793
    3. 'On' → logprob: -1.870936393737793
    4. ' On' → logprob: -2.120936393737793
    5. 'def' → logprob: -3.870936393737793
    6. 'import' → logprob: -4.245936393737793
    7. ' from' → logprob: -4.370936393737793
    8. ' #' → logprob: -4.870936393737793
    9. 'Initial' → logprob: -5.745936393737793
    10. 'Util' → logprob: -6.245936393737793

Token 147: ' essa' (ID: 19417)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.7668964862823486
    2. 'pe' → logprob: -2.2668964862823486
    3. '#' → logprob: -2.5168964862823486
    4. ' explore' → logprob: -3.1418964862823486
    5. 'cherche' → logprob: -3.1418964862823486
    6. 'util' → logprob: -3.6418964862823486
    7. ' essa' → logprob: -3.6418964862823486
    8. 'impl' → logprob: -3.8918964862823486
    9. 'def' → logprob: -4.1418962478637695
    10. 'v' → logprob: -4.1418962478637695

Token 148: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.07105948776006699
    2. 'y' → logprob: -2.946059465408325
    3. 'ye' → logprob: -4.321059703826904
    4. 'i' → logprob: -6.696059703826904
    5. 'yer' → logprob: -7.196059703826904
    6. 'ime' → logprob: -8.446059226989746
    7. 'iye' → logprob: -9.571059226989746
    8. '\' → logprob: -10.196059226989746
    9. 'e' → logprob: -10.321059226989746
    10. 'aye' → logprob: -10.321059226989746

Token 149: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6102187037467957
    2. ' toutes' → logprob: -1.3602187633514404
    3. ' d' → logprob: -1.9852187633514404
    4. '_' → logprob: -3.8602187633514404
    5. ' chaque' → logprob: -3.9852187633514404
    6. ' tous' → logprob: -4.735218524932861
    7. ' ' → logprob: -5.610218524932861
    8. 't' → logprob: -6.235218524932861
    9. 'd' → logprob: -6.360218524932861
    10. 'de' → logprob: -6.860218524932861

Token 150: ''app' (ID: 41670)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8921713829040527
    2. 'e' → logprob: -1.1421713829040527
    3. 'eterm' → logprob: -2.7671713829040527
    4. 'p' → logprob: -3.7671713829040527
    5. 'o' → logprob: -3.8921713829040527
    6. 'ec' → logprob: -4.142171382904053
    7. 'es' → logprob: -4.267171382904053
    8. 'éc' → logprob: -4.267171382904053
    9. 'expl' → logprob: -4.517171382904053
    10. 'eux' → logprob: -4.892171382904053

Token 151: 'uyer' (ID: 78614)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.37214553356170654
    2. 'li' → logprob: -2.247145652770996
    3. 'ly' → logprob: -2.247145652770996
    4. 'r' → logprob: -3.747145652770996
    5. 'l' → logprob: -3.997145652770996
    6. 'or' → logprob: -4.747145652770996
    7. 'lier' → logprob: -5.309645652770996
    8. 'rof' → logprob: -5.559645652770996
    9. 'ar' → logprob: -5.997145652770996
    10. 'o' → logprob: -6.184645652770996

Token 152: ' chaque' (ID: 21194)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.3359886407852173
    2. ' ' → logprob: -1.3359886407852173
    3. 'sur' → logprob: -3.8359885215759277
    4. 'r' → logprob: -8.335988998413086
    5. '_' → logprob: -8.585988998413086
    6. 's' → logprob: -9.210988998413086
    7. ' ' → logprob: -9.460988998413086
    8. 'er' → logprob: -9.835988998413086
    9. '_sur' → logprob: -10.085988998413086
    10. '  ' → logprob: -10.585988998413086

Token 153: ' fl' (ID: 1548)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5116667747497559
    2. ' fl' → logprob: -2.386666774749756
    3. ' pas' → logprob: -2.636666774749756
    4. 'pas' → logprob: -3.011666774749756
    5. 'arrow' → logprob: -3.636666774749756
    6. ' arrow' → logprob: -4.011666774749756
    7. ' pied' → logprob: -4.136666774749756
    8. ' panneau' → logprob: -4.761666774749756
    9. 'position' → logprob: -4.886666774749756
    10. ' position' → logprob: -4.886666774749756

Token 154: 'èche' (ID: 93804)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30540162324905396
    2. 'èche' → logprob: -1.4304015636444092
    3. 'è' → logprob: -3.930401563644409
    4. 'êche' → logprob: -6.055401802062988
    5. 'é' → logprob: -7.680401802062988
    6. 'ec' → logprob: -7.930401802062988
    7. 'ech' → logprob: -8.055401802062988
    8. 'o' → logprob: -9.055401802062988
    9. 'et' → logprob: -9.180401802062988
    10. 'eu' → logprob: -9.430401802062988

Token 155: ' avec' (ID: 3937)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.051019053906202316
    2. ' ' → logprob: -4.426019191741943
    3. ' suivant' → logprob: -5.176019191741943
    4. ',' → logprob: -5.176019191741943
    5. ' possible' → logprob: -5.551019191741943
    6. ' #' → logprob: -5.801019191741943
    7. 'possible' → logprob: -5.801019191741943
    8. 'su' → logprob: -6.301019191741943
    9. '_' → logprob: -6.426019191741943
    10. ' '' → logprob: -6.676019191741943

Token 156: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3615496754646301
    2. 'le' → logprob: -1.2365496158599854
    3. ' chaque' → logprob: -5.6115498542785645
    4. ' pied' → logprob: -5.7365498542785645
    5. 'p' → logprob: -6.8615498542785645
    6. ' la' → logprob: -6.9865498542785645
    7. ' #' → logprob: -7.3615498542785645
    8. ' ' → logprob: -7.6115498542785645
    9. '#' → logprob: -7.6115498542785645
    10. ' gauche' → logprob: -7.8615498542785645

Token 157: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5302137732505798
    2. ' pied' → logprob: -1.1552138328552246
    3. ' des' → logprob: -2.6552138328552246
    4. ' ' → logprob: -4.905213832855225
    5. ' nouveau' → logprob: -4.905213832855225
    6. ' pas' → logprob: -6.405213832855225
    7. 'des' → logprob: -6.655213832855225
    8. ' pieds' → logprob: -6.717713832855225
    9. 'pas' → logprob: -7.655213832855225
    10. ' gauche' → logprob: -7.842713832855225

Token 158: ' altern' (ID: 7310)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35619470477104187
    2. ',' → logprob: -1.4811947345733643
    3. ' ,' → logprob: -3.3561947345733643
    4. ' ' → logprob: -4.231194496154785
    5. '_g' → logprob: -5.231194496154785
    6. ' gauche' → logprob: -5.731194496154785
    7. ' _' → logprob: -5.856194496154785
    8. ' #' → logprob: -6.106194496154785
    9. '.' → logprob: -6.231194496154785
    10. '_,' → logprob: -7.106194496154785

Token 159: 'é' (ID: 377)
  Prédit: 'ativement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ativement' → logprob: -0.7806570529937744
    2. 'é' → logprob: -1.2806570529937744
    3. 'ant' → logprob: -1.6556570529937744
    4. 'e' → logprob: -3.4056570529937744
    5. 'atif' → logprob: -4.530656814575195
    6. 'at' → logprob: -4.905656814575195
    7. 'ément' → logprob: -5.155656814575195
    8. 'a' → logprob: -5.155656814575195
    9. 'ent' → logprob: -5.280656814575195
    10. 'er' → logprob: -6.280656814575195

Token 160: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7432731986045837
    2. '#' → logprob: -1.7432732582092285
    3. 'def' → logprob: -2.2432732582092285
    4. ':' → logprob: -2.4932732582092285
    5. '_' → logprob: -2.9932732582092285
    6. ' ' → logprob: -3.1182732582092285
    7. '.' → logprob: -3.4932732582092285
    8. ' ,' → logprob: -5.2432732582092285
    9. 's' → logprob: -5.4932732582092285
    10. '
' → logprob: -5.9932732582092285

Token 161: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18265676498413086
    2. 'def' → logprob: -2.182656764984131
    3. ',' → logprob: -3.682656764984131
    4. '.' → logprob: -4.432656764984131
    5. 'from' → logprob: -6.057656764984131
    6. ' #' → logprob: -6.057656764984131
    7. ' ' → logprob: -6.182656764984131
    8. ''' → logprob: -6.182656764984131
    9. ')' → logprob: -6.557656764984131
    10. '<|end|>' → logprob: -7.182656764984131

Token 162: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4281978905200958
    2. 'def' → logprob: -1.4281978607177734
    3. '<|end|>' → logprob: -3.4281978607177734
    4. ' ' → logprob: -4.303197860717773
    5. ' 
' → logprob: -4.553197860717773
    6. ' #' → logprob: -4.928197860717773
    7. '[' → logprob: -5.178197860717773
    8. ',' → logprob: -5.428197860717773
    9. '.' → logprob: -5.928197860717773
    10. '\' → logprob: -6.053197860717773

Token 163: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5145759582519531
    2. 'On' → logprob: -1.3895759582519531
    3. 'from' → logprob: -2.639575958251953
    4. ' On' → logprob: -3.014575958251953
    5. 'def' → logprob: -4.764575958251953
    6. ' #' → logprob: -5.264575958251953
    7. 'Pour' → logprob: -5.514575958251953
    8. 'import' → logprob: -5.764575958251953
    9. 'Si' → logprob: -5.889575958251953
    10. ' from' → logprob: -6.139575958251953

Token 164: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0164306852966547
    2. 'cha' → logprob: -4.266430854797363
    3. ' cha' → logprob: -8.141430854797363
    4. ' each' → logprob: -8.141430854797363
    5. ' chacune' → logprob: -8.391430854797363
    6. 'ch' → logprob: -8.516430854797363
    7. 'each' → logprob: -8.766430854797363
    8. ' éviter' → logprob: -8.891430854797363
    9. '#' → logprob: -8.891430854797363
    10. ' ' → logprob: -9.016430854797363

Token 165: ' étape' (ID: 83661)
  Prédit: ' fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fl' → logprob: -0.3056910037994385
    2. ' mouvement' → logprob: -2.9306910037994385
    3. ' état' → logprob: -3.5556910037994385
    4. ' étape' → logprob: -3.5556910037994385
    5. ' pas' → logprob: -3.6806910037994385
    6. 'ét' → logprob: -4.180690765380859
    7. ' déplacement' → logprob: -4.305690765380859
    8. 'fl' → logprob: -4.305690765380859
    9. ' position' → logprob: -4.430690765380859
    10. 'position' → logprob: -4.680690765380859

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0491081103682518
    2. ' ,' → logprob: -3.0491080284118652
    3. ' ' → logprob: -8.799108505249023
    4. '#' → logprob: -9.299108505249023
    5. ':' → logprob: -9.549108505249023
    6. ' suivante' → logprob: -9.674108505249023
    7. ' on' → logprob: -10.299108505249023
    8. ',
' → logprob: -10.549108505249023
    9. ' #' → logprob: -10.674108505249023
    10. ' de' → logprob: -10.799108505249023

Token 167: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.026852747425436974
    2. 'on' → logprob: -4.151852607727051
    3. '#' → logprob: -4.901852607727051
    4. ' #' → logprob: -6.651852607727051
    5. ' vérifier' → logprob: -6.651852607727051
    6. ' if' → logprob: -8.40185260772705
    7. ' si' → logprob: -9.27685260772705
    8. ' ' → logprob: -9.65185260772705
    9. ' il' → logprob: -9.90185260772705
    10. ' for' → logprob: -10.15185260772705

Token 168: ' teste' (ID: 62670)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9254885315895081
    2. ' essa' → logprob: -1.6754884719848633
    3. ' vér' → logprob: -1.9254884719848633
    4. ' teste' → logprob: -2.1754884719848633
    5. 'teste' → logprob: -3.1754884719848633
    6. 'expl' → logprob: -3.5504884719848633
    7. 'essa' → logprob: -4.050488471984863
    8. ' tente' → logprob: -4.050488471984863
    9. 'cherche' → logprob: -4.300488471984863
    10. ' explore' → logprob: -4.550488471984863

Token 169: ' toutes' (ID: 17502)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5647034049034119
    2. ' toutes' → logprob: -1.3147034645080566
    3. ' if' → logprob: -1.9397034645080566
    4. ' la' → logprob: -5.064703464508057
    5. 'si' → logprob: -5.439703464508057
    6. 'if' → logprob: -6.314703464508057
    7. 't' → logprob: -6.564703464508057
    8. ' les' → logprob: -6.814703464508057
    9. ' tous' → logprob: -6.814703464508057
    10. ' chaque' → logprob: -7.314703464508057

Token 170: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2350369393825531
    2. 'les' → logprob: -1.6100369691848755
    3. ' ' → logprob: -5.860036849975586
    4. 'poss' → logprob: -5.860036849975586
    5. 'positions' → logprob: -6.860036849975586
    6. ' possibilités' → logprob: -7.110036849975586
    7. ' positions' → logprob: -7.485036849975586
    8. '   ' → logprob: -7.860036849975586
    9. ' poss' → logprob: -8.235036849975586
    10. ' comb' → logprob: -8.860036849975586

Token 171: ' comb' (ID: 4134)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.5462998151779175
    2. 'positions' → logprob: -1.0462998151779175
    3. ' positions' → logprob: -3.296299934387207
    4. ' possibilités' → logprob: -4.296299934387207
    5. 'options' → logprob: -5.546299934387207
    6. 'pos' → logprob: -5.921299934387207
    7. ' options' → logprob: -6.171299934387207
    8. 'p' → logprob: -6.296299934387207
    9. ' configurations' → logprob: -6.546299934387207
    10. ' ' → logprob: -6.546299934387207

Token 172: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.08668578416109085
    2. 'ina' → logprob: -3.3366858959198
    3. 'in' → logprob: -3.5866858959198
    4. '#' → logprob: -5.086685657501221
    5. 'inations' → logprob: -5.961685657501221
    6. 'inas' → logprob: -5.961685657501221
    7. 'i' → logprob: -6.211685657501221
    8. '```' → logprob: -7.024185657501221
    9. '_' → logprob: -7.149185657501221
    10. '``' → logprob: -7.211685657501221

Token 173: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.05622049793601036
    2. 'sons' → logprob: -3.181220531463623
    3. 'ais' → logprob: -4.681220531463623
    4. 'asons' → logprob: -7.306220531463623
    5. 'son' → logprob: -7.306220531463623
    6. 'a' → logprob: -7.431220531463623
    7. '#' → logprob: -7.556220531463623
    8. 'on' → logprob: -8.181220054626465
    9. 's' → logprob: -8.556220054626465
    10. '{"' → logprob: -9.306220054626465

Token 174: ' possibles' (ID: 97753)
  Prédit: ' possibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.1660875678062439
    2. 'poss' → logprob: -2.4160876274108887
    3. 'possible' → logprob: -3.7910876274108887
    4. ' possible' → logprob: -3.9160876274108887
    5. ' suivantes' → logprob: -5.541087627410889
    6. ' de' → logprob: -5.541087627410889
    7. '_possible' → logprob: -5.916087627410889
    8. 's' → logprob: -6.041087627410889
    9. ' poss' → logprob: -6.416087627410889
    10. '_' → logprob: -6.791087627410889

Token 175: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8284797072410583
    2. ' possibles' → logprob: -2.078479766845703
    3. ' possible' → logprob: -2.203479766845703
    4. 's' → logprob: -3.078479766845703
    5. '#' → logprob: -3.078479766845703
    6. 'possible' → logprob: -3.203479766845703
    7. ':' → logprob: -3.453479766845703
    8. '.' → logprob: -3.578479766845703
    9. '_' → logprob: -3.953479766845703
    10. ' ' → logprob: -4.203479766845703

Token 176: ''état' (ID: 116357)
  Prédit: ' app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.3006053566932678
    2. ''app' → logprob: -2.800605297088623
    3. ' positions' → logprob: -3.175605297088623
    4. 'p' → logprob: -3.425605297088623
    5. 'app' → logprob: -3.550605297088623
    6. 'e' → logprob: -4.300605297088623
    7. ' l' → logprob: -4.550605297088623
    8. ' placement' → logprob: -4.550605297088623
    9. ' pieds' → logprob: -4.800605297088623
    10. ' position' → logprob: -5.175605297088623

Token 177: ' compatibles' (ID: 168779)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3672714233398438
    2. 'def' → logprob: -1.4922714233398438
    3. ',' → logprob: -1.7422714233398438
    4. '#' → logprob: -2.1172714233398438
    5. 'import' → logprob: -3.1172714233398438
    6. ' ' → logprob: -3.2422714233398438
    7. ' ,' → logprob: -3.9922714233398438
    8. ' possible' → logprob: -4.367271423339844
    9. ':' → logprob: -4.617271423339844
    10. '.' → logprob: -4.617271423339844

Token 178: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1598171889781952
    2. ',' → logprob: -2.7848172187805176
    3. ' avec' → logprob: -3.6598172187805176
    4. ' suivantes' → logprob: -3.9098172187805176
    5. '#' → logprob: -4.534817218780518
    6. '.' → logprob: -4.784817218780518
    7. 'es' → logprob: -5.409817218780518
    8. 'with' → logprob: -5.534817218780518
    9. 'avec' → logprob: -5.784817218780518
    10. ':' → logprob: -6.534817218780518

Token 179: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2259111851453781
    2. '#' → logprob: -2.6009111404418945
    3. ' 
' → logprob: -4.3509111404418945
    4. ',' → logprob: -4.3509111404418945
    5. '\' → logprob: -4.4759111404418945
    6. ' ' → logprob: -4.6009111404418945
    7. 's' → logprob: -4.7259111404418945
    8. '
' → logprob: -4.7259111404418945
    9. 'import' → logprob: -4.7259111404418945
    10. '  
' → logprob: -5.2259111404418945

Token 181: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5949236154556274
    2. 'from' → logprob: -1.0949236154556274
    3. 'def' → logprob: -2.844923496246338
    4. 'On' → logprob: -3.844923496246338
    5. ' #' → logprob: -4.344923496246338
    6. 'import' → logprob: -4.844923496246338
    7. ' from' → logprob: -4.969923496246338
    8. ' On' → logprob: -7.219923496246338
    9. 'Pour' → logprob: -7.219923496246338
    10. 'for' → logprob: -7.594923496246338

Token 182: ' utilise' (ID: 70283)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.2035088539123535
    2. ' continue' → logprob: -1.5785088539123535
    3. 'continue' → logprob: -1.7035088539123535
    4. ' explore' → logprob: -2.3285088539123535
    5. 'pr' → logprob: -2.8285088539123535
    6. 'impl' → logprob: -3.5785088539123535
    7. ' stock' → logprob: -4.4535088539123535
    8. ' filtre' → logprob: -4.4535088539123535
    9. ' utilise' → logprob: -4.7035088539123535
    10. 'p' → logprob: -4.7035088539123535

Token 183: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6943216919898987
    2. ' un' → logprob: -1.194321632385254
    3. 'une' → logprob: -2.069321632385254
    4. 'un' → logprob: -3.319321632385254
    5. ' la' → logprob: -3.819321632385254
    6. 'la' → logprob: -5.069321632385254
    7. ' du' → logprob: -6.694321632385254
    8. ' programmation' → logprob: -6.819321632385254
    9. ' dynamic' → logprob: -6.944321632385254
    10. 'du' → logprob: -7.069321632385254

Token 184: ' cod' (ID: 26163)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.7342100143432617
    2. ' ensemble' → logprob: -1.3592100143432617
    3. 'e' → logprob: -2.6092100143432617
    4. 'set' → logprob: -3.2342100143432617
    5. ' set' → logprob: -3.2342100143432617
    6. ' diction' → logprob: -3.7342100143432617
    7. 'd' → logprob: -4.109210014343262
    8. ' tableau' → logprob: -4.359210014343262
    9. 'ense' → logprob: -4.984210014343262
    10. ' programme' → logprob: -5.109210014343262

Token 185: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006075029727071524
    2. 'age' → logprob: -5.131074905395508
    3. 'é' → logprob: -9.381074905395508
    4. 'es' → logprob: -11.381074905395508
    5. ' e' → logprob: -11.381074905395508
    6. 'ed' → logprob: -11.506074905395508
    7. '```' → logprob: -12.381074905395508
    8. 'ing' → logprob: -13.256074905395508
    9. 'a' → logprob: -13.381074905395508
    10. '(e' → logprob: -13.693574905395508

Token 186: ' efficace' (ID: 54338)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9343597888946533
    2. 'b' → logprob: -1.3093597888946533
    3. ' des' → logprob: -1.4343597888946533
    4. 'des' → logprob: -3.4343597888946533
    5. 'bit' → logprob: -4.434359550476074
    6. '_b' → logprob: -4.809359550476074
    7. ' bit' → logprob: -5.309359550476074
    8. ' en' → logprob: -5.559359550476074
    9. ' ' → logprob: -5.559359550476074
    10. 'd' → logprob: -5.684359550476074

Token 187: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5853020548820496
    2. '<|end|>' → logprob: -1.5853021144866943
    3. ')' → logprob: -2.5853021144866943
    4. ',' → logprob: -3.0853021144866943
    5. 'def' → logprob: -3.8353021144866943
    6. 's' → logprob: -3.9603021144866943
    7. '#' → logprob: -4.335301876068115
    8. ' ' → logprob: -4.710301876068115
    9. '<|end|>' → logprob: -4.835301876068115
    10. ' des' → logprob: -5.210301876068115

Token 188: ' sets' (ID: 11982)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9637042880058289
    2. ' un' → logprob: -1.3387043476104736
    3. 'bit' → logprob: -1.3387043476104736
    4. ' bit' → logprob: -3.9637043476104736
    5. 'dp' → logprob: -4.2137041091918945
    6. 'une' → logprob: -4.4637041091918945
    7. 'bits' → logprob: -4.9637041091918945
    8. ' une' → logprob: -5.0887041091918945
    9. 'set' → logprob: -5.4637041091918945
    10. 'dict' → logprob: -5.7137041091918945

Token 189: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8251945376396179
    2. '#' → logprob: -1.7001945972442627
    3. 'def' → logprob: -2.3251945972442627
    4. ' ' → logprob: -2.8251945972442627
    5. '
' → logprob: -2.9501945972442627
    6. ',' → logprob: -3.3251945972442627
    7. 'import' → logprob: -3.7001945972442627
    8. 'es' → logprob: -3.8251945972442627
    9. '_' → logprob: -4.575194358825684
    10. ':' → logprob: -4.825194358825684

Token 190: ' gérer' (ID: 86786)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5134332776069641
    2. ' gérer' → logprob: -2.0134332180023193
    3. ' mém' → logprob: -2.8884332180023193
    4. ' représ' → logprob: -3.3884332180023193
    5. ' conserver' → logprob: -3.5134332180023193
    6. 'su' → logprob: -3.6384332180023193
    7. 'stock' → logprob: -3.8884332180023193
    8. ' éviter' → logprob: -4.138433456420898
    9. ' garder' → logprob: -4.263433456420898
    10. ' suivre' → logprob: -4.513433456420898

Token 191: ' jusqu' (ID: 21961)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0729866698384285
    2. ' la' → logprob: -3.572986602783203
    3. 'les' → logprob: -3.822986602783203
    4. ' l' → logprob: -4.072986602783203
    5. ' efficacement' → logprob: -7.072986602783203
    6. ' states' → logprob: -7.697986602783203
    7. 'l' → logprob: -7.947986602783203
    8. 'la' → logprob: -8.072986602783203
    9. ' toutes' → logprob: -8.197986602783203
    10. ' ' → logprob: -8.322986602783203

Token 192: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.007091138511896133
    2. 'à' → logprob: -5.632091045379639
    3. '’à' → logprob: -6.257091045379639
    4. ' à' → logprob: -7.007091045379639
    5. 'a' → logprob: -8.507091522216797
    6. ''a' → logprob: -8.632091522216797
    7. ''' → logprob: -9.132091522216797
    8. ''au' → logprob: -9.507091522216797
    9. '```' → logprob: -11.007091522216797
    10. 'e' → logprob: -11.007091522216797

Token 193: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5385752320289612
    2. '100' → logprob: -1.2885751724243164
    3. ' ' → logprob: -2.5385751724243164
    4. '200' → logprob: -3.5385751724243164
    5. '500' → logprob: -4.038575172424316
    6. '300' → logprob: -5.663575172424316
    7. '250' → logprob: -5.663575172424316
    8. '2' → logprob: -6.663575172424316
    9. '50' → logprob: -6.788575172424316
    10. '400' → logprob: -6.788575172424316

Token 194: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38295865058898926
    2. '100' → logprob: -1.2579586505889893
    3. '200' → logprob: -3.8829586505889893
    4. '500' → logprob: -5.13295841217041
    5. '300' → logprob: -6.13295841217041
    6. '20' → logprob: -6.75795841217041
    7. '250' → logprob: -6.75795841217041
    8. '2' → logprob: -7.13295841217041
    9. '50' → logprob: -7.50795841217041
    10. '400' → logprob: -8.13295841217041

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5387699604034424
    2. '#' → logprob: -1.7887699604034424
    3. 's' → logprob: -2.2887699604034424
    4. ')' → logprob: -3.9137699604034424
    5. '%' → logprob: -4.038769721984863
    6. 'states' → logprob: -4.413769721984863
    7. ' states' → logprob: -4.663769721984863
    8. 'def' → logprob: -5.038769721984863
    9. 'tokens' → logprob: -5.038769721984863
    10. '000' → logprob: -5.163769721984863

Token 196: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45626720786094666
    2. '000' → logprob: -1.081267237663269
    3. 'k' → logprob: -5.081267356872559
    4. '00' → logprob: -5.581267356872559
    5. ' ' → logprob: -5.581267356872559
    6. 'steps' → logprob: -6.331267356872559
    7. '_' → logprob: -6.581267356872559
    8. ' steps' → logprob: -6.581267356872559
    9. ' sequences' → logprob: -6.581267356872559
    10. 's' → logprob: -7.081267356872559

Token 197: ' caractères' (ID: 183106)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9501451253890991
    2. '0' → logprob: -2.2001452445983887
    3. ')' → logprob: -2.3251452445983887
    4. 'positions' → logprob: -2.5751452445983887
    5. ',' → logprob: -2.7001452445983887
    6. '<|end|>' → logprob: -2.7001452445983887
    7. ' caractères' → logprob: -2.8251452445983887
    8. ' ' → logprob: -3.0751452445983887
    9. ' steps' → logprob: -3.7001452445983887
    10. 'tokens' → logprob: -3.8251452445983887

Token 198: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9252378344535828
    2. 's' → logprob: -1.9252378940582275
    3. '<|end|>' → logprob: -1.9252378940582275
    4. ',' → logprob: -2.6752378940582275
    5. '#' → logprob: -2.8002378940582275
    6. '
' → logprob: -2.9252378940582275
    7. ':' → logprob: -3.3002378940582275
    8. ' ' → logprob: -4.175237655639648
    9. 'def' → logprob: -4.550237655639648
    10. ')' → logprob: -4.550237655639648

Token 199: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0941773653030396
    2. 'def' → logprob: -1.7191773653030396
    3. ':' → logprob: -1.8441773653030396
    4. '_' → logprob: -2.34417724609375
    5. ',' → logprob: -2.71917724609375
    6. 's' → logprob: -2.96917724609375
    7. '
' → logprob: -3.96917724609375
    8. ' ' → logprob: -4.59417724609375
    9. '.' → logprob: -4.71917724609375
    10. '<|end|>' → logprob: -4.84417724609375

Token 200: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053583621978759766
    2. 'import' → logprob: -4.05358362197876
    3. '#' → logprob: -4.42858362197876
    4. 's' → logprob: -5.17858362197876
    5. 'n' → logprob: -5.67858362197876
    6. '```' → logprob: -6.05358362197876
    7. ' def' → logprob: -6.17858362197876
    8. ' 
' → logprob: -6.55358362197876
    9. '\' → logprob: -6.55358362197876
    10. '
' → logprob: -6.80358362197876

Token 201: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3549794554710388
    2. 'from' → logprob: -1.2299795150756836
    3. 'import' → logprob: -5.604979515075684
    4. ' def' → logprob: -6.729979515075684
    5. '#' → logprob: -7.104979515075684
    6. ' from' → logprob: -7.354979515075684
    7. 'states' → logprob: -10.604979515075684
    8. ' states' → logprob: -10.854979515075684
    9. ' import' → logprob: -11.354979515075684
    10. 'Voici' → logprob: -11.479979515075684

Token 202: ' on' (ID: 402)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9402886033058167
    2. ' la' → logprob: -1.1902885437011719
    3. ' on' → logprob: -2.190288543701172
    4. ' une' → logprob: -2.815288543701172
    5. ' ' → logprob: -3.440288543701172
    6. ' l' → logprob: -3.815288543701172
    7. ' possible' → logprob: -3.940288543701172
    8. ' le' → logprob: -4.190288543701172
    9. 'len' → logprob: -4.815288543701172
    10. ' il' → logprob: -5.690288543701172

Token 203: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.1792556047439575
    2. ' trouve' → logprob: -1.4292556047439575
    3. ' arrive' → logprob: -2.179255485534668
    4. 'tr' → logprob: -2.679255485534668
    5. 'par' → logprob: -3.054255485534668
    6. ' par' → logprob: -3.304255485534668
    7. 'arr' → logprob: -3.429255485534668
    8. ' peux' → logprob: -3.554255485534668
    9. ' peut' → logprob: -3.929255485534668
    10. ' atteint' → logprob: -4.304255485534668

Token 204: ' avancer' (ID: 151163)
  Prédit: ' app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.2627846598625183
    2. '_' → logprob: -2.762784719467163
    3. ' atteindre' → logprob: -2.887784719467163
    4. ' ' → logprob: -3.012784719467163
    5. ' continuer' → logprob: -3.762784719467163
    6. ' press' → logprob: -4.762784481048584
    7. ' arriver' → logprob: -5.137784481048584
    8. ' trouver' → logprob: -5.762784481048584
    9. ' terminer' → logprob: -5.887784481048584
    10. ' avancer' → logprob: -6.012784481048584

Token 205: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.621494710445404
    2. ' d' → logprob: -1.8714947700500488
    3. ' ' → logprob: -2.371494770050049
    4. ' dans' → logprob: -2.371494770050049
    5. ' à' → logprob: -3.996494770050049
    6. ' jusqu' → logprob: -3.996494770050049
    7. 'dans' → logprob: -4.121494770050049
    8. ' de' → logprob: -4.121494770050049
    9. 'd' → logprob: -4.621494770050049
    10. ' un' → logprob: -4.871494770050049

Token 206: ''à' (ID: 33688)
  Prédit: ''au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''au' → logprob: -0.5913041830062866
    2. ''à' → logprob: -0.8413041830062866
    3. 'au' → logprob: -4.591304302215576
    4. 'à' → logprob: -6.216304302215576
    5. ' au' → logprob: -7.341304302215576
    6. '’à' → logprob: -7.341304302215576
    7. '’au' → logprob: -7.341304302215576
    8. ''' → logprob: -7.716304302215576
    9. ' à' → logprob: -8.591303825378418
    10. ''a' → logprob: -8.591303825378418

Token 207: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3894028961658478
    2. 'la' → logprob: -1.1394028663635254
    3. 'le' → logprob: -7.264402866363525
    4. 'len' → logprob: -7.389402866363525
    5. 'l' → logprob: -8.139403343200684
    6. ' ' → logprob: -8.389403343200684
    7. ' the' → logprob: -8.764403343200684
    8. ' len' → logprob: -8.889403343200684
    9. 'the' → logprob: -9.014403343200684
    10. ' le' → logprob: -10.014403343200684

Token 208: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.09740433096885681
    2. ' fin' → logprob: -2.4724042415618896
    3. 'f' → logprob: -5.222404479980469
    4. ' ' → logprob: -6.722404479980469
    5. 'n' → logprob: -8.097404479980469
    6. '#' → logprob: -8.472404479980469
    7. '   ' → logprob: -8.847404479980469
    8. 'end' → logprob: -8.847404479980469
    9. 'a' → logprob: -8.847404479980469
    10. 'r' → logprob: -9.472404479980469

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02284100465476513
    2. ' de' → logprob: -4.022840976715088
    3. ' ,' → logprob: -6.897840976715088
    4. 'de' → logprob: -7.147840976715088
    5. ' sans' → logprob: -7.272840976715088
    6. ' du' → logprob: -7.647840976715088
    7. 'sans' → logprob: -7.897840976715088
    8. '#' → logprob: -8.147841453552246
    9. 's' → logprob: -8.272841453552246
    10. ' avec' → logprob: -8.272841453552246

Token 210: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.424396812915802
    2. ' on' → logprob: -1.4243967533111572
    3. ' alors' → logprob: -2.9243967533111572
    4. 'print' → logprob: -4.049396991729736
    5. ' ' → logprob: -4.174396991729736
    6. ' ' → logprob: -4.674396991729736
    7. ' la' → logprob: -5.799396991729736
    8. ' c' → logprob: -6.174396991729736
    9. ' True' → logprob: -6.424396991729736
    10. ' il' → logprob: -7.674396991729736

Token 211: ' retourne' (ID: 178818)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8118916153907776
    2. ' return' → logprob: -2.186891555786133
    3. 'print' → logprob: -2.186891555786133
    4. ' retourne' → logprob: -2.186891555786133
    5. 'return' → logprob: -2.936891555786133
    6. ' ren' → logprob: -3.311891555786133
    7. ' considère' → logprob: -3.311891555786133
    8. ' retourner' → logprob: -3.561891555786133
    9. ' confirme' → logprob: -4.186891555786133
    10. ' peux' → logprob: -4.936891555786133

Token 212: ' "' (ID: 392)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2336377054452896
    2. '"' → logprob: -1.9836376905441284
    3. 'True' → logprob: -3.358637809753418
    4. ' "' → logprob: -3.358637809753418
    5. ' ' → logprob: -7.483637809753418
    6. ''' → logprob: -8.608637809753418
    7. ' ' → logprob: -8.983637809753418
    8. ' V' → logprob: -9.358637809753418
    9. 'v' → logprob: -9.858637809753418
    10. ' true' → logprob: -9.983637809753418

Token 213: 'Yes' (ID: 13022)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.40070608258247375
    2. 'YES' → logprob: -1.9007060527801514
    3. ' O' → logprob: -2.1507060527801514
    4. 'Yes' → logprob: -4.0257062911987305
    5. 'Oui' → logprob: -4.0257062911987305
    6. 'Possible' → logprob: -4.4007062911987305
    7. '"' → logprob: -4.7757062911987305
    8. ' Oui' → logprob: -6.4007062911987305
    9. ' YES' → logprob: -6.5257062911987305
    10. ' Possible' → logprob: -7.4007062911987305

Token 214: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0006434533279389143
    2. '",' → logprob: -8.000643730163574
    3. '".' → logprob: -9.250643730163574
    4. '\n' → logprob: -10.000643730163574
    5. '"#' → logprob: -10.375643730163574
    6. '"
' → logprob: -10.625643730163574
    7. '")' → logprob: -10.750643730163574
    8. '```' → logprob: -11.000643730163574
    9. 'def' → logprob: -11.500643730163574
    10. '"""' → logprob: -11.625643730163574

Token 215: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.015701977536082268
    2. '"' → logprob: -4.765701770782471
    3. 'sin' → logprob: -6.015701770782471
    4. ' "' → logprob: -6.515701770782471
    5. ' else' → logprob: -7.140701770782471
    6. 'else' → logprob: -7.640701770782471
    7. ' autrement' → logprob: -8.015702247619629
    8. ' Sinon' → logprob: -8.265702247619629
    9. 's' → logprob: -8.390702247619629
    10. '```' → logprob: -8.515702247619629

Token 216: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.3493928015232086
    2. '"' → logprob: -1.2243927717208862
    3. ' ' → logprob: -8.099392890930176
    4. '"No' → logprob: -8.099392890930176
    5. ' ' → logprob: -8.849392890930176
    6. ':' → logprob: -10.724392890930176
    7. '\n' → logprob: -10.724392890930176
    8. '#' → logprob: -10.974392890930176
    9. '```' → logprob: -11.099392890930176
    10. '\' → logprob: -11.224392890930176

Token 217: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.023901470005512238
    2. ' No' → logprob: -3.7739014625549316
    3. '"No' → logprob: -7.523901462554932
    4. '"' → logprob: -9.89890193939209
    5. ' ' → logprob: -10.52390193939209
    6. 'NO' → logprob: -10.89890193939209
    7. ' ' → logprob: -12.02390193939209
    8. ' "' → logprob: -12.39890193939209
    9. '_No' → logprob: -13.52390193939209
    10. ''' → logprob: -13.64890193939209

Token 218: '".

' (ID: 12263)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0013375049456954002
    2. '".' → logprob: -7.50133752822876
    3. 'def' → logprob: -8.126337051391602
    4. '."' → logprob: -8.626337051391602
    5. '")' → logprob: -9.626337051391602
    6. '.' → logprob: -9.751337051391602
    7. '":' → logprob: -10.001337051391602
    8. '```' → logprob: -10.376337051391602
    9. ')"' → logprob: -10.376337051391602
    10. '">' → logprob: -10.876337051391602

Token 219: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008822843083180487
    2. 'n' → logprob: -7.875882148742676
    3. ' def' → logprob: -8.875882148742676
    4. 'import' → logprob: -9.375882148742676
    5. '#' → logprob: -9.875882148742676
    6. 'd' → logprob: -9.875882148742676
    7. '\' → logprob: -10.000882148742676
    8. 'from' → logprob: -10.250882148742676
    9. 's' → logprob: -11.375882148742676
    10. '```' → logprob: -11.375882148742676

Token 220: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0002707529056351632
    2. 'sys' → logprob: -8.25027084350586
    3. ' collections' → logprob: -11.62527084350586
    4. 'collections' → logprob: -15.00027084350586
    5. ' math' → logprob: -16.62527084350586
    6. ' itertools' → logprob: -16.62527084350586
    7. '=sys' → logprob: -17.50027084350586
    8. '	sys' → logprob: -17.62527084350586
    9. '(sys' → logprob: -18.00027084350586
    10. ' re' → logprob: -18.37527084350586

Token 221: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19451192021369934
    2. '

' → logprob: -2.569511890411377
    3. 'def' → logprob: -3.319511890411377
    4. 'input' → logprob: -3.444511890411377
    5. 'sys' → logprob: -4.194511890411377
    6. 'import' → logprob: -4.444511890411377
    7. '<|end|>' → logprob: -6.694511890411377
    8. '\n' → logprob: -7.319511890411377
    9. '.readline' → logprob: -7.444511890411377
    10. 'data' → logprob: -7.569511890411377

Token 222: 'def' (ID: 1314)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05191923305392265
    2. 'def' → logprob: -3.3019192218780518
    3. 'sys' → logprob: -4.551919460296631
    4. 'n' → logprob: -6.051919460296631
    5. 'import' → logprob: -8.176918983459473
    6. 's' → logprob: -8.676918983459473
    7. 'from' → logprob: -8.676918983459473
    8. 'data' → logprob: -9.176918983459473
    9. 'stdin' → logprob: -9.926918983459473
    10. ' input' → logprob: -10.051918983459473

Token 223: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.49378812313079834
    2. ' can' → logprob: -1.7437881231307983
    3. ' est' → logprob: -2.493788242340088
    4. ' natural' → logprob: -3.493788242340088
    5. ' dance' → logprob: -3.743788242340088
    6. ' main' → logprob: -4.118788242340088
    7. ' solution' → logprob: -4.368788242340088
    8. ' solve' → logprob: -4.618788242340088
    9. ' naturel' → logprob: -4.993788242340088
    10. 'is' → logprob: -5.118788242340088

Token 224: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00031019834568724036
    2. '_possible' → logprob: -8.375309944152832
    3. '_nat' → logprob: -10.625309944152832
    4. '_d' → logprob: -10.625309944152832
    5. '_' → logprob: -11.125309944152832
    6. 'natur' → logprob: -12.250309944152832
    7. '_valid' → logprob: -13.125309944152832
    8. 'nature' → logprob: -13.125309944152832
    9. 'natural' → logprob: -13.625309944152832
    10. '```' → logprob: -13.875309944152832

Token 225: 'atural' (ID: 14538)
  Prédit: 'ature'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ature' → logprob: -0.6409929990768433
    2. 'atural' → logprob: -0.7659929990768433
    3. 'at' → logprob: -5.390993118286133
    4. 'atur' → logprob: -6.640993118286133
    5. 'a' → logprob: -6.890993118286133
    6. '_' → logprob: -7.515993118286133
    7. ' naturelle' → logprob: -8.640993118286133
    8. '_at' → logprob: -8.890993118286133
    9. '```' → logprob: -8.890993118286133
    10. ' at' → logprob: -9.265993118286133

Token 226: '(score' (ID: 70244)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.887596070766449
    2. '(' → logprob: -1.3875961303710938
    3. '(step' → logprob: -1.3875961303710938
    4. '_move' → logprob: -3.5125961303710938
    5. '_sequence' → logprob: -3.8875961303710938
    6. '_step' → logprob: -4.387596130371094
    7. '(seq' → logprob: -5.012596130371094
    8. '_press' → logprob: -5.262596130371094
    9. '(s' → logprob: -5.387596130371094
    10. '_arrow' → logprob: -5.762596130371094

Token 227: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029211243614554405
    2. '):' → logprob: -3.6542112827301025
    3. 's' → logprob: -6.529211044311523
    4. '[' → logprob: -7.404211044311523
    5. '_sequence' → logprob: -8.779211044311523
    6. ')' → logprob: -9.154211044311523
    7. '):
' → logprob: -9.404211044311523
    8. 'd' → logprob: -9.404211044311523
    9. ':' → logprob: -9.779211044311523
    10. ' ,' → logprob: -9.779211044311523

Token 228: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.026430577039718628
    2. ' str' → logprob: -3.651430606842041
    3. ')' → logprob: -9.276430130004883
    4. '[str' → logprob: -10.776430130004883
    5. 'list' → logprob: -12.401430130004883
    6. '   ' → logprob: -13.026430130004883
    7. 's' → logprob: -13.151430130004883
    8. ' ' → logprob: -13.276430130004883
    9. '(str' → logprob: -13.526430130004883
    10. ':str' → logprob: -13.651430130004883

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013501148205250502
    2. '):' → logprob: -6.626349925994873
    3. ' )' → logprob: -11.251350402832031
    4. ',' → logprob: -11.876350402832031
    5. ')->' → logprob: -12.751350402832031
    6. '):
' → logprob: -14.001350402832031
    7. ':' → logprob: -15.751350402832031
    8. '   ' → logprob: -15.751350402832031
    9. ' ):' → logprob: -16.37635040283203
    10. ')=' → logprob: -17.25135040283203

Token 230: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008384577231481671
    2. ' ->' → logprob: -7.750838279724121
    3. '->' → logprob: -8.000838279724121
    4. ' :' → logprob: -10.375838279724121
    5. '):' → logprob: -11.000838279724121
    6. '   ' → logprob: -11.625838279724121
    7. ':
' → logprob: -12.375838279724121
    8. ')->' → logprob: -12.625838279724121
    9. ')' → logprob: -12.875838279724121
    10. '():' → logprob: -13.250838279724121

Token 231: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.03021577186882496
    2. ' bool' → logprob: -3.5302157402038574
    3. 'str' → logprob: -7.780215740203857
    4. ' str' → logprob: -10.030216217041016
    5. 'set' → logprob: -13.280216217041016
    6. 'int' → logprob: -14.030216217041016
    7. '"' → logprob: -15.905216217041016
    8. '   ' → logprob: -16.030216217041016
    9. ' ' → logprob: -16.530216217041016
    10. '	bool' → logprob: -16.530216217041016

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.08944896562025e-05
    2. '):' → logprob: -10.875081062316895
    3. ':
' → logprob: -11.000081062316895
    4. ' :' → logprob: -11.125081062316895
    5. '():' → logprob: -11.125081062316895
    6. '   ' → logprob: -11.375081062316895
    7. '(' → logprob: -13.250081062316895
    8. ':def' → logprob: -13.375081062316895
    9. '(":' → logprob: -15.500081062316895
    10. ':**' → logprob: -16.000080108642578

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004433320835232735
    2. '    
' → logprob: -6.2544331550598145
    3. ' states' → logprob: -7.5044331550598145
    4. ' dp' → logprob: -7.7544331550598145
    5. '   ' → logprob: -7.7544331550598145
    6. '    ' → logprob: -8.129433631896973
    7. 'n' → logprob: -8.379433631896973
    8. '   ' → logprob: -8.629433631896973
    9. 'dp' → logprob: -9.254433631896973
    10. ' 
' → logprob: -10.379433631896973

Token 234: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9754686951637268
    2. ' left' → logprob: -1.225468635559082
    3. 'n' → logprob: -2.100468635559082
    4. ' n' → logprob: -2.225468635559082
    5. '#' (adapté à ' #') → logprob: -3.725468635559082
    6. 'positions' → logprob: -4.225468635559082
    7. 'L' → logprob: -4.225468635559082
    8. '   ' → logprob: -4.600468635559082
    9. 'LEFT' → logprob: -4.975468635559082
    10. ' gauche' → logprob: -5.100468635559082

Token 235: ' Map' (ID: 7343)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7411881685256958
    2. ' n' → logprob: -1.4911881685256958
    3. 'left' → logprob: -2.4911880493164062
    4. ' left' → logprob: -2.9911880493164062
    5. '#' → logprob: -3.2411880493164062
    6. 'positions' → logprob: -3.6161880493164062
    7. 'prev' → logprob: -4.241188049316406
    8. 'dp' → logprob: -4.366188049316406
    9. 'from' → logprob: -4.616188049316406
    10. 'possible' → logprob: -4.866188049316406

Token 236: ' panels' (ID: 30863)
  Prédit: ' arrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arrow' → logprob: -1.0733147859573364
    2. ' arrows' → logprob: -1.3233147859573364
    3. '{' → logprob: -2.073314666748047
    4. 'arrow' → logprob: -2.823314666748047
    5. ' {'' → logprob: -2.948314666748047
    6. ' {' → logprob: -3.198314666748047
    7. ' positions' → logprob: -3.323314666748047
    8. 'positions' → logprob: -4.198314666748047
    9. ' fl' → logprob: -4.323314666748047
    10. '_arrow' → logprob: -4.823314666748047

Token 237: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.647155225276947
    2. '=' → logprob: -0.772155225276947
    3. '   ' → logprob: -5.272155284881592
    4. 'panel' → logprob: -5.522155284881592
    5. 'pan' → logprob: -6.397155284881592
    6. '_panel' → logprob: -6.522155284881592
    7. '_pan' → logprob: -7.897155284881592
    8. '_' → logprob: -8.022154808044434
    9. 'positions' → logprob: -8.397154808044434
    10. 'to' → logprob: -8.522154808044434

Token 238: ' indices' (ID: 30378)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.5994524955749512
    2. 'int' → logprob: -1.5994524955749512
    3. '0' → logprob: -1.9744524955749512
    4. '{' → logprob: -3.599452495574951
    5. 'positions' → logprob: -3.599452495574951
    6. 'ints' → logprob: -4.099452495574951
    7. ''' → logprob: -4.474452495574951
    8. 'inte' → logprob: -5.099452495574951
    9. 'numbers' → logprob: -5.474452495574951
    10. ' {'' → logprob: -5.599452495574951

Token 239: ' pour' (ID: 1930)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.5672879219055176
    2. ' =' → logprob: -1.4422879219055176
    3. 'pan' → logprob: -2.6922879219055176
    4. ' panels' → logprob: -3.3172879219055176
    5. 'positions' → logprob: -3.6922879219055176
    6. '   ' → logprob: -3.6922879219055176
    7. '=' → logprob: -4.567287921905518
    8. ' panel' → logprob: -4.692287921905518
    9. 'pos' → logprob: -5.567287921905518
    10. '_panel' → logprob: -5.692287921905518

Token 240: ' faciliter' (ID: 106284)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.7604849934577942
    2. ' {'' → logprob: -1.1354849338531494
    3. '{' → logprob: -2.8854849338531494
    4. 'positions' → logprob: -3.5104849338531494
    5. '0' → logprob: -4.2604851722717285
    6. ' ' → logprob: -4.3854851722717285
    7. ' '' → logprob: -4.8854851722717285
    8. 'l' → logprob: -5.1354851722717285
    9. ''' → logprob: -5.1354851722717285
    10. ' l' → logprob: -5.2604851722717285

Token 241: ' les' (ID: 1341)
  Prédit: ' {''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {'' → logprob: -1.4596730470657349
    2. 'pos' → logprob: -1.9596730470657349
    3. ' panel' → logprob: -2.0846729278564453
    4. 'panel' → logprob: -2.2096729278564453
    5. 'positions' → logprob: -2.2096729278564453
    6. ' positions' → logprob: -2.9596729278564453
    7. '   ' → logprob: -3.3346729278564453
    8. '{
' → logprob: -3.4596729278564453
    9. ' panels' → logprob: -3.7096729278564453
    10. '{'' → logprob: -3.7096729278564453

Token 242: ' compar' (ID: 8342)
  Prédit: 'compar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compar' → logprob: -0.1779250055551529
    2. 'positions' → logprob: -2.8029251098632812
    3. ' comparisons' → logprob: -3.3029251098632812
    4. ' compar' → logprob: -3.5529251098632812
    5. ' comparaison' → logprob: -4.427925109863281
    6. 'com' → logprob: -4.927925109863281
    7. 'calcul' → logprob: -5.677925109863281
    8. 'indices' → logprob: -6.052925109863281
    9. ' ord' → logprob: -6.052925109863281
    10. ' positions' → logprob: -6.177925109863281

Token 243: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.5354293584823608
    2. 'aison' → logprob: -0.9104293584823608
    3. 'isons' → logprob: -5.03542947769165
    4. 'es' → logprob: -6.78542947769165
    5. 'e' → logprob: -6.91042947769165
    6. 'a' → logprob: -7.16042947769165
    7. 'ison' → logprob: -7.28542947769165
    8. '{"' → logprob: -8.285429000854492
    9. '[' → logprob: -8.410429000854492
    10. 'ation' → logprob: -8.660429000854492

Token 244: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.10055600851774216
    2. 'on' → logprob: -2.350555896759033
    3. 'ion' → logprob: -9.100556373596191
    4. 'sons' → logprob: -9.600556373596191
    5. 'son' → logprob: -10.350556373596191
    6. 'ions' → logprob: -10.350556373596191
    7. '#' → logprob: -10.350556373596191
    8. 'tion' → logprob: -10.600556373596191
    9. 's' → logprob: -11.225556373596191
    10. 'ont' → logprob: -11.850556373596191

Token 245: '
' (ID: 198)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.516945481300354
    2. '   ' → logprob: -1.891945481300354
    3. 'pan' → logprob: -2.6419453620910645
    4. 'positions' → logprob: -2.6419453620910645
    5. '{
' → logprob: -3.1419453620910645
    6. ' panels' → logprob: -4.3919453620910645
    7. '{' → logprob: -4.5169453620910645
    8. 'pos' → logprob: -4.5169453620910645
    9. ' panel' → logprob: -5.1419453620910645
    10. 'p' → logprob: -5.1419453620910645

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7919580340385437
    2. ' =' → logprob: -1.7919580936431885
    3. 'panel' → logprob: -1.7919580936431885
    4. '{' → logprob: -3.2919580936431885
    5. ' panels' → logprob: -3.4169580936431885
    6. 'pan' → logprob: -3.4169580936431885
    7. 'positions' → logprob: -3.5419580936431885
    8. ':' → logprob: -3.7919580936431885
    9. ' panel' → logprob: -4.291957855224609
    10. '{
' → logprob: -4.541957855224609

Token 247: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9878787994384766
    2. 'panel' → logprob: -0.9878787994384766
    3. ' panel' → logprob: -2.2378787994384766
    4. ' pos' → logprob: -2.9878787994384766
    5. ' panels' → logprob: -3.3628787994384766
    6. 'pan' → logprob: -3.6128787994384766
    7. 'positions' → logprob: -3.8628787994384766
    8. ' positions' → logprob: -5.737878799438477
    9. 'mapping' → logprob: -5.862878799438477
    10. 'position' → logprob: -5.987878799438477

Token 248: ' Ord' (ID: 40485)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.6612776517868042
    2. 'pan' → logprob: -1.4112776517868042
    3. 'positions' → logprob: -2.5362777709960938
    4. 'pos' → logprob: -2.6612777709960938
    5. 'mapping' → logprob: -3.4112777709960938
    6. ' panel' → logprob: -4.036277770996094
    7. 'arrow' → logprob: -4.161277770996094
    8. ' panels' → logprob: -4.661277770996094
    9. 'position' → logprob: -5.661277770996094
    10. 'map' → logprob: -6.286277770996094

Token 249: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.01809949055314064
    2. 'er' → logprob: -4.518099308013916
    3. 'res' → logprob: -5.518099308013916
    4. 'inal' → logprob: -7.018099308013916
    5. 'ers' → logprob: -7.268099308013916
    6. 'onne' → logprob: -7.643099308013916
    7. 'ermap' → logprob: -8.393099784851074
    8. 'inals' → logprob: -8.643099784851074
    9. 'e' → logprob: -9.018099784851074
    10. 'inaire' → logprob: -9.268099784851074

Token 250: ' logique' (ID: 115350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036926645785570145
    2. '=' → logprob: -4.161926746368408
    3. 'panel' → logprob: -4.786926746368408
    4. 'pan' → logprob: -5.786926746368408
    5. 'pos' → logprob: -6.286926746368408
    6. 'positions' → logprob: -6.786926746368408
    7. '_panel' → logprob: -6.911926746368408
    8. 'p' → logprob: -7.036926746368408
    9. '={'' → logprob: -7.036926746368408
    10. '   ' → logprob: -7.536926746368408

Token 251: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09749756008386612
    2. 'panel' → logprob: -3.0974974632263184
    3. 'pan' → logprob: -3.5974974632263184
    4. '=' → logprob: -5.347497463226318
    5. '={'' → logprob: -5.972497463226318
    6. 'positions' → logprob: -6.097497463226318
    7. 'p' → logprob: -6.472497463226318
    8. '_panel' → logprob: -6.472497463226318
    9. ':' → logprob: -6.722497463226318
    10. '_pan' → logprob: -6.972497463226318

Token 252: ' L' (ID: 451)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.13833434879779816
    2. 'L' → logprob: -2.763334274291992
    3. ' {'' → logprob: -3.263334274291992
    4. ' L' → logprob: -4.388334274291992
    5. ''L' → logprob: -5.263334274291992
    6. '{' → logprob: -5.888334274291992
    7. 'positions' → logprob: -6.138334274291992
    8. '{
' → logprob: -6.263334274291992
    9. '{"' → logprob: -7.138334274291992
    10. 'panel' → logprob: -7.263334274291992

Token 253: ' <' (ID: 464)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13869771361351013
    2. '=' → logprob: -2.263697624206543
    3. ':' → logprob: -4.888697624206543
    4. ',' → logprob: -5.263697624206543
    5. '0' → logprob: -5.388697624206543
    6. ' <' → logprob: -5.638697624206543
    7. ' ' → logprob: -5.638697624206543
    8. '<' → logprob: -8.263697624206543
    9. ' :' → logprob: -8.263697624206543
    10. ' ,' → logprob: -8.513697624206543

Token 254: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.03387390077114105
    2. ' U' → logprob: -3.4088737964630127
    3. ''U' → logprob: -8.908873558044434
    4. ' ' → logprob: -10.033873558044434
    5. '   ' → logprob: -10.783873558044434
    6. '	U' → logprob: -11.908873558044434
    7. 'R' → logprob: -12.908873558044434
    8. '  ' → logprob: -12.908873558044434
    9. ''' → logprob: -13.096373558044434
    10. '<U' → logprob: -13.471373558044434

Token 255: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07094689458608627
    2. '<' → logprob: -2.6959469318389893
    3. ',' → logprob: -7.32094669342041
    4. '<U' → logprob: -9.07094669342041
    5. '<D' → logprob: -10.19594669342041
    6. '=' → logprob: -10.32094669342041
    7. ' ' → logprob: -10.94594669342041
    8. '<R' → logprob: -11.07094669342041
    9. '<L' → logprob: -11.07094669342041
    10. '<'' → logprob: -11.32094669342041

Token 256: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.012570171616971493
    2. ' D' → logprob: -4.387570381164551
    3. ' ' → logprob: -10.51257038116455
    4. 'R' → logprob: -11.26257038116455
    5. ',D' → logprob: -12.63757038116455
    6. '   ' → logprob: -12.63757038116455
    7. '>D' → logprob: -12.63757038116455
    8. '	D' → logprob: -12.88757038116455
    9. '
' → logprob: -13.51257038116455
    10. 'U' → logprob: -13.63757038116455

Token 257: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016155192628502846
    2. '<' → logprob: -4.141155242919922
    3. ' ' → logprob: -10.391155242919922
    4. ',' → logprob: -10.391155242919922
    5. 'import' → logprob: -11.391155242919922
    6. '<R' → logprob: -11.516155242919922
    7. '#' → logprob: -12.453655242919922
    8. '<U' → logprob: -12.453655242919922
    9. 'def' → logprob: -12.828655242919922
    10. '   ' → logprob: -12.891155242919922

Token 258: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6326621174812317
    2. 'R' → logprob: -0.7576621174812317
    3. ' ' → logprob: -10.382661819458008
    4. '   ' → logprob: -11.382661819458008
    5. ' ' → logprob: -12.382661819458008
    6. '  ' → logprob: -12.507661819458008
    7. ',' → logprob: -12.882661819458008
    8. '	R' → logprob: -13.007661819458008
    9. '    ' → logprob: -13.132661819458008
    10. ',R' → logprob: -13.257661819458008

Token 259: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7583784461021423
    2. '   ' → logprob: -1.008378505706787
    3. 'panel' → logprob: -2.133378505706787
    4. ',' → logprob: -4.883378505706787
    5. '_panel' → logprob: -4.883378505706787
    6. 'positions' → logprob: -5.008378505706787
    7. 'indices' → logprob: -5.508378505706787
    8. '
' → logprob: -5.758378505706787
    9. '=' → logprob: -5.758378505706787
    10. ' panels' → logprob: -5.883378505706787

Token 260: 'U' (ID: 52)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.661415159702301
    2. ')' → logprob: -1.7864151000976562
    3. ')
' → logprob: -1.9114151000976562
    4. '{'' → logprob: -3.1614151000976562
    5. '')' → logprob: -3.2864151000976562
    6. ' {'' → logprob: -4.036415100097656
    7. ' ' → logprob: -4.411415100097656
    8. '')
' → logprob: -4.536415100097656
    9. ''' → logprob: -4.661415100097656
    10. '   ' → logprob: -5.036415100097656

Token 261: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6835135221481323
    2. ' <' → logprob: -0.9335135221481323
    3. ' )' → logprob: -4.058513641357422
    4. ',' → logprob: -4.308513641357422
    5. '<' → logprob: -4.308513641357422
    6. '=' → logprob: -4.558513641357422
    7. '   ' → logprob: -4.683513641357422
    8. ')<' → logprob: -4.808513641357422
    9. ' =' → logprob: -4.933513641357422
    10. ' ' → logprob: -4.933513641357422

Token 262: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04868796840310097
    2. ' D' → logprob: -3.0486879348754883
    3. '   ' → logprob: -9.673687934875488
    4. ' ' → logprob: -11.173687934875488
    5. ' ' → logprob: -11.923687934875488
    6. '  ' → logprob: -12.423687934875488
    7. '    ' → logprob: -12.798687934875488
    8. '#' → logprob: -13.048687934875488
    9. ')' → logprob: -13.548687934875488
    10. ' #' → logprob: -13.798687934875488

Token 263: ' se' (ID: 458)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33861106634140015
    2. ' <' → logprob: -1.463611125946045
    3. ' )' → logprob: -4.088611125946045
    4. ')<' → logprob: -4.338611125946045
    5. ',' → logprob: -4.838611125946045
    6. '<' → logprob: -5.088611125946045
    7. ' =' → logprob: -5.713611125946045
    8. '=' → logprob: -6.213611125946045
    9. '),' → logprob: -6.338611125946045
    10. '>' → logprob: -6.838611125946045

Token 264: ' consid' (ID: 34574)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0062607526779175
    2. 'com' → logprob: -2.256260871887207
    3. 't' → logprob: -2.631260871887207
    4. 'nt' → logprob: -2.881260871887207
    5. 'consider' → logprob: -3.256260871887207
    6. 'situ' → logprob: -3.256260871887207
    7. 'mp' → logprob: -3.381260871887207
    8. 'trait' → logprob: -3.631260871887207
    9. 'qu' → logprob: -3.756260871887207
    10. 'm' → logprob: -4.006260871887207

Token 265: 'èrent' (ID: 55228)
  Prédit: 'èrent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.18123507499694824
    2. 'rent' → logprob: -1.9312350749969482
    3. 'érent' → logprob: -5.431235313415527
    4. 'érant' → logprob: -5.681235313415527
    5. '#' → logprob: -6.306235313415527
    6. 'rant' → logprob: -6.556235313415527
    7. 'er' → logprob: -6.681235313415527
    8. 'r' → logprob: -6.931235313415527
    9. 'èr' → logprob: -7.181235313415527
    10. '\' → logprob: -7.306235313415527

Token 266: ' ég' (ID: 33150)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.910254180431366
    2. 'comme' → logprob: -1.0352542400360107
    3. ' ég' → logprob: -1.7852542400360107
    4. 'ég' → logprob: -4.160254001617432
    5. '<' → logprob: -4.410254001617432
    6. '=' → logprob: -4.660254001617432
    7. ' <' → logprob: -4.785254001617432
    8. ')' → logprob: -4.910254001617432
    9. ' =' → logprob: -5.660254001617432
    10. ' as' → logprob: -5.910254001617432

Token 267: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.4537850320339203
    2. 'al' → logprob: -1.4537850618362427
    3. 'ales' → logprob: -2.203784942626953
    4. 'ale' → logprob: -4.328784942626953
    5. 'a' → logprob: -5.953784942626953
    6. 'als' → logprob: -6.078784942626953
    7. '```' → logprob: -7.203784942626953
    8. '``' → logprob: -8.328784942626953
    9. '   ' → logprob: -8.703784942626953
    10. '

' → logprob: -9.141284942626953

Token 268: ' côte' (ID: 143817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08684786409139633
    2. ' )' → logprob: -2.8368477821350098
    3. ',' → logprob: -4.96184778213501
    4. '=' → logprob: -5.46184778213501
    5. ' et' → logprob: -5.96184778213501
    6. ' ou' → logprob: -6.21184778213501
    7. '),' → logprob: -6.58684778213501
    8. ' or' → logprob: -6.83684778213501
    9. ' =' → logprob: -7.08684778213501
    10. ' ,' → logprob: -7.33684778213501

Token 269: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.10793045908212662
    2. '-à' → logprob: -2.8579304218292236
    3. ' à' → logprob: -3.3579304218292236
    4. 'a' → logprob: -4.732930660247803
    5. '   ' → logprob: -8.357930183410645
    6. ' ' → logprob: -8.482930183410645
    7. ' ' → logprob: -8.732930183410645
    8. ' a' → logprob: -8.857930183410645
    9. 'á' → logprob: -9.107930183410645
    10. '```' → logprob: -9.607930183410645

Token 270: ' côte' (ID: 143817)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00026419671485200524
    2. 'co' → logprob: -9.500264167785645
    3. ' côte' → logprob: -9.625264167785645
    4. 'cot' → logprob: -10.375264167785645
    5. ' ' → logprob: -10.750264167785645
    6. 'U' → logprob: -11.000264167785645
    7. '#' → logprob: -11.125264167785645
    8. '  ' → logprob: -12.000264167785645
    9. '   ' → logprob: -12.125264167785645
    10. '```' → logprob: -12.375264167785645

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03446408733725548
    2. ',' → logprob: -4.284463882446289
    3. ' )' → logprob: -4.284463882446289
    4. ' mais' → logprob: -6.784463882446289
    5. ' <' → logprob: -7.409463882446289
    6. ' ,' → logprob: -7.409463882446289
    7. '),' → logprob: -7.659463882446289
    8. ' et' → logprob: -7.784463882446289
    9. ')<' → logprob: -7.784463882446289
    10. '#' → logprob: -8.159463882446289

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04282263293862343
    2. 'panel' → logprob: -3.5428225994110107
    3. 'positions' → logprob: -5.29282283782959
    4. ' panel' → logprob: -6.16782283782959
    5. ' panels' → logprob: -6.79282283782959
    6. 'pan' → logprob: -7.29282283782959
    7. 'indices' → logprob: -7.29282283782959
    8. 'mapping' → logprob: -7.29282283782959
    9. '{
' → logprob: -7.54282283782959
    10. 'pos' → logprob: -8.16782283782959

Token 273: ' order' (ID: 2569)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.6508477926254272
    2. ' panel' → logprob: -1.5258477926254272
    3. 'pos' → logprob: -2.275847911834717
    4. 'order' (adapté à ' order') → logprob: -3.025847911834717
    5. 'pan' → logprob: -3.650847911834717
    6. ' order' → logprob: -3.900847911834717
    7. 'positions' → logprob: -4.025847911834717
    8. ' panels' → logprob: -4.150847911834717
    9. ' pos' → logprob: -4.525847911834717
    10. '   ' → logprob: -5.400847911834717

Token 274: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693975865840912
    2. '=' → logprob: -2.1269397735595703
    3. ' ' → logprob: -12.87693977355957
    4. '={'' → logprob: -13.12693977355957
    5. '_map' → logprob: -13.25193977355957
    6. '   ' → logprob: -13.37693977355957
    7. 's' → logprob: -13.75193977355957
    8. '={"' → logprob: -15.00193977355957
    9. '  ' → logprob: -15.25193977355957
    10. '_' → logprob: -15.37693977355957

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036018555983901024
    2. '=' → logprob: -5.628602027893066
    3. ' ' → logprob: -14.503602027893066
    4. ' =
' → logprob: -15.128602027893066
    5. ' ={' → logprob: -15.128602027893066
    6. ':' → logprob: -15.378602027893066
    7. '={'' → logprob: -15.378602027893066
    8. '   ' → logprob: -16.50360107421875
    9. ' ' → logprob: -17.00360107421875
    10. '[' → logprob: -17.87860107421875

Token 276: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.024054285138845444
    2. ' {'' → logprob: -3.7740542888641357
    3. '{' → logprob: -7.524054050445557
    4. '{"' → logprob: -8.649054527282715
    5. '{
' → logprob: -9.399054527282715
    6. '   ' → logprob: -12.649054527282715
    7. ' {' → logprob: -12.649054527282715
    8. ' ' → logprob: -13.149054527282715
    9. ' {"' → logprob: -14.149054527282715
    10. '[' → logprob: -14.774054527282715

Token 277: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -9.364928700961173e-05
    2. ''L' → logprob: -9.375093460083008
    3. ' L' → logprob: -12.375093460083008
    4. ''' → logprob: -13.500093460083008
    5. 'U' → logprob: -14.875093460083008
    6. 'l' → logprob: -15.000093460083008
    7. '{'' → logprob: -15.000093460083008
    8. '"L' → logprob: -15.000093460083008
    9. '['' → logprob: -15.375093460083008
    10. '	L' → logprob: -15.437593460083008

Token 278: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002508239820599556
    2. ''' → logprob: -6.127508163452148
    3. ' ':' → logprob: -8.127508163452148
    4. ':' → logprob: -11.252508163452148
    5. 'L' → logprob: -12.127508163452148
    6. '0' → logprob: -13.002508163452148
    7. ''>' → logprob: -13.877508163452148
    8. '':'' → logprob: -14.127508163452148
    9. ' '' → logprob: -14.127508163452148
    10. '(':' → logprob: -14.502508163452148

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.825890159234405e-05
    2. '1' → logprob: -10.125068664550781
    3. ' ' → logprob: -10.500068664550781
    4. '   ' → logprob: -16.31256866455078
    5. '-' → logprob: -16.37506866455078
    6. '2' → logprob: -16.43756866455078
    7. '3' → logprob: -16.68756866455078
    8. '  ' → logprob: -16.93756866455078
    9. ''' → logprob: -17.56256866455078
    10. '
' → logprob: -17.87506866455078

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011725161311915144
    2. '1' → logprob: -9.125117301940918
    3. ' ' → logprob: -11.875117301940918
    4. '-' → logprob: -14.250117301940918
    5. '   ' → logprob: -15.875117301940918
    6. '2' → logprob: -15.937617301940918
    7. '  ' → logprob: -16.3751163482666
    8. '```' → logprob: -17.3126163482666
    9. '3' → logprob: -17.3751163482666
    10. '{' → logprob: -17.4376163482666

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017908512381836772
    2. ','' → logprob: -6.501791000366211
    3. ',
' → logprob: -8.376791000366211
    4. ' ,' → logprob: -10.126791000366211
    5. '',' → logprob: -11.751791000366211
    6. '   ' → logprob: -12.251791000366211
    7. ',U' → logprob: -13.626791000366211
    8. ''U' → logprob: -13.751791000366211
    9. ''' → logprob: -13.876791000366211
    10. ' ,'' → logprob: -14.376791000366211

Token 282: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.48322704434394836
    2. ' '' → logprob: -1.358227014541626
    3. '1' → logprob: -2.608227014541626
    4. ''' → logprob: -3.358227014541626
    5. ' ' → logprob: -4.108227252960205
    6. '0' → logprob: -8.108226776123047
    7. ''S' → logprob: -8.483226776123047
    8. ''I' → logprob: -8.733226776123047
    9. ''L' → logprob: -8.983226776123047
    10. ''A' → logprob: -9.233226776123047

Token 283: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.10908394306898117
    2. ''U' → logprob: -2.359083890914917
    3. 'R' → logprob: -4.859084129333496
    4. ''' → logprob: -7.109084129333496
    5. ' U' → logprob: -9.109084129333496
    6. 'L' → logprob: -9.609084129333496
    7. ' '' → logprob: -10.734084129333496
    8. ' ' → logprob: -11.109084129333496
    9. ''L' → logprob: -11.359084129333496
    10. '’U' → logprob: -11.984084129333496

Token 284: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.027011482045054436
    2. ':' → logprob: -3.6520113945007324
    3. '0' → logprob: -7.902011394500732
    4. ''' → logprob: -9.02701187133789
    5. ',' → logprob: -9.90201187133789
    6. '   ' → logprob: -10.02701187133789
    7. ' :' → logprob: -10.40201187133789
    8. '1' → logprob: -10.65201187133789
    9. ' ':' → logprob: -11.02701187133789
    10. '',' → logprob: -11.27701187133789

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004121380392462015
    2. ' ' → logprob: -5.50412130355835
    3. '   ' → logprob: -11.004121780395508
    4. '0' → logprob: -11.129121780395508
    5. '2' → logprob: -12.004121780395508
    6. '  ' → logprob: -12.879121780395508
    7. '    ' → logprob: -14.691621780395508
    8. '     ' → logprob: -14.941621780395508
    9. '{' → logprob: -15.316621780395508
    10. ''' → logprob: -15.691621780395508

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001793457195162773
    2. '0' → logprob: -9.250179290771484
    3. ' ' → logprob: -9.500179290771484
    4. '2' → logprob: -12.625179290771484
    5. '   ' → logprob: -13.250179290771484
    6. '{' → logprob: -14.125179290771484
    7. '-' → logprob: -14.500179290771484
    8. '  ' → logprob: -15.500179290771484
    9. '```' → logprob: -15.750179290771484
    10. '12' → logprob: -15.812679290771484

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004546300508081913
    2. ','' → logprob: -5.754546165466309
    3. ' ,' → logprob: -7.504546165466309
    4. ',
' → logprob: -8.004546165466309
    5. '',' → logprob: -8.504546165466309
    6. '   ' → logprob: -8.754546165466309
    7. ''' → logprob: -9.504546165466309
    8. ' '' → logprob: -10.504546165466309
    9. ' ,'' → logprob: -11.504546165466309
    10. ''U' → logprob: -12.879546165466309

Token 288: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2704119682312012
    2. ' ' → logprob: -1.2704119682312012
    3. '2' → logprob: -1.7704119682312012
    4. ' '' → logprob: -2.020411968231201
    5. ''D' → logprob: -2.645411968231201
    6. ''' → logprob: -2.770411968231201
    7. ''U' → logprob: -7.395411968231201
    8. ''S' → logprob: -7.895411968231201
    9. '   ' → logprob: -8.02041244506836
    10. ''d' → logprob: -8.89541244506836

Token 289: 'D' (ID: 35)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21769024431705475
    2. '1' → logprob: -1.7176902294158936
    3. ''D' → logprob: -4.842690467834473
    4. ''' → logprob: -5.467690467834473
    5. 'D' → logprob: -6.467690467834473
    6. '3' → logprob: -6.842690467834473
    7. ' ' → logprob: -7.092690467834473
    8. '0' → logprob: -7.842690467834473
    9. ' '' → logprob: -8.967690467834473
    10. ''d' → logprob: -11.467690467834473

Token 290: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014532373286783695
    2. ':' → logprob: -4.264532566070557
    3. ''' → logprob: -8.514532089233398
    4. '2' → logprob: -9.514532089233398
    5. '1' → logprob: -9.889532089233398
    6. '":' → logprob: -11.389532089233398
    7. '0' → logprob: -11.889532089233398
    8. ''}' → logprob: -12.389532089233398
    9. ' ':' → logprob: -12.389532089233398
    10. ' :' → logprob: -12.889532089233398

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00614634994417429
    2. ' ' → logprob: -5.256146430969238
    3. '2' → logprob: -7.006146430969238
    4. '   ' → logprob: -12.506146430969238
    5. '  ' → logprob: -14.006146430969238
    6. '0' → logprob: -14.131146430969238
    7. '    ' → logprob: -15.943646430969238
    8. '```' → logprob: -16.568645477294922
    9. '     ' → logprob: -17.256145477294922
    10. '3' → logprob: -17.256145477294922

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076990146189928055
    2. ' ' → logprob: -5.257699012756348
    3. '2' → logprob: -6.007699012756348
    4. '0' → logprob: -13.695199012756348
    5. '   ' → logprob: -14.632699012756348
    6. '  ' → logprob: -14.882699012756348
    7. '3' → logprob: -16.632699966430664
    8. '=' → logprob: -16.695199966430664
    9. '```' → logprob: -16.945199966430664
    10. '    ' → logprob: -17.007699966430664

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011029450688511133
    2. ','' → logprob: -7.001102924346924
    3. ' ,' → logprob: -8.876103401184082
    4. ',
' → logprob: -11.001103401184082
    5. '',' → logprob: -11.001103401184082
    6. '   ' → logprob: -11.126103401184082
    7. ''' → logprob: -13.501103401184082
    8. ' ,'' → logprob: -13.626103401184082
    9. '}' → logprob: -15.501103401184082
    10. ' ' → logprob: -15.626103401184082

Token 294: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4741121828556061
    2. ' '' → logprob: -0.9741121530532837
    3. ' ' → logprob: -10.724112510681152
    4. '   ' → logprob: -11.849112510681152
    5. '0' → logprob: -13.224112510681152
    6. ''r' → logprob: -13.224112510681152
    7. '  ' → logprob: -13.974112510681152
    8. ''S' → logprob: -15.099112510681152
    9. '    ' → logprob: -15.349112510681152
    10. ' R' → logprob: -15.599112510681152

Token 295: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16252413392066956
    2. 'R' → logprob: -1.9125241041183472
    3. ' '' → logprob: -6.162524223327637
    4. ' R' → logprob: -8.662524223327637
    5. ''r' → logprob: -11.662524223327637
    6. '   ' → logprob: -13.162524223327637
    7. ' ' → logprob: -13.412524223327637
    8. '0' → logprob: -13.537524223327637
    9. ''S' → logprob: -13.787524223327637
    10. '"' → logprob: -14.787524223327637

Token 296: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25201573967933655
    2. '':' → logprob: -1.5020157098770142
    3. ' :' → logprob: -10.127016067504883
    4. '":' → logprob: -10.877016067504883
    5. '4' → logprob: -12.127016067504883
    6. ''' → logprob: -12.127016067504883
    7. '   ' → logprob: -13.002016067504883
    8. '2' → logprob: -13.377016067504883
    9. '}:' → logprob: -13.377016067504883
    10. '):' → logprob: -13.502016067504883

Token 297: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008743628859519958
    2. ' ' → logprob: -5.133743762969971
    3. '3' → logprob: -5.883743762969971
    4. '   ' → logprob: -10.633743286132812
    5. '  ' → logprob: -13.383743286132812
    6. '    ' → logprob: -15.508743286132812
    7. '     ' → logprob: -16.071243286132812
    8. '       ' → logprob: -16.196243286132812
    9. '=' → logprob: -16.383743286132812
    10. '1' → logprob: -16.446243286132812

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013221053406596184
    2. '3' → logprob: -4.388221263885498
    3. ' ' → logprob: -7.263221263885498
    4. '   ' → logprob: -11.88822078704834
    5. '  ' → logprob: -13.13822078704834
    6. '1' → logprob: -15.01322078704834
    7. '    ' → logprob: -15.38822078704834
    8. '
' → logprob: -15.76322078704834
    9. '```' → logprob: -15.88822078704834
    10. '     ' → logprob: -16.013221740722656

Token 299: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -4.513339445111342e-05
    2. '   ' → logprob: -10.750044822692871
    3. ' }' → logprob: -11.000044822692871
    4. '}
' → logprob: -12.250044822692871
    5. ',' → logprob: -13.250044822692871
    6. '}

' → logprob: -14.875044822692871
    7. ''}' → logprob: -17.375045776367188
    8. ' ' → logprob: -18.125045776367188
    9. ')' → logprob: -18.375045776367188
    10. ',
' → logprob: -18.625045776367188

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024299003183841705
    2. 'n' → logprob: -4.149299144744873
    3. '    
' → logprob: -5.774299144744873
    4. '
' → logprob: -6.274299144744873
    5. 'states' → logprob: -7.149299144744873
    6. ' n' → logprob: -7.524299144744873
    7. 'possible' → logprob: -7.774299144744873
    8. ' states' → logprob: -8.149298667907715
    9. 'prev' → logprob: -8.524298667907715
    10. 'def' → logprob: -8.649298667907715

Token 301: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.22283774614334106
    2. '#' → logprob: -1.9728376865386963
    3. 'states' → logprob: -4.222837924957275
    4. 'left' → logprob: -4.472837924957275
    5. 'prev' → logprob: -4.972837924957275
    6. 'dp' → logprob: -4.972837924957275
    7. 'possible' → logprob: -5.222837924957275
    8. 'positions' → logprob: -5.222837924957275
    9. '   ' → logprob: -5.597837924957275
    10. ' n' → logprob: -6.597837924957275

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029789136722683907
    2. '=' → logprob: -3.5297892093658447
    3. '   ' → logprob: -10.404788970947266
    4. ' ' → logprob: -12.779788970947266
    5. '  ' → logprob: -12.904788970947266
    6. '=int' → logprob: -13.404788970947266
    7. ' ' → logprob: -14.654788970947266
    8. ' =
' → logprob: -15.029788970947266
    9. '=len' → logprob: -15.654788970947266
    10. ',' → logprob: -16.154788970947266

Token 303: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.048587486147880554
    2. ' len' → logprob: -3.0485875606536865
    3. '(len' → logprob: -16.298587799072266
    4. '   ' → logprob: -16.923587799072266
    5. ' ' → logprob: -18.923587799072266
    6. '[len' → logprob: -18.923587799072266
    7. '=len' → logprob: -19.298587799072266
    8. '	len' → logprob: -19.423587799072266
    9. ' ' → logprob: -20.923587799072266
    10. '  ' → logprob: -21.173587799072266

Token 304: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.00033665422233752906
    2. 'score' → logprob: -8.000336647033691
    3. '(' → logprob: -14.125336647033691
    4. ' score' → logprob: -15.000336647033691
    5. '(scores' → logprob: -16.750337600708008
    6. '	score' → logprob: -17.875337600708008
    7. '(
' → logprob: -18.250337600708008
    8. '_score' → logprob: -18.375337600708008
    9. ' (' → logprob: -19.000337600708008
    10. 'Score' → logprob: -19.250337600708008

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.513339445111342e-05
    2. ')
' → logprob: -10.625044822692871
    3. '   ' → logprob: -11.000044822692871
    4. ' )' → logprob: -12.625044822692871
    5. ' ' → logprob: -15.750044822692871
    6. '<|end|>' → logprob: -15.875044822692871
    7. ')

' → logprob: -16.125045776367188
    8. '')' → logprob: -16.250045776367188
    9. '<|end|>' → logprob: -16.750045776367188
    10. ')n' → logprob: -17.000045776367188

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016261808574199677
    2. '    
' → logprob: -4.766261577606201
    3. ' states' → logprob: -6.016261577606201
    4. '
' → logprob: -6.766261577606201
    5. 'dp' → logprob: -6.766261577606201
    6. 'states' → logprob: -6.891261577606201
    7. ' dp' → logprob: -7.266261577606201
    8. ' possible' → logprob: -8.14126205444336
    9. 'possible' → logprob: -8.39126205444336
    10. ' current' → logprob: -9.26626205444336

Token 307: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.967743456363678
    2. 'dp' → logprob: -1.0927433967590332
    3. '#' (adapté à ' #') → logprob: -1.7177433967590332
    4. 'left' → logprob: -3.467743396759033
    5. 'prev' → logprob: -3.592743396759033
    6. 'current' → logprob: -4.217743396759033
    7. 'possible' → logprob: -4.342743396759033
    8. 'positions' → logprob: -5.842743396759033
    9. 'etat' → logprob: -5.967743396759033
    10. ' states' → logprob: -5.967743396759033

Token 308: ' Pied' (ID: 88947)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46904173493385315
    2. '#' → logprob: -1.4690417051315308
    3. 'states' → logprob: -2.9690418243408203
    4. 'left' → logprob: -3.2190418243408203
    5. 'prev' → logprob: -3.7190418243408203
    6. 'current' → logprob: -4.96904182434082
    7. 'from' → logprob: -4.96904182434082
    8. 'possible' → logprob: -5.84404182434082
    9. ' dp' → logprob: -6.21904182434082
    10. ' states' → logprob: -6.59404182434082

Token 309: ' gauche' (ID: 58367)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.31157585978507996
    2. 'g' → logprob: -2.1865758895874023
    3. 's' → logprob: -2.1865758895874023
    4. '_left' → logprob: -3.5615758895874023
    5. ' gauche' → logprob: -5.436575889587402
    6. 'G' → logprob: -5.561575889587402
    7. 'left' → logprob: -7.061575889587402
    8. 'sg' → logprob: -7.186575889587402
    9. '_positions' → logprob: -7.186575889587402
    10. '_s' → logprob: -7.186575889587402

Token 310: ' (' (ID: 350)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7251248359680176
    2. '_positions' → logprob: -1.1001248359680176
    3. ',' → logprob: -2.1001248359680176
    4. 'pos' → logprob: -3.3501248359680176
    5. ' =' → logprob: -4.100124835968018
    6. '=' → logprob: -5.850124835968018
    7. 'positions' → logprob: -6.225124835968018
    8. 's' → logprob: -6.600124835968018
    9. '_position' → logprob: -6.975124835968018
    10. '_states' → logprob: -8.10012435913086

Token 311: 'L' (ID: 43)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2296916246414185
    2. 'pos' → logprob: -1.3546916246414185
    3. ',' → logprob: -1.8546916246414185
    4. 'positions' → logprob: -2.479691505432129
    5. 'left' → logprob: -3.229691505432129
    6. '=' → logprob: -3.854691505432129
    7. '),' → logprob: -3.854691505432129
    8. 'None' → logprob: -3.979691505432129
    9. '=None' → logprob: -3.979691505432129
    10. ' =' → logprob: -4.604691505432129

Token 312: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4632265567779541
    2. '_positions' → logprob: -2.463226556777954
    3. '),' → logprob: -2.713226556777954
    4. ')' → logprob: -2.838226556777954
    5. ' ,' → logprob: -3.088226556777954
    6. '_pos' → logprob: -3.088226556777954
    7. 'pos' → logprob: -4.338226318359375
    8. 'os' → logprob: -4.963226318359375
    9. 'positions' → logprob: -5.088226318359375
    10. 's' → logprob: -5.463226318359375

Token 313: ' pied' (ID: 20242)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0254344940185547
    2. 'p' → logprob: -1.1504344940185547
    3. ' pied' → logprob: -2.0254344940185547
    4. ' right' → logprob: -2.1504344940185547
    5. ' droite' → logprob: -3.5254344940185547
    6. 'dro' → logprob: -4.400434494018555
    7. ' pieds' → logprob: -4.900434494018555
    8. ' droit' → logprob: -5.025434494018555
    9. 'left' → logprob: -5.525434494018555
    10. '#' → logprob: -5.900434494018555

Token 314: ' droit' (ID: 29964)
  Prédit: ' droit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.15190060436725616
    2. 'd' → logprob: -2.90190052986145
    3. 'dro' → logprob: -3.02690052986145
    4. 'g' → logprob: -4.401900768280029
    5. ' droite' → logprob: -4.651900768280029
    6. ' gauche' → logprob: -5.026900768280029
    7. 'right' → logprob: -5.401900768280029
    8. ' right' → logprob: -6.901900768280029
    9. '   ' → logprob: -7.151900768280029
    10. ' ' → logprob: -8.026900291442871

Token 315: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37811651825904846
    2. ' (' → logprob: -1.878116488456726
    3. '_positions' → logprob: -3.1281166076660156
    4. '   ' → logprob: -3.8781166076660156
    5. 's' → logprob: -4.003116607666016
    6. '=None' → logprob: -4.128116607666016
    7. 'positions' → logprob: -4.628116607666016
    8. ',' → logprob: -4.878116607666016
    9. '_pos' → logprob: -5.253116607666016
    10. ' ' → logprob: -5.253116607666016

Token 316: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.503555178642273
    2. 'L' → logprob: -1.378555178642273
    3. ')' → logprob: -2.7535552978515625
    4. 'None' → logprob: -3.8785552978515625
    5. ' R' → logprob: -4.2535552978515625
    6. ' ' → logprob: -5.2535552978515625
    7. 'set' → logprob: -5.5035552978515625
    8. ' L' → logprob: -5.6285552978515625
    9. ' (' → logprob: -5.8785552978515625
    10. '),' → logprob: -6.0035552978515625

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23047327995300293
    2. ')
' → logprob: -2.105473279953003
    3. '   ' → logprob: -3.480473279953003
    4. ',' → logprob: -4.105473518371582
    5. '):' → logprob: -4.980473518371582
    6. '),' → logprob: -4.980473518371582
    7. 'positions' → logprob: -5.105473518371582
    8. ' positions' → logprob: -5.855473518371582
    9. '#' → logprob: -6.480473518371582
    10. '_positions' → logprob: -6.480473518371582

Token 318: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6651654243469238
    2. ' =' → logprob: -1.6651654243469238
    3. 'positions' → logprob: -1.7901654243469238
    4. ' positions' → logprob: -3.790165424346924
    5. '#' → logprob: -3.790165424346924
    6. '
' → logprob: -3.915165424346924
    7. 'states' → logprob: -4.415165424346924
    8. ',' → logprob: -4.790165424346924
    9. ' states' → logprob: -5.040165424346924
    10. '=' → logprob: -5.290165424346924

Token 319: 'ement' (ID: 962)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4359873831272125
    2. 'positions' → logprob: -2.0609874725341797
    3. '=' → logprob: -2.1859874725341797
    4. 's' → logprob: -3.3109874725341797
    5. '_positions' → logprob: -3.4359874725341797
    6. 'pos' → logprob: -3.9359874725341797
    7. ' positions' → logprob: -5.06098747253418
    8. '_pos' → logprob: -5.56098747253418
    9. '_position' → logprob: -5.81098747253418
    10. 'position' → logprob: -5.93598747253418

Token 320: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6087876558303833
    2. 'positions' → logprob: -1.6087876558303833
    3. '   ' → logprob: -2.3587875366210938
    4. '=' → logprob: -2.3587875366210938
    5. 'states' → logprob: -4.483787536621094
    6. 'left' → logprob: -4.733787536621094
    7. 'pos' → logprob: -4.733787536621094
    8. ' positions' → logprob: -4.858787536621094
    9. 'initial' → logprob: -5.733787536621094
    10. 'set' → logprob: -5.733787536621094

Token 321: ' rien' (ID: 23082)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.26432347297668457
    2. ''' → logprob: -2.1393234729766846
    3. 'L' → logprob: -3.1393234729766846
    4. ' '' → logprob: -4.1393232345581055
    5. '('' → logprob: -4.3893232345581055
    6. 'None' → logprob: -4.5143232345581055
    7. '-' → logprob: -5.5143232345581055
    8. '{'' → logprob: -5.7643232345581055
    9. 'set' → logprob: -6.0143232345581055
    10. ''s' → logprob: -6.0143232345581055

Token 322: ' (-' (ID: 21382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24397151172161102
    2. '   ' → logprob: -2.118971586227417
    3. 'left' → logprob: -3.493971586227417
    4. 'positions' → logprob: -4.243971347808838
    5. ' (' → logprob: -4.743971347808838
    6. ',' → logprob: -4.743971347808838
    7. '=' → logprob: -5.243971347808838
    8. ':' → logprob: -5.868971347808838
    9. 'g' → logprob: -5.993971347808838
    10. ' left' → logprob: -6.118971347808838

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. ')' → logprob: -14.875028610229492
    4. ' -' → logprob: -15.250028610229492
    5. '2' → logprob: -15.750028610229492
    6. '   ' → logprob: -17.000028610229492
    7. '
' → logprob: -17.125028610229492
    8. ',' → logprob: -17.375028610229492
    9. '-' → logprob: -17.812528610229492
    10. '  ' → logprob: -18.625028610229492

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009351630578748882
    2. ')
' → logprob: -7.125935077667236
    3. ',' → logprob: -10.250935554504395
    4. '),' → logprob: -10.625935554504395
    5. ' )' → logprob: -10.625935554504395
    6. '   ' → logprob: -10.875935554504395
    7. '')' → logprob: -12.000935554504395
    8. ').' → logprob: -12.125935554504395
    9. ')

' → logprob: -12.375935554504395
    10. '):
' → logprob: -12.750935554504395

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15821704268455505
    2. ' states' → logprob: -3.033216953277588
    3. ' left' → logprob: -3.658216953277588
    4. 'states' → logprob: -4.158216953277588
    5. 'left' → logprob: -4.408216953277588
    6. 'g' → logprob: -4.408216953277588
    7. '    
' → logprob: -4.408216953277588
    8. ' gauche' → logprob: -5.158216953277588
    9. ',' → logprob: -5.283216953277588
    10. ' possible' → logprob: -5.783216953277588

Token 326: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.14785337448120117
    2. ' left' → logprob: -2.772853374481201
    3. 'states' → logprob: -3.272853374481201
    4. 'lg' → logprob: -4.022853374481201
    5. ' states' → logprob: -5.397853374481201
    6. 'dp' → logprob: -5.897853374481201
    7. 'g' → logprob: -5.897853374481201
    8. 'positions' → logprob: -6.397853374481201
    9. ' gauche' → logprob: -6.772853374481201
    10. 'state' → logprob: -7.022853374481201

Token 327: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.625525176525116
    2. 'states' → logprob: -1.6255252361297607
    3. ' left' → logprob: -2.3755252361297607
    4. 'dp' → logprob: -2.6255252361297607
    5. ' states' → logprob: -2.8755252361297607
    6. 'prev' → logprob: -5.125524997711182
    7. ' dp' → logprob: -5.125524997711182
    8. ' gauche' → logprob: -5.500524997711182
    9. 'possible' → logprob: -5.625524997711182
    10. 'state' → logprob: -5.750524997711182

Token 328: ' représente' (ID: 88912)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.426815390586853
    2. 'initialize' → logprob: -1.551815390586853
    3. 'n' → logprob: -1.926815390586853
    4. 'dp' → logprob: -2.0518155097961426
    5. 'init' → logprob: -2.9268155097961426
    6. 'continue' → logprob: -3.1768155097961426
    7. 'contin' → logprob: -3.8018155097961426
    8. ' initialize' → logprob: -3.8018155097961426
    9. 'v' → logprob: -4.051815509796143
    10. ' initialise' → logprob: -4.176815509796143

Token 329: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9776015281677246
    2. ' les' → logprob: -1.2276015281677246
    3. 'l' → logprob: -1.8526015281677246
    4. 'les' → logprob: -2.2276015281677246
    5. ' la' → logprob: -4.602601528167725
    6. ' par' → logprob: -4.727601528167725
    7. 'left' → logprob: -4.852601528167725
    8. ' ' → logprob: -4.852601528167725
    9. ' states' → logprob: -5.227601528167725
    10. 'states' → logprob: -5.727601528167725

Token 330: ' états' (ID: 184259)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3035888671875
    2. ' états' → logprob: -2.1785888671875
    3. ' positions' → logprob: -3.3035888671875
    4. 'p' → logprob: -3.6785888671875
    5. 'ét' → logprob: -3.6785888671875
    6. 'states' → logprob: -3.8035888671875
    7. ' states' → logprob: -4.3035888671875
    8. 'pos' → logprob: -4.6785888671875
    9. 'poss' → logprob: -5.8035888671875
    10. 'state' → logprob: -6.4285888671875

Token 331: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16220541298389435
    2. ' par' → logprob: -3.037205457687378
    3. ' possibles' → logprob: -3.412205457687378
    4. 'par' → logprob: -3.787205457687378
    5. ' ' → logprob: -4.537205219268799
    6. '=' → logprob: -4.912205219268799
    7. ' comme' → logprob: -5.287205219268799
    8. ' possible' → logprob: -5.537205219268799
    9. 'possible' → logprob: -5.662205219268799
    10. 'act' → logprob: -6.412205219268799

Token 332: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6472901105880737
    2. ' des' → logprob: -1.2722901105880737
    3. 'un' → logprob: -2.3972902297973633
    4. 'set' → logprob: -3.6472902297973633
    5. ' une' → logprob: -4.147290229797363
    6. 'des' → logprob: -4.397290229797363
    7. ' sets' → logprob: -4.397290229797363
    8. ' set' → logprob: -4.522290229797363
    9. 'une' → logprob: -4.772290229797363
    10. 'sets' → logprob: -5.397290229797363

Token 333: ' tuple' (ID: 31311)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.11741095781326294
    2. 'ensemble' → logprob: -2.242410898208618
    3. ' set' → logprob: -5.742411136627197
    4. ' ensemble' → logprob: -7.867411136627197
    5. 'tuple' → logprob: -7.992411136627197
    6. 's' → logprob: -8.617410659790039
    7. 'ense' → logprob: -8.867410659790039
    8. 'jeu' → logprob: -9.117410659790039
    9. 'e' → logprob: -9.867410659790039
    10. ''ensemble' → logprob: -10.867410659790039

Token 334: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19451966881752014
    2. ' (-' → logprob: -2.3195197582244873
    3. '(-' → logprob: -3.4445197582244873
    4. '(left' → logprob: -3.9445197582244873
    5. '(' → logprob: -4.944519519805908
    6. '(l' → logprob: -5.694519519805908
    7. ' =' → logprob: -5.694519519805908
    8. '   ' → logprob: -5.819519519805908
    9. '(g' → logprob: -6.069519519805908
    10. '(initial' → logprob: -6.944519519805908

Token 335: 'pos' (ID: 1103)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38006213307380676
    2. 'left' → logprob: -2.0050621032714844
    3. '(-' → logprob: -2.7550621032714844
    4. 'g' → logprob: -3.2550621032714844
    5. 'lg' → logprob: -3.2550621032714844
    6. '(left' → logprob: -4.005062103271484
    7. 'l' → logprob: -5.380062103271484
    8. ' -' → logprob: -5.505062103271484
    9. '(g' → logprob: -5.630062103271484
    10. 'gl' → logprob: -6.130062103271484

Token 336: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.19133895635604858
    2. 'g' → logprob: -1.9413390159606934
    3. '_left' → logprob: -4.441339015960693
    4. '_p' → logprob: -5.191339015960693
    5. '_' → logprob: -5.316339015960693
    6. ')' → logprob: -6.066339015960693
    7. 'G' → logprob: -6.066339015960693
    8. ',' → logprob: -6.691339015960693
    9. ' gauche' → logprob: -8.191338539123535
    10. 'left' → logprob: -8.191338539123535

Token 337: 'auche' (ID: 143141)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19019371271133423
    2. 'auche' → logprob: -1.8151936531066895
    3. 'a' → logprob: -4.9401936531066895
    4. 'au' → logprob: -6.1901936531066895
    5. '_,' → logprob: -8.065194129943848
    6. '_left' → logprob: -8.940194129943848
    7. 'g' → logprob: -9.315194129943848
    8. 'left' → logprob: -9.690194129943848
    9. ',left' → logprob: -9.690194129943848
    10. 'p' → logprob: -9.815194129943848

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004770803265273571
    2. ' ,' → logprob: -5.504770755767822
    3. ',pos' → logprob: -7.379770755767822
    4. ',p' → logprob: -11.37977123260498
    5. ',
' → logprob: -11.50477123260498
    6. ',right' → logprob: -11.50477123260498
    7. '   ' → logprob: -11.87977123260498
    8. ',left' → logprob: -12.12977123260498
    9. ')' → logprob: -12.50477123260498
    10. ' ' → logprob: -12.75477123260498

Token 339: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01110394112765789
    2. ' pos' → logprob: -4.511104106903076
    3. '   ' → logprob: -11.136103630065918
    4. ' ' → logprob: -11.886103630065918
    5. 'position' → logprob: -11.886103630065918
    6. '	pos' → logprob: -12.198603630065918
    7. '-' → logprob: -12.823603630065918
    8. '    ' → logprob: -13.136103630065918
    9. '  ' → logprob: -13.261103630065918
    10. '_pos' → logprob: -13.448603630065918

Token 340: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.3184925317764282
    2. '_g' → logprob: -1.8184925317764282
    3. 'dro' → logprob: -3.3184924125671387
    4. 'g' → logprob: -3.8184924125671387
    5. ')' → logprob: -3.8184924125671387
    6. 'd' → logprob: -3.9434924125671387
    7. ',' → logprob: -4.818492412567139
    8. '_' → logprob: -7.443492412567139
    9. 'e' → logprob: -7.568492412567139
    10. '_right' → logprob: -8.068492889404297

Token 341: 'roit' (ID: 22896)
  Prédit: 'roit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roit' → logprob: -0.6368394494056702
    2. 'ro' → logprob: -0.7618394494056702
    3. 'roi' → logprob: -7.136839389801025
    4. 'right' → logprob: -7.386839389801025
    5. '```' → logprob: -7.761839389801025
    6. ')' → logprob: -8.261839866638184
    7. '

' → logprob: -8.636839866638184
    8. 'r' → logprob: -8.761839866638184
    9. ',' → logprob: -8.761839866638184
    10. 'roits' → logprob: -8.886839866638184

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07155890017747879
    2. ',' → logprob: -2.696558952331543
    3. ')
' → logprob: -6.821558952331543
    4. '),' → logprob: -8.321558952331543
    5. ' )' → logprob: -8.946558952331543
    6. ' ,' → logprob: -10.071558952331543
    7. '   ' → logprob: -10.196558952331543
    8. '):
' → logprob: -10.821558952331543
    9. ')

' → logprob: -11.696558952331543
    10. ')\' → logprob: -12.446558952331543

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005225340370088816
    2. 'states' → logprob: -6.13022518157959
    3. '
' → logprob: -6.50522518157959
    4. '    
' → logprob: -7.13022518157959
    5. ' states' → logprob: -8.38022518157959
    6. 'current' → logprob: -9.00522518157959
    7. 'state' → logprob: -9.25522518157959
    8. ',' → logprob: -9.75522518157959
    9. 'possible' → logprob: -10.00522518157959
    10. 'dp' → logprob: -10.50522518157959

Token 344: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4453643560409546
    2. '   ' → logprob: -1.0703643560409546
    3. ' states' → logprob: -5.195364475250244
    4. 'current' → logprob: -5.695364475250244
    5. 'possible' → logprob: -6.070364475250244
    6. 'dp' → logprob: -6.070364475250244
    7. 'prev' → logprob: -6.945364475250244
    8. 'state' → logprob: -7.945364475250244
    9. 'et' → logprob: -8.070363998413086
    10. '    
' → logprob: -8.195363998413086

Token 345: ' positions' (ID: 15897)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.07419593632221222
    2. ' states' → logprob: -3.6991958618164062
    3. '   ' → logprob: -4.324195861816406
    4. 'current' → logprob: -4.449195861816406
    5. 'dp' → logprob: -4.949195861816406
    6. 'possible' → logprob: -5.449195861816406
    7. 'prev' → logprob: -5.699195861816406
    8. '#' → logprob: -6.824195861816406
    9. 'et' → logprob: -6.949195861816406
    10. 'state' → logprob: -7.074195861816406

Token 346: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04592837393283844
    2. '_g' → logprob: -3.420928478240967
    3. '=' → logprob: -4.920928478240967
    4. ',' → logprob: -7.545928478240967
    5. '_possible' → logprob: -7.545928478240967
    6. '_act' → logprob: -7.670928478240967
    7. 'g' → logprob: -7.795928478240967
    8. '_left' → logprob: -7.795928478240967
    9. '_states' → logprob: -8.170928001403809
    10. '_pos' → logprob: -8.295928001403809

Token 347: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4936504364013672
    2. 'set' → logprob: -2.243650436401367
    3. '{-' → logprob: -2.368650436401367
    4. ' -' → logprob: -2.493650436401367
    5. '{' → logprob: -3.368650436401367
    6. ' set' → logprob: -3.493650436401367
    7. '(-' → logprob: -3.618650436401367
    8. '   ' → logprob: -5.618650436401367
    9. ' (-' → logprob: -5.618650436401367
    10. ' {' → logprob: -5.868650436401367

Token 348: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23749925196170807
    2. '{-' → logprob: -2.362499237060547
    3. 'set' → logprob: -2.862499237060547
    4. '{' → logprob: -3.362499237060547
    5. '(-' → logprob: -3.737499237060547
    6. ' -' → logprob: -7.112499237060547
    7. ' set' → logprob: -8.362499237060547
    8. '[-' → logprob: -9.237499237060547
    9. 'range' → logprob: -9.487499237060547
    10. '{
' → logprob: -10.237499237060547

Token 349: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008880102075636387
    2. ' ,' → logprob: -5.383880138397217
    3. ')' → logprob: -7.133880138397217
    4. '<|end|>' → logprob: -7.133880138397217
    5. ',
' → logprob: -7.508880138397217
    6. ',-' → logprob: -7.633880138397217
    7. '-' → logprob: -7.883880138397217
    8. ' =' → logprob: -8.383879661560059
    9. '=' → logprob: -8.383879661560059
    10. ' -' → logprob: -8.633879661560059

Token 350: '3' (ID: 18)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16071036458015442
    2. '2' → logprob: -2.785710334777832
    3. '1' → logprob: -3.160710334777832
    4. ' -' → logprob: -3.285710334777832
    5. 'None' → logprob: -6.410710334777832
    6. '3' → logprob: -6.910710334777832
    7. ' ' → logprob: -6.910710334777832
    8. ',' → logprob: -6.910710334777832
    9. '4' → logprob: -7.660710334777832
    10. 'L' → logprob: -8.160710334777832

Token 351: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4412234127521515
    2. '   ' → logprob: -2.316223382949829
    3. ',' → logprob: -2.441223382949829
    4. ')' → logprob: -2.941223382949829
    5. ' =' → logprob: -3.316223382949829
    6. 'states' → logprob: -3.941223382949829
    7. '    
' → logprob: -4.816223621368408
    8. ',
' → logprob: -5.066223621368408
    9. '  
' → logprob: -5.191223621368408
    10. ')
' → logprob: -5.316223621368408

Token 352: ' panels' (ID: 30863)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3284592032432556
    2. ' L' → logprob: -1.5784592628479004
    3. '-' → logprob: -4.2034592628479
    4. ''L' → logprob: -4.3284592628479
    5. ' -' → logprob: -4.5784592628479
    6. ' '' → logprob: -4.5784592628479
    7. ''' → logprob: -5.0784592628479
    8. 'None' → logprob: -5.4534592628479
    9. ' les' → logprob: -5.4534592628479
    10. 'les' → logprob: -6.0784592628479

Token 353: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0267106294631958
    2. '   ' → logprob: -1.1517106294631958
    3. ',' → logprob: -2.0267105102539062
    4. ' =' → logprob: -2.2767105102539062
    5. 'states' → logprob: -3.6517105102539062
    6. 'positions' → logprob: -5.026710510253906
    7. ',
' → logprob: -5.151710510253906
    8. ')' → logprob: -5.276710510253906
    9. '```' → logprob: -5.651710510253906
    10. ' ,' → logprob: -5.776710510253906

Token 354: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5128649473190308
    2. '-' → logprob: -1.1378649473190308
    3. '   ' → logprob: -2.7628650665283203
    4. ' ' → logprob: -5.51286506652832
    5. 'pos' → logprob: -6.01286506652832
    6. '    ' → logprob: -6.13786506652832
    7. '  ' → logprob: -6.63786506652832
    8. '
' → logprob: -6.63786506652832
    9. 'None' → logprob: -7.38786506652832
    10. '    
' → logprob: -7.51286506652832

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.184812031686306e-05
    2. ' ' → logprob: -9.500082015991211
    3. '2' → logprob: -12.875082015991211
    4. ' -' → logprob: -13.500082015991211
    5. '=' → logprob: -14.000082015991211
    6. '-' → logprob: -14.500082015991211
    7. '   ' → logprob: -15.000082015991211
    8. '
' → logprob: -15.687582015991211
    9. '۱' → logprob: -15.750082015991211
    10. '```' → logprob: -15.875082015991211

Token 356: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.0285922288894653
    2. ' for' → logprob: -1.1535922288894653
    3. ',' → logprob: -2.403592109680176
    4. ')' → logprob: -2.528592109680176
    5. 'for' → logprob: -2.778592109680176
    6. '<|end|>' → logprob: -3.278592109680176
    7. 'pour' → logprob: -3.528592109680176
    8. ' =' → logprob: -4.403592109680176
    9. '=' → logprob: -5.653592109680176
    10. ' (' → logprob: -5.903592109680176

Token 357: ' "' (ID: 392)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.3000730872154236
    2. 'absence' → logprob: -2.5500731468200684
    3. ' aucune' → logprob: -3.3000731468200684
    4. ' aucun' → logprob: -3.3000731468200684
    5. 'initial' → logprob: -3.4250731468200684
    6. 'dé' → logprob: -4.300073146820068
    7. ' départ' → logprob: -5.300073146820068
    8. 'position' → logprob: -5.300073146820068
    9. 'None' → logprob: -5.300073146820068
    10. ' initial' → logprob: -5.300073146820068

Token 358: 'auc' (ID: 11816)
  Prédit: 'auc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.2099582403898239
    2. 'r' → logprob: -3.08495831489563
    3. 'vide' → logprob: -3.58495831489563
    4. 'dé' → logprob: -3.58495831489563
    5. 'initial' → logprob: -3.95995831489563
    6. 'absence' → logprob: -4.084958076477051
    7. 'none' → logprob: -5.084958076477051
    8. ' aucun' → logprob: -5.084958076477051
    9. 'pas' → logprob: -5.209958076477051
    10. 'start' → logprob: -5.459958076477051

Token 359: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.25218552350997925
    2. 'une' → logprob: -1.502185583114624
    3. 'u' → logprob: -9.877185821533203
    4. '#' → logprob: -11.002185821533203
    5. '
' → logprob: -11.002185821533203
    6. 't' → logprob: -11.502185821533203
    7. '-' → logprob: -11.502185821533203
    8. 'n' → logprob: -11.752185821533203
    9. 'unes' → logprob: -11.752185821533203
    10. '

' → logprob: -11.752185821533203

Token 360: ' pied' (ID: 20242)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8677948713302612
    2. '"' → logprob: -1.6177948713302612
    3. ')' → logprob: -1.9927948713302612
    4. '">' → logprob: -2.242794990539551
    5. 'p' → logprob: -3.617794990539551
    6. 'state' → logprob: -3.867794990539551
    7. ' pied' → logprob: -4.117794990539551
    8. 'position' → logprob: -4.242794990539551
    9. 'foot' → logprob: -4.992794990539551
    10. '_' → logprob: -5.242794990539551

Token 361: ' dessus' (ID: 67454)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.21888746321201324
    2. '"' → logprob: -1.718887448310852
    3. ')' → logprob: -5.0938873291015625
    4. ')"' → logprob: -5.0938873291015625
    5. '",' → logprob: -6.4688873291015625
    6. ' posé' → logprob: -7.4688873291015625
    7. 'position' → logprob: -7.8438873291015625
    8. '")
' → logprob: -7.8438873291015625
    9. ')")' → logprob: -7.9688873291015625
    10. ' placé' → logprob: -8.218887329101562

Token 362: ' encore' (ID: 14043)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.4611815810203552
    2. '"' → logprob: -1.336181640625
    3. '")' → logprob: -2.711181640625
    4. ')' → logprob: -3.961181640625
    5. ')"
' → logprob: -3.961181640625
    6. '"
' → logprob: -7.211181640625
    7. '"
' → logprob: -8.586181640625
    8. '')"' → logprob: -8.586181640625
    9. ')",' → logprob: -8.961181640625
    10. ',' → logprob: -9.086181640625

Token 363: '"' (ID: 1)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.5190677046775818
    2. '"' → logprob: -1.1440677642822266
    3. '")' → logprob: -2.6440677642822266
    4. ')' → logprob: -4.269067764282227
    5. ')"
' → logprob: -7.269067764282227
    6. '')"' → logprob: -8.769067764282227
    7. ')")' → logprob: -9.269067764282227
    8. '"
' → logprob: -9.394067764282227
    9. ' )' → logprob: -10.019067764282227
    10. ',' → logprob: -10.769067764282227

Token 364: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040775928646326065
    2. '
' → logprob: -4.165775775909424
    3. 'states' → logprob: -4.165775775909424
    4. '    
' → logprob: -6.040775775909424
    5. ',' → logprob: -6.290775775909424
    6. 'dp' → logprob: -6.415775775909424
    7. 'possible' → logprob: -7.290775775909424
    8. 'current' → logprob: -7.790775775909424
    9. 'positions' → logprob: -8.290776252746582
    10. 'state' → logprob: -8.415776252746582

Token 365: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.010868002660572529
    2. 'd' → logprob: -5.385868072509766
    3. 'tour' → logprob: -5.760868072509766
    4. 'depart' → logprob: -7.010868072509766
    5. ' départ' → logprob: -7.385868072509766
    6. 'de' → logprob: -7.635868072509766
    7. 'prem' → logprob: -8.260868072509766
    8. 'start' → logprob: -8.510868072509766
    9. '   ' → logprob: -9.260868072509766
    10. ' début' → logprob: -9.510868072509766

Token 366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07703795284032822
    2. '
' → logprob: -3.327038049697876
    3. 'states' → logprob: -3.952038049697876
    4. ',' → logprob: -4.827037811279297
    5. '    
' → logprob: -5.952037811279297
    6. 'dp' → logprob: -6.077037811279297
    7. 'possible' → logprob: -6.702037811279297
    8. ',
' → logprob: -7.202037811279297
    9. 'current' → logprob: -7.577037811279297
    10. '
' → logprob: -7.577037811279297

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004001822788268328
    2. '    
' → logprob: -6.504001617431641
    3. 'states' → logprob: -6.504001617431641
    4. '
' → logprob: -7.379001617431641
    5. ' states' → logprob: -9.00400161743164
    6. 'dp' → logprob: -9.87900161743164
    7. 'current' → logprob: -10.12900161743164
    8. 'prev' → logprob: -10.50400161743164
    9. 'state' → logprob: -10.62900161743164
    10. 'possible' → logprob: -10.75400161743164

Token 368: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2727622985839844
    2. '   ' → logprob: -1.7727622985839844
    3. 'dp' → logprob: -3.7727622985839844
    4. ' states' → logprob: -4.022762298583984
    5. 'prev' → logprob: -4.897762298583984
    6. 'current' → logprob: -5.272762298583984
    7. 'et' → logprob: -5.522762298583984
    8. 'possible' → logprob: -5.647762298583984
    9. 'etat' → logprob: -6.397762298583984
    10. 'state' → logprob: -6.397762298583984

Token 369: ' Cependant' (ID: 74480)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.3196958601474762
    2. 'dp' → logprob: -1.8196958303451538
    3. 'prev' → logprob: -3.6946959495544434
    4. ' states' → logprob: -3.6946959495544434
    5. 'current' → logprob: -3.8196959495544434
    6. 'possible' → logprob: -4.569695949554443
    7. ' dp' → logprob: -5.444695949554443
    8. 'et' → logprob: -5.444695949554443
    9. '#' → logprob: -5.694695949554443
    10. '   ' → logprob: -5.819695949554443

Token 370: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08483103662729263
    2. '   ' → logprob: -2.5848309993743896
    3. ' ,' → logprob: -6.584831237792969
    4. '#' → logprob: -6.834831237792969
    5. ' les' → logprob: -7.584831237792969
    6. ' la' → logprob: -7.959831237792969
    7. '    ' → logprob: -7.959831237792969
    8. ':' → logprob: -8.584831237792969
    9. '  ' → logprob: -8.584831237792969
    10. ' il' → logprob: -8.834831237792969

Token 371: ' commence' (ID: 44755)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.7036476135253906
    2. '#' → logprob: -1.8286476135253906
    3. 'n' → logprob: -1.8286476135253906
    4. ' continue' → logprob: -2.2036476135253906
    5. 'def' → logprob: -2.7036476135253906
    6. ' ne' → logprob: -2.9536476135253906
    7. ' n' → logprob: -3.0786476135253906
    8. ' peut' → logprob: -3.3286476135253906
    9. 'contin' → logprob: -3.5786476135253906
    10. 'util' → logprob: -3.9536476135253906

Token 372: ' directement' (ID: 52317)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.8629400730133057
    2. ' par' → logprob: -0.9879400730133057
    3. 'par' → logprob: -2.4879400730133057
    4. ' with' → logprob: -3.1129400730133057
    5. 'with' → logprob: -3.2379400730133057
    6. 'avec' → logprob: -4.112939834594727
    7. ' à' → logprob: -5.612939834594727
    8. ' ' → logprob: -5.987939834594727
    9. ' toujours' → logprob: -6.362939834594727
    10. ' =' → logprob: -6.362939834594727

Token 373: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3106975257396698
    2. ' avec' → logprob: -2.310697555541992
    3. 'avec' → logprob: -2.310697555541992
    4. 'par' → logprob: -3.810697555541992
    5. 'with' → logprob: -4.060697555541992
    6. ' with' → logprob: -5.060697555541992
    7. ' par' → logprob: -5.060697555541992
    8. 'states' → logprob: -5.310697555541992
    9. ' ' → logprob: -5.685697555541992
    10. '#' → logprob: -5.935697555541992

Token 374: ' la' (ID: 557)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.009187032468616962
    2. 'set' → logprob: -5.5091872215271
    3. ' {' → logprob: -6.2591872215271
    4. ' {(' → logprob: -6.2591872215271
    5. 'states' → logprob: -7.3841872215271
    6. 'initial' → logprob: -8.884186744689941
    7. '{-' → logprob: -9.009186744689941
    8. ' ' → logprob: -9.634186744689941
    9. 'state' → logprob: -10.009186744689941
    10. ' set' → logprob: -10.134186744689941

Token 375: ' première' (ID: 23423)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5771898031234741
    2. '0' → logprob: -1.5771898031234741
    3. '{' → logprob: -2.2021899223327637
    4. '#' → logprob: -4.202189922332764
    5. 'for' → logprob: -4.327189922332764
    6. 'prem' → logprob: -4.577189922332764
    7. 'def' → logprob: -4.952189922332764
    8. '-' → logprob: -4.952189922332764
    9. 'position' → logprob: -5.077189922332764
    10. '{-' → logprob: -5.202189922332764

Token 376: ' fl' (ID: 1548)
  Prédit: ' fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fl' → logprob: -0.2579324245452881
    2. ' position' → logprob: -3.007932424545288
    3. 'position' → logprob: -3.257932424545288
    4. 'fl' → logprob: -3.382932424545288
    5. ' arrow' → logprob: -3.632932424545288
    6. ' ' → logprob: -3.882932424545288
    7. 'arrow' → logprob: -4.382932662963867
    8. ' étape' → logprob: -5.007932662963867
    9. ' fle' → logprob: -5.382932662963867
    10. ' step' → logprob: -5.632932662963867

Token 377: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.009261084720492363
    2. 'è' → logprob: -5.384261131286621
    3. 'êche' → logprob: -5.634261131286621
    4. 'e' → logprob: -7.384261131286621
    5. 'é' → logprob: -8.509261131286621
    6. 'èque' → logprob: -10.384261131286621
    7. '#' → logprob: -10.384261131286621
    8. 'ê' → logprob: -10.884261131286621
    9. 'o' → logprob: -11.009261131286621
    10. 'éch' → logprob: -11.446761131286621

Token 378: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19772475957870483
    2. '
' → logprob: -2.0727248191833496
    3. '    
' → logprob: -3.8227248191833496
    4. ',' → logprob: -3.9477248191833496
    5. '   
' → logprob: -5.69772481918335
    6. '  
' → logprob: -6.07272481918335
    7. ' =' → logprob: -6.82272481918335
    8. ':' → logprob: -6.94772481918335
    9. ',
' → logprob: -7.07272481918335
    10. ' ,' → logprob: -7.57272481918335

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023605898022651672
    2. '    
' → logprob: -4.148605823516846
    3. '
' → logprob: -5.398605823516846
    4. ' states' → logprob: -6.773605823516846
    5. 'states' → logprob: -6.898605823516846
    6. '   
' → logprob: -8.398606300354004
    7. '  
' → logprob: -8.648606300354004
    8. ' 
' → logprob: -9.148606300354004
    9. 'def' → logprob: -9.898606300354004
    10. 'state' → logprob: -10.273606300354004

Token 380: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.588863730430603
    2. ' states' → logprob: -1.088863730430603
    3. 'states' → logprob: -2.5888638496398926
    4. '    
' → logprob: -4.963863849639893
    5. '
' → logprob: -4.963863849639893
    6. ' possible' → logprob: -5.588863849639893
    7. ' dp' → logprob: -5.838863849639893
    8. ' 
' → logprob: -6.213863849639893
    9. ' current' → logprob: -6.338863849639893
    10. ' états' → logprob: -6.588863849639893

Token 381: ' Initial' (ID: 9209)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.49280717968940735
    2. 'states' → logprob: -2.117807149887085
    3. ' dp' → logprob: -2.867807149887085
    4. ' initial' → logprob: -2.992807149887085
    5. '   ' → logprob: -3.117807149887085
    6. 'dp' → logprob: -3.242807149887085
    7. ' current' → logprob: -3.742807149887085
    8. ' possible' → logprob: -4.867807388305664
    9. 'initial' → logprob: -4.992807388305664
    10. ' left' → logprob: -5.117807388305664

Token 382: 'ement' (ID: 962)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.2647435665130615
    2. '_states' → logprob: -1.8897435665130615
    3. '_pos' → logprob: -2.6397435665130615
    4. '_positions' → logprob: -5.764743804931641
    5. 'state' → logprob: -6.514743804931641
    6. ' =' → logprob: -6.639743804931641
    7. '_position' → logprob: -7.264743804931641
    8. 'pos' → logprob: -7.264743804931641
    9. 'states' → logprob: -7.389743804931641
    10. '_' → logprob: -7.889743804931641

Token 383: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6694809794425964
    2. ' states' → logprob: -1.2944810390472412
    3. 'states' → logprob: -1.7944810390472412
    4. ' =' → logprob: -4.919480800628662
    5. ' left' → logprob: -5.044480800628662
    6. ' initial' → logprob: -5.169480800628662
    7. ' current' → logprob: -5.419480800628662
    8. 'current' → logprob: -5.669480800628662
    9. 'left' → logprob: -5.794480800628662
    10. 'positions' → logprob: -5.919480800628662

Token 384: ' pieds' (ID: 72670)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5323168039321899
    2. 'positions' → logprob: -1.78231680393219
    3. ' states' → logprob: -3.1573166847229004
    4. '#' → logprob: -3.2823166847229004
    5. ' états' → logprob: -3.2823166847229004
    6. 'pos' → logprob: -3.4073166847229004
    7. 'ét' → logprob: -4.0323166847229
    8. 'et' → logprob: -4.1573166847229
    9. 'left' → logprob: -4.6573166847229
    10. 'state' → logprob: -5.0323166847229

Token 385: ' peuvent' (ID: 21321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04160863533616066
    2. '=' → logprob: -3.9166085720062256
    3. ' sont' → logprob: -5.041608810424805
    4. 'pos' → logprob: -5.291608810424805
    5. 's' → logprob: -5.541608810424805
    6. ' sur' → logprob: -7.291608810424805
    7. 'sur' → logprob: -7.416608810424805
    8. '_positions' → logprob: -7.541608810424805
    9. '_pos' → logprob: -8.166608810424805
    10. 'positions' → logprob: -8.166608810424805

Token 386: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.14759081602096558
    2. 'se' → logprob: -3.1475908756256104
    3. ' être' → logprob: -3.5225908756256104
    4. 'app' → logprob: -3.6475908756256104
    5. 'etre' → logprob: -5.147590637207031
    6. 'prendre' → logprob: -5.647590637207031
    7. 'p' → logprob: -5.897590637207031
    8. 's' → logprob: -5.897590637207031
    9. 'êtres' → logprob: -6.022590637207031
    10. 'aller' → logprob: -6.272590637207031

Token 387: ' n' (ID: 297)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plac' → logprob: -1.3315868377685547
    2. ' plac' → logprob: -1.3315868377685547
    3. 'pos' → logprob: -1.4565868377685547
    4. '-' → logprob: -2.2065868377685547
    5. 'sur' → logprob: -3.5815868377685547
    6. ' sur' → logprob: -3.8315868377685547
    7. '(-' → logprob: -4.081586837768555
    8. 'position' → logprob: -4.206586837768555
    9. ' pos' → logprob: -4.831586837768555
    10. 'aux' → logprob: -5.081586837768555

Token 388: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.044355977326631546
    2. 'importe' → logprob: -3.294355869293213
    3. 'import' → logprob: -5.919355869293213
    4. 'either' → logprob: -6.544355869293213
    5. '-' → logprob: -8.044356346130371
    6. 'sur' → logprob: -8.294356346130371
    7. ''import' → logprob: -8.669356346130371
    8. 'placed' → logprob: -8.794356346130371
    9. 'on' → logprob: -8.919356346130371
    10. '’importe' → logprob: -8.919356346130371

Token 389: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.09826913475990295
    2. ' où' → logprob: -3.22326922416687
    3. '-' → logprob: -3.72326922416687
    4. 'where' → logprob: -3.84826922416687
    5. ' where' → logprob: -6.348268985748291
    6. 'quel' → logprob: -6.598268985748291
    7. 'quoi' → logprob: -6.973268985748291
    8. ' -' → logprob: -7.223268985748291
    9. '   ' → logprob: -7.473268985748291
    10. 'quelle' → logprob: -7.598268985748291

Token 390: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7052091956138611
    2. '   ' → logprob: -1.0802092552185059
    3. 'states' → logprob: -2.830209255218506
    4. ':' → logprob: -3.705209255218506
    5. 'state' → logprob: -3.830209255218506
    6. ' (' → logprob: -4.580209255218506
    7. 'possible' → logprob: -4.830209255218506
    8. ' states' → logprob: -4.830209255218506
    9. 'positions' → logprob: -5.830209255218506
    10. 'initial' → logprob: -5.955209255218506

Token 391: 'on' (ID: 263)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6057381629943848
    2. ' -' → logprob: -1.8557381629943848
    3. '{' → logprob: -1.9807381629943848
    4. '(-' → logprob: -2.3557381629943848
    5. '{-' → logprob: -2.6057381629943848
    6. ' (-' → logprob: -2.8557381629943848
    7. ' {' → logprob: -2.9807381629943848
    8. ' range' → logprob: -3.7307381629943848
    9. 'range' → logprob: -3.7307381629943848
    10. ')' → logprob: -3.8557381629943848

Token 392: ' peut' (ID: 9216)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0534077882766724
    2. '#' → logprob: -2.178407669067383
    3. ' ne' → logprob: -2.428407669067383
    4. 'n' → logprob: -2.428407669067383
    5. ' considère' → logprob: -2.553407669067383
    6. ')' → logprob: -3.178407669067383
    7. ' suppose' → logprob: -3.428407669067383
    8. ' peut' → logprob: -3.803407669067383
    9. ' set' → logprob: -4.053407669067383
    10. 's' → logprob: -4.303407669067383

Token 393: ' ass' (ID: 1680)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.8728511333465576
    2. 'app' → logprob: -1.2478511333465576
    3. ' app' → logprob: -2.3728511333465576
    4. 'poser' → logprob: -3.4978511333465576
    5. 'dire' → logprob: -3.7478511333465576
    6. ' mettre' → logprob: -3.9978511333465576
    7. ' poser' → logprob: -4.122851371765137
    8. 'placer' → logprob: -4.747851371765137
    9. 'pres' → logprob: -4.747851371765137
    10. 'penser' → logprob: -4.872851371765137

Token 394: 'umer' (ID: 3986)
  Prédit: 'igner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igner' → logprob: -0.2421818971633911
    2. 'umer' → logprob: -2.6171817779541016
    3. 'ocier' → logprob: -3.1171817779541016
    4. 'ign' → logprob: -3.2421817779541016
    5. 'e' → logprob: -4.367181777954102
    6. 'er' → logprob: -4.867181777954102
    7. '#' → logprob: -5.117181777954102
    8. '```' → logprob: -5.242181777954102
    9. 'omer' → logprob: -6.117181777954102
    10. 'em' → logprob: -6.117181777954102

Token 395: ' qu' (ID: 474)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2905356884002686
    2. '(-' → logprob: -1.7905356884002686
    3. ' (-' → logprob: -1.9155356884002686
    4. ' -' → logprob: -2.0405356884002686
    5. ' que' → logprob: -2.2905356884002686
    6. ' sur' → logprob: -3.6655356884002686
    7. ' (' → logprob: -3.7905356884002686
    8. 'pos' → logprob: -4.165535926818848
    9. '{-' → logprob: -4.290535926818848
    10. 'que' → logprob: -4.290535926818848

Token 396: ''ils' (ID: 41108)
  Prédit: ''ils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ils' → logprob: -0.2565567195415497
    2. ' ils' → logprob: -2.131556749343872
    3. ' they' → logprob: -3.756556749343872
    4. ''on' → logprob: -3.756556749343872
    5. ' on' → logprob: -4.381556510925293
    6. 'e' → logprob: -4.631556510925293
    7. '-' → logprob: -5.131556510925293
    8. 'ils' → logprob: -5.131556510925293
    9. 'on' → logprob: -5.256556510925293
    10. '’ils' → logprob: -5.506556510925293

Token 397: ' démar' (ID: 72663)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.9788232445716858
    2. 'import' → logprob: -1.603823184967041
    3. ' n' → logprob: -2.478823184967041
    4. ')' → logprob: -2.603823184967041
    5. ' peuvent' → logprob: -3.228823184967041
    6. 'n' → logprob: -3.228823184967041
    7. ' are' → logprob: -3.478823184967041
    8. '#' → logprob: -3.603823184967041
    9. ' both' → logprob: -3.853823184967041
    10. 's' → logprob: -4.478823184967041

Token 398: 'ent' (ID: 299)
  Prédit: 'rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rent' → logprob: -0.1877857893705368
    2. 'ent' → logprob: -1.9377857446670532
    3. 'r' → logprob: -4.812785625457764
    4. 'rer' → logprob: -5.312785625457764
    5. 're' → logprob: -6.062785625457764
    6. 'rant' → logprob: -6.437785625457764
    7. '=' → logprob: -6.562785625457764
    8. '   ' → logprob: -6.812785625457764
    9. 'ont' → logprob: -7.062785625457764
    10. 'ront' → logprob: -7.500285625457764

Token 399: ' libres' (ID: 79503)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.5075039267539978
    2. 'sur' → logprob: -1.3825039863586426
    3. '-' → logprob: -3.1325039863586426
    4. 'pos' → logprob: -4.382503986358643
    5. ')' → logprob: -4.632503986358643
    6. ' au' → logprob: -4.757503986358643
    7. ' à' → logprob: -4.757503986358643
    8. 'aux' → logprob: -4.882503986358643
    9. 'au' → logprob: -5.132503986358643
    10. ' -' → logprob: -5.257503986358643

Token 400: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14075101912021637
    2. ' )' → logprob: -2.7657511234283447
    3. ',' → logprob: -3.1407511234283447
    4. '),' → logprob: -4.765750885009766
    5. ').' → logprob: -4.890750885009766
    6. ' ,' → logprob: -6.265750885009766
    7. ' ' → logprob: -7.265750885009766
    8. ' et' → logprob: -7.390750885009766
    9. ' ),' → logprob: -7.515750885009766
    10. '):' → logprob: -7.640750885009766

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054298367351293564
    2. ' states' → logprob: -3.6792984008789062
    3. 'states' → logprob: -4.554298400878906
    4. '    
' → logprob: -4.679298400878906
    5. '
' → logprob: -5.179298400878906
    6. ' possible' → logprob: -7.929298400878906
    7. ' current' → logprob: -8.304298400878906
    8. ' 
' → logprob: -8.429298400878906
    9. '   
' → logprob: -8.429298400878906
    10. 'current' → logprob: -8.929298400878906

Token 402: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.07093001157045364
    2. 'current' → logprob: -3.445930004119873
    3. '#' (adapté à ' #') → logprob: -4.695930004119873
    4. 'et' → logprob: -5.195930004119873
    5. 'possible' → logprob: -5.320930004119873
    6. ' states' → logprob: -5.445930004119873
    7. 'prev' → logprob: -5.695930004119873
    8. 'ét' → logprob: -6.320930004119873
    9. 'etat' → logprob: -6.320930004119873
    10. 'dp' → logprob: -6.820930004119873

Token 403: ' Pour' (ID: 13931)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.15163952112197876
    2. 'dp' → logprob: -2.651639461517334
    3. ' states' → logprob: -3.901639461517334
    4. 'current' → logprob: -4.026639461517334
    5. '#' → logprob: -4.526639461517334
    6. 'prev' → logprob: -5.526639461517334
    7. 'possible' → logprob: -5.526639461517334
    8. 'et' → logprob: -6.026639461517334
    9. 'etat' → logprob: -6.151639461517334
    10. ' dp' → logprob: -6.276639461517334

Token 404: ' respecter' (ID: 107203)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6265451908111572
    2. 'i' → logprob: -1.5015451908111572
    3. ' l' → logprob: -3.6265451908111572
    4. ' initial' → logprob: -3.6265451908111572
    5. ' current' → logprob: -3.7515451908111572
    6. 'pos' → logprob: -3.7515451908111572
    7. ' pos' → logprob: -4.126544952392578
    8. ' state' → logprob: -4.126544952392578
    9. ' states' → logprob: -4.376544952392578
    10. ' la' → logprob: -4.501544952392578

Token 405: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.12221132963895798
    2. ' l' → logprob: -2.747211217880249
    3. ' les' → logprob: -3.997211217880249
    4. 'la' → logprob: -4.372211456298828
    5. 'l' → logprob: -5.247211456298828
    6. ' le' → logprob: -5.497211456298828
    7. '#' → logprob: -6.122211456298828
    8. 'le' → logprob: -6.622211456298828
    9. 'les' → logprob: -6.622211456298828
    10. ' #' → logprob: -7.122211456298828

Token 406: ' règle' (ID: 115826)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.8125543594360352
    2. '#' → logprob: -1.9375543594360352
    3. 'altern' → logprob: -2.062554359436035
    4. 'contr' → logprob: -2.062554359436035
    5. 'r' → logprob: -3.687554359436035
    6. ' altern' → logprob: -4.062554359436035
    7. 'condition' → logprob: -4.562554359436035
    8. ' règle' → logprob: -4.937554359436035
    9. 'pro' → logprob: -5.062554359436035
    10. ' première' → logprob: -5.062554359436035

Token 407: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49396631121635437
    2. ' d' → logprob: -1.6189663410186768
    3. 'de' → logprob: -3.3689663410186768
    4. 'd' → logprob: -3.6189663410186768
    5. ' que' → logprob: -3.7439663410186768
    6. '#' → logprob: -3.8689663410186768
    7. ' du' → logprob: -3.9939663410186768
    8. ' des' → logprob: -4.243966102600098
    9. '   ' → logprob: -4.493966102600098
    10. 's' → logprob: -4.618966102600098

Token 408: ''inter' (ID: 55731)
  Prédit: ''al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''al' → logprob: -0.5329774022102356
    2. ''' → logprob: -2.407977342605591
    3. 'altern' → logprob: -2.657977342605591
    4. 'e' → logprob: -2.657977342605591
    5. ' l' → logprob: -3.532977342605591
    6. ' altern' → logprob: -4.03297758102417
    7. 'a' → logprob: -4.15797758102417
    8. ' la' → logprob: -4.15797758102417
    9. '#' → logprob: -4.15797758102417
    10. ''ordre' → logprob: -4.15797758102417

Token 409: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9301484823226929
    2. 'val' → logprob: -1.1801484823226929
    3. 'pr' → logprob: -2.4301486015319824
    4. '#' → logprob: -3.4301486015319824
    5. 'face' → logprob: -3.6801486015319824
    6. 'change' → logprob: -3.8051486015319824
    7. 'nal' → logprob: -4.180148601531982
    8. 'pret' → logprob: -4.305148601531982
    9. 'altern' → logprob: -4.305148601531982
    10. 'le' → logprob: -4.430148601531982

Token 410: 'iction' (ID: 4090)
  Prédit: 'iction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iction' → logprob: -0.08776222169399261
    2. 'ire' → logprob: -3.2127621173858643
    3. 'it' → logprob: -3.8377621173858643
    4. 'd' → logprob: -4.712762355804443
    5. 'ir' → logprob: -5.962762355804443
    6. 'ition' → logprob: -6.337762355804443
    7. 'ite' → logprob: -6.587762355804443
    8. '#' → logprob: -7.087762355804443
    9. 'dit' → logprob: -7.087762355804443
    10. 'is' → logprob: -7.462762355804443

Token 411: ' "' (ID: 392)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15959395468235016
    2. ' des' → logprob: -2.7845940589904785
    3. 'de' → logprob: -3.1595940589904785
    4. ' d' → logprob: -4.5345940589904785
    5. '   ' → logprob: -4.9095940589904785
    6. 'des' → logprob: -5.0345940589904785
    7. '_de' → logprob: -5.2845940589904785
    8. 'd' → logprob: -5.7845940589904785
    9. ',' → logprob: -6.0345940589904785
    10. '#' → logprob: -6.2845940589904785

Token 412: 'm' (ID: 76)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3449738323688507
    2. 'de' → logprob: -1.3449738025665283
    3. 'd' → logprob: -4.719974040985107
    4. ' d' → logprob: -4.969974040985107
    5. ' ' → logprob: -6.094974040985107
    6. ' des' → logprob: -6.344974040985107
    7. ' du' → logprob: -6.469974040985107
    8. '   ' → logprob: -6.469974040985107
    9. '#' → logprob: -6.594974040985107
    10. 'des' → logprob: -6.969974040985107

Token 413: 'ême' (ID: 7961)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.23785501718521118
    2. 'mettre' → logprob: -3.4878549575805664
    3. 'onter' → logprob: -3.6128549575805664
    4. 'o' → logprob: -3.7378549575805664
    5. 'a' → logprob: -4.112854957580566
    6. 'arch' → logprob: -4.237854957580566
    7. 'm' → logprob: -4.612854957580566
    8. 'p' → logprob: -4.737854957580566
    9. 'e' → logprob: -4.987854957580566
    10. 'ar' → logprob: -4.987854957580566

Token 414: ' panneau' (ID: 186597)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9604336619377136
    2. 'panel' → logprob: -1.5854337215423584
    3. ' panneau' → logprob: -1.8354337215423584
    4. ' panel' → logprob: -2.4604337215423584
    5. '_' → logprob: -2.7104337215423584
    6. '_p' → logprob: -2.9604337215423584
    7. 'pan' → logprob: -4.210433483123779
    8. ' pied' → logprob: -4.835433483123779
    9. '_panel' → logprob: -4.835433483123779
    10. 'pane' → logprob: -5.710433483123779

Token 415: ' deux' (ID: 10301)
  Prédit: ' pressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pressed' → logprob: -0.8361125588417053
    2. '"' → logprob: -1.7111124992370605
    3. ' "' → logprob: -2.0861124992370605
    4. ' de' → logprob: -2.5861124992370605
    5. ' ' → logprob: -3.4611124992370605
    6. ' press' → logprob: -3.9611124992370605
    7. ' ==' → logprob: -4.4611124992370605
    8. ' not' → logprob: -4.4611124992370605
    9. '_pressed' → logprob: -4.4611124992370605
    10. 'press' → logprob: -4.5861124992370605

Token 416: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.4705544412136078
    2. 'fois' → logprob: -1.3455544710159302
    3. '_' → logprob: -2.3455543518066406
    4. ' ' → logprob: -4.470554351806641
    5. ' _' → logprob: -6.095554351806641
    6. ' ' → logprob: -6.845554351806641
    7. ' times' → logprob: -7.095554351806641
    8. '_times' → logprob: -7.470554351806641
    9. 'times' → logprob: -7.595554351806641
    10. '_f' → logprob: -7.845554351806641

Token 417: ' cons' (ID: 1473)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.35832104086875916
    2. 'de' → logprob: -1.3583210706710815
    3. ' ' → logprob: -3.983320951461792
    4. ' cons' → logprob: -4.233321189880371
    5. '_de' → logprob: -5.608321189880371
    6. '_' → logprob: -5.733321189880371
    7. ' à' → logprob: -7.483321189880371
    8. '   ' → logprob: -7.483321189880371
    9. ' ' → logprob: -7.733321189880371
    10. 'à' → logprob: -8.108321189880371

Token 418: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0012280851369723678
    2. 'ecut' → logprob: -6.751227855682373
    3. 'éc' → logprob: -10.501228332519531
    4. 'é' → logprob: -10.751228332519531
    5. '   ' → logprob: -13.751228332519531
    6. '{' → logprob: -13.751228332519531
    7. 'e' → logprob: -13.876228332519531
    8. 'ec' → logprob: -14.126228332519531
    9. 'secut' → logprob: -14.126228332519531
    10. 'cut' → logprob: -14.751228332519531

Token 419: 'ives' (ID: 2264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0808180496096611
    2. 'ive' → logprob: -2.955817937850952
    3. '   ' → logprob: -4.580818176269531
    4. 'ives' → logprob: -5.455818176269531
    5. ' ' → logprob: -5.830818176269531
    6. 'ut' → logprob: -6.205818176269531
    7. 'e' → logprob: -6.580818176269531
    8. 'u' → logprob: -7.205818176269531
    9. 'i' → logprob: -7.330818176269531
    10. 'utive' → logprob: -7.705818176269531

Token 420: '"' (ID: 1)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.23985569179058075
    2. '"' → logprob: -2.2398557662963867
    3. ' ",' → logprob: -3.7398557662963867
    4. ',' → logprob: -4.114855766296387
    5. ',"' → logprob: -4.239855766296387
    6. '":' → logprob: -4.239855766296387
    7. ' "' → logprob: -4.489855766296387
    8. '   ' → logprob: -5.114855766296387
    9. ')",' → logprob: -5.364855766296387
    10. '":
' → logprob: -6.489855766296387

Token 421: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4346219301223755
    2. ',' → logprob: -1.0596219301223755
    3. ' ,' → logprob: -6.184621810913086
    4. ':' → logprob: -6.684621810913086
    5. '#' → logprob: -7.059621810913086
    6. ',
' → logprob: -7.934621810913086
    7. '    
' → logprob: -8.809621810913086
    8. 'def' → logprob: -9.184621810913086
    9. ' ' → logprob: -9.309621810913086
    10. ' last' → logprob: -9.434621810913086

Token 422: ' altern' (ID: 7310)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9161962270736694
    2. 'l' → logprob: -1.5411962270736694
    3. 'd' → logprob: -2.166196346282959
    4. 'alter' → logprob: -2.416196346282959
    5. 'la' → logprob: -3.666196346282959
    6. ' l' → logprob: -3.791196346282959
    7. '   ' → logprob: -4.166196346282959
    8. 'altern' → logprob: -4.166196346282959
    9. 'de' → logprob: -4.291196346282959
    10. ' alter' → logprob: -4.291196346282959

Token 423: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.6026700139045715
    2. 'er' → logprob: -1.2276699542999268
    3. 'e' → logprob: -1.9776699542999268
    4. '#' → logprob: -5.227670192718506
    5. 'é' → logprob: -5.352670192718506
    6. 'ation' → logprob: -5.727670192718506
    7. 'ant' → logprob: -5.977670192718506
    8. '-' → logprob: -7.352670192718506
    9. 'es' → logprob: -7.352670192718506
    10. 'ate' → logprob: -7.352670192718506

Token 424: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1793079972267151
    2. ' de' → logprob: -2.6793079376220703
    3. ' entre' → logprob: -3.3043079376220703
    4. ' between' → logprob: -3.6793079376220703
    5. 'des' → logprob: -4.67930793762207
    6. ' of' → logprob: -5.42930793762207
    7. ' du' → logprob: -5.55430793762207
    8. '   ' → logprob: -5.67930793762207
    9. 'de' → logprob: -5.67930793762207
    10. ',' → logprob: -5.80430793762207

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0149731636047363
    2. ',' → logprob: -1.2649731636047363
    3. ' des' → logprob: -1.2649731636047363
    4. ' entre' → logprob: -3.2649731636047363
    5. ' de' → logprob: -4.514973163604736
    6. ' between' → logprob: -4.889973163604736
    7. ' du' → logprob: -5.764973163604736
    8. ' ,' → logprob: -5.764973163604736
    9. '#' → logprob: -6.014973163604736
    10. 'des' → logprob: -6.639973163604736

Token 426: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18380576372146606
    2. ' ,' → logprob: -2.5588057041168213
    3. '#' (adapté à ' #') → logprob: -4.6838059425354
    4. 'positions' → logprob: -4.9338059425354
    5. ' des' → logprob: -5.0588059425354
    6. ' states' → logprob: -5.0588059425354
    7. ' possible' → logprob: -5.1838059425354
    8. 'possible' → logprob: -5.1838059425354
    9. ' last' → logprob: -5.4338059425354
    10. '   ' → logprob: -5.4338059425354

Token 427: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1274209022521973
    2. 'states' → logprob: -1.2524209022521973
    3. 'visited' → logprob: -2.8774209022521973
    4. '   ' → logprob: -2.8774209022521973
    5. 'dp' → logprob: -3.0024209022521973
    6. 'possible' → logprob: -3.1274209022521973
    7. 'prev' → logprob: -3.1274209022521973
    8. ' states' → logprob: -3.3774209022521973
    9. 'used' → logprob: -3.6274209022521973
    10. 'last' → logprob: -4.002420902252197

Token 428: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6412138938903809
    2. '#' → logprob: -2.016213893890381
    3. 'initialize' → logprob: -2.141213893890381
    4. 'prev' → logprob: -2.516213893890381
    5. 'contin' → logprob: -3.516213893890381
    6. 'initial' → logprob: -3.516213893890381
    7. 'def' → logprob: -4.391213893890381
    8. 'init' → logprob: -4.766213893890381
    9. ' continue' → logprob: -4.766213893890381
    10. 'last' → logprob: -4.891213893890381

Token 429: ' considérer' (ID: 172894)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9391487836837769
    2. 'contin' → logprob: -1.6891487836837769
    3. ' initial' → logprob: -2.3141489028930664
    4. '#' → logprob: -2.9391489028930664
    5. ' continuer' → logprob: -3.3141489028930664
    6. ' gérer' → logprob: -3.6891489028930664
    7. ' traiter' → logprob: -3.6891489028930664
    8. ' ' → logprob: -4.189148902893066
    9. 'penser' → logprob: -4.314148902893066
    10. 'v' → logprob: -4.439148902893066

Token 430: ' quelle' (ID: 47442)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.464036226272583
    2. ' les' → logprob: -1.714036226272583
    3. ' deux' → logprob: -2.214036226272583
    4. ' ' → logprob: -2.464036226272583
    5. 'le' → logprob: -2.839036226272583
    6. ' states' → logprob: -3.589036226272583
    7. 'states' → logprob: -3.839036226272583
    8. ' l' → logprob: -3.839036226272583
    9. 'la' → logprob: -4.089035987854004
    10. ' la' → logprob: -4.089035987854004

Token 431: ' jam' (ID: 12438)
  Prédit: ' pied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pied' → logprob: -0.6328641772270203
    2. ' ' → logprob: -1.882864236831665
    3. 'p' → logprob: -2.257864236831665
    4. '_p' → logprob: -2.507864236831665
    5. '_' → logprob: -3.507864236831665
    6. ' main' → logprob: -4.132863998413086
    7. '   ' → logprob: -4.507863998413086
    8. ' est' → logprob: -4.757863998413086
    9. 'main' → logprob: -5.507863998413086
    10. 'foot' → logprob: -5.757863998413086

Token 432: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.0028651393949985504
    2. 'b' → logprob: -5.877865314483643
    3. 'bein' → logprob: -11.502864837646484
    4. 'bec' → logprob: -12.002864837646484
    5. 'bbe' → logprob: -12.127864837646484
    6. 'bes' → logprob: -12.127864837646484
    7. 'e' → logprob: -12.127864837646484
    8. 'бе' → logprob: -12.627864837646484
    9. 'bo' → logprob: -12.627864837646484
    10. 'pe' → logprob: -13.127864837646484

Token 433: ' doit' (ID: 21822)
  Prédit: ' app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.5968636274337769
    2. 'app' → logprob: -0.9718636274337769
    3. ' doit' → logprob: -4.346863746643066
    4. ' est' → logprob: -4.471863746643066
    5. ' presse' → logprob: -4.471863746643066
    6. ' utilise' → logprob: -4.971863746643066
    7. '#' → logprob: -5.221863746643066
    8. 'est' → logprob: -5.721863746643066
    9. 'util' → logprob: -6.096863746643066
    10. ' va' → logprob: -6.096863746643066

Token 434: ' marcher' (ID: 171848)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.2765085697174072
    2. 'être' → logprob: -2.5265085697174072
    3. 'press' → logprob: -3.5265085697174072
    4. ' être' → logprob: -4.026508331298828
    5. ' jouer' → logprob: -4.151508331298828
    6. ' app' → logprob: -4.276508331298828
    7. 't' → logprob: -4.526508331298828
    8. 'next' → logprob: -5.026508331298828
    9. 'pres' → logprob: -5.026508331298828
    10. 'p' → logprob: -5.151508331298828

Token 435: ' (' (ID: 350)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0375607013702393
    2. ' next' → logprob: -1.9125607013702393
    3. ' ' → logprob: -2.6625607013702393
    4. 'next' → logprob: -2.7875607013702393
    5. ',' → logprob: -2.9125607013702393
    6. ' gauche' → logprob: -3.0375607013702393
    7. ' suivante' → logprob: -3.4125607013702393
    8. '_' → logprob: -3.7875607013702393
    9. '_next' → logprob: -3.9125607013702393
    10. ' en' → logprob: -4.03756046295166

Token 436: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5304560661315918
    2. ' )' → logprob: -2.530456066131592
    3. ' la' → logprob: -2.780456066131592
    4. ' gauche' → logprob: -2.780456066131592
    5. 'g' → logprob: -3.155456066131592
    6. '#' → logprob: -4.405456066131592
    7. ' ' → logprob: -4.405456066131592
    8. ',' → logprob: -4.655456066131592
    9. ' à' → logprob: -4.780456066131592
    10. ' next' → logprob: -4.780456066131592

Token 437: 'ied' (ID: 1165)
  Prédit: 'ied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ied' → logprob: -0.03345872834324837
    2. 'i' → logprob: -4.033458709716797
    3. 'r' → logprob: -5.408458709716797
    4. 'ieds' → logprob: -5.658458709716797
    5. 'ié' → logprob: -6.408458709716797
    6. 'ie' → logprob: -7.283458709716797
    7. ')' → logprob: -7.658458709716797
    8. 'e' → logprob: -7.783458709716797
    9. 'a' → logprob: -7.908458709716797
    10. 'iede' → logprob: -7.908458709716797

Token 438: ' gauche' (ID: 58367)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.5229823589324951
    2. '_d' → logprob: -1.2729823589324951
    3. '_' → logprob: -2.272982358932495
    4. ')' → logprob: -4.272982597351074
    5. 'g' → logprob: -5.397982597351074
    6. '_)' → logprob: -6.147982597351074
    7. ' )' → logprob: -7.022982597351074
    8. ')_' → logprob: -7.522982597351074
    9. 'dro' → logprob: -7.647982597351074
    10. ' gauche' → logprob: -7.897982597351074

Token 439: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.6680853962898254
    2. ')' → logprob: -1.1680853366851807
    3. ',' → logprob: -1.7930853366851807
    4. ' or' → logprob: -5.91808557510376
    5. ' )' → logprob: -6.41808557510376
    6. '),' → logprob: -6.54308557510376
    7. 'ou' → logprob: -6.66808557510376
    8. ' ,' → logprob: -6.91808557510376
    9. '   ' → logprob: -7.04308557510376
    10. ' et' → logprob: -8.293085098266602

Token 440: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.824166476726532
    2. ' droit' → logprob: -1.5741665363311768
    3. ' pied' → logprob: -1.6991665363311768
    4. 'd' → logprob: -2.4491665363311768
    5. ' droite' → logprob: -3.0741665363311768
    6. 'dro' → logprob: -3.5741665363311768
    7. ' ' → logprob: -5.699166297912598
    8. ' ' → logprob: -6.199166297912598
    9. 'right' → logprob: -6.699166297912598
    10. ' dro' → logprob: -6.699166297912598

Token 441: ' droit' (ID: 29964)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5621528029441833
    2. ' droit' → logprob: -1.0621528625488281
    3. 'dro' → logprob: -2.562152862548828
    4. 'right' → logprob: -6.062152862548828
    5. ' droite' → logprob: -6.437152862548828
    6. ')' → logprob: -6.812152862548828
    7. '_d' → logprob: -6.812152862548828
    8. ' droits' → logprob: -8.687152862548828
    9. '```' → logprob: -8.937152862548828
    10. ' ' → logprob: -9.062152862548828

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0743880495429039
    2. ' )' → logprob: -3.449388027191162
    3. ')
' → logprob: -4.324388027191162
    4. '),' → logprob: -5.449388027191162
    5. ' next' → logprob: -5.574388027191162
    6. ',' → logprob: -5.574388027191162
    7. ' à' → logprob: -5.699388027191162
    8. ').' → logprob: -6.074388027191162
    9. ' )
' → logprob: -6.574388027191162
    10. '   ' → logprob: -6.824388027191162

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006982475984841585
    2. 'states' → logprob: -6.506982326507568
    3. '
' → logprob: -6.881982326507568
    4. ' states' → logprob: -7.006982326507568
    5. '    
' → logprob: -7.256982326507568
    6. ',' → logprob: -7.381982326507568
    7. ' possible' → logprob: -7.756982326507568
    8. 'possible' → logprob: -7.881982326507568
    9. 'positions' → logprob: -8.881982803344727
    10. ' next' → logprob: -9.006982803344727

Token 444: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017572298645973206
    2. ',' → logprob: -5.267572402954102
    3. ' next' → logprob: -6.267572402954102
    4. '    
' → logprob: -6.267572402954102
    5. ' states' → logprob: -6.517572402954102
    6. 'states' → logprob: -7.017572402954102
    7. 'next' → logprob: -7.392572402954102
    8. '
' → logprob: -7.517572402954102
    9. ' possible' → logprob: -7.642572402954102
    10. ' step' → logprob: -7.767572402954102

Token 445: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6188960075378418
    2. ' states' → logprob: -1.9938960075378418
    3. 'states' → logprob: -2.243896007537842
    4. 'dp' → logprob: -3.118896007537842
    5. ' possible' → logprob: -3.243896007537842
    6. ' left' → logprob: -3.493896007537842
    7. ' dp' → logprob: -3.493896007537842
    8. 'possible' → logprob: -3.743896007537842
    9. ' current' → logprob: -4.493896007537842
    10. '#' → logprob: -5.118896007537842

Token 446: ' pas' (ID: 2173)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.6014153957366943
    2. 'states' → logprob: -1.6014153957366943
    3. ' états' → logprob: -2.3514153957366943
    4. '#' → logprob: -2.8514153957366943
    5. 'current' → logprob: -4.226415634155273
    6. ' next' → logprob: -4.476415634155273
    7. 'next' → logprob: -4.476415634155273
    8. ' current' → logprob: -4.601415634155273
    9. 'positions' → logprob: -4.851415634155273
    10. 'ét' → logprob: -5.101415634155273

Token 447: ' commencent' (ID: 184941)
  Prédit: ' altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' altern' → logprob: -0.7689183354377747
    2. ' suivants' → logprob: -1.5189182758331299
    3. 'altern' → logprob: -2.76891827583313
    4. '_' → logprob: -2.89391827583313
    5. '_al' → logprob: -3.14391827583313
    6. ' doivent' → logprob: -3.26891827583313
    7. ' _' → logprob: -3.26891827583313
    8. '_s' → logprob: -3.89391827583313
    9. ' alternating' → logprob: -4.643918514251709
    10. '_next' → logprob: -4.768918514251709

Token 448: ' avec' (ID: 3937)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9469029903411865
    2. ' avec' → logprob: -1.3219029903411865
    3. 'par' → logprob: -1.4469029903411865
    4. 'avec' → logprob: -2.9469029903411865
    5. '_' → logprob: -4.071903228759766
    6. '_par' → logprob: -4.946903228759766
    7. ' à' → logprob: -5.196903228759766
    8. ' with' → logprob: -5.446903228759766
    9. 'with' → logprob: -5.696903228759766
    10. '_g' → logprob: -5.946903228759766

Token 449: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9634966254234314
    2. ' le' → logprob: -0.9634966254234314
    3. 'p' → logprob: -2.338496685028076
    4. ' pied' → logprob: -2.713496685028076
    5. ' la' → logprob: -2.963496685028076
    6. 'la' → logprob: -4.713496685028076
    7. 'left' → logprob: -5.338496685028076
    8. ' gauche' → logprob: -5.963496685028076
    9. ' left' → logprob: -6.338496685028076
    10. 'g' → logprob: -6.338496685028076

Token 450: ' pied' (ID: 20242)
  Prédit: ' pied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pied' → logprob: -0.8858398795127869
    2. 'p' → logprob: -1.1358399391174316
    3. ' gauche' → logprob: -2.0108399391174316
    4. 'g' → logprob: -3.0108399391174316
    5. 'left' → logprob: -3.0108399391174316
    6. ' left' → logprob: -3.5108399391174316
    7. 'foot' → logprob: -6.885839939117432
    8. ' pieds' → logprob: -7.510839939117432
    9. ' droit' → logprob: -8.010839462280273
    10. ' gau' → logprob: -8.198339462280273

Token 451: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.18689115345478058
    2. 'g' → logprob: -2.1868910789489746
    3. ' droit' → logprob: -3.3118910789489746
    4. '_g' → logprob: -4.811891078948975
    5. 'd' → logprob: -5.061891078948975
    6. ' gau' → logprob: -6.311891078948975
    7. ' droite' → logprob: -6.561891078948975
    8. 'dro' → logprob: -7.061891078948975
    9. '_' → logprob: -7.186891078948975
    10. '_d' → logprob: -7.436891078948975

Token 452: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42735323309898376
    2. ' states' → logprob: -1.6773532629013062
    3. 'states' → logprob: -2.8023531436920166
    4. ' possible' → logprob: -3.3023531436920166
    5. ',' → logprob: -4.677353382110596
    6. 'possible' → logprob: -4.802353382110596
    7. ' current' → logprob: -4.927353382110596
    8. 'state' → logprob: -5.427353382110596
    9. '    
' → logprob: -5.427353382110596
    10. ' possibles' → logprob: -5.802353382110596

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2987557351589203
    2. ' states' → logprob: -2.173755645751953
    3. 'states' → logprob: -2.173755645751953
    4. ' possible' → logprob: -5.173755645751953
    5. 'possible' → logprob: -5.173755645751953
    6. ' dp' → logprob: -5.798755645751953
    7. ' current' → logprob: -5.923755645751953
    8. 'dp' → logprob: -6.173755645751953
    9. 'state' → logprob: -6.173755645751953
    10. '    
' → logprob: -6.173755645751953

Token 454: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.7039807438850403
    2. 'left' → logprob: -1.9539806842803955
    3. 'possible' → logprob: -2.3289806842803955
    4. 'current' → logprob: -2.3289806842803955
    5. 'dp' → logprob: -2.4539806842803955
    6. '   ' → logprob: -3.3289806842803955
    7. '#' (adapté à ' #') → logprob: -3.5789806842803955
    8. 'prev' → logprob: -6.203980922698975
    9. 'etat' → logprob: -6.328980922698975
    10. 'positions' → logprob: -6.578980922698975

Token 455: ' On' (ID: 2160)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.35908421874046326
    2. 'dp' → logprob: -1.9840842485427856
    3. 'current' → logprob: -2.859084129333496
    4. '#' → logprob: -2.859084129333496
    5. 'possible' → logprob: -4.359084129333496
    6. 'et' → logprob: -4.609084129333496
    7. 'etat' → logprob: -4.859084129333496
    8. 'positions' → logprob: -5.734084129333496
    9. '   ' → logprob: -5.859084129333496
    10. 'state' → logprob: -6.234084129333496

Token 456: ' encode' (ID: 31288)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.4184491634368896
    2. 'state' → logprob: -1.6684491634368896
    3. 'states' → logprob: -2.0434491634368896
    4. '#' → logprob: -2.1684491634368896
    5. 'continue' → logprob: -2.6684491634368896
    6. 'def' → logprob: -2.9184491634368896
    7. 'contin' → logprob: -3.6684491634368896
    8. 'current' → logprob: -4.168449401855469
    9. 'initial' → logprob: -4.293449401855469
    10. 'p' → logprob: -4.418449401855469

Token 457: ' les' (ID: 1341)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -2.0193023681640625
    2. ' =' → logprob: -2.1443023681640625
    3. 'possible' → logprob: -2.2693023681640625
    4. ' possible' → logprob: -2.2693023681640625
    5. ' states' → logprob: -2.3943023681640625
    6. ' current' → logprob: -2.6443023681640625
    7. 'state' → logprob: -2.7693023681640625
    8. 'current' → logprob: -2.8943023681640625
    9. '_states' → logprob: -2.8943023681640625
    10. '_state' → logprob: -3.7693023681640625

Token 458: ' panels' (ID: 30863)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4176566004753113
    2. '#' → logprob: -2.292656660079956
    3. 'et' → logprob: -2.792656660079956
    4. 'positions' → logprob: -3.042656660079956
    5. ' états' → logprob: -3.542656660079956
    6. 'ét' → logprob: -3.917656660079956
    7. ' states' → logprob: -4.167656421661377
    8. 'state' → logprob: -4.292656421661377
    9. 'poss' → logprob: -4.542656421661377
    10. 'current' → logprob: -4.542656421661377

Token 459: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10807064175605774
    2. '_pos' → logprob: -3.2330706119537354
    3. '_positions' → logprob: -3.2330706119537354
    4. '_map' → logprob: -5.2330708503723145
    5. '_to' → logprob: -5.7330708503723145
    6. '_prev' → logprob: -6.1080708503723145
    7. '=' → logprob: -6.2330708503723145
    8. '_indices' → logprob: -6.4830708503723145
    9. 'pos' → logprob: -6.7330708503723145
    10. '_idx' → logprob: -6.8580708503723145

Token 460: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4296064078807831
    2. 'indices' → logprob: -2.1796064376831055
    3. '[-' → logprob: -2.3046064376831055
    4. ' [' → logprob: -3.0546064376831055
    5. ' indices' → logprob: -3.0546064376831055
    6. 'positions' → logprob: -4.9296064376831055
    7. 'scores' → logprob: -5.3046064376831055
    8. '[]' → logprob: -5.6796064376831055
    9. ' [-' → logprob: -6.0546064376831055
    10. ' order' → logprob: -6.0546064376831055

Token 461: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14115378260612488
    2. '[]' → logprob: -2.7661538124084473
    3. '[-' → logprob: -3.6411538124084473
    4. 'order' → logprob: -4.266153812408447
    5. 'score' → logprob: -5.141153812408447
    6. '[int' → logprob: -5.141153812408447
    7. '[]
' → logprob: -5.266153812408447
    8. 'scores' → logprob: -6.016153812408447
    9. 'indices' → logprob: -6.641153812408447
    10. 'numbers' → logprob: -6.891153812408447

Token 462: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12056341022253036
    2. ')' → logprob: -3.495563507080078
    3. ':' → logprob: -3.870563507080078
    4. ' ,' → logprob: -3.995563507080078
    5. '   ' → logprob: -4.745563507080078
    6. '<|end|>' → logprob: -4.995563507080078
    7. ' ' → logprob: -5.120563507080078
    8. ']' → logprob: -5.120563507080078
    9. ' if' → logprob: -6.120563507080078
    10. ' or' → logprob: -6.245563507080078

Token 463: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.48724114894866943
    2. '4' → logprob: -1.7372411489486694
    3. ' ' → logprob: -1.7372411489486694
    4. ',' → logprob: -4.987241268157959
    5. ')' → logprob: -4.987241268157959
    6. ' {'' → logprob: -5.737241268157959
    7. '   ' → logprob: -5.862241268157959
    8. ' ,' → logprob: -6.112241268157959
    9. ' )' → logprob: -6.112241268157959
    10. '{' → logprob: -6.487241268157959

Token 464: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15587718784809113
    2. 'score' → logprob: -3.655877113342285
    3. ',' → logprob: -3.780877113342285
    4. 'positions' → logprob: -3.905877113342285
    5. 'tokens' → logprob: -4.280877113342285
    6. 'panel' → logprob: -4.780877113342285
    7. 'current' → logprob: -5.030877113342285
    8. ' panels' → logprob: -5.280877113342285
    9. 'next' → logprob: -5.405877113342285
    10. ' next' → logprob: -5.655877113342285

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0922795906662941
    2. 'pan' → logprob: -3.3422796726226807
    3. 'positions' → logprob: -3.5922796726226807
    4. 'states' → logprob: -5.342279434204102
    5. 'pos' → logprob: -5.592279434204102
    6. 'state' → logprob: -5.842279434204102
    7. 'steps' → logprob: -6.092279434204102
    8. 'score' → logprob: -6.467279434204102
    9. ' panels' → logprob: -6.592279434204102
    10. 'panel' → logprob: -6.717279434204102

Token 466: ' panel' (ID: 10408)
  Prédit: 'pan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pan' → logprob: -0.3712758421897888
    2. 'pos' → logprob: -2.6212759017944336
    3. 'score' → logprob: -2.9962759017944336
    4. ' panels' → logprob: -2.9962759017944336
    5. 'positions' → logprob: -3.2462759017944336
    6. 'panel' (adapté à ' panel') → logprob: -4.121275901794434
    7. '   ' → logprob: -4.246275901794434
    8. 'states' → logprob: -4.621275901794434
    9. 'dp' → logprob: -4.746275901794434
    10. 'steps' → logprob: -4.996275901794434

Token 467: '_to' (ID: 5089)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.8442871570587158
    2. '_indices' → logprob: -1.5942871570587158
    3. '_map' → logprob: -2.094287157058716
    4. 's' → logprob: -2.594287157058716
    5. '_pos' → logprob: -2.719287157058716
    6. ' =' → logprob: -3.094287157058716
    7. '_idx' → logprob: -4.094286918640137
    8. '_codes' → logprob: -4.594286918640137
    9. '_ids' → logprob: -4.969286918640137
    10. '_mapping' → logprob: -5.094286918640137

Token 468: '_num' (ID: 9834)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3505275547504425
    2. 'pos' → logprob: -1.3505275249481201
    3. 'index' → logprob: -3.97552752494812
    4. 'int' → logprob: -4.350527763366699
    5. '_idx' → logprob: -5.725527763366699
    6. 'panel' → logprob: -7.475527763366699
    7. 'num' → logprob: -7.975527763366699
    8. '_index' → logprob: -8.3505277633667
    9. 'id' → logprob: -8.8505277633667
    10. '_pos' → logprob: -9.2255277633667

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03374966233968735
    2. '=' → logprob: -3.408749580383301
    3. '={'' → logprob: -9.4087495803833
    4. ' ' → logprob: -11.6587495803833
    5. '{'' → logprob: -13.1587495803833
    6. '   ' → logprob: -13.2837495803833
    7. ' ={' → logprob: -13.2837495803833
    8. '['' → logprob: -13.5337495803833
    9. '={' → logprob: -13.6587495803833
    10. ' {'' → logprob: -13.9087495803833

Token 470: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.00187307083979249
    2. ' {'' → logprob: -6.501873016357422
    3. '{' → logprob: -8.001873016357422
    4. '{
' → logprob: -11.001873016357422
    5. '{"' → logprob: -11.501873016357422
    6. '[' → logprob: -12.251873016357422
    7. '   ' → logprob: -13.001873016357422
    8. '{}' → logprob: -14.126873016357422
    9. 'lambda' → logprob: -15.001873016357422
    10. ' ' → logprob: -15.126873016357422

Token 471: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.8828707804204896e-05
    2. ''L' → logprob: -10.625048637390137
    3. ' L' → logprob: -11.125048637390137
    4. '{'' → logprob: -13.375048637390137
    5. ''' → logprob: -13.687548637390137
    6. ' ' → logprob: -14.125048637390137
    7. '	L' → logprob: -14.125048637390137
    8. '':' → logprob: -14.250048637390137
    9. '_L' → logprob: -15.000048637390137
    10. '0' → logprob: -15.062548637390137

Token 472: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.005334078334271908
    2. ''' → logprob: -5.38033390045166
    3. ' ':' → logprob: -8.38033390045166
    4. ':' → logprob: -8.38033390045166
    5. '':'' → logprob: -8.88033390045166
    6. 'L' → logprob: -9.50533390045166
    7. '',' → logprob: -11.63033390045166
    8. ''L' → logprob: -11.75533390045166
    9. '   ' → logprob: -12.38033390045166
    10. ' L' → logprob: -12.50533390045166

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00408053956925869
    2. ' ' → logprob: -5.504080772399902
    3. ''' → logprob: -14.004080772399902
    4. '   ' → logprob: -14.129080772399902
    5. '  ' → logprob: -15.754080772399902
    6. '1' → logprob: -16.254079818725586
    7. '{' → logprob: -17.129079818725586
    8. '3' → logprob: -17.191579818725586
    9. '	' → logprob: -17.254079818725586
    10. '2' → logprob: -17.441579818725586

Token 474: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00885836686939001
    2. ','' → logprob: -5.0088582038879395
    3. ' ,' → logprob: -6.5088582038879395
    4. '',' → logprob: -8.258858680725098
    5. '   ' → logprob: -8.383858680725098
    6. ',
' → logprob: -9.508858680725098
    7. ''' → logprob: -10.258858680725098
    8. ' ,'' → logprob: -10.508858680725098
    9. ',L' → logprob: -12.133858680725098
    10. ',U' → logprob: -12.133858680725098

Token 475: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.018209058791399002
    2. 'R' → logprob: -4.018208980560303
    3. ' U' → logprob: -10.393209457397461
    4. ''U' → logprob: -11.268209457397461
    5. ' ' → logprob: -12.518209457397461
    6. 'D' → logprob: -12.643209457397461
    7. ''' → logprob: -13.268209457397461
    8. '   ' → logprob: -13.518209457397461
    9. 'L' → logprob: -13.768209457397461
    10. '	U' → logprob: -14.143209457397461

Token 476: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.009382619522511959
    2. ':' → logprob: -4.759382724761963
    3. '1' → logprob: -7.634382724761963
    4. '',' → logprob: -8.759382247924805
    5. ''' → logprob: -9.384382247924805
    6. '0' → logprob: -10.759382247924805
    7. ',' → logprob: -11.884382247924805
    8. '":' → logprob: -13.009382247924805
    9. '2' → logprob: -13.259382247924805
    10. ' ':' → logprob: -13.509382247924805

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '  ' → logprob: -17.125045776367188
    5. '2' → logprob: -17.375045776367188
    6. '0' → logprob: -17.562545776367188
    7. ''' → logprob: -18.250045776367188
    8. '１' → logprob: -19.125045776367188
    9. '3' → logprob: -19.437545776367188
    10. '{' → logprob: -19.750045776367188

Token 478: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.0028290078043937683
    2. ',' → logprob: -5.877829074859619
    3. ' ,'' → logprob: -11.002828598022461
    4. ',"' → logprob: -12.752828598022461
    5. ',
' → logprob: -13.627828598022461
    6. '','' → logprob: -13.627828598022461
    7. ' ,' → logprob: -14.252828598022461
    8. '   ' → logprob: -14.502828598022461
    9. ',’' → logprob: -15.127828598022461
    10. ',D' → logprob: -15.252828598022461

Token 479: 'D' (ID: 35)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.08067245781421661
    2. 'D' → logprob: -2.7056725025177
    3. ''' → logprob: -4.830672264099121
    4. '1' → logprob: -6.455672264099121
    5. ' '' → logprob: -7.205672264099121
    6. '2' → logprob: -8.455672264099121
    7. ' D' → logprob: -10.455672264099121
    8. '   ' → logprob: -10.455672264099121
    9. ' ' → logprob: -10.705672264099121
    10. '0' → logprob: -10.830672264099121

Token 480: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003298793686553836
    2. ':' → logprob: -5.878298759460449
    3. '1' → logprob: -7.753298759460449
    4. ''' → logprob: -10.00329875946045
    5. '',' → logprob: -12.25329875946045
    6. '0' → logprob: -12.62829875946045
    7. '":' → logprob: -12.87829875946045
    8. '2' → logprob: -13.37829875946045
    9. '   ' → logprob: -13.62829875946045
    10. ' :' → logprob: -13.62829875946045

Token 481: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.125042915344238
    3. '0' → logprob: -13.250042915344238
    4. '<|end|>' → logprob: -15.500042915344238
    5. '<|end|>' → logprob: -15.625042915344238
    6. '```' → logprob: -16.625041961669922
    7. '2' → logprob: -16.625041961669922
    8. '   ' → logprob: -16.812541961669922
    9. '  ' → logprob: -17.062541961669922
    10. '...' → logprob: -18.125041961669922

Token 482: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.0025528310798108578
    2. ',' → logprob: -6.0025529861450195
    3. ' ,'' → logprob: -10.25255298614502
    4. '}' → logprob: -10.62755298614502
    5. '','' → logprob: -11.87755298614502
    6. ',"' → logprob: -12.50255298614502
    7. ''' → logprob: -12.50255298614502
    8. ' ,' → logprob: -13.87755298614502
    9. '   ' → logprob: -14.25255298614502
    10. '',' → logprob: -14.87755298614502

Token 483: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.15351594984531403
    2. '3' → logprob: -2.2785160541534424
    3. ''' → logprob: -3.2785160541534424
    4. '2' → logprob: -7.278515815734863
    5. '0' → logprob: -7.528515815734863
    6. ' R' → logprob: -7.653515815734863
    7. '1' → logprob: -8.528515815734863
    8. ' ' → logprob: -9.028515815734863
    9. ' '' → logprob: -9.778515815734863
    10. '   ' → logprob: -9.903515815734863

Token 484: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0033157882280647755
    2. ':' → logprob: -5.7533159255981445
    3. ''}' → logprob: -9.128315925598145
    4. '}:' → logprob: -11.628315925598145
    5. '}' → logprob: -12.128315925598145
    6. ''' → logprob: -12.503315925598145
    7. '":' → logprob: -13.003315925598145
    8. '   ' → logprob: -13.253315925598145
    9. '3' → logprob: -13.628315925598145
    10. ' ':' → logprob: -13.628315925598145

Token 485: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '```' → logprob: -16.125003814697266
    5. '2' → logprob: -16.937503814697266
    6. '0' → logprob: -17.187503814697266
    7. '  ' → logprob: -17.312503814697266
    8. '4' → logprob: -17.500003814697266
    9. '1' → logprob: -17.500003814697266
    10. '３' → logprob: -17.937503814697266

Token 486: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0001733855315251276
    2. ',' → logprob: -9.875173568725586
    3. '   ' → logprob: -10.000173568725586
    4. '}
' → logprob: -10.125173568725586
    5. ' }' → logprob: -10.875173568725586
    6. ''}' → logprob: -11.125173568725586
    7. ','' → logprob: -13.500173568725586
    8. ''' → logprob: -15.000173568725586
    9. ',
' → logprob: -15.500173568725586
    10. '}

' → logprob: -15.625173568725586

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544347643852234
    2. 'states' → logprob: -2.004434823989868
    3. 'dp' → logprob: -3.504434823989868
    4. 'current' → logprob: -4.129434585571289
    5. 'possible' → logprob: -4.254434585571289
    6. ' states' → logprob: -4.879434585571289
    7. ' dp' → logprob: -5.504434585571289
    8. 'prev' → logprob: -5.504434585571289
    9. 'positions' → logprob: -6.129434585571289
    10. 'state' → logprob: -6.254434585571289

Token 488: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.6578258872032166
    2. 'dp' → logprob: -1.1578259468078613
    3. 'possible' → logprob: -2.9078259468078613
    4. 'current' → logprob: -3.2828259468078613
    5. '#' (adapté à ' #') → logprob: -3.4078259468078613
    6. 'prev' → logprob: -3.9078259468078613
    7. 'left' → logprob: -4.532825946807861
    8. 'positions' → logprob: -6.032825946807861
    9. 'curr' → logprob: -6.782825946807861
    10. ' states' → logprob: -6.782825946807861

Token 489: ' On' (ID: 2160)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.589512288570404
    2. 'dp' → logprob: -1.2145123481750488
    3. 'possible' → logprob: -2.839512348175049
    4. '#' → logprob: -3.464512348175049
    5. 'current' → logprob: -4.089512348175049
    6. ' states' → logprob: -4.464512348175049
    7. '   ' → logprob: -4.839512348175049
    8. ' dp' → logprob: -5.089512348175049
    9. 'prev' → logprob: -5.839512348175049
    10. 'positions' → logprob: -5.964512348175049

Token 490: ' définit' (ID: 89835)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9904898405075073
    2. 'contin' → logprob: -1.9904898405075073
    3. 's' → logprob: -2.240489959716797
    4. 'state' → logprob: -2.865489959716797
    5. 'current' → logprob: -2.865489959716797
    6. 'states' → logprob: -3.115489959716797
    7. 'curr' → logprob: -3.615489959716797
    8. 'initialize' → logprob: -3.865489959716797
    9. ' continue' → logprob: -3.990489959716797
    10. '_states' → logprob: -4.115489959716797

Token 491: ' une' (ID: 2463)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.64949631690979
    2. 'allowed' → logprob: -1.89949631690979
    3. ' les' → logprob: -2.02449631690979
    4. 'possible' → logprob: -2.14949631690979
    5. '#' → logprob: -3.02449631690979
    6. 'le' → logprob: -3.02449631690979
    7. ' la' → logprob: -3.14949631690979
    8. 'def' → logprob: -3.27449631690979
    9. 'valid' → logprob: -3.52449631690979
    10. ' allowed' → logprob: -3.52449631690979

Token 492: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28058451414108276
    2. '#' → logprob: -2.4055845737457275
    3. 'valid' → logprob: -2.9055845737457275
    4. 'allowed' → logprob: -3.5305845737457275
    5. 'possible' → logprob: -3.7805845737457275
    6. 'set' → logprob: -3.9055845737457275
    7. 'prev' → logprob: -5.280584335327148
    8. 'sets' → logprob: -5.530584335327148
    9. 'dp' → logprob: -5.655584335327148
    10. 'next' → logprob: -5.655584335327148

Token 493: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2799098491668701
    2. ' def' → logprob: -2.02990984916687
    3. ' get' → logprob: -3.15490984916687
    4. ' de' → logprob: -3.77990984916687
    5. ' next' → logprob: -4.779910087585449
    6. 'get' → logprob: -5.404910087585449
    7. ' valid' → logprob: -5.654910087585449
    8. ' encode' → logprob: -5.779910087585449
    9. ' suivante' → logprob: -5.779910087585449
    10. 'next' → logprob: -5.904910087585449

Token 494: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.7811868786811829
    2. 'v' → logprob: -1.406186819076538
    3. 'def' → logprob: -1.531186819076538
    4. 'ver' → logprob: -4.031187057495117
    5. 'dé' → logprob: -4.156187057495117
    6. 'pe' → logprob: -4.906187057495117
    7. 'compare' → logprob: -5.531187057495117
    8. 'ren' → logprob: -5.531187057495117
    9. ' valide' → logprob: -5.531187057495117
    10. ' retourne' → logprob: -6.031187057495117

Token 495: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.011541937477886677
    2. 'if' → logprob: -4.636541843414307
    3. 'ite' → logprob: -8.261542320251465
    4. 'er' → logprob: -8.261542320251465
    5. 'ifi' → logprob: -8.636542320251465
    6. 'et' → logprob: -8.761542320251465
    7. 'f' → logprob: -9.136542320251465
    8. 'def' → logprob: -9.261542320251465
    9. 'ify' → logprob: -9.261542320251465
    10. 'ifier' → logprob: -9.386542320251465

Token 496: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.7715480923652649
    2. ' la' → logprob: -1.5215480327606201
    3. ' if' → logprob: -1.6465480327606201
    4. '   ' → logprob: -3.27154803276062
    5. '(' → logprob: -3.39654803276062
    6. 'if' → logprob: -4.271548271179199
    7. ' ' → logprob: -5.021548271179199
    8. 'def' → logprob: -5.021548271179199
    9. '(panel' → logprob: -5.146548271179199
    10. '(p' → logprob: -5.396548271179199

Token 497: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0448167324066162
    2. 'on' → logprob: -2.044816732406616
    3. ' les' → logprob: -2.044816732406616
    4. ' la' → logprob: -2.419816732406616
    5. ' l' → logprob: -2.794816732406616
    6. ' le' → logprob: -2.794816732406616
    7. 'l' → logprob: -3.544816732406616
    8. 'les' → logprob: -3.794816732406616
    9. ' un' → logprob: -3.919816732406616
    10. ' deux' → logprob: -3.919816732406616

Token 498: ' jambes' (ID: 144942)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9623665809631348
    2. 'positions' → logprob: -1.2123665809631348
    3. ' pieds' → logprob: -2.5873665809631348
    4. 'de' → logprob: -2.9623665809631348
    5. ' deux' → logprob: -3.0873665809631348
    6. ' positions' → logprob: -3.2123665809631348
    7. 'pas' → logprob: -4.212366580963135
    8. 'pos' → logprob: -4.337366580963135
    9. 'next' → logprob: -4.337366580963135
    10. ' nouveaux' → logprob: -4.712366580963135

Token 499: ' ne' (ID: 453)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.747424304485321
    2. ' sont' → logprob: -1.2474243640899658
    3. 's' → logprob: -3.122424364089966
    4. ' se' → logprob: -3.622424364089966
    5. ' gauche' → logprob: -3.747424364089966
    6. ' ne' → logprob: -3.997424364089966
    7. ' crois' → logprob: -4.497424125671387
    8. 'pe' → logprob: -4.497424125671387
    9. 'ont' → logprob: -4.747424125671387
    10. '#' → logprob: -4.872424125671387

Token 500: ' se' (ID: 458)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7207186818122864
    2. 'cro' → logprob: -1.3457186222076416
    3. 'se' → logprob: -1.7207186222076416
    4. ' se' → logprob: -3.4707186222076416
    5. ' cross' → logprob: -4.970718860626221
    6. '
' → logprob: -5.095718860626221
    7. ' crois' → logprob: -5.470718860626221
    8. 's' → logprob: -5.470718860626221
    9. ' ' → logprob: -5.845718860626221
    10. 'co' → logprob: -5.845718860626221

Token 501: ' crois' (ID: 65485)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.03591661900281906
    2. 'cross' → logprob: -4.160916805267334
    3. ' crois' → logprob: -4.160916805267334
    4. '
' → logprob: -6.035916805267334
    5. ' cro' → logprob: -7.285916805267334
    6. '```' → logprob: -8.785916328430176
    7. ' ' → logprob: -9.160916328430176
    8. 'co' → logprob: -9.535916328430176
    9. 'touch' → logprob: -9.660916328430176
    10. 'cr' → logprob: -9.660916328430176

Token 502: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0008848957950249314
    2. 'sent' → logprob: -7.500885009765625
    3. 'cent' → logprob: -8.750885009765625
    4. 'aient' → logprob: -9.375885009765625
    5. '```' → logprob: -10.875885009765625
    6. 'encent' → logprob: -11.250885009765625
    7. 'èrent' → logprob: -11.750885009765625
    8. 'nent' → logprob: -12.250885009765625
    9. 'chent' → logprob: -12.375885009765625
    10. 'dent' → logprob: -12.375885009765625

Token 503: ' pas' (ID: 2173)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7740881443023682
    2. ' pas' → logprob: -1.6490881443023682
    3. 'def' → logprob: -2.024088144302368
    4. '(' → logprob: -2.774088144302368
    5. '(p' → logprob: -3.399088144302368
    6. 'pas' → logprob: -3.774088144302368
    7. ' ' → logprob: -4.399087905883789
    8. ',' → logprob: -4.399087905883789
    9. '(
' → logprob: -4.524087905883789
    10. '_pas' → logprob: -5.274087905883789

Token 504: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07594161480665207
    2. ' (' → logprob: -3.450941562652588
    3. ' def' → logprob: -4.450941562652588
    4. '(' → logprob: -4.575941562652588
    5. ':' → logprob: -5.075941562652588
    6. ',' → logprob: -5.450941562652588
    7. '(p' → logprob: -6.075941562652588
    8. '(
' → logprob: -6.700941562652588
    9. '   ' → logprob: -7.075941562652588
    10. ' :' → logprob: -7.450941562652588

Token 505: ' corps' (ID: 29363)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.1681692600250244
    2. ' respect' → logprob: -1.2931692600250244
    3. 'if' → logprob: -2.6681692600250244
    4. ' n' → logprob: -2.6681692600250244
    5. 'respect' → logprob: -3.0431692600250244
    6. 'ne' → logprob: -3.2931692600250244
    7. ' restent' → logprob: -3.2931692600250244
    8. 'n' → logprob: -3.4181692600250244
    9. 'def' → logprob: -3.6681692600250244
    10. '   ' → logprob: -3.7931692600250244

Token 506: ' reste' (ID: 26769)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.13221894204616547
    2. ' tourne' → logprob: -3.382218837738037
    3. ' n' → logprob: -3.757218837738037
    4. ' tourn' → logprob: -3.882218837738037
    5. 'ne' → logprob: -4.007218837738037
    6. ')' → logprob: -5.382218837738037
    7. ' rest' → logprob: -5.757218837738037
    8. ' tour' → logprob: -6.007218837738037
    9. ' restent' → logprob: -6.007218837738037
    10. 'n' → logprob: -6.007218837738037

Token 507: ' face' (ID: 4950)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7585375905036926
    2. 'dro' → logprob: -1.2585375308990479
    3. 'face' → logprob: -2.883537530899048
    4. ' droit' → logprob: -3.008537530899048
    5. 'orient' → logprob: -3.883537530899048
    6. 't' → logprob: -4.008537769317627
    7. 'align' → logprob: -4.133537769317627
    8. 'dans' → logprob: -4.133537769317627
    9. 'stable' → logprob: -4.633537769317627
    10. 'dé' → logprob: -5.008537769317627

Token 508: ' avant' (ID: 13339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6195699572563171
    2. 'def' → logprob: -0.9945699572563171
    3. 'au' → logprob: -3.369570016860962
    4. ' aux' → logprob: -4.244569778442383
    5. ' au' → logprob: -4.369569778442383
    6. 'aux' → logprob: -4.619569778442383
    7. ' à' → logprob: -5.119569778442383
    8. ' ' → logprob: -5.244569778442383
    9. 'à' → logprob: -5.994569778442383
    10. ')' → logprob: -6.119569778442383

Token 509: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0337902307510376
    2. '   ' → logprob: -3.783790111541748
    3. ':' → logprob: -5.533790111541748
    4. '(' → logprob: -6.408790111541748
    5. '(
' → logprob: -6.658790111541748
    6. '(p' → logprob: -7.033790111541748
    7. ',' → logprob: -7.033790111541748
    8. ' def' → logprob: -7.783790111541748
    9. ' (' → logprob: -8.033790588378906
    10. '```' → logprob: -8.283790588378906

Token 510: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06247500330209732
    2. '   ' → logprob: -2.8124749660491943
    3. ' def' → logprob: -8.062475204467773
    4. '
' → logprob: -9.312475204467773
    5. '```' → logprob: -10.312475204467773
    6. ':' → logprob: -11.187475204467773
    7. '    
' → logprob: -11.437475204467773
    8. ')' → logprob: -11.437475204467773
    9. '	def' → logprob: -12.062475204467773
    10. ':def' → logprob: -12.062475204467773

Token 511: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008771585416980088
    2. '   ' → logprob: -7.375877380371094
    3. '
' → logprob: -8.625877380371094
    4. ' def' → logprob: -9.750877380371094
    5. '    
' → logprob: -12.250877380371094
    6. '	def' → logprob: -12.375877380371094
    7. '```' → logprob: -13.375877380371094
    8. '  
' → logprob: -14.625877380371094
    9. ':def' → logprob: -15.125877380371094
    10. ')' → logprob: -15.375877380371094

Token 512: ' R' (ID: 460)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.976922744186595e-05
    2. '   ' → logprob: -10.875040054321289
    3. ' def' → logprob: -11.125040054321289
    4. '
' → logprob: -12.250040054321289
    5. '```' → logprob: -14.000040054321289
    6. '	def' → logprob: -15.375040054321289
    7. '    
' → logprob: -16.37504005432129
    8. '#' → logprob: -16.87504005432129
    9. ':def' → logprob: -18.00004005432129
    10. '
' → logprob: -18.25004005432129

Token 513: 'è' (ID: 957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01349912490695715
    2. ' def' → logprob: -4.3884992599487305
    3. 'ight' → logprob: -7.8884992599487305
    4. 'eturn' → logprob: -8.38849925994873
    5. 'ef' → logprob: -9.38849925994873
    6. 'e' → logprob: -9.51349925994873
    7. '
' → logprob: -10.01349925994873
    8. 'edef' → logprob: -10.51349925994873
    9. 'el' → logprob: -10.63849925994873
    10. '   ' → logprob: -10.63849925994873

Token 514: 'gle' (ID: 6024)
  Prédit: 'gles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gles' → logprob: -0.22486422955989838
    2. 'gle' → logprob: -1.8498642444610596
    3. 'è' → logprob: -3.9748642444610596
    4. 'def' → logprob: -4.0998640060424805
    5. 'g' → logprob: -5.7248640060424805
    6. 'gl' → logprob: -6.3498640060424805
    7. 'str' → logprob: -7.0998640060424805
    8. '   ' → logprob: -7.3498640060424805
    9. 'n' → logprob: -8.09986400604248
    10. 'e' → logprob: -8.59986400604248

Token 515: ' interpr' (ID: 106412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024851970374584198
    2. ' def' → logprob: -3.7748520374298096
    3. '   ' → logprob: -8.27485179901123
    4. ':' → logprob: -8.39985179901123
    5. ' =' → logprob: -8.39985179901123
    6. ' de' → logprob: -8.89985179901123
    7. 's' → logprob: -9.02485179901123
    8. ' ' → logprob: -9.64985179901123
    9. 'de' → logprob: -9.77485179901123
    10. '_def' → logprob: -9.89985179901123

Token 516: 'ét' (ID: 3913)
  Prédit: 'ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.08441720902919769
    2. 'été' → logprob: -3.5844171047210693
    3. 'éter' → logprob: -3.8344171047210693
    4. 'et' → logprob: -4.459417343139648
    5. 'ète' → logprob: -5.209417343139648
    6. 'étation' → logprob: -5.334417343139648
    7. 't' → logprob: -5.959417343139648
    8. 'êt' → logprob: -5.959417343139648
    9. 'eted' → logprob: -6.834417343139648
    10. 'étés' → logprob: -6.834417343139648

Token 517: 'ée' (ID: 2894)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46564942598342896
    2. 'ét' → logprob: -1.8406493663787842
    3. 'ée' → logprob: -2.715649366378784
    4. 'étation' → logprob: -2.840649366378784
    5. 'ted' → logprob: -4.215649604797363
    6. 'ation' → logprob: -4.215649604797363
    7. 'été' → logprob: -4.340649604797363
    8. '#' → logprob: -4.840649604797363
    9. 'é' → logprob: -4.965649604797363
    10. 'et' → logprob: -5.340649604797363

Token 518: ' comme' (ID: 7971)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011807986535131931
    2. ' def' → logprob: -4.886807918548584
    3. ':' → logprob: -6.261807918548584
    4. '   ' → logprob: -6.636807918548584
    5. ':
' → logprob: -8.261808395385742
    6. '
' → logprob: -8.511808395385742
    7. ':def' → logprob: -9.511808395385742
    8. ' :' → logprob: -9.886808395385742
    9. ' =' → logprob: -10.136808395385742
    10. '(
' → logprob: -10.136808395385742

Token 519: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11038641631603241
    2. 'lambda' → logprob: -2.985386371612549
    3. '(lambda' → logprob: -4.235386371612549
    4. ' def' → logprob: -4.235386371612549
    5. ' lambda' → logprob: -4.360386371612549
    6. 'abs' → logprob: -5.110386371612549
    7. '   ' → logprob: -6.610386371612549
    8. 'pos' → logprob: -6.985386371612549
    9. ' abs' → logprob: -7.110386371612549
    10. '(abs' → logprob: -7.610386371612549

Token 520: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020720206201076508
    2. ' def' → logprob: -3.8957202434539795
    3. '   ' → logprob: -9.395720481872559
    4. '
' → logprob: -9.645720481872559
    5. '```' → logprob: -10.645720481872559
    6. '	def' → logprob: -14.020720481872559
    7. ' ' → logprob: -14.145720481872559
    8. '``' → logprob: -14.270720481872559
    9. 'Def' → logprob: -14.395720481872559
    10. ' déf' → logprob: -14.520720481872559

Token 521: ' jam' (ID: 12438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10417887568473816
    2. ' def' → logprob: -3.3541789054870605
    3. 'abs' → logprob: -3.3541789054870605
    4. 'pos' → logprob: -4.3541789054870605
    5. ' abs' → logprob: -4.4791789054870605
    6. 'lambda' → logprob: -7.2291789054870605
    7. 'foot' → logprob: -7.4791789054870605
    8. '#' → logprob: -7.9791789054870605
    9. 'left' → logprob: -7.9791789054870605
    10. ' pos' → logprob: -8.229178428649902

Token 522: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.028075283393263817
    2. 'b' → logprob: -3.7780752182006836
    3. 'bes' → logprob: -5.903075218200684
    4. 'e' → logprob: -7.278075218200684
    5. 'pe' → logprob: -7.903075218200684
    6. 'bien' → logprob: -8.278075218200684
    7. 'es' → logprob: -8.653075218200684
    8. 'bet' → logprob: -9.153075218200684
    9. '   ' → logprob: -10.153075218200684
    10. 'bie' → logprob: -10.278075218200684

Token 523: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.08007712662220001
    2. 'g' → logprob: -2.8300771713256836
    3. ' droite' → logprob: -5.205077171325684
    4. '_g' → logprob: -5.330077171325684
    5. ' gau' → logprob: -5.580077171325684
    6. 'dro' → logprob: -6.830077171325684
    7. ' de' → logprob: -7.580077171325684
    8. 'de' → logprob: -7.580077171325684
    9. 'gau' → logprob: -7.830077171325684
    10. ' Gau' → logprob: -8.330077171325684

Token 524: ' doit' (ID: 21822)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7990579605102539
    2. '<' → logprob: -3.049057960510254
    3. ' et' → logprob: -3.049057960510254
    4. ' n' → logprob: -3.299057960510254
    5. ' ' → logprob: -3.299057960510254
    6. ' est' → logprob: -3.424057960510254
    7. 'n' → logprob: -3.424057960510254
    8. ',' → logprob: -3.424057960510254
    9. 'est' → logprob: -3.549057960510254
    10. 'et' → logprob: -3.674057960510254

Token 525: ' toujours' (ID: 16867)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9457219243049622
    2. 'être' → logprob: -1.4457218647003174
    3. ' être' → logprob: -2.0707218647003174
    4. ' toujours' → logprob: -2.4457218647003174
    5. ' <=' → logprob: -2.5707218647003174
    6. ' rester' → logprob: -3.9457218647003174
    7. 'etre' → logprob: -4.1957221031188965
    8. 'always' → logprob: -4.6957221031188965
    9. ' ' → logprob: -5.0707221031188965
    10. ' always' → logprob: -5.0707221031188965

Token 526: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.25707751512527466
    2. ' être' → logprob: -1.8820774555206299
    3. '<=' → logprob: -3.75707745552063
    4. 'etre' → logprob: -4.257077693939209
    5. 'avoir' → logprob: -4.882077693939209
    6. ' rester' → logprob: -5.007077693939209
    7. '<' → logprob: -5.507077693939209
    8. ' <=' → logprob: -6.007077693939209
    9. ' <' → logprob: -6.007077693939209
    10. ' ' → logprob: -6.007077693939209

Token 527: ' "' (ID: 392)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2407391369342804
    2. ' <=' → logprob: -2.740739107131958
    3. 'inf' → logprob: -3.240739107131958
    4. '<' → logprob: -3.365739107131958
    5. 'strict' → logprob: -3.615739107131958
    6. 'à' → logprob: -3.865739107131958
    7. ' à' → logprob: -5.115739345550537
    8. 'moins' → logprob: -5.490739345550537
    9. '≤' → logprob: -5.490739345550537
    10. ' inf' → logprob: -5.615739345550537

Token 528: 'à' (ID: 708)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6221717000007629
    2. '<' → logprob: -1.3721716403961182
    3. ' <=' → logprob: -2.122171640396118
    4. 'strict' → logprob: -3.247171640396118
    5. ' <' → logprob: -3.747171640396118
    6. 'less' → logprob: -4.747171878814697
    7. 'inf' → logprob: -4.872171878814697
    8. 'moins' → logprob: -5.497171878814697
    9. '≤' → logprob: -6.622171878814697
    10. ' inf' → logprob: -7.622171878814697

Token 529: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008379586972296238
    2. ' gauche' → logprob: -4.8833794593811035
    3. 'l' → logprob: -8.508379936218262
    4. 'gau' → logprob: -8.758379936218262
    5. 'la' → logprob: -8.883379936218262
    6. '```' → logprob: -9.258379936218262
    7. '<=' → logprob: -10.383379936218262
    8. '<' → logprob: -10.508379936218262
    9. 'moins' → logprob: -10.633379936218262
    10. 'dro' → logprob: -11.008379936218262

Token 530: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0767945647239685
    2. '",' → logprob: -4.076794624328613
    3. ' ou' → logprob: -4.326794624328613
    4. ' "' → logprob: -4.326794624328613
    5. '   ' → logprob: -5.451794624328613
    6. ''' → logprob: -5.451794624328613
    7. ' de' → logprob: -5.951794624328613
    8. 'de' → logprob: -6.076794624328613
    9. ' or' → logprob: -6.326794624328613
    10. '")' → logprob: -6.451794624328613

Token 531: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13886518776416779
    2. ',' → logprob: -2.8888652324676514
    3. ' (' → logprob: -3.8888652324676514
    4. '   ' → logprob: -4.763864994049072
    5. ' du' → logprob: -4.888864994049072
    6. ')' → logprob: -5.138864994049072
    7. ' def' → logprob: -5.263864994049072
    8. ' ,' → logprob: -5.388864994049072
    9. ':' → logprob: -5.763864994049072
    10. ' ou' → logprob: -5.888864994049072

Token 532: 'ordre' (ID: 59831)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.9656944870948792
    2. ')' → logprob: -1.8406944274902344
    3. '<=' → logprob: -2.4656944274902344
    4. ' or' → logprob: -2.8406944274902344
    5. ' <=' → logprob: -3.3406944274902344
    6. ' panel' → logprob: -3.3406944274902344
    7. 'ou' → logprob: -3.4656944274902344
    8. 'def' → logprob: -3.4656944274902344
    9. 'score' → logprob: -3.8406944274902344
    10. '=' → logprob: -3.8406944274902344

Token 533: '),' (ID: 936)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.5662686824798584
    2. '   ' → logprob: -1.9412686824798584
    3. ' strict' → logprob: -2.5662686824798584
    4. ')' → logprob: -3.1912686824798584
    5. 'str' → logprob: -3.8162686824798584
    6. '<=' → logprob: -3.8162686824798584
    7. ' <=' → logprob: -3.8162686824798584
    8. '<' → logprob: -4.0662689208984375
    9. ' <' → logprob: -4.3162689208984375
    10. 'def' → logprob: -4.4412689208984375

Token 534: ' jam' (ID: 12438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030945362523198128
    2. '#' → logprob: -4.405945301055908
    3. ' def' → logprob: -4.530945301055908
    4. '   ' → logprob: -5.030945301055908
    5. ' #' → logprob: -7.405945301055908
    6. 'et' → logprob: -9.030945777893066
    7. ' ' → logprob: -10.280945777893066
    8. ' et' → logprob: -10.530945777893066
    9. 'import' → logprob: -10.780945777893066
    10. 'dé' → logprob: -10.780945777893066

Token 535: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1706942915916443
    2. 'b' → logprob: -2.920694351196289
    3. 'e' → logprob: -3.045694351196289
    4. 'es' → logprob: -3.920694351196289
    5. 'ais' → logprob: -3.920694351196289
    6. '```' → logprob: -6.295694351196289
    7. '#' → logprob: -6.420694351196289
    8. 'pe' → logprob: -6.545694351196289
    9. '   ' → logprob: -7.170694351196289
    10. 'bo' → logprob: -7.295694351196289

Token 536: ' droite' (ID: 61428)
  Prédit: ' gauche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.34347769618034363
    2. '_g' → logprob: -1.718477725982666
    3. ' droite' → logprob: -2.593477725982666
    4. 'g' → logprob: -3.968477725982666
    5. ' ' → logprob: -5.468477725982666
    6. '_' → logprob: -5.468477725982666
    7. ' _' → logprob: -6.093477725982666
    8. 'dro' → logprob: -6.968477725982666
    9. '   ' → logprob: -7.093477725982666
    10. ' gau' → logprob: -7.218477725982666

Token 537: ' "' (ID: 392)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.3720032274723053
    2. ' must' → logprob: -2.3720033168792725
    3. 'def' → logprob: -2.7470033168792725
    4. '   ' → logprob: -2.8720033168792725
    5. 'must' → logprob: -4.122003078460693
    6. ' <=' → logprob: -4.122003078460693
    7. ' ' → logprob: -4.497003078460693
    8. '<=' → logprob: -4.622003078460693
    9. ' <' → logprob: -5.247003078460693
    10. ' toujours' → logprob: -5.247003078460693

Token 538: 'à' (ID: 708)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7027329802513123
    2. ' toujours' → logprob: -1.077733039855957
    3. 'à' → logprob: -2.827733039855957
    4. ' always' → logprob: -3.077733039855957
    5. 'always' → logprob: -3.827733039855957
    6. 'tou' → logprob: -4.452733039855957
    7. ' ' → logprob: -4.952733039855957
    8. ''à' → logprob: -5.327733039855957
    9. ')' → logprob: -5.827733039855957
    10. 'a' → logprob: -6.327733039855957

Token 539: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.0002560945285949856
    2. ' droite' → logprob: -8.500256538391113
    3. 'd' → logprob: -10.125256538391113
    4. 'Dro' → logprob: -12.875256538391113
    5. 'right' → logprob: -13.000256538391113
    6. '0' → logprob: -13.250256538391113
    7. '```' → logprob: -13.750256538391113
    8. ' ' → logprob: -14.000256538391113
    9. '>' → logprob: -14.250256538391113
    10. 'la' → logprob: -14.250256538391113

Token 540: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7724841237068176
    2. ')' → logprob: -1.1474840641021729
    3. '")' → logprob: -1.7724840641021729
    4. '   ' → logprob: -4.022484302520752
    5. ')"' → logprob: -4.147484302520752
    6. '",' → logprob: -6.022484302520752
    7. '')' → logprob: -6.147484302520752
    8. ''' → logprob: -6.147484302520752
    9. '```' → logprob: -6.397484302520752
    10. '"
' → logprob: -6.522484302520752

Token 541: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23652009665966034
    2. '   ' → logprob: -1.6115200519561768
    3. ':' → logprob: -5.361520290374756
    4. ' def' → logprob: -5.736520290374756
    5. ',' → logprob: -6.611520290374756
    6. ')' → logprob: -7.611520290374756
    7. ' (' → logprob: -7.986520290374756
    8. ' ' → logprob: -8.611519813537598
    9. '#' → logprob: -8.736519813537598
    10. '.' → logprob: -8.736519813537598

Token 542: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03270862251520157
    2. '   ' → logprob: -3.5327086448669434
    3. ' def' → logprob: -6.532708644866943
    4. '
' → logprob: -6.907708644866943
    5. '#' (adapté à ' #') → logprob: -8.657708168029785
    6. '    
' → logprob: -9.407708168029785
    7. '```' → logprob: -9.532708168029785
    8. '  
' → logprob: -10.157708168029785
    9. '\' → logprob: -10.282708168029785
    10. ':' → logprob: -11.157708168029785

Token 543: ' C' (ID: 363)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022523177904076874
    2. ' def' → logprob: -9.125225067138672
    3. '   ' → logprob: -9.250225067138672
    4. 'allowed' → logprob: -12.375225067138672
    5. '
' → logprob: -12.500225067138672
    6. 'valid' → logprob: -12.875225067138672
    7. '#' → logprob: -13.125225067138672
    8. 'can' → logprob: -13.500225067138672
    9. 'position' → logprob: -13.750225067138672
    10. 'order' → logprob: -13.750225067138672

Token 544: ''est' (ID: 6616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03986681252717972
    2. ' def' → logprob: -4.164866924285889
    3. '#' → logprob: -4.664866924285889
    4. 'est' → logprob: -5.039866924285889
    5. 'e' → logprob: -6.039866924285889
    6. ''est' → logprob: -6.539866924285889
    7. '   ' → logprob: -7.414866924285889
    8. 'ont' → logprob: -7.914866924285889
    9. 'on' → logprob: -7.914866924285889
    10. ' #' → logprob: -8.41486644744873

Token 545: '-à' (ID: 56297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.43097376823425293
    2. ' lambda' → logprob: -1.805973768234253
    3. 'def' → logprob: -2.180973768234253
    4. '-à' → logprob: -3.430973768234253
    5. 'possible' → logprob: -5.055974006652832
    6. '(lambda' → logprob: -5.305974006652832
    7. 'à' → logprob: -5.555974006652832
    8. 'strict' → logprob: -5.680974006652832
    9. 'la' → logprob: -6.055974006652832
    10. 'not' → logprob: -6.055974006652832

Token 546: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.008223525248467922
    2. '```' → logprob: -5.508223533630371
    3. 'part' → logprob: -7.133223533630371
    4. 'à' → logprob: -7.383223533630371
    5. 'voir' → logprob: -7.633223533630371
    6. '{'' → logprob: -8.008223533630371
    7. 'l' → logprob: -8.258223533630371
    8. '-dire' → logprob: -8.258223533630371
    9. '   ' → logprob: -8.633223533630371
    10. 'une' → logprob: -9.258223533630371

Token 547: ':' (ID: 25)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9807718992233276
    2. ' pos' → logprob: -1.3557718992233276
    3. '   ' → logprob: -2.355772018432617
    4. ' abs' → logprob: -2.355772018432617
    5. 'abs' → logprob: -2.855772018432617
    6. 'def' → logprob: -3.230772018432617
    7. ' lambda' → logprob: -3.480772018432617
    8. 'lambda' → logprob: -4.105772018432617
    9. ' def' → logprob: -4.605772018432617
    10. ' order' → logprob: -4.980772018432617

Token 548: ' position' (ID: 4010)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05129893496632576
    2. 'pos' → logprob: -4.051299095153809
    3. ' def' → logprob: -4.551299095153809
    4. 'lambda' → logprob: -4.926299095153809
    5. 'state' → logprob: -5.926299095153809
    6. '   ' → logprob: -6.051299095153809
    7. 'order' → logprob: -6.426299095153809
    8. ' pos' → logprob: -6.926299095153809
    9. ' lambda' → logprob: -6.926299095153809
    10. 'left' → logprob: -7.051299095153809

Token 549: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.056700002402067184
    2. 'g' → logprob: -2.9316999912261963
    3. '_left' → logprob: -7.556700229644775
    4. '   ' → logprob: -8.181699752807617
    5. ')' → logprob: -8.306699752807617
    6. '[' → logprob: -8.931699752807617
    7. '<' → logprob: -9.431699752807617
    8. '_' → logprob: -9.556699752807617
    9. ' gauche' → logprob: -9.556699752807617
    10. '_l' → logprob: -9.681699752807617

Token 550: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0012338032247498631
    2. '<' → logprob: -7.5012335777282715
    3. 'au' → logprob: -8.00123405456543
    4. ' <' → logprob: -9.50123405456543
    5. 'auge' → logprob: -9.75123405456543
    6. 'auch' → logprob: -10.50123405456543
    7. '_g' → logprob: -10.75123405456543
    8. '   ' → logprob: -10.75123405456543
    9. '<=' → logprob: -11.00123405456543
    10. '_left' → logprob: -11.25123405456543

Token 551: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11007144302129745
    2. '<' → logprob: -2.8600714206695557
    3. ' <=' → logprob: -3.1100714206695557
    4. '<=' → logprob: -6.485071659088135
    5. '   ' → logprob: -8.735071182250977
    6. ' ' → logprob: -8.735071182250977
    7. ' ' → logprob: -9.235071182250977
    8. ')' → logprob: -9.735071182250977
    9. ' !=' → logprob: -10.110071182250977
    10. '<int' → logprob: -10.235071182250977

Token 552: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.02366724982857704
    2. ' position' → logprob: -3.773667335510254
    3. '=' → logprob: -8.898667335510254
    4. '   ' → logprob: -8.898667335510254
    5. ' ' → logprob: -9.773667335510254
    6. 'pos' → logprob: -10.023667335510254
    7. '  ' → logprob: -11.898667335510254
    8. '	position' → logprob: -12.148667335510254
    9. 'panel' → logprob: -12.148667335510254
    10. ' ' → logprob: -12.398667335510254

Token 553: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.12403950095176697
    2. 'dro' → logprob: -2.8740394115448
    3. '_g' → logprob: -2.9990394115448
    4. 'g' → logprob: -5.374039649963379
    5. 'd' → logprob: -6.124039649963379
    6. '_' → logprob: -6.249039649963379
    7. '_right' → logprob: -7.249039649963379
    8. ' droite' → logprob: -8.749039649963379
    9. '_r' → logprob: -9.249039649963379
    10. ')' → logprob: -9.249039649963379

Token 554: 'ro' (ID: 298)
  Prédit: 'roit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roit' → logprob: -0.31289392709732056
    2. 'eft' → logprob: -2.187893867492676
    3. 'ro' → logprob: -2.812893867492676
    4. ')' → logprob: -3.437893867492676
    5. 'right' → logprob: -4.312893867492676
    6. 'r' → logprob: -4.687893867492676
    7. '<|end|>' → logprob: -5.437893867492676
    8. '_right' → logprob: -6.062893867492676
    9. '```' → logprob: -6.062893867492676
    10. 'left' → logprob: -6.187893867492676

Token 555: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.1610962301492691
    2. 'it' → logprob: -1.911096215248108
    3. '#' → logprob: -8.786096572875977
    4. '```' → logprob: -9.286096572875977
    5. '}' → logprob: -9.661096572875977
    6. '
' → logprob: -10.161096572875977
    7. 'oit' → logprob: -10.161096572875977
    8. 'int' → logprob: -10.286096572875977
    9. '   ' → logprob: -10.411096572875977
    10. ')' → logprob: -10.536096572875977

Token 556: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4836876690387726
    2. 'def' → logprob: -1.1086876392364502
    3. '<|end|>' → logprob: -4.483687877655029
    4. '
' → logprob: -4.608687877655029
    5. ':' → logprob: -5.108687877655029
    6. ')' → logprob: -5.233687877655029
    7. '<|end|>' → logprob: -5.483687877655029
    8. ' def' → logprob: -5.608687877655029
    9. ',' → logprob: -5.858687877655029
    10. '\n' → logprob: -6.358687877655029

Token 557: ' l' (ID: 305)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.5338023900985718
    2. 'order' → logprob: -0.9088023900985718
    3. ' l' → logprob: -5.658802509307861
    4. 'l' → logprob: -6.533802509307861
    5. ' la' → logprob: -6.783802509307861
    6. '   ' → logprob: -6.908802509307861
    7. 'ordre' → logprob: -7.408802509307861
    8. ' the' → logprob: -7.658802509307861
    9. 'lambda' → logprob: -7.783802509307861
    10. ' ordre' → logprob: -8.033802032470703

Token 558: ''ordre' (ID: 124753)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.11972817033529282
    2. ' order' → logprob: -2.2447280883789062
    3. ''ordre' → logprob: -5.119728088378906
    4. 'ordre' → logprob: -8.119728088378906
    5. '’ordre' → logprob: -9.119728088378906
    6. '(order' → logprob: -9.494728088378906
    7. 'ambda' → logprob: -9.619728088378906
    8. '	order' → logprob: -9.619728088378906
    9. 'def' → logprob: -10.244728088378906
    10. 'e' → logprob: -10.369728088378906

Token 559: ' ét' (ID: 4976)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22606675326824188
    2. '   ' → logprob: -1.7260667085647583
    3. ':' → logprob: -4.226066589355469
    4. ' def' → logprob: -5.476066589355469
    5. '
' → logprob: -5.851066589355469
    6. ',' → logprob: -7.976066589355469
    7. '\n' → logprob: -8.226066589355469
    8. ' ' → logprob: -8.476066589355469
    9. '```' → logprob: -8.601066589355469
    10. '  ' → logprob: -8.601066589355469

Token 560: 'endu' (ID: 46640)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.31090912222862244
    2. 'endue' → logprob: -1.5609091520309448
    3. 'endu' → logprob: -4.310909271240234
    4. 'end' → logprob: -4.435909271240234
    5. 'ended' → logprob: -5.185909271240234
    6. 'ablished' → logprob: -5.685909271240234
    7. 'abl' → logprob: -5.685909271240234
    8. 'abs' → logprob: -5.935909271240234
    9. 'abli' → logprob: -5.935909271240234
    10. 'ape' → logprob: -6.060909271240234

Token 561: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7247816920280457
    2. 'def' → logprob: -0.7247816920280457
    3. ' def' → logprob: -4.224781513214111
    4. ':' → logprob: -4.724781513214111
    5. ' (' → logprob: -6.599781513214111
    6. ',' → logprob: -6.599781513214111
    7. '
' → logprob: -7.474781513214111
    8. '  ' → logprob: -7.599781513214111
    9. '.' → logprob: -7.724781513214111
    10. ' ' → logprob: -7.724781513214111

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5835447907447815
    2. 'def' → logprob: -0.8335447907447815
    3. ' def' → logprob: -5.333544731140137
    4. '    
' → logprob: -6.458544731140137
    5. '```' → logprob: -7.958544731140137
    6. '
' → logprob: -8.458544731140137
    7. ')' → logprob: -8.458544731140137
    8. '  
' → logprob: -9.583544731140137
    9. 'position' → logprob: -9.833544731140137
    10. '<|end|>' → logprob: -10.083544731140137

Token 563: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024431632831692696
    2. '   ' → logprob: -3.7744317054748535
    3. '
' → logprob: -7.2744317054748535
    4. ' def' → logprob: -8.024431228637695
    5. '    
' → logprob: -9.774431228637695
    6. 'order' → logprob: -10.399431228637695
    7. 'positions' → logprob: -10.899431228637695
    8. '#' (adapté à ' #') → logprob: -11.524431228637695
    9. '	def' → logprob: -11.649431228637695
    10. 'position' → logprob: -11.899431228637695

Token 564: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007334598805755377
    2. 'allowed' → logprob: -6.0073347091674805
    3. 'valid' → logprob: -6.1323347091674805
    4. ' def' → logprob: -6.8823347091674805
    5. '   ' → logprob: -7.3823347091674805
    6. '
' → logprob: -7.8823347091674805
    7. 'order' → logprob: -8.75733470916748
    8. 'positions' → logprob: -8.88233470916748
    9. '#' → logprob: -9.50733470916748
    10. 'position' → logprob: -9.75733470916748

Token 565: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2028808295726776
    2. 'continue' → logprob: -1.952880859375
    3. ' continue' → logprob: -4.327880859375
    4. 'contin' → logprob: -4.952880859375
    5. 'return' → logprob: -5.702880859375
    6. 'do' → logprob: -6.077880859375
    7. 'dé' → logprob: -6.202880859375
    8. '#' → logprob: -6.452880859375
    9. ' considère' → logprob: -6.577880859375
    10. 'n' → logprob: -6.577880859375

Token 566: ' l' (ID: 305)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.740277111530304
    2. 'lambda' → logprob: -1.4902770519256592
    3. 'def' → logprob: -1.8652770519256592
    4. ' order' → logprob: -2.990277051925659
    5. ' lambda' → logprob: -2.990277051925659
    6. '{' → logprob: -4.740277290344238
    7. '   ' → logprob: -4.865277290344238
    8. 'max' → logprob: -5.365277290344238
    9. 'range' → logprob: -5.740277290344238
    10. 'position' → logprob: -6.115277290344238

Token 567: ''ordre' (ID: 124753)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2776652574539185
    2. ' order' → logprob: -1.4026652574539185
    3. 'order' → logprob: -1.5276652574539185
    4. 'lambda' → logprob: -2.777665138244629
    5. ' lambda' → logprob: -3.027665138244629
    6. ' set' → logprob: -3.277665138244629
    7. 'set' → logprob: -3.402665138244629
    8. ' def' → logprob: -4.652665138244629
    9. '{' → logprob: -4.902665138244629
    10. 'range' → logprob: -5.402665138244629

Token 568: ' L' (ID: 451)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.405344158411026
    2. ' =' → logprob: -1.2803441286087036
    3. '_' → logprob: -4.530344009399414
    4. '_order' → logprob: -4.655344009399414
    5. '=' → logprob: -4.905344009399414
    6. 'order' → logprob: -5.030344009399414
    7. 'def' → logprob: -5.155344009399414
    8. '_set' → logprob: -6.280344009399414
    9. '   ' → logprob: -6.655344009399414
    10. '_pos' → logprob: -6.780344009399414

Token 569: '<U' (ID: 71935)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.9883269667625427
    2. ',' → logprob: -1.7383270263671875
    3. ' ,' → logprob: -1.9883270263671875
    4. '   ' → logprob: -3.2383270263671875
    5. '_,' → logprob: -3.4883270263671875
    6. '_' → logprob: -3.4883270263671875
    7. ' =' → logprob: -3.6133270263671875
    8. ' <' → logprob: -3.9883270263671875
    9. ':' → logprob: -4.1133270263671875
    10. 'eft' → logprob: -4.2383270263671875

Token 570: ',D' (ID: 61507)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5783056616783142
    2. ',' → logprob: -1.703305721282959
    3. '<' → logprob: -2.203305721282959
    4. '>' → logprob: -3.453305721282959
    5. ' ,' → logprob: -3.453305721282959
    6. '   ' → logprob: -3.453305721282959
    7. ',<' → logprob: -4.453305721282959
    8. ' >' → logprob: -4.828305721282959
    9. ' ' → logprob: -5.828305721282959
    10. '=' → logprob: -5.828305721282959

Token 571: '<R' (ID: 42311)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9217033386230469
    2. '_map' → logprob: -1.2967033386230469
    3. '>' → logprob: -2.796703338623047
    4. '   ' → logprob: -2.921703338623047
    5. ' ,' → logprob: -2.921703338623047
    6. '}' → logprob: -3.171703338623047
    7. ')' → logprob: -4.171703338623047
    8. ']' → logprob: -4.546703338623047
    9. '>,' → logprob: -5.171703338623047
    10. ' =' → logprob: -5.296703338623047

Token 572: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.8314933776855469
    2. '   ' → logprob: -1.0814933776855469
    3. 'def' → logprob: -2.831493377685547
    4. ')' → logprob: -3.081493377685547
    5. ':' → logprob: -3.831493377685547
    6. ',' → logprob: -3.831493377685547
    7. '>' → logprob: -4.206493377685547
    8. ' =' → logprob: -4.956493377685547
    9. ']' → logprob: -5.081493377685547
    10. '}
' → logprob: -5.206493377685547

Token 573: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8237295150756836
    2. ' panel' → logprob: -2.3237295150756836
    3. ')
' → logprob: -2.8237295150756836
    4. '}' → logprob: -2.8237295150756836
    5. '   ' → logprob: -3.0737295150756836
    6. '')' → logprob: -3.6987295150756836
    7. 'panel' → logprob: -3.9487295150756836
    8. '0' → logprob: -3.9487295150756836
    9. '#' → logprob: -4.073729515075684
    10. ' )' → logprob: -4.073729515075684

Token 574: ' L' (ID: 451)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.845986545085907
    2. 'order' → logprob: -1.3459866046905518
    3. 'def' → logprob: -2.2209866046905518
    4. ' lambda' → logprob: -3.2209866046905518
    5. 'lambda' → logprob: -3.5959866046905518
    6. ' def' → logprob: -4.095986366271973
    7. 'pos' → logprob: -4.345986366271973
    8. 'panel' → logprob: -4.345986366271973
    9. 'position' → logprob: -4.595986366271973
    10. 'abs' → logprob: -4.720986366271973

Token 575: '=' (ID: 28)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12065808475017548
    2. '<' → logprob: -2.2456581592559814
    3. '=' → logprob: -6.495657920837402
    4. ')' → logprob: -7.120657920837402
    5. 'eft' → logprob: -7.120657920837402
    6. ' =' → logprob: -7.495657920837402
    7. '<'' → logprob: -7.995657920837402
    8. '<int' → logprob: -7.995657920837402
    9. ')<' → logprob: -8.120657920837402
    10. ' ' → logprob: -8.245657920837402

Token 576: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002673160983249545
    2. ' ' → logprob: -6.002673149108887
    3. '-' → logprob: -9.377673149108887
    4. '1' → logprob: -9.502673149108887
    5. ' -' → logprob: -11.440173149108887
    6. '  ' → logprob: -12.440173149108887
    7. '   ' → logprob: -13.002673149108887
    8. '=' → logprob: -13.190173149108887
    9. '
' → logprob: -13.377673149108887
    10. 'order' → logprob: -13.502673149108887

Token 577: ',' (ID: 11)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0879229307174683
    2. ',' → logprob: -1.3379229307174683
    3. '<' → logprob: -1.7129229307174683
    4. '<U' → logprob: -1.7129229307174683
    5. ',U' → logprob: -3.712923049926758
    6. ',<' → logprob: -5.087923049926758
    7. '<R' → logprob: -6.087923049926758
    8. ' ,' → logprob: -6.337923049926758
    9. 'U' → logprob: -7.087923049926758
    10. '<'' → logprob: -7.462923049926758

Token 578: ' U' (ID: 601)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6150327920913696
    2. 'U' → logprob: -1.4900327920913696
    3. ' U' → logprob: -1.8650327920913696
    4. ' ' → logprob: -2.61503267288208
    5. '0' → logprob: -6.74003267288208
    6. '3' → logprob: -7.36503267288208
    7. 'L' → logprob: -7.36503267288208
    8. '2' → logprob: -7.49003267288208
    9. '4' → logprob: -7.61503267288208
    10. ' L' → logprob: -7.74003267288208

Token 579: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01758330687880516
    2. ',' → logprob: -4.64258337020874
    3. ' =' → logprob: -5.39258337020874
    4. ':' → logprob: -7.64258337020874
    5. '<|end|>' → logprob: -7.64258337020874
    6. ' or' → logprob: -8.392582893371582
    7. ' <' → logprob: -8.392582893371582
    8. '0' → logprob: -8.517582893371582
    9. ' ' → logprob: -8.642582893371582
    10. '1' → logprob: -8.642582893371582

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038925919216126204
    2. '0' → logprob: -5.753892421722412
    3. '2' → logprob: -8.00389289855957
    4. ' ' → logprob: -8.50389289855957
    5. 'D' → logprob: -9.25389289855957
    6. '=' → logprob: -11.37889289855957
    7. ',D' → logprob: -11.50389289855957
    8. '   ' → logprob: -11.87889289855957
    9. '(' → logprob: -11.87889289855957
    10. '/D' → logprob: -12.00389289855957

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10454367846250534
    2. ',D' → logprob: -2.729543685913086
    3. '<D' → logprob: -4.479543685913086
    4. '<' → logprob: -5.229543685913086
    5. ',<' → logprob: -5.229543685913086
    6. ' ,' → logprob: -6.104543685913086
    7. '=' → logprob: -6.479543685913086
    8. ',R' → logprob: -6.604543685913086
    9. ',U' → logprob: -6.854543685913086
    10. ',
' → logprob: -6.854543685913086

Token 582: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8427820205688477
    2. '2' → logprob: -1.3427820205688477
    3. 'R' → logprob: -2.2177820205688477
    4. '3' → logprob: -2.3427820205688477
    5. ' ' → logprob: -3.3427820205688477
    6. ' D' → logprob: -3.4677820205688477
    7. ' R' → logprob: -4.092782020568848
    8. '1' → logprob: -4.342782020568848
    9. 'U' → logprob: -5.717782020568848
    10. '4' → logprob: -6.467782020568848

Token 583: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00037371189682744443
    2. ' =' → logprob: -8.250373840332031
    3. ' or' → logprob: -10.000373840332031
    4. '1' → logprob: -10.250373840332031
    5. ',' → logprob: -11.625373840332031
    6. 'or' → logprob: -11.875373840332031
    7. '<|end|>' → logprob: -12.625373840332031
    8. ')=' → logprob: -13.250373840332031
    9. ')' → logprob: -13.625373840332031
    10. '<|end|>' → logprob: -13.750373840332031

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006034302059561014
    2. ' ' → logprob: -7.750603199005127
    3. '2' → logprob: -8.875603675842285
    4. '<|end|>' → logprob: -12.000603675842285
    5. '0' → logprob: -12.188103675842285
    6. '=' → logprob: -12.188103675842285
    7. '  ' → logprob: -12.938103675842285
    8. '
' → logprob: -13.125603675842285
    9. '   ' → logprob: -13.375603675842285
    10. ',' → logprob: -13.500603675842285

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013074349611997604
    2. ',R' → logprob: -4.7630743980407715
    3. ' ,' → logprob: -6.3880743980407715
    4. ',D' → logprob: -7.0130743980407715
    5. '   ' → logprob: -7.8880743980407715
    6. ',U' → logprob: -8.013073921203613
    7. ',
' → logprob: -8.888073921203613
    8. '0' → logprob: -9.138073921203613
    9. ' ' → logprob: -9.263073921203613
    10. '2' → logprob: -9.388073921203613

Token 586: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.1742635816335678
    2. 'R' → logprob: -2.4242634773254395
    3. ' ' → logprob: -3.0492634773254395
    4. '3' → logprob: -4.4242634773254395
    5. '2' → logprob: -4.6742634773254395
    6. '0' → logprob: -6.4242634773254395
    7. '4' → logprob: -7.6742634773254395
    8. '   ' → logprob: -8.924263954162598
    9. ',' → logprob: -9.674263954162598
    10. '  ' → logprob: -10.049263954162598

Token 587: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00047094907495193183
    2. ' =' → logprob: -8.000471115112305
    3. '2' → logprob: -9.250471115112305
    4. '3' → logprob: -11.375471115112305
    5. ']=' → logprob: -11.875471115112305
    6. '}=' → logprob: -12.750471115112305
    7. 'import' → logprob: -13.000471115112305
    8. ' ' → logprob: -13.125471115112305
    9. 'def' → logprob: -13.250471115112305
    10. '   ' → logprob: -13.375471115112305

Token 588: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12697219848632812
    2. '3' → logprob: -2.126972198486328
    3. ' ' → logprob: -10.251972198486328
    4. '   ' → logprob: -13.001972198486328
    5. '  ' → logprob: -13.626972198486328
    6. '```' → logprob: -13.689472198486328
    7. '1' → logprob: -14.001972198486328
    8. '=' → logprob: -14.126972198486328
    9. '0' → logprob: -14.314472198486328
    10. '4' → logprob: -15.064472198486328

Token 589: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38082078099250793
    2. 'def' → logprob: -1.2558207511901855
    3. '
' → logprob: -3.8808207511901855
    4. ')' → logprob: -4.8808207511901855
    5. ')
' → logprob: -7.2558207511901855
    6. ',' → logprob: -7.7558207511901855
    7. ' def' → logprob: -7.8808207511901855
    8. '#' → logprob: -8.005821228027344
    9. '```' → logprob: -8.255821228027344
    10. '    
' → logprob: -8.380821228027344

Token 590: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3329216539859772
    2. '   ' → logprob: -1.3329216241836548
    3. '
' → logprob: -4.207921504974365
    4. '    
' → logprob: -5.957921504974365
    5. 'order' → logprob: -7.582921504974365
    6. ' def' → logprob: -7.832921504974365
    7. '```' → logprob: -7.832921504974365
    8. ')' → logprob: -8.207921981811523
    9. 'position' → logprob: -9.582921981811523
    10. 'positions' → logprob: -9.832921981811523

Token 591: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0156704094260931
    2. '   ' → logprob: -4.390670299530029
    3. ' def' → logprob: -6.015670299530029
    4. 'order' → logprob: -8.265670776367188
    5. '
' → logprob: -8.515670776367188
    6. 'valid' → logprob: -8.890670776367188
    7. '    
' → logprob: -10.640670776367188
    8. 'is' → logprob: -11.015670776367188
    9. 'allowed' → logprob: -11.515670776367188
    10. 'positions' → logprob: -11.765670776367188

Token 592: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0062218173407018185
    2. '   ' → logprob: -5.506221771240234
    3. 'order' → logprob: -6.756221771240234
    4. ' def' → logprob: -7.756221771240234
    5. 'valid' → logprob: -8.256221771240234
    6. '
' → logprob: -9.881221771240234
    7. 'allowed' → logprob: -10.131221771240234
    8. 'check' → logprob: -10.381221771240234
    9. 'position' → logprob: -10.381221771240234
    10. '#' → logprob: -10.756221771240234

Token 593: ' U' (ID: 601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.1054091453552246
    2. 'la' → logprob: -2.1054091453552246
    3. 'def' → logprob: -2.2304091453552246
    4. ' chaque' → logprob: -2.2304091453552246
    5. ' la' → logprob: -2.7304091453552246
    6. 'g' → logprob: -2.9804091453552246
    7. 'position' → logprob: -3.1054091453552246
    8. 'val' → logprob: -3.2304091453552246
    9. 'l' → logprob: -3.4804091453552246
    10. 'le' → logprob: -3.8554091453552246

Token 594: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8442798852920532
    2. ',' → logprob: -1.5942798852920532
    3. ' ,' → logprob: -2.4692797660827637
    4. 'nder' → logprob: -2.7192797660827637
    5. 'n' → logprob: -2.8442797660827637
    6. ' et' → logprob: -3.5942797660827637
    7. 'se' → logprob: -3.5942797660827637
    8. 'and' → logprob: -4.094279766082764
    9. 'ntil' → logprob: -4.594279766082764
    10. 's' → logprob: -4.719279766082764

Token 595: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.003603394143283367
    2. ' D' → logprob: -5.628603458404541
    3. ' ' → logprob: -13.378602981567383
    4. '#' → logprob: -14.503602981567383
    5. '
' → logprob: -15.566102981567383
    6. ' ' → logprob: -15.816102981567383
    7. 'R' → logprob: -15.816102981567383
    8. '	D' → logprob: -16.128602981567383
    9. 'U' → logprob: -16.316102981567383
    10. '   ' → logprob: -16.628602981567383

Token 596: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7999957203865051
    2. '=' → logprob: -1.4249956607818604
    3. ':' → logprob: -2.0499956607818604
    4. ' =' → logprob: -2.4249956607818604
    5. ' ,' → logprob: -2.9249956607818604
    6. ' on' → logprob: -4.5499958992004395
    7. ' in' → logprob: -5.1749958992004395
    8. '==' → logprob: -5.5499958992004395
    9. ' ' → logprob: -5.6749958992004395
    10. ' ==' → logprob: -6.2999958992004395

Token 597: ' met' (ID: 1421)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.29991596937179565
    2. ' considère' → logprob: -2.2999160289764404
    3. 'continue' → logprob: -2.7999160289764404
    4. 'consider' → logprob: -3.4249160289764404
    5. 'les' → logprob: -4.299915790557861
    6. 'util' → logprob: -4.424915790557861
    7. ' consid' → logprob: -5.299915790557861
    8. 'trait' → logprob: -5.424915790557861
    9. '#' → logprob: -5.799915790557861
    10. '_cons' → logprob: -6.049915790557861

Token 598: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6949899792671204
    2. 'le' → logprob: -1.9449899196624756
    3. 'la' → logprob: -2.0699899196624756
    4. '0' → logprob: -2.9449899196624756
    5. ' la' → logprob: -3.1949899196624756
    6. ' le' → logprob: -4.069990158081055
    7. ' ' → logprob: -4.194990158081055
    8. 'ensemble' → logprob: -4.194990158081055
    9. 'les' → logprob: -4.694990158081055
    10. 'position' → logprob: -4.944990158081055

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033565472811460495
    2. '0' → logprob: -3.9085655212402344
    3. 'min' → logprob: -5.783565521240234
    4. 'max' → logprob: -5.783565521240234
    5. 'def' → logprob: -6.158565521240234
    6. '(' → logprob: -6.658565521240234
    7. 'lambda' → logprob: -7.158565521240234
    8. 'same' → logprob: -7.908565521240234
    9. 'order' → logprob: -8.158565521240234
    10. '=' → logprob: -8.533565521240234

Token 600: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40718337893486023
    2. '   ' → logprob: -1.1571834087371826
    3. '
' → logprob: -4.9071831703186035
    4. ' def' → logprob: -5.7821831703186035
    5. ')' → logprob: -6.0321831703186035
    6. ':' → logprob: -6.1571831703186035
    7. '```' → logprob: -6.5321831703186035
    8. '    
' → logprob: -7.5321831703186035
    9. '

' → logprob: -7.7821831703186035
    10. ',' → logprob: -8.032183647155762

Token 601: ' ils' (ID: 15387)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2686281204223633
    2. ' mais' → logprob: -2.5186281204223633
    3. ' car' → logprob: -2.6436281204223633
    4. '   ' → logprob: -2.7686281204223633
    5. '1' → logprob: -2.7686281204223633
    6. 'def' → logprob: -2.8936281204223633
    7. 'car' → logprob: -2.8936281204223633
    8. 'U' → logprob: -3.2686281204223633
    9. ' ce' → logprob: -3.8936281204223633
    10. ' et' → logprob: -3.8936281204223633

Token 602: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4683301448822021
    2. ' =' → logprob: -1.5933301448822021
    3. 's' → logprob: -1.8433301448822021
    4. '#' → logprob: -2.468330144882202
    5. ' are' → logprob: -2.718330144882202
    6. ' ne' → logprob: -2.968330144882202
    7. ' sont' → logprob: -2.968330144882202
    8. 'n' → logprob: -3.718330144882202
    9. 'ne' → logprob: -4.093330383300781
    10. 'ont' → logprob: -4.218330383300781

Token 603: ' valent' (ID: 148217)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1952879428863525
    2. 'val' → logprob: -1.3202879428863525
    3. 'consider' → logprob: -1.9452879428863525
    4. 'cro' → logprob: -2.5702879428863525
    5. 'c' → logprob: -3.5702879428863525
    6. 't' → logprob: -3.6952879428863525
    7. 'équ' → logprob: -3.8202879428863525
    8. 'tol' → logprob: -3.8202879428863525
    9. 'situ' → logprob: -4.320287704467773
    10. ' valent' → logprob: -4.695287704467773

Token 604: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3481898605823517
    2. '   ' → logprob: -1.5981898307800293
    3. '
' → logprob: -2.5981898307800293
    4. 'order' → logprob: -4.598189830780029
    5. '```' → logprob: -6.473189830780029
    6. ' def' → logprob: -6.848189830780029
    7. '    
' → logprob: -7.223189830780029
    8. ' order' → logprob: -7.473189830780029
    9. '

' → logprob: -7.723189830780029
    10. '#' → logprob: -7.848189830780029

Token 605: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07373572885990143
    2. '   ' → logprob: -2.6987357139587402
    3. '
' → logprob: -6.32373571395874
    4. ' def' → logprob: -7.07373571395874
    5. '```' → logprob: -7.44873571395874
    6. '    
' → logprob: -8.198736190795898
    7. 'order' → logprob: -9.448736190795898
    8. ')' → logprob: -10.073736190795898
    9. '#' → logprob: -10.323736190795898
    10. '	def' → logprob: -10.573736190795898

Token 606: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010041623376309872
    2. '   ' → logprob: -5.0100417137146
    3. 'order' → logprob: -6.3850417137146
    4. ' def' → logprob: -6.6350417137146
    5. '
' → logprob: -9.635041236877441
    6. 'valid' → logprob: -10.135041236877441
    7. '#' → logprob: -10.260041236877441
    8. '    
' → logprob: -10.385041236877441
    9. 'position' → logprob: -10.885041236877441
    10. 'left' → logprob: -10.885041236877441

Token 607: ' order' (ID: 2569)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6864704489707947
    2. 'valid' → logprob: -1.1864705085754395
    3. 'is' → logprob: -2.1864705085754395
    4. ' can' → logprob: -3.4364705085754395
    5. ' valid' → logprob: -3.8114705085754395
    6. ' is' → logprob: -4.1864705085754395
    7. 'check' → logprob: -5.3114705085754395
    8. 'fe' → logprob: -7.1864705085754395
    9. 'possible' → logprob: -7.5614705085754395
    10. 'pos' → logprob: -7.8114705085754395

Token 608: '_panel' (ID: 54810)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.78596431016922
    2. '(pos' → logprob: -2.285964250564575
    3. '_order' → logprob: -2.535964250564575
    4. '_' → logprob: -2.910964250564575
    5. '_pos' → logprob: -3.035964250564575
    6. '(left' → logprob: -3.285964250564575
    7. '_map' → logprob: -3.285964250564575
    8. '(position' → logprob: -3.410964250564575
    9. '(order' → logprob: -3.785964250564575
    10. '_of' → logprob: -3.910964250564575

Token 609: '(p' (ID: 2407)
  Prédit: '(panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(panel' → logprob: -0.768615186214447
    2. '(p' → logprob: -1.3936152458190918
    3. '(pos' → logprob: -2.018615245819092
    4. '(' → logprob: -2.268615245819092
    5. '_pos' → logprob: -4.393615245819092
    6. '_' → logprob: -4.643615245819092
    7. '(position' → logprob: -5.018615245819092
    8. '(s' → logprob: -6.018615245819092
    9. 's' → logprob: -6.018615245819092
    10. '(token' → logprob: -6.518615245819092

Token 610: '):
' (ID: 1883)
  Prédit: 'anel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anel' → logprob: -0.13422837853431702
    2. 'os' → logprob: -3.009228467941284
    3. ')' → logprob: -3.509228467941284
    4. '):' → logprob: -3.884228467941284
    5. '):
' → logprob: -4.759228229522705
    6. 'a' → logprob: -5.259228229522705
    7. 'an' → logprob: -5.384228229522705
    8. 'p' → logprob: -5.759228229522705
    9. '):

' → logprob: -6.759228229522705
    10. 'osition' → logprob: -7.509228229522705

Token 611: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003732499200850725
    2. ':' → logprob: -6.503732681274414
    3. '):' → logprob: -6.878732681274414
    4. ')' → logprob: -8.128732681274414
    5. ',' → logprob: -8.378732681274414
    6. '):
' → logprob: -8.503732681274414
    7. '       ' → logprob: -9.628732681274414
    8. ' if' → logprob: -9.878732681274414
    9. 'panel' → logprob: -10.128732681274414
    10. '(p' → logprob: -10.253732681274414

Token 612: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.037840183824300766
    2. ' return' → logprob: -4.037840366363525
    3. '   ' → logprob: -4.412840366363525
    4. 'order' → logprob: -5.162840366363525
    5. '{
' → logprob: -7.662840366363525
    6. 'if' (adapté à ' if') → logprob: -7.787840366363525
    7. '{'' → logprob: -7.912840366363525
    8. '{return' → logprob: -9.162839889526367
    9. ' order' → logprob: -9.662839889526367
    10. '{' → logprob: -9.787839889526367

Token 613: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026342563331127167
    2. ' p' → logprob: -3.6513426303863525
    3. '   ' → logprob: -10.901342391967773
    4. ' ' → logprob: -10.901342391967773
    5. '  ' → logprob: -13.401342391967773
    6. '    ' → logprob: -14.526342391967773
    7. '	p' → logprob: -14.526342391967773
    8. ' ' → logprob: -14.776342391967773
    9. '     ' → logprob: -14.776342391967773
    10. ' not' → logprob: -15.026342391967773

Token 614: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5465019941329956
    2. ' ==' → logprob: -0.9215019941329956
    3. '==-' → logprob: -3.921502113342285
    4. '=' → logprob: -7.046502113342285
    5. ' is' → logprob: -7.171502113342285
    6. 'is' → logprob: -8.546502113342285
    7. ')' → logprob: -8.921502113342285
    8. 'None' → logprob: -8.921502113342285
    9. '===' → logprob: -9.046502113342285
    10. '=None' → logprob: -9.046502113342285

Token 615: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005446921568363905
    2. ''L' → logprob: -7.625544548034668
    3. '-' → logprob: -10.500544548034668
    4. ''' → logprob: -10.875544548034668
    5. ''-' → logprob: -13.250544548034668
    6. 'R' → logprob: -13.500544548034668
    7. ' L' → logprob: -13.750544548034668
    8. 'N' → logprob: -13.750544548034668
    9. '')' → logprob: -13.875544548034668
    10. 'U' → logprob: -14.625544548034668

Token 616: '':' (ID: 2337)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.6290359497070312
    2. ''):' → logprob: -1.6290359497070312
    3. '':' → logprob: -1.7540359497070312
    4. '')' → logprob: -2.7540359497070312
    5. '':
' → logprob: -4.129035949707031
    6. ''' → logprob: -4.379035949707031
    7. ':' → logprob: -6.629035949707031
    8. '):
' → logprob: -6.879035949707031
    9. '):' → logprob: -7.254035949707031
    10. 'L' → logprob: -7.754035949707031

Token 617: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023578189313411713
    2. 'return' → logprob: -3.77357816696167
    3. ' return' → logprob: -8.648578643798828
    4. ' ' → logprob: -9.398578643798828
    5. '   ' → logprob: -9.523578643798828
    6. '       ' → logprob: -13.898578643798828
    7. '	return' → logprob: -15.148578643798828
    8. '           ' → logprob: -17.148578643798828
    9. '  ' → logprob: -17.773578643798828
    10. '
' → logprob: -17.898578643798828

Token 618: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.125
    4. '1' → logprob: -20.8125
    5. '00' → logprob: -21.1875
    6. '۰' → logprob: -21.375
    7. '  ' → logprob: -21.625
    8. '000' → logprob: -21.6875
    9. '０' → logprob: -22.0
    10. 'return' → logprob: -22.25

Token 619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.4375057220459
    4. '1' → logprob: -19.8750057220459
    5. '  ' → logprob: -19.9375057220459
    6. '00' → logprob: -20.0625057220459
    7. '۰' → logprob: -20.3125057220459
    8. '000' → logprob: -20.6875057220459
    9. '０' → logprob: -21.0000057220459
    10. '`' → logprob: -21.0000057220459

Token 620: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5338671207427979
    2. 'elif' → logprob: -0.9088671207427979
    3. '<|end|>' → logprob: -5.533866882324219
    4. ' elif' → logprob: -5.658866882324219
    5. '       ' → logprob: -6.533866882324219
    6. '	elif' → logprob: -7.783866882324219
    7. 'if' → logprob: -8.033866882324219
    8. '
' → logprob: -8.283866882324219
    9. ' ' → logprob: -8.283866882324219
    10. ' if' → logprob: -8.908866882324219

Token 621: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013104939833283424
    2. 'elif' → logprob: -4.3881049156188965
    3. ' elif' → logprob: -8.138105392456055
    4. 'if' → logprob: -9.013105392456055
    5. '       ' → logprob: -9.513105392456055
    6. ' if' → logprob: -9.638105392456055
    7. ' ' → logprob: -11.138105392456055
    8. '  ' → logprob: -11.388105392456055
    9. '    ' → logprob: -12.388105392456055
    10. 'def' → logprob: -12.638105392456055

Token 622: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5943734049797058
    2. '   ' → logprob: -0.8443734049797058
    3. 'if' (adapté à ' if') → logprob: -4.0943732261657715
    4. ' elif' → logprob: -6.7193732261657715
    5. ' if' → logprob: -7.9693732261657715
    6. '       ' → logprob: -10.21937370300293
    7. ' ' → logprob: -12.96937370300293
    8. '0' → logprob: -13.09437370300293
    9. '	elif' → logprob: -13.59437370300293
    10. 'el' → logprob: -13.96937370300293

Token 623: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14306774735450745
    2. ' p' → logprob: -2.0180678367614746
    3. ' U' → logprob: -9.018067359924316
    4. 'U' → logprob: -9.143067359924316
    5. ''U' → logprob: -9.393067359924316
    6. ''' → logprob: -10.768067359924316
    7. ' '' → logprob: -11.018067359924316
    8. ' ' → logprob: -11.393067359924316
    9. ''p' → logprob: -11.393067359924316
    10. '   ' → logprob: -12.518067359924316

Token 624: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.022203566506505013
    2. '==' → logprob: -4.64720344543457
    3. ''U' → logprob: -5.14720344543457
    4. ''' → logprob: -5.64720344543457
    5. ' ==' → logprob: -6.14720344543457
    6. 'in' → logprob: -8.02220344543457
    7. ' in' → logprob: -8.64720344543457
    8. ' =='' → logprob: -8.89720344543457
    9. ' '' → logprob: -10.64720344543457
    10. 'U' → logprob: -10.89720344543457

Token 625: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.005384587682783604
    2. ''U' → logprob: -5.38038444519043
    3. 'R' → logprob: -8.00538444519043
    4. ' U' → logprob: -8.13038444519043
    5. ''' → logprob: -9.13038444519043
    6. ' ' → logprob: -11.50538444519043
    7. ' '' → logprob: -12.25538444519043
    8. '   ' → logprob: -13.13038444519043
    9. '	U' → logprob: -13.13038444519043
    10. ''u' → logprob: -13.13038444519043

Token 626: ''' (ID: 6)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4164516031742096
    2. ':' → logprob: -1.9164515733718872
    3. ''):' → logprob: -2.0414516925811768
    4. '1' → logprob: -3.5414516925811768
    5. '0' → logprob: -4.666451454162598
    6. '')' → logprob: -4.791451454162598
    7. '   ' → logprob: -5.166451454162598
    8. ''' → logprob: -5.416451454162598
    9. '       ' → logprob: -6.666451454162598
    10. 'return' → logprob: -6.791451454162598

Token 627: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007456711959093809
    2. ':return' → logprob: -5.3824567794799805
    3. '   ' → logprob: -7.0074567794799805
    4. '       ' → logprob: -7.6324567794799805
    5. ' return' → logprob: -8.00745677947998
    6. ' :' → logprob: -8.25745677947998
    7. 'return' → logprob: -8.38245677947998
    8. '1' → logprob: -8.50745677947998
    9. ' ' → logprob: -9.25745677947998
    10. '=' → logprob: -9.63245677947998

Token 628: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023286588490009308
    2. ' p' → logprob: -3.7732865810394287
    3. ''p' → logprob: -11.148286819458008
    4. '   ' → logprob: -11.898286819458008
    5. 'D' → logprob: -11.898286819458008
    6. ' ' → logprob: -12.523286819458008
    7. ''' → logprob: -12.898286819458008
    8. '  ' → logprob: -13.523286819458008
    9. ' D' → logprob: -13.773286819458008
    10. ''D' → logprob: -13.898286819458008

Token 629: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0013710727216675878
    2. '==' → logprob: -6.626370906829834
    3. ' ==' → logprob: -10.626371383666992
    4. ' =='' → logprob: -11.876371383666992
    5. ']=='' → logprob: -12.376371383666992
    6. ''' → logprob: -12.626371383666992
    7. '']=='' → logprob: -12.876371383666992
    8. '=="' → logprob: -13.751371383666992
    9. ')=='' → logprob: -14.126371383666992
    10. '='' → logprob: -14.251371383666992

Token 630: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.263011578586884e-05
    2. ''D' → logprob: -10.375042915344238
    3. ' D' → logprob: -11.625042915344238
    4. ''' → logprob: -13.625042915344238
    5. ' ' → logprob: -15.125042915344238
    6. 'p' → logprob: -15.500042915344238
    7. 'd' → logprob: -15.875042915344238
    8. '   ' → logprob: -16.125041961669922
    9. '"D' → logprob: -16.375041961669922
    10. ''d' → logprob: -16.750041961669922

Token 631: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014098741114139557
    2. ':' → logprob: -4.389098644256592
    3. ''):' → logprob: -7.014098644256592
    4. '1' → logprob: -8.38909912109375
    5. ''' → logprob: -8.76409912109375
    6. 'return' → logprob: -9.01409912109375
    7. ':return' → logprob: -10.01409912109375
    8. '):' → logprob: -10.13909912109375
    9. ' return' → logprob: -10.63909912109375
    10. '')' → logprob: -11.01409912109375

Token 632: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009720868547447026
    2. ' ' → logprob: -7.000972270965576
    3. '   ' → logprob: -10.125971794128418
    4. '       ' → logprob: -11.500971794128418
    5. 'return' → logprob: -11.625971794128418
    6. ' return' → logprob: -13.875971794128418
    7. '           ' → logprob: -14.875971794128418
    8. '  ' → logprob: -16.375972747802734
    9. ' ' → logprob: -16.750972747802734
    10. '     ' → logprob: -17.125972747802734

Token 633: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.375018119812012
    4. '  ' → logprob: -18.250019073486328
    5. '       ' → logprob: -18.750019073486328
    6. '１' → logprob: -19.500019073486328
    7. '۱' → logprob: -19.812519073486328
    8. '[' → logprob: -19.937519073486328
    9. '2' → logprob: -20.187519073486328
    10. '	' → logprob: -20.562519073486328

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '  ' → logprob: -19.3125
    5. '１' → logprob: -19.625
    6. '۱' → logprob: -19.6875
    7. '[' → logprob: -20.25
    8. '```' → logprob: -20.3125
    9. '১' → logprob: -20.375
    10. '       ' → logprob: -20.5625

Token 635: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10125185549259186
    2. '   ' → logprob: -2.3512518405914307
    3. '<|end|>' → logprob: -8.601251602172852
    4. '
' → logprob: -8.726251602172852
    5. ' if' → logprob: -8.851251602172852
    6. 'return' → logprob: -8.976251602172852
    7. '        
' → logprob: -9.476251602172852
    8. '    
' → logprob: -9.601251602172852
    9. 'if' → logprob: -10.101251602172852
    10. '  ' → logprob: -10.476251602172852

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2044612467288971
    2. '   ' → logprob: -1.7044612169265747
    3. '        
' → logprob: -6.704461097717285
    4. '    
' → logprob: -6.954461097717285
    5. '<|end|>' → logprob: -9.079461097717285
    6. '
' → logprob: -9.204461097717285
    7. '  
' → logprob: -9.329461097717285
    8. ' if' → logprob: -9.454461097717285
    9. '    ' → logprob: -9.454461097717285
    10. 'return' → logprob: -9.704461097717285

Token 637: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4088517129421234
    2. ' if' → logprob: -1.6588517427444458
    3. 'return' (adapté à ' return') → logprob: -2.2838516235351562
    4. ' return' → logprob: -3.7838516235351562
    5. '       ' → logprob: -3.9088516235351562
    6. '2' → logprob: -7.783851623535156
    7. '   ' → logprob: -9.658851623535156
    8. '0' → logprob: -10.408851623535156
    9. ' ' → logprob: -11.033851623535156
    10. '3' → logprob: -12.283851623535156

Token 638: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.8751802444458
    3. '3' → logprob: -10.1251802444458
    4. '   ' → logprob: -14.7501802444458
    5. '  ' → logprob: -18.125181198120117
    6. '       ' → logprob: -18.750181198120117
    7. '    ' → logprob: -20.250181198120117
    8. '     ' → logprob: -20.625181198120117
    9. '
' → logprob: -20.875181198120117
    10. '(' → logprob: -21.000181198120117

Token 639: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.673547563375905e-05
    2. ' ' → logprob: -9.375086784362793
    3. '3' → logprob: -13.500086784362793
    4. '   ' → logprob: -14.875086784362793
    5. '  ' → logprob: -17.125085830688477
    6. '       ' → logprob: -18.875085830688477
    7. '    ' → logprob: -19.812585830688477
    8. '1' → logprob: -19.875085830688477
    9. '     ' → logprob: -19.875085830688477
    10. '```' → logprob: -20.000085830688477

Token 640: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18654242157936096
    2. '
' → logprob: -2.561542510986328
    3. 'def' → logprob: -2.686542510986328
    4. '    
' → logprob: -3.811542510986328
    5. '#' → logprob: -7.436542510986328
    6. '<|end|>' → logprob: -7.436542510986328
    7. '  
' → logprob: -7.686542510986328
    8. '

' → logprob: -8.436542510986328
    9. ')' → logprob: -8.811542510986328
    10. '<|end|>' → logprob: -8.936542510986328

Token 642: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4168984293937683
    2. 'def' → logprob: -1.416898488998413
    3. 'states' → logprob: -3.416898488998413
    4. 'possible' → logprob: -3.791898488998413
    5. 'dp' → logprob: -4.166898250579834
    6. 'current' → logprob: -4.666898250579834
    7. '#' (adapté à ' #') → logprob: -5.666898250579834
    8. '    
' → logprob: -5.791898250579834
    9. 'prev' → logprob: -6.041898250579834
    10. 'positions' → logprob: -6.166898250579834

Token 643: ' Initial' (ID: 9209)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679124236106873
    2. 'dp' → logprob: -1.792912483215332
    3. 'states' → logprob: -2.292912483215332
    4. 'possible' → logprob: -2.542912483215332
    5. '#' → logprob: -2.792912483215332
    6. 'current' → logprob: -3.667912483215332
    7. 'def' → logprob: -4.167912483215332
    8. 'prev' → logprob: -4.417912483215332
    9. 'positions' → logprob: -4.917912483215332
    10. 'pos' → logprob: -5.292912483215332

Token 644: 'isation' (ID: 6993)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3792818486690521
    2. 'state' → logprob: -1.2542818784713745
    3. '_states' → logprob: -4.379281997680664
    4. 'states' → logprob: -4.754281997680664
    5. '_' → logprob: -5.504281997680664
    6. '_pos' → logprob: -7.129281997680664
    7. 'ly' → logprob: -7.379281997680664
    8. 'def' → logprob: -7.629281997680664
    9. 'e' → logprob: -7.879281997680664
    10. '_positions' → logprob: -7.879281997680664

Token 645: ' de' (ID: 334)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.21587935090065002
    2. 'possible' → logprob: -2.465879440307617
    3. '   ' → logprob: -3.590879440307617
    4. 'current' → logprob: -3.715879440307617
    5. 'left' → logprob: -3.965879440307617
    6. ' states' → logprob: -4.215879440307617
    7. 'dp' → logprob: -4.340879440307617
    8. 'positions' → logprob: -6.215879440307617
    9. 'prev' → logprob: -6.340879440307617
    10. ' possible' → logprob: -6.965879440307617

Token 646: ' l' (ID: 305)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5346949696540833
    2. '{' → logprob: -2.1596949100494385
    3. 'possible' → logprob: -2.2846949100494385
    4. 'states' → logprob: -2.4096949100494385
    5. 'set' → logprob: -3.1596949100494385
    6. 'curr' → logprob: -4.659695148468018
    7. ' {(' → logprob: -4.659695148468018
    8. 'prev' → logprob: -5.034695148468018
    9. ' current' → logprob: -5.034695148468018
    10. 'cur' → logprob: -5.159695148468018

Token 647: ''ensemble' (ID: 79341)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.9085829257965088
    2. 'current' → logprob: -1.2835829257965088
    3. 'possible' → logprob: -1.9085829257965088
    4. 'et' → logprob: -3.408582925796509
    5. '#' → logprob: -3.533582925796509
    6. 'set' → logprob: -3.783582925796509
    7. 'curr' → logprob: -4.15858268737793
    8. 'prev' → logprob: -4.65858268737793
    9. 'ét' → logprob: -4.65858268737793
    10. 'positions' → logprob: -4.78358268737793

Token 648: ' des' (ID: 731)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9896576404571533
    2. 'states' → logprob: -0.9896576404571533
    3. 'possible' → logprob: -2.4896576404571533
    4. '   ' → logprob: -2.7396576404571533
    5. 'et' → logprob: -3.8646576404571533
    6. ' current' → logprob: -3.9896576404571533
    7. ' states' → logprob: -3.9896576404571533
    8. 'd' → logprob: -4.864657402038574
    9. 'dp' → logprob: -5.114657402038574
    10. 'des' → logprob: -5.364657402038574

Token 649: ' états' (ID: 184259)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.14202500879764557
    2. 'ét' → logprob: -3.3920249938964844
    3. ' états' → logprob: -3.6420249938964844
    4. 'positions' → logprob: -3.8920249938964844
    5. 'et' → logprob: -3.8920249938964844
    6. 'possible' → logprob: -4.517024993896484
    7. ' states' → logprob: -4.767024993896484
    8. 'poss' → logprob: -5.392024993896484
    9. '#' → logprob: -6.517024993896484
    10. 'state' → logprob: -6.642024993896484

Token 650: ' possibles' (ID: 97753)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2524524927139282
    2. ' states' → logprob: -2.0024523735046387
    3. '   ' → logprob: -3.2524523735046387
    4. 'current' → logprob: -3.7524523735046387
    5. ' current' → logprob: -5.002452373504639
    6. 'et' → logprob: -5.002452373504639
    7. 'possible' → logprob: -5.252452373504639
    8. ' et' → logprob: -7.377452373504639
    9. ' possible' → logprob: -7.502452373504639
    10. 'dp' → logprob: -7.502452373504639

Token 651: '
' (ID: 198)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.19526620209217072
    2. '   ' → logprob: -2.4452662467956543
    3. ' states' → logprob: -3.0702662467956543
    4. 'possible' → logprob: -3.6952662467956543
    5. 'current' → logprob: -4.695266246795654
    6. 'et' → logprob: -5.945266246795654
    7. ' possible' → logprob: -6.570266246795654
    8. ' current' → logprob: -6.945266246795654
    9. 'state' → logprob: -7.320266246795654
    10. '```' → logprob: -7.320266246795654

Token 652: '   ' (ID: 271)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.6780509948730469
    2. '   ' → logprob: -1.3030509948730469
    3. 'possible' → logprob: -2.303050994873047
    4. ' states' → logprob: -2.553050994873047
    5. ' possible' → logprob: -4.303050994873047
    6. 'current' → logprob: -4.678050994873047
    7. ' possibles' → logprob: -5.303050994873047
    8. ' current' → logprob: -5.553050994873047
    9. 'et' → logprob: -5.553050994873047
    10. 'poss' → logprob: -6.178050994873047

Token 653: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1283436417579651
    2. 'current' → logprob: -3.0033435821533203
    3. ' states' → logprob: -3.5033435821533203
    4. 'possible' → logprob: -3.7533435821533203
    5. 'et' → logprob: -5.00334358215332
    6. ' current' → logprob: -5.50334358215332
    7. 'etat' → logprob: -6.50334358215332
    8. 'poss' → logprob: -7.25334358215332
    9. 'ét' → logprob: -7.37834358215332
    10. ' possible' → logprob: -7.50334358215332

Token 654: ' Un' (ID: 1367)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.10665855556726456
    2. 'current' → logprob: -3.106658458709717
    3. 'possible' → logprob: -3.481658458709717
    4. 'et' → logprob: -4.106658458709717
    5. '#' → logprob: -5.856658458709717
    6. 'etat' → logprob: -6.856658458709717
    7. 'ét' → logprob: -6.856658458709717
    8. 'poss' → logprob: -7.106658458709717
    9. ' states' → logprob: -7.481658458709717
    10. 'curr' → logprob: -7.606658458709717

Token 655: ' état' (ID: 59181)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.656757652759552
    2. 'states' → logprob: -1.6567575931549072
    3. 'et' → logprob: -1.7817575931549072
    4. 'current' → logprob: -3.5317575931549072
    5. ' set' → logprob: -4.031757831573486
    6. 'state' → logprob: -4.156757831573486
    7. 't' → logprob: -4.406757831573486
    8. 's' → logprob: -4.656757831573486
    9. 'curr' → logprob: -5.281757831573486
    10. ' states' → logprob: -5.531757831573486

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8119319081306458
    2. '=' → logprob: -1.061931848526001
    3. 's' → logprob: -1.686931848526001
    4. '_possible' → logprob: -4.43693208694458
    5. 'possible' → logprob: -5.81193208694458
    6. '_states' → logprob: -5.81193208694458
    7. '=set' → logprob: -6.18693208694458
    8. ' possible' → logprob: -7.43693208694458
    9. '_set' → logprob: -7.56193208694458
    10. '_current' → logprob: -7.68693208694458

Token 657: ' (' (ID: 350)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.17230817675590515
    2. '{' → logprob: -1.9223082065582275
    3. ' set' → logprob: -4.922307968139648
    4. ' {(' → logprob: -6.172307968139648
    5. '(set' → logprob: -6.547307968139648
    6. 'fro' → logprob: -8.297307968139648
    7. '   ' → logprob: -8.422307968139648
    8. '(' → logprob: -8.422307968139648
    9. ' (' → logprob: -9.047307968139648
    10. 'left' → logprob: -9.672307968139648

Token 658: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8524874448776245
    2. '-' → logprob: -0.9774874448776245
    3. 'left' → logprob: -2.227487564086914
    4. 'g' → logprob: -3.477487564086914
    5. '(-' → logprob: -4.227487564086914
    6. ' -' → logprob: -4.352487564086914
    7. 'position' → logprob: -4.477487564086914
    8. '   ' → logprob: -6.227487564086914
    9. '(left' → logprob: -6.227487564086914
    10. '(g' → logprob: -6.602487564086914

Token 659: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.02878185175359249
    2. 'g' → logprob: -3.6537818908691406
    3. '_left' → logprob: -7.278781890869141
    4. '   ' → logprob: -7.778781890869141
    5. ',' → logprob: -7.903781890869141
    6. ')' → logprob: -8.40378189086914
    7. '_' → logprob: -8.90378189086914
    8. '_p' → logprob: -9.27878189086914
    9. ' gauche' → logprob: -9.27878189086914
    10. 'G' → logprob: -9.77878189086914

Token 660: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.008785571902990341
    2. 'au' → logprob: -5.633785724639893
    3. ',' → logprob: -6.633785724639893
    4. '_left' → logprob: -6.883785724639893
    5. '_g' → logprob: -6.883785724639893
    6. 'g' → logprob: -7.133785724639893
    7. 'a' → logprob: -8.508785247802734
    8. 'auge' → logprob: -8.883785247802734
    9. 'left' → logprob: -9.633785247802734
    10. 'auch' → logprob: -9.758785247802734

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017090904293581843
    2. ',p' → logprob: -7.876708984375
    3. ' ,' → logprob: -8.001708984375
    4. ')' → logprob: -8.126708984375
    5. '_panel' → logprob: -9.001708984375
    6. ',
' → logprob: -9.001708984375
    7. '<|end|>' → logprob: -9.001708984375
    8. ',pos' → logprob: -9.876708984375
    9. '   ' → logprob: -10.126708984375
    10. ',num' → logprob: -10.376708984375

Token 662: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.026430461555719376
    2. ' pos' → logprob: -3.651430368423462
    3. ' ' → logprob: -10.276430130004883
    4. '   ' → logprob: -10.651430130004883
    5. ' ' → logprob: -10.776430130004883
    6. 'position' → logprob: -11.276430130004883
    7. '	pos' → logprob: -12.026430130004883
    8. '  ' → logprob: -12.401430130004883
    9. ')' → logprob: -12.463930130004883
    10. 'p' → logprob: -12.526430130004883

Token 663: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.22232060134410858
    2. 'dro' → logprob: -1.722320556640625
    3. 'd' → logprob: -4.972320556640625
    4. '_right' → logprob: -5.347320556640625
    5. 'right' → logprob: -5.722320556640625
    6. 'ro' → logprob: -6.722320556640625
    7. ')' → logprob: -6.972320556640625
    8. '_r' → logprob: -7.597320556640625
    9. '_g' → logprob: -7.722320556640625
    10. '_p' → logprob: -7.847320556640625

Token 664: 'ro' (ID: 298)
  Prédit: 'roit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roit' → logprob: -0.0914151519536972
    2. 'ro' → logprob: -2.4664151668548584
    3. 'roi' → logprob: -7.216414928436279
    4. 'r' → logprob: -7.966414928436279
    5. 'oit' → logprob: -8.341415405273438
    6. 'roits' → logprob: -8.591415405273438
    7. 'o' → logprob: -8.841415405273438
    8. '```' → logprob: -8.966415405273438
    9. 'e' → logprob: -9.091415405273438
    10. ')' → logprob: -9.466415405273438

Token 665: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.012724950909614563
    2. 'ite' → logprob: -4.512724876403809
    3. 'ight' → logprob: -7.887724876403809
    4. 'int' → logprob: -8.137724876403809
    5. ')' → logprob: -8.512724876403809
    6. '#' → logprob: -8.637724876403809
    7. 't' → logprob: -9.137724876403809
    8. '}' → logprob: -9.262724876403809
    9. '   ' → logprob: -9.637724876403809
    10. 'oit' → logprob: -10.262724876403809

Token 666: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17345508933067322
    2. ',' → logprob: -2.048454999923706
    3. '),' → logprob: -3.673454999923706
    4. '   ' → logprob: -6.298455238342285
    5. ')
' → logprob: -6.798455238342285
    6. '):' → logprob: -7.423455238342285
    7. ')=' → logprob: -7.923455238342285
    8. '):
' → logprob: -7.923455238342285
    9. ',
' → logprob: -9.048455238342285
    10. ' ,' → logprob: -9.423455238342285

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14516906440258026
    2. 'states' → logprob: -2.2701690196990967
    3. 'possible' → logprob: -4.645169258117676
    4. ' states' → logprob: -4.770169258117676
    5. ' =' → logprob: -4.895169258117676
    6. ',' → logprob: -5.895169258117676
    7. ' possible' → logprob: -7.145169258117676
    8. '=' → logprob: -7.520169258117676
    9. 'current' → logprob: -7.645169258117676
    10. ' possibles' → logprob: -7.895169258117676

Token 668: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.0621536560356617
    2. 'possible' → logprob: -3.4371535778045654
    3. '   ' → logprob: -4.1871538162231445
    4. 'current' → logprob: -5.1871538162231445
    5. ' states' → logprob: -5.6871538162231445
    6. 'et' → logprob: -6.4371538162231445
    7. 'poss' → logprob: -6.9371538162231445
    8. 'ét' → logprob: -8.437153816223145
    9. 'etat' → logprob: -8.687153816223145
    10. 'state' → logprob: -8.812153816223145

Token 669: ' Au' (ID: 18016)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.047109950333833694
    2. 'current' → logprob: -4.047110080718994
    3. 'et' → logprob: -4.422110080718994
    4. 'possible' → logprob: -4.547110080718994
    5. '#' → logprob: -6.797110080718994
    6. 'etat' → logprob: -7.047110080718994
    7. ' states' → logprob: -7.172110080718994
    8. 'ét' → logprob: -7.172110080718994
    9. 'poss' → logprob: -7.922110080718994
    10. 'dp' → logprob: -8.297109603881836

Token 670: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.08554941415786743
    2. ' départ' → logprob: -3.8355493545532227
    3. 'start' → logprob: -3.9605493545532227
    4. 'prem' → logprob: -4.085549354553223
    5. '0' → logprob: -4.710549354553223
    6. 'set' → logprob: -5.460549354553223
    7. ' début' → logprob: -6.210549354553223
    8. 'd' → logprob: -6.585549354553223
    9. 'depart' → logprob: -6.585549354553223
    10. 'n' → logprob: -6.835549354553223

Token 671: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08042522519826889
    2. '=' → logprob: -2.580425262451172
    3. 'states' → logprob: -7.080425262451172
    4. ' states' → logprob: -8.455425262451172
    5. 'possible' → logprob: -8.705425262451172
    6. '=set' → logprob: -9.705425262451172
    7. ' possible' → logprob: -9.830425262451172
    8. 'set' → logprob: -10.080425262451172
    9. '{' → logprob: -10.080425262451172
    10. '={(' → logprob: -10.705425262451172

Token 672: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2050347477197647
    2. ' =' → logprob: -1.8300347328186035
    3. 's' → logprob: -4.3300347328186035
    4. 'have' → logprob: -6.5800347328186035
    5. '=set' → logprob: -6.5800347328186035
    6. 'start' → logprob: -6.8300347328186035
    7. 'set' → logprob: -6.8300347328186035
    8. 'possible' → logprob: -6.9550347328186035
    9. 'poss' → logprob: -6.9550347328186035
    10. 'et' → logprob: -7.0800347328186035

Token 673: ''a' (ID: 10443)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7920972108840942
    2. 'e' → logprob: -1.1670972108840942
    3. ''est' → logprob: -2.6670970916748047
    4. 'est' → logprob: -3.5420970916748047
    5. ' =' → logprob: -3.6670970916748047
    6. 'a' → logprob: -3.7920970916748047
    7. ''a' → logprob: -4.292097091674805
    8. '#' → logprob: -4.417097091674805
    9. 'ous' → logprob: -4.417097091674805
    10. ''ai' → logprob: -5.167097091674805

Token 674: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6924881935119629
    2. 'pas' → logprob: -1.317488193511963
    3. '=' → logprob: -2.942488193511963
    4. 'a' → logprob: -3.067488193511963
    5. ' =' → logprob: -3.067488193511963
    6. ' aucun' → logprob: -3.692488193511963
    7. 'set' → logprob: -4.567488193511963
    8. ' set' → logprob: -4.567488193511963
    9. ' a' → logprob: -5.067488193511963
    10. 'u' → logprob: -5.442488193511963

Token 675: ' les' (ID: 1341)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.4509828090667725
    2. 'de' → logprob: -1.7009828090667725
    3. ' de' → logprob: -1.8259828090667725
    4. '(' → logprob: -1.9509828090667725
    5. ' (-' → logprob: -2.0759828090667725
    6. '-' → logprob: -3.0759828090667725
    7. ' (' → logprob: -3.4509828090667725
    8. 'd' → logprob: -3.5759828090667725
    9. ' encore' → logprob: -4.200983047485352
    10. ' d' → logprob: -4.700983047485352

Token 676: ' pieds' (ID: 72670)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08996769785881042
    2. '-' → logprob: -3.339967727661133
    3. ' pieds' → logprob: -3.339967727661133
    4. ' ' → logprob: -5.464967727661133
    5. 'positions' → logprob: -5.964967727661133
    6. 'de' → logprob: -6.839967727661133
    7. ' deux' → logprob: -7.089967727661133
    8. '(-' → logprob: -7.214967727661133
    9. ' -' → logprob: -7.652467727661133
    10. ' pied' → logprob: -7.839967727661133

Token 677: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.5608941316604614
    2. 'pos' → logprob: -1.3108941316604614
    3. '_sur' → logprob: -3.185894012451172
    4. 'dess' → logprob: -3.810894012451172
    5. ' dessus' → logprob: -3.810894012451172
    6. '_pos' → logprob: -3.935894012451172
    7. ' pos' → logprob: -5.310894012451172
    8. ' sur' → logprob: -5.435894012451172
    9. '_' → logprob: -5.560894012451172
    10. 'posé' → logprob: -5.685894012451172

Token 678: ' une' (ID: 2463)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17230305075645447
    2. '(-' → logprob: -2.2973029613494873
    3. 'auc' → logprob: -3.5473029613494873
    4. ' -' → logprob: -5.047303199768066
    5. ' (-' → logprob: -5.297303199768066
    6. ' ' → logprob: -5.797303199768066
    7. 'r' → logprob: -6.047303199768066
    8. 'None' → logprob: -6.172303199768066
    9. '(' → logprob: -6.547303199768066
    10. '(None' → logprob: -6.672303199768066

Token 679: ' fl' (ID: 1548)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.857689619064331
    2. 'position' → logprob: -1.107689619064331
    3. '-' → logprob: -2.357689619064331
    4. ' case' → logprob: -3.357689619064331
    5. ' ' → logprob: -3.482689619064331
    6. ' fl' → logprob: -3.982689619064331
    7. 'fl' → logprob: -4.10768985748291
    8. 'p' → logprob: -4.23268985748291
    9. 'place' → logprob: -5.10768985748291
    10. 'ligne' → logprob: -5.35768985748291

Token 680: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.005344874691218138
    2. 'êche' → logprob: -5.880344867706299
    3. 'è' → logprob: -6.755344867706299
    4. 'e' → logprob: -7.005344867706299
    5. 'é' → logprob: -7.880344867706299
    6. 'éch' → logprob: -11.005345344543457
    7. '#' → logprob: -11.630345344543457
    8. 'o' → logprob: -11.880345344543457
    9. 'ê' → logprob: -12.005345344543457
    10. 'ech' → logprob: -12.005345344543457

Token 681: ' (' (ID: 350)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.0317825078964233
    2. 'states' → logprob: -1.0317825078964233
    3. ' =' → logprob: -2.031782627105713
    4. '   ' → logprob: -2.531782627105713
    5. ',' → logprob: -3.781782627105713
    6. 's' → logprob: -4.406782627105713
    7. '=' → logprob: -4.906782627105713
    8. 'state' → logprob: -5.156782627105713
    9. 'current' → logprob: -5.781782627105713
    10. '
' → logprob: -5.781782627105713

Token 682: 'on' (ID: 263)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7990646958351135
    2. '-' → logprob: -1.0490646362304688
    3. '{' → logprob: -2.9240646362304688
    4. ' set' → logprob: -3.1740646362304688
    5. '{-' → logprob: -3.5490646362304688
    6. '(-' → logprob: -3.6740646362304688
    7. ')' → logprob: -3.7990646362304688
    8. ' -' → logprob: -4.049064636230469
    9. ' {' → logprob: -6.049064636230469
    10. ' (-' → logprob: -6.424064636230469

Token 683: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34668365120887756
    2. ',' → logprob: -2.0966837406158447
    3. '-' → logprob: -2.5966837406158447
    4. ' )' → logprob: -3.9716837406158447
    5. ' ,' → logprob: -3.9716837406158447
    6. ' -' → logprob: -4.596683502197266
    7. ' =' → logprob: -4.721683502197266
    8. '),' → logprob: -5.096683502197266
    9. 'n' → logprob: -5.221683502197266
    10. ' n' → logprob: -5.971683502197266

Token 684: ' considérer' (ID: 172894)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.4836224317550659
    2. 'app' → logprob: -1.983622431755066
    3. '-' → logprob: -2.3586225509643555
    4. 'poser' → logprob: -3.1086225509643555
    5. 'placer' → logprob: -3.6086225509643555
    6. 'dire' → logprob: -4.2336225509643555
    7. ' mettre' → logprob: -4.8586225509643555
    8. '#' → logprob: -5.2336225509643555
    9. 'initial' → logprob: -5.2336225509643555
    10. 'être' → logprob: -5.2336225509643555

Token 685: ' qu' (ID: 474)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21876659989356995
    2. '(-' → logprob: -1.9687665700912476
    3. ' -' → logprob: -3.468766689300537
    4. 'set' → logprob: -4.593766689300537
    5. ' (-' → logprob: -4.718766689300537
    6. '{-' → logprob: -6.093766689300537
    7. ' set' → logprob: -6.468766689300537
    8. ' ' → logprob: -7.093766689300537
    9. '{' → logprob: -7.218766689300537
    10. '   ' → logprob: -7.593766689300537

Token 686: ''ils' (ID: 41108)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8466057777404785
    2. ' -' → logprob: -1.0966057777404785
    3. ' ils' → logprob: -2.8466057777404785
    4. ' les' → logprob: -3.2216057777404785
    5. ')' → logprob: -3.4716057777404785
    6. ' pos' → logprob: -3.5966057777404785
    7. 'pos' → logprob: -3.9716057777404785
    8. ' they' → logprob: -4.9716057777404785
    9. ' (' → logprob: -5.2216057777404785
    10. ' ' → logprob: -5.2216057777404785

Token 687: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8051540851593018
    2. ' =' → logprob: -1.4301540851593018
    3. ' sont' → logprob: -2.0551540851593018
    4. 's' → logprob: -3.4301540851593018
    5. ',' → logprob: -3.4301540851593018
    6. '=None' → logprob: -4.055153846740723
    7. ' are' → logprob: -4.430153846740723
    8. ' n' → logprob: -4.805153846740723
    9. 'n' → logprob: -5.055153846740723
    10. '=(-' → logprob: -5.055153846740723

Token 688: ' au' (ID: 2791)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5609649419784546
    2. '(-' → logprob: -1.3109649419784546
    3. '{-' → logprob: -2.935965061187744
    4. ' (-' → logprob: -3.310965061187744
    5. ' -' → logprob: -3.435965061187744
    6. 'sur' → logprob: -4.435965061187744
    7. 'set' → logprob: -5.185965061187744
    8. '{' → logprob: -5.435965061187744
    9. 'dans' → logprob: -5.935965061187744
    10. ' sur' → logprob: -6.560965061187744

Token 689: ' repos' (ID: 47277)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018673599697649479
    2. 'None' → logprob: -6.751867294311523
    3. '(-' → logprob: -7.876867294311523
    4. ' -' → logprob: -8.876867294311523
    5. '(None' → logprob: -10.126867294311523
    6. 'n' → logprob: -10.501867294311523
    7. 'none' → logprob: -10.751867294311523
    8. '(' → logprob: -11.376867294311523
    9. ' ' → logprob: -11.626867294311523
    10. ' None' → logprob: -11.751867294311523

Token 690: ' hors' (ID: 26087)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2714458107948303
    2. ',' → logprob: -1.5214457511901855
    3. '),' → logprob: -5.7714457511901855
    4. '{-' → logprob: -6.1464457511901855
    5. '(-' → logprob: -6.2714457511901855
    6. ' )' → logprob: -6.2714457511901855
    7. '   ' → logprob: -6.2714457511901855
    8. ' ,' → logprob: -7.0214457511901855
    9. ' (-' → logprob: -7.1464457511901855
    10. 'set' → logprob: -7.3964457511901855

Token 691: ' des' (ID: 731)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.43623653054237366
    2. 'de' → logprob: -1.6862365007400513
    3. 'board' → logprob: -3.686236619949341
    4. 'score' → logprob: -3.811236619949341
    5. 'plate' → logprob: -3.936236619949341
    6. 'panel' → logprob: -4.061236381530762
    7. 'sc' → logprob: -4.061236381530762
    8. 'p' → logprob: -4.311236381530762
    9. 'scene' → logprob: -4.811236381530762
    10. 'des' → logprob: -5.061236381530762

Token 692: ' panels' (ID: 30863)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9454656839370728
    2. '0' → logprob: -1.6954656839370728
    3. 'pan' → logprob: -2.070465564727783
    4. 'panel' → logprob: -2.695465564727783
    5. 'plate' → logprob: -2.945465564727783
    6. 'set' → logprob: -3.195465564727783
    7. '4' → logprob: -3.320465564727783
    8. '-' → logprob: -3.695465564727783
    9. 'board' → logprob: -4.195465564727783
    10. '[' → logprob: -5.195465564727783

Token 693: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07078620046377182
    2. ',' → logprob: -2.820786237716675
    3. '),' → logprob: -6.070785999298096
    4. '   ' → logprob: -6.445785999298096
    5. '(-' → logprob: -7.070785999298096
    6. ' )' → logprob: -7.070785999298096
    7. ').' → logprob: -7.820785999298096
    8. ',-' → logprob: -7.945785999298096
    9. '-' → logprob: -8.195786476135254
    10. '')' → logprob: -8.320786476135254

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12012520432472229
    2. 'states' → logprob: -2.4951252937316895
    3. 'possible' → logprob: -3.6201252937316895
    4. 'current' → logprob: -6.8701252937316895
    5. ' states' → logprob: -6.9951252937316895
    6. 'et' → logprob: -7.8701252937316895
    7. 'poss' → logprob: -8.120124816894531
    8. ' possible' → logprob: -8.245124816894531
    9. 'state' → logprob: -8.495124816894531
    10. '```' → logprob: -9.120124816894531

Token 695: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5356439352035522
    2. '   ' → logprob: -1.0356439352035522
    3. 'possible' → logprob: -3.285644054412842
    4. 'et' → logprob: -5.160644054412842
    5. ' states' → logprob: -5.160644054412842
    6. 'current' → logprob: -5.660644054412842
    7. 'poss' → logprob: -5.910644054412842
    8. 'ét' → logprob: -6.785644054412842
    9. ' possible' → logprob: -7.785644054412842
    10. 'etat' → logprob: -7.785644054412842

Token 696: ' Pour' (ID: 13931)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.06858484447002411
    2. 'possible' → logprob: -3.06858491897583
    3. 'current' → logprob: -4.94358491897583
    4. 'et' → logprob: -5.44358491897583
    5. '   ' → logprob: -5.56858491897583
    6. ' states' → logprob: -6.81858491897583
    7. 'poss' → logprob: -7.19358491897583
    8. 'ét' → logprob: -7.44358491897583
    9. 'etat' → logprob: -7.44358491897583
    10. 'dp' → logprob: -8.068584442138672

Token 697: ' dém' (ID: 34947)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741579592227936
    2. ' i' → logprob: -1.7241579294204712
    3. 'pos' → logprob: -2.0991580486297607
    4. 'initial' → logprob: -4.599157810211182
    5. '0' → logprob: -4.849157810211182
    6. '#' → logprob: -4.849157810211182
    7. 'state' → logprob: -5.099157810211182
    8. 'l' → logprob: -5.099157810211182
    9. ' pos' → logprob: -5.724157810211182
    10. ' l' → logprob: -5.974157810211182

Token 698: 'arrage' (ID: 128545)
  Prédit: 'arrer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrer' → logprob: -0.03412831574678421
    2. 'arr' → logprob: -4.409128189086914
    3. 'arer' → logprob: -5.409128189086914
    4. 'arrage' → logprob: -5.784128189086914
    5. '   ' → logprob: -6.784128189086914
    6. '_' → logprob: -7.034128189086914
    7. 'é' → logprob: -7.034128189086914
    8. ']' → logprob: -7.034128189086914
    9. '"' → logprob: -7.284128189086914
    10. '#' → logprob: -7.284128189086914

Token 699: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6315010190010071
    2. 'states' → logprob: -1.2565009593963623
    3. 'possible' → logprob: -2.0065009593963623
    4. ' states' → logprob: -3.6315009593963623
    5. ' possible' → logprob: -4.881501197814941
    6. 'current' → logprob: -5.381501197814941
    7. 'dp' → logprob: -5.756501197814941
    8. ' possibles' → logprob: -6.006501197814941
    9. 'positions' → logprob: -7.256501197814941
    10. 'poss' → logprob: -7.256501197814941

Token 700: ' on' (ID: 402)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.4219513535499573
    2. 'states' → logprob: -1.1719512939453125
    3. ' current' → logprob: -4.4219512939453125
    4. 'current' → logprob: -4.9219512939453125
    5. 'et' → logprob: -5.5469512939453125
    6. ' états' → logprob: -5.9219512939453125
    7. 'possible' → logprob: -6.6719512939453125
    8. ' et' → logprob: -6.6719512939453125
    9. ' possibles' → logprob: -6.6719512939453125
    10. ' possible' → logprob: -6.7969512939453125

Token 701: ' peut' (ID: 9216)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3242710828781128
    2. 'initialize' → logprob: -1.6992710828781128
    3. ' initialise' → logprob: -1.9492710828781128
    4. 'initial' → logprob: -2.1992712020874023
    5. 'cons' → logprob: -3.1992712020874023
    6. 'aj' → logprob: -3.1992712020874023
    7. 'comm' → logprob: -3.4492712020874023
    8. 'part' → logprob: -3.5742712020874023
    9. 'consider' → logprob: -3.6992712020874023
    10. 'start' → logprob: -3.6992712020874023

Token 702: ' considérer' (ID: 172894)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9691516160964966
    2. 'mettre' → logprob: -1.7191516160964966
    3. 'init' → logprob: -1.9691516160964966
    4. 'part' → logprob: -2.094151496887207
    5. 'cons' → logprob: -2.469151496887207
    6. 'contin' → logprob: -4.469151496887207
    7. 'consider' → logprob: -4.594151496887207
    8. 'comm' → logprob: -4.594151496887207
    9. 'le' → logprob: -4.844151496887207
    10. 'util' → logprob: -4.969151496887207

Token 703: ' que' (ID: 661)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10096137970685959
    2. 'set' → logprob: -3.100961446762085
    3. 'states' → logprob: -3.475961446762085
    4. ' {(' → logprob: -5.225961208343506
    5. ' {' → logprob: -5.850961208343506
    6. '{-' → logprob: -5.975961208343506
    7. '   ' → logprob: -5.975961208343506
    8. 'initial' → logprob: -6.225961208343506
    9. ' states' → logprob: -6.475961208343506
    10. ' set' → logprob: -6.725961208343506

Token 704: ' les' (ID: 1341)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4776245355606079
    2. ' states' → logprob: -1.227624535560608
    3. '{' → logprob: -3.9776244163513184
    4. 'initial' → logprob: -4.227624416351318
    5. 'current' → logprob: -4.352624416351318
    6. ' initial' → logprob: -4.977624416351318
    7. 'possible' → logprob: -5.227624416351318
    8. ' current' → logprob: -5.227624416351318
    9. '{-' → logprob: -5.352624416351318
    10. '-' → logprob: -5.602624416351318

Token 705: ' pieds' (ID: 72670)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.26057976484298706
    2. 'positions' → logprob: -2.510579824447632
    3. 'current' → logprob: -3.385579824447632
    4. ' states' → logprob: -3.760579824447632
    5. 'left' → logprob: -4.010579586029053
    6. 'possible' → logprob: -4.010579586029053
    7. ' états' → logprob: -4.760579586029053
    8. 'et' → logprob: -5.010579586029053
    9. 'pos' → logprob: -5.260579586029053
    10. 'ét' → logprob: -5.260579586029053

Token 706: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4049558639526367
    2. 's' → logprob: -1.9049558639526367
    3. ' =' → logprob: -2.9049558639526367
    4. ' restent' → logprob: -3.5299558639526367
    5. ' rest' → logprob: -3.7799558639526367
    6. ' n' → logprob: -4.404955863952637
    7. 'n' → logprob: -4.779955863952637
    8. '#' → logprob: -4.904955863952637
    9. ' peuvent' → logprob: -4.904955863952637
    10. ' ne' → logprob: -5.029955863952637

Token 707: ' '' (ID: 461)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5539819002151489
    2. '-' → logprob: -1.678981900215149
    3. ' (-' → logprob: -2.0539817810058594
    4. 'pos' → logprob: -3.3039817810058594
    5. ' pos' → logprob: -3.9289817810058594
    6. ' sur' → logprob: -4.678981781005859
    7. 'sur' → logprob: -4.803981781005859
    8. '{-' → logprob: -4.803981781005859
    9. '(' → logprob: -5.053981781005859
    10. ' libres' → logprob: -5.678981781005859

Token 708: 'hors' (ID: 70144)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7008883953094482
    2. '(-' → logprob: -0.7008883953094482
    3. ' -' → logprob: -6.075888633728027
    4. '{-' → logprob: -6.075888633728027
    5. '{' → logprob: -6.575888633728027
    6. ' (-' → logprob: -7.325888633728027
    7. 'set' → logprob: -8.200888633728027
    8. '(' → logprob: -8.450888633728027
    9. 'None' → logprob: -8.825888633728027
    10. '('' → logprob: -9.075888633728027

Token 709: ' de' (ID: 334)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.8711099028587341
    2. 'p' → logprob: -0.9961099028587341
    3. 'pan' → logprob: -2.246109962463379
    4. 'des' → logprob: -3.121109962463379
    5. ' panels' → logprob: -4.121109962463379
    6. '-p' → logprob: -4.746109962463379
    7. '-pan' → logprob: -4.996109962463379
    8. 'de' → logprob: -5.371109962463379
    9. 'du' → logprob: -5.371109962463379
    10. 'jeu' → logprob: -5.871109962463379

Token 710: ' l' (ID: 305)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.2977444529533386
    2. 'p' → logprob: -2.2977445125579834
    3. 'pan' → logprob: -2.6727445125579834
    4. 'jeu' → logprob: -3.5477445125579834
    5. 'plate' → logprob: -4.297744274139404
    6. 'board' → logprob: -4.422744274139404
    7. 'la' → logprob: -4.547744274139404
    8. 'l' → logprob: -5.422744274139404
    9. 'range' → logprob: -6.047744274139404
    10. 'sc' → logprob: -6.172744274139404

Token 711: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0653469562530518
    2. ''ensemble' → logprob: -1.8153469562530518
    3. ''état' → logprob: -2.0653469562530518
    4. ''ordre' → logprob: -2.1903469562530518
    5. ''' → logprob: -2.9403469562530518
    6. 'es' → logprob: -3.1903469562530518
    7. 'é' → logprob: -3.1903469562530518
    8. 'e' → logprob: -3.1903469562530518
    9. 'ensemble' → logprob: -4.065346717834473
    10. ''é' → logprob: -4.440346717834473

Token 712: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.6464486122131348
    2. 'r' → logprob: -1.2714486122131348
    3. 'e' → logprob: -3.2714486122131348
    4. 'ea' → logprob: -3.3964486122131348
    5. 'é' → logprob: -4.146448612213135
    6. 'ènes' → logprob: -4.146448612213135
    7. 'ene' → logprob: -4.646448612213135
    8. 'rows' → logprob: -4.771448612213135
    9. 'row' → logprob: -4.896448612213135
    10. 'ray' → logprob: -4.896448612213135

Token 713: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22533173859119415
    2. '',' → logprob: -2.3503317832946777
    3. '')' → logprob: -2.7253317832946777
    4. ')'' → logprob: -3.9753317832946777
    5. ')' → logprob: -4.100331783294678
    6. ')',' → logprob: -6.975331783294678
    7. '}'' → logprob: -7.600331783294678
    8. '}' → logprob: -8.10033130645752
    9. 's' → logprob: -8.10033130645752
    10. ''
' → logprob: -8.22533130645752

Token 714: ' par' (ID: 686)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8815827369689941
    2. ' c' → logprob: -1.8815827369689941
    3. ' donc' → logprob: -2.006582736968994
    4. ' states' → logprob: -2.256582736968994
    5. '   ' → logprob: -3.006582736968994
    6. ' i' → logprob: -3.256582736968994
    7. ' et' → logprob: -3.381582736968994
    8. 'pos' → logprob: -3.381582736968994
    9. ' soit' → logprob: -3.381582736968994
    10. ' #' → logprob: -3.506582736968994

Token 715: ' exemple' (ID: 26320)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3711523711681366
    2. '-' → logprob: -1.371152400970459
    3. '=-' → logprob: -5.246152400970459
    4. 'ex' → logprob: -5.371152400970459
    5. 'def' → logprob: -5.371152400970459
    6. ' ' → logprob: -5.621152400970459
    7. ' (-' → logprob: -5.746152400970459
    8. '   ' → logprob: -5.746152400970459
    9. 'fois' → logprob: -5.996152400970459
    10. ' =' → logprob: -6.121152400970459

Token 716: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.25302761793136597
    2. '-' → logprob: -2.3780276775360107
    3. ' (-' → logprob: -2.7530276775360107
    4. '   ' → logprob: -3.6280276775360107
    5. 'set' → logprob: -4.253027439117432
    6. '{-' → logprob: -4.503027439117432
    7. '{' → logprob: -5.003027439117432
    8. ' -' → logprob: -5.003027439117432
    9. ' set' → logprob: -7.128027439117432
    10. ' ' → logprob: -8.75302791595459

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.845798710244708e-05
    2. '2' → logprob: -10.375038146972656
    3. ' ' → logprob: -12.000038146972656
    4. '   ' → logprob: -14.375038146972656
    5. 'import' → logprob: -16.250038146972656
    6. '
' → logprob: -16.875038146972656
    7. '  ' → logprob: -17.437538146972656
    8. '```' → logprob: -17.750038146972656
    9. '۱' → logprob: -18.250038146972656
    10. '100' → logprob: -18.687538146972656

Token 718: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3133557438850403
    2. 'states' → logprob: -1.9383556842803955
    3. '
' → logprob: -3.0633556842803955
    4. ',' → logprob: -3.1883556842803955
    5. ')' → logprob: -4.063355922698975
    6. ' states' → logprob: -5.563355922698975
    7. 'possible' → logprob: -6.313355922698975
    8. 'state' → logprob: -6.438355922698975
    9. 'positions' → logprob: -6.563355922698975
    10. '_states' → logprob: -6.688355922698975

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02396758273243904
    2. 'states' → logprob: -4.023967742919922
    3. 'possible' → logprob: -5.523967742919922
    4. ' states' → logprob: -7.273967742919922
    5. 'current' → logprob: -8.148967742919922
    6. 'dp' → logprob: -9.148967742919922
    7. 'poss' → logprob: -9.398967742919922
    8. 'state' → logprob: -9.398967742919922
    9. ' possible' → logprob: -9.523967742919922
    10. 'et' → logprob: -9.773967742919922

Token 720: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.06591600924730301
    2. 'possible' → logprob: -3.565916061401367
    3. ' states' → logprob: -3.940916061401367
    4. 'current' → logprob: -5.190916061401367
    5. '   ' → logprob: -5.315916061401367
    6. 'et' → logprob: -6.440916061401367
    7. 'dp' → logprob: -7.065916061401367
    8. '#' (adapté à ' #') → logprob: -7.565916061401367
    9. ' possible' → logprob: -7.565916061401367
    10. 'poss' → logprob: -7.815916061401367

Token 721: ' Mais' (ID: 13880)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.04645857214927673
    2. 'possible' → logprob: -3.6714584827423096
    3. 'current' → logprob: -5.296458721160889
    4. '   ' → logprob: -5.296458721160889
    5. ' states' → logprob: -5.546458721160889
    6. 'et' → logprob: -5.796458721160889
    7. 'dp' → logprob: -7.421458721160889
    8. 'ét' → logprob: -7.671458721160889
    9. 'poss' → logprob: -7.921458721160889
    10. 'prev' → logprob: -8.29645824432373

Token 722: ' il' (ID: 1793)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.314314603805542
    2. ' on' → logprob: -1.814314603805542
    3. 'le' → logprob: -2.064314603805542
    4. '#' → logprob: -2.314314603805542
    5. 'for' → logprob: -2.689314603805542
    6. 'ici' → logprob: -2.814314603805542
    7. ' ici' → logprob: -3.939314603805542
    8. 'dans' → logprob: -4.189314842224121
    9. 'comme' → logprob: -4.439314842224121
    10. 'pour' → logprob: -4.564314842224121

Token 723: ' est' (ID: 893)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7460878491401672
    2. ' n' → logprob: -1.3710877895355225
    3. ' faut' → logprob: -2.8710877895355225
    4. '#' → logprob: -3.2460877895355225
    5. ''' → logprob: -3.2460877895355225
    6. 'est' → logprob: -3.7460877895355225
    7. 'f' → logprob: -3.9960877895355225
    8. ' semble' → logprob: -4.246088027954102
    9. ' faudra' → logprob: -4.371088027954102
    10. 's' → logprob: -4.496088027954102

Token 724: ' plus' (ID: 2932)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4560529589653015
    2. 'inter' → logprob: -2.9560530185699463
    3. 'égal' → logprob: -2.9560530185699463
    4. 'important' → logprob: -3.3310530185699463
    5. ' interdit' → logprob: -3.3310530185699463
    6. ' préférable' → logprob: -3.8310530185699463
    7. ' possible' → logprob: -3.9560530185699463
    8. 'strict' → logprob: -4.206052780151367
    9. 'plus' → logprob: -4.206052780151367
    10. 'inut' → logprob: -4.206052780151367

Token 725: ' simple' (ID: 4705)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.40040284395217896
    2. 'pr' → logprob: -1.2754027843475342
    3. 'comm' → logprob: -3.900402784347534
    4. 'com' → logprob: -4.025403022766113
    5. ' simple' → logprob: -5.775403022766113
    6. 'clair' → logprob: -6.150403022766113
    7. 'correct' → logprob: -6.650403022766113
    8. '```' → logprob: -6.900403022766113
    9. 'pro' → logprob: -7.150403022766113
    10. 'prec' → logprob: -7.275403022766113

Token 726: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.068603515625
    2. 'd' → logprob: -1.193603515625
    3. ' d' → logprob: -1.443603515625
    4. 'de' → logprob: -2.193603515625
    5. '   ' → logprob: -5.693603515625
    6. '    ' → logprob: -7.193603515625
    7. ' to' → logprob: -7.943603515625
    8. '#' → logprob: -8.443603515625
    9. 'def' → logprob: -8.943603515625
    10. 'à' → logprob: -9.193603515625

Token 727: ''' (ID: 6)
  Prédit: ''utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''utiliser' → logprob: -1.3606898784637451
    2. 'consider' → logprob: -1.7356898784637451
    3. ' considérer' → logprob: -1.9856898784637451
    4. 'init' → logprob: -2.610689878463745
    5. ' continuer' → logprob: -2.985689878463745
    6. 'initial' → logprob: -2.985689878463745
    7. 'cons' → logprob: -3.610689878463745
    8. 'em' → logprob: -3.610689878463745
    9. ' commencer' → logprob: -3.860689878463745
    10. ' prendre' → logprob: -4.235690116882324

Token 728: 'initial' (ID: 17493)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.7012273669242859
    2. 'cons' → logprob: -2.0762274265289307
    3. '#' → logprob: -2.2012274265289307
    4. 'continue' → logprob: -2.9512274265289307
    5. 'initial' → logprob: -3.0762274265289307
    6. 'init' → logprob: -3.0762274265289307
    7. 'consider' → logprob: -3.3262274265289307
    8. 'con' → logprob: -4.326227188110352
    9. 'def' → logprob: -4.701227188110352
    10. 'penser' → logprob: -4.701227188110352

Token 729: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00036418659146875143
    2. 'isé' → logprob: -8.250364303588867
    3. 'izer' → logprob: -9.500364303588867
    4. 'er' → logprob: -11.750364303588867
    5. 'ier' → logprob: -12.375364303588867
    6. 'is' → logprob: -12.625364303588867
    7. 'isés' → logprob: -12.875364303588867
    8. 'ial' → logprob: -13.125364303588867
    9. 'ized' → logprob: -13.125364303588867
    10. 'isert' → logprob: -13.500364303588867

Token 730: ' avec' (ID: 3937)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.7063003778457642
    2. 'possible' → logprob: -1.2063003778457642
    3. 'current' → logprob: -2.3313002586364746
    4. ' states' → logprob: -2.8313002586364746
    5. ' current' → logprob: -4.081300258636475
    6. ' possible' → logprob: -4.331300258636475
    7. ' possibles' → logprob: -4.706300258636475
    8. 'poss' → logprob: -5.831300258636475
    9. 'pos' → logprob: -6.581300258636475
    10. 'positions' → logprob: -6.706300258636475

Token 731: ' le' (ID: 505)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.07901669293642044
    2. 'set' → logprob: -2.57901668548584
    3. '{-' → logprob: -9.45401668548584
    4. ' set' → logprob: -11.57901668548584
    5. ' {(' → logprob: -11.57901668548584
    6. ' {' → logprob: -11.95401668548584
    7. 'fro' → logprob: -12.32901668548584
    8. 'states' → logprob: -12.45401668548584
    9. '[' → logprob: -12.57901668548584
    10. '[(' → logprob: -12.57901668548584

Token 732: ' pied' (ID: 20242)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11895384639501572
    2. 'set' → logprob: -2.2439539432525635
    3. '{-' → logprob: -5.493953704833984
    4. ' {' → logprob: -7.118953704833984
    5. ' set' → logprob: -7.618953704833984
    6. '(-' → logprob: -8.493953704833984
    7. 'fro' → logprob: -8.618953704833984
    8. ' {(' → logprob: -8.993953704833984
    9. '{
' → logprob: -9.868953704833984
    10. '[' → logprob: -10.118953704833984

Token 733: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.40340563654899597
    2. ' gauche' → logprob: -1.9034056663513184
    3. '_g' → logprob: -2.5284056663513184
    4. 's' → logprob: -2.5284056663513184
    5. '(-' → logprob: -4.903405666351318
    6. '-' → logprob: -5.528405666351318
    7. '_left' → logprob: -5.903405666351318
    8. 'left' → logprob: -6.028405666351318
    9. '(' → logprob: -6.903405666351318
    10. '   ' → logprob: -7.153405666351318

Token 734: ' app' (ID: 1053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19831912219524384
    2. '=' → logprob: -2.57331919670105
    3. ',' → logprob: -3.69831919670105
    4. '_pos' → logprob: -4.573318958282471
    5. '_positions' → logprob: -4.698318958282471
    6. 'pos' → logprob: -4.823318958282471
    7. 'sur' → logprob: -5.198318958282471
    8. '   ' → logprob: -5.323318958282471
    9. 's' → logprob: -5.448318958282471
    10. 'positions' → logprob: -5.948318958282471

Token 735: 'uyant' (ID: 187101)
  Prédit: 'uyant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyant' → logprob: -0.727371096611023
    2. 'uy' → logprob: -0.852371096611023
    3. 'ui' → logprob: -2.8523712158203125
    4. 'u' → logprob: -3.6023712158203125
    5. 'uye' → logprob: -6.2273712158203125
    6. 'uie' → logprob: -6.6023712158203125
    7. 'uya' → logprob: -7.2273712158203125
    8. 'os' → logprob: -7.3523712158203125
    9. 'uyer' → logprob: -7.8523712158203125
    10. 'uyi' → logprob: -9.477371215820312

Token 736: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8985049724578857
    2. ' sur' → logprob: -1.2735049724578857
    3. ' =' → logprob: -2.8985049724578857
    4. 'sur' → logprob: -3.0235049724578857
    5. '('' → logprob: -3.1485049724578857
    6. ' (' → logprob: -3.1485049724578857
    7. '{' → logprob: -3.7735049724578857
    8. ',' → logprob: -3.8985049724578857
    9. '(score' → logprob: -3.8985049724578857
    10. '=' → logprob: -4.148505210876465

Token 737: ' la' (ID: 557)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.5447249412536621
    2. 'score' → logprob: -0.9197249412536621
    3. ' panel' → logprob: -4.044724941253662
    4. ' score' → logprob: -5.669724941253662
    5. 'order' → logprob: -8.29472541809082
    6. '0' → logprob: -10.04472541809082
    7. ' ' → logprob: -10.54472541809082
    8. 'pan' → logprob: -10.79472541809082
    9. 'code' → logprob: -11.66972541809082
    10. ' order' → logprob: -11.91972541809082

Token 738: ' première' (ID: 23423)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.19630856812000275
    2. 'panel' → logprob: -1.8213086128234863
    3. ' score' → logprob: -5.196308612823486
    4. ' panel' → logprob: -5.196308612823486
    5. 'p' → logprob: -6.196308612823486
    6. 'prem' → logprob: -6.696308612823486
    7. 'pan' → logprob: -7.571308612823486
    8. '0' → logprob: -7.696308612823486
    9. 'code' → logprob: -8.446308135986328
    10. 'L' → logprob: -8.821308135986328

Token 739: ' fl' (ID: 1548)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5941028594970703
    2. ',' → logprob: -2.2191028594970703
    3. ' panel' → logprob: -2.2191028594970703
    4. 'score' → logprob: -2.5941028594970703
    5. ' (' → logprob: -2.8441028594970703
    6. 'panel' → logprob: -3.0941028594970703
    7. '(' → logprob: -3.2191028594970703
    8. ')' → logprob: -3.3441028594970703
    9. ' score' → logprob: -3.4691028594970703
    10. '_' → logprob: -3.8441028594970703

Token 740: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.005039844661951065
    2. 'êche' → logprob: -6.005039691925049
    3. 'è' → logprob: -6.130039691925049
    4. 'é' → logprob: -9.255040168762207
    5. 'éch' → logprob: -9.255040168762207
    6. 'ech' → logprob: -10.130040168762207
    7. 'e' → logprob: -10.380040168762207
    8. 'ex' → logprob: -10.880040168762207
    9. '#' → logprob: -11.005040168762207
    10. 'eur' → logprob: -11.505040168762207

Token 741: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01721510849893093
    2. 'states' → logprob: -5.017215251922607
    3. ' states' → logprob: -5.767215251922607
    4. ',' → logprob: -6.142215251922607
    5. 'possible' → logprob: -6.892215251922607
    6. '    
' → logprob: -7.517215251922607
    7. '
' → logprob: -7.517215251922607
    8. ' possible' → logprob: -7.642215251922607
    9. ' =' → logprob: -7.767215251922607
    10. 'current' → logprob: -7.767215251922607

Token 742: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03742583468556404
    2. 'states' → logprob: -4.162425994873047
    3. 'state' → logprob: -5.037425994873047
    4. ' states' → logprob: -5.162425994873047
    5. 'current' → logprob: -6.162425994873047
    6. 'possible' → logprob: -6.537425994873047
    7. ' possible' → logprob: -6.787425994873047
    8. ' current' → logprob: -7.662425994873047
    9. 'pos' → logprob: -7.662425994873047
    10. ',' → logprob: -7.787425994873047

Token 743: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2834896147251129
    2. '   ' → logprob: -2.28348970413208
    3. 'possible' → logprob: -3.28348970413208
    4. ' states' → logprob: -3.53348970413208
    5. 'current' → logprob: -3.65848970413208
    6. 'left' → logprob: -4.03348970413208
    7. 'dp' → logprob: -4.40848970413208
    8. 'pos' → logprob: -5.03348970413208
    9. 'state' → logprob: -6.03348970413208
    10. 'positions' → logprob: -6.28348970413208

Token 744: ' En' (ID: 2130)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.21387894451618195
    2. 'current' → logprob: -2.713878870010376
    3. 'possible' → logprob: -3.463878870010376
    4. 'dp' → logprob: -4.213879108428955
    5. 'left' → logprob: -4.338879108428955
    6. 'pos' → logprob: -4.463879108428955
    7. ' states' → logprob: -4.588879108428955
    8. '   ' → logprob: -4.838879108428955
    9. 'state' → logprob: -5.338879108428955
    10. '#' → logprob: -5.463879108428955

Token 745: ' fait' (ID: 7473)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8236888647079468
    2. 'ét' → logprob: -2.1986889839172363
    3. 'fait' → logprob: -2.1986889839172363
    4. 'pos' → logprob: -2.4486889839172363
    5. 'init' → logprob: -2.8236889839172363
    6. 'states' → logprob: -3.3236889839172363
    7. 'et' → logprob: -3.5736889839172363
    8. 'state' → logprob: -3.9486889839172363
    9. 'etat' → logprob: -4.198688983917236
    10. 'faits' → logprob: -4.573688983917236

Token 746: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08387287706136703
    2. ',' → logprob: -3.7088727951049805
    3. ' initial' → logprob: -4.3338727951049805
    4. 'initial' → logprob: -4.4588727951049805
    5. 'states' → logprob: -4.8338727951049805
    6. 'positions' → logprob: -4.9588727951049805
    7. ' states' → logprob: -5.3338727951049805
    8. 'pos' → logprob: -6.2088727951049805
    9. '#' → logprob: -6.8338727951049805
    10. 'possible' → logprob: -6.9588727951049805

Token 747: ' premier' (ID: 15506)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8954010009765625
    2. 'states' → logprob: -0.8954010009765625
    3. 'current' → logprob: -2.5204010009765625
    4. 'state' → logprob: -3.5204010009765625
    5. 'initial' → logprob: -3.8954010009765625
    6. 'possible' → logprob: -4.2704010009765625
    7. 'first' → logprob: -5.5204010009765625
    8. 'positions' → logprob: -5.5204010009765625
    9. 'next' → logprob: -5.6454010009765625
    10. ' states' → logprob: -5.8954010009765625

Token 748: ' pas' (ID: 2173)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8924830555915833
    2. '_' → logprob: -2.1424829959869385
    3. '_state' → logprob: -2.1424829959869385
    4. '_token' → logprob: -2.6424829959869385
    5. ' _' → logprob: -3.2674829959869385
    6. ' état' → logprob: -3.5174829959869385
    7. 'state' → logprob: -3.7674829959869385
    8. 'pos' → logprob: -4.017483234405518
    9. '_p' → logprob: -4.017483234405518
    10. '_pos' → logprob: -4.142483234405518

Token 749: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039942413568496704
    2. '=' → logprob: -3.664942502975464
    3. 'est' → logprob: -6.539942264556885
    4. ' est' → logprob: -6.539942264556885
    5. '_state' → logprob: -6.664942264556885
    6. '_pos' → logprob: -6.664942264556885
    7. ',' → logprob: -6.789942264556885
    8. 'pos' → logprob: -7.039942264556885
    9. '   ' → logprob: -7.289942264556885
    10. '_panel' → logprob: -7.414942264556885

Token 750: ' sur' (ID: 1512)
  Prédit: '(panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(panel' → logprob: -0.7787343859672546
    2. '(' → logprob: -1.2787344455718994
    3. '(score' → logprob: -1.6537344455718994
    4. ' (' → logprob: -2.9037344455718994
    5. '{' → logprob: -4.77873420715332
    6. 'score' → logprob: -6.77873420715332
    7. '(p' → logprob: -6.90373420715332
    8. ' ' → logprob: -7.02873420715332
    9. '(player' → logprob: -7.15373420715332
    10. '(pos' → logprob: -7.27873420715332

Token 751: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.3517773449420929
    2. '(score' → logprob: -1.4767773151397705
    3. ' score' → logprob: -3.1017773151397705
    4. ' (' → logprob: -4.47677755355835
    5. 'panel' → logprob: -5.10177755355835
    6. ' panel' → logprob: -6.47677755355835
    7. ' ' → logprob: -6.47677755355835
    8. '(' → logprob: -6.97677755355835
    9. '(panel' → logprob: -6.97677755355835
    10. '(s' → logprob: -8.851777076721191

Token 752: ' première' (ID: 23423)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.021768683567643166
    2. ' score' → logprob: -3.896768569946289
    3. 'panel' → logprob: -7.521768569946289
    4. 'L' → logprob: -8.771768569946289
    5. 'code' → logprob: -9.396768569946289
    6. 'p' → logprob: -9.396768569946289
    7. 's' → logprob: -9.646768569946289
    8. ' panel' → logprob: -9.646768569946289
    9. ' ' → logprob: -10.271768569946289
    10. ' L' → logprob: -10.396768569946289

Token 753: ' fl' (ID: 1548)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.6060088276863098
    2. ' score' → logprob: -1.856008768081665
    3. ' panel' → logprob: -3.231008768081665
    4. 'arrow' → logprob: -3.356008768081665
    5. ' arrow' → logprob: -3.356008768081665
    6. ' ' → logprob: -3.481008768081665
    7. 'panel' → logprob: -3.856008768081665
    8. ')' → logprob: -3.856008768081665
    9. '(score' → logprob: -3.856008768081665
    10. 'character' → logprob: -4.481009006500244

Token 754: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.00044651966891251504
    2. 'è' → logprob: -8.500446319580078
    3. 'êche' → logprob: -9.000446319580078
    4. 'e' → logprob: -9.250446319580078
    5. 'é' → logprob: -11.125446319580078
    6. 'èque' → logprob: -13.000446319580078
    7. '#' → logprob: -13.625446319580078
    8. 'ève' → logprob: -13.875446319580078
    9. 'èvre' → logprob: -14.375446319580078
    10. 'ère' → logprob: -14.500446319580078

Token 755: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5179905891418457
    2. ' =' → logprob: -1.1429905891418457
    3. ',' → logprob: -2.7679905891418457
    4. 'state' → logprob: -5.392990589141846
    5. 'states' → logprob: -5.767990589141846
    6. 'pos' → logprob: -5.892990589141846
    7. ':' → logprob: -6.017990589141846
    8. '_states' → logprob: -6.892990589141846
    9. ' states' → logprob: -7.017990589141846
    10. 'positions' → logprob: -7.017990589141846

Token 756: ' forcément' (ID: 96692)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.19289642572402954
    2. '{' → logprob: -2.8178963661193848
    3. ' states' → logprob: -3.5678963661193848
    4. 'initial' → logprob: -3.6928963661193848
    5. 'current' → logprob: -4.317896366119385
    6. '   ' → logprob: -4.442896366119385
    7. 'positions' → logprob: -4.442896366119385
    8. ' {(' → logprob: -5.192896366119385
    9. 'init' → logprob: -5.567896366119385
    10. 'state' → logprob: -5.817896366119385

Token 757: ' pied' (ID: 20242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7078143358230591
    2. ',' → logprob: -1.207814335823059
    3. 'states' → logprob: -2.5828142166137695
    4. 'state' → logprob: -2.8328142166137695
    5. ' =' → logprob: -3.3328142166137695
    6. ' states' → logprob: -4.9578142166137695
    7. 'pos' → logprob: -4.9578142166137695
    8. 'positions' → logprob: -5.8328142166137695
    9. 'current' → logprob: -5.8328142166137695
    10. ' ' → logprob: -6.2078142166137695

Token 758: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.3464086055755615
    2. 'g' → logprob: -1.8464086055755615
    3. '_g' → logprob: -2.0964086055755615
    4. '_' → logprob: -5.346408843994141
    5. ' gau' → logprob: -5.721408843994141
    6. 'gau' → logprob: -6.971408843994141
    7. ' _' → logprob: -7.471408843994141
    8. 'left' → logprob: -7.471408843994141
    9. ' left' → logprob: -7.596408843994141
    10. '_left' → logprob: -7.721408843994141

Token 759: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008924415335059166
    2. 'states' → logprob: -6.00892448425293
    3. '
' → logprob: -6.25892448425293
    4. '    
' → logprob: -6.50892448425293
    5. 'current' → logprob: -7.50892448425293
    6. 'possible' → logprob: -7.63392448425293
    7. 'positions' → logprob: -7.75892448425293
    8. 'left' → logprob: -7.88392448425293
    9. 'state' → logprob: -7.88392448425293
    10. 'pos' → logprob: -8.50892448425293

Token 760: ' donc' (ID: 14206)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4696912467479706
    2. ' states' → logprob: -1.094691276550293
    3. 'current' → logprob: -4.469691276550293
    4. 'positions' → logprob: -5.219691276550293
    5. ' current' → logprob: -5.469691276550293
    6. 'initial' → logprob: -5.844691276550293
    7. 'state' → logprob: -5.969691276550293
    8. 'et' → logprob: -6.094691276550293
    9. ' initial' → logprob: -6.344691276550293
    10. ' états' → logprob: -6.469691276550293

Token 761: '
' (ID: 198)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2518438398838043
    2. 'initial' → logprob: -1.876843810081482
    3. 'current' → logprob: -3.5018439292907715
    4. 'init' → logprob: -4.3768439292907715
    5. '{' → logprob: -5.2518439292907715
    6. ' states' → logprob: -5.3768439292907715
    7. 'start' → logprob: -5.6268439292907715
    8. '   ' → logprob: -5.8768439292907715
    9. ' initial' → logprob: -6.2518439292907715
    10. 'positions' → logprob: -6.3768439292907715

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058810267597436905
    2. 'states' → logprob: -3.058810234069824
    3. 'initial' → logprob: -5.558810234069824
    4. 'current' → logprob: -6.183810234069824
    5. ' states' → logprob: -6.683810234069824
    6. 'init' → logprob: -7.308810234069824
    7. 'state' → logprob: -7.808810234069824
    8. 'possible' → logprob: -7.933810234069824
    9. 'dp' → logprob: -8.183810234069824
    10. 'positions' → logprob: -8.808810234069824

Token 763: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.042444296181201935
    2. 'current' → logprob: -4.167444229125977
    3. 'initial' → logprob: -4.917444229125977
    4. 'dp' → logprob: -5.417444229125977
    5. 'et' → logprob: -5.667444229125977
    6. ' states' → logprob: -5.917444229125977
    7. 'etat' → logprob: -6.417444229125977
    8. 'possible' → logprob: -6.542444229125977
    9. 'positions' → logprob: -6.792444229125977
    10. 'pos' → logprob: -7.292444229125977

Token 764: ' Les' (ID: 7029)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.06593062728643417
    2. 'current' → logprob: -3.8159306049346924
    3. 'initial' → logprob: -4.0659308433532715
    4. 'et' → logprob: -5.0659308433532715
    5. 'etat' → logprob: -5.5659308433532715
    6. 'positions' → logprob: -5.6909308433532715
    7. 'init' → logprob: -5.9409308433532715
    8. 'dp' → logprob: -6.0659308433532715
    9. ' states' → logprob: -6.9409308433532715
    10. 'state' → logprob: -7.0659308433532715

Token 765: ' pieds' (ID: 72670)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.3236565887928009
    2. ' states' → logprob: -2.4486565589904785
    3. 'current' → logprob: -3.4486565589904785
    4. 'pos' → logprob: -3.4486565589904785
    5. 'initial' → logprob: -3.6986565589904785
    6. 'state' → logprob: -3.8236565589904785
    7. ' états' → logprob: -3.9486565589904785
    8. '#' → logprob: -4.1986565589904785
    9. 'init' → logprob: -4.9486565589904785
    10. 'et' → logprob: -5.1986565589904785

Token 766: ' commencent' (ID: 184941)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18302105367183685
    2. '=' → logprob: -1.933021068572998
    3. 'pos' → logprob: -5.308021068572998
    4. '=('' → logprob: -5.683021068572998
    5. '=(' → logprob: -5.933021068572998
    6. 'positions' → logprob: -6.308021068572998
    7. '_positions' → logprob: -6.308021068572998
    8. 'app' → logprob: -6.558021068572998
    9. '#' → logprob: -7.308021068572998
    10. '_pos' → logprob: -7.308021068572998

Token 767: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49322184920310974
    2. '=' → logprob: -1.9932218790054321
    3. 'pos' → logprob: -1.9932218790054321
    4. 'sur' → logprob: -3.3682217597961426
    5. ' sur' → logprob: -3.6182217597961426
    6. '=(' → logprob: -3.7432217597961426
    7. '   ' → logprob: -4.743221759796143
    8. 'positions' → logprob: -5.243221759796143
    9. ' pos' → logprob: -5.368221759796143
    10. '=(-' → logprob: -6.493221759796143

Token 768: ' gauche' (ID: 58367)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.06678671389818192
    2. '(panel' → logprob: -3.191786766052246
    3. 'score' → logprob: -4.066786766052246
    4. 'panel' → logprob: -5.316786766052246
    5. ' (' → logprob: -7.691786766052246
    6. '(position' → logprob: -8.066786766052246
    7. 'pos' → logprob: -8.816786766052246
    8. '(pos' → logprob: -8.941786766052246
    9. 'position' → logprob: -9.316786766052246
    10. '(' → logprob: -9.316786766052246

Token 769: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6449462175369263
    2. ' =' → logprob: -0.8949462175369263
    3. 'pos' → logprob: -3.8949460983276367
    4. '=(' → logprob: -4.019946098327637
    5. '(score' → logprob: -5.144946098327637
    6. '_pos' → logprob: -5.519946098327637
    7. 'score' → logprob: -5.769946098327637
    8. 'app' → logprob: -6.019946098327637
    9. '_on' → logprob: -6.269946098327637
    10. 'sur' → logprob: -6.769946098327637

Token 770: ' score' (ID: 8429)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.2570522725582123
    2. 'score' → logprob: -1.6320523023605347
    3. ' panel' → logprob: -3.507052183151245
    4. ' score' → logprob: -6.882052421569824
    5. '   ' → logprob: -10.757052421569824
    6. ' ' → logprob: -11.194552421569824
    7. 'pan' → logprob: -11.319552421569824
    8. '(panel' → logprob: -11.569552421569824
    9. '	panel' → logprob: -11.819552421569824
    10. '(score' → logprob: -12.007052421569824

Token 771: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.813969957875088e-05
    2. '   ' → logprob: -10.750067710876465
    3. '[i' → logprob: -11.250067710876465
    4. ',' → logprob: -11.875067710876465
    5. 'def' → logprob: -12.625067710876465
    6. '0' → logprob: -12.750067710876465
    7. '[
' → logprob: -12.875067710876465
    8. '[pos' → logprob: -12.875067710876465
    9. '[n' → logprob: -13.250067710876465
    10. 'e' → logprob: -13.250067710876465

Token 772: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.32523515378125e-05
    2. '[' → logprob: -9.750062942504883
    3. ' ' → logprob: -12.250062942504883
    4. ']' → logprob: -15.875062942504883
    5. '   ' → logprob: -17.000062942504883
    6. '][' → logprob: -17.250062942504883
    7. '#' → logprob: -18.500062942504883
    8. '```' → logprob: -18.625062942504883
    9. ' [' → logprob: -18.750062942504883
    10. ')' → logprob: -19.375062942504883

Token 773: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.009081309661269188
    2. ']' → logprob: -5.0090813636779785
    3. ''],' → logprob: -6.1340813636779785
    4. '),' → logprob: -10.00908088684082
    5. '],'' → logprob: -10.00908088684082
    6. '']' → logprob: -10.38408088684082
    7. ']'' → logprob: -11.25908088684082
    8. ' ],' → logprob: -11.38408088684082
    9. ']',' → logprob: -11.50908088684082
    10. ',' → logprob: -11.75908088684082

Token 774: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.7735949158668518
    2. ' droite' → logprob: -0.8985949158668518
    3. 'right' → logprob: -3.273594856262207
    4. ' right' → logprob: -3.398594856262207
    5. ' droit' → logprob: -4.273594856262207
    6. '   ' → logprob: -4.273594856262207
    7. '-' → logprob: -4.273594856262207
    8. ' dro' → logprob: -5.523594856262207
    9. ' -' → logprob: -5.898594856262207
    10. ' ' → logprob: -6.148594856262207

Token 775: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14818358421325684
    2. '=' → logprob: -2.273183584213257
    3. '=-' → logprob: -4.398183822631836
    4. 'sur' → logprob: -5.023183822631836
    5. ' sur' → logprob: -5.273183822631836
    6. '=None' → logprob: -5.773183822631836
    7. 'on' → logprob: -6.398183822631836
    8. ':' → logprob: -6.898183822631836
    9. ' on' → logprob: -7.148183822631836
    10. ' ' → logprob: -7.648183822631836

Token 776: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016039233014453202
    2. ' -' → logprob: -8.750160217285156
    3. 'None' → logprob: -13.500160217285156
    4. ' ' → logprob: -15.125160217285156
    5. 'score' → logprob: -16.625160217285156
    6. ''-' → logprob: -16.625160217285156
    7. '(-' → logprob: -16.750160217285156
    8. '   ' → logprob: -17.250160217285156
    9. '-score' → logprob: -18.125160217285156
    10. '''' → logprob: -18.125160217285156

Token 777: 'r' (ID: 81)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001398929744027555
    2. 'None' → logprob: -9.625140190124512
    3. ' -' → logprob: -10.000140190124512
    4. ''' → logprob: -12.000140190124512
    5. '"' → logprob: -12.000140190124512
    6. ''-' → logprob: -12.000140190124512
    7. 'none' → logprob: -12.250140190124512
    8. '''' → logprob: -13.625140190124512
    9. '"-' → logprob: -14.125140190124512
    10. '-none' → logprob: -14.375140190124512

Token 778: 'ien' (ID: 847)
  Prédit: 'ien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.11512623727321625
    2. '-' → logprob: -2.240126132965088
    3. 'est' → logprob: -6.615126132965088
    4. '"' → logprob: -7.865126132965088
    5. ''' → logprob: -8.490126609802246
    6. 'e' → logprob: -9.115126609802246
    7. 'none' → logprob: -9.990126609802246
    8. 'ep' → logprob: -10.115126609802246
    9. 'None' → logprob: -10.240126609802246
    10. 'ight' → logprob: -10.490126609802246

Token 779: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1291401386260986
    2. '(-' → logprob: -1.5041401386260986
    3. ')' → logprob: -1.7541401386260986
    4. ',' → logprob: -2.5041401386260986
    5. '",' → logprob: -2.8791401386260986
    6. '")' → logprob: -3.0041401386260986
    7. ' (-' → logprob: -3.2541401386260986
    8. '   ' → logprob: -4.3791399002075195
    9. ')"' → logprob: -4.5041399002075195
    10. '",-' → logprob: -5.3791399002075195

Token 780: ' (-' (ID: 21382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011462622322142124
    2. 'states' → logprob: -4.886462688446045
    3. 'possible' → logprob: -7.261462688446045
    4. 'state' → logprob: -7.511462688446045
    5. '{' → logprob: -7.761462688446045
    6. ',' → logprob: -7.761462688446045
    7. 'positions' → logprob: -8.386462211608887
    8. ')' → logprob: -8.511462211608887
    9. 'left' → logprob: -8.636462211608887
    10. 'current' → logprob: -9.011462211608887

Token 781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.500018119812012
    3. '   ' → logprob: -12.250018119812012
    4. ' -' → logprob: -13.500018119812012
    5. '2' → logprob: -14.750018119812012
    6. ')' → logprob: -15.000018119812012
    7. '-' → logprob: -15.125018119812012
    8. '  ' → logprob: -15.625018119812012
    9. ',' → logprob: -16.375019073486328
    10. '
' → logprob: -16.625019073486328

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007900341413915157
    2. '   ' → logprob: -4.882900238037109
    3. ')
' → logprob: -9.25790023803711
    4. '}' → logprob: -9.50790023803711
    5. '')' → logprob: -10.00790023803711
    6. ',' → logprob: -10.63290023803711
    7. ' )' → logprob: -11.13290023803711
    8. ')
' → logprob: -12.13290023803711
    9. '),' → logprob: -12.13290023803711
    10. ').' → logprob: -12.38290023803711

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009146512486040592
    2. 'states' → logprob: -5.134146690368652
    3. '    
' → logprob: -7.009146690368652
    4. '
' → logprob: -7.259146690368652
    5. ')' → logprob: -8.384146690368652
    6. ' states' → logprob: -8.509146690368652
    7. ',' → logprob: -8.509146690368652
    8. 'state' → logprob: -8.759146690368652
    9. 'current' → logprob: -8.884146690368652
    10. 'possible' → logprob: -9.134146690368652

Token 784: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1651991605758667
    2. 'states' → logprob: -2.1651992797851562
    3. ' states' → logprob: -4.040199279785156
    4. 'state' → logprob: -4.915199279785156
    5. 'current' → logprob: -4.915199279785156
    6. ' current' → logprob: -6.290199279785156
    7. 'possible' → logprob: -7.165199279785156
    8. ' state' → logprob: -7.790199279785156
    9. '    
' → logprob: -8.290199279785156
    10. ')' → logprob: -8.415199279785156

Token 785: ' On' (ID: 2160)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4166547656059265
    2. ' states' → logprob: -1.7916548252105713
    3. '   ' → logprob: -3.1666548252105713
    4. 'left' → logprob: -3.6666548252105713
    5. 'current' → logprob: -3.6666548252105713
    6. ' left' → logprob: -3.6666548252105713
    7. 'state' → logprob: -4.291654586791992
    8. ' current' → logprob: -4.416654586791992
    9. 'pos' → logprob: -4.916654586791992
    10. 'possible' → logprob: -5.916654586791992

Token 786: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3851624727249146
    2. 'states' → logprob: -1.6351624727249146
    3. '_states' → logprob: -2.135162353515625
    4. 'state' → logprob: -2.385162353515625
    5. 'et' → logprob: -2.635162353515625
    6. 's' → logprob: -3.260162353515625
    7. '=' → logprob: -3.260162353515625
    8. 'continue' → logprob: -3.385162353515625
    9. 'initialize' → logprob: -3.760162353515625
    10. 'initial' → logprob: -4.260162353515625

Token 787: 'era' (ID: 2060)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9204248785972595
    2. 'e' → logprob: -1.0454249382019043
    3. 'és' → logprob: -1.4204249382019043
    4. 'ée' → logprob: -5.670424938201904
    5. 'es' → logprob: -6.420424938201904
    6. 'ées' → logprob: -6.920424938201904
    7. 'ent' → logprob: -7.045424938201904
    8. 'er' → logprob: -7.670424938201904
    9. 'ee' → logprob: -8.045424461364746
    10. 'ed' → logprob: -8.295424461364746

Token 788: ' l' (ID: 305)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8713786005973816
    2. 'set' → logprob: -2.2463786602020264
    3. ' {(' → logprob: -2.3713786602020264
    4. ' les' → logprob: -2.9963786602020264
    5. ' set' → logprob: -2.9963786602020264
    6. 'les' → logprob: -3.2463786602020264
    7. ' l' → logprob: -3.3713786602020264
    8. 'initial' → logprob: -3.4963786602020264
    9. 'l' → logprob: -3.6213786602020264
    10. 'states' → logprob: -3.7463786602020264

Token 789: ''' (ID: 6)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.6483914256095886
    2. 'e' → logprob: -0.8983914256095886
    3. ''état' → logprob: -3.7733914852142334
    4. 'set' → logprob: -3.7733914852142334
    5. 'a' → logprob: -5.398391246795654
    6. '{' → logprob: -5.773391246795654
    7. '(' → logprob: -5.898391246795654
    8. 'ensemble' → logprob: -6.023391246795654
    9. ' set' → logprob: -6.648391246795654
    10. 'es' → logprob: -6.773391246795654

Token 790: 'absence' (ID: 99054)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1984939575195312
    2. 'ensemble' → logprob: -1.1984939575195312
    3. ''ensemble' → logprob: -2.3234939575195312
    4. ' set' → logprob: -2.9484939575195312
    5. 'e' → logprob: -3.3234939575195312
    6. ''état' → logprob: -3.3234939575195312
    7. '(' → logprob: -3.8234939575195312
    8. ' ensemble' → logprob: -3.9484939575195312
    9. 'initial' → logprob: -4.198493957519531
    10. 'state' → logprob: -4.198493957519531

Token 791: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5798014998435974
    2. 'de' → logprob: -1.7048015594482422
    3. 'd' → logprob: -2.204801559448242
    4. ' d' → logprob: -2.704801559448242
    5. ' ' → logprob: -3.829801559448242
    6. ')' → logprob: -3.829801559448242
    7. ' des' → logprob: -4.829801559448242
    8. ' -' → logprob: -4.829801559448242
    9. 'des' → logprob: -5.454801559448242
    10. ',' → logprob: -5.829801559448242

Token 792: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06694972515106201
    2. ' pied' → logprob: -3.0669498443603516
    3. 'position' → logprob: -4.316949844360352
    4. 'pos' → logprob: -6.441949844360352
    5. 'app' → logprob: -7.191949844360352
    6. ' ' → logprob: -7.316949844360352
    7. ' position' → logprob: -7.691949844360352
    8. 'pas' → logprob: -8.566949844360352
    9. 'placement' → logprob: -8.691949844360352
    10. 'pose' → logprob: -9.691949844360352

Token 793: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.8013395667076111
    2. '_' → logprob: -1.8013396263122559
    3. '_sur' → logprob: -1.8013396263122559
    4. ' =' → logprob: -2.301339626312256
    5. ' ' → logprob: -3.176339626312256
    6. '-' → logprob: -4.051339626312256
    7. '=' → logprob: -4.051339626312256
    8. ')' → logprob: -4.801339626312256
    9. 's' → logprob: -5.051339626312256
    10. '_s' → logprob: -5.176339626312256

Token 794: ' un' (ID: 537)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23393107950687408
    2. ' -' → logprob: -1.858931064605713
    3. ' panel' → logprob: -3.983931064605713
    4. 'panel' → logprob: -4.608931064605713
    5. 'score' → logprob: -5.483931064605713
    6. ' ' → logprob: -5.608931064605713
    7. '   ' → logprob: -5.983931064605713
    8. 'pan' → logprob: -6.233931064605713
    9. ' score' → logprob: -6.608931064605713
    10. ' un' → logprob: -6.733931064605713

Token 795: ' panneau' (ID: 186597)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3196503818035126
    2. ' panel' → logprob: -2.194650411605835
    3. 'panel' → logprob: -2.444650411605835
    4. 'p' → logprob: -3.444650411605835
    5. 'anel' → logprob: -3.819650411605835
    6. ' -' → logprob: -4.944650173187256
    7. ' panneau' → logprob: -5.194650173187256
    8. 'score' → logprob: -6.694650173187256
    9. '-panel' → logprob: -7.069650173187256
    10. 'None' → logprob: -7.194650173187256

Token 796: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07435053586959839
    2. '=' → logprob: -4.074350357055664
    3. '   ' → logprob: -4.449350357055664
    4. ')' → logprob: -4.574350357055664
    5. ',' → logprob: -4.574350357055664
    6. ' (-' → logprob: -5.324350357055664
    7. '=-' → logprob: -5.449350357055664
    8. '(-' → logprob: -5.824350357055664
    9. '=(-' → logprob: -6.324350357055664
    10. ' ' → logprob: -6.449350357055664

Token 797: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02638505958020687
    2. ' -' → logprob: -3.6513850688934326
    3. '(-' → logprob: -9.776385307312012
    4. ' ' → logprob: -11.526385307312012
    5. '   ' → logprob: -11.526385307312012
    6. 'None' → logprob: -13.151385307312012
    7. ' (-' → logprob: -13.276385307312012
    8. '  ' → logprob: -13.651385307312012
    9. '{-' → logprob: -14.151385307312012
    10. ' None' → logprob: -14.713885307312012

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.250003814697266
    4. '2' → logprob: -16.375003814697266
    5. ' -' → logprob: -16.875003814697266
    6. '１' → logprob: -17.187503814697266
    7. ' ' → logprob: -17.750003814697266
    8. '۱' → logprob: -17.875003814697266
    9. '-' → logprob: -18.125003814697266
    10. '```' → logprob: -18.375003814697266

Token 799: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025670165196061134
    2. 'states' → logprob: -4.150670051574707
    3. 'possible' → logprob: -5.525670051574707
    4. '
' → logprob: -6.275670051574707
    5. 'state' → logprob: -6.900670051574707
    6. '    
' → logprob: -7.150670051574707
    7. 'current' → logprob: -7.525670051574707
    8. 'left' → logprob: -8.525670051574707
    9. 'def' → logprob: -8.650670051574707
    10. 'positions' → logprob: -8.650670051574707

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08499124646186829
    2. 'states' → logprob: -3.084991216659546
    3. ' states' → logprob: -4.334991455078125
    4. '    
' → logprob: -5.209991455078125
    5. 'left' → logprob: -5.834991455078125
    6. 'state' → logprob: -5.834991455078125
    7. 'current' → logprob: -6.084991455078125
    8. 'pos' → logprob: -6.209991455078125
    9. 'possible' → logprob: -6.709991455078125
    10. ' left' → logprob: -6.709991455078125

Token 801: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.046556998044252396
    2. 'current' → logprob: -3.5465569496154785
    3. 'left' → logprob: -5.9215569496154785
    4. 'pos' → logprob: -5.9215569496154785
    5. 'possible' → logprob: -5.9215569496154785
    6. 'dp' → logprob: -6.1715569496154785
    7. 'state' → logprob: -6.4215569496154785
    8. 'positions' → logprob: -6.7965569496154785
    9. '#' (adapté à ' #') → logprob: -6.9215569496154785
    10. 'etat' → logprob: -7.0465569496154785

Token 802: ' Les' (ID: 7029)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.08635157346725464
    2. '   ' → logprob: -3.2113516330718994
    3. 'state' → logprob: -3.8363516330718994
    4. 'current' → logprob: -5.71135139465332
    5. 'pos' → logprob: -5.71135139465332
    6. '#' → logprob: -5.83635139465332
    7. ' states' → logprob: -5.83635139465332
    8. 'dp' → logprob: -6.33635139465332
    9. 'left' → logprob: -6.46135139465332
    10. 'positions' → logprob: -6.58635139465332

Token 803: ' panneaux' (ID: 155485)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.7966872453689575
    2. ' states' → logprob: -1.0466872453689575
    3. ' états' → logprob: -2.671687126159668
    4. '#' → logprob: -3.796687126159668
    5. ' et' → logprob: -4.046687126159668
    6. ' current' → logprob: -4.171687126159668
    7. 'current' → logprob: -4.421687126159668
    8. 'et' → logprob: -4.421687126159668
    9. ' ' → logprob: -4.921687126159668
    10. 'state' → logprob: -5.171687126159668

Token 804: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07053172588348389
    2. '=' → logprob: -3.4455318450927734
    3. '_positions' → logprob: -4.695531845092773
    4. '_num' → logprob: -4.820531845092773
    5. '_pos' → logprob: -5.445531845092773
    6. 'num' → logprob: -5.570531845092773
    7. '_nums' → logprob: -6.195531845092773
    8. 's' → logprob: -6.945531845092773
    9. '_indices' → logprob: -7.195531845092773
    10. 'positions' → logprob: -7.445531845092773

Token 805: ' cod' (ID: 26163)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.9446170330047607
    2. '[' → logprob: -1.0696170330047607
    3. '{'' → logprob: -2.0696170330047607
    4. ' ['' → logprob: -3.0696170330047607
    5. 'encoded' → logprob: -4.31961727142334
    6. '[-' → logprob: -4.31961727142334
    7. ' [' → logprob: -4.69461727142334
    8. 'range' → logprob: -5.06961727142334
    9. 'num' → logprob: -5.19461727142334
    10. ' ' → logprob: -5.31961727142334

Token 806: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.012842297554016113
    2. 'é' → logprob: -4.762842178344727
    3. 'ifiés' → logprob: -5.887842178344727
    4. '{'' → logprob: -7.262842178344727
    5. '0' → logprob: -8.887842178344727
    6. 'ées' → logprob: -9.387842178344727
    7. 'u' → logprob: -9.387842178344727
    8. '   ' → logprob: -9.637842178344727
    9. '```' → logprob: -9.637842178344727
    10. '{' → logprob: -9.762842178344727

Token 807: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11772329360246658
    2. '=' → logprob: -3.117723226547241
    3. '   ' → logprob: -3.867723226547241
    4. 'en' → logprob: -4.49272346496582
    5. 'score' → logprob: -5.36772346496582
    6. 'sur' → logprob: -5.61772346496582
    7. '#' → logprob: -5.74272346496582
    8. ':' → logprob: -5.99272346496582
    9. '={'' → logprob: -6.11772346496582
    10. '_score' → logprob: -6.24272346496582

Token 808: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1117855310440063
    2. 'range' → logprob: -1.2367855310440063
    3. '-' → logprob: -1.6117855310440063
    4. 'panel' → logprob: -3.486785411834717
    5. '{' → logprob: -3.611785411834717
    6. '[' → logprob: -3.611785411834717
    7. 'int' → logprob: -3.986785411834717
    8. '3' → logprob: -4.361785411834717
    9. '{-' → logprob: -4.486785411834717
    10. ' range' → logprob: -4.736785411834717

Token 809: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3535308837890625
    2. '0' → logprob: -1.6035308837890625
    3. '-' → logprob: -1.9785308837890625
    4. 'order' → logprob: -2.1035308837890625
    5. '{' → logprob: -2.3535308837890625
    6. '[' → logprob: -2.8535308837890625
    7. 'panel' → logprob: -2.9785308837890625
    8. '{-' → logprob: -3.7285308837890625
    9. '[-' → logprob: -3.8535308837890625
    10. '4' → logprob: -4.9785308837890625

Token 810: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16542409360408783
    2. '<|end|>' → logprob: -2.415424108505249
    3. '   ' → logprob: -4.04042387008667
    4. ']' → logprob: -4.41542387008667
    5. '<|end|>' → logprob: -4.66542387008667
    6. ')' → logprob: -4.66542387008667
    7. '...' → logprob: -6.29042387008667
    8. '#' → logprob: -6.54042387008667
    9. ',
' → logprob: -6.79042387008667
    10. '
' → logprob: -6.79042387008667

Token 811: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005041152238845825
    2. '-' → logprob: -5.880041122436523
    3. '4' → logprob: -6.255041122436523
    4. ' ' → logprob: -8.255041122436523
    5. ' -' → logprob: -10.380041122436523
    6. '   ' → logprob: -11.880041122436523
    7. '1' → logprob: -13.130041122436523
    8. '```' → logprob: -13.255041122436523
    9. ',' → logprob: -13.317541122436523
    10. '=' → logprob: -13.692541122436523

Token 812: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759031772613525
    2. 'states' → logprob: -1.3259031772613525
    3. 'state' → logprob: -3.0759031772613525
    4. 'left' → logprob: -3.4509031772613525
    5. ' states' → logprob: -4.200902938842773
    6. '
' → logprob: -4.200902938842773
    7. ',' → logprob: -4.450902938842773
    8. 'possible' → logprob: -4.700902938842773
    9. 'current' → logprob: -4.825902938842773
    10. 'pos' → logprob: -4.950902938842773

Token 813: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9057559967041016
    2. '   ' → logprob: -1.4057559967041016
    3. 'states' → logprob: -1.6557559967041016
    4. 'dp' → logprob: -2.9057559967041016
    5. 'pos' → logprob: -3.2807559967041016
    6. 'initial' → logprob: -4.030755996704102
    7. 'init' → logprob: -4.405755996704102
    8. 'possible' → logprob: -4.780755996704102
    9. 'state' → logprob: -5.280755996704102
    10. 'current' → logprob: -5.280755996704102

Token 814: ' first' (ID: 1577)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.63231360912323
    2. 'pos' → logprob: -1.50731360912323
    3. 'states' → logprob: -2.1323137283325195
    4. ' left' → logprob: -3.2573137283325195
    5. 'dp' → logprob: -4.0073137283325195
    6. 'init' → logprob: -4.5073137283325195
    7. ' states' → logprob: -4.6323137283325195
    8. 'g' → logprob: -4.8823137283325195
    9. 'first' (adapté à ' first') → logprob: -5.0073137283325195
    10. 'initial' → logprob: -5.0073137283325195

Token 815: '_panel' (ID: 54810)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4280136525630951
    2. '_p' → logprob: -1.9280136823654175
    3. '_left' → logprob: -2.053013563156128
    4. '_g' → logprob: -3.553013563156128
    5. '_step' → logprob: -4.303013801574707
    6. '_panel' → logprob: -4.928013801574707
    7. '_state' → logprob: -5.053013801574707
    8. '_' → logprob: -5.178013801574707
    9. ' =' → logprob: -5.303013801574707
    10. '_score' → logprob: -5.803013801574707

Token 816: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495721474289894
    2. '=' → logprob: -2.929957151412964
    3. '_num' → logprob: -9.804957389831543
    4. 'num' → logprob: -12.054957389831543
    5. '_code' → logprob: -12.679957389831543
    6. '_idx' → logprob: -12.804957389831543
    7. '   ' → logprob: -13.054957389831543
    8. '_pos' → logprob: -13.804957389831543
    9. ' ' → logprob: -14.054957389831543
    10. 'code' → logprob: -14.429957389831543

Token 817: ' panel' (ID: 10408)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.03804241120815277
    2. ' panel' → logprob: -3.2880423069000244
    3. 'pan' → logprob: -15.038042068481445
    4. '	panel' → logprob: -15.413042068481445
    5. ' ' → logprob: -16.163042068481445
    6. 'score' → logprob: -16.288042068481445
    7. '   ' → logprob: -16.538042068481445
    8. 'board' → logprob: -16.913042068481445
    9. '(panel' → logprob: -17.163042068481445
    10. 'pane' → logprob: -17.413042068481445

Token 818: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.910643762443215e-05
    2. 'to' → logprob: -10.125079154968262
    3. '_num' → logprob: -11.625079154968262
    4. 's' → logprob: -11.750079154968262
    5. 'num' → logprob: -12.500079154968262
    6. ')' → logprob: -12.625079154968262
    7. 'score' → logprob: -12.875079154968262
    8. ']' → logprob: -13.000079154968262
    9. 'To' → logprob: -13.000079154968262
    10. '[' → logprob: -13.125079154968262

Token 819: '_num' (ID: 9834)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10047817975282669
    2. '_num' → logprob: -2.350478172302246
    3. 'score' → logprob: -8.225478172302246
    4. ' num' → logprob: -13.100478172302246
    5. 'Num' → logprob: -14.600478172302246
    6. '_score' → logprob: -14.850478172302246
    7. 'str' → logprob: -16.100479125976562
    8. '{' → logprob: -16.225479125976562
    9. 'n' → logprob: -16.350479125976562
    10. '
' → logprob: -16.725479125976562

Token 820: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13949716091156006
    2. '(score' → logprob: -2.1394972801208496
    3. 'score' → logprob: -4.38949728012085
    4. ' score' → logprob: -10.764496803283691
    5. '   ' → logprob: -11.514496803283691
    6. ' =' → logprob: -11.764496803283691
    7. '	score' → logprob: -11.764496803283691
    8. '_score' → logprob: -11.889496803283691
    9. '=' → logprob: -11.889496803283691
    10. ' [' → logprob: -12.014496803283691

Token 821: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -3.8889261304575484e-06
    2. ' score' → logprob: -12.500003814697266
    3. '(score' → logprob: -16.125003814697266
    4. '	score' → logprob: -20.625003814697266
    5. ' ' → logprob: -21.750003814697266
    6. '   ' → logprob: -22.000003814697266
    7. 'scores' → logprob: -22.500003814697266
    8. '
' → logprob: -22.750003814697266
    9. '_score' → logprob: -22.875003814697266
    10. 's' → logprob: -23.125003814697266

Token 822: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015141464537009597
    2. '0' → logprob: -6.501513957977295
    3. '][' → logprob: -12.751514434814453
    4. ']' → logprob: -13.001514434814453
    5. '(' → logprob: -13.001514434814453
    6. '[
' → logprob: -13.376514434814453
    7. ' [' → logprob: -14.126514434814453
    8. 'first' → logprob: -14.251514434814453
    9. ' ' → logprob: -15.251514434814453
    10. '
' → logprob: -15.251514434814453

Token 823: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '[' → logprob: -15.37500286102295
    4. '   ' → logprob: -15.62500286102295
    5. '#' → logprob: -17.375001907348633
    6. ']' → logprob: -18.500001907348633
    7. '
' → logprob: -18.625001907348633
    8. '```' → logprob: -19.125001907348633
    9. '  ' → logprob: -19.625001907348633
    10. '00' → logprob: -20.125001907348633

Token 824: ']]
' (ID: 29446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4336060583591461
    2. ']' → logprob: -1.6836060285568237
    3. ']]' → logprob: -1.8086060285568237
    4. '])]' → logprob: -7.183606147766113
    5. '']]' → logprob: -7.933606147766113
    6. '')]' → logprob: -8.058606147766113
    7. ']]
' → logprob: -8.433606147766113
    8. '])' → logprob: -8.808606147766113
    9. ')' → logprob: -8.933606147766113
    10. ')]
' → logprob: -9.433606147766113

Token 825: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48810046911239624
    2. 'states' → logprob: -0.9881004691123962
    3. 'possible' → logprob: -4.738100528717041
    4. ' states' → logprob: -6.363100528717041
    5. 'state' → logprob: -6.738100528717041
    6. 'current' → logprob: -6.988100528717041
    7. 'et' → logprob: -7.613100528717041
    8. '    
' → logprob: -8.863100051879883
    9. 'positions' → logprob: -8.863100051879883
    10. 'poss' → logprob: -9.113100051879883

Token 826: '   ' (ID: 271)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2605842649936676
    2. '   ' → logprob: -1.6355842351913452
    3. 'et' → logprob: -4.385584354400635
    4. 'possible' → logprob: -4.510584354400635
    5. 'current' → logprob: -4.885584354400635
    6. 'state' → logprob: -6.885584354400635
    7. 'etat' → logprob: -7.135584354400635
    8. ' states' → logprob: -7.635584354400635
    9. 'poss' → logprob: -7.885584354400635
    10. 'ét' → logprob: -8.135583877563477

Token 827: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.013987316749989986
    2. 'current' → logprob: -4.7639875411987305
    3. 'possible' → logprob: -5.8889875411987305
    4. 'et' → logprob: -6.5139875411987305
    5. 'etat' → logprob: -7.5139875411987305
    6. 'state' → logprob: -8.51398754119873
    7. 'dp' → logprob: -9.26398754119873
    8. '#' (adapté à ' #') → logprob: -9.76398754119873
    9. 'ét' → logprob: -9.76398754119873
    10. 'poss' → logprob: -10.13898754119873

Token 828: ' Les' (ID: 7029)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.05994472652673721
    2. 'possible' → logprob: -3.6849446296691895
    3. 'current' → logprob: -3.9349446296691895
    4. 'et' → logprob: -5.5599446296691895
    5. 'dp' → logprob: -6.1849446296691895
    6. ' states' → logprob: -6.1849446296691895
    7. '   ' → logprob: -6.6849446296691895
    8. '#' → logprob: -6.6849446296691895
    9. 'etat' → logprob: -7.0599446296691895
    10. 'state' → logprob: -7.1849446296691895

Token 829: ' états' (ID: 184259)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1514473259449005
    2. 'current' → logprob: -2.526447296142578
    3. ' states' → logprob: -4.151447296142578
    4. 'et' → logprob: -4.401447296142578
    5. '#' → logprob: -4.526447296142578
    6. 'possible' → logprob: -4.901447296142578
    7. ' current' → logprob: -5.151447296142578
    8. 'ét' → logprob: -5.651447296142578
    9. 'poss' → logprob: -6.901447296142578
    10. 'state' → logprob: -7.026447296142578

Token 830: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06643027067184448
    2. '=' → logprob: -2.8164303302764893
    3. 'poss' → logprob: -6.44143009185791
    4. 'possible' → logprob: -7.44143009185791
    5. 'pos' → logprob: -7.56643009185791
    6. '_possible' → logprob: -7.81643009185791
    7. '_pos' → logprob: -8.06643009185791
    8. 'current' → logprob: -8.56643009185791
    9. '_current' → logprob: -8.56643009185791
    10. ' possibles' → logprob: -8.81643009185791

Token 831: ' stock' (ID: 6546)
  Prédit: ' {('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {(' → logprob: -0.47704318165779114
    2. '{' → logprob: -1.2270431518554688
    3. ' set' → logprob: -2.9770431518554688
    4. 'set' → logprob: -3.3520431518554688
    5. ' states' → logprob: -9.727043151855469
    6. '   ' → logprob: -9.727043151855469
    7. ' ' → logprob: -9.977043151855469
    8. 'states' → logprob: -10.102043151855469
    9. ' {' → logprob: -10.727043151855469
    10. '={(' → logprob: -10.977043151855469

Token 832: 'és' (ID: 1756)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2331269383430481
    2. '={(' → logprob: -2.6081268787384033
    3. '=' → logprob: -3.7331268787384033
    4. '=set' → logprob: -3.8581268787384033
    5. '{' → logprob: -4.108127117156982
    6. '   ' → logprob: -4.108127117156982
    7. ' dans' → logprob: -4.233127117156982
    8. 'set' → logprob: -4.358127117156982
    9. 'dans' → logprob: -4.733127117156982
    10. ' {(' → logprob: -4.858127117156982

Token 833: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11091726273298264
    2. '={(' → logprob: -3.485917329788208
    3. '=' → logprob: -3.860917329788208
    4. ' en' → logprob: -4.610917091369629
    5. '={' → logprob: -4.985917091369629
    6. ' {(' → logprob: -4.985917091369629
    7. 'set' → logprob: -5.235917091369629
    8. '{' → logprob: -5.360917091369629
    9. '=set' → logprob: -5.360917091369629
    10. 'current' → logprob: -5.985917091369629

Token 834: ' un' (ID: 537)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.308969646692276
    2. '{' → logprob: -2.308969736099243
    3. 'states' → logprob: -2.808969736099243
    4. 'set' → logprob: -3.183969736099243
    5. 'curr' → logprob: -3.308969736099243
    6. 'cur' → logprob: -4.058969497680664
    7. ' current' → logprob: -5.183969497680664
    8. ' {(' → logprob: -6.308969497680664
    9. ' states' → logprob: -7.683969497680664
    10. 'possible' → logprob: -7.933969497680664

Token 835: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.010010345838963985
    2. ' set' → logprob: -4.635010242462158
    3. 'sets' → logprob: -8.635010719299316
    4. '{' → logprob: -10.635010719299316
    5. 'current' → logprob: -10.760010719299316
    6. ' sets' → logprob: -12.260010719299316
    7. ')set' → logprob: -12.385010719299316
    8. '#set' → logprob: -12.385010719299316
    9. 's' → logprob: -12.510010719299316
    10. ' current' → logprob: -12.885010719299316

Token 836: ' pour' (ID: 1930)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.1034988164901733
    2. ' states' → logprob: -1.4784988164901733
    3. ' =' → logprob: -2.228498935699463
    4. '{' → logprob: -2.228498935699463
    5. '   ' → logprob: -2.353498935699463
    6. 'current' → logprob: -2.853498935699463
    7. ' {(' → logprob: -3.603498935699463
    8. ' current' → logprob: -3.978498935699463
    9. 'possible' → logprob: -5.103498935699463
    10. '={(' → logprob: -5.353498935699463

Token 837: ' éviter' (ID: 64013)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.9220374226570129
    2. '{' → logprob: -1.4220373630523682
    3. '(states' → logprob: -1.6720373630523682
    4. ' states' → logprob: -2.672037363052368
    5. ' {(' → logprob: -2.797037363052368
    6. ' (' → logprob: -5.172037601470947
    7. '[(' → logprob: -5.297037601470947
    8. ' ' → logprob: -5.672037601470947
    9. 'set' → logprob: -6.047037601470947
    10. '#' → logprob: -6.047037601470947

Token 838: ' doubl' (ID: 127992)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.7494546175003052
    2. 'dup' → logprob: -1.7494546175003052
    3. ' duplicates' → logprob: -2.9994544982910156
    4. 'des' → logprob: -3.1244544982910156
    5. 'les' → logprob: -3.4994544982910156
    6. 'la' → logprob: -3.4994544982910156
    7. 'd' → logprob: -3.4994544982910156
    8. 'duplic' → logprob: -3.9994544982910156
    9. 'dou' → logprob: -3.9994544982910156
    10. ' duplic' → logprob: -4.124454498291016

Token 839: 'ons' (ID: 1808)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.434410959482193
    2. 'ons' → logprob: -1.4344109296798706
    3. 'es' → logprob: -2.93441104888916
    4. 'é' → logprob: -3.43441104888916
    5. 'e' → logprob: -3.93441104888916
    6. 'on' → logprob: -5.43441104888916
    7. 'eurs' → logprob: -7.30941104888916
    8. 'ects' → logprob: -7.68441104888916
    9. 'ée' → logprob: -8.30941104888916
    10. 'ections' → logprob: -8.43441104888916

Token 840: '.
' (ID: 558)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1383056938648224
    2. 'current' → logprob: -2.1383056640625
    3. ' states' → logprob: -5.2633056640625
    4. 'possible' → logprob: -6.2633056640625
    5. ' current' → logprob: -6.3883056640625
    6. 'state' → logprob: -7.0133056640625
    7. '   ' → logprob: -7.5133056640625
    8. 'et' → logprob: -8.5133056640625
    9. 'curr' → logprob: -8.5133056640625
    10. '```' → logprob: -8.7633056640625

Token 841: '   ' (ID: 271)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.3587484061717987
    2. '   ' → logprob: -1.858748435974121
    3. 'current' → logprob: -2.858748435974121
    4. ' states' → logprob: -3.108748435974121
    5. 'possible' → logprob: -3.733748435974121
    6. ' current' → logprob: -4.483748435974121
    7. ' possible' → logprob: -5.483748435974121
    8. 'state' → logprob: -6.483748435974121
    9. 'curr' → logprob: -7.608748435974121
    10. 'cur' → logprob: -7.983748435974121

Token 842: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.09420023113489151
    2. 'current' → logprob: -2.5942001342773438
    3. 'et' → logprob: -4.719200134277344
    4. 'possible' → logprob: -5.969200134277344
    5. ' states' → logprob: -6.844200134277344
    6. 'etat' → logprob: -7.219200134277344
    7. 'curr' → logprob: -7.594200134277344
    8. 'ét' → logprob: -7.969200134277344
    9. ' current' → logprob: -8.344200134277344
    10. 'state' → logprob: -8.469200134277344

Token 843: ' Au' (ID: 18016)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.10353885591030121
    2. 'current' → logprob: -2.603538751602173
    3. 'et' → logprob: -4.853538990020752
    4. ' states' → logprob: -4.853538990020752
    5. 'possible' → logprob: -5.603538990020752
    6. ' current' → logprob: -6.478538990020752
    7. 'ét' → logprob: -7.228538990020752
    8. 'etat' → logprob: -7.228538990020752
    9. 'curr' → logprob: -7.478538990020752
    10. '   ' → logprob: -8.228538513183594

Token 844: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.8297986388206482
    2. 'step' → logprob: -1.954798698425293
    3. '=' → logprob: -3.204798698425293
    4. 'pas' → logprob: -3.329798698425293
    5. 'ét' → logprob: -3.329798698425293
    6. 'jour' → logprob: -3.454798698425293
    7. 'state' → logprob: -3.829798698425293
    8. ' départ' → logprob: -3.829798698425293
    9. 'depart' → logprob: -3.829798698425293
    10. 'temps' → logprob: -3.954798698425293

Token 845: ',' (ID: 11)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5539906024932861
    2. 'current' → logprob: -1.3039906024932861
    3. '   ' → logprob: -2.803990602493286
    4. ' states' → logprob: -3.303990602493286
    5. 'possible' → logprob: -3.928990602493286
    6. ' current' → logprob: -4.178990364074707
    7. 'cur' → logprob: -5.053990364074707
    8. 'curr' → logprob: -5.428990364074707
    9. 'et' → logprob: -5.928990364074707
    10. ' =' → logprob: -6.053990364074707

Token 846: ' pied' (ID: 20242)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.7297043204307556
    2. ' states' → logprob: -0.9797043204307556
    3. ' current' → logprob: -2.7297043800354004
    4. 'current' → logprob: -2.8547043800354004
    5. 'et' → logprob: -4.3547043800354
    6. ' et' → logprob: -6.3547043800354
    7. ' états' → logprob: -6.7297043800354
    8. 'etat' → logprob: -6.8547043800354
    9. '{' → logprob: -7.4797043800354
    10. 'curr' → logprob: -7.8547043800354

Token 847: ' gauche' (ID: 58367)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.07636889815330505
    2. 'g' → logprob: -2.951368808746338
    3. ' gauche' → logprob: -3.951368808746338
    4. '_left' → logprob: -6.576368808746338
    5. '_' → logprob: -9.076369285583496
    6. '_d' → logprob: -9.326369285583496
    7. 'gau' → logprob: -9.326369285583496
    8. ' _' → logprob: -9.576369285583496
    9. ' gau' → logprob: -9.951369285583496
    10. 'left' → logprob: -10.201369285583496

Token 848: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.259364366531372
    2. '_pos' → logprob: -1.759364366531372
    3. 'pos' → logprob: -2.384364366531372
    4. ',' → logprob: -2.384364366531372
    5. '=' → logprob: -2.884364366531372
    6. '_positions' → logprob: -3.134364366531372
    7. ' sur' → logprob: -3.259364366531372
    8. 'sur' → logprob: -3.759364366531372
    9. '_on' → logprob: -3.759364366531372
    10. '_sur' → logprob: -3.884364366531372

Token 849: ' première' (ID: 23423)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.07004414498806
    2. ' first' → logprob: -2.6950440406799316
    3. 'score' → logprob: -9.94504451751709
    4. '(first' → logprob: -10.07004451751709
    5. ' (' → logprob: -12.19504451751709
    6. ' score' → logprob: -12.69504451751709
    7. ' ' → logprob: -12.69504451751709
    8. '(' → logprob: -12.82004451751709
    9. '(score' → logprob: -13.94504451751709
    10. '[first' → logprob: -14.19504451751709

Token 850: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.38465437293052673
    2. ' fl' → logprob: -1.3846544027328491
    3. '_panel' → logprob: -3.6346542835235596
    4. 'panel' → logprob: -4.259654521942139
    5. '_fl' → logprob: -4.509654521942139
    6. 'case' → logprob: -5.509654521942139
    7. 'score' → logprob: -5.634654521942139
    8. '_p' → logprob: -6.759654521942139
    9. ' panel' → logprob: -6.884654521942139
    10. 'fle' → logprob: -7.009654521942139

Token 851: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.00020830852736253291
    2. 'êche' → logprob: -8.625207901000977
    3. 'è' → logprob: -11.500207901000977
    4. 'é' → logprob: -11.500207901000977
    5. 'éch' → logprob: -12.625207901000977
    6. 'e' → logprob: -12.750207901000977
    7. 'ech' → logprob: -15.125207901000977
    8. 'èque' → logprob: -15.250207901000977
    9. 'ève' → logprob: -16.000207901000977
    10. '`' → logprob: -16.000207901000977

Token 852: ',' (ID: 11)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.13541825115680695
    2. '{' → logprob: -2.760418176651001
    3. 'current' → logprob: -4.13541841506958
    4. '   ' → logprob: -4.13541841506958
    5. 'possible' → logprob: -4.26041841506958
    6. ' =' → logprob: -5.01041841506958
    7. ' states' → logprob: -5.76041841506958
    8. 'positions' → logprob: -5.88541841506958
    9. 'state' → logprob: -6.51041841506958
    10. ' {(' → logprob: -7.01041841506958

Token 853: ' pied' (ID: 20242)
  Prédit: ' pied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pied' → logprob: -0.9626600742340088
    2. 'first' → logprob: -2.087660074234009
    3. ' pieds' → logprob: -2.087660074234009
    4. '(' → logprob: -2.712660074234009
    5. ' first' → logprob: -2.962660074234009
    6. ' (' → logprob: -3.462660074234009
    7. 'p' → logprob: -3.587660074234009
    8. '(-' → logprob: -3.712660074234009
    9. 'right' → logprob: -3.712660074234009
    10. 'foot' → logprob: -3.962660074234009

Token 854: ' droit' (ID: 29964)
  Prédit: ' droit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.612376868724823
    2. 'd' → logprob: -1.4873769283294678
    3. '_d' → logprob: -1.7373769283294678
    4. 'dro' → logprob: -3.1123769283294678
    5. ' droite' → logprob: -4.612376689910889
    6. ' droits' → logprob: -7.987376689910889
    7. '_right' → logprob: -8.237377166748047
    8. ' ' → logprob: -8.237377166748047
    9. 'right' → logprob: -8.362377166748047
    10. ' -' → logprob: -9.362377166748047

Token 855: ' n' (ID: 297)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.4574131965637207
    2. ' sur' → logprob: -1.7074131965637207
    3. ' =' → logprob: -2.3324131965637207
    4. '=' → logprob: -2.7074131965637207
    5. '=-' → logprob: -4.957413196563721
    6. '_sur' → logprob: -5.707413196563721
    7. ' on' → logprob: -5.957413196563721
    8. 'on' → logprob: -6.207413196563721
    9. '=(-' → logprob: -6.457413196563721
    10. ',' → logprob: -6.957413196563721

Token 856: ''a' (ID: 10443)
  Prédit: '=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.44625601172447205
    2. '=' → logprob: -1.5712560415267944
    3. ''est' → logprob: -3.321255922317505
    4. 'on' → logprob: -3.321255922317505
    5. '=None' → logprob: -3.446255922317505
    6. '-' → logprob: -3.821255922317505
    7. 'sur' → logprob: -5.321256160736084
    8. 'ull' → logprob: -5.821256160736084
    9. 'one' → logprob: -6.071256160736084
    10. 'ég' → logprob: -6.071256160736084

Token 857: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2168530523777008
    2. 'on' → logprob: -2.466853141784668
    3. '=' → logprob: -3.966853141784668
    4. '=None' → logprob: -4.341853141784668
    5. 'a' → logprob: -4.591853141784668
    6. '-' → logprob: -4.591853141784668
    7. 'importe' → logprob: -5.091853141784668
    8. '_pas' → logprob: -5.091853141784668
    9. '```' → logprob: -5.466853141784668
    10. ' pas' → logprob: -5.591853141784668

Token 858: ' bou' (ID: 17573)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.270720511674881
    2. '_pressed' → logprob: -3.6457204818725586
    3. '_' → logprob: -3.7707204818725586
    4. 'd' → logprob: -3.8957204818725586
    5. ' de' → logprob: -4.020720481872559
    6. '_position' → logprob: -4.270720481872559
    7. ' -' → logprob: -4.395720481872559
    8. 'pressed' → logprob: -4.395720481872559
    9. '_place' → logprob: -4.770720481872559
    10. ' pressed' → logprob: -5.020720481872559

Token 859: 'gé' (ID: 151947)
  Prédit: 'oué'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oué' → logprob: -0.024576691910624504
    2. 'gé' → logprob: -4.149576663970947
    3. 'ou' → logprob: -5.899576663970947
    4. 'dé' → logprob: -6.899576663970947
    5. 'oug' → logprob: -7.024576663970947
    6. 'y' → logprob: -8.024577140808105
    7. 'onné' → logprob: -8.274577140808105
    8. 'idé' → logprob: -8.399577140808105
    9. 'né' → logprob: -8.649577140808105
    10. 'ouvé' → logprob: -8.774577140808105

Token 860: '
' (ID: 198)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4485939145088196
    2. ' =' → logprob: -1.1985938549041748
    3. '{' → logprob: -3.823593854904175
    4. 'state' → logprob: -4.573594093322754
    5. '=' → logprob: -4.698594093322754
    6. 'current' → logprob: -4.823594093322754
    7. ' states' → logprob: -5.698594093322754
    8. '={(' → logprob: -6.698594093322754
    9. '={' → logprob: -6.698594093322754
    10. '   ' → logprob: -6.823594093322754

Token 861: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5806336998939514
    2. 'states' → logprob: -0.9556336998939514
    3. '=' → logprob: -4.455633640289307
    4. '   ' → logprob: -4.705633640289307
    5. 'state' → logprob: -4.705633640289307
    6. ' states' → logprob: -4.705633640289307
    7. '{' → logprob: -4.830633640289307
    8. 'current' → logprob: -5.330633640289307
    9. ',' → logprob: -6.955633640289307
    10. 'cur' → logprob: -7.330633640289307

Token 862: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.011381425894796848
    2. 'current' → logprob: -4.88638162612915
    3. 'possible' → logprob: -6.13638162612915
    4. ' states' → logprob: -7.26138162612915
    5. '   ' → logprob: -7.63638162612915
    6. 'state' → logprob: -8.761381149291992
    7. 'et' → logprob: -9.261381149291992
    8. 'etat' → logprob: -9.886381149291992
    9. 'curr' → logprob: -10.136381149291992
    10. 'poss' → logprob: -10.886381149291992

Token 863: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759590864181519
    2. '=' → logprob: -0.8259590864181519
    3. '=set' → logprob: -11.075959205627441
    4. '={(' → logprob: -12.825959205627441
    5. '   ' → logprob: -14.575959205627441
    6. '={' → logprob: -14.825959205627441
    7. '{' → logprob: -15.450959205627441
    8. ' ={' → logprob: -15.575959205627441
    9. ' ' → logprob: -16.575958251953125
    10. 'set' → logprob: -16.700958251953125

Token 864: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.010803033597767353
    2. 'set' → logprob: -5.01080322265625
    3. ' {(' → logprob: -5.51080322265625
    4. ' set' → logprob: -10.38580322265625
    5. '   ' → logprob: -12.51080322265625
    6. ' ' → logprob: -13.51080322265625
    7. ' {' → logprob: -15.01080322265625
    8. '={(' → logprob: -17.01080322265625
    9. '  ' → logprob: -17.26080322265625
    10. '{s' → logprob: -17.38580322265625

Token 865: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.10349564999341965
    2. '()
' → logprob: -2.9784955978393555
    3. '{' → logprob: -3.6034955978393555
    4. '({' → logprob: -4.7284955978393555
    5. '()' → logprob: -5.3534955978393555
    6. '(' → logprob: -5.4784955978393555
    7. '([' → logprob: -6.2284955978393555
    8. '(((' → logprob: -7.8534955978393555
    9. '   ' → logprob: -10.603495597839355
    10. '([{' → logprob: -10.728495597839355

Token 866: '   ' (ID: 271)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.40365293622016907
    2. '(states' → logprob: -1.5286529064178467
    3. ' states' → logprob: -2.5286529064178467
    4. '{' → logprob: -3.6536529064178467
    5. '   ' → logprob: -4.903653144836426
    6. '((' → logprob: -6.653653144836426
    7. '[(' → logprob: -8.278653144836426
    8. '_states' → logprob: -9.153653144836426
    9. '([(' → logprob: -9.278653144836426
    10. ' {(' → logprob: -9.278653144836426

Token 867: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.011165606789290905
    2. ' states' → logprob: -4.511165618896484
    3. '(states' → logprob: -9.136165618896484
    4. '   ' → logprob: -11.636165618896484
    5. '(' → logprob: -14.761165618896484
    6. '_states' → logprob: -15.011165618896484
    7. '{' → logprob: -15.761165618896484
    8. '.states' → logprob: -15.761165618896484
    9. 'state' → logprob: -15.886165618896484
    10. '```' → logprob: -16.761165618896484

Token 868: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005765488371253014
    2. '=' → logprob: -5.880765438079834
    3. '.' → logprob: -6.005765438079834
    4. ' =' → logprob: -8.380765914916992
    5. '={(' → logprob: -9.255765914916992
    6. 'add' → logprob: -9.505765914916992
    7. ' .' → logprob: -9.630765914916992
    8. '.=' → logprob: -11.880765914916992
    9. '   ' → logprob: -12.005765914916992
    10. '{' → logprob: -12.130765914916992

Token 869: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02012721262872219
    2. '(' → logprob: -4.270127296447754
    3. '(((' → logprob: -5.145127296447754
    4. '([(' → logprob: -9.895127296447754
    5. '(({' → logprob: -10.520127296447754
    6. '{' → logprob: -11.395127296447754
    7. ' ((' → logprob: -11.770127296447754
    8. ' ' → logprob: -11.895127296447754
    9. '({' → logprob: -12.145127296447754
    10. '   ' → logprob: -12.145127296447754

Token 870: ' (' (ID: 350)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.1605047881603241
    2. '(' → logprob: -1.9105048179626465
    3. ' (' → logprob: -8.660504341125488
    4. ' ' → logprob: -9.535504341125488
    5. '   ' → logprob: -11.035504341125488
    6. '((' → logprob: -11.535504341125488
    7. '  ' → logprob: -12.785504341125488
    8. '(initial' → logprob: -13.535504341125488
    9. '[first' → logprob: -13.535504341125488
    10. '(final' → logprob: -13.785504341125488

Token 871: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00038300611777231097
    2. ' first' → logprob: -7.875382900238037
    3. '(first' → logprob: -13.250383377075195
    4. '[first' → logprob: -14.125383377075195
    5. '   ' → logprob: -16.500383377075195
    6. '	first' → logprob: -16.500383377075195
    7. ' ' → logprob: -16.625383377075195
    8. 'First' → logprob: -17.375383377075195
    9. '.first' → logprob: -17.875383377075195
    10. ':first' → logprob: -18.000383377075195

Token 872: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -1.7432603272027336e-06
    2. 'panel' → logprob: -13.750001907348633
    3. '_pan' → logprob: -16.000001907348633
    4. 'first' → logprob: -16.250001907348633
    5. '_PANEL' → logprob: -16.500001907348633
    6. '_p' → logprob: -16.625001907348633
    7. 'Panel' → logprob: -16.875001907348633
    8. ' panel' → logprob: -17.000001907348633
    9. '	panel' → logprob: -18.500001907348633
    10. ' _' → logprob: -18.750001907348633

Token 873: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012969860807061195
    2. ',-' → logprob: -4.512969970703125
    3. ' ,' → logprob: -6.387969970703125
    4. ' ,-' → logprob: -9.137969970703125
    5. ',
' → logprob: -9.762969970703125
    6. '   ' → logprob: -9.887969970703125
    7. '-' → logprob: -11.637969970703125
    8. ' -' → logprob: -11.637969970703125
    9. ',-
' → logprob: -14.262969970703125
    10. ' ' → logprob: -14.387969970703125

Token 874: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000297685619443655
    2. ' -' → logprob: -8.125297546386719
    3. '   ' → logprob: -13.375297546386719
    4. ' ' → logprob: -17.50029754638672
    5. '  ' → logprob: -17.50029754638672
    6. '       ' → logprob: -17.87529754638672
    7. '	' → logprob: -18.00029754638672
    8. '           ' → logprob: -18.25029754638672
    9. '    ' → logprob: -19.00029754638672
    10. '                   ' → logprob: -19.12529754638672

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.125
    4. '۱' → logprob: -20.0
    5. '```' → logprob: -20.625
    6. '  ' → logprob: -20.875
    7. '１' → logprob: -21.3125
    8. '১' → logprob: -21.5625
    9. ')' → logprob: -21.5625
    10. '2' → logprob: -21.625

Token 876: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. '))' → logprob: -15.875005722045898
    5. ')
' → logprob: -17.3750057220459
    6. '}' → logprob: -18.3750057220459
    7. ')}' → logprob: -18.3750057220459
    8. '),' → logprob: -18.5000057220459
    9. '')' → logprob: -18.6250057220459
    10. ')`' → logprob: -20.2500057220459

Token 877: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016218038217630237
    2. '   ' → logprob: -9.375162124633789
    3. ' )' → logprob: -9.500162124633789
    4. ')
' → logprob: -13.000162124633789
    5. ')}' → logprob: -16.00016212463379
    6. '}' → logprob: -17.12516212463379
    7. ')#' → logprob: -17.37516212463379
    8. '),' → logprob: -17.50016212463379
    9. '
' → logprob: -17.62516212463379
    10. ')**' → logprob: -17.75016212463379

Token 878: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.254378318786621
    2. '
' → logprob: -1.379378318786621
    3. ' for' → logprob: -2.004378318786621
    4. '<|end|>' → logprob: -2.129378318786621
    5. ')' → logprob: -2.754378318786621
    6. '   ' → logprob: -3.004378318786621
    7. '\n' → logprob: -3.254378318786621
    8. '    
' → logprob: -4.379378318786621
    9. '<|end|>' → logprob: -4.629378318786621
    10. '  
' → logprob: -4.754378318786621

Token 880: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6742841601371765
    2. '#' → logprob: -1.7992842197418213
    3. ')' → logprob: -2.5492842197418213
    4. ' for' → logprob: -2.7992842197418213
    5. 'current' → logprob: -2.9242842197418213
    6. '0' → logprob: -3.4242842197418213
    7. 'next' → logprob: -3.9242842197418213
    8. 'n' → logprob: -4.424283981323242
    9. 'i' → logprob: -4.549283981323242
    10. '
' → logprob: -4.674283981323242

Token 881: 'pos' (ID: 1103)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.22040623426437378
    2. ')' → logprob: -2.0954062938690186
    3. '<|end|>' → logprob: -2.8454062938690186
    4. '<|end|>' → logprob: -4.9704060554504395
    5. ' first' → logprob: -5.7204060554504395
    6. '0' → logprob: -6.5954060554504395
    7. 'states' → logprob: -6.8454060554504395
    8. ' ' → logprob: -7.4704060554504395
    9. ' )' → logprob: -7.4704060554504395
    10. '  ' → logprob: -7.5954060554504395

Token 882: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00036263695801608264
    2. 'g' → logprob: -8.125362396240234
    3. '_left' → logprob: -10.000362396240234
    4. ')' → logprob: -11.250362396240234
    5. '_first' → logprob: -12.750362396240234
    6. ')_' → logprob: -13.375362396240234
    7. '_' → logprob: -13.500362396240234
    8. ' gauche' → logprob: -14.375362396240234
    9. 'left' → logprob: -14.875362396240234
    10. '_ga' → logprob: -15.000362396240234

Token 883: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0040838588029146194
    2. '_g' → logprob: -7.004083633422852
    3. 'g' → logprob: -7.379083633422852
    4. 'auge' → logprob: -7.504083633422852
    5. 'au' → logprob: -7.754083633422852
    6. ')' → logprob: -8.254083633422852
    7. '_left' → logprob: -8.379083633422852
    8. 'left' → logprob: -8.504083633422852
    9. 'a' → logprob: -9.379083633422852
    10. 'uche' → logprob: -9.629083633422852

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018598537426441908
    2. ' ,' → logprob: -6.376859664916992
    3. ',pos' → logprob: -9.376859664916992
    4. ',p' → logprob: -10.626859664916992
    5. ')' → logprob: -11.251859664916992
    6. ',
' → logprob: -11.626859664916992
    7. '<|end|>' → logprob: -11.751859664916992
    8. ',user' → logprob: -12.376859664916992
    9. ',next' → logprob: -13.251859664916992
    10. ' ' → logprob: -13.251859664916992

Token 885: ' pos' (ID: 1253)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004064863547682762
    2. ' -' → logprob: -5.629065036773682
    3. 'pos' → logprob: -7.879065036773682
    4. '-pos' → logprob: -9.754064559936523
    5. '-p' → logprob: -11.129064559936523
    6. ')' → logprob: -12.379064559936523
    7. '(-' → logprob: -12.629064559936523
    8. '-position' → logprob: -13.379064559936523
    9. ' pos' → logprob: -13.879064559936523
    10. ' ' → logprob: -13.879064559936523

Token 886: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.08713767677545547
    2. 'dro' → logprob: -2.9621376991271973
    3. 'd' → logprob: -3.4621376991271973
    4. '_right' → logprob: -8.837137222290039
    5. 'right' → logprob: -8.962137222290039
    6. '_g' → logprob: -10.087137222290039
    7. ')' → logprob: -11.587137222290039
    8. 'g' → logprob: -11.712137222290039
    9. '```' → logprob: -12.587137222290039
    10. '-dro' → logprob: -12.712137222290039

Token 887: 'ro' (ID: 298)
  Prédit: 'roit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roit' → logprob: -0.003815153380855918
    2. 'ro' → logprob: -6.128815174102783
    3. 'right' → logprob: -6.628815174102783
    4. 'oit' → logprob: -8.503814697265625
    5. ')' → logprob: -10.128814697265625
    6. 'roits' → logprob: -11.253814697265625
    7. 'o' → logprob: -11.628814697265625
    8. '_right' → logprob: -11.753814697265625
    9. 'ort' → logprob: -12.003814697265625
    10. 'roi' → logprob: -12.253814697265625

Token 888: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0462021604180336
    2. 'ite' → logprob: -3.1712021827697754
    3. 'ight' → logprob: -6.171202182769775
    4. 't' → logprob: -7.421202182769775
    5. 'igt' → logprob: -8.671201705932617
    6. 'int' → logprob: -9.921201705932617
    7. ')' → logprob: -10.171201705932617
    8. 'irt' → logprob: -10.296201705932617
    9. '_d' → logprob: -10.296201705932617
    10. 'cht' → logprob: -10.671201705932617

Token 889: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8232690460281447e-05
    2. ' )' → logprob: -10.500048637390137
    3. '))' → logprob: -11.625048637390137
    4. '   ' → logprob: -12.375048637390137
    5. '}' → logprob: -12.750048637390137
    6. ')
' → logprob: -13.250048637390137
    7. ')}' → logprob: -13.375048637390137
    8. '})' → logprob: -14.250048637390137
    9. ')

' → logprob: -15.750048637390137
    10. ' ' → logprob: -16.25004768371582

Token 890: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3500850200653076
    2. '   ' → logprob: -1.8500850200653076
    3. ' for' → logprob: -2.2250850200653076
    4. 'step' → logprob: -4.850085258483887
    5. '    
' → logprob: -5.225085258483887
    6. '```' → logprob: -5.475085258483887
    7. 'next' → logprob: -6.100085258483887
    8. '	for' → logprob: -6.475085258483887
    9. 'n' → logprob: -6.850085258483887
    10. '
' → logprob: -6.975085258483887

Token 891: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.639585018157959
    2. '   ' → logprob: -0.764585018157959
    3. 'step' → logprob: -5.514585018157959
    4. 'foot' → logprob: -7.264585018157959
    5. '    
' → logprob: -7.264585018157959
    6. ' for' → logprob: -7.889585018157959
    7. 'next' → logprob: -8.014585494995117
    8. 'current' → logprob: -8.389585494995117
    9. '#' → logprob: -8.639585494995117
    10. 'left' → logprob: -8.889585494995117

Token 892: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002411446301266551
    2. '#' (adapté à ' #') → logprob: -7.002411365509033
    3. 'step' → logprob: -7.252411365509033
    4. 'current' → logprob: -8.377411842346191
    5. 'next' → logprob: -8.752411842346191
    6. 'foot' → logprob: -8.877411842346191
    7. 'left' → logprob: -9.002411842346191
    8. '   ' → logprob: -10.252411842346191
    9. 'is' → logprob: -10.752411842346191
    10. ' for' → logprob: -11.502411842346191

Token 893: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002957019954919815
    2. '#' → logprob: -7.127956867218018
    3. 'i' → logprob: -7.252956867218018
    4. '   ' → logprob: -7.752956867218018
    5. ' for' → logprob: -8.002957344055176
    6. 'idx' → logprob: -8.252957344055176
    7. 'step' → logprob: -8.752957344055176
    8. 'index' → logprob: -9.127957344055176
    9. 'current' → logprob: -10.502957344055176
    10. 'next' → logprob: -10.752957344055176

Token 894: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03257225081324577
    2. 'def' → logprob: -4.407572269439697
    3. ' for' → logprob: -4.907572269439697
    4. '#' → logprob: -5.407572269439697
    5. '=' → logprob: -5.532572269439697
    6. ' =' → logprob: -6.032572269439697
    7. 'n' → logprob: -8.282571792602539
    8. 'rem' → logprob: -8.657571792602539
    9. '   ' → logprob: -8.782571792602539
    10. 'i' → logprob: -8.907571792602539

Token 895: ' parcour' (ID: 130642)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5547659993171692
    2. ' for' → logprob: -1.9297659397125244
    3. ' iter' → logprob: -2.4297659397125244
    4. '   ' → logprob: -2.8047659397125244
    5. ' parcour' → logprob: -3.0547659397125244
    6. 'iter' → logprob: -4.3047661781311035
    7. 'process' → logprob: -4.3047661781311035
    8. ' continuer' → logprob: -4.5547661781311035
    9. 'range' → logprob: -4.8047661781311035
    10. ' ' → logprob: -4.8047661781311035

Token 896: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.01878996379673481
    2. 'er' → logprob: -4.018789768218994
    3. 're' → logprob: -7.768789768218994
    4. 'r' → logprob: -8.893790245056152
    5. 'rir' → logprob: -10.518790245056152
    6. 'rer' → logprob: -10.643790245056152
    7. 'ire' → logprob: -11.768790245056152
    8. '#' → logprob: -12.518790245056152
    9. '(' → logprob: -12.643790245056152
    10. '_ir' → logprob: -13.268790245056152

Token 897: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6101381182670593
    2. 'range' → logprob: -1.485138177871704
    3. ' i' → logprob: -2.735138177871704
    4. 'i' → logprob: -2.860138177871704
    5. ' la' → logprob: -3.360138177871704
    6. ' le' → logprob: -3.985138177871704
    7. ' for' → logprob: -4.360137939453125
    8. 'le' → logprob: -4.485137939453125
    9. 'score' → logprob: -4.735137939453125
    10. 'for' → logprob: -4.735137939453125

Token 898: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09455125778913498
    2. 'score' → logprob: -2.7195513248443604
    3. ' range' → logprob: -3.8445513248443604
    4. 'for' → logprob: -6.344551086425781
    5. ' for' → logprob: -8.094551086425781
    6. ' score' → logprob: -8.094551086425781
    7. 'i' → logprob: -8.594551086425781
    8. 'suite' → logprob: -9.094551086425781
    9. '1' → logprob: -9.844551086425781
    10. 'rest' → logprob: -10.344551086425781

Token 899: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0011833232128992677
    2. 'q' → logprob: -6.75118350982666
    3. 'score' → logprob: -12.12618350982666
    4. '#' → logprob: -13.00118350982666
    5. 'qu' → logprob: -13.62618350982666
    6. 'conde' → logprob: -14.00118350982666
    7. 'QUENCE' → logprob: -14.12618350982666
    8. 'rie' → logprob: -14.87618350982666
    9. 'quences' → logprob: -15.00118350982666
    10. 'que' → logprob: -15.00118350982666

Token 900: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33843374252319336
    2. 'for' → logprob: -1.3384337425231934
    3. '   ' → logprob: -4.088433742523193
    4. ',' → logprob: -5.588433742523193
    5. ' pour' → logprob: -6.088433742523193
    6. '	for' → logprob: -8.213434219360352
    7. ' i' → logprob: -8.463434219360352
    8. '
' → logprob: -8.713434219360352
    9. 's' → logprob: -8.713434219360352
    10. 'pour' → logprob: -8.713434219360352

Token 901: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.21514295041561127
    2. 'part' → logprob: -2.0901429653167725
    3. '1' → logprob: -2.8401429653167725
    4. 'i' → logprob: -5.340142726898193
    5. 'range' → logprob: -5.590142726898193
    6. 'from' → logprob: -6.090142726898193
    7. '#' → logprob: -8.340143203735352
    8. 'l' → logprob: -8.965143203735352
    9. 'for' → logprob: -9.090143203735352
    10. ' partire' → logprob: -9.465143203735352

Token 902: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35819771885871887
    2. '(' → logprob: -1.2331976890563965
    3. 'de' → logprob: -5.1081976890563965
    4. ' de' → logprob: -6.3581976890563965
    5. 'i' → logprob: -7.1081976890563965
    6. '   ' → logprob: -7.2331976890563965
    7. ' i' → logprob: -8.983198165893555
    8. 'for' → logprob: -9.608198165893555
    9. '#' → logprob: -9.983198165893555
    10. 'd' → logprob: -10.858198165893555

Token 903: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026470869779586792
    2. 'i' → logprob: -4.15147066116333
    3. 'l' → logprob: -4.90147066116333
    4. 'index' → logprob: -6.65147066116333
    5. ' ' → logprob: -7.27647066116333
    6. ' i' → logprob: -7.77647066116333
    7. ' index' → logprob: -8.901471138000488
    8. 'idx' → logprob: -9.151471138000488
    9. 'la' → logprob: -9.401471138000488
    10. '#' → logprob: -9.526471138000488

Token 904: ' seconde' (ID: 66204)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010235115041723475
    2. '2' → logprob: -9.875102043151855
    3. ' ' → logprob: -10.500102043151855
    4. 'index' → logprob: -11.500102043151855
    5. '```' → logprob: -12.000102043151855
    6. '   ' → logprob: -13.750102043151855
    7. '#' → logprob: -14.000102043151855
    8. 'token' → logprob: -14.000102043151855
    9. 'def' → logprob: -14.750102043151855
    10. 'idx' → logprob: -14.875102043151855

Token 905: ' fl' (ID: 1548)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1342061758041382
    2. 'for' → logprob: -1.2592061758041382
    3. ' for' → logprob: -1.6342061758041382
    4. ' i' → logprob: -1.8842061758041382
    5. ' ' → logprob: -5.759206295013428
    6. 'char' → logprob: -5.884206295013428
    7. '   ' → logprob: -5.884206295013428
    8. '#' → logprob: -5.884206295013428
    9. ' caractère' → logprob: -6.009206295013428
    10. ' index' → logprob: -6.134206295013428

Token 906: 'èche' (ID: 93804)
  Prédit: 'èche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èche' → logprob: -0.0003532198315951973
    2. 'è' → logprob: -8.50035285949707
    3. 'êche' → logprob: -9.00035285949707
    4. 'e' → logprob: -10.87535285949707
    5. 'é' → logprob: -12.75035285949707
    6. 'éch' → logprob: -13.75035285949707
    7. '#' → logprob: -14.25035285949707
    8. 'èque' → logprob: -14.50035285949707
    9. 'ève' → logprob: -14.75035285949707
    10. 'èvre' → logprob: -15.00035285949707

Token 907: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4737541973590851
    2. 'for' → logprob: -1.0987541675567627
    3. ' for' → logprob: -3.8487541675567627
    4. '
' → logprob: -4.348754405975342
    5. 'i' → logprob: -4.848754405975342
    6. '    
' → logprob: -6.473754405975342
    7. ' i' → logprob: -8.723753929138184
    8. ',' → logprob: -9.473753929138184
    9. 'idx' → logprob: -9.973753929138184
    10. '```' → logprob: -10.973753929138184

Token 908: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4965551197528839
    2. 'i' → logprob: -1.6215550899505615
    3. 'for' → logprob: -2.1215550899505615
    4. ' for' → logprob: -3.2465550899505615
    5. '   ' → logprob: -3.3715550899505615
    6. '	i' → logprob: -8.74655532836914
    7. '    
' → logprob: -9.24655532836914
    8. '1' → logprob: -9.49655532836914
    9. '	for' → logprob: -9.87155532836914
    10. '
' → logprob: -9.87155532836914

Token 909: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9296923875808716
    2. ' i' → logprob: -1.3046923875808716
    3. 'for' → logprob: -1.4296923875808716
    4. 'i' → logprob: -2.554692268371582
    5. '1' → logprob: -4.179692268371582
    6. '   ' → logprob: -7.304692268371582
    7. ' ' → logprob: -8.054692268371582
    8. ' pour' → logprob: -9.054692268371582
    9. ' index' → logprob: -9.304692268371582
    10. ' start' → logprob: -9.554692268371582

Token 910: ' en' (ID: 469)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.632563054561615
    2. 'for' → logprob: -0.882563054561615
    3. ' i' → logprob: -3.3825631141662598
    4. 'i' → logprob: -3.8825631141662598
    5. '   ' → logprob: -8.382562637329102
    6. 'range' → logprob: -9.507562637329102
    7. ' range' → logprob: -9.757562637329102
    8. '```' → logprob: -9.882562637329102
    9. '
' → logprob: -10.882562637329102
    10. 'index' → logprob: -11.507562637329102

Token 911: ' altern' (ID: 7310)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8803317546844482
    2. 'for' → logprob: -1.0053317546844482
    3. ' range' → logprob: -2.0053317546844482
    4. 'altern' → logprob: -3.6303317546844482
    5. ' for' → logprob: -3.7553317546844482
    6. ' altern' → logprob: -4.755331993103027
    7. 'comm' → logprob: -5.255331993103027
    8. 'enumer' → logprob: -5.505331993103027
    9. 'alternate' → logprob: -5.880331993103027
    10. 'consider' → logprob: -6.630331993103027

Token 912: 'ant' (ID: 493)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.018298136070370674
    2. 'ant' → logprob: -4.143298149108887
    3. 'ce' → logprob: -6.518298149108887
    4. '#' → logprob: -8.393298149108887
    5. 'e' → logprob: -9.143298149108887
    6. 'er' → logprob: -9.518298149108887
    7. '   ' → logprob: -9.643298149108887
    8. 'a' → logprob: -10.268298149108887
    9. 'ence' → logprob: -10.393298149108887
    10. 't' → logprob: -10.518298149108887

Token 913: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8104403614997864
    2. 'p' → logprob: -1.0604403018951416
    3. ' le' → logprob: -2.3104403018951416
    4. ' pied' → logprob: -2.3104403018951416
    5. 'la' → logprob: -6.185440540313721
    6. ' ' → logprob: -6.560440540313721
    7. 'foot' → logprob: -6.935440540313721
    8. ' ' → logprob: -7.435440540313721
    9. '#' → logprob: -7.685440540313721
    10. ' la' → logprob: -7.685440540313721

Token 914: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5046473145484924
    2. ' pied' → logprob: -1.0046472549438477
    3. 'foot' → logprob: -4.754647254943848
    4. 'pas' → logprob: -4.879647254943848
    5. ' pas' → logprob: -5.754647254943848
    6. ' pieds' → logprob: -6.379647254943848
    7. ' left' → logprob: -6.629647254943848
    8. 'g' → logprob: -6.879647254943848
    9. ' gauche' → logprob: -6.879647254943848
    10. 'left' → logprob: -7.129647254943848

Token 915: ' qui' (ID: 2780)
  Prédit: ' gauche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.5859287977218628
    2. 'g' → logprob: -1.5859287977218628
    3. ' à' → logprob: -2.3359289169311523
    4. 'for' → logprob: -3.0859289169311523
    5. ' utilisé' → logprob: -3.9609289169311523
    6. ' for' → logprob: -3.9609289169311523
    7. '   ' → logprob: -4.835928916931152
    8. 'à' → logprob: -5.210928916931152
    9. ' gau' → logprob: -5.460928916931152
    10. 'used' → logprob: -5.585928916931152

Token 916: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.6516885757446289
    2. 'do' → logprob: -0.9016885757446289
    3. ' doit' → logprob: -2.901688575744629
    4. 'mar' → logprob: -4.401688575744629
    5. 'p' → logprob: -7.026688575744629
    6. ' app' → logprob: -7.276688575744629
    7. 'dev' → logprob: -7.526688575744629
    8. 'press' → logprob: -7.651688575744629
    9. 'march' → logprob: -7.776688575744629
    10. 'va' → logprob: -7.901688575744629

Token 917: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.0005712636047974229
    2. 'ui' → logprob: -7.750571250915527
    3. 'u' → logprob: -9.375571250915527
    4. 'uye' → logprob: -9.875571250915527
    5. 'uit' → logprob: -13.250571250915527
    6. 'uya' → logprob: -14.375571250915527
    7. 'uy' → logprob: -14.500571250915527
    8. 'uire' → logprob: -15.125571250915527
    9. 'ue' → logprob: -15.500571250915527
    10. 'uis' → logprob: -15.500571250915527

Token 918: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.839686632156372
    2. 'for' → logprob: -1.839686632156372
    3. '   ' → logprob: -2.089686632156372
    4. ' for' → logprob: -2.214686632156372
    5. 'sur' → logprob: -2.214686632156372
    6. 'i' → logprob: -2.464686632156372
    7. ' sur' → logprob: -2.714686632156372
    8. ':' → logprob: -3.214686632156372
    9. ' i' → logprob: -3.464686632156372
    10. ' =' → logprob: -3.589686632156372

Token 919: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3193362057209015
    2. 'for' → logprob: -1.944336175918579
    3. ' i' → logprob: -2.444336175918579
    4. 'i' → logprob: -3.319336175918579
    5. '   ' → logprob: -6.069336414337158
    6. '
' → logprob: -6.444336414337158
    7. ' left' → logprob: -6.819336414337158
    8. '    
' → logprob: -7.319336414337158
    9. '```' → logprob: -8.0693359375
    10. 'left' → logprob: -8.3193359375

Token 920: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1937030404806137
    2. '1' → logprob: -2.6937029361724854
    3. 'i' → logprob: -2.8187029361724854
    4. 'range' → logprob: -3.8187029361724854
    5. ' for' → logprob: -3.9437029361724854
    6. 'right' → logprob: -6.3187031745910645
    7. ' i' → logprob: -6.4437031745910645
    8. ' range' → logprob: -6.5687031745910645
    9. 'g' → logprob: -6.8187031745910645
    10. 'left' → logprob: -7.4437031745910645

Token 921: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1171733140945435
    2. ' +' → logprob: -2.117173194885254
    3. '   ' → logprob: -2.242173194885254
    4. ' ==' → logprob: -2.367173194885254
    5. ' %' → logprob: -2.367173194885254
    6. ' ' → logprob: -3.367173194885254
    7. ' #' → logprob: -3.492173194885254
    8. ' if' → logprob: -3.492173194885254
    9. ')' → logprob: -3.617173194885254
    10. '+' → logprob: -3.742173194885254

Token 922: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8007189035415649
    2. ' gauche' → logprob: -1.425718903541565
    3. 'dro' → logprob: -2.8007187843322754
    4. 'p' → logprob: -3.0507187843322754
    5. 'left' → logprob: -3.3007187843322754
    6. ' droite' → logprob: -3.4257187843322754
    7. ' droit' → logprob: -3.6757187843322754
    8. 'd' → logprob: -3.9257187843322754
    9. '1' → logprob: -4.050718784332275
    10. ''g' → logprob: -4.300718784332275

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01675063744187355
    2. ' ,' → logprob: -4.766750812530518
    3. '   ' → logprob: -5.766750812530518
    4. ',
' → logprob: -6.516750812530518
    5. ')' → logprob: -7.016750812530518
    6. '
' → logprob: -7.266750812530518
    7. 'for' → logprob: -7.766750812530518
    8. ' ' → logprob: -8.01675033569336
    9. '#' → logprob: -8.14175033569336
    10. ' for' → logprob: -9.01675033569336

Token 924: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11351276934146881
    2. ' ' → logprob: -2.2385127544403076
    3. '   ' → logprob: -7.613512992858887
    4. ' i' → logprob: -9.488512992858887
    5. '  ' → logprob: -10.738512992858887
    6. ' #' → logprob: -10.738512992858887
    7. ' t' → logprob: -11.113512992858887
    8. '    ' → logprob: -11.238512992858887
    9. '
' → logprob: -11.863512992858887
    10. '#' → logprob: -11.863512992858887

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002259452361613512
    2. ' ' → logprob: -6.127259254455566
    3. '   ' → logprob: -10.252259254455566
    4. '#' → logprob: -11.002259254455566
    5. ' #' → logprob: -12.002259254455566
    6. '  ' → logprob: -12.252259254455566
    7. 'right' → logprob: -13.127259254455566
    8. '
' → logprob: -13.252259254455566
    9. '    ' → logprob: -13.627259254455566
    10. ' right' → logprob: -13.752259254455566

Token 926: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.04762304946780205
    2. '->' → logprob: -3.1726231575012207
    3. '=' → logprob: -6.172623157501221
    4. ' =' → logprob: -6.547623157501221
    5. ' =>' → logprob: -7.797623157501221
    6. '=>' → logprob: -8.047622680664062
    7. ' #' → logprob: -9.547622680664062
    8. '#' → logprob: -9.922622680664062
    9. ')' → logprob: -10.172622680664062
    10. ',' → logprob: -10.547622680664062

Token 927: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.43625175952911377
    2. 'd' → logprob: -1.5612517595291138
    3. ' droit' → logprob: -2.311251640319824
    4. ' droite' → logprob: -3.311251640319824
    5. 'right' → logprob: -5.311251640319824
    6. '1' → logprob: -6.561251640319824
    7. ' right' → logprob: -6.936251640319824
    8. ' dro' → logprob: -8.061251640319824
    9. ' ' → logprob: -8.186251640319824
    10. ' droits' → logprob: -10.061251640319824

Token 928: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3360653221607208
    2. ' for' → logprob: -2.0860652923583984
    3. 'for' → logprob: -2.5860652923583984
    4. '
' → logprob: -2.8360652923583984
    5. '    
' → logprob: -3.9610652923583984
    6. ',' → logprob: -5.461065292358398
    7. 'i' → logprob: -7.336065292358398
    8. ' i' → logprob: -7.461065292358398
    9. '  
' → logprob: -7.711065292358398
    10. '   
' → logprob: -7.836065292358398

Token 929: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8443295955657959
    2. 'for' → logprob: -1.469329595565796
    3. 'i' → logprob: -1.844329595565796
    4. ' i' → logprob: -1.969329595565796
    5. '   ' → logprob: -3.719329595565796
    6. '2' → logprob: -5.719329833984375
    7. '1' → logprob: -6.094329833984375
    8. '
' → logprob: -6.594329833984375
    9. ' ' → logprob: -6.844329833984375
    10. '#' → logprob: -6.844329833984375

Token 930: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1549321860074997
    2. 'for' → logprob: -3.1549322605133057
    3. ' for' → logprob: -3.4049322605133057
    4. 'i' → logprob: -3.7799322605133057
    5. ' i' → logprob: -4.404932022094727
    6. '0' → logprob: -4.529932022094727
    7. ' ' → logprob: -4.904932022094727
    8. '1' → logprob: -6.404932022094727
    9. 'range' → logprob: -6.404932022094727
    10. 'idx' → logprob: -6.654932022094727

Token 931: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.08667299151420593
    2. '->' → logprob: -3.0866730213165283
    3. ' #' → logprob: -4.711672782897949
    4. ',' → logprob: -4.711672782897949
    5. '#' → logprob: -4.836672782897949
    6. ')' → logprob: -6.211672782897949
    7. '   ' → logprob: -6.336672782897949
    8. ' %' → logprob: -6.336672782897949
    9. ' ' → logprob: -6.961672782897949
    10. '...' → logprob: -7.086672782897949

Token 932: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022624028846621513
    2. ' ' → logprob: -4.7726240158081055
    3. 'left' → logprob: -4.8976240158081055
    4. ' gauche' → logprob: -5.3976240158081055
    5. 'g' → logprob: -6.5226240158081055
    6. ' left' → logprob: -8.022624015808105
    7. '```' → logprob: -10.772624015808105
    8. '...' → logprob: -11.460124015808105
    9. '1' → logprob: -11.585124015808105
    10. 'False' → logprob: -11.897624015808105

Token 933: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7241028547286987
    2. ')' → logprob: -0.9741028547286987
    3. '<|end|>' → logprob: -2.9741029739379883
    4. '<|end|>' → logprob: -3.2241029739379883
    5. '   ' → logprob: -4.724102973937988
    6. ']' → logprob: -4.974102973937988
    7. '
' → logprob: -5.474102973937988
    8. '#' → logprob: -5.474102973937988
    9. ' ' → logprob: -6.099102973937988
    10. 'tokens' → logprob: -6.099102973937988

Token 934: ' etc' (ID: 5178)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.5127788782119751
    2. ' ' → logprob: -1.137778878211975
    3. '3' → logprob: -3.2627787590026855
    4. '#' → logprob: -3.8877787590026855
    5. '2' → logprob: -4.5127787590026855
    6. ' ...' → logprob: -5.3877787590026855
    7. ' #' → logprob: -5.6377787590026855
    8. '<|end|>' → logprob: -7.3877787590026855
    9. '…' → logprob: -7.8877787590026855
    10. ' etc' → logprob: -7.8877787590026855

Token 935: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25940197706222534
    2. '
' → logprob: -2.13440203666687
    3. ' for' → logprob: -2.88440203666687
    4. 'for' → logprob: -3.25940203666687
    5. '    
' → logprob: -4.384401798248291
    6. ' i' → logprob: -7.009401798248291
    7. ',' → logprob: -7.259401798248291
    8. 'i' → logprob: -8.00940227508545
    9. ')' → logprob: -8.38440227508545
    10. '\n' → logprob: -8.50940227508545

Token 936: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4810978174209595
    2. '   ' → logprob: -1.3560978174209595
    3. ' for' → logprob: -2.10609769821167
    4. 'i' → logprob: -6.73109769821167
    5. '
' → logprob: -7.48109769821167
    6. ' i' → logprob: -8.481098175048828
    7. '```' → logprob: -8.481098175048828
    8. '    
' → logprob: -8.856098175048828
    9. 'idx' → logprob: -10.106098175048828
    10. 'step' → logprob: -10.731098175048828

Token 937: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012618894688785076
    2. ' for' → logprob: -4.6376190185546875
    3. '   ' → logprob: -5.8876190185546875
    4. 'i' → logprob: -9.887619018554688
    5. '	for' → logprob: -11.387619018554688
    6. '```' → logprob: -11.387619018554688
    7. '
' → logprob: -12.012619018554688
    8. '    
' → logprob: -12.512619018554688
    9. ' i' → logprob: -14.137619018554688
    10. 'from' → logprob: -14.637619018554688

Token 938: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015140408650040627
    2. '   ' → logprob: -5.015140533447266
    3. ' for' → logprob: -5.015140533447266
    4. 'i' → logprob: -6.515140533447266
    5. '
' → logprob: -8.765140533447266
    6. '    
' → logprob: -9.515140533447266
    7. '```' → logprob: -10.640140533447266
    8. ' i' → logprob: -11.765140533447266
    9. 'idx' → logprob: -12.765140533447266
    10. '	for' → logprob: -13.015140533447266

Token 939: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13238154351711273
    2. ' for' → logprob: -2.1323814392089844
    3. '=' → logprob: -6.382381439208984
    4. ' =' → logprob: -7.007381439208984
    5. 'n' → logprob: -7.007381439208984
    6. '   ' → logprob: -7.382381439208984
    7. 'continue' → logprob: -8.132381439208984
    8. 'def' → logprob: -9.007381439208984
    9. 'range' → logprob: -9.007381439208984
    10. '#' → logprob: -9.257381439208984

Token 940: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.219878077507019
    2. '   ' → logprob: -1.344878077507019
    3. ' à' → logprob: -2.0948781967163086
    4. 'for' → logprob: -2.0948781967163086
    5. ' from' → logprob: -2.7198781967163086
    6. ' for' → logprob: -3.2198781967163086
    7. ' i' → logprob: -3.3448781967163086
    8. '=' → logprob: -4.094878196716309
    9. 'i' → logprob: -4.344878196716309
    10. ' par' → logprob: -5.344878196716309

Token 941: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1533435583114624
    2. 'i' → logprob: -2.153343677520752
    3. 'index' → logprob: -4.028343677520752
    4. 'range' → logprob: -6.278343677520752
    5. ' index' → logprob: -6.403343677520752
    6. ' ' → logprob: -6.403343677520752
    7. ' i' → logprob: -6.653343677520752
    8. 'l' → logprob: -7.278343677520752
    9. 'idx' → logprob: -7.653343677520752
    10. 'indice' → logprob: -8.153343200683594

Token 942: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741203784942627
    2. ' =' → logprob: -0.9741203784942627
    3. '1' → logprob: -10.599120140075684
    4. ' ' → logprob: -11.974120140075684
    5. ' +=' → logprob: -12.849120140075684
    6. '0' → logprob: -13.224120140075684
    7. '=
' → logprob: -13.974120140075684
    8. '_' → logprob: -14.099120140075684
    9. ' =
' → logprob: -14.224120140075684
    10. 'n' → logprob: -14.349120140075684

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.625000953674316
    3. '2' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.125001907348633
    6. '`' → logprob: -18.500001907348633
    7. '0' → logprob: -20.250001907348633
    8. '>' → logprob: -20.250001907348633
    9. '``' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.875001907348633

Token 944: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04798432067036629
    2. 'for' → logprob: -3.7979843616485596
    3. '
' → logprob: -4.7979841232299805
    4. ' for' → logprob: -4.7979841232299805
    5. '    
' → logprob: -5.2979841232299805
    6. 'i' → logprob: -6.1729841232299805
    7. ' i' → logprob: -7.6729841232299805
    8. '```' → logprob: -9.04798412322998
    9. ',' → logprob: -9.54798412322998
    10. ')' → logprob: -10.29798412322998

Token 945: ' pied' (ID: 20242)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5172059535980225
    2. ' while' → logprob: -2.0172059535980225
    3. '   ' → logprob: -2.2672059535980225
    4. ' i' → logprob: -2.5172059535980225
    5. 'for' → logprob: -3.6422059535980225
    6. ' step' → logprob: -3.7672059535980225
    7. 'i' → logprob: -4.767206192016602
    8. 'while' → logprob: -5.142206192016602
    9. 'foot' → logprob: -5.267206192016602
    10. ' foot' → logprob: -5.392206192016602

Token 946: ' droit' (ID: 29964)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.136783242225647
    2. '_' → logprob: -1.261783242225647
    3. '_g' → logprob: -1.386783242225647
    4. ' =' → logprob: -2.5117831230163574
    5. ' gauche' → logprob: -3.6367831230163574
    6. ' droit' → logprob: -5.011783123016357
    7. 'g' → logprob: -5.136783123016357
    8. '=' → logprob: -5.261783123016357
    9. 'dro' → logprob: -5.386783123016357
    10. '_left' → logprob: -5.761783123016357

Token 947: ' doit' (ID: 21822)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.526404082775116
    2. '
' → logprob: -1.9014041423797607
    3. 'for' → logprob: -2.1514041423797607
    4. ' for' → logprob: -2.9014041423797607
    5. '    
' → logprob: -4.026403903961182
    6. ':' → logprob: -4.526403903961182
    7. ' ' → logprob: -4.526403903961182
    8. ':
' → logprob: -4.776403903961182
    9. '  
' → logprob: -4.776403903961182
    10. ',' → logprob: -5.401403903961182

Token 948: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03650825098156929
    2. ' app' → logprob: -3.536508321762085
    3. 'press' → logprob: -6.411508083343506
    4. ''app' → logprob: -6.786508083343506
    5. 'march' → logprob: -7.161508083343506
    6. 'ap' → logprob: -7.286508083343506
    7. ' marcher' → logprob: -8.036508560180664
    8. 'p' → logprob: -8.036508560180664
    9. 'pres' → logprob: -8.286508560180664
    10. '_app' → logprob: -8.536508560180664

Token 949: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.0006031917873769999
    2. 'ui' → logprob: -8.750602722167969
    3. 'uy' → logprob: -8.750602722167969
    4. 'u' → logprob: -9.250602722167969
    5. 'uye' → logprob: -9.250602722167969
    6. 'oyer' → logprob: -10.375602722167969
    7. 'uer' → logprob: -11.375602722167969
    8. 'ly' → logprob: -11.375602722167969
    9. 'uie' → logprob: -12.125602722167969
    10. 'uire' → logprob: -12.125602722167969

Token 950: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3982956111431122
    2. '
' → logprob: -1.8982956409454346
    3. ' for' → logprob: -2.5232956409454346
    4. ':' → logprob: -3.1482956409454346
    5. 'for' → logprob: -3.8982956409454346
    6. '    
' → logprob: -4.2732954025268555
    7. ' i' → logprob: -5.6482954025268555
    8. ')' → logprob: -5.7732954025268555
    9. ':
' → logprob: -5.8982954025268555
    10. '  
' → logprob: -6.0232954025268555

Token 951: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047424230724573135
    2. ' )' → logprob: -3.29742431640625
    3. ' i' → logprob: -5.92242431640625
    4. '1' → logprob: -6.17242431640625
    5. 'i' → logprob: -6.79742431640625
    6. ' =' → logprob: -7.04742431640625
    7. '=' → logprob: -7.17242431640625
    8. '):' → logprob: -7.17242431640625
    9. ' ' → logprob: -8.04742431640625
    10. ')i' → logprob: -8.29742431640625

Token 952: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2349727600812912
    2. ' =' → logprob: -2.2349727153778076
    3. ' ==' → logprob: -2.6099727153778076
    4. ')' → logprob: -4.234972953796387
    5. '==' → logprob: -4.609972953796387
    6. '%' → logprob: -6.109972953796387
    7. ' %' → logprob: -7.234972953796387
    8. '   ' → logprob: -7.734972953796387
    9. ' )' → logprob: -8.484972953796387
    10. ')=' → logprob: -8.609972953796387

Token 953: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02164573408663273
    2. ' ' → logprob: -4.521645545959473
    3. '=' → logprob: -5.021645545959473
    4. ' odd' → logprob: -6.396645545959473
    5. ' impair' → logprob: -7.146645545959473
    6. 'odd' → logprob: -7.271645545959473
    7. ' pair' → logprob: -8.521645545959473
    8. 'imp' → logprob: -9.021645545959473
    9. ' =' → logprob: -9.021645545959473
    10. ' imp' → logprob: -9.146645545959473

Token 954: ' position' (ID: 4010)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3400544822216034
    2. 'next' → logprob: -2.215054512023926
    3. '1' → logprob: -2.340054512023926
    4. ' ' → logprob: -3.465054512023926
    5. ')' → logprob: -3.965054512023926
    6. ' )' → logprob: -5.215054512023926
    7. ' token' → logprob: -5.840054512023926
    8. 'n' → logprob: -5.965054512023926
    9. 'token' → logprob: -5.965054512023926
    10. 'space' → logprob: -6.215054512023926

Token 955: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46404772996902466
    2. ')' → logprob: -2.08904767036438
    3. '1' → logprob: -2.58904767036438
    4. ' =' → logprob: -3.08904767036438
    5. '+' → logprob: -3.46404767036438
    6. ' +' → logprob: -3.58904767036438
    7. ' suivante' → logprob: -4.589047908782959
    8. ' i' → logprob: -4.964047908782959
    9. ' de' → logprob: -4.964047908782959
    10. ',' → logprob: -5.089047908782959

Token 956: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0517892986536026
    2. 'la' → logprob: -3.4267892837524414
    3. 'le' → logprob: -4.801789283752441
    4. ' score' → logprob: -5.301789283752441
    5. ' la' → logprob: -6.051789283752441
    6. 'code' → logprob: -6.676789283752441
    7. 'l' → logprob: -7.551789283752441
    8. ' le' → logprob: -8.676789283752441
    9. 'the' → logprob: -9.051789283752441
    10. '(score' → logprob: -9.051789283752441

Token 957: ' chaîne' (ID: 89288)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.10058986395597458
    2. 'sequence' → logprob: -3.2255897521972656
    3. 'chaine' → logprob: -3.4755897521972656
    4. 'string' → logprob: -4.350589752197266
    5. ' score' → logprob: -5.350589752197266
    6. 'code' → logprob: -5.725589752197266
    7. ' sequence' → logprob: -6.475589752197266
    8. ' chaîne' → logprob: -6.850589752197266
    9. ' string' → logprob: -8.100589752197266
    10. 'sé' → logprob: -8.475589752197266

Token 958: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015285399742424488
    2. '):' → logprob: -4.515285491943359
    3. '[' → logprob: -6.515285491943359
    4. ' )' → logprob: -6.765285491943359
    5. ',' → logprob: -7.390285491943359
    6. ':' → logprob: -8.51528549194336
    7. '   ' → logprob: -9.01528549194336
    8. '=' → logprob: -9.26528549194336
    9. '):
' → logprob: -9.26528549194336
    10. '```' → logprob: -9.39028549194336

Token 959: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3372941315174103
    2. ' for' → logprob: -1.587294101715088
    3. 'for' → logprob: -2.962294101715088
    4. '
' → logprob: -4.087294101715088
    5. 'i' → logprob: -5.337294101715088
    6. ' i' → logprob: -5.462294101715088
    7. '    
' → logprob: -5.962294101715088
    8. '	for' → logprob: -8.087294578552246
    9. '  
' → logprob: -8.587294578552246
    10. 'def' → logprob: -8.962294578552246

Token 960: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42503777146339417
    2. '   ' → logprob: -1.1750377416610718
    3. ' for' → logprob: -3.4250378608703613
    4. '
' → logprob: -5.550037860870361
    5. 'i' → logprob: -7.175037860870361
    6. '    
' → logprob: -8.925037384033203
    7. '```' → logprob: -9.550037384033203
    8. ' i' → logprob: -10.925037384033203
    9. '	for' → logprob: -11.175037384033203
    10. 'def' → logprob: -13.175037384033203

Token 961: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6326640844345093
    2. ' i' → logprob: -0.7576640844345093
    3. ' ' → logprob: -10.63266372680664
    4. '   ' → logprob: -10.88266372680664
    5. '1' → logprob: -12.38266372680664
    6. '```' → logprob: -12.38266372680664
    7. ' in' → logprob: -12.88266372680664
    8. '	i' → logprob: -13.25766372680664
    9. 'score' → logprob: -13.38266372680664
    10. '  ' → logprob: -13.50766372680664

Token 962: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008647660724818707
    2. 'in' → logprob: -4.758647441864014
    3. ' ' → logprob: -11.258647918701172
    4. ',' → logprob: -11.383647918701172
    5. ')' → logprob: -13.133647918701172
    6. '	in' → logprob: -13.258647918701172
    7. '1' → logprob: -13.508647918701172
    8. '   ' → logprob: -14.258647918701172
    9. ' i' → logprob: -14.383647918701172
    10. '=' → logprob: -15.008647918701172

Token 963: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16030344367027283
    2. ' range' → logprob: -1.9103034734725952
    3. '1' → logprob: -9.535303115844727
    4. ' ' → logprob: -12.035303115844727
    5. '(range' → logprob: -14.535303115844727
    6. '   ' → logprob: -15.535303115844727
    7. '	range' → logprob: -16.160303115844727
    8. '(' → logprob: -16.285303115844727
    9. '```' → logprob: -16.285303115844727
    10. ' in' → logprob: -16.785303115844727

Token 964: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011874916963279247
    2. '1' → logprob: -6.751187324523926
    3. ' (' → logprob: -11.126187324523926
    4. '(
' → logprob: -13.376187324523926
    5. ' ' → logprob: -14.251187324523926
    6. '   ' → logprob: -15.126187324523926
    7. ',' → logprob: -17.251188278198242
    8. ')' → logprob: -17.501188278198242
    9. '#' → logprob: -18.126188278198242
    10. '```' → logprob: -19.251188278198242

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.00000762939453
    4. 'len' → logprob: -18.12500762939453
    5. '```' → logprob: -20.12500762939453
    6. ')' → logprob: -20.87500762939453
    7. '2' → logprob: -21.12500762939453
    8. '  ' → logprob: -21.25000762939453
    9. '(' → logprob: -21.25000762939453
    10. '       ' → logprob: -21.50000762939453

Token 966: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008205882040783763
    2. ' ,' → logprob: -7.875820636749268
    3. ',len' → logprob: -8.00082015991211
    4. ',n' → logprob: -9.25082015991211
    5. '   ' → logprob: -12.00082015991211
    6. ',length' → logprob: -14.12582015991211
    7. 'n' → logprob: -14.37582015991211
    8. '(len' → logprob: -14.62582015991211
    9. 'len' → logprob: -15.00082015991211
    10. ',
' → logprob: -15.25082015991211

Token 967: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31897494196891785
    2. '):' → logprob: -1.3189749717712402
    3. '   ' → logprob: -5.31897497177124
    4. ',' → logprob: -7.81897497177124
    5. ':' → logprob: -8.443974494934082
    6. '):
' → logprob: -9.193974494934082
    7. '+' → logprob: -11.318974494934082
    8. ')' → logprob: -11.568974494934082
    9. ' ):
' → logprob: -11.568974494934082
    10. ' ):' → logprob: -11.568974494934082

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01164516806602478
    2. '   ' → logprob: -4.511645317077637
    3. ' next' → logprob: -8.511645317077637
    4. 'token' → logprob: -9.261645317077637
    5. 'next' → logprob: -9.261645317077637
    6. '        
' → logprob: -10.011645317077637
    7. '    
' → logprob: -11.011645317077637
    8. ' token' → logprob: -11.261645317077637
    9. ',' → logprob: -11.386645317077637
    10. '    ' → logprob: -11.636645317077637

Token 969: ' current' (ID: 2208)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.17946839332580566
    2. '   ' → logprob: -2.5544683933258057
    3. 'new' → logprob: -3.0544683933258057
    4. 'current' (adapté à ' current') → logprob: -4.179468154907227
    5. 'cur' → logprob: -4.304468154907227
    6. 'curr' → logprob: -5.054468154907227
    7. 'panel' → logprob: -6.679468154907227
    8. 'c' → logprob: -6.929468154907227
    9. ' next' → logprob: -7.304468154907227
    10. 'foot' → logprob: -7.929468154907227

Token 970: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.016179239377379417
    2. '_score' → logprob: -4.891179084777832
    3. '_p' → logprob: -5.641179084777832
    4. '_char' → logprob: -6.141179084777832
    5. '_' → logprob: -7.016179084777832
    6. '_arrow' → logprob: -7.391179084777832
    7. '_step' → logprob: -7.516179084777832
    8. '_pan' → logprob: -8.016179084777832
    9. '_pos' → logprob: -9.141179084777832
    10. ' =' → logprob: -9.766179084777832

Token 971: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740781784057617
    2. ' =' → logprob: -0.9740781784057617
    3. '_panel' → logprob: -14.849078178405762
    4. ' ' → logprob: -15.349078178405762
    5. ' panel' → logprob: -15.474078178405762
    6. 'panel' → logprob: -16.099079132080078
    7. '=
' → logprob: -16.599079132080078
    8. '   ' → logprob: -16.599079132080078
    9. '=int' → logprob: -16.849079132080078
    10. '(panel' → logprob: -17.099079132080078

Token 972: ' panel' (ID: 10408)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.0160358939319849
    2. ' panel' → logprob: -4.141036033630371
    3. 'pan' → logprob: -14.266036033630371
    4. 'score' → logprob: -14.641036033630371
    5. '	panel' → logprob: -15.766036033630371
    6. ' ' → logprob: -16.141035079956055
    7. '(panel' → logprob: -16.766035079956055
    8. '   ' → logprob: -17.016035079956055
    9. 'board' → logprob: -17.266035079956055
    10. 'pane' → logprob: -17.266035079956055

Token 973: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.76759916334413e-05
    2. ' =' → logprob: -10.500077247619629
    3. 'to' → logprob: -10.750077247619629
    4. '_num' → logprob: -11.875077247619629
    5. 'num' → logprob: -11.875077247619629
    6. '=' → logprob: -12.500077247619629
    7. 'To' → logprob: -13.375077247619629
    8. '   ' → logprob: -13.375077247619629
    9. '_scores' → logprob: -13.500077247619629
    10. 'score' → logprob: -14.000077247619629

Token 974: '_num' (ID: 9834)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01843167468905449
    2. '_num' → logprob: -4.018431663513184
    3. 'score' → logprob: -8.768431663513184
    4. 'panel' → logprob: -9.518431663513184
    5. 'user' → logprob: -10.643431663513184
    6. ' num' → logprob: -11.393431663513184
    7. '_score' → logprob: -12.018431663513184
    8. '{' → logprob: -13.143431663513184
    9. 'sys' → logprob: -13.268431663513184
    10. '_code' → logprob: -13.393431663513184

Token 975: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000344044849043712
    2. 'score' → logprob: -8.000344276428223
    3. '(score' → logprob: -11.750344276428223
    4. ' score' → logprob: -15.250344276428223
    5. '	score' → logprob: -16.375343322753906
    6. '   ' → logprob: -16.375343322753906
    7. 'Score' → logprob: -16.625343322753906
    8. '[
' → logprob: -17.000343322753906
    9. ' [' → logprob: -17.125343322753906
    10. '       ' → logprob: -17.750343322753906

Token 976: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -3.810037742368877e-05
    2. ' score' → logprob: -10.875038146972656
    3. '[' → logprob: -11.000038146972656
    4. '(score' → logprob: -13.000038146972656
    5. 'code' → logprob: -16.625038146972656
    6. '	score' → logprob: -16.875038146972656
    7. '
' → logprob: -17.750038146972656
    8. '   ' → logprob: -18.000038146972656
    9. ' ' → logprob: -18.125038146972656
    10. '[
' → logprob: -19.375038146972656

Token 977: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.492120155598968e-05
    2. '[' → logprob: -10.125064849853516
    3. ']' → logprob: -11.250064849853516
    4. 'i' → logprob: -12.500064849853516
    5. '[
' → logprob: -12.625064849853516
    6. ' [' → logprob: -13.500064849853516
    7. '
' → logprob: -13.625064849853516
    8. '][' → logprob: -14.375064849853516
    9. '[I' → logprob: -14.875064849853516
    10. '{i' → logprob: -15.250064849853516

Token 978: ']]
' (ID: 29446)
  Prédit: ']]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]
' → logprob: -0.3323327898979187
    2. ']]' → logprob: -1.4573328495025635
    3. ']' → logprob: -3.3323328495025635
    4. ')]' → logprob: -4.957332611083984
    5. ')]
' → logprob: -5.707332611083984
    6. '       ' → logprob: -6.832332611083984
    7. ']]

' → logprob: -7.332332611083984
    8. ']
' → logprob: -7.582332611083984
    9. '   ' → logprob: -8.082332611083984
    10. '])' → logprob: -8.582332611083984

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07727665454149246
    2. '        
' → logprob: -3.3272767066955566
    3. 'next' → logprob: -3.9522767066955566
    4. ' next' → logprob: -4.327276706695557
    5. ' new' → logprob: -6.077276706695557
    6. 'new' → logprob: -6.327276706695557
    7. '
' → logprob: -7.077276706695557
    8. '   ' → logprob: -8.577276229858398
    9. ' states' → logprob: -8.702276229858398
    10. 'Next' → logprob: -9.202276229858398

Token 980: ' new' (ID: 620)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.15036644041538239
    2. 'new' (adapté à ' new') → logprob: -2.0253665447235107
    3. '       ' → logprob: -4.900366306304932
    4. ' next' → logprob: -8.77536678314209
    5. ' new' → logprob: -10.77536678314209
    6. '        
' → logprob: -11.52536678314209
    7. '#' → logprob: -12.02536678314209
    8. 'is' → logprob: -12.02536678314209
    9. 'nou' → logprob: -12.65036678314209
    10. '   ' → logprob: -12.77536678314209

Token 981: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00023929782037157565
    2. 'states' → logprob: -8.375239372253418
    3. '_' → logprob: -12.375239372253418
    4. ' states' → logprob: -13.000239372253418
    5. '_tokens' → logprob: -13.875239372253418
    6. '_state' → logprob: -15.250239372253418
    7. ' _' → logprob: -15.500239372253418
    8. '_positions' → logprob: -15.500239372253418
    9. 'States' → logprob: -15.875239372253418
    10. '_s' → logprob: -16.1252384185791

Token 982: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889948040246964
    2. '=' → logprob: -2.578899383544922
    3. '=set' → logprob: -11.578899383544922
    4. ' ' → logprob: -16.078899383544922
    5. '   ' → logprob: -16.453899383544922
    6. 'set' → logprob: -17.453899383544922
    7. ' set' → logprob: -17.578899383544922
    8. '    ' → logprob: -18.078899383544922
    9. '={}' → logprob: -18.078899383544922
    10. ')' → logprob: -18.203899383544922

Token 983: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011048170737922192
    2. ' set' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.01104736328125
    4. '	set' → logprob: -16.26104736328125
    5. '=set' → logprob: -16.26104736328125
    6. '(set' → logprob: -16.88604736328125
    7. ' ' → logprob: -18.01104736328125
    8. '{}' → logprob: -18.38604736328125
    9. '{' → logprob: -18.51104736328125
    10. '       ' → logprob: -18.63604736328125

Token 984: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.16029368340969086
    2. '()' → logprob: -1.910293698310852
    3. '       ' → logprob: -10.535293579101562
    4. '()
' → logprob: -10.660293579101562
    5. '()

' → logprob: -10.910293579101562
    6. '()\' → logprob: -14.410293579101562
    7. '(' → logprob: -16.035293579101562
    8. '():
' → logprob: -16.160293579101562
    9. ' ()
' → logprob: -16.410293579101562
    10. '        
' → logprob: -16.410293579101562

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003466786816716194
    2. '        
' → logprob: -6.628466606140137
    3. '
' → logprob: -7.003466606140137
    4. '   ' → logprob: -7.628466606140137
    5. ' for' → logprob: -7.878466606140137
    6. 'for' → logprob: -8.128466606140137
    7. '    
' → logprob: -11.128466606140137
    8. '	' → logprob: -11.753466606140137
    9. '		
' → logprob: -11.878466606140137
    10. '  
' → logprob: -12.003466606140137

Token 986: ' foot' (ID: 6428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8835351467132568
    2. 'foot' (adapté à ' foot') → logprob: -1.7585351467132568
    3. 'step' → logprob: -1.7585351467132568
    4. '       ' → logprob: -2.008535146713257
    5. 'for' → logprob: -3.258535146713257
    6. 'is' → logprob: -3.758535146713257
    7. 'left' → logprob: -4.008535385131836
    8. 'current' → logprob: -4.258535385131836
    9. '#' → logprob: -4.758535385131836
    10. 'turn' → logprob: -7.258535385131836

Token 987: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16321292519569397
    2. '=' → logprob: -1.9132128953933716
    3. '_to' → logprob: -5.913212776184082
    4. '_side' → logprob: -8.788212776184082
    5. '_' → logprob: -9.663212776184082
    6. 'to' → logprob: -10.538212776184082
    7. '=_' → logprob: -12.663212776184082
    8. '_turn' → logprob: -12.663212776184082
    9. '=i' → logprob: -12.788212776184082
    10. '_on' → logprob: -12.788212776184082

Token 988: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46072033047676086
    2. '1' → logprob: -1.0857203006744385
    3. ' i' → logprob: -3.9607203006744385
    4. '(i' → logprob: -4.835720539093018
    5. ' ' → logprob: -6.585720539093018
    6. ''i' → logprob: -6.585720539093018
    7. ''' → logprob: -7.460720539093018
    8. ' (' → logprob: -7.710720539093018
    9. '0' → logprob: -8.08572006225586
    10. '('' → logprob: -9.08572006225586

Token 989: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38689517974853516
    2. ' %' → logprob: -1.1368951797485352
    3. ' ' → logprob: -10.886895179748535
    4. '   ' → logprob: -12.761895179748535
    5. ' ' → logprob: -14.011895179748535
    6. '	' → logprob: -15.511895179748535
    7. '
' → logprob: -15.511895179748535
    8. '&' → logprob: -15.636895179748535
    9. '  ' → logprob: -15.636895179748535
    10. '```' → logprob: -15.636895179748535

Token 990: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.00001335144043
    4. '```' → logprob: -18.62501335144043
    5. '۲' → logprob: -19.50001335144043
    6. '  ' → logprob: -20.25001335144043
    7. '२' → logprob: -20.75001335144043
    8. '২' → logprob: -21.37501335144043
    9. '２' → logprob: -21.50001335144043
    10. '=' → logprob: -21.93751335144043

Token 991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '۲' → logprob: -19.125001907348633
    6. '२' → logprob: -20.250001907348633
    7. '২' → logprob: -20.750001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '=' → logprob: -21.250001907348633
    10. '٢' → logprob: -21.562501907348633

Token 992: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01467533502727747
    2. '
' → logprob: -5.514675140380859
    3. '        
' → logprob: -5.514675140380859
    4. '<|end|>' → logprob: -5.639675140380859
    5. '		
' → logprob: -7.264675140380859
    6. '<|end|>' → logprob: -7.639675140380859
    7. '	' → logprob: -8.01467514038086
    8. ' if' → logprob: -8.38967514038086
    9. ' for' → logprob: -8.51467514038086
    10. '=' → logprob: -8.76467514038086

Token 993: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5350388288497925
    2. '
' → logprob: -1.7850388288497925
    3. '       ' → logprob: -1.7850388288497925
    4. '<|end|>' → logprob: -1.9100388288497925
    5. ' ' → logprob: -3.035038948059082
    6. '        
' → logprob: -3.160038948059082
    7. '		
' → logprob: -3.285038948059082
    8. '<|end|>' → logprob: -3.535038948059082
    9. '  
' → logprob: -3.785038948059082
    10. ' =' → logprob: -3.785038948059082

Token 994: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. 'foot' → logprob: -11.75001335144043
    3. ' ' → logprob: -12.50001335144043
    4. '0' → logprob: -13.75001335144043
    5. '(' → logprob: -15.25001335144043
    6. '(i' → logprob: -16.62501335144043
    7. ' (' → logprob: -17.50001335144043
    8. '#' → logprob: -17.75001335144043
    9. '```' → logprob: -17.87501335144043
    10. '   ' → logprob: -17.87501335144043

Token 995: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '#' → logprob: -17.25
    4. 'foot' → logprob: -18.375
    5. '0' → logprob: -18.75
    6. '(' → logprob: -19.375
    7. '   ' → logprob: -19.6875
    8. '
' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '`' → logprob: -20.0

Token 996: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 997: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027610961347818375
    2. '1' → logprob: -3.902611017227173
    3. ' ' → logprob: -5.277610778808594
    4. 'left' → logprob: -6.777610778808594
    5. 'g' → logprob: -7.402610778808594
    6. ' gauche' → logprob: -8.902610778808594
    7. ' left' → logprob: -10.152610778808594
    8. ''g' → logprob: -12.777610778808594
    9. '(left' → logprob: -13.152610778808594
    10. 'LEFT' → logprob: -13.527610778808594

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013654474169015884
    2. ' ,' → logprob: -4.888654708862305
    3. '<|end|>' → logprob: -5.763654708862305
    4. '<|end|>' → logprob: -6.888654708862305
    5. ' ' → logprob: -7.013654708862305
    6. '1' → logprob: -8.138654708862305
    7. ' #' → logprob: -8.138654708862305
    8. '#' → logprob: -8.638654708862305
    9. '   ' → logprob: -10.013654708862305
    10. ')' → logprob: -10.263654708862305

Token 999: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048637207597494125
    2. ' ' → logprob: -3.0486371517181396
    3. ' right' → logprob: -10.923637390136719
    4. ' droit' → logprob: -11.048637390136719
    5. ' droite' → logprob: -11.798637390136719
    6. 'right' → logprob: -12.423637390136719
    7. 'd' → logprob: -12.798637390136719
    8. 'dro' → logprob: -14.048637390136719
    9. ' #' → logprob: -15.548637390136719
    10. 'foot' → logprob: -15.923637390136719

Token 1000: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. 'foot' → logprob: -16.750295639038086
    4. '   ' → logprob: -17.875295639038086
    5. '  ' → logprob: -19.375295639038086
    6. '#' → logprob: -19.750295639038086
    7. 'd' → logprob: -20.000295639038086
    8. '```' → logprob: -20.125295639038086
    9. 'right' → logprob: -20.750295639038086
    10. ' #' → logprob: -20.750295639038086

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026348141953349113
    2. ' =' → logprob: -3.651348114013672
    3. ')' → logprob: -10.276348114013672
    4. '==' → logprob: -12.526348114013672
    5. '<|end|>' → logprob: -12.651348114013672
    6. '=d' → logprob: -13.276348114013672
    7. ' ==' → logprob: -13.776348114013672
    8. '='' → logprob: -13.776348114013672
    9. '=int' → logprob: -14.526348114013672
    10. '=}' → logprob: -14.526348114013672

Token 1002: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.2007395476102829
    2. '1' → logprob: -2.575739622116089
    3. 'd' → logprob: -2.575739622116089
    4. ' droite' → logprob: -3.700739622116089
    5. ' droit' → logprob: -5.70073938369751
    6. 'right' → logprob: -6.82573938369751
    7. ' ' → logprob: -7.95073938369751
    8. ' right' → logprob: -9.200739860534668
    9. ' dro' → logprob: -9.825739860534668
    10. '	d' → logprob: -11.575739860534668

Token 1003: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1004: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05296401306986809
    2. 'for' → logprob: -3.177963972091675
    3. ' for' → logprob: -5.052964210510254
    4. 'if' → logprob: -5.927964210510254
    5. '   ' → logprob: -7.552964210510254
    6. '        
' → logprob: -8.552964210510254
    7. ' if' → logprob: -9.177964210510254
    8. '
' → logprob: -11.427964210510254
    9. '#' → logprob: -12.177964210510254
    10. ' ' → logprob: -12.427964210510254

Token 1005: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16376645863056183
    2. 'if' → logprob: -1.9137665033340454
    3. '       ' → logprob: -5.663766384124756
    4. ' for' → logprob: -10.038766860961914
    5. 'prev' → logprob: -11.538766860961914
    6. '#' → logprob: -12.163766860961914
    7. ' if' → logprob: -12.288766860961914
    8. '   ' → logprob: -13.663766860961914
    9. 'previous' → logprob: -14.413766860961914
    10. '        
' → logprob: -14.913766860961914

Token 1006: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.07724134624004364
    2. 'pos' → logprob: -2.7022414207458496
    3. 'state' → logprob: -6.20224142074585
    4. '(' → logprob: -6.57724142074585
    5. '(state' → logprob: -6.57724142074585
    6. ' (' → logprob: -7.07724142074585
    7. ' pos' → logprob: -7.45224142074585
    8. '(g' → logprob: -8.452240943908691
    9. '(l' → logprob: -8.452240943908691
    10. '(s' → logprob: -8.702240943908691

Token 1007: 'lg' (ID: 15632)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06958500295877457
    2. 'g' → logprob: -2.819585084915161
    3. 'pg' → logprob: -5.819584846496582
    4. 'lg' → logprob: -5.819584846496582
    5. 'left' → logprob: -6.819584846496582
    6. 'gl' → logprob: -8.319584846496582
    7. 'pl' → logprob: -9.069584846496582
    8. 'p' → logprob: -9.569584846496582
    9. 'l' → logprob: -10.069584846496582
    10. ' pos' → logprob: -10.694584846496582

Token 1008: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015243847854435444
    2. ',pos' → logprob: -4.265244007110596
    3. '_pos' → logprob: -8.140243530273438
    4. ',l' → logprob: -8.640243530273438
    5. ',p' → logprob: -8.765243530273438
    6. 'pos' → logprob: -9.015243530273438
    7. ',g' → logprob: -9.140243530273438
    8. ',left' → logprob: -9.265243530273438
    9. ' ,' → logprob: -9.515243530273438
    10. ',current' → logprob: -11.640243530273438

Token 1009: ' ld' (ID: 54008)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.050922881811857224
    2. 'rd' → logprob: -3.1759228706359863
    3. 'ld' → logprob: -5.050922870635986
    4. 'dr' → logprob: -6.675922870635986
    5. ' rg' → logprob: -9.175923347473145
    6. 'dg' → logprob: -9.675923347473145
    7. ' rd' → logprob: -10.675923347473145
    8. 'dp' → logprob: -11.800923347473145
    9. '   ' → logprob: -12.300923347473145
    10. 'lr' → logprob: -12.300923347473145

Token 1010: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005034659989178181
    2. '),' → logprob: -7.8755035400390625
    3. ' )' → logprob: -9.250503540039062
    4. ')
' → logprob: -11.125503540039062
    5. ' in' → logprob: -12.625503540039062
    6. ',)' → logprob: -12.750503540039062
    7. '):
' → logprob: -13.625503540039062
    8. ')=' → logprob: -13.875503540039062
    9. ')=>' → logprob: -14.250503540039062
    10. ')==' → logprob: -14.500503540039062

Token 1011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03383621945977211
    2. 'in' → logprob: -3.4088361263275146
    3. ',' → logprob: -8.783836364746094
    4. '<|end|>' → logprob: -11.033836364746094
    5. '	in' → logprob: -13.033836364746094
    6. ')' → logprob: -13.033836364746094
    7. '<|end|>' → logprob: -13.408836364746094
    8. ' ' → logprob: -13.908836364746094
    9. 'In' → logprob: -13.971336364746094
    10. '_in' → logprob: -13.971336364746094

Token 1012: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.001714093261398375
    2. ' states' → logprob: -6.37671422958374
    3. '(states' → logprob: -12.126713752746582
    4. '   ' → logprob: -12.626713752746582
    5. '.states' → logprob: -14.251713752746582
    6. ' ' → logprob: -14.626713752746582
    7. '       ' → logprob: -15.001713752746582
    8. 'state' → logprob: -15.126713752746582
    9. '
' → logprob: -15.251713752746582
    10. '           ' → logprob: -15.376713752746582

Token 1013: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05555809661746025
    2. ':
' → logprob: -2.930558204650879
    3. ',' → logprob: -7.930558204650879
    4. '           ' → logprob: -9.430558204650879
    5. '):
' → logprob: -9.430558204650879
    6. '<|end|>' → logprob: -9.680558204650879
    7. '():
' → logprob: -11.055558204650879
    8. ' :' → logprob: -11.430558204650879
    9. '       ' → logprob: -11.430558204650879
    10. '<|end|>' → logprob: -11.430558204650879

Token 1014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015538577281404287
    2. ' if' → logprob: -9.500155448913574
    3. '	       ' → logprob: -10.250155448913574
    4. 'if' → logprob: -10.750155448913574
    5. '   ' → logprob: -11.375155448913574
    6. '            
' → logprob: -12.875155448913574
    7. '		' → logprob: -13.250155448913574
    8. '       ' → logprob: -13.500155448913574
    9. '```' → logprob: -14.000155448913574
    10. '	   ' → logprob: -14.000155448913574

Token 1015: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1141001358628273
    2. '           ' → logprob: -2.364100217819214
    3. ' if' → logprob: -4.364099979400635
    4. '#' → logprob: -7.489099979400635
    5. '               ' → logprob: -7.614099979400635
    6. '       ' → logprob: -11.739100456237793
    7. '   ' → logprob: -12.239100456237793
    8. '
' → logprob: -12.989100456237793
    9. ' #' → logprob: -12.989100456237793
    10. ' ' → logprob: -15.114100456237793

Token 1016: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.04381326586008072
    2. ' foot' → logprob: -3.1688132286071777
    3. ' (' → logprob: -7.918813228607178
    4. '           ' → logprob: -8.293813705444336
    5. '(' → logprob: -8.918813705444336
    6. '               ' → logprob: -10.418813705444336
    7. '            ' → logprob: -11.793813705444336
    8. '          ' → logprob: -12.418813705444336
    9. 'Foot' → logprob: -12.418813705444336
    10. '         ' → logprob: -12.543813705444336

Token 1017: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760285258293152
    2. '==' → logprob: -0.8260285258293152
    3. ')==' → logprob: -10.076028823852539
    4. '=' → logprob: -11.201028823852539
    5. ' !=' → logprob: -11.576028823852539
    6. ')' → logprob: -11.576028823852539
    7. '!=' → logprob: -12.201028823852539
    8. ']==' → logprob: -13.201028823852539
    9. ':' → logprob: -13.201028823852539
    10. '==
' → logprob: -13.576028823852539

Token 1018: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20226354897022247
    2. '1' → logprob: -1.702263593673706
    3. ' ' → logprob: -7.077263355255127
    4. '   ' → logprob: -12.702263832092285
    5. '=' → logprob: -13.577263832092285
    6. '           ' → logprob: -15.389763832092285
    7. ')' → logprob: -15.577263832092285
    8. ',' → logprob: -16.01476287841797
    9. ' =' → logprob: -16.26476287841797
    10. '    ' → logprob: -16.26476287841797

Token 1019: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28115203976631165
    2. '0' → logprob: -1.4061520099639893
    3. ' ' → logprob: -13.65615177154541
    4. '   ' → logprob: -15.59365177154541
    5. '```' → logprob: -16.281152725219727
    6. '=' → logprob: -16.593652725219727
    7. 'left' → logprob: -17.406152725219727
    8. '`' → logprob: -17.468652725219727
    9. '	' → logprob: -17.531152725219727
    10. '``' → logprob: -17.531152725219727

Token 1020: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10726826637983322
    2. ':' → logprob: -2.4822683334350586
    3. ':
' → logprob: -4.357268333435059
    4. 'and' → logprob: -5.982268333435059
    5. '               ' → logprob: -6.857268333435059
    6. ')' → logprob: -7.982268333435059
    7. '           ' → logprob: -8.232268333435059
    8. '=' → logprob: -8.857268333435059
    9. ' :' → logprob: -8.857268333435059
    10. ' !=' → logprob: -9.232268333435059

Token 1021: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04761054739356041
    2. ' #' → logprob: -3.5476105213165283
    3. '#' → logprob: -5.297610759735107
    4. '           ' → logprob: -5.672610759735107
    5. ' if' → logprob: -5.672610759735107
    6. ' and' → logprob: -6.297610759735107
    7. ':
' → logprob: -6.547610759735107
    8. ':' → logprob: -6.797610759735107
    9. '                
' → logprob: -8.17261028289795
    10. ' ' → logprob: -8.42261028289795

Token 1022: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8515697717666626
    2. '#' (adapté à ' #') → logprob: -0.9765697717666626
    3. ' if' → logprob: -2.101569652557373
    4. '               ' → logprob: -2.851569652557373
    5. ' #' → logprob: -4.476569652557373
    6. '           ' → logprob: -5.351569652557373
    7. '                   ' → logprob: -8.851570129394531
    8. '
' → logprob: -9.101570129394531
    9. '                
' → logprob: -9.726570129394531
    10. '   ' → logprob: -9.976570129394531

Token 1023: ' Pied' (ID: 88947)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16188649833202362
    2. '#' → logprob: -1.91188645362854
    3. '               ' → logprob: -7.286886692047119
    4. 'for' → logprob: -7.661886692047119
    5. 'new' → logprob: -8.911886215209961
    6. ' if' → logprob: -9.036886215209961
    7. '                   ' → logprob: -9.161886215209961
    8. ' #' → logprob: -10.036886215209961
    9. '           ' → logprob: -10.286886215209961
    10. 'pos' → logprob: -10.661886215209961

Token 1024: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.17342764139175415
    2. '_g' → logprob: -2.4234275817871094
    3. 'g' → logprob: -2.6734275817871094
    4. ' gau' → logprob: -7.298427581787109
    5. '               ' → logprob: -8.04842758178711
    6. 'gau' → logprob: -8.29842758178711
    7. '                   ' → logprob: -9.92342758178711
    8. '_' → logprob: -10.17342758178711
    9. ' =' → logprob: -10.29842758178711
    10. '   ' → logprob: -10.54842758178711

Token 1025: ' doit' (ID: 21822)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0502904653549194
    2. ':' → logprob: -1.6752904653549194
    3. '               ' → logprob: -1.6752904653549194
    4. '                   ' → logprob: -2.675290584564209
    5. ' =' → logprob: -2.925290584564209
    6. ' ==' → logprob: -2.925290584564209
    7. '           ' → logprob: -3.675290584564209
    8. ' :
' → logprob: -3.925290584564209
    9. ',' → logprob: -4.425290584564209
    10. ' !=' → logprob: -5.175290584564209

Token 1026: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.5124611258506775
    2. 'app' → logprob: -1.0124611854553223
    3. '(app' → logprob: -4.762461185455322
    4. 'press' → logprob: -4.887461185455322
    5. ' move' → logprob: -5.262461185455322
    6. ' déplacer' → logprob: -6.012461185455322
    7. 'poser' → logprob: -6.137461185455322
    8. 'move' → logprob: -6.512461185455322
    9. 'p' → logprob: -6.637461185455322
    10. ' bou' → logprob: -7.137461185455322

Token 1027: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.00013381359167397022
    2. 'uye' → logprob: -9.500133514404297
    3. 'uy' → logprob: -10.125133514404297
    4. 'u' → logprob: -12.375133514404297
    5. 'ui' → logprob: -13.125133514404297
    6. '
' → logprob: -13.125133514404297
    7. 'uer' → logprob: -13.375133514404297
    8. '(' → logprob: -14.000133514404297
    9. 'oyer' → logprob: -14.000133514404297
    10. 'yer' → logprob: -14.125133514404297

Token 1028: ' sur' (ID: 1512)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8176858425140381
    2. '               ' → logprob: -1.567685842514038
    3. ':
' → logprob: -2.067685842514038
    4. ':' → logprob: -2.692685842514038
    5. ' (' → logprob: -2.942685842514038
    6. ' :
' → logprob: -3.442685842514038
    7. ' ' → logprob: -4.817686080932617
    8. ' :' → logprob: -4.817686080932617
    9. '                    
' → logprob: -4.817686080932617
    10. ' if' → logprob: -5.067686080932617

Token 1029: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004079470410943031
    2. ' current' → logprob: -5.504079341888428
    3. '(current' → logprob: -13.879079818725586
    4. '$current' → logprob: -17.254079818725586
    5. '	current' → logprob: -17.879079818725586
    6. 'new' → logprob: -18.754079818725586
    7. ',current' → logprob: -19.254079818725586
    8. '.current' → logprob: -19.379079818725586
    9. '_current' → logprob: -19.629079818725586
    10. '=current' → logprob: -19.879079818725586

Token 1030: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.0004764287732541561
    2. 'panel' → logprob: -7.750476360321045
    3. 'current' → logprob: -11.125476837158203
    4. ' panel' → logprob: -11.250476837158203
    5. '_' → logprob: -11.875476837158203
    6. '_pan' → logprob: -13.125476837158203
    7. '_p' → logprob: -13.250476837158203
    8. 'Panel' → logprob: -13.375476837158203
    9. '   ' → logprob: -13.375476837158203
    10. '_PANEL' → logprob: -14.125476837158203

Token 1031: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01167744118720293
    2. '                
' → logprob: -5.386677265167236
    3. '           ' → logprob: -6.761677265167236
    4. '                   ' → logprob: -6.886677265167236
    5. '<|end|>' → logprob: -7.261677265167236
    6. ':' → logprob: -7.511677265167236
    7. ',' → logprob: -7.761677265167236
    8. ':
' → logprob: -7.886677265167236
    9. '            
' → logprob: -8.136677742004395
    10. ' ' → logprob: -8.261677742004395

Token 1032: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006662796251475811
    2. '                
' → logprob: -5.256662845611572
    3. ' if' → logprob: -8.131662368774414
    4. '                   ' → logprob: -8.756662368774414
    5. '                    
' → logprob: -8.881662368774414
    6. ')' → logprob: -9.006662368774414
    7. ',' → logprob: -9.131662368774414
    8. '            
' → logprob: -9.631662368774414
    9. '               
' → logprob: -9.631662368774414
    10. '           ' → logprob: -10.256662368774414

Token 1033: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44324174523353577
    2. '#' (adapté à ' #') → logprob: -1.0682417154312134
    3. '               ' → logprob: -4.318241596221924
    4. ' if' → logprob: -7.693241596221924
    5. 'pos' → logprob: -8.193242073059082
    6. ' #' → logprob: -9.318242073059082
    7. 'left' → logprob: -9.318242073059082
    8. 'prev' → logprob: -9.693242073059082
    9. '           ' → logprob: -10.568242073059082
    10. 'order' → logprob: -10.693242073059082

Token 1034: ' Conditions' (ID: 39333)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004730584099888802
    2. ' if' → logprob: -6.004730701446533
    3. '               ' → logprob: -6.504730701446533
    4. '#' → logprob: -7.254730701446533
    5. '           ' → logprob: -10.379730224609375
    6. '                   ' → logprob: -11.629730224609375
    7. 'for' → logprob: -12.504730224609375
    8. ' #' → logprob: -13.129730224609375
    9. ' ' → logprob: -14.504730224609375
    10. '                
' → logprob: -15.004730224609375

Token 1035: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28495559096336365
    2. ' if' → logprob: -2.1599555015563965
    3. '           ' → logprob: -2.4099555015563965
    4. ':' → logprob: -4.2849555015563965
    5. '                   ' → logprob: -4.7849555015563965
    6. 'if' → logprob: -5.0349555015563965
    7. ' =' → logprob: -5.6599555015563965
    8. ' and' → logprob: -6.2849555015563965
    9. '            ' → logprob: -6.9099555015563965
    10. ':
' → logprob: -6.9099555015563965

Token 1036: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003001708537340164
    2. ' if' → logprob: -6.128001689910889
    3. '           ' → logprob: -8.003002166748047
    4. 'if' → logprob: -8.503002166748047
    5. '                   ' → logprob: -9.003002166748047
    6. '                
' → logprob: -9.878002166748047
    7. '                ' → logprob: -10.378002166748047
    8. '              ' → logprob: -10.503002166748047
    9. ' ' → logprob: -11.253002166748047
    10. '             ' → logprob: -11.628002166748047

Token 1037: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12620924413204193
    2. 'if' → logprob: -2.876209259033203
    3. ' current' → logprob: -3.376209259033203
    4. '               ' → logprob: -4.376209259033203
    5. '#' (adapté à ' #') → logprob: -4.876209259033203
    6. ' if' → logprob: -5.001209259033203
    7. '                   ' → logprob: -7.501209259033203
    8. '(current' → logprob: -8.626209259033203
    9. ' #' → logprob: -9.126209259033203
    10. '   ' → logprob: -9.876209259033203

Token 1038: ' -' (ID: 533)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4615011513233185
    2. 'if' → logprob: -1.086501121520996
    3. '#' → logprob: -3.711501121520996
    4. ' if' → logprob: -6.336501121520996
    5. '(current' → logprob: -6.461501121520996
    6. ' current' → logprob: -6.461501121520996
    7. '               ' → logprob: -6.961501121520996
    8. '   ' → logprob: -7.586501121520996
    9. 'lg' → logprob: -7.711501121520996
    10. '                   ' → logprob: -8.086501121520996

Token 1039: ' On' (ID: 2160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.007636678405106068
    2. ' current' → logprob: -4.882636547088623
    3. '(current' → logprob: -11.632637023925781
    4. 'score' → logprob: -11.757637023925781
    5. '   ' → logprob: -12.257637023925781
    6. 'lg' → logprob: -12.882637023925781
    7. 'panel' → logprob: -13.257637023925781
    8. 'if' → logprob: -14.507637023925781
    9. 'state' → logprob: -14.757637023925781
    10. ' ' → logprob: -14.882637023925781

Token 1040: ' ne' (ID: 453)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20319688320159912
    2. ' current' → logprob: -1.8281968832015991
    3. '(current' → logprob: -4.328197002410889
    4. ' !=' → logprob: -5.953197002410889
    5. 'n' → logprob: -6.828197002410889
    6. ' ne' → logprob: -7.328197002410889
    7. '!=' → logprob: -7.453197002410889
    8. 'abs' → logprob: -7.578197002410889
    9. 'curr' → logprob: -7.703197002410889
    10. 'p' → logprob: -7.953197002410889

Token 1041: ' peut' (ID: 9216)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.19653326272964478
    2. 'pe' → logprob: -1.946533203125
    3. 'p' → logprob: -4.196533203125
    4. 'press' → logprob: -5.071533203125
    5. 'a' → logprob: -5.946533203125
    6. 'pas' → logprob: -6.071533203125
    7. 'continue' → logprob: -6.571533203125
    8. ' app' → logprob: -6.571533203125
    9. 've' → logprob: -6.821533203125
    10. 'util' → logprob: -6.946533203125

Token 1042: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6687758564949036
    2. ' pas' → logprob: -0.9187758564949036
    3. ' app' → logprob: -2.543775796890259
    4. 'app' → logprob: -4.793776035308838
    5. 'press' → logprob: -7.668776035308838
    6. '(app' → logprob: -8.16877555847168
    7. '   ' → logprob: -8.79377555847168
    8. '           ' → logprob: -9.29377555847168
    9. ' press' → logprob: -9.41877555847168
    10. ' (' → logprob: -9.41877555847168

Token 1043: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.43454426527023315
    2. ' app' → logprob: -1.059544324874878
    3. 'poser' → logprob: -6.434544086456299
    4. '(app' → logprob: -6.809544086456299
    5. 'press' → logprob: -6.934544086456299
    6. 'avoir' → logprob: -7.559544086456299
    7. ' utiliser' → logprob: -7.934544086456299
    8. 'mettre' → logprob: -8.309544563293457
    9. 'util' → logprob: -9.184544563293457
    10. 'ap' → logprob: -9.434544563293457

Token 1044: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.0001314295077463612
    2. 'uy' → logprob: -9.375131607055664
    3. 'u' → logprob: -11.125131607055664
    4. 'uye' → logprob: -11.500131607055664
    5. '
' → logprob: -12.500131607055664
    6. 'uer' → logprob: -13.125131607055664
    7. 'oyer' → logprob: -13.375131607055664
    8. 'p' → logprob: -13.625131607055664
    9. 'ui' → logprob: -13.625131607055664
    10. '(' → logprob: -13.750131607055664

Token 1045: ' deux' (ID: 10301)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.20861753821372986
    2. 'sur' → logprob: -1.8336175680160522
    3. ' ' → logprob: -3.7086174488067627
    4. ' current' → logprob: -6.083617687225342
    5. ' ' → logprob: -7.583617687225342
    6. '_sur' → logprob: -7.708617687225342
    7. ' dessus' → logprob: -9.208617210388184
    8. ' deux' → logprob: -9.208617210388184
    9. 'current' → logprob: -9.708617210388184
    10. ' le' → logprob: -9.708617210388184

Token 1046: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.2058565467596054
    2. 'fois' → logprob: -1.9558565616607666
    3. ' ' → logprob: -3.2058565616607666
    4. '_' → logprob: -6.0808563232421875
    5. ' espaces' → logprob: -7.3308563232421875
    6. ' ' → logprob: -8.830856323242188
    7. ' times' → logprob: -8.830856323242188
    8. ' veces' → logprob: -9.080856323242188
    9. ')' → logprob: -9.205856323242188
    10. ' f' → logprob: -9.580856323242188

Token 1047: ' de' (ID: 334)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.22769050300121307
    2. ' sur' → logprob: -1.6026904582977295
    3. ' ' → logprob: -6.352690696716309
    4. '_sur' → logprob: -8.477690696716309
    5. ' cons' → logprob: -9.477690696716309
    6. ' ' → logprob: -9.852690696716309
    7. 'de' → logprob: -9.977690696716309
    8. ' de' → logprob: -10.102690696716309
    9. 's' → logprob: -10.102690696716309
    10. '_' → logprob: -11.477690696716309

Token 1048: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.00017767686222214252
    2. 'su' → logprob: -9.375177383422852
    3. 's' → logprob: -10.625177383422852
    4. 'rang' → logprob: -11.125177383422852
    5. ' suite' → logprob: -11.250177383422852
    6. '   ' → logprob: -11.375177383422852
    7. ' ' → logprob: -11.875177383422852
    8. '```' → logprob: -12.000177383422852
    9. 'file' → logprob: -12.375177383422852
    10. 'aff' → logprob: -13.625177383422852

Token 1049: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6731367111206055
    2. 'sur' → logprob: -0.7981367111206055
    3. 'current' → logprob: -3.7981367111206055
    4. ' current' → logprob: -4.5481367111206055
    5. ' ' → logprob: -6.6731367111206055
    6. '(current' → logprob: -6.6731367111206055
    7. ' le' → logprob: -7.5481367111206055
    8. '[current' → logprob: -7.5481367111206055
    9. ' (' → logprob: -7.7981367111206055
    10. '               ' → logprob: -8.173136711120605

Token 1050: ' même' (ID: 9679)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.7668930888175964
    2. 'current' → logprob: -0.7668930888175964
    3. ' la' → logprob: -3.766893148422241
    4. ' le' → logprob: -4.141892910003662
    5. 'le' → logprob: -4.266892910003662
    6. ' ' → logprob: -5.141892910003662
    7. 'score' → logprob: -5.891892910003662
    8. 'la' → logprob: -6.391892910003662
    9. 'l' → logprob: -6.391892910003662
    10. ''' → logprob: -6.766892910003662

Token 1051: ' panneau' (ID: 186597)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.5785969495773315
    2. ' panel' → logprob: -1.5785969495773315
    3. ' panneau' → logprob: -2.328597068786621
    4. '_panel' → logprob: -2.578597068786621
    5. 'p' → logprob: -3.328597068786621
    6. '_' → logprob: -5.328597068786621
    7. '_p' → logprob: -5.453597068786621
    8. 'current' → logprob: -5.453597068786621
    9. 'pan' → logprob: -5.578597068786621
    10. 'pane' → logprob: -6.078597068786621

Token 1052: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3664988577365875
    2. ' if' → logprob: -2.1164989471435547
    3. ' or' → logprob: -2.3664989471435547
    4. ' and' → logprob: -2.7414989471435547
    5. '                   ' → logprob: -4.866498947143555
    6. ' ' → logprob: -5.741498947143555
    7. 'and' → logprob: -5.866498947143555
    8. ',' → logprob: -6.116498947143555
    9. '           ' → logprob: -6.491498947143555
    10. 'if' → logprob: -6.491498947143555

Token 1053: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2894108295440674
    2. 'current' → logprob: -2.1644108295440674
    3. 'foot' → logprob: -2.7894108295440674
    4. 'g' → logprob: -3.6644108295440674
    5. 'la' → logprob: -4.039410591125488
    6. 'left' → logprob: -4.289410591125488
    7. 'l' → logprob: -5.664410591125488
    8. ' le' → logprob: -5.664410591125488
    9. 'ce' → logprob: -6.289410591125488
    10. 'p' → logprob: -6.664410591125488

Token 1054: ' pied' (ID: 20242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6917265057563782
    2. 'foot' → logprob: -1.9417264461517334
    3. 'panel' → logprob: -2.1917264461517334
    4. ' pied' → logprob: -2.4417264461517334
    5. ' panel' → logprob: -2.5667264461517334
    6. ' même' → logprob: -3.4417264461517334
    7. 'pan' → logprob: -4.8167266845703125
    8. ' panneau' → logprob: -4.9417266845703125
    9. 'm' → logprob: -5.0667266845703125
    10. ' foot' → logprob: -5.4417266845703125

Token 1055: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030249668285250664
    2. ' if' → logprob: -5.03024959564209
    3. ' or' → logprob: -5.28024959564209
    4. '                   ' → logprob: -5.40524959564209
    5. '           ' → logprob: -6.15524959564209
    6. ',' → logprob: -6.40524959564209
    7. ' (' → logprob: -6.78024959564209
    8. ')' → logprob: -6.78024959564209
    9. '                ' → logprob: -6.78024959564209
    10. ' ' → logprob: -7.15524959564209

Token 1056: 'condition' (ID: 15688)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.37884366512298584
    2. 'current' → logprob: -1.3788436651229858
    3. ' lg' → logprob: -3.1288437843322754
    4. ')' → logprob: -4.628843784332275
    5. 'lg' → logprob: -5.378843784332275
    6. ' ld' → logprob: -6.753843784332275
    7. ' not' → logprob: -7.753843784332275
    8. ' ' → logprob: -8.003843307495117
    9. '               ' → logprob: -8.128843307495117
    10. '                   ' → logprob: -8.316343307495117

Token 1057: ' ' (ID: 220)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.21903149783611298
    2. ')' → logprob: -3.219031572341919
    3. '!=' → logprob: -3.594031572341919
    4. ' ' → logprob: -4.59403133392334
    5. ' gauche' → logprob: -4.71903133392334
    6. ' ==' → logprob: -4.71903133392334
    7. '_left' → logprob: -4.84403133392334
    8. ' not' → logprob: -4.96903133392334
    9. ' or' → logprob: -5.09403133392334
    10. '  ' → logprob: -5.09403133392334

Token 1058: '2' (ID: 17)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.2074757814407349
    2. '==' → logprob: -2.2074756622314453
    3. ' ==' → logprob: -2.4574756622314453
    4. 'current' → logprob: -2.5824756622314453
    5. '!=' → logprob: -2.8324756622314453
    6. ')' → logprob: -3.5824756622314453
    7. '   ' → logprob: -3.5824756622314453
    8. ' lg' → logprob: -3.7074756622314453
    9. ' current' → logprob: -3.8324756622314453
    10. ' ' → logprob: -3.8324756622314453

Token 1059: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5106430649757385
    2. ')' → logprob: -1.6356430053710938
    3. ' or' → logprob: -2.0106430053710938
    4. ' and' → logprob: -3.5106430053710938
    5. ' ou' → logprob: -4.135643005371094
    6. ' et' → logprob: -5.135643005371094
    7. '):
' → logprob: -5.135643005371094
    8. '                   ' → logprob: -6.010643005371094
    9. 'and' → logprob: -6.385643005371094
    10. ')
' → logprob: -6.385643005371094

Token 1060: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007151735480874777
    2. 'if' → logprob: -8.125715255737305
    3. ' if' → logprob: -8.250715255737305
    4. '                
' → logprob: -9.125715255737305
    5. ' ' → logprob: -11.500715255737305
    6. '           ' → logprob: -12.500715255737305
    7. ',' → logprob: -12.625715255737305
    8. '                   ' → logprob: -12.625715255737305
    9. '			' → logprob: -12.875715255737305
    10. '              ' → logprob: -12.875715255737305

Token 1061: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1369006484746933
    2. ' if' → logprob: -2.5119006633758545
    3. 'if' → logprob: -3.1369006633758545
    4. '           ' → logprob: -6.386900424957275
    5. '                   ' → logprob: -7.011900424957275
    6. ' ' → logprob: -8.261900901794434
    7. '                
' → logprob: -8.761900901794434
    8. ' ' → logprob: -9.011900901794434
    9. '                ' → logprob: -9.761900901794434
    10. '              ' → logprob: -10.261900901794434

Token 1062: '  ' (ID: 256)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04660388082265854
    2. ' if' → logprob: -3.6716039180755615
    3. 'if' → logprob: -3.9216039180755615
    4. '                
' → logprob: -9.04660415649414
    5. '           ' → logprob: -10.04660415649414
    6. '              ' → logprob: -10.42160415649414
    7. '                ' → logprob: -10.42160415649414
    8. '                   ' → logprob: -11.04660415649414
    9. ' ' → logprob: -11.17160415649414
    10. '             ' → logprob: -12.04660415649414

Token 1063: ' ici' (ID: 27994)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06693055480718613
    2. ' if' → logprob: -2.8169305324554443
    3. '               ' → logprob: -5.316930770874023
    4. 'continue' → logprob: -11.441930770874023
    5. '           ' → logprob: -12.316930770874023
    6. 'current' → logprob: -12.441930770874023
    7. '```' → logprob: -12.691930770874023
    8. '                   ' → logprob: -12.691930770874023
    9. ' and' → logprob: -13.191930770874023
    10. 'and' → logprob: -13.191930770874023

Token 1064: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0174013376235962
    2. ' if' → logprob: -1.1424013376235962
    3. ' current' → logprob: -2.0174012184143066
    4. 'lg' → logprob: -2.6424012184143066
    5. ' lg' → logprob: -2.7674012184143066
    6. 'current' → logprob: -3.0174012184143066
    7. '               ' → logprob: -6.392401218414307
    8. ' not' → logprob: -8.517401695251465
    9. '(current' → logprob: -8.642401695251465
    10. '           ' → logprob: -8.892401695251465

Token 1065: ' vér' (ID: 42524)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.7332925200462341
    2. ' !=' → logprob: -1.358292579650879
    3. ' doit' → logprob: -3.108292579650879
    4. 'if' → logprob: -3.608292579650879
    5. ' if' → logprob: -3.733292579650879
    6. '!=' → logprob: -3.983292579650879
    7. ' continue' → logprob: -4.108292579650879
    8. 'ne' → logprob: -4.233292579650879
    9. ' suppose' → logprob: -4.358292579650879
    10. ' must' → logprob: -4.358292579650879

Token 1066: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0001664717128733173
    2. 'if' → logprob: -10.250166893005371
    3. 'f' → logprob: -10.375166893005371
    4. 'ifier' → logprob: -10.750166893005371
    5. 'ifi' → logprob: -10.750166893005371
    6. 'ifiant' → logprob: -10.875166893005371
    7. 'ifié' → logprob: -11.125166893005371
    8. 'ifiez' → logprob: -11.750166893005371
    9. '   ' → logprob: -12.875166893005371
    10. 'ife' → logprob: -13.125166893005371

Token 1067: ' pour' (ID: 1930)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.677872359752655
    2. 'current' → logprob: -0.927872359752655
    3. 'lg' → logprob: -2.8028724193573
    4. ' lg' → logprob: -3.4278724193573
    5. '   ' → logprob: -6.177872180938721
    6. '(current' → logprob: -7.802872180938721
    7. 'if' → logprob: -8.052872657775879
    8. ' if' → logprob: -8.177872657775879
    9. ' ' → logprob: -9.052872657775879
    10. ' ' → logprob: -9.115372657775879

Token 1068: ' pied' (ID: 20242)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.11588624119758606
    2. 'current' → logprob: -2.7408862113952637
    3. ' lg' → logprob: -3.7408862113952637
    4. ' current' → logprob: -4.865886211395264
    5. 'foot' → logprob: -5.115886211395264
    6. 'left' → logprob: -6.115886211395264
    7. 'ld' → logprob: -6.740886211395264
    8. 'new' → logprob: -7.115886211395264
    9. ' ' → logprob: -7.678386211395264
    10. ' new' → logprob: -8.365886688232422

Token 1069: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.3040870726108551
    2. 'g' → logprob: -1.4290870428085327
    3. '_g' → logprob: -4.054087162017822
    4. ' gau' → logprob: -6.054087162017822
    5. 'gau' → logprob: -7.429087162017822
    6. 'left' → logprob: -7.679087162017822
    7. '_' → logprob: -8.054086685180664
    8. ' left' → logprob: -8.179086685180664
    9. ' g' → logprob: -8.304086685180664
    10. ' ' → logprob: -8.429086685180664

Token 1070: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.46388164162635803
    2. ' if' → logprob: -1.7138816118240356
    3. '               ' → logprob: -2.713881731033325
    4. 'and' → logprob: -3.213881731033325
    5. '           ' → logprob: -3.463881731033325
    6. 'if' → logprob: -4.213881492614746
    7. '                   ' → logprob: -4.838881492614746
    8. ':' → logprob: -5.213881492614746
    9. ',' → logprob: -5.713881492614746
    10. ' (' → logprob: -5.963881492614746

Token 1071: ' donc' (ID: 14206)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4620514214038849
    2. 'if' → logprob: -1.0870513916015625
    3. 'lg' → logprob: -4.4620513916015625
    4. '               ' → logprob: -5.2120513916015625
    5. ' lg' → logprob: -5.2120513916015625
    6. '```' → logprob: -5.2120513916015625
    7. '<|end|>' → logprob: -6.5870513916015625
    8. '                   ' → logprob: -7.3370513916015625
    9. '/lg' → logprob: -7.3370513916015625
    10. ' (' → logprob: -8.212051391601562

Token 1072: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16375228762626648
    2. ' current' → logprob: -2.038752317428589
    3. 'lg' → logprob: -4.03875207901001
    4. ' lg' → logprob: -6.41375207901001
    5. 'if' → logprob: -7.03875207901001
    6. '   ' → logprob: -7.78875207901001
    7. ' if' → logprob: -9.163752555847168
    8. '(current' → logprob: -10.163752555847168
    9. '           ' → logprob: -10.538752555847168
    10. '```' → logprob: -11.163752555847168

Token 1073: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.0002775438770186156
    2. '_' → logprob: -9.125277519226074
    3. ' !=' → logprob: -10.125277519226074
    4. '_pan' → logprob: -10.125277519226074
    5. 'panel' → logprob: -10.500277519226074
    6. '!=' → logprob: -11.000277519226074
    7. '_p' → logprob: -11.250277519226074
    8. '_left' → logprob: -11.750277519226074
    9. '_PANEL' → logprob: -12.250277519226074
    10. ' panel' → logprob: -12.250277519226074

Token 1074: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5233124494552612
    2. ' !=' → logprob: -0.8983124494552612
    3. '==' → logprob: -9.64831256866455
    4. ')!=' → logprob: -9.89831256866455
    5. ']!=' → logprob: -10.89831256866455
    6. '()!=' → logprob: -10.89831256866455
    7. '!=(' → logprob: -11.64831256866455
    8. '!==' → logprob: -11.89831256866455
    9. ' ==' → logprob: -12.02331256866455
    10. '!='' → logprob: -12.64831256866455

Token 1075: ' lg' (ID: 37176)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -7.219262624857947e-05
    2. ' lg' → logprob: -9.625072479248047
    3. '   ' → logprob: -12.500072479248047
    4. ' ' → logprob: -14.500072479248047
    5. ' ' → logprob: -14.875072479248047
    6. '  ' → logprob: -15.500072479248047
    7. 'current' → logprob: -15.500072479248047
    8. '`' → logprob: -15.875072479248047
    9. '```' → logprob: -16.000072479248047
    10. '     ' → logprob: -16.500072479248047

Token 1076: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.520132839679718
    2. '               ' → logprob: -1.1451327800750732
    3. ' or' → logprob: -3.1451327800750732
    4. 'and' → logprob: -3.7701327800750732
    5. ':' → logprob: -4.770133018493652
    6. ')' → logprob: -6.020133018493652
    7. '           ' → logprob: -6.270133018493652
    8. '<|end|>' → logprob: -6.270133018493652
    9. '<|end|>' → logprob: -6.645133018493652
    10. ' ' → logprob: -7.020133018493652

Token 1077: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20630252361297607
    2. ' and' → logprob: -1.706302523612976
    3. 'and' → logprob: -6.581302642822266
    4. ' if' → logprob: -6.956302642822266
    5. '<|end|>' → logprob: -7.331302642822266
    6. ',' → logprob: -7.956302642822266
    7. 'if' → logprob: -8.331302642822266
    8. '                   ' → logprob: -8.331302642822266
    9. ')' → logprob: -8.331302642822266
    10. ' or' → logprob: -9.081302642822266

Token 1078: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3220217227935791
    2. 'if' (adapté à ' if') → logprob: -1.822021722793579
    3. ' if' → logprob: -2.197021722793579
    4. '                   ' → logprob: -6.572021484375
    5. '           ' → logprob: -6.947021484375
    6. '                ' → logprob: -10.697021484375
    7. '                       ' → logprob: -10.822021484375
    8. '                
' → logprob: -11.197021484375
    9. '              ' → logprob: -11.697021484375
    10. '                               ' → logprob: -11.822021484375

Token 1079: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.126929372549057
    2. ' current' → logprob: -2.12692928314209
    3. '(current' → logprob: -15.00192928314209
    4. '	current' → logprob: -15.00192928314209
    5. '               ' → logprob: -15.12692928314209
    6. '   ' → logprob: -15.87692928314209
    7. '           ' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.251930236816406
    9. '                   ' → logprob: -17.501930236816406
    10. 'curr' → logprob: -17.876930236816406

Token 1080: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -1.3544423381972592e-05
    2. 'panel' → logprob: -12.00001335144043
    3. '!=' → logprob: -13.25001335144043
    4. ' !=' → logprob: -13.62501335144043
    5. '_PANEL' → logprob: -14.00001335144043
    6. ' panel' → logprob: -14.50001335144043
    7. '_pan' → logprob: -14.50001335144043
    8. '_' → logprob: -14.62501335144043
    9. 'Panel' → logprob: -14.87501335144043
    10. '   ' → logprob: -15.12501335144043

Token 1081: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.31335365772247314
    2. ' !=' → logprob: -1.3133536577224731
    3. '()!=' → logprob: -10.438353538513184
    4. ')!=' → logprob: -11.063353538513184
    5. ' not' → logprob: -11.688353538513184
    6. '==' → logprob: -11.938353538513184
    7. '!==' → logprob: -12.313353538513184
    8. '!=(' → logprob: -12.563353538513184
    9. 'not' → logprob: -12.688353538513184
    10. '!='' → logprob: -12.813353538513184

Token 1082: ' lg' (ID: 37176)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -9.686778503237292e-05
    2. ' lg' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.625097274780273
    4. ' ' → logprob: -16.500097274780273
    5. '     ' → logprob: -17.500097274780273
    6. '       ' → logprob: -17.625097274780273
    7. '           ' → logprob: -17.875097274780273
    8. '  ' → logprob: -17.875097274780273
    9. ' ' → logprob: -17.875097274780273
    10. '/lg' → logprob: -18.375097274780273

Token 1083: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5262941122055054
    2. '                   ' → logprob: -1.1512941122055054
    3. ':
' → logprob: -2.526294231414795
    4. '               ' → logprob: -5.276294231414795
    5. ' continue' → logprob: -5.776294231414795
    6. 'continue' → logprob: -6.026294231414795
    7. ' or' → logprob: -7.026294231414795
    8. '                       ' → logprob: -7.776294231414795
    9. '	continue' → logprob: -7.776294231414795
    10. '           ' → logprob: -8.776293754577637

Token 1084: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002664361847564578
    2. ' continue' → logprob: -6.377664566040039
    3. 'continue' → logprob: -7.127664566040039
    4. '	continue' → logprob: -9.752664566040039
    5. '               ' → logprob: -10.002664566040039
    6. '				' → logprob: -11.377664566040039
    7. '	               ' → logprob: -11.502664566040039
    8. '                       ' → logprob: -12.127664566040039
    9. '		           ' → logprob: -12.252664566040039
    10. ':' → logprob: -12.502664566040039

Token 1085: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.44822967052459717
    2. ' continue' → logprob: -1.4482296705245972
    3. '                   ' → logprob: -2.1982297897338867
    4. '                       ' → logprob: -4.198229789733887
    5. '	continue' → logprob: -8.698229789733887
    6. '                           ' → logprob: -10.698229789733887
    7. '               ' → logprob: -11.198229789733887
    8. '_continue' → logprob: -11.573229789733887
    9. '   ' → logprob: -12.448229789733887
    10. '                               ' → logprob: -12.823229789733887

Token 1086: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009368211962282658
    2. '                
' → logprob: -5.259368419647217
    3. '<|end|>' → logprob: -6.759368419647217
    4. '           ' → logprob: -7.009368419647217
    5. '  
' → logprob: -7.384368419647217
    6. ' 
' → logprob: -8.134367942810059
    7. '                   ' → logprob: -8.259367942810059
    8. '                    
' → logprob: -8.384367942810059
    9. '               
' → logprob: -9.259367942810059
    10. '
' → logprob: -9.259367942810059

Token 1087: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021905910689383745
    2. '           ' → logprob: -6.252190589904785
    3. '                
' → logprob: -9.002190589904785
    4. '                   ' → logprob: -9.502190589904785
    5. '              ' → logprob: -11.252190589904785
    6. '```' → logprob: -11.627190589904785
    7. '                    
' → logprob: -11.752190589904785
    8. '
' → logprob: -12.252190589904785
    9. '<|end|>' → logprob: -12.252190589904785
    10. '                ' → logprob: -12.377190589904785

Token 1088: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7548423409461975
    2. '               ' → logprob: -0.8798423409461975
    3. '#' (adapté à ' #') → logprob: -2.2548422813415527
    4. '
' → logprob: -5.379842281341553
    5. ' if' → logprob: -6.254842281341553
    6. '                
' → logprob: -6.379842281341553
    7. 'new' → logprob: -7.129842281341553
    8. '           ' → logprob: -7.879842281341553
    9. 'pos' → logprob: -8.004842758178711
    10. ' #' → logprob: -9.379842758178711

Token 1089: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0605473518371582
    2. '#' → logprob: -1.1855473518371582
    3. '               ' → logprob: -1.1855473518371582
    4. 'pos' → logprob: -3.810547351837158
    5. 'left' → logprob: -4.310547351837158
    6. 'new' → logprob: -5.810547351837158
    7. 'order' → logprob: -7.310547351837158
    8. 'prev' → logprob: -7.685547351837158
    9. 'old' → logprob: -7.935547351837158
    10. ' if' → logprob: -8.060546875

Token 1090: ' Pied' (ID: 88947)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.47985202074050903
    2. 'current' → logprob: -1.9798519611358643
    3. '#' → logprob: -2.3548519611358643
    4. ' order' → logprob: -2.3548519611358643
    5. ' current' → logprob: -3.8548519611358643
    6. 'if' → logprob: -4.979852199554443
    7. ' ld' → logprob: -4.979852199554443
    8. 'ld' → logprob: -5.104852199554443
    9. 'not' → logprob: -5.979852199554443
    10. ' #' → logprob: -6.229852199554443

Token 1091: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.582107663154602
    2. 'g' → logprob: -1.832107663154602
    3. ' droite' → logprob: -2.2071075439453125
    4. 'dro' → logprob: -2.4571075439453125
    5. ' droit' → logprob: -2.7071075439453125
    6. 'd' → logprob: -5.0821075439453125
    7. 'right' → logprob: -5.9571075439453125
    8. ' right' → logprob: -6.0821075439453125
    9. 'left' → logprob: -6.2071075439453125
    10. ' gau' → logprob: -6.9571075439453125

Token 1092: ' et' (ID: 859)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11001250147819519
    2. '<' → logprob: -2.6100125312805176
    3. ' !=' → logprob: -4.360012531280518
    4. '               ' → logprob: -5.360012531280518
    5. '                   ' → logprob: -5.360012531280518
    6. ' must' → logprob: -6.735012531280518
    7. 'order' → logprob: -7.110012531280518
    8. '!=' → logprob: -7.110012531280518
    9. 'must' → logprob: -7.360012531280518
    10. ' doit' → logprob: -7.610012531280518

Token 1093: ' pied' (ID: 20242)
  Prédit: ' ld'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ld' → logprob: -0.09525693953037262
    2. 'ld' → logprob: -2.470257043838501
    3. ' current' → logprob: -5.220256805419922
    4. 'current' → logprob: -7.220256805419922
    5. '(ld' → logprob: -9.470256805419922
    6. ' ' → logprob: -10.095256805419922
    7. '_ld' → logprob: -11.845256805419922
    8. ' ldc' → logprob: -12.470256805419922
    9. ' (' → logprob: -12.720256805419922
    10. ''' → logprob: -12.782756805419922

Token 1094: ' droit' (ID: 29964)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.7952337265014648
    2. 'd' → logprob: -1.4202337265014648
    3. ' droit' → logprob: -1.4202337265014648
    4. ' droite' → logprob: -3.420233726501465
    5. '_d' → logprob: -3.795233726501465
    6. 'right' → logprob: -5.545233726501465
    7. ' gauche' → logprob: -6.420233726501465
    8. 'g' → logprob: -7.170233726501465
    9. '_right' → logprob: -7.295233726501465
    10. ' right' → logprob: -7.420233726501465

Token 1095: ' ne' (ID: 453)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.6817139983177185
    2. ' !=' → logprob: -1.8067140579223633
    3. '!=' → logprob: -2.1817140579223633
    4. ' must' → logprob: -2.5567140579223633
    5. ' positions' → logprob: -3.3067140579223633
    6. '               ' → logprob: -4.056714057922363
    7. 'positions' → logprob: -4.056714057922363
    8. '=' → logprob: -4.556714057922363
    9. 'must' → logprob: -4.556714057922363
    10. '                   ' → logprob: -4.681714057922363

Token 1096: ' peuvent' (ID: 21321)
  Prédit: ' peuvent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.8138769268989563
    2. 'pe' → logprob: -1.4388768672943115
    3. ' doivent' → logprob: -1.4388768672943115
    4. 'do' → logprob: -2.9388768672943115
    5. 's' → logprob: -4.813877105712891
    6. 'pas' → logprob: -5.938877105712891
    7. ' peut' → logprob: -6.188877105712891
    8. '=' → logprob: -6.563877105712891
    9. 'can' → logprob: -6.688877105712891
    10. 'pour' → logprob: -6.813877105712891

Token 1097: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3112625777721405
    2. 'pas' → logprob: -1.436262607574463
    3. ' être' → logprob: -4.186262607574463
    4. ' be' → logprob: -5.061262607574463
    5. 'être' → logprob: -5.061262607574463
    6. ' jamais' → logprob: -7.436262607574463
    7. ''être' → logprob: -8.436262130737305
    8. 'be' → logprob: -8.686262130737305
    9. '=' → logprob: -9.561262130737305
    10. '#' → logprob: -9.561262130737305

Token 1098: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.37333327531814575
    2. ' être' → logprob: -1.623333215713501
    3. 'occup' → logprob: -3.748333215713501
    4. 'current' → logprob: -4.12333345413208
    5. 'avoir' → logprob: -4.12333345413208
    6. 'be' → logprob: -4.49833345413208
    7. 'se' → logprob: -5.12333345413208
    8. 'app' → logprob: -5.12333345413208
    9. ' be' → logprob: -5.49833345413208
    10. ''être' → logprob: -5.62333345413208

Token 1099: ' sur' (ID: 1512)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.2420770227909088
    2. 'ég' → logprob: -2.742077112197876
    3. 'égal' → logprob: -2.992077112197876
    4. 'ident' → logprob: -2.992077112197876
    5. 'sur' → logprob: -4.242076873779297
    6. 'current' → logprob: -5.367076873779297
    7. 'conf' → logprob: -5.742076873779297
    8. ' sur' → logprob: -5.867076873779297
    9. 'eg' → logprob: -5.867076873779297
    10. ' eg' → logprob: -5.867076873779297

Token 1100: ' le' (ID: 505)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5031991004943848
    2. 'le' → logprob: -1.8781991004943848
    3. 'same' → logprob: -2.1281991004943848
    4. 'la' → logprob: -3.6281991004943848
    5. 'the' → logprob: -3.7531991004943848
    6. ' current' → logprob: -3.7531991004943848
    7. ' même' → logprob: -4.003199100494385
    8. ' la' → logprob: -4.378199100494385
    9. ' same' → logprob: -5.378199100494385
    10. ' le' → logprob: -5.628199100494385

Token 1101: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004032452590763569
    2. ' même' → logprob: -6.129032611846924
    3. 'same' → logprob: -6.504032611846924
    4. 'even' → logprob: -9.379032135009766
    5. 'Même' → logprob: -9.754032135009766
    6. 'mem' → logprob: -9.879032135009766
    7. '```' → logprob: -10.129032135009766
    8. 'mé' → logprob: -10.879032135009766
    9. '  ' → logprob: -11.004032135009766
    10. '   ' → logprob: -11.254032135009766

Token 1102: ' panneau' (ID: 186597)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.27850648760795593
    2. ' panneau' → logprob: -1.9035065174102783
    3. ' panel' → logprob: -2.6535065174102783
    4. 'p' → logprob: -4.403506278991699
    5. 'pan' → logprob: -4.903506278991699
    6. 'pane' → logprob: -6.653506278991699
    7. 'current' → logprob: -7.278506278991699
    8. 'position' → logprob: -7.528506278991699
    9. '_panel' → logprob: -7.778506278991699
    10. ' ' → logprob: -8.6535062789917

Token 1103: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00035250463406555355
    2. '                
' → logprob: -9.25035285949707
    3. '           ' → logprob: -9.87535285949707
    4. '                   ' → logprob: -10.00035285949707
    5. ' if' → logprob: -10.12535285949707
    6. ' (' → logprob: -10.50035285949707
    7. '                ' → logprob: -10.75035285949707
    8. ',' → logprob: -10.87535285949707
    9. ' or' → logprob: -11.87535285949707
    10. '              ' → logprob: -11.87535285949707

Token 1104: 'pas' (ID: 21122)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4077766239643097
    2. ' current' → logprob: -2.2827765941619873
    3. ' if' → logprob: -2.6577765941619873
    4. 'if' → logprob: -2.9077765941619873
    5. '               ' → logprob: -3.0327765941619873
    6. ')' → logprob: -3.2827765941619873
    7. ')
' → logprob: -4.657776832580566
    8. 'continue' → logprob: -5.782776832580566
    9. '(current' → logprob: -6.282776832580566
    10. ' or' → logprob: -6.407776832580566

Token 1105: ' interdit' (ID: 129427)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5001347064971924
    2. 'current' → logprob: -1.6251347064971924
    3. ' eg' → logprob: -2.7501347064971924
    4. 'sur' → logprob: -3.5001347064971924
    5. ' lg' → logprob: -3.6251347064971924
    6. ' ld' → logprob: -4.500134468078613
    7. ' same' → logprob: -4.625134468078613
    8. 'same' → logprob: -4.875134468078613
    9. 'ld' → logprob: -5.500134468078613
    10. 'lg' → logprob: -5.500134468078613

Token 1106: ' explicit' (ID: 23141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4382825195789337
    2. '               ' → logprob: -1.1882824897766113
    3. ')
' → logprob: -3.5632824897766113
    4. '                   ' → logprob: -4.938282489776611
    5. ',' → logprob: -5.813282489776611
    6. '):
' → logprob: -5.938282489776611
    7. '           ' → logprob: -6.188282489776611
    8. '),' → logprob: -6.938282489776611
    9. ' )' → logprob: -7.688282489776611
    10. '                       ' → logprob: -7.688282489776611

Token 1107: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.01006346009671688
    2. 'e' → logprob: -4.635063648223877
    3. 'ly' → logprob: -8.385063171386719
    4. 'ément' → logprob: -10.010063171386719
    5. 'ely' → logprob: -11.885063171386719
    6. 'ment' → logprob: -11.885063171386719
    7. 'lement' → logprob: -12.885063171386719
    8. 'é' → logprob: -13.010063171386719
    9. '#' → logprob: -13.010063171386719
    10. ')' → logprob: -13.135063171386719

Token 1108: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1671496033668518
    2. '               ' → logprob: -2.292149543762207
    3. ',' → logprob: -3.792149543762207
    4. ' )' → logprob: -4.667149543762207
    5. ')
' → logprob: -4.917149543762207
    6. '):
' → logprob: -5.292149543762207
    7. '),' → logprob: -5.542149543762207
    8. '):' → logprob: -6.667149543762207
    9. '                   ' → logprob: -6.917149543762207
    10. ' )
' → logprob: -7.792149543762207

Token 1109: ' c' (ID: 274)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2262311577796936
    2. 'continue' → logprob: -1.8512310981750488
    3. ' current' → logprob: -4.851231098175049
    4. '```' → logprob: -4.976231098175049
    5. '               ' → logprob: -5.476231098175049
    6. 'current' → logprob: -5.726231098175049
    7. ' #' → logprob: -5.851231098175049
    8. ' not' → logprob: -5.976231098175049
    9. '#' → logprob: -6.101231098175049
    10. 'not' → logprob: -6.476231098175049

Token 1110: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.008952532894909382
    2. 'continue' → logprob: -5.258952617645264
    3. ' continue' → logprob: -5.758952617645264
    4. 'on' → logprob: -9.383952140808105
    5. ''est' → logprob: -9.383952140808105
    6. 'ONT' → logprob: -9.508952140808105
    7. 'urrent' → logprob: -10.258952140808105
    8. 'contin' → logprob: -10.383952140808105
    9. ' ont' → logprob: -10.633952140808105
    10. 'e' → logprob: -10.633952140808105

Token 1111: ' implic' (ID: 48641)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.07353749126195908
    2. ')' → logprob: -4.198537349700928
    3. ' strict' → logprob: -4.573537349700928
    4. ' possible' → logprob: -5.323537349700928
    5. ' continue' → logprob: -5.323537349700928
    6. ' interdit' → logprob: -5.698537349700928
    7. ' not' → logprob: -5.823537349700928
    8. ' a' → logprob: -6.073537349700928
    9. ' impossible' → logprob: -6.198537349700928
    10. ' space' → logprob: -6.323537349700928

Token 1112: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0008035530336201191
    2. 'e' → logprob: -7.750803470611572
    3. 'it' → logprob: -8.25080394744873
    4. ' ite' → logprob: -9.62580394744873
    5. 'i' → logprob: -11.25080394744873
    6. '
' → logprob: -11.25080394744873
    7. 'ité' → logprob: -12.62580394744873
    8. 'te' → logprob: -13.12580394744873
    9. ')' → logprob: -13.25080394744873
    10. ' it' → logprob: -13.50080394744873

Token 1113: ' car' (ID: 1669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40126267075538635
    2. ')' → logprob: -1.276262640953064
    3. ',' → logprob: -4.2762627601623535
    4. '):' → logprob: -4.4012627601623535
    5. '):
' → logprob: -4.9012627601623535
    6. ' )' → logprob: -5.6512627601623535
    7. '                   ' → logprob: -5.6512627601623535
    8. '),' → logprob: -5.7762627601623535
    9. ' and' → logprob: -6.0262627601623535
    10. ' or' → logprob: -6.4012627601623535

Token 1114: ' deux' (ID: 10301)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6589081287384033
    2. ' current' → logprob: -0.7839081287384033
    3. ' new' → logprob: -5.533907890319824
    4. ' lg' → logprob: -6.033907890319824
    5. 'foot' → logprob: -6.158907890319824
    6. ' les' → logprob: -6.408907890319824
    7. 'left' → logprob: -6.533907890319824
    8. 'new' → logprob: -6.533907890319824
    9. 'lg' → logprob: -6.533907890319824
    10. ' le' → logprob: -6.783907890319824

Token 1115: ' pieds' (ID: 72670)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7630231380462646
    2. ' pieds' → logprob: -1.2630231380462646
    3. 'p' → logprob: -2.1380231380462646
    4. ' )' → logprob: -2.8880231380462646
    5. 'positions' → logprob: -4.888023376464844
    6. ' p' → logprob: -5.013023376464844
    7. ' states' → logprob: -5.013023376464844
    8. ' espaces' → logprob: -5.263023376464844
    9. 's' → logprob: -5.388023376464844
    10. 'foot' → logprob: -5.763023376464844

Token 1116: ' sur' (ID: 1512)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2214702069759369
    2. '!=' → logprob: -2.2214701175689697
    3. ')' → logprob: -2.5964701175689697
    4. ' )' → logprob: -4.971470355987549
    5. '<|end|>' → logprob: -6.096470355987549
    6. ' distinct' → logprob: -6.471470355987549
    7. ' not' → logprob: -6.721470355987549
    8. ')!=' → logprob: -7.471470355987549
    9. ' ne' → logprob: -8.22146987915039
    10. ' different' → logprob: -8.47146987915039

Token 1117: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.3414185047149658
    2. 'le' → logprob: -2.341418504714966
    3. ' la' → logprob: -2.466418504714966
    4. ' le' → logprob: -2.716418504714966
    5. ' ' → logprob: -4.716418266296387
    6. ' mêmes' → logprob: -4.841418266296387
    7. ' same' → logprob: -5.216418266296387
    8. 'la' → logprob: -5.216418266296387
    9. 'same' → logprob: -5.716418266296387
    10. '```' → logprob: -6.091418266296387

Token 1118: ' panneau' (ID: 186597)
  Prédit: ' panneau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' panneau' → logprob: -0.5161747336387634
    2. 'panel' → logprob: -1.2661747932434082
    3. ' panel' → logprob: -2.266174793243408
    4. 'p' → logprob: -4.641174793243408
    5. 'pane' → logprob: -5.266174793243408
    6. 'pan' → logprob: -6.516174793243408
    7. '_panel' → logprob: -8.26617431640625
    8. 'case' → logprob: -8.64117431640625
    9. ')' → logprob: -8.76617431640625
    10. ' panneaux' → logprob: -9.14117431640625

Token 1119: ' impossible' (ID: 19786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19657714664936066
    2. '               ' → logprob: -2.9465770721435547
    3. '                   ' → logprob: -3.6965770721435547
    4. ')
' → logprob: -3.8215770721435547
    5. ' continue' → logprob: -3.8215770721435547
    6. ' )' → logprob: -3.9465770721435547
    7. ',' → logprob: -4.696577072143555
    8. '):
' → logprob: -4.821577072143555
    9. 'continue' → logprob: -5.321577072143555
    10. ' n' → logprob: -5.821577072143555

Token 1120: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32980912923812866
    2. ')' → logprob: -1.3298091888427734
    3. ')
' → logprob: -4.954809188842773
    4. '                   ' → logprob: -5.079809188842773
    5. '):
' → logprob: -6.704809188842773
    6. ',' → logprob: -6.829809188842773
    7. '):' → logprob: -8.954809188842773
    8. '),' → logprob: -9.204809188842773
    9. ' or' → logprob: -9.329809188842773
    10. '           ' → logprob: -9.454809188842773

Token 1121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.493430894101039e-05
    2. '           ' → logprob: -10.500075340270996
    3. '                   ' → logprob: -10.875075340270996
    4. '                
' → logprob: -11.750075340270996
    5. '```' → logprob: -11.875075340270996
    6. '              ' → logprob: -12.750075340270996
    7. '<|end|>' → logprob: -12.875075340270996
    8. '                ' → logprob: -13.250075340270996
    9. ' if' → logprob: -13.625075340270996
    10. 'if' → logprob: -13.750075340270996

Token 1122: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012177014723420143
    2. 'if' (adapté à ' if') → logprob: -5.137176990509033
    3. ' if' → logprob: -5.137176990509033
    4. '                
' → logprob: -8.762177467346191
    5. '           ' → logprob: -9.387177467346191
    6. '                   ' → logprob: -9.762177467346191
    7. 'continue' → logprob: -11.012177467346191
    8. ' continue' → logprob: -11.387177467346191
    9. '                ' → logprob: -12.262177467346191
    10. '              ' → logprob: -12.512177467346191

Token 1123: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12713021039962769
    2. ' current' → logprob: -2.1271302700042725
    3. '(current' → logprob: -8.752130508422852
    4. 'lg' → logprob: -11.127130508422852
    5. ' lg' → logprob: -12.252130508422852
    6. 'foot' → logprob: -12.377130508422852
    7. '   ' → logprob: -12.627130508422852
    8. '(' → logprob: -12.627130508422852
    9. 'new' → logprob: -12.752130508422852
    10. ' (' → logprob: -12.752130508422852

Token 1124: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.00015979631280060858
    2. '==' → logprob: -9.125160217285156
    3. 'panel' → logprob: -11.000160217285156
    4. '_pan' → logprob: -11.500160217285156
    5. ' panel' → logprob: -11.750160217285156
    6. ' ==' → logprob: -11.750160217285156
    7. '   ' → logprob: -13.250160217285156
    8. '(panel' → logprob: -13.750160217285156
    9. '_PANEL' → logprob: -13.750160217285156
    10. 'Panel' → logprob: -14.125160217285156

Token 1125: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.693913996219635
    2. ' ==' → logprob: -0.693913996219635
    3. ' in' → logprob: -7.31891393661499
    4. 'in' → logprob: -9.443914413452148
    5. '==
' → logprob: -11.568914413452148
    6. ')==' → logprob: -12.068914413452148
    7. ' ' → logprob: -13.443914413452148
    8. '==(' → logprob: -13.568914413452148
    9. '===' → logprob: -13.693914413452148
    10. ')' → logprob: -13.818914413452148

Token 1126: ' ld' (ID: 54008)
  Prédit: 'ld'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -1.1875571544806007e-05
    2. ' ld' → logprob: -11.500011444091797
    3. 'lg' → logprob: -13.875011444091797
    4. '(ld' → logprob: -15.250011444091797
    5. '
' → logprob: -15.625011444091797
    6. '   ' → logprob: -16.125011444091797
    7. '  ' → logprob: -16.875011444091797
    8. ' ' → logprob: -17.125011444091797
    9. 'rd' → logprob: -17.500011444091797
    10. '	' → logprob: -18.000011444091797

Token 1127: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30404695868492126
    2. '                   ' → logprob: -1.8040469884872437
    3. ':' → logprob: -3.054046869277954
    4. '               ' → logprob: -3.679046869277954
    5. ' continue' → logprob: -4.054047107696533
    6. 'continue' → logprob: -5.304047107696533
    7. '           ' → logprob: -7.054047107696533
    8. '	continue' → logprob: -7.554047107696533
    9. '                       ' → logprob: -7.804047107696533
    10. ' or' → logprob: -7.804047107696533

Token 1128: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.037400681525468826
    2. ' continue' → logprob: -3.662400722503662
    3. 'continue' → logprob: -4.787400722503662
    4. '               ' → logprob: -6.162400722503662
    5. '	continue' → logprob: -8.537400245666504
    6. '           ' → logprob: -8.787400245666504
    7. ':
' → logprob: -9.912400245666504
    8. '		           ' → logprob: -9.912400245666504
    9. '				' → logprob: -10.287400245666504
    10. '                       ' → logprob: -10.787400245666504

Token 1129: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1540093719959259
    2. ' continue' → logprob: -2.4040093421936035
    3. '                   ' → logprob: -3.0290093421936035
    4. '               ' → logprob: -5.6540093421936035
    5. '	continue' → logprob: -8.279009819030762
    6. '                       ' → logprob: -8.779009819030762
    7. '           ' → logprob: -9.529009819030762
    8. '   ' → logprob: -11.654009819030762
    9. '```' → logprob: -12.279009819030762
    10. '_continue' → logprob: -12.529009819030762

Token 1130: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021471697837114334
    2. '                   ' → logprob: -7.252147197723389
    3. '
' → logprob: -7.377147197723389
    4. '                
' → logprob: -7.627147197723389
    5. '<|end|>' → logprob: -9.25214672088623
    6. '```' → logprob: -9.87714672088623
    7. '                    
' → logprob: -10.00214672088623
    8. '           ' → logprob: -10.62714672088623
    9. 'continue' → logprob: -10.75214672088623
    10. '  
' → logprob: -11.00214672088623

Token 1131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012349952012300491
    2. '                
' → logprob: -7.251235008239746
    3. '
' → logprob: -7.626235008239746
    4. '                    
' → logprob: -11.876235008239746
    5. '                   ' → logprob: -12.126235008239746
    6. '  
' → logprob: -12.376235008239746
    7. '```' → logprob: -12.626235008239746
    8. 'continue' → logprob: -12.876235008239746
    9. '            
' → logprob: -12.876235008239746
    10. 'if' → logprob: -13.126235008239746

Token 1132: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.051296673715114594
    2. 'if' → logprob: -4.051296710968018
    3. '#' (adapté à ' #') → logprob: -4.426296710968018
    4. '
' → logprob: -4.551296710968018
    5. '                
' → logprob: -5.051296710968018
    6. 'pos' → logprob: -6.676296710968018
    7. 'new' → logprob: -6.926296710968018
    8. 'token' → logprob: -8.05129623413086
    9. '           ' → logprob: -8.17629623413086
    10. ' if' → logprob: -8.67629623413086

Token 1133: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1021738052368164
    2. '               ' → logprob: -1.1021738052368164
    3. '#' → logprob: -1.2271738052368164
    4. 'pos' → logprob: -3.9771738052368164
    5. 'left' → logprob: -4.477173805236816
    6. '       ' → logprob: -5.477173805236816
    7. 'g' → logprob: -5.977173805236816
    8. 'order' → logprob: -6.727173805236816
    9. ' if' → logprob: -7.227173805236816
    10. 'p' → logprob: -7.477173805236816

Token 1134: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5865785479545593
    2. 'order' → logprob: -0.8365785479545593
    3. '#' → logprob: -5.461578369140625
    4. ' order' → logprob: -5.836578369140625
    5. ' if' → logprob: -6.086578369140625
    6. '   ' → logprob: -8.336578369140625
    7. '           ' → logprob: -8.586578369140625
    8. '0' → logprob: -8.586578369140625
    9. '       ' → logprob: -8.961578369140625
    10. '(order' → logprob: -9.211578369140625

Token 1135: ' corps' (ID: 29363)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6536689400672913
    2. 'lg' → logprob: -1.9036688804626465
    3. ' if' → logprob: -2.2786688804626465
    4. 'order' → logprob: -2.4036688804626465
    5. ' order' → logprob: -3.1536688804626465
    6. 'g' → logprob: -3.5286688804626465
    7. 'left' → logprob: -4.1536688804626465
    8. '#' → logprob: -4.4036688804626465
    9. ' left' → logprob: -4.5286688804626465
    10. ' gauche' → logprob: -5.2786688804626465

Token 1136: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.9302524328231812
    2. ' gauche' → logprob: -1.6802524328231812
    3. '_' → logprob: -1.8052524328231812
    4. ' reste' → logprob: -2.4302525520324707
    5. ' must' → logprob: -3.1802525520324707
    6. ' ne' → logprob: -3.5552525520324707
    7. '_left' → logprob: -3.9302525520324707
    8. '_g' → logprob: -4.680252552032471
    9. ')' → logprob: -5.305252552032471
    10. 'g' → logprob: -5.430252552032471

Token 1137: ' rester' (ID: 54655)
  Prédit: ' rester'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rester' → logprob: -0.018578778952360153
    2. ' rest' → logprob: -4.643579006195068
    3. 'rest' → logprob: -5.893579006195068
    4. ' garder' → logprob: -6.518579006195068
    5. ' respecter' → logprob: -6.643579006195068
    6. ' être' → logprob: -7.268579006195068
    7. 'respect' → logprob: -8.01857852935791
    8. ' order' → logprob: -8.14357852935791
    9. 'ordre' → logprob: -8.39357852935791
    10. 'order' → logprob: -8.39357852935791

Token 1138: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.12342759966850281
    2. ' face' → logprob: -2.248427629470825
    3. 'f' → logprob: -6.123427391052246
    4. 'orient' → logprob: -6.248427391052246
    5. ' orient' → logprob: -6.873427391052246
    6. ' faced' → logprob: -7.748427391052246
    7. ' naturel' → logprob: -7.873427391052246
    8. ' facing' → logprob: -7.873427391052246
    9. ' tourn' → logprob: -7.998427391052246
    10. '_face' → logprob: -8.123427391052246

Token 1139: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.340943843126297
    2. '   ' → logprob: -1.8409438133239746
    3. 'à' → logprob: -3.3409438133239746
    4. ' à' → logprob: -3.4659438133239746
    5. 'au' → logprob: -3.5909438133239746
    6. ' ' → logprob: -3.5909438133239746
    7. ' avant' → logprob: -5.965943813323975
    8. ' au' → logprob: -7.090943813323975
    9. '  ' → logprob: -7.215943813323975
    10. 'av' → logprob: -7.340943813323975

Token 1140: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013343866914510727
    2. ' (' → logprob: -5.013343811035156
    3. ' if' → logprob: -6.013343811035156
    4. 'if' → logprob: -6.638343811035156
    5. '                   ' → logprob: -6.888343811035156
    6. '                
' → logprob: -7.763343811035156
    7. '(' → logprob: -8.263343811035156
    8. '```' → logprob: -8.638343811035156
    9. '                       ' → logprob: -9.013343811035156
    10. ' and' → logprob: -9.138343811035156

Token 1141: ' jambes' (ID: 144942)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.1629115492105484
    2. ' order' → logprob: -1.9129115343093872
    3. 'not' → logprob: -7.037911415100098
    4. ' not' → logprob: -7.787911415100098
    5. '(order' → logprob: -7.912911415100098
    6. 'ordre' → logprob: -8.037911415100098
    7. 'lg' → logprob: -8.912911415100098
    8. ' ordre' → logprob: -9.037911415100098
    9. 'respect' → logprob: -10.162911415100098
    10. '#' → logprob: -10.600411415100098

Token 1142: ' sans' (ID: 9828)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.4740482270717621
    2. ' non' → logprob: -1.9740482568740845
    3. 'cro' → logprob: -2.599048137664795
    4. '_non' → logprob: -2.724048137664795
    5. 'ne' → logprob: -3.474048137664795
    6. 'dro' → logprob: -4.974048137664795
    7. ' sépar' → logprob: -4.974048137664795
    8. 'n' → logprob: -5.099048137664795
    9. ' crois' → logprob: -5.349048137664795
    10. ' ne' → logprob: -5.724048137664795

Token 1143: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.0013923770748078823
    2. 'se' → logprob: -7.626392364501953
    3. 'cross' → logprob: -7.751392364501953
    4. ' cro' → logprob: -8.626392364501953
    5. '```' → logprob: -8.751392364501953
    6. 'c' → logprob: -10.001392364501953
    7. '
' → logprob: -10.376392364501953
    8. ' se' → logprob: -11.001392364501953
    9. '   ' → logprob: -11.876392364501953
    10. ' ' → logprob: -12.251392364501953

Token 1144: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.003030713414773345
    2. 'ise' → logprob: -6.378030776977539
    3. 'is' → logprob: -7.253030776977539
    4. 'isé' → logprob: -8.628030776977539
    5. 'isées' → logprob: -8.753030776977539
    6. 'isée' → logprob: -9.378030776977539
    7. 'user' → logprob: -10.128030776977539
    8. 'ises' → logprob: -10.128030776977539
    9. 'isement' → logprob: -10.378030776977539
    10. 'isés' → logprob: -10.503030776977539

Token 1145: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6042153835296631
    2. 'if' → logprob: -0.9792153835296631
    3. 'g' → logprob: -3.479215383529663
    4. '               ' → logprob: -3.729215383529663
    5. ' (' → logprob: -5.354215621948242
    6. '                   ' → logprob: -5.729215621948242
    7. '(' → logprob: -6.104215621948242
    8. '#' → logprob: -6.479215621948242
    9. '       ' → logprob: -6.604215621948242
    10. '           ' → logprob: -6.729215621948242

Token 1146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004354406148195267
    2. ' if' → logprob: -5.629354476928711
    3. 'if' → logprob: -7.379354476928711
    4. '                
' → logprob: -9.504354476928711
    5. '<|end|>' → logprob: -10.629354476928711
    6. '```' → logprob: -11.629354476928711
    7. ',' → logprob: -12.504354476928711
    8. ' (' → logprob: -13.004354476928711
    9. ' ' → logprob: -13.004354476928711
    10. '                ' → logprob: -13.379354476928711

Token 1147: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23312333226203918
    2. 'if' → logprob: -1.7331233024597168
    3. ' if' → logprob: -3.483123302459717
    4. 'left' → logprob: -9.233123779296875
    5. '                
' → logprob: -9.858123779296875
    6. 'pos' → logprob: -9.983123779296875
    7. '
' → logprob: -9.983123779296875
    8. '           ' → logprob: -10.483123779296875
    9. 'continue' → logprob: -10.608123779296875
    10. '```' → logprob: -10.858123779296875

Token 1148: ' order' (ID: 2569)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9066240787506104
    2. 'if' → logprob: -1.1566240787506104
    3. '               ' → logprob: -1.2816240787506104
    4. 'left' → logprob: -6.531623840332031
    5. ' left' → logprob: -6.656623840332031
    6. 'g' → logprob: -8.281623840332031
    7. '                
' → logprob: -8.406623840332031
    8. '
' → logprob: -9.281623840332031
    9. '#' → logprob: -9.656623840332031
    10. ' ' → logprob: -9.781623840332031

Token 1149: '_panel' (ID: 54810)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.6901885271072388
    2. '_l' → logprob: -0.9401885271072388
    3. '_current' → logprob: -2.815188407897949
    4. '_left' → logprob: -3.940188407897949
    5. 'g' → logprob: -4.690188407897949
    6. '_map' → logprob: -5.190188407897949
    7. '_p' → logprob: -5.190188407897949
    8. '_cur' → logprob: -6.315188407897949
    9. '_curr' → logprob: -6.565188407897949
    10. ' =' → logprob: -7.315188407897949

Token 1150: '(p' (ID: 2407)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.373315453529358
    2. '_current' → logprob: -1.498315453529358
    3. '_p' → logprob: -1.623315453529358
    4. '_val' → logprob: -2.6233153343200684
    5. '_l' → logprob: -2.9983153343200684
    6. ' =' → logprob: -3.1233153343200684
    7. 'current' → logprob: -3.4983153343200684
    8. '_value' → logprob: -3.4983153343200684
    9. '_left' → logprob: -3.7483153343200684
    10. '=' → logprob: -3.9983153343200684

Token 1151: 'ied' (ID: 1165)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.5445047616958618
    2. '(current' → logprob: -1.4195047616958618
    3. 'anel' → logprob: -2.5445046424865723
    4. 'current' → logprob: -3.4195046424865723
    5. '(' → logprob: -4.044504642486572
    6. 'score' → logprob: -4.169504642486572
    7. ')' → logprob: -4.294504642486572
    8. 'an' → logprob: -5.169504642486572
    9. '('' → logprob: -5.544504642486572
    10. '')' → logprob: -6.419504642486572

Token 1152: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -1.101917028427124
    2. 'g' → logprob: -1.226917028427124
    3. '_g' → logprob: -1.351917028427124
    4. ')' → logprob: -2.476917028427124
    5. '_left' → logprob: -4.351917266845703
    6. 'left' → logprob: -5.601917266845703
    7. ' =' → logprob: -6.851917266845703
    8. '('' → logprob: -6.851917266845703
    9. 's' → logprob: -6.851917266845703
    10. '_' → logprob: -7.101917266845703

Token 1153: ')' (ID: 8)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.14332258701324463
    2. ')' → logprob: -2.143322467803955
    3. 'current' → logprob: -5.643322467803955
    4. '(l' → logprob: -6.268322467803955
    5. '[current' → logprob: -6.268322467803955
    6. '('' → logprob: -6.893322467803955
    7. ')<' → logprob: -7.018322467803955
    8. '(panel' → logprob: -7.018322467803955
    9. '(score' → logprob: -7.268322467803955
    10. '(' → logprob: -7.518322467803955

Token 1154: ' <' (ID: 464)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1927506923675537
    2. '(current' → logprob: -1.1927506923675537
    3. 'current' → logprob: -2.6927506923675537
    4. ' =' → logprob: -2.6927506923675537
    5. '_l' → logprob: -2.9427506923675537
    6. '_current' → logprob: -3.1927506923675537
    7. 'lg' → logprob: -3.3177506923675537
    8. ')' → logprob: -3.9427506923675537
    9. '=' → logprob: -3.9427506923675537
    10. '[current' → logprob: -4.192750930786133

Token 1155: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.3486434519290924
    2. 'order' → logprob: -1.22364342212677
    3. ' current' → logprob: -8.84864330291748
    4. 'current' → logprob: -10.59864330291748
    5. ' ' → logprob: -11.72364330291748
    6. '(order' → logprob: -12.09864330291748
    7. '=' → logprob: -12.59864330291748
    8. 'ordre' → logprob: -12.72364330291748
    9. '	order' → logprob: -12.72364330291748
    10. '   ' → logprob: -13.72364330291748

Token 1156: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.015845606103539467
    2. 'panel' → logprob: -4.265845775604248
    3. '(current' → logprob: -6.890845775604248
    4. 'current' → logprob: -7.640845775604248
    5. '(panel' → logprob: -9.26584529876709
    6. ' panel' → logprob: -10.39084529876709
    7. 'Panel' → logprob: -10.64084529876709
    8. 'p' → logprob: -11.64084529876709
    9. '_PANEL' → logprob: -12.14084529876709
    10. 'pan' → logprob: -12.76584529876709

Token 1157: '(p' (ID: 2407)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.6011543273925781
    2. '(current' → logprob: -0.8511543273925781
    3. 'current' → logprob: -4.601154327392578
    4. 'score' → logprob: -4.726154327392578
    5. '(' → logprob: -5.476154327392578
    6. '(l' → logprob: -7.726154327392578
    7. '(p' → logprob: -8.351154327392578
    8. ' (' → logprob: -8.476154327392578
    9. '(ld' → logprob: -8.976154327392578
    10. ' current' → logprob: -9.351154327392578

Token 1158: 'ied' (ID: 1165)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06342142075300217
    2. 'lg' → logprob: -3.4384214878082275
    3. 'score' → logprob: -4.438421249389648
    4. '(current' → logprob: -5.063421249389648
    5. 'anel' → logprob: -5.188421249389648
    6. ' current' → logprob: -6.563421249389648
    7. 'panel' → logprob: -6.813421249389648
    8. ')' → logprob: -7.813421249389648
    9. 'an' → logprob: -7.813421249389648
    10. 'foot' → logprob: -8.313421249389648

Token 1159: ' droit' (ID: 29964)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.21687474846839905
    2. 'current' → logprob: -2.341874837875366
    3. 'dro' → logprob: -2.591874837875366
    4. 'right' → logprob: -4.466874599456787
    5. 'left' → logprob: -5.091874599456787
    6. ' gauche' → logprob: -6.466874599456787
    7. 'd' → logprob: -6.466874599456787
    8. ' droite' → logprob: -6.966874599456787
    9. 'gau' → logprob: -7.341874599456787
    10. '(current' → logprob: -7.841874599456787

Token 1160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8560380339622498
    2. '               ' → logprob: -1.2310380935668945
    3. '(current' → logprob: -2.4810380935668945
    4. ' or' → logprob: -2.7310380935668945
    5. '):
' → logprob: -3.1060380935668945
    6. '                   ' → logprob: -3.6060380935668945
    7. ' and' → logprob: -4.7310380935668945
    8. '):' → logprob: -4.8560380935668945
    9. ':
' → logprob: -5.1060380935668945
    10. 'or' → logprob: -5.2310380935668945

Token 1161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004335883539170027
    2. ' if' → logprob: -6.004335880279541
    3. 'if' → logprob: -6.504335880279541
    4. ' and' → logprob: -9.5043363571167
    5. '                   ' → logprob: -9.8793363571167
    6. ' =' → logprob: -10.0043363571167
    7. ',' → logprob: -10.1293363571167
    8. '                
' → logprob: -10.7543363571167
    9. ')' → logprob: -10.8793363571167
    10. ' (' → logprob: -11.0043363571167

Token 1162: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06280677020549774
    2. ' if' → logprob: -3.4378068447113037
    3. 'if' → logprob: -3.5628068447113037
    4. '                
' → logprob: -9.062807083129883
    5. '                   ' → logprob: -9.562807083129883
    6. 'p' → logprob: -9.937807083129883
    7. '
' → logprob: -10.812807083129883
    8. '           ' → logprob: -10.937807083129883
    9. '```' → logprob: -11.062807083129883
    10. ' p' → logprob: -11.312807083129883

Token 1163: ' pieds' (ID: 72670)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.960020899772644
    2. '               ' → logprob: -0.960020899772644
    3. ' if' → logprob: -1.460020899772644
    4. 'left' → logprob: -6.710021018981934
    5. ' left' → logprob: -8.210021018981934
    6. 'p' → logprob: -9.460021018981934
    7. '
' → logprob: -9.585021018981934
    8. '                
' → logprob: -9.835021018981934
    9. 'order' → logprob: -9.835021018981934
    10. 'current' → logprob: -10.585021018981934

Token 1164: ' sur' (ID: 1512)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.9775484800338745
    2. '_g' → logprob: -1.7275484800338745
    3. '_pos' → logprob: -1.9775484800338745
    4. '_order' → logprob: -2.102548599243164
    5. ' =' → logprob: -2.602548599243164
    6. '_val' → logprob: -3.477548599243164
    7. '_ord' → logprob: -4.352548599243164
    8. 'left' → logprob: -4.477548599243164
    9. '_l' → logprob: -4.727548599243164
    10. '=' → logprob: -4.852548599243164

Token 1165: ' (' (ID: 350)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9541926980018616
    2. 'order' → logprob: -1.8291926383972168
    3. 'current' → logprob: -2.079192638397217
    4. '(score' → logprob: -2.579192638397217
    5. ' order' → logprob: -2.829192638397217
    6. ' score' → logprob: -3.079192638397217
    7. ' current' → logprob: -3.204192638397217
    8. ' (' → logprob: -3.829192638397217
    9. '(order' → logprob: -4.454192638397217
    10. '('' → logprob: -4.579192638397217

Token 1166: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.152705118060112
    2. ' current' → logprob: -2.777705192565918
    3. 'score' → logprob: -3.152705192565918
    4. '(current' → logprob: -4.152705192565918
    5. 'order' → logprob: -4.902705192565918
    6. ' (' → logprob: -6.027705192565918
    7. '(' → logprob: -6.152705192565918
    8. 'panel' → logprob: -6.527705192565918
    9. '(score' → logprob: -6.777705192565918
    10. ' score' → logprob: -7.152705192565918

Token 1167: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.0003017385315615684
    2. '_p' → logprob: -9.125301361083984
    3. '_' → logprob: -9.625301361083984
    4. 'panel' → logprob: -10.500301361083984
    5. 'Panel' → logprob: -11.375301361083984
    6. ')_' → logprob: -11.625301361083984
    7. ')' → logprob: -11.625301361083984
    8. '```' → logprob: -11.750301361083984
    9. '_pan' → logprob: -11.875301361083984
    10. '_,' → logprob: -12.000301361083984

Token 1168: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.509389340877533
    2. ',' → logprob: -1.0093894004821777
    3. '),' → logprob: -4.384389400482178
    4. '               ' → logprob: -4.759389400482178
    5. ' ,' → logprob: -5.384389400482178
    6. '                   ' → logprob: -6.384389400482178
    7. ' if' → logprob: -6.884389400482178
    8. '))' → logprob: -7.009389400482178
    9. ' )' → logprob: -7.134389400482178
    10. ')
' → logprob: -7.384389400482178

Token 1169: ' ld' (ID: 54008)
  Prédit: ' ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ld' → logprob: -0.6335418224334717
    2. 'ld' → logprob: -0.7585418224334717
    3. '(ld' → logprob: -7.508542060852051
    4. ' order' → logprob: -9.25854206085205
    5. 'order' → logprob: -9.38354206085205
    6. 'lg' → logprob: -9.63354206085205
    7. '_ld' → logprob: -10.50854206085205
    8. ' lg' → logprob: -10.50854206085205
    9. ' ' → logprob: -11.25854206085205
    10. ' (' → logprob: -11.50854206085205

Token 1170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1726851761341095
    2. '):
' → logprob: -2.047685146331787
    3. ')
' → logprob: -3.672685146331787
    4. '):' → logprob: -6.422685146331787
    5. '               ' → logprob: -6.922685146331787
    6. '),' → logprob: -7.547685146331787
    7. '):

' → logprob: -8.047685623168945
    8. '                   ' → logprob: -8.922685623168945
    9. ' )' → logprob: -8.922685623168945
    10. ')<' → logprob: -9.047685623168945

Token 1171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009641341865062714
    2. ' and' → logprob: -5.134641170501709
    3. ' if' → logprob: -6.634641170501709
    4. '                   ' → logprob: -6.759641170501709
    5. '<|end|>' → logprob: -8.634641647338867
    6. 'if' → logprob: -8.759641647338867
    7. '                       ' → logprob: -9.134641647338867
    8. '	           ' → logprob: -9.259641647338867
    9. '<|end|>' → logprob: -9.759641647338867
    10. 'and' → logprob: -9.759641647338867

Token 1172: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5329940319061279
    2. '               ' → logprob: -1.407994031906128
    3. ' if' → logprob: -1.782994031906128
    4. 'current' → logprob: -8.657994270324707
    5. '```' → logprob: -10.282994270324707
    6. '
' → logprob: -10.782994270324707
    7. 'order' → logprob: -10.907994270324707
    8. '                
' → logprob: -10.907994270324707
    9. '           ' → logprob: -11.032994270324707
    10. 'p' → logprob: -11.532994270324707

Token 1173: ' ld' (ID: 54008)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02005629613995552
    2. '               ' → logprob: -4.020056247711182
    3. ' if' → logprob: -6.270056247711182
    4. 'left' → logprob: -12.89505672454834
    5. 'order' → logprob: -13.14505672454834
    6. '                
' → logprob: -13.27005672454834
    7. '```' → logprob: -13.39505672454834
    8. '                   ' → logprob: -14.02005672454834
    9. '	if' → logprob: -14.39505672454834
    10. 'l' → logprob: -14.77005672454834

Token 1174: ' peut' (ID: 9216)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6734917759895325
    2. '!=' → logprob: -1.6734917163848877
    3. ' ==' → logprob: -2.2984917163848877
    4. ' !=' → logprob: -2.6734917163848877
    5. '==-' → logprob: -3.0484917163848877
    6. '=' → logprob: -3.1734917163848877
    7. '!=-' → logprob: -4.423491954803467
    8. 'is' → logprob: -4.923491954803467
    9. 'order' → logprob: -5.048491954803467
    10. ' =' → logprob: -6.048491954803467

Token 1175: ' être' (ID: 9104)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14229978621006012
    2. '==-' → logprob: -2.5172998905181885
    3. '==' → logprob: -3.8922998905181885
    4. 'être' → logprob: -4.517299652099609
    5. ' être' → logprob: -4.892299652099609
    6. '=' → logprob: -5.642299652099609
    7. 'be' → logprob: -5.892299652099609
    8. ' -' → logprob: -6.017299652099609
    9. '-être' → logprob: -6.642299652099609
    10. ' be' → logprob: -7.017299652099609

Token 1176: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010211274639004841
    2. ' -' → logprob: -9.250102043151855
    3. '==' → logprob: -12.375102043151855
    4. '==-' → logprob: -13.875102043151855
    5. '   ' → logprob: -14.500102043151855
    6. '=' → logprob: -16.375102996826172
    7. '=-' → logprob: -17.500102996826172
    8. '  ' → logprob: -17.625102996826172
    9. '       ' → logprob: -17.625102996826172
    10. ' ' → logprob: -17.875102996826172

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '2' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '   ' → logprob: -14.875003814697266
    5. '```' → logprob: -15.312503814697266
    6. '-' → logprob: -15.812503814697266
    7. '<|end|>' → logprob: -16.187503814697266
    8. '{' → logprob: -16.812503814697266
    9. '۱' → logprob: -16.937503814697266
    10. '(' → logprob: -16.937503814697266

Token 1178: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006821816321462393
    2. ' if' → logprob: -5.131821632385254
    3. 'if' → logprob: -8.131821632385254
    4. '                
' → logprob: -8.381821632385254
    5. '                   ' → logprob: -9.881821632385254
    6. '<|end|>' → logprob: -9.881821632385254
    7. ',' → logprob: -10.256821632385254
    8. ' ' → logprob: -10.381821632385254
    9. '```' → logprob: -10.381821632385254
    10. '	           ' → logprob: -11.131821632385254

Token 1179: 'pas' (ID: 21122)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5236197710037231
    2. 'True' → logprob: -1.8986197710037231
    3. '-' → logprob: -2.7736196517944336
    4. '                   ' → logprob: -3.0236196517944336
    5. ' continue' → logprob: -3.7736196517944336
    6. 'contin' → logprob: -3.8986196517944336
    7. '               ' → logprob: -4.273619651794434
    8. 'true' → logprob: -4.648619651794434
    9. ')' → logprob: -4.648619651794434
    10. 'if' → logprob: -4.898619651794434

Token 1180: ' encore' (ID: 14043)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20116545259952545
    2. 'sur' → logprob: -2.5761654376983643
    3. 'posé' → logprob: -3.3261654376983643
    4. 'dé' → logprob: -3.9511654376983643
    5. 'app' → logprob: -4.826165676116943
    6. 'enc' → logprob: -4.951165676116943
    7. 'def' → logprob: -5.201165676116943
    8. 'dep' → logprob: -5.826165676116943
    9. 'prés' → logprob: -5.826165676116943
    10. 'plac' → logprob: -5.951165676116943

Token 1181: ' posé' (ID: 165138)
  Prédit: 'posé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posé' → logprob: -0.3840041756629944
    2. 'pos' → logprob: -2.6340041160583496
    3. 'position' → logprob: -2.8840041160583496
    4. 'app' → logprob: -2.8840041160583496
    5. ' posé' → logprob: -3.0090041160583496
    6. 'sur' → logprob: -3.7590041160583496
    7. 'plac' → logprob: -4.00900411605835
    8. ' placé' → logprob: -4.50900411605835
    9. 'dé' → logprob: -4.75900411605835
    10. 'de' → logprob: -5.00900411605835

Token 1182: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03461449220776558
    2. '),' → logprob: -4.034614562988281
    3. ')
' → logprob: -5.159614562988281
    4. ' or' → logprob: -5.534614562988281
    5. ' ou' → logprob: -6.284614562988281
    6. '               ' → logprob: -6.659614562988281
    7. '):
' → logprob: -6.909614562988281
    8. 'ou' → logprob: -7.784614562988281
    9. '                   ' → logprob: -7.784614562988281
    10. ',' → logprob: -8.284614562988281

Token 1183: ' alors' (ID: 17971)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.748576283454895
    2. '               ' → logprob: -1.248576283454895
    3. ' continue' → logprob: -1.873576283454895
    4. 'continue' → logprob: -3.4985761642456055
    5. 'if' → logprob: -3.8735761642456055
    6. '                   ' → logprob: -4.3735761642456055
    7. ' continues' → logprob: -5.2485761642456055
    8. '           ' → logprob: -5.4985761642456055
    9. ' ' → logprob: -5.4985761642456055
    10. ' or' → logprob: -5.9985761642456055

Token 1184: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2056806087493896
    2. 'if' → logprob: -1.3306806087493896
    3. ' continue' → logprob: -1.8306806087493896
    4. ' if' → logprob: -1.8306806087493896
    5. 'True' → logprob: -2.8306806087493896
    6. ' True' → logprob: -3.3306806087493896
    7. '               ' → logprob: -5.330680847167969
    8. ' new' → logprob: -5.455680847167969
    9. '           ' → logprob: -5.830680847167969
    10. '                   ' → logprob: -5.830680847167969

Token 1185: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.11861828714609146
    2. 'd' → logprob: -2.8686182498931885
    3. 'pro' → logprob: -3.6186182498931885
    4. 'problem' → logprob: -5.243618488311768
    5. 'possible' → logprob: -5.243618488311768
    6. ' de' → logprob: -5.493618488311768
    7. '#' → logprob: -5.618618488311768
    8. 'def' → logprob: -5.743618488311768
    9. 'proble' → logprob: -5.993618488311768
    10. ' besoin' → logprob: -7.993618488311768

Token 1186: ' problème' (ID: 35630)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.7192552089691162
    2. 'pro' → logprob: -1.9692552089691162
    3. 'restriction' → logprob: -2.219255208969116
    4. 'if' → logprob: -2.594255208969116
    5. 'continue' → logprob: -2.719255208969116
    6. 'proble' → logprob: -3.219255208969116
    7. 'problem' → logprob: -4.094255447387695
    8. ' problème' → logprob: -4.094255447387695
    9. 'check' → logprob: -4.594255447387695
    10. 'contra' → logprob: -5.094255447387695

Token 1187: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018496280536055565
    2. '           ' → logprob: -7.00184965133667
    3. '                
' → logprob: -7.87684965133667
    4. '                   ' → logprob: -8.001849174499512
    5. ' if' → logprob: -10.001849174499512
    6. 'if' → logprob: -10.876849174499512
    7. '                    
' → logprob: -11.001849174499512
    8. '            
' → logprob: -11.001849174499512
    9. '<|end|>' → logprob: -11.126849174499512
    10. '                ' → logprob: -11.251849174499512

Token 1188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003784989472478628
    2. 'if' → logprob: -6.003785133361816
    3. ' if' → logprob: -6.753785133361816
    4. '           ' → logprob: -9.503785133361816
    5. '```' → logprob: -10.753785133361816
    6. '                
' → logprob: -10.878785133361816
    7. '                   ' → logprob: -11.128785133361816
    8. 'continue' → logprob: -13.253785133361816
    9. '	           ' → logprob: -13.503785133361816
    10. '			' → logprob: -13.503785133361816

Token 1189: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022746773902326822
    2. 'if' (adapté à ' if') → logprob: -6.377274513244629
    3. ' if' → logprob: -7.502274513244629
    4. '           ' → logprob: -11.627274513244629
    5. '                
' → logprob: -12.377274513244629
    6. '                   ' → logprob: -12.627274513244629
    7. '```' → logprob: -13.627274513244629
    8. '
' → logprob: -14.377274513244629
    9. '			' → logprob: -14.877274513244629
    10. 'continue' → logprob: -15.377274513244629

Token 1190: ' ld' (ID: 54008)
  Prédit: 'ld'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.07295753061771393
    2. ' ld' → logprob: -3.3229575157165527
    3. 'order' → logprob: -3.8229575157165527
    4. '(ld' → logprob: -5.322957515716553
    5. 'current' → logprob: -5.697957515716553
    6. ' order' → logprob: -6.572957515716553
    7. ' current' → logprob: -7.447957515716553
    8. '(' → logprob: -7.947957515716553
    9. '           ' → logprob: -8.322957992553711
    10. '   ' → logprob: -8.322957992553711

Token 1191: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5052652359008789
    2. '==-' → logprob: -1.505265235900879
    3. ' ==' → logprob: -2.380265235900879
    4. '!=' → logprob: -2.755265235900879
    5. ' !=' → logprob: -4.505265235900879
    6. '!=-' → logprob: -5.005265235900879
    7. '>=' → logprob: -8.630265235900879
    8. '=' → logprob: -8.630265235900879
    9. ')' → logprob: -8.755265235900879
    10. 'is' → logprob: -8.880265235900879

Token 1192: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.842555426876061e-06
    2. ' -' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. ' ' → logprob: -21.0000057220459
    5. '  ' → logprob: -22.0000057220459
    6. '	' → logprob: -22.2500057220459
    7. '−' → logprob: -22.7500057220459
    8. '           ' → logprob: -23.1250057220459
    9. '
' → logprob: -23.3750057220459
    10. '       ' → logprob: -23.6250057220459

Token 1193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.5
    3. '2' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. '   ' → logprob: -17.375
    6. '۱' → logprob: -18.8125
    7. '১' → logprob: -19.0
    8. '१' → logprob: -19.4375
    9. '                                           ' → logprob: -19.875
    10. '           ' → logprob: -19.875

Token 1194: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06999590992927551
    2. 'and' → logprob: -2.694995880126953
    3. '                   ' → logprob: -11.194995880126953
    4. '               ' → logprob: -12.069995880126953
    5. '>=' → logprob: -12.069995880126953
    6. ' ' → logprob: -12.444995880126953
    7. '	and' → logprob: -12.819995880126953
    8. '   ' → logprob: -12.819995880126953
    9. '                    ' → logprob: -12.944995880126953
    10. '                       ' → logprob: -12.944995880126953

Token 1195: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.30144399404525757
    2. '                   ' → logprob: -2.0514440536499023
    3. '               ' → logprob: -2.6764440536499023
    4. '                       ' → logprob: -3.3014440536499023
    5. '<|end|>' → logprob: -5.176444053649902
    6. '           ' → logprob: -5.301444053649902
    7. ' if' → logprob: -5.801444053649902
    8. ':
' → logprob: -6.051444053649902
    9. 'and' → logprob: -6.926444053649902
    10. ':' → logprob: -6.926444053649902

Token 1196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28550633788108826
    2. ' if' → logprob: -1.4105063676834106
    3. '                       ' → logprob: -5.660506248474121
    4. '                   ' → logprob: -7.410506248474121
    5. 'continue' → logprob: -9.535506248474121
    6. '                           ' → logprob: -10.285506248474121
    7. 'order' → logprob: -10.660506248474121
    8. '                               ' → logprob: -10.785506248474121
    9. '```' → logprob: -11.410506248474121
    10. ' and' → logprob: -11.410506248474121

Token 1197: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0077340384013950825
    2. ' order' → logprob: -4.8827338218688965
    3. '                   ' → logprob: -9.382734298706055
    4. '   ' → logprob: -11.257734298706055
    5. '                       ' → logprob: -11.257734298706055
    6. '(order' → logprob: -12.007734298706055
    7. 'not' → logprob: -12.382734298706055
    8. '               ' → logprob: -12.757734298706055
    9. '                           ' → logprob: -13.632734298706055
    10. '	order' → logprob: -14.132734298706055

Token 1198: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.000835716025903821
    2. 'panel' → logprob: -7.62583589553833
    3. '(current' → logprob: -8.500835418701172
    4. 'Panel' → logprob: -9.500835418701172
    5. '(panel' → logprob: -9.875835418701172
    6. ' panel' → logprob: -12.000835418701172
    7. '_PANEL' → logprob: -12.750835418701172
    8. 'current' → logprob: -13.625835418701172
    9. '_pan' → logprob: -13.625835418701172
    10. '	panel' → logprob: -14.000835418701172

Token 1199: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.36026328802108765
    2. '(current' → logprob: -1.6102633476257324
    3. 'score' → logprob: -3.6102633476257324
    4. '(panel' → logprob: -3.6102633476257324
    5. '(chr' → logprob: -3.7352633476257324
    6. '(' → logprob: -4.610263347625732
    7. '(order' → logprob: -5.610263347625732
    8. 'current' → logprob: -5.735263347625732
    9. '('' → logprob: -6.235263347625732
    10. 'panel' → logprob: -6.360263347625732

Token 1200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044401636114344
    2. '[' → logprob: -8.750444412231445
    3. 'i' → logprob: -8.875444412231445
    4. ')' → logprob: -9.375444412231445
    5. ')[' → logprob: -11.375444412231445
    6. '[
' → logprob: -11.500444412231445
    7. ',i' → logprob: -11.625444412231445
    8. ')i' → logprob: -11.875444412231445
    9. '[current' → logprob: -12.125444412231445
    10. '{i' → logprob: -13.125444412231445

Token 1201: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015130772953853011
    2. '])' → logprob: -6.7515130043029785
    3. '[' → logprob: -8.251513481140137
    4. ']' → logprob: -10.626513481140137
    5. 'i' → logprob: -11.001513481140137
    6. '[
' → logprob: -11.251513481140137
    7. '][' → logprob: -11.876513481140137
    8. '(i' → logprob: -12.001513481140137
    9. '[j' → logprob: -12.501513481140137
    10. ')' → logprob: -13.501513481140137

Token 1202: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.21964752674102783
    2. '>=' → logprob: -1.8446475267410278
    3. ' >' → logprob: -3.5946474075317383
    4. '>' → logprob: -4.719647407531738
    5. ')' → logprob: -6.219647407531738
    6. ' <' → logprob: -8.594647407531738
    7. ')>=' → logprob: -8.969647407531738
    8. '                           ' → logprob: -9.594647407531738
    9. '<' → logprob: -10.219647407531738
    10. ' <=' → logprob: -10.344647407531738

Token 1203: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00033677343162707984
    2. ' order' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.000336647033691
    4. '(order' → logprob: -16.250337600708008
    5. 'ordre' → logprob: -16.750337600708008
    6. '	order' → logprob: -17.125337600708008
    7. '                   ' → logprob: -17.250337600708008
    8. '
' → logprob: -17.250337600708008
    9. ' ' → logprob: -17.375337600708008
    10. '           ' → logprob: -17.875337600708008

Token 1204: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -1.1684455871582031
    2. 'order' → logprob: -1.5434455871582031
    3. '(score' → logprob: -1.5434455871582031
    4. 'score' → logprob: -1.9184455871582031
    5. '_map' → logprob: -3.543445587158203
    6. 'panel' → logprob: -3.543445587158203
    7. '(order' → logprob: -3.668445587158203
    8. '[' → logprob: -4.293445587158203
    9. '(ld' → logprob: -5.793445587158203
    10. 'Panel' → logprob: -5.918445587158203

Token 1205: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.0037996075116097927
    2. 'score' → logprob: -5.7537994384765625
    3. '[' → logprob: -8.378799438476562
    4. '(' → logprob: -8.753799438476562
    5. '(ld' → logprob: -8.878799438476562
    6. '(chr' → logprob: -11.128799438476562
    7. '(panel' → logprob: -12.128799438476562
    8. '(code' → logprob: -12.128799438476562
    9. '(sc' → logprob: -12.253799438476562
    10. '	score' → logprob: -12.253799438476562

Token 1206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4809078574180603
    2. '[i' → logprob: -0.9809078574180603
    3. 'ld' → logprob: -5.355907917022705
    4. 'i' → logprob: -7.105907917022705
    5. ')' → logprob: -8.480907440185547
    6. 'score' → logprob: -8.605907440185547
    7. ']' → logprob: -8.730907440185547
    8. '[j' → logprob: -8.730907440185547
    9. '   ' → logprob: -8.855907440185547
    10. ' ' → logprob: -9.480907440185547

Token 1207: 'ld' (ID: 582)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6929625868797302
    2. 'ld' → logprob: -1.567962646484375
    3. '[i' → logprob: -1.942962646484375
    4. '[' → logprob: -2.067962646484375
    5. 'score' → logprob: -5.067962646484375
    6. 'states' → logprob: -6.192962646484375
    7. ']' → logprob: -6.317962646484375
    8. 'lg' → logprob: -6.567962646484375
    9. ' ' → logprob: -6.692962646484375
    10. '   ' → logprob: -7.317962646484375

Token 1208: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1519049108028412
    2. ']):
' → logprob: -2.526904821395874
    3. '):' → logprob: -3.776904821395874
    4. ')' → logprob: -3.776904821395874
    5. ']):' → logprob: -5.026905059814453
    6. '])' → logprob: -6.026905059814453
    7. ')]' → logprob: -6.651905059814453
    8. '                       ' → logprob: -6.901905059814453
    9. ']:
' → logprob: -7.526905059814453
    10. '                   ' → logprob: -7.776905059814453

Token 1209: '                       ' (ID: 968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6329429149627686
    2. 'continue' → logprob: -1.2579429149627686
    3. '                       ' → logprob: -2.0079429149627686
    4. '                           ' → logprob: -3.3829429149627686
    5. '                               ' → logprob: -5.007943153381348
    6. '                   ' → logprob: -5.882943153381348
    7. '<|end|>' → logprob: -6.007943153381348
    8. '	continue' → logprob: -6.257943153381348
    9. ':' → logprob: -7.132943153381348
    10. ':
' → logprob: -8.132943153381348

Token 1210: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.018544020131230354
    2. ' continue' → logprob: -4.0185441970825195
    3. '                           ' → logprob: -8.39354419708252
    4. '                       ' → logprob: -9.26854419708252
    5. '	continue' → logprob: -10.14354419708252
    6. '                               ' → logprob: -11.14354419708252
    7. '                   ' → logprob: -11.14354419708252
    8. '```' → logprob: -13.26854419708252
    9. '   ' → logprob: -14.01854419708252
    10. '           ' → logprob: -14.26854419708252

Token 1211: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02044401690363884
    2. ')' → logprob: -4.020443916320801
    3. '                   ' → logprob: -7.520443916320801
    4. 'current' → logprob: -8.0204439163208
    5. 'new' → logprob: -8.3954439163208
    6. '(current' → logprob: -8.3954439163208
    7. '           ' → logprob: -8.8954439163208
    8. '                
' → logprob: -8.8954439163208
    9. ' new' → logprob: -9.0204439163208
    10. ' current' → logprob: -9.2704439163208

Token 1212: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7289496064186096
    2. '               ' → logprob: -0.7289496064186096
    3. '                   ' → logprob: -4.103949546813965
    4. '           ' → logprob: -5.603949546813965
    5. '<|end|>' → logprob: -5.603949546813965
    6. '                       ' → logprob: -6.603949546813965
    7. ':' → logprob: -6.728949546813965
    8. '                           ' → logprob: -6.728949546813965
    9. ' ' → logprob: -7.478949546813965
    10. '       ' → logprob: -7.728949546813965

Token 1213: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27753692865371704
    2. 'new' → logprob: -1.6525368690490723
    3. ' new' → logprob: -3.6525368690490723
    4. '           ' → logprob: -4.027536869049072
    5. 'states' → logprob: -6.027536869049072
    6. ' states' → logprob: -6.402536869049072
    7. '
' → logprob: -6.777536869049072
    8. '                
' → logprob: -7.152536869049072
    9. 'current' → logprob: -7.527536869049072
    10. '                   ' → logprob: -9.15253734588623

Token 1214: ' ok' (ID: 4763)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03206730633974075
    2. '               ' → logprob: -3.65706729888916
    3. '           ' → logprob: -5.65706729888916
    4. ' new' → logprob: -6.65706729888916
    5. '                   ' → logprob: -7.28206729888916
    6. 'if' → logprob: -9.15706729888916
    7. '
' → logprob: -9.90706729888916
    8. 'states' → logprob: -10.03206729888916
    9. '                       ' → logprob: -10.65706729888916
    10. '                
' → logprob: -11.28206729888916

Token 1215: ',' (ID: 11)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.65843665599823
    2. 'new' → logprob: -1.28343665599823
    3. '           ' → logprob: -1.78343665599823
    4. '               ' → logprob: -3.4084367752075195
    5. '
' → logprob: -5.9084367752075195
    6. '                   ' → logprob: -6.7834367752075195
    7. '                       ' → logprob: -9.28343677520752
    8. '       ' → logprob: -10.40843677520752
    9. ',new' → logprob: -10.78343677520752
    10. '(new' → logprob: -11.03343677520752

Token 1216: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.25261083245277405
    2. ' new' → logprob: -1.5026108026504517
    3. '               ' → logprob: -7.877610683441162
    4. '                   ' → logprob: -9.00261116027832
    5. '           ' → logprob: -9.12761116027832
    6. '   ' → logprob: -9.75261116027832
    7. '
' → logprob: -12.75261116027832
    8. '       ' → logprob: -13.12761116027832
    9. '                       ' → logprob: -13.12761116027832
    10. '	new' → logprob: -13.37761116027832

Token 1217: ' ajoute' (ID: 91611)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.935936689376831
    2. '.add' → logprob: -1.310936689376831
    3. ' new' → logprob: -1.435936689376831
    4. 'add' → logprob: -2.810936689376831
    5. '           ' → logprob: -4.18593692779541
    6. ' add' → logprob: -4.81093692779541
    7. ' ajoute' → logprob: -5.68593692779541
    8. ' ajouter' → logprob: -5.81093692779541
    9. '#' → logprob: -6.06093692779541
    10. 'aj' → logprob: -6.06093692779541

Token 1218: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7159103155136108
    2. '(new' → logprob: -0.8409103155136108
    3. 'new' → logprob: -3.0909104347229004
    4. ' new' → logprob: -3.7159104347229004
    5. '           ' → logprob: -5.7159104347229
    6. '(' → logprob: -6.2159104347229
    7. '(current' → logprob: -6.4659104347229
    8. '                   ' → logprob: -6.5909104347229
    9. '               ' → logprob: -7.0909104347229
    10. '   ' → logprob: -7.7159104347229

Token 1219: ' nouvel' (ID: 76298)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.14046567678451538
    2. '(current' → logprob: -2.64046573638916
    3. 'new' → logprob: -3.26546573638916
    4. ' (' → logprob: -4.51546573638916
    5. '(' → logprob: -4.64046573638916
    6. ' new' → logprob: -7.14046573638916
    7. ' ' → logprob: -9.26546573638916
    8. '   ' → logprob: -10.89046573638916
    9. '(c' → logprob: -11.39046573638916
    10. '((' → logprob: -11.39046573638916

Token 1220: ' état' (ID: 59181)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5022188425064087
    2. '_states' → logprob: -1.6272188425064087
    3. 'state' → logprob: -2.252218723297119
    4. '(l' → logprob: -2.877218723297119
    5. '(' → logprob: -3.502218723297119
    6. 'etat' → logprob: -6.502218723297119
    7. '(g' → logprob: -6.752218723297119
    8. '(p' → logprob: -6.752218723297119
    9. '_state' → logprob: -7.127218723297119
    10. '(new' → logprob: -8.002219200134277

Token 1221: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2417718172073364
    2. 'new' → logprob: -1.3667718172073364
    3. '(new' → logprob: -1.7417718172073364
    4. ' new' → logprob: -1.7417718172073364
    5. '(states' → logprob: -3.366771697998047
    6. ' states' → logprob: -3.866771697998047
    7. 'states' → logprob: -3.866771697998047
    8. '           ' → logprob: -4.116771697998047
    9. '               ' → logprob: -4.741771697998047
    10. '(' → logprob: -6.491771697998047

Token 1222: '               ' (ID: 506)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3881223201751709
    2. ' new' → logprob: -1.888122320175171
    3. '           ' → logprob: -2.013122320175171
    4. '               ' → logprob: -4.01312255859375
    5. '(new' → logprob: -4.88812255859375
    6. '                   ' → logprob: -5.63812255859375
    7. 'states' → logprob: -5.76312255859375
    8. ' (' → logprob: -6.76312255859375
    9. ' states' → logprob: -6.88812255859375
    10. '(states' → logprob: -7.51312255859375

Token 1223: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.048964183777570724
    2. ' new' → logprob: -3.048964262008667
    3. '           ' → logprob: -8.423964500427246
    4. '               ' → logprob: -8.923964500427246
    5. '                   ' → logprob: -11.673964500427246
    6. '   ' → logprob: -11.923964500427246
    7. '
' → logprob: -12.798964500427246
    8. '(new' → logprob: -13.298964500427246
    9. '	new' → logprob: -13.423964500427246
    10. '       ' → logprob: -13.798964500427246

Token 1224: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.6047699318733066e-05
    2. 'states' → logprob: -11.125016212463379
    3. 'States' → logprob: -14.750016212463379
    4. '_' → logprob: -15.125016212463379
    5. ' states' → logprob: -15.375016212463379
    6. '_tokens' → logprob: -15.625016212463379
    7. 's' → logprob: -16.750015258789062
    8. '(states' → logprob: -17.375015258789062
    9. '_state' → logprob: -18.000015258789062
    10. ' States' → logprob: -18.000015258789062

Token 1225: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00038264848990365863
    2. '.' → logprob: -7.875382423400879
    3. ' .' → logprob: -13.000382423400879
    4. '.update' → logprob: -15.750382423400879
    5. 'add' → logprob: -16.250383377075195
    6. '.append' → logprob: -16.875383377075195
    7. '.Add' → logprob: -17.000383377075195
    8. '	add' → logprob: -18.625383377075195
    9. ')add' → logprob: -18.750383377075195
    10. ').' → logprob: -19.125383377075195

Token 1226: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.866037130355835
    2. '(' → logprob: -0.991037130355835
    3. ' (' → logprob: -1.616037130355835
    4. ' ((' → logprob: -4.741037368774414
    5. '(current' → logprob: -7.241037368774414
    6. '   ' → logprob: -10.366037368774414
    7. '  ' → logprob: -11.241037368774414
    8. ' ' → logprob: -11.491037368774414
    9. '(
' → logprob: -13.366037368774414
    10. '(new' → logprob: -13.741037368774414

Token 1227: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0206720617134124e-05
    2. ' current' → logprob: -11.62501049041748
    3. '(current' → logprob: -13.75001049041748
    4. '               ' → logprob: -17.250009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '           ' → logprob: -18.250009536743164
    7. '                   ' → logprob: -18.375009536743164
    8. '$current' → logprob: -18.375009536743164
    9. '	current' → logprob: -18.875009536743164
    10. '[current' → logprob: -19.875009536743164

Token 1228: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -5.5577775128767826e-06
    2. 'panel' → logprob: -12.250005722045898
    3. 'Panel' → logprob: -15.250005722045898
    4. ' panel' → logprob: -15.625005722045898
    5. '_PANEL' → logprob: -15.875005722045898
    6. '_pan' → logprob: -17.2500057220459
    7. '	panel' → logprob: -17.6250057220459
    8. 'i' → logprob: -18.1250057220459
    9. '_p' → logprob: -19.2500057220459
    10. '-panel' → logprob: -19.3750057220459

Token 1229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -13.875046730041504
    4. 'ld' → logprob: -17.000045776367188
    5. '‌,' → logprob: -17.875045776367188
    6. ',l' → logprob: -17.875045776367188
    7. ',d' → logprob: -18.000045776367188
    8. '<|end|>' → logprob: -18.000045776367188
    9. ' ld' → logprob: -18.500045776367188
    10. '   ' → logprob: -18.625045776367188

Token 1230: ' ld' (ID: 54008)
  Prédit: 'ld'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.00033593899570405483
    2. ' ld' → logprob: -8.000335693359375
    3. '(ld' → logprob: -14.750335693359375
    4. '   ' → logprob: -16.375335693359375
    5. '_ld' → logprob: -17.125335693359375
    6. '  ' → logprob: -19.000335693359375
    7. '       ' → logprob: -19.250335693359375
    8. '    ' → logprob: -19.250335693359375
    9. 'LD' → logprob: -19.375335693359375
    10. '.ld' → logprob: -19.500335693359375

Token 1231: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007827070076018572
    2. ')' → logprob: -7.250782489776611
    3. '))
' → logprob: -9.75078296661377
    4. ' ))' → logprob: -11.25078296661377
    5. ')))' → logprob: -14.37578296661377
    6. '<|end|>' → logprob: -15.75078296661377
    7. ' )' → logprob: -15.87578296661377
    8. '));' → logprob: -16.125782012939453
    9. '   ' → logprob: -16.125782012939453
    10. '       ' → logprob: -16.375782012939453

Token 1232: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1233: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6105498671531677
    2. '           ' → logprob: -0.9855498671531677
    3. '       ' → logprob: -2.7355499267578125
    4. ' else' → logprob: -3.9855499267578125
    5. 'elif' → logprob: -8.485549926757812
    6. '               ' → logprob: -11.485549926757812
    7. '```' → logprob: -11.610549926757812
    8. '	else' → logprob: -11.735549926757812
    9. ' elif' → logprob: -11.860549926757812
    10. '
' → logprob: -12.110549926757812

Token 1234: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.66414475440979
    2. '{' → logprob: -1.53914475440979
    3. ':
' → logprob: -3.16414475440979
    4. '               ' → logprob: -3.28914475440979
    5. ' (' → logprob: -3.41414475440979
    6. '{
' → logprob: -3.53914475440979
    7. ':' → logprob: -3.66414475440979
    8. '<|end|>' → logprob: -3.66414475440979
    9. '(
' → logprob: -4.039144515991211
    10. '(' → logprob: -4.289144515991211

Token 1235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024874182417988777
    2. '#' → logprob: -3.774874210357666
    3. '           ' → logprob: -6.899874210357666
    4. ' #' → logprob: -7.899874210357666
    5. 'if' → logprob: -9.649873733520508
    6. '```' → logprob: -9.899873733520508
    7. '{
' → logprob: -10.149873733520508
    8. '	           ' → logprob: -11.149873733520508
    9. ' if' → logprob: -11.399873733520508
    10. '		       ' → logprob: -11.899873733520508

Token 1236: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03169238567352295
    2. '               ' → logprob: -3.5316925048828125
    3. '           ' → logprob: -6.7816925048828125
    4. ' #' → logprob: -7.2816925048828125
    5. 'if' → logprob: -9.281692504882812
    6. '```' → logprob: -12.156692504882812
    7. ' if' → logprob: -12.281692504882812
    8. '﻿#' → logprob: -12.531692504882812
    9. '{
' → logprob: -13.406692504882812
    10. '   ' → logprob: -13.781692504882812

Token 1237: ' Pied' (ID: 88947)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009649254381656647
    2. 'if' → logprob: -5.509649276733398
    3. '               ' → logprob: -5.884649276733398
    4. 'P' → logprob: -6.384649276733398
    5. '           ' → logprob: -7.134649276733398
    6. ' #' → logprob: -8.759649276733398
    7. 'p' → logprob: -10.259649276733398
    8. 'foot' → logprob: -10.884649276733398
    9. 'current' → logprob: -11.134649276733398
    10. ' if' → logprob: -11.634649276733398

Token 1238: ' droit' (ID: 29964)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4950109124183655
    2. 'dro' → logprob: -0.9950109124183655
    3. ' droit' → logprob: -4.120010852813721
    4. '_d' → logprob: -5.495010852813721
    5. 'g' → logprob: -8.120011329650879
    6. 'right' → logprob: -10.870011329650879
    7. ' droite' → logprob: -11.120011329650879
    8. ' ' → logprob: -12.245011329650879
    9. ' gauche' → logprob: -12.245011329650879
    10. ' ' → logprob: -12.495011329650879

Token 1239: ' app' (ID: 1053)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.008838275447487831
    2. '               ' → logprob: -5.508838176727295
    3. 'do' → logprob: -5.758838176727295
    4. ' must' → logprob: -7.258838176727295
    5. '           ' → logprob: -7.383838176727295
    6. 'must' → logprob: -9.883838653564453
    7. ' do' → logprob: -10.258838653564453
    8. 'def' → logprob: -10.258838653564453
    9. '#' → logprob: -10.758838653564453
    10. ' doivent' → logprob: -10.883838653564453

Token 1240: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.04552106186747551
    2. 'uyer' → logprob: -3.4205210208892822
    3. 'uyant' → logprob: -4.920521259307861
    4. 'uye' → logprob: -6.295521259307861
    5. 'u' → logprob: -6.795521259307861
    6. 'ui' → logprob: -7.045521259307861
    7. 'uy' → logprob: -8.295520782470703
    8. 'oser' → logprob: -8.920520782470703
    9. 'uya' → logprob: -9.295520782470703
    10. 'uer' → logprob: -9.420520782470703

Token 1241: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4182325303554535
    2. ' on' → logprob: -1.4182325601577759
    3. 'on' → logprob: -2.5432324409484863
    4. 'sur' → logprob: -4.918232440948486
    5. ' (' → logprob: -5.418232440948486
    6. '           ' → logprob: -6.043232440948486
    7. '#' → logprob: -6.793232440948486
    8. ' sur' → logprob: -6.793232440948486
    9. '(current' → logprob: -7.168232440948486
    10. ' =' → logprob: -7.668232440948486

Token 1242: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20153574645519257
    2. ' current' → logprob: -1.701535701751709
    3. 'score' → logprob: -9.201536178588867
    4. '(current' → logprob: -11.201536178588867
    5. ' score' → logprob: -12.076536178588867
    6. '	current' → logprob: -14.826536178588867
    7. '$current' → logprob: -15.201536178588867
    8. ' ' → logprob: -15.451536178588867
    9. ',current' → logprob: -15.451536178588867
    10. '当前' → logprob: -15.576536178588867

Token 1243: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -5.967624019831419e-05
    2. 'panel' → logprob: -9.750060081481934
    3. '_p' → logprob: -14.750060081481934
    4. '_pan' → logprob: -14.750060081481934
    5. ' panel' → logprob: -15.625060081481934
    6. '_' → logprob: -16.250059127807617
    7. '_PANEL' → logprob: -16.500059127807617
    8. '(panel' → logprob: -17.250059127807617
    9. 'Panel' → logprob: -17.250059127807617
    10. '_board' → logprob: -17.625059127807617

Token 1244: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021205232478678226
    2. 'if' → logprob: -7.377120494842529
    3. '<|end|>' → logprob: -7.627120494842529
    4. ' if' → logprob: -8.002120971679688
    5. '#' → logprob: -8.252120971679688
    6. '{
' → logprob: -9.252120971679688
    7. '```' → logprob: -9.752120971679688
    8. '           ' → logprob: -9.877120971679688
    9. '<|end|>' → logprob: -10.002120971679688
    10. '                
' → logprob: -10.127120971679688

Token 1245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013450673781335354
    2. '<|end|>' → logprob: -5.013450622558594
    3. '           ' → logprob: -5.138450622558594
    4. '<|end|>' → logprob: -8.888450622558594
    5. '                   ' → logprob: -9.138450622558594
    6. '       ' → logprob: -9.638450622558594
    7. '```' → logprob: -9.763450622558594
    8. '#' → logprob: -9.888450622558594
    9. '{
' → logprob: -10.013450622558594
    10. 'if' → logprob: -10.013450622558594

Token 1246: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034231994301080704
    2. 'if' (adapté à ' if') → logprob: -4.034232139587402
    3. '           ' → logprob: -4.284232139587402
    4. '#' → logprob: -6.534232139587402
    5. ' if' → logprob: -7.409232139587402
    6. '```' → logprob: -9.409232139587402
    7. '              ' → logprob: -12.034232139587402
    8. ' #' → logprob: -12.534232139587402
    9. '                   ' → logprob: -12.909232139587402
    10. 'for' → logprob: -13.034232139587402

Token 1247: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22550642490386963
    2. ' current' → logprob: -1.6005064249038696
    3. 'foot' → logprob: -9.975506782531738
    4. '   ' → logprob: -10.600506782531738
    5. 'ld' → logprob: -11.850506782531738
    6. '(current' → logprob: -12.225506782531738
    7. ' ' → logprob: -12.975506782531738
    8. '	current' → logprob: -13.725506782531738
    9. ' foot' → logprob: -13.975506782531738
    10. 'lg' → logprob: -13.975506782531738

Token 1248: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -3.4121114822482923e-06
    2. 'panel' → logprob: -13.000003814697266
    3. '==' → logprob: -14.375003814697266
    4. 'Panel' → logprob: -15.250003814697266
    5. '_PANEL' → logprob: -16.000003814697266
    6. '_pan' → logprob: -16.750003814697266
    7. 'current' → logprob: -17.125003814697266
    8. ' panel' → logprob: -17.250003814697266
    9. '_board' → logprob: -18.000003814697266
    10. '-panel' → logprob: -18.750003814697266

Token 1249: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014166918583214283
    2. ' ==' → logprob: -4.264166831970215
    3. '==
' → logprob: -12.764166831970215
    4. ']==' → logprob: -16.01416778564453
    5. '=' → logprob: -16.38916778564453
    6. ')==' → logprob: -16.38916778564453
    7. '==(' → logprob: -16.38916778564453
    8. '===' → logprob: -17.63916778564453
    9. '```' → logprob: -17.76416778564453
    10. ' ' → logprob: -18.26416778564453

Token 1250: ' ld' (ID: 54008)
  Prédit: 'ld'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.00035906085395254195
    2. 'lg' → logprob: -8.000359535217285
    3. ' ld' → logprob: -11.500359535217285
    4. 'rd' → logprob: -11.875359535217285
    5. '(ld' → logprob: -14.125359535217285
    6. '   ' → logprob: -14.250359535217285
    7. ' ' → logprob: -14.750359535217285
    8. 'cd' → logprob: -14.750359535217285
    9. '  ' → logprob: -14.750359535217285
    10. 'gd' → logprob: -14.875359535217285

Token 1251: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6673824191093445
    2. '               ' → logprob: -1.4173824787139893
    3. ':
' → logprob: -2.4173824787139893
    4. '                   ' → logprob: -2.7923824787139893
    5. ':' → logprob: -2.9173824787139893
    6. 'or' → logprob: -3.5423824787139893
    7. '              ' → logprob: -6.41738224029541
    8. ':return' → logprob: -6.41738224029541
    9. '                  ' → logprob: -6.66738224029541
    10. '<|end|>' → logprob: -7.04238224029541

Token 1252: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003490785136818886
    2. 'continue' → logprob: -6.003490924835205
    3. '               ' → logprob: -7.128490924835205
    4. ' continue' → logprob: -9.253490447998047
    5. '                       ' → logprob: -9.753490447998047
    6. '	               ' → logprob: -11.628490447998047
    7. '		           ' → logprob: -12.003490447998047
    8. '_continue' → logprob: -12.003490447998047
    9. '<|end|>' → logprob: -12.128490447998047
    10. '   ' → logprob: -12.628490447998047

Token 1253: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0021886874455958605
    2. '                   ' → logprob: -6.752188682556152
    3. ' continue' → logprob: -7.002188682556152
    4. '               ' → logprob: -9.752188682556152
    5. '                       ' → logprob: -10.127188682556152
    6. '	continue' → logprob: -11.627188682556152
    7. '   ' → logprob: -14.627188682556152
    8. '_continue' → logprob: -15.877188682556152
    9. 'continu' → logprob: -16.00218963623047
    10. '           ' → logprob: -16.12718963623047

Token 1254: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011396516114473343
    2. '<|end|>' → logprob: -5.511396408081055
    3. '                   ' → logprob: -5.886396408081055
    4. 'continue' → logprob: -6.261396408081055
    5. 'if' → logprob: -6.761396408081055
    6. ' if' → logprob: -7.261396408081055
    7. '           ' → logprob: -8.011396408081055
    8. '```' → logprob: -9.011396408081055
    9. ' continue' → logprob: -9.261396408081055
    10. '       ' → logprob: -9.636396408081055

Token 1255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009484173730015755
    2. 'if' → logprob: -5.13448429107666
    3. 'continue' → logprob: -6.00948429107666
    4. '<|end|>' → logprob: -7.50948429107666
    5. ' if' → logprob: -8.00948429107666
    6. '                   ' → logprob: -9.63448429107666
    7. '```' → logprob: -10.13448429107666
    8. ' continue' → logprob: -10.25948429107666
    9. '       ' → logprob: -11.25948429107666
    10. '           ' → logprob: -11.38448429107666

Token 1256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23112225532531738
    2. '               ' → logprob: -1.6061222553253174
    3. ' if' → logprob: -5.231122016906738
    4. '           ' → logprob: -9.106122016906738
    5. 'continue' → logprob: -9.481122016906738
    6. '<|end|>' → logprob: -9.606122016906738
    7. '                   ' → logprob: -10.606122016906738
    8. '```' → logprob: -10.856122016906738
    9. 'If' → logprob: -11.106122016906738
    10. '       ' → logprob: -12.106122016906738

Token 1257: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0052362410351634026
    2. ' current' → logprob: -5.2552361488342285
    3. '(current' → logprob: -13.130236625671387
    4. '   ' → logprob: -15.505236625671387
    5. '	current' → logprob: -17.25523567199707
    6. '$current' → logprob: -17.38023567199707
    7. 'not' → logprob: -18.13023567199707
    8. 'new' → logprob: -18.25523567199707
    9. '[current' → logprob: -18.38023567199707
    10. ' ' → logprob: -18.38023567199707

Token 1258: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -1.0564331205387134e-05
    2. 'panel' → logprob: -12.75001049041748
    3. 'Panel' → logprob: -13.00001049041748
    4. ' panel' → logprob: -13.00001049041748
    5. '(panel' → logprob: -13.25001049041748
    6. '_pan' → logprob: -14.25001049041748
    7. '_PANEL' → logprob: -15.37501049041748
    8. '==' → logprob: -15.62501049041748
    9. ' Panel' → logprob: -17.125011444091797
    10. '(' → logprob: -17.250011444091797

Token 1259: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02325328253209591
    2. ' ==' → logprob: -3.7732532024383545
    3. '==
' → logprob: -12.648253440856934
    4. '=' → logprob: -13.398253440856934
    5. ']==' → logprob: -13.648253440856934
    6. '===' → logprob: -13.773253440856934
    7. ')==' → logprob: -14.648253440856934
    8. '<|end|>' → logprob: -15.273253440856934
    9. '()==' → logprob: -16.898252487182617
    10. ')' → logprob: -16.898252487182617

Token 1260: ' lg' (ID: 37176)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -1.0280383548888494e-06
    2. ' lg' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '(' → logprob: -17.625001907348633
    5. '-lg' → logprob: -17.625001907348633
    6. 'first' → logprob: -17.625001907348633
    7. 'l' → logprob: -17.625001907348633
    8. '(l' → logprob: -17.750001907348633
    9. '[' → logprob: -17.875001907348633
    10. '#' → logprob: -18.000001907348633

Token 1261: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21184246242046356
    2. ':
' → logprob: -2.0868425369262695
    3. ':' → logprob: -3.0868425369262695
    4. '                       ' → logprob: -4.9618425369262695
    5. '               ' → logprob: -5.4618425369262695
    6. 'continue' → logprob: -5.4618425369262695
    7. ' continue' → logprob: -5.9618425369262695
    8. '<|end|>' → logprob: -6.3368425369262695
    9. ',' → logprob: -8.08684253692627
    10. '	continue' → logprob: -9.08684253692627

Token 1262: '                   ' (ID: 699)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8314522504806519
    2. '                   ' → logprob: -1.0814522504806519
    3. ' continue' → logprob: -2.0814523696899414
    4. '                       ' → logprob: -3.0814523696899414
    5. '               ' → logprob: -3.0814523696899414
    6. '       ' → logprob: -5.081452369689941
    7. '	continue' → logprob: -6.831452369689941
    8. '   ' → logprob: -7.331452369689941
    9. '```' → logprob: -7.956452369689941
    10. '           ' → logprob: -8.956452369689941

Token 1263: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0007378002628684044
    2. ' continue' → logprob: -7.25073766708374
    3. '                   ' → logprob: -11.000738143920898
    4. '	continue' → logprob: -12.250738143920898
    5. '               ' → logprob: -13.125738143920898
    6. '   ' → logprob: -13.375738143920898
    7. '       ' → logprob: -13.625738143920898
    8. '                       ' → logprob: -13.875738143920898
    9. 'contin' → logprob: -15.500738143920898
    10. '           ' → logprob: -15.875738143920898

Token 1264: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008116515236906707
    2. 'if' → logprob: -7.625811576843262
    3. '```' → logprob: -9.125811576843262
    4. ' if' → logprob: -9.625811576843262
    5. '<|end|>' → logprob: -9.750811576843262
    6. '       ' → logprob: -10.500811576843262
    7. '           ' → logprob: -10.500811576843262
    8. '                   ' → logprob: -11.125811576843262
    9. '              ' → logprob: -12.625811576843262
    10. '   ' → logprob: -12.875811576843262

Token 1265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007301814388483763
    2. 'if' → logprob: -5.3823018074035645
    3. '```' → logprob: -6.1323018074035645
    4. '<|end|>' → logprob: -8.382302284240723
    5. ' if' → logprob: -8.632302284240723
    6. '       ' → logprob: -10.132302284240723
    7. '``' → logprob: -11.257302284240723
    8. '           ' → logprob: -11.382302284240723
    9. 'continue' → logprob: -11.507302284240723
    10. '<|end|>' → logprob: -12.007302284240723

Token 1266: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5780470967292786
    2. 'if' (adapté à ' if') → logprob: -0.8280470967292786
    3. ' if' → logprob: -6.328047275543213
    4. '           ' → logprob: -8.828046798706055
    5. '                   ' → logprob: -9.453046798706055
    6. '```' → logprob: -10.078046798706055
    7. '       ' → logprob: -11.453046798706055
    8. '                
' → logprob: -11.828046798706055
    9. '<|end|>' → logprob: -11.828046798706055
    10. '                ' → logprob: -11.953046798706055

Token 1267: ' lg' (ID: 37176)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.08715013414621353
    2. 'ld' → logprob: -2.5871500968933105
    3. 'current' → logprob: -5.3371500968933105
    4. ' lg' → logprob: -6.4621500968933105
    5. 'order' → logprob: -6.8371500968933105
    6. ' ld' → logprob: -8.087150573730469
    7. '   ' → logprob: -8.587150573730469
    8. ' current' → logprob: -8.837150573730469
    9. ' ' → logprob: -9.962150573730469
    10. '  ' → logprob: -10.587150573730469

Token 1268: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4076799750328064
    2. '!=' → logprob: -1.4076800346374512
    3. '!=-' → logprob: -2.407680034637451
    4. '   ' → logprob: -11.032679557800293
    5. '=' → logprob: -11.407679557800293
    6. '==' → logprob: -11.657679557800293
    7. ')' → logprob: -12.032679557800293
    8. '()!=' → logprob: -12.282679557800293
    9. '==-' → logprob: -12.282679557800293
    10. ')!=' → logprob: -12.407679557800293

Token 1269: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001584850688232109
    2. ' -' → logprob: -8.750158309936523
    3. '	' → logprob: -21.000158309936523
    4. '   ' → logprob: -21.250158309936523
    5. ' ' → logprob: -21.750158309936523
    6. '           ' → logprob: -22.375158309936523
    7. '−' → logprob: -22.875158309936523
    8. '
' → logprob: -23.250158309936523
    9. '  ' → logprob: -23.750158309936523
    10. '```' → logprob: -23.875158309936523

Token 1270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004892880679108202
    2. '-' → logprob: -7.625489234924316
    3. ' -' → logprob: -13.625489234924316
    4. ' ' → logprob: -17.750490188598633
    5. '```' → logprob: -17.875490188598633
    6. '(-' → logprob: -18.375490188598633
    7. '#' → logprob: -18.437990188598633
    8. '2' → logprob: -18.937990188598633
    9. '=-' → logprob: -19.562990188598633
    10. '=' → logprob: -19.562990188598633

Token 1271: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23449105024337769
    2. ':' → logprob: -1.8594911098480225
    3. '                   ' → logprob: -3.1094911098480225
    4. '               ' → logprob: -4.859490871429443
    5. ' and' → logprob: -7.734490871429443
    6. 'and' → logprob: -9.109491348266602
    7. '           ' → logprob: -9.234491348266602
    8. '):
' → logprob: -9.734491348266602
    9. '                  ' → logprob: -9.984491348266602
    10. '                       ' → logprob: -10.109491348266602

Token 1272: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03895926848053932
    2. '               ' → logprob: -3.288959264755249
    3. ' if' → logprob: -7.788959503173828
    4. '           ' → logprob: -8.538959503173828
    5. 'if' → logprob: -9.038959503173828
    6. '                    
' → logprob: -9.788959503173828
    7. '<|end|>' → logprob: -10.413959503173828
    8. '                       ' → logprob: -10.663959503173828
    9. '                  ' → logprob: -11.288959503173828
    10. '                ' → logprob: -11.288959503173828

Token 1273: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15535520017147064
    2. ' if' → logprob: -2.030355215072632
    3. '                   ' → logprob: -4.655354976654053
    4. '                       ' → logprob: -6.530354976654053
    5. '               ' → logprob: -6.655354976654053
    6. '```' → logprob: -8.405355453491211
    7. '<|end|>' → logprob: -10.405355453491211
    8. '           ' → logprob: -11.280355453491211
    9. '                        
' → logprob: -11.530355453491211
    10. '   ' → logprob: -11.905355453491211

Token 1274: ' pied' (ID: 20242)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009117019944824278
    2. ' if' → logprob: -7.375911712646484
    3. '                   ' → logprob: -8.250911712646484
    4. '```' → logprob: -11.625911712646484
    5. '               ' → logprob: -12.000911712646484
    6. '                       ' → logprob: -12.750911712646484
    7. 'If' → logprob: -13.625911712646484
    8. '#' → logprob: -14.125911712646484
    9. '                    
' → logprob: -14.250911712646484
    10. 'order' → logprob: -14.500911712646484

Token 1275: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.6528472900390625
    2. 'g' → logprob: -0.9028472900390625
    3. '_g' → logprob: -3.1528472900390625
    4. 'left' → logprob: -4.5278472900390625
    5. 'gau' → logprob: -5.5278472900390625
    6. ' gau' → logprob: -5.6528472900390625
    7. '=' → logprob: -6.0278472900390625
    8. 's' → logprob: -6.7778472900390625
    9. 'if' → logprob: -6.9028472900390625
    10. '_left' → logprob: -7.0278472900390625

Token 1276: ' et' (ID: 859)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6535893082618713
    2. 'if' → logprob: -1.7785892486572266
    3. '>=' → logprob: -3.0285892486572266
    4. ' if' → logprob: -3.1535892486572266
    5. '>' → logprob: -3.5285892486572266
    6. ' >=' → logprob: -3.9035892486572266
    7. ':' → logprob: -4.028589248657227
    8. '               ' → logprob: -4.278589248657227
    9. 'def' → logprob: -4.403589248657227
    10. 'order' → logprob: -4.403589248657227

Token 1277: ' pied' (ID: 20242)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0008634611731395125
    2. ' order' → logprob: -7.125863552093506
    3. 'ordre' → logprob: -10.750863075256348
    4. 'current' → logprob: -10.750863075256348
    5. 'panel' → logprob: -12.125863075256348
    6. '(order' → logprob: -12.625863075256348
    7. 'score' → logprob: -12.750863075256348
    8. '   ' → logprob: -13.625863075256348
    9. 'ord' → logprob: -14.500863075256348
    10. '#' → logprob: -14.625863075256348

Token 1278: ' droit' (ID: 29964)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0836673229932785
    2. 'dro' → logprob: -3.333667278289795
    3. 'right' → logprob: -4.333667278289795
    4. 'left' → logprob: -4.333667278289795
    5. ' gauche' → logprob: -4.833667278289795
    6. 'd' → logprob: -4.958667278289795
    7. ' droit' → logprob: -6.958667278289795
    8. 'gau' → logprob: -7.583667278289795
    9. 'num' → logprob: -7.708667278289795
    10. ' droite' → logprob: -7.958667278289795

Token 1279: ' doivent' (ID: 44722)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16251005232334137
    2. '               ' → logprob: -3.6625101566314697
    3. ' doit' → logprob: -3.9125101566314697
    4. ':
' → logprob: -4.162509918212891
    5. 'if' → logprob: -4.787509918212891
    6. ' must' → logprob: -4.912509918212891
    7. ':' → logprob: -5.162509918212891
    8. ')' → logprob: -5.287509918212891
    9. '>=' → logprob: -5.287509918212891
    10. 'must' → logprob: -5.287509918212891

Token 1280: ' respecter' (ID: 107203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7181892395019531
    2. 'order' → logprob: -1.4681892395019531
    3. '               ' → logprob: -3.093189239501953
    4. 'ordre' → logprob: -3.093189239501953
    5. '                       ' → logprob: -3.218189239501953
    6. '<' → logprob: -3.843189239501953
    7. ' order' → logprob: -4.343189239501953
    8. 'if' → logprob: -4.593189239501953
    9. '=' → logprob: -4.593189239501953
    10. ' be' → logprob: -4.968189239501953

Token 1281: ' l' (ID: 305)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.49757635593414307
    2. 'l' → logprob: -1.247576355934143
    3. ' order' → logprob: -3.3725762367248535
    4. 'ordre' → logprob: -3.4975762367248535
    5. ' l' → logprob: -4.3725762367248535
    6. 'la' → logprob: -4.6225762367248535
    7. 'le' → logprob: -5.1225762367248535
    8. ' la' → logprob: -5.6225762367248535
    9. '   ' → logprob: -6.2475762367248535
    10. '```' → logprob: -6.7475762367248535

Token 1282: ''ordre' (ID: 124753)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.018303873017430305
    2. ''ordre' → logprob: -4.143303871154785
    3. 'ordre' → logprob: -6.268303871154785
    4. ' order' → logprob: -8.268303871154785
    5. '’ordre' → logprob: -9.643303871154785
    6. '`' → logprob: -11.393303871154785
    7. ''' → logprob: -11.518303871154785
    8. 'ordine' → logprob: -11.643303871154785
    9. '(order' → logprob: -12.143303871154785
    10. '   ' → logprob: -12.518303871154785

Token 1283: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1282416135072708
    2. 'if' → logprob: -2.253241539001465
    3. ' if' → logprob: -4.628241539001465
    4. '               ' → logprob: -5.253241539001465
    5. '```' → logprob: -9.003241539001465
    6. '                       ' → logprob: -9.128241539001465
    7. ',' → logprob: -11.003241539001465
    8. '                    
' → logprob: -11.753241539001465
    9. ':
' → logprob: -12.378241539001465
    10. ':' → logprob: -12.628241539001465

Token 1284: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02168925292789936
    2. 'if' → logprob: -4.396689414978027
    3. '                       ' → logprob: -5.396689414978027
    4. ' if' → logprob: -5.521689414978027
    5. '               ' → logprob: -7.646689414978027
    6. '```' → logprob: -9.521689414978027
    7. '           ' → logprob: -11.271689414978027
    8. '       ' → logprob: -11.646689414978027
    9. '                    ' → logprob: -12.021689414978027
    10. '                     ' → logprob: -12.521689414978027

Token 1285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21236352622509003
    2. '                   ' → logprob: -1.9623634815216064
    3. ' if' → logprob: -3.0873634815216064
    4. '                       ' → logprob: -5.5873637199401855
    5. '               ' → logprob: -6.9623637199401855
    6. '```' → logprob: -8.337363243103027
    7. '   ' → logprob: -10.087363243103027
    8. '           ' → logprob: -10.337363243103027
    9. '                    ' → logprob: -10.587363243103027
    10. '       ' → logprob: -10.712363243103027

Token 1286: ' order' (ID: 2569)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05859803780913353
    2. ' if' → logprob: -3.183598041534424
    3. '                   ' → logprob: -4.183598041534424
    4. '               ' → logprob: -9.058597564697266
    5. '                       ' → logprob: -10.308597564697266
    6. 'If' → logprob: -11.183597564697266
    7. '```' → logprob: -11.183597564697266
    8. 'elif' → logprob: -11.558597564697266
    9. '                    ' → logprob: -11.933597564697266
    10. '                    
' → logprob: -12.308597564697266

Token 1287: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.0005349211278371513
    2. 'panel' → logprob: -8.375535011291504
    3. '(current' → logprob: -9.875535011291504
    4. '(score' → logprob: -9.875535011291504
    5. 'Panel' → logprob: -10.000535011291504
    6. '_p' → logprob: -10.875535011291504
    7. '(panel' → logprob: -10.875535011291504
    8. '(left' → logprob: -11.375535011291504
    9. '_PANEL' → logprob: -11.375535011291504
    10. '(l' → logprob: -11.375535011291504

Token 1288: '(l' (ID: 4179)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.03216773644089699
    2. '(current' → logprob: -3.532167673110962
    3. 'score' → logprob: -6.407167911529541
    4. 'current' → logprob: -8.407167434692383
    5. '(p' → logprob: -8.782167434692383
    6. '(l' → logprob: -9.032167434692383
    7. '(' → logprob: -9.282167434692383
    8. '(panel' → logprob: -9.532167434692383
    9. '(scores' → logprob: -10.657167434692383
    10. '[current' → logprob: -11.532167434692383

Token 1289: 'g' (ID: 70)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.1263282746076584
    2. 'g' → logprob: -2.251328229904175
    3. '(score' → logprob: -4.626328468322754
    4. '[' → logprob: -6.251328468322754
    5. 'panel' → logprob: -7.876328468322754
    6. 'order' → logprob: -8.001328468322754
    7. 'code' → logprob: -8.751328468322754
    8. 'f' → logprob: -9.376328468322754
    9. ' score' → logprob: -9.751328468322754
    10. '(' → logprob: -9.751328468322754

Token 1290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022763874381780624
    2. '(score' → logprob: -4.647763729095459
    3. '[' → logprob: -4.897763729095459
    4. 'score' → logprob: -5.897763729095459
    5. '[p' → logprob: -7.272763729095459
    6. '])' → logprob: -8.272764205932617
    7. ']' → logprob: -8.397764205932617
    8. '(p' → logprob: -8.647764205932617
    9. '   ' → logprob: -8.897764205932617
    10. ')
' → logprob: -9.022764205932617

Token 1291: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6586001515388489
    2. ' <' → logprob: -1.783600091934204
    3. ' >' → logprob: -1.908600091934204
    4. '>=' → logprob: -2.908600091934204
    5. '>' → logprob: -3.033600091934204
    6. '                   ' → logprob: -3.158600091934204
    7. '<' → logprob: -4.283600330352783
    8. ' if' → logprob: -6.408600330352783
    9. '                       ' → logprob: -6.658600330352783
    10. 'if' → logprob: -6.908600330352783

Token 1292: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07021617889404297
    2. ' order' → logprob: -2.695216178894043
    3. 'current' → logprob: -8.695216178894043
    4. 'score' → logprob: -9.820216178894043
    5. ' current' → logprob: -10.195216178894043
    6. '(order' → logprob: -12.070216178894043
    7. ' score' → logprob: -12.445216178894043
    8. '   ' → logprob: -13.070216178894043
    9. 'panel' → logprob: -13.570216178894043
    10. '	order' → logprob: -13.695216178894043

Token 1293: '_panel' (ID: 54810)
  Prédit: 'panel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'panel' → logprob: -0.7533956170082092
    2. 'order' → logprob: -1.2533955574035645
    3. '_panel' → logprob: -1.5033955574035645
    4. 'current' → logprob: -4.8783955574035645
    5. 'score' → logprob: -5.1283955574035645
    6. 'Panel' → logprob: -5.2533955574035645
    7. ' panel' → logprob: -6.6283955574035645
    8. ' order' → logprob: -7.6283955574035645
    9. '(order' → logprob: -8.253396034240723
    10. '(score' → logprob: -9.378396034240723

Token 1294: '(current' (ID: 15023)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.10324689000844955
    2. 'score' → logprob: -2.4782469272613525
    3. 'order' → logprob: -5.228246688842773
    4. '(order' → logprob: -5.728246688842773
    5. '(current' → logprob: -6.228246688842773
    6. 'panel' → logprob: -6.853246688842773
    7. 'current' → logprob: -7.103246688842773
    8. '(panel' → logprob: -7.228246688842773
    9. '(' → logprob: -8.228246688842773
    10. ' (' → logprob: -8.353246688842773

Token 1295: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -2.045823566731997e-05
    2. 'panel' → logprob: -11.750020027160645
    3. '_p' → logprob: -12.125020027160645
    4. ')' → logprob: -13.250020027160645
    5. 'Panel' → logprob: -14.000020027160645
    6. '_pan' → logprob: -14.375020027160645
    7. '_PANEL' → logprob: -14.500020027160645
    8. '[i' → logprob: -14.625020027160645
    9. ')_' → logprob: -14.750020027160645
    10. ' panel' → logprob: -14.875020027160645

Token 1296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6008120775222778
    2. '):
' → logprob: -0.9758120775222778
    3. '):' → logprob: -3.2258119583129883
    4. '                   ' → logprob: -3.4758119583129883
    5. '               ' → logprob: -6.725811958312988
    6. '                       ' → logprob: -6.725811958312988
    7. ')
' → logprob: -7.975811958312988
    8. ''):
' → logprob: -8.100811958312988
    9. ':' → logprob: -8.600811958312988
    10. ':
' → logprob: -8.725811958312988

Token 1297: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009877204895019531
    2. '                       ' → logprob: -4.8848772048950195
    3. '```' → logprob: -6.2598772048950195
    4. ' if' → logprob: -8.75987720489502
    5. '               ' → logprob: -9.50987720489502
    6. 'if' → logprob: -10.13487720489502
    7. ':
' → logprob: -10.88487720489502
    8. ':' → logprob: -11.38487720489502
    9. '{
' → logprob: -11.63487720489502
    10. '<|end|>' → logprob: -11.75987720489502

Token 1298: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34733083844184875
    2. 'if' (adapté à ' if') → logprob: -1.4723308086395264
    3. ' if' → logprob: -2.8473308086395264
    4. '               ' → logprob: -6.0973310470581055
    5. '                       ' → logprob: -6.2223310470581055
    6. '```' → logprob: -6.4723310470581055
    7. '           ' → logprob: -9.597331047058105
    8. '                    
' → logprob: -10.347331047058105
    9. '       ' → logprob: -10.847331047058105
    10. '<|end|>' → logprob: -10.972331047058105

Token 1299: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0031804447062313557
    2. ' order' → logprob: -5.753180503845215
    3. 'panel' → logprob: -13.253180503845215
    4. '   ' → logprob: -15.003180503845215
    5. '	order' → logprob: -15.253180503845215
    6. '(order' → logprob: -15.628180503845215
    7. ' ' → logprob: -15.628180503845215
    8. 'ord' → logprob: -16.6281795501709
    9. ' panel' → logprob: -17.2531795501709
    10. 'not' → logprob: -17.3781795501709

Token 1300: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -2.236549335066229e-05
    2. 'panel' → logprob: -11.750021934509277
    3. '(current' → logprob: -12.250021934509277
    4. '(l' → logprob: -12.500021934509277
    5. 'Panel' → logprob: -12.875021934509277
    6. 'current' → logprob: -13.625021934509277
    7. '_PANEL' → logprob: -14.125021934509277
    8. '(panel' → logprob: -14.250021934509277
    9. '_current' → logprob: -15.125021934509277
    10. ' panel' → logprob: -15.500021934509277

Token 1301: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.3917284309864044
    2. 'score' → logprob: -1.141728401184082
    3. 'lg' → logprob: -6.016728401184082
    4. '(l' → logprob: -6.141728401184082
    5. '(' → logprob: -9.391728401184082
    6. ' score' → logprob: -10.266728401184082
    7. 'scores' → logprob: -10.891728401184082
    8. '	score' → logprob: -11.141728401184082
    9. '(code' → logprob: -11.266728401184082
    10. '(scores' → logprob: -11.266728401184082

Token 1302: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012178556062281132
    2. '[' → logprob: -7.626217842102051
    3. 'i' → logprob: -7.751217842102051
    4. '[l' → logprob: -8.25121784210205
    5. '[current' → logprob: -11.37621784210205
    6. '[g' → logprob: -11.87621784210205
    7. '[
' → logprob: -12.87621784210205
    8. '   ' → logprob: -13.37621784210205
    9. '(i' → logprob: -13.37621784210205
    10. '[j' → logprob: -13.37621784210205

Token 1303: 'lg' (ID: 15632)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0069828336127102375
    2. '[i' → logprob: -5.006982803344727
    3. 'current' → logprob: -9.006982803344727
    4. 'lg' → logprob: -10.131982803344727
    5. '[current' → logprob: -10.256982803344727
    6. '[' → logprob: -10.756982803344727
    7. ' i' → logprob: -10.881982803344727
    8. '   ' → logprob: -12.006982803344727
    9. '```' → logprob: -12.381982803344727
    10. '
' → logprob: -12.506982803344727

Token 1304: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12833210825920105
    2. '[i' → logprob: -2.1283321380615234
    3. '[' → logprob: -7.253332138061523
    4. '[l' → logprob: -8.503332138061523
    5. ' ])' → logprob: -9.128332138061523
    6. '[current' → logprob: -9.378332138061523
    7. '(i' → logprob: -10.003332138061523
    8. ']' → logprob: -10.128332138061523
    9. ')' → logprob: -10.753332138061523
    10. 'i' → logprob: -10.878332138061523

Token 1305: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13059556484222412
    2. '>=' → logprob: -2.5055956840515137
    3. ' >' → logprob: -4.005595684051514
    4. ')' → logprob: -4.130595684051514
    5. '>' → logprob: -5.630595684051514
    6. ')>=' → logprob: -7.005595684051514
    7. '                       ' → logprob: -7.255595684051514
    8. '                           ' → logprob: -7.755595684051514
    9. ' <=' → logprob: -8.505595207214355
    10. ']>=' → logprob: -9.130595207214355

Token 1306: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5786040425300598
    2. ' order' → logprob: -0.8286040425300598
    3. 'score' → logprob: -6.953604221343994
    4. ' current' → logprob: -7.203604221343994
    5. 'current' → logprob: -7.328604221343994
    6. ' score' → logprob: -8.203603744506836
    7. '   ' → logprob: -11.078603744506836
    8. ' ' → logprob: -12.578603744506836
    9. '	order' → logprob: -12.703603744506836
    10. 'ordre' → logprob: -12.953603744506836

Token 1307: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -0.0008521550917066634
    2. 'panel' → logprob: -7.125852108001709
    3. 'order' → logprob: -10.625852584838867
    4. 'Panel' → logprob: -11.500852584838867
    5. 'score' → logprob: -12.250852584838867
    6. ' panel' → logprob: -12.500852584838867
    7. 'current' → logprob: -14.000852584838867
    8. '_order' → logprob: -14.125852584838867
    9. '_PANEL' → logprob: -14.250852584838867
    10. '(panel' → logprob: -14.500852584838867

Token 1308: '(score' (ID: 70244)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.036360204219818115
    2. 'current' → logprob: -4.036360263824463
    3. '(score' → logprob: -4.036360263824463
    4. ' score' → logprob: -8.661359786987305
    5. '(current' → logprob: -8.911359786987305
    6. 'code' → logprob: -9.786359786987305
    7. ' current' → logprob: -11.286359786987305
    8. '	score' → logprob: -12.661359786987305
    9. '(code' → logprob: -13.661359786987305
    10. ' ' → logprob: -14.411359786987305

Token 1309: '[i' (ID: 1768)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00986788235604763
    2. 'current' → logprob: -4.7598676681518555
    3. '[' → logprob: -6.8848676681518555
    4. 'score' → logprob: -8.884867668151855
    5. '[i' → logprob: -9.634867668151855
    6. ' current' → logprob: -11.009867668151855
    7. '(current' → logprob: -12.009867668151855
    8. ',current' → logprob: -14.009867668151855
    9. ')' → logprob: -14.759867668151855
    10. ' score' → logprob: -15.509867668151855

Token 1310: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.3670024871826172
    2. ']):
' → logprob: -1.2420024871826172
    3. '])' → logprob: -4.867002487182617
    4. '):' → logprob: -5.617002487182617
    5. '):
' → logprob: -6.117002487182617
    6. ']' → logprob: -6.492002487182617
    7. ')' → logprob: -7.242002487182617
    8. '       ' → logprob: -7.617002487182617
    9. '])):
' → logprob: -7.617002487182617
    10. ')]' → logprob: -8.117002487182617

Token 1311: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12787316739559174
    2. ' continue' → logprob: -2.877873182296753
    3. '                   ' → logprob: -3.502873182296753
    4. 'continue' → logprob: -3.877873182296753
    5. ':' → logprob: -5.127872943878174
    6. ':
' → logprob: -5.252872943878174
    7. '):
' → logprob: -7.752872943878174
    8. '               ' → logprob: -8.127873420715332
    9. ')' → logprob: -8.377873420715332
    10. '):' → logprob: -8.502873420715332

Token 1312: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.25466951727867126
    2. ' continue' → logprob: -1.5046695470809937
    3. '                           ' → logprob: -6.129669666290283
    4. '                       ' → logprob: -7.629669666290283
    5. '                   ' → logprob: -10.379669189453125
    6. '                               ' → logprob: -11.129669189453125
    7. '	continue' → logprob: -11.504669189453125
    8. '```' → logprob: -11.629669189453125
    9. '               ' → logprob: -12.879669189453125
    10. '           ' → logprob: -13.629669189453125

Token 1313: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006670608650892973
    2. '                   ' → logprob: -5.3816704750061035
    3. 'new' → logprob: -6.8816704750061035
    4. ')' → logprob: -8.006670951843262
    5. ' new' → logprob: -8.006670951843262
    6. '                       ' → logprob: -8.631670951843262
    7. 'continue' → logprob: -9.756670951843262
    8. '
' → logprob: -10.131670951843262
    9. '           ' → logprob: -11.131670951843262
    10. ')new' → logprob: -11.256670951843262

Token 1314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07715460658073425
    2. '                   ' → logprob: -3.5771546363830566
    3. 'new' → logprob: -3.8271546363830566
    4. ' new' → logprob: -4.202154636383057
    5. ')' → logprob: -5.577154636383057
    6. '                       ' → logprob: -5.827154636383057
    7. 'continue' → logprob: -7.077154636383057
    8. ')new' → logprob: -7.327154636383057
    9. '```' → logprob: -7.952154636383057
    10. '<|end|>' → logprob: -8.327154159545898

Token 1315: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.48636090755462646
    2. '               ' → logprob: -0.9863609075546265
    3. ' new' → logprob: -4.611361026763916
    4. '                   ' → logprob: -6.236361026763916
    5. 'continue' → logprob: -8.861360549926758
    6. '           ' → logprob: -9.736360549926758
    7. '```' → logprob: -10.236360549926758
    8. '                       ' → logprob: -10.486360549926758
    9. ')new' → logprob: -11.611360549926758
    10. '$new' → logprob: -12.361360549926758

Token 1316: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -3.054500666621607e-06
    2. 'states' → logprob: -13.62500286102295
    3. '_state' → logprob: -13.75000286102295
    4. '_' → logprob: -14.75000286102295
    5. 'States' → logprob: -15.50000286102295
    6. '_tokens' → logprob: -17.000003814697266
    7. 'state' → logprob: -18.375003814697266
    8. '_st' → logprob: -18.625003814697266
    9. ' states' → logprob: -19.125003814697266
    10. '_panel' → logprob: -19.750003814697266

Token 1317: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.014168326742947102
    2. '.' → logprob: -4.2641682624816895
    3. '           ' → logprob: -12.639168739318848
    4. ' .' → logprob: -14.014168739318848
    5. '               ' → logprob: -15.764168739318848
    6. '                   ' → logprob: -16.01416778564453
    7. 'add' → logprob: -16.38916778564453
    8. '       ' → logprob: -16.51416778564453
    9. '.Add' → logprob: -16.51416778564453
    10. '.append' → logprob: -17.01416778564453

Token 1318: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0013940460048615932
    2. '(' → logprob: -6.626394271850586
    3. '(current' → logprob: -9.626394271850586
    4. '(new' → logprob: -14.001394271850586
    5. ' ((' → logprob: -14.376394271850586
    6. ' (' → logprob: -15.751394271850586
    7. ' ' → logprob: -16.001394271850586
    8. '   ' → logprob: -16.251394271850586
    9. '  ' → logprob: -17.001394271850586
    10. '[(' → logprob: -17.126394271850586

Token 1319: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.035179853439331055
    2. '(l' → logprob: -3.410179853439331
    3. '(ld' → logprob: -7.03518009185791
    4. 'ld' → logprob: -8.03518009185791
    5. ' lg' → logprob: -8.28518009185791
    6. '(' → logprob: -10.53518009185791
    7. ' (' → logprob: -10.66018009185791
    8. '   ' → logprob: -11.41018009185791
    9. '/lg' → logprob: -12.41018009185791
    10. '
' → logprob: -12.41018009185791

Token 1320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06198595091700554
    2. ',current' → logprob: -2.811985969543457
    3. ' ,' → logprob: -11.561985969543457
    4. 'current' → logprob: -12.686985969543457
    5. ',
' → logprob: -12.686985969543457
    6. ',new' → logprob: -14.186985969543457
    7. '[current' → logprob: -14.311985969543457
    8. ',next' → logprob: -14.311985969543457
    9. '(current' → logprob: -15.936985969543457
    10. ' current' → logprob: -16.06198501586914

Token 1321: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -3.7697225252486533e-06
    2. ' current' → logprob: -12.500003814697266
    3. '	current' → logprob: -21.500003814697266
    4. '(current' → logprob: -22.000003814697266
    5. '$current' → logprob: -22.750003814697266
    6. '.current' → logprob: -23.500003814697266
    7. '_current' → logprob: -24.250003814697266
    8. 'Current' → logprob: -24.625003814697266
    9. '[current' → logprob: -25.000003814697266
    10. '   ' → logprob: -25.875003814697266

Token 1322: '_panel' (ID: 54810)
  Prédit: '_panel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_panel' → logprob: -7.941850526549388e-06
    2. 'panel' → logprob: -12.000007629394531
    3. 'Panel' → logprob: -13.375007629394531
    4. ' panel' → logprob: -15.875007629394531
    5. '_PANEL' → logprob: -16.62500762939453
    6. '	panel' → logprob: -18.25000762939453
    7. '(panel' → logprob: -18.37500762939453
    8. '_p' → logprob: -18.62500762939453
    9. 'i' → logprob: -18.75000762939453
    10. '```' → logprob: -19.25000762939453

Token 1323: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018216552212834358
    2. '))' → logprob: -4.018216609954834
    3. ')
' → logprob: -10.268216133117676
    4. '))
' → logprob: -10.768216133117676
    5. '               ' → logprob: -11.768216133117676
    6. '           ' → logprob: -13.518216133117676
    7. ')}' → logprob: -14.018216133117676
    8. '       ' → logprob: -14.518216133117676
    9. ')))' → logprob: -15.518216133117676
    10. '                   ' → logprob: -16.518217086791992

Token 1324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06477608531713486
    2. 'states' → logprob: -2.9397761821746826
    3. '   ' → logprob: -5.1897759437561035
    4. ' states' → logprob: -5.9397759437561035
    5. 'return' → logprob: -6.8147759437561035
    6. '<|end|>' → logprob: -8.189776420593262
    7. '        
' → logprob: -9.439776420593262
    8. 'if' → logprob: -9.564776420593262
    9. '           ' → logprob: -10.814776420593262
    10. '
' → logprob: -10.939776420593262

Token 1325: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48193246126174927
    2. 'states' → logprob: -0.9819324612617493
    3. ' states' → logprob: -5.231932640075684
    4. '   ' → logprob: -6.106932640075684
    5. 'if' (adapté à ' if') → logprob: -8.356932640075684
    6. '           ' → logprob: -11.981932640075684
    7. ' if' → logprob: -12.356932640075684
    8. 'state' → logprob: -13.106932640075684
    9. '```' → logprob: -13.731932640075684
    10. '.states' → logprob: -13.981932640075684

Token 1326: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00549532612785697
    2. ' not' → logprob: -5.255495548248291
    3. 'len' → logprob: -8.255495071411133
    4. '   ' → logprob: -14.255495071411133
    5. 'new' → logprob: -14.380495071411133
    6. '(not' → logprob: -15.380495071411133
    7. '	not' → logprob: -16.255495071411133
    8. ' len' → logprob: -16.630495071411133
    9. '       ' → logprob: -17.505495071411133
    10. '!' → logprob: -18.380495071411133

Token 1327: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.005234002135694027
    2. ' new' → logprob: -5.2552337646484375
    3. '
' → logprob: -17.255233764648438
    4. '(new' → logprob: -17.255233764648438
    5. '_new' → logprob: -17.255233764648438
    6. '	new' → logprob: -17.380233764648438
    7. ')new' → logprob: -17.880233764648438
    8. '新' → logprob: -18.130233764648438
    9. 'New' → logprob: -18.505233764648438
    10. ' ' → logprob: -18.880233764648438

Token 1328: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.688212614681106e-05
    2. 'states' → logprob: -11.000017166137695
    3. 'new' → logprob: -17.000017166137695
    4. '_' → logprob: -17.750017166137695
    5. 'States' → logprob: -17.750017166137695
    6. ' states' → logprob: -18.125017166137695
    7. 's' → logprob: -18.500017166137695
    8. '_state' → logprob: -18.500017166137695
    9. 't' → logprob: -20.000017166137695
    10. '(states' → logprob: -20.250017166137695

Token 1329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3975123465061188
    2. ':
' → logprob: -1.1475123167037964
    3. '           ' → logprob: -5.522512435913086
    4. '       ' → logprob: -5.897512435913086
    5. '   ' → logprob: -6.522512435913086
    6. '=' → logprob: -6.772512435913086
    7. ':return' → logprob: -7.897512435913086
    8. ' =' → logprob: -8.397512435913086
    9. '               ' → logprob: -9.147512435913086
    10. '                   ' → logprob: -9.397512435913086

Token 1330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020446251146495342
    2. '       ' → logprob: -6.502044677734375
    3. 'return' → logprob: -7.627044677734375
    4. ' return' → logprob: -10.502044677734375
    5. '```' → logprob: -10.877044677734375
    6. '   ' → logprob: -12.627044677734375
    7. '	       ' → logprob: -13.502044677734375
    8. '               ' → logprob: -13.627044677734375
    9. '
' → logprob: -13.752044677734375
    10. '{return' → logprob: -14.752044677734375

Token 1331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022244831547141075
    2. '       ' → logprob: -4.272244930267334
    3. ' return' → logprob: -5.522244930267334
    4. '           ' → logprob: -5.522244930267334
    5. '   ' → logprob: -10.272244453430176
    6. '	return' → logprob: -11.522244453430176
    7. '```' → logprob: -11.897244453430176
    8. '               ' → logprob: -13.147244453430176
    9. ' ' → logprob: -14.397244453430176
    10. '{return' → logprob: -14.772244453430176

Token 1332: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.020401619374752045
    2. '"' → logprob: -4.270401477813721
    3. ' "' → logprob: -5.395401477813721
    4. ''' → logprob: -6.395401477813721
    5. '   ' → logprob: -11.770401954650879
    6. 'No' → logprob: -13.520401954650879
    7. ' '' → logprob: -13.895401954650879
    8. ' ' → logprob: -14.145401954650879
    9. '	' → logprob: -14.645401954650879
    10. '“No' → logprob: -15.270401954650879

Token 1333: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005547016044147313
    2. '"No' → logprob: -7.50055456161499
    3. 'NO' → logprob: -13.500555038452148
    4. ' No' → logprob: -15.750555038452148
    5. '"' → logprob: -16.37555503845215
    6. '“No' → logprob: -17.50055503845215
    7. ''' → logprob: -18.25055503845215
    8. '_No' → logprob: -18.75055503845215
    9. 'Impossible' → logprob: -18.75055503845215
    10. '>No' → logprob: -21.25055503845215

Token 1334: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5195144414901733
    2. '   ' → logprob: -1.1445144414901733
    3. '\n' → logprob: -3.394514560699463
    4. '       ' → logprob: -3.644514560699463
    5. '"
' → logprob: -4.019514560699463
    6. ')' → logprob: -5.019514560699463
    7. '")' → logprob: -6.644514560699463
    8. ')"' → logprob: -7.769514560699463
    9. '
' → logprob: -8.144514083862305
    10. '```' → logprob: -8.394514083862305

Token 1335: '       ' (ID: 309)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4889557659626007
    2. '       ' → logprob: -0.9889557361602783
    3. ' states' → logprob: -4.238955974578857
    4. '   ' → logprob: -8.1139554977417
    5. '(states' → logprob: -10.8639554977417
    6. '.states' → logprob: -11.8639554977417
    7. '_states' → logprob: -11.9889554977417
    8. '        
' → logprob: -12.1139554977417
    9. '           ' → logprob: -12.3639554977417
    10. '```' → logprob: -13.3639554977417

Token 1336: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.024679506197571754
    2. ' states' → logprob: -3.77467942237854
    3. '       ' → logprob: -7.024679660797119
    4. '   ' → logprob: -7.524679660797119
    5. '(states' → logprob: -13.649679183959961
    6. '.states' → logprob: -14.274679183959961
    7. '           ' → logprob: -14.399679183959961
    8. '```' → logprob: -14.899679183959961
    9. '        
' → logprob: -15.024679183959961
    10. '_states' → logprob: -15.649679183959961

Token 1337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=new' → logprob: -18.133615493774414
    4. '＝' → logprob: -18.633615493774414
    5. '=
' → logprob: -18.633615493774414
    6. ',' → logprob: -18.758615493774414
    7. '   ' → logprob: -19.008615493774414
    8. '.=' → logprob: -19.383615493774414
    9. '=}' → logprob: -19.383615493774414
    10. '=

' → logprob: -19.758615493774414

Token 1338: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.5491004129871726e-05
    2. ' new' → logprob: -10.000045776367188
    3. 'New' → logprob: -21.250045776367188
    4. '_new' → logprob: -21.500045776367188
    5. '	new' → logprob: -21.625045776367188
    6. '```' → logprob: -21.625045776367188
    7. '   ' → logprob: -23.000045776367188
    8. 'newline' → logprob: -23.250045776367188
    9. '新' → logprob: -23.625045776367188
    10. '$new' → logprob: -23.875045776367188

Token 1339: '_states' (ID: 53795)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.13588955998420715
    2. '_states' → logprob: -2.1358895301818848
    3. 'new' → logprob: -4.885889530181885
    4. 'set' → logprob: -6.760889530181885
    5. 'States' → logprob: -8.760890007019043
    6. 'w' → logprob: -10.885890007019043
    7. 'sets' → logprob: -11.635890007019043
    8. ' states' → logprob: -11.760890007019043
    9. 'state' → logprob: -11.885890007019043
    10. 'st' → logprob: -12.510890007019043

Token 1340: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2540086805820465
    2. 'return' → logprob: -1.5040086507797241
    3. '    
' → logprob: -6.504008769989014
    4. '
' → logprob: -8.129008293151855
    5. '```' → logprob: -9.004008293151855
    6. ' return' → logprob: -9.129008293151855
    7. '#' → logprob: -10.629008293151855
    8. '        
' → logprob: -10.754008293151855
    9. '  
' → logprob: -12.879008293151855
    10. 'for' → logprob: -13.504008293151855

Token 1341: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5766914486885071
    2. '   ' → logprob: -0.8266914486885071
    3. ' return' → logprob: -8.201691627502441
    4. '    
' → logprob: -8.326691627502441
    5. '```' → logprob: -8.701691627502441
    6. '
' → logprob: -10.701691627502441
    7. 'def' → logprob: -11.076691627502441
    8. '<|end|>' → logprob: -11.326691627502441
    9. '	return' → logprob: -11.951691627502441
    10. '        
' → logprob: -12.701691627502441

Token 1342: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.869017852295656e-06
    2. ' return' → logprob: -12.500006675720215
    3. '   ' → logprob: -12.750006675720215
    4. '```' → logprob: -15.750006675720215
    5. '	return' → logprob: -17.62500762939453
    6. '    
' → logprob: -20.12500762939453
    7. '
' → logprob: -21.12500762939453
    8. '#' → logprob: -21.62500762939453
    9. '{return' → logprob: -21.87500762939453
    10. 'Return' → logprob: -22.00000762939453

Token 1343: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014343898743391037
    2. ' "' → logprob: -4.264343738555908
    3. '"No' → logprob: -8.639344215393066
    4. '"You' → logprob: -13.514344215393066
    5. ''' → logprob: -13.889344215393066
    6. '("' → logprob: -14.264344215393066
    7. '   ' → logprob: -15.389344215393066
    8. '"Oh' → logprob: -16.38934326171875
    9. '"My' → logprob: -17.01434326171875
    10. '"We' → logprob: -17.01434326171875

Token 1344: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00026205103495158255
    2. '"' → logprob: -8.250262260437012
    3. ''' → logprob: -14.625262260437012
    4. 'No' → logprob: -15.625262260437012
    5. 'YES' → logprob: -16.875261306762695
    6. 'Oui' → logprob: -16.875261306762695
    7. '“Yes' → logprob: -17.875261306762695
    8. ' Yes' → logprob: -18.125261306762695
    9. '\"' → logprob: -19.625261306762695
    10. '"No' → logprob: -19.875261306762695

Token 1345: '"



' (ID: 156085)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1346: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1347: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03627490997314453
    2. 'main' → logprob: -3.4112749099731445
    3. '_main' → logprob: -6.4112749099731445
    4. ' test' → logprob: -7.7862749099731445
    5. ' solve' → logprob: -8.536274909973145
    6. ' solution' → logprob: -9.661274909973145
    7. '	main' → logprob: -10.036274909973145
    8. ' read' → logprob: -10.411274909973145
    9. 'solve' → logprob: -10.411274909973145
    10. '__' → logprob: -10.536274909973145

Token 1348: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.386922687292099
    2. '():
' → logprob: -1.1369227170944214
    3. '():
' → logprob: -10.136922836303711
    4. '():

' → logprob: -12.011922836303711
    5. '(argv' → logprob: -13.011922836303711
    6. '()' → logprob: -13.511922836303711
    7. ' ():' → logprob: -13.886922836303711
    8. '()>' → logprob: -14.261922836303711
    9. '().' → logprob: -16.13692283630371
    10. '();' → logprob: -16.13692283630371

Token 1349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20101435482501984
    2. 'import' → logprob: -1.8260143995285034
    3. '```' → logprob: -4.451014518737793
    4. ' import' → logprob: -4.701014518737793
    5. '	import' → logprob: -9.076014518737793
    6. ' for' → logprob: -9.576014518737793
    7. 'for' → logprob: -10.826014518737793
    8. '``' → logprob: -10.826014518737793
    9. 'def' → logprob: -11.326014518737793
    10. 'n' → logprob: -11.701014518737793

Token 1350: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2612142264842987
    2. 'import' → logprob: -1.511214256286621
    3. 'score' → logprob: -5.761214256286621
    4. 'n' → logprob: -6.261214256286621
    5. 'for' → logprob: -6.511214256286621
    6. 't' → logprob: -6.886214256286621
    7. '```' → logprob: -6.886214256286621
    8. 'input' (adapté à ' input') → logprob: -8.386214256286621
    9. ' import' → logprob: -8.386214256286621
    10. ' for' → logprob: -10.261214256286621

Token 1351: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.33252260088920593
    2. '_data' → logprob: -1.8325226306915283
    3. '_str' → logprob: -2.3325226306915283
    4. '()' → logprob: -3.9575226306915283
    5. '_text' → logprob: -6.207522392272949
    6. '_lines' → logprob: -6.582522392272949
    7. '_string' → logprob: -7.207522392272949
    8. '_score' → logprob: -7.332522392272949
    9. ' =' → logprob: -7.332522392272949
    10. '=' → logprob: -7.707522392272949

Token 1352: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47408831119537354
    2. ' sys' → logprob: -0.9740883111953735
    3. '=sys' → logprob: -12.224088668823242
    4. 'input' → logprob: -12.849088668823242
    5. '(sys' → logprob: -13.099088668823242
    6. '	sys' → logprob: -13.599088668823242
    7. 'lambda' → logprob: -15.474088668823242
    8. ' input' → logprob: -15.849088668823242
    9. ' lambda' → logprob: -17.099088668823242
    10. '```' → logprob: -17.724088668823242

Token 1353: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0032644576858729124
    2. 'stdin' → logprob: -5.753264427185059
    3. '(stdin' → logprob: -9.878264427185059
    4. '.readline' → logprob: -11.003264427185059
    5. '.stdout' → logprob: -11.753264427185059
    6. '.argv' → logprob: -12.628264427185059
    7. ' stdin' → logprob: -13.003264427185059
    8. '.' → logprob: -13.503264427185059
    9. 'import' → logprob: -13.628264427185059
    10. '.std' → logprob: -14.503264427185059

Token 1354: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.25334006547927856
    2. 'read' → logprob: -1.5033400058746338
    3. 'stdin' → logprob: -7.003340244293213
    4. '_read' → logprob: -8.378339767456055
    5. ' readline' → logprob: -8.753339767456055
    6. '.read' → logprob: -10.128339767456055
    7. 'readonly' → logprob: -10.378339767456055
    8. 'input' → logprob: -11.503339767456055
    9. 'rea' → logprob: -11.628339767456055
    10. 'reader' → logprob: -12.378339767456055

Token 1355: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.197597473859787
    2. '()' → logprob: -2.0725975036621094
    3. '()
' → logprob: -2.9475975036621094
    4. '   ' → logprob: -7.572597503662109
    5. '
' → logprob: -8.19759750366211
    6. 'def' → logprob: -9.44759750366211
    7. '()\' → logprob: -10.32259750366211
    8. 'rstrip' → logprob: -11.19759750366211
    9. '()

' → logprob: -11.82259750366211
    10. '.strip' → logprob: -11.82259750366211

Token 1356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21372368931770325
    2. 'n' → logprob: -1.9637236595153809
    3. 't' → logprob: -2.963723659515381
    4. ' n' → logprob: -8.963724136352539
    5. 'T' → logprob: -9.213724136352539
    6. '```' → logprob: -9.713724136352539
    7. 'score' → logprob: -10.088724136352539
    8. 'num' → logprob: -10.338724136352539
    9. '	n' → logprob: -10.463724136352539
    10. 's' → logprob: -10.588724136352539

Token 1357: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.16853860020637512
    2. 'n' → logprob: -1.9185385704040527
    3. 'T' → logprob: -5.418538570404053
    4. 'score' → logprob: -6.293538570404053
    5. '   ' → logprob: -6.793538570404053
    6. 'q' → logprob: -7.543538570404053
    7. 's' → logprob: -8.543539047241211
    8. 'for' → logprob: -9.293539047241211
    9. ' t' → logprob: -10.793539047241211
    10. 'Q' → logprob: -11.793539047241211

Token 1358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5782460570335388
    2. ' =' → logprob: -0.8282460570335388
    3. '=int' → logprob: -6.078246116638184
    4. '   ' → logprob: -12.453246116638184
    5. 't' → logprob: -14.078246116638184
    6. 'c' → logprob: -14.203246116638184
    7. ' ' → logprob: -14.328246116638184
    8. 's' → logprob: -14.328246116638184
    9. 'int' → logprob: -14.328246116638184
    10. '_' → logprob: -14.328246116638184

Token 1359: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. '[int' → logprob: -20.251171112060547
    4. '=int' → logprob: -20.626171112060547
    5. '(int' → logprob: -21.751171112060547
    6. '	int' → logprob: -22.126171112060547
    7. '<int' → logprob: -23.376171112060547
    8. '0' → logprob: -23.626171112060547
    9. '   ' → logprob: -24.126171112060547
    10. '
' → logprob: -24.501171112060547

Token 1360: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002077932469546795
    2. 'input' → logprob: -6.252078056335449
    3. '(sys' → logprob: -9.50207805633545
    4. '()
' → logprob: -10.00207805633545
    5. '()' → logprob: -10.50207805633545
    6. 'sys' → logprob: -13.37707805633545
    7. ' input' → logprob: -16.002077102661133
    8. '().' → logprob: -16.252077102661133
    9. '=input' → logprob: -16.877077102661133
    10. '())' → logprob: -17.252077102661133

Token 1361: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04447012022137642
    2. '()' → logprob: -3.7944700717926025
    3. '().' → logprob: -4.294470310211182
    4. '())
' → logprob: -4.919470310211182
    5. '()
' → logprob: -10.294469833374023
    6. '(' → logprob: -11.544469833374023
    7. ')' → logprob: -12.794469833374023
    8. '()[' → logprob: -13.044469833374023
    9. '())

' → logprob: -13.294469833374023
    10. '())
' → logprob: -13.919469833374023

Token 1362: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004951290902681649
    2. ' for' → logprob: -7.750494956970215
    3. '   ' → logprob: -9.750494956970215
    4. '	for' → logprob: -12.875494956970215
    5. '```' → logprob: -13.125494956970215
    6. '
' → logprob: -14.125494956970215
    7. 'while' → logprob: -14.375494956970215
    8. '    
' → logprob: -16.25049591064453
    9. '<|end|>' → logprob: -16.50049591064453
    10. '``' → logprob: -18.00049591064453

Token 1363: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00014096579980105162
    2. ' for' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.250141143798828
    4. '	for' → logprob: -15.250141143798828
    5. '```' → logprob: -15.250141143798828
    6. '
' → logprob: -15.500141143798828
    7. 'while' → logprob: -15.875141143798828
    8. '    
' → logprob: -18.500141143798828
    9. '<|end|>' → logprob: -18.750141143798828
    10. '``' → logprob: -20.875141143798828

Token 1364: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014163628220558167
    2. ' _' → logprob: -4.264163494110107
    3. '_
' → logprob: -16.639163970947266
    4. ' _
' → logprob: -16.639163970947266
    5. '_=' → logprob: -17.389163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '_i' → logprob: -17.889163970947266
    8. ' in' → logprob: -18.889163970947266
    9. ' i' → logprob: -19.139163970947266
    10. 'i' → logprob: -19.389163970947266

Token 1365: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009794576093554497
    2. 'range' → logprob: -4.88479471206665
    3. ' range' → logprob: -6.50979471206665
    4. ' in' → logprob: -8.009794235229492
    5. '_range' → logprob: -8.134794235229492
    6. 'in' → logprob: -9.634794235229492
    7. ' _' → logprob: -13.259794235229492
    8. '_in' → logprob: -13.759794235229492
    9. '(range' → logprob: -13.884794235229492
    10. '	range' → logprob: -14.759794235229492

Token 1366: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -20.12502670288086
    4. 't' → logprob: -20.75002670288086
    5. '
' → logprob: -20.75002670288086
    6. '	range' → logprob: -20.75002670288086
    7. '   ' → logprob: -22.37502670288086
    8. '_range' → logprob: -22.50002670288086
    9. 'input' → logprob: -23.25002670288086
    10. '  ' → logprob: -23.37502670288086

Token 1367: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.043825458735227585
    2. '(' → logprob: -3.543825387954712
    3. 't' → logprob: -4.918825626373291
    4. '(int' → logprob: -5.418825626373291
    5. ' t' → logprob: -6.543825626373291
    6. '():
' → logprob: -8.168825149536133
    7. ' (' → logprob: -8.168825149536133
    8. '   ' → logprob: -9.293825149536133
    9. '(
' → logprob: -10.293825149536133
    10. 'int' → logprob: -10.543825149536133

Token 1368: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0016582784010097384
    2. '):' → logprob: -6.7516584396362305
    3. '():
' → logprob: -8.12665843963623
    4. '   ' → logprob: -8.62665843963623
    5. ':
' → logprob: -12.12665843963623
    6. '()):
' → logprob: -12.37665843963623
    7. '):
' → logprob: -14.00165843963623
    8. ')' → logprob: -14.12665843963623
    9. ':' → logprob: -14.25165843963623
    10. ' ):
' → logprob: -14.62665843963623

Token 1369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09709671139717102
    2. '   ' → logprob: -2.8470966815948486
    3. 'score' → logprob: -4.347096920013428
    4. '```' → logprob: -4.597096920013428
    5. 'code' → logprob: -5.222096920013428
    6. 'line' → logprob: -6.347096920013428
    7. '        
' → logprob: -7.222096920013428
    8. '    
' → logprob: -7.722096920013428
    9. '<|end|>' → logprob: -7.972096920013428
    10. 's' → logprob: -7.972096920013428

Token 1370: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.026998838409781456
    2. '       ' → logprob: -4.276998996734619
    3. 's' → logprob: -4.401998996734619
    4. 'sequence' → logprob: -8.276998519897461
    5. 'n' → logprob: -8.526998519897461
    6. ' score' → logprob: -11.151998519897461
    7. 'seq' → logprob: -11.651998519897461
    8. '	score' → logprob: -11.901998519897461
    9. '   ' → logprob: -12.651998519897461
    10. 'line' → logprob: -13.026998519897461

Token 1371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014152854681015
    2. ' =' → logprob: -1.7014153003692627
    3. '=input' → logprob: -13.951415061950684
    4. '=line' → logprob: -14.326415061950684
    5. '   ' → logprob: -15.451415061950684
    6. 's' → logprob: -16.201416015625
    7. '	' → logprob: -16.826416015625
    8. 'line' → logprob: -17.201416015625
    9. ' ' → logprob: -17.576416015625
    10. '＝' → logprob: -17.701416015625

Token 1372: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015052208909764886
    2. ' input' → logprob: -6.501505374908447
    3. 'sys' → logprob: -13.126504898071289
    4. '(input' → logprob: -14.751504898071289
    5. '=input' → logprob: -14.751504898071289
    6. '       ' → logprob: -16.50150489807129
    7. ' sys' → logprob: -18.25150489807129
    8. '	input' → logprob: -19.00150489807129
    9. '_input' → logprob: -19.00150489807129
    10. '.input' → logprob: -19.87650489807129

Token 1373: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00017588881019037217
    2. '()' → logprob: -8.750175476074219
    3. '()
' → logprob: -12.125175476074219
    4. 'rstrip' → logprob: -12.625175476074219
    5. '.rstrip' → logprob: -12.875175476074219
    6. '.strip' → logprob: -13.375175476074219
    7. '
' → logprob: -13.375175476074219
    8. '.readline' → logprob: -14.750175476074219
    9. '()).' → logprob: -14.750175476074219
    10. 'strip' → logprob: -14.875175476074219

Token 1374: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00033558503491804004
    2. 'rstrip' → logprob: -8.000335693359375
    3. ' strip' → logprob: -16.250335693359375
    4. '_strip' → logprob: -17.125335693359375
    5. '(strip' → logprob: -18.125335693359375
    6. '.strip' → logprob: -18.875335693359375
    7. '```' → logprob: -19.125335693359375
    8. 'replace' → logprob: -19.625335693359375
    9. '-strip' → logprob: -19.875335693359375
    10. 'decode' → logprob: -22.500335693359375

Token 1375: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027196314185857773
    2. '
' → logprob: -3.9021964073181152
    3. '()
' → logprob: -5.527196407318115
    4. '()' → logprob: -6.777196407318115
    5. 'print' → logprob: -7.277196407318115
    6. '   ' → logprob: -8.277195930480957
    7. '<|end|>' → logprob: -8.652195930480957
    8. ')
' → logprob: -9.277195930480957
    9. '	' → logprob: -9.902195930480957
    10. '  
' → logprob: -10.027195930480957

Token 1376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018497471464797854
    2. 'print' → logprob: -6.50184965133667
    3. '   ' → logprob: -8.001850128173828
    4. '<|end|>' → logprob: -12.376850128173828
    5. ' print' → logprob: -12.501850128173828
    6. '```' → logprob: -12.626850128173828
    7. '        
' → logprob: -15.626850128173828
    8. '	print' → logprob: -15.751850128173828
    9. ' ' → logprob: -15.876850128173828
    10. '<|end|>' → logprob: -15.876850128173828

Token 1377: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009271837188862264
    2. '       ' → logprob: -7.000926971435547
    3. ' print' → logprob: -11.125926971435547
    4. 'result' → logprob: -14.125926971435547
    5. '	print' → logprob: -16.000926971435547
    6. '   ' → logprob: -17.750926971435547
    7. '```' → logprob: -19.375926971435547
    8. '#print' → logprob: -20.250926971435547
    9. '	' → logprob: -20.375926971435547
    10. '_print' → logprob: -20.750926971435547

Token 1378: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.000158842682139948
    2. 'is' → logprob: -8.75015926361084
    3. '(' → logprob: -14.75015926361084
    4. ' is' → logprob: -18.500158309936523
    5. '=is' → logprob: -19.875158309936523
    6. '(
' → logprob: -20.375158309936523
    7. '	is' → logprob: -20.875158309936523
    8. '"is' → logprob: -21.000158309936523
    9. '$is' → logprob: -22.625158309936523
    10. '   ' → logprob: -23.250158309936523

Token 1379: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.4974866644479334e-05
    2. 'natural' → logprob: -11.125015258789062
    3. 'n' → logprob: -16.875015258789062
    4. 'score' → logprob: -17.125015258789062
    5. '```' → logprob: -17.125015258789062
    6. '(n' → logprob: -18.000015258789062
    7. ' natural' → logprob: -18.500015258789062
    8. 'Natural' → logprob: -18.500015258789062
    9. '
' → logprob: -19.000015258789062
    10. 'natur' → logprob: -19.375015258789062

Token 1380: 'atural' (ID: 14538)
  Prédit: 'atural'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atural' → logprob: -0.006753967143595219
    2. 'natural' → logprob: -5.006753921508789
    3. 'at' → logprob: -10.881753921508789
    4. 'Natural' → logprob: -11.256753921508789
    5. '_n' → logprob: -12.506753921508789
    6. '-natural' → logprob: -14.256753921508789
    7. '_at' → logprob: -14.631753921508789
    8. 't' → logprob: -14.881753921508789
    9. '```' → logprob: -15.131753921508789
    10. 'atur' → logprob: -15.131753921508789

Token 1381: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -2.5776860184123507e-06
    2. '(scores' → logprob: -13.75000286102295
    3. '(' → logprob: -14.37500286102295
    4. ')' → logprob: -14.62500286102295
    5. ' (' → logprob: -15.87500286102295
    6. 'score' → logprob: -16.125001907348633
    7. ')(' → logprob: -17.000001907348633
    8. '(code' → logprob: -18.625001907348633
    9. '(rank' → logprob: -19.250001907348633
    10. '	score' → logprob: -19.250001907348633

Token 1382: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03029373474419117
    2. ')' → logprob: -3.5302937030792236
    3. '(score' → logprob: -7.530293941497803
    4. ')))' → logprob: -13.280293464660645
    5. '   ' → logprob: -13.780293464660645
    6. '))
' → logprob: -13.905293464660645
    7. ' ))' → logprob: -14.030293464660645
    8. 'score' → logprob: -14.530293464660645
    9. '(' → logprob: -14.530293464660645
    10. ',' → logprob: -14.905293464660645

Token 1383: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1384: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014310657978058
    2. '__' → logprob: -1.7014310359954834
    3. 'name' → logprob: -11.826431274414062
    4. '___' → logprob: -12.826431274414062
    5. '_name' → logprob: -13.076431274414062
    6. ' ' → logprob: -13.826431274414062
    7. 'Name' → logprob: -14.076431274414062
    8. '_' → logprob: -14.201431274414062
    9. ' name' → logprob: -14.201431274414062
    10. ' ' → logprob: -14.826431274414062

Token 1385: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17663101851940155
    2. '==' → logprob: -2.426630973815918
    3. ' ==' → logprob: -2.926630973815918
    4. '=="' → logprob: -4.051630973815918
    5. '=='' → logprob: -6.801630973815918
    6. 'name' → logprob: -6.926630973815918
    7. '```' → logprob: -8.426630973815918
    8. '()==' → logprob: -10.176630973815918
    9. ' __' → logprob: -10.426630973815918
    10. '==="' → logprob: -10.676630973815918

Token 1386: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.282920129597187e-05
    2. '==' → logprob: -11.500012397766113
    3. '__.__' → logprob: -13.500012397766113
    4. 'name' → logprob: -14.250012397766113
    5. '=="' → logprob: -15.500012397766113
    6. '__.' → logprob: -16.37501335144043
    7. ' ==' → logprob: -16.50001335144043
    8. 'main' → logprob: -16.62501335144043
    9. '```' → logprob: -16.75001335144043
    10. '__('' → logprob: -17.12501335144043

Token 1387: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3443569540977478
    2. '=="' → logprob: -1.5943570137023926
    3. '__' → logprob: -3.2193570137023926
    4. ' ==' → logprob: -3.3443570137023926
    5. '=='' → logprob: -4.344357013702393
    6. '==
' → logprob: -11.469356536865234
    7. '```' → logprob: -11.969356536865234
    8. '==="' → logprob: -12.094356536865234
    9. '===' → logprob: -12.844356536865234
    10. '__.__' → logprob: -13.094356536865234

Token 1388: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023250484839081764
    2. ''' → logprob: -3.7732505798339844
    3. '__' → logprob: -12.523250579833984
    4. ' "__' → logprob: -13.523250579833984
    5. ' '__' → logprob: -17.898250579833984
    6. '"name' → logprob: -18.023250579833984
    7. '   ' → logprob: -19.148250579833984
    8. '"user' → logprob: -19.648250579833984
    9. ''"' → logprob: -20.148250579833984
    10. '("__' → logprob: -20.273250579833984

Token 1389: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003291480534244329
    2. '__' → logprob: -8.12532901763916
    3. 'name' → logprob: -10.50032901763916
    4. '"' → logprob: -12.37532901763916
    5. ''' → logprob: -14.37532901763916
    6. ' main' → logprob: -14.62532901763916
    7. '_main' → logprob: -15.87532901763916
    8. 'm' → logprob: -16.750329971313477
    9. '__":
' → logprob: -17.250329971313477
    10. ' "__' → logprob: -17.625329971313477

Token 1390: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01882459595799446
    2. '__' → logprob: -4.143824577331543
    3. '__':
' → logprob: -5.893824577331543
    4. '__
' → logprob: -11.643824577331543
    5. '__
' → logprob: -12.018824577331543
    6. '__["' → logprob: -12.518824577331543
    7. '__.__' → logprob: -12.518824577331543
    8. '__()
' → logprob: -13.393824577331543
    9. '```' → logprob: -13.518824577331543
    10. '"' → logprob: -13.518824577331543

Token 1391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20237718522548676
    2. 'main' → logprob: -1.702377200126648
    3. '	main' → logprob: -7.0773773193359375
    4. ' main' → logprob: -9.077377319335938
    5. '   ' → logprob: -13.452377319335938
    6. ' ' → logprob: -13.452377319335938
    7. '    
' → logprob: -14.327377319335938
    8. '```' → logprob: -14.327377319335938
    9. 'import' → logprob: -14.702377319335938
    10. '_main' → logprob: -15.202377319335938

Token 1392: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -23.0
    5. '_main' → logprob: -25.5
    6. 'import' → logprob: -26.5
    7. '(main' → logprob: -26.5
    8. '.main' → logprob: -26.625
    9. 'Main' → logprob: -29.0
    10. '/main' → logprob: -29.375

Token 1393: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1391
Tokens correctement prédits (1ère position, stricte): 385
Tokens correctement prédits (1ère position, avec adaptation): 412
Tokens correctement prédits (top 10): 896
Précision stricte (1ère position): 27.68%
Précision adaptée (1ère position): 29.62%
Précision (top 10): 64.41%
================================================================================
