================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On modélise les horaires comme un ensemble de créneaux 5 jours * N cours/jour = 5*N maximum 40.
# Chaque cours occupe plusieurs créneaux consécutifs dans un jour donné.
# Le problème est une sélection de cours (max L) sans chevauchement de créneaux, maximisant la somme des bonheur t_i.

# On code une solution avec programmation dynamique par masque d'occupation des créneaux.
# Chaque cours est représenté par un masque binaire indiquant les créneaux occupés.
# On trie les cours, puis on fait DP sur (masque occupation, nombre de cours pris),
# on essaie d'ajouter un cours qui ne chevauche pas et met à jour le max bonheur.

# Cette solution est possible car au maximum on a 5*8=40 créneaux,
# L max <= min(5*N, M) donc au pire 40 ou 300,
# les états sont donc gérables avec stockage intelligent.

import sys
input = sys.stdin.readline

def main():
    N, M, L = map(int, input().split())

    classes = []
    for _ in range(M):
        d, a, k, t = map(int, input().split())
        # Créneaux couvrerts : du (d*N + (a-1)) au (d*N + (a-1)+(k-1))
        mask = 0
        start = d * N + (a - 1)
        for x in range(k):
            mask |= 1 << (start + x)
        classes.append((mask, t))

    # DP: dict clé = (masque_occupation_cours), valeur = bonheur maximum atteint avec certains cours
    # on limitera à selectionner au plus L cours.
    # Comme on doit aussi limiter le nombre de cours, on gardera un tableau dp[l][mask] = max bonheur
    # où l = nombre de cours pris, mask = occupation

    from collections import defaultdict

    dp = [defaultdict(lambda: -1) for _ in range(L+1)]
    dp[0][0] = 0  # sans cours, pas d'occupation, bonheur 0

    for mask_class, t in classes:
        # on itère en arrière sur le nombre de cours pour éviter doubles comptes
        for l in range(L-1, -1, -1):
            for occ_mask, val in dp[l].items():
                if val == -1:
                    continue
                if (occ_mask & mask_class) == 0:
                    # pas de chevauchement, on peut ajouter ce cours
                    new_mask = occ_mask | mask_class
                    if dp[l+1][new_mask] < val + t:
                        dp[l+1][new_mask] = val + t

    # La réponse est le max dp[l][mask] avec l <= L pour tout mask
    ans = 0
    for l in range(L+1):
        if dp[l]:
            ans = max(ans, max(dp[l].values()))

    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' mod' (ID: 1812)
  → Token d'amorce (pas de prédiction)

Token 3: 'él' (ID: 6778)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7915872931480408
    2. '_' → logprob: -1.4165873527526855
    3. 'ule' → logprob: -1.6665873527526855
    4. '_e' → logprob: -3.1665873527526855
    5. '=' → logprob: -3.7915873527526855
    6. 'u' → logprob: -4.2915873527526855
    7. '```' → logprob: -4.4165873527526855
    8. '#' → logprob: -5.6665873527526855
    9. 'el' → logprob: -5.6665873527526855
    10. 'ul' → logprob: -5.9165873527526855

Token 4: 'ise' (ID: 1096)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5126791000366211
    2. 'è' → logprob: -1.387679100036621
    3. 'é' → logprob: -2.012679100036621
    4. '#' → logprob: -5.012679100036621
    5. '```' → logprob: -5.512679100036621
    6. 'es' → logprob: -6.137679100036621
    7. 'a' → logprob: -6.887679100036621
    8. '`' → logprob: -7.262679100036621
    9. 'u' → logprob: -7.637679100036621
    10. 'èle' → logprob: -7.887679100036621

Token 5: ' les' (ID: 1341)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2203400135040283
    2. 'e' → logprob: -2.0953400135040283
    3. 'é' → logprob: -2.2203400135040283
    4. '_' → logprob: -2.5953400135040283
    5. ''' → logprob: -2.5953400135040283
    6. '`' → logprob: -2.7203400135040283
    7. ' la' → logprob: -3.0953400135040283
    8. ' ' → logprob: -3.4703400135040283
    9. ',' → logprob: -3.7203400135040283
    10. 'le' → logprob: -3.7203400135040283

Token 6: ' horaires' (ID: 153181)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.9284074902534485
    2. ' flux' → logprob: -2.0534074306488037
    3. ' déplacements' → logprob: -3.6159074306488037
    4. ' ' → logprob: -3.8034074306488037
    5. ' espaces' → logprob: -3.8659074306488037
    6. 'd' → logprob: -3.9909074306488037
    7. 'é' → logprob: -4.115907669067383
    8. ' modèles' → logprob: -4.240907669067383
    9. ' objets' → logprob: -4.428407669067383
    10. ' vect' → logprob: -4.615907669067383

Token 7: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8377168774604797
    2. '_' → logprob: -1.087716817855835
    3. 's' → logprob: -2.837716817855835
    4. ':' → logprob: -3.337716817855835
    5. ' :' → logprob: -3.337716817855835
    6. '#' → logprob: -3.462716817855835
    7. ''' → logprob: -3.962716817855835
    8. ' =' → logprob: -4.212717056274414
    9. ',' → logprob: -4.962717056274414
    10. '```' → logprob: -5.337717056274414

Token 8: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.803824245929718
    2. ' des' → logprob: -1.1788241863250732
    3. 'une' → logprob: -2.1788241863250732
    4. 'un' → logprob: -2.8038241863250732
    5. ' un' → logprob: -2.8038241863250732
    6. ' une' → logprob: -5.303824424743652
    7. '```' → logprob: -6.053824424743652
    8. '#' → logprob: -6.803824424743652
    9. 'd' → logprob: -7.053824424743652
    10. '`' → logprob: -8.678824424743652

Token 9: ' ensemble' (ID: 33081)
  Prédit: ' diction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diction' → logprob: -0.42259201407432556
    2. 'd' → logprob: -1.297592043876648
    3. 'dict' → logprob: -3.5475919246673584
    4. 'list' → logprob: -4.9225921630859375
    5. '```' → logprob: -5.1725921630859375
    6. 'liste' → logprob: -5.1725921630859375
    7. ' tableau' → logprob: -5.2975921630859375
    8. '#' → logprob: -5.6725921630859375
    9. 'dic' → logprob: -6.4225921630859375
    10. 'table' → logprob: -6.5475921630859375

Token 10: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22675001621246338
    2. '_' → logprob: -2.101749897003174
    3. ' ' → logprob: -3.726749897003174
    4. '```' → logprob: -4.726749897003174
    5. '`' → logprob: -4.851749897003174
    6. 'd' → logprob: -4.851749897003174
    7. '{' → logprob: -4.976749897003174
    8. '.' → logprob: -4.976749897003174
    9. '(' → logprob: -6.101749897003174
    10. ''' → logprob: -6.351749897003174

Token 11: ' cré' (ID: 12201)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.6412084698677063
    2. 'pl' → logprob: -1.3912084102630615
    3. ' plages' → logprob: -1.8912084102630615
    4. 'cr' → logprob: -3.2662084102630615
    5. ' cré' → logprob: -3.8912084102630615
    6. 'dis' → logprob: -5.891208648681641
    7. '```' → logprob: -6.266208648681641
    8. 't' → logprob: -6.891208648681641
    9. 'jours' → logprob: -7.016208648681641
    10. 'slots' → logprob: -7.016208648681641

Token 12: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.31349408626556396
    2. 'neau' → logprob: -1.313494086265564
    3. '```' → logprob: -9.438493728637695
    4. '_ne' → logprob: -10.188493728637695
    5. 'a' → logprob: -10.313493728637695
    6. 'ances' → logprob: -10.688493728637695
    7. 'ane' → logprob: -11.188493728637695
    8. '­ne' → logprob: -11.563493728637695
    9. '``' → logprob: -11.813493728637695
    10. '#' → logprob: -12.438493728637695

Token 13: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.2597622573375702
    2. 'au' → logprob: -1.7597622871398926
    3. 'a' → logprob: -2.8847622871398926
    4. 'а' → logprob: -8.384761810302734
    5. ' a' → logprob: -9.759761810302734
    6. ' aux' → logprob: -10.009761810302734
    7. 'aus' → logprob: -10.134761810302734
    8. '#' → logprob: -10.134761810302734
    9. 'á' → logprob: -10.384761810302734
    10. '\' → logprob: -10.509761810302734

Token 14: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8924896717071533
    2. ':' → logprob: -2.1424896717071533
    3. '_' → logprob: -2.1424896717071533
    4. '[' → logprob: -2.3924896717071533
    5. '.' → logprob: -2.7674896717071533
    6. ' :' → logprob: -2.8924896717071533
    7. '```' → logprob: -3.0174896717071533
    8. ',' → logprob: -3.8924896717071533
    9. '`' → logprob: -4.017489433288574
    10. '\' → logprob: -4.142489433288574

Token 15: '5' (ID: 20)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18163427710533142
    2. ',' → logprob: -3.1816341876983643
    3. '.' → logprob: -3.3066341876983643
    4. '_' → logprob: -3.6816341876983643
    5. ' :' → logprob: -4.181634426116943
    6. ':' → logprob: -4.181634426116943
    7. ' ,' → logprob: -4.931634426116943
    8. ' ' → logprob: -5.181634426116943
    9. '[' → logprob: -5.431634426116943
    10. ' =' → logprob: -5.931634426116943

Token 16: ' jours' (ID: 21323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5634732842445374
    2. '0' → logprob: -1.6884732246398926
    3. '_' → logprob: -2.3134732246398926
    4. '-' → logprob: -2.4384732246398926
    5. ''' → logprob: -3.6884732246398926
    6. 's' → logprob: -4.563473224639893
    7. ':' → logprob: -5.438473224639893
    8. ',' → logprob: -5.813473224639893
    9. '.' → logprob: -5.813473224639893
    10. 'h' → logprob: -6.438473224639893

Token 17: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6532692909240723
    2. '.' → logprob: -1.7782692909240723
    3. 's' → logprob: -2.1532692909240723
    4. ' =' → logprob: -3.1532692909240723
    5. ' ' → logprob: -3.1532692909240723
    6. ' de' → logprob: -3.2782692909240723
    7. '_' → logprob: -4.028269290924072
    8. '=' → logprob: -4.778269290924072
    9. ' ,' → logprob: -4.778269290924072
    10. '\' → logprob: -5.028269290924072

Token 18: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5035568475723267
    2. '*' → logprob: -3.128556728363037
    3. ',' → logprob: -3.128556728363037
    4. 'jours' → logprob: -3.253556728363037
    5. '```' → logprob: -3.253556728363037
    6. 's' → logprob: -3.378556728363037
    7. '\' → logprob: -3.628556728363037
    8. ' =' → logprob: -3.753556728363037
    9. ' *' → logprob: -4.253556728363037
    10. '7' → logprob: -4.253556728363037

Token 19: ' cours' (ID: 10138)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3940829038619995
    2. '_' → logprob: -1.3940829038619995
    3. '#' → logprob: -1.7690829038619995
    4. ',' → logprob: -2.894083023071289
    5. 's' → logprob: -3.019083023071289
    6. ' ' → logprob: -3.019083023071289
    7. ''' → logprob: -3.144083023071289
    8. '\' → logprob: -3.269083023071289
    9. '.' → logprob: -3.644083023071289
    10. '```' → logprob: -4.019083023071289

Token 20: '/j' (ID: 9450)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1444957256317139
    2. ',' → logprob: -1.3944957256317139
    3. '[' → logprob: -2.019495725631714
    4. '_' → logprob: -2.019495725631714
    5. '.' → logprob: -3.519495725631714
    6. ':' → logprob: -3.519495725631714
    7. '```' → logprob: -3.894495725631714
    8. ' ' → logprob: -4.019495964050293
    9. '#' → logprob: -4.269495964050293
    10. ''' → logprob: -4.769495964050293

Token 21: 'our' (ID: 401)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0928492322564125
    2. ',' → logprob: -3.2178492546081543
    3. ' ' → logprob: -4.467849254608154
    4. ':' → logprob: -4.842849254608154
    5. ' =' → logprob: -5.342849254608154
    6. '.' → logprob: -5.467849254608154
    7. '=' → logprob: -6.092849254608154
    8. '_' → logprob: -6.342849254608154
    9. ' s' → logprob: -6.467849254608154
    10. '#' → logprob: -6.467849254608154

Token 22: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7778164148330688
    2. 's' → logprob: -1.4028164148330688
    3. ':' → logprob: -2.4028162956237793
    4. '.' → logprob: -2.4028162956237793
    5. '```' → logprob: -3.4028162956237793
    6. '[' → logprob: -4.277816295623779
    7. '#' → logprob: -4.277816295623779
    8. ' ' → logprob: -5.027816295623779
    9. ''' → logprob: -5.027816295623779
    10. ' =' → logprob: -5.152816295623779

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20723578333854675
    2. ' cré' → logprob: -3.082235813140869
    3. '20' → logprob: -3.207235813140869
    4. '5' → logprob: -3.707235813140869
    5. 'cré' → logprob: -3.832235813140869
    6. '25' → logprob: -3.957235813140869
    7. 'jours' → logprob: -4.832235813140869
    8. '```' → logprob: -5.832235813140869
    9. 'cr' → logprob: -5.957235813140869
    10. ' N' → logprob: -6.332235813140869

Token 24: '5' (ID: 20)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.7204216122627258
    2. ' cré' → logprob: -0.9704216122627258
    3. ' ' → logprob: -3.220421552658081
    4. '20' → logprob: -3.970421552658081
    5. '5' → logprob: -4.09542179107666
    6. '25' → logprob: -4.59542179107666
    7. 'cr' → logprob: -4.59542179107666
    8. 'jours' → logprob: -4.97042179107666
    9. 'slots' → logprob: -5.59542179107666
    10. 'cours' → logprob: -5.72042179107666

Token 25: '*N' (ID: 107360)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15583454072475433
    2. '*' → logprob: -2.280834436416626
    3. '<|end|>' → logprob: -3.280834436416626
    4. ')' → logprob: -6.780834674835205
    5. ',' → logprob: -7.655834674835205
    6. ' ' → logprob: -7.905834674835205
    7. '<|end|>' → logprob: -8.030834197998047
    8. '0' → logprob: -8.030834197998047
    9. '```' → logprob: -8.405834197998047
    10. ' ```' → logprob: -8.780834197998047

Token 26: ' maximum' (ID: 10562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2678325176239014
    2. ',' → logprob: -1.7678325176239014
    3. '```' → logprob: -1.8928325176239014
    4. '.' → logprob: -2.2678325176239014
    5. ':' → logprob: -2.7678325176239014
    6. 's' → logprob: -2.8928325176239014
    7. '#' → logprob: -2.8928325176239014
    8. '\' → logprob: -3.5178325176239014
    9. '[' → logprob: -3.8928325176239014
    10. ''' → logprob: -4.0178327560424805

Token 27: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0876200199127197
    2. ',' → logprob: -1.5876200199127197
    3. '_' → logprob: -2.2126200199127197
    4. 's' → logprob: -2.7126200199127197
    5. '.' → logprob: -2.8376200199127197
    6. '[' → logprob: -2.9626200199127197
    7. ' ' → logprob: -3.2126200199127197
    8. ':' → logprob: -4.087619781494141
    9. '[
' → logprob: -4.087619781494141
    10. '\' → logprob: -4.212619781494141

Token 28: '40' (ID: 1723)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0388751029968262
    2. '.' → logprob: -1.4138751029968262
    3. '#' → logprob: -2.038875102996826
    4. 's' → logprob: -2.163875102996826
    5. ':' → logprob: -3.038875102996826
    6. '\' → logprob: -3.538875102996826
    7. ' ' → logprob: -4.163875102996826
    8. '[' → logprob: -4.288875102996826
    9. '```' → logprob: -4.538875102996826
    10. '_' → logprob: -5.288875102996826

Token 29: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9326220750808716
    2. '#' → logprob: -1.8076220750808716
    3. '.' → logprob: -2.057621955871582
    4. 's' → logprob: -2.432621955871582
    5. ',' → logprob: -2.557621955871582
    6. ':' → logprob: -3.307621955871582
    7. '```' → logprob: -3.682621955871582
    8. '_' → logprob: -4.182621955871582
    9. ' ' → logprob: -4.307621955871582
    10. ' ,' → logprob: -4.682621955871582

Token 30: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4307093620300293
    2. ',' → logprob: -1.5557093620300293
    3. '#' → logprob: -2.1807093620300293
    4. '_' → logprob: -2.4307093620300293
    5. 's' → logprob: -2.4307093620300293
    6. '.' → logprob: -2.9307093620300293
    7. '\' → logprob: -2.9307093620300293
    8. ':' → logprob: -3.8057093620300293
    9. ''' → logprob: -3.9307093620300293
    10. '```' → logprob: -4.055709362030029

Token 31: ' Chaque' (ID: 94758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5086176991462708
    2. ' #' → logprob: -1.758617639541626
    3. '#' → logprob: -2.508617639541626
    4. ' ```' → logprob: -3.633617639541626
    5. ' cré' → logprob: -4.383617877960205
    6. 'def' → logprob: -4.883617877960205
    7. 'cr' → logprob: -4.883617877960205
    8. 'from' → logprob: -5.008617877960205
    9. 'max' → logprob: -5.258617877960205
    10. 's' → logprob: -5.508617877960205

Token 32: ' cours' (ID: 10138)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.5862570405006409
    2. ' cré' → logprob: -0.9612570405006409
    3. 'cr' → logprob: -3.586256980895996
    4. ' cours' → logprob: -4.586256980895996
    5. 'cours' → logprob: -5.211256980895996
    6. ' jour' → logprob: -5.961256980895996
    7. ' #' → logprob: -6.461256980895996
    8. '#' → logprob: -6.461256980895996
    9. 'jour' → logprob: -6.461256980895996
    10. ' hora' → logprob: -6.836256980895996

Token 33: ' occ' (ID: 4138)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7567276954650879
    2. ' est' → logprob: -1.506727695465088
    3. ' ' → logprob: -1.881727695465088
    4. 'a' → logprob: -3.256727695465088
    5. ' peut' → logprob: -3.256727695465088
    6. ' =' → logprob: -3.756727695465088
    7. 'est' → logprob: -4.381727695465088
    8. '#' → logprob: -5.006727695465088
    9. 's' → logprob: -5.256727695465088
    10. ' possède' → logprob: -5.256727695465088

Token 34: 'upe' (ID: 55986)
  Prédit: 'upe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upe' → logprob: -0.00031270162435248494
    2. 'uper' → logprob: -8.875312805175781
    3. 'up' → logprob: -9.500312805175781
    4. 'u' → logprob: -10.375312805175781
    5. 'uppe' → logprob: -10.625312805175781
    6. 'cupe' → logprob: -11.125312805175781
    7. 'ur' → logprob: -12.125312805175781
    8. 'upa' → logprob: -12.375312805175781
    9. 'ure' → logprob: -12.375312805175781
    10. '```' → logprob: -12.625312805175781

Token 35: ' plusieurs' (ID: 20875)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8983364105224609
    2. ' une' → logprob: -1.398336410522461
    3. ' ' → logprob: -2.273336410522461
    4. 'un' → logprob: -2.273336410522461
    5. 'une' → logprob: -3.273336410522461
    6. ' au' → logprob: -3.523336410522461
    7. ' exactement' → logprob: -3.523336410522461
    8. 'au' → logprob: -3.773336410522461
    9. '1' → logprob: -4.773336410522461
    10. 'exact' → logprob: -5.523336410522461

Token 36: ' cré' (ID: 12201)
  Prédit: ' cré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cré' → logprob: -0.20333056151866913
    2. 'cré' → logprob: -2.3283305168151855
    3. ' ' → logprob: -2.8283305168151855
    4. 'cr' → logprob: -4.8283305168151855
    5. ' lignes' → logprob: -5.2033305168151855
    6. 'c' → logprob: -5.7033305168151855
    7. ' c' → logprob: -6.0783305168151855
    8. ' plages' → logprob: -6.3283305168151855
    9. ' espaces' → logprob: -6.4533305168151855
    10. ' ' → logprob: -7.7033305168151855

Token 37: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.05089987441897392
    2. 'neau' → logprob: -3.8008999824523926
    3. 'aux' → logprob: -3.9258999824523926
    4. 'n' → logprob: -5.925899982452393
    5. '­ne' → logprob: -6.050899982452393
    6. '#' → logprob: -7.175899982452393
    7. 'au' → logprob: -7.550899982452393
    8. '_ne' → logprob: -7.675899982452393
    9. 'a' → logprob: -8.425899505615234
    10. '```' → logprob: -8.925899505615234

Token 38: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.018230600282549858
    2. 'au' → logprob: -4.018230438232422
    3. 'a' → logprob: -10.768230438232422
    4. '#' → logprob: -11.018230438232422
    5. '```' → logprob: -11.518230438232422
    6. 'aus' → logprob: -13.143230438232422
    7. '<' → logprob: -13.268230438232422
    8. 'ау' → logprob: -13.393230438232422
    9. '

' → logprob: -13.518230438232422
    10. '\' → logprob: -13.518230438232422

Token 39: ' cons' (ID: 1473)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3647157549858093
    2. '.' → logprob: -2.364715814590454
    3. ',' → logprob: -2.489715814590454
    4. ' ' → logprob: -3.489715814590454
    5. '\' → logprob: -3.739715814590454
    6. '_' → logprob: -3.864715814590454
    7. 's' → logprob: -4.114715576171875
    8. ':' → logprob: -4.614715576171875
    9. '\n' → logprob: -4.989715576171875
    10. 'n' → logprob: -5.614715576171875

Token 40: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0214206762611866
    2. 'ecut' → logprob: -4.271420478820801
    3. 'é' → logprob: -5.771420478820801
    4. 'ec' → logprob: -6.271420478820801
    5. 'éc' → logprob: -7.021420478820801
    6. '```' → logprob: -7.771420478820801
    7. 'ect' → logprob: -8.2714204788208
    8. 'e' → logprob: -8.2714204788208
    9. '#' → logprob: -9.2714204788208
    10. 't' → logprob: -10.1464204788208

Token 41: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.8452727198600769
    2. 'uts' → logprob: -0.9702727198600769
    3. 'u' → logprob: -2.4702727794647217
    4. 's' → logprob: -3.0952727794647217
    5. 'ifs' → logprob: -3.8452727794647217
    6. 't' → logprob: -4.220272541046143
    7. '#' → logprob: -4.720272541046143
    8. 'if' → logprob: -5.345272541046143
    9. 'utive' → logprob: -6.220272541046143
    10. 'ents' → logprob: -6.220272541046143

Token 42: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36751002073287964
    2. ' ' → logprob: -2.6175100803375244
    3. ',' → logprob: -2.7425100803375244
    4. '.' → logprob: -3.1175100803375244
    5. '\' → logprob: -3.6175100803375244
    6. ':' → logprob: -3.8675100803375244
    7. '_' → logprob: -4.242509841918945
    8. 'd' → logprob: -4.492509841918945
    9. '```' → logprob: -4.867509841918945
    10. 'c' → logprob: -4.992509841918945

Token 43: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3246233463287354
    2. 'la' → logprob: -1.9496233463287354
    3. 'l' → logprob: -2.0746233463287354
    4. 'le' → logprob: -2.0746233463287354
    5. ' le' → logprob: -2.3246233463287354
    6. ' une' → logprob: -2.4496233463287354
    7. ' l' → logprob: -2.6996233463287354
    8. ' un' → logprob: -3.1996233463287354
    9. 'une' → logprob: -3.6996233463287354
    10. 'un' → logprob: -5.074623107910156

Token 44: ' jour' (ID: 8379)
  Prédit: 'emploi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emploi' → logprob: -0.916107177734375
    2. 'cré' → logprob: -1.791107177734375
    3. ' emploi' → logprob: -1.916107177734375
    4. ' tableau' → logprob: -2.666107177734375
    5. 'table' → logprob: -3.291107177734375
    6. ' cré' → logprob: -3.541107177734375
    7. 'emplo' → logprob: -3.541107177734375
    8. 'pl' → logprob: -4.166107177734375
    9. ' ' → logprob: -4.166107177734375
    10. 'm' → logprob: -4.416107177734375

Token 45: ' donné' (ID: 52079)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13767452538013458
    2. ' ' → logprob: -3.387674570083618
    3. '\' → logprob: -3.887674570083618
    4. ',' → logprob: -4.012674331665039
    5. '_' → logprob: -4.262674331665039
    6. '.' → logprob: -4.387674331665039
    7. '```' → logprob: -5.387674331665039
    8. 'n' → logprob: -5.512674331665039
    9. '-' → logprob: -5.887674331665039
    10. ':' → logprob: -6.012674331665039

Token 46: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2356405407190323
    2. ' ' → logprob: -2.610640525817871
    3. '_' → logprob: -3.360640525817871
    4. '\' → logprob: -3.610640525817871
    5. ',' → logprob: -4.110640525817871
    6. '.' → logprob: -4.360640525817871
    7. ':' → logprob: -4.610640525817871
    8. '```' → logprob: -4.985640525817871
    9. '-' → logprob: -5.110640525817871
    10. '[' → logprob: -5.735640525817871

Token 47: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21015387773513794
    2. '_' → logprob: -2.460153818130493
    3. ':' → logprob: -3.585153818130493
    4. 'd' → logprob: -3.835153818130493
    5. '\' → logprob: -4.210154056549072
    6. ' ' → logprob: -4.585154056549072
    7. ',' → logprob: -4.960154056549072
    8. '```' → logprob: -5.335154056549072
    9. '.' → logprob: -6.085154056549072
    10. '[' → logprob: -6.085154056549072

Token 48: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9758859276771545
    2. 'd' → logprob: -1.2258858680725098
    3. 'def' → logprob: -2.3508858680725098
    4. 'c' → logprob: -2.9758858680725098
    5. ' ' → logprob: -3.3508858680725098
    6. '\' → logprob: -3.4758858680725098
    7. 'import' → logprob: -3.7258858680725098
    8. '_' → logprob: -3.8508858680725098
    9. 'C' → logprob: -4.22588586807251
    10. '```' → logprob: -4.35088586807251

Token 49: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.4122250080108643
    2. '#' → logprob: -1.5372250080108643
    3. 's' → logprob: -1.6622250080108643
    4. ' #' → logprob: -2.5372250080108643
    5. ' ' → logprob: -2.6622250080108643
    6. 'mod' → logprob: -3.6622250080108643
    7. ' nombre' → logprob: -4.162224769592285
    8. 'cré' → logprob: -4.162224769592285
    9. ' cré' → logprob: -4.412224769592285
    10. '_' → logprob: -4.912224769592285

Token 50: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6393623352050781
    2. ' d' → logprob: -1.5143623352050781
    3. ' de' → logprob: -1.8893623352050781
    4. '#' → logprob: -4.139362335205078
    5. ' est' → logprob: -4.139362335205078
    6. 'd' → logprob: -4.389362335205078
    7. 'est' → logprob: -4.514362335205078
    8. ' des' → logprob: -4.639362335205078
    9. 's' → logprob: -5.264362335205078
    10. 'de' → logprob: -5.389362335205078

Token 51: ' une' (ID: 2463)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3138448894023895
    2. 'un' → logprob: -2.938844919204712
    3. ' de' → logprob: -3.188844919204712
    4. 'd' → logprob: -3.438844919204712
    5. 'à' → logprob: -3.938844919204712
    6. 'l' → logprob: -4.313844680786133
    7. 'la' → logprob: -4.688844680786133
    8. 'une' → logprob: -4.688844680786133
    9. 'rés' → logprob: -4.688844680786133
    10. 'le' → logprob: -4.813844680786133

Token 52: ' sélection' (ID: 43472)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -1.087129831314087
    2. ' combin' → logprob: -1.712129831314087
    3. ' affect' → logprob: -1.962129831314087
    4. ' contr' → logprob: -3.587129831314087
    5. ' combinaison' → logprob: -3.712129831314087
    6. ' optimisation' → logprob: -3.837129831314087
    7. 'class' → logprob: -3.837129831314087
    8. '#' → logprob: -3.837129831314087
    9. 'pro' → logprob: -3.962129831314087
    10. ' problém' → logprob: -4.087129592895508

Token 53: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16502755880355835
    2. ' d' → logprob: -3.165027618408203
    3. ' de' → logprob: -3.540027618408203
    4. '_' → logprob: -3.540027618408203
    5. ' des' → logprob: -3.665027618408203
    6. '<|end|>' → logprob: -4.040027618408203
    7. '#' → logprob: -6.290027618408203
    8. ' #' → logprob: -6.790027618408203
    9. 'd' → logprob: -6.790027618408203
    10. 's' → logprob: -7.540027618408203

Token 54: ' cours' (ID: 10138)
  Prédit: ' cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cré' → logprob: -0.3062496781349182
    2. 'cré' → logprob: -1.6812496185302734
    3. ' ' → logprob: -3.5562496185302734
    4. 's' → logprob: -4.556249618530273
    5. ' cours' → logprob: -4.556249618530273
    6. ' l' → logprob: -5.056249618530273
    7. ' sous' → logprob: -5.431249618530273
    8. 'cr' → logprob: -5.431249618530273
    9. 'l' → logprob: -5.931249618530273
    10. ' plages' → logprob: -6.056249618530273

Token 55: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0164533853530884
    2. '.' → logprob: -1.2664533853530884
    3. '#' → logprob: -2.141453266143799
    4. ',' → logprob: -2.266453266143799
    5. ' ' → logprob: -2.891453266143799
    6. '[' → logprob: -3.891453266143799
    7. ':' → logprob: -4.141453266143799
    8. 's' → logprob: -4.391453266143799
    9. '\' → logprob: -5.141453266143799
    10. 'import' → logprob: -5.391453266143799

Token 56: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37934941053390503
    2. ' à' → logprob: -2.50434947013855
    3. 'à' → logprob: -2.87934947013855
    4. ' )' → logprob: -3.00434947013855
    5. 's' → logprob: -3.87934947013855
    6. ',' → logprob: -3.87934947013855
    7. ' ' → logprob: -4.379349231719971
    8. 'subset' → logprob: -4.504349231719971
    9. 'compatible' → logprob: -4.879349231719971
    10. ' subset' → logprob: -5.129349231719971

Token 57: ' L' (ID: 451)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.08674218505620956
    2. 'im' → logprob: -3.3367421627044678
    3. ')' → logprob: -4.086742401123047
    4. ' ' → logprob: -4.586742401123047
    5. 'um' → logprob: -5.836742401123047
    6. ' =' → logprob: -6.211742401123047
    7. 'aux' → logprob: -6.211742401123047
    8. ' à' → logprob: -6.461742401123047
    9. '   ' → logprob: -6.586742401123047
    10. '=' → logprob: -6.711742401123047

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4606095254421234
    2. ' )' → logprob: -2.7106094360351562
    3. '=' → logprob: -3.2106094360351562
    4. ',' → logprob: -3.3356094360351562
    5. 'ecture' → logprob: -3.4606094360351562
    6. 'iste' → logprob: -3.5856094360351562
    7. 'istes' → logprob: -4.085609436035156
    8. 'ect' → logprob: -4.335609436035156
    9. 'e' → logprob: -4.460609436035156
    10. ' =' → logprob: -4.460609436035156

Token 59: ' sans' (ID: 9828)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7141032814979553
    2. ',' → logprob: -1.5891032218933105
    3. ' ' → logprob: -1.8391032218933105
    4. '.' → logprob: -3.2141032218933105
    5. '_' → logprob: -3.9641032218933105
    6. ':' → logprob: -3.9641032218933105
    7. '=' → logprob: -4.4641032218933105
    8. 'import' → logprob: -4.5891032218933105
    9. '\' → logprob: -5.2141032218933105
    10. '[' → logprob: -5.2141032218933105

Token 60: ' chev' (ID: 127415)
  Prédit: ' conflit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflit' → logprob: -0.8360517621040344
    2. ' chev' → logprob: -1.9610517024993896
    3. 'con' → logprob: -2.0860517024993896
    4. ' conflits' → logprob: -2.2110517024993896
    5. ' overlap' → logprob: -2.8360517024993896
    6. ' dépasse' → logprob: -3.8360517024993896
    7. 'conf' → logprob: -4.586051940917969
    8. 'over' → logprob: -4.586051940917969
    9. 'che' → logprob: -4.836051940917969
    10. '```' → logprob: -4.961051940917969

Token 61: 'auche' (ID: 143141)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2151724100112915
    2. 'auche' → logprob: -1.5901724100112915
    3. 'ère' → logprob: -1.9651724100112915
    4. 'èrement' → logprob: -2.215172290802002
    5. 'èche' → logprob: -2.465172290802002
    6. 'è' → logprob: -3.465172290802002
    7. 'èvement' → logprob: -3.840172290802002
    8. 'èr' → logprob: -3.965172290802002
    9. '`' → logprob: -4.340172290802002
    10. 'a' → logprob: -4.465172290802002

Token 62: 'ment' (ID: 508)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10928905010223389
    2. 'r' → logprob: -2.3592891693115234
    3. 'ment' → logprob: -5.234289169311523
    4. '-' → logprob: -6.859289169311523
    5. 'n' → logprob: -7.109289169311523
    6. '_' → logprob: -7.484289169311523
    7. 't' → logprob: -7.984289169311523
    8. 'e' → logprob: -8.734289169311523
    9. 's' → logprob: -8.984289169311523
    10. ',' → logprob: -9.234289169311523

Token 63: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9610857367515564
    2. '#' → logprob: -1.0860857963562012
    3. ',' → logprob: -2.961085796356201
    4. 'import' → logprob: -3.086085796356201
    5. '_' → logprob: -3.461085796356201
    6. ':' → logprob: -3.836085796356201
    7. 'd' → logprob: -3.961085796356201
    8. '.' → logprob: -3.961085796356201
    9. 'i' → logprob: -4.086085796356201
    10. '```' → logprob: -4.336085796356201

Token 64: ' cré' (ID: 12201)
  Prédit: ' cré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cré' → logprob: -0.2753984034061432
    2. 'cré' → logprob: -1.9003983736038208
    3. 's' → logprob: -3.9003984928131104
    4. ' horaires' → logprob: -4.025398254394531
    5. ' cours' → logprob: -4.775398254394531
    6. ' plages' → logprob: -4.775398254394531
    7. 'cr' → logprob: -4.900398254394531
    8. ' ' → logprob: -5.025398254394531
    9. ' temps' → logprob: -5.400398254394531
    10. ' emplois' → logprob: -5.400398254394531

Token 65: 'ne' (ID: 611)
  Prédit: 'neau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neau' → logprob: -0.6120690703392029
    2. 'ne' → logprob: -1.3620691299438477
    3. 'n' → logprob: -2.1120691299438477
    4. 'né' → logprob: -2.8620691299438477
    5. '#' → logprob: -4.862069129943848
    6. 'aux' → logprob: -5.612069129943848
    7. '­ne' → logprob: -5.987069129943848
    8. 'na' → logprob: -6.112069129943848
    9. 'ná' → logprob: -6.612069129943848
    10. 'a' → logprob: -6.987069129943848

Token 66: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.04881899431347847
    2. 'au' → logprob: -3.298819065093994
    3. 'a' → logprob: -4.798819065093994
    4. 'à' → logprob: -6.673819065093994
    5. 'á' → logprob: -7.798819065093994
    6. 'а' → logprob: -8.548818588256836
    7. '#' → logprob: -8.673818588256836
    8. 'â' → logprob: -9.923818588256836
    9. '^' → logprob: -10.048818588256836
    10. 'ау' → logprob: -10.548818588256836

Token 67: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0059092044830322
    2. ',' → logprob: -1.7559092044830322
    3. '[' → logprob: -1.7559092044830322
    4. '_' → logprob: -2.1309092044830322
    5. ':' → logprob: -2.8809092044830322
    6. ' ' → logprob: -3.8809092044830322
    7. ')' → logprob: -4.005908966064453
    8. '.' → logprob: -4.380908966064453
    9. '=' → logprob: -4.505908966064453
    10. 'a' → logprob: -4.505908966064453

Token 68: ' maxim' (ID: 29045)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15552836656570435
    2. ',' → logprob: -2.6555283069610596
    3. '.' → logprob: -3.0305283069610596
    4. ' ,' → logprob: -4.405528545379639
    5. 's' → logprob: -5.655528545379639
    6. ' =' → logprob: -6.030528545379639
    7. ' :' → logprob: -6.405528545379639
    8. ')' → logprob: -6.780528545379639
    9. ' )' → logprob: -7.155528545379639
    10. ':' → logprob: -7.530528545379639

Token 69: 'isant' (ID: 56111)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.1319301277399063
    2. 'u' → logprob: -2.381930112838745
    3. '#' → logprob: -4.131930351257324
    4. 'a' → logprob: -5.881930351257324
    5. 'al' → logprob: -5.881930351257324
    6. '```' → logprob: -6.256930351257324
    7. 'isant' → logprob: -6.381930351257324
    8. 'iser' → logprob: -7.131930351257324
    9. 'un' → logprob: -7.444430351257324
    10. '   ' → logprob: -7.631930351257324

Token 70: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2236197143793106
    2. ' le' → logprob: -2.3486196994781494
    3. ' l' → logprob: -2.9736196994781494
    4. ' ' → logprob: -3.8486196994781494
    5. ' ' → logprob: -4.5986199378967285
    6. 'le' → logprob: -5.2236199378967285
    7. 'l' → logprob: -5.2236199378967285
    8. 'la' → logprob: -5.9736199378967285
    9. ' leur' → logprob: -6.2236199378967285
    10. '  ' → logprob: -6.4736199378967285

Token 71: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2161781787872314
    2. ' ' → logprob: -1.2161781787872314
    3. ' valeur' → logprob: -2.2161781787872314
    4. ' satisfaction' → logprob: -2.3411781787872314
    5. '_' → logprob: -2.5911781787872314
    6. ' qualité' → logprob: -3.4661781787872314
    7. 'val' → logprob: -4.466177940368652
    8. ' profit' → logprob: -4.591177940368652
    9. ' nombre' → logprob: -4.841177940368652
    10. 'u' → logprob: -4.841177940368652

Token 72: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.092524453997612
    2. ' de' → logprob: -3.092524528503418
    3. ' ' → logprob: -4.092524528503418
    4. ' des' → logprob: -4.717524528503418
    5. '_des' → logprob: -4.842524528503418
    6. ' d' → logprob: -5.592524528503418
    7. ' _' → logprob: -6.342524528503418
    8. 'import' → logprob: -7.342524528503418
    9. 'des' → logprob: -7.717524528503418
    10. '_de' → logprob: -8.092524528503418

Token 73: ' bonheur' (ID: 78970)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4648166000843048
    2. 's' → logprob: -2.7148165702819824
    3. 'u' → logprob: -3.0898165702819824
    4. '_' → logprob: -3.0898165702819824
    5. 'val' → logprob: -3.2148165702819824
    6. ' scores' → logprob: -3.5898165702819824
    7. 'scores' → logprob: -3.7148165702819824
    8. ' points' → logprob: -4.214816570281982
    9. 'points' → logprob: -4.464816570281982
    10. 'p' → logprob: -4.714816570281982

Token 74: ' t' (ID: 260)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43671444058418274
    2. ' ' → logprob: -1.4367144107818604
    3. ',' → logprob: -3.3117144107818604
    4. 's' → logprob: -3.4367144107818604
    5. ' =' → logprob: -4.0617146492004395
    6. '.' → logprob: -4.5617146492004395
    7. '=' → logprob: -5.0617146492004395
    8. ')' → logprob: -5.0617146492004395
    9. '#' → logprob: -5.9367146492004395
    10. '[' → logprob: -6.5617146492004395

Token 75: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8169154524803162
    2. ' ' → logprob: -1.691915512084961
    3. '_' → logprob: -2.441915512084961
    4. 'e' → logprob: -2.691915512084961
    5. 's' → logprob: -2.941915512084961
    6. '=' → logprob: -3.066915512084961
    7. '.' → logprob: -3.566915512084961
    8. 'i' → logprob: -4.441915512084961
    9. ' =' → logprob: -4.691915512084961
    10. ';' → logprob: -4.941915512084961

Token 76: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4870503544807434
    2. '_' → logprob: -2.1120502948760986
    3. ')' → logprob: -2.3620502948760986
    4. '#' → logprob: -2.7370502948760986
    5. ',' → logprob: -3.1120502948760986
    6. 's' → logprob: -4.237050533294678
    7. '=' → logprob: -4.362050533294678
    8. '.' → logprob: -4.862050533294678
    9. '[' → logprob: -4.987050533294678
    10. ']' → logprob: -5.112050533294678

Token 77: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22248244285583496
    2. ',' → logprob: -2.472482442855835
    3. '#' → logprob: -2.972482442855835
    4. '_' → logprob: -3.597482442855835
    5. '=' → logprob: -4.597482681274414
    6. '[' → logprob: -5.222482681274414
    7. ')' → logprob: -5.347482681274414
    8. ' =' → logprob: -5.597482681274414
    9. '.' → logprob: -5.722482681274414
    10. ':' → logprob: -6.097482681274414

Token 78: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2576904594898224
    2. ' ' → logprob: -1.7576904296875
    3. 'import' → logprob: -3.8826904296875
    4. 'from' → logprob: -4.3826904296875
    5. 'i' → logprob: -5.2576904296875
    6. 'd' → logprob: -5.7576904296875
    7. '```' → logprob: -6.0076904296875
    8. 'def' → logprob: -6.6326904296875
    9. 't' → logprob: -6.7576904296875
    10. ' #' → logprob: -6.7576904296875

Token 79: ' code' (ID: 3490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3988097012042999
    2. ' ' → logprob: -1.8988096714019775
    3. '_' → logprob: -2.2738096714019775
    4. ' #' → logprob: -4.273809909820557
    5. '=' → logprob: -4.523809909820557
    6. 'i' → logprob: -4.898809909820557
    7. ' =' → logprob: -5.148809909820557
    8. '-' → logprob: -5.148809909820557
    9. ' a' → logprob: -5.273809909820557
    10. ''' → logprob: -5.273809909820557

Token 80: ' une' (ID: 2463)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6333255767822266
    2. 'import' → logprob: -1.7583255767822266
    3. ':' → logprob: -2.2583255767822266
    4. 'i' → logprob: -2.8833255767822266
    5. '```' → logprob: -3.2583255767822266
    6. 'd' → logprob: -3.6333255767822266
    7. 'from' → logprob: -4.008325576782227
    8. '_' → logprob: -4.383325576782227
    9. ' ' → logprob: -4.508325576782227
    10. ' :' → logprob: -5.258325576782227

Token 81: ' solution' (ID: 7578)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -1.1625927686691284
    2. 'fonction' → logprob: -1.2875927686691284
    3. ' fonction' → logprob: -2.037592887878418
    4. 'classe' → logprob: -2.912592887878418
    5. 'class' → logprob: -3.162592887878418
    6. ' class' → logprob: -3.287592887878418
    7. 'import' → logprob: -4.037592887878418
    8. 'programm' → logprob: -4.162592887878418
    9. ' classe' → logprob: -4.412592887878418
    10. 'program' → logprob: -4.537592887878418

Token 82: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09030941128730774
    2. 'import' → logprob: -3.3403093814849854
    3. 'd' → logprob: -4.4653096199035645
    4. ':' → logprob: -4.4653096199035645
    5. '```' → logprob: -4.8403096199035645
    6. 'i' → logprob: -5.0903096199035645
    7. '-' → logprob: -5.4653096199035645
    8. 'n' → logprob: -5.8403096199035645
    9. '_' → logprob: -6.4653096199035645
    10. ' 
' → logprob: -7.4653096199035645

Token 83: ' programmation' (ID: 166376)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4796314239501953
    2. ' programmation' → logprob: -1.6046314239501953
    3. 'P' → logprob: -2.6046314239501953
    4. 'CP' → logprob: -2.7296314239501953
    5. '```' → logprob: -2.7296314239501953
    6. 'programm' → logprob: -2.8546314239501953
    7. 'ort' → logprob: -3.4796314239501953
    8. 'un' → logprob: -3.6046314239501953
    9. 'la' → logprob: -3.7296314239501953
    10. 'z' → logprob: -3.8546314239501953

Token 84: ' dynamique' (ID: 98708)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014133068732917309
    2. ' dynamic' → logprob: -5.139132976531982
    3. ' dynamique' → logprob: -5.389132976531982
    4. '_dynamic' → logprob: -6.139132976531982
    5. 'dynamic' → logprob: -8.13913345336914
    6. ' ' → logprob: -8.26413345336914
    7. '-' → logprob: -9.01413345336914
    8. '_dyn' → logprob: -9.13913345336914
    9. 'n' → logprob: -9.38913345336914
    10. 'd' → logprob: -9.38913345336914

Token 85: ' par' (ID: 686)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23716501891613007
    2. 'd' → logprob: -2.3621649742126465
    3. ':' → logprob: -3.3621649742126465
    4. 'import' → logprob: -3.6121649742126465
    5. 'i' → logprob: -4.3621649742126465
    6. 'def' → logprob: -4.4871649742126465
    7. 'n' → logprob: -4.7371649742126465
    8. '\' → logprob: -5.4871649742126465
    9. '```' → logprob: -5.6121649742126465
    10. '_' → logprob: -5.7371649742126465

Token 86: ' masque' (ID: 128511)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -1.2013838291168213
    2. ' jour' → logprob: -2.0763838291168213
    3. 'jour' → logprob: -2.0763838291168213
    4. 'r' → logprob: -2.7013838291168213
    5. 'cours' → logprob: -2.8263838291168213
    6. ' jours' → logprob: -2.9513838291168213
    7. 'jours' → logprob: -3.2013838291168213
    8. 'la' → logprob: -3.8263838291168213
    9. ' la' → logprob: -4.326383590698242
    10. 'p' → logprob: -4.451383590698242

Token 87: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.299669086933136
    2. '#' → logprob: -1.9246690273284912
    3. '_' → logprob: -3.174669027328491
    4. ',' → logprob: -3.674669027328491
    5. ':' → logprob: -4.54966926574707
    6. '[' → logprob: -4.67466926574707
    7. ')' → logprob: -5.42466926574707
    8. 'import' → logprob: -5.92466926574707
    9. '.' → logprob: -6.04966926574707
    10. 'm' → logprob: -6.17466926574707

Token 88: ''' (ID: 6)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.460732638835907
    2. 'e' → logprob: -1.8357326984405518
    3. ''ensemble' → logprob: -2.4607326984405518
    4. 'i' → logprob: -3.0857326984405518
    5. ''' → logprob: -3.8357326984405518
    6. ''é' → logprob: -5.085732460021973
    7. 'u' → logprob: -5.460732460021973
    8. 'ensemble' → logprob: -5.585732460021973
    9. ''état' → logprob: -5.585732460021973
    10. 'a' → logprob: -5.960732460021973

Token 89: 'occupation' (ID: 99142)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.8917537331581116
    2. 'ensemble' → logprob: -1.1417536735534668
    3. 'ét' → logprob: -1.5167536735534668
    4. 'é' → logprob: -4.766753673553467
    5. 'hor' → logprob: -4.891753673553467
    6. 'hora' → logprob: -5.016753673553467
    7. 'heure' → logprob: -5.141753673553467
    8. '-' → logprob: -5.891753673553467
    9. 'emploi' → logprob: -6.141753673553467
    10. 'cours' → logprob: -6.141753673553467

Token 90: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7547791004180908
    2. '#' → logprob: -1.1297791004180908
    3. '_' → logprob: -2.254779100418091
    4. ',' → logprob: -3.129779100418091
    5. ':' → logprob: -3.754779100418091
    6. 'import' → logprob: -4.629778861999512
    7. '.' → logprob: -5.504778861999512
    8. '```' → logprob: -6.004778861999512
    9. 'def' → logprob: -6.254778861999512
    10. 'i' → logprob: -6.254778861999512

Token 91: ' cré' (ID: 12201)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.4344280958175659
    2. ' cré' → logprob: -1.184428095817566
    3. 'cr' → logprob: -3.4344282150268555
    4. 'c' → logprob: -5.1844282150268555
    5. ' ' → logprob: -5.8094282150268555
    6. 'cours' → logprob: -6.1844282150268555
    7. 's' → logprob: -7.1844282150268555
    8. 'jours' → logprob: -8.059428215026855
    9. '#' → logprob: -8.184428215026855
    10. ' cours' → logprob: -8.309428215026855

Token 92: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.3138062357902527
    2. 'neau' → logprob: -1.4388062953948975
    3. 'aux' → logprob: -4.313806056976318
    4. 'né' → logprob: -4.938806056976318
    5. 'n' → logprob: -5.688806056976318
    6. '#' → logprob: -5.938806056976318
    7. '­ne' → logprob: -6.063806056976318
    8. 'au' → logprob: -6.938806056976318
    9. 'a' → logprob: -7.438806056976318
    10. 'na' → logprob: -7.438806056976318

Token 93: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.05133460462093353
    2. 'au' → logprob: -3.0513346195220947
    3. 'a' → logprob: -6.051334381103516
    4. '#' → logprob: -8.801334381103516
    5. 'e' → logprob: -9.426334381103516
    6. '\' → logprob: -10.676334381103516
    7. '_' → logprob: -11.051334381103516
    8. '```' → logprob: -11.051334381103516
    9. 'а' → logprob: -11.426334381103516
    10. 'aus' → logprob: -11.926334381103516

Token 94: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2493521124124527
    2. ':' → logprob: -2.624352216720581
    3. '_' → logprob: -2.999352216720581
    4. 'import' → logprob: -3.374352216720581
    5. ',' → logprob: -3.874352216720581
    6. '```' → logprob: -4.374351978302002
    7. ' ' → logprob: -5.124351978302002
    8. 'i' → logprob: -5.374351978302002
    9. 'd' → logprob: -5.749351978302002
    10. 'n' → logprob: -5.874351978302002

Token 95: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3772922158241272
    2. ' ' → logprob: -1.5022921562194824
    3. 'import' → logprob: -3.3772921562194824
    4. '```' → logprob: -4.502292156219482
    5. ',' → logprob: -4.752292156219482
    6. '[' → logprob: -5.377292156219482
    7. ' 
' → logprob: -5.377292156219482
    8. 'i' → logprob: -5.502292156219482
    9. ':' → logprob: -5.502292156219482
    10. 'n' → logprob: -5.752292156219482

Token 96: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2307799905538559
    2. 'i' → logprob: -2.3557798862457275
    3. 'import' → logprob: -2.8557798862457275
    4. 'd' → logprob: -4.230780124664307
    5. '\' → logprob: -4.980780124664307
    6. 'n' → logprob: -5.230780124664307
    7. 'from' → logprob: -5.355780124664307
    8. '```' → logprob: -5.480780124664307
    9. ' 
' → logprob: -5.980780124664307
    10. '
' → logprob: -6.230780124664307

Token 97: ' cours' (ID: 10138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7434941530227661
    2. ' cré' → logprob: -1.3684941530227661
    3. 'cré' → logprob: -2.4934940338134766
    4. '_' → logprob: -2.8684940338134766
    5. ' jour' → logprob: -3.1184940338134766
    6. ' cours' → logprob: -3.4934940338134766
    7. 'cours' → logprob: -4.368494033813477
    8. 'cr' → logprob: -5.368494033813477
    9. ' #' → logprob: -5.743494033813477
    10. ' c' → logprob: -5.743494033813477

Token 98: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9160636067390442
    2. ' =' → logprob: -1.2910635471343994
    3. '_' → logprob: -2.1660635471343994
    4. ' ' → logprob: -2.7910635471343994
    5. ' possède' → logprob: -3.1660635471343994
    6. 's' → logprob: -3.6660635471343994
    7. 'a' → logprob: -3.9160635471343994
    8. ' est' → logprob: -4.6660637855529785
    9. ' ,' → logprob: -5.2910637855529785
    10. ' ' → logprob: -5.6660637855529785

Token 99: ' représent' (ID: 42664)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.1859679222106934
    2. ' caractér' → logprob: -1.8109679222106934
    3. ' représent' → logprob: -1.8109679222106934
    4. 'car' → logprob: -2.1859679222106934
    5. ' déf' → logprob: -2.5609679222106934
    6. 'un' → logprob: -3.4359679222106934
    7. 're' → logprob: -3.5609679222106934
    8. ' décrit' → logprob: -3.8109679222106934
    9. ' associé' → logprob: -4.060967922210693
    10. ' identifié' → logprob: -4.435967922210693

Token 100: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2664456789934775e-06
    2. 'e' → logprob: -14.000000953674316
    3. 'és' → logprob: -16.000001907348633
    4. '#' → logprob: -16.375001907348633
    5. 'ée' → logprob: -16.625001907348633
    6. 'è' → logprob: -17.000001907348633
    7. ' é' → logprob: -17.250001907348633
    8. 'ê' → logprob: -17.750001907348633
    9. '�' → logprob: -17.875001907348633
    10. ''é' → logprob: -19.250001907348633

Token 101: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3655792772769928
    2. 'par' → logprob: -1.2405792474746704
    3. ' ' → logprob: -4.490579128265381
    4. ' comme' → logprob: -6.740579128265381
    5. 's' → logprob: -7.115579128265381
    6. '_par' → logprob: -7.240579128265381
    7. '	par' → logprob: -7.615579128265381
    8. 'e' → logprob: -7.990579128265381
    9. ' by' → logprob: -7.990579128265381
    10. 'comme' → logprob: -8.115579605102539

Token 102: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.1310301274061203
    2. ' un' → logprob: -2.3810300827026367
    3. 'une' → logprob: -3.7560300827026367
    4. 'son' → logprob: -6.131030082702637
    5. ''un' → logprob: -6.256030082702637
    6. ' une' → logprob: -6.881030082702637
    7. ' son' → logprob: -7.756030082702637
    8. 'l' → logprob: -8.381030082702637
    9. 'sa' → logprob: -8.631030082702637
    10. 'le' → logprob: -9.131030082702637

Token 103: ' masque' (ID: 128511)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.19984638690948486
    2. ' entier' → logprob: -1.8248463869094849
    3. 'e' → logprob: -5.074846267700195
    4. 'ensemble' → logprob: -5.449846267700195
    5. 'int' → logprob: -5.824846267700195
    6. ''ent' → logprob: -6.699846267700195
    7. ' ' → logprob: -7.449846267700195
    8. ' ensemble' → logprob: -7.449846267700195
    9. 'bit' → logprob: -7.824846267700195
    10. 'mask' → logprob: -8.199846267700195

Token 104: ' b' (ID: 287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3666988015174866
    2. ' ' → logprob: -1.3666987419128418
    3. ',' → logprob: -3.991698741912842
    4. '[' → logprob: -4.991698741912842
    5. '<|end|>' → logprob: -5.491698741912842
    6. ')' → logprob: -5.616698741912842
    7. ''' → logprob: -6.241698741912842
    8. ' ,' → logprob: -6.241698741912842
    9. ' =' → logprob: -6.366698741912842
    10. ' de' → logprob: -6.366698741912842

Token 105: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7666500210762024
    2. ''' → logprob: -1.1416499614715576
    3. 'inaire' → logprob: -2.0166499614715576
    4. 'it' → logprob: -3.5166499614715576
    5. 'its' → logprob: -4.766650199890137
    6. '_' → logprob: -4.766650199890137
    7. '1' → logprob: -4.891650199890137
    8. '0' → logprob: -5.266650199890137
    9. 'i' → logprob: -5.516650199890137
    10. '`' → logprob: -6.266650199890137

Token 106: ' indiqu' (ID: 100773)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29853343963623047
    2. ',' → logprob: -2.2985334396362305
    3. '[' → logprob: -3.1735334396362305
    4. '_' → logprob: -3.9235334396362305
    5. '#' → logprob: -4.0485334396362305
    6. ' ,' → logprob: -4.5485334396362305
    7. ' :' → logprob: -4.6735334396362305
    8. ':' → logprob: -4.7985334396362305
    9. '.' → logprob: -4.9235334396362305
    10. '\' → logprob: -5.0485334396362305

Token 107: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -9.877503907773644e-05
    2. 'e' → logprob: -9.375099182128906
    3. '#' → logprob: -12.250099182128906
    4. ' ant' → logprob: -12.750099182128906
    5. 'é' → logprob: -13.125099182128906
    6. 'ent' → logprob: -13.375099182128906
    7. 'a' → logprob: -14.000099182128906
    8. '_ant' → logprob: -14.750099182128906
    9. ''ant' → logprob: -14.875099182128906
    10. '```' → logprob: -15.125099182128906

Token 108: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21654599905014038
    2. ' la' → logprob: -2.216546058654785
    3. ' l' → logprob: -2.966546058654785
    4. 'les' → logprob: -3.841546058654785
    5. 'occup' → logprob: -5.716546058654785
    6. ' ' → logprob: -6.216546058654785
    7. ' quels' → logprob: -6.341546058654785
    8. 's' → logprob: -6.591546058654785
    9. ' quelles' → logprob: -6.716546058654785
    10. 'l' → logprob: -7.841546058654785

Token 109: ' cré' (ID: 12201)
  Prédit: 'cré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cré' → logprob: -0.16712549328804016
    2. ' cré' → logprob: -1.9171254634857178
    3. 'cr' → logprob: -5.042125701904297
    4. ' plages' → logprob: -8.667125701904297
    5. ' jours' → logprob: -10.042125701904297
    6. ' journées' → logprob: -10.042125701904297
    7. ' horaires' → logprob: -10.792125701904297
    8. ' positions' → logprob: -11.292125701904297
    9. ' ' → logprob: -11.417125701904297
    10. ' cours' → logprob: -11.542125701904297

Token 110: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8444157838821411
    2. 'ne' → logprob: -1.4694157838821411
    3. 'neau' → logprob: -1.5944157838821411
    4. 'né' → logprob: -2.3444156646728516
    5. 'aux' → logprob: -3.8444156646728516
    6. 'na' → logprob: -5.094415664672852
    7. 'au' → logprob: -5.344415664672852
    8. 'nés' → logprob: -5.594415664672852
    9. 'ná' → logprob: -6.344415664672852
    10. '#' → logprob: -7.094415664672852

Token 111: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0586409792304039
    2. 'au' → logprob: -3.058640956878662
    3. 'a' → logprob: -4.683640956878662
    4. '#' → logprob: -8.18364143371582
    5. 'а' → logprob: -9.80864143371582
    6. 'à' → logprob: -9.93364143371582
    7. 'e' → logprob: -10.18364143371582
    8. '_' → logprob: -10.43364143371582
    9. '\' → logprob: -10.43364143371582
    10. '\xc2' → logprob: -10.68364143371582

Token 112: ' occup' (ID: 14815)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7128071784973145
    2. ' ' → logprob: -1.8378071784973145
    3. 's' → logprob: -1.9628071784973145
    4. '<|end|>' → logprob: -2.3378071784973145
    5. ' des' → logprob: -3.4628071784973145
    6. ' de' → logprob: -3.9628071784973145
    7. ' d' → logprob: -4.5878071784973145
    8. ',' → logprob: -4.7128071784973145
    9. ' ,' → logprob: -5.0878071784973145
    10. '_s' → logprob: -5.9628071784973145

Token 113: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.009101510047912598
    2. 'é' → logprob: -5.134101390838623
    3. 'ant' → logprob: -5.884101390838623
    4. '#' → logprob: -8.759101867675781
    5. 'es' → logprob: -9.134101867675781
    6. 'e' → logprob: -10.384101867675781
    7. '```' → logprob: -10.509101867675781
    8. 's' → logprob: -10.759101867675781
    9. 'ès' → logprob: -11.634101867675781
    10. '�' → logprob: -12.509101867675781

Token 114: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5145097970962524
    2. ' ' → logprob: -1.5145097970962524
    3. '.' → logprob: -2.764509677886963
    4. '#' → logprob: -3.889509677886963
    5. ':' → logprob: -4.014509677886963
    6. '_' → logprob: -4.389509677886963
    7. '[' → logprob: -4.514509677886963
    8. ' ,' → logprob: -4.514509677886963
    9. '\' → logprob: -5.014509677886963
    10. 's' → logprob: -5.264509677886963

Token 115: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3491438627243042
    2. ' ' → logprob: -1.3491438627243042
    3. '```' → logprob: -1.7241438627243042
    4. '[' → logprob: -2.0991439819335938
    5. ',' → logprob: -2.9741439819335938
    6. '\' → logprob: -3.9741439819335938
    7. 'n' → logprob: -4.099143981933594
    8. ':' → logprob: -4.474143981933594
    9. ' 
' → logprob: -4.974143981933594
    10. ' ```' → logprob: -5.099143981933594

Token 116: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9381574392318726
    2. ' ' → logprob: -1.8131574392318726
    3. ',' → logprob: -2.563157558441162
    4. ':' → logprob: -2.688157558441162
    5. '[' → logprob: -3.063157558441162
    6. '```' → logprob: -3.063157558441162
    7. 'def' → logprob: -3.188157558441162
    8. 'n' → logprob: -3.438157558441162
    9. 'import' → logprob: -3.563157558441162
    10. '\' → logprob: -4.313157558441162

Token 117: ' trie' (ID: 139428)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2737204432487488
    2. '#' → logprob: -2.2737205028533936
    3. ' #' → logprob: -3.7737205028533936
    4. ' continue' → logprob: -3.8987205028533936
    5. ' a' → logprob: -4.2737202644348145
    6. 'n' → logprob: -4.3987202644348145
    7. ' =' → logprob: -4.5237202644348145
    8. '=' → logprob: -4.8987202644348145
    9. '+' → logprob: -5.8987202644348145
    10. 'continue' → logprob: -5.8987202644348145

Token 118: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.31278207898139954
    2. 'les' → logprob: -1.6877820491790771
    3. '()' → logprob: -2.937782049179077
    4. '(' → logprob: -4.562782287597656
    5. 's' → logprob: -5.312782287597656
    6. 'courses' → logprob: -6.062782287597656
    7. '(l' → logprob: -6.187782287597656
    8. '_courses' → logprob: -6.687782287597656
    9. 'cours' → logprob: -6.687782287597656
    10. ' la' → logprob: -7.062782287597656

Token 119: ' cours' (ID: 10138)
  Prédit: ' cours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cours' → logprob: -0.38901209831237793
    2. 'cours' → logprob: -1.139012098312378
    3. 'c' → logprob: -6.764012336730957
    4. '#' → logprob: -8.014012336730957
    5. 'courses' → logprob: -8.514012336730957
    6. ' courses' → logprob: -9.764012336730957
    7. ' listes' → logprob: -9.889012336730957
    8. '```' → logprob: -10.139012336730957
    9. 'Cours' → logprob: -10.264012336730957
    10. 'cour' → logprob: -10.639012336730957

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25551921129226685
    2. '.' → logprob: -3.130519151687622
    3. '\' → logprob: -3.505519151687622
    4. 's' → logprob: -3.880519151687622
    5. 'sorted' → logprob: -4.005519390106201
    6. '[' → logprob: -4.005519390106201
    7. '#' → logprob: -4.130519390106201
    8. ':' → logprob: -4.380519390106201
    9. '\n' → logprob: -4.755519390106201
    10. ',
' → logprob: -5.005519390106201

Token 121: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5164268612861633
    2. ' #' → logprob: -2.3914268016815186
    3. ' par' → logprob: -2.5164268016815186
    4. ' puis' → logprob: -3.1414268016815186
    5. 'sorted' → logprob: -3.2664268016815186
    6. ' sorted' → logprob: -3.6414268016815186
    7. 'par' → logprob: -4.266427040100098
    8. ' les' → logprob: -4.266427040100098
    9. ' key' → logprob: -4.516427040100098
    10. 'dans' → logprob: -4.641427040100098

Token 122: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.40613335371017456
    2. ' on' → logprob: -1.1561334133148193
    3. 'for' → logprob: -4.78113317489624
    4. '#' → logprob: -5.53113317489624
    5. 'dp' → logprob: -6.40613317489624
    6. 'les' → logprob: -7.15613317489624
    7. 'par' → logprob: -7.53113317489624
    8. ' for' → logprob: -7.65613317489624
    9. 'pour' → logprob: -7.65613317489624
    10. 'fait' → logprob: -8.031133651733398

Token 123: ' fait' (ID: 7473)
  Prédit: ' parcours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcours' → logprob: -0.9551577568054199
    2. ' boucle' → logprob: -1.58015775680542
    3. 'for' → logprob: -1.83015775680542
    4. ' for' → logprob: -2.83015775680542
    5. ' iter' → logprob: -3.83015775680542
    6. ' parc' → logprob: -3.95515775680542
    7. 'dp' → logprob: -4.08015775680542
    8. ' ajoute' → logprob: -4.20515775680542
    9. ' filtre' → logprob: -4.58015775680542
    10. ' trie' → logprob: -4.95515775680542

Token 124: ' DP' (ID: 51992)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.29147839546203613
    2. ' un' → logprob: -1.5414783954620361
    3. 'une' → logprob: -4.791478157043457
    4. ' dp' → logprob: -5.041478157043457
    5. ' la' → logprob: -5.166478157043457
    6. ' ' → logprob: -5.166478157043457
    7. 'un' → logprob: -5.416478157043457
    8. 'dp' → logprob: -5.791478157043457
    9. ' l' → logprob: -6.291478157043457
    10. '```' → logprob: -7.291478157043457

Token 125: ' sur' (ID: 1512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9967865943908691
    2. '#' → logprob: -1.1217865943908691
    3. ' ' → logprob: -2.621786594390869
    4. ',' → logprob: -2.996786594390869
    5. '[' → logprob: -2.996786594390869
    6. ':' → logprob: -3.246786594390869
    7. '```' → logprob: -3.871786594390869
    8. '
' → logprob: -4.121786594390869
    9. 'import' → logprob: -4.746786594390869
    10. '.' → logprob: -4.996786594390869

Token 126: ' (' (ID: 350)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1665971428155899
    2. ' le' → logprob: -2.2915971279144287
    3. ' l' → logprob: -3.9165971279144287
    4. ' la' → logprob: -4.166597366333008
    5. 'les' → logprob: -5.291597366333008
    6. ' i' → logprob: -5.916597366333008
    7. ' ' → logprob: -6.291597366333008
    8. 'le' → logprob: -6.291597366333008
    9. ' ' → logprob: -6.416597366333008
    10. ' un' → logprob: -7.416597366333008

Token 127: 'mas' (ID: 4227)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -1.1490578651428223
    2. ' le' → logprob: -1.5240578651428223
    3. 'mask' → logprob: -1.6490578651428223
    4. ' ' → logprob: -2.7740578651428223
    5. ' la' → logprob: -2.8990578651428223
    6. ' ' → logprob: -3.3990578651428223
    7. ' masque' → logprob: -3.3990578651428223
    8. ' l' → logprob: -3.8990578651428223
    9. 'mas' → logprob: -4.149057865142822
    10. ' un' → logprob: -4.899057865142822

Token 128: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0037430718075484037
    2. 'ques' → logprob: -5.7537431716918945
    3. 'e' → logprob: -9.003743171691895
    4. '#' → logprob: -9.378743171691895
    5. 'k' → logprob: -9.503743171691895
    6. 'qu' → logprob: -9.753743171691895
    7. 'q' → logprob: -9.753743171691895
    8. 'aque' → logprob: -10.253743171691895
    9. 'quer' → logprob: -10.753743171691895
    10. '
' → logprob: -10.878743171691895

Token 129: ' occupation' (ID: 54365)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.067994236946106
    2. ',' → logprob: -1.067994236946106
    3. '_' → logprob: -1.442994236946106
    4. ' )' → logprob: -3.4429941177368164
    5. ' ,' → logprob: -4.067994117736816
    6. ',)' → logprob: -4.817994117736816
    7. '_des' → logprob: -5.692994117736816
    8. ' d' → logprob: -5.942994117736816
    9. '_)' → logprob: -6.067994117736816
    10. ' des' → logprob: -6.317994117736816

Token 130: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19882148504257202
    2. ',' → logprob: -2.573821544647217
    3. '_' → logprob: -2.948821544647217
    4. ' )' → logprob: -4.073821544647217
    5. '_des' → logprob: -4.698821544647217
    6. '_)' → logprob: -5.073821544647217
    7. ' des' → logprob: -5.198821544647217
    8. 's' → logprob: -5.198821544647217
    9. 'des' → logprob: -5.573821544647217
    10. ')_' → logprob: -6.573821544647217

Token 131: ' nombre' (ID: 9733)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.938391387462616
    2. 'index' → logprob: -1.4383914470672607
    3. 'indice' → logprob: -1.6883914470672607
    4. ' indice' → logprob: -2.6883914470672607
    5. ' nombre' → logprob: -3.1883914470672607
    6. 'nombre' → logprob: -3.4383914470672607
    7. 'idx' → logprob: -4.813391208648682
    8. 'cours' → logprob: -4.938391208648682
    9. 'i' → logprob: -5.063391208648682
    10. ' idx' → logprob: -5.188391208648682

Token 132: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17943601310253143
    2. ')' → logprob: -2.804435968399048
    3. ' de' → logprob: -3.554435968399048
    4. '_de' → logprob: -3.554435968399048
    5. '_c' → logprob: -4.304436206817627
    6. '_des' → logprob: -4.429436206817627
    7. ' des' → logprob: -5.429436206817627
    8. ' d' → logprob: -5.804436206817627
    9. '_courses' → logprob: -6.054436206817627
    10. ' )' → logprob: -6.304436206817627

Token 133: ' cours' (ID: 10138)
  Prédit: ' cours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cours' → logprob: -0.7124660015106201
    2. 'cours' → logprob: -0.7124660015106201
    3. 'c' → logprob: -4.212466239929199
    4. '_c' → logprob: -6.712466239929199
    5. 's' → logprob: -6.837466239929199
    6. 'sé' → logprob: -7.962466239929199
    7. 'courses' → logprob: -8.0874662399292
    8. ' sélection' → logprob: -8.0874662399292
    9. '_' → logprob: -8.4624662399292
    10. '```' → logprob: -8.7124662399292

Token 134: ' pris' (ID: 17549)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08506985753774643
    2. '_' → logprob: -2.5850698947906494
    3. ' )' → logprob: -6.46006965637207
    4. ',' → logprob: -6.58506965637207
    5. '),' → logprob: -7.58506965637207
    6. 's' → logprob: -7.96006965637207
    7. '_s' → logprob: -8.08506965637207
    8. '_selected' → logprob: -8.08506965637207
    9. ' sélection' → logprob: -8.08506965637207
    10. ')_' → logprob: -8.33506965637207

Token 135: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013768990756943822
    2. ',' → logprob: -7.001377105712891
    3. ' )' → logprob: -8.37637710571289
    4. '_' → logprob: -9.12637710571289
    5. 's' → logprob: -10.62637710571289
    6. '):' → logprob: -10.87637710571289
    7. ' ' → logprob: -11.00137710571289
    8. '),' → logprob: -11.12637710571289
    9. ',)' → logprob: -11.62637710571289
    10. '_)' → logprob: -12.25137710571289

Token 136: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5010166168212891
    2. ',' → logprob: -1.626016616821289
    3. '_' → logprob: -3.001016616821289
    4. ')' → logprob: -3.251016616821289
    5. ' =' → logprob: -3.626016616821289
    6. '=' → logprob: -4.126016616821289
    7. ' 
' → logprob: -4.501016616821289
    8. '#' → logprob: -4.876016616821289
    9. ':' → logprob: -5.001016616821289
    10. '.' → logprob: -5.126016616821289

Token 137: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9765021800994873
    2. '#' → logprob: -2.1015021800994873
    3. ',' → logprob: -2.3515021800994873
    4. ' ,' → logprob: -2.7265021800994873
    5. ' )' → logprob: -3.1015021800994873
    6. ' ' → logprob: -3.1015021800994873
    7. ')' → logprob: -3.2265021800994873
    8. ' #' → logprob: -3.3515021800994873
    9. '=' → logprob: -3.4765021800994873
    10. ' en' → logprob: -4.101502418518066

Token 138: ' essa' (ID: 19417)
  Prédit: ' met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' met' → logprob: -1.656774878501892
    2. ' initialise' → logprob: -2.6567749977111816
    3. ' boucle' → logprob: -2.7817749977111816
    4. 'n' → logprob: -2.9067749977111816
    5. ' va' → logprob: -2.9067749977111816
    6. ' ajoute' → logprob: -3.1567749977111816
    7. ' peut' → logprob: -3.1567749977111816
    8. 'for' → logprob: -3.1567749977111816
    9. ' prend' → logprob: -3.4067749977111816
    10. ' continue' → logprob: -3.4067749977111816

Token 139: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.21313519775867462
    2. 'ye' → logprob: -1.8381352424621582
    3. 'y' → logprob: -3.463135242462158
    4. 'aye' → logprob: -8.088134765625
    5. '\' → logprob: -8.338134765625
    6. 'i' → logprob: -8.588134765625
    7. 'uie' → logprob: -9.463134765625
    8. 'yer' → logprob: -9.588134765625
    9. 'iye' → logprob: -9.713134765625
    10. 'yage' → logprob: -10.213134765625

Token 140: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07640589028596878
    2. ' de' → logprob: -3.0764060020446777
    3. '_' → logprob: -4.576406002044678
    4. '    ' → logprob: -4.826406002044678
    5. ' ' → logprob: -5.201406002044678
    6. 'd' → logprob: -6.576406002044678
    7. 's' → logprob: -7.701406002044678
    8. '  ' → logprob: -7.826406002044678
    9. ' ' → logprob: -8.70140552520752
    10. ' l' → logprob: -8.82640552520752

Token 141: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7137159705162048
    2. 'a' → logprob: -1.5887160301208496
    3. ''aj' → logprob: -1.8387160301208496
    4. ''' → logprob: -2.3387160301208496
    5. ' prendre' → logprob: -4.71371603012085
    6. '_' → logprob: -5.21371603012085
    7. 'es' → logprob: -5.58871603012085
    8. 'n' → logprob: -5.58871603012085
    9. ''a' → logprob: -5.96371603012085
    10. 'o' → logprob: -5.96371603012085

Token 142: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.013013393618166447
    2. 'oute' → logprob: -4.6380133628845215
    3. 'o' → logprob: -7.0130133628845215
    4. 'ou' → logprob: -7.1380133628845215
    5. '#' → logprob: -8.51301383972168
    6. 'ouer' → logprob: -8.63801383972168
    7. 'out' → logprob: -8.76301383972168
    8. 'outez' → logprob: -8.88801383972168
    9. '>' → logprob: -9.01301383972168
    10. '_outer' → logprob: -9.13801383972168

Token 143: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.11171714961528778
    2. ' un' → logprob: -3.2367172241210938
    3. ' le' → logprob: -3.3617172241210938
    4. ' les' → logprob: -3.7367172241210938
    5. ' tous' → logprob: -6.236717224121094
    6. ' each' → logprob: -6.486717224121094
    7. ' chacun' → logprob: -6.611717224121094
    8. 'le' → logprob: -7.236717224121094
    9. 'un' → logprob: -7.486717224121094
    10. 'les' → logprob: -8.361717224121094

Token 144: ' cours' (ID: 10138)
  Prédit: ' cours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cours' → logprob: -0.22515195608139038
    2. 'cours' → logprob: -1.8501520156860352
    3. ' nouveau' → logprob: -3.225152015686035
    4. ' nouvel' → logprob: -6.850152015686035
    5. 'c' → logprob: -7.475152015686035
    6. 'nou' → logprob: -7.475152015686035
    7. 'e' → logprob: -7.725152015686035
    8. ' course' → logprob: -7.850152015686035
    9. ' ' → logprob: -7.975152015686035
    10. ' autre' → logprob: -8.475152015686035

Token 145: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0924312099814415
    2. ',' → logprob: -3.5924313068389893
    3. '[' → logprob: -4.21743106842041
    4. ' 
' → logprob: -4.34243106842041
    5. '_' → logprob: -4.34243106842041
    6. '#' → logprob: -4.84243106842041
    7. ')' → logprob: -5.46743106842041
    8. '=' → logprob: -6.71743106842041
    9. ' =' → logprob: -7.34243106842041
    10. ':' → logprob: -7.59243106842041

Token 146: ' ne' (ID: 453)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.59405916929245
    2. 'n' → logprob: -0.84405916929245
    3. ' ne' → logprob: -4.344058990478516
    4. ' n' → logprob: -5.719058990478516
    5. 'n't' → logprob: -6.469058990478516
    6. '```' → logprob: -10.344058990478516
    7. 'né' → logprob: -10.594058990478516
    8. 's' → logprob: -11.469058990478516
    9. 'na' → logprob: -11.719058990478516
    10. '#' → logprob: -11.719058990478516

Token 147: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.8612391352653503
    2. ' chev' → logprob: -0.8612391352653503
    3. ' se' → logprob: -2.611239194869995
    4. 'se' → logprob: -3.236239194869995
    5. ' overlap' → logprob: -4.361238956451416
    6. 'over' → logprob: -4.736238956451416
    7. 's' → logprob: -5.611238956451416
    8. 'c' → logprob: -5.861238956451416
    9. 'co' → logprob: -6.111238956451416
    10. 'a' → logprob: -6.111238956451416

Token 148: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.04310709610581398
    2. 'a' → logprob: -4.168107032775879
    3. 'au' → logprob: -5.543107032775879
    4. 'oure' → logprob: -5.793107032775879
    5. 'uvre' → logprob: -5.793107032775879
    6. 'oue' → logprob: -5.918107032775879
    7. 'ouve' → logprob: -6.418107032775879
    8. 'r' → logprob: -6.418107032775879
    9. 'aule' → logprob: -6.543107032775879
    10. 'ouvre' → logprob: -6.793107032775879

Token 149: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.018459878861904144
    2. 'pas' → logprob: -4.018459796905518
    3. ' aucun' → logprob: -9.268460273742676
    4. 'r' → logprob: -9.518460273742676
    5. 'nt' → logprob: -9.518460273742676
    6. '_pas' → logprob: -10.518460273742676
    7. 'rait' → logprob: -11.768460273742676
    8. ' rien' → logprob: -12.018460273742676
    9. ' plus' → logprob: -12.268460273742676
    10. ' jamais' → logprob: -12.268460273742676

Token 150: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3727567195892334
    2. '_' → logprob: -1.6227567195892334
    3. ',' → logprob: -2.9977567195892334
    4. ')' → logprob: -4.1227569580078125
    5. '[' → logprob: -4.1227569580078125
    6. ' =' → logprob: -4.9977569580078125
    7. '#' → logprob: -5.2477569580078125
    8. '.' → logprob: -5.9977569580078125
    9. '\' → logprob: -6.1227569580078125
    10. '=' → logprob: -6.1227569580078125

Token 151: ' met' (ID: 1421)
  Prédit: ' met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' met' → logprob: -1.5040864944458008
    2. ' continue' → logprob: -1.7540864944458008
    3. ' update' → logprob: -2.004086494445801
    4. ' qui' → logprob: -2.379086494445801
    5. ' n' → logprob: -2.629086494445801
    6. ' pas' → logprob: -2.754086494445801
    7. '#' → logprob: -3.254086494445801
    8. 'update' → logprob: -3.254086494445801
    9. 'continue' → logprob: -3.379086494445801
    10. ' ne' → logprob: -4.379086494445801

Token 152: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0011708177626132965
    2. 'à' → logprob: -7.001170635223389
    3. ' a' → logprob: -9.251171112060547
    4. ' ' → logprob: -10.001171112060547
    5. 'a' → logprob: -10.751171112060547
    6. ''à' → logprob: -11.001171112060547
    7. '#' → logprob: -11.001171112060547
    8. ' ' → logprob: -11.126171112060547
    9. '-à' → logprob: -11.751171112060547
    10. 't' → logprob: -12.001171112060547

Token 153: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0018123905174434185
    2. ' jour' → logprob: -6.37681245803833
    3. 'jou' → logprob: -10.251811981201172
    4. '_j' → logprob: -10.376811981201172
    5. 'jours' → logprob: -11.001811981201172
    6. '```' → logprob: -11.876811981201172
    7. 'Jour' → logprob: -12.126811981201172
    8. ' ' → logprob: -12.626811981201172
    9. 'profit' → logprob: -12.626811981201172
    10. 'jourd' → logprob: -13.251811981201172

Token 154: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12964293360710144
    2. '_' → logprob: -2.504642963409424
    3. ',' → logprob: -4.004642963409424
    4. ' ,' → logprob: -5.754642963409424
    5. '#' → logprob: -6.004642963409424
    6. 's' → logprob: -6.254642963409424
    7. ' 
' → logprob: -6.379642963409424
    8. '\' → logprob: -6.504642963409424
    9. ' =' → logprob: -6.504642963409424
    10. ')' → logprob: -6.754642963409424

Token 155: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09166610985994339
    2. ' dp' → logprob: -2.8416662216186523
    3. 'DP' → logprob: -3.8416662216186523
    4. ' DP' → logprob: -5.466666221618652
    5. 'score' → logprob: -6.216666221618652
    6. ' score' → logprob: -6.966666221618652
    7. ' tableau' → logprob: -7.841666221618652
    8. ' masque' → logprob: -9.716666221618652
    9. '_dp' → logprob: -10.466666221618652
    10. 'max' → logprob: -10.466666221618652

Token 156: ' bonheur' (ID: 78970)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.849713146686554
    2. '#' → logprob: -1.3497130870819092
    3. '
' → logprob: -1.8497130870819092
    4. ',' → logprob: -2.849713087081909
    5. 'import' → logprob: -3.974713087081909
    6. ':' → logprob: -4.099713325500488
    7. '_' → logprob: -4.474713325500488
    8. ' 
' → logprob: -4.599713325500488
    9. 'n' → logprob: -4.849713325500488
    10. '```' → logprob: -4.974713325500488

Token 157: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23777982592582703
    2. '_' → logprob: -2.8627798557281494
    3. '#' → logprob: -3.1127798557281494
    4. '
' → logprob: -3.1127798557281494
    5. '[' → logprob: -4.36277961730957
    6. ')' → logprob: -4.36277961730957
    7. ' 
' → logprob: -4.48777961730957
    8. ':' → logprob: -4.86277961730957
    9. ',' → logprob: -5.61277961730957
    10. ' =' → logprob: -5.98777961730957

Token 158: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0114803314208984
    2. '[' → logprob: -1.3864803314208984
    3. '#' → logprob: -2.5114803314208984
    4. '_' → logprob: -3.0114803314208984
    5. '
' → logprob: -3.0114803314208984
    6. ':' → logprob: -3.0114803314208984
    7. ',' → logprob: -3.1364803314208984
    8. '\' → logprob: -4.136480331420898
    9. '```' → logprob: -4.261480331420898
    10. ' 
' → logprob: -4.386480331420898

Token 159: ' Cette' (ID: 27383)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9646033644676208
    2. 'd' → logprob: -0.9646033644676208
    3. ' ' → logprob: -2.2146034240722656
    4. 'i' → logprob: -3.0896034240722656
    5. 'import' → logprob: -3.3396034240722656
    6. 'n' → logprob: -4.589603424072266
    7. 'from' → logprob: -5.089603424072266
    8. 'def' → logprob: -5.839603424072266
    9. 'f' → logprob: -6.089603424072266
    10. ',' → logprob: -6.089603424072266

Token 160: ' solution' (ID: 7578)
  Prédit: ' partie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partie' → logprob: -1.4847966432571411
    2. ' solution' → logprob: -1.6097966432571411
    3. ' méthode' → logprob: -2.2347965240478516
    4. ' fois' → logprob: -2.2347965240478516
    5. '#' → logprob: -3.1097965240478516
    6. 'part' → logprob: -3.1097965240478516
    7. ' part' → logprob: -3.3597965240478516
    8. ' version' → logprob: -3.6097965240478516
    9. ' suite' → logprob: -3.6097965240478516
    10. ' approche' → logprob: -3.8597965240478516

Token 161: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8900037407875061
    2. ' =' → logprob: -1.7650036811828613
    3. ' :' → logprob: -1.8900036811828613
    4. ' ' → logprob: -2.7650036811828613
    5. '_' → logprob: -3.2650036811828613
    6. 'import' → logprob: -3.5150036811828613
    7. 'def' → logprob: -3.5150036811828613
    8. '.' → logprob: -3.7650036811828613
    9. 's' → logprob: -4.140003681182861
    10. '#' → logprob: -4.640003681182861

Token 162: ' possible' (ID: 4149)
  Prédit: ' optimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -1.0017064809799194
    2. ' efficace' → logprob: -1.8767064809799194
    3. 'ex' → logprob: -2.751706600189209
    4. 'impl' → logprob: -3.126706600189209
    5. ' réalis' → logprob: -3.251706600189209
    6. 'import' → logprob: -3.376706600189209
    7. ' possible' → logprob: -3.751706600189209
    8. ' impl' → logprob: -4.001706600189209
    9. ' en' → logprob: -4.126706600189209
    10. '```' → logprob: -4.251706600189209

Token 163: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8308003544807434
    2. 'import' → logprob: -1.4558002948760986
    3. ',' → logprob: -1.9558002948760986
    4. '.' → logprob: -2.4558002948760986
    5. ' :' → logprob: -3.4558002948760986
    6. ' ' → logprob: -3.9558002948760986
    7. '#' → logprob: -4.080800533294678
    8. '```' → logprob: -4.955800533294678
    9. ' import' → logprob: -5.080800533294678
    10. 'def' → logprob: -5.830800533294678

Token 164: ' au' (ID: 2791)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8078234195709229
    2. ' ' → logprob: -1.5578234195709229
    3. '40' → logprob: -1.5578234195709229
    4. 'le' → logprob: -2.432823419570923
    5. ' la' → logprob: -3.807823419570923
    6. 'la' → logprob: -5.307823181152344
    7. '5' → logprob: -5.432823181152344
    8. ' les' → logprob: -5.682823181152344
    9. ' N' → logprob: -6.057823181152344
    10. 'max' → logprob: -6.557823181152344

Token 165: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.8684777617454529
    2. 'nombre' → logprob: -1.2434778213500977
    3. 'moins' → logprob: -1.7434778213500977
    4. 'max' → logprob: -2.8684778213500977
    5. 'total' → logprob: -4.618477821350098
    6. 'n' → logprob: -4.743477821350098
    7. ' maximum' → logprob: -4.868477821350098
    8. 'c' → logprob: -4.993477821350098
    9. 'plus' → logprob: -5.493477821350098
    10. '40' → logprob: -5.618477821350098

Token 166: ' on' (ID: 402)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.06418999284505844
    2. ' ' → logprob: -2.939189910888672
    3. ' on' → logprob: -5.314189910888672
    4. '5' → logprob: -5.814189910888672
    5. 'on' → logprob: -7.314189910888672
    6. '2' → logprob: -8.814189910888672
    7. 'le' → logprob: -9.189189910888672
    8. ' le' → logprob: -9.439189910888672
    9. 'de' → logprob: -9.939189910888672
    10. ' de' → logprob: -10.439189910888672

Token 167: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3335334062576294
    2. ' a' → logprob: -1.3335334062576294
    3. 'n' → logprob: -5.70853328704834
    4. ' considère' → logprob: -5.70853328704834
    5. ' n' → logprob: -6.20853328704834
    6. ' g' → logprob: -6.33353328704834
    7. ' travaille' → logprob: -6.33353328704834
    8. ' mod' → logprob: -7.08353328704834
    9. 'g' → logprob: -7.33353328704834
    10. ' traite' → logprob: -7.45853328704834

Token 168: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.003785704728215933
    2. ' ' → logprob: -5.628785610198975
    3. '5' → logprob: -9.378786087036133
    4. 'un' → logprob: -10.003786087036133
    5. '45' → logprob: -11.003786087036133
    6. '2' → logprob: -12.128786087036133
    7. '50' → logprob: -12.753786087036133
    8. '4' → logprob: -12.878786087036133
    9. ' un' → logprob: -13.128786087036133
    10. '20' → logprob: -13.128786087036133

Token 169: '5' (ID: 20)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.00014358828775584698
    2. ' ' → logprob: -9.000144004821777
    3. '5' → logprob: -11.625144004821777
    4. '2' → logprob: -12.000144004821777
    5. '20' → logprob: -13.375144004821777
    6. '45' → logprob: -13.875144004821777
    7. '400' → logprob: -14.500144004821777
    8. '4' → logprob: -14.875144004821777
    9. 'un' → logprob: -15.000144004821777
    10. '50' → logprob: -15.375144004821777

Token 170: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.24328000843524933
    2. ' *' → logprob: -1.618280053138733
    3. ' jours' → logprob: -4.368279933929443
    4. '*N' → logprob: -6.118279933929443
    5. 'jours' → logprob: -6.368279933929443
    6. '*j' → logprob: -7.618279933929443
    7. ' journées' → logprob: -9.243280410766602
    8. 'jour' → logprob: -9.618280410766602
    9. ' days' → logprob: -9.618280410766602
    10. ' jour' → logprob: -9.743280410766602

Token 171: '8' (ID: 23)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.2815057337284088
    2. '8' → logprob: -1.4065057039260864
    3. ' ' → logprob: -8.156505584716797
    4. '32' → logprob: -11.281505584716797
    5. 'N' → logprob: -11.531505584716797
    6. '20' → logprob: -11.656505584716797
    7. 'max' → logprob: -11.906505584716797
    8. '10' → logprob: -12.281505584716797
    9. '4' → logprob: -12.656505584716797
    10. '80' → logprob: -12.781505584716797

Token 172: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.809701144695282
    2. ' ' → logprob: -1.8097012042999268
    3. '<|end|>' → logprob: -2.1847012042999268
    4. ' =' → logprob: -3.1847012042999268
    5. ' )' → logprob: -3.3097012042999268
    6. ' cours' → logprob: -3.3097012042999268
    7. '=' → logprob: -3.5597012042999268
    8. 'cours' → logprob: -4.184700965881348
    9. '0' → logprob: -4.309700965881348
    10. '*' → logprob: -4.309700965881348

Token 173: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.00016539888747502118
    2. ' ' → logprob: -8.750164985656738
    3. '4' → logprob: -12.000164985656738
    4. '0' → logprob: -15.250164985656738
    5. '  ' → logprob: -15.500164985656738
    6. '=' → logprob: -16.562665939331055
    7. '```' → logprob: -17.062665939331055
    8. '45' → logprob: -17.625165939331055
    9. ' ' → logprob: -18.250165939331055
    10. '   ' → logprob: -18.375165939331055

Token 174: ' cré' (ID: 12201)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0272776298224926
    2. 'aux' → logprob: -4.27727746963501
    3. 'n' → logprob: -5.27727746963501
    4. 'neau' → logprob: -5.52727746963501
    5. 'né' → logprob: -6.15227746963501
    6. '­ne' → logprob: -7.40227746963501
    7. '#' → logprob: -8.527277946472168
    8. 'na' → logprob: -8.652277946472168
    9. '```' → logprob: -8.652277946472168
    10. 'a' → logprob: -9.277277946472168

Token 176: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0018021537689492106
    2. 'au' → logprob: -6.37680196762085
    3. '#' → logprob: -10.501802444458008
    4. 'ux' → logprob: -11.126802444458008
    5. '```' → logprob: -11.376802444458008
    6. 'a' → logprob: -11.501802444458008
    7. '\' → logprob: -12.751802444458008
    8. '
' → logprob: -12.876802444458008
    9. '``' → logprob: -13.126802444458008
    10. '

' → logprob: -13.376802444458008

Token 177: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0914478302001953
    2. 'import' → logprob: -1.5914478302001953
    3. '#' → logprob: -2.3414478302001953
    4. ',' → logprob: -2.5914478302001953
    5. ' ' → logprob: -2.7164478302001953
    6. 'def' → logprob: -2.8414478302001953
    7. ':' → logprob: -3.2164478302001953
    8. ' 
' → logprob: -3.3414478302001953
    9. '_' → logprob: -4.466447830200195
    10. '

' → logprob: -4.591447830200195

Token 178: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.147618293762207
    2. ' et' → logprob: -2.147618293762207
    3. ' mais' → logprob: -2.272618293762207
    4. '.' → logprob: -2.772618293762207
    5. 'et' → logprob: -2.772618293762207
    6. 'mais' → logprob: -2.772618293762207
    7. ' ce' → logprob: -3.147618293762207
    8. ',' → logprob: -3.272618293762207
    9. ' on' → logprob: -3.772618293762207
    10. ' donc' → logprob: -4.022618293762207

Token 179: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09725897759199142
    2. 'import' → logprob: -3.722259044647217
    3. 'et' → logprob: -3.847259044647217
    4. 'mais' → logprob: -4.472259044647217
    5. 'max' → logprob: -5.097259044647217
    6. 'L' → logprob: -5.347259044647217
    7. 'from' → logprob: -5.347259044647217
    8. 'N' → logprob: -5.972259044647217
    9. ' et' → logprob: -6.347259044647217
    10. 'on' → logprob: -6.472259044647217

Token 180: ' max' (ID: 2999)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13504566252231598
    2. '=' → logprob: -2.1350457668304443
    3. 'max' → logprob: -6.385045528411865
    4. ' <=' → logprob: -6.510045528411865
    5. '#' → logprob: -6.760045528411865
    6. '<=' → logprob: -7.260045528411865
    7. 'im' → logprob: -7.760045528411865
    8. 'est' → logprob: -7.760045528411865
    9. ' ≤' → logprob: -7.760045528411865
    10. ',' → logprob: -8.135046005249023

Token 181: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20329591631889343
    2. '=' → logprob: -1.7032959461212158
    3. ',' → logprob: -7.328295707702637
    4. 'L' → logprob: -8.453295707702637
    5. ' =
' → logprob: -8.828295707702637
    6. 'max' → logprob: -9.328295707702637
    7. '#' → logprob: -9.453295707702637
    8. '_max' → logprob: -9.578295707702637
    9. '_' → logprob: -9.703295707702637
    10. '```' → logprob: -9.828295707702637

Token 182: ' min' (ID: 1349)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.373149573802948
    2. '20' → logprob: -1.9981496334075928
    3. '40' → logprob: -2.2481496334075928
    4. '10' → logprob: -2.9981496334075928
    5. '5' → logprob: -3.9981496334075928
    6. '15' → logprob: -6.873149394989014
    7. '12' → logprob: -8.373149871826172
    8. '4' → logprob: -8.498149871826172
    9. 'L' → logprob: -9.248149871826172
    10. '7' → logprob: -9.498149871826172

Token 183: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1977461576461792
    2. '(len' → logprob: -2.1977462768554688
    3. '(L' → logprob: -3.3227462768554688
    4. '(N' → logprob: -3.6977462768554688
    5. '(K' → logprob: -5.572746276855469
    6. '(M' → logprob: -6.072746276855469
    7. '(k' → logprob: -8.447746276855469
    8. '(n' → logprob: -8.697746276855469
    9. '((' → logprob: -8.697746276855469
    10. ' (' → logprob: -9.072746276855469

Token 184: '5' (ID: 20)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -1.1060439348220825
    2. 'N' → logprob: -1.7310439348220825
    3. '20' → logprob: -1.8560439348220825
    4. 'len' → logprob: -2.356043815612793
    5. '10' → logprob: -2.606043815612793
    6. '5' → logprob: -3.731043815612793
    7. '8' → logprob: -3.856043815612793
    8. '15' → logprob: -3.981043815612793
    9. '12' → logprob: -4.106043815612793
    10. 'L' → logprob: -4.231043815612793

Token 185: '*N' (ID: 107360)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13833869993686676
    2. '*N' → logprob: -2.263338804244995
    3. ',' → logprob: -3.888338804244995
    4. '8' → logprob: -6.388338565826416
    5. ' *' → logprob: -6.388338565826416
    6. '*,' → logprob: -7.513338565826416
    7. ',N' → logprob: -8.638339042663574
    8. '7' → logprob: -9.263339042663574
    9. 'N' → logprob: -9.888339042663574
    10. '*num' → logprob: -10.138339042663574

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00357773806899786
    2. ' ,' → logprob: -6.378577709197998
    3. ',N' → logprob: -7.753577709197998
    4. '8' → logprob: -7.753577709197998
    5. ',L' → logprob: -8.128578186035156
    6. '*' → logprob: -9.378578186035156
    7. ',M' → logprob: -9.753578186035156
    8. '),' → logprob: -10.128578186035156
    9. ',K' → logprob: -10.128578186035156
    10. '7' → logprob: -10.253578186035156

Token 187: ' M' (ID: 391)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '40' → logprob: -0.38589242100715637
    2. '20' → logprob: -1.760892391204834
    3. '10' → logprob: -2.760892391204834
    4. '8' → logprob: -3.135892391204834
    5. '15' → logprob: -4.510892391204834
    6. 'L' → logprob: -4.885892391204834
    7. '12' → logprob: -5.260892391204834
    8. '16' → logprob: -5.635892391204834
    9. '30' → logprob: -5.885892391204834
    10. '5' → logprob: -6.010892391204834

Token 188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012788036838173866
    2. ',' → logprob: -4.512787818908691
    3. ' )' → logprob: -7.512787818908691
    4. '),' → logprob: -7.762787818908691
    5. ')#' → logprob: -8.637787818908691
    6. ',)' → logprob: -8.887787818908691
    7. '))' → logprob: -9.762787818908691
    8. '#' → logprob: -10.012787818908691
    9. ');' → logprob: -10.512787818908691
    10. 'L' → logprob: -10.637787818908691

Token 189: ' donc' (ID: 14206)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7624011039733887
    2. '#' → logprob: -1.3874011039733887
    3. '```' → logprob: -2.1374011039733887
    4. 'from' → logprob: -2.8874011039733887
    5. 'def' → logprob: -3.7624011039733887
    6. '
' → logprob: -3.7624011039733887
    7. 'n' → logprob: -4.012401103973389
    8. ',' → logprob: -4.887401103973389
    9. '\' → logprob: -5.137401103973389
    10. ':' → logprob: -5.137401103973389

Token 190: ' au' (ID: 2791)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8331177830696106
    2. ' L' → logprob: -1.2081177234649658
    3. '40' → logprob: -2.333117723464966
    4. ' ' → logprob: -2.958117723464966
    5. ' on' → logprob: -3.208117723464966
    6. '```' → logprob: -3.458117723464966
    7. '#' → logprob: -4.583117961883545
    8. ' le' → logprob: -5.208117961883545
    9. ' la' → logprob: -5.333117961883545
    10. ' #' → logprob: -5.708117961883545

Token 191: ' pire' (ID: 94963)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.11802585422992706
    2. 'moins' → logprob: -3.368025779724121
    3. 'max' → logprob: -3.743025779724121
    4. ' plus' → logprob: -3.868025779724121
    5. 'maximum' → logprob: -3.868025779724121
    6. 'most' → logprob: -4.743025779724121
    7. ' maximum' → logprob: -7.118025779724121
    8. ' most' → logprob: -7.243025779724121
    9. 'mo' → logprob: -7.868025779724121
    10. 'minimum' → logprob: -8.868025779724121

Token 192: ' ' (ID: 220)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8961802124977112
    2. '40' → logprob: -1.2711801528930664
    3. ' ' → logprob: -2.1461801528930664
    4. 'L' → logprob: -3.5211801528930664
    5. '#' → logprob: -3.5211801528930664
    6. ' L' → logprob: -3.7711801528930664
    7. '```' → logprob: -3.8961801528930664
    8. 'on' → logprob: -4.021180152893066
    9. ' =' → logprob: -4.521180152893066
    10. ' la' → logprob: -4.771180152893066

Token 193: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.5094650387763977
    2. 'L' → logprob: -1.884464979171753
    3. ' on' → logprob: -2.384464979171753
    4. ' ' → logprob: -3.009464979171753
    5. '5' → logprob: -3.384464979171753
    6. 'on' → logprob: -3.884464979171753
    7. ' L' → logprob: -4.009465217590332
    8. 'M' → logprob: -5.134465217590332
    9. '20' → logprob: -5.509465217590332
    10. 'N' → logprob: -5.634465217590332

Token 194: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.61098313331604
    2. '#' → logprob: -1.86098313331604
    3. 'def' → logprob: -2.36098313331604
    4. ')' → logprob: -3.11098313331604
    5. 'import' → logprob: -3.11098313331604
    6. ',' → logprob: -3.86098313331604
    7. ' 
' → logprob: -4.235982894897461
    8. 'from' → logprob: -4.360982894897461
    9. '```' → logprob: -4.360982894897461
    10. ':' → logprob: -4.860982894897461

Token 195: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11199483275413513
    2. ' M' → logprob: -2.361994743347168
    3. '40' → logprob: -5.236994743347168
    4. ' ' → logprob: -5.986994743347168
    5. '50' → logprob: -6.736994743347168
    6. 'L' → logprob: -7.111994743347168
    7. '5' → logprob: -7.361994743347168
    8. 'N' → logprob: -8.111994743347168
    9. ' moins' → logprob: -8.361994743347168
    10. 'moins' → logprob: -8.986994743347168

Token 196: '300' (ID: 4095)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01707894168794155
    2. ' M' → logprob: -4.767078876495361
    3. 'L' → logprob: -6.142078876495361
    4. '50' → logprob: -6.267078876495361
    5. '40' → logprob: -6.392078876495361
    6. 'N' → logprob: -6.642078876495361
    7. '5' → logprob: -7.892078876495361
    8. ' ' → logprob: -8.51707935333252
    9. '20' → logprob: -9.01707935333252
    10. '100' → logprob: -9.39207935333252

Token 197: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8293856978416443
    2. 'import' → logprob: -1.579385757446289
    3. '#' → logprob: -1.954385757446289
    4. 'from' → logprob: -3.079385757446289
    5. ' 
' → logprob: -3.079385757446289
    6. ',' → logprob: -3.579385757446289
    7. 'def' → logprob: -3.954385757446289
    8. ' ' → logprob: -3.954385757446289
    9. '```' → logprob: -4.454385757446289
    10. 's' → logprob: -5.204385757446289

Token 198: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6168352365493774
    2. 'def' → logprob: -1.9918352365493774
    3. '#' → logprob: -2.241835117340088
    4. ' )' → logprob: -2.491835117340088
    5. ' ' → logprob: -3.366835117340088
    6. ' 
' → logprob: -3.741835117340088
    7. ' #' → logprob: -4.241835117340088
    8. 'n' → logprob: -5.116835117340088
    9. ',' → logprob: -5.241835117340088
    10. '  
' → logprob: -5.366835117340088

Token 199: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3605855107307434
    2. 'import' → logprob: -1.7355854511260986
    3. 'def' → logprob: -3.3605854511260986
    4. 'from' → logprob: -3.3605854511260986
    5. 'dp' → logprob: -4.235585689544678
    6. 'M' → logprob: -4.610585689544678
    7. 'max' → logprob: -4.735585689544678
    8. 'N' → logprob: -5.110585689544678
    9. 'n' → logprob: -5.735585689544678
    10. 'L' → logprob: -5.735585689544678

Token 200: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -1.1350998878479004
    2. ' espaces' → logprob: -2.1350998878479004
    3. ' #' → logprob: -2.3850998878479004
    4. ' mas' → logprob: -2.7600998878479004
    5. ' ' → logprob: -3.0100998878479004
    6. 'dp' → logprob: -3.3850998878479004
    7. 'cours' → logprob: -3.5100998878479004
    8. ' dp' → logprob: -3.6350998878479004
    9. 'mas' → logprob: -3.6350998878479004
    10. ' cours' → logprob: -3.6350998878479004

Token 201: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043153561651706696
    2. '=' → logprob: -3.9181535243988037
    3. ' #' → logprob: -5.168153762817383
    4. ' dp' → logprob: -5.418153762817383
    5. '#' → logprob: -5.668153762817383
    6. ' de' → logprob: -5.793153762817383
    7. 'dp' → logprob: -6.043153762817383
    8. ' possibles' → logprob: -7.293153762817383
    9. ' DP' → logprob: -7.793153762817383
    10. ',' → logprob: -7.918153762817383

Token 202: ' donc' (ID: 14206)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7960533499717712
    2. 'au' → logprob: -1.796053409576416
    3. '2' → logprob: -2.171053409576416
    4. ' ' → logprob: -2.421053409576416
    5. '(' → logprob: -2.796053409576416
    6. ' environ' → logprob: -2.796053409576416
    7. ' (' → logprob: -4.171053409576416
    8. ' de' → logprob: -4.796053409576416
    9. ' donc' → logprob: -5.671053409576416
    10. '3' → logprob: -5.796053409576416

Token 203: ' g' (ID: 329)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3848014175891876
    2. ' ' → logprob: -2.6348013877868652
    3. 'au' → logprob: -2.8848013877868652
    4. ' au' → logprob: -2.8848013877868652
    5. '(' → logprob: -3.0098013877868652
    6. ' environ' → logprob: -4.009801387786865
    7. '10' → logprob: -4.509801387786865
    8. ' (' → logprob: -4.884801387786865
    9. '40' → logprob: -5.009801387786865
    10. ' g' → logprob: -5.259801387786865

Token 204: 'ér' (ID: 2156)
  Prédit: 'érés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érés' → logprob: -0.019439518451690674
    2. 'r' → logprob: -4.769439697265625
    3. 'én' → logprob: -5.769439697265625
    4. 'érées' → logprob: -6.519439697265625
    5. 'rés' → logprob: -6.644439697265625
    6. 'rand' → logprob: -7.144439697265625
    7. 'estion' → logprob: -7.394439697265625
    8. 'éré' → logprob: -7.394439697265625
    9. 'ér' → logprob: -7.519439697265625
    10. 'érer' → logprob: -7.894439697265625

Token 205: 'ables' (ID: 3232)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10552074760198593
    2. 'érés' → logprob: -2.480520725250244
    3. 'ées' → logprob: -5.480520725250244
    4. 'én' → logprob: -6.105520725250244
    5. 'ables' → logprob: -6.105520725250244
    6. 'rés' → logprob: -6.605520725250244
    7. 'ès' → logprob: -6.855520725250244
    8. 'agés' → logprob: -7.105520725250244
    9. 'ard' → logprob: -7.355520725250244
    10. 'er' → logprob: -7.605520725250244

Token 206: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3075546026229858
    2. 'def' → logprob: -1.5575546026229858
    3. ' 
' → logprob: -1.6825546026229858
    4. 'dp' → logprob: -1.8075546026229858
    5. '#' → logprob: -2.6825547218322754
    6. ':' → logprob: -3.8075547218322754
    7. 'import' → logprob: -3.9325547218322754
    8. ',' → logprob: -4.432554721832275
    9. 'd' → logprob: -4.807554721832275
    10. ' ' → logprob: -5.307554721832275

Token 207: ' stockage' (ID: 101149)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7650500535964966
    2. 'une' → logprob: -1.3900500535964966
    3. ' un' → logprob: -2.515049934387207
    4. ' une' → logprob: -3.015049934387207
    5. 'du' → logprob: -3.140049934387207
    6. 'bit' → logprob: -3.640049934387207
    7. 'des' → logprob: -3.765049934387207
    8. ' du' → logprob: -4.015049934387207
    9. 'dp' → logprob: -4.515049934387207
    10. 'mas' → logprob: -4.515049934387207

Token 208: ' intelligent' (ID: 32075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4860528707504272
    2. ' ' → logprob: -1.7360528707504272
    3. 'dp' → logprob: -1.9860528707504272
    4. ',' → logprob: -2.486052989959717
    5. '#' → logprob: -2.611052989959717
    6. '
' → logprob: -2.736052989959717
    7. ' 
' → logprob: -2.986052989959717
    8. 's' → logprob: -3.611052989959717
    9. ' =' → logprob: -3.861052989959717
    10. 'def' → logprob: -3.861052989959717

Token 209: '.

' (ID: 364)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7843753099441528
    2. 'def' → logprob: -1.0343753099441528
    3. '#' → logprob: -2.4093751907348633
    4. 'from' → logprob: -3.6593751907348633
    5. 'import' → logprob: -4.159375190734863
    6. ':' → logprob: -4.159375190734863
    7. '
' → logprob: -4.784375190734863
    8. '\' → logprob: -5.284375190734863
    9. 'n' → logprob: -5.534375190734863
    10. 'd' → logprob: -5.659375190734863

Token 210: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6709442138671875
    2. '[' → logprob: -1.7959442138671875
    3. '
' → logprob: -1.7959442138671875
    4. ' 
' → logprob: -2.2959442138671875
    5. ' ' → logprob: -2.5459442138671875
    6. '[
' → logprob: -3.0459442138671875
    7. '#' → logprob: -3.0459442138671875
    8. 'def' → logprob: -3.0459442138671875
    9. ':' → logprob: -3.5459442138671875
    10. 'import' → logprob: -3.7959442138671875

Token 211: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.19769833981990814
    2. ' sys' → logprob: -2.0726983547210693
    3. ' math' → logprob: -3.3226983547210693
    4. 'sys' → logprob: -5.07269811630249
    5. ' numpy' → logprob: -5.19769811630249
    6. 'math' → logprob: -6.44769811630249
    7. ' heap' → logprob: -6.69769811630249
    8. 'collections' → logprob: -6.69769811630249
    9. ' collections' → logprob: -7.19769811630249
    10. 'numpy' → logprob: -8.072698593139648

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023700783029198647
    2. 'input' → logprob: -4.523700714111328
    3. 'import' → logprob: -5.398700714111328
    4. 'sys' → logprob: -5.648700714111328
    5. '

' → logprob: -5.898700714111328
    6. '
' → logprob: -7.648700714111328
    7. '=sys' → logprob: -7.773700714111328
    8. ',' → logprob: -7.898700714111328
    9. 'data' → logprob: -8.523700714111328
    10. 'def' → logprob: -9.648700714111328

Token 213: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48693352937698364
    2. 'input' → logprob: -1.1119334697723389
    3. 'import' → logprob: -3.111933469772339
    4. 'sys' → logprob: -4.986933708190918
    5. '

' → logprob: -6.111933708190918
    6. 'from' → logprob: -6.861933708190918
    7. 'def' → logprob: -7.236933708190918
    8. ' input' → logprob: -7.861933708190918
    9. '
' → logprob: -7.986933708190918
    10. 'n' → logprob: -8.486933708190918

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4299338757991791
    2. ' =' → logprob: -1.4299339056015015
    3. '()' → logprob: -2.304933786392212
    4. '.' → logprob: -5.054934024810791
    5. ' ' → logprob: -7.179934024810791
    6. '(' → logprob: -7.429934024810791
    7. '=sys' → logprob: -7.679934024810791
    8. ')' → logprob: -7.804934024810791
    9. '.readline' → logprob: -7.929934024810791
    10. '<|end|>' → logprob: -8.429933547973633

Token 215: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0011722482740879059
    2. ' sys' → logprob: -6.751172065734863
    3. 'input' → logprob: -13.501172065734863
    4. '=sys' → logprob: -14.501172065734863
    5. '	sys' → logprob: -17.00117301940918
    6. 'lambda' → logprob: -17.25117301940918
    7. '(sys' → logprob: -18.25117301940918
    8. 'open' → logprob: -20.75117301940918
    9. ' input' → logprob: -20.75117301940918
    10. '_sys' → logprob: -21.62617301940918

Token 216: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0019979889038950205
    2. '.stdout' → logprob: -6.751997947692871
    3. '.' → logprob: -7.876997947692871
    4. ' .' → logprob: -8.251997947692871
    5. '.std' → logprob: -9.376997947692871
    6. '.readline' → logprob: -9.751997947692871
    7. '.input' → logprob: -10.876997947692871
    8. 'import' → logprob: -12.501997947692871
    9. '.import' → logprob: -12.501997947692871
    10. '.argv' → logprob: -12.876997947692871

Token 217: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.15269622206687927
    2. '.readline' → logprob: -2.652696132659912
    3. 'buffer' → logprob: -2.652696132659912
    4. 'reader' → logprob: -7.527696132659912
    5. 'stdin' → logprob: -9.90269660949707
    6. 'input' → logprob: -10.02769660949707
    7. 'readonly' → logprob: -11.27769660949707
    8. ' readline' → logprob: -11.40269660949707
    9. '.read' → logprob: -11.90269660949707
    10. '_read' → logprob: -11.90269660949707

Token 218: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1855347752571106
    2. 'N' → logprob: -2.310534715652466
    3. 'def' → logprob: -3.560534715652466
    4. '

' → logprob: -4.560534954071045
    5. 'n' → logprob: -4.560534954071045
    6. 'class' → logprob: -4.810534954071045
    7. 'L' → logprob: -5.560534954071045
    8. 'M' → logprob: -6.310534954071045
    9. 'from' → logprob: -6.435534954071045
    10. '
' → logprob: -6.560534954071045

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6262747645378113
    2. 'N' → logprob: -1.376274824142456
    3. 'n' → logprob: -1.751274824142456
    4. '#' → logprob: -4.001274585723877
    5. 'class' → logprob: -4.376274585723877
    6. 'L' → logprob: -5.751274585723877
    7. 'MAX' → logprob: -5.751274585723877
    8. 'from' → logprob: -6.876274585723877
    9. 'max' → logprob: -7.376274585723877
    10. 'M' → logprob: -8.751275062561035

Token 220: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.10726141184568405
    2. ' main' → logprob: -2.6072614192962646
    3. ' max' → logprob: -3.8572614192962646
    4. ' schedule' → logprob: -6.2322611808776855
    5. 'solve' → logprob: -6.6072611808776855
    6. ' dp' → logprob: -6.7322611808776855
    7. ' maximize' → logprob: -6.7322611808776855
    8. ' solver' → logprob: -7.8572611808776855
    9. ' read' → logprob: -8.732261657714844
    10. ' optimize' → logprob: -9.607261657714844

Token 221: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0018115561688318849
    2. '(' → logprob: -6.751811504364014
    3. '()' → logprob: -7.751811504364014
    4. '():
' → logprob: -8.876811981201172
    5. ' ():' → logprob: -9.876811981201172
    6. '_' → logprob: -11.126811981201172
    7. ' (' → logprob: -12.876811981201172
    8. ' ()' → logprob: -14.626811981201172
    9. '(":' → logprob: -15.251811981201172
    10. '()>' → logprob: -15.251811981201172

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021546218544244766
    2. 'n' → logprob: -4.146546363830566
    3. ' n' → logprob: -5.271546363830566
    4. '	n' → logprob: -9.146546363830566
    5. '    ' → logprob: -9.271546363830566
    6. '    
' → logprob: -9.771546363830566
    7. '(n' → logprob: -9.896546363830566
    8. 'N' → logprob: -11.771546363830566
    9. ' ' → logprob: -11.896546363830566
    10. '  ' → logprob: -11.896546363830566

Token 223: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.502773642539978
    2. '   ' → logprob: -1.377773642539978
    3. 'N' (adapté à ' N') → logprob: -2.3777737617492676
    4. ' n' → logprob: -3.2527737617492676
    5. 'L' → logprob: -5.377773761749268
    6. ' ' → logprob: -6.002773761749268
    7. ' N' → logprob: -6.502773761749268
    8. 'D' → logprob: -6.752773761749268
    9. 'import' → logprob: -7.627773761749268
    10. 'M' → logprob: -7.877773761749268

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011431955499574542
    2. ' =' → logprob: -7.251142978668213
    3. ' ,' → logprob: -7.876142978668213
    4. ',M' → logprob: -10.251143455505371
    5. ',K' → logprob: -11.501143455505371
    6. '=' → logprob: -12.876143455505371
    7. ',L' → logprob: -13.126143455505371
    8. ',P' → logprob: -14.251143455505371
    9. ',int' → logprob: -14.376143455505371
    10. ',Q' → logprob: -14.376143455505371

Token 225: ' M' (ID: 391)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4069691300392151
    2. 'M' → logprob: -1.9069690704345703
    3. ' L' → logprob: -2.0319690704345703
    4. ' M' → logprob: -2.9069690704345703
    5. 'K' → logprob: -10.15696907043457
    6. ' ' → logprob: -10.40696907043457
    7. ' K' → logprob: -11.65696907043457
    8. ' =' → logprob: -13.40696907043457
    9. '  ' → logprob: -13.65696907043457
    10. '=' → logprob: -13.78196907043457

Token 226: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767897963523865
    2. ' =' → logprob: -0.8267897963523865
    3. ',' → logprob: -7.076789855957031
    4. '=input' → logprob: -12.701789855957031
    5. '=int' → logprob: -13.951789855957031
    6. ' ' → logprob: -14.326789855957031
    7. ' ,' → logprob: -14.701789855957031
    8. '=line' → logprob: -16.32678985595703
    9. '=sys' → logprob: -16.32678985595703
    10. ' =
' → logprob: -16.70178985595703

Token 227: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04859509319067001
    2. ' L' → logprob: -3.0485951900482178
    3. ' ' → logprob: -13.048595428466797
    4. ',' → logprob: -13.673595428466797
    5. '	L' → logprob: -14.298595428466797
    6. 'K' → logprob: -14.298595428466797
    7. ' ' → logprob: -14.548595428466797
    8. '  ' → logprob: -14.673595428466797
    9. ' =' → logprob: -14.923595428466797
    10. '   ' → logprob: -14.986095428466797

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931516528129578
    2. ' =' → logprob: -0.6931516528129578
    3. '=input' → logprob: -12.818151473999023
    4. '=sys' → logprob: -13.693151473999023
    5. '=int' → logprob: -15.318151473999023
    6. ' ' → logprob: -15.443151473999023
    7. '=list' → logprob: -16.318151473999023
    8. '=line' → logprob: -17.068151473999023
    9. ',' → logprob: -17.443151473999023
    10. '   ' → logprob: -18.443151473999023

Token 229: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.001170225441455841
    2. 'map' → logprob: -6.7511701583862305
    3. '	map' → logprob: -18.626171112060547
    4. '[' → logprob: -20.251171112060547
    5. '(map' → logprob: -20.251171112060547
    6. ' ' → logprob: -20.251171112060547
    7. ' list' → logprob: -20.376171112060547
    8. ' [' → logprob: -21.376171112060547
    9. ' mapa' → logprob: -22.376171112060547
    10. '_map' → logprob: -22.376171112060547

Token 230: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04460499808192253
    2. '(' → logprob: -3.544605016708374
    3. '(str' → logprob: -4.794604778289795
    4. '(input' → logprob: -5.044604778289795
    5. '(lambda' → logprob: -11.044605255126953
    6. 'int' → logprob: -13.169605255126953
    7. 'input' → logprob: -13.419605255126953
    8. '(
' → logprob: -13.544605255126953
    9. 'str' → logprob: -13.919605255126953
    10. '(list' → logprob: -14.169605255126953

Token 231: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5054268836975098
    2. 'input' → logprob: -1.0054268836975098
    3. ',input' → logprob: -3.6304268836975098
    4. '=input' → logprob: -6.25542688369751
    5. ')' → logprob: -7.13042688369751
    6. '(' → logprob: -7.50542688369751
    7. '(sys' → logprob: -8.130426406860352
    8. ',' → logprob: -8.255426406860352
    9. ' input' → logprob: -8.380426406860352
    10. '   ' → logprob: -9.255426406860352

Token 232: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687586784362793
    2. ' input' → logprob: -1.136875867843628
    3. ' sys' → logprob: -12.761876106262207
    4. 'sys' → logprob: -13.136876106262207
    5. ')' → logprob: -17.76187515258789
    6. '(input' → logprob: -17.88687515258789
    7. 'int' → logprob: -18.13687515258789
    8. ',input' → logprob: -18.26187515258789
    9. '=input' → logprob: -18.38687515258789
    10. ' ' → logprob: -19.01187515258789

Token 233: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -13.375001907348633
    3. '())' → logprob: -18.000001907348633
    4. ' ().' → logprob: -18.250001907348633
    5. '()
' → logprob: -18.500001907348633
    6. '(' → logprob: -18.625001907348633
    7. '.readline' → logprob: -19.500001907348633
    8. '().
' → logprob: -20.750001907348633
    9. '()[' → logprob: -20.875001907348633
    10. '.strip' → logprob: -21.500001907348633

Token 234: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.029898013919591904
    2. 'strip' → logprob: -3.529897928237915
    3. 'rstrip' → logprob: -8.904897689819336
    4. ')' → logprob: -12.154897689819336
    5. '().' → logprob: -12.779897689819336
    6. ' split' → logprob: -13.654897689819336
    7. '())' → logprob: -13.779897689819336
    8. 'read' → logprob: -14.279897689819336
    9. ' strip' → logprob: -15.029897689819336
    10. '(split' → logprob: -15.154897689819336

Token 235: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01870291866362095
    2. '())' → logprob: -4.018702983856201
    3. '()' → logprob: -7.518702983856201
    4. '(' → logprob: -12.268702507019043
    5. '))' → logprob: -12.518702507019043
    6. ' )' → logprob: -13.893702507019043
    7. ')`' → logprob: -15.268702507019043
    8. '),' → logprob: -16.76870346069336
    9. ' ())' → logprob: -17.01870346069336
    10. ')
' → logprob: -17.01870346069336

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7814322710037231
    2. 'courses' → logprob: -0.7814322710037231
    3. 'cours' → logprob: -3.2814321517944336
    4. ' courses' → logprob: -3.6564321517944336
    5. ' cours' → logprob: -5.031432151794434
    6. 'cr' → logprob: -5.406432151794434
    7. '    
' → logprob: -6.031432151794434
    8. 'c' → logprob: -7.031432151794434
    9. '#' → logprob: -7.156432151794434
    10. 'slots' → logprob: -7.656432151794434

Token 237: ' classes' (ID: 9778)
  Prédit: 'courses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'courses' → logprob: -0.04060322046279907
    2. 'cours' → logprob: -3.9156031608581543
    3. 'cr' → logprob: -4.415603160858154
    4. 'hor' → logprob: -6.165603160858154
    5. 'slots' → logprob: -6.290603160858154
    6. 'classes' (adapté à ' classes') → logprob: -7.290603160858154
    7. 'jours' → logprob: -7.665603160858154
    8. 'cre' → logprob: -7.665603160858154
    9. '#' → logprob: -7.790603160858154
    10. 'days' → logprob: -8.415603637695312

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003759228391572833
    2. '=' → logprob: -5.628759384155273
    3. '_mask' → logprob: -9.878759384155273
    4. '_' → logprob: -10.253759384155273
    5. '=[]' → logprob: -10.503759384155273
    6. '_masks' → logprob: -10.753759384155273
    7. 'occup' → logprob: -12.253759384155273
    8. 's' → logprob: -12.253759384155273
    9. ')' → logprob: -13.128759384155273
    10. ' ' → logprob: -13.128759384155273

Token 239: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03809989616274834
    2. '[]' → logprob: -3.288100004196167
    3. ' [' → logprob: -10.163100242614746
    4. ' []
' → logprob: -11.038100242614746
    5. '[' → logprob: -13.038100242614746
    6. '[]
' → logprob: -13.538100242614746
    7. ' [];' → logprob: -16.91309928894043
    8. ' []

' → logprob: -17.16309928894043
    9. ' [[]' → logprob: -17.91309928894043
    10. '[]

' → logprob: -18.03809928894043

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2984682321548462
    2. 'for' → logprob: -2.0484681129455566
    3. ' for' → logprob: -2.0484681129455566
    4. '	for' → logprob: -9.548468589782715
    5. '
' → logprob: -9.673468589782715
    6. '    
' → logprob: -10.048468589782715
    7. '    ' → logprob: -13.673468589782715
    8. '  
' → logprob: -14.048468589782715
    9. ' 
' → logprob: -14.423468589782715
    10. '  ' → logprob: -14.423468589782715

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. '
' → logprob: -21.1250057220459
    5. '	for' → logprob: -21.7500057220459
    6. 'total' → logprob: -21.7500057220459
    7. '    
' → logprob: -23.3750057220459
    8. 'fo' → logprob: -23.8750057220459
    9. 'day' → logprob: -24.0000057220459
    10. '  ' → logprob: -24.1250057220459

Token 242: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.02326551079750061
    2. '_' → logprob: -3.7732656002044678
    3. '_i' → logprob: -11.148265838623047
    4. ' i' → logprob: -12.148265838623047
    5. 'i' → logprob: -15.148265838623047
    6. '__' → logprob: -17.773265838623047
    7. '_=' → logprob: -18.023265838623047
    8. '_c' → logprob: -18.898265838623047
    9. ' ' → logprob: -18.898265838623047
    10. ' ' → logprob: -19.398265838623047

Token 243: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.672096312046051
    2. ' in' → logprob: -1.2970962524414062
    3. ' range' → logprob: -1.5470962524414062
    4. 'in' → logprob: -5.797096252441406
    5. ' ' → logprob: -10.297096252441406
    6. '  ' → logprob: -11.047096252441406
    7. 'ange' → logprob: -11.172096252441406
    8. '_' → logprob: -11.422096252441406
    9. '(range' → logprob: -11.547096252441406
    10. ' _' → logprob: -11.797096252441406

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023119196703191847
    2. ' range' → logprob: -8.37523078918457
    3. '(range' → logprob: -15.37523078918457
    4. '	range' → logprob: -16.37523078918457
    5. '   ' → logprob: -16.87523078918457
    6. 'rang' → logprob: -17.12523078918457
    7. 'input' → logprob: -17.75023078918457
    8. 'r' → logprob: -17.75023078918457
    9. 'int' → logprob: -17.75023078918457
    10. '
' → logprob: -17.75023078918457

Token 245: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.06307676434516907
    2. 'M' → logprob: -2.8130767345428467
    3. ' M' → logprob: -7.438076972961426
    4. '(' → logprob: -8.313076972961426
    5. '(int' → logprob: -8.438076972961426
    6. 'int' → logprob: -10.313076972961426
    7. ' (' → logprob: -11.438076972961426
    8. '(N' → logprob: -11.813076972961426
    9. '(
' → logprob: -13.313076972961426
    10. ')' → logprob: -13.563076972961426

Token 246: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3870941400527954
    2. '):' → logprob: -1.1370941400527954
    3. ':' → logprob: -9.137094497680664
    4. '   ' → logprob: -9.637094497680664
    5. ')' → logprob: -10.637094497680664
    6. '):
' → logprob: -11.512094497680664
    7. '():
' → logprob: -12.387094497680664
    8. ' ):
' → logprob: -12.512094497680664
    9. ' ):' → logprob: -12.762094497680664
    10. ':
' → logprob: -13.262094497680664

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006445115432143211
    2. '   ' → logprob: -5.506444931030273
    3. 'n' → logprob: -7.256444931030273
    4. '    ' → logprob: -8.256444931030273
    5. ' n' → logprob: -8.506444931030273
    6. ' t' → logprob: -8.506444931030273
    7. 't' → logprob: -8.881444931030273
    8. '	   ' → logprob: -9.131444931030273
    9. '
' → logprob: -9.256444931030273
    10. '        
' → logprob: -9.631444931030273

Token 248: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.4241720736026764
    2. 't' → logprob: -1.549172043800354
    3. 'day' → logprob: -2.2991721630096436
    4. 'line' → logprob: -4.6741719245910645
    5. ' t' → logprob: -5.2991719245910645
    6. 'D' → logprob: -5.5491719245910645
    7. 'start' → logprob: -6.1741719245910645
    8. 'jour' → logprob: -6.4241719245910645
    9. ' day' → logprob: -6.5491719245910645
    10. 'j' → logprob: -6.5491719245910645

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00690517108887434
    2. ' ,' → logprob: -5.2569050788879395
    3. 'ay' → logprob: -7.3819050788879395
    4. ',i' → logprob: -7.5069050788879395
    5. 'i' → logprob: -9.256905555725098
    6. '_,' → logprob: -9.631905555725098
    7. 'ays' → logprob: -9.881905555725098
    8. ',int' → logprob: -10.006905555725098
    9. '=' → logprob: -10.256905555725098
    10. ' =' → logprob: -10.381905555725098

Token 250: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3723543584346771
    2. 'h' → logprob: -1.8723543882369995
    3. ' s' → logprob: -2.24735426902771
    4. 'start' → logprob: -3.74735426902771
    5. ' h' → logprob: -3.99735426902771
    6. ' start' → logprob: -5.122354507446289
    7. 'p' → logprob: -7.247354507446289
    8. 'hs' → logprob: -7.747354507446289
    9. 'de' → logprob: -7.997354507446289
    10. 'c' → logprob: -8.247354507446289

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003312937042210251
    2. ' ,' → logprob: -8.250330924987793
    3. 't' → logprob: -10.750330924987793
    4. 's' → logprob: -11.625330924987793
    5. '_,' → logprob: -11.750330924987793
    6. ',b' → logprob: -12.375330924987793
    7. ',t' → logprob: -12.500330924987793
    8. ' =' → logprob: -13.125330924987793
    9. ',h' → logprob: -13.250330924987793
    10. ',v' → logprob: -13.375330924987793

Token 252: ' k' (ID: 372)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1686299443244934
    2. 'b' → logprob: -2.5436298847198486
    3. 'c' → logprob: -3.0436298847198486
    4. 'h' → logprob: -4.418630123138428
    5. 'p' → logprob: -5.168630123138428
    6. 't' → logprob: -5.793630123138428
    7. 'k' → logprob: -6.168630123138428
    8. 's' → logprob: -6.168630123138428
    9. 'f' → logprob: -6.793630123138428
    10. 'x' → logprob: -7.668630123138428

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24972103536128998
    2. ' =' → logprob: -1.6247210502624512
    3. '=' → logprob: -3.749721050262451
    4. 't' → logprob: -9.124720573425293
    5. ' ,' → logprob: -9.499720573425293
    6. ',t' → logprob: -9.499720573425293
    7. ' ' → logprob: -9.874720573425293
    8. '   ' → logprob: -9.874720573425293
    9. ')' → logprob: -10.499720573425293
    10. ',i' → logprob: -11.624720573425293

Token 254: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010030409321188927
    2. ' t' → logprob: -5.385030269622803
    3. 'b' → logprob: -5.510030269622803
    4. 'h' → logprob: -7.510030269622803
    5. 's' → logprob: -8.010030746459961
    6. 'ti' → logprob: -8.010030746459961
    7. 'v' → logprob: -10.385030746459961
    8. 'c' → logprob: -10.635030746459961
    9. '_t' → logprob: -11.385030746459961
    10. 'w' → logprob: -11.635030746459961

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603483110666275
    2. ' =' → logprob: -1.9103482961654663
    3. ' ' → logprob: -10.285347938537598
    4. ')' → logprob: -10.660347938537598
    5. ',' → logprob: -10.660347938537598
    6. '_i' → logprob: -11.035347938537598
    7. 'i' → logprob: -11.285347938537598
    8. ')=' → logprob: -12.035347938537598
    9. '_' → logprob: -13.535347938537598
    10. '   ' → logprob: -13.535347938537598

Token 256: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692831456661224
    2. ' map' → logprob: -2.1269283294677734
    3. '	map' → logprob: -16.376928329467773
    4. 'input' → logprob: -17.001928329467773
    5. 'list' → logprob: -17.376928329467773
    6. ' ' → logprob: -17.626928329467773
    7. '(map' → logprob: -17.751928329467773
    8. ' input' → logprob: -19.376928329467773
    9. '_map' → logprob: -20.251928329467773
    10. '.map' → logprob: -20.376928329467773

Token 257: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006751373875886202
    2. 'int' → logprob: -5.006751537322998
    3. '=int' → logprob: -11.13175106048584
    4. '[int' → logprob: -11.63175106048584
    5. ',int' → logprob: -11.88175106048584
    6. ' int' → logprob: -13.25675106048584
    7. '(' → logprob: -13.63175106048584
    8. '<int' → logprob: -14.00675106048584
    9. '```' → logprob: -14.00675106048584
    10. ':int' → logprob: -15.25675106048584

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4765823185443878
    2. ',input' → logprob: -0.9765822887420654
    3. '(input' → logprob: -6.2265825271606445
    4. 'input' → logprob: -8.601582527160645
    5. ' ,' → logprob: -8.976582527160645
    6. '(' → logprob: -9.101582527160645
    7. '   ' → logprob: -10.226582527160645
    8. '(),' → logprob: -10.851582527160645
    9. ' input' → logprob: -11.476582527160645
    10. '=input' → logprob: -11.601582527160645

Token 259: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -21.376928329467773
    4. 'sys' → logprob: -22.126928329467773
    5. '=input' → logprob: -22.751928329467773
    6. ',input' → logprob: -22.876928329467773
    7. '	input' → logprob: -23.001928329467773
    8. '_input' → logprob: -23.126928329467773
    9. ' ' → logprob: -23.501928329467773
    10. '[input' → logprob: -23.876928329467773

Token 260: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.625004768371582
    3. ')' → logprob: -14.125004768371582
    4. '()
' → logprob: -16.250003814697266
    5. ' ().' → logprob: -16.375003814697266
    6. '())' → logprob: -17.750003814697266
    7. '(' → logprob: -17.750003814697266
    8. '.split' → logprob: -17.750003814697266
    9. '.readline' → logprob: -18.125003814697266
    10. '   ' → logprob: -19.000003814697266

Token 261: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.505351095460355e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -15.750075340270996
    4. 'rstrip' → logprob: -18.00007438659668
    5. '(split' → logprob: -19.00007438659668
    6. ')' → logprob: -19.12507438659668
    7. 'spl' → logprob: -19.50007438659668
    8. '.split' → logprob: -20.62507438659668
    9. '().' → logprob: -21.37507438659668
    10. 'plit' → logprob: -22.12507438659668

Token 262: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025520040653645992
    2. ')
' → logprob: -6.127552032470703
    3. '())' → logprob: -8.127552032470703
    4. '()' → logprob: -9.877552032470703
    5. ' )' → logprob: -11.752552032470703
    6. '())
' → logprob: -12.502552032470703
    7. ')
' → logprob: -12.877552032470703
    8. '   ' → logprob: -13.127552032470703
    9. ');' → logprob: -13.752552032470703
    10. '(' → logprob: -14.377552032470703

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002966888016089797
    2. '        
' → logprob: -6.75296688079834
    3. ')' → logprob: -7.25296688079834
    4. '
' → logprob: -7.75296688079834
    5. '   ' → logprob: -7.87796688079834
    6. '    
' → logprob: -10.12796688079834
    7. '  
' → logprob: -10.50296688079834
    8. ',' → logprob: -10.62796688079834
    9. ' classes' → logprob: -10.62796688079834
    10. ' 
' → logprob: -10.75296688079834

Token 264: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.005789305083453655
    2. '       ' → logprob: -6.255789279937744
    3. '   ' → logprob: -7.005789279937744
    4. 'm' → logprob: -7.505789279937744
    5. 'bit' → logprob: -7.755789279937744
    6. 'cours' → logprob: -8.005789756774902
    7. 'bm' → logprob: -8.130789756774902
    8. 'course' → logprob: -8.255789756774902
    9. ' mask' → logprob: -8.880789756774902
    10. 'mas' → logprob: -9.005789756774902

Token 265: ' Cré' (ID: 109203)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.048213809728622437
    2. ' mask' → logprob: -4.048213958740234
    3. 'bit' → logprob: -4.298213958740234
    4. '   ' → logprob: -5.923213958740234
    5. 'start' → logprob: -5.923213958740234
    6. 'pos' → logprob: -6.423213958740234
    7. '#' → logprob: -6.548213958740234
    8. ' bit' → logprob: -7.173213958740234
    9. 'bm' → logprob: -7.173213958740234
    10. 'm' → logprob: -7.423213958740234

Token 266: 'ne' (ID: 611)
  Prédit: 'neau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neau' → logprob: -0.6475688219070435
    2. '   ' → logprob: -1.3975688219070435
    3. '       ' → logprob: -2.647568702697754
    4. 'n' → logprob: -3.022568702697754
    5. 'occup' → logprob: -3.522568702697754
    6. 'slots' → logprob: -4.897568702697754
    7. 'né' → logprob: -5.022568702697754
    8. ' occupied' → logprob: -5.147568702697754
    9. 'ne' → logprob: -5.272568702697754
    10. ' ' → logprob: -5.272568702697754

Token 267: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.056539371609687805
    2. 'au' → logprob: -2.931539297103882
    3. '   ' → logprob: -7.556539535522461
    4. '```' → logprob: -9.056539535522461
    5. 'e' → logprob: -9.181539535522461
    6. 'x' → logprob: -9.181539535522461
    7. 'z' → logprob: -9.306539535522461
    8. 'neau' → logprob: -9.431539535522461
    9. 'a' → logprob: -9.681539535522461
    10. 'ne' → logprob: -9.681539535522461

Token 268: ' couvr' (ID: 129883)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05086079239845276
    2. '_mask' → logprob: -3.42586088180542
    3. '=' → logprob: -4.42586088180542
    4. 'mask' → logprob: -5.92586088180542
    5. 's' → logprob: -6.92586088180542
    6. 'occup' → logprob: -7.67586088180542
    7. '_' → logprob: -8.175860404968262
    8. '_start' → logprob: -9.300860404968262
    9. '   ' → logprob: -9.550860404968262
    10. ' mask' → logprob: -9.800860404968262

Token 269: 'erts' (ID: 29860)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.07253454625606537
    2. 'ant' → logprob: -2.8225345611572266
    3. 'us' → logprob: -5.697534561157227
    4. 'ts' → logprob: -5.947534561157227
    5. '   ' → logprob: -7.072534561157227
    6. 't' → logprob: -7.197534561157227
    7. 'is' → logprob: -7.197534561157227
    8. 'ents' → logprob: -7.822534561157227
    9. 'nt' → logprob: -7.947534561157227
    10. 'rent' → logprob: -7.947534561157227

Token 270: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5410195589065552
    2. ' =' → logprob: -1.4160195589065552
    3. 'mask' → logprob: -2.0410194396972656
    4. '=' → logprob: -3.6660194396972656
    5. ' mask' → logprob: -4.791019439697266
    6. '   ' → logprob: -6.041019439697266
    7. 'cr' → logprob: -6.416019439697266
    8. 'start' → logprob: -7.166019439697266
    9. ' day' → logprob: -7.291019439697266
    10. '_mask' → logprob: -7.666019439697266

Token 271: ' du' (ID: 1462)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.8756681084632874
    2. ' mask' → logprob: -1.2506680488586426
    3. ' start' → logprob: -1.8756680488586426
    4. 'start' → logprob: -2.5006680488586426
    5. ' pos' → logprob: -4.500668048858643
    6. '   ' → logprob: -5.125668048858643
    7. ' day' → logprob: -5.125668048858643
    8. 'cr' → logprob: -5.250668048858643
    9. 'pos' → logprob: -5.375668048858643
    10. 'offset' → logprob: -5.500668048858643

Token 272: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3187296688556671
    2. ' a' → logprob: -1.8187296390533447
    3. ' (' → logprob: -2.4437296390533447
    4. '(a' → logprob: -4.068729877471924
    5. '((' → logprob: -5.693729877471924
    6. ' ((' → logprob: -6.693729877471924
    7. ' ' → logprob: -7.568729877471924
    8. 'd' → logprob: -7.568729877471924
    9. ' d' → logprob: -7.943729877471924
    10. '(' → logprob: -8.068729400634766

Token 273: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09046253561973572
    2. 'd' → logprob: -3.0904624462127686
    3. '(a' → logprob: -4.215462684631348
    4. ' (' → logprob: -4.715462684631348
    5. '(d' → logprob: -4.840462684631348
    6. ' a' → logprob: -5.215462684631348
    7. '5' → logprob: -5.965462684631348
    8. ' d' → logprob: -8.090462684631348
    9. ' ' → logprob: -8.215462684631348
    10. ')' → logprob: -8.215462684631348

Token 274: '*N' (ID: 107360)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2015884667634964
    2. ' -' → logprob: -1.70158851146698
    3. '*' → logprob: -9.70158863067627
    4. '   ' → logprob: -9.95158863067627
    5. ' *' → logprob: -10.57658863067627
    6. 'a' → logprob: -11.07658863067627
    7. ' ' → logprob: -11.82658863067627
    8. ')' → logprob: -12.20158863067627
    9. '	' → logprob: -13.20158863067627
    10. '       ' → logprob: -13.32658863067627

Token 275: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7078742384910583
    2. '*(' → logprob: -1.0828742980957031
    3. ' -' → logprob: -2.832874298095703
    4. ')*(' → logprob: -4.082874298095703
    5. ')*' → logprob: -4.207874298095703
    6. '*' → logprob: -4.207874298095703
    7. ' *' → logprob: -4.207874298095703
    8. '*N' → logprob: -4.332874298095703
    9. '*a' → logprob: -4.582874298095703
    10. ')' → logprob: -4.582874298095703

Token 276: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05853733792901039
    2. '(a' → logprob: -3.683537244796753
    3. ' a' → logprob: -3.683537244796753
    4. ' (' → logprob: -5.058537483215332
    5. '(' → logprob: -9.308537483215332
    6. ' ' → logprob: -10.308537483215332
    7. '   ' → logprob: -10.683537483215332
    8. '((' → logprob: -10.808537483215332
    9. ')a' → logprob: -11.808537483215332
    10. '
' → logprob: -11.933537483215332

Token 277: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030549630522727966
    2. ' a' → logprob: -3.5305495262145996
    3. '(a' → logprob: -7.5305495262146
    4. ' (' → logprob: -8.530550003051758
    5. ')a' → logprob: -10.655550003051758
    6. ')' → logprob: -11.030550003051758
    7. ' ' → logprob: -11.280550003051758
    8. '   ' → logprob: -12.405550003051758
    9. '
' → logprob: -12.905550003051758
    10. '	a' → logprob: -13.405550003051758

Token 278: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06232616305351257
    2. ' -' → logprob: -2.812326192855835
    3. ')' → logprob: -8.687326431274414
    4. ')-' → logprob: -8.937326431274414
    5. ' ' → logprob: -10.812326431274414
    6. '))' → logprob: -10.812326431274414
    7. '   ' → logprob: -11.937326431274414
    8. '))-' → logprob: -12.312326431274414
    9. 'a' → logprob: -13.312326431274414
    10. '  ' → logprob: -14.187326431274414

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -15.000024795532227
    4. '   ' → logprob: -16.750024795532227
    5. 'a' → logprob: -17.375024795532227
    6. '```' → logprob: -17.875024795532227
    7. '2' → logprob: -18.000024795532227
    8. '           ' → logprob: -18.375024795532227
    9. 'd' → logprob: -18.750024795532227
    10. '
' → logprob: -19.000024795532227

Token 280: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21199801564216614
    2. ')' → logprob: -1.7119979858398438
    3. ')*' → logprob: -5.586997985839844
    4. ' ))' → logprob: -6.211997985839844
    5. ')))' → logprob: -6.961997985839844
    6. ' )' → logprob: -6.961997985839844
    7. '   ' → logprob: -7.336997985839844
    8. ')*(' → logprob: -7.461997985839844
    9. '))*' → logprob: -7.836997985839844
    10. ' ' → logprob: -7.836997985839844

Token 281: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1767280250787735
    2. ',' → logprob: -3.0517280101776123
    3. ' ' → logprob: -3.4267280101776123
    4. '+' → logprob: -4.301728248596191
    5. ' +' → logprob: -4.301728248596191
    6. ' à' → logprob: -4.426728248596191
    7. ' au' → logprob: -4.676728248596191
    8. ' )' → logprob: -4.801728248596191
    9. '<<' → logprob: -5.176728248596191
    10. ' ,' → logprob: -5.676728248596191

Token 282: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5417592525482178
    2. 'd' → logprob: -1.6667592525482178
    3. ' (' → logprob: -2.1667592525482178
    4. '(d' → logprob: -2.1667592525482178
    5. '(' → logprob: -8.791759490966797
    6. ' ' → logprob: -9.416759490966797
    7. '   ' → logprob: -11.166759490966797
    8. '	d' → logprob: -11.166759490966797
    9. '    ' → logprob: -11.791759490966797
    10. '[d' → logprob: -11.854259490966797

Token 283: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05548446252942085
    2. ' d' → logprob: -2.9304845333099365
    3. '(d' → logprob: -7.680484294891357
    4. ' (' → logprob: -9.305484771728516
    5. ')d' → logprob: -11.180484771728516
    6. '   ' → logprob: -11.555484771728516
    7. ' ' → logprob: -11.930484771728516
    8. '(' → logprob: -12.055484771728516
    9. ')' → logprob: -13.055484771728516
    10. '    ' → logprob: -13.305484771728516

Token 284: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0008295211009681225
    2. '*' → logprob: -7.875829696655273
    3. ' *' → logprob: -7.875829696655273
    4. '-' → logprob: -10.875829696655273
    5. '*num' → logprob: -10.875829696655273
    6. '*n' → logprob: -11.500829696655273
    7. ')*' → logprob: -12.500829696655273
    8. '*K' → logprob: -12.750829696655273
    9. '*M' → logprob: -13.125829696655273
    10. '*C' → logprob: -13.750829696655273

Token 285: ' +' (ID: 659)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.19046267867088318
    2. ' *' → logprob: -2.690462589263916
    3. '*' → logprob: -2.940462589263916
    4. ' +' → logprob: -3.315462589263916
    5. '+' → logprob: -4.315462589263916
    6. '*(' → logprob: -6.815462589263916
    7. ')' → logprob: -7.565462589263916
    8. ' ' → logprob: -7.940462589263916
    9. '-' → logprob: -8.065463066101074
    10. 'N' → logprob: -8.065463066101074

Token 286: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7408362030982971
    2. ' (' → logprob: -1.2408361434936523
    3. ' a' → logprob: -2.1158361434936523
    4. '(a' → logprob: -2.2408361434936523
    5. '(d' → logprob: -5.115836143493652
    6. 'd' → logprob: -7.615836143493652
    7. ' d' → logprob: -7.740836143493652
    8. ' ' → logprob: -9.115836143493652
    9. '   ' → logprob: -9.490836143493652
    10. '(' → logprob: -10.490836143493652

Token 287: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0058825756423175335
    2. '(a' → logprob: -5.505882740020752
    3. ' a' → logprob: -6.505882740020752
    4. ' (' → logprob: -8.380882263183594
    5. '   ' → logprob: -10.255882263183594
    6. 'd' → logprob: -11.880882263183594
    7. ' ' → logprob: -12.005882263183594
    8. '(d' → logprob: -12.255882263183594
    9. ')' → logprob: -12.630882263183594
    10. '    ' → logprob: -12.755882263183594

Token 288: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004073889926075935
    2. ')-' → logprob: -5.7540740966796875
    3. ' -' → logprob: -7.1290740966796875
    4. ')' → logprob: -9.379074096679688
    5. ')-(' → logprob: -12.129074096679688
    6. 'def' → logprob: -13.754074096679688
    7. '[' → logprob: -14.379074096679688
    8. '   ' → logprob: -14.629074096679688
    9. ' ' → logprob: -14.754074096679688
    10. '#' → logprob: -14.879074096679688

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.591415437171236e-05
    2. ' ' → logprob: -9.750096321105957
    3. '2' → logprob: -10.375096321105957
    4. ')' → logprob: -12.625096321105957
    5. '```' → logprob: -13.000096321105957
    6. '   ' → logprob: -15.125096321105957
    7. '<|end|>' → logprob: -17.00009536743164
    8. '           ' → logprob: -17.12509536743164
    9. 'd' → logprob: -17.12509536743164
    10. '...' → logprob: -17.12509536743164

Token 290: ')+(' (ID: 104644)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7673178315162659
    2. '+' → logprob: -1.267317771911621
    3. ')' → logprob: -1.517317771911621
    4. ')+' → logprob: -4.017317771911621
    5. '))' → logprob: -5.267317771911621
    6. ')+(' → logprob: -5.392317771911621
    7. '+(' → logprob: -6.517317771911621
    8. ' )' → logprob: -6.642317771911621
    9. ' ' → logprob: -7.017317771911621
    10. '   ' → logprob: -7.142317771911621

Token 291: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006271334132179618
    2. ' k' → logprob: -7.375627040863037
    3. ')' → logprob: -15.125627517700195
    4. '
' → logprob: -16.625627517700195
    5. '   ' → logprob: -16.875627517700195
    6. '(k' → logprob: -17.250627517700195
    7. '       ' → logprob: -18.000627517700195
    8. '	k' → logprob: -18.000627517700195
    9. '{k' → logprob: -18.375627517700195
    10. '```' → logprob: -18.500627517700195

Token 292: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4575338363647461
    2. '-' → logprob: -1.082533836364746
    3. ')-' → logprob: -3.832533836364746
    4. '))' → logprob: -5.457533836364746
    5. ' -' → logprob: -6.207533836364746
    6. '))-' → logprob: -8.082533836364746
    7. ')))' → logprob: -9.957533836364746
    8. ' )' → logprob: -10.332533836364746
    9. '*' → logprob: -10.707533836364746
    10. '-)' → logprob: -11.207533836364746

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.875015258789062
    3. ')' → logprob: -12.375015258789062
    4. '-' → logprob: -12.500015258789062
    5. ' -' → logprob: -15.625015258789062
    6. '```' → logprob: -15.750015258789062
    7. ')-' → logprob: -15.875015258789062
    8. '2' → logprob: -17.000015258789062
    9. '   ' → logprob: -17.750015258789062
    10. '<|end|>' → logprob: -17.875015258789062

Token 294: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.52577143907547
    2. '))' → logprob: -0.90077143907547
    3. ')))' → logprob: -6.775771617889404
    4. '))
' → logprob: -7.400771617889404
    5. ')
' → logprob: -7.525771617889404
    6. ' )' → logprob: -9.025771141052246
    7. '   ' → logprob: -9.275771141052246
    8. ' ))' → logprob: -10.400771141052246
    9. '       ' → logprob: -10.525771141052246
    10. ')*' → logprob: -11.775771141052246

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006861720699816942
    2. ')' → logprob: -5.256861686706543
    3. '   ' → logprob: -7.881861686706543
    4. '<|end|>' → logprob: -8.381861686706543
    5. ' )' → logprob: -8.756861686706543
    6. ' =' → logprob: -9.006861686706543
    7. '        
' → logprob: -9.256861686706543
    8. ',' → logprob: -9.506861686706543
    9. ' ' → logprob: -9.506861686706543
    10. 's' → logprob: -9.631861686706543

Token 296: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.2179412543773651
    2. '       ' → logprob: -1.8429412841796875
    3. ' mask' → logprob: -3.5929412841796875
    4. 'start' → logprob: -6.0929412841796875
    5. 'cr' → logprob: -6.3429412841796875
    6. '   ' → logprob: -6.7179412841796875
    7. 'm' → logprob: -6.7179412841796875
    8. 'slot' → logprob: -7.4679412841796875
    9. 'slots' → logprob: -7.8429412841796875
    10. 'course' → logprob: -8.092941284179688

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133673369884491
    2. '=' → logprob: -1.3133673667907715
    3. ' |=' → logprob: -9.313366889953613
    4. ' ' → logprob: -11.688366889953613
    5. ' <<=' → logprob: -12.688366889953613
    6. '|' → logprob: -12.938366889953613
    7. '   ' → logprob: -14.688366889953613
    8. ' ' → logprob: -14.938366889953613
    9. ' =
' → logprob: -15.563366889953613
    10. ')' → logprob: -16.31336784362793

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000930163892917335
    2. '((' → logprob: -7.625930309295654
    3. '(' → logprob: -7.875930309295654
    4. ' ' → logprob: -9.875929832458496
    5. 'sum' → logprob: -12.375929832458496
    6. ' ((' → logprob: -13.000929832458496
    7. '   ' → logprob: -13.125929832458496
    8. ' (' → logprob: -13.250929832458496
    9. '1' → logprob: -14.750929832458496
    10. '(((' → logprob: -15.875929832458496

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015890071168541908
    2. '((' → logprob: -4.515890121459961
    3. '(' → logprob: -5.515890121459961
    4. 'sum' → logprob: -7.140890121459961
    5. ' ' → logprob: -12.015890121459961
    6. ' ((' → logprob: -12.140890121459961
    7. '(((' → logprob: -13.390890121459961
    8. '(sum' → logprob: -13.640890121459961
    9. '   ' → logprob: -14.390890121459961
    10. '1' → logprob: -14.640890121459961

Token 300: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.37205970287323
    2. 'for' → logprob: -1.37205970287323
    3. '   ' → logprob: -1.62205970287323
    4. '<<' → logprob: -2.4970598220825195
    5. '<|end|>' → logprob: -2.9970598220825195
    6. '       ' → logprob: -3.1220598220825195
    7. ' <<' → logprob: -3.2470598220825195
    8. '
' → logprob: -3.6220598220825195
    9. ' <<=' → logprob: -3.8720598220825195
    10. '<|end|>' → logprob: -4.8720598220825195

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35980069637298584
    2. ' for' → logprob: -1.4848006963729858
    3. 'for' → logprob: -2.7348008155822754
    4. '   ' → logprob: -4.859800815582275
    5. ' <<' → logprob: -6.734800815582275
    6. '	for' → logprob: -7.984800815582275
    7. '<<' → logprob: -8.234800338745117
    8. '	' → logprob: -8.609800338745117
    9. '<|end|>' → logprob: -8.859800338745117
    10. ' <<=' → logprob: -8.984800338745117

Token 302: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002249580342322588
    2. 'start' (adapté à ' start') → logprob: -6.127249717712402
    3. ' for' → logprob: -9.752249717712402
    4. '   ' → logprob: -13.252249717712402
    5. 'base' → logprob: -13.252249717712402
    6. '       ' → logprob: -13.877249717712402
    7. 'offset' → logprob: -14.252249717712402
    8. 'day' → logprob: -14.752249717712402
    9. '	for' → logprob: -15.252249717712402
    10. 'mask' → logprob: -15.627249717712402

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760860443115234
    2. '=' → logprob: -0.8260860443115234
    3. '_day' → logprob: -9.326086044311523
    4. '_' → logprob: -10.951086044311523
    5. '=d' → logprob: -11.451086044311523
    6. '_idx' → logprob: -11.826086044311523
    7. ' ' → logprob: -12.326086044311523
    8. '_=' → logprob: -12.326086044311523
    9. 'd' → logprob: -12.826086044311523
    10. '_mask' → logprob: -13.326086044311523

Token 304: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7999554872512817
    2. '(d' → logprob: -0.9249554872512817
    3. ' (' → logprob: -2.299955368041992
    4. ' d' → logprob: -2.924955368041992
    5. '(' → logprob: -9.299955368041992
    6. '((' → logprob: -10.674955368041992
    7. '   ' → logprob: -10.924955368041992
    8. ' ' → logprob: -11.299955368041992
    9. '	d' → logprob: -11.924955368041992
    10. '(N' → logprob: -12.174955368041992

Token 305: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5502333641052246
    2. ' *' → logprob: -1.1752333641052246
    3. '*N' → logprob: -2.1752333641052246
    4. '-' → logprob: -7.675233364105225
    5. '   ' → logprob: -8.675233840942383
    6. '#' → logprob: -10.175233840942383
    7. ' -' → logprob: -10.550233840942383
    8. ' ' → logprob: -10.800233840942383
    9. '*num' → logprob: -11.050233840942383
    10. '
' → logprob: -11.050233840942383

Token 306: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00047511752927675843
    2. ' N' → logprob: -7.75047492980957
    3. '(N' → logprob: -10.12547492980957
    4. ' (' → logprob: -12.75047492980957
    5. '(' → logprob: -13.75047492980957
    6. ' ' → logprob: -16.25047492980957
    7. 'n' → logprob: -16.62547492980957
    8. '   ' → logprob: -16.75047492980957
    9. '	N' → logprob: -16.87547492980957
    10. '[N' → logprob: -17.50047492980957

Token 307: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.29633572697639465
    2. '+' → logprob: -1.4213356971740723
    3. '*' → logprob: -4.796335697174072
    4. '*N' → logprob: -5.796335697174072
    5. ' *' → logprob: -5.921335697174072
    6. 'N' → logprob: -7.546335697174072
    7. '<|end|>' → logprob: -8.04633617401123
    8. ')' → logprob: -9.67133617401123
    9. '       ' → logprob: -10.17133617401123
    10. ' ' → logprob: -10.54633617401123

Token 308: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12736165523529053
    2. ' (' → logprob: -2.12736177444458
    3. 'a' → logprob: -7.87736177444458
    4. ' a' → logprob: -10.002361297607422
    5. '((' → logprob: -11.877361297607422
    6. '(' → logprob: -13.752361297607422
    7. ' ((' → logprob: -14.752361297607422
    8. ' ' → logprob: -15.502361297607422
    9. '   ' → logprob: -16.252361297607422
    10. '
' → logprob: -16.377361297607422

Token 309: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.282920129597187e-05
    2. '(a' → logprob: -11.500012397766113
    3. ' a' → logprob: -12.875012397766113
    4. ' (' → logprob: -17.50001335144043
    5. '   ' → logprob: -19.62501335144043
    6. '	a' → logprob: -20.00001335144043
    7. ')a' → logprob: -20.75001335144043
    8. ''a' → logprob: -21.25001335144043
    9. ' ' → logprob: -21.37501335144043
    10. '#a' → logprob: -22.12501335144043

Token 310: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07108402252197266
    2. ' -' → logprob: -2.6960840225219727
    3. ')' → logprob: -7.196084022521973
    4. ')-' → logprob: -7.946084022521973
    5. ' ' → logprob: -11.196084022521973
    6. '[' → logprob: -11.571084022521973
    7. '   ' → logprob: -11.946084022521973
    8. '1' → logprob: -12.071084022521973
    9. ')-(' → logprob: -13.071084022521973
    10. ' )' → logprob: -13.821084022521973

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '-' → logprob: -15.1250581741333
    4. '<|end|>' → logprob: -17.625059127807617
    5. ' -' → logprob: -18.625059127807617
    6. '   ' → logprob: -19.250059127807617
    7. '
' → logprob: -19.375059127807617
    8. '0' → logprob: -19.500059127807617
    9. ')' → logprob: -19.625059127807617
    10. '```' → logprob: -20.000059127807617

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.125003814697266
    4. '<|end|>' → logprob: -19.625003814697266
    5. '-' → logprob: -19.750003814697266
    6. '
' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.250003814697266
    8. ')' → logprob: -20.375003814697266
    9. '  ' → logprob: -21.375003814697266
    10. '

' → logprob: -21.500003814697266

Token 313: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019672929774969816
    2. ')
' → logprob: -6.251967430114746
    3. ' )' → logprob: -10.376967430114746
    4. '<|end|>' → logprob: -12.501967430114746
    5. '   ' → logprob: -13.876967430114746
    6. '       ' → logprob: -14.626967430114746
    7. '<|end|>' → logprob: -14.876967430114746
    8. '#' → logprob: -15.501967430114746
    9. ' )
' → logprob: -15.501967430114746
    10. ' ' → logprob: -15.501967430114746

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05604975298047066
    2. ' for' → logprob: -3.5560498237609863
    3. 'for' → logprob: -3.6810498237609863
    4. '<|end|>' → logprob: -7.806049823760986
    5. 'mask' → logprob: -8.931049346923828
    6. '        
' → logprob: -9.681049346923828
    7. ')' → logprob: -10.181049346923828
    8. '
' → logprob: -10.806049346923828
    9. '<|end|>' → logprob: -10.931049346923828
    10. '   ' → logprob: -11.431049346923828

Token 315: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.372294698550832e-06
    2. ' for' → logprob: -11.750009536743164
    3. '       ' → logprob: -13.875009536743164
    4. '   ' → logprob: -14.625009536743164
    5. '	for' → logprob: -17.875009536743164
    6. '```' → logprob: -18.250009536743164
    7. 'mask' → logprob: -18.250009536743164
    8. '
' → logprob: -18.375009536743164
    9. '        
' → logprob: -20.250009536743164
    10. '``' → logprob: -22.000009536743164

Token 316: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022069821134209633
    2. 'j' → logprob: -4.647069931030273
    3. ' i' → logprob: -5.022069931030273
    4. 'offset' → logprob: -5.272069931030273
    5. ' offset' → logprob: -8.272069931030273
    6. ' j' → logprob: -9.022069931030273
    7. 'x' → logprob: -9.397069931030273
    8. 'pos' → logprob: -11.272069931030273
    9. 'shift' → logprob: -11.272069931030273
    10. 'off' → logprob: -12.522069931030273

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859395697712898
    2. 'in' → logprob: -3.0485939979553223
    3. ' ' → logprob: -13.673593521118164
    4. '   ' → logprob: -13.923593521118164
    5. 'In' → logprob: -14.298593521118164
    6. 'd' → logprob: -14.423593521118164
    7. '
' → logprob: -14.548593521118164
    8. '	in' → logprob: -14.673593521118164
    9. 'range' → logprob: -14.673593521118164
    10. '=' → logprob: -15.048593521118164

Token 318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061968810856342316
    2. ' range' → logprob: -2.8119688034057617
    3. '	range' → logprob: -14.936968803405762
    4. ' ' → logprob: -15.061968803405762
    5. '(range' → logprob: -15.061968803405762
    6. 'start' → logprob: -15.811968803405762
    7. '   ' → logprob: -17.561969757080078
    8. ' xrange' → logprob: -17.811969757080078
    9. '  ' → logprob: -18.561969757080078
    10. '.range' → logprob: -19.186969757080078

Token 319: '(k' (ID: 12125)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.12906810641288757
    2. '(k' → logprob: -2.12906813621521
    3. 'start' → logprob: -6.629067897796631
    4. '(mask' → logprob: -7.879067897796631
    5. '(' → logprob: -8.129068374633789
    6. '(x' → logprob: -9.129068374633789
    7. ' (' → logprob: -10.754068374633789
    8. ' start' → logprob: -11.879068374633789
    9. '((' → logprob: -13.379068374633789
    10. 'mask' → logprob: -14.129068374633789

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16069351136684418
    2. '):
' → logprob: -1.9106935262680054
    3. '(start' → logprob: -8.535693168640137
    4. 'start' → logprob: -8.785693168640137
    5. ')' → logprob: -9.910693168640137
    6. '[start' → logprob: -11.160693168640137
    7. ' ):' → logprob: -11.285693168640137
    8. '   ' → logprob: -11.410693168640137
    9. '
' → logprob: -12.160693168640137
    10. '):
' → logprob: -12.410693168640137

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00438253628090024
    2. ' mask' → logprob: -5.754382610321045
    3. 'mask' → logprob: -6.879382610321045
    4. '               ' → logprob: -10.129382133483887
    5. '       ' → logprob: -10.629382133483887
    6. '(mask' → logprob: -10.754382133483887
    7. '```' → logprob: -10.754382133483887
    8. '	mask' → logprob: -11.004382133483887
    9. '	       ' → logprob: -11.254382133483887
    10. '
' → logprob: -11.504382133483887

Token 322: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.01815931126475334
    2. ' mask' → logprob: -4.01815938949585
    3. '           ' → logprob: -12.018158912658691
    4. '	mask' → logprob: -13.393158912658691
    5. '   ' → logprob: -14.018158912658691
    6. '       ' → logprob: -14.518158912658691
    7. '(mask' → logprob: -14.768158912658691
    8. '_mask' → logprob: -15.893158912658691
    9. '```' → logprob: -17.518159866333008
    10. ' ' → logprob: -17.643159866333008

Token 323: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0040807779878377914
    2. ' |=' → logprob: -5.504080772399902
    3. ' <<=' → logprob: -14.129080772399902
    4. ' |' → logprob: -14.129080772399902
    5. '|=
' → logprob: -14.879080772399902
    6. '<<' → logprob: -15.879080772399902
    7. '=' → logprob: -16.00408172607422
    8. ' ' → logprob: -16.62908172607422
    9. '1' → logprob: -16.87908172607422
    10. '```' → logprob: -17.50408172607422

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '(' → logprob: -10.87503433227539
    3. ' ' → logprob: -11.12503433227539
    4. ' (' → logprob: -16.50003433227539
    5. '   ' → logprob: -17.25003433227539
    6. '
' → logprob: -19.62503433227539
    7. '```' → logprob: -22.00003433227539
    8. '(
' → logprob: -22.75003433227539
    9. '  ' → logprob: -22.87503433227539
    10. '[' → logprob: -23.62503433227539

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -9.625066757202148
    3. ' ' → logprob: -15.500066757202148
    4. '   ' → logprob: -17.50006675720215
    5. ' (' → logprob: -18.75006675720215
    6. '```' → logprob: -18.87506675720215
    7. '
' → logprob: -20.12506675720215
    8. '[' → logprob: -22.12506675720215
    9. '           ' → logprob: -22.25006675720215
    10. '(
' → logprob: -22.37506675720215

Token 326: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.12729468941688538
    2. ' <<' → logprob: -2.1272947788238525
    3. '<<(' → logprob: -8.127294540405273
    4. '<<<' → logprob: -9.877294540405273
    5. '()<<' → logprob: -12.127294540405273
    6. ' <<=' → logprob: -12.502294540405273
    7. '<' → logprob: -12.877294540405273
    8. '1' → logprob: -13.502294540405273
    9. '```' → logprob: -13.627294540405273
    10. ' ' → logprob: -13.752294540405273

Token 327: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0067581175826489925
    2. 'start' → logprob: -5.006758213043213
    3. '[start' → logprob: -10.756757736206055
    4. ' (' → logprob: -10.881757736206055
    5. '(' → logprob: -13.631757736206055
    6. ' start' → logprob: -14.256757736206055
    7. '(st' → logprob: -15.131757736206055
    8. '   ' → logprob: -16.256757736206055
    9. '=start' → logprob: -16.256757736206055
    10. '(stop' → logprob: -16.506757736206055

Token 328: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00016825977945700288
    2. '(start' → logprob: -9.125167846679688
    3. ' start' → logprob: -9.750167846679688
    4. '[start' → logprob: -14.250167846679688
    5. '   ' → logprob: -15.375167846679688
    6. '(' → logprob: -16.250167846679688
    7. ' (' → logprob: -17.500167846679688
    8. '=start' → logprob: -18.000167846679688
    9. ' ' → logprob: -18.500167846679688
    10. '	start' → logprob: -18.625167846679688

Token 329: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19274406135082245
    2. ' +' → logprob: -1.9427440166473389
    3. '+x' → logprob: -3.442744016647339
    4. 'x' → logprob: -11.442744255065918
    5. '+
' → logprob: -12.192744255065918
    6. ' x' → logprob: -13.192744255065918
    7. ' +
' → logprob: -13.817744255065918
    8. '＋' → logprob: -15.817744255065918
    9. '+k' → logprob: -15.942744255065918
    10. ')+' → logprob: -16.1927433013916

Token 330: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. ')x' → logprob: -19.125009536743164
    4. '(x' → logprob: -21.125009536743164
    5. '	x' → logprob: -22.125009536743164
    6. '
' → logprob: -22.500009536743164
    7. ')' → logprob: -23.000009536743164
    8. '"x' → logprob: -23.500009536743164
    9. '<|end|>' → logprob: -23.500009536743164
    10. '   ' → logprob: -23.875009536743164

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ' )' → logprob: -11.250022888183594
    3. ')
' → logprob: -11.750022888183594
    4. '<|end|>' → logprob: -13.750022888183594
    5. '       ' → logprob: -14.875022888183594
    6. '),' → logprob: -17.000022888183594
    7. '   ' → logprob: -17.000022888183594
    8. '))' → logprob: -17.250022888183594
    9. ')

' → logprob: -17.375022888183594
    10. ')#' → logprob: -17.625022888183594

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23322908580303192
    2. '   ' → logprob: -1.8582290410995483
    3. '<|end|>' → logprob: -3.108229160308838
    4. 'classes' → logprob: -5.983229160308838
    5. '```' → logprob: -6.858229160308838
    6. ' classes' → logprob: -6.858229160308838
    7. '<|end|>' → logprob: -6.983229160308838
    8. '
' → logprob: -7.733229160308838
    9. ')' → logprob: -7.983229160308838
    10. '(classes' → logprob: -8.10822868347168

Token 333: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' (adapté à ' classes') → logprob: -0.09163793176412582
    2. '   ' → logprob: -2.4666378498077393
    3. ' classes' → logprob: -5.966638088226318
    4. '       ' → logprob: -9.96663761138916
    5. '
' → logprob: -10.21663761138916
    6. '(classes' → logprob: -10.21663761138916
    7. '```' → logprob: -12.96663761138916
    8. 'classe' → logprob: -12.96663761138916
    9. 'courses' → logprob: -13.46663761138916
    10. 'class' → logprob: -13.59163761138916

Token 334: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000146687583765015
    2. '.' → logprob: -8.875146865844727
    3. '.app' → logprob: -12.500146865844727
    4. '.ap' → logprob: -14.000146865844727
    5. ').' → logprob: -14.125146865844727
    6. '.setdefault' → logprob: -14.500146865844727
    7. 'append' → logprob: -15.125146865844727
    8. '.push' → logprob: -15.750146865844727
    9. '.add' → logprob: -15.875146865844727
    10. ' .' → logprob: -16.125146865844727

Token 335: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008615754544734955
    2. '(' → logprob: -4.758615970611572
    3. '(('' → logprob: -14.383615493774414
    4. '(("' → logprob: -14.883615493774414
    5. '   ' → logprob: -16.633615493774414
    6. '((_' → logprob: -16.883615493774414
    7. '([' → logprob: -17.633615493774414
    8. '(((' → logprob: -17.883615493774414
    9. '(mask' → logprob: -17.883615493774414
    10. '(
' → logprob: -18.008615493774414

Token 336: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.049382053315639496
    2. 't' → logprob: -3.049381971359253
    3. ' mask' → logprob: -7.674382209777832
    4. '-mask' → logprob: -9.174382209777832
    5. '-t' → logprob: -9.549382209777832
    6. ' t' → logprob: -9.674382209777832
    7. '   ' → logprob: -10.424382209777832
    8. '	mask' → logprob: -11.049382209777832
    9. ' ' → logprob: -11.424382209777832
    10. ' -' → logprob: -11.924382209777832

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.215330409351736e-05
    2. ' ,' → logprob: -10.875041961669922
    3. ',t' → logprob: -11.375041961669922
    4. ',
' → logprob: -11.500041961669922
    5. '),' → logprob: -14.375041961669922
    6. '‌,' → logprob: -15.125041961669922
    7. ')' → logprob: -15.750041961669922
    8. '<|end|>' → logprob: -15.875041961669922
    9. '   ' → logprob: -17.250041961669922
    10. ',),' → logprob: -17.375041961669922

Token 338: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12692926824092865
    2. ' t' → logprob: -2.12692928314209
    3. '	t' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.50192928314209
    5. ')t' → logprob: -15.50192928314209
    6. '   ' → logprob: -15.75192928314209
    7. '
' → logprob: -16.001928329467773
    8. ')' → logprob: -16.251928329467773
    9. '`t' → logprob: -16.376928329467773
    10. '_t' → logprob: -17.126928329467773

Token 339: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009905342012643814
    2. ')' → logprob: -7.250990390777588
    3. '))
' → logprob: -9.000990867614746
    4. ' ))' → logprob: -9.125990867614746
    5. ',' → logprob: -10.125990867614746
    6. ' )' → logprob: -13.375990867614746
    7. '));' → logprob: -13.375990867614746
    8. '),' → logprob: -13.375990867614746
    9. '   ' → logprob: -13.375990867614746
    10. ')))' → logprob: -14.375990867614746

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194802284240723
    2. 'classes' → logprob: -1.2694802284240723
    3. ' classes' → logprob: -2.7694802284240723
    4. '
' → logprob: -2.8944802284240723
    5. '```' → logprob: -5.644480228424072
    6. '    
' → logprob: -6.019480228424072
    7. '(classes' → logprob: -9.144479751586914
    8. ' 
' → logprob: -11.144479751586914
    9. '        
' → logprob: -11.269479751586914
    10. '_classes' → logprob: -11.394479751586914

Token 341: ' #' (ID: 1069)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -2.45848218582978e-06
    2. '#' (adapté à ' #') → logprob: -13.25000286102295
    3. '   ' → logprob: -14.75000286102295
    4. ' classes' → logprob: -15.37500286102295
    5. '(classes' → logprob: -17.750001907348633
    6. 'classe' → logprob: -17.750001907348633
    7. '```' → logprob: -18.000001907348633
    8. '    
' → logprob: -18.625001907348633
    9. 'dp' → logprob: -19.125001907348633
    10. 'cls' → logprob: -20.000001907348633

Token 342: ' DP' (ID: 51992)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.0008895447244867682
    2. '#' → logprob: -8.000889778137207
    3. 'dp' → logprob: -8.000889778137207
    4. '   ' → logprob: -8.500889778137207
    5. ' classes' → logprob: -11.875889778137207
    6. 'DP' → logprob: -12.125889778137207
    7. 'class' → logprob: -14.625889778137207
    8. 'classe' → logprob: -14.625889778137207
    9. '```' → logprob: -15.000889778137207
    10. '    
' → logprob: -15.000889778137207

Token 343: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08989284932613373
    2. '   ' → logprob: -3.714892864227295
    3. ' =' → logprob: -3.714892864227295
    4. ' dp' → logprob: -4.089892864227295
    5. 'from' → logprob: -4.089892864227295
    6. ' from' → logprob: -6.214892864227295
    7. '=' → logprob: -6.839892864227295
    8. '(dp' → logprob: -9.089892387390137
    9. 'DP' → logprob: -9.214892387390137
    10. ',' → logprob: -9.214892387390137

Token 344: ' dict' (ID: 11878)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09742000699043274
    2. 'from' → logprob: -2.8474199771881104
    3. ' dp' → logprob: -3.5974199771881104
    4. ' from' → logprob: -5.0974202156066895
    5. '   ' → logprob: -7.3474202156066895
    6. 'import' → logprob: -7.9724202156066895
    7. '#' → logprob: -8.972419738769531
    8. 'max' → logprob: -8.972419738769531
    9. ' import' → logprob: -10.847419738769531
    10. ' max' → logprob: -11.472419738769531

Token 345: ' clé' (ID: 83188)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.070970319211483
    2. 'dp' → logprob: -3.070970296859741
    3. '=' → logprob: -4.07097053527832
    4. 'from' → logprob: -6.19597053527832
    5. '   ' → logprob: -6.32097053527832
    6. '_dp' → logprob: -7.82097053527832
    7. ' dp' → logprob: -8.57097053527832
    8. 'DP' → logprob: -8.69597053527832
    9. '={' → logprob: -8.82097053527832
    10. '(dp' → logprob: -8.94597053527832

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12369634956121445
    2. '=' → logprob: -2.8736963272094727
    3. '   ' → logprob: -3.7486963272094727
    4. 'dp' → logprob: -4.748696327209473
    5. '_dp' → logprob: -4.998696327209473
    6. 's' → logprob: -5.498696327209473
    7. '={' → logprob: -5.873696327209473
    8. ',' → logprob: -6.373696327209473
    9. '=dict' → logprob: -6.498696327209473
    10. '={}' → logprob: -6.748696327209473

Token 347: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.2793237268924713
    2. '(' → logprob: -2.6543238162994385
    3. ' (' → logprob: -2.6543238162994385
    4. 'mask' → logprob: -2.9043238162994385
    5. '(m' → logprob: -3.1543238162994385
    6. 'mas' → logprob: -6.779323577880859
    7. '(int' → logprob: -6.779323577880859
    8. '(state' → logprob: -6.904323577880859
    9. ' mask' → logprob: -7.404323577880859
    10. 'tuple' → logprob: -8.52932357788086

Token 348: 'mas' (ID: 4227)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.16173440217971802
    2. '(mask' → logprob: -2.1617343425750732
    3. '(' → logprob: -4.036734580993652
    4. ' (' → logprob: -5.161734580993652
    5. ' mask' → logprob: -5.661734580993652
    6. 'occup' → logprob: -6.161734580993652
    7. 'mas' → logprob: -6.161734580993652
    8. '(m' → logprob: -6.911734580993652
    9. ')' → logprob: -7.786734580993652
    10. '   ' → logprob: -8.411734580993652

Token 349: 'que' (ID: 1126)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010681778658181429
    2. 'que' → logprob: -7.126068115234375
    3. 'sk' → logprob: -9.001068115234375
    4. 'q' → logprob: -10.001068115234375
    5. 'ask' → logprob: -10.251068115234375
    6. 'kup' → logprob: -10.751068115234375
    7. 'ked' → logprob: -11.126068115234375
    8. 'mask' → logprob: -12.001068115234375
    9. 'ques' → logprob: -12.251068115234375
    10. 'quer' → logprob: -12.876068115234375

Token 350: '_' (ID: 62)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12928369641304016
    2. '_' → logprob: -2.5042836666107178
    3. ' ,' → logprob: -4.129283905029297
    4. '   ' → logprob: -5.129283905029297
    5. 'd' → logprob: -5.879283905029297
    6. '_occ' → logprob: -5.879283905029297
    7. 'occupation' → logprob: -6.004283905029297
    8. ' d' → logprob: -6.004283905029297
    9. '_oc' → logprob: -6.129283905029297
    10. '_mask' → logprob: -6.879283905029297

Token 351: 'occupation' (ID: 99142)
  Prédit: 'occupation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupation' → logprob: -0.08657876402139664
    2. 'occup' → logprob: -2.836578845977783
    3. ' occupation' → logprob: -4.211578845977783
    4. 'ocup' → logprob: -5.461578845977783
    5. 'd' → logprob: -6.586578845977783
    6. 'oc' → logprob: -6.836578845977783
    7. ',' → logprob: -6.836578845977783
    8. 'occ' → logprob: -7.586578845977783
    9. ' d' → logprob: -7.961578845977783
    10. 'occupied' → logprob: -8.211578369140625

Token 352: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002336043631657958
    2. ' ,' → logprob: -6.127336025238037
    3. ')' → logprob: -10.877336502075195
    4. ',
' → logprob: -11.002336502075195
    5. ',int' → logprob: -11.002336502075195
    6. ',class' → logprob: -11.002336502075195
    7. ',)' → logprob: -11.752336502075195
    8. ',num' → logprob: -11.752336502075195
    9. ',d' → logprob: -11.752336502075195
    10. '),' → logprob: -11.877336502075195

Token 353: 'ours' (ID: 2327)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.41540005803108215
    2. 'ours' → logprob: -1.7904000282287598
    3. 're' → logprob: -2.9154000282287598
    4. 'ré' → logprob: -3.1654000282287598
    5. 'rene' → logprob: -4.66540002822876
    6. 'ourse' → logprob: -5.04040002822876
    7. 'om' → logprob: -5.29040002822876
    8. 'rs' → logprob: -5.29040002822876
    9. 'urs' → logprob: -5.41540002822876
    10. 'on' → logprob: -5.41540002822876

Token 354: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011270513758063316
    2. '_' → logprob: -5.011270523071289
    3. ' ,' → logprob: -6.261270523071289
    4. '),' → logprob: -7.136270523071289
    5. '_taken' → logprob: -7.761270523071289
    6. '_,' → logprob: -8.136270523071289
    7. ')' → logprob: -8.136270523071289
    8. 's' → logprob: -8.636270523071289
    9. 'occup' → logprob: -9.136270523071289
    10. ',
' → logprob: -9.261270523071289

Token 355: ' valeur' (ID: 41664)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8692169189453125
    2. ' nb' → logprob: -0.8692169189453125
    3. 'nombre' → logprob: -3.1192169189453125
    4. ' taken' → logprob: -3.4942169189453125
    5. 'nb' → logprob: -3.7442169189453125
    6. ' nbr' → logprob: -3.9942169189453125
    7. ' count' → logprob: -5.2442169189453125
    8. ' number' → logprob: -5.2442169189453125
    9. ' l' → logprob: -5.4942169189453125
    10. ' k' → logprob: -5.6192169189453125

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334033012390137
    2. '=' → logprob: -0.7584033012390137
    3. ',' → logprob: -8.883403778076172
    4. '=int' → logprob: -9.008403778076172
    5. 'max' → logprob: -9.133403778076172
    6. '=max' → logprob: -9.258403778076172
    7. ':' → logprob: -9.383403778076172
    8. ')' → logprob: -9.508403778076172
    9. '=lambda' → logprob: -10.008403778076172
    10. '=dict' → logprob: -10.258403778076172

Token 357: ' bonheur' (ID: 78970)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6447129845619202
    2. '{' → logprob: -1.3947129249572754
    3. 'dict' → logprob: -3.1447129249572754
    4. 't' → logprob: -3.2697129249572754
    5. '[t' → logprob: -3.3947129249572754
    6. '0' → logprob: -4.019712924957275
    7. '(t' → logprob: -4.144712924957275
    8. '(' → logprob: -4.394712924957275
    9. ' (' → logprob: -4.644712924957275
    10. '[-' → logprob: -4.894712924957275

Token 358: ' maximum' (ID: 10562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5910550951957703
    2. '   ' → logprob: -1.841055154800415
    3. 'dp' → logprob: -2.091055154800415
    4. ',' → logprob: -2.216055154800415
    5. ' dp' → logprob: -4.091054916381836
    6. '{' → logprob: -4.466054916381836
    7. '={' → logprob: -4.716054916381836
    8. '=' → logprob: -4.966054916381836
    9. '_dp' → logprob: -5.591054916381836
    10. '(dp' → logprob: -6.341054916381836

Token 359: ' atteint' (ID: 104876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39263635873794556
    2. ' dp' → logprob: -1.6426362991333008
    3. ',' → logprob: -2.767636299133301
    4. '   ' → logprob: -3.267636299133301
    5. ' =' → logprob: -3.767636299133301
    6. '{' → logprob: -6.142636299133301
    7. 'DP' → logprob: -7.267636299133301
    8. '
' → logprob: -7.392636299133301
    9. '_dp' → logprob: -7.392636299133301
    10. '(dp' → logprob: -7.517636299133301

Token 360: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03130253776907921
    2. '   ' → logprob: -3.6563024520874023
    3. ',' → logprob: -6.031302452087402
    4. ' dp' → logprob: -6.156302452087402
    5. 'from' → logprob: -7.781302452087402
    6. ' from' → logprob: -11.031302452087402
    7. 'DP' → logprob: -11.281302452087402
    8. '_dp' → logprob: -12.531302452087402
    9. '	dp' → logprob: -12.531302452087402
    10. ' =' → logprob: -12.781302452087402

Token 361: ' certains' (ID: 30681)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.7487704157829285
    2. 'len' → logprob: -1.8737704753875732
    3. 'mas' → logprob: -2.1237704753875732
    4. '#' → logprob: -2.3737704753875732
    5. 'mask' → logprob: -2.8737704753875732
    6. '(mask' → logprob: -4.373770236968994
    7. 'nombre' → logprob: -4.998770236968994
    8. '(' → logprob: -5.123770236968994
    9. ' (' → logprob: -5.123770236968994
    10. '{}' → logprob: -5.123770236968994

Token 362: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.4123464822769165
    2. 'nombre' → logprob: -2.287346363067627
    3. 'mas' → logprob: -2.412346363067627
    4. 'mask' → logprob: -3.662346363067627
    5. 'classes' → logprob: -3.912346363067627
    6. ' cours' → logprob: -4.287346363067627
    7. 'cr' → logprob: -4.287346363067627
    8. 'cré' → logprob: -4.412346363067627
    9. 'cho' → logprob: -4.787346363067627
    10. ' nombre' → logprob: -4.912346363067627

Token 363: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45607370138168335
    2. 'dp' → logprob: -2.081073760986328
    3. ')' → logprob: -2.206073760986328
    4. '_dp' → logprob: -3.581073760986328
    5. '_taken' → logprob: -3.956073760986328
    6. ' =' → logprob: -4.081073760986328
    7. '   ' → logprob: -4.956073760986328
    8. '_' → logprob: -5.081073760986328
    9. ' dp' → logprob: -5.331073760986328
    10. 'taken' → logprob: -5.456073760986328

Token 364: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10703737288713455
    2. '   ' → logprob: -3.107037305831909
    3. ' dp' → logprob: -3.232037305831909
    4. 'from' → logprob: -4.232037544250488
    5. ' from' → logprob: -6.107037544250488
    6. ',' → logprob: -7.982037544250488
    7. 'DP' → logprob: -8.857037544250488
    8. '_dp' → logprob: -11.107037544250488
    9. '	dp' → logprob: -11.482037544250488
    10. 'import' → logprob: -11.607037544250488

Token 365: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028458409011363983
    2. ' dp' → logprob: -3.6534583568573
    3. 'from' → logprob: -6.653458595275879
    4. '   ' → logprob: -7.403458595275879
    5. ' from' → logprob: -9.028458595275879
    6. '#' (adapté à ' #') → logprob: -9.653458595275879
    7. 'DP' → logprob: -10.403458595275879
    8. 'import' → logprob: -10.528458595275879
    9. '	dp' → logprob: -12.403458595275879
    10. ' DP' → logprob: -13.028458595275879

Token 366: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0027614871505647898
    2. 'from' → logprob: -6.002761363983154
    3. ' dp' → logprob: -9.377761840820312
    4. 'DP' → logprob: -9.377761840820312
    5. '#' → logprob: -9.627761840820312
    6. 'import' → logprob: -10.502761840820312
    7. '   ' → logprob: -10.877761840820312
    8. ' from' → logprob: -13.377761840820312
    9. '	dp' → logprob: -14.002761840820312
    10. 'state' → logprob: -14.877761840820312

Token 367: ' limit' (ID: 5967)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21073150634765625
    2. '_dp' → logprob: -2.4607315063476562
    3. 'from' → logprob: -3.5857315063476562
    4. ' =' → logprob: -3.5857315063476562
    5. ' dp' → logprob: -3.8357315063476562
    6. 'DP' → logprob: -3.8357315063476562
    7. ' from' → logprob: -6.835731506347656
    8. '=' → logprob: -6.960731506347656
    9. 'import' → logprob: -7.085731506347656
    10. '   ' → logprob: -7.585731506347656

Token 368: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4588458240032196
    2. 'é' → logprob: -1.958845853805542
    3. 'ée' → logprob: -2.083845853805542
    4. '=' → logprob: -2.583845853805542
    5. ' =' → logprob: -4.958845615386963
    6. 'és' → logprob: -5.208845615386963
    7. 'def' → logprob: -5.708845615386963
    8. 'ité' → logprob: -6.208845615386963
    9. 'er' → logprob: -6.458845615386963
    10. 'ed' → logprob: -6.833845615386963

Token 369: ' à' (ID: 1221)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0071443319320679
    2. 'la' → logprob: -1.7571443319320679
    3. ' la' → logprob: -1.8821443319320679
    4. ' le' → logprob: -2.1321444511413574
    5. 'les' → logprob: -2.7571444511413574
    6. 'l' → logprob: -3.2571444511413574
    7. 'L' → logprob: -3.3821444511413574
    8. 'à' → logprob: -4.007144451141357
    9. ' les' → logprob: -5.257144451141357
    10. 'max' → logprob: -5.382144451141357

Token 370: ' selection' (ID: 8441)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07174153625965118
    2. ' L' → logprob: -2.6967415809631348
    3. '{}' → logprob: -7.571741580963135
    4. '(L' → logprob: -7.696741580963135
    5. 'l' → logprob: -8.321741104125977
    6. ' (' → logprob: -8.821741104125977
    7. '{' → logprob: -9.071741104125977
    8. '[L' → logprob: -9.196741104125977
    9. '(' → logprob: -10.071741104125977
    10. ' ' → logprob: -10.821741104125977

Token 371: 'ner' (ID: 1247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2589020729064941
    2. '_size' → logprob: -1.5089020729064941
    3. '   ' → logprob: -2.508902072906494
    4. 'nées' → logprob: -2.633902072906494
    5. 'né' → logprob: -2.883902072906494
    6. '_' → logprob: -2.883902072906494
    7. 'nés' → logprob: -3.508902072906494
    8. '_count' → logprob: -3.758902072906494
    9. '=' → logprob: -3.758902072906494
    10. 'née' → logprob: -3.883902072906494

Token 372: ' au' (ID: 2791)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4850669801235199
    2. 'L' → logprob: -0.9850670099258423
    3. ' =' → logprob: -6.235066890716553
    4. 'max' → logprob: -6.735066890716553
    5. ' ' → logprob: -7.360066890716553
    6. ',' → logprob: -7.360066890716553
    7. 'le' → logprob: -7.610066890716553
    8. ' des' → logprob: -7.860066890716553
    9. ' max' → logprob: -7.985066890716553
    10. '=L' → logprob: -8.110067367553711

Token 373: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5365388989448547
    2. 'most' → logprob: -0.9115388989448547
    3. 'max' → logprob: -4.911539077758789
    4. 'L' → logprob: -6.161539077758789
    5. ' most' → logprob: -6.661539077758789
    6. 'maximum' → logprob: -6.786539077758789
    7. ' plus' → logprob: -7.161539077758789
    8. 'moins' → logprob: -7.411539077758789
    9. '+' → logprob: -11.036539077758789
    10. 'mo' → logprob: -11.661539077758789

Token 374: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01815919391810894
    2. ' L' → logprob: -4.01815938949585
    3. '   ' → logprob: -12.268158912658691
    4. '```' → logprob: -14.143158912658691
    5. '`' → logprob: -14.268158912658691
    6. ' ' → logprob: -14.393158912658691
    7. '=L' → logprob: -14.643158912658691
    8. '  ' → logprob: -15.143158912658691
    9. ',' → logprob: -15.143158912658691
    10. '
' → logprob: -15.143158912658691

Token 375: ' cours' (ID: 10138)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6345466375350952
    2. '   ' → logprob: -0.8845466375350952
    3. ' dp' → logprob: -3.1345467567443848
    4. ',' → logprob: -5.134546756744385
    5. '_dp' → logprob: -5.884546756744385
    6. 'DP' → logprob: -6.009546756744385
    7. '
' → logprob: -7.009546756744385
    8. '    
' → logprob: -8.134546279907227
    9. ' DP' → logprob: -8.509546279907227
    10. ')' → logprob: -8.884546279907227

Token 376: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39950358867645264
    2. 'dp' → logprob: -1.1495035886764526
    3. ' dp' → logprob: -5.024503707885742
    4. 'DP' → logprob: -6.024503707885742
    5. ',' → logprob: -6.649503707885742
    6. '    
' → logprob: -6.774503707885742
    7. '
' → logprob: -7.399503707885742
    8. '	dp' → logprob: -9.024503707885742
    9. ' DP' → logprob: -9.274503707885742
    10. 'from' → logprob: -9.524503707885742

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.717835009098053
    2. 'dp' → logprob: -0.717835009098053
    3. 'from' → logprob: -3.967834949493408
    4. ' dp' → logprob: -5.592834949493408
    5. 'DP' → logprob: -6.717834949493408
    6. ' from' → logprob: -7.967834949493408
    7. 'import' → logprob: -9.092835426330566
    8. '	dp' → logprob: -10.342835426330566
    9. ' DP' → logprob: -10.842835426330566
    10. '    
' → logprob: -11.592835426330566

Token 378: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023147763684391975
    2. '   ' → logprob: -4.0231475830078125
    3. 'from' → logprob: -5.3981475830078125
    4. ' dp' → logprob: -8.273147583007812
    5. 'DP' → logprob: -8.773147583007812
    6. 'import' → logprob: -10.773147583007812
    7. ' from' → logprob: -11.023147583007812
    8. '
' → logprob: -12.023147583007812
    9. '    
' → logprob: -12.898147583007812
    10. '	dp' → logprob: -13.148147583007812

Token 379: ' Comme' (ID: 53252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004820514936000109
    2. 'from' → logprob: -5.504820346832275
    3. '   ' → logprob: -7.629820346832275
    4. ' dp' → logprob: -8.754820823669434
    5. 'DP' → logprob: -9.879820823669434
    6. '#' → logprob: -11.004820823669434
    7. 'import' → logprob: -11.129820823669434
    8. ' from' → logprob: -11.879820823669434
    9. '
' → logprob: -12.879820823669434
    10. 'max' → logprob: -12.879820823669434

Token 380: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3613080680370331
    2. 'on' → logprob: -1.4863080978393555
    3. 'le' → logprob: -4.2363080978393555
    4. 'les' → logprob: -4.4863080978393555
    5. 'L' → logprob: -4.7363080978393555
    6. 'la' → logprob: -4.9863080978393555
    7. ' le' → logprob: -4.9863080978393555
    8. ' les' → logprob: -5.3613080978393555
    9. ' la' → logprob: -5.4863080978393555
    10. ' chaque' → logprob: -5.4863080978393555

Token 381: ' doit' (ID: 21822)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -1.2453291416168213
    2. 'a' → logprob: -1.8703291416168213
    3. 'g' → logprob: -1.8703291416168213
    4. ' stock' → logprob: -2.3703291416168213
    5. ' va' → logprob: -2.4953291416168213
    6. ' veut' → logprob: -3.2453291416168213
    7. ' a' → logprob: -3.4953291416168213
    8. 'stock' → logprob: -3.4953291416168213
    9. ' utilise' → logprob: -3.8703291416168213
    10. ' souhaite' → logprob: -4.370328903198242

Token 382: ' aussi' (ID: 9894)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -1.6289883852005005
    2. 'a' → logprob: -2.128988265991211
    3. 'faire' → logprob: -2.628988265991211
    4. 'max' → logprob: -2.753988265991211
    5. ' maxim' → logprob: -2.753988265991211
    6. ' faire' → logprob: -2.878988265991211
    7. ' stock' → logprob: -2.878988265991211
    8. ' aussi' → logprob: -3.128988265991211
    9. 'prendre' → logprob: -3.128988265991211
    10. ' sélectionner' → logprob: -3.378988265991211

Token 383: ' limiter' (ID: 110159)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.470094233751297
    2. 'g' → logprob: -2.2200942039489746
    3. ' gérer' → logprob: -2.7200942039489746
    4. ' prendre' → logprob: -3.4700942039489746
    5. ' garder' → logprob: -3.8450942039489746
    6. 'lim' → logprob: -3.9700942039489746
    7. 'coder' → logprob: -4.095094203948975
    8. 'stock' → logprob: -4.345094203948975
    9. 'tenir' → logprob: -4.345094203948975
    10. 'tracker' → logprob: -4.720094203948975

Token 384: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2909925878047943
    2. ' le' → logprob: -1.4159926176071167
    3. ' par' → logprob: -6.415992736816406
    4. 'nombre' → logprob: -6.415992736816406
    5. 'au' → logprob: -6.790992736816406
    6. 'par' → logprob: -7.165992736816406
    7. 'à' → logprob: -7.290992736816406
    8. 'la' → logprob: -7.415992736816406
    9. ' à' → logprob: -7.415992736816406
    10. ' au' → logprob: -7.540992736816406

Token 385: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.07193070650100708
    2. ' nombre' → logprob: -2.6969306468963623
    3. 'nb' → logprob: -6.321930885314941
    4. ' nb' → logprob: -9.821930885314941
    5. 'number' → logprob: -10.571930885314941
    6. 'nom' → logprob: -10.696930885314941
    7. 'n' → logprob: -10.821930885314941
    8. 'nbr' → logprob: -11.196930885314941
    9. ' ' → logprob: -11.446930885314941
    10. 'num' → logprob: -11.696930885314941

Token 386: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3930211663246155
    2. 'de' → logprob: -1.5180211067199707
    3. '_de' → logprob: -3.2680211067199707
    4. ' des' → logprob: -3.6430211067199707
    5. 'd' → logprob: -4.143021106719971
    6. ' d' → logprob: -4.393021106719971
    7. 'des' → logprob: -5.143021106719971
    8. '_des' → logprob: -6.018021106719971
    9. '_' → logprob: -6.643021106719971
    10. '_c' → logprob: -7.018021106719971

Token 387: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.15835431218147278
    2. ' cours' → logprob: -2.1583542823791504
    3. 'classes' → logprob: -3.7833542823791504
    4. ' classes' → logprob: -5.15835428237915
    5. 'c' → logprob: -7.15835428237915
    6. 'courses' → logprob: -7.28335428237915
    7. '```' → logprob: -8.158354759216309
    8. 'cour' → logprob: -8.783354759216309
    9. 'classe' → logprob: -9.658354759216309
    10. ' ' → logprob: -9.783354759216309

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13325552642345428
    2. ' pris' → logprob: -2.7582554817199707
    3. ' par' → logprob: -5.008255481719971
    4. ' de' → logprob: -5.133255481719971
    5. '   ' → logprob: -5.383255481719971
    6. ' ,' → logprob: -5.508255481719971
    7. '_taken' → logprob: -5.508255481719971
    8. ' sélection' → logprob: -5.883255481719971
    9. ' prises' → logprob: -5.883255481719971
    10. ' à' → logprob: -6.008255481719971

Token 389: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4924357235431671
    2. 'dp' → logprob: -0.9924356937408447
    3. ' dp' → logprob: -4.367435932159424
    4. 'from' → logprob: -6.117435932159424
    5. '   ' → logprob: -6.617435932159424
    6. 'DP' → logprob: -7.242435932159424
    7. ' #' → logprob: -7.242435932159424
    8. ' DP' → logprob: -8.617435455322266
    9. ' from' → logprob: -9.617435455322266
    10. ' on' → logprob: -9.617435455322266

Token 390: ' gard' (ID: 18283)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.9055414199829102
    2. ' devra' → logprob: -1.1555414199829102
    3. ' stock' → logprob: -2.65554141998291
    4. 'va' → logprob: -3.28054141998291
    5. ''ll' → logprob: -3.40554141998291
    6. ' fera' → logprob: -3.78054141998291
    7. 'stock' → logprob: -3.90554141998291
    8. ' faudra' → logprob: -4.15554141998291
    9. ' will' → logprob: -4.53054141998291
    10. ' doit' → logprob: -4.78054141998291

Token 391: 'era' (ID: 2060)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2266473025083542
    2. '=' → logprob: -2.10164737701416
    3. 'def' → logprob: -3.35164737701416
    4. 'e' → logprob: -4.97664737701416
    5. '=None' → logprob: -5.35164737701416
    6. 'u' → logprob: -5.60164737701416
    7. 'es' → logprob: -5.72664737701416
    8. '={}' → logprob: -5.72664737701416
    9. 'le' → logprob: -5.97664737701416
    10. ' =' → logprob: -6.10164737701416

Token 392: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5071865916252136
    2. 'un' → logprob: -1.7571866512298584
    3. 'dp' → logprob: -1.8821866512298584
    4. ' une' → logprob: -3.5071866512298584
    5. ' dp' → logprob: -3.8821866512298584
    6. 'une' → logprob: -4.882186412811279
    7. 'a' → logprob: -5.632186412811279
    8. 'DP' → logprob: -5.757186412811279
    9. ' aussi' → logprob: -6.632186412811279
    10. ',' → logprob: -6.632186412811279

Token 393: ' tableau' (ID: 67053)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.6754193902015686
    2. 'd' → logprob: -1.1754193305969238
    3. 'dp' → logprob: -2.300419330596924
    4. ' diction' → logprob: -3.425419330596924
    5. 'second' → logprob: -4.675419330596924
    6. 'dic' → logprob: -4.925419330596924
    7. 'DP' → logprob: -5.175419330596924
    8. 'table' → logprob: -5.175419330596924
    9. 'comp' → logprob: -5.800419330596924
    10. ' tableau' → logprob: -6.050419330596924

Token 394: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15971051156520844
    2. ' dp' → logprob: -2.28471040725708
    3. ' de' → logprob: -3.90971040725708
    4. 'de' → logprob: -4.28471040725708
    5. '[' → logprob: -5.53471040725708
    6. ' =' → logprob: -6.28471040725708
    7. '_dp' → logprob: -6.40971040725708
    8. ' of' → logprob: -6.78471040725708
    9. 'd' → logprob: -7.53471040725708
    10. '=' → logprob: -8.159710884094238

Token 395: '[l' (ID: 38286)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017550260527059436
    2. '_dp' → logprob: -7.376755237579346
    3. '=' → logprob: -7.501755237579346
    4. 'dp' → logprob: -8.376754760742188
    5. '_size' → logprob: -8.876754760742188
    6. '=[' → logprob: -9.126754760742188
    7. 's' → logprob: -10.876754760742188
    8. 'size' → logprob: -11.751754760742188
    9. '_' → logprob: -12.126754760742188
    10. '_courses' → logprob: -12.126754760742188

Token 396: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10614356398582458
    2. '])' → logprob: -3.6061434745788574
    3. ' =' → logprob: -3.8561434745788574
    4. ']=' → logprob: -4.231143474578857
    5. '][' → logprob: -4.231143474578857
    6. 'p' → logprob: -4.606143474578857
    7. 's' → logprob: -5.106143474578857
    8. ']={' → logprob: -5.981143474578857
    9. '=' → logprob: -6.856143474578857
    10. ' ]' → logprob: -7.481143474578857

Token 397: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.3443295657634735
    2. '{}' → logprob: -1.844329595565796
    3. 'dict' → logprob: -2.594329595565796
    4. '1' → logprob: -3.594329595565796
    5. '(' → logprob: -4.344329357147217
    6. '{' → logprob: -5.094329357147217
    7. ']' → logprob: -5.344329357147217
    8. '0' → logprob: -5.844329357147217
    9. 'max' → logprob: -7.844329357147217
    10. ' mask' → logprob: -7.969329357147217

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00372573034837842
    2. '][' → logprob: -6.753725528717041
    3. ']=' → logprob: -7.003725528717041
    4. 's' → logprob: -7.003725528717041
    5. ' ]' → logprob: -8.1287260055542
    6. '],' → logprob: -9.1287260055542
    7. ']={' → logprob: -9.1287260055542
    8. ' =' → logprob: -9.8787260055542
    9. '])' → logprob: -9.8787260055542
    10. ']:' → logprob: -10.3787260055542

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020911383908241987
    2. '=' → logprob: -6.502090930938721
    3. '   ' → logprob: -7.627090930938721
    4. '=[' → logprob: -10.502091407775879
    5. ':' → logprob: -10.877091407775879
    6. ']' → logprob: -11.252091407775879
    7. 'dp' → logprob: -11.502091407775879
    8. '```' → logprob: -12.002091407775879
    9. ' =[' → logprob: -12.627091407775879
    10. 's' → logprob: -12.877091407775879

Token 400: ' max' (ID: 2999)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2303711324930191
    2. '-b' → logprob: -1.980371117591858
    3. 'dict' → logprob: -3.6053712368011475
    4. '{}' → logprob: -4.355370998382568
    5. ' -' → logprob: -4.730370998382568
    6. 'int' → logprob: -6.105370998382568
    7. 'default' → logprob: -6.230370998382568
    8. 'float' → logprob: -6.230370998382568
    9. '-d' → logprob: -6.355370998382568
    10. ' dict' → logprob: -6.480370998382568

Token 401: ' bonheur' (ID: 78970)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.4946475028991699
    2. '_b' → logprob: -0.9946475028991699
    3. '_' → logprob: -4.86964750289917
    4. '_h' → logprob: -4.99464750289917
    5. ' =' → logprob: -6.36964750289917
    6. '   ' → logprob: -6.86964750289917
    7. '_bo' → logprob: -7.61964750289917
    8. '_t' → logprob: -7.74464750289917
    9. ' bonheur' → logprob: -7.74464750289917
    10. 'b' → logprob: -8.494647979736328

Token 402: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057474084198474884
    2. '   ' → logprob: -3.057474136352539
    3. '=' → logprob: -5.432474136352539
    4. ']' → logprob: -6.682474136352539
    5. '
' → logprob: -7.432474136352539
    6. 'dp' → logprob: -7.807474136352539
    7. ':' → logprob: -7.932474136352539
    8. ',' → logprob: -8.182474136352539
    9. '=[' → logprob: -8.307474136352539
    10. 'import' → logprob: -8.807474136352539

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00907197780907154
    2. 'dp' → logprob: -5.3840718269348145
    3. ' dp' → logprob: -5.8840718269348145
    4. ' =' → logprob: -7.5090718269348145
    5. 'import' → logprob: -7.8840718269348145
    6. '
' → logprob: -8.134072303771973
    7. ',' → logprob: -8.759072303771973
    8. ':' → logprob: -10.259072303771973
    9. '    
' → logprob: -10.259072303771973
    10. '```' → logprob: -10.384072303771973

Token 404: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10427005589008331
    2. 'dp' → logprob: -2.6042699813842773
    3. '
' → logprob: -4.104269981384277
    4. ' dp' → logprob: -5.354269981384277
    5. 'import' → logprob: -6.229269981384277
    6. '    
' → logprob: -6.979269981384277
    7. 'from' → logprob: -8.229269981384277
    8. '```' → logprob: -8.979269981384277
    9. ',' → logprob: -9.104269981384277
    10. 'DP' → logprob: -9.604269981384277

Token 405: ' où' (ID: 15113)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.040350668132305145
    2. ' dp' → logprob: -3.7903506755828857
    3. '   ' → logprob: -4.165350437164307
    4. 'import' → logprob: -7.165350437164307
    5. 'from' → logprob: -7.540350437164307
    6. ' from' → logprob: -9.665350914001465
    7. 'DP' → logprob: -10.915350914001465
    8. '	dp' → logprob: -11.165350914001465
    9. '
' → logprob: -11.415350914001465
    10. ' import' → logprob: -11.665350914001465

Token 406: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003240697318688035
    2. ' l' → logprob: -5.753240585327148
    3. '   ' → logprob: -11.378240585327148
    4. 'import' → logprob: -11.378240585327148
    5. '0' → logprob: -11.503240585327148
    6. 'dp' → logprob: -12.003240585327148
    7. '```' → logprob: -12.253240585327148
    8. '`' → logprob: -12.628240585327148
    9. '	l' → logprob: -13.003240585327148
    10. 'for' → logprob: -13.003240585327148

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19306626915931702
    2. '=' → logprob: -1.9430662393569946
    3. '[' → logprob: -4.818066120147705
    4. '][' → logprob: -5.193066120147705
    5. '=[' → logprob: -5.943066120147705
    6. ']' → logprob: -6.068066120147705
    7. 's' → logprob: -6.193066120147705
    8. '   ' → logprob: -6.193066120147705
    9. 'l' → logprob: -7.068066120147705
    10. ' ' → logprob: -7.193066120147705

Token 408: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12110153585672379
    2. ' nombre' → logprob: -2.8711016178131104
    3. ' number' → logprob: -3.6211016178131104
    4. 'nombre' → logprob: -3.8711016178131104
    5. 'number' → logprob: -5.246101379394531
    6. ' ' → logprob: -5.996101379394531
    7. 'l' → logprob: -6.746101379394531
    8. ' l' → logprob: -8.621101379394531
    9. ' le' → logprob: -8.746101379394531
    10. 'cours' → logprob: -9.121101379394531

Token 409: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0887091159820557
    2. '_courses' → logprob: -1.2137091159820557
    3. '_des' → logprob: -2.2137091159820557
    4. '_de' → logprob: -2.9637091159820557
    5. 'de' → logprob: -3.0887091159820557
    6. ' des' → logprob: -3.0887091159820557
    7. '   ' → logprob: -3.5887091159820557
    8. 'des' → logprob: -3.5887091159820557
    9. '_c' → logprob: -4.463708877563477
    10. '_' → logprob: -5.088708877563477

Token 410: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.16642779111862183
    2. ' cours' → logprob: -1.9164278507232666
    3. 'courses' → logprob: -6.0414276123046875
    4. 'classes' → logprob: -6.6664276123046875
    5. 'c' → logprob: -6.9164276123046875
    6. 'l' → logprob: -8.541427612304688
    7. ' classes' → logprob: -8.666427612304688
    8. 'cour' → logprob: -8.791427612304688
    9. ' ' → logprob: -9.416427612304688
    10. ' courses' → logprob: -9.541427612304688

Token 411: ' pris' (ID: 17549)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4322238564491272
    2. 's' → logprob: -1.1822237968444824
    3. '   ' → logprob: -4.182223796844482
    4. ']' → logprob: -4.182223796844482
    5. '=' → logprob: -5.182223796844482
    6. 'dp' → logprob: -6.557223796844482
    7. ' s' → logprob: -7.057223796844482
    8. '][' → logprob: -7.307223796844482
    9. '_dp' → logprob: -7.432223796844482
    10. ' ' → logprob: -7.682223796844482

Token 412: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034312181174755096
    2. '
' → logprob: -4.2843122482299805
    3. 'dp' → logprob: -4.5343122482299805
    4. ' dp' → logprob: -5.4093122482299805
    5. ' =' → logprob: -5.7843122482299805
    6. ',' → logprob: -7.5343122482299805
    7. '    
' → logprob: -8.03431224822998
    8. 'import' → logprob: -8.90931224822998
    9. '```' → logprob: -8.90931224822998
    10. '=' → logprob: -9.40931224822998

Token 413: ' mask' (ID: 10910)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6925580501556396
    2. ' dp' → logprob: -0.8175580501556396
    3. '   ' → logprob: -3.6925580501556396
    4. 'mask' → logprob: -4.317558288574219
    5. ' mask' → logprob: -4.942558288574219
    6. '#' → logprob: -5.067558288574219
    7. 'from' → logprob: -6.442558288574219
    8. ' #' → logprob: -6.567558288574219
    9. ' from' → logprob: -7.067558288574219
    10. ',' → logprob: -8.317558288574219

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4687068462371826
    2. ']' → logprob: -1.4687068462371826
    3. 's' → logprob: -2.4687068462371826
    4. '=' → logprob: -3.5937068462371826
    5. '][' → logprob: -4.218707084655762
    6. ')' → logprob: -5.843707084655762
    7. ']=' → logprob: -5.843707084655762
    8. ',' → logprob: -5.968707084655762
    9. 'import' → logprob: -5.968707084655762
    10. '   ' → logprob: -6.093707084655762

Token 415: ' occupation' (ID: 54365)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.255295991897583
    2. 'mas' → logprob: -1.505295991897583
    3. 'int' → logprob: -1.630295991897583
    4. 'l' → logprob: -2.005295991897583
    5. 'occup' → logprob: -3.005295991897583
    6. 'occupation' → logprob: -3.255295991897583
    7. 'cré' → logprob: -4.130295753479004
    8. 'ent' → logprob: -4.255295753479004
    9. ' état' → logprob: -5.130295753479004
    10. ' occupation' → logprob: -5.130295753479004

Token 416: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4110928475856781
    2. ']' → logprob: -2.161092758178711
    3. ' =' → logprob: -2.536092758178711
    4. '   ' → logprob: -2.661092758178711
    5. ' s' → logprob: -3.911092758178711
    6. '])' → logprob: -4.661092758178711
    7. ')' → logprob: -4.911092758178711
    8. 'dp' → logprob: -5.161092758178711
    9. '_dp' → logprob: -5.286092758178711
    10. '_s' → logprob: -5.786092758178711

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029954811558127403
    2. 'dp' → logprob: -3.9049549102783203
    3. ' dp' → logprob: -5.40495491027832
    4. '
' → logprob: -5.52995491027832
    5. 'import' → logprob: -8.02995491027832
    6. '```' → logprob: -8.40495491027832
    7. '    
' → logprob: -8.52995491027832
    8. '	dp' → logprob: -9.77995491027832
    9. '_dp' → logprob: -10.77995491027832
    10. 'from' → logprob: -11.40495491027832

Token 418: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00779624842107296
    2. 'MAX' → logprob: -5.757796287536621
    3. '   ' → logprob: -5.882796287536621
    4. 'max' → logprob: -6.882796287536621
    5. 'INF' → logprob: -7.882796287536621
    6. ' dp' → logprob: -8.632796287536621
    7. 'from' (adapté à ' from') → logprob: -8.632796287536621
    8. 'import' → logprob: -10.507796287536621
    9. 'DP' → logprob: -10.632796287536621
    10. ' MAX' → logprob: -13.007796287536621

Token 419: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -9.372294698550832e-06
    2. ' collections' → logprob: -11.750009536743164
    3. 'copy' → logprob: -13.750009536743164
    4. 'math' → logprob: -16.250009536743164
    5. 'array' → logprob: -16.500009536743164
    6. 'bis' → logprob: -17.000009536743164
    7. 'collection' → logprob: -18.250009536743164
    8. 'heap' → logprob: -21.125009536743164
    9. 'it' → logprob: -21.750009536743164
    10. 'collect' → logprob: -21.875009536743164

Token 420: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02469870075583458
    2. 'default' → logprob: -4.024698734283447
    3. 'r' → logprob: -6.024698734283447
    4. ' import' → logprob: -6.274698734283447
    5. ' defaultdict' → logprob: -7.399698734283447
    6. 'ounter' → logprob: -8.024698257446289
    7. 'port' → logprob: -8.399698257446289
    8. 'def' → logprob: -8.899698257446289
    9. 'rt' → logprob: -8.899698257446289
    10. 'abc' → logprob: -9.149698257446289

Token 421: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -2.3199920178740285e-05
    2. ' defaultdict' → logprob: -11.250022888183594
    3. 'deque' → logprob: -11.500022888183594
    4. 'collections' → logprob: -19.125022888183594
    5. '.default' → logprob: -19.875022888183594
    6. '"default' → logprob: -21.375022888183594
    7. '(default' → logprob: -22.125022888183594
    8. ' deque' → logprob: -22.625022888183594
    9. 'def' → logprob: -23.250022888183594
    10. '_default' → logprob: -23.750022888183594

Token 422: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20318062603473663
    2. '   ' → logprob: -1.7031806707382202
    3. ' dp' → logprob: -7.07818078994751
    4. '
' → logprob: -7.32818078994751
    5. 'DP' → logprob: -8.953180313110352
    6. '	dp' → logprob: -9.828180313110352
    7. '    
' → logprob: -10.203180313110352
    8. 'def' → logprob: -10.453180313110352
    9. '_dp' → logprob: -12.578180313110352
    10. 'import' → logprob: -12.953180313110352

Token 423: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28374940156936646
    2. '   ' → logprob: -1.4087493419647217
    3. ' dp' → logprob: -6.658749580383301
    4. 'def' → logprob: -7.283749580383301
    5. '
' → logprob: -7.908749580383301
    6. 'L' → logprob: -9.1587495803833
    7. 'DP' → logprob: -9.6587495803833
    8. 'max' → logprob: -10.6587495803833
    9. '	dp' → logprob: -11.2837495803833
    10. 'INF' → logprob: -11.5337495803833

Token 424: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00015633940347470343
    2. 'L' → logprob: -9.62515640258789
    3. 'MAX' → logprob: -10.00015640258789
    4. 'max' → logprob: -10.50015640258789
    5. '   ' → logprob: -11.25015640258789
    6. 'DP' → logprob: -13.50015640258789
    7. 'INF' → logprob: -13.50015640258789
    8. ' dp' → logprob: -13.75015640258789
    9. '#' → logprob: -15.25015640258789
    10. '
' → logprob: -15.75015640258789

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868851363658905
    2. '=' → logprob: -1.136885166168213
    3. '=[' → logprob: -12.386884689331055
    4. '[' → logprob: -12.761884689331055
    5. ' =[' → logprob: -12.761884689331055
    6. '=[]' → logprob: -12.886884689331055
    7. 's' → logprob: -15.136884689331055
    8. ' ' → logprob: -15.511884689331055
    9. '=

' → logprob: -15.761884689331055
    10. ',' → logprob: -15.761884689331055

Token 426: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015271214069798589
    2. '[{' → logprob: -6.501527309417725
    3. ' [' → logprob: -10.751526832580566
    4. 'default' → logprob: -12.626526832580566
    5. '[[' → logprob: -16.751527786254883
    6. ' [{}' → logprob: -17.376527786254883
    7. ' [{' → logprob: -17.876527786254883
    8. '   ' → logprob: -18.376527786254883
    9. '[array' → logprob: -18.501527786254883
    10. '[class' → logprob: -18.876527786254883

Token 427: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0005828189896419644
    2. '{' → logprob: -7.500582695007324
    3. 'dict' → logprob: -11.375582695007324
    4. '{}' → logprob: -11.625582695007324
    5. '{-' → logprob: -11.625582695007324
    6. '.default' → logprob: -15.250582695007324
    7. '(default' → logprob: -16.00058364868164
    8. ' defaultdict' → logprob: -16.50058364868164
    9. 'collections' → logprob: -17.25058364868164
    10. '"default' → logprob: -18.00058364868164

Token 428: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.128163257315464e-07
    2. ' dict' → logprob: -15.5
    3. 'ict' → logprob: -17.0
    4. 'Dict' → logprob: -18.125
    5. 'ct' → logprob: -18.875
    6. 'd' → logprob: -20.75
    7. 'dic' → logprob: -20.875
    8. 'def' → logprob: -21.75
    9. 'default' → logprob: -23.25
    10. '_dict' → logprob: -23.5

Token 429: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2517627477645874
    2. 'int' → logprob: -2.001762866973877
    3. '(lambda' → logprob: -2.501762866973877
    4. 'lambda' → logprob: -5.251762866973877
    5. '[int' → logprob: -9.501762390136719
    6. ',int' → logprob: -9.751762390136719
    7. '```' → logprob: -10.251762390136719
    8. '<int' → logprob: -10.501762390136719
    9. '   ' → logprob: -10.626762390136719
    10. ']int' → logprob: -11.001762390136719

Token 430: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023999478667974472
    2. ' :' → logprob: -3.7739994525909424
    3. 'lambda' → logprob: -7.5239996910095215
    4. ' lambda' → logprob: -9.648999214172363
    5. ':int' → logprob: -9.773999214172363
    6. '=lambda' → logprob: -10.148999214172363
    7. ':-' → logprob: -10.273999214172363
    8. 'int' → logprob: -11.648999214172363
    9. '(lambda' → logprob: -12.023999214172363
    10. ':
' → logprob: -13.898999214172363

Token 431: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23995313048362732
    2. '-int' → logprob: -2.23995304107666
    3. 'float' → logprob: -2.98995304107666
    4. ' -' → logprob: -3.23995304107666
    5. '-l' → logprob: -4.48995304107666
    6. '-f' → logprob: -5.86495304107666
    7. '-inf' → logprob: -7.23995304107666
    8. 'lambda' → logprob: -7.61495304107666
    9. ' float' → logprob: -8.73995304107666
    10. '-value' → logprob: -8.98995304107666

Token 432: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.152561753988266
    2. '1' → logprob: -2.652561664581299
    3. '10' → logprob: -2.652561664581299
    4. '(' → logprob: -8.152562141418457
    5. 'int' → logprob: -8.652562141418457
    6. 'sys' → logprob: -10.027562141418457
    7. '100' → logprob: -10.527562141418457
    8. '(float' → logprob: -11.152562141418457
    9. ' float' → logprob: -12.527562141418457
    10. '999' → logprob: -15.402562141418457

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009969274513423443
    2. ')]' → logprob: -4.634969234466553
    3. ' )' → logprob: -9.009969711303711
    4. '())' → logprob: -9.634969711303711
    5. ')
' → logprob: -11.634969711303711
    6. ')]
' → logprob: -12.009969711303711
    7. ')])' → logprob: -12.384969711303711
    8. '),' → logprob: -13.384969711303711
    9. '()' → logprob: -13.634969711303711
    10. '))' → logprob: -13.759969711303711

Token 434: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14211644232273102
    2. '()' → logprob: -2.7671165466308594
    3. ' for' → logprob: -3.2671165466308594
    4. ')
' → logprob: -4.017116546630859
    5. 'for' → logprob: -4.517116546630859
    6. ']' → logprob: -7.142116546630859
    7. ',' → logprob: -7.392116546630859
    8. '()
' → logprob: -7.767116546630859
    9. '({' → logprob: -8.89211654663086
    10. '(' → logprob: -9.39211654663086

Token 435: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06494580209255219
    2. '_range' → logprob: -3.314945697784424
    3. 'range' → logprob: -4.064945697784424
    4. ' range' → logprob: -4.939945697784424
    5. ' _' → logprob: -6.814945697784424
    6. '_l' → logprob: -7.314945697784424
    7. '_i' → logprob: -8.814946174621582
    8. 'i' → logprob: -9.064946174621582
    9. '_in' → logprob: -9.439946174621582
    10. ' in' → logprob: -11.314946174621582

Token 436: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.583550642360933e-05
    2. ' range' → logprob: -10.250036239624023
    3. '(range' → logprob: -15.250036239624023
    4. 'in' → logprob: -15.625036239624023
    5. ' in' → logprob: -21.250036239624023
    6. '	range' → logprob: -21.250036239624023
    7. 'rang' → logprob: -22.000036239624023
    8. '   ' → logprob: -22.250036239624023
    9. ')' → logprob: -22.375036239624023
    10. ' ' → logprob: -22.500036239624023

Token 437: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008665625005960464
    2. ' range' → logprob: -4.758665561676025
    3. '(range' → logprob: -9.883666038513184
    4. '(L' → logprob: -17.258665084838867
    5. '	range' → logprob: -18.758665084838867
    6. 'rang' → logprob: -19.133665084838867
    7. '(' → logprob: -19.383665084838867
    8. 'r' → logprob: -19.758665084838867
    9. '   ' → logprob: -21.008665084838867
    10. ' ' → logprob: -21.008665084838867

Token 438: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.012794863432645798
    2. 'L' → logprob: -4.3877949714660645
    3. ' (' → logprob: -8.762794494628906
    4. ' L' → logprob: -9.012794494628906
    5. '(' → logprob: -12.262794494628906
    6. ',L' → logprob: -15.137794494628906
    7. ')L' → logprob: -15.137794494628906
    8. '   ' → logprob: -15.262794494628906
    9. ' ' → logprob: -15.387794494628906
    10. '	L' → logprob: -15.387794494628906

Token 439: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009510979987680912
    2. ' +' → logprob: -5.0095109939575195
    3. ')]' → logprob: -5.8845109939575195
    4. ')]
' → logprob: -13.13451099395752
    5. ')])' → logprob: -13.25951099395752
    6. '+
' → logprob: -13.50951099395752
    7. ')][' → logprob: -13.50951099395752
    8. ')],' → logprob: -14.00951099395752
    9. ' )' → logprob: -14.38451099395752
    10. ')' → logprob: -14.38451099395752

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06939294934272766
    2. 'L' → logprob: -2.9443929195404053
    3. '0' → logprob: -4.444393157958984
    4. '])' → logprob: -7.194393157958984
    5. ' ' → logprob: -7.569393157958984
    6. ')' → logprob: -7.694393157958984
    7. ' L' → logprob: -8.444393157958984
    8. '   ' → logprob: -8.694393157958984
    9. ')]' → logprob: -9.069393157958984
    10. '
' → logprob: -9.319393157958984

Token 441: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.380904672667384e-05
    2. ')]
' → logprob: -11.000033378601074
    3. ')' → logprob: -11.375033378601074
    4. ' )' → logprob: -12.875033378601074
    5. ']' → logprob: -12.875033378601074
    6. ' ]' → logprob: -16.50003433227539
    7. '')]' → logprob: -16.62503433227539
    8. ')]

' → logprob: -16.75003433227539
    9. ')]
' → logprob: -16.75003433227539
    10. '   ' → logprob: -17.12503433227539

Token 442: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001518430421128869
    2. ' dp' → logprob: -6.501518249511719
    3. '   ' → logprob: -11.251518249511719
    4. '	dp' → logprob: -13.001518249511719
    5. '(dp' → logprob: -14.751518249511719
    6. '_dp' → logprob: -15.626518249511719
    7. '```' → logprob: -16.00151824951172
    8. '[' → logprob: -16.87651824951172
    9. ' ' → logprob: -17.00151824951172
    10. '    
' → logprob: -17.87651824951172

Token 443: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.339278580620885e-06
    2. ' dp' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.375001907348633
    4. 'for' → logprob: -18.500001907348633
    5. '[' → logprob: -19.000001907348633
    6. '
' → logprob: -20.000001907348633
    7. '0' → logprob: -20.250001907348633
    8. '#' → logprob: -20.250001907348633
    9. '	dp' → logprob: -20.250001907348633
    10. '```' → logprob: -21.125001907348633

Token 444: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.35706390615087e-05
    2. '0' → logprob: -10.375033378601074
    3. ' [' → logprob: -13.750033378601074
    4. 'def' → logprob: -15.250033378601074
    5. '<|end|>' → logprob: -15.375033378601074
    6. 's' → logprob: -15.750033378601074
    7. '][' → logprob: -16.00003433227539
    8. '[
' → logprob: -16.12503433227539
    9. '<|end|>' → logprob: -16.25003433227539
    10. '```' → logprob: -16.62503433227539

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '[' → logprob: -14.000003814697266
    4. '#' → logprob: -17.125003814697266
    5. '   ' → logprob: -17.562503814697266
    6. ']' → logprob: -18.187503814697266
    7. '=' → logprob: -18.187503814697266
    8. '۰' → logprob: -18.187503814697266
    9. '000' → logprob: -18.312503814697266
    10. '
' → logprob: -18.312503814697266

Token 446: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2773544490337372
    2. '[' → logprob: -1.6523544788360596
    3. ']' → logprob: -3.0273544788360596
    4. ' ][' → logprob: -7.0273542404174805
    5. ']={' → logprob: -7.1523542404174805
    6. '[{' → logprob: -8.65235424041748
    7. '[(' → logprob: -9.27735424041748
    8. ' ]' → logprob: -9.77735424041748
    9. ' [' → logprob: -9.90235424041748
    10. '{' → logprob: -10.40235424041748

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '000' → logprob: -21.0
    4. '00' → logprob: -22.0
    5. '۰' → logprob: -23.375
    6. '   ' → logprob: -24.625
    7. '০' → logprob: -25.75
    8. '(' → logprob: -25.875
    9. '０' → logprob: -26.5
    10. ')' → logprob: -26.5

Token 448: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002581209992058575
    2. ']=' → logprob: -8.375258445739746
    3. ' ]' → logprob: -10.500258445739746
    4. '=' → logprob: -17.50025749206543
    5. ')' → logprob: -19.00025749206543
    6. ']+=' → logprob: -19.12525749206543
    7. ']=-' → logprob: -19.37525749206543
    8. '']' → logprob: -19.62525749206543
    9. '0' → logprob: -19.62525749206543
    10. ']
' → logprob: -20.12525749206543

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. ']=' → logprob: -15.273245811462402
    4. ']' → logprob: -15.773245811462402
    5. ' ' → logprob: -18.52324676513672
    6. ')=' → logprob: -19.39824676513672
    7. ' ' → logprob: -19.89824676513672
    8. ')' → logprob: -19.89824676513672
    9. ',' → logprob: -20.64824676513672
    10. '＝' → logprob: -20.89824676513672

Token 450: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -20.0
    4. '000' → logprob: -21.5
    5. '00' → logprob: -21.875
    6. '০' → logprob: -22.0
    7. '   ' → logprob: -22.625
    8. '０' → logprob: -23.375
    9. '०' → logprob: -23.625
    10. '```' → logprob: -24.0

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -21.125
    4. '   ' → logprob: -23.25
    5. '০' → logprob: -23.375
    6. '00' → logprob: -23.375
    7. '000' → logprob: -23.75
    8. '０' → logprob: -23.875
    9. '०' → logprob: -24.5
    10. '  ' → logprob: -24.625

Token 452: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03927153721451759
    2. '<|end|>' → logprob: -4.289271354675293
    3. ' for' → logprob: -4.914271354675293
    4. 'for' → logprob: -5.039271354675293
    5. '    
' → logprob: -5.039271354675293
    6. '
' → logprob: -5.664271354675293
    7. '<|end|>' → logprob: -7.164271354675293
    8. '	for' → logprob: -9.539271354675293
    9. ',' → logprob: -10.164271354675293
    10. '	
' → logprob: -10.539271354675293

Token 453: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05953631550073624
    2. 'for' → logprob: -3.0595362186431885
    3. '
' → logprob: -4.934536457061768
    4. ' for' → logprob: -6.184536457061768
    5. '    
' → logprob: -6.434536457061768
    6. '	for' → logprob: -11.55953598022461
    7. '  
' → logprob: -12.30953598022461
    8. ' 
' → logprob: -12.43453598022461
    9. '	
' → logprob: -12.55953598022461
    10. '        
' → logprob: -12.93453598022461

Token 454: ' sans' (ID: 9828)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17092221975326538
    2. 'for' → logprob: -2.67092227935791
    3. ' #' → logprob: -3.54592227935791
    4. '0' → logprob: -3.54592227935791
    5. 'initial' → logprob: -5.17092227935791
    6. ' ' → logprob: -5.42092227935791
    7. ' for' → logprob: -5.54592227935791
    8. '
' → logprob: -6.04592227935791
    9. 'max' → logprob: -6.54592227935791
    10. 'empty' → logprob: -6.67092227935791

Token 455: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.16231213510036469
    2. 'prendre' → logprob: -2.5373120307922363
    3. 'classe' → logprob: -3.7873120307922363
    4. 'auc' → logprob: -4.037312030792236
    5. 'r' → logprob: -4.787312030792236
    6. 'prise' → logprob: -4.912312030792236
    7. 'classes' → logprob: -5.662312030792236
    8. ' cours' → logprob: -6.037312030792236
    9. ' aucun' → logprob: -6.037312030792236
    10. 'cour' → logprob: -7.037312030792236

Token 456: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04311029613018036
    2. 'for' → logprob: -3.4181103706359863
    3. ' for' → logprob: -4.793110370635986
    4. '    
' → logprob: -6.918110370635986
    5. '
' → logprob: -9.418109893798828
    6. '	for' → logprob: -10.043109893798828
    7. '<|end|>' → logprob: -12.043109893798828
    8. '	
' → logprob: -12.543109893798828
    9. '  
' → logprob: -13.043109893798828
    10. '        
' → logprob: -13.293109893798828

Token 457: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.017523571848869324
    2. ' de' → logprob: -4.517523765563965
    3. 'd' → logprob: -6.267523765563965
    4. 's' → logprob: -6.517523765563965
    5. 'occup' → logprob: -7.267523765563965
    6. '#' → logprob: -7.392523765563965
    7. 'dep' → logprob: -8.142523765563965
    8. 'bon' → logprob: -8.267523765563965
    9. 'heure' → logprob: -8.767523765563965
    10. 'enc' → logprob: -8.892523765563965

Token 459: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6960352659225464
    2. 'occupation' → logprob: -1.4460352659225464
    3. 'es' → logprob: -2.946035385131836
    4. 'heure' → logprob: -3.071035385131836
    5. 'occup' → logprob: -3.446035385131836
    6. 'bon' → logprob: -3.571035385131836
    7. 'é' → logprob: -3.821035385131836
    8. 'oc' → logprob: -4.321035385131836
    9. 'ocup' → logprob: -4.696035385131836
    10. ''heure' → logprob: -4.946035385131836

Token 460: 'occupation' (ID: 99142)
  Prédit: 'occupation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupation' → logprob: -0.3421402871608734
    2. 'heure' → logprob: -1.3421403169631958
    3. 'emploi' → logprob: -4.467140197753906
    4. 'occup' → logprob: -5.217140197753906
    5. ''heure' → logprob: -5.717140197753906
    6. ' occupation' → logprob: -6.217140197753906
    7. 'bon' → logprob: -6.342140197753906
    8. 'hora' → logprob: -6.717140197753906
    9. ' bonheur' → logprob: -7.592140197753906
    10. 'hor' → logprob: -7.842140197753906

Token 461: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03980884328484535
    2. 'for' → logprob: -3.289808750152588
    3. ' for' → logprob: -6.539808750152588
    4. '    
' → logprob: -8.164809226989746
    5. '
' → logprob: -10.539809226989746
    6. '	for' → logprob: -11.914809226989746
    7. '        
' → logprob: -13.664809226989746
    8. '  
' → logprob: -14.789809226989746
    9. ',' → logprob: -15.164809226989746
    10. '   
' → logprob: -15.289809226989746

Token 462: ' bonheur' (ID: 78970)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20301105082035065
    2. '0' → logprob: -2.7030110359191895
    3. '    
' → logprob: -3.8280110359191895
    4. '   ' → logprob: -3.9530110359191895
    5. ' 
' → logprob: -3.9530110359191895
    6. 'for' → logprob: -4.5780110359191895
    7. '  
' → logprob: -4.7030110359191895
    8. ' ' → logprob: -4.9530110359191895
    9. ' for' → logprob: -5.2030110359191895
    10. '#' → logprob: -5.5780110359191895

Token 463: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016368584474548697
    2. 'for' → logprob: -6.876636981964111
    3. '    
' → logprob: -7.876636981964111
    4. ' for' → logprob: -8.501636505126953
    5. '
' → logprob: -11.001636505126953
    6. '	for' → logprob: -13.126636505126953
    7. '```' → logprob: -14.126636505126953
    8. '        
' → logprob: -14.501636505126953
    9. '<|end|>' → logprob: -15.001636505126953
    10. '	
' → logprob: -15.376636505126953

Token 464: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1774636209011078
    2. 'max' → logprob: -2.5524635314941406
    3. ' =' → logprob: -2.9274635314941406
    4. '0' → logprob: -3.6774635314941406
    5. '
' → logprob: -6.302463531494141
    6. 'for' → logprob: -6.677463531494141
    7. 'possible' → logprob: -7.552463531494141
    8. '=max' → logprob: -7.802463531494141
    9. 'maximum' → logprob: -7.802463531494141
    10. '   ' → logprob: -7.927463531494141

Token 465: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3873346745967865
    2. '   ' → logprob: -1.1373347043991089
    3. ' for' → logprob: -7.887334823608398
    4. '    
' → logprob: -9.512334823608398
    5. '	for' → logprob: -11.387334823608398
    6. '
' → logprob: -13.387334823608398
    7. '```' → logprob: -14.137334823608398
    8. '        
' → logprob: -15.387334823608398
    9. '  
' → logprob: -16.2623348236084
    10. ' 
' → logprob: -17.0123348236084

Token 466: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038301508873701096
    2. '   ' → logprob: -3.288301467895508
    3. ' for' → logprob: -8.288301467895508
    4. '    
' → logprob: -12.038301467895508
    5. '	for' → logprob: -13.413301467895508
    6. '
' → logprob: -13.913301467895508
    7. '```' → logprob: -16.038301467895508
    8. 'classes' → logprob: -16.163301467895508
    9. '  
' → logprob: -17.788301467895508
    10. '   
' → logprob: -18.288301467895508

Token 467: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -12.75000286102295
    3. ' for' → logprob: -15.50000286102295
    4. '    
' → logprob: -19.875003814697266
    5. '	for' → logprob: -20.625003814697266
    6. '```' → logprob: -21.625003814697266
    7. '
' → logprob: -22.000003814697266
    8. 'classes' → logprob: -23.500003814697266
    9. '  
' → logprob: -24.000003814697266
    10. '#' → logprob: -25.125003814697266

Token 468: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.17740651965141296
    2. ' mask' → logprob: -2.3024065494537354
    3. 'l' → logprob: -3.5524065494537354
    4. 'm' → logprob: -4.052406311035156
    5. '(mask' → logprob: -5.552406311035156
    6. ' l' → logprob: -5.552406311035156
    7. 'i' → logprob: -6.177406311035156
    8. ' (' → logprob: -6.427406311035156
    9. '(l' → logprob: -7.302406311035156
    10. ' m' → logprob: -7.302406311035156

Token 469: '_class' (ID: 10602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49606966972351074
    2. '_l' → logprob: -1.7460696697235107
    3. 'l' → logprob: -3.1210696697235107
    4. '_idx' → logprob: -3.4960696697235107
    5. 'in' → logprob: -3.8710696697235107
    6. ' in' → logprob: -3.8710696697235107
    7. '_,' → logprob: -3.9960696697235107
    8. '_mask' → logprob: -4.24606990814209
    9. '_c' → logprob: -4.49606990814209
    10. '_index' → logprob: -4.87106990814209

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ',class' → logprob: -11.875024795532227
    3. ' ,' → logprob: -12.125024795532227
    4. ',m' → logprob: -13.125024795532227
    5. 's' → logprob: -13.375024795532227
    6. 'mask' → logprob: -13.500024795532227
    7. ',_' → logprob: -13.625024795532227
    8. ',n' → logprob: -13.750024795532227
    9. '_,' → logprob: -13.875024795532227
    10. ',c' → logprob: -14.125024795532227

Token 471: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7325523495674133
    2. 'h' → logprob: -0.9825523495674133
    3. 'value' → logprob: -3.3575522899627686
    4. 'score' → logprob: -3.3575522899627686
    5. 'bon' → logprob: -3.3575522899627686
    6. 'val' → logprob: -3.4825522899627686
    7. 'b' → logprob: -5.607552528381348
    8. 'weight' → logprob: -6.107552528381348
    9. 'happy' → logprob: -7.357552528381348
    10. 'bonus' → logprob: -7.982552528381348

Token 472: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2814335227012634
    2. 'in' → logprob: -1.4064335823059082
    3. ')' → logprob: -8.53143310546875
    4. ',' → logprob: -10.53143310546875
    5. 'class' → logprob: -10.90643310546875
    6. '_in' → logprob: -11.28143310546875
    7. '_class' → logprob: -12.28143310546875
    8. '   ' → logprob: -12.53143310546875
    9. ' ' → logprob: -12.90643310546875
    10. 'for' → logprob: -13.40643310546875

Token 473: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.0059342472814023495
    2. ' classes' → logprob: -5.130934238433838
    3. '(classes' → logprob: -12.255934715270996
    4. '   ' → logprob: -14.630934715270996
    5. 'class' → logprob: -15.505934715270996
    6. ' ' → logprob: -17.13093376159668
    7. 'classe' → logprob: -17.38093376159668
    8. '.classes' → logprob: -17.88093376159668
    9. ' clases' → logprob: -18.00593376159668
    10. 'cases' → logprob: -18.63093376159668

Token 474: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11388366669416428
    2. ':
' → logprob: -2.2388837337493896
    3. '       ' → logprob: -6.9888834953308105
    4. '):
' → logprob: -9.738883972167969
    5. ',' → logprob: -10.738883972167969
    6. '   ' → logprob: -10.863883972167969
    7. '):' → logprob: -11.113883972167969
    8. ' :
' → logprob: -11.738883972167969
    9. ' :' → logprob: -12.238883972167969
    10. '=' → logprob: -12.613883972167969

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009856504620984197
    2. ' for' → logprob: -7.125985622406006
    3. '   ' → logprob: -8.875986099243164
    4. 'for' → logprob: -10.125986099243164
    5. '	   ' → logprob: -14.750986099243164
    6. '<|end|>' → logprob: -15.625986099243164
    7. '           ' → logprob: -15.750986099243164
    8. '     ' → logprob: -15.875986099243164
    9. '    ' → logprob: -15.875986099243164
    10. ',' → logprob: -16.125986099243164

Token 476: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01021379604935646
    2. ' for' → logprob: -4.760213851928711
    3. '       ' → logprob: -6.510213851928711
    4. '   ' → logprob: -9.135213851928711
    5. '	for' → logprob: -13.385213851928711
    6. ' ' → logprob: -15.135213851928711
    7. '           ' → logprob: -16.76021385192871
    8. 'new' → logprob: -17.13521385192871
    9. '  ' → logprob: -17.38521385192871
    10. '     ' → logprob: -17.76021385192871

Token 477: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036747753620147705
    2. ' for' → logprob: -6.0036749839782715
    3. '   ' → logprob: -6.7536749839782715
    4. '       ' → logprob: -10.378674507141113
    5. '	for' → logprob: -14.878674507141113
    6. ' ' → logprob: -15.503674507141113
    7. '  ' → logprob: -16.87867546081543
    8. '    ' → logprob: -17.75367546081543
    9. '           ' → logprob: -18.25367546081543
    10. 'new' → logprob: -18.37867546081543

Token 478: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04379751533269882
    2. ' for' → logprob: -3.168797492980957
    3. '=' → logprob: -8.918797492980957
    4. '
' → logprob: -9.043797492980957
    5. '       ' → logprob: -9.168797492980957
    6. '   ' → logprob: -9.543797492980957
    7. 'in' → logprob: -9.543797492980957
    8. 'or' → logprob: -9.543797492980957
    9. ' in' → logprob: -9.543797492980957
    10. 'range' → logprob: -9.793797492980957

Token 479: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.017664365470409393
    2. 'ère' → logprob: -4.267664432525635
    3. '   ' → logprob: -7.017664432525635
    4. 'rate' → logprob: -7.392664432525635
    5. 'érer' → logprob: -7.392664432525635
    6. 'ter' → logprob: -8.142663955688477
    7. 'ér' → logprob: -8.767663955688477
    8. '#' → logprob: -9.517663955688477
    9. 'ére' → logprob: -9.642663955688477
    10. 'r' → logprob: -9.642663955688477

Token 480: ' en' (ID: 469)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6166572570800781
    2. 'l' → logprob: -1.6166572570800781
    3. '   ' → logprob: -1.7416572570800781
    4. ' L' → logprob: -1.7416572570800781
    5. 'for' → logprob: -2.366657257080078
    6. '(L' → logprob: -2.991657257080078
    7. ' for' → logprob: -3.116657257080078
    8. '       ' → logprob: -3.366657257080078
    9. 'from' → logprob: -4.741657257080078
    10. ' l' → logprob: -5.491657257080078

Token 481: ' arrière' (ID: 100451)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2520958483219147
    2. 're' → logprob: -1.5020958185195923
    3. 'reverse' → logprob: -9.002096176147461
    4. 'ré' → logprob: -10.377096176147461
    5. 'for' → logprob: -11.627096176147461
    6. 'r' → logprob: -13.877096176147461
    7. 'rang' → logprob: -13.877096176147461
    8. ' range' → logprob: -14.502096176147461
    9. '   ' → logprob: -15.127096176147461
    10. ' reversed' → logprob: -15.377096176147461

Token 482: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16613976657390594
    2. 'for' → logprob: -2.166139841079712
    3. '       ' → logprob: -4.041139602661133
    4. '   ' → logprob: -4.416139602661133
    5. ' range' → logprob: -5.291139602661133
    6. ' in' → logprob: -5.916139602661133
    7. 'range' → logprob: -7.041139602661133
    8. '	for' → logprob: -10.041139602661133
    9. ',' → logprob: -10.291139602661133
    10. 'r' → logprob: -10.916139602661133

Token 483: ' le' (ID: 505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014174911193549633
    2. 'l' → logprob: -4.264174938201904
    3. 're' → logprob: -12.389174461364746
    4. ' range' → logprob: -12.764174461364746
    5. 'rang' → logprob: -13.139174461364746
    6. 'r' → logprob: -13.514174461364746
    7. 'la' → logprob: -14.889174461364746
    8. '   ' → logprob: -16.014175415039062
    9. 'reverse' → logprob: -16.264175415039062
    10. '```' → logprob: -16.764175415039062

Token 484: ' nombre' (ID: 9733)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.134509021649137e-05
    2. 'for' → logprob: -10.00006103515625
    3. 'l' → logprob: -11.75006103515625
    4. ' range' → logprob: -11.87506103515625
    5. 're' → logprob: -14.00006103515625
    6. 'r' → logprob: -16.12506103515625
    7. '   ' → logprob: -16.12506103515625
    8. 'rang' → logprob: -17.75006103515625
    9. 'reverse' → logprob: -18.25006103515625
    10. '```' → logprob: -19.12506103515625

Token 485: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0530818700790405
    2. ' de' → logprob: -1.0530818700790405
    3. 'for' → logprob: -2.05308198928833
    4. 'de' → logprob: -2.42808198928833
    5. ' for' → logprob: -3.55308198928833
    6. ' range' → logprob: -4.17808198928833
    7. 'range' → logprob: -4.30308198928833
    8. '       ' → logprob: -4.67808198928833
    9. 'd' → logprob: -5.05308198928833
    10. 'des' → logprob: -5.42808198928833

Token 486: ' cours' (ID: 10138)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5764634609222412
    2. 'l' → logprob: -0.8264634609222412
    3. 'cours' → logprob: -8.07646369934082
    4. ' range' → logprob: -8.82646369934082
    5. 'courses' → logprob: -9.82646369934082
    6. 'ranges' → logprob: -12.57646369934082
    7. 'c' → logprob: -13.07646369934082
    8. 're' → logprob: -13.32646369934082
    9. ' l' → logprob: -13.70146369934082
    10. 'course' → logprob: -14.07646369934082

Token 487: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025957118719816208
    2. ' for' → logprob: -4.650957107543945
    3. '   ' → logprob: -4.900957107543945
    4. ',' → logprob: -6.025957107543945
    5. ' range' → logprob: -6.275957107543945
    6. 's' → logprob: -6.650957107543945
    7. 'for' → logprob: -6.900957107543945
    8. ' pour' → logprob: -7.900957107543945
    9. 'range' → logprob: -7.900957107543945
    10. '    ' → logprob: -8.275957107543945

Token 488: ' éviter' (ID: 64013)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014305707067251205
    2. ' l' → logprob: -4.264305591583252
    3. ' éviter' → logprob: -9.26430606842041
    4. '   ' → logprob: -11.13930606842041
    5. 'range' → logprob: -11.13930606842041
    6. ' range' → logprob: -11.38930606842041
    7. '	l' → logprob: -13.38930606842041
    8. 'ev' → logprob: -13.76430606842041
    9. 'év' → logprob: -14.13930606842041
    10. ' ajouter' → logprob: -15.01430606842041

Token 489: ' doubles' (ID: 65870)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4298100769519806
    2. 'l' → logprob: -1.0548100471496582
    3. ' range' → logprob: -7.679810047149658
    4. '   ' → logprob: -7.679810047149658
    5. '       ' → logprob: -9.679810523986816
    6. '	l' → logprob: -10.054810523986816
    7. 'range' → logprob: -10.429810523986816
    8. '    ' → logprob: -10.929810523986816
    9. '           ' → logprob: -12.304810523986816
    10. ' la' → logprob: -12.429810523986816

Token 490: ' comptes' (ID: 96813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12654152512550354
    2. '   ' → logprob: -2.5015416145324707
    3. 'l' → logprob: -3.7515416145324707
    4. ' for' → logprob: -5.001541614532471
    5. 'range' → logprob: -6.251541614532471
    6. '       ' → logprob: -6.876541614532471
    7. 'bou' → logprob: -8.001541137695312
    8. 'prendre' → logprob: -8.251541137695312
    9. 'pour' → logprob: -8.376541137695312
    10. 'loop' → logprob: -8.501541137695312

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012199983932077885
    2. ' for' → logprob: -4.512199878692627
    3. '   ' → logprob: -7.512199878692627
    4. 'for' → logprob: -7.887199878692627
    5. ',' → logprob: -9.012200355529785
    6. '	' → logprob: -10.137200355529785
    7. '	   ' → logprob: -10.637200355529785
    8. '           ' → logprob: -11.637200355529785
    9. ' range' → logprob: -11.637200355529785
    10. '    ' → logprob: -12.012200355529785

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022193768993020058
    2. ' for' → logprob: -4.272193908691406
    3. '   ' → logprob: -4.897193908691406
    4. '	   ' → logprob: -8.772193908691406
    5. '<|end|>' → logprob: -9.522193908691406
    6. '	' → logprob: -9.647193908691406
    7. 'for' → logprob: -9.647193908691406
    8. '	for' → logprob: -9.897193908691406
    9. '           ' → logprob: -10.522193908691406
    10. '	       ' → logprob: -10.772193908691406

Token 493: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16035908460617065
    2. ' for' → logprob: -1.9103591442108154
    3. ' range' → logprob: -9.535359382629395
    4. 'range' → logprob: -9.910359382629395
    5. '   ' → logprob: -12.410359382629395
    6. 'L' → logprob: -12.410359382629395
    7. '       ' → logprob: -12.785359382629395
    8. '	for' → logprob: -13.535359382629395
    9. 'l' → logprob: -15.410359382629395
    10. ' L' → logprob: -15.535359382629395

Token 494: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00014036978245712817
    2. ' l' → logprob: -8.875140190124512
    3. '	l' → logprob: -14.500140190124512
    4. 'L' → logprob: -17.875141143798828
    5. '   ' → logprob: -18.875141143798828
    6. '```' → logprob: -19.000141143798828
    7. 'curr' → logprob: -19.375141143798828
    8. '_l' → logprob: -19.625141143798828
    9. 'len' → logprob: -20.375141143798828
    10. 'num' → logprob: -20.375141143798828

Token 495: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693703174591064
    2. 'in' → logprob: -2.126936912536621
    3. '	in' → logprob: -11.876936912536621
    4. ' ' → logprob: -13.751936912536621
    5. '_in' → logprob: -15.501936912536621
    6. 'In' → logprob: -15.876936912536621
    7. ' 
' → logprob: -16.126937866210938
    8. '
' → logprob: -16.251937866210938
    9. ' ' → logprob: -16.751937866210938
    10. 'L' → logprob: -16.876937866210938

Token 496: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.584861744660884e-05
    2. ' range' → logprob: -10.000045776367188
    3. 're' → logprob: -15.125045776367188
    4. 'rang' → logprob: -17.125045776367188
    5. 'reverse' → logprob: -17.250045776367188
    6. 'r' → logprob: -18.375045776367188
    7. 'L' → logprob: -18.750045776367188
    8. '(range' → logprob: -19.125045776367188
    9. ' reversed' → logprob: -19.625045776367188
    10. 'ran' → logprob: -20.000045776367188

Token 497: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.057743949990254e-05
    2. ' L' → logprob: -10.875020980834961
    3. '	L' → logprob: -14.000020980834961
    4. '(L' → logprob: -14.250020980834961
    5. '   ' → logprob: -17.12502098083496
    6. ',L' → logprob: -18.12502098083496
    7. '[L' → logprob: -18.62502098083496
    8. '>L' → logprob: -19.75002098083496
    9. '=L' → logprob: -20.87502098083496
    10. ')L' → logprob: -21.00002098083496

Token 498: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0499609038233757
    2. '-' → logprob: -3.4249608516693115
    3. ' -' → logprob: -4.799961090087891
    4. ' ,' → logprob: -4.924961090087891
    5. ',
' → logprob: -7.424961090087891
    6. ',-' → logprob: -9.67496109008789
    7. '	' → logprob: -12.29996109008789
    8. '   ' → logprob: -12.67496109008789
    9. ' ,
' → logprob: -13.04996109008789
    10. ' ,-' → logprob: -13.17496109008789

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -16.500001907348633
    4. '```' → logprob: -17.250001907348633
    5. '
' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '-' → logprob: -18.625001907348633
    8. '  ' → logprob: -18.750001907348633
    9. ',' → logprob: -18.750001907348633
    10. 'from' → logprob: -19.125001907348633

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021831797494087368
    2. ' ,' → logprob: -8.750218391418457
    3. ',-' → logprob: -9.750218391418457
    4. ',
' → logprob: -13.750218391418457
    5. ',None' → logprob: -15.625218391418457
    6. ' ,-' → logprob: -16.75021743774414
    7. '   ' → logprob: -16.87521743774414
    8. ',len' → logprob: -17.87521743774414
    9. '       ' → logprob: -18.12521743774414
    10. ',to' → logprob: -18.25021743774414

Token 501: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.493430894101039e-05
    2. ' -' → logprob: -9.500075340270996
    3. '   ' → logprob: -20.25007438659668
    4. '0' → logprob: -21.25007438659668
    5. ' ' → logprob: -22.00007438659668
    6. '-
' → logprob: -22.37507438659668
    7. '  ' → logprob: -22.37507438659668
    8. '	' → logprob: -22.50007438659668
    9. '−' → logprob: -22.75007438659668
    10. '
' → logprob: -23.37507438659668

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '
' → logprob: -20.125
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -22.125
    6. '

' → logprob: -22.25
    7. ' -' → logprob: -22.875
    8. '１' → logprob: -23.25
    9. '-' → logprob: -23.25
    10. '2' → logprob: -23.5

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016825977945700288
    2. ',-' → logprob: -9.000167846679688
    3. '-' → logprob: -10.500167846679688
    4. ' ,' → logprob: -11.125167846679688
    5. ' -' → logprob: -13.375167846679688
    6. '   ' → logprob: -14.625167846679688
    7. ',
' → logprob: -15.000167846679688
    8. ' ,-' → logprob: -15.875167846679688
    9. '       ' → logprob: -17.125167846679688
    10. '-,' → logprob: -17.250167846679688

Token 504: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019287518225610256
    2. ' -' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. ' ' → logprob: -16.876928329467773
    5. ')' → logprob: -17.001928329467773
    6. '):
' → logprob: -17.126928329467773
    7. ',' → logprob: -17.251928329467773
    8. '-
' → logprob: -17.626928329467773
    9. ',-' → logprob: -17.751928329467773
    10. '  ' → logprob: -18.751928329467773

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -19.625
    5. ')' → logprob: -20.125
    6. '2' → logprob: -20.4375
    7. ',' → logprob: -20.625
    8. '১' → logprob: -21.25
    9. '):
' → logprob: -21.5625
    10. '
' → logprob: -21.5625

Token 506: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4743688702583313
    2. '):' → logprob: -0.9743688702583313
    3. '):
' → logprob: -8.974369049072266
    4. '   ' → logprob: -9.474369049072266
    5. '       ' → logprob: -9.724369049072266
    6. ')' → logprob: -11.599369049072266
    7. '           ' → logprob: -12.224369049072266
    8. ':' → logprob: -12.349369049072266
    9. ',' → logprob: -13.099369049072266
    10. ' ):
' → logprob: -13.099369049072266

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07852067053318024
    2. '       ' → logprob: -2.7035207748413086
    3. ' for' → logprob: -4.953520774841309
    4. '	       ' → logprob: -7.828520774841309
    5. 'for' → logprob: -8.203520774841309
    6. ',' → logprob: -8.203520774841309
    7. '        ' → logprob: -8.953520774841309
    8. '   ' → logprob: -8.953520774841309
    9. '         ' → logprob: -9.453520774841309
    10. ':' → logprob: -9.953520774841309

Token 508: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09970303624868393
    2. 'for' (adapté à ' for') → logprob: -2.474703073501587
    3. ' for' → logprob: -4.599702835083008
    4. '	       ' → logprob: -7.974702835083008
    5. '               ' → logprob: -8.474702835083008
    6. '		' → logprob: -10.099702835083008
    7. '       ' → logprob: -10.849702835083008
    8. '	for' → logprob: -11.474702835083008
    9. '          ' → logprob: -12.224702835083008
    10. '   ' → logprob: -12.224702835083008

Token 509: ' occ' (ID: 4138)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.36513254046440125
    2. 'occ' → logprob: -1.6151325702667236
    3. 'occup' → logprob: -2.6151325702667236
    4. 'occupation' → logprob: -4.4901323318481445
    5. 'occupied' → logprob: -4.6151323318481445
    6. 'm' → logprob: -5.9901323318481445
    7. 'curr' → logprob: -6.1151323318481445
    8. 'oc' → logprob: -6.2401323318481445
    9. 'used' → logprob: -6.8651323318481445
    10. 'ocup' → logprob: -6.8651323318481445

Token 510: '_mask' (ID: 21732)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.27613455057144165
    2. ' in' → logprob: -1.5261344909667969
    3. 'u' → logprob: -4.526134490966797
    4. '_mask' → logprob: -5.526134490966797
    5. 'cup' → logprob: -5.651134490966797
    6. '   ' → logprob: -6.776134490966797
    7. 'mask' → logprob: -6.901134490966797
    8. 'upy' → logprob: -7.401134490966797
    9. ',' → logprob: -7.776134490966797
    10. 'upt' → logprob: -8.151134490966797

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004385132808238268
    2. ' in' → logprob: -5.754384994506836
    3. 'in' → logprob: -6.879384994506836
    4. ' ,' → logprob: -8.754384994506836
    5. ',in' → logprob: -11.254384994506836
    6. '_in' → logprob: -13.879384994506836
    7. ',next' → logprob: -13.879384994506836
    8. ',val' → logprob: -14.629384994506836
    9. ',current' → logprob: -14.754384994506836
    10. 's' → logprob: -14.879384994506836

Token 512: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9168547987937927
    2. 'bon' → logprob: -1.1668548583984375
    3. 'score' → logprob: -1.7918548583984375
    4. 'value' → logprob: -2.7918548583984375
    5. 'h' → logprob: -3.1668548583984375
    6. 'happy' → logprob: -5.5418548583984375
    7. 'b' → logprob: -5.5418548583984375
    8. 'current' → logprob: -5.6668548583984375
    9. 'bh' → logprob: -6.0418548583984375
    10. 'curr' → logprob: -6.5418548583984375

Token 513: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007614201866090298
    2. 'in' → logprob: -4.8826141357421875
    3. ' ' → logprob: -12.382614135742188
    4. ',' → logprob: -13.882614135742188
    5. ' ' → logprob: -15.007614135742188
    6. '	in' → logprob: -15.007614135742188
    7. 's' → logprob: -15.132614135742188
    8. ')' → logprob: -15.132614135742188
    9. '<|end|>' → logprob: -15.382614135742188
    10. '  ' → logprob: -15.632614135742188

Token 514: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.643152740551159e-05
    2. ' dp' → logprob: -10.750036239624023
    3. 'list' → logprob: -11.125036239624023
    4. '(dp' → logprob: -16.250036239624023
    5. '_dp' → logprob: -16.250036239624023
    6. '	dp' → logprob: -17.625036239624023
    7. ' list' → logprob: -18.375036239624023
    8. 'd' → logprob: -19.250036239624023
    9. '.dp' → logprob: -19.500036239624023
    10. 'DP' → logprob: -19.875036239624023

Token 515: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.000000953674316
    3. '           ' → logprob: -15.750000953674316
    4. '       ' → logprob: -16.25
    5. ' [' → logprob: -16.5
    6. '   ' → logprob: -17.0
    7. 'l' → logprob: -17.375
    8. '[
' → logprob: -17.75
    9. '(l' → logprob: -18.375
    10. 'in' → logprob: -18.5

Token 516: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.04815587401390076
    2. '].' → logprob: -3.5481557846069336
    3. 'items' → logprob: -4.673155784606934
    4. ').' → logprob: -5.048155784606934
    5. '.iteritems' → logprob: -6.173155784606934
    6. '.' → logprob: -9.423155784606934
    7. ' items' → logprob: -9.548155784606934
    8. '_items' → logprob: -10.173155784606934
    9. ' .' → logprob: -10.298155784606934
    10. '       ' → logprob: -10.548155784606934

Token 517: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -3.128163257315464e-07
    2. '.items' → logprob: -16.0
    3. ' items' → logprob: -16.5
    4. '	items' → logprob: -22.875
    5. 'values' → logprob: -23.0
    6. '_items' → logprob: -23.0
    7. 'item' → logprob: -23.5
    8. '```' → logprob: -23.75
    9. '(items' → logprob: -23.875
    10. '/items' → logprob: -25.25

Token 518: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3870137929916382
    2. '():
' → logprob: -1.1370137929916382
    3. '()' → logprob: -9.38701343536377
    4. '():
' → logprob: -9.88701343536377
    5. ':' → logprob: -12.38701343536377
    6. '()):
' → logprob: -13.26201343536377
    7. '():

' → logprob: -13.88701343536377
    8. '(' → logprob: -14.26201343536377
    9. '           ' → logprob: -15.38701343536377
    10. '       ' → logprob: -16.262014389038086

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.490809417096898e-05
    2. '           ' → logprob: -11.000055313110352
    3. ' if' → logprob: -11.000055313110352
    4. '                   ' → logprob: -12.000055313110352
    5. '              ' → logprob: -12.125055313110352
    6. '                ' → logprob: -12.875055313110352
    7. '             ' → logprob: -13.375055313110352
    8. 'if' → logprob: -13.500055313110352
    9. '	           ' → logprob: -14.000055313110352
    10. '                
' → logprob: -14.125055313110352

Token 520: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10464664548635483
    2. ' if' → logprob: -2.854646682739258
    3. '                   ' → logprob: -3.604646682739258
    4. '               ' → logprob: -4.229646682739258
    5. '   ' → logprob: -11.104646682739258
    6. '	if' → logprob: -12.479646682739258
    7. '           ' → logprob: -13.229646682739258
    8. '                ' → logprob: -13.729646682739258
    9. '                 ' → logprob: -14.229646682739258
    10. '                       ' → logprob: -14.229646682739258

Token 521: ' val' (ID: 1459)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03863726183772087
    2. '(mask' → logprob: -3.913637161254883
    3. ' (' → logprob: -4.038637161254883
    4. 'occ' → logprob: -9.163637161254883
    5. '(o' → logprob: -10.038637161254883
    6. '(not' → logprob: -10.538637161254883
    7. '   ' → logprob: -10.538637161254883
    8. '(acc' → logprob: -10.788637161254883
    9. '(val' → logprob: -10.913637161254883
    10. '(m' → logprob: -11.413637161254883

Token 522: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.44693103432655334
    2. '>=' → logprob: -1.821931004524231
    3. '!=-' → logprob: -2.3219311237335205
    4. ' !=' → logprob: -2.4469311237335205
    5. '==' → logprob: -4.696930885314941
    6. '=' → logprob: -6.071930885314941
    7. '==-' → logprob: -6.446930885314941
    8. ')' → logprob: -8.696930885314941
    9. ' >=' → logprob: -8.946930885314941
    10. ' is' → logprob: -9.196930885314941

Token 523: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.636475493200123e-05
    2. ' -' → logprob: -9.500076293945312
    3. '                   ' → logprob: -13.500076293945312
    4. '               ' → logprob: -16.000076293945312
    5. ' ' → logprob: -17.250076293945312
    6. '   ' → logprob: -17.625076293945312
    7. '                       ' → logprob: -18.375076293945312
    8. '                 ' → logprob: -18.875076293945312
    9. '                    ' → logprob: -19.500076293945312
    10. '                  ' → logprob: -19.625076293945312

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -19.0
    4. '2' → logprob: -21.0
    5. '<|end|>' → logprob: -21.375
    6. '-' → logprob: -21.75
    7. '۱' → logprob: -21.75
    8. '   ' → logprob: -22.0
    9. '  ' → logprob: -22.375
    10. '>' → logprob: -22.5625

Token 525: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.24728743731975555
    2. '                   ' → logprob: -1.872287392616272
    3. ':' → logprob: -2.8722875118255615
    4. 'or' → logprob: -4.872287273406982
    5. ':
' → logprob: -7.247287273406982
    6. '                       ' → logprob: -8.99728775024414
    7. '               ' → logprob: -9.62228775024414
    8. ' and' → logprob: -10.12228775024414
    9. '                  ' → logprob: -10.37228775024414
    10. 'and' → logprob: -11.24728775024414

Token 526: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009544872678816319
    2. ' and' → logprob: -4.884544849395752
    3. 'continue' → logprob: -6.884544849395752
    4. '               ' → logprob: -8.13454532623291
    5. ' or' → logprob: -8.63454532623291
    6. ' continue' → logprob: -8.75954532623291
    7. 'and' → logprob: -8.75954532623291
    8. 'if' → logprob: -10.25954532623291
    9. ' if' → logprob: -10.50954532623291
    10. '                       ' → logprob: -10.88454532623291

Token 527: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3264884352684021
    2. '                   ' → logprob: -1.3264884948730469
    3. ' continue' → logprob: -4.451488494873047
    4. '                       ' → logprob: -6.701488494873047
    5. '               ' → logprob: -9.201488494873047
    6. '   ' → logprob: -9.326488494873047
    7. '	continue' → logprob: -10.451488494873047
    8. '           ' → logprob: -11.451488494873047
    9. '
' → logprob: -11.826488494873047
    10. '       ' → logprob: -12.826488494873047

Token 528: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001415618316968903
    2. '                
' → logprob: -9.250141143798828
    3. ' and' → logprob: -10.750141143798828
    4. ' or' → logprob: -12.125141143798828
    5. ' if' → logprob: -12.625141143798828
    6. ',' → logprob: -12.750141143798828
    7. '                ' → logprob: -12.750141143798828
    8. '                   ' → logprob: -13.375141143798828
    9. '              ' → logprob: -13.375141143798828
    10. '                    
' → logprob: -13.875141143798828

Token 529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.491498531133402e-06
    2. '                
' → logprob: -12.250009536743164
    3. 'if' → logprob: -12.875009536743164
    4. '           ' → logprob: -14.500009536743164
    5. '                   ' → logprob: -15.250009536743164
    6. '
' → logprob: -15.375009536743164
    7. ' if' → logprob: -15.375009536743164
    8. '```' → logprob: -15.375009536743164
    9. '			' → logprob: -15.500009536743164
    10. '              ' → logprob: -16.000009536743164

Token 530: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7587003707885742
    2. '               ' → logprob: -0.7587003707885742
    3. ' if' → logprob: -2.758700370788574
    4. '                   ' → logprob: -10.633700370788574
    5. '                
' → logprob: -11.008700370788574
    6. '```' → logprob: -11.133700370788574
    7. '                ' → logprob: -11.883700370788574
    8. '           ' → logprob: -12.008700370788574
    9. '              ' → logprob: -12.383700370788574
    10. '			' → logprob: -14.258700370788574

Token 531: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06804139912128448
    2. '(mask' → logprob: -2.8180413246154785
    3. ' (' → logprob: -5.1930413246154785
    4. 'occ' → logprob: -8.818041801452637
    5. '(o' → logprob: -8.943041801452637
    6. '(not' → logprob: -9.443041801452637
    7. '(m' → logprob: -10.068041801452637
    8. 'mask' → logprob: -10.318041801452637
    9. '(acc' → logprob: -11.943041801452637
    10. '   ' → logprob: -11.943041801452637

Token 532: 'occ' (ID: 16533)
  Prédit: 'occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.06251934915781021
    2. 'mask' → logprob: -2.8125193119049072
    3. '(' → logprob: -8.687519073486328
    4. 'oc' → logprob: -8.687519073486328
    5. '(mask' → logprob: -8.812519073486328
    6. 'occup' → logprob: -10.312519073486328
    7. ' occ' → logprob: -11.937519073486328
    8. 'occur' → logprob: -11.937519073486328
    9. ' (' → logprob: -12.437519073486328
    10. ' mask' → logprob: -12.687519073486328

Token 533: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.512236498361744e-07
    2. 'mask' → logprob: -14.750000953674316
    3. '_MASK' → logprob: -17.25
    4. '_class' → logprob: -18.0
    5. ' mask' → logprob: -18.0
    6. '               ' → logprob: -18.125
    7. '_masks' → logprob: -18.75
    8. 'class' → logprob: -19.125
    9. '_' → logprob: -19.625
    10. '_m' → logprob: -19.875

Token 534: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2519310414791107
    2. '&' → logprob: -1.501931071281433
    3. '&amp' → logprob: -13.876931190490723
    4. '&m' → logprob: -14.501931190490723
    5. '&
' → logprob: -15.626931190490723
    6. ' &
' → logprob: -16.376930236816406
    7. '＆' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.001930236816406
    9. '&type' → logprob: -17.126930236816406
    10. ' ' → logprob: -17.126930236816406

Token 535: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.014163863845169544
    2. ' mask' → logprob: -4.264163970947266
    3. '(mask' → logprob: -15.264163970947266
    4. '	mask' → logprob: -15.889163970947266
    5. '_mask' → logprob: -17.889163970947266
    6. 'masked' → logprob: -19.139163970947266
    7. '   ' → logprob: -19.264163970947266
    8. ' ' → logprob: -19.889163970947266
    9. '.mask' → logprob: -20.139163970947266
    10. 'm' → logprob: -20.264163970947266

Token 536: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -1.7432603272027336e-06
    2. 'class' → logprob: -13.875001907348633
    3. ')' → logprob: -14.375001907348633
    4. '_mask' → logprob: -17.000001907348633
    5. 'Class' → logprob: -17.375001907348633
    6. '_CLASS' → logprob: -17.500001907348633
    7. '<class' → logprob: -17.750001907348633
    8. '_classes' → logprob: -17.750001907348633
    9. '_)' → logprob: -18.000001907348633
    10. '_' → logprob: -18.750001907348633

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009168167016468942
    2. ')==' → logprob: -7.000916957855225
    3. '==' → logprob: -12.375916481018066
    4. ' )' → logprob: -13.875916481018066
    5. '）' → logprob: -15.875916481018066
    6. ')=' → logprob: -18.125917434692383
    7. ' ==' → logprob: -18.125917434692383
    8. '0' → logprob: -19.250917434692383
    9. ')!=' → logprob: -19.500917434692383
    10. '_)' → logprob: -20.000917434692383

Token 538: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011639113072305918
    2. ' ==' → logprob: -7.001163959503174
    3. ')==' → logprob: -8.376163482666016
    4. ')' → logprob: -11.501163482666016
    5. ']==' → logprob: -12.126163482666016
    6. '=' → logprob: -12.501163482666016
    7. '===' → logprob: -13.251163482666016
    8. '()==' → logprob: -14.251163482666016
    9. '==
' → logprob: -14.876163482666016
    10. '']==' → logprob: -17.501163482666016

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '                   ' → logprob: -18.000009536743164
    4. '۰' → logprob: -20.125009536743164
    5. '000' → logprob: -20.250009536743164
    6. '               ' → logprob: -20.875009536743164
    7. '00' → logprob: -21.375009536743164
    8. '=' → logprob: -21.625009536743164
    9. '٠' → logprob: -21.750009536743164
    10. '  ' → logprob: -22.375009536743164

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -20.25
    4. '000' → logprob: -20.5
    5. '00' → logprob: -21.625
    6. '০' → logprob: -22.25
    7. '٠' → logprob: -22.25
    8. '  ' → logprob: -22.25
    9. '०' → logprob: -22.75
    10. '０' → logprob: -22.875

Token 541: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.061099886894226
    2. '                   ' → logprob: -1.061099886894226
    3. ':
' → logprob: -1.186099886894226
    4. '               ' → logprob: -6.436100006103516
    5. ' and' → logprob: -8.436100006103516
    6. ',' → logprob: -8.811100006103516
    7. '):
' → logprob: -9.186100006103516
    8. '                       ' → logprob: -9.311100006103516
    9. ' :
' → logprob: -9.311100006103516
    10. ' :' → logprob: -10.061100006103516

Token 542: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000241085872403346
    2. '               ' → logprob: -9.50024127960205
    3. '                       ' → logprob: -9.50024127960205
    4. ' dp' → logprob: -10.12524127960205
    5. 'dp' → logprob: -10.87524127960205
    6. '                    ' → logprob: -11.50024127960205
    7. '                           ' → logprob: -11.50024127960205
    8. '                  ' → logprob: -12.12524127960205
    9. '                ' → logprob: -13.62524127960205
    10. '                    
' → logprob: -13.87524127960205

Token 543: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6794613599777222
    2. ' new' → logprob: -1.1794613599777222
    3. 'next' → logprob: -2.8044614791870117
    4. 'dp' → logprob: -3.0544614791870117
    5. ' next' → logprob: -4.304461479187012
    6. 'nv' → logprob: -4.304461479187012
    7. ' if' → logprob: -4.429461479187012
    8. '                   ' → logprob: -4.554461479187012
    9. ' dp' → logprob: -4.804461479187012
    10. 'if' → logprob: -4.929461479187012

Token 544: ' pas' (ID: 2173)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.029720978811383247
    2. ' new' → logprob: -4.279720783233643
    3. 'next' → logprob: -5.279720783233643
    4. 'n' → logprob: -5.404720783233643
    5. 'nv' → logprob: -6.154720783233643
    6. 'nd' → logprob: -7.154720783233643
    7. '                   ' → logprob: -7.529720783233643
    8. 'dp' → logprob: -7.529720783233643
    9. '               ' → logprob: -7.654720783233643
    10. 'nou' → logprob: -7.654720783233643

Token 545: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.22392098605632782
    2. ' de' → logprob: -2.348921060562134
    3. '                       ' → logprob: -2.973921060562134
    4. '                   ' → logprob: -3.473921060562134
    5. 'd' → logprob: -4.848920822143555
    6. '                    ' → logprob: -5.098920822143555
    7. ' encore' → logprob: -6.598920822143555
    8. 'à' → logprob: -6.973920822143555
    9. '                        ' → logprob: -7.348920822143555
    10. 'occup' → logprob: -7.598920822143555

Token 546: ' chev' (ID: 127415)
  Prédit: ' chev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.541427731513977
    2. 'che' → logprob: -1.666427731513977
    3. 'con' → logprob: -1.791427731513977
    4. 'collision' → logprob: -3.0414276123046875
    5. ' conflit' → logprob: -4.9164276123046875
    6. 'over' → logprob: -5.7914276123046875
    7. ' overlap' → logprob: -5.9164276123046875
    8. 'conf' → logprob: -7.2914276123046875
    9. ' collision' → logprob: -7.4164276123046875
    10. 'rec' → logprob: -9.791427612304688

Token 547: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.03758062422275543
    2. ' overlap' → logprob: -4.287580490112305
    3. 'au' → logprob: -4.787580490112305
    4. 'al' → logprob: -4.912580490112305
    5. '_overlap' → logprob: -6.287580490112305
    6. 'elage' → logprob: -6.662580490112305
    7. 'v' → logprob: -6.912580490112305
    8. 'over' → logprob: -7.162580490112305
    9. 'l' → logprob: -7.787580490112305
    10. 'el' → logprob: -7.912580490112305

Token 548: 'ment' (ID: 508)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.3375249207019806
    2. 'ment' → logprob: -2.087524890899658
    3. 'rement' → logprob: -2.462524890899658
    4. 'sement' → logprob: -3.087524890899658
    5. 'cement' → logprob: -4.212524890899658
    6. 'vement' → logprob: -4.837524890899658
    7. 'nement' → logprob: -5.462524890899658
    8. 't' → logprob: -7.462524890899658
    9. 'lement' → logprob: -7.587524890899658
    10. '   ' → logprob: -7.712524890899658

Token 549: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2150401920080185
    2. '                       ' → logprob: -2.0900402069091797
    3. ':' → logprob: -3.2150402069091797
    4. ':
' → logprob: -3.9650402069091797
    5. ',' → logprob: -4.71504020690918
    6. ' :
' → logprob: -7.59004020690918
    7. ' :' → logprob: -7.84004020690918
    8. '):
' → logprob: -8.46504020690918
    9. '               ' → logprob: -9.34004020690918
    10. '                    ' → logprob: -9.59004020690918

Token 550: ' on' (ID: 402)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4889284074306488
    2. 'new' → logprob: -1.3639284372329712
    3. '                   ' → logprob: -2.2389283180236816
    4. '                       ' → logprob: -4.113928318023682
    5. ' nouveau' → logprob: -6.238928318023682
    6. 'nou' → logprob: -6.738928318023682
    7. 'nv' → logprob: -7.113928318023682
    8. ' nouvelle' → logprob: -7.238928318023682
    9. 'n' → logprob: -7.363928318023682
    10. 'nd' → logprob: -7.363928318023682

Token 551: ' peut' (ID: 9216)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4012417793273926
    2. ' peux' → logprob: -2.2762417793273926
    3. 'pe' → logprob: -2.6512417793273926
    4. ' peut' → logprob: -2.7762417793273926
    5. 'new' → logprob: -3.0262417793273926
    6. '                   ' → logprob: -4.901241779327393
    7. ' can' → logprob: -5.026241779327393
    8. '                       ' → logprob: -5.401241779327393
    9. 'n' → logprob: -5.526241779327393
    10. 'nou' → logprob: -5.901241779327393

Token 552: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.5332894921302795
    2. 'prendre' → logprob: -1.4082894325256348
    3. ' ajouter' → logprob: -2.1582894325256348
    4. ' prendre' → logprob: -4.033289432525635
    5. ' new' → logprob: -4.783289432525635
    6. '                       ' → logprob: -4.908289432525635
    7. 'mettre' → logprob: -5.158289432525635
    8. '                   ' → logprob: -5.408289432525635
    9. 'add' → logprob: -5.908289432525635
    10. ' add' → logprob: -6.533289432525635

Token 553: ' ce' (ID: 2357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17487749457359314
    2. '(mask' → logprob: -2.924877405166626
    3. 'mask' → logprob: -2.924877405166626
    4. '                       ' → logprob: -3.674877405166626
    5. ' (' → logprob: -4.924877643585205
    6. '(' → logprob: -5.799877643585205
    7. '               ' → logprob: -6.049877643585205
    8. 'new' → logprob: -6.049877643585205
    9. '                    ' → logprob: -6.174877643585205
    10. ' mask' → logprob: -6.299877643585205

Token 554: ' cours' (ID: 10138)
  Prédit: ' cours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cours' → logprob: -0.17260071635246277
    2. 'cours' → logprob: -2.297600746154785
    3. ' class' → logprob: -3.047600746154785
    4. ' course' → logprob: -5.297600746154785
    5. 'class' → logprob: -5.922600746154785
    6. '_class' → logprob: -7.547600746154785
    7. ' classe' → logprob: -7.797600746154785
    8. 'classe' → logprob: -8.047600746154785
    9. '_c' → logprob: -8.172600746154785
    10. ' ' → logprob: -8.422600746154785

Token 555: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2195240557193756
    2. ':' → logprob: -1.8445240259170532
    3. '                       ' → logprob: -3.5945241451263428
    4. ':
' → logprob: -5.219523906707764
    5. ',' → logprob: -6.719523906707764
    6. '               ' → logprob: -6.969523906707764
    7. '):' → logprob: -6.969523906707764
    8. ' :' → logprob: -7.344523906707764
    9. '):
' → logprob: -7.719523906707764
    10. '                    
' → logprob: -7.719523906707764

Token 556: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01186276413500309
    2. '                       ' → logprob: -4.511862754821777
    3. '                    ' → logprob: -8.261862754821777
    4. '                    
' → logprob: -8.636862754821777
    5. '                        
' → logprob: -9.011862754821777
    6. '               ' → logprob: -9.136862754821777
    7. ',' → logprob: -10.386862754821777
    8. '<|end|>' → logprob: -10.761862754821777
    9. '				' → logprob: -11.011862754821777
    10. '                           ' → logprob: -11.511862754821777

Token 557: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2736959755420685
    2. ' new' → logprob: -2.273695945739746
    3. 'dp' → logprob: -3.023695945739746
    4. 'next' → logprob: -3.148695945739746
    5. '                   ' → logprob: -3.898695945739746
    6. 'nv' → logprob: -5.148695945739746
    7. 'n' → logprob: -5.273695945739746
    8. ' dp' → logprob: -5.898695945739746
    9. 'nd' → logprob: -5.898695945739746
    10. 'if' → logprob: -6.398695945739746

Token 558: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.03503575176000595
    2. '_occ' → logprob: -3.5350358486175537
    3. '_val' → logprob: -5.660035610198975
    4. '_' → logprob: -7.410035610198975
    5. 'mask' → logprob: -7.535035610198975
    6. 'occ' → logprob: -8.285036087036133
    7. '_l' → logprob: -8.410036087036133
    8. '_oc' → logprob: -9.160036087036133
    9. 'l' → logprob: -10.660036087036133
    10. 'val' → logprob: -10.660036087036133

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.78522491455078
    4. ')' → logprob: -17.03522491455078
    5. 's' → logprob: -17.91022491455078
    6. '＝' → logprob: -18.16022491455078
    7. '   ' → logprob: -18.28522491455078
    8. '	' → logprob: -18.28522491455078
    9. '```' → logprob: -18.28522491455078
    10. ',' → logprob: -18.41022491455078

Token 560: ' occ' (ID: 4138)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.007193054538220167
    2. ' occ' → logprob: -5.132193088531494
    3. '                   ' → logprob: -6.757193088531494
    4. 'oc' → logprob: -9.757192611694336
    5. 'occup' → logprob: -10.382192611694336
    6. '                       ' → logprob: -12.882192611694336
    7. 'occur' → logprob: -13.007192611694336
    8. '```' → logprob: -13.757192611694336
    9. '                  ' → logprob: -13.882192611694336
    10. '_occ' → logprob: -13.882192611694336

Token 561: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00019090480054728687
    2. 'up' → logprob: -9.000190734863281
    3. 'mask' → logprob: -9.750190734863281
    4. 'u' → logprob: -12.125190734863281
    5. '_MASK' → logprob: -13.625190734863281
    6. '[' → logprob: -14.375190734863281
    7. '```' → logprob: -15.250190734863281
    8. '   ' → logprob: -15.375190734863281
    9. '_occ' → logprob: -15.750190734863281
    10. '_masks' → logprob: -15.750190734863281

Token 562: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.06196869537234306
    2. '|' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.936968803405762
    4. ' |=' → logprob: -15.061968803405762
    5. ' |
' → logprob: -16.311967849731445
    6. ' ' → logprob: -16.436967849731445
    7. '|
' → logprob: -16.436967849731445
    8. '│' → logprob: -16.686967849731445
    9. '|\' → logprob: -17.186967849731445
    10. '                    ' → logprob: -17.936967849731445

Token 563: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0024758970830589533
    2. ' mask' → logprob: -6.002475738525391
    3. '(mask' → logprob: -15.75247573852539
    4. '	mask' → logprob: -16.50247573852539
    5. '_mask' → logprob: -18.25247573852539
    6. '   ' → logprob: -18.50247573852539
    7. 'masked' → logprob: -18.75247573852539
    8. 'm' → logprob: -19.37747573852539
    9. 'mas' → logprob: -19.75247573852539
    10. ' ' → logprob: -20.00247573852539

Token 564: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.00020497082732617855
    2. '_mask' → logprob: -8.750205039978027
    3. 'class' → logprob: -10.375205039978027
    4. 'mask' → logprob: -11.250205039978027
    5. '_classes' → logprob: -14.125205039978027
    6. 'aclass' → logprob: -15.250205039978027
    7. 'Class' → logprob: -15.375205039978027
    8. '_CLASS' → logprob: -15.750205039978027
    9. '```' → logprob: -15.750205039978027
    10. 'lass' → logprob: -16.37520408630371

Token 565: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015258101047948003
    2. '                    
' → logprob: -7.00152587890625
    3. '               ' → logprob: -8.50152587890625
    4. '
' → logprob: -8.62652587890625
    5. ',' → logprob: -9.87652587890625
    6. '                    ' → logprob: -10.00152587890625
    7. '           ' → logprob: -10.50152587890625
    8. '<|end|>' → logprob: -10.75152587890625
    9. '                       ' → logprob: -11.00152587890625
    10. 'new' → logprob: -11.50152587890625

Token 566: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005381396040320396
    2. '               ' → logprob: -8.250537872314453
    3. '				' → logprob: -9.375537872314453
    4. '                    
' → logprob: -9.625537872314453
    5. '           ' → logprob: -10.500537872314453
    6. '                       ' → logprob: -10.500537872314453
    7. '                    ' → logprob: -11.000537872314453
    8. '		           ' → logprob: -11.000537872314453
    9. '
' → logprob: -12.000537872314453
    10. ',' → logprob: -12.000537872314453

Token 567: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1492047905921936
    2. 'dp' → logprob: -2.274204730987549
    3. 'new' → logprob: -4.524204730987549
    4. ' if' → logprob: -4.899204730987549
    5. '                   ' → logprob: -5.024204730987549
    6. 'current' → logprob: -5.274204730987549
    7. 'old' → logprob: -5.524204730987549
    8. 'existing' → logprob: -7.774204730987549
    9. ' dp' → logprob: -7.899204730987549
    10. '                       ' → logprob: -8.149205207824707

Token 568: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026196833699941635
    2. 'new' → logprob: -4.1511969566345215
    3. ' dp' → logprob: -4.6511969566345215
    4. ' new' → logprob: -7.6511969566345215
    5. '   ' → logprob: -9.901196479797363
    6. '(dp' → logprob: -11.901196479797363
    7. '           ' → logprob: -12.026196479797363
    8. '	dp' → logprob: -12.151196479797363
    9. 'val' → logprob: -12.401196479797363
    10. '       ' → logprob: -12.526196479797363

Token 569: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -7.896309739408025e-07
    2. 'l' → logprob: -15.000000953674316
    3. '[new' → logprob: -16.0
    4. '[' → logprob: -16.375
    5. '                   ' → logprob: -16.75
    6. '[
' → logprob: -17.5
    7. '[L' → logprob: -17.5
    8. '           ' → logprob: -17.625
    9. '               ' → logprob: -17.875
    10. '```' → logprob: -18.0

Token 570: '+' (ID: 10)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0006950391689315438
    2. '[new' → logprob: -7.87569522857666
    3. '[' → logprob: -8.37569522857666
    4. '][' → logprob: -9.75069522857666
    5. '+' → logprob: -11.62569522857666
    6. 'new' → logprob: -12.00069522857666
    7. 'l' → logprob: -12.50069522857666
    8. '                   ' → logprob: -13.12569522857666
    9. '               ' → logprob: -14.12569522857666
    10. '[next' → logprob: -14.25069522857666

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.75
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -17.625
    5. ' ' → logprob: -18.0
    6. '
' → logprob: -18.5
    7. 'l' → logprob: -19.0
    8. '           ' → logprob: -19.125
    9. '][' → logprob: -21.0
    10. '                   ' → logprob: -21.375

Token 572: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -9.85366350505501e-05
    2. '][' → logprob: -9.50009822845459
    3. 'new' → logprob: -10.75009822845459
    4. '[' → logprob: -13.50009822845459
    5. '```' → logprob: -15.25009822845459
    6. ' [' → logprob: -15.75009822845459
    7. ')[' → logprob: -16.750099182128906
    8. '   ' → logprob: -16.750099182128906
    9. ')new' → logprob: -16.875099182128906
    10. ' new' → logprob: -16.875099182128906

Token 573: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.7697225252486533e-06
    2. ' new' → logprob: -12.500003814697266
    3. '[new' → logprob: -16.750003814697266
    4. ')new' → logprob: -19.875003814697266
    5. '	new' → logprob: -20.375003814697266
    6. '(new' → logprob: -20.500003814697266
    7. '_new' → logprob: -21.000003814697266
    8. 'New' → logprob: -21.500003814697266
    9. '                   ' → logprob: -21.625003814697266
    10. '```' → logprob: -22.125003814697266

Token 574: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -16.5
    3. '_MASK' → logprob: -16.625
    4. 'mask' → logprob: -16.625
    5. '_masks' → logprob: -17.75
    6. '_new' → logprob: -18.125
    7. '_m' → logprob: -18.5
    8. '_' → logprob: -18.5
    9. 'w' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 575: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.100660040974617
    2. ' <' → logprob: -2.3506600856781006
    3. ']' → logprob: -8.47566032409668
    4. ']<' → logprob: -9.10066032409668
    5. ')' → logprob: -9.97566032409668
    6. ')<' → logprob: -10.47566032409668
    7. '[' → logprob: -11.22566032409668
    8. '<s' → logprob: -11.85066032409668
    9. '<len' → logprob: -12.72566032409668
    10. '                       ' → logprob: -12.85066032409668

Token 576: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.007611124310642481
    2. ' <' → logprob: -4.882611274719238
    3. '<s' → logprob: -14.007611274719238
    4. '<int' → logprob: -14.507611274719238
    5. ')<' → logprob: -14.632611274719238
    6. '<len' → logprob: -15.132611274719238
    7. '                           ' → logprob: -15.507611274719238
    8. '<p' → logprob: -15.507611274719238
    9. '<class' → logprob: -15.632611274719238
    10. ')' → logprob: -15.632611274719238

Token 577: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.003177952254191041
    2. ' val' → logprob: -5.753178119659424
    3. '                   ' → logprob: -16.003177642822266
    4. '   ' → logprob: -17.253177642822266
    5. '	val' → logprob: -17.878177642822266
    6. 'v' → logprob: -18.503177642822266
    7. '(val' → logprob: -18.503177642822266
    8. '_val' → logprob: -18.878177642822266
    9. '                       ' → logprob: -19.378177642822266
    10. ' ' → logprob: -19.628177642822266

Token 578: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10032129287719727
    2. '+' → logprob: -2.3503212928771973
    3. '+t' → logprob: -9.225320816040039
    4. '                       ' → logprob: -11.975320816040039
    5. '+c' → logprob: -12.975320816040039
    6. '                   ' → logprob: -13.350320816040039
    7. ':' → logprob: -13.975320816040039
    8. '+p' → logprob: -14.225320816040039
    9. '                           ' → logprob: -14.350320816040039
    10. ' ' → logprob: -14.350320816040039

Token 579: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0059287971816957
    2. ' t' → logprob: -5.130928993225098
    3. '`t' → logprob: -16.00592803955078
    4. '   ' → logprob: -16.38092803955078
    5. '	t' → logprob: -16.75592803955078
    6. ' ' → logprob: -17.88092803955078
    7. ' ' → logprob: -19.50592803955078
    8. '(t' → logprob: -19.75592803955078
    9. '  ' → logprob: -19.88092803955078
    10. '_t' → logprob: -20.38092803955078

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16962940990924835
    2. ':
' → logprob: -1.919629454612732
    3. '                       ' → logprob: -4.9196295738220215
    4. '                   ' → logprob: -7.6696295738220215
    5. '):
' → logprob: -7.6696295738220215
    6. '                           ' → logprob: -7.6696295738220215
    7. '=' → logprob: -8.419629096984863
    8. '                               ' → logprob: -9.169629096984863
    9. '():
' → logprob: -9.294629096984863
    10. '):' → logprob: -9.919629096984863

Token 581: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017047300934791565
    2. ' dp' → logprob: -5.39204740524292
    3. '                               ' → logprob: -5.39204740524292
    4. 'dp' → logprob: -5.76704740524292
    5. '                           ' → logprob: -6.14204740524292
    6. '                   ' → logprob: -7.39204740524292
    7. ' =' → logprob: -7.39204740524292
    8. ':' → logprob: -7.89204740524292
    9. '=' → logprob: -8.017046928405762
    10. '1' → logprob: -9.017046928405762

Token 582: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0002702760975807905
    2. ' dp' → logprob: -8.250269889831543
    3. '                           ' → logprob: -11.750269889831543
    4. '                               ' → logprob: -14.125269889831543
    5. '                       ' → logprob: -15.250269889831543
    6. '	dp' → logprob: -17.37527084350586
    7. '(dp' → logprob: -17.50027084350586
    8. '                                   ' → logprob: -17.87527084350586
    9. '_dp' → logprob: -19.50027084350586
    10. '                                       ' → logprob: -20.50027084350586

Token 583: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '[L' → logprob: -17.75
    4. ' [' → logprob: -18.875
    5. '[
' → logprob: -19.125
    6. '[m' → logprob: -20.125
    7. '```' → logprob: -20.25
    8. 'l' → logprob: -20.25
    9. '	l' → logprob: -20.875
    10. '][' → logprob: -20.875

Token 584: '+' (ID: 10)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.21103627979755402
    2. '+' → logprob: -1.7110363245010376
    3. '[' → logprob: -5.086036205291748
    4. '][' → logprob: -5.836036205291748
    5. '+l' → logprob: -7.836036205291748
    6. '+[' → logprob: -9.836036682128906
    7. 'l' → logprob: -12.336036682128906
    8. '[i' → logprob: -12.711036682128906
    9. '[
' → logprob: -13.086036682128906
    10. '[++' → logprob: -13.336036682128906

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.0
    3. '
' → logprob: -16.0
    4. '   ' → logprob: -16.875
    5. '+' → logprob: -17.375
    6. '```' → logprob: -17.4375
    7. 'l' → logprob: -17.625
    8. '

' → logprob: -18.125
    9. '１' → logprob: -18.5
    10. '[l' → logprob: -18.6875

Token 586: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.160269632935524
    2. '][' → logprob: -1.9102696180343628
    3. '[' → logprob: -10.285269737243652
    4. ')[' → logprob: -12.660269737243652
    5. ']' → logprob: -13.160269737243652
    6. 'new' → logprob: -13.535269737243652
    7. ' ][' → logprob: -13.910269737243652
    8. '"][' → logprob: -13.910269737243652
    9. ''][' → logprob: -14.035269737243652
    10. '>[' → logprob: -14.535269737243652

Token 587: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.1054253011243418e-05
    2. ' new' → logprob: -11.250020980834961
    3. '[new' → logprob: -11.750020980834961
    4. '_new' → logprob: -16.87502098083496
    5. 'dp' → logprob: -17.12502098083496
    6. '[' → logprob: -17.75002098083496
    7. '][' → logprob: -18.12502098083496
    8. 'New' → logprob: -18.50002098083496
    9. '	new' → logprob: -19.37502098083496
    10. '$new' → logprob: -19.50002098083496

Token 588: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0001884015218820423
    2. 'mask' → logprob: -8.750188827514648
    3. 'new' → logprob: -10.750188827514648
    4. '[new' → logprob: -12.625188827514648
    5. '_MASK' → logprob: -13.750188827514648
    6. '[' → logprob: -13.875188827514648
    7. '+' → logprob: -14.250188827514648
    8. 'Mask' → logprob: -14.625188827514648
    9. '][' → logprob: -15.000188827514648
    10. '   ' → logprob: -15.250188827514648

Token 589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07798745483160019
    2. ']=' → logprob: -2.9529874324798584
    3. '=' → logprob: -3.8279874324798584
    4. ' =' → logprob: -6.8279876708984375
    5. '                           ' → logprob: -13.952987670898438
    6. ')' → logprob: -14.202987670898438
    7. ' ]' → logprob: -14.452987670898438
    8. ']+=' → logprob: -14.577987670898438
    9. '                       ' → logprob: -14.952987670898438
    10. '"]=' → logprob: -15.827987670898438

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615988306701183
    2. ' =' → logprob: -4.758615970611572
    3. ']=' → logprob: -13.88361644744873
    4. 'dp' → logprob: -15.25861644744873
    5. ']' → logprob: -16.133615493774414
    6. '[' → logprob: -16.133615493774414
    7. '.=' → logprob: -17.258615493774414
    8. '＝' → logprob: -17.883615493774414
    9. ')=' → logprob: -18.383615493774414
    10. '=

' → logprob: -18.508615493774414

Token 591: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5759403705596924
    2. ' val' → logprob: -0.8259403705596924
    3. '                       ' → logprob: -14.700940132141113
    4. '	val' → logprob: -15.575940132141113
    5. 'v' → logprob: -16.07594108581543
    6. '                           ' → logprob: -16.57594108581543
    7. '_val' → logprob: -17.32594108581543
    8. 'Val' → logprob: -17.70094108581543
    9. '[val' → logprob: -17.82594108581543
    10. '(val' → logprob: -18.70094108581543

Token 592: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06202784180641174
    2. '+' → logprob: -2.812027931213379
    3. '                       ' → logprob: -10.562027931213379
    4. ' ' → logprob: -11.437027931213379
    5. '                           ' → logprob: -11.937027931213379
    6. '                        ' → logprob: -11.937027931213379
    7. '+t' → logprob: -13.312027931213379
    8. '                               ' → logprob: -13.437027931213379
    9. ' ' → logprob: -13.687027931213379
    10. '<|end|>' → logprob: -13.937027931213379

Token 593: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12692831456661224
    2. ' t' → logprob: -2.1269283294677734
    3. '	t' → logprob: -16.376928329467773
    4. '(t' → logprob: -17.001928329467773
    5. '`t' → logprob: -17.501928329467773
    6. ' ' → logprob: -17.751928329467773
    7. '   ' → logprob: -18.126928329467773
    8. '                       ' → logprob: -18.251928329467773
    9. ' ' → logprob: -18.376928329467773
    10. '_t' → logprob: -19.126928329467773

Token 594: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008234646171331406
    2. '
' → logprob: -5.88323450088501
    3. 'for' → logprob: -6.25823450088501
    4. ' if' → logprob: -6.63323450088501
    5. '   ' → logprob: -7.00823450088501
    6. '<|end|>' → logprob: -7.00823450088501
    7. 'return' → logprob: -9.508234977722168
    8. ' for' → logprob: -10.133234977722168
    9. 'pass' → logprob: -10.133234977722168
    10. '```' → logprob: -10.508234977722168

Token 596: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0077451467514038
    2. 'result' → logprob: -1.0077451467514038
    3. 'print' → logprob: -1.7577451467514038
    4. 'answer' → logprob: -3.0077452659606934
    5. 'ans' → logprob: -3.2577452659606934
    6. 'max' → logprob: -5.007745265960693
    7. '   ' → logprob: -7.382745265960693
    8. ' res' → logprob: -7.507745265960693
    9. ' result' → logprob: -7.632745265960693
    10. 'best' → logprob: -7.882745265960693

Token 597: ' La' (ID: 3038)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3836680054664612
    2. 'ans' → logprob: -1.6336679458618164
    3. 'answer' → logprob: -2.8836679458618164
    4. 'result' → logprob: -3.3836679458618164
    5. 'best' → logprob: -3.8836679458618164
    6. 'max' → logprob: -4.383667945861816
    7. 'print' → logprob: -7.758667945861816
    8. ' ans' → logprob: -10.258667945861816
    9. '#' → logprob: -11.008667945861816
    10. ' res' → logprob: -11.133667945861816

Token 598: ' réponse' (ID: 50332)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16188710927963257
    2. 'best' → logprob: -3.1618871688842773
    3. 'result' → logprob: -3.2868871688842773
    4. 'me' → logprob: -3.7868871688842773
    5. 'print' → logprob: -4.036887168884277
    6. 'res' → logprob: -4.411887168884277
    7. '#' → logprob: -4.911887168884277
    8. 'ans' → logprob: -5.661887168884277
    9. 'bon' → logprob: -5.911887168884277
    10. ' max' → logprob: -7.036887168884277

Token 599: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6310452222824097
    2. 'result' → logprob: -1.6310452222824097
    3. '   ' → logprob: -1.7560452222824097
    4. 'max' → logprob: -1.8810452222824097
    5. 'answer' → logprob: -2.381045341491699
    6. 'ans' → logprob: -2.756045341491699
    7. ' ans' → logprob: -3.131045341491699
    8. 'res' → logprob: -3.506045341491699
    9. ' result' → logprob: -4.006045341491699
    10. ' =' → logprob: -4.631045341491699

Token 600: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002490045502781868
    2. ' max' → logprob: -6.002490043640137
    3. '   ' → logprob: -11.252490043640137
    4. '0' → logprob: -13.752490043640137
    5. '(max' → logprob: -16.252490997314453
    6. '=max' → logprob: -16.252490997314453
    7. '	max' → logprob: -17.002490997314453
    8. '[max' → logprob: -17.502490997314453
    9. '```' → logprob: -17.502490997314453
    10. 'maximum' → logprob: -18.002490997314453

Token 601: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.670925358776003e-05
    2. ' max' → logprob: -9.750066757202148
    3. 'maximum' → logprob: -11.750066757202148
    4. '   ' → logprob: -15.375066757202148
    5. 'print' → logprob: -16.12506675720215
    6. '
' → logprob: -16.75006675720215
    7. '=max' → logprob: -17.87506675720215
    8. '[max' → logprob: -18.37506675720215
    9. '(max' → logprob: -18.87506675720215
    10. ' maximum' → logprob: -18.87506675720215

Token 602: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5900521874427795
    2. 'result' → logprob: -1.0900521278381348
    3. 'res' → logprob: -2.9650521278381348
    4. '   ' → logprob: -4.590052127838135
    5. 'print' → logprob: -4.840052127838135
    6. 'answer' → logprob: -4.965052127838135
    7. 'ans' → logprob: -4.965052127838135
    8. '=max' → logprob: -5.215052127838135
    9. ' =' → logprob: -5.465052127838135
    10. 'score' → logprob: -5.590052127838135

Token 603: '[l' (ID: 38286)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.5411799550056458
    2. '[max' → logprob: -1.166179895401001
    3. 'max' → logprob: -3.041179895401001
    4. '[l' → logprob: -3.166179895401001
    5. '_val' → logprob: -5.41618013381958
    6. '[-' → logprob: -5.66618013381958
    7. '[min' → logprob: -6.04118013381958
    8. '_max' → logprob: -6.54118013381958
    9. '=max' → logprob: -6.91618013381958
    10. 'val' → logprob: -7.29118013381958

Token 604: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.45436954498291016
    2. '[l' → logprob: -1.3293695449829102
    3. '[' → logprob: -2.82936954498291
    4. 'for' → logprob: -3.45436954498291
    5. '
' → logprob: -6.32936954498291
    6. '[L' → logprob: -6.32936954498291
    7. ']' → logprob: -6.82936954498291
    8. '[i' → logprob: -6.95436954498291
    9. ' for' → logprob: -7.32936954498291
    10. '[len' → logprob: -7.57936954498291

Token 605: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.011255304329097271
    2. 'm' → logprob: -4.511255264282227
    3. 'max' → logprob: -9.011255264282227
    4. 'len' → logprob: -10.261255264282227
    5. 'new' → logprob: -11.386255264282227
    6. '
' → logprob: -12.011255264282227
    7. 'occ' → logprob: -12.011255264282227
    8. '_mask' → logprob: -12.261255264282227
    9. ' mask' → logprob: -12.261255264282227
    10. '][' → logprob: -12.886255264282227

Token 606: ']' (ID: 60)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.6762700080871582
    2. ']' → logprob: -1.1762700080871582
    3. 'for' → logprob: -1.8012700080871582
    4. ' for' → logprob: -4.551270008087158
    5. '[' → logprob: -5.426270008087158
    6. '][' → logprob: -6.676270008087158
    7. '   ' → logprob: -7.926270008087158
    8. 'l' → logprob: -8.30126953125
    9. '[m' → logprob: -8.42626953125
    10. '
' → logprob: -8.92626953125

Token 607: ' avec' (ID: 3937)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1162999868392944
    2. 'answer' → logprob: -1.1162999868392944
    3. '   ' → logprob: -1.7412999868392944
    4. 'ans' → logprob: -2.116300106048584
    5. 'max' → logprob: -3.741300106048584
    6. ' =' → logprob: -4.866300106048584
    7. 'print' → logprob: -5.366300106048584
    8. 'res' → logprob: -5.616300106048584
    9. '=' → logprob: -5.866300106048584
    10. ' ans' → logprob: -6.241300106048584

Token 608: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38707852363586426
    2. '0' → logprob: -1.1370785236358643
    3. ' l' → logprob: -8.762078285217285
    4. 'for' → logprob: -10.512078285217285
    5. ' ' → logprob: -10.887078285217285
    6. 'all' → logprob: -13.512078285217285
    7. 'max' → logprob: -13.887078285217285
    8. '1' → logprob: -14.387078285217285
    9. '   ' → logprob: -14.512078285217285
    10. '	l' → logprob: -14.637078285217285

Token 609: ' <=' (ID: 5017)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023882843554019928
    2. ' in' → logprob: -3.7738828659057617
    3. 'en' → logprob: -7.898882865905762
    4. '=' → logprob: -9.523882865905762
    5. 'range' → logprob: -9.773882865905762
    6. 'from' → logprob: -9.898882865905762
    7. 'for' → logprob: -10.273882865905762
    8. ' en' → logprob: -10.523882865905762
    9. 'dans' → logprob: -11.773882865905762
    10. '0' → logprob: -11.898882865905762

Token 610: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.054500666621607e-06
    2. ' L' → logprob: -12.87500286102295
    3. '
' → logprob: -14.75000286102295
    4. '   ' → logprob: -17.250003814697266
    5. 'for' → logprob: -17.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. 'l' → logprob: -18.125003814697266
    8. 'range' → logprob: -18.375003814697266
    9. '>L' → logprob: -20.125003814697266
    10. '	L' → logprob: -20.250003814697266

Token 611: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8899745941162109
    2. 'result' → logprob: -1.264974594116211
    3. 'print' → logprob: -1.514974594116211
    4. 'answer' → logprob: -2.889974594116211
    5. 'ans' → logprob: -4.139974594116211
    6. 'res' → logprob: -4.639974594116211
    7. 'max' → logprob: -5.264974594116211
    8. ' result' → logprob: -8.389974594116211
    9. '
' → logprob: -8.639974594116211
    10. ' print' → logprob: -9.139974594116211

Token 612: ' tout' (ID: 5501)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00025073037249967456
    2. ' l' → logprob: -8.500250816345215
    3. 'range' → logprob: -10.250250816345215
    4. '0' → logprob: -11.375250816345215
    5. ' range' → logprob: -14.875250816345215
    6. 'all' → logprob: -18.0002498626709
    7. '```' → logprob: -18.1252498626709
    8. '	l' → logprob: -18.2502498626709
    9. ' ' → logprob: -18.7502498626709
    10. '   ' → logprob: -19.2502498626709

Token 613: ' mask' (ID: 10910)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5319878458976746
    2. 'mask' → logprob: -0.9069878458976746
    3. ' l' → logprob: -5.40698766708374
    4. ' mask' → logprob: -5.53198766708374
    5. '   ' → logprob: -8.281988143920898
    6. '	mask' → logprob: -10.406988143920898
    7. 'dp' → logprob: -10.656988143920898
    8. '_mask' → logprob: -10.781988143920898
    9. '	l' → logprob: -10.906988143920898
    10. 'occ' → logprob: -11.531988143920898

Token 614: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.432564377784729
    2. 'result' → logprob: -1.432564377784729
    3. 'answer' → logprob: -2.6825642585754395
    4. '
' → logprob: -4.0575642585754395
    5. 'ans' → logprob: -4.5575642585754395
    6. 'max' → logprob: -4.9325642585754395
    7. 'res' → logprob: -4.9325642585754395
    8. '    
' → logprob: -7.4325642585754395
    9. ' result' → logprob: -7.8075642585754395
    10. ' answer' → logprob: -8.432564735412598

Token 615: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3060116469860077
    2. '   ' → logprob: -1.55601167678833
    3. 'print' → logprob: -3.68101167678833
    4. 'answer' → logprob: -4.30601167678833
    5. 'res' → logprob: -4.93101167678833
    6. 'max' → logprob: -5.68101167678833
    7. ' result' → logprob: -6.93101167678833
    8. 'return' → logprob: -7.18101167678833
    9. 'ans' → logprob: -7.43101167678833
    10. '```' → logprob: -7.55601167678833

Token 616: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.680783748626709
    2. 'result' → logprob: -0.930783748626709
    3. 'answer' → logprob: -3.305783748626709
    4. 'ans' (adapté à ' ans') → logprob: -3.430783748626709
    5. 'print' → logprob: -4.180783748626709
    6. '   ' → logprob: -4.430783748626709
    7. 'max' → logprob: -6.180783748626709
    8. 'ret' → logprob: -8.305784225463867
    9. 'best' → logprob: -8.305784225463867
    10. '```' → logprob: -8.680784225463867

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575950026512146
    2. ' =' → logprob: -0.825950026512146
    3. ',' → logprob: -11.575949668884277
    4. '=max' → logprob: -14.700949668884277
    5. '=int' → logprob: -15.450949668884277
    6. '_' → logprob: -15.450949668884277
    7. '   ' → logprob: -16.575950622558594
    8. ' =
' → logprob: -16.700950622558594
    9. '=
' → logprob: -16.950950622558594
    10. '_=' → logprob: -17.200950622558594

Token 618: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004342056345194578
    2. 'max' → logprob: -5.629342079162598
    3. ' ' → logprob: -7.504342079162598
    4. ' max' → logprob: -9.129342079162598
    5. '-' → logprob: -9.504342079162598
    6. '   ' → logprob: -12.379342079162598
    7. ' -' → logprob: -12.879342079162598
    8. '-max' → logprob: -13.754342079162598
    9. '
' → logprob: -16.75434112548828
    10. '  ' → logprob: -16.87934112548828

Token 619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31336480379104614
    2. 'max' → logprob: -1.3133647441864014
    3. '-' → logprob: -10.18836498260498
    4. '-max' → logprob: -10.18836498260498
    5. ' max' → logprob: -10.56336498260498
    6. ' ' → logprob: -13.93836498260498
    7. '=max' → logprob: -15.56336498260498
    8. '(max' → logprob: -15.68836498260498
    9. '   ' → logprob: -15.93836498260498
    10. 'float' → logprob: -15.93836498260498

Token 620: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003667175769805908
    2. '
' → logprob: -6.50366735458374
    3. ' for' → logprob: -6.50366735458374
    4. '   ' → logprob: -7.37866735458374
    5. '    
' → logprob: -10.878666877746582
    6. '```' → logprob: -11.753666877746582
    7. '	for' → logprob: -11.878666877746582
    8. '  
' → logprob: -12.878666877746582
    9. ' 
' → logprob: -13.878666877746582
    10. '<|end|>' → logprob: -14.003666877746582

Token 621: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05126858502626419
    2. '   ' → logprob: -3.0512685775756836
    3. ' for' → logprob: -5.926268577575684
    4. '	for' → logprob: -11.926268577575684
    5. '
' → logprob: -13.676268577575684
    6. '    
' → logprob: -14.176268577575684
    7. '```' → logprob: -15.051268577575684
    8. '  ' → logprob: -15.801268577575684
    9. '<|end|>' → logprob: -16.05126953125
    10. '  
' → logprob: -16.05126953125

Token 622: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.127333340875339e-06
    2. ' for' → logprob: -13.000003814697266
    3. '   ' → logprob: -13.250003814697266
    4. '```' → logprob: -19.625003814697266
    5. '
' → logprob: -20.500003814697266
    6. '	for' → logprob: -21.625003814697266
    7. '    
' → logprob: -22.750003814697266
    8. '``' → logprob: -23.375003814697266
    9. 'forall' → logprob: -25.500003814697266
    10. '_for' → logprob: -26.000003814697266

Token 623: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.088346359931165e-07
    2. ' l' → logprob: -14.000000953674316
    3. '	l' → logprob: -18.625
    4. '_l' → logprob: -20.875
    5. 'lst' → logprob: -21.75
    6. '   ' → logprob: -22.0
    7. '```' → logprob: -23.375
    8. '­l' → logprob: -24.125
    9. 'll' → logprob: -24.5
    10. 'л' → logprob: -25.125

Token 624: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931589245796204
    2. ' in' → logprob: -0.6931589245796204
    3. 'range' → logprob: -12.318159103393555
    4. '0' → logprob: -12.443159103393555
    5. 'from' → logprob: -14.193159103393555
    6. 'import' → logprob: -14.568159103393555
    7. '```' → logprob: -14.568159103393555
    8. '=' → logprob: -15.818159103393555
    9. '1' → logprob: -15.943159103393555
    10. '   ' → logprob: -16.068159103393555

Token 625: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.000000953674316
    3. '(range' → logprob: -23.5
    4. '   ' → logprob: -26.0
    5. '	range' → logprob: -26.875
    6. 'rang' → logprob: -27.25
    7. 'Range' → logprob: -27.875
    8. '
' → logprob: -28.0
    9. '_range' → logprob: -28.125
    10. 'r' → logprob: -28.625

Token 626: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.1637164789135568e-05
    2. 'L' → logprob: -11.500011444091797
    3. '(' → logprob: -13.500011444091797
    4. '	L' → logprob: -19.250011444091797
    5. '1' → logprob: -19.375011444091797
    6. '(l' → logprob: -19.625011444091797
    7. ',L' → logprob: -20.375011444091797
    8. ' L' → logprob: -20.500011444091797
    9. '[L' → logprob: -20.625011444091797
    10. '(
' → logprob: -20.875011444091797

Token 627: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9027791495318525e-05
    2. ' +' → logprob: -10.875019073486328
    3. '+
' → logprob: -17.875019073486328
    4. '
' → logprob: -19.375019073486328
    5. '＋' → logprob: -19.625019073486328
    6. '+l' → logprob: -20.625019073486328
    7. '1' → logprob: -20.875019073486328
    8. '[' → logprob: -21.000019073486328
    9. '):
' → logprob: -21.000019073486328
    10. '   ' → logprob: -21.250019073486328

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5160654783248901
    2. '+' → logprob: -1.3910654783248901
    3. 'L' → logprob: -1.8910654783248901
    4. 'l' → logprob: -6.26606559753418
    5. '(L' → logprob: -7.14106559753418
    6. 'len' → logprob: -7.64106559753418
    7. '0' → logprob: -9.64106559753418
    8. 'ans' → logprob: -9.89106559753418
    9. '(ans' → logprob: -10.14106559753418
    10. ' +' → logprob: -11.01606559753418

Token 629: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6337487697601318
    2. '):
' → logprob: -0.7587487697601318
    3. ':' → logprob: -7.133749008178711
    4. '   ' → logprob: -8.133749008178711
    5. ':
' → logprob: -10.133749008178711
    6. '):
' → logprob: -11.883749008178711
    7. ',' → logprob: -12.883749008178711
    8. '}:' → logprob: -13.008749008178711
    9. '+' → logprob: -13.383749008178711
    10. '():
' → logprob: -14.258749008178711

Token 630: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001974311424419284
    2. 'for' → logprob: -6.751974105834961
    3. ' for' → logprob: -7.126974105834961
    4. '       ' → logprob: -15.126974105834961
    5. '	for' → logprob: -15.251974105834961
    6. '<|end|>' → logprob: -17.12697410583496
    7. '   ' → logprob: -17.25197410583496
    8. ',' → logprob: -17.50197410583496
    9. '```' → logprob: -17.50197410583496
    10. ' ' → logprob: -18.25197410583496

Token 631: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002969703928101808
    2. '   ' → logprob: -8.250296592712402
    3. ' for' → logprob: -10.250296592712402
    4. 'ans' → logprob: -14.875296592712402
    5. '	for' → logprob: -17.75029754638672
    6. 'dp' → logprob: -19.75029754638672
    7. '       ' → logprob: -19.87529754638672
    8. ' ' → logprob: -20.12529754638672
    9. '  ' → logprob: -21.37529754638672
    10. 'answer' → logprob: -22.25029754638672

Token 632: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.656383680412546e-05
    2. 'len' → logprob: -10.125046730041504
    3. ' dp' → logprob: -12.000046730041504
    4. '   ' → logprob: -15.375046730041504
    5. 'l' → logprob: -17.375045776367188
    6. 'not' → logprob: -17.625045776367188
    7. 'd' → logprob: -17.875045776367188
    8. '	dp' → logprob: -18.375045776367188
    9. '(dp' → logprob: -18.625045776367188
    10. ' len' → logprob: -19.125045776367188

Token 633: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.531315314830863e-06
    2. 'l' → logprob: -12.625003814697266
    3. '[
' → logprob: -17.125003814697266
    4. '```' → logprob: -17.750003814697266
    5. '[d' → logprob: -17.875003814697266
    6. '[' → logprob: -17.875003814697266
    7. '[s' → logprob: -18.125003814697266
    8. '	l' → logprob: -18.500003814697266
    9. '[len' → logprob: -18.500003814697266
    10. '[i' → logprob: -18.625003814697266

Token 634: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32469630241394043
    2. ':' → logprob: -1.5746963024139404
    3. ')' → logprob: -3.1996963024139404
    4. '.' → logprob: -4.4496965408325195
    5. ']:' → logprob: -5.3246965408325195
    6. '[' → logprob: -6.0746965408325195
    7. ').' → logprob: -6.1996965408325195
    8. '):
' → logprob: -6.3246965408325195
    9. ']):' → logprob: -6.5746965408325195
    10. '.keys' → logprob: -7.0746965408325195

Token 635: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012224898673593998
    2. 'for' → logprob: -7.251222610473633
    3. ' for' → logprob: -7.876222610473633
    4. '           ' → logprob: -9.376222610473633
    5. 'ans' → logprob: -11.001222610473633
    6. '<|end|>' → logprob: -11.501222610473633
    7. '   ' → logprob: -11.876222610473633
    8. '	   ' → logprob: -12.501222610473633
    9. ',' → logprob: -12.501222610473633
    10. '<|end|>' → logprob: -14.126222610473633

Token 636: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0004080315411556512
    2. '           ' → logprob: -8.500408172607422
    3. ' ans' → logprob: -8.625408172607422
    4. 'max' → logprob: -11.375408172607422
    5. 'cur' → logprob: -13.000408172607422
    6. 'current' → logprob: -13.000408172607422
    7. 'temp' → logprob: -13.625408172607422
    8. 'curr' → logprob: -13.625408172607422
    9. '	ans' → logprob: -13.875408172607422
    10. 'm' → logprob: -14.000408172607422

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763660073280334
    2. ' =' → logprob: -0.8263660073280334
    3. '=max' → logprob: -7.826365947723389
    4. 'max' → logprob: -10.576366424560547
    5. '   ' → logprob: -13.576366424560547
    6. '+=' → logprob: -15.201366424560547
    7. '    ' → logprob: -16.451366424560547
    8. '  ' → logprob: -17.201366424560547
    9. ' max' → logprob: -17.326366424560547
    10. '       ' → logprob: -17.451366424560547

Token 638: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01416350994259119
    2. ' max' → logprob: -4.264163494110107
    3. '	max' → logprob: -18.389163970947266
    4. ',max' → logprob: -18.514163970947266
    5. '=max' → logprob: -18.639163970947266
    6. '   ' → logprob: -19.139163970947266
    7. '[max' → logprob: -19.764163970947266
    8. '(max' → logprob: -20.139163970947266
    9. '_max' → logprob: -20.639163970947266
    10. '0' → logprob: -21.389163970947266

Token 639: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.750043869018555
    3. 'ans' → logprob: -11.125043869018555
    4. '(
' → logprob: -11.875043869018555
    5. '(max' → logprob: -16.125043869018555
    6. '([' → logprob: -16.500043869018555
    7. '	ans' → logprob: -17.500043869018555
    8. '(

' → logprob: -18.000043869018555
    9. ' ans' → logprob: -19.000043869018555
    10. '(answer' → logprob: -19.875043869018555

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05234650894999504
    2. '(ans' → logprob: -3.5523464679718018
    3. 'ans' → logprob: -3.8023464679718018
    4. ' ans' → logprob: -11.052346229553223
    5. 'for' → logprob: -12.802346229553223
    6. ' ,' → logprob: -12.927346229553223
    7. '	ans' → logprob: -13.677346229553223
    8. '[' → logprob: -13.802346229553223
    9. '(' → logprob: -15.302346229553223
    10. '   ' → logprob: -15.302346229553223

Token 641: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015023599844425917
    2. ' max' → logprob: -6.501502513885498
    3. '(max' → logprob: -18.501502990722656
    4. '	max' → logprob: -19.626502990722656
    5. ',max' → logprob: -20.376502990722656
    6. '[max' → logprob: -21.001502990722656
    7. '=max' → logprob: -21.251502990722656
    8. 'min' → logprob: -21.501502990722656
    9. '_max' → logprob: -22.126502990722656
    10. 'maximum' → logprob: -22.126502990722656

Token 642: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00033593899570405483
    2. 'dp' → logprob: -8.000335693359375
    3. '(' → logprob: -15.500335693359375
    4. '	dp' → logprob: -16.000335693359375
    5. '(
' → logprob: -16.250335693359375
    6. ' dp' → logprob: -18.000335693359375
    7. '(d' → logprob: -18.125335693359375
    8. '_dp' → logprob: -18.750335693359375
    9. '.dp' → logprob: -19.750335693359375
    10. 'DP' → logprob: -19.750335693359375

Token 643: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.670925358776003e-05
    2. 'l' → logprob: -9.625066757202148
    3. '[
' → logprob: -15.125066757202148
    4. '[' → logprob: -16.25006675720215
    5. '	l' → logprob: -16.62506675720215
    6. '   ' → logprob: -17.00006675720215
    7. ' [' → logprob: -17.87506675720215
    8. '(l' → logprob: -18.12506675720215
    9. '```' → logprob: -18.12506675720215
    10. '
' → logprob: -18.50006675720215

Token 644: '].' (ID: 1651)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00572364404797554
    2. ').' → logprob: -5.880723476409912
    3. '[' → logprob: -6.755723476409912
    4. '.keys' → logprob: -7.380723476409912
    5. '].' → logprob: -8.00572395324707
    6. '.' → logprob: -8.63072395324707
    7. '[m' → logprob: -8.88072395324707
    8. '[].' → logprob: -8.88072395324707
    9. '[l' → logprob: -9.38072395324707
    10. ' .' → logprob: -9.88072395324707

Token 645: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.00013131031300872564
    2. '.values' → logprob: -9.000131607055664
    3. ' values' → logprob: -11.750131607055664
    4. 'value' → logprob: -17.750131607055664
    5. '	values' → logprob: -20.750131607055664
    6. 'items' → logprob: -20.875131607055664
    7. 'vals' → logprob: -20.875131607055664
    8. '.' → logprob: -22.125131607055664
    9. '
' → logprob: -22.375131607055664
    10. '_values' → logprob: -22.875131607055664

Token 646: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00229489803314209
    2. '))' → logprob: -6.127295017242432
    3. '()))
' → logprob: -9.627294540405273
    4. '()' → logprob: -10.627294540405273
    5. '())' → logprob: -11.002294540405273
    6. '()));' → logprob: -14.002294540405273
    7. '()))

' → logprob: -14.002294540405273
    8. ')' → logprob: -14.377294540405273
    9. '())))' → logprob: -15.127294540405273
    10. '())).' → logprob: -15.752294540405273

Token 647: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009125363430939615
    2. '   ' → logprob: -7.500912666320801
    3. '
' → logprob: -8.3759126663208
    4. ' print' → logprob: -9.5009126663208
    5. '```' → logprob: -9.8759126663208
    6. '    
' → logprob: -13.6259126663208
    7. '<|end|>' → logprob: -14.7509126663208
    8. '	print' → logprob: -15.1259126663208
    9. '  
' → logprob: -15.2509126663208
    10. '#print' → logprob: -15.8759126663208

Token 648: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7954958821064793e-05
    2. '```' → logprob: -11.625018119812012
    3. '   ' → logprob: -11.875018119812012
    4. ' print' → logprob: -13.250018119812012
    5. '
' → logprob: -16.000017166137695
    6. '	print' → logprob: -17.250017166137695
    7. '``' → logprob: -18.000017166137695
    8. 'return' → logprob: -18.750017166137695
    9. '#print' → logprob: -19.000017166137695
    10. '    
' → logprob: -19.500017166137695

Token 649: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. 'ans' → logprob: -14.25000286102295
    4. '(
' → logprob: -19.500001907348633
    5. '(answer' → logprob: -19.750001907348633
    6. '	ans' → logprob: -19.875001907348633
    7. ' (' → logprob: -20.125001907348633
    8. ' ans' → logprob: -20.875001907348633
    9. '(abs' → logprob: -21.125001907348633
    10. '()' → logprob: -21.125001907348633

Token 650: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '())' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.250004768371582
    4. '()' → logprob: -14.750004768371582
    5. ')
' → logprob: -16.2500057220459
    6. ')}' → logprob: -17.1250057220459
    7. '))' → logprob: -17.2500057220459
    8. '}' → logprob: -18.3750057220459
    9. '```' → logprob: -18.5000057220459
    10. '   ' → logprob: -18.6250057220459

Token 651: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.577079713344574
    2. '__' → logprob: -0.827079713344574
    3. '_' → logprob: -7.077079772949219
    4. '_name' → logprob: -8.452079772949219
    5. '___' → logprob: -9.702079772949219
    6. ' _' → logprob: -12.577079772949219
    7. 'name' → logprob: -12.702079772949219
    8. '____' → logprob: -12.827079772949219
    9. '(__' → logprob: -13.202079772949219
    10. '_true' → logprob: -13.952079772949219

Token 653: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26021143794059753
    2. 'name' → logprob: -1.76021146774292
    3. ' ==' → logprob: -3.26021146774292
    4. '==' → logprob: -4.13521146774292
    5. '=="' → logprob: -6.51021146774292
    6. ' __' → logprob: -8.010210990905762
    7. '```' → logprob: -8.260210990905762
    8. '()==' → logprob: -8.885210990905762
    9. '_name' → logprob: -9.260210990905762
    10. '__":
' → logprob: -9.510210990905762

Token 654: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0018341571558266878
    2. '=="' → logprob: -6.751834392547607
    3. '==' → logprob: -7.626834392547607
    4. ' ==' → logprob: -9.62683391571045
    5. '=='' → logprob: -9.75183391571045
    6. '__.__' → logprob: -10.25183391571045
    7. '__('' → logprob: -12.50183391571045
    8. '__":
' → logprob: -13.00183391571045
    9. '()=="' → logprob: -13.00183391571045
    10. '__["' → logprob: -13.25183391571045

Token 655: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.14933180809021
    2. '__' → logprob: -1.39933180809021
    3. ' ==' → logprob: -1.52433180809021
    4. '=="' → logprob: -1.52433180809021
    5. '=='' → logprob: -7.274332046508789
    6. '__.__' → logprob: -10.774332046508789
    7. '==
' → logprob: -10.774332046508789
    8. '==="' → logprob: -10.774332046508789
    9. '__":
' → logprob: -11.274332046508789
    10. ' =="' → logprob: -11.399332046508789

Token 656: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0040835049003362656
    2. ''' → logprob: -5.504083633422852
    3. '__' → logprob: -12.629083633422852
    4. ' "__' → logprob: -13.254083633422852
    5. 'main' → logprob: -17.62908363342285
    6. '"user' → logprob: -18.00408363342285
    7. '"name' → logprob: -18.12908363342285
    8. ' '__' → logprob: -18.25408363342285
    9. '   ' → logprob: -18.50408363342285
    10. '("__' → logprob: -19.62908363342285

Token 657: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20588237047195435
    2. '__' → logprob: -1.7058823108673096
    3. '"' → logprob: -5.955882549285889
    4. ''' → logprob: -6.830882549285889
    5. 'name' → logprob: -7.205882549285889
    6. '_main' → logprob: -11.33088207244873
    7. ' "__' → logprob: -11.83088207244873
    8. ' main' → logprob: -11.95588207244873
    9. '__":
' → logprob: -12.33088207244873
    10. 'built' → logprob: -12.70588207244873

Token 658: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06381059437990189
    2. '__' → logprob: -2.8138105869293213
    3. '__':
' → logprob: -6.3138108253479
    4. '__:' → logprob: -10.938810348510742
    5. '__["' → logprob: -12.563810348510742
    6. '():
' → logprob: -13.313810348510742
    7. '("__' → logprob: -13.813810348510742
    8. '__()
' → logprob: -14.063810348510742
    9. '__("' → logprob: -14.063810348510742
    10. '_' → logprob: -14.438810348510742

Token 659: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.029290195554494858
    2. '   ' → logprob: -3.904290199279785
    3. ' main' → logprob: -4.904290199279785
    4. '	main' → logprob: -6.654290199279785
    5. ' ' → logprob: -12.779290199279785
    6. '_main' → logprob: -13.154290199279785
    7. '```' → logprob: -14.529290199279785
    8. '  ' → logprob: -14.654290199279785
    9. '(main' → logprob: -14.654290199279785
    10. 'import' → logprob: -15.529290199279785

Token 660: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -17.0
    4. '   ' → logprob: -18.5
    5. '_main' → logprob: -21.375
    6. '(main' → logprob: -22.25
    7. '.main' → logprob: -22.5
    8. 'import' → logprob: -23.125
    9. 'Main' → logprob: -24.375
    10. 'mainwindow' → logprob: -25.75

Token 661: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 659
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 218
Tokens correctement prédits (top 10): 463
Précision stricte (1ère position): 30.05%
Précision adaptée (1ère position): 33.08%
Précision (top 10): 70.26%
================================================================================
