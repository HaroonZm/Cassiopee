================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque

def main():
    n, x0, y0, t = map(int, input().split())
    streets = []
    vert_streets = []
    horiz_streets = []
    for _ in range(n):
        xs, ys, xe, ye = map(int, input().split())
        streets.append((xs, ys, xe, ye))
        if xs == xe:
            vert_streets.append((xs, min(ys, ye), max(ys, ye)))
        else:
            horiz_streets.append((ys, min(xs, xe), max(xs, xe)))
    moves = []
    for _ in range(t):
        d, c = input().split()
        moves.append((int(d), c))

    # Build graph nodes: intersections of streets
    # But the car can be anywhere on streets, not only intersections.
    # We'll represent position as (street_id, position_along_street)
    # position_along_street: distance from one end (start point) along the street.

    # Precompute street lengths and direction vectors
    street_data = []
    for i,(xs,ys,xe,ye) in enumerate(streets):
        length = abs(xe - xs) + abs(ye - ys)
        # Direction vector (dx, dy) pointing from start to end
        dx = 0
        dy = 0
        if xe > xs:
            dx = 1
        elif xe < xs:
            dx = -1
        elif ye > ys:
            dy = 1
        elif ye < ys:
            dy = -1
        street_data.append({'id': i, 'start':(xs,ys), 'end':(xe,ye), 'length':length, 'dx':dx, 'dy':dy})

    # Build street intersections: for each street end point, find the other streets that connect there
    connections = defaultdict(list)  # (street_id, end_flag) -> list of (other_street_id, other_end_flag)
    # end_flag: 0 for start point, 1 for end point
    # The problem states there are no dead ends and no overlapping parallel streets.

    # Map each endpoint to the streets that connect there
    point_to_ends = defaultdict(list)  # point -> list of (street_id, end_flag)
    for s in street_data:
        point_to_ends[s['start']].append((s['id'],0))
        point_to_ends[s['end']].append((s['id'],1))

    for point, ends_list in point_to_ends.items():
        # Connect all ends at this point to each other (except same street ends)
        for sid1, end1 in ends_list:
            for sid2, end2 in ends_list:
                if sid1 != sid2:
                    connections[(sid1,end1)].append((sid2,end2))

    # Determine which streets the initial point (x0,y0) is on
    # and possible directions at time 0
    start_states = []
    for s in street_data:
        x1,y1 = s['start']
        x2,y2 = s['end']
        # The streets are axis-aligned
        # Check if (x0,y0) lies on street segment
        if x1 == x2:
            # vertical street
            if x0 == x1 and min(y1,y2) <= y0 <= max(y1,y2):
                # possible directions: along the street, either dy=1 or dy=-1
                # At the initial position, the car's direction is unknown.
                # So consider both directions allowed on the street at that point
                pos_along = abs(y0 - y1) if y0 >= y1 else abs(y0 - y2)
                # better to define pos_along as distance from start point
                pos_along = abs(y0 - y1)
                # directions are along dy=1 or dy=-1
                # But we do not know if start point corresponds to position 0 or length
                # We defined direction from start to end, so distance along is from start point
                start_states.append((s['id'], pos_along, s['dx'], s['dy']))
                start_states.append((s['id'], pos_along, -s['dx'], -s['dy']))
        else:
            # horizontal street
            if y0 == y1 and min(x1,x2) <= x0 <= max(x1,x2):
                pos_along = abs(x0 - x1)
                start_states.append((s['id'], pos_along, s['dx'], s['dy']))
                start_states.append((s['id'], pos_along, -s['dx'], -s['dy']))

    # Function to get street coordinate from pos_along
    def pos_to_coord(street, pos):
        x1,y1 = street['start']
        dx, dy = street['dx'], street['dy']
        return (x1 + dx * pos, y1 + dy * pos)

    # Function to move forward along the street by dist, return new pos or None if can't
    def move_forward(street, pos, dist, forward=True):
        length = street['length']
        dx, dy = street['dx'], street['dy']
        # If forward is False, moving opposite to street direction
        if not forward:
            dist = -dist
        new_pos = pos + dist
        if 0 <= new_pos <= length:
            return new_pos
        else:
            return None

    # Check if two directions match (N,E,S,W)
    def dir_match(dx, dy, c):
        if c == 'N':
            return dx == 0 and dy == 1
        if c == 'S':
            return dx == 0 and dy == -1
        if c == 'E':
            return dx == 1 and dy == 0
        if c == 'W':
            return dx == -1 and dy == 0
        return False

    # Because direction can be the direction before or after the turn,
    # at turning points we consider both directions

    # State is tuple: (street_id, pos_along, dx, dy)
    # dx, dy represent direction of travel (unit vector along street axis)
    # We'll BFS over states at each time step

    from collections import deque

    curr_states = set(start_states)
    for dist, cdir in moves:
        next_states = set()
        for sid, pos, dx, dy in curr_states:
            s = street_data[sid]
            length = s['length']
            # Try to move dist forward along current direction
            # direction dx, dy may be aligned with s['dx'], s['dy'] or opposite
            forward = (dx == s['dx'] and dy == s['dy'])
            new_pos = move_forward(s, pos, dist, forward=forward)
            if new_pos is not None:
                # No turn needed
                # Check if direction matches measured cdir
                if dir_match(dx, dy, cdir):
                    next_states.add((sid, new_pos, dx, dy))
                # else no possible with no turn
                continue
            # Else, we hit end of street, try to turn at endpoint
            # Need to go dist steps, moving to adjacent street
            # How many steps to reach end of street along current direction?
            if forward:
                dist_to_end = length - pos
                endpoint_flag = 1  # end point
                new_pos_at_end = length
            else:
                dist_to_end = pos
                endpoint_flag = 0  # start point
                new_pos_at_end = 0

            if dist_to_end > dist:
                # Should not happen since previous move_forward returned None
                continue

            rem_dist = dist - dist_to_end
            # From endpoint, can turn to other streets connected
            connects = connections.get((sid, endpoint_flag), [])
            for nsid, n_end_flag in connects:
                ns = street_data[nsid]
                # Determine direction possibilities on new street
                # The car can be going in direction s['dx'],s['dy'] or opposite
                # Choose directions consistent; at turn, direction can be either before or after turn
                # So direction at current time can be before or after turning
                # So cdir measured can be direction on previous street or new street
                
                # Directions on new street:
                ndx = ns['dx']
                ndy = ns['dy']
                candidates_dir = [(ndx, ndy), (-ndx, -ndy)]

                for ndxx, ndyy in candidates_dir:
                    # We will start at the endpoint of new street that connects here
                    # position at new street depends on which end is connected
                    if n_end_flag == 0:
                        npos = 0
                        nforward = (ndxx == ns['dx'] and ndyy == ns['dy'])
                    else:
                        npos = ns['length']
                        nforward = (ndxx == -ns['dx'] and ndyy == -ns['dy'])

                    # Move rem_dist along new street in direction ndx,ndy or reversed
                    # Determine if direction vector matches moving from npos along ndx, ndy (or reverse)
                    # But depending on direction assigned, moving forward or backward on the new street
                    # Need to check if have enough length
                    if nforward:
                        if rem_dist > ns['length'] - npos:
                            continue
                        new_npos = npos + rem_dist
                    else:
                        if rem_dist > npos:
                            continue
                        new_npos = npos - rem_dist

                    # Now, check direction measurement cdir: the measurement can be either before turn (old dx,dy) or after turn (ndxx,ndyy)
                    # So if cdir matches either (dx,dy) or (ndxx,ndyy), accept

                    if dir_match(dx, dy, cdir) or dir_match(ndxx, ndyy, cdir):
                        next_states.add((nsid, new_npos, ndxx, ndyy))
        curr_states = next_states

    # Extract all possible end positions coordinates and output unique sorted by lex order

    result = set()
    for sid, pos, dx, dy in curr_states:
        s = street_data[sid]
        coord = pos_to_coord(s, pos)
        result.add(coord)

    result = sorted(result)
    for x,y in result:
        print(x, y)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.9076029062271118
    2. 'deque' → logprob: -0.9076029062271118
    3. ' defaultdict' → logprob: -2.5326027870178223
    4. 'abc' → logprob: -2.9076027870178223
    5. 'Counter' → logprob: -3.0326027870178223
    6. ' Counter' → logprob: -5.657602787017822
    7. 'named' → logprob: -5.907602787017822
    8. ' deque' → logprob: -6.282602787017822
    9. '```' → logprob: -6.657602787017822
    10. ' abc' → logprob: -7.532602787017822

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002277530962601304
    2. '(
' → logprob: -6.252277374267578
    3. '\(' → logprob: -8.752277374267578
    4. '\' → logprob: -9.877277374267578
    5. '\n' → logprob: -10.377277374267578
    6. '(

' → logprob: -10.502277374267578
    7. 'newline' → logprob: -10.877277374267578
    8. '```' → logprob: -11.627277374267578
    9. '
' → logprob: -12.002277374267578
    10. '()' → logprob: -12.252277374267578

Token 5: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.9825289845466614
    2. ' Counter' → logprob: -1.3575289249420166
    3. 'Counter' → logprob: -1.4825289249420166
    4. 'deque' → logprob: -2.1075289249420166
    5. ' Ordered' → logprob: -4.732529163360596
    6. 'Ordered' → logprob: -5.357529163360596
    7. ' abc' → logprob: -5.607529163360596
    8. 'abc' → logprob: -6.857529163360596
    9. ' named' → logprob: -7.107529163360596
    10. 'named' → logprob: -7.607529163360596

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027548233047127724
    2. '\n' → logprob: -4.152548313140869
    3. '(
' → logprob: -5.652548313140869
    4. '\' → logprob: -5.652548313140869
    5. '()' → logprob: -7.277548313140869
    6. 'newline' → logprob: -7.527548313140869
    7. '```' → logprob: -7.527548313140869
    8. '
' → logprob: -7.652548313140869
    9. ',' → logprob: -7.777548313140869
    10. '

' → logprob: -8.152547836303711

Token 7: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.7825970649719238
    2. 'd' → logprob: -1.9075970649719238
    3. '
' → logprob: -2.032597064971924
    4. 'default' → logprob: -2.032597064971924
    5. '\' → logprob: -2.282597064971924
    6. '```' → logprob: -2.532597064971924
    7. '(' → logprob: -3.282597064971924
    8. '`' → logprob: -3.407597064971924
    9. 'def' → logprob: -3.657597064971924
    10. 'import' → logprob: -3.657597064971924

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1988336145877838
    2. ' process' → logprob: -2.448833703994751
    3. ' bfs' → logprob: -3.323833703994751
    4. ' my' → logprob: -4.198833465576172
    5. ' defaultdict' → logprob: -5.073833465576172
    6. ' calculate' → logprob: -5.198833465576172
    7. ' function' → logprob: -5.198833465576172
    8. ' func' → logprob: -5.823833465576172
    9. ' f' → logprob: -6.198833465576172
    10. ' breadth' → logprob: -6.323833465576172

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00269300932995975
    2. '(:' → logprob: -6.877693176269531
    3. '():' → logprob: -7.127693176269531
    4. ':' → logprob: -7.502693176269531
    5. ' (' → logprob: -9.377693176269531
    6. '```' → logprob: -9.752693176269531
    7. '(
' → logprob: -10.002693176269531
    8. '_' → logprob: -10.502693176269531
    9. '):' → logprob: -11.002693176269531
    10. '('' → logprob: -11.502693176269531

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031164927408099174
    2. '    ' → logprob: -4.28116512298584
    3. '(' → logprob: -4.78116512298584
    4. '    
' → logprob: -6.03116512298584
    5. '\' → logprob: -6.28116512298584
    6. ' ' → logprob: -6.65616512298584
    7. '[' → logprob: -7.15616512298584
    8. 'd' → logprob: -8.03116512298584
    9. '```' → logprob: -8.15616512298584
    10. 'n' → logprob: -8.28116512298584

Token 11: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0830199718475342
    2. 'queue' → logprob: -1.5830199718475342
    3. ' queue' → logprob: -1.9580199718475342
    4. 'q' → logprob: -2.208019971847534
    5. '   ' → logprob: -3.333019971847534
    6. 'graph' → logprob: -3.458019971847534
    7. 'stack' → logprob: -3.458019971847534
    8. ' d' → logprob: -3.833019971847534
    9. 'counter' → logprob: -4.458020210266113
    10. ' stack' → logprob: -4.708020210266113

Token 12: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14292368292808533
    2. '=' → logprob: -2.517923593521118
    3. ' ' → logprob: -3.142923593521118
    4. '  ' → logprob: -5.267923831939697
    5. ',' → logprob: -6.642923831939697
    6. '_' → logprob: -6.892923831939697
    7. '   ' → logprob: -7.392923831939697
    8. ')' → logprob: -8.267923355102539
    9. ' ,' → logprob: -8.392923355102539
    10. '    ' → logprob: -8.892923355102539

Token 13: ' x' (ID: 1215)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25643256306648254
    2. ' k' → logprob: -2.00643253326416
    3. 'm' → logprob: -2.50643253326416
    4. 'k' → logprob: -4.75643253326416
    5. ' q' → logprob: -7.50643253326416
    6. ' ' → logprob: -7.88143253326416
    7. ' t' → logprob: -8.50643253326416
    8. 'q' → logprob: -9.88143253326416
    9. ' =' → logprob: -9.88143253326416
    10. ' d' → logprob: -10.25643253326416

Token 14: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054981354624032974
    2. '=' → logprob: -2.9299814701080322
    3. ',' → logprob: -9.304981231689453
    4. ' ' → logprob: -12.054981231689453
    5. ' =
' → logprob: -13.929981231689453
    6. '=int' → logprob: -14.679981231689453
    7. ')' → logprob: -15.429981231689453
    8. ' =
' → logprob: -15.679981231689453
    9. ' ,' → logprob: -15.804981231689453
    10. '  ' → logprob: -15.804981231689453

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20631501078605652
    2. '=' → logprob: -1.706315040588379
    3. ',' → logprob: -5.331315040588379
    4. ' ' → logprob: -9.956315040588379
    5. ' ,' → logprob: -13.206315040588379
    6. '  ' → logprob: -14.206315040588379
    7. ')' → logprob: -14.581315040588379
    8. '=int' → logprob: -14.956315040588379
    9. '=input' → logprob: -15.331315040588379
    10. ' =
' → logprob: -15.331315040588379

Token 16: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.26029762625694275
    2. ' y' → logprob: -1.8852976560592651
    3. 'x' → logprob: -3.2602975368499756
    4. 'd' → logprob: -4.510297775268555
    5. 'k' → logprob: -4.635297775268555
    6. ' x' → logprob: -5.760297775268555
    7. 'q' → logprob: -5.885297775268555
    8. 'm' → logprob: -6.260297775268555
    9. 'v' → logprob: -6.385297775268555
    10. ' d' → logprob: -6.385297775268555

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027235286310315132
    2. ' =' → logprob: -4.527235507965088
    3. '=' → logprob: -4.902235507965088
    4. '_' → logprob: -5.402235507965088
    5. ',' → logprob: -5.527235507965088
    6. ')' → logprob: -9.40223503112793
    7. ' ' → logprob: -10.77723503112793
    8. '```' → logprob: -11.40223503112793
    9. '_=' → logprob: -12.65223503112793
    10. '\xe2\x82' → logprob: -13.15223503112793

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05513637140393257
    2. '=' → logprob: -2.9301364421844482
    3. ',' → logprob: -8.305136680603027
    4. ' ' → logprob: -12.555136680603027
    5. ' ,' → logprob: -13.180136680603027
    6. ')' → logprob: -14.680136680603027
    7. ' =
' → logprob: -15.055136680603027
    8. '   ' → logprob: -15.430136680603027
    9. '  ' → logprob: -16.05513572692871
    10. '=int' → logprob: -16.43013572692871

Token 19: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7487080693244934
    2. 'z' → logprob: -1.9987080097198486
    3. 'd' → logprob: -2.1237080097198486
    4. ' x' → logprob: -2.8737080097198486
    5. 'k' → logprob: -3.1237080097198486
    6. ' d' → logprob: -3.6237080097198486
    7. ' z' → logprob: -3.6237080097198486
    8. 'q' → logprob: -4.123708248138428
    9. 'a' → logprob: -4.373708248138428
    10. 'c' → logprob: -4.748708248138428

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7613444328308105
    2. '=' → logprob: -0.8863444328308105
    3. ',' → logprob: -2.1363444328308105
    4. 'ype' → logprob: -7.1363444328308105
    5. 'y' → logprob: -7.3863444328308105
    6. ' ' → logprob: -7.6363444328308105
    7. 'ime' → logprob: -7.7613444328308105
    8. ' ,' → logprob: -8.636344909667969
    9. ')' → logprob: -10.636344909667969
    10. '1' → logprob: -10.761344909667969

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10028354823589325
    2. 'map' → logprob: -2.350283622741699
    3. ' input' → logprob: -10.8502836227417
    4. 'input' → logprob: -10.9752836227417
    5. '0' → logprob: -11.7252836227417
    6. ' list' → logprob: -11.8502836227417
    7. ' ' → logprob: -11.9752836227417
    8. '	map' → logprob: -12.1002836227417
    9. ' [' → logprob: -12.6002836227417
    10. 'list' → logprob: -12.8502836227417

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04874928668141365
    2. '(int' → logprob: -3.2987492084503174
    3. '(lambda' → logprob: -5.0487494468688965
    4. '(str' → logprob: -5.6737494468688965
    5. '(input' → logprob: -7.7987494468688965
    6. '<|end|>' → logprob: -9.548748970031738
    7. 'int' → logprob: -9.798748970031738
    8. '(
' → logprob: -10.173748970031738
    9. '(eval' → logprob: -10.423748970031738
    10. '```' → logprob: -10.673748970031738

Token 23: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1521729677915573
    2. '(input' → logprob: -2.6521730422973633
    3. ',' → logprob: -3.2771730422973633
    4. '(' → logprob: -3.7771730422973633
    5. 'input' → logprob: -5.277173042297363
    6. '<|end|>' → logprob: -6.402173042297363
    7. ')(' → logprob: -7.152173042297363
    8. ',input' → logprob: -7.152173042297363
    9. '),' → logprob: -8.277173042297363
    10. '()' → logprob: -8.777173042297363

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0789315402507782
    2. ' input' → logprob: -2.5789315700531006
    3. ')' → logprob: -10.32893180847168
    4. '(input' → logprob: -12.45393180847168
    5. ' )' → logprob: -13.07893180847168
    6. '=input' → logprob: -13.57893180847168
    7. ',input' → logprob: -14.07893180847168
    8. '	input' → logprob: -15.07893180847168
    9. ' ' → logprob: -15.32893180847168
    10. '   ' → logprob: -15.57893180847168

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002532617887482047
    2. ')' → logprob: -6.502532482147217
    3. '())' → logprob: -7.002532482147217
    4. '()' → logprob: -9.127532958984375
    5. '(' → logprob: -12.127532958984375
    6. '());' → logprob: -13.502532958984375
    7. '('').' → logprob: -14.377532958984375
    8. '('' → logprob: -14.627532958984375
    9. '()
' → logprob: -14.627532958984375
    10. '))' → logprob: -14.627532958984375

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.576873758807778e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -14.750075340270996
    4. 'rstrip' → logprob: -15.250075340270996
    5. '(split' → logprob: -16.000076293945312
    6. 's' → logprob: -17.250076293945312
    7. 'spl' → logprob: -17.250076293945312
    8. ')' → logprob: -18.375076293945312
    9. '_split' → logprob: -19.500076293945312
    10. 'sp' → logprob: -19.500076293945312

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002800471556838602
    2. '))' → logprob: -8.250280380249023
    3. '(' → logprob: -12.125280380249023
    4. '()' → logprob: -12.375280380249023
    5. '())' → logprob: -12.375280380249023
    6. ')))' → logprob: -13.250280380249023
    7. '),' → logprob: -13.875280380249023
    8. ')`' → logprob: -14.000280380249023
    9. '')' → logprob: -15.375280380249023
    10. ')
' → logprob: -15.625280380249023

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18126501142978668
    2. '    
' → logprob: -3.181265115737915
    3. '   ' → logprob: -3.681265115737915
    4. ')' → logprob: -3.681265115737915
    5. '\n' → logprob: -3.931265115737915
    6. ':' → logprob: -4.681264877319336
    7. '<|end|>' → logprob: -4.931264877319336
    8. ',' → logprob: -5.056264877319336
    9. '  
' → logprob: -5.306264877319336
    10. '' → logprob: -5.556264877319336

Token 29: ' streets' (ID: 25360)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.7070776224136353
    2. '
' → logprob: -1.8320776224136353
    3. 'points' → logprob: -1.9570776224136353
    4. ' points' → logprob: -2.2070775032043457
    5. '    
' → logprob: -2.7070775032043457
    6. 'graph' → logprob: -2.8320775032043457
    7. ' 
' → logprob: -2.9570775032043457
    8. 'd' → logprob: -3.5820775032043457
    9. 'data' → logprob: -3.8320775032043457
    10. '   ' → logprob: -3.8320775032043457

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033711519092321396
    2. '=' → logprob: -3.4087114334106445
    3. ',' → logprob: -10.783711433410645
    4. '_map' → logprob: -11.283711433410645
    5. '_' → logprob: -11.658711433410645
    6. 's' → logprob: -12.033711433410645
    7. '   ' → logprob: -12.908711433410645
    8. '[' → logprob: -13.033711433410645
    9. '_count' → logprob: -14.033711433410645
    10. '[]' → logprob: -14.096211433410645

Token 31: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26258528232574463
    2. ' []' → logprob: -2.012585163116455
    3. '[' → logprob: -3.012585163116455
    4. ' [' → logprob: -3.387585163116455
    5. ' defaultdict' → logprob: -4.887585163116455
    6. 'deque' → logprob: -5.637585163116455
    7. 'default' → logprob: -5.887585163116455
    8. ' deque' → logprob: -8.262585639953613
    9. '[d' → logprob: -9.887585639953613
    10. ' [[]' → logprob: -10.512585639953613

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12036103010177612
    2. 'for' → logprob: -2.745361089706421
    3. ' for' → logprob: -3.120361089706421
    4. ')' → logprob: -6.870360851287842
    5. ' ' → logprob: -6.995360851287842
    6. '<|end|>' → logprob: -6.995360851287842
    7. '	for' → logprob: -7.120360851287842
    8. '    ' → logprob: -7.995360851287842
    9. '    
' → logprob: -8.495361328125
    10. '  ' → logprob: -8.870361328125

Token 33: ' vert' (ID: 7583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3157220184803009
    2. ' for' → logprob: -1.3157219886779785
    3. '   ' → logprob: -6.6907219886779785
    4. '	for' → logprob: -6.8157219886779785
    5. '\t' → logprob: -9.690722465515137
    6. '    ' → logprob: -10.690722465515137
    7. '[' → logprob: -11.940722465515137
    8. '```' → logprob: -12.315722465515137
    9. 'For' → logprob: -12.565722465515137
    10. '    
' → logprob: -12.565722465515137

Token 34: '_st' (ID: 2518)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.3377404510974884
    2. 'ical' → logprob: -1.462740421295166
    3. 'icals' → logprob: -4.212740421295166
    4. '=' → logprob: -4.962740421295166
    5. ',' → logprob: -5.087740421295166
    6. '```' → logprob: -5.337740421295166
    7. 'ex' → logprob: -5.462740421295166
    8. '_st' → logprob: -5.587740421295166
    9. 'icles' → logprob: -5.712740421295166
    10. ' =' → logprob: -5.712740421295166

Token 35: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09596213698387146
    2. 'r' → logprob: -3.4709620475769043
    3. 'reet' → logprob: -3.5959620475769043
    4. 'rees' → logprob: -4.220962047576904
    5. 'ree' → logprob: -4.720962047576904
    6. 'rets' → logprob: -5.720962047576904
    7. 'ream' → logprob: -6.470962047576904
    8. 'arts' → logprob: -7.720962047576904
    9. '_re' → logprob: -7.720962047576904
    10. 'e' → logprob: -7.720962047576904

Token 36: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.001741104875691235
    2. 'et' → logprob: -6.5017409324646
    3. 'cts' → logprob: -9.376741409301758
    4. 'ects' → logprob: -10.501741409301758
    5. 'ts' → logprob: -10.751741409301758
    6. '   ' → logprob: -11.126741409301758
    7. '```' → logprob: -11.251741409301758
    8. 'e' → logprob: -11.439241409301758
    9. 'sts' → logprob: -12.001741409301758
    10. '=' → logprob: -12.126741409301758

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490613102912903
    2. ' =' → logprob: -1.2240612506866455
    3. ',' → logprob: -8.224061012268066
    4. '=[]' → logprob: -8.349061012268066
    5. 's' → logprob: -10.349061012268066
    6. ')' → logprob: -10.849061012268066
    7. '_map' → logprob: -12.099061012268066
    8. ' ' → logprob: -12.224061012268066
    9. '=set' → logprob: -12.224061012268066
    10. '={}' → logprob: -12.474061012268066

Token 38: ' []
' (ID: 8911)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.20171456038951874
    2. ' defaultdict' → logprob: -2.201714515686035
    3. '[]' → logprob: -2.826714515686035
    4. ' []' → logprob: -4.576714515686035
    5. '{}' → logprob: -6.826714515686035
    6. 'set' → logprob: -7.826714515686035
    7. 'deque' → logprob: -8.076714515686035
    8. '[' → logprob: -8.576714515686035
    9. ' default' → logprob: -8.826714515686035
    10. '{' → logprob: -9.576714515686035

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2213222235441208
    2. 'for' → logprob: -2.4713222980499268
    3. '[]' → logprob: -3.4713222980499268
    4. ' for' → logprob: -3.8463222980499268
    5. '<|end|>' → logprob: -4.221322059631348
    6. ')' → logprob: -4.471322059631348
    7. ' =' → logprob: -4.471322059631348
    8. ',' → logprob: -4.721322059631348
    9. 'def' → logprob: -5.846322059631348
    10. ']' → logprob: -5.971322059631348

Token 40: ' horiz' (ID: 16700)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4059758186340332
    2. ' for' → logprob: -1.2809758186340332
    3. '   ' → logprob: -3.280975818634033
    4. 'h' → logprob: -5.405975818634033
    5. 'horizontal' → logprob: -5.530975818634033
    6. 'hor' → logprob: -5.780975818634033
    7. ' horiz' → logprob: -6.155975818634033
    8. ' horizont' → logprob: -6.905975818634033
    9. '[]' → logprob: -7.030975818634033
    10. ' horizontal' → logprob: -7.780975818634033

Token 41: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.00591196957975626
    2. 'stre' → logprob: -6.005911827087402
    3. 'ont' → logprob: -6.755911827087402
    4. 'ontal' → logprob: -7.005911827087402
    5. 'onal' → logprob: -7.255911827087402
    6. ' streets' → logprob: -9.380911827087402
    7. 'on' → logprob: -9.630911827087402
    8. '_lines' → logprob: -9.755911827087402
    9. '_' → logprob: -10.005911827087402
    10. 'al' → logprob: -10.130911827087402

Token 42: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0036247847601771355
    2. 'e' → logprob: -6.37862491607666
    3. 'stre' → logprob: -6.87862491607666
    4. 'rees' → logprob: -8.62862491607666
    5. '_re' → logprob: -8.75362491607666
    6. 'reet' → logprob: -9.00362491607666
    7. 'ree' → logprob: -9.12862491607666
    8. '       ' → logprob: -9.87862491607666
    9. '_st' → logprob: -10.12862491607666
    10. '   ' → logprob: -10.37862491607666

Token 43: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00012713817704934627
    2. 'et' → logprob: -9.750126838684082
    3. 'ects' → logprob: -11.000126838684082
    4. 'ests' → logprob: -12.125126838684082
    5. 'e' → logprob: -12.250126838684082
    6. 'sts' → logprob: -12.375126838684082
    7. 'etse' → logprob: -12.375126838684082
    8. 'stre' → logprob: -12.500126838684082
    9. 'etso' → logprob: -12.625126838684082
    10. '```' → logprob: -12.750126838684082

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3500142991542816
    2. '=' → logprob: -1.225014328956604
    3. '=[]' → logprob: -6.4750142097473145
    4. '[]' → logprob: -11.600014686584473
    5. ',' → logprob: -11.975014686584473
    6. ']' → logprob: -12.975014686584473
    7. ')' → logprob: -13.350014686584473
    8. ' ' → logprob: -13.475014686584473
    9. '=[],' → logprob: -13.725014686584473
    10. '=[]
' → logprob: -14.100014686584473

Token 45: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03809370473027229
    2. ' []' → logprob: -3.2880938053131104
    3. '[]
' → logprob: -10.538093566894531
    4. '[]}' → logprob: -11.538093566894531
    5. ' ' → logprob: -11.788093566894531
    6. 'deque' → logprob: -12.788093566894531
    7. '[]

' → logprob: -13.538093566894531
    8. '[])' → logprob: -14.413093566894531
    9. '=[]' → logprob: -14.663093566894531
    10. '[]>' → logprob: -14.663093566894531

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07955970615148544
    2. '<|end|>' → logprob: -2.954559803009033
    3. 'for' → logprob: -4.579559803009033
    4. ' for' → logprob: -5.829559803009033
    5. ')' → logprob: -5.954559803009033
    6. ' ' → logprob: -6.454559803009033
    7. '<|end|>' → logprob: -6.579559803009033
    8. '    
' → logprob: -6.579559803009033
    9. '  ' → logprob: -7.204559803009033
    10. '	for' → logprob: -7.204559803009033

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4127202332019806
    2. ' for' → logprob: -1.1627202033996582
    3. '<|end|>' → logprob: -5.162720203399658
    4. '	for' → logprob: -5.287720203399658
    5. '   ' → logprob: -5.412720203399658
    6. ' ' → logprob: -5.787720203399658
    7. '    ' → logprob: -6.537720203399658
    8. ')' → logprob: -6.537720203399658
    9. '
' → logprob: -6.787720203399658
    10. '\t' → logprob: -7.787720203399658

Token 48: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.054731398820877075
    2. ' i' → logprob: -3.1797313690185547
    3. ' ' → logprob: -4.804731369018555
    4. '_' → logprob: -5.679731369018555
    5. ' ' → logprob: -10.429731369018555
    6. 'i' → logprob: -11.554731369018555
    7. ' range' → logprob: -11.804731369018555
    8. ' in' → logprob: -12.429731369018555
    9. ' ‌' → logprob: -12.679731369018555
    10. '  ' → logprob: -13.429731369018555

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008595781400799751
    2. 'in' → logprob: -5.008595943450928
    3. 'n' → logprob: -6.633595943450928
    4. ' ' → logprob: -8.50859546661377
    5. '_' → logprob: -9.75859546661377
    6. 'range' → logprob: -10.13359546661377
    7. ' _' → logprob: -10.63359546661377
    8. 'f' → logprob: -11.13359546661377
    9. 'i' → logprob: -11.32109546661377
    10. 's' → logprob: -11.38359546661377

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806260600686073
    2. ' range' → logprob: -3.288062572479248
    3. '(range' → logprob: -11.038063049316406
    4. '	range' → logprob: -12.663063049316406
    5. '_range' → logprob: -14.163063049316406
    6. 'ange' → logprob: -14.913063049316406
    7. 'in' → logprob: -15.913063049316406
    8. '(' → logprob: -16.163063049316406
    9. ' xrange' → logprob: -16.538063049316406
    10. ' ' → logprob: -16.663063049316406

Token 51: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08975248783826828
    2. '(' → logprob: -2.464752435684204
    3. ' (' → logprob: -7.464752674102783
    4. ' n' → logprob: -8.714752197265625
    5. 'n' → logprob: -10.214752197265625
    6. '(int' → logprob: -11.339752197265625
    7. ')' → logprob: -11.589752197265625
    8. '(
' → logprob: -11.964752197265625
    9. '(range' → logprob: -12.214752197265625
    10. ' ' → logprob: -13.089752197265625

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003001239150762558
    2. '):
' → logprob: -6.2530012130737305
    3. ')' → logprob: -7.2530012130737305
    4. ':' → logprob: -8.00300121307373
    5. '   ' → logprob: -11.62800121307373
    6. ' ):' → logprob: -11.62800121307373
    7. ',' → logprob: -12.37800121307373
    8. '):
' → logprob: -13.25300121307373
    9. '():' → logprob: -13.75300121307373
    10. '),' → logprob: -14.62800121307373

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2549227476119995
    2. '       ' → logprob: -1.5049227476119995
    3. '    ' → logprob: -7.129922866821289
    4. '```' → logprob: -7.504922866821289
    5. ' streets' → logprob: -7.879922866821289
    6. '    
' → logprob: -7.879922866821289
    7. ' lines' → logprob: -9.129922866821289
    8. 'input' → logprob: -9.254922866821289
    9. '   ' → logprob: -9.379922866821289
    10. '	   ' → logprob: -9.754922866821289

Token 54: ' xs' (ID: 26642)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3543090522289276
    2. ' x' → logprob: -1.22930908203125
    3. '   ' → logprob: -5.97930908203125
    4. 'a' → logprob: -6.47930908203125
    5. 's' → logprob: -7.60430908203125
    6. ' a' → logprob: -7.97930908203125
    7. ' ' → logprob: -9.22930908203125
    8. 'xi' → logprob: -9.22930908203125
    9. 'xs' (adapté à ' xs') → logprob: -9.22930908203125
    10. ' xi' → logprob: -9.35430908203125

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049853503704071045
    2. '1' → logprob: -3.174853563308716
    3. ',y' → logprob: -5.424853324890137
    4. ',x' → logprob: -7.049853324890137
    5. 's' → logprob: -7.674853324890137
    6. ' ,' → logprob: -7.799853324890137
    7. '0' → logprob: -8.424853324890137
    8. '=' → logprob: -9.174853324890137
    9. 'tr' → logprob: -9.424853324890137
    10. ',t' → logprob: -10.174853324890137

Token 56: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.38739731907844543
    2. ' ys' → logprob: -1.137397289276123
    3. ' ' → logprob: -8.637397766113281
    4. 'yl' → logprob: -9.512397766113281
    5. 's' → logprob: -9.512397766113281
    6. '<|end|>' → logprob: -10.137397766113281
    7. 'ym' → logprob: -10.512397766113281
    8. 'y' → logprob: -10.512397766113281
    9. 'ysm' → logprob: -10.762397766113281
    10. ',' → logprob: -10.762397766113281

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028785800095647573
    2. '=' → logprob: -6.002878665924072
    3. ' =' → logprob: -8.752878189086914
    4. ' ,' → logprob: -8.752878189086914
    5. ',x' → logprob: -10.877878189086914
    6. 's' → logprob: -11.502878189086914
    7. ')' → logprob: -11.627878189086914
    8. '_,' → logprob: -11.752878189086914
    9. ',s' → logprob: -12.565378189086914
    10. '1' → logprob: -12.627878189086914

Token 58: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.3486640751361847
    2. ' xe' → logprob: -1.8486640453338623
    3. 'xf' → logprob: -2.8486640453338623
    4. 'xt' → logprob: -3.8486640453338623
    5. 'xd' → logprob: -3.8486640453338623
    6. '   ' → logprob: -4.848664283752441
    7. 'x' → logprob: -5.223664283752441
    8. '  ' → logprob: -5.848664283752441
    9. ' xd' → logprob: -5.848664283752441
    10. 'd' → logprob: -6.098664283752441

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008781198412179947
    2. 's' → logprob: -4.758781433105469
    3. '<|end|>' → logprob: -9.383781433105469
    4. '=' → logprob: -10.633781433105469
    5. ',s' → logprob: -10.758781433105469
    6. 'w' → logprob: -12.133781433105469
    7. ' ,' → logprob: -12.258781433105469
    8. 'a' → logprob: -12.383781433105469
    9. 'r' → logprob: -13.133781433105469
    10. 'm' → logprob: -13.258781433105469

Token 60: ' ye' (ID: 9225)
  Prédit: ' ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.03463268652558327
    2. 'ys' → logprob: -3.534632682800293
    3. 'ye' → logprob: -6.034632682800293
    4. ' ye' → logprob: -6.159632682800293
    5. '<|end|>' → logprob: -9.909632682800293
    6. ' y' → logprob: -10.284632682800293
    7. 'y' → logprob: -10.284632682800293
    8. 'ym' → logprob: -10.659632682800293
    9. ' yg' → logprob: -10.784632682800293
    10. ' yh' → logprob: -10.784632682800293

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759848356246948
    2. ' =' → logprob: -0.8259848356246948
    3. ',' → logprob: -10.950984954833984
    4. ' ' → logprob: -11.200984954833984
    5. ')' → logprob: -11.950984954833984
    6. '   ' → logprob: -12.325984954833984
    7. '  ' → logprob: -13.950984954833984
    8. '    ' → logprob: -14.200984954833984
    9. '=input' → logprob: -14.325984954833984
    10. '       ' → logprob: -15.700984954833984

Token 62: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00023369524569716305
    2. 'map' → logprob: -8.37523365020752
    3. '	map' → logprob: -13.00023365020752
    4. ' list' → logprob: -14.87523365020752
    5. ' mapa' → logprob: -15.87523365020752
    6. ' ' → logprob: -16.125234603881836
    7. ' input' → logprob: -16.250234603881836
    8. ',map' → logprob: -16.500234603881836
    9. '    ' → logprob: -17.250234603881836
    10. '(map' → logprob: -17.750234603881836

Token 63: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008355968166142702
    2. '(' → logprob: -7.125835418701172
    3. '<|end|>' → logprob: -11.500835418701172
    4. '[int' → logprob: -12.125835418701172
    5. '(lambda' → logprob: -12.375835418701172
    6. '<int' → logprob: -12.875835418701172
    7. '=int' → logprob: -13.125835418701172
    8. ' (' → logprob: -13.500835418701172
    9. '(input' → logprob: -13.625835418701172
    10. '(
' → logprob: -14.125835418701172

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036555302795022726
    2. ')' → logprob: -6.378655433654785
    3. ',input' → logprob: -6.378655433654785
    4. '(' → logprob: -9.378655433654785
    5. '(input' → logprob: -9.378655433654785
    6. '<|end|>' → logprob: -9.878655433654785
    7. '),' → logprob: -11.378655433654785
    8. ' ,' → logprob: -12.753655433654785
    9. '=input' → logprob: -12.753655433654785
    10. '<|end|>' → logprob: -12.753655433654785

Token 65: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407880425453186
    2. ' input' → logprob: -0.9740787744522095
    3. '	input' → logprob: -14.349079132080078
    4. '<input' → logprob: -15.099079132080078
    5. '=input' → logprob: -15.474079132080078
    6. ' ' → logprob: -15.724079132080078
    7. ')' → logprob: -15.849079132080078
    8. '_input' → logprob: -16.099079132080078
    9. ',input' → logprob: -16.224079132080078
    10. '(input' → logprob: -16.474079132080078

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.957014556974173e-05
    2. '()' → logprob: -9.625069618225098
    3. ')' → logprob: -13.750069618225098
    4. '().__' → logprob: -14.125069618225098
    5. '()-' → logprob: -14.875069618225098
    6. '()
' → logprob: -15.125069618225098
    7. '(' → logprob: -15.625069618225098
    8. '()>' → logprob: -16.00006866455078
    9. '()->' → logprob: -16.37506866455078
    10. ' ().' → logprob: -16.50006866455078

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -15.250000953674316
    3. ')' → logprob: -15.375000953674316
    4. '(split' → logprob: -15.500000953674316
    5. 'spl' → logprob: -15.750000953674316
    6. 'strip' → logprob: -16.250001907348633
    7. 'plit' → logprob: -18.000001907348633
    8. '().' → logprob: -18.250001907348633
    9. '.split' → logprob: -18.500001907348633
    10. 'rstrip' → logprob: -19.125001907348633

Token 68: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3214259743690491
    2. '())' → logprob: -1.3214259147644043
    3. '()' → logprob: -4.821425914764404
    4. '(' → logprob: -10.446426391601562
    5. '())
' → logprob: -11.071426391601562
    6. '))' → logprob: -11.321426391601562
    7. ')
' → logprob: -12.071426391601562
    8. '   ' → logprob: -13.071426391601562
    9. ' )' → logprob: -13.321426391601562
    10. ')`' → logprob: -13.446426391601562

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030588123947381973
    2. '<|end|>' → logprob: -3.905588150024414
    3. ')' → logprob: -5.155588150024414
    4. ',' → logprob: -6.405588150024414
    5. '        
' → logprob: -7.155588150024414
    6. '   ' → logprob: -7.655588150024414
    7. '<|end|>' → logprob: -7.780588150024414
    8. '
' → logprob: -7.905588150024414
    9. '           ' → logprob: -9.405588150024414
    10. '),' → logprob: -9.405588150024414

Token 70: ' streets' (ID: 25360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6574752926826477
    2. ' if' → logprob: -1.532475233078003
    3. ' streets' → logprob: -1.907475233078003
    4. 'stre' → logprob: -2.907475233078003
    5. '<|end|>' → logprob: -3.282475233078003
    6. 's' → logprob: -5.157475471496582
    7. '   ' → logprob: -5.282475471496582
    8. ')' → logprob: -5.407475471496582
    9. 'if' → logprob: -5.782475471496582
    10. ',' → logprob: -6.532475471496582

Token 71: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000343210413120687
    2. '.' → logprob: -8.000343322753906
    3. '.extend' → logprob: -12.500343322753906
    4. '.setdefault' → logprob: -12.625343322753906
    5. '.app' → logprob: -15.625343322753906
    6. '.add' → logprob: -15.750343322753906
    7. '.push' → logprob: -16.375343322753906
    8. ' .' → logprob: -16.500343322753906
    9. '.py' → logprob: -16.875343322753906
    10. ').' → logprob: -17.000343322753906

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019745498429983854
    2. '(' → logprob: -6.251974582672119
    3. '(((' → logprob: -10.126974105834961
    4. '([' → logprob: -12.626974105834961
    5. '(([' → logprob: -13.751974105834961
    6. '([(' → logprob: -14.126974105834961
    7. '(
' → logprob: -15.001974105834961
    8. '(('' → logprob: -15.251974105834961
    9. ' ((' → logprob: -16.62697410583496
    10. '((((' → logprob: -17.37697410583496

Token 73: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0033072312362492085
    2. ' xs' → logprob: -5.753307342529297
    3. '(xs' → logprob: -9.003307342529297
    4. 'x' → logprob: -13.378307342529297
    5. '   ' → logprob: -13.378307342529297
    6. ' ' → logprob: -13.753307342529297
    7. '_x' → logprob: -13.878307342529297
    8. ')' → logprob: -14.753307342529297
    9. '  ' → logprob: -15.628307342529297
    10. '(' → logprob: -16.128307342529297

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ' ,' → logprob: -10.625035285949707
    3. '<|end|>' → logprob: -12.250035285949707
    4. ',
' → logprob: -13.000035285949707
    5. ',y' → logprob: -13.375035285949707
    6. '<|end|>' → logprob: -14.250035285949707
    7. ',x' → logprob: -15.125035285949707
    8. ',s' → logprob: -15.625035285949707
    9. '   ' → logprob: -15.750035285949707
    10. '```' → logprob: -15.875035285949707

Token 75: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.05489221587777138
    2. ' ys' → logprob: -2.9298923015594482
    3. 'ysi' → logprob: -12.554892539978027
    4. 'yses' → logprob: -13.304892539978027
    5. 'ysy' → logprob: -13.804892539978027
    6. ' ' → logprob: -14.054892539978027
    7. 'yst' → logprob: -14.179892539978027
    8. 'ysg' → logprob: -15.179892539978027
    9. 'ysig' → logprob: -15.304892539978027
    10. 'ysm' → logprob: -15.304892539978027

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',
' → logprob: -14.375008583068848
    4. ',x' → logprob: -15.750008583068848
    5. '<|end|>' → logprob: -16.125009536743164
    6. ',

' → logprob: -16.375009536743164
    7. ',,' → logprob: -17.250009536743164
    8. '<|end|>' → logprob: -17.375009536743164
    9. '‌,' → logprob: -17.500009536743164
    10. '```' → logprob: -17.500009536743164

Token 77: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.28123438358306885
    2. ' xe' → logprob: -1.4062343835830688
    3. ' ' → logprob: -9.656234741210938
    4. '   ' → logprob: -12.281234741210938
    5. 'xee' → logprob: -12.906234741210938
    6. ',' → logprob: -13.406234741210938
    7. '  ' → logprob: -13.406234741210938
    8. ' ' → logprob: -13.656234741210938
    9. ')' → logprob: -13.781234741210938
    10. '(x' → logprob: -14.156234741210938

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -14.750003814697266
    4. '),' → logprob: -15.875003814697266
    5. '```' → logprob: -16.000003814697266
    6. ')' → logprob: -16.250003814697266
    7. '‌,' → logprob: -16.625003814697266
    8. ',
' → logprob: -16.875003814697266
    9. ',y' → logprob: -16.875003814697266
    10. '`,' → logprob: -17.500003814697266

Token 79: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.004624272231012583
    2. ' ye' → logprob: -5.379624366760254
    3. 'xe' → logprob: -13.504624366760254
    4. 'ey' → logprob: -14.629624366760254
    5. 'ys' → logprob: -14.754624366760254
    6. ' ' → logprob: -15.129624366760254
    7. ' xe' → logprob: -15.379624366760254
    8. 'y' → logprob: -15.754624366760254
    9. ')' → logprob: -15.754624366760254
    10. '   ' → logprob: -16.004623413085938

Token 80: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10032269358634949
    2. ')' → logprob: -2.350322723388672
    3. ',' → logprob: -9.725322723388672
    4. '))
' → logprob: -10.725322723388672
    5. ')))' → logprob: -11.100322723388672
    6. '),' → logprob: -12.100322723388672
    7. ' ))' → logprob: -12.100322723388672
    8. ')
' → logprob: -13.350322723388672
    9. '   ' → logprob: -13.475322723388672
    10. ''))' → logprob: -13.600322723388672

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.170167937874794
    2. '       ' → logprob: -2.045167922973633
    3. '<|end|>' → logprob: -3.920167922973633
    4. '   ' → logprob: -5.920167922973633
    5. '<|end|>' → logprob: -6.795167922973633
    6. '        
' → logprob: -7.045167922973633
    7. ' if' → logprob: -7.670167922973633
    8. '```' → logprob: -7.795167922973633
    9. ' ' → logprob: -8.170167922973633
    10. '        ' → logprob: -8.295167922973633

Token 82: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7214828729629517
    2. 'if' (adapté à ' if') → logprob: -1.2214828729629517
    3. '       ' → logprob: -1.7214828729629517
    4. '   ' → logprob: -3.346482753753662
    5. '
' → logprob: -5.971482753753662
    6. ' ' → logprob: -7.596482753753662
    7. '```' → logprob: -7.846482753753662
    8. '        
' → logprob: -8.09648323059082
    9. '    ' → logprob: -8.47148323059082
    10. 'If' → logprob: -8.59648323059082

Token 83: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.0011743901995941997
    2. 'xs' → logprob: -7.001174449920654
    3. ' ys' → logprob: -8.376173973083496
    4. '(xs' → logprob: -11.376173973083496
    5. ' ' → logprob: -11.501173973083496
    6. ' x' → logprob: -11.751173973083496
    7. 'x' → logprob: -13.751173973083496
    8. ' xe' → logprob: -14.501173973083496
    9. '_x' → logprob: -14.876173973083496
    10. ' y' → logprob: -15.376173973083496

Token 84: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869396448135376
    2. ' ==' → logprob: -1.1369396448135376
    3. '=' → logprob: -10.636940002441406
    4. '>' → logprob: -10.761940002441406
    5. ' >' → logprob: -12.386940002441406
    6. ']==' → logprob: -12.511940002441406
    7. '<' → logprob: -12.511940002441406
    8. '<=' → logprob: -13.261940002441406
    9. '===' → logprob: -13.511940002441406
    10. ' <' → logprob: -13.636940002441406

Token 85: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.0004317420825827867
    2. ' xe' → logprob: -7.750431537628174
    3. ' ' → logprob: -14.375432014465332
    4. '0' → logprob: -15.375432014465332
    5. '   ' → logprob: -15.625432014465332
    6. 'x' → logprob: -16.500431060791016
    7. '  ' → logprob: -17.250431060791016
    8. '```' → logprob: -17.750431060791016
    9. '     ' → logprob: -18.375431060791016
    10. '    ' → logprob: -18.750431060791016

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01579960621893406
    2. ':
' → logprob: -4.265799522399902
    3. '):' → logprob: -6.640799522399902
    4. '):
' → logprob: -8.640799522399902
    5. ',' → logprob: -9.015799522399902
    6. ' :' → logprob: -12.015799522399902
    7. ' and' → logprob: -12.640799522399902
    8. ')' → logprob: -12.640799522399902
    9. '       ' → logprob: -12.640799522399902
    10. '   ' → logprob: -12.765799522399902

Token 87: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4093429148197174
    2. ':
' → logprob: -1.159342885017395
    3. '           ' → logprob: -4.6593427658081055
    4. 'vert' → logprob: -5.2843427658081055
    5. '       ' → logprob: -5.9093427658081055
    6. '   ' → logprob: -6.0343427658081055
    7. ' vert' → logprob: -6.2843427658081055
    8. ',' → logprob: -8.034342765808105
    9. ' :
' → logprob: -10.034342765808105
    10. '):
' → logprob: -10.034342765808105

Token 88: ' vert' (ID: 7583)
  Prédit: ' vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vert' → logprob: -0.1090407520532608
    2. 'vert' (adapté à ' vert') → logprob: -2.8590407371520996
    3. '           ' → logprob: -3.2340407371520996
    4. '   ' → logprob: -5.8590407371521
    5. ' vertical' → logprob: -5.8590407371521
    6. '               ' → logprob: -7.7340407371521
    7. 'vertical' → logprob: -9.109041213989258
    8. '_vert' → logprob: -9.609041213989258
    9. '.vert' → logprob: -9.609041213989258
    10. '            ' → logprob: -9.859041213989258

Token 89: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.3856492842023727e-06
    2. ' _' → logprob: -15.000000953674316
    3. '._' → logprob: -15.625000953674316
    4. '_' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'e' → logprob: -16.500001907348633
    7. 't' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.000001907348633
    9. 'stre' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.250001907348633

Token 90: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00046141279744915664
    2. 'r' → logprob: -8.75046157836914
    3. 'reet' → logprob: -9.50046157836914
    4. 'ree' → logprob: -9.87546157836914
    5. 'stre' → logprob: -9.87546157836914
    6. 'rees' → logprob: -10.37546157836914
    7. 'e' → logprob: -10.50046157836914
    8. '_re' → logprob: -11.25046157836914
    9. 'reat' → logprob: -11.75046157836914
    10. 'rets' → logprob: -12.12546157836914

Token 91: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.012452318333089352
    2. '_st' → logprob: -4.887452125549316
    3. '_' → logprob: -6.262452125549316
    4. 'et' → logprob: -6.762452125549316
    5. 'e' → logprob: -7.012452125549316
    6. 'sts' → logprob: -8.137452125549316
    7. 's' → logprob: -8.887452125549316
    8. '_e' → logprob: -9.637452125549316
    9. 'stre' → logprob: -9.762452125549316
    10. 'ests' → logprob: -10.262452125549316

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10028915852308273
    2. '.' → logprob: -2.3502891063690186
    3. '.ap' → logprob: -9.600289344787598
    4. ' .' → logprob: -11.725289344787598
    5. '.app' → logprob: -12.725289344787598
    6. '.push' → logprob: -13.600289344787598
    7. '.extend' → logprob: -13.975289344787598
    8. '.add' → logprob: -14.225289344787598
    9. '.a' → logprob: -15.350289344787598
    10. ').' → logprob: -15.725289344787598

Token 93: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.029790183529257774
    2. '(' → logprob: -3.529790163040161
    3. '(((' → logprob: -10.779789924621582
    4. '(st' → logprob: -11.904789924621582
    5. '(
' → logprob: -12.279789924621582
    6. '(('' → logprob: -12.529789924621582
    7. '(`' → logprob: -14.404789924621582
    8. '(()' → logprob: -14.529789924621582
    9. '(

' → logprob: -14.529789924621582
    10. '(s' → logprob: -14.654789924621582

Token 94: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.04930954426527023
    2. ' xs' → logprob: -3.049309492111206
    3. '(xs' → logprob: -7.549309730529785
    4. 'x' → logprob: -9.924309730529785
    5. '   ' → logprob: -10.174309730529785
    6. 'xe' → logprob: -10.424309730529785
    7. ' ' → logprob: -11.049309730529785
    8. '(' → logprob: -11.424309730529785
    9. 'ys' → logprob: -11.549309730529785
    10. ' (' → logprob: -11.549309730529785

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.717296517104842e-05
    2. ' ,' → logprob: -11.125057220458984
    3. '<|end|>' → logprob: -11.125057220458984
    4. ')' → logprob: -11.250057220458984
    5. ',)' → logprob: -11.625057220458984
    6. ',y' → logprob: -13.500057220458984
    7. ',
' → logprob: -13.750057220458984
    8. '<|end|>' → logprob: -13.875057220458984
    9. '‌,' → logprob: -14.750057220458984
    10. '),' → logprob: -14.875057220458984

Token 96: ' min' (ID: 1349)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.3136066496372223
    2. ' ys' → logprob: -1.3136066198349
    3. ' min' → logprob: -8.688606262207031
    4. ' ' → logprob: -9.563606262207031
    5. 'min' → logprob: -9.938606262207031
    6. 'ye' → logprob: -10.813606262207031
    7. '0' → logprob: -11.813606262207031
    8. ')' → logprob: -12.813606262207031
    9. ' ye' → logprob: -12.813606262207031
    10. 'yst' → logprob: -12.813606262207031

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.4391956685576588e-05
    2. 'ys' → logprob: -11.000024795532227
    3. '(
' → logprob: -12.750024795532227
    4. '(y' → logprob: -13.250024795532227
    5. ' ys' → logprob: -14.125024795532227
    6. '<|end|>' → logprob: -14.375024795532227
    7. ')' → logprob: -14.750024795532227
    8. '(py' → logprob: -15.125024795532227
    9. '(

' → logprob: -15.375024795532227
    10. ' (' → logprob: -15.750024795532227

Token 98: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.05505300313234329
    2. '(' → logprob: -2.9300529956817627
    3. ' ys' → logprob: -8.805052757263184
    4. '{' → logprob: -12.430052757263184
    5. ')' → logprob: -12.555052757263184
    6. 'y' → logprob: -12.680052757263184
    7. '[' → logprob: -12.930052757263184
    8. 'ye' → logprob: -13.305052757263184
    9. '(y' → logprob: -13.680052757263184
    10. '```' → logprob: -14.430052757263184

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034928982495330274
    2. '(' → logprob: -8.750349044799805
    3. ' ,' → logprob: -8.750349044799805
    4. ',y' → logprob: -10.750349044799805
    5. ' ys' → logprob: -12.125349044799805
    6. '(),' → logprob: -14.125349044799805
    7. '),' → logprob: -14.375349044799805
    8. 's' → logprob: -14.500349044799805
    9. '<|end|>' → logprob: -14.750349044799805
    10. ')' → logprob: -15.125349044799805

Token 100: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.020708298310637474
    2. ' ye' → logprob: -3.8957083225250244
    3. 'ys' → logprob: -8.770708084106445
    4. ' ys' → logprob: -12.645708084106445
    5. '   ' → logprob: -13.020708084106445
    6. 'ey' → logprob: -13.145708084106445
    7. ' ' → logprob: -13.395708084106445
    8. 'yes' → logprob: -15.645708084106445
    9. 'ym' → logprob: -15.770708084106445
    10. 'y' → logprob: -15.895708084106445

Token 101: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5732861161231995
    2. '))' → logprob: -1.3232860565185547
    3. ',' → logprob: -1.9482860565185547
    4. ')' → logprob: -4.823286056518555
    5. ')))' → logprob: -4.823286056518555
    6. '()))' → logprob: -5.698286056518555
    7. '(),' → logprob: -5.948286056518555
    8. '(' → logprob: -5.948286056518555
    9. '()),' → logprob: -7.323286056518555
    10. ')),' → logprob: -7.948286056518555

Token 102: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38689443469047546
    2. ' max' → logprob: -1.1368944644927979
    3. 'abs' → logprob: -11.136894226074219
    4. ' abs' → logprob: -12.636894226074219
    5. '(max' → logprob: -12.886894226074219
    6. ',max' → logprob: -13.511894226074219
    7. '	max' → logprob: -14.136894226074219
    8. ' ' → logprob: -15.511894226074219
    9. '   ' → logprob: -15.636894226074219
    10. ')' → logprob: -16.26189422607422

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010592726175673306
    2. '<|end|>' → logprob: -9.250105857849121
    3. ' (' → logprob: -12.625105857849121
    4. ')' → logprob: -13.000105857849121
    5. '(
' → logprob: -13.375105857849121
    6. '((' → logprob: -14.250105857849121
    7. '<|end|>' → logprob: -14.875105857849121
    8. '(`' → logprob: -15.250105857849121
    9. '(min' → logprob: -15.625105857849121
    10. '(

' → logprob: -15.625105857849121

Token 104: 'ys' (ID: 1371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04303184524178505
    2. 'ys' → logprob: -3.168031930923462
    3. ' ys' → logprob: -10.918031692504883
    4. ')' → logprob: -12.418031692504883
    5. '(
' → logprob: -12.918031692504883
    6. ' (' → logprob: -13.168031692504883
    7. 'tys' → logprob: -13.668031692504883
    8. '```' → logprob: -13.918031692504883
    9. 'yses' → logprob: -14.793031692504883
    10. 'ks' → logprob: -14.793031692504883

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.685467764735222e-05
    2. ' ,' → logprob: -9.750086784362793
    3. '))' → logprob: -11.625086784362793
    4. '),' → logprob: -12.125086784362793
    5. ')' → logprob: -12.500086784362793
    6. '<|end|>' → logprob: -12.875086784362793
    7. ')),' → logprob: -13.375086784362793
    8. ')))' → logprob: -13.375086784362793
    9. ',
' → logprob: -14.000086784362793
    10. '<|end|>' → logprob: -14.500086784362793

Token 106: ' ye' (ID: 9225)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.006804067641496658
    2. ' ys' → logprob: -5.0068039894104
    3. 'max' → logprob: -10.506804466247559
    4. '   ' → logprob: -10.756804466247559
    5. ' ' → logprob: -11.006804466247559
    6. ' max' → logprob: -11.881804466247559
    7. ')' → logprob: -13.006804466247559
    8. 'ye' → logprob: -13.631804466247559
    9. 'ysi' → logprob: -13.631804466247559
    10. 'yses' → logprob: -13.881804466247559

Token 107: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03195381909608841
    2. ')))' → logprob: -3.531953811645508
    3. ')' → logprob: -6.156953811645508
    4. '))
' → logprob: -9.781953811645508
    5. '),' → logprob: -11.156953811645508
    6. ' ))' → logprob: -12.156953811645508
    7. ')))
' → logprob: -13.281953811645508
    8. ' ' → logprob: -14.031953811645508
    9. '))))' → logprob: -14.031953811645508
    10. '   ' → logprob: -14.031953811645508

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007947356207296252
    2. '<|end|>' → logprob: -8.375794410705566
    3. ')' → logprob: -8.500794410705566
    4. 'else' → logprob: -8.875794410705566
    5. ' else' → logprob: -9.125794410705566
    6. '   ' → logprob: -10.625794410705566
    7. '```' → logprob: -10.750794410705566
    8. '      ' → logprob: -11.750794410705566
    9. '        ' → logprob: -11.750794410705566
    10. '    ' → logprob: -11.750794410705566

Token 109: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19727535545825958
    2. ' else' → logprob: -1.8222754001617432
    3. 'else' (adapté à ' else') → logprob: -4.072275161743164
    4. '        ' → logprob: -9.447275161743164
    5. '   ' → logprob: -9.447275161743164
    6. ' elif' → logprob: -9.572275161743164
    7. '    ' → logprob: -10.572275161743164
    8. ' ' → logprob: -11.072275161743164
    9. 'elif' → logprob: -11.072275161743164
    10. '	else' → logprob: -11.072275161743164

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003368304343894124
    2. ':
' → logprob: -5.878368377685547
    3. ' :' → logprob: -9.003368377685547
    4. '       ' → logprob: -9.378368377685547
    5. '{' → logprob: -9.503368377685547
    6. '           ' → logprob: -9.753368377685547
    7. ',' → logprob: -10.128368377685547
    8. 'h' → logprob: -10.253368377685547
    9. 's' → logprob: -10.503368377685547
    10. '        ' → logprob: -10.628368377685547

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0941322073340416
    2. 'h' → logprob: -2.7191321849823
    3. '       ' → logprob: -4.719132423400879
    4. ' h' → logprob: -5.094132423400879
    5. ' horiz' → logprob: -5.094132423400879
    6. '(h' → logprob: -7.094132423400879
    7. '	h' → logprob: -7.594132423400879
    8. ',h' → logprob: -7.844132423400879
    9. '   ' → logprob: -8.469132423400879
    10. '```' → logprob: -8.844132423400879

Token 112: ' horiz' (ID: 16700)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11402950435876846
    2. ' horiz' → logprob: -2.2390294075012207
    3. '           ' → logprob: -7.489029407501221
    4. '(h' → logprob: -7.864029407501221
    5. '	h' → logprob: -9.239029884338379
    6. ' h' → logprob: -10.114029884338379
    7. ' horizont' → logprob: -10.614029884338379
    8. 'Horiz' → logprob: -10.739029884338379
    9. 'horizontal' → logprob: -11.114029884338379
    10. 'hor' → logprob: -11.239029884338379

Token 113: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.625001907348633
    3. ' _' → logprob: -15.500001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'St' → logprob: -15.875001907348633
    6. '_s' → logprob: -16.125001907348633
    7. ')_' → logprob: -17.250001907348633
    8. 'st' → logprob: -17.625001907348633
    9. '_str' → logprob: -17.625001907348633
    10. '_h' → logprob: -17.625001907348633

Token 114: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.046285584568977356
    2. '_st' → logprob: -3.546285629272461
    3. 'stre' → logprob: -4.421285629272461
    4. 'reet' → logprob: -6.171285629272461
    5. '_re' → logprob: -7.046285629272461
    6. '_' → logprob: -7.921285629272461
    7. 'ree' → logprob: -7.921285629272461
    8. 'e' → logprob: -8.171285629272461
    9. 'rees' → logprob: -8.921285629272461
    10. 'reat' → logprob: -9.296285629272461

Token 115: 'ets' (ID: 1719)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0023648247588425875
    2. 'ets' → logprob: -6.502364635467529
    3. '_' → logprob: -7.877364635467529
    4. 'et' → logprob: -7.877364635467529
    5. 'stre' → logprob: -9.627365112304688
    6. 'sts' → logprob: -11.127365112304688
    7. 'st' → logprob: -11.752365112304688
    8. 's' → logprob: -12.127365112304688
    9. 'e' → logprob: -12.752365112304688
    10. '_se' → logprob: -13.502365112304688

Token 116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012809180771000683
    2. '.' → logprob: -9.125127792358398
    3. ').' → logprob: -11.625127792358398
    4. '.setdefault' → logprob: -11.875127792358398
    5. '.extend' → logprob: -14.125127792358398
    6. '.app' → logprob: -14.750127792358398
    7. 'append' → logprob: -14.875127792358398
    8. '.add' → logprob: -14.875127792358398
    9. '.Append' → logprob: -15.000127792358398
    10. '].' → logprob: -15.125127792358398

Token 117: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0022033092100173235
    2. '(' → logprob: -6.127203464508057
    3. '(x' → logprob: -11.377202987670898
    4. '(xs' → logprob: -12.877202987670898
    5. '(('' → logprob: -13.377202987670898
    6. ' ((' → logprob: -14.002202987670898
    7. ' (' → logprob: -14.127202987670898
    8. ' ' → logprob: -14.502202987670898
    9. '(
' → logprob: -16.2522029876709
    10. '(s' → logprob: -16.5022029876709

Token 118: 'ys' (ID: 1371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7166187167167664
    2. 'ys' → logprob: -0.7166187167167664
    3. 'min' → logprob: -4.716618537902832
    4. '(min' → logprob: -4.966618537902832
    5. 'ye' → logprob: -5.216618537902832
    6. ' ys' → logprob: -6.716618537902832
    7. ' (' → logprob: -7.841618537902832
    8. ' min' → logprob: -9.716618537902832
    9. '   ' → logprob: -10.091618537902832
    10. '(xs' → logprob: -10.341618537902832

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014931005716789514
    2. ' ,' → logprob: -9.500149726867676
    3. '<|end|>' → logprob: -10.250149726867676
    4. ')' → logprob: -10.875149726867676
    5. ',x' → logprob: -11.625149726867676
    6. ',)' → logprob: -12.250149726867676
    7. ',
' → logprob: -13.250149726867676
    8. '),' → logprob: -14.250149726867676
    9. '<|end|>' → logprob: -14.750149726867676
    10. '           ' → logprob: -15.000149726867676

Token 120: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.038047801703214645
    2. 'min' → logprob: -3.2880477905273438
    3. '(min' → logprob: -12.038047790527344
    4. '[min' → logprob: -15.788047790527344
    5. '	min' → logprob: -16.413047790527344
    6. ' max' → logprob: -16.788047790527344
    7. ',min' → logprob: -17.163047790527344
    8. '0' → logprob: -17.413047790527344
    9. '=min' → logprob: -17.413047790527344
    10. ' ' → logprob: -17.413047790527344

Token 121: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.387180894613266
    2. '(x' → logprob: -1.1371809244155884
    3. '(' → logprob: -8.137181282043457
    4. 'xe' → logprob: -11.637181282043457
    5. '(

' → logprob: -13.262181282043457
    6. '(
' → logprob: -13.512181282043457
    7. '((' → logprob: -13.762181282043457
    8. ' (' → logprob: -14.137181282043457
    9. '(ex' → logprob: -14.387181282043457
    10. ')' → logprob: -14.637181282043457

Token 122: ',' (ID: 11)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.0008042682893574238
    2. ',' → logprob: -7.250804424285889
    3. '(x' → logprob: -9.87580394744873
    4. '(' → logprob: -10.50080394744873
    5. ',x' → logprob: -12.00080394744873
    6. 'xs' → logprob: -12.12580394744873
    7. ' ,' → logprob: -13.37580394744873
    8. ' xs' → logprob: -13.37580394744873
    9. ' (' → logprob: -15.50080394744873
    10. '),' → logprob: -15.62580394744873

Token 123: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.4390159249305725
    2. 'xs' → logprob: -1.0640158653259277
    3. 'max' → logprob: -4.689015865325928
    4. 'x' → logprob: -7.939015865325928
    5. ' xe' → logprob: -7.939015865325928
    6. ' xs' → logprob: -8.814016342163086
    7. 'xes' → logprob: -9.564016342163086
    8. '(xs' → logprob: -9.689016342163086
    9. 'xo' → logprob: -11.939016342163086
    10. '   ' → logprob: -11.939016342163086

Token 124: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11324019730091095
    2. '),' → logprob: -2.2382402420043945
    3. ' ,' → logprob: -8.863240242004395
    4. ')' → logprob: -9.488240242004395
    5. ' ),' → logprob: -9.613240242004395
    6. ',x' → logprob: -9.863240242004395
    7. '(xs' → logprob: -10.738240242004395
    8. '(x' → logprob: -10.863240242004395
    9. '))' → logprob: -11.238240242004395
    10. ',),' → logprob: -11.863240242004395

Token 125: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25193214416503906
    2. 'max' → logprob: -1.501932144165039
    3. '(max' → logprob: -12.751932144165039
    4. '	max' → logprob: -16.75193214416504
    5. ' ' → logprob: -17.12693214416504
    6. '[max' → logprob: -17.25193214416504
    7. ',max' → logprob: -17.25193214416504
    8. 'Max' → logprob: -17.87693214416504
    9. '_max' → logprob: -17.87693214416504
    10. ' ' → logprob: -18.62693214416504

Token 126: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.0006963504129089415
    2. '(' → logprob: -7.375696182250977
    3. '(x' → logprob: -10.250696182250977
    4. '<|end|>' → logprob: -10.875696182250977
    5. '(s' → logprob: -11.875696182250977
    6. ' (' → logprob: -13.125696182250977
    7. '(nx' → logprob: -13.125696182250977
    8. '(
' → logprob: -14.250696182250977
    9. 'xs' → logprob: -14.500696182250977
    10. ')' → logprob: -14.500696182250977

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.574322521686554
    2. '(xs' → logprob: -0.949322521686554
    3. '(' → logprob: -3.074322462081909
    4. '(x' → logprob: -5.949322700500488
    5. ')' → logprob: -7.824322700500488
    6. ' ,' → logprob: -8.824322700500488
    7. 'xs' → logprob: -9.199322700500488
    8. '))' → logprob: -9.199322700500488
    9. '<|end|>' → logprob: -9.324322700500488
    10. ',x' → logprob: -9.324322700500488

Token 128: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.00583138782531023
    2. ' xe' → logprob: -5.630831241607666
    3. 'xs' → logprob: -6.130831241607666
    4. 'x' → logprob: -10.255831718444824
    5. 'max' → logprob: -11.630831718444824
    6. ' xs' → logprob: -12.630831718444824
    7. 'xes' → logprob: -12.880831718444824
    8. '   ' → logprob: -14.130831718444824
    9. ' ' → logprob: -14.505831718444824
    10. 'xee' → logprob: -14.630831718444824

Token 129: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.19498689472675323
    2. '))' → logprob: -1.8199869394302368
    3. ')' → logprob: -4.194986820220947
    4. '))))' → logprob: -10.569987297058105
    5. ')))
' → logprob: -11.319987297058105
    6. '))
' → logprob: -12.819987297058105
    7. '+' → logprob: -12.944987297058105
    8. ')));' → logprob: -12.944987297058105
    9. ' ' → logprob: -13.319987297058105
    10. ' ))' → logprob: -13.444987297058105

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20112021267414093
    2. '   ' → logprob: -2.326120138168335
    3. '<|end|>' → logprob: -3.201120138168335
    4. ')' → logprob: -4.326120376586914
    5. '    
' → logprob: -4.326120376586914
    6. '  
' → logprob: -5.951120376586914
    7. ' 
' → logprob: -6.326120376586914
    8. '```' → logprob: -6.451120376586914
    9. '\n' → logprob: -6.576120376586914
    10. ',' → logprob: -6.576120376586914

Token 131: ' moves' (ID: 19523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09209999442100525
    2. '
' → logprob: -3.217099905014038
    3. '    
' → logprob: -3.842099905014038
    4. '#' → logprob: -5.592100143432617
    5. 'v' → logprob: -5.592100143432617
    6. 'n' → logprob: -5.842100143432617
    7. '  
' → logprob: -6.217100143432617
    8. ')' → logprob: -6.467100143432617
    9. ' 
' → logprob: -6.592100143432617
    10. 'x' → logprob: -6.717100143432617

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032932094763964415
    2. '=' → logprob: -5.753293037414551
    3. '=[]' → logprob: -10.00329303741455
    4. '(' → logprob: -11.37829303741455
    5. '_' → logprob: -11.50329303741455
    6. ' ' → logprob: -11.75329303741455
    7. ')' → logprob: -12.12829303741455
    8. '[]' → logprob: -12.25329303741455
    9. 's' → logprob: -12.25329303741455
    10. '   ' → logprob: -12.50329303741455

Token 133: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4982626736164093
    2. 'deque' → logprob: -1.123262643814087
    3. ' []' → logprob: -3.623262643814087
    4. 'default' → logprob: -3.873262643814087
    5. ' deque' → logprob: -4.748262882232666
    6. ' defaultdict' → logprob: -4.873262882232666
    7. '{}' → logprob: -6.498262882232666
    8. '0' → logprob: -7.498262882232666
    9. '[' → logprob: -7.623262882232666
    10. 'de' → logprob: -8.748262405395508

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05953935161232948
    2. ' ' → logprob: -3.559539318084717
    3. '    ' → logprob: -5.184539318084717
    4. '    
' → logprob: -5.309539318084717
    5. ' for' → logprob: -5.684539318084717
    6. '[' → logprob: -5.809539318084717
    7. '<|end|>' → logprob: -5.934539318084717
    8. 'for' → logprob: -6.184539318084717
    9. ' 
' → logprob: -6.309539318084717
    10. '\' → logprob: -7.059539318084717

Token 135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1504247933626175
    2. ' for' → logprob: -2.2754247188568115
    3. '   ' → logprob: -4.275424957275391
    4. 'n' → logprob: -5.275424957275391
    5. ' ' → logprob: -5.275424957275391
    6. '[' → logprob: -6.025424957275391
    7. 'x' → logprob: -6.275424957275391
    8. '    ' → logprob: -6.400424957275391
    9. 'd' → logprob: -6.650424957275391
    10. 'f' → logprob: -7.275424957275391

Token 136: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.574744462966919
    2. 'vert' → logprob: -1.574744462966919
    3. 'street' → logprob: -1.949744462966919
    4. 'x' → logprob: -2.449744462966919
    5. 'v' → logprob: -2.574744462966919
    6. ' vert' → logprob: -3.449744462966919
    7. ' street' → logprob: -3.449744462966919
    8. 'h' → logprob: -3.449744462966919
    9. ' i' → logprob: -3.699744462966919
    10. 'vs' → logprob: -3.699744462966919

Token 137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08929711580276489
    2. ' in' → logprob: -2.46429705619812
    3. ' ' → logprob: -8.0892972946167
    4. 'i' → logprob: -11.0892972946167
    5. '0' → logprob: -11.7142972946167
    6. 'range' → logprob: -12.2142972946167
    7. 's' → logprob: -12.8392972946167
    8. '  ' → logprob: -12.8392972946167
    9. 'n' → logprob: -13.0892972946167
    10. '   ' → logprob: -13.4642972946167

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013115993700921535
    2. 'h' → logprob: -5.013115882873535
    3. 'vert' → logprob: -5.138115882873535
    4. ' range' → logprob: -8.138115882873535
    5. '(' → logprob: -9.388115882873535
    6. '(range' → logprob: -9.638115882873535
    7. 'stre' → logprob: -11.138115882873535
    8. 'ranges' → logprob: -11.513115882873535
    9. 'st' → logprob: -12.388115882873535
    10. 'hor' → logprob: -12.638115882873535

Token 139: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.41050294041633606
    2. '(n' → logprob: -1.1605029106140137
    3. '(' → logprob: -4.035502910614014
    4. 't' → logprob: -5.535502910614014
    5. 'n' → logprob: -7.535502910614014
    6. '(q' → logprob: -7.660502910614014
    7. '(int' → logprob: -8.410503387451172
    8. '(m' → logprob: -9.160503387451172
    9. '(len' → logprob: -9.410503387451172
    10. ' (' → logprob: -9.410503387451172

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002322364365682006
    2. '):
' → logprob: -6.252322196960449
    3. ')' → logprob: -8.50232219696045
    4. '+' → logprob: -8.75232219696045
    5. ' ):' → logprob: -11.00232219696045
    6. ':' → logprob: -12.12732219696045
    7. '*' → logprob: -12.25232219696045
    8. ',' → logprob: -13.12732219696045
    9. '   ' → logprob: -13.37732219696045
    10. '():' → logprob: -14.87732219696045

Token 141: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3618582785129547
    2. '       ' → logprob: -1.6118582487106323
    3. ' moves' → logprob: -2.986858367919922
    4. 'input' → logprob: -3.861858367919922
    5. ' input' → logprob: -4.486858367919922
    6. 'moves' → logprob: -4.986858367919922
    7. '    ' → logprob: -5.361858367919922
    8. '(' → logprob: -6.111858367919922
    9. ' (' → logprob: -6.361858367919922
    10. ' move' → logprob: -6.736858367919922

Token 142: ' d' (ID: 272)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3301279544830322
    2. 'moves' → logprob: -1.7051279544830322
    3. 'dx' → logprob: -2.3301279544830322
    4. 'a' → logprob: -2.3301279544830322
    5. 'd' (adapté à ' d') → logprob: -3.0801279544830322
    6. ' moves' → logprob: -3.4551279544830322
    7. 'direction' → logprob: -3.7051279544830322
    8. 'dir' → logprob: -3.8301279544830322
    9. 'move' → logprob: -3.9551279544830322
    10. '   ' → logprob: -3.9551279544830322

Token 143: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4050692915916443
    2. ',' → logprob: -2.155069351196289
    3. 'irection' → logprob: -2.280069351196289
    4. ' =' → logprob: -2.780069351196289
    5. 'ir' → logprob: -4.030069351196289
    6. 'irections' → logprob: -4.030069351196289
    7. '=' → logprob: -4.780069351196289
    8. 'i' → logprob: -6.155069351196289
    9. 's' → logprob: -6.655069351196289
    10. ',x' → logprob: -7.030069351196289

Token 144: ' c' (ID: 274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.8055394887924194
    2. 'dist' → logprob: -2.305539608001709
    3. ' dist' → logprob: -2.430539608001709
    4. 's' → logprob: -2.430539608001709
    5. 'k' → logprob: -2.555539608001709
    6. '_' → logprob: -2.555539608001709
    7. ' s' → logprob: -2.680539608001709
    8. ' l' → logprob: -2.680539608001709
    9. 'x' → logprob: -3.555539608001709
    10. 'c' → logprob: -3.555539608001709

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6558728814125061
    2. ' =' → logprob: -0.7808728814125061
    3. ',' → logprob: -3.7808728218078613
    4. ')' → logprob: -9.90587329864502
    5. ' ,' → logprob: -10.28087329864502
    6. ' ' → logprob: -10.40587329864502
    7. 'ount' → logprob: -10.65587329864502
    8. '_' → logprob: -11.28087329864502
    9. 's' → logprob: -11.53087329864502
    10. 'x' → logprob: -12.15587329864502

Token 146: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25234681367874146
    2. 'input' → logprob: -1.5023467540740967
    3. ' map' → logprob: -8.127346992492676
    4. 'map' → logprob: -9.252346992492676
    5. '(input' → logprob: -12.127346992492676
    6. '[input' → logprob: -12.252346992492676
    7. '=input' → logprob: -12.377346992492676
    8. ' ' → logprob: -12.377346992492676
    9. '	input' → logprob: -13.502346992492676
    10. ',input' → logprob: -13.752346992492676

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052414643578231335
    2. '()' → logprob: -5.255241394042969
    3. '(' → logprob: -12.755241394042969
    4. '()[' → logprob: -12.755241394042969
    5. ' ().' → logprob: -14.755241394042969
    6. '()
' → logprob: -15.130241394042969
    7. '('' → logprob: -15.630241394042969
    8. '()

' → logprob: -16.13024139404297
    9. '.' → logprob: -16.13024139404297
    10. '.split' → logprob: -16.25524139404297

Token 148: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007112398743629456
    2. 'strip' → logprob: -7.250711441040039
    3. ' split' → logprob: -14.125711441040039
    4. 'rstrip' → logprob: -14.500711441040039
    5. 'spl' → logprob: -17.25071144104004
    6. '_split' → logprob: -18.00071144104004
    7. '.split' → logprob: -18.25071144104004
    8. '(split' → logprob: -19.25071144104004
    9. 'plit' → logprob: -19.87571144104004
    10. 'sp' → logprob: -21.00071144104004

Token 149: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11409693956375122
    2. '[' → logprob: -2.7390968799591064
    3. ')' → logprob: -4.1140971183776855
    4. '(' → logprob: -4.1140971183776855
    5. '('' → logprob: -5.9890971183776855
    6. '<|end|>' → logprob: -6.1140971183776855
    7. ',' → logprob: -6.3640971183776855
    8. '   ' → logprob: -6.7390971183776855
    9. '[]' → logprob: -7.2390971183776855
    10. '[
' → logprob: -7.8640971183776855

Token 150: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16586744785308838
    2. '<|end|>' → logprob: -2.040867328643799
    3. '    
' → logprob: -4.790867328643799
    4. '<|end|>' → logprob: -5.915867328643799
    5. '       ' → logprob: -6.040867328643799
    6. '    ' → logprob: -6.290867328643799
    7. ')' → logprob: -6.415867328643799
    8. ' ' → logprob: -6.415867328643799
    9. ',' → logprob: -6.665867328643799
    10. ' 
' → logprob: -6.665867328643799

Token 151: ' moves' (ID: 19523)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.43217283487319946
    2. 'c' → logprob: -1.1821727752685547
    3. ' moves' → logprob: -4.182172775268555
    4. 'moves' (adapté à ' moves') → logprob: -4.557172775268555
    5. ' d' → logprob: -4.807172775268555
    6. 'd' → logprob: -4.807172775268555
    7. '   ' → logprob: -7.057172775268555
    8. '    ' → logprob: -7.307172775268555
    9. 'count' → logprob: -8.182172775268555
    10. 'm' → logprob: -9.182172775268555

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019310165662318468
    2. '.' → logprob: -6.251931190490723
    3. ' .' → logprob: -14.251931190490723
    4. '.ap' → logprob: -14.376931190490723
    5. '.extend' → logprob: -14.751931190490723
    6. 'append' → logprob: -14.876931190490723
    7. '.app' → logprob: -16.001930236816406
    8. '.Append' → logprob: -16.626930236816406
    9. '.setdefault' → logprob: -16.751930236816406
    10. '=' → logprob: -17.001930236816406

Token 153: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06288502365350723
    2. '(' → logprob: -2.812885046005249
    3. '(('' → logprob: -7.18788480758667
    4. '(("' → logprob: -9.062885284423828
    5. ' (' → logprob: -10.687885284423828
    6. ' ((' → logprob: -12.312885284423828
    7. '('' → logprob: -12.562885284423828
    8. '(
' → logprob: -12.812885284423828
    9. '(int' → logprob: -13.187885284423828
    10. '(c' → logprob: -13.187885284423828

Token 154: 'int' (ID: 491)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001964082010090351
    2. ' d' → logprob: -6.251964092254639
    3. 'int' → logprob: -10.87696361541748
    4. ''d' → logprob: -11.87696361541748
    5. '   ' → logprob: -12.25196361541748
    6. ' ' → logprob: -13.50196361541748
    7. ')d' → logprob: -14.00196361541748
    8. '    ' → logprob: -14.37696361541748
    9. ' int' → logprob: -14.50196361541748
    10. '  ' → logprob: -14.50196361541748

Token 155: '(d' (ID: 2572)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2166179120540619
    2. '(d' → logprob: -1.7166179418563843
    3. '(' → logprob: -4.591618061065674
    4. 'c' → logprob: -5.841618061065674
    5. ')' → logprob: -7.216618061065674
    6. 'd' → logprob: -7.716618061065674
    7. ')(' → logprob: -8.466617584228516
    8. '(
' → logprob: -8.841617584228516
    9. ')c' → logprob: -9.216617584228516
    10. '(t' → logprob: -9.591617584228516

Token 156: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002252910751849413
    2. ')' → logprob: -6.25225305557251
    3. ',' → logprob: -8.252252578735352
    4. ' ),' → logprob: -10.127252578735352
    5. '),(' → logprob: -11.377252578735352
    6. ' ' → logprob: -13.002252578735352
    7. '0' → logprob: -13.502252578735352
    8. ' ,' → logprob: -13.502252578735352
    9. '```' → logprob: -13.877252578735352
    10. ',),' → logprob: -13.877252578735352

Token 157: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6008854508399963
    2. 'int' → logprob: -1.4758853912353516
    3. ' c' → logprob: -1.7258853912353516
    4. ' int' → logprob: -3.1008853912353516
    5. ' ' → logprob: -10.350885391235352
    6. 'float' → logprob: -11.350885391235352
    7. ')c' → logprob: -12.475885391235352
    8. '    ' → logprob: -12.663385391235352
    9. 'str' → logprob: -12.725885391235352
    10. '(int' → logprob: -12.725885391235352

Token 158: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0026006263215094805
    2. ')' → logprob: -6.00260066986084
    3. ' ))' → logprob: -9.37760066986084
    4. '))
' → logprob: -11.00260066986084
    5. ')))' → logprob: -11.75260066986084
    6. ''))' → logprob: -12.12760066986084
    7. '[' → logprob: -12.25260066986084
    8. ' ' → logprob: -13.75260066986084
    9. ' )' → logprob: -13.87760066986084
    10. '))

' → logprob: -14.62760066986084

Token 159: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36088529229164124
    2. '   ' → logprob: -1.8608852624893188
    3. '<|end|>' → logprob: -2.1108853816986084
    4. '    
' → logprob: -4.610885143280029
    5. ')' → logprob: -5.360885143280029
    6. '  
' → logprob: -5.735885143280029
    7. 'def' → logprob: -6.485885143280029
    8. ' 
' → logprob: -6.485885143280029
    9. '#' → logprob: -7.360885143280029
    10. '<|end|>' → logprob: -7.485885143280029

Token 160: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0472036600112915
    2. 'graph' → logprob: -1.2972036600112915
    3. 'visited' → logprob: -2.297203540802002
    4. '#' (adapté à ' #') → logprob: -2.922203540802002
    5. ' graph' → logprob: -3.172203540802002
    6. ' visited' → logprob: -4.047203540802002
    7. 'distance' → logprob: -4.297203540802002
    8. 'dist' → logprob: -4.547203540802002
    9. 'adj' → logprob: -4.672203540802002
    10. 'dp' → logprob: -4.672203540802002

Token 161: ' Build' (ID: 10885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5283541083335876
    2. 'graph' → logprob: -2.2783541679382324
    3. 'visited' → logprob: -2.7783541679382324
    4. 'dp' → logprob: -3.4033541679382324
    5. 'distance' → logprob: -3.5283541679382324
    6. 'time' → logprob: -4.153354167938232
    7. 'queue' → logprob: -4.528354167938232
    8. 'dist' → logprob: -4.528354167938232
    9. 'from' → logprob: -4.653354167938232
    10. ' #' → logprob: -4.653354167938232

Token 162: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.22062978148460388
    2. ' adjacency' → logprob: -2.3456296920776367
    3. 'graph' → logprob: -3.0956296920776367
    4. ' edges' → logprob: -4.095629692077637
    5. ' adj' → logprob: -4.720629692077637
    6. ' a' → logprob: -4.845629692077637
    7. 'adj' → logprob: -4.970629692077637
    8. '<|end|>' → logprob: -5.845629692077637
    9. '_graph' → logprob: -6.220629692077637
    10. ' the' → logprob: -6.470629692077637

Token 163: ' nodes' (ID: 15749)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' intersections' (ID: 143513)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -1.2970359325408936
    2. 'stre' → logprob: -1.2970359325408936
    3. 'vertical' → logprob: -1.6720359325408936
    4. ' vertical' → logprob: -2.1720359325408936
    5. 'vert' → logprob: -2.7970359325408936
    6. ' all' → logprob: -3.4220359325408936
    7. ' vert' → logprob: -3.7970359325408936
    8. 'all' → logprob: -4.422036170959473
    9. 'the' → logprob: -4.922036170959473
    10. 'horizontal' → logprob: -5.172036170959473

Token 168: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4294736683368683
    2. '<|end|>' → logprob: -1.429473638534546
    3. '
' → logprob: -2.929473638534546
    4. '#' → logprob: -4.179473876953125
    5. ',' → logprob: -4.679473876953125
    6. '    
' → logprob: -4.929473876953125
    7. '```' → logprob: -5.429473876953125
    8. 'graph' → logprob: -5.929473876953125
    9. 'vertices' → logprob: -6.054473876953125
    10. 'nodes' → logprob: -6.179473876953125

Token 170: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3895418047904968
    2. 'nodes' → logprob: -2.2645418643951416
    3. ' intersections' → logprob: -3.2645418643951416
    4. 'vertices' → logprob: -3.5145418643951416
    5. ' graph' → logprob: -3.5145418643951416
    6. 'inter' → logprob: -3.8895418643951416
    7. ' nodes' → logprob: -3.8895418643951416
    8. '#' (adapté à ' #') → logprob: -4.3895416259765625
    9. '<|end|>' → logprob: -4.6395416259765625
    10. ' 
' → logprob: -4.8895416259765625

Token 171: ' But' (ID: 3072)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13797789812088013
    2. 'inter' → logprob: -3.3879778385162354
    3. 'nodes' → logprob: -3.3879778385162354
    4. ' graph' → logprob: -3.7629778385162354
    5. ' intersections' → logprob: -4.2629780769348145
    6. 'points' → logprob: -5.1379780769348145
    7. '   ' → logprob: -5.1379780769348145
    8. ' nodes' → logprob: -5.2629780769348145
    9. 'node' → logprob: -6.2629780769348145
    10. 'intersection' → logprob: -6.6379780769348145

Token 172: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6063766479492188
    2. '<|end|>' → logprob: -1.7313766479492188
    3. ',' → logprob: -1.9813766479492188
    4. ' for' → logprob: -2.1063766479492188
    5. ' there' → logprob: -3.6063766479492188
    6. '#' → logprob: -3.6063766479492188
    7. '    ' → logprob: -3.6063766479492188
    8. ' to' → logprob: -3.7313766479492188
    9. ' you' → logprob: -3.7313766479492188
    10. ' we' → logprob: -3.9813766479492188

Token 173: ' car' (ID: 1669)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.2940658628940582
    2. ' next' → logprob: -2.1690659523010254
    3. ' rest' → logprob: -2.4190659523010254
    4. 'y' → logprob: -5.169065952301025
    5. 're' → logprob: -5.169065952301025
    6. ' graph' → logprob: -5.294065952301025
    7. ' y' → logprob: -5.669065952301025
    8. '#' → logprob: -5.669065952301025
    9. 'n' → logprob: -6.044065952301025
    10. ' problem' → logprob: -6.044065952301025

Token 174: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4196692109107971
    2. '<|end|>' → logprob: -1.5446691513061523
    3. ''' → logprob: -3.4196691513061523
    4. '_' → logprob: -3.5446691513061523
    5. ' can' → logprob: -3.9196691513061523
    6. 's' → logprob: -4.294669151306152
    7. ''s' → logprob: -5.044669151306152
    8. ' is' → logprob: -5.294669151306152
    9. '<|end|>' → logprob: -5.544669151306152
    10. ' '' → logprob: -5.669669151306152

Token 175: ' be' (ID: 413)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.6203846335411072
    2. 'only' → logprob: -1.245384693145752
    3. 'move' → logprob: -2.620384693145752
    4. ' move' → logprob: -2.620384693145752
    5. 'travel' → logprob: -5.370384693145752
    6. 'turn' → logprob: -6.245384693145752
    7. 'go' → logprob: -6.370384693145752
    8. 'continue' → logprob: -6.370384693145752
    9. 'stop' → logprob: -6.495384693145752
    10. ' travel' → logprob: -6.620384693145752

Token 176: ' anywhere' (ID: 15907)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6466498374938965
    2. 'on' → logprob: -1.3966498374938965
    3. 'only' → logprob: -2.2716498374938965
    4. ' at' → logprob: -3.1466498374938965
    5. ' on' → logprob: -3.7716498374938965
    6. 'located' → logprob: -4.3966498374938965
    7. 'placed' → logprob: -4.7716498374938965
    8. ' only' → logprob: -5.0216498374938965
    9. '```' → logprob: -5.1466498374938965
    10. 'either' → logprob: -5.3966498374938965

Token 177: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' streets' (ID: 25360)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6638160943984985
    2. ' the' → logprob: -1.4138160943984985
    3. 'a' → logprob: -2.163815975189209
    4. ' a' → logprob: -2.413815975189209
    5. ' any' → logprob: -3.788815975189209
    6. 'any' → logprob: -4.788815975189209
    7. 'stre' → logprob: -5.663815975189209
    8. ' streets' → logprob: -6.913815975189209
    9. ' an' → logprob: -7.788815975189209
    10. ' these' → logprob: -7.913815975189209

Token 179: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' not' (ID: 625)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.1205398365855217
    2. ' not' → logprob: -2.245539903640747
    3. 'not' → logprob: -6.245539665222168
    4. 'so' → logprob: -6.495539665222168
    5. ' including' → logprob: -6.995539665222168
    6. '   ' → logprob: -7.370539665222168
    7. '#' → logprob: -7.620539665222168
    8. ' and' → logprob: -7.870539665222168
    9. ',' → logprob: -8.120539665222168
    10. '...' → logprob: -8.120539665222168

Token 181: ' only' (ID: 1606)
  Prédit: ' just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' just' → logprob: -0.06013410910964012
    2. ' only' → logprob: -3.435134172439575
    3. 'just' → logprob: -3.935134172439575
    4. 'only' → logprob: -5.060133934020996
    5. '<|end|>' → logprob: -8.685133934020996
    6. '   ' → logprob: -10.935133934020996
    7. ' ' → logprob: -11.310133934020996
    8. '...' → logprob: -11.560133934020996
    9. 'necessarily' → logprob: -11.685133934020996
    10. '<|end|>' → logprob: -12.560133934020996

Token 182: ' intersections' (ID: 143513)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5333544015884399
    2. 'at' → logprob: -1.40835440158844
    3. ' intersections' → logprob: -2.1583542823791504
    4. 'inter' → logprob: -3.4083542823791504
    5. ' just' → logprob: -5.03335428237915
    6. 'just' → logprob: -5.90835428237915
    7. 'vertices' → logprob: -6.15835428237915
    8. ' ' → logprob: -6.28335428237915
    9. 'nodes' → logprob: -6.65835428237915
    10. 'intersection' → logprob: -7.03335428237915

Token 183: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11501457542181015
    2. '<|end|>' → logprob: -2.9900145530700684
    3. '#' → logprob: -3.8650145530700684
    4. '    
' → logprob: -4.490014553070068
    5. '    ' → logprob: -5.115014553070068
    6. '
' → logprob: -5.115014553070068
    7. ' ' → logprob: -5.240014553070068
    8. ' 
' → logprob: -5.865014553070068
    9. '  
' → logprob: -6.365014553070068
    10. '  ' → logprob: -7.365014553070068

Token 185: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09203802794218063
    2. ' #' → logprob: -3.4670379161834717
    3. 'graph' → logprob: -4.467038154602051
    4. '<|end|>' → logprob: -4.467038154602051
    5. '   ' → logprob: -4.592038154602051
    6. ' graph' → logprob: -4.842038154602051
    7. ' 
' → logprob: -6.467038154602051
    8. ' intersections' → logprob: -6.592038154602051
    9. '
' → logprob: -6.717038154602051
    10. 'edges' → logprob: -6.717038154602051

Token 187: ' represent' (ID: 5188)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8418906927108765
    2. 'continue' → logprob: -1.7168906927108765
    3. ' process' → logprob: -2.216890811920166
    4. ' represent' → logprob: -2.466890811920166
    5. ' model' → logprob: -2.841890811920166
    6. ' consider' → logprob: -3.716890811920166
    7. ' use' → logprob: -3.966890811920166
    8. 'represent' → logprob: -4.091890811920166
    9. 'process' → logprob: -4.341890811920166
    10. 'consider' → logprob: -4.591890811920166

Token 188: ' position' (ID: 4010)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0423486232757568
    2. ' edges' → logprob: -1.5423486232757568
    3. ' each' → logprob: -1.9173486232757568
    4. ' states' → logprob: -2.417348623275757
    5. ' nodes' → logprob: -3.042348623275757
    6. ' positions' → logprob: -3.167348623275757
    7. 'the' → logprob: -3.917348623275757
    8. 'edges' → logprob: -4.042348861694336
    9. ' points' → logprob: -4.292348861694336
    10. 'each' → logprob: -4.667348861694336

Token 189: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.8458836674690247
    2. '<|end|>' → logprob: -0.9708836674690247
    3. 's' → logprob: -1.8458836078643799
    4. ' ' → logprob: -3.84588360786438
    5. '<|end|>' → logprob: -5.470883846282959
    6. ',' → logprob: -6.220883846282959
    7. ')' → logprob: -6.595883846282959
    8. ' by' → logprob: -6.720883846282959
    9. 'as' → logprob: -6.845883846282959
    10. ' tokens' → logprob: -7.845883846282959

Token 190: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7349563241004944
    2. ' (' → logprob: -0.8599563241004944
    3. ' a' → logprob: -3.7349562644958496
    4. 'a' → logprob: -3.7349562644958496
    5. '(' → logprob: -3.8599562644958496
    6. '(a' → logprob: -4.60995626449585
    7. '(position' → logprob: -6.10995626449585
    8. '(state' → logprob: -6.23495626449585
    9. '(distance' → logprob: -6.35995626449585
    10. '(line' → logprob: -6.48495626449585

Token 191: 'street' (ID: 55690)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07165099680423737
    2. ' x' → logprob: -2.821650981903076
    3. '(x' → logprob: -6.071650981903076
    4. ' (' → logprob: -6.571650981903076
    5. ' street' → logprob: -6.696650981903076
    6. ''x' → logprob: -7.321650981903076
    7. 'street' → logprob: -7.446650981903076
    8. '   ' → logprob: -7.446650981903076
    9. 'float' → logprob: -7.571650981903076
    10. 'int' → logprob: -8.071651458740234

Token 192: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0627623200416565
    2. ',' → logprob: -3.5627622604370117
    3. '_index' → logprob: -3.6877622604370117
    4. '_type' → logprob: -5.562762260437012
    5. '_idx' → logprob: -5.937762260437012
    6. '_' → logprob: -8.062762260437012
    7. '_,' → logprob: -8.187762260437012
    8. ')' → logprob: -9.312762260437012
    9. 'index' → logprob: -10.312762260437012
    10. 'id' → logprob: -10.312762260437012

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01018501166254282
    2. ')' → logprob: -4.635185241699219
    3. ',)' → logprob: -8.510185241699219
    4. '[' → logprob: -9.385185241699219
    5. ',
' → logprob: -9.760185241699219
    6. 's' → logprob: -10.635185241699219
    7. ' ,' → logprob: -11.135185241699219
    8. '_' → logprob: -12.010185241699219
    9. '),' → logprob: -12.260185241699219
    10. '_,' → logprob: -12.260185241699219

Token 194: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9263783693313599
    2. 'distance' → logprob: -1.0513783693313599
    3. ' position' → logprob: -2.1763782501220703
    4. ' distance' → logprob: -3.3013782501220703
    5. 'pos' → logprob: -3.4263782501220703
    6. 'fraction' → logprob: -3.6763782501220703
    7. 'offset' → logprob: -4.17637825012207
    8. ' fraction' → logprob: -4.67637825012207
    9. 'dist' → logprob: -5.55137825012207
    10. ' offset' → logprob: -5.80137825012207

Token 195: '_al' (ID: 18493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046927304938435555
    2. ',' → logprob: -6.254692554473877
    3. '_index' → logprob: -6.504692554473877
    4. '_' → logprob: -7.754692554473877
    5. '_on' → logprob: -8.379693031311035
    6. ' )' → logprob: -8.379693031311035
    7. ')_' → logprob: -9.379693031311035
    8. '_)' → logprob: -9.879693031311035
    9. '_in' → logprob: -10.004693031311035
    10. '_idx' → logprob: -10.129693031311035

Token 196: 'ong' (ID: 705)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.028313444927334785
    2. 'n' → logprob: -4.653313636779785
    3. 'l' → logprob: -4.903313636779785
    4. 'g' → logprob: -5.028313636779785
    5. ')' → logprob: -6.778313636779785
    6. 'p' → logprob: -7.653313636779785
    7. 'ph' → logprob: -7.778313636779785
    8. 'r' → logprob: -7.778313636779785
    9. 'ong' → logprob: -7.903313636779785
    10. 'rg' → logprob: -8.528313636779785

Token 197: '_st' (ID: 2518)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0734949111938477
    2. ')' → logprob: -1.1984949111938477
    3. 'the' → logprob: -1.5734949111938477
    4. '_' → logprob: -2.9484949111938477
    5. ' )' → logprob: -3.0734949111938477
    6. '<|end|>' → logprob: -3.9484949111938477
    7. ' ' → logprob: -4.698494911193848
    8. '_the' → logprob: -5.073494911193848
    9. '_st' → logprob: -5.698494911193848
    10. ' a' → logprob: -5.948494911193848

Token 198: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.02611333690583706
    2. 'ret' → logprob: -4.151113510131836
    3. 't' → logprob: -5.401113510131836
    4. 'tre' → logprob: -6.276113510131836
    5. 'r' → logprob: -6.401113510131836
    6. 're' → logprob: -7.151113510131836
    7. 'ree' → logprob: -7.901113510131836
    8. 'e' → logprob: -8.651113510131836
    9. '```' → logprob: -9.526113510131836
    10. 'tr' → logprob: -10.026113510131836

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014647386968135834
    2. ',' → logprob: -4.514647483825684
    3. '_' → logprob: -5.889647483825684
    4. '[' → logprob: -8.014647483825684
    5. '_)' → logprob: -8.139647483825684
    6. ')_' → logprob: -9.889647483825684
    7. '_,' → logprob: -10.264647483825684
    8. ' )' → logprob: -10.514647483825684
    9. ',)' → logprob: -10.764647483825684
    10. 's' → logprob: -11.264647483825684

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3813585340976715
    2. '
' → logprob: -2.2563586235046387
    3. '<|end|>' → logprob: -2.8813586235046387
    4. ':' → logprob: -3.1313586235046387
    5. ')' → logprob: -3.7563586235046387
    6. '\' → logprob: -3.8813586235046387
    7. '#' → logprob: -4.381358623504639
    8. ' ' → logprob: -4.631358623504639
    9. ',' → logprob: -4.631358623504639
    10. '    
' → logprob: -4.881358623504639

Token 201: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' position' (ID: 4010)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2482397556304932
    2. ' ' → logprob: -1.6232397556304932
    3. ' 
' → logprob: -1.8732397556304932
    4. '
' → logprob: -2.123239755630493
    5. '   ' → logprob: -2.123239755630493
    6. '<|end|>' → logprob: -2.623239755630493
    7. 'n' → logprob: -4.373239517211914
    8. '    ' → logprob: -4.748239517211914
    9. '    
' → logprob: -5.248239517211914
    10. '\' → logprob: -5.373239517211914

Token 203: '_al' (ID: 18493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7411022782325745
    2. ' =' → logprob: -1.2411022186279297
    3. 's' → logprob: -2.8661022186279297
    4. ')' → logprob: -2.8661022186279297
    5. '_al' → logprob: -3.1161022186279297
    6. '<|end|>' → logprob: -3.9911022186279297
    7. '<|end|>' → logprob: -4.49110221862793
    8. '=' → logprob: -4.61610221862793
    9. '_s' → logprob: -4.74110221862793
    10. ' ' → logprob: -5.11610221862793

Token 204: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.0013265528250485659
    2. 'on' → logprob: -7.376326560974121
    3. 'o' → logprob: -8.001326560974121
    4. 'og' → logprob: -9.376326560974121
    5. 'ng' → logprob: -10.001326560974121
    6. '_' → logprob: -10.126326560974121
    7. 'ing' → logprob: -10.251326560974121
    8. 'g' → logprob: -11.001326560974121
    9. 's' → logprob: -11.126326560974121
    10. '```' → logprob: -11.126326560974121

Token 205: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.6414721012115479
    2. '_' → logprob: -0.7664721012115479
    3. '_al' → logprob: -5.391471862792969
    4. '<|end|>' → logprob: -6.891471862792969
    5. ' =' → logprob: -7.141471862792969
    6. ')' → logprob: -7.516471862792969
    7. '_s' → logprob: -7.891471862792969
    8. '_on' → logprob: -7.891471862792969
    9. '=' → logprob: -8.141471862792969
    10. '_str' → logprob: -8.391471862792969

Token 206: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.03984447941184044
    2. 'r' → logprob: -3.289844512939453
    3. 're' → logprob: -6.414844512939453
    4. 'ree' → logprob: -9.414844512939453
    5. 'ret' → logprob: -9.664844512939453
    6. '_' → logprob: -12.789844512939453
    7. '_re' → logprob: -12.789844512939453
    8. 'rest' → logprob: -12.914844512939453
    9. 'reep' → logprob: -12.914844512939453
    10. '_r' → logprob: -13.289844512939453

Token 207: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04113876819610596
    2. ')' → logprob: -4.041138648986816
    3. '=' → logprob: -4.791138648986816
    4. ',' → logprob: -5.416138648986816
    5. 's' → logprob: -5.791138648986816
    6. ' +=' → logprob: -6.041138648986816
    7. '<|end|>' → logprob: -6.541138648986816
    8. ' is' → logprob: -7.291138648986816
    9. ':' → logprob: -7.791138648986816
    10. '<|end|>' → logprob: -7.791138648986816

Token 208: ' distance' (ID: 9324)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5627673864364624
    2. '0' → logprob: -1.8127673864364624
    3. 'float' → logprob: -1.8127673864364624
    4. 'int' → logprob: -2.937767505645752
    5. ' int' → logprob: -3.937767505645752
    6. ' a' → logprob: -4.312767505645752
    7. ' ' → logprob: -5.187767505645752
    8. ' lambda' → logprob: -5.687767505645752
    9. 'a' → logprob: -6.187767505645752
    10. ' integer' → logprob: -6.312767505645752

Token 209: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5126522183418274
    2. '<|end|>' → logprob: -1.2626521587371826
    3. '_' → logprob: -3.7626521587371826
    4. ' along' → logprob: -4.012652397155762
    5. '_on' → logprob: -4.262652397155762
    6. ' on' → logprob: -4.262652397155762
    7. '_from' → logprob: -4.387652397155762
    8. 'from' → logprob: -4.887652397155762
    9. '<|end|>' → logprob: -5.137652397155762
    10. ' )' → logprob: -5.262652397155762

Token 210: ' one' (ID: 1001)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4704700708389282
    2. '0' → logprob: -1.4704700708389282
    3. 'the' → logprob: -2.0954699516296387
    4. ' the' → logprob: -4.470469951629639
    5. ' start' → logprob: -4.720469951629639
    6. ' ' → logprob: -7.220469951629639
    7. 'segment' → logprob: -7.470469951629639
    8. 'street' → logprob: -8.470470428466797
    9. 'starting' → logprob: -8.720470428466797
    10. '<|end|>' → logprob: -9.095470428466797

Token 211: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.11950574070215225
    2. ' endpoint' → logprob: -2.4945056438446045
    3. 'end' → logprob: -4.619505882263184
    4. '_end' → logprob: -4.619505882263184
    5. 'endpoint' → logprob: -4.994505882263184
    6. '_endpoint' → logprob: -6.494505882263184
    7. '_' → logprob: -6.744505882263184
    8. ' of' → logprob: -7.619505882263184
    9. ' ' → logprob: -8.744505882263184
    10. ' _' → logprob: -9.369505882263184

Token 212: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7193782925605774
    2. '0' → logprob: -0.7193782925605774
    3. ' of' → logprob: -4.844378471374512
    4. ' ' → logprob: -5.719378471374512
    5. ',' → logprob: -5.844378471374512
    6. 'of' → logprob: -6.094378471374512
    7. '(' → logprob: -6.594378471374512
    8. '   ' → logprob: -6.719378471374512
    9. 'start' → logprob: -6.719378471374512
    10. 'street' → logprob: -6.969378471374512

Token 214: ' point' (ID: 2438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3434865176677704
    2. '_' → logprob: -1.3434865474700928
    3. '_of' → logprob: -5.093486309051514
    4. ')_' → logprob: -5.093486309051514
    5. ' of' → logprob: -5.468486309051514
    6. '_point' → logprob: -5.593486309051514
    7. ',' → logprob: -5.843486309051514
    8. '   ' → logprob: -6.343486309051514
    9. '_)' → logprob: -6.718486309051514
    10. 'of' → logprob: -6.968486309051514

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008325085043907166
    2. ' of' → logprob: -5.008325099945068
    3. ' )' → logprob: -7.258325099945068
    4. 'of' → logprob: -8.13332462310791
    5. ',' → logprob: -8.25832462310791
    6. '_' → logprob: -8.88332462310791
    7. ')_' → logprob: -10.13332462310791
    8. '_of' → logprob: -10.38332462310791
    9. '),' → logprob: -10.75832462310791
    10. ' to' → logprob: -10.75832462310791

Token 216: ' along' (ID: 4251)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1316457986831665
    2. '   ' → logprob: -1.1316457986831665
    3. ':' → logprob: -1.5066457986831665
    4. ',' → logprob: -3.256645679473877
    5. ')' → logprob: -3.381645679473877
    6. '<|end|>' → logprob: -3.756645679473877
    7. '\n' → logprob: -4.631645679473877
    8. '\' → logprob: -5.131645679473877
    9. '<|end|>' → logprob: -6.006645679473877
    10. '_' → logprob: -6.131645679473877

Token 217: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3495306670665741
    2. 'the' → logprob: -1.2245306968688965
    3. ' a' → logprob: -7.7245306968688965
    4. '_' → logprob: -8.474530220031738
    5. '<|end|>' → logprob: -8.724530220031738
    6. '_the' → logprob: -9.224530220031738
    7. 'a' → logprob: -9.849530220031738
    8. 'stre' → logprob: -11.099530220031738
    9. ' street' → logprob: -11.224530220031738
    10. ' _' → logprob: -11.349530220031738

Token 218: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5059862732887268
    2. ' street' → logprob: -1.005986213684082
    3. ' line' → logprob: -4.255986213684082
    4. 'line' → logprob: -4.880986213684082
    5. 'stre' → logprob: -4.880986213684082
    6. ' current' → logprob: -7.255986213684082
    7. 'current' → logprob: -7.630986213684082
    8. 'same' → logprob: -8.755986213684082
    9. ' same' → logprob: -9.005986213684082
    10. '_' → logprob: -9.005986213684082

Token 219: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32809504866600037
    2. '<|end|>' → logprob: -1.8280950784683228
    3. '
' → logprob: -2.703094959259033
    4. '<|end|>' → logprob: -4.453094959259033
    5. '#' → logprob: -4.828094959259033
    6. ',' → logprob: -4.953094959259033
    7. ')' → logprob: -4.953094959259033
    8. '    
' → logprob: -5.703094959259033
    9. ' ' → logprob: -5.703094959259033
    10. '\' → logprob: -6.078094959259033

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.910393238067627
    2. '<|end|>' → logprob: -1.160393238067627
    3. '
' → logprob: -2.660393238067627
    4. '#' → logprob: -3.160393238067627
    5. '\n' → logprob: -3.285393238067627
    6. '\' → logprob: -3.285393238067627
    7. ',' → logprob: -3.785393238067627
    8. ' 
' → logprob: -4.160393238067627
    9. ':' → logprob: -4.410393238067627
    10. ')' → logprob: -4.410393238067627

Token 221: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.21764324605464935
    2. '#' (adapté à ' #') → logprob: -2.0926432609558105
    3. ' graph' → logprob: -3.5926432609558105
    4. 'positions' → logprob: -4.7176432609558105
    5. 'length' → logprob: -4.9676432609558105
    6. 'pos' → logprob: -4.9676432609558105
    7. ' #' → logprob: -5.9676432609558105
    8. 'position' → logprob: -5.9676432609558105
    9. '   ' → logprob: -6.2176432609558105
    10. 'n' → logprob: -6.4676432609558105

Token 222: ' Pre' (ID: 4659)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6622821688652039
    2. '#' → logprob: -1.0372822284698486
    3. 'positions' → logprob: -3.5372822284698486
    4. 'pos' → logprob: -3.9122822284698486
    5. ' graph' → logprob: -4.2872819900512695
    6. 'inter' → logprob: -4.4122819900512695
    7. 'length' → logprob: -4.9122819900512695
    8. 'points' → logprob: -5.1622819900512695
    9. 'adj' → logprob: -5.1622819900512695
    10. ' #' → logprob: -5.5372819900512695

Token 223: 'compute' (ID: 54521)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.4995844066143036
    2. 'dict' → logprob: -1.249584436416626
    3. 'process' → logprob: -2.624584436416626
    4. 'compute' → logprob: -4.499584197998047
    5. 'sent' → logprob: -5.124584197998047
    6. 'fix' → logprob: -5.374584197998047
    7. 'vious' → logprob: -5.874584197998047
    8. 'sum' → logprob: -5.999584197998047
    9. 'serve' → logprob: -6.124584197998047
    10. 'd' → logprob: -7.249584197998047

Token 224: ' street' (ID: 12901)
  Prédit: '_vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vert' → logprob: -1.2498818635940552
    2. '_' → logprob: -1.7498818635940552
    3. 'vert' → logprob: -1.9998818635940552
    4. ' intersections' → logprob: -2.3748817443847656
    5. '_inter' → logprob: -3.1248817443847656
    6. ' vert' → logprob: -3.1248817443847656
    7. 'vertical' → logprob: -3.3748817443847656
    8. ' _' → logprob: -3.4998817443847656
    9. 'positions' → logprob: -3.9998817443847656
    10. 'inter' → logprob: -3.9998817443847656

Token 225: ' lengths' (ID: 51957)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.10540884733200073
    2. '_inter' → logprob: -2.7304089069366455
    3. '_lengths' → logprob: -4.730408668518066
    4. '_nodes' → logprob: -5.355408668518066
    5. '_positions' → logprob: -5.355408668518066
    6. '_connections' → logprob: -5.605408668518066
    7. '_' → logprob: -5.730408668518066
    8. 's' → logprob: -5.855408668518066
    9. '_end' → logprob: -6.105408668518066
    10. 'points' → logprob: -7.105408668518066

Token 226: ' and' (ID: 326)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.1123075485229492
    2. ' =' → logprob: -1.7373075485229492
    3. '_lengths' → logprob: -1.8623075485229492
    4. '   ' → logprob: -1.9873075485229492
    5. ' lengths' → logprob: -3.237307548522949
    6. ',' → logprob: -3.487307548522949
    7. 'stre' → logprob: -3.737307548522949
    8. '=' → logprob: -3.862307548522949
    9. 's' → logprob: -3.862307548522949
    10. ':' → logprob: -3.987307548522949

Token 227: ' direction' (ID: 9262)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.08485579490661621
    2. 'points' → logprob: -3.584855794906616
    3. ' endpoints' → logprob: -3.584855794906616
    4. ' positions' → logprob: -4.834856033325195
    5. 'end' → logprob: -5.834856033325195
    6. 'start' → logprob: -6.584856033325195
    7. ' points' → logprob: -6.709856033325195
    8. 'dire' → logprob: -6.709856033325195
    9. 'interval' → logprob: -6.959856033325195
    10. 'segments' → logprob: -6.959856033325195

Token 228: ' vectors' (ID: 52254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01653175614774227
    2. '_lengths' → logprob: -4.391531944274902
    3. 'length' → logprob: -5.766531944274902
    4. ' lengths' → logprob: -7.891531944274902
    5. ':' → logprob: -9.141531944274902
    6. '_s' → logprob: -9.266531944274902
    7. '_length' → logprob: -9.516531944274902
    8. ',' → logprob: -9.891531944274902
    9. '_' → logprob: -10.266531944274902
    10. 'al' → logprob: -10.891531944274902

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7729767560958862
    2. 'length' → logprob: -1.1479767560958862
    3. 'street' → logprob: -2.522976875305176
    4. 'stre' → logprob: -3.397976875305176
    5. ' lengths' → logprob: -3.772976875305176
    6. '_lengths' → logprob: -4.147976875305176
    7. ' street' → logprob: -4.397976875305176
    8. '
' → logprob: -4.397976875305176
    9. ',' → logprob: -4.522976875305176
    10. 'for' → logprob: -5.022976875305176

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35723182559013367
    2. ':' → logprob: -1.732231855392456
    3. ' =' → logprob: -4.232231616973877
    4. ',' → logprob: -4.232231616973877
    5. ' for' → logprob: -4.357231616973877
    6. 's' → logprob: -4.482231616973877
    7. '_lengths' → logprob: -4.607231616973877
    8. ' streets' → logprob: -4.857231616973877
    9. ':
' → logprob: -4.982231616973877
    10. 'stre' → logprob: -5.107231616973877

Token 231: ' street' (ID: 12901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0013148784637451
    2. ' lengths' → logprob: -1.3763148784637451
    3. ' street' → logprob: -2.001314878463745
    4. 'street' (adapté à ' street') → logprob: -2.501314878463745
    5. 'length' → logprob: -2.626314878463745
    6. 'stre' → logprob: -3.251314878463745
    7. '_lengths' → logprob: -3.876314878463745
    8. ' streets' → logprob: -4.626315116882324
    9. ' length' → logprob: -6.126315116882324
    10. 'Lengths' → logprob: -6.251315116882324

Token 232: '_data' (ID: 3537)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.025091836228966713
    2. '_l' → logprob: -3.9000918865203857
    3. 's' → logprob: -5.525091648101807
    4. '_length' → logprob: -8.025092124938965
    5. '_len' → logprob: -8.900092124938965
    6. '_' → logprob: -10.150092124938965
    7. 'length' → logprob: -10.400092124938965
    8. '_ls' → logprob: -12.025092124938965
    9. '_ids' → logprob: -12.650092124938965
    10. ' _' → logprob: -13.400092124938965

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22593353688716888
    2. '=' → logprob: -1.60093355178833
    3. '[' → logprob: -8.100933074951172
    4. 's' → logprob: -9.475933074951172
    5. '   ' → logprob: -9.850933074951172
    6. '=[]' → logprob: -10.725933074951172
    7. ']' → logprob: -11.100933074951172
    8. ')' → logprob: -11.600933074951172
    9. '[]' → logprob: -11.725933074951172
    10. '_' → logprob: -12.225933074951172

Token 234: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008843714371323586
    2. ' []' → logprob: -4.758843898773193
    3. '[]
' → logprob: -9.008843421936035
    4. '[' → logprob: -9.758843421936035
    5. '{}' → logprob: -10.008843421936035
    6. '[]}' → logprob: -13.883843421936035
    7. ' []
' → logprob: -14.008843421936035
    8. ' [' → logprob: -14.133843421936035
    9. '[]

' → logprob: -14.383843421936035
    10. ' {}' → logprob: -14.758843421936035

Token 235: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8772929906845093
    2. '   ' → logprob: -1.2522929906845093
    3. ' for' → logprob: -1.8772929906845093
    4. '[' → logprob: -2.752293109893799
    5. '[
' → logprob: -3.502293109893799
    6. ' =' → logprob: -4.002293109893799
    7. '=' → logprob: -4.377293109893799
    8. ',' → logprob: -5.127293109893799
    9. '[]' → logprob: -5.377293109893799
    10. '.append' → logprob: -5.752293109893799

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28431349992752075
    2. ' for' → logprob: -1.409313440322876
    3. '   ' → logprob: -5.909313678741455
    4. '  
' → logprob: -9.534313201904297
    5. ' 
' → logprob: -9.534313201904297
    6. '[
' → logprob: -9.909313201904297
    7. ' ' → logprob: -10.284313201904297
    8. '[' → logprob: -10.284313201904297
    9. '    
' → logprob: -10.409313201904297
    10. '
' → logprob: -10.409313201904297

Token 237: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6885654330253601
    2. 'xs' → logprob: -1.3135654926300049
    3. ' i' → logprob: -2.563565492630005
    4. ' xs' → logprob: -2.938565492630005
    5. '(xs' → logprob: -3.938565492630005
    6. '(i' → logprob: -4.063565254211426
    7. '(x' → logprob: -4.313565254211426
    8. ' (' → logprob: -4.438565254211426
    9. '(s' → logprob: -4.688565254211426
    10. 's' → logprob: -4.813565254211426

Token 238: ',(' (ID: 27243)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8167048692703247
    2. ',' → logprob: -1.0667048692703247
    3. ' in' → logprob: -1.5667048692703247
    4. ' ,' → logprob: -5.316704750061035
    5. ' ' → logprob: -8.441704750061035
    6. '_' → logprob: -10.441704750061035
    7. '_in' → logprob: -11.441704750061035
    8. '_,' → logprob: -11.566704750061035
    9. ',in' → logprob: -11.566704750061035
    10. '=' → logprob: -11.816704750061035

Token 239: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0009856504620984197
    2. '_x' → logprob: -8.125986099243164
    3. '(xs' → logprob: -8.250986099243164
    4. ' xs' → logprob: -8.500986099243164
    5. 'x' → logprob: -9.250986099243164
    6. '   ' → logprob: -10.375986099243164
    7. ')' → logprob: -10.875986099243164
    8. '    ' → logprob: -11.875986099243164
    9. 'stre' → logprob: -11.875986099243164
    10. '```' → logprob: -12.000986099243164

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005283685750328004
    2. ' ,' → logprob: -8.250528335571289
    3. ',y' → logprob: -8.375528335571289
    4. ',
' → logprob: -11.250528335571289
    5. 's' → logprob: -11.500528335571289
    6. ',x' → logprob: -13.125528335571289
    7. ',s' → logprob: -13.250528335571289
    8. '_,' → logprob: -13.625528335571289
    9. '‌,' → logprob: -13.625528335571289
    10. ',i' → logprob: -14.000528335571289

Token 241: 'ys' (ID: 1371)
  Prédit: ' ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.2519367039203644
    2. 'ys' → logprob: -1.501936674118042
    3. ' ' → logprob: -12.376936912536621
    4. ' y' → logprob: -14.626936912536621
    5. ',' → logprob: -14.876936912536621
    6. 'y' → logprob: -15.251936912536621
    7. '    ' → logprob: -15.376936912536621
    8. 'YS' → logprob: -15.501936912536621
    9. '   ' → logprob: -15.626936912536621
    10. ' ' → logprob: -15.751936912536621

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034356804098933935
    2. ' ,' → logprob: -8.125343322753906
    3. ',e' → logprob: -10.625343322753906
    4. ',x' → logprob: -11.500343322753906
    5. ',y' → logprob: -12.125343322753906
    6. ',
' → logprob: -12.625343322753906
    7. '   ' → logprob: -14.000343322753906
    8. '_,' → logprob: -14.000343322753906
    9. ',i' → logprob: -15.625343322753906
    10. ')' → logprob: -15.625343322753906

Token 243: 'xe' (ID: 16172)
  Prédit: 'xe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.023253049701452255
    2. ' xe' → logprob: -3.7732529640197754
    3. '   ' → logprob: -12.898253440856934
    4. ' ' → logprob: -13.023253440856934
    5. ',' → logprob: -13.898253440856934
    6. ')' → logprob: -14.273253440856934
    7. 'x' → logprob: -15.273253440856934
    8. 'xee' → logprob: -15.398253440856934
    9. '  ' → logprob: -15.523253440856934
    10. '```' → logprob: -15.648253440856934

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000682530109770596
    2. ',y' → logprob: -7.375682353973389
    3. ' ,' → logprob: -10.125682830810547
    4. ',
' → logprob: -11.500682830810547
    5. ',x' → logprob: -12.875682830810547
    6. ',e' → logprob: -14.500682830810547
    7. ',i' → logprob: -14.750682830810547
    8. ',user' → logprob: -15.000682830810547
    9. ',w' → logprob: -15.000682830810547
    10. ')' → logprob: -15.125682830810547

Token 245: 'ye' (ID: 2422)
  Prédit: 'ye'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -8.160971628967673e-05
    2. ' ye' → logprob: -9.500082015991211
    3. 'xe' → logprob: -13.125082015991211
    4. 'y' → logprob: -14.125082015991211
    5. 'ys' → logprob: -14.375082015991211
    6. 'x' → logprob: -14.375082015991211
    7. ')' → logprob: -14.500082015991211
    8. ' ' → logprob: -14.625082015991211
    9. 'ype' → logprob: -15.000082015991211
    10. '
' → logprob: -15.000082015991211

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.281485836254433e-05
    2. ' )' → logprob: -9.625092506408691
    3. '   ' → logprob: -11.250092506408691
    4. ')
' → logprob: -12.125092506408691
    5. ',)' → logprob: -12.875092506408691
    6. '       ' → logprob: -13.625092506408691
    7. ')=' → logprob: -13.875092506408691
    8. ',' → logprob: -14.375092506408691
    9. '),' → logprob: -15.125092506408691
    10. '    ' → logprob: -15.125092506408691

Token 247: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09204019606113434
    2. ' in' → logprob: -2.7170403003692627
    3. 'in' → logprob: -3.8420403003692627
    4. ',' → logprob: -8.467040061950684
    5. ' )' → logprob: -9.592040061950684
    6. ')=' → logprob: -10.467040061950684
    7. '   ' → logprob: -10.592040061950684
    8. '),' → logprob: -10.717040061950684
    9. '=' → logprob: -11.217040061950684
    10. ',)' → logprob: -11.592040061950684

Token 248: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.25193077325820923
    2. ' enumerate' → logprob: -1.5019307136535645
    3. ' enumer' → logprob: -14.751931190490723
    4. ' streets' → logprob: -14.876931190490723
    5. '   ' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.251931190490723
    7. 'stre' → logprob: -16.501930236816406
    8. '  ' → logprob: -16.626930236816406
    9. 'enum' → logprob: -17.001930236816406
    10. '    ' → logprob: -17.251930236816406

Token 249: '(st' (ID: 4065)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.06212565302848816
    2. ' streets' → logprob: -2.8121256828308105
    3. ')' → logprob: -9.312125205993652
    4. '(st' → logprob: -10.437125205993652
    5. '   ' → logprob: -10.937125205993652
    6. 'st' → logprob: -12.062125205993652
    7. 'enumer' → logprob: -12.562125205993652
    8. '	st' → logprob: -12.812125205993652
    9. ' ' → logprob: -13.062125205993652
    10. 'street' → logprob: -13.937125205993652

Token 250: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.000738038623239845
    2. 'stre' → logprob: -8.125738143920898
    3. 'reet' → logprob: -8.500738143920898
    4. 'e' → logprob: -9.500738143920898
    5. 'rees' → logprob: -9.625738143920898
    6. 'rets' → logprob: -10.625738143920898
    7. 's' → logprob: -11.125738143920898
    8. 'tre' → logprob: -11.250738143920898
    9. 'ree' → logprob: -11.250738143920898
    10. '(re' → logprob: -11.750738143920898

Token 251: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0009468303760513663
    2. 'et' → logprob: -7.000946998596191
    3. 'ts' → logprob: -10.875946998596191
    4. 'sts' → logprob: -11.875946998596191
    5. 'ects' → logprob: -12.625946998596191
    6. ')' → logprob: -13.875946998596191
    7. '   ' → logprob: -13.875946998596191
    8. '[' → logprob: -14.375946998596191
    9. 'ests' → logprob: -14.625946998596191
    10. '[]' → logprob: -14.750946998596191

Token 252: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07010114938020706
    2. '):
' → logprob: -2.695101261138916
    3. '   ' → logprob: -9.695100784301758
    4. '):
' → logprob: -9.820100784301758
    5. ' ):' → logprob: -10.320100784301758
    6. ')' → logprob: -11.820100784301758
    7. ':' → logprob: -12.570100784301758
    8. ' ):
' → logprob: -13.070100784301758
    9. '):

' → logprob: -13.195100784301758
    10. ']:' → logprob: -15.320100784301758

Token 253: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14578942954540253
    2. '       ' → logprob: -2.145789384841919
    3. '
' → logprob: -5.645789623260498
    4. '    ' → logprob: -5.645789623260498
    5. '```' → logprob: -5.770789623260498
    6. '    
' → logprob: -6.520789623260498
    7. ',' → logprob: -6.645789623260498
    8. ' length' → logprob: -7.270789623260498
    9. 'length' → logprob: -7.395789623260498
    10. '[' → logprob: -7.395789623260498

Token 254: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8487876653671265
    2. ' dx' → logprob: -0.8487876653671265
    3. 'length' (adapté à ' length') → logprob: -2.848787784576416
    4. 'dx' → logprob: -2.973787784576416
    5. 'import' → logprob: -4.473787784576416
    6. '   ' → logprob: -4.473787784576416
    7. ' import' → logprob: -5.223787784576416
    8. '       ' → logprob: -5.973787784576416
    9. 'from' → logprob: -6.473787784576416
    10. ' from' → logprob: -6.973787784576416

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474154531955719
    2. '=' → logprob: -0.974154531955719
    3. ',' → logprob: -9.849154472351074
    4. ')' → logprob: -11.099154472351074
    5. 's' → logprob: -12.849154472351074
    6. '=int' → logprob: -12.974154472351074
    7. '   ' → logprob: -13.599154472351074
    8. '_' → logprob: -13.724154472351074
    9. '=len' → logprob: -14.849154472351074
    10. ' =
' → logprob: -15.099154472351074

Token 256: ' abs' (ID: 8443)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05000058561563492
    2. ' ((' → logprob: -3.5500006675720215
    3. 'abs' → logprob: -4.0500006675720215
    4. '(abs' → logprob: -6.0500006675720215
    5. ' abs' → logprob: -8.550000190734863
    6. '(((' → logprob: -10.300000190734863
    7. '(' → logprob: -11.175000190734863
    8. '   ' → logprob: -11.550000190734863
    9. ' ' → logprob: -12.300000190734863
    10. 'int' → logprob: -12.425000190734863

Token 257: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004648696631193161
    2. '(xs' → logprob: -8.00046443939209
    3. '(' → logprob: -9.37546443939209
    4. 'xe' → logprob: -10.75046443939209
    5. '((' → logprob: -10.87546443939209
    6. '_x' → logprob: -13.75046443939209
    7. '

' → logprob: -13.75046443939209
    8. ' xe' → logprob: -14.75046443939209
    9. '(
' → logprob: -15.12546443939209
    10. '(y' → logprob: -15.37546443939209

Token 258: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07904466986656189
    2. 's' → logprob: -2.5790445804595947
    3. 'es' → logprob: -10.579044342041016
    4. '```' → logprob: -10.829044342041016
    5. '_e' → logprob: -11.579044342041016
    6. '[' → logprob: -11.579044342041016
    7. ')' → logprob: -11.579044342041016
    8. '
' → logprob: -11.891544342041016
    9. 'xe' → logprob: -11.891544342041016
    10. '

' → logprob: -12.329044342041016

Token 259: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3786725103855133
    2. '-' → logprob: -1.628672480583191
    3. '-xs' → logprob: -2.1286725997924805
    4. '   ' → logprob: -10.37867259979248
    5. ' ' → logprob: -12.37867259979248
    6. '(xs' → logprob: -13.12867259979248
    7. '	' → logprob: -13.37867259979248
    8. '[' → logprob: -13.75367259979248
    9. '-xl' → logprob: -14.12867259979248
    10. '  ' → logprob: -14.37867259979248

Token 260: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0021960523445159197
    2. ' xs' → logprob: -6.127195835113525
    3. '(xs' → logprob: -11.627196311950684
    4. 'x' → logprob: -14.002196311950684
    5. ' ' → logprob: -14.877196311950684
    6. ')' → logprob: -15.252196311950684
    7. '-xs' → logprob: -15.752196311950684
    8. '
' → logprob: -16.002195358276367
    9. '   ' → logprob: -16.252195358276367
    10. '_x' → logprob: -17.127195358276367

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002116462419508025
    2. ')+' → logprob: -8.500211715698242
    3. ' )' → logprob: -12.250211715698242
    4. ')
' → logprob: -13.250211715698242
    5. '+' → logprob: -15.125211715698242
    6. ')

' → logprob: -15.500211715698242
    7. '[' → logprob: -15.500211715698242
    8. 'if' → logprob: -16.000211715698242
    9. '),' → logprob: -16.125211715698242
    10. '0' → logprob: -16.250211715698242

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10032474249601364
    2. '+' → logprob: -2.3503246307373047
    3. ')' → logprob: -9.475324630737305
    4. ')+' → logprob: -11.100324630737305
    5. ' or' → logprob: -11.975324630737305
    6. ' plus' → logprob: -11.975324630737305
    7. ' if' → logprob: -12.350324630737305
    8. '+y' → logprob: -13.225324630737305
    9. '<|end|>' → logprob: -13.475324630737305
    10. 'if' → logprob: -13.475324630737305

Token 263: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0005532711511477828
    2. ' abs' → logprob: -7.500553131103516
    3. '(abs' → logprob: -15.250553131103516
    4. '.abs' → logprob: -18.125553131103516
    5. '   ' → logprob: -18.625553131103516
    6. '_abs' → logprob: -19.250553131103516
    7. ' ' → logprob: -19.625553131103516
    8. '<|end|>' → logprob: -19.875553131103516
    9. '       ' → logprob: -20.625553131103516
    10. '
' → logprob: -20.875553131103516

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8789383830153383e-05
    2. 'ye' → logprob: -11.625019073486328
    3. ' (' → logprob: -12.500019073486328
    4. '(y' → logprob: -12.750019073486328
    5. ' ye' → logprob: -13.125019073486328
    6. '(abs' → logprob: -14.125019073486328
    7. '   ' → logprob: -15.750019073486328
    8. '(
' → logprob: -16.125019073486328
    9. '(e' → logprob: -16.875019073486328
    10. '((' → logprob: -17.000019073486328

Token 265: 'ye' (ID: 2422)
  Prédit: 'ye'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.0008334511076100171
    2. ' ye' → logprob: -7.125833511352539
    3. '(' → logprob: -11.500833511352539
    4. '   ' → logprob: -12.375833511352539
    5. ' ' → logprob: -12.500833511352539
    6. '
' → logprob: -12.875833511352539
    7. 'ys' → logprob: -13.000833511352539
    8. '  ' → logprob: -13.875833511352539
    9. 'ey' → logprob: -14.125833511352539
    10. ')' → logprob: -14.125833511352539

Token 266: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08894447982311249
    2. '-' → logprob: -2.463944435119629
    3. ' ' → logprob: -12.838944435119629
    4. '   ' → logprob: -13.588944435119629
    5. '  ' → logprob: -15.338944435119629
    6. ',' → logprob: -15.588944435119629
    7. ' ys' → logprob: -15.588944435119629
    8. '       ' → logprob: -16.213945388793945
    9. ' ' → logprob: -16.588945388793945
    10. '<|end|>' → logprob: -16.713945388793945

Token 267: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0002087853499688208
    2. 'ye' → logprob: -8.625208854675293
    3. ' ys' → logprob: -10.500208854675293
    4. 'yes' → logprob: -15.000208854675293
    5. '0' → logprob: -15.375208854675293
    6. ' ' → logprob: -15.500208854675293
    7. '   ' → logprob: -15.750208854675293
    8. 'ysi' → logprob: -16.375207901000977
    9. 'yst' → logprob: -16.375207901000977
    10. '
' → logprob: -16.500207901000977

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028395876288414
    2. ')
' → logprob: -5.8778395652771
    3. '       ' → logprob: -11.502840042114258
    4. ' )' → logprob: -11.627840042114258
    5. ')
' → logprob: -11.752840042114258
    6. '   ' → logprob: -13.377840042114258
    7. ')

' → logprob: -13.752840042114258
    8. '),' → logprob: -14.002840042114258
    9. ')#' → logprob: -14.627840042114258
    10. ')`' → logprob: -14.627840042114258

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1259409487247467
    2. '   ' → logprob: -2.625941038131714
    3. ',' → logprob: -3.375941038131714
    4. ')' → logprob: -5.000940799713135
    5. '<|end|>' → logprob: -5.750940799713135
    6. '        
' → logprob: -7.750940799713135
    7. '    
' → logprob: -8.625941276550293
    8. '[' → logprob: -8.625941276550293
    9. ',
' → logprob: -8.750941276550293
    10. '           ' → logprob: -9.375941276550293

Token 270: ' #' (ID: 1069)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.7985045313835144
    2. ' street' → logprob: -1.1735045909881592
    3. 'dx' → logprob: -2.173504590988159
    4. ' direction' → logprob: -2.798504590988159
    5. 'street' → logprob: -3.673504590988159
    6. 'direction' → logprob: -3.798504590988159
    7. '   ' → logprob: -5.17350435256958
    8. 'dir' → logprob: -5.92350435256958
    9. ' vx' → logprob: -6.04850435256958
    10. ' dir' → logprob: -6.29850435256958

Token 271: ' Direction' (ID: 39049)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.50644850730896
    2. ' dx' → logprob: -1.25644850730896
    3. 'dir' → logprob: -3.38144850730896
    4. 'direction' → logprob: -3.75644850730896
    5. ' direction' → logprob: -4.131448745727539
    6. 'if' → logprob: -4.256448745727539
    7. ' dir' → logprob: -4.756448745727539
    8. ' if' → logprob: -5.131448745727539
    9. '   ' → logprob: -5.631448745727539
    10. ' street' → logprob: -5.881448745727539

Token 272: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31100860238075256
    2. '_vector' → logprob: -2.5610086917877197
    3. 'vector' → logprob: -2.9360086917877197
    4. '_x' → logprob: -3.3110086917877197
    5. ' vector' → logprob: -3.3110086917877197
    6. '=' → logprob: -3.9360086917877197
    7. '_vec' → logprob: -4.061008453369141
    8. 'x' → logprob: -4.186008453369141
    9. '   ' → logprob: -5.436008453369141
    10. '_dx' → logprob: -5.686008453369141

Token 273: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6159548163414001
    2. 'dx' → logprob: -1.865954875946045
    3. '=' → logprob: -2.115954875946045
    4. ' dx' → logprob: -2.365954875946045
    5. '   ' → logprob: -2.490954875946045
    6. ',' → logprob: -6.115954875946045
    7. '(dx' → logprob: -6.615954875946045
    8. ':' → logprob: -7.365954875946045
    9. ' (' → logprob: -7.615954875946045
    10. 'x' → logprob: -7.615954875946045

Token 274: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5942487716674805
    2. '(' → logprob: -1.8442487716674805
    3. '1' → logprob: -2.3442487716674805
    4. '(dx' → logprob: -2.3442487716674805
    5. ' (' → logprob: -2.9692487716674805
    6. ' dx' → logprob: -4.3442487716674805
    7. 'sign' → logprob: -5.0942487716674805
    8. ' ' → logprob: -5.3442487716674805
    9. 'xe' → logprob: -5.3442487716674805
    10. '   ' → logprob: -5.5942487716674805

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003886086633428931
    2. ' ,' → logprob: -8.500388145446777
    3. 'x' → logprob: -10.500388145446777
    4. ' =' → logprob: -10.625388145446777
    5. ',y' → logprob: -10.750388145446777
    6. '=' → logprob: -10.750388145446777
    7. ',
' → logprob: -10.875388145446777
    8. 's' → logprob: -11.250388145446777
    9. 'dy' → logprob: -11.750388145446777
    10. ')' → logprob: -11.750388145446777

Token 276: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.008628287352621555
    2. ' dy' → logprob: -4.7586283683776855
    3. '<|end|>' → logprob: -12.008627891540527
    4. 'd' → logprob: -13.258627891540527
    5. '<|end|>' → logprob: -13.758627891540527
    6. ')' → logprob: -14.008627891540527
    7. 'dyr' → logprob: -14.008627891540527
    8. ' ' → logprob: -14.258627891540527
    9. 'ddy' → logprob: -14.383627891540527
    10. 'dym' → logprob: -14.508627891540527

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005919911898672581
    2. ',' → logprob: -5.880919933319092
    3. ')=' → logprob: -6.005919933319092
    4. '=' → logprob: -8.755919456481934
    5. ' )' → logprob: -8.755919456481934
    6. ' =' → logprob: -9.005919456481934
    7. '   ' → logprob: -9.630919456481934
    8. '),' → logprob: -9.880919456481934
    9. ')
' → logprob: -10.005919456481934
    10. ',)' → logprob: -10.505919456481934

Token 278: ' pointing' (ID: 45521)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33329057693481445
    2. '=' → logprob: -1.3332905769348145
    3. ',' → logprob: -3.9582905769348145
    4. ')' → logprob: -8.083290100097656
    5. '   ' → logprob: -8.208290100097656
    6. ' ' → logprob: -10.708290100097656
    7. 'x' → logprob: -10.708290100097656
    8. 'dx' → logprob: -10.958290100097656
    9. ' ,' → logprob: -10.958290100097656
    10. ',
' → logprob: -11.083290100097656

Token 279: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7714526653289795
    2. 'from' → logprob: -1.3964526653289795
    3. ' from' → logprob: -1.6464526653289795
    4. 'in' → logprob: -2.7714526653289795
    5. ' along' → logprob: -4.396452903747559
    6. 'tow' → logprob: -5.396452903747559
    7. ' =' → logprob: -5.646452903747559
    8. ' towards' → logprob: -5.771452903747559
    9. ' to' → logprob: -5.771452903747559
    10. '=' → logprob: -6.146452903747559

Token 280: ' start' (ID: 1604)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.6357160806655884
    2. '(xs' → logprob: -1.1357160806655884
    3. ' xs' → logprob: -2.385715961456299
    4. 'start' → logprob: -3.635715961456299
    5. ' (' → logprob: -3.760715961456299
    6. '(x' → logprob: -5.885715961456299
    7. '(' → logprob: -6.260715961456299
    8. ' start' → logprob: -6.635715961456299
    9. 'x' → logprob: -7.635715961456299
    10. '(start' → logprob: -7.760715961456299

Token 281: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05266876146197319
    2. ' to' → logprob: -4.052668571472168
    3. '_,' → logprob: -5.052668571472168
    4. ')' → logprob: -5.302668571472168
    5. ' ,' → logprob: -5.427668571472168
    6. '   ' → logprob: -5.427668571472168
    7. '=' → logprob: -5.552668571472168
    8. '_' → logprob: -6.302668571472168
    9. 's' → logprob: -6.677668571472168
    10. 'to' → logprob: -6.802668571472168

Token 282: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03934420645236969
    2. ' end' → logprob: -3.289344310760498
    3. '(end' → logprob: -6.664344310760498
    4. ' (' → logprob: -11.16434383392334
    5. '(' → logprob: -12.16434383392334
    6. '_end' → logprob: -12.28934383392334
    7. '(x' → logprob: -14.16434383392334
    8. ',end' → logprob: -14.41434383392334
    9. ' ' → logprob: -15.16434383392334
    10. 'finish' → logprob: -15.78934383392334

Token 283: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034240162931382656
    2. ')' → logprob: -6.628424167633057
    3. '   ' → logprob: -6.753424167633057
    4. ' ,' → logprob: -7.503424167633057
    5. '),' → logprob: -8.753423690795898
    6. ',
' → logprob: -9.378423690795898
    7. '       ' → logprob: -9.878423690795898
    8. ',x' → logprob: -11.003423690795898
    9. ' =' → logprob: -11.378423690795898
    10. '<|end|>' → logprob: -11.878423690795898

Token 284: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06366340070962906
    2. '   ' → logprob: -3.1886634826660156
    3. '       ' → logprob: -4.688663482666016
    4. ')' → logprob: -5.063663482666016
    5. ',
' → logprob: -6.188663482666016
    6. '<|end|>' → logprob: -6.938663482666016
    7. ' ,' → logprob: -7.313663482666016
    8. ':' → logprob: -8.688663482666016
    9. ' ' → logprob: -8.938663482666016
    10. '    ' → logprob: -8.938663482666016

Token 285: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.7117845416069031
    2. ' (' → logprob: -1.2117846012115479
    3. '(dx' → logprob: -2.211784601211548
    4. 'dx' (adapté à ' dx') → logprob: -2.461784601211548
    5. '(' → logprob: -4.211784362792969
    6. ',' → logprob: -7.086784362792969
    7. ' ' → logprob: -8.086784362792969
    8. '(
' → logprob: -8.961784362792969
    9. ' (
' → logprob: -9.086784362792969
    10. '    ' → logprob: -9.211784362792969

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07434699684381485
    2. ',' → logprob: -2.9493470191955566
    3. ' =' → logprob: -3.9493470191955566
    4. '=

' → logprob: -13.074346542358398
    5. ')' → logprob: -13.324346542358398
    6. 's' → logprob: -13.574346542358398
    7. '=
' → logprob: -13.824346542358398
    8. '=int' → logprob: -14.449346542358398
    9. ' ,' → logprob: -14.449346542358398
    10. '=}' → logprob: -14.574346542358398

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47020360827445984
    2. ' xe' → logprob: -1.9702036380767822
    3. '(x' → logprob: -2.3452036380767822
    4. ' (' → logprob: -2.9702036380767822
    5. '(' → logprob: -3.2202036380767822
    6. 'xe' → logprob: -3.3452036380767822
    7. ' ' → logprob: -4.720203399658203
    8. '0' → logprob: -5.845203399658203
    9. '(ex' → logprob: -7.220203399658203
    10. '(e' → logprob: -7.470203399658203

Token 288: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1131699085235596
    2. 'xe' → logprob: -1.1131699085235596
    3. '(x' → logprob: -1.7381699085235596
    4. '(' → logprob: -1.9881699085235596
    5. '0' → logprob: -4.3631696701049805
    6. ' xe' → logprob: -4.6131696701049805
    7. ' (' → logprob: -5.3631696701049805
    8. ' ' → logprob: -6.8631696701049805
    9. '(e' → logprob: -7.1131696701049805
    10. '(ex' → logprob: -7.7381696701049805

Token 289: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2260037064552307
    2. 'if' → logprob: -1.601003646850586
    3. '
' → logprob: -7.726003646850586
    4. '<|end|>' → logprob: -9.476003646850586
    5. '	if' → logprob: -10.601003646850586
    6. '   ' → logprob: -10.726003646850586
    7. ',' → logprob: -11.101003646850586
    8. ' ' → logprob: -12.976003646850586
    9. '<|end|>' → logprob: -13.601003646850586
    10. '

' → logprob: -13.601003646850586

Token 290: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39067140221595764
    2. 'if' → logprob: -1.1406713724136353
    3. '<|end|>' → logprob: -6.140671253204346
    4. '
' → logprob: -6.515671253204346
    5. '	if' → logprob: -9.765671730041504
    6. ',' → logprob: -9.890671730041504
    7. '<|end|>' → logprob: -10.765671730041504
    8. '   ' → logprob: -11.015671730041504
    9. '  ' → logprob: -12.765671730041504
    10. ' ' → logprob: -12.765671730041504

Token 291: ' dy' (ID: 11996)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41114211082458496
    2. 'dy' (adapté à ' dy') → logprob: -1.911142110824585
    3. ' dy' → logprob: -2.161142110824585
    4. 'if' → logprob: -2.661142110824585
    5. '<|end|>' → logprob: -6.036142349243164
    6. ',' → logprob: -7.536142349243164
    7. ' ' → logprob: -7.661142349243164
    8. '<|end|>' → logprob: -8.661142349243164
    9. '   ' → logprob: -9.411142349243164
    10. '
' → logprob: -9.786142349243164

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768948793411255
    2. ' =' → logprob: -0.8268948793411255
    3. '<|end|>' → logprob: -7.076894760131836
    4. 'if' → logprob: -10.826894760131836
    5. ' ' → logprob: -11.201894760131836
    6. '<|end|>' → logprob: -11.326894760131836
    7. '0' → logprob: -11.451894760131836
    8. ',' → logprob: -11.576894760131836
    9. '   ' → logprob: -11.701894760131836
    10. ' if' → logprob: -11.701894760131836

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2865011394023895
    2. 'ye' → logprob: -1.786501169204712
    3. '0' → logprob: -3.036501169204712
    4. '(' → logprob: -3.661501169204712
    5. ' (' → logprob: -5.661500930786133
    6. '(y' → logprob: -6.536500930786133
    7. ' ' → logprob: -7.161500930786133
    8. '(e' → logprob: -7.286500930786133
    9. '-' → logprob: -7.661500930786133
    10. 'sign' → logprob: -9.286500930786133

Token 294: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23097066581249237
    2. '(' → logprob: -1.9809706211090088
    3. 'ye' → logprob: -3.105970621109009
    4. '0' → logprob: -4.230970859527588
    5. '(e' → logprob: -5.730970859527588
    6. '-' → logprob: -5.980970859527588
    7. '(y' → logprob: -6.730970859527588
    8. ' (' → logprob: -7.230970859527588
    9. ' ' → logprob: -8.10597038269043
    10. '(abs' → logprob: -8.73097038269043

Token 295: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16121777892112732
    2. '
' → logprob: -2.66121768951416
    3. '<|end|>' → logprob: -3.41121768951416
    4. 'if' → logprob: -3.53621768951416
    5. '   ' → logprob: -4.91121768951416
    6. '	if' → logprob: -5.28621768951416
    7. '<|end|>' → logprob: -6.28621768951416
    8. ' for' → logprob: -7.03621768951416
    9. 'for' → logprob: -7.66121768951416
    10. ',' → logprob: -7.91121768951416

Token 296: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06119675189256668
    2. 'if' → logprob: -3.936196804046631
    3. '
' → logprob: -4.186196804046631
    4. '<|end|>' → logprob: -4.186196804046631
    5. '	if' → logprob: -6.061196804046631
    6. ' for' → logprob: -6.436196804046631
    7. ' 
' → logprob: -7.061196804046631
    8. ',' → logprob: -7.061196804046631
    9. '<|end|>' → logprob: -7.561196804046631
    10. ' ' → logprob: -7.561196804046631

Token 297: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07350903004407883
    2. 'if' (adapté à ' if') → logprob: -2.6985089778900146
    3. '	if' → logprob: -7.073509216308594
    4. ' ' → logprob: -7.448509216308594
    5. ' dx' → logprob: -7.448509216308594
    6. 'dx' → logprob: -7.823509216308594
    7. '<|end|>' → logprob: -7.948509216308594
    8. '    ' → logprob: -8.448509216308594
    9. '       ' → logprob: -8.823509216308594
    10. '   ' → logprob: -9.198509216308594

Token 298: ' xe' (ID: 44445)
  Prédit: 'xe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.04110480472445488
    2. ' xe' → logprob: -3.541104793548584
    3. 'xs' → logprob: -4.541104793548584
    4. 'ye' → logprob: -8.041105270385742
    5. ' xs' → logprob: -8.666105270385742
    6. '(xs' → logprob: -10.166105270385742
    7. 'ys' → logprob: -10.916105270385742
    8. '   ' → logprob: -11.041105270385742
    9. 'x' → logprob: -11.166105270385742
    10. '(x' → logprob: -11.541105270385742

Token 299: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2931603789329529
    2. '>' → logprob: -1.4181604385375977
    3. ' !=' → logprob: -4.793160438537598
    4. '!=' → logprob: -6.293160438537598
    5. '-' → logprob: -6.793160438537598
    6. ' -' → logprob: -8.418160438537598
    7. '<|end|>' → logprob: -8.543160438537598
    8. ' ' → logprob: -9.918160438537598
    9. '   ' → logprob: -9.918160438537598
    10. '>x' → logprob: -10.418160438537598

Token 300: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.16023477911949158
    2. ' xs' → logprob: -1.910234808921814
    3. '(xs' → logprob: -12.785234451293945
    4. '=' → logprob: -12.785234451293945
    5. ' ' → logprob: -12.910234451293945
    6. '0' → logprob: -13.910234451293945
    7. 'x' → logprob: -14.160234451293945
    8. '-xs' → logprob: -14.660234451293945
    9. '   ' → logprob: -15.660234451293945
    10. '_x' → logprob: -15.910234451293945

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08612202107906342
    2. ':
' → logprob: -2.5861220359802246
    3. '           ' → logprob: -5.461122035980225
    4. 'dx' → logprob: -6.586122035980225
    5. '       ' → logprob: -7.461122035980225
    6. ' dx' → logprob: -7.711122035980225
    7. '   ' → logprob: -8.836121559143066
    8. ',' → logprob: -8.961121559143066
    9. ':

' → logprob: -9.586121559143066
    10. '(dx' → logprob: -10.211121559143066

Token 302: '           ' (ID: 352)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.16420549154281616
    2. '           ' → logprob: -2.414205551147461
    3. 'dx' → logprob: -3.039205551147461
    4. '	       ' → logprob: -5.414205551147461
    5. '       ' → logprob: -5.914205551147461
    6. '1' → logprob: -6.289205551147461
    7. '(dx' → logprob: -6.539205551147461
    8. '   ' → logprob: -6.789205551147461
    9. '.dx' → logprob: -7.414205551147461
    10. '_dx' → logprob: -7.664205551147461

Token 303: ' dx' (ID: 29472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.497099906206131
    2. ' ' → logprob: -0.9970998764038086
    3. ' dx' → logprob: -3.8720998764038086
    4. 'dx' (adapté à ' dx') → logprob: -6.247099876403809
    5. '    ' → logprob: -12.747099876403809
    6. '_dx' → logprob: -13.747099876403809
    7. 'x' → logprob: -14.122099876403809
    8. '=' → logprob: -14.122099876403809
    9. '(dx' → logprob: -14.372099876403809
    10. ' =' → logprob: -14.497099876403809

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696947157382965
    2. ' =' → logprob: -2.126969575881958
    3. '1' → logprob: -10.251969337463379
    4. ' +=' → logprob: -13.126969337463379
    5. '+=' → logprob: -13.876969337463379
    6. '   ' → logprob: -14.126969337463379
    7. ' ' → logprob: -14.251969337463379
    8. ',' → logprob: -14.626969337463379
    9. '<|end|>' → logprob: -14.626969337463379
    10. ')' → logprob: -16.126970291137695

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '+' → logprob: -15.508614540100098
    4. '   ' → logprob: -17.758615493774414
    5. ' +' → logprob: -18.758615493774414
    6. '  ' → logprob: -19.758615493774414
    7. '    ' → logprob: -20.633615493774414
    8. '```' → logprob: -20.821115493774414
    9. ' ' → logprob: -21.446115493774414
    10. '0' → logprob: -21.633615493774414

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '+' → logprob: -15.000204086303711
    4. ' +' → logprob: -19.50020408630371
    5. '   ' → logprob: -20.12520408630371
    6. '  ' → logprob: -20.37520408630371
    7. '１' → logprob: -21.50020408630371
    8. '```' → logprob: -21.50020408630371
    9. '
' → logprob: -21.81270408630371
    10. '۱' → logprob: -22.12520408630371

Token 307: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3874017894268036
    2. ' elif' → logprob: -1.137401819229126
    3. '<|end|>' → logprob: -8.137401580810547
    4. '	elif' → logprob: -8.762401580810547
    5. '   ' → logprob: -10.012401580810547
    6. ' else' → logprob: -11.637401580810547
    7. ',' → logprob: -12.012401580810547
    8. '       ' → logprob: -12.137401580810547
    9. ')' → logprob: -12.137401580810547
    10. 'else' → logprob: -12.762401580810547

Token 310: ' xe' (ID: 44445)
  Prédit: ' xe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xe' → logprob: -0.5246167778968811
    2. 'xe' → logprob: -0.8996167778968811
    3. 'ye' → logprob: -6.649616718292236
    4. ' ye' → logprob: -9.649617195129395
    5. ' ' → logprob: -9.899617195129395
    6. 'x' → logprob: -10.399617195129395
    7. ' x' → logprob: -11.399617195129395
    8. '   ' → logprob: -11.649617195129395
    9. 'xs' → logprob: -12.024617195129395
    10. '(x' → logprob: -12.149617195129395

Token 311: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0486345998942852
    2. '<' → logprob: -3.0486345291137695
    3. ' ' → logprob: -10.54863452911377
    4. ' >' → logprob: -11.79863452911377
    5. '<x' → logprob: -12.29863452911377
    6. '<|end|>' → logprob: -13.04863452911377
    7. '[' → logprob: -13.92363452911377
    8. '>' → logprob: -14.17363452911377
    9. 'import' → logprob: -14.17363452911377
    10. '<n' → logprob: -14.48613452911377

Token 312: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.3133312463760376
    2. 'xs' → logprob: -1.3133312463760376
    3. '(xs' → logprob: -10.438331604003906
    4. 's' → logprob: -11.313331604003906
    5. ' ' → logprob: -11.313331604003906
    6. '-xs' → logprob: -11.813331604003906
    7. '0' → logprob: -12.313331604003906
    8. 'Xs' → logprob: -12.813331604003906
    9. '<|end|>' → logprob: -14.563331604003906
    10. '1' → logprob: -15.563331604003906

Token 313: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7241695523262024
    2. ' =' → logprob: -1.0991694927215576
    3. '-' → logprob: -2.2241694927215576
    4. '=-' → logprob: -2.8491694927215576
    5. ' -' → logprob: -4.599169731140137
    6. '           ' → logprob: -5.849169731140137
    7. '       ' → logprob: -5.974169731140137
    8. ':' → logprob: -9.349169731140137
    9. '          ' → logprob: -9.349169731140137
    10. '   ' → logprob: -9.474169731140137

Token 314: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05490192025899887
    2. ' -' → logprob: -2.9299018383026123
    3. '           ' → logprob: -11.304902076721191
    4. '       ' → logprob: -12.929902076721191
    5. '1' → logprob: -13.054902076721191
    6. '   ' → logprob: -13.804902076721191
    7. '0' → logprob: -14.429902076721191
    8. '          ' → logprob: -14.804902076721191
    9. ' ' → logprob: -15.054902076721191
    10. '  ' → logprob: -15.929902076721191

Token 315: ' dx' (ID: 29472)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004620830062776804
    2. ' -' → logprob: -5.3796210289001465
    3. '=' → logprob: -15.129620552062988
    4. '−' → logprob: -16.004621505737305
    5. '1' → logprob: -16.629621505737305
    6. '0' → logprob: -17.504621505737305
    7. '=-' → logprob: -17.504621505737305
    8. ' ' → logprob: -17.629621505737305
    9. '   ' → logprob: -17.754621505737305
    10. ' =' → logprob: -17.879621505737305

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602490097284317
    2. ' =' → logprob: -1.9102489948272705
    3. '=-' → logprob: -10.660248756408691
    4. '-' → logprob: -13.785248756408691
    5. '       ' → logprob: -15.785248756408691
    6. '           ' → logprob: -16.535249710083008
    7. '        ' → logprob: -17.035249710083008
    8. ' -' → logprob: -17.410249710083008
    9. '=
' → logprob: -17.410249710083008
    10. ' ' → logprob: -17.660249710083008

Token 317: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.493430894101039e-05
    2. ' -' → logprob: -9.500075340270996
    3. '−' → logprob: -17.50007438659668
    4. '1' → logprob: -17.75007438659668
    5. '```' → logprob: -18.75007438659668
    6. '\-' → logprob: -18.87507438659668
    7. '0' → logprob: -19.75007438659668
    8. '   ' → logprob: -20.00007438659668
    9. '(-' → logprob: -20.00007438659668
    10. ' ' → logprob: -20.25007438659668

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -15.375007629394531
    4. '0' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.50000762939453
    6. '```' → logprob: -19.81250762939453
    7. '  ' → logprob: -19.93750762939453
    8. '<|end|>' → logprob: -19.93750762939453
    9. '-' → logprob: -20.00000762939453
    10. '۱' → logprob: -20.25000762939453

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11881475895643234
    2. '<|end|>' → logprob: -2.243814706802368
    3. ',' → logprob: -5.993814945220947
    4. '
' → logprob: -6.118814945220947
    5. '<|end|>' → logprob: -7.118814945220947
    6. ')' → logprob: -9.618814468383789
    7. '   ' → logprob: -9.743814468383789
    8. 'elif' → logprob: -9.993814468383789
    9. ' elif' → logprob: -10.243814468383789
    10. ',
' → logprob: -10.743814468383789

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007764800917357206
    2. '<|end|>' → logprob: -5.38276481628418
    3. ' elif' → logprob: -6.88276481628418
    4. ' else' → logprob: -7.38276481628418
    5. 'elif' → logprob: -7.88276481628418
    6. '        ' → logprob: -8.38276481628418
    7. 'else' → logprob: -8.63276481628418
    8. '
' → logprob: -9.13276481628418
    9. ' dy' → logprob: -9.25776481628418
    10. '<|end|>' → logprob: -9.50776481628418

Token 321: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22386209666728973
    2. ' dy' → logprob: -2.8488621711730957
    3. ' else' → logprob: -3.0988621711730957
    4. ' if' → logprob: -3.3488621711730957
    5. ' elif' → logprob: -3.5988621711730957
    6. '<|end|>' → logprob: -4.598862171173096
    7. ' ' → logprob: -5.348862171173096
    8. '0' → logprob: -5.723862171173096
    9. 'else' → logprob: -5.723862171173096
    10. ' dx' → logprob: -5.973862171173096

Token 322: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.0031199604272842407
    2. ' ye' → logprob: -5.878119945526123
    3. 'xe' → logprob: -8.253120422363281
    4. 'ys' → logprob: -11.378120422363281
    5. ' ' → logprob: -11.628120422363281
    6. 'x' → logprob: -11.878120422363281
    7. '0' → logprob: -12.003120422363281
    8. '   ' → logprob: -12.503120422363281
    9. '(' → logprob: -12.878120422363281
    10. ' xe' → logprob: -13.378120422363281

Token 323: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42306795716285706
    2. ' <' → logprob: -1.5480679273605347
    3. '>' → logprob: -2.548068046569824
    4. '<' → logprob: -2.923068046569824
    5. '<|end|>' → logprob: -8.673068046569824
    6. ' ' → logprob: -9.673068046569824
    7. '   ' → logprob: -10.673068046569824
    8. '<|end|>' → logprob: -11.298068046569824
    9. 'import' → logprob: -12.173068046569824
    10. '  ' → logprob: -12.173068046569824

Token 324: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.004171594977378845
    2. ' ys' → logprob: -5.504171371459961
    3. ' ' → logprob: -10.254171371459961
    4. 'y' → logprob: -11.129171371459961
    5. 'yst' → logprob: -11.379171371459961
    6. '<|end|>' → logprob: -11.629171371459961
    7. '0' → logprob: -12.004171371459961
    8. 'ysi' → logprob: -13.004171371459961
    9. '   ' → logprob: -13.629171371459961
    10. 'yd' → logprob: -13.879171371459961

Token 325: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02929830178618431
    2. ' =' → logprob: -3.6542983055114746
    3. ':' → logprob: -6.279298305511475
    4. '1' → logprob: -7.029298305511475
    5. ':
' → logprob: -9.529297828674316
    6. '0' → logprob: -9.904297828674316
    7. ' ' → logprob: -10.154297828674316
    8. '   ' → logprob: -10.279297828674316
    9. '       ' → logprob: -11.029297828674316
    10. '           ' → logprob: -11.529297828674316

Token 326: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0774688571691513
    2. '           ' → logprob: -2.9524688720703125
    3. ' ' → logprob: -3.8274688720703125
    4. '   ' → logprob: -8.077468872070312
    5. '0' → logprob: -9.077468872070312
    6. '=' → logprob: -9.327468872070312
    7. '       ' → logprob: -10.452468872070312
    8. ' =' → logprob: -11.202468872070312
    9. '    ' → logprob: -12.577468872070312
    10. '  ' → logprob: -13.202468872070312

Token 327: ' dy' (ID: 11996)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. '-' → logprob: -15.37747573852539
    4. '0' → logprob: -16.62747573852539
    5. '   ' → logprob: -17.00247573852539
    6. '=' → logprob: -18.62747573852539
    7. '+' → logprob: -19.12747573852539
    8. ' -' → logprob: -19.50247573852539
    9. '  ' → logprob: -19.62747573852539
    10. '```' → logprob: -20.37747573852539

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151817843317986
    2. ' =' → logprob: -4.018151760101318
    3. '1' → logprob: -13.268152236938477
    4. ' ' → logprob: -16.393152236938477
    5. '   ' → logprob: -17.018152236938477
    6. '    ' → logprob: -18.643152236938477
    7. '<|end|>' → logprob: -18.643152236938477
    8. '=
' → logprob: -18.768152236938477
    9. '           ' → logprob: -18.768152236938477
    10. '0' → logprob: -19.018152236938477

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.75010871887207
    4. '+' → logprob: -18.25010871887207
    5. '```' → logprob: -19.37510871887207
    6. '<|end|>' → logprob: -19.50010871887207
    7. '-' → logprob: -19.62510871887207
    8. '  ' → logprob: -19.87510871887207
    9. '0' → logprob: -20.43760871887207
    10. '>' → logprob: -20.62510871887207

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -19.500001907348633
    4. '+' → logprob: -19.500001907348633
    5. '<|end|>' → logprob: -20.000001907348633
    6. '0' → logprob: -20.750001907348633
    7. '```' → logprob: -20.875001907348633
    8. '   ' → logprob: -22.000001907348633
    9. '=' → logprob: -22.125001907348633
    10. '>' → logprob: -22.500001907348633

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056123388931155205
    2. 'elif' → logprob: -5.880612373352051
    3. '<|end|>' → logprob: -6.505612373352051
    4. ' elif' → logprob: -6.880612373352051
    5. '<|end|>' → logprob: -9.88061237335205
    6. ' else' → logprob: -9.88061237335205
    7. 'else' → logprob: -10.00561237335205
    8. ',' → logprob: -10.13061237335205
    9. '
' → logprob: -10.50561237335205
    10. ')' → logprob: -10.50561237335205

Token 332: '       ' (ID: 309)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.7075833678245544
    2. '       ' → logprob: -1.0825834274291992
    3. 'elif' → logprob: -1.9575834274291992
    4. '<|end|>' → logprob: -4.332583427429199
    5. ' else' → logprob: -4.582583427429199
    6. '	elif' → logprob: -6.832583427429199
    7. 'else' → logprob: -7.082583427429199
    8. '   ' → logprob: -7.207583427429199
    9. ',' → logprob: -7.457583427429199
    10. '<|end|>' → logprob: -8.8325834274292

Token 333: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.06941241025924683
    2. 'elif' (adapté à ' elif') → logprob: -3.1944124698638916
    3. ' else' → logprob: -3.6944124698638916
    4. '   ' → logprob: -7.4444122314453125
    5. 'else' → logprob: -7.5694122314453125
    6. '	elif' → logprob: -9.944412231445312
    7. '       ' → logprob: -11.069412231445312
    8. '    ' → logprob: -11.194412231445312
    9. '<|end|>' → logprob: -11.444412231445312
    10. ' ' → logprob: -12.069412231445312

Token 334: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.575994074344635
    2. ' ye' → logprob: -0.825994074344635
    3. 'ys' → logprob: -10.575994491577148
    4. ' y' → logprob: -11.450994491577148
    5. ' ys' → logprob: -11.950994491577148
    6. 'y' → logprob: -12.450994491577148
    7. ' ' → logprob: -12.575994491577148
    8. 'ey' → logprob: -14.200994491577148
    9. ' ' → logprob: -14.325994491577148
    10. '   ' → logprob: -14.450994491577148

Token 335: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4287285804748535
    2. ' <' → logprob: -1.0537285804748535
    3. '-' → logprob: -11.178728103637695
    4. ' -' → logprob: -11.678728103637695
    5. ' ' → logprob: -12.928728103637695
    6. '   ' → logprob: -14.928728103637695
    7. '<int' → logprob: -15.053728103637695
    8. '0' → logprob: -15.053728103637695
    9. '<-' → logprob: -15.178728103637695
    10. '[' → logprob: -15.553728103637695

Token 336: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.006864913739264011
    2. ' ys' → logprob: -5.00686502456665
    3. '0' → logprob: -9.506864547729492
    4. 'sy' → logprob: -9.881864547729492
    5. 's' → logprob: -11.131864547729492
    6. ' ' → logprob: -12.631864547729492
    7. 'y' → logprob: -13.256864547729492
    8. '-' → logprob: -13.506864547729492
    9. 'ysi' → logprob: -14.631864547729492
    10. 'ysy' → logprob: -14.756864547729492

Token 337: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8067539930343628
    2. ' =' → logprob: -0.9317539930343628
    3. '-' → logprob: -2.0567541122436523
    4. ' -' → logprob: -3.6817541122436523
    5. '=-' → logprob: -5.056754112243652
    6. '           ' → logprob: -8.681754112243652
    7. '   ' → logprob: -8.681754112243652
    8. ' ' → logprob: -10.431754112243652
    9. '  ' → logprob: -11.306754112243652
    10. '       ' → logprob: -11.431754112243652

Token 338: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029613598599098623
    2. ' -' → logprob: -8.125296592712402
    3. '1' → logprob: -16.625295639038086
    4. '   ' → logprob: -17.875295639038086
    5. '0' → logprob: -20.375295639038086
    6. '```' → logprob: -20.500295639038086
    7. '−' → logprob: -20.750295639038086
    8. ' ' → logprob: -21.500295639038086
    9. '\-' → logprob: -21.500295639038086
    10. '  ' → logprob: -21.875295639038086

Token 339: ' dy' (ID: 11996)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.676292231422849e-05
    2. ' -' → logprob: -11.000017166137695
    3. '1' → logprob: -18.750017166137695
    4. '   ' → logprob: -20.375017166137695
    5. '−' → logprob: -21.000017166137695
    6. '0' → logprob: -21.125017166137695
    7. '\-' → logprob: -21.875017166137695
    8. '```' → logprob: -21.875017166137695
    9. '‌' → logprob: -22.625017166137695
    10. '=' → logprob: -22.875017166137695

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036155125126242638
    2. ' =' → logprob: -6.128615379333496
    3. '-' → logprob: -7.128615379333496
    4. '=-' → logprob: -7.378615379333496
    5. ' -' → logprob: -12.878615379333496
    6. '-=' → logprob: -14.878615379333496
    7. '=
' → logprob: -15.878615379333496
    8. '           ' → logprob: -17.503616333007812
    9. ' ' → logprob: -17.628616333007812
    10. '   ' → logprob: -17.628616333007812

Token 341: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4855663721391466e-05
    2. ' -' → logprob: -11.125015258789062
    3. '1' → logprob: -17.125015258789062
    4. '```' → logprob: -19.250015258789062
    5. '   ' → logprob: -19.750015258789062
    6. '\-' → logprob: -20.125015258789062
    7. '−' → logprob: -21.125015258789062
    8. '
' → logprob: -21.500015258789062
    9. '﻿' → logprob: -21.875015258789062
    10. '‌' → logprob: -22.000015258789062

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.312501907348633
    4. '-' → logprob: -16.687501907348633
    5. '0' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.562501907348633
    7. '
' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '' → logprob: -19.562501907348633
    10. '১' → logprob: -19.937501907348633

Token 343: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07186014205217361
    2. '<|end|>' → logprob: -3.4468600749969482
    3. '   ' → logprob: -3.9468600749969482
    4. ')' → logprob: -4.696860313415527
    5. ',' → logprob: -5.321860313415527
    6. '<|end|>' → logprob: -6.946860313415527
    7. '        
' → logprob: -7.446860313415527
    8. ' length' → logprob: -7.821860313415527
    9. '```' → logprob: -8.071860313415527
    10. '	' → logprob: -8.196860313415527

Token 345: ' street' (ID: 12901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2402491420507431
    2. '   ' → logprob: -1.8652491569519043
    3. ' street' → logprob: -3.2402491569519043
    4. ',' → logprob: -5.115249156951904
    5. ')' → logprob: -5.740249156951904
    6. '
' → logprob: -5.990249156951904
    7. ' length' → logprob: -6.115249156951904
    8. 'street' (adapté à ' street') → logprob: -6.240249156951904
    9. '        
' → logprob: -6.865249156951904
    10. '```' → logprob: -7.865249156951904

Token 346: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.478889215737581e-05
    2. 's' → logprob: -10.625054359436035
    3. '_length' → logprob: -11.250054359436035
    4. '_lengths' → logprob: -11.750054359436035
    5. '_' → logprob: -12.125054359436035
    6. '.append' → logprob: -14.000054359436035
    7. 'length' → logprob: -14.375054359436035
    8. '_direction' → logprob: -14.875054359436035
    9. '=' → logprob: -15.125054359436035
    10. 'data' → logprob: -15.125054359436035

Token 347: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024868345353752375
    2. '.' → logprob: -6.002486705780029
    3. ' .' → logprob: -12.002487182617188
    4. '.app' → logprob: -12.752487182617188
    5. '.ap' → logprob: -13.627487182617188
    6. 'append' → logprob: -15.002487182617188
    7. ').' → logprob: -15.377487182617188
    8. '.Append' → logprob: -15.627487182617188
    9. '_append' → logprob: -16.377487182617188
    10. '.push' → logprob: -16.627487182617188

Token 348: '({'' (ID: 35125)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0013350016670301557
    2. '(' → logprob: -6.751335144042969
    3. ' ((' → logprob: -9.001335144042969
    4. ' (' → logprob: -10.876335144042969
    5. '(((' → logprob: -11.501335144042969
    6. '(x' → logprob: -12.501335144042969
    7. '(i' → logprob: -12.751335144042969
    8. '(
' → logprob: -13.751335144042969
    9. '({'' → logprob: -13.751335144042969
    10. '(xs' → logprob: -14.126335144042969

Token 349: 'id' (ID: 315)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.12459535151720047
    2. 'start' → logprob: -2.3745954036712646
    3. 'xs' → logprob: -3.8745954036712646
    4. 'id' → logprob: -6.2495951652526855
    5. 'index' → logprob: -6.7495951652526855
    6. 'len' → logprob: -9.624595642089844
    7. 'idx' → logprob: -9.749595642089844
    8. 'x' → logprob: -10.124595642089844
    9. 'dx' → logprob: -10.624595642089844
    10. ' length' → logprob: -11.374595642089844

Token 350: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -1.6286106983898208e-05
    2. '=i' → logprob: -12.000016212463379
    3. ''' → logprob: -12.250016212463379
    4. ':' → logprob: -12.750016212463379
    5. '":' → logprob: -14.375016212463379
    6. '':[' → logprob: -14.750016212463379
    7. ''i' → logprob: -14.875016212463379
    8. ':i' → logprob: -15.250016212463379
    9. 'i' → logprob: -16.125017166137695
    10. ''=' → logprob: -16.250017166137695

Token 351: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0059290360659360886
    2. ' i' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.380929946899414
    4. '   ' → logprob: -16.380929946899414
    5. '
' → logprob: -16.630929946899414
    6. '  ' → logprob: -17.630929946899414
    7. '	i' → logprob: -17.880929946899414
    8. ',' → logprob: -18.255929946899414
    9. ',i' → logprob: -18.255929946899414
    10. '(i' → logprob: -18.505929946899414

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ',
' → logprob: -10.625052452087402
    3. ' ,' → logprob: -11.125052452087402
    4. ','' → logprob: -11.375052452087402
    5. '',' → logprob: -13.625052452087402
    6. ',

' → logprob: -16.000051498413086
    7. ',
' → logprob: -16.125051498413086
    8. ''' → logprob: -18.000051498413086
    9. ''s' → logprob: -18.000051498413086
    10. ' ,'' → logprob: -18.375051498413086

Token 353: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.16608403623104095
    2. ''' → logprob: -1.9160840511322021
    3. ''s' → logprob: -5.166083812713623
    4. ''x' → logprob: -10.041084289550781
    5. ''type' → logprob: -10.416084289550781
    6. '   ' → logprob: -11.541084289550781
    7. ''name' → logprob: -11.791084289550781
    8. ''t' → logprob: -11.791084289550781
    9. ' length' → logprob: -12.041084289550781
    10. ' ' → logprob: -12.041084289550781

Token 354: 'start' (ID: 5236)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3651661276817322
    2. 'start' → logprob: -1.365166187286377
    3. 'xs' → logprob: -2.990166187286377
    4. 'x' → logprob: -8.990165710449219
    5. 'len' → logprob: -9.365165710449219
    6. ' length' → logprob: -10.115165710449219
    7. ' xs' → logprob: -11.240165710449219
    8. ''' → logprob: -11.865165710449219
    9. '(xs' → logprob: -12.240165710449219
    10. ' start' → logprob: -12.365165710449219

Token 355: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3187164068222046
    2. '_x' → logprob: -1.6937164068222046
    3. ':' → logprob: -2.443716526031494
    4. 'x' → logprob: -7.318716526031494
    5. ''' → logprob: -7.943716526031494
    6. ':(' → logprob: -8.068716049194336
    7. '_point' → logprob: -8.193716049194336
    8. '':[' → logprob: -8.818716049194336
    9. '_pos' → logprob: -9.193716049194336
    10. ' :' → logprob: -9.318716049194336

Token 356: '(' (ID: 7)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.585499107837677
    2. '(x' → logprob: -0.835499107837677
    3. '(' → logprob: -4.835499286651611
    4. ' (' → logprob: -6.460499286651611
    5. '   ' → logprob: -13.335498809814453
    6. '(xx' → logprob: -13.585498809814453
    7. '(nums' → logprob: -14.335498809814453
    8. '  ' → logprob: -14.460498809814453
    9. '(X' → logprob: -14.585498809814453
    10. '(ss' → logprob: -14.710498809814453

Token 357: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -6.980854959692806e-05
    2. '(xs' → logprob: -10.000069618225098
    3. ' xs' → logprob: -10.625069618225098
    4. '(' → logprob: -17.750070571899414
    5. ' ' → logprob: -18.375070571899414
    6. 'x' → logprob: -18.500070571899414
    7. '_x' → logprob: -18.500070571899414
    8. '   ' → logprob: -18.625070571899414
    9. '-xs' → logprob: -19.500070571899414
    10. '
' → logprob: -19.625070571899414

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014716439181938767
    2. ' ,' → logprob: -9.250146865844727
    3. ',
' → logprob: -10.000146865844727
    4. '<|end|>' → logprob: -12.875146865844727
    5. ',y' → logprob: -13.375146865844727
    6. ',

' → logprob: -14.000146865844727
    7. ',\
' → logprob: -15.250146865844727
    8. '‌,' → logprob: -15.875146865844727
    9. '),' → logprob: -15.875146865844727
    10. ' ,
' → logprob: -16.875146865844727

Token 359: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.00033879990223795176
    2. ' ys' → logprob: -8.000338554382324
    3. ' ' → logprob: -13.375338554382324
    4. '
' → logprob: -15.000338554382324
    5. '   ' → logprob: -15.250338554382324
    6. ',' → logprob: -15.500338554382324
    7. 'ysi' → logprob: -15.625338554382324
    8. '    ' → logprob: -15.625338554382324
    9. 'yses' → logprob: -15.875338554382324
    10. '  ' → logprob: -16.12533950805664

Token 360: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005188359646126628
    2. ',' → logprob: -8.500518798828125
    3. '),'' → logprob: -8.750518798828125
    4. ' ),' → logprob: -9.750518798828125
    5. ')' → logprob: -10.125518798828125
    6. '),
' → logprob: -10.500518798828125
    7. ',),' → logprob: -11.250518798828125
    8. ''),' → logprob: -11.750518798828125
    9. '   ' → logprob: -13.000518798828125
    10. '},' → logprob: -13.125518798828125

Token 361: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4762110114097595
    2. ''' → logprob: -0.9762110114097595
    3. ''d' → logprob: -8.101210594177246
    4. ''end' → logprob: -8.226210594177246
    5. ',length' → logprob: -8.351210594177246
    6. 'length' → logprob: -8.476210594177246
    7. ''s' → logprob: -8.851210594177246
    8. ''type' → logprob: -8.976210594177246
    9. ',' → logprob: -9.101210594177246
    10. ' length' → logprob: -9.226210594177246

Token 362: 'end' (ID: 419)
  Prédit: ''end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''end' → logprob: -0.07907969504594803
    2. 'end' → logprob: -2.5790796279907227
    3. ' end' → logprob: -9.579079627990723
    4. ' '' → logprob: -10.329079627990723
    5. ''ex' → logprob: -10.579079627990723
    6. ''d' → logprob: -10.829079627990723
    7. ''' → logprob: -10.829079627990723
    8. ''e' → logprob: -11.579079627990723
    9. '(end' → logprob: -11.829079627990723
    10. '’end' → logprob: -13.079079627990723

Token 363: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14514143764972687
    2. ':(' → logprob: -2.770141363143921
    3. ':' → logprob: -2.895141363143921
    4. '):(' → logprob: -4.7701416015625
    5. '',(' → logprob: -5.1451416015625
    6. '(' → logprob: -7.6451416015625
    7. '):' → logprob: -7.8951416015625
    8. '')' → logprob: -8.3951416015625
    9. ' :(' → logprob: -8.3951416015625
    10. '=(' → logprob: -8.5201416015625

Token 364: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002867281436920166
    2. '(' → logprob: -6.002867221832275
    3. ' (' → logprob: -8.002867698669434
    4. '   ' → logprob: -10.627867698669434
    5. ' ' → logprob: -11.752867698669434
    6. '(ex' → logprob: -12.002867698669434
    7. '  ' → logprob: -12.252867698669434
    8. '       ' → logprob: -12.377867698669434
    9. '     ' → logprob: -13.002867698669434
    10. '    ' → logprob: -13.127867698669434

Token 365: 'xe' (ID: 16172)
  Prédit: 'xe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xe' → logprob: -0.0004324573092162609
    2. ' xe' → logprob: -7.75043249130249
    3. '(x' → logprob: -14.625432014465332
    4. ' ' → logprob: -14.875432014465332
    5. '   ' → logprob: -15.250432014465332
    6. 'xee' → logprob: -15.625432014465332
    7. 'exe' → logprob: -16.25043296813965
    8. ',' → logprob: -16.62543296813965
    9. 'xce' → logprob: -17.00043296813965
    10. '
' → logprob: -17.00043296813965

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ' ,' → logprob: -10.875024795532227
    3. ',
' → logprob: -12.375024795532227
    4. ',y' → logprob: -13.750024795532227
    5. '<|end|>' → logprob: -14.625024795532227
    6. '‌,' → logprob: -16.875024795532227
    7. ',

' → logprob: -17.375024795532227
    8. '
' → logprob: -17.625024795532227
    9. ',\
' → logprob: -17.625024795532227
    10. ',{
' → logprob: -17.750024795532227

Token 367: 'ye' (ID: 2422)
  Prédit: 'ye'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -3.054500666621607e-06
    2. ' ye' → logprob: -13.12500286102295
    3. 'ys' → logprob: -15.12500286102295
    4. '
' → logprob: -15.62500286102295
    5. '```' → logprob: -15.87500286102295
    6. 'we' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.250003814697266
    8. 'yes' → logprob: -16.875003814697266
    9. ' ' → logprob: -17.375003814697266
    10. ')' → logprob: -17.625003814697266

Token 368: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003022153687197715
    2. '})' → logprob: -8.3753023147583
    3. ')' → logprob: -10.5003023147583
    4. ','' → logprob: -11.2503023147583
    5. '',' → logprob: -11.7503023147583
    6. ' ,' → logprob: -11.7503023147583
    7. ')}' → logprob: -12.0003023147583
    8. '}' → logprob: -12.6253023147583
    9. ',
' → logprob: -13.7503023147583
    10. '   ' → logprob: -13.7503023147583

Token 369: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5764071941375732
    2. ' '' → logprob: -0.8264071941375732
    3. '       ' → logprob: -9.201407432556152
    4. ''s' → logprob: -9.826407432556152
    5. '   ' → logprob: -9.951407432556152
    6. '           ' → logprob: -10.451407432556152
    7. ''d' → logprob: -10.576407432556152
    8. ' ' → logprob: -10.701407432556152
    9. '    ' → logprob: -10.701407432556152
    10. ''type' → logprob: -10.951407432556152

Token 370: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00010890735575230792
    2. ' length' → logprob: -9.75010871887207
    3. 'dx' → logprob: -10.25010871887207
    4. 'direction' → logprob: -11.87510871887207
    5. 'len' → logprob: -12.25010871887207
    6. 'vector' → logprob: -13.00010871887207
    7. 'dir' → logprob: -14.37510871887207
    8. 'leng' → logprob: -15.50010871887207
    9. 'Length' → logprob: -16.50010871887207
    10. 'vec' → logprob: -16.75010871887207

Token 371: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02342529408633709
    2. ',' → logprob: -4.648425102233887
    3. ':' → logprob: -4.773425102233887
    4. '=' → logprob: -6.523425102233887
    5. '})' → logprob: -6.523425102233887
    6. ')' → logprob: -6.898425102233887
    7. '):' → logprob: -8.148425102233887
    8. '":' → logprob: -8.273425102233887
    9. ''})' → logprob: -8.398425102233887
    10. ')}' → logprob: -9.398425102233887

Token 372: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004078401252627373
    2. ' length' → logprob: -5.504078388214111
    3. 'abs' → logprob: -18.504077911376953
    4. 'leng' → logprob: -18.879077911376953
    5. '(length' → logprob: -19.129077911376953
    6. ',length' → logprob: -19.754077911376953
    7. '	length' → logprob: -20.004077911376953
    8. '[length' → logprob: -20.254077911376953
    9. ' ' → logprob: -20.379077911376953
    10. 'len' → logprob: -21.129077911376953

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002879176288843155
    2. '})' → logprob: -5.8778791427612305
    3. ' })' → logprob: -10.37787914276123
    4. ' ,' → logprob: -10.75287914276123
    5. ',
' → logprob: -12.00287914276123
    6. ','' → logprob: -12.12787914276123
    7. ')' → logprob: -12.25287914276123
    8. '   ' → logprob: -12.75287914276123
    9. '',' → logprob: -14.50287914276123
    10. '       ' → logprob: -14.62787914276123

Token 374: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.10113346576690674
    2. ''' → logprob: -2.976133346557617
    3. ''d' → logprob: -3.101133346557617
    4. ''t' → logprob: -10.351133346557617
    5. ''s' → logprob: -10.476133346557617
    6. ' 
' → logprob: -10.476133346557617
    7. ' ' → logprob: -11.476133346557617
    8. ',' → logprob: -11.476133346557617
    9. ''type' → logprob: -11.476133346557617
    10. ''x' → logprob: -12.101133346557617

Token 375: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.002835899591445923
    2. 'direction' → logprob: -6.502835750579834
    3. 'dir' → logprob: -6.752835750579834
    4. ' dx' → logprob: -8.877836227416992
    5. '(dx' → logprob: -11.627836227416992
    6. 'vector' → logprob: -12.502836227416992
    7. ' direction' → logprob: -13.127836227416992
    8. 'delta' → logprob: -13.627836227416992
    9. '   ' → logprob: -13.627836227416992
    10. 'd' → logprob: -13.877836227416992

Token 376: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009425844065845013
    2. ':' → logprob: -5.509425640106201
    3. '':' → logprob: -5.634425640106201
    4. '=' → logprob: -6.884425640106201
    5. '',' → logprob: -8.00942611694336
    6. '<|end|>' → logprob: -8.50942611694336
    7. ',
' → logprob: -9.50942611694336
    8. ' ,' → logprob: -10.13442611694336
    9. ''' → logprob: -11.00942611694336
    10. '','' → logprob: -11.75942611694336

Token 377: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0075109112076461315
    2. ' dx' → logprob: -5.382511138916016
    3. '0' → logprob: -5.882511138916016
    4. '(dx' → logprob: -10.507511138916016
    5. ' ' → logprob: -10.882511138916016
    6. '   ' → logprob: -11.257511138916016
    7. '1' → logprob: -11.507511138916016
    8. '_dx' → logprob: -12.382511138916016
    9. '}' → logprob: -12.507511138916016
    10. 'int' → logprob: -12.882511138916016

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.208653162000701e-05
    2. ',
' → logprob: -10.000082015991211
    3. ' ,' → logprob: -10.875082015991211
    4. ','' → logprob: -11.250082015991211
    5. '',' → logprob: -13.250082015991211
    6. ',d' → logprob: -13.375082015991211
    7. ',

' → logprob: -14.500082015991211
    8. '<|end|>' → logprob: -15.000082015991211
    9. '   ' → logprob: -15.375082015991211
    10. ',\
' → logprob: -15.500082015991211

Token 379: ' '' (ID: 461)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12708422541618347
    2. ' dy' → logprob: -2.127084255218506
    3. '0' → logprob: -8.877083778381348
    4. '.dy' → logprob: -11.877083778381348
    5. ' 
' → logprob: -12.877083778381348
    6. ''d' → logprob: -13.377083778381348
    7. ''' → logprob: -13.502083778381348
    8. ' ' → logprob: -14.377083778381348
    9. 'Dy' → logprob: -14.377083778381348
    10. ' '' → logprob: -14.377083778381348

Token 380: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.629921436891891e-05
    2. ' dy' → logprob: -11.12502670288086
    3. '0' → logprob: -11.37502670288086
    4. ' ' → logprob: -18.50002670288086
    5. 'ddy' → logprob: -18.75002670288086
    6. '.dy' → logprob: -19.12502670288086
    7. 'd' → logprob: -19.75002670288086
    8. 'dyr' → logprob: -20.00002670288086
    9. '
' → logprob: -20.00002670288086
    10. 'dym' → logprob: -20.12502670288086

Token 381: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04365614056587219
    2. ':' → logprob: -3.54365611076355
    3. ''})' → logprob: -5.418656349182129
    4. '}' → logprob: -6.168656349182129
    5. '=' → logprob: -6.293656349182129
    6. '})' → logprob: -6.418656349182129
    7. ''}}' → logprob: -7.043656349182129
    8. ''}' → logprob: -7.418656349182129
    9. '}}' → logprob: -7.543656349182129
    10. ''' → logprob: -8.418656349182129

Token 382: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.1517960956552997e-05
    2. '0' → logprob: -12.000011444091797
    3. ' dy' → logprob: -12.500011444091797
    4. '1' → logprob: -13.375011444091797
    5. '-' → logprob: -17.875011444091797
    6. ' ' → logprob: -19.000011444091797
    7. '```' → logprob: -19.000011444091797
    8. '   ' → logprob: -19.375011444091797
    9. ')' → logprob: -19.750011444091797
    10. 'd' → logprob: -20.250011444091797

Token 383: '})

' (ID: 16447)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0005703099304810166
    2. ' })' → logprob: -7.500570297241211
    3. '})
' → logprob: -12.000570297241211
    4. '   ' → logprob: -12.125570297241211
    5. ')' → logprob: -12.625570297241211
    6. ',' → logprob: -13.125570297241211
    7. '}' → logprob: -15.875570297241211
    8. '});' → logprob: -16.25057029724121
    9. '})

' → logprob: -16.50057029724121
    10. '}),' → logprob: -16.87557029724121

Token 384: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7414719462394714
    2. '   ' → logprob: -0.8664719462394714
    3. 'inter' → logprob: -2.741472005844116
    4. 'intersection' → logprob: -4.741471767425537
    5. 'adj' → logprob: -4.991471767425537
    6. 'graph' → logprob: -6.116471767425537
    7. ' intersections' → logprob: -6.116471767425537
    8. 'positions' → logprob: -6.241471767425537
    9. ' #' → logprob: -6.491471767425537
    10. '    
' → logprob: -6.616471767425537

Token 386: ' Build' (ID: 10885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22004631161689758
    2. 'inter' → logprob: -2.470046281814575
    3. 'adj' → logprob: -3.720046281814575
    4. 'connections' → logprob: -3.845046281814575
    5. 'pos' → logprob: -4.095046520233154
    6. 'intersection' → logprob: -4.345046520233154
    7. 'graph' → logprob: -4.720046520233154
    8. 'position' → logprob: -5.595046520233154
    9. 'positions' → logprob: -5.595046520233154
    10. 'from' → logprob: -5.595046520233154

Token 387: ' street' (ID: 12901)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4199998080730438
    2. 'adj' → logprob: -1.9199998378753662
    3. 'inter' → logprob: -3.169999837875366
    4. '#' → logprob: -3.294999837875366
    5. 'street' → logprob: -3.294999837875366
    6. 'connections' → logprob: -4.169999599456787
    7. 'intersection' → logprob: -4.294999599456787
    8. ' intersections' → logprob: -4.669999599456787
    9. ' graph' → logprob: -5.044999599456787
    10. 'position' → logprob: -5.044999599456787

Token 388: ' intersections' (ID: 143513)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.661672055721283
    2. '_connections' → logprob: -1.9116721153259277
    3. '_inter' → logprob: -2.0366721153259277
    4. '_graph' → logprob: -2.6616721153259277
    5. '_id' → logprob: -2.7866721153259277
    6. '_points' → logprob: -3.9116721153259277
    7. 'graph' → logprob: -4.536672115325928
    8. '_to' → logprob: -4.786672115325928
    9. '_nodes' → logprob: -5.161672115325928
    10. '_' → logprob: -5.161672115325928

Token 389: ':' (ID: 25)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.021556837484240532
    2. 'intersection' → logprob: -4.396556854248047
    3. '   ' → logprob: -5.396556854248047
    4. '#' → logprob: -6.771556854248047
    5. ' intersections' → logprob: -6.771556854248047
    6. 'for' → logprob: -7.021556854248047
    7. '
' → logprob: -7.146556854248047
    8. '_inter' → logprob: -9.021556854248047
    9. 'cross' → logprob: -9.271556854248047
    10. '    
' → logprob: -9.521556854248047

Token 390: ' for' (ID: 395)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.03724151849746704
    2. 'intersection' → logprob: -3.9122414588928223
    3. ' intersections' → logprob: -4.787241458892822
    4. '   ' → logprob: -5.287241458892822
    5. 'street' → logprob: -6.912241458892822
    6. ' street' → logprob: -8.03724193572998
    7. 'for' → logprob: -8.16224193572998
    8. '#' → logprob: -8.16224193572998
    9. 'from' → logprob: -8.78724193572998
    10. 'cross' → logprob: -8.78724193572998

Token 391: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01233021728694439
    2. 'each' → logprob: -5.012330055236816
    3. 'vert' → logprob: -5.887330055236816
    4. 'v' → logprob: -6.637330055236816
    5. ' i' → logprob: -7.137330055236816
    6. 'vertical' → logprob: -7.762330055236816
    7. 'all' → logprob: -9.637330055236816
    8. 'h' → logprob: -10.137330055236816
    9. 'every' → logprob: -10.137330055236816
    10. '(i' → logprob: -10.762330055236816

Token 392: ' street' (ID: 12901)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.42391306161880493
    2. 'vertical' → logprob: -2.29891300201416
    3. 'street' → logprob: -2.54891300201416
    4. ' vert' → logprob: -2.92391300201416
    5. 'h' → logprob: -3.42391300201416
    6. ' street' → logprob: -3.54891300201416
    7. ' vertical' → logprob: -4.42391300201416
    8. 'i' → logprob: -4.54891300201416
    9. 'v' → logprob: -4.54891300201416
    10. 'horizontal' → logprob: -5.29891300201416

Token 393: ' end' (ID: 1268)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35178616642951965
    2. 'for' → logprob: -1.7267861366271973
    3. 'i' → logprob: -2.2267861366271973
    4. ' for' → logprob: -6.101786136627197
    5. 's' → logprob: -6.226786136627197
    6. 'id' → logprob: -6.726786136627197
    7. ',i' → logprob: -6.851786136627197
    8. ' i' → logprob: -7.476786136627197
    9. '[i' → logprob: -7.476786136627197
    10. '_i' → logprob: -7.726786136627197

Token 394: ' point' (ID: 2438)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.28532731533050537
    2. ',' → logprob: -2.410327434539795
    3. 'point' → logprob: -2.410327434539795
    4. 's' → logprob: -2.785327434539795
    5. 'for' → logprob: -5.535327434539795
    6. '_points' → logprob: -6.910327434539795
    7. '   ' → logprob: -8.035326957702637
    8. 'pts' → logprob: -8.160326957702637
    9. 'in' → logprob: -9.160326957702637
    10. '_ids' → logprob: -9.160326957702637

Token 395: ',' (ID: 11)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.876767635345459
    2. 'end' → logprob: -1.126767635345459
    3. 'ends' → logprob: -1.876767635345459
    4. ',' → logprob: -3.501767635345459
    5. 'point' → logprob: -3.501767635345459
    6. 'inter' → logprob: -3.626767635345459
    7. 'for' → logprob: -4.751767635345459
    8. '#' → logprob: -5.876767635345459
    9. '   ' → logprob: -6.126767635345459
    10. 'endpoint' → logprob: -6.501767635345459

Token 396: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8608375787734985
    2. ' for' → logprob: -1.7358375787734985
    3. 'store' → logprob: -2.485837459564209
    4. ' store' → logprob: -2.735837459564209
    5. ' add' → logprob: -2.860837459564209
    6. ' find' → logprob: -2.985837459564209
    7. 'find' → logprob: -3.235837459564209
    8. 'check' → logprob: -3.860837459564209
    9. '#' → logprob: -4.110837459564209
    10. 'add' → logprob: -4.110837459564209

Token 397: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6223328709602356
    2. 'other' → logprob: -1.8723328113555908
    3. 'stre' → logprob: -1.8723328113555908
    4. ' streets' → logprob: -2.747332811355591
    5. ' all' → logprob: -2.872332811355591
    6. 'which' → logprob: -4.37233304977417
    7. ' other' → logprob: -4.62233304977417
    8. ' which' → logprob: -5.12233304977417
    9. 'connected' → logprob: -6.87233304977417
    10. 'inter' → logprob: -6.87233304977417

Token 398: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.35017842054367065
    2. 'stre' → logprob: -1.8501784801483154
    3. 'same' → logprob: -3.3501784801483154
    4. ' other' → logprob: -3.4751784801483154
    5. ' streets' → logprob: -3.4751784801483154
    6. 'inter' → logprob: -5.100178241729736
    7. 'points' → logprob: -5.350178241729736
    8. 'connected' → logprob: -5.350178241729736
    9. ' same' → logprob: -5.600178241729736
    10. 'intersection' → logprob: -5.975178241729736

Token 399: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.11201135814189911
    2. 'end' → logprob: -3.487011432647705
    3. 's' → logprob: -3.612011432647705
    4. 'st' → logprob: -4.237011432647705
    5. 'street' → logprob: -4.487011432647705
    6. 'ends' → logprob: -4.987011432647705
    7. ' streets' → logprob: -5.612011432647705
    8. ' end' → logprob: -5.987011432647705
    9. ' endpoints' → logprob: -6.112011432647705
    10. '_st' → logprob: -6.362011432647705

Token 400: ' that' (ID: 484)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7316743731498718
    2. 'ends' → logprob: -1.2316744327545166
    3. 'points' → logprob: -2.2316744327545166
    4. 'endpoint' → logprob: -2.3566744327545166
    5. ' endpoints' → logprob: -4.8566741943359375
    6. 'inter' → logprob: -4.9816741943359375
    7. 'point' → logprob: -5.4816741943359375
    8. 'for' → logprob: -6.4816741943359375
    9. '   ' → logprob: -6.8566741943359375
    10. 'from' → logprob: -7.4816741943359375

Token 401: ' connect' (ID: 4837)
  Prédit: 'share'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'share' → logprob: -0.6800434589385986
    2. 'start' → logprob: -0.9300434589385986
    3. 'have' → logprob: -2.9300434589385986
    4. ' share' → logprob: -3.4300434589385986
    5. ' start' → logprob: -4.9300432205200195
    6. ' have' → logprob: -6.0550432205200195
    7. 'connect' → logprob: -6.1800432205200195
    8. 'end' → logprob: -7.4300432205200195
    9. 'also' → logprob: -7.9300432205200195
    10. 'contain' → logprob: -8.30504322052002

Token 402: ' there' (ID: 1354)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4758172929286957
    2. 'for' → logprob: -1.850817322731018
    3. ' at' → logprob: -2.8508172035217285
    4. 'to' → logprob: -3.2258172035217285
    5. ' to' → logprob: -3.4758172035217285
    6. 'end' → logprob: -3.8508172035217285
    7. 'at' → logprob: -3.9758172035217285
    8. ' for' → logprob: -4.3508172035217285
    9. ' points' → logprob: -4.7258172035217285
    10. 'ends' → logprob: -5.2258172035217285

Token 403: '
' (ID: 198)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.570912778377533
    2. 'ends' → logprob: -1.6959128379821777
    3. 'intersection' → logprob: -2.4459128379821777
    4. 'end' → logprob: -2.8209128379821777
    5. 'connections' → logprob: -3.4459128379821777
    6. 'points' → logprob: -3.5709128379821777
    7. '   ' → logprob: -4.320912837982178
    8. 'junction' → logprob: -4.570912837982178
    9. 'endpoint' → logprob: -5.195912837982178
    10. 'point' → logprob: -5.320912837982178

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0308691263198853
    2. 'inter' → logprob: -1.4058691263198853
    3. 'connections' → logprob: -1.7808691263198853
    4. 'ends' → logprob: -2.7808690071105957
    5. 'end' → logprob: -3.1558690071105957
    6. '
' → logprob: -3.4058690071105957
    7. '    
' → logprob: -3.6558690071105957
    8. 'intersection' → logprob: -4.030869007110596
    9. 'points' → logprob: -4.280869007110596
    10. 'junction' → logprob: -4.530869007110596

Token 405: ' connections' (ID: 21069)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.5198745727539062
    2. 'end' → logprob: -1.7698745727539062
    3. 'connections' (adapté à ' connections') → logprob: -2.0198745727539062
    4. 'endpoint' → logprob: -3.2698745727539062
    5. 'intersection' → logprob: -3.5198745727539062
    6. 'ends' → logprob: -4.894874572753906
    7. 'street' → logprob: -4.894874572753906
    8. 'connection' → logprob: -5.144874572753906
    9. 'point' → logprob: -5.519874572753906
    10. 'connect' → logprob: -5.644874572753906

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. 's' → logprob: -15.186967849731445
    4. '[' → logprob: -15.936967849731445
    5. '={}' → logprob: -16.811967849731445
    6. '_' → logprob: -17.061967849731445
    7. '=[]' → logprob: -17.186967849731445
    8. '＝' → logprob: -18.061967849731445
    9. '   ' → logprob: -18.311967849731445
    10. '```' → logprob: -18.561967849731445

Token 407: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. ' defaultdict' → logprob: -16.75
    4. '.default' → logprob: -18.625
    5. '(default' → logprob: -19.0
    6. '"default' → logprob: -20.625
    7. ''default' → logprob: -20.875
    8. '{' → logprob: -21.25
    9. 'Default' → logprob: -23.5
    10. '[]' → logprob: -23.625

Token 408: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.5829194188117981
    2. '(set' → logprob: -0.8329194188117981
    3. 'set' → logprob: -5.457919597625732
    4. 'list' → logprob: -6.207919597625732
    5. '<' → logprob: -7.957919597625732
    6. '[list' → logprob: -8.832919120788574
    7. '(lambda' → logprob: -9.457919120788574
    8. '(<' → logprob: -10.832919120788574
    9. '(' → logprob: -10.957919120788574
    10. '```' → logprob: -10.957919120788574

Token 409: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009211080614477396
    2. ')
' → logprob: -7.000921249389648
    3. ')

' → logprob: -12.250921249389648
    4. ' )' → logprob: -13.000921249389648
    5. ')
' → logprob: -13.875921249389648
    6. '())' → logprob: -14.625921249389648
    7. '   ' → logprob: -15.125921249389648
    8. ',' → logprob: -15.875921249389648
    9. ')`' → logprob: -15.875921249389648
    10. '))' → logprob: -16.12592124938965

Token 410: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016655426006764174
    2. ' for' → logprob: -6.6266655921936035
    3. '   ' → logprob: -8.376665115356445
    4. '
' → logprob: -9.251665115356445
    5. '```' → logprob: -12.876665115356445
    6. '    
' → logprob: -13.126665115356445
    7. 'points' → logprob: -13.251665115356445
    8. '#' → logprob: -13.376665115356445
    9. ')' → logprob: -13.876665115356445
    10. ')
' → logprob: -14.001665115356445

Token 411: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005194319528527558
    2. 'end' → logprob: -8.750519752502441
    3. 'points' → logprob: -9.000519752502441
    4. '   ' → logprob: -9.500519752502441
    5. 'point' → logprob: -9.625519752502441
    6. ' for' → logprob: -9.875519752502441
    7. ')
' → logprob: -11.000519752502441
    8. '
' → logprob: -11.000519752502441
    9. 'endpoint' → logprob: -12.125519752502441
    10. ')' → logprob: -13.375519752502441

Token 412: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6515786647796631
    2. 'point' → logprob: -1.151578664779663
    3. 'key' → logprob: -2.401578664779663
    4. '#' → logprob: -2.776578664779663
    5. ' for' → logprob: -5.651578903198242
    6. ' key' → logprob: -6.651578903198242
    7. 'Key' → logprob: -6.776578903198242
    8. ' point' → logprob: -6.776578903198242
    9. 'points' → logprob: -7.151578903198242
    10. 'Point' → logprob: -7.401578903198242

Token 413: 'street' (ID: 55690)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6262286901473999
    2. 'x' → logprob: -1.1262286901474
    3. 'tuple' → logprob: -2.2512288093566895
    4. '(x' → logprob: -3.6262288093566895
    5. 'xs' → logprob: -5.7512288093566895
    6. '(int' → logprob: -5.8762288093566895
    7. 'street' → logprob: -7.2512288093566895
    8. ')' → logprob: -7.7512288093566895
    9. 'start' → logprob: -7.7512288093566895
    10. 'point' → logprob: -7.8762288093566895

Token 414: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.010970949195325375
    2. 'id' → logprob: -5.3859710693359375
    3. ',' → logprob: -5.8859710693359375
    4. ')' → logprob: -6.0109710693359375
    5. '_end' → logprob: -8.135971069335938
    6. '[' → logprob: -8.760971069335938
    7. '_endpoint' → logprob: -9.010971069335938
    8. 's' → logprob: -9.385971069335938
    9. 'endpoint' → logprob: -9.885971069335938
    10. '_' → logprob: -10.385971069335938

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069709899835288525
    2. ')' → logprob: -5.0069708824157715
    3. '),' → logprob: -9.50697135925293
    4. ',)' → logprob: -10.13197135925293
    5. '[' → logprob: -10.63197135925293
    6. ',
' → logprob: -10.75697135925293
    7. ' ,' → logprob: -11.13197135925293
    8. '
' → logprob: -11.63197135925293
    9. '   ' → logprob: -11.75697135925293
    10. '[(' → logprob: -12.13197135925293

Token 416: ' end' (ID: 1268)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.2901813983917236
    2. ''end' → logprob: -1.2901813983917236
    3. 'point' → logprob: -2.0401813983917236
    4. ''s' → logprob: -2.5401813983917236
    5. 'start' → logprob: -3.5401813983917236
    6. 'int' → logprob: -3.5401813983917236
    7. ''x' → logprob: -3.5401813983917236
    8. 'x' → logprob: -3.5401813983917236
    9. ')' → logprob: -3.6651813983917236
    10. ''' → logprob: -3.9151813983917236

Token 417: '_flag' (ID: 25269)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.06497875601053238
    2. 'point' → logprob: -2.814978837966919
    3. ')' → logprob: -6.56497859954834
    4. '_id' → logprob: -7.81497859954834
    5. ')]' → logprob: -7.81497859954834
    6. ',' → logprob: -8.18997859954834
    7. '_index' → logprob: -8.56497859954834
    8. 'points' → logprob: -9.81497859954834
    9. '1' → logprob: -9.93997859954834
    10. 'pt' → logprob: -10.06497859954834

Token 418: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021811148151755333
    2. ')]' → logprob: -4.396811008453369
    3. ',' → logprob: -5.271811008453369
    4. '[' → logprob: -6.646811008453369
    5. '0' → logprob: -6.896811008453369
    6. '))' → logprob: -7.646811008453369
    7. ')
' → logprob: -8.521811485290527
    8. '1' → logprob: -8.646811485290527
    9. ']' → logprob: -8.771811485290527
    10. '])' → logprob: -8.896811485290527

Token 419: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5561569929122925
    2. ' =' → logprob: -1.1811569929122925
    3. '=' → logprob: -3.431157112121582
    4. '[' → logprob: -4.431157112121582
    5. ')
' → logprob: -4.431157112121582
    6. '
' → logprob: -4.431157112121582
    7. '#' → logprob: -4.431157112121582
    8. '[(' → logprob: -4.556157112121582
    9. ',' → logprob: -5.181157112121582
    10. ']' → logprob: -5.306157112121582

Token 420: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0662152767181396
    2. '[(' → logprob: -1.0662152767181396
    3. 'list' → logprob: -1.4412152767181396
    4. '[' → logprob: -3.5662152767181396
    5. ' list' → logprob: -3.9412152767181396
    6. ' []' → logprob: -4.316215515136719
    7. 'set' → logprob: -5.191215515136719
    8. ' [(' → logprob: -5.441215515136719
    9. ' [' → logprob: -6.566215515136719
    10. '[list' → logprob: -6.691215515136719

Token 421: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33577674627304077
    2. '<|end|>' → logprob: -1.5857768058776855
    3. '[(' → logprob: -3.8357768058776855
    4. ' of' → logprob: -4.0857768058776855
    5. ')' → logprob: -4.3357768058776855
    6. '[]' → logprob: -5.2107768058776855
    7. '=[]' → logprob: -5.7107768058776855
    8. '[int' → logprob: -5.7107768058776855
    9. '([(' → logprob: -5.7107768058776855
    10. '   ' → logprob: -5.9607768058776855

Token 422: ' (' (ID: 350)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.006695473100990057
    2. ' (' → logprob: -5.88169527053833
    3. 'connected' → logprob: -6.13169527053833
    4. 'street' → logprob: -7.50669527053833
    5. '[(' → logprob: -8.131695747375488
    6. '(' → logprob: -8.256695747375488
    7. 'connections' → logprob: -8.506695747375488
    8. ' connected' → logprob: -8.506695747375488
    9. '[' → logprob: -10.006695747375488
    10. '(int' → logprob: -10.131695747375488

Token 423: 'other' (ID: 2141)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.08012014627456665
    2. 'connected' → logprob: -3.080120086669922
    3. ' street' → logprob: -4.205120086669922
    4. 'other' → logprob: -4.830120086669922
    5. ' connected' → logprob: -5.580120086669922
    6. '(st' → logprob: -5.705120086669922
    7. 'neighbor' → logprob: -8.080120086669922
    8. 'stre' → logprob: -8.330120086669922
    9. 'adj' → logprob: -9.330120086669922
    10. '(' → logprob: -9.455120086669922

Token 424: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0010646054288372397
    2. 'street' → logprob: -6.876064777374268
    3. '_id' → logprob: -11.50106430053711
    4. 'st' → logprob: -11.62606430053711
    5. ' street' → logprob: -12.37606430053711
    6. 'stre' → logprob: -13.00106430053711
    7. '```' → logprob: -13.62606430053711
    8. '   ' → logprob: -13.62606430053711
    9. '_s' → logprob: -13.75106430053711
    10. ')' → logprob: -14.50106430053711

Token 425: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -6.52788148727268e-05
    2. 'r' → logprob: -10.125064849853516
    3. '_id' → logprob: -11.750064849853516
    4. 'ree' → logprob: -11.875064849853516
    5. 're' → logprob: -12.750064849853516
    6. 'root' → logprob: -13.500064849853516
    7. 'art' → logprob: -13.625064849853516
    8. 'ret' → logprob: -13.750064849853516
    9. 'reat' → logprob: -14.375064849853516
    10. 'ride' → logprob: -14.625064849853516

Token 426: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.6087021473795176e-05
    2. 'id' → logprob: -10.125045776367188
    3. ',' → logprob: -12.250045776367188
    4. 's' → logprob: -14.000045776367188
    5. '_ids' → logprob: -15.875045776367188
    6. '```' → logprob: -16.125045776367188
    7. '_i' → logprob: -17.000045776367188
    8. ')' → logprob: -17.625045776367188
    9. ' id' → logprob: -18.250045776367188
    10. '_,' → logprob: -18.250045776367188

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ' ,' → logprob: -10.500040054321289
    3. ',
' → logprob: -11.875040054321289
    4. ')' → logprob: -13.250040054321289
    5. ',end' → logprob: -13.875040054321289
    6. ',int' → logprob: -15.500040054321289
    7. '
' → logprob: -15.500040054321289
    8. '   ' → logprob: -15.875040054321289
    9. ',)' → logprob: -15.875040054321289
    10. ' ' → logprob: -15.875040054321289

Token 428: ' other' (ID: 1273)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2513236403465271
    2. ' end' → logprob: -1.6263236999511719
    3. 'other' → logprob: -4.751323699951172
    4. 'start' → logprob: -5.001323699951172
    5. '0' → logprob: -5.501323699951172
    6. ' start' → logprob: -6.626323699951172
    7. ' other' → logprob: -6.751323699951172
    8. 'endpoint' → logprob: -7.001323699951172
    9. 'point' → logprob: -7.126323699951172
    10. ''end' → logprob: -7.876323699951172

Token 429: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.01539481058716774
    2. '_flag' → logprob: -5.140394687652588
    3. 'end' → logprob: -5.390394687652588
    4. '_st' → logprob: -6.015394687652588
    5. '_id' → logprob: -6.265394687652588
    6. '_endpoint' → logprob: -8.640395164489746
    7. '```' → logprob: -9.265395164489746
    8. 'flag' → logprob: -10.265395164489746
    9. 'street' → logprob: -10.515395164489746
    10. ')' → logprob: -10.640395164489746

Token 430: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -5.955703818472102e-05
    2. 'flag' → logprob: -10.375059127807617
    3. ')' → logprob: -10.750059127807617
    4. '_index' → logprob: -13.750059127807617
    5. '_id' → logprob: -13.750059127807617
    6. ')]' → logprob: -13.750059127807617
    7. ')_' → logprob: -13.750059127807617
    8. '_point' → logprob: -14.125059127807617
    9. '_flags' → logprob: -14.750059127807617
    10. '_FLAG' → logprob: -14.875059127807617

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9650025428272784e-05
    2. '))' → logprob: -11.000040054321289
    3. '[' → logprob: -11.750040054321289
    4. ')`' → logprob: -12.125040054321289
    5. ' )' → logprob: -12.875040054321289
    6. '   ' → logprob: -13.875040054321289
    7. '')' → logprob: -14.375040054321289
    8. ')]' → logprob: -14.500040054321289
    9. '`)' → logprob: -14.500040054321289
    10. ')")' → logprob: -14.625040054321289

Token 432: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005386164411902428
    2. ' for' → logprob: -7.7505388259887695
    3. '
' → logprob: -9.87553882598877
    4. '```' → logprob: -10.12553882598877
    5. '   ' → logprob: -12.25053882598877
    6. 'points' → logprob: -12.75053882598877
    7. '#' → logprob: -13.00053882598877
    8. '    
' → logprob: -13.25053882598877
    9. '``' → logprob: -13.87553882598877
    10. 'end' → logprob: -14.25053882598877

Token 433: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012563572265207767
    2. ' for' → logprob: -4.387563705444336
    3. '
' → logprob: -10.262563705444336
    4. '   ' → logprob: -12.262563705444336
    5. '```' → logprob: -12.262563705444336
    6. 'points' → logprob: -12.512563705444336
    7. '    
' → logprob: -13.387563705444336
    8. '#' (adapté à ' #') → logprob: -13.512563705444336
    9. 'end' → logprob: -14.012563705444336
    10. ' 
' → logprob: -14.887563705444336

Token 434: ' end' (ID: 1268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016074256971478462
    2. 'point' → logprob: -4.266074180603027
    3. 'endpoint' → logprob: -7.016074180603027
    4. 'points' → logprob: -7.391074180603027
    5. 'end' → logprob: -8.766074180603027
    6. ' for' → logprob: -8.766074180603027
    7. '#' → logprob: -9.641074180603027
    8. 'ends' → logprob: -12.016074180603027
    9. '   ' → logprob: -12.766074180603027
    10. 'pos' → logprob: -13.391074180603027

Token 435: '_flag' (ID: 25269)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.23882736265659332
    2. 'points' → logprob: -1.8638273477554321
    3. '_flags' → logprob: -3.1138274669647217
    4. 's' → logprob: -5.363827228546143
    5. '_flag' → logprob: -5.613827228546143
    6. 'flags' → logprob: -5.988827228546143
    7. '_point' → logprob: -7.488827228546143
    8. 'for' → logprob: -7.613827228546143
    9. '_pts' → logprob: -7.988827228546143
    10. 'flag' → logprob: -8.1138277053833

Token 436: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4857168197631836
    2. ' =' → logprob: -0.9857168197631836
    3. '0' → logprob: -4.485716819763184
    4. 's' → logprob: -8.735716819763184
    5. ')' → logprob: -10.235716819763184
    6. ':' → logprob: -10.860716819763184
    7. 'in' → logprob: -11.360716819763184
    8. '=
' → logprob: -11.485716819763184
    9. 'es' → logprob: -11.860716819763184
    10. '[' → logprob: -11.860716819763184

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. 'int' → logprob: -15.375059127807617
    4. '[' → logprob: -16.625059127807617
    5. '#' → logprob: -17.000059127807617
    6. '1' → logprob: -17.250059127807617
    7. '   ' → logprob: -18.250059127807617
    8. 'start' → logprob: -19.500059127807617
    9. '{' → logprob: -19.875059127807617
    10. 'True' → logprob: -20.125059127807617

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.000009536743164
    3. '[' → logprob: -13.750009536743164
    4. 'int' → logprob: -14.250009536743164
    5. 'start' → logprob: -14.375009536743164
    6. '#' → logprob: -15.875009536743164
    7. '1' → logprob: -16.125009536743164
    8. '-' → logprob: -16.250009536743164
    9. '{' → logprob: -16.375009536743164
    10. ''' → logprob: -16.875009536743164

Token 439: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17582714557647705
    2. ' or' → logprob: -2.1758270263671875
    3. 'for' → logprob: -4.0508270263671875
    4. '=' → logprob: -4.6758270263671875
    5. ':' → logprob: -5.0508270263671875
    6. ' =' → logprob: -5.3008270263671875
    7. '=start' → logprob: -5.9258270263671875
    8. 'or' → logprob: -6.5508270263671875
    9. ' means' → logprob: -6.9258270263671875
    10. ' (' → logprob: -7.0508270263671875

Token 440: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0005532711511477828
    2. ' start' → logprob: -7.500553131103516
    3. '0' → logprob: -16.125553131103516
    4. ''' → logprob: -16.750553131103516
    5. ' ' → logprob: -17.875553131103516
    6. '"' → logprob: -18.250553131103516
    7. '_start' → logprob: -18.250553131103516
    8. 'source' → logprob: -18.750553131103516
    9. 'Start' → logprob: -18.875553131103516
    10. 'from' → logprob: -18.875553131103516

Token 441: ' point' (ID: 2438)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010919966734945774
    2. 'point' → logprob: -7.501091957092285
    3. ' ,' → logprob: -8.376091957092285
    4. ')' → logprob: -8.751091957092285
    5. '   ' → logprob: -10.126091957092285
    6. ',end' → logprob: -10.751091957092285
    7. ',
' → logprob: -11.001091957092285
    8. '_point' → logprob: -11.126091957092285
    9. '),' → logprob: -11.376091957092285
    10. ' point' → logprob: -11.501091957092285

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003476209531072527
    2. '   ' → logprob: -8.875348091125488
    3. ',
' → logprob: -9.250348091125488
    4. ')' → logprob: -9.500348091125488
    5. ' ,' → logprob: -11.125348091125488
    6. '0' → logprob: -11.500348091125488
    7. '),' → logprob: -12.000348091125488
    8. ' ' → logprob: -14.000348091125488
    9. '```' → logprob: -14.125348091125488
    10. '1' → logprob: -14.250348091125488

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046218992210924625
    2. ' ' → logprob: -5.379621982574463
    3. '   ' → logprob: -13.379621505737305
    4. '
' → logprob: -16.629621505737305
    5. '  ' → logprob: -17.629621505737305
    6. ',' → logprob: -17.879621505737305
    7. '    ' → logprob: -18.004621505737305
    8. ' ' → logprob: -18.879621505737305
    9. '```' → logprob: -19.004621505737305
    10. '#' → logprob: -19.067121505737305

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. '```' → logprob: -17.625051498413086
    5. '
' → logprob: -18.750051498413086
    6. ',' → logprob: -19.625051498413086
    7. '...' → logprob: -20.750051498413086
    8. '#' → logprob: -21.125051498413086
    9. '  ' → logprob: -21.250051498413086
    10. '-' → logprob: -21.375051498413086

Token 445: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2521389424800873
    2. 'for' → logprob: -1.5021389722824097
    3. ')' → logprob: -8.5021390914917
    4. '   ' → logprob: -12.8771390914917
    5. '```' → logprob: -13.2521390914917
    6. ' ' → logprob: -14.5021390914917
    7. ',' → logprob: -14.5021390914917
    8. '#' → logprob: -14.5021390914917
    9. '<|end|>' → logprob: -15.2521390914917
    10. '	for' → logprob: -16.127138137817383

Token 446: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06196824833750725
    2. ' end' → logprob: -2.8119683265686035
    3. '	end' → logprob: -16.186967849731445
    4. 'endpoint' → logprob: -16.186967849731445
    5. '[end' → logprob: -16.436967849731445
    6. '(end' → logprob: -16.561967849731445
    7. 'the' → logprob: -16.811967849731445
    8. ' ' → logprob: -17.061967849731445
    9. ''end' → logprob: -17.061967849731445
    10. '=end' → logprob: -17.186967849731445

Token 447: ' point' (ID: 2438)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3400452435016632
    2. ')' → logprob: -1.3400452136993408
    3. 'point' → logprob: -3.840045213699341
    4. '_point' → logprob: -5.71504545211792
    5. '   ' → logprob: -6.71504545211792
    6. ')

' → logprob: -9.215044975280762
    7. ')
' → logprob: -9.840044975280762
    8. '})
' → logprob: -10.215044975280762
    9. '):
' → logprob: -10.590044975280762
    10. '})' → logprob: -10.965044975280762

Token 448: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032215642277151346
    2. '
' → logprob: -6.00322151184082
    3. ' for' → logprob: -7.50322151184082
    4. '   ' → logprob: -9.00322151184082
    5. 'points' → logprob: -10.37822151184082
    6. '    
' → logprob: -11.12822151184082
    7. 'point' → logprob: -11.62822151184082
    8. '  
' → logprob: -11.75322151184082
    9. ')
' → logprob: -13.12822151184082
    10. '```' → logprob: -13.37822151184082

Token 449: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12786425650119781
    2. 'point' → logprob: -2.752864360809326
    3. 'points' → logprob: -3.252864360809326
    4. '   ' → logprob: -4.252864360809326
    5. 'end' → logprob: -6.502864360809326
    6. 'endpoint' → logprob: -6.752864360809326
    7. '
' → logprob: -8.377863883972168
    8. '    
' → logprob: -8.377863883972168
    9. '```' → logprob: -9.377863883972168
    10. ' for' → logprob: -9.502863883972168

Token 450: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03265971690416336
    2. 'point' → logprob: -4.282659530639648
    3. 'points' → logprob: -4.532659530639648
    4. '   ' → logprob: -5.282659530639648
    5. ' for' → logprob: -6.782659530639648
    6. 'end' → logprob: -7.032659530639648
    7. 'endpoint' → logprob: -8.157659530639648
    8. '    
' → logprob: -9.282659530639648
    9. 'ends' → logprob: -10.157659530639648
    10. '#' (adapté à ' #') → logprob: -10.532659530639648

Token 451: ' The' (ID: 623)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6368860006332397
    2. 'for' → logprob: -1.5118860006332397
    3. 'endpoint' → logprob: -1.8868860006332397
    4. 'points' → logprob: -2.7618861198425293
    5. 'end' → logprob: -3.3868861198425293
    6. 'pos' → logprob: -7.136886119842529
    7. 'ends' → logprob: -7.386886119842529
    8. '#' → logprob: -7.761886119842529
    9. 'pts' → logprob: -10.011885643005371
    10. 'pt' → logprob: -10.011885643005371

Token 452: ' problem' (ID: 4792)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2713519334793091
    2. 'for' → logprob: -2.1463518142700195
    3. 'point' → logprob: -2.6463518142700195
    4. ' points' → logprob: -3.6463518142700195
    5. '#' → logprob: -5.0213518142700195
    6. ' for' → logprob: -5.2713518142700195
    7. 'end' → logprob: -5.7713518142700195
    8. 'ends' → logprob: -6.1463518142700195
    9. ' point' → logprob: -6.1463518142700195
    10. ' endpoints' → logprob: -7.0213518142700195

Token 453: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5208582878112793
    2. 'is' → logprob: -1.3958582878112793
    3. ' continues' → logprob: -2.7708582878112793
    4. 'context' → logprob: -3.5208582878112793
    5. ':' → logprob: -5.145858287811279
    6. 'mentions' → logprob: -5.270858287811279
    7. 'description' → logprob: -5.395858287811279
    8. ' context' → logprob: -5.395858287811279
    9. 'contin' → logprob: -5.645858287811279
    10. ' states' → logprob: -5.645858287811279

Token 454: ' there' (ID: 1354)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8305845260620117
    2. '#' → logprob: -1.2055845260620117
    3. 'that' → logprob: -2.2055845260620117
    4. ':' → logprob: -2.3305845260620117
    5. ' for' → logprob: -4.455584526062012
    6. ' #' → logprob: -4.955584526062012
    7. ' the' → logprob: -4.955584526062012
    8. 'the' → logprob: -5.080584526062012
    9. 'for' → logprob: -5.205584526062012
    10. ',' → logprob: -5.580584526062012

Token 455: ' are' (ID: 553)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5056605339050293
    2. 'are' → logprob: -1.8806605339050293
    3. 'was' → logprob: -2.8806605339050293
    4. ' is' → logprob: -3.0056605339050293
    5. ''s' → logprob: -3.7556605339050293
    6. '#' → logprob: -3.8806605339050293
    7. ' seems' → logprob: -4.005660533905029
    8. ' are' → logprob: -4.005660533905029
    9. ' was' → logprob: -4.380660533905029
    10. 'se' → logprob: -4.380660533905029

Token 456: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.11468809843063354
    2. 'at' → logprob: -2.8646881580352783
    3. ' no' → logprob: -3.1146881580352783
    4. ' at' → logprob: -5.989687919616699
    5. 'up' → logprob: -6.239687919616699
    6. 'only' → logprob: -6.739687919616699
    7. 'multiple' → logprob: -8.2396879196167
    8. 'exact' → logprob: -8.3646879196167
    9. 'two' → logprob: -9.1146879196167
    10. 'n' → logprob: -9.4896879196167

Token 457: ' dead' (ID: 9224)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.3547133803367615
    2. 'parallel' → logprob: -2.1047134399414062
    3. 'duplicate' → logprob: -2.6047134399414062
    4. ' two' → logprob: -2.9797134399414062
    5. 'multiple' → logprob: -3.9797134399414062
    6. ' duplicate' → logprob: -4.854713439941406
    7. ' parallel' → logprob: -5.479713439941406
    8. 'duplicates' → logprob: -5.604713439941406
    9. 'stre' → logprob: -5.729713439941406
    10. 'over' → logprob: -5.729713439941406

Token 458: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.02647213451564312
    2. ' ends' → logprob: -4.151472091674805
    3. '_' → logprob: -5.651472091674805
    4. 'locks' → logprob: -5.651472091674805
    5. '-' → logprob: -5.901472091674805
    6. 'end' → logprob: -7.776472091674805
    7. '```' → logprob: -9.276472091674805
    8. 'lock' → logprob: -10.651472091674805
    9. 'lines' → logprob: -10.901472091674805
    10. '0' → logprob: -11.026472091674805

Token 459: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3995397388935089
    2. '   ' → logprob: -1.6495397090911865
    3. 'points' → logprob: -2.1495397090911865
    4. 'end' → logprob: -5.399539947509766
    5. '    
' → logprob: -5.399539947509766
    6. '
' → logprob: -5.524539947509766
    7. 'point' → logprob: -5.649539947509766
    8. 'ends' → logprob: -6.649539947509766
    9. '#' → logprob: -7.274539947509766
    10. ' for' → logprob: -7.399539947509766

Token 460: ' no' (ID: 860)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.260578453540802
    2. 'all' → logprob: -2.2605783939361572
    3. 'each' → logprob: -3.8855783939361572
    4. ' each' → logprob: -4.010578632354736
    5. ' the' → logprob: -4.260578632354736
    6. ' every' → logprob: -4.260578632354736
    7. '   ' → logprob: -4.635578632354736
    8. 'every' → logprob: -4.635578632354736
    9. 'the' → logprob: -4.885578632354736
    10. ' no' → logprob: -5.135578632354736

Token 461: ' overlapping' (ID: 90457)
  Prédit: 'isol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isol' → logprob: -0.3184424638748169
    2. ' isolated' → logprob: -2.0684423446655273
    3. 'loops' → logprob: -3.4434423446655273
    4. 'self' → logprob: -4.068442344665527
    5. 'duplicate' → logprob: -4.193442344665527
    6. 'duplicates' → logprob: -4.318442344665527
    7. 'two' → logprob: -4.568442344665527
    8. ' duplicates' → logprob: -4.693442344665527
    9. ' two' → logprob: -5.068442344665527
    10. ' loops' → logprob: -5.068442344665527

Token 462: ' parallel' (ID: 26697)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.021444248035550117
    2. 'points' → logprob: -4.146444320678711
    3. 'segments' → logprob: -5.896444320678711
    4. 'ends' → logprob: -6.521444320678711
    5. ' streets' → logprob: -7.896444320678711
    6. 'end' → logprob: -8.271444320678711
    7. 'for' → logprob: -8.646444320678711
    8. 'st' → logprob: -9.396444320678711
    9. '```' → logprob: -9.521444320678711
    10. ' points' → logprob: -10.021444320678711

Token 463: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.01326575968414545
    2. ' streets' → logprob: -4.388265609741211
    3. 'segments' → logprob: -8.138265609741211
    4. 'lines' → logprob: -8.388265609741211
    5. 'edges' → logprob: -8.888265609741211
    6. '_st' → logprob: -10.013265609741211
    7. 'street' → logprob: -11.013265609741211
    8. ' lines' → logprob: -11.263265609741211
    9. ' edges' → logprob: -12.138265609741211
    10. 'st' → logprob: -12.263265609741211

Token 464: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8465018272399902
    2. '   ' → logprob: -1.2215018272399902
    3. 'points' → logprob: -1.5965018272399902
    4. 'point' → logprob: -3.2215018272399902
    5. '
' → logprob: -4.22150182723999
    6. '    
' → logprob: -4.84650182723999
    7. '#' → logprob: -5.47150182723999
    8. 'end' → logprob: -5.84650182723999
    9. 'endpoint' → logprob: -6.97150182723999
    10. ' for' → logprob: -7.22150182723999

Token 465: '   ' (ID: 271)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.446887731552124
    2. 'end' → logprob: -1.696887731552124
    3. 'point' → logprob: -2.571887731552124
    4. 'for' → logprob: -2.571887731552124
    5. 'endpoint' → logprob: -4.446887969970703
    6. '   ' → logprob: -4.696887969970703
    7. 'ends' → logprob: -6.071887969970703
    8. '#' → logprob: -7.696887969970703
    9. 'positions' → logprob: -8.696887969970703
    10. 'pos' → logprob: -8.821887969970703

Token 466: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6657698750495911
    2. 'point' → logprob: -1.1657698154449463
    3. 'end' → logprob: -2.4157698154449463
    4. 'endpoint' → logprob: -3.0407698154449463
    5. 'for' → logprob: -3.4157698154449463
    6. 'ends' → logprob: -5.665770053863525
    7. 'pos' → logprob: -7.915770053863525
    8. '#' (adapté à ' #') → logprob: -8.040769577026367
    9. 'positions' → logprob: -9.165769577026367
    10. 'pts' → logprob: -9.790769577026367

Token 467: ' Map' (ID: 7343)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7173929214477539
    2. 'points' → logprob: -1.092392921447754
    3. 'endpoint' → logprob: -2.467392921447754
    4. 'end' → logprob: -2.717392921447754
    5. 'for' → logprob: -3.967392921447754
    6. 'ends' → logprob: -5.717392921447754
    7. '#' → logprob: -6.217392921447754
    8. 'pos' → logprob: -6.967392921447754
    9. 'pts' → logprob: -8.592392921447754
    10. 'positions' → logprob: -9.217392921447754

Token 468: ' each' (ID: 2454)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5241252183914185
    2. 'point' → logprob: -1.1491252183914185
    3. 'endpoint' → logprob: -3.774125099182129
    4. 'start' → logprob: -3.899125099182129
    5. 'end' → logprob: -4.149125099182129
    6. 'from' → logprob: -4.274125099182129
    7. ' endpoints' → logprob: -5.899125099182129
    8. '_point' → logprob: -5.899125099182129
    9. '_points' → logprob: -6.024125099182129
    10. ' points' → logprob: -6.149125099182129

Token 469: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.11720922589302063
    2. 'point' → logprob: -2.4922091960906982
    3. ' endpoint' → logprob: -4.117209434509277
    4. 'end' → logprob: -5.117209434509277
    5. '(' → logprob: -6.117209434509277
    6. 'street' → logprob: -6.492209434509277
    7. '(st' → logprob: -7.492209434509277
    8. '(endpoint' → logprob: -8.117209434509277
    9. '(point' → logprob: -8.242209434509277
    10. ' point' → logprob: -8.492209434509277

Token 470: ' to' (ID: 316)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.094301462173462
    2. ' =' → logprob: -1.469301462173462
    3. 'points' → logprob: -1.719301462173462
    4. '_point' → logprob: -2.094301462173462
    5. '_points' → logprob: -2.219301462173462
    6. '_to' → logprob: -4.844301223754883
    7. 'to' → logprob: -5.719301223754883
    8. '=' → logprob: -5.844301223754883
    9. 'endpoint' → logprob: -5.969301223754883
    10. '_map' → logprob: -6.469301223754883

Token 471: ' the' (ID: 290)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10642462223768234
    2. '[(' → logprob: -3.356424570083618
    3. 'default' → logprob: -4.106424808502197
    4. 'a' → logprob: -4.231424808502197
    5. '[' → logprob: -4.606424808502197
    6. 'stre' → logprob: -4.606424808502197
    7. 'connections' → logprob: -5.356424808502197
    8. 'street' → logprob: -5.731424808502197
    9. '[]
' → logprob: -6.231424808502197
    10. '[],' → logprob: -6.606424808502197

Token 472: ' streets' (ID: 25360)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2984384298324585
    2. 'default' → logprob: -2.048438549041748
    3. '[]
' → logprob: -3.048438549041748
    4. 'points' → logprob: -4.298438549041748
    5. 'point' → logprob: -4.423438549041748
    6. '[(' → logprob: -4.423438549041748
    7. 'endpoint' → logprob: -4.673438549041748
    8. 'street' → logprob: -4.798438549041748
    9. 'end' → logprob: -5.298438549041748
    10. 'list' → logprob: -6.173438549041748

Token 473: ' that' (ID: 484)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8159332275390625
    2. 'endpoint' → logprob: -1.3159332275390625
    3. 'end' → logprob: -1.4409332275390625
    4. 'point' → logprob: -3.6909332275390625
    5. 'for' → logprob: -4.3159332275390625
    6. ' =' → logprob: -5.1909332275390625
    7. '_points' → logprob: -6.4409332275390625
    8. 'ends' → logprob: -6.5659332275390625
    9. '   ' → logprob: -6.5659332275390625
    10. 'and' → logprob: -6.6909332275390625

Token 474: ' connect' (ID: 4837)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2391400337219238
    2. 'connect' → logprob: -1.7391400337219238
    3. 'touch' → logprob: -1.9891400337219238
    4. 'pass' → logprob: -1.9891400337219238
    5. 'have' → logprob: -2.364140033721924
    6. 'end' → logprob: -2.864140033721924
    7. 'appear' → logprob: -3.614140033721924
    8. ' touch' → logprob: -3.864140033721924
    9. 'occur' → logprob: -4.364140033721924
    10. ' pass' → logprob: -4.864140033721924

Token 475: ' there' (ID: 1354)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3212343156337738
    2. 'point' → logprob: -1.8212343454360962
    3. 'endpoint' → logprob: -2.6962342262268066
    4. 'end' → logprob: -4.071234226226807
    5. 'to' → logprob: -5.321234226226807
    6. '_points' → logprob: -5.446234226226807
    7. 'for' → logprob: -5.946234226226807
    8. 'pts' → logprob: -5.946234226226807
    9. 'ends' → logprob: -6.071234226226807
    10. 'and' → logprob: -6.446234226226807

Token 476: '
' (ID: 198)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6318484544754028
    2. 'point' → logprob: -1.1318484544754028
    3. 'points' → logprob: -2.2568483352661133
    4. 'end' → logprob: -3.2568483352661133
    5. '   ' → logprob: -6.506848335266113
    6. 'for' → logprob: -7.256848335266113
    7. '
' → logprob: -8.631848335266113
    8. 'pts' → logprob: -9.506848335266113
    9. ' endpoints' → logprob: -9.506848335266113
    10. 'pos' → logprob: -10.006848335266113

Token 477: '   ' (ID: 271)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.4301714599132538
    2. 'point' → logprob: -1.6801714897155762
    3. 'end' → logprob: -2.555171489715576
    4. 'points' → logprob: -2.555171489715576
    5. '   ' → logprob: -5.180171489715576
    6. 'for' → logprob: -6.805171489715576
    7. '
' → logprob: -7.555171489715576
    8. ' endpoints' → logprob: -7.805171489715576
    9. '    
' → logprob: -9.555171012878418
    10. ' endpoint' → logprob: -10.430171012878418

Token 478: ' point' (ID: 2438)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7778487205505371
    2. 'endpoint' → logprob: -1.027848720550537
    3. 'point' (adapté à ' point') → logprob: -2.277848720550537
    4. 'points' → logprob: -2.527848720550537
    5. ' endpoints' → logprob: -7.777848720550537
    6. 'ends' → logprob: -10.902849197387695
    7. '   ' → logprob: -11.152849197387695
    8. ' endpoint' → logprob: -11.152849197387695
    9. 'pts' → logprob: -11.902849197387695
    10. '    
' → logprob: -12.027849197387695

Token 479: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6527853608131409
    2. 's' → logprob: -1.152785301208496
    3. '_map' → logprob: -1.902785301208496
    4. '_points' → logprob: -4.402785301208496
    5. '_st' → logprob: -6.777785301208496
    6. '_end' → logprob: -8.152785301208496
    7. '_' → logprob: -8.152785301208496
    8. '_connections' → logprob: -8.402785301208496
    9. '_dict' → logprob: -9.777785301208496
    10. '_mapping' → logprob: -9.902785301208496

Token 480: '_' (ID: 62)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.0008135587559081614
    2. 'street' → logprob: -7.1258134841918945
    3. 'sts' → logprob: -12.750813484191895
    4. 'st' → logprob: -13.500813484191895
    5. '(st' → logprob: -14.125813484191895
    6. '[' → logprob: -14.125813484191895
    7. 'points' → logprob: -14.250813484191895
    8. ' streets' → logprob: -14.375813484191895
    9. 'ids' → logprob: -14.500813484191895
    10. '_st' → logprob: -14.750813484191895

Token 481: 'ends' (ID: 1847)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.005389330442994833
    2. 'street' → logprob: -5.255389213562012
    3. 'ends' → logprob: -9.130389213562012
    4. 'sts' → logprob: -10.755389213562012
    5. 'ids' → logprob: -11.630389213562012
    6. 'end' → logprob: -11.880389213562012
    7. 'st' → logprob: -12.255389213562012
    8. 'stro' → logprob: -13.755389213562012
    9. ' streets' → logprob: -13.880389213562012
    10. 'stairs' → logprob: -14.130389213562012

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '[' → logprob: -15.383614540100098
    4. 'default' → logprob: -16.133615493774414
    5. '[(' → logprob: -16.883615493774414
    6. '.setdefault' → logprob: -17.258615493774414
    7. ' defaultdict' → logprob: -17.383615493774414
    8. '={}' → logprob: -19.133615493774414
    9. 's' → logprob: -19.508615493774414
    10. '={' → logprob: -19.633615493774414

Token 483: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.318681188422488e-05
    2. ' defaultdict' → logprob: -11.25001335144043
    3. '{}' → logprob: -16.00001335144043
    4. '(default' → logprob: -17.75001335144043
    5. '   ' → logprob: -18.75001335144043
    6. '.default' → logprob: -19.00001335144043
    7. '"default' → logprob: -19.37501335144043
    8. ' default' → logprob: -19.75001335144043
    9. '{' → logprob: -20.12501335144043
    10. 'def' → logprob: -20.62501335144043

Token 484: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.06221179664134979
    2. 'list' → logprob: -2.812211751937866
    3. '(set' → logprob: -8.687211990356445
    4. 'set' → logprob: -10.687211990356445
    5. '(lambda' → logprob: -10.687211990356445
    6. '[list' → logprob: -11.687211990356445
    7. ':list' → logprob: -11.687211990356445
    8. '=list' → logprob: -11.937211990356445
    9. '	list' → logprob: -13.562211990356445
    10. ' list' → logprob: -13.562211990356445

Token 485: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35539257526397705
    2. ')' → logprob: -1.230392575263977
    3. '[(' → logprob: -5.2303924560546875
    4. '   ' → logprob: -6.7303924560546875
    5. '((' → logprob: -9.105392456054688
    6. ',' → logprob: -9.855392456054688
    7. ')

' → logprob: -10.105392456054688
    8. ')((' → logprob: -10.105392456054688
    9. '[' → logprob: -10.480392456054688
    10. ')
' → logprob: -10.605392456054688

Token 486: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06640561670064926
    2. '<|end|>' → logprob: -3.6914055347442627
    3. '   ' → logprob: -3.9414055347442627
    4. ' for' → logprob: -4.941405773162842
    5. ')' → logprob: -5.566405773162842
    6. '
' → logprob: -5.941405773162842
    7. ')
' → logprob: -6.691405773162842
    8. '    
' → logprob: -6.941405773162842
    9. '[(' → logprob: -7.191405773162842
    10. '(' → logprob: -7.316405773162842

Token 487: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006841588299721479
    2. '
' → logprob: -6.381841659545898
    3. ')
' → logprob: -6.506841659545898
    4. ')' → logprob: -6.756841659545898
    5. ' for' → logprob: -6.881841659545898
    6. '   ' → logprob: -7.256841659545898
    7. '<|end|>' → logprob: -7.881841659545898
    8. '[(' → logprob: -9.506841659545898
    9. '()
' → logprob: -9.881841659545898
    10. '    
' → logprob: -10.131841659545898

Token 488: ' point' (ID: 2438)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.20324504375457764
    2. '(tuple' → logprob: -2.078245162963867
    3. ' tuple' → logprob: -3.328245162963867
    4. 'lambda' → logprob: -4.578245162963867
    5. 'def' → logprob: -5.953245162963867
    6. ')' → logprob: -6.078245162963867
    7. '(lambda' → logprob: -6.828245162963867
    8. '
' → logprob: -7.203245162963867
    9. 'str' → logprob: -7.453245162963867
    10. 'point' → logprob: -7.453245162963867

Token 489: ' ->' (ID: 2747)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.841086745262146
    2. ')' → logprob: -1.216086745262146
    3. ' =' → logprob: -2.0910868644714355
    4. '=' → logprob: -2.4660868644714355
    5. '=lambda' → logprob: -4.2160868644714355
    6. 'to' → logprob: -4.5910868644714355
    7. ',' → logprob: -4.5910868644714355
    8. '<|end|>' → logprob: -4.8410868644714355
    9. ':' → logprob: -5.2160868644714355
    10. ')=' → logprob: -6.0910868644714355

Token 490: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5014814138412476
    2. '[(' → logprob: -1.2514814138412476
    3. '(' → logprob: -2.626481533050537
    4. '(st' → logprob: -3.626481533050537
    5. '[]
' → logprob: -6.126481533050537
    6. '(s' → logprob: -6.626481533050537
    7. '[' → logprob: -7.001481533050537
    8. ' (' → logprob: -7.251481533050537
    9. '(point' → logprob: -7.251481533050537
    10. 'list' → logprob: -7.501481533050537

Token 491: ' of' (ID: 328)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.024958716705441475
    2. '((' → logprob: -5.024958610534668
    3. ' of' → logprob: -5.274958610534668
    4. 'of' → logprob: -5.524958610534668
    5. '(st' → logprob: -6.274958610534668
    6. '   ' → logprob: -6.399958610534668
    7. '([(' → logprob: -6.774958610534668
    8. '[' → logprob: -7.274958610534668
    9. '.append' → logprob: -7.399958610534668
    10. ' (' → logprob: -7.524958610534668

Token 492: ' (' (ID: 350)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.004674099385738373
    2. '(' → logprob: -5.629673957824707
    3. ' (' → logprob: -7.754673957824707
    4. '(s' → logprob: -8.004673957824707
    5. '[(' → logprob: -8.754673957824707
    6. '(end' → logprob: -9.004673957824707
    7. 'street' → logprob: -11.254673957824707
    8. '(start' → logprob: -12.879673957824707
    9. '(i' → logprob: -13.129673957824707
    10. '(x' → logprob: -13.504673957824707

Token 493: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.008683355525135994
    2. 'i' → logprob: -5.883683204650879
    3. '(st' → logprob: -6.133683204650879
    4. ' street' → logprob: -6.383683204650879
    5. 'stre' → logprob: -6.883683204650879
    6. '(i' → logprob: -8.008683204650879
    7. '   ' → logprob: -9.258683204650879
    8. ')' → logprob: -9.258683204650879
    9. 'st' → logprob: -9.383683204650879
    10. ' (' → logprob: -9.383683204650879

Token 494: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.2855416066013277e-05
    2. 'id' → logprob: -10.625032424926758
    3. 's' → logprob: -12.500032424926758
    4. ',' → logprob: -13.375032424926758
    5. '```' → logprob: -13.750032424926758
    6. '_ids' → logprob: -14.250032424926758
    7. ')' → logprob: -14.875032424926758
    8. '<|end|>' → logprob: -15.250032424926758
    9. ' _' → logprob: -16.000032424926758
    10. ')_' → logprob: -16.125032424926758

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -12.250008583068848
    3. ',
' → logprob: -13.375008583068848
    4. '   ' → logprob: -14.250008583068848
    5. ',end' → logprob: -15.375008583068848
    6. '<|end|>' → logprob: -15.625008583068848
    7. '‌,' → logprob: -16.12500762939453
    8. '[' → logprob: -16.50000762939453
    9. '0' → logprob: -16.62500762939453
    10. ',line' → logprob: -16.75000762939453

Token 496: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3540673553943634
    2. '0' → logprob: -1.229067325592041
    3. ' end' → logprob: -5.854067325592041
    4. '1' → logprob: -6.354067325592041
    5. 'endpoint' → logprob: -7.479067325592041
    6. ' ' → logprob: -8.1040678024292
    7. '   ' → logprob: -9.7290678024292
    8. ''end' → logprob: -11.1040678024292
    9. 'flag' → logprob: -11.4790678024292
    10. ' endpoint' → logprob: -11.8540678024292

Token 497: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -5.200166469876422e-06
    2. 'flag' → logprob: -12.750004768371582
    3. '_flags' → logprob: -14.000004768371582
    4. ')_' → logprob: -14.750004768371582
    5. '_FLAG' → logprob: -15.000004768371582
    6. ')' → logprob: -15.125004768371582
    7. '_point' → logprob: -15.625004768371582
    8. ')]' → logprob: -16.3750057220459
    9. 'Flag' → logprob: -17.1250057220459
    10. ' _' → logprob: -17.3750057220459

Token 498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4750584065914154
    2. ')
' → logprob: -0.9750584363937378
    3. '[' → logprob: -7.725058555603027
    4. ')
' → logprob: -8.600058555603027
    5. '   ' → logprob: -8.725058555603027
    6. ')

' → logprob: -9.350058555603027
    7. ')`
' → logprob: -10.225058555603027
    8. '0' → logprob: -11.850058555603027
    9. '[])
' → logprob: -11.850058555603027
    10. '))
' → logprob: -11.975058555603027

Token 499: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5495261549949646
    2. '   ' → logprob: -1.0495262145996094
    3. '```' → logprob: -3.2995262145996094
    4. ' for' → logprob: -3.5495262145996094
    5. '
' → logprob: -5.299526214599609
    6. '    
' → logprob: -7.424526214599609
    7. '``' → logprob: -7.424526214599609
    8. '<|end|>' → logprob: -8.79952621459961
    9. '  
' → logprob: -8.92452621459961
    10. ')' → logprob: -9.04952621459961

Token 500: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027517149224877357
    2. '   ' → logprob: -3.652517080307007
    3. ' for' → logprob: -6.902517318725586
    4. '```' → logprob: -8.527517318725586
    5. '	for' → logprob: -11.777517318725586
    6. ')' → logprob: -13.027517318725586
    7. '    
' → logprob: -14.027517318725586
    8. '
' → logprob: -14.777517318725586
    9. '``' → logprob: -14.902517318725586
    10. '<|end|>' → logprob: -14.902517318725586

Token 501: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038184016942977905
    2. ' i' → logprob: -3.2881839275360107
    3. 'idx' → logprob: -9.53818416595459
    4. ' idx' → logprob: -10.53818416595459
    5. 'street' → logprob: -10.53818416595459
    6. ' street' → logprob: -12.53818416595459
    7. '(i' → logprob: -12.53818416595459
    8. 's' → logprob: -12.91318416595459
    9. 'sid' → logprob: -13.28818416595459
    10. ' (' → logprob: -13.53818416595459

Token 502: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32338014245033264
    2. ' in' → logprob: -1.9483801126480103
    3. 'in' → logprob: -2.9483802318573
    4. 'id' → logprob: -3.1983802318573
    5. '_id' → logprob: -3.4483802318573
    6. ',i' → logprob: -5.823379993438721
    7. ' ,' → logprob: -6.698379993438721
    8. 'i' → logprob: -7.573379993438721
    9. '_idx' → logprob: -7.698379993438721
    10. 't' → logprob: -7.823379993438721

Token 503: ' street' (ID: 12901)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5299004912376404
    2. 'street' → logprob: -0.9049004912376404
    3. ' range' → logprob: -5.529900550842285
    4. 'stre' → logprob: -6.279900550842285
    5. ' street' → logprob: -7.279900550842285
    6. '[' → logprob: -9.279900550842285
    7. 'enumer' → logprob: -10.029900550842285
    8. 'st' → logprob: -10.029900550842285
    9. '[(' → logprob: -11.654900550842285
    10. 're' → logprob: -11.779900550842285

Token 504: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.012423587962985039
    2. 'data' → logprob: -4.762423515319824
    3. 's' → logprob: -6.387423515319824
    4. 'in' → logprob: -7.512423515319824
    5. 'stre' → logprob: -7.512423515319824
    6. 'range' → logprob: -7.887423515319824
    7. 'street' → logprob: -8.262423515319824
    8. 'for' → logprob: -8.387423515319824
    9. 'Data' → logprob: -9.512423515319824
    10. '   ' → logprob: -11.512423515319824

Token 505: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.600209653377533
    2. ':' → logprob: -1.7252097129821777
    3. '   ' → logprob: -2.2252097129821777
    4. ' in' → logprob: -2.6002097129821777
    5. 'in' → logprob: -2.8502097129821777
    6. '[' → logprob: -3.9752097129821777
    7. 's' → logprob: -5.225209712982178
    8. '[i' → logprob: -5.475209712982178
    9. '):
' → logprob: -7.100209712982178
    10. ' s' → logprob: -7.100209712982178

Token 506: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004842696245759726
    2. 'point' → logprob: -5.504842758178711
    3. ' point' → logprob: -8.004842758178711
    4. '```' → logprob: -8.629842758178711
    5. 'for' → logprob: -8.879842758178711
    6. ' for' → logprob: -10.254842758178711
    7. 'start' → logprob: -10.379842758178711
    8. '    
' → logprob: -11.379842758178711
    9. '       ' → logprob: -11.504842758178711
    10. '
' → logprob: -12.004842758178711

Token 507: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.00071695790393278
    2. '   ' → logprob: -7.7507171630859375
    3. 'start' → logprob: -8.500717163085938
    4. ' point' → logprob: -10.375717163085938
    5. 'for' → logprob: -10.500717163085938
    6. '       ' → logprob: -11.250717163085938
    7. 'pt' → logprob: -11.875717163085938
    8. 's' → logprob: -14.000717163085938
    9. 'points' → logprob: -14.250717163085938
    10. '```' → logprob: -14.250717163085938

Token 508: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.21999849379062653
    2. '=' → logprob: -2.219998598098755
    3. ' =' → logprob: -2.469998598098755
    4. 'to' → logprob: -5.969998359680176
    5. '['' → logprob: -7.469998359680176
    6. 's' → logprob: -7.719998359680176
    7. 'point' → logprob: -8.344998359680176
    8. 'To' → logprob: -8.594998359680176
    9. '=s' → logprob: -9.219998359680176
    10. '_point' → logprob: -10.719998359680176

Token 509: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0034153475426137447
    2. '(s' → logprob: -6.628415584564209
    3. 'tuple' → logprob: -6.628415584564209
    4. '[s' → logprob: -7.378415584564209
    5. ' s' → logprob: -9.50341510772705
    6. '{s' → logprob: -10.37841510772705
    7. '(tuple' → logprob: -11.87841510772705
    8. '(' → logprob: -12.12841510772705
    9. 'start' → logprob: -12.50341510772705
    10. '[(' → logprob: -12.50341510772705

Token 510: 'ends' (ID: 1847)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016541721299290657
    2. '(s' → logprob: -5.516541957855225
    3. 'ends' → logprob: -5.516541957855225
    4. 'tuple' → logprob: -5.516541957855225
    5. 'start' → logprob: -6.141541957855225
    6. '[s' → logprob: -6.641541957855225
    7. 'starts' → logprob: -7.641541957855225
    8. 'end' → logprob: -9.141541481018066
    9. ' s' → logprob: -9.516541481018066
    10. '(tuple' → logprob: -9.891541481018066

Token 511: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00037347347824834287
    2. '[(' → logprob: -8.125373840332031
    3. '[' → logprob: -9.500373840332031
    4. 's' → logprob: -13.125373840332031
    5. ' [' → logprob: -15.250373840332031
    6. '(s' → logprob: -15.875373840332031
    7. '   ' → logprob: -16.75037384033203
    8. '[S' → logprob: -16.75037384033203
    9. '[
' → logprob: -17.37537384033203
    10. '
' → logprob: -17.62537384033203

Token 512: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -8.73314929776825e-05
    2. '[' → logprob: -10.50008773803711
    3. '[s' → logprob: -10.62508773803711
    4. 's' → logprob: -11.00008773803711
    5. '["' → logprob: -11.12508773803711
    6. '[start' → logprob: -13.37508773803711
    7. '{'' → logprob: -14.12508773803711
    8. ''s' → logprob: -14.50008773803711
    9. ']['' → logprob: -15.50008773803711
    10. ' ['' → logprob: -15.62508773803711

Token 513: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0008531087078154087
    2. ''' → logprob: -7.500853061676025
    3. ''s' → logprob: -8.375853538513184
    4. ''id' → logprob: -10.250853538513184
    5. '['' → logprob: -11.250853538513184
    6. ''end' → logprob: -11.500853538513184
    7. 'id' → logprob: -11.750853538513184
    8. ' start' → logprob: -13.375853538513184
    9. '{'' → logprob: -14.875853538513184
    10. ' '' → logprob: -15.000853538513184

Token 514: '']' (ID: 1089)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002827223390340805
    2. ''].' → logprob: -6.252827167510986
    3. ']' → logprob: -7.752827167510986
    4. '()].' → logprob: -8.377827644348145
    5. ')].' → logprob: -9.127827644348145
    6. ' ].' → logprob: -9.377827644348145
    7. '"].' → logprob: -11.877827644348145
    8. ']].' → logprob: -12.002827644348145
    9. '],' → logprob: -12.002827644348145
    10. ']).' → logprob: -12.377827644348145

Token 515: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002998312993440777
    2. '.append' → logprob: -8.250299453735352
    3. ' ].' → logprob: -10.875299453735352
    4. ').' → logprob: -12.000299453735352
    5. ''].' → logprob: -12.000299453735352
    6. ']' → logprob: -12.625299453735352
    7. '.' → logprob: -14.000299453735352
    8. '()].' → logprob: -14.125299453735352
    9. '   ' → logprob: -14.625299453735352
    10. ')].' → logprob: -14.750299453735352

Token 516: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.511406809295295e-06
    2. ' append' → logprob: -12.000006675720215
    3. '.append' → logprob: -15.250006675720215
    4. 'appen' → logprob: -18.8750057220459
    5. '_append' → logprob: -20.0000057220459
    6. '	append' → logprob: -20.5000057220459
    7. 'Append' → logprob: -20.7500057220459
    8. '   ' → logprob: -21.7500057220459
    9. '```' → logprob: -22.3750057220459
    10. 'app' → logprob: -22.7500057220459

Token 517: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.13941960036754608
    2. ' (' → logprob: -2.1394195556640625
    3. '(' → logprob: -4.3894195556640625
    4. '((' → logprob: -12.514419555664062
    5. '   ' → logprob: -13.514419555664062
    6. '(x' → logprob: -15.389419555664062
    7. '(S' → logprob: -16.014419555664062
    8. ' ' → logprob: -16.264419555664062
    9. '(st' → logprob: -16.389419555664062
    10. '('' → logprob: -17.389419555664062

Token 518: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005530327325686812
    2. ' s' → logprob: -7.500553131103516
    3. '(s' → logprob: -17.500553131103516
    4. '   ' → logprob: -18.125553131103516
    5. '{s' → logprob: -19.000553131103516
    6. '	s' → logprob: -20.250553131103516
    7. '_s' → logprob: -20.625553131103516
    8. ' ' → logprob: -21.375553131103516
    9. '  ' → logprob: -21.625553131103516
    10. '`s' → logprob: -21.875553131103516

Token 519: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0011455760104581714
    2. ''id' → logprob: -6.876145362854004
    3. ''s' → logprob: -9.376145362854004
    4. 'id' → logprob: -12.126145362854004
    5. '[id' → logprob: -12.126145362854004
    6. ''' → logprob: -12.501145362854004
    7. 's' → logprob: -13.376145362854004
    8. '"id' → logprob: -13.501145362854004
    9. ' '' → logprob: -13.751145362854004
    10. '[' → logprob: -13.876145362854004

Token 520: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0009130131802521646
    2. ''id' → logprob: -7.000913143157959
    3. '['' → logprob: -14.3759126663208
    4. '"id' → logprob: -15.0009126663208
    5. ' id' → logprob: -15.0009126663208
    6. ''s' → logprob: -15.3759126663208
    7. ''' → logprob: -18.000913619995117
    8. '   ' → logprob: -19.500913619995117
    9. '_id' → logprob: -19.500913619995117
    10. ' '' → logprob: -19.625913619995117

Token 521: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041577612864784896
    2. '',' → logprob: -8.375415802001953
    3. ' ,' → logprob: -8.625415802001953
    4. '0' → logprob: -13.375415802001953
    5. ''],' → logprob: -13.500415802001953
    6. '‌,' → logprob: -14.250415802001953
    7. ',
' → logprob: -14.750415802001953
    8. '],' → logprob: -15.000415802001953
    9. '','' → logprob: -15.125415802001953
    10. '`,' → logprob: -15.125415802001953

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.1250057220459
    4. '```' → logprob: -20.0000057220459
    5. ')' → logprob: -20.6250057220459
    6. '۰' → logprob: -20.7500057220459
    7. '
' → logprob: -20.8750057220459
    8. '  ' → logprob: -21.3750057220459
    9. '       ' → logprob: -21.9375057220459
    10. '`' → logprob: -22.0000057220459

Token 523: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2526945471763611
    2. '))
' → logprob: -1.5026946067810059
    3. ')' → logprob: -7.252694606781006
    4. ')
' → logprob: -10.502694129943848
    5. ' ))' → logprob: -11.752694129943848
    6. '))
' → logprob: -12.252694129943848
    7. '   ' → logprob: -12.252694129943848
    8. ' ))
' → logprob: -12.502694129943848
    9. '))

' → logprob: -12.627694129943848
    10. '),' → logprob: -13.502694129943848

Token 524: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9842364192008972
    2. 'for' → logprob: -1.234236478805542
    3. ' for' → logprob: -1.484236478805542
    4. '       ' → logprob: -2.234236478805542
    5. 'point' → logprob: -7.359236240386963
    6. ' point' → logprob: -7.609236240386963
    7. '```' → logprob: -8.234236717224121
    8. '
' → logprob: -10.984236717224121
    9. ' ' → logprob: -11.609236717224121
    10. '<|end|>' → logprob: -11.734236717224121

Token 525: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.00020139472326263785
    2. '       ' → logprob: -9.125201225280762
    3. ' point' → logprob: -9.500201225280762
    4. '   ' → logprob: -11.000201225280762
    5. '           ' → logprob: -14.625201225280762
    6. 's' → logprob: -15.000201225280762
    7. '	point' → logprob: -17.000202178955078
    8. '```' → logprob: -17.375202178955078
    9. 'for' → logprob: -17.500202178955078
    10. '(point' → logprob: -18.000202178955078

Token 526: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.1517960956552997e-05
    2. '['' → logprob: -11.625011444091797
    3. 'To' → logprob: -13.750011444091797
    4. '['_' → logprob: -14.375011444091797
    5. 'to' → logprob: -14.625011444091797
    6. '[' → logprob: -16.500011444091797
    7. ''_' → logprob: -16.750011444091797
    8. '```' → logprob: -16.875011444091797
    9. '   ' → logprob: -17.500011444091797
    10. '[['' → logprob: -17.500011444091797

Token 527: '_' (ID: 62)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -7.73183855926618e-05
    2. '_' → logprob: -9.500077247619629
    3. ' ends' → logprob: -13.125077247619629
    4. 's' → logprob: -15.750077247619629
    5. 'Ends' → logprob: -16.750078201293945
    6. 'ENDS' → logprob: -17.000078201293945
    7. '[' → logprob: -18.375078201293945
    8. 'to' → logprob: -18.500078201293945
    9. '
' → logprob: -18.500078201293945
    10. '-' → logprob: -18.625078201293945

Token 528: 'ends' (ID: 1847)
  Prédit: 'ends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. 'end' → logprob: -15.875000953674316
    4. ' ends' → logprob: -17.0
    5. 'Ends' → logprob: -17.75
    6. 'ENDS' → logprob: -18.0
    7. 'starts' → logprob: -18.125
    8. 'ents' → logprob: -18.75
    9. '
' → logprob: -18.75
    10. 'e' → logprob: -19.625

Token 529: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.696889623621246e-06
    2. 's' → logprob: -13.25000286102295
    3. '[' → logprob: -14.25000286102295
    4. '(s' → logprob: -15.50000286102295
    5. '   ' → logprob: -17.250001907348633
    6. '{s' → logprob: -17.375001907348633
    7. '[(' → logprob: -17.750001907348633
    8. ' s' → logprob: -18.125001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '[
' → logprob: -18.750001907348633

Token 530: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -8.180258191714529e-06
    2. ']['' → logprob: -12.375008583068848
    3. ''' → logprob: -13.875008583068848
    4. '[' → logprob: -14.000008583068848
    5. '
' → logprob: -14.125008583068848
    6. ''s' → logprob: -14.750008583068848
    7. '{'' → logprob: -15.000008583068848
    8. ''end' → logprob: -15.500008583068848
    9. '["' → logprob: -16.37500762939453
    10. '[end' → logprob: -16.50000762939453

Token 531: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0032038541976362467
    2. ''end' → logprob: -5.753203868865967
    3. '1' → logprob: -11.003203392028809
    4. 'length' → logprob: -12.503203392028809
    5. ''' → logprob: -12.628203392028809
    6. ' end' → logprob: -13.753203392028809
    7. 'id' → logprob: -14.503203392028809
    8. ''s' → logprob: -15.003203392028809
    9. '['' → logprob: -15.503203392028809
    10. 'start' → logprob: -15.628203392028809

Token 532: '']' (ID: 1089)
  Prédit: ']).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']).' → logprob: -0.3827441930770874
    2. ')].' → logprob: -1.2577441930770874
    3. '']).' → logprob: -3.882744312286377
    4. '])' → logprob: -4.882744312286377
    5. ']' → logprob: -6.382744312286377
    6. ')]' → logprob: -6.507744312286377
    7. '].' → logprob: -6.882744312286377
    8. '],' → logprob: -8.257743835449219
    9. ')' → logprob: -8.382743835449219
    10. '']' → logprob: -8.382743835449219

Token 533: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5023716688156128
    2. '].' → logprob: -1.0023716688156128
    3. ')].' → logprob: -4.252371788024902
    4. ']).' → logprob: -4.877371788024902
    5. '.append' → logprob: -5.252371788024902
    6. ')]' → logprob: -8.627371788024902
    7. ')' → logprob: -8.752371788024902
    8. '[' → logprob: -9.377371788024902
    9. '   ' → logprob: -9.627371788024902
    10. ']' → logprob: -9.627371788024902

Token 534: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.375
    3. '.append' → logprob: -16.5
    4. 'appen' → logprob: -17.5
    5. '	append' → logprob: -19.75
    6. 'add' → logprob: -21.375
    7. '(' → logprob: -21.5
    8. '1' → logprob: -21.625
    9. 'Append' → logprob: -21.75
    10. 'app' → logprob: -21.75

Token 535: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3871192932128906
    2. '(s' → logprob: -1.1371192932128906
    3. '(' → logprob: -9.01211929321289
    4. ' (' → logprob: -9.01211929321289
    5. '(
' → logprob: -13.38711929321289
    6. '[(' → logprob: -14.51211929321289
    7. '   ' → logprob: -14.63711929321289
    8. '({'' → logprob: -15.26211929321289
    9. '({' → logprob: -15.38711929321289
    10. 's' → logprob: -15.38711929321289

Token 536: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001222508290084079
    2. ' s' → logprob: -9.6251220703125
    3. '(s' → logprob: -10.0001220703125
    4. '(' → logprob: -12.0001220703125
    5. '   ' → logprob: -13.1251220703125
    6. ' (' → logprob: -14.1251220703125
    7. '
' → logprob: -14.8751220703125
    8. '{s' → logprob: -15.2501220703125
    9. '<|end|>' → logprob: -15.6251220703125
    10. ' ' → logprob: -15.6251220703125

Token 537: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0002870801545213908
    2. ''s' → logprob: -8.250287055969238
    3. 's' → logprob: -11.250287055969238
    4. ''id' → logprob: -12.125287055969238
    5. '[' → logprob: -12.750287055969238
    6. ''' → logprob: -13.500287055969238
    7. '[s' → logprob: -13.875287055969238
    8. ''user' → logprob: -14.750287055969238
    9. '[
' → logprob: -15.250287055969238
    10. '{'' → logprob: -15.625287055969238

Token 538: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.14279255270957947
    2. '1' → logprob: -2.0177924633026123
    3. ''id' → logprob: -9.892792701721191
    4. ' id' → logprob: -10.767792701721191
    5. ' ' → logprob: -11.517792701721191
    6. '   ' → logprob: -11.642792701721191
    7. '0' → logprob: -12.017792701721191
    8. ''' → logprob: -12.392792701721191
    9. '')' → logprob: -13.392792701721191
    10. 's' → logprob: -13.392792701721191

Token 539: ''],' (ID: 9151)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.8291664719581604
    2. ''],' → logprob: -0.8291664719581604
    3. ',' → logprob: -2.0791664123535156
    4. '',' → logprob: -6.579166412353516
    5. '},' → logprob: -8.204166412353516
    6. '),' → logprob: -8.329166412353516
    7. '       ' → logprob: -9.829166412353516
    8. '   ' → logprob: -10.329166412353516
    9. '           ' → logprob: -10.704166412353516
    10. '1' → logprob: -11.204166412353516

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '```' → logprob: -18.625001907348633
    6. '0' → logprob: -19.250001907348633
    7. '`' → logprob: -20.625001907348633
    8. '<|end|>' → logprob: -20.812501907348633
    9. 's' → logprob: -21.312501907348633
    10. '[' → logprob: -21.500001907348633

Token 541: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048622675240039825
    2. ')' → logprob: -3.0486226081848145
    3. '))
' → logprob: -10.923623085021973
    4. '       ' → logprob: -11.923623085021973
    5. '   ' → logprob: -12.548623085021973
    6. ')))' → logprob: -12.798623085021973
    7. ')
' → logprob: -13.923623085021973
    8. ')}' → logprob: -14.048623085021973
    9. ' ))' → logprob: -14.048623085021973
    10. '])' → logprob: -14.798623085021973

Token 542: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9862216504407115e-05
    2. '   ' → logprob: -11.000020027160645
    3. ' for' → logprob: -13.125020027160645
    4. '```' → logprob: -13.875020027160645
    5. '#' → logprob: -16.375019073486328
    6. '
' → logprob: -16.750019073486328
    7. '	for' → logprob: -17.125019073486328
    8. '    
' → logprob: -18.000019073486328
    9. 'points' → logprob: -18.625019073486328
    10. 'For' → logprob: -19.125019073486328

Token 543: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.625000953674316
    3. ' for' → logprob: -15.125000953674316
    4. '#' → logprob: -16.0
    5. '
' → logprob: -17.5
    6. 'For' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. 'points' → logprob: -18.375
    9. '    
' → logprob: -18.75
    10. '	for' → logprob: -19.875

Token 544: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2975456714630127
    2. ' point' → logprob: -1.4225456714630127
    3. 'p' → logprob: -4.797545433044434
    4. 'pt' → logprob: -5.422545433044434
    5. 'points' → logprob: -6.797545433044434
    6. 'pts' → logprob: -7.047545433044434
    7. 's' → logprob: -7.422545433044434
    8. ' p' → logprob: -7.922545433044434
    9. ' pt' → logprob: -8.672545433044434
    10. ' s' → logprob: -8.922545433044434

Token 545: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.544572114944458
    2. ' in' → logprob: -0.919572114944458
    3. ',' → logprob: -3.919572114944458
    4. '   ' → logprob: -6.669571876525879
    5. ',in' → logprob: -10.419571876525879
    6. '_in' → logprob: -10.669571876525879
    7. '```' → logprob: -11.169571876525879
    8. ' ,' → logprob: -11.794571876525879
    9. '_points' → logprob: -11.919571876525879
    10. 'points' → logprob: -13.169571876525879

Token 546: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.003244966734200716
    2. ' ends' → logprob: -6.253244876861572
    3. 'stre' → logprob: -7.253244876861572
    4. 'connections' → logprob: -8.50324535369873
    5. 'lst' → logprob: -9.37824535369873
    6. 'end' → logprob: -9.87824535369873
    7. 'points' → logprob: -9.87824535369873
    8. 'ents' → logprob: -9.87824535369873
    9. 'edges' → logprob: -10.12824535369873
    10. 'vals' → logprob: -10.87824535369873

Token 547: '_list' (ID: 4162)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04869580268859863
    2. 'in' → logprob: -3.0486958026885986
    3. '   ' → logprob: -10.42369556427002
    4. ':' → logprob: -11.04869556427002
    5. '<|end|>' → logprob: -11.04869556427002
    6. 's' → logprob: -11.42369556427002
    7. '	in' → logprob: -11.79869556427002
    8. ':
' → logprob: -12.29869556427002
    9. ',' → logprob: -12.29869556427002
    10. ')' → logprob: -12.79869556427002

Token 548: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012567223981022835
    2. 'in' → logprob: -4.387567043304443
    3. '   ' → logprob: -10.012567520141602
    4. '	in' → logprob: -12.762567520141602
    5. '<|end|>' → logprob: -13.012567520141602
    6. ':
' → logprob: -13.012567520141602
    7. ':' → logprob: -13.512567520141602
    8. ' ' → logprob: -14.137567520141602
    9. ',' → logprob: -14.512567520141602
    10. '```' → logprob: -14.512567520141602

Token 549: ' point' (ID: 2438)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.4523526728153229
    2. 'point' → logprob: -1.0773526430130005
    3. ' ends' → logprob: -4.327352523803711
    4. ' point' → logprob: -4.827352523803711
    5. 'points' → logprob: -6.202352523803711
    6. 'enumer' → logprob: -9.702352523803711
    7. '(point' → logprob: -11.327352523803711
    8. ' points' → logprob: -11.452352523803711
    9. '[(' → logprob: -11.702352523803711
    10. '[' → logprob: -11.702352523803711

Token 550: '_to' (ID: 5089)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04859191179275513
    2. ' in' → logprob: -3.5485918521881104
    3. 's' → logprob: -4.2985920906066895
    4. ':' → logprob: -7.0485920906066895
    5. 'to' → logprob: -7.0485920906066895
    6. '```' → logprob: -7.2985920906066895
    7. '_to' → logprob: -7.5485920906066895
    8. '<|end|>' → logprob: -7.6735920906066895
    9. '   ' → logprob: -7.9235920906066895
    10. '_in' → logprob: -8.173591613769531

Token 551: '_' (ID: 62)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.2457456737756729
    2. 'range' → logprob: -1.9957456588745117
    3. 'enumer' → logprob: -2.6207456588745117
    4. 'list' → logprob: -5.870745658874512
    5. 'points' → logprob: -6.745745658874512
    6. 'point' → logprob: -6.870745658874512
    7. ' enumerate' → logprob: -6.995745658874512
    8. 'append' → logprob: -6.995745658874512
    9. 'iter' → logprob: -7.495745658874512
    10. '[' → logprob: -7.870745658874512

Token 552: 'ends' (ID: 1847)
  Prédit: 'ends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.003231306094676256
    2. 'point' → logprob: -6.378231525421143
    3. 'enumer' → logprob: -7.128231525421143
    4. 'points' → logprob: -7.628231525421143
    5. 'range' → logprob: -9.128231048583984
    6. 'list' → logprob: -9.878231048583984
    7. 'iter' → logprob: -11.003231048583984
    8. 'inds' → logprob: -11.253231048583984
    9. 'nds' → logprob: -11.253231048583984
    10. 'ents' → logprob: -12.253231048583984

Token 553: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31730160117149353
    2. ':
' → logprob: -1.317301630973816
    3. '   ' → logprob: -6.1923017501831055
    4. '):
' → logprob: -6.5673017501831055
    5. '):' → logprob: -8.067301750183105
    6. '       ' → logprob: -8.817301750183105
    7. '():
' → logprob: -10.567301750183105
    8. ',' → logprob: -10.567301750183105
    9. '<|end|>' → logprob: -10.567301750183105
    10. 'for' → logprob: -11.817301750183105

Token 554: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11334802955389023
    2. '():
' → logprob: -2.2383480072021484
    3. ':' → logprob: -7.863348007202148
    4. '()' → logprob: -9.613348007202148
    5. '   ' → logprob: -10.113348007202148
    6. '():
' → logprob: -11.113348007202148
    7. ':
' → logprob: -12.238348007202148
    8. '):' → logprob: -12.488348007202148
    9. '(),' → logprob: -13.238348007202148
    10. '       ' → logprob: -13.363348007202148

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003156817110721022
    2. ' for' → logprob: -8.87531566619873
    3. '   ' → logprob: -9.00031566619873
    4. '```' → logprob: -10.25031566619873
    5. ',' → logprob: -12.00031566619873
    6. '<|end|>' → logprob: -12.25031566619873
    7. 'for' → logprob: -12.87531566619873
    8. ' if' → logprob: -13.87531566619873
    9. ':' → logprob: -15.12531566619873
    10. '<|end|>' → logprob: -15.12531566619873

Token 556: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.58534836769104
    2. 'for' → logprob: -0.83534836769104
    3. ' for' → logprob: -4.960348129272461
    4. 'if' → logprob: -6.710348129272461
    5. '   ' → logprob: -6.835348129272461
    6. ' if' → logprob: -9.835348129272461
    7. '	for' → logprob: -12.585348129272461
    8. ' ' → logprob: -12.960348129272461
    9. '           ' → logprob: -13.835348129272461
    10. '    ' → logprob: -16.21034812927246

Token 557: ' Connect' (ID: 16834)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10605919361114502
    2. '       ' → logprob: -2.3560590744018555
    3. ' for' → logprob: -5.7310590744018555
    4. 'if' → logprob: -5.9810590744018555
    5. ' if' → logprob: -10.231059074401855
    6. '   ' → logprob: -10.606059074401855
    7. 'length' → logprob: -13.731059074401855
    8. 'n' → logprob: -13.856059074401855
    9. '           ' → logprob: -13.981059074401855
    10. '	for' → logprob: -14.106059074401855

Token 558: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4748550355434418
    2. ' for' → logprob: -0.9748550653457642
    3. '       ' → logprob: -7.224854946136475
    4. '   ' → logprob: -10.599855422973633
    5. 'all' → logprob: -11.849855422973633
    6. ' all' → logprob: -12.224855422973633
    7. '```' → logprob: -12.974855422973633
    8. '           ' → logprob: -13.099855422973633
    9. '	for' → logprob: -13.474855422973633
    10. 'length' → logprob: -13.724855422973633

Token 559: ' ends' (ID: 17095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1994316279888153
    2. ' for' → logprob: -1.8244316577911377
    3. 'pairs' → logprob: -4.574431419372559
    4. 'ends' → logprob: -5.324431419372559
    5. ' pairs' → logprob: -5.574431419372559
    6. ' ends' → logprob: -7.824431419372559
    7. '   ' → logprob: -9.449431419372559
    8. 'end' → logprob: -11.824431419372559
    9. ' (' → logprob: -11.824431419372559
    10. '(' → logprob: -12.324431419372559

Token 560: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028286337852478027
    2. 'for' → logprob: -4.278286457061768
    3. '       ' → logprob: -4.403286457061768
    4. '   ' → logprob: -6.653286457061768
    5. ',' → logprob: -9.02828598022461
    6. '           ' → logprob: -9.15328598022461
    7. '```' → logprob: -9.27828598022461
    8. ' in' → logprob: -9.77828598022461
    9. '	for' → logprob: -10.90328598022461
    10. ' to' → logprob: -10.90328598022461

Token 561: ' this' (ID: 495)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0002957783581223339
    2. ' point' → logprob: -8.500295639038086
    3. 'that' → logprob: -9.750295639038086
    4. 'this' → logprob: -10.500295639038086
    5. 'the' → logprob: -12.375295639038086
    6. 'points' → logprob: -13.750295639038086
    7. ' that' → logprob: -14.375295639038086
    8. ' this' → logprob: -15.000295639038086
    9. '
' → logprob: -16.375295639038086
    10. '	point' → logprob: -16.625295639038086

Token 562: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00010103991371579468
    2. ' point' → logprob: -9.250101089477539
    3. '
' → logprob: -12.750101089477539
    4. '   ' → logprob: -14.500101089477539
    5. ' ' → logprob: -15.000101089477539
    6. '	point' → logprob: -15.250101089477539
    7. '_point' → logprob: -15.375101089477539
    8. 'points' → logprob: -15.750101089477539
    9. 'location' → logprob: -15.750101089477539
    10. '```' → logprob: -16.00010108947754

Token 563: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016350740334019065
    2. ' for' → logprob: -6.5016350746154785
    3. 'for' → logprob: -9.62663459777832
    4. ',' → logprob: -10.12663459777832
    5. '   ' → logprob: -11.50163459777832
    6. ':' → logprob: -12.00163459777832
    7. '           ' → logprob: -12.87663459777832
    8. '<|end|>' → logprob: -12.87663459777832
    9. '        
' → logprob: -13.37663459777832
    10. '
' → logprob: -13.87663459777832

Token 564: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.002249580342322588
    2. ' each' → logprob: -6.502249717712402
    3. 'all' → logprob: -7.502249717712402
    4. 'for' → logprob: -8.877249717712402
    5. 'every' → logprob: -10.627249717712402
    6. '   ' → logprob: -11.502249717712402
    7. 'one' → logprob: -11.752249717712402
    8. ' all' → logprob: -12.252249717712402
    9. '
' → logprob: -13.377249717712402
    10. '.each' → logprob: -13.502249717712402

Token 565: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10071306675672531
    2. ' other' → logprob: -2.350713014602661
    3. '   ' → logprob: -8.475712776184082
    4. 'others' → logprob: -9.600712776184082
    5. '_other' → logprob: -9.850712776184082
    6. ' ' → logprob: -10.225712776184082
    7. ' other's' → logprob: -10.225712776184082
    8. 'end' → logprob: -10.475712776184082
    9. '(other' → logprob: -11.350712776184082
    10. '    ' → logprob: -11.600712776184082

Token 566: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005425016395747662
    2. ' for' → logprob: -5.505424976348877
    3. ':' → logprob: -7.630424976348877
    4. '   ' → logprob: -7.755424976348877
    5. ',' → logprob: -8.255425453186035
    6. 'for' → logprob: -9.630425453186035
    7. '<|end|>' → logprob: -10.380425453186035
    8. ':
' → logprob: -10.505425453186035
    9. '        
' → logprob: -11.130425453186035
    10. '
' → logprob: -11.880425453186035

Token 567: 'except' (ID: 25035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10643330961465836
    2. ' for' → logprob: -2.356433391571045
    3. '       ' → logprob: -5.106433391571045
    4. ')' → logprob: -9.231432914733887
    5. '           ' → logprob: -10.106432914733887
    6. '   ' → logprob: -12.856432914733887
    7. 'n' → logprob: -13.106432914733887
    8. '	for' → logprob: -13.356432914733887
    9. ' ' → logprob: -13.606432914733887
    10. ' n' → logprob: -13.981432914733887

Token 568: ' same' (ID: 2684)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8974037170410156
    2. 'self' → logprob: -0.8974037170410156
    3. 'the' → logprob: -2.2724037170410156
    4. 'connecting' → logprob: -3.2724037170410156
    5. ' itself' → logprob: -3.5224037170410156
    6. 'for' → logprob: -4.772403717041016
    7. ' themselves' → logprob: -6.397403717041016
    8. 'when' → logprob: -6.522403717041016
    9. 'same' → logprob: -7.147403717041016
    10. ' connecting' → logprob: -8.272403717041016

Token 569: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5908498167991638
    2. 'end' → logprob: -1.4658498764038086
    3. ' street' → logprob: -1.7158498764038086
    4. ' end' → logprob: -4.465849876403809
    5. 'point' → logprob: -5.215849876403809
    6. ' for' → logprob: -6.215849876403809
    7. 'for' → logprob: -6.340849876403809
    8. 'stre' → logprob: -6.340849876403809
    9. '(st' → logprob: -6.340849876403809
    10. 's' → logprob: -6.340849876403809

Token 570: ' ends' (ID: 17095)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.60104900598526
    2. 'ends' → logprob: -1.7260489463806152
    3. '_id' → logprob: -2.6010489463806152
    4. 's' → logprob: -3.3510489463806152
    5. ' ends' → logprob: -3.3510489463806152
    6. ')
' → logprob: -3.8510489463806152
    7. '   ' → logprob: -3.8510489463806152
    8. ' or' → logprob: -3.9760489463806152
    9. '):' → logprob: -4.226048946380615
    10. 'for' → logprob: -4.726048946380615

Token 571: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.29886192083358765
    2. '):' → logprob: -1.7988619804382324
    3. ')
' → logprob: -2.7988619804382324
    4. ')' → logprob: -4.173861980438232
    5. '       ' → logprob: -4.423861980438232
    6. '   ' → logprob: -7.173861980438232
    7. 'for' → logprob: -7.423861980438232
    8. ' for' → logprob: -7.423861980438232
    9. '):
' → logprob: -7.423861980438232
    10. ',' → logprob: -7.673861980438232

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005479106330312788
    2. ' for' → logprob: -8.125548362731934
    3. 'for' → logprob: -8.500548362731934
    4. '   ' → logprob: -10.375548362731934
    5. '```' → logprob: -11.125548362731934
    6. '           ' → logprob: -13.625548362731934
    7. ',' → logprob: -14.625548362731934
    8. '        
' → logprob: -15.125548362731934
    9. '
' → logprob: -15.250548362731934
    10. '      ' → logprob: -16.625547409057617

Token 573: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008645178750157356
    2. 'for' (adapté à ' for') → logprob: -5.008645057678223
    3. ' for' → logprob: -6.258645057678223
    4. '   ' → logprob: -11.383645057678223
    5. '           ' → logprob: -13.508645057678223
    6. '```' → logprob: -13.758645057678223
    7. '	for' → logprob: -16.63364601135254
    8. '      ' → logprob: -16.88364601135254
    9. '     ' → logprob: -16.88364601135254
    10. ' ' → logprob: -18.00864601135254

Token 574: ' sid' (ID: 22831)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024378227069973946
    2. ' i' → logprob: -3.7743782997131348
    3. '(i' → logprob: -7.024378299713135
    4. '(' → logprob: -9.274377822875977
    5. ' (' → logprob: -9.774377822875977
    6. 'a' → logprob: -10.399377822875977
    7. '   ' → logprob: -11.024377822875977
    8. 'u' → logprob: -11.649377822875977
    9. 'idx' → logprob: -11.649377822875977
    10. 'j' → logprob: -11.774377822875977

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07250472903251648
    2. ',' → logprob: -2.947504758834839
    3. '_a' → logprob: -4.57250452041626
    4. '_i' → logprob: -5.69750452041626
    5. ',_' → logprob: -6.19750452041626
    6. '_' → logprob: -6.82250452041626
    7. ',s' → logprob: -8.697504997253418
    8. '_idx' → logprob: -9.072504997253418
    9. 'a' → logprob: -9.197504997253418
    10. '_,' → logprob: -9.572504997253418

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054858373478055
    2. ',s' → logprob: -5.255486011505127
    3. ',(' → logprob: -9.380485534667969
    4. ',_' → logprob: -9.880485534667969
    5. 'in' → logprob: -10.880485534667969
    6. ',
' → logprob: -11.255485534667969
    7. ',in' → logprob: -11.255485534667969
    8. ' ,' → logprob: -11.505485534667969
    9. ',n' → logprob: -11.880485534667969
    10. ' in' → logprob: -12.130485534667969

Token 577: ' end' (ID: 1268)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.061458196491003036
    2. 'end' → logprob: -3.311458110809326
    3. 'flag' → logprob: -4.061458110809326
    4. 'e' → logprob: -5.436458110809326
    5. ' ef' → logprob: -7.561458110809326
    6. 'f' → logprob: -7.686458110809326
    7. 'eid' → logprob: -7.936458110809326
    8. 'efd' → logprob: -9.811458587646484
    9. ' flag' → logprob: -10.311458587646484
    10. ' e' → logprob: -10.311458587646484

Token 578: '1' (ID: 16)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flag' → logprob: -4.008129963040119e-06
    2. '_FLAG' → logprob: -12.875003814697266
    3. 'flag' → logprob: -14.750003814697266
    4. '_flags' → logprob: -14.875003814697266
    5. '```' → logprob: -15.125003814697266
    6. 'Flag' → logprob: -16.625003814697266
    7. '_f' → logprob: -16.750003814697266
    8. '_' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.250003814697266
    10. ' _' → logprob: -17.250003814697266

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05525403097271919
    2. 'in' → logprob: -2.9302539825439453
    3. ')' → logprob: -8.180253982543945
    4. '   ' → logprob: -9.930253982543945
    5. ' ' → logprob: -11.555253982543945
    6. ',' → logprob: -12.055253982543945
    7. '
' → logprob: -12.180253982543945
    8. '_in' → logprob: -12.680253982543945
    9. '):
' → logprob: -12.805253982543945
    10. '    ' → logprob: -12.930253982543945

Token 580: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.004631976597011089
    2. ' ends' → logprob: -5.379631996154785
    3. 'points' → logprob: -11.629631996154785
    4. '   ' → logprob: -13.379631996154785
    5. 'point' → logprob: -14.879631996154785
    6. 'enumer' → logprob: -14.879631996154785
    7. ' ' → logprob: -15.754631996154785
    8. '
' → logprob: -15.879631996154785
    9. 'Ends' → logprob: -16.75463104248047
    10. ' points' → logprob: -17.00463104248047

Token 581: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5242987275123596
    2. '_flag' → logprob: -1.3992986679077148
    3. '1' → logprob: -2.149298667907715
    4. '       ' → logprob: -4.399298667907715
    5. 'flag' → logprob: -5.024298667907715
    6. '   ' → logprob: -5.274298667907715
    7. 'point' → logprob: -5.274298667907715
    8. '_point' → logprob: -6.024298667907715
    9. ':' → logprob: -6.149298667907715
    10. '         ' → logprob: -6.274298667907715

Token 582: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.059102460741996765
    2. '           ' → logprob: -3.5591025352478027
    3. ':
' → logprob: -4.184102535247803
    4. ':' → logprob: -4.809102535247803
    5. '       ' → logprob: -5.559102535247803
    6. ',' → logprob: -6.684102535247803
    7. '   ' → logprob: -9.059102058410645
    8. 'in' → logprob: -9.559102058410645
    9. '               ' → logprob: -10.059102058410645
    10. '):
' → logprob: -10.559102058410645

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.407366916188039e-05
    2. ':' → logprob: -11.250054359436035
    3. '       ' → logprob: -11.500054359436035
    4. ':
' → logprob: -11.625054359436035
    5. ' for' → logprob: -11.750054359436035
    6. '               ' → logprob: -12.750054359436035
    7. '	       ' → logprob: -12.875054359436035
    8. '		' → logprob: -13.125054359436035
    9. ',' → logprob: -13.250054359436035
    10. '          ' → logprob: -14.000054359436035

Token 584: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5781647562980652
    2. '           ' → logprob: -1.20316481590271
    3. '               ' → logprob: -2.20316481590271
    4. 'for' (adapté à ' for') → logprob: -3.57816481590271
    5. '            ' → logprob: -9.078165054321289
    6. '	for' → logprob: -9.203165054321289
    7. '		' → logprob: -9.578165054321289
    8. '	       ' → logprob: -9.578165054321289
    9. '			' → logprob: -10.703165054321289
    10. '             ' → logprob: -10.953165054321289

Token 585: ' sid' (ID: 22831)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.20141790807247162
    2. ' sid' → logprob: -1.7014179229736328
    3. '_sid' → logprob: -12.451417922973633
    4. 's' → logprob: -16.076417922973633
    5. '.sid' → logprob: -16.076417922973633
    6. '	s' → logprob: -16.326417922973633
    7. ' tid' → logprob: -16.576417922973633
    8. ' s' → logprob: -16.701417922973633
    9. ' ' → logprob: -16.826417922973633
    10. '   ' → logprob: -17.076417922973633

Token 586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ',' → logprob: -13.625000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '_,' → logprob: -17.250001907348633
    5. '1' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.500001907348633
    7. ' ,' → logprob: -19.500001907348633
    8. '
' → logprob: -19.750001907348633
    9. '_' → logprob: -20.250001907348633
    10. '0' → logprob: -20.750001907348633

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012047011114191264
    2. ',end' → logprob: -9.500120162963867
    3. ' ,' → logprob: -10.000120162963867
    4. ',
' → logprob: -16.875120162963867
    5. '           ' → logprob: -17.125120162963867
    6. '   ' → logprob: -18.500120162963867
    7. ',int' → logprob: -18.750120162963867
    8. '‌,' → logprob: -18.750120162963867
    9. '```' → logprob: -18.750120162963867
    10. ',s' → logprob: -19.125120162963867

Token 588: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020774602890015
    2. ' end' → logprob: -2.350207805633545
    3. '0' → logprob: -14.100207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '(end' → logprob: -16.225208282470703
    6. '   ' → logprob: -16.850208282470703
    7. '[end' → logprob: -17.725208282470703
    8. '
' → logprob: -17.850208282470703
    9. '	end' → logprob: -17.850208282470703
    10. '1' → logprob: -18.475208282470703

Token 589: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016873658751137555
    2. ',' → logprob: -8.875168800354004
    3. '1' → logprob: -10.875168800354004
    4. '```' → logprob: -11.875168800354004
    5. '=' → logprob: -14.375168800354004
    6. ')' → logprob: -14.750168800354004
    7. ' ' → logprob: -14.750168800354004
    8. '_,' → logprob: -15.250168800354004
    9. '   ' → logprob: -15.250168800354004
    10. '0' → logprob: -15.500168800354004

Token 590: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028335300739854574
    2. 'in' → logprob: -5.877833366394043
    3. ',' → logprob: -10.752833366394043
    4. '	in' → logprob: -12.877833366394043
    5. '           ' → logprob: -13.002833366394043
    6. '   ' → logprob: -14.502833366394043
    7. '            ' → logprob: -14.627833366394043
    8. ',in' → logprob: -15.002833366394043
    9. '    ' → logprob: -15.502833366394043
    10. ' ' → logprob: -15.502833366394043

Token 591: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.20178714394569397
    2. ' ends' → logprob: -1.7017871141433716
    3. 'point' → logprob: -8.326786994934082
    4. 'points' → logprob: -9.201786994934082
    5. ' point' → logprob: -10.701786994934082
    6. ' points' → logprob: -11.951786994934082
    7. '   ' → logprob: -14.451786994934082
    8. '[' → logprob: -15.451786994934082
    9. '       ' → logprob: -15.826786994934082
    10. '(' → logprob: -15.951786994934082

Token 592: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.246537173457909e-06
    2. 'list' → logprob: -13.375003814697266
    3. 's' → logprob: -13.875003814697266
    4. 'List' → logprob: -13.875003814697266
    5. 'point' → logprob: -15.500003814697266
    6. '_LIST' → logprob: -15.875003814697266
    7. 'points' → logprob: -16.250003814697266
    8. '_points' → logprob: -16.875003814697266
    9. '1' → logprob: -17.125003814697266
    10. '[' → logprob: -17.125003814697266

Token 593: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6889012455940247
    2. ':
' → logprob: -1.1889011859893799
    3. ':' → logprob: -2.06390118598938
    4. '<|end|>' → logprob: -4.063901424407959
    5. '	           ' → logprob: -4.438901424407959
    6. '           ' → logprob: -4.438901424407959
    7. ',' → logprob: -5.188901424407959
    8. '            ' → logprob: -5.813901424407959
    9. '		       ' → logprob: -6.563901424407959
    10. '	       ' → logprob: -6.563901424407959

Token 594: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.47626737493556e-05
    2. '	           ' → logprob: -11.50003433227539
    3. '			' → logprob: -11.50003433227539
    4. '		       ' → logprob: -11.62503433227539
    5. '			   ' → logprob: -13.87503433227539
    6. '                       ' → logprob: -14.62503433227539
    7. '                   ' → logprob: -14.62503433227539
    8. ':
' → logprob: -14.87503433227539
    9. '                               ' → logprob: -14.87503433227539
    10. '<|end|>' → logprob: -15.00003433227539

Token 595: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003845090279355645
    2. ' if' → logprob: -5.75384521484375
    3. 'if' (adapté à ' if') → logprob: -8.12884521484375
    4. '                       ' → logprob: -9.25384521484375
    5. '		           ' → logprob: -9.87884521484375
    6. '               ' → logprob: -10.00384521484375
    7. '                           ' → logprob: -10.37884521484375
    8. '                    ' → logprob: -10.75384521484375
    9. '                                           ' → logprob: -10.87884521484375
    10. '	               ' → logprob: -11.00384521484375

Token 596: ' sid' (ID: 22831)
  Prédit: ' sid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sid' → logprob: -0.02345929853618145
    2. 'sid' → logprob: -3.7734591960906982
    3. ' (' → logprob: -8.898459434509277
    4. '(s' → logprob: -9.648459434509277
    5. '(' → logprob: -11.648459434509277
    6. '_sid' → logprob: -14.023459434509277
    7. ' s' → logprob: -14.148459434509277
    8. '	s' → logprob: -14.148459434509277
    9. 's' → logprob: -14.648459434509277
    10. ' ' → logprob: -15.023459434509277

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '2' → logprob: -10.125040054321289
    3. '```' → logprob: -15.625040054321289
    4. '!=' → logprob: -17.12504005432129
    5. 'not' → logprob: -17.62504005432129
    6. '_' → logprob: -18.25004005432129
    7. '' → logprob: -18.75004005432129
    8. '#' → logprob: -18.75004005432129
    9. 's' → logprob: -19.12504005432129
    10. ' ' → logprob: -19.31254005432129

Token 598: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.575956404209137
    2. ' !=' → logprob: -0.825956404209137
    3. '()!=' → logprob: -12.200956344604492
    4. '<|end|>' → logprob: -12.450956344604492
    5. ')!=' → logprob: -12.700956344604492
    6. '```' → logprob: -13.575956344604492
    7. ']!=' → logprob: -14.075956344604492
    8. ',' → logprob: -14.700956344604492
    9. '!==' → logprob: -14.700956344604492
    10. '==' → logprob: -14.825956344604492

Token 599: ' sid' (ID: 22831)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.002805940806865692
    2. ' sid' → logprob: -5.877805709838867
    3. '_sid' → logprob: -14.377805709838867
    4. '
' → logprob: -16.252805709838867
    5. 'side' → logprob: -16.252805709838867
    6. '.sid' → logprob: -16.377805709838867
    7. '   ' → logprob: -16.502805709838867
    8. ' ' → logprob: -17.127805709838867
    9. 'Sid' → logprob: -17.252805709838867
    10. '	s' → logprob: -17.252805709838867

Token 600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. '1' → logprob: -18.0
    5. '
' → logprob: -18.125
    6. '   ' → logprob: -18.875
    7. '_' → logprob: -19.6875
    8. '``' → logprob: -20.25
    9. '-' → logprob: -20.4375
    10. 's' → logprob: -20.5

Token 601: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0010205440921708941
    2. 'and' → logprob: -7.001020431518555
    3. '                   ' → logprob: -9.626020431518555
    4. ' or' → logprob: -11.376020431518555
    5. '               ' → logprob: -11.376020431518555
    6. ':' → logprob: -11.876020431518555
    7. '                       ' → logprob: -12.251020431518555
    8. '<|end|>' → logprob: -13.251020431518555
    9. ':
' → logprob: -13.376020431518555
    10. ',' → logprob: -13.626020431518555

Token 602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11336909979581833
    2. ' and' → logprob: -2.2383689880371094
    3. '                       ' → logprob: -8.48836898803711
    4. ' if' → logprob: -9.48836898803711
    5. 'and' → logprob: -9.61336898803711
    6. ',' → logprob: -9.61336898803711
    7. '                    ' → logprob: -9.98836898803711
    8. '                    
' → logprob: -10.86336898803711
    9. '<|end|>' → logprob: -10.98836898803711
    10. '                           ' → logprob: -11.86336898803711

Token 603: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' (adapté à ' connections') → logprob: -0.020269865170121193
    2. ' connections' → logprob: -4.520269870758057
    3. '                       ' → logprob: -4.770269870758057
    4. '                   ' → logprob: -7.645269870758057
    5. '   ' → logprob: -9.395269393920898
    6. '                           ' → logprob: -9.645269393920898
    7. '                               ' → logprob: -10.020269393920898
    8. '               ' → logprob: -11.395269393920898
    9. '       ' → logprob: -12.645269393920898
    10. '           ' → logprob: -12.770269393920898

Token 604: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0009124171338044107
    2. '[s' → logprob: -7.000912189483643
    3. '[' → logprob: -14.5009126663208
    4. '[((' → logprob: -16.000911712646484
    5. ' [(' → logprob: -16.250911712646484
    6. '(s' → logprob: -17.000911712646484
    7. '   ' → logprob: -17.000911712646484
    8. '```' → logprob: -17.000911712646484
    9. '[
' → logprob: -18.750911712646484
    10. '[[' → logprob: -19.500911712646484

Token 605: 'sid' (ID: 38734)
  Prédit: 'sid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -7.3458322731312364e-06
    2. ' sid' → logprob: -11.875007629394531
    3. '(s' → logprob: -16.12500762939453
    4. 'side' → logprob: -16.25000762939453
    5. '.sid' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.12500762939453
    7. '_sid' → logprob: -18.25000762939453
    8. 's' → logprob: -18.50000762939453
    9. 'Sid' → logprob: -19.62500762939453
    10. '
' → logprob: -19.75000762939453

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ',' → logprob: -15.500000953674316
    3. 's' → logprob: -16.25
    4. 'sid' → logprob: -16.625
    5. '```' → logprob: -17.125
    6. '2' → logprob: -17.125
    7. '
' → logprob: -17.75
    8. ' ' → logprob: -18.0
    9. ')' → logprob: -18.875
    10. '[' → logprob: -19.0625

Token 607: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008309515542350709
    2. ',end' → logprob: -7.250831127166748
    3. ' ,' → logprob: -9.12583065032959
    4. '<|end|>' → logprob: -12.75083065032959
    5. ',
' → logprob: -13.62583065032959
    6. '‌,' → logprob: -13.75083065032959
    7. '),' → logprob: -14.00083065032959
    8. ',next' → logprob: -14.25083065032959
    9. ',user' → logprob: -14.37583065032959
    10. '),(' → logprob: -14.50083065032959

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -15.125001907348633
    3. ')' → logprob: -15.250001907348633
    4. ' ' → logprob: -15.375001907348633
    5. '```' → logprob: -15.375001907348633
    6. '[' → logprob: -15.625001907348633
    7. '_' → logprob: -15.750001907348633
    8. ')]' → logprob: -15.875001907348633
    9. '   ' → logprob: -16.250001907348633
    10. ',' → logprob: -16.250001907348633

Token 609: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -5.1689596148207784e-05
    2. ' )' → logprob: -11.000051498413086
    3. ')]' → logprob: -11.000051498413086
    4. ']].' → logprob: -12.250051498413086
    5. ')][' → logprob: -12.250051498413086
    6. '].' → logprob: -12.375051498413086
    7. '           ' → logprob: -13.500051498413086
    8. '       ' → logprob: -14.125051498413086
    9. '                   ' → logprob: -14.625051498413086
    10. ')' → logprob: -14.750051498413086

Token 610: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -17.5
    4. '_append' → logprob: -20.5
    5. 'appen' → logprob: -21.25
    6. '	append' → logprob: -21.625
    7. 'Append' → logprob: -22.25
    8. 'app' → logprob: -22.875
    9. 'add' → logprob: -23.125
    10. 'extend' → logprob: -23.375

Token 611: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.012998571619391441
    2. '((' → logprob: -4.512998580932617
    3. ' (' → logprob: -6.262998580932617
    4. '(' → logprob: -10.137998580932617
    5. '(si' → logprob: -13.262998580932617
    6. '(S' → logprob: -14.387998580932617
    7. ' ((' → logprob: -15.512998580932617
    8. '   ' → logprob: -15.637998580932617
    9. '(st' → logprob: -15.762998580932617
    10. '(fid' → logprob: -16.012998580932617

Token 612: 'sid' (ID: 38734)
  Prédit: 'sid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.00014025058771949261
    2. ' sid' → logprob: -8.875140190124512
    3. '(s' → logprob: -15.750140190124512
    4. '   ' → logprob: -16.000141143798828
    5. 'side' → logprob: -16.750141143798828
    6. '_sid' → logprob: -17.250141143798828
    7. '	s' → logprob: -17.625141143798828
    8. ' ' → logprob: -17.750141143798828
    9. '
' → logprob: -17.875141143798828
    10. 'Sid' → logprob: -18.125141143798828

Token 613: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. '(' → logprob: -15.750000953674316
    4. '```' → logprob: -17.25
    5. 's' → logprob: -17.375
    6. '
' → logprob: -17.375
    7. '   ' → logprob: -18.0
    8. '₂' → logprob: -18.0
    9. '(s' → logprob: -18.125
    10. '[' → logprob: -19.375

Token 614: ',end' (ID: 93014)
  Prédit: ',end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.014165864326059818
    2. ',' → logprob: -4.264165878295898
    3. ',
' → logprob: -13.514165878295898
    4. ' ,' → logprob: -14.639165878295898
    5. '[end' → logprob: -15.889165878295898
    6. ',new' → logprob: -16.7641658782959
    7. ',e' → logprob: -17.1391658782959
    8. ',next' → logprob: -17.3891658782959
    9. '   ' → logprob: -17.5141658782959
    10. 'end' → logprob: -17.6391658782959

Token 615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21951201558113098
    2. '1' → logprob: -1.8445119857788086
    3. '0' → logprob: -3.3445119857788086
    4. '(' → logprob: -6.594511985778809
    5. '_flag' → logprob: -6.594511985778809
    6. ')' → logprob: -8.094511985778809
    7. ' ' → logprob: -8.719511985778809
    8. ',' → logprob: -9.219511985778809
    9. '[' → logprob: -9.469511985778809
    10. 'flag' → logprob: -9.719511985778809

Token 616: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017720005416776985
    2. ')' → logprob: -9.250177383422852
    3. '))
' → logprob: -9.500177383422852
    4. '                   ' → logprob: -12.875177383422852
    5. ' ))' → logprob: -13.625177383422852
    6. '           ' → logprob: -14.125177383422852
    7. '               ' → logprob: -14.250177383422852
    8. ')))' → logprob: -14.875177383422852
    9. '       ' → logprob: -15.250177383422852
    10. '   ' → logprob: -15.625177383422852

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150283992290497
    2. 'for' → logprob: -2.190028429031372
    3. '#' → logprob: -3.065028429031372
    4. '<|end|>' → logprob: -3.190028429031372
    5. ')' → logprob: -3.565028429031372
    6. '```' → logprob: -3.815028429031372
    7. 'def' → logprob: -4.815028190612793
    8. '
' → logprob: -5.315028190612793
    9. ' for' → logprob: -6.440028190612793
    10. '    
' → logprob: -6.690028190612793

Token 618: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47278091311454773
    2. '   ' → logprob: -1.9727809429168701
    3. 'for' → logprob: -2.22278094291687
    4. '#' (adapté à ' #') → logprob: -2.97278094291687
    5. 'from' → logprob: -3.09778094291687
    6. 'deque' → logprob: -5.222780704498291
    7. 'distance' → logprob: -5.347780704498291
    8. '
' → logprob: -5.722780704498291
    9. 'while' → logprob: -5.722780704498291
    10. 'visited' → logprob: -5.847780704498291

Token 619: ' Determine' (ID: 57076)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7657625675201416
    2. 'start' → logprob: -1.2657625675201416
    3. 'pos' → logprob: -1.8907625675201416
    4. '   ' → logprob: -3.0157625675201416
    5. 'def' → logprob: -3.7657625675201416
    6. 'current' → logprob: -4.6407623291015625
    7. 'x' → logprob: -5.0157623291015625
    8. 'position' → logprob: -5.1407623291015625
    9. 'initial' → logprob: -6.5157623291015625
    10. 'car' → logprob: -6.5157623291015625

Token 620: ' which' (ID: 1118)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9185165762901306
    2. 'start' → logprob: -1.1685166358947754
    3. 'car' → logprob: -2.2935166358947754
    4. '#' → logprob: -2.7935166358947754
    5. 'starting' → logprob: -2.7935166358947754
    6. 'the' → logprob: -3.4185166358947754
    7. 'current' → logprob: -3.6685166358947754
    8. 'position' → logprob: -6.418516635894775
    9. 'closest' → logprob: -6.418516635894775
    10. 'where' → logprob: -6.543516635894775

Token 621: ' streets' (ID: 25360)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.006545551586896181
    2. '(st' → logprob: -6.006545543670654
    3. 'start' → logprob: -6.006545543670654
    4. ' street' → logprob: -7.256545543670654
    5. 'stre' → logprob: -8.631546020507812
    6. '#' → logprob: -8.756546020507812
    7. '(' → logprob: -8.881546020507812
    8. '(s' → logprob: -9.006546020507812
    9. 'st' → logprob: -9.756546020507812
    10. 'starting' → logprob: -10.006546020507812

Token 622: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.11191969364881516
    2. ' the' → logprob: -2.611919641494751
    3. 'contain' → logprob: -4.11191987991333
    4. 'and' → logprob: -5.48691987991333
    5. 'inter' → logprob: -5.61191987991333
    6. 'pass' → logprob: -5.86191987991333
    7. 'start' → logprob: -6.61191987991333
    8. 'are' → logprob: -7.23691987991333
    9. 'contains' → logprob: -7.48691987991333
    10. 'can' → logprob: -7.86191987991333

Token 623: ' initial' (ID: 4871)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.006542592775076628
    2. ' car' → logprob: -6.006542682647705
    3. 'initial' → logprob: -6.006542682647705
    4. 'starting' → logprob: -7.256542682647705
    5. 'start' → logprob: -7.631542682647705
    6. 'x' → logprob: -9.256542205810547
    7. 'user' → logprob: -9.881542205810547
    8. 'vehicle' → logprob: -10.006542205810547
    9. 'position' → logprob: -10.131542205810547
    10. 'point' → logprob: -10.256542205810547

Token 624: ' point' (ID: 2438)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.027295956388115883
    2. ' position' → logprob: -3.9022960662841797
    3. '_position' → logprob: -5.77729606628418
    4. 'car' → logprob: -6.02729606628418
    5. 'pos' → logprob: -7.40229606628418
    6. 'location' → logprob: -8.27729606628418
    7. '_car' → logprob: -9.40229606628418
    8. ' (' → logprob: -10.02729606628418
    9. '_pos' → logprob: -10.40229606628418
    10. ' car' → logprob: -10.52729606628418

Token 625: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1417452096939087
    2. ' is' → logprob: -2.266745090484619
    3. '(x' → logprob: -4.891745090484619
    4. 'lies' → logprob: -5.266745090484619
    5. 'belongs' → logprob: -5.391745090484619
    6. '(' → logprob: -5.766745090484619
    7. ' (' → logprob: -6.016745090484619
    8. ' lies' → logprob: -6.141745090484619
    9. 'could' → logprob: -7.141745090484619
    10. 'might' → logprob: -7.516745090484619

Token 626: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07039740681648254
    2. '(x' → logprob: -3.07039737701416
    3. ' (' → logprob: -4.94539737701416
    4. ')' → logprob: -4.94539737701416
    5. '(' → logprob: -6.32039737701416
    6. '#' → logprob: -6.32039737701416
    7. ''x' → logprob: -6.82039737701416
    8. '0' → logprob: -7.32039737701416
    9. ' x' → logprob: -7.57039737701416
    10. 'None' → logprob: -7.69539737701416

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030066570616327226
    2. ',' → logprob: -8.375300407409668
    3. ',y' → logprob: -9.875300407409668
    4. '_' → logprob: -11.375300407409668
    5. '```' → logprob: -12.375300407409668
    6. '_,' → logprob: -13.375300407409668
    7. ')' → logprob: -14.375300407409668
    8. 'y' → logprob: -14.500300407409668
    9. '),' → logprob: -16.625301361083984
    10. '   ' → logprob: -17.000301361083984

Token 628: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2519412040710449
    2. ',y' → logprob: -1.501941204071045
    3. ' ,' → logprob: -11.626941680908203
    4. '0' → logprob: -13.626941680908203
    5. 'y' → logprob: -14.126941680908203
    6. ',x' → logprob: -14.626941680908203
    7. ')' → logprob: -14.626941680908203
    8. ',Y' → logprob: -16.251941680908203
    9. '```' → logprob: -16.251941680908203
    10. '_,' → logprob: -16.626941680908203

Token 629: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06198034808039665
    2. ')' → logprob: -2.8119802474975586
    3. '```' → logprob: -12.436980247497559
    4. '_)' → logprob: -12.811980247497559
    5. '`)' → logprob: -13.686980247497559
    6. ',' → logprob: -13.686980247497559
    7. '``' → logprob: -14.061980247497559
    8. '_' → logprob: -14.186980247497559
    9. 'of' → logprob: -14.436980247497559
    10. '
' → logprob: -14.936980247497559

Token 630: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.370294846012257e-05
    2. ')is' → logprob: -11.375043869018555
    3. 'is' → logprob: -11.625043869018555
    4. ')
' → logprob: -11.750043869018555
    5. ',' → logprob: -12.250043869018555
    6. '),' → logprob: -13.000043869018555
    7. ' )' → logprob: -13.875043869018555
    8. '   ' → logprob: -13.875043869018555
    9. 'belongs' → logprob: -14.250043869018555
    10. ')`' → logprob: -14.500043869018555

Token 631: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5159229040145874
    2. 'lies' → logprob: -1.1409229040145874
    3. ' is' → logprob: -3.015923023223877
    4. ' lies' → logprob: -4.015923023223877
    5. 'belongs' → logprob: -4.515923023223877
    6. '#' → logprob: -5.890923023223877
    7. 'can' → logprob: -7.515923023223877
    8. 'on' → logprob: -7.640923023223877
    9. 'might' → logprob: -7.890923023223877
    10. 'could' → logprob: -8.140922546386719

Token 632: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0024208449758589268
    2. ' on' → logprob: -6.627420902252197
    3. 'located' → logprob: -7.502420902252197
    4. 'in' → logprob: -7.752420902252197
    5. '_on' → logprob: -10.252420425415039
    6. '```' → logprob: -11.127420425415039
    7. '
' → logprob: -11.877420425415039
    8. 'for' → logprob: -11.877420425415039
    9. 's' → logprob: -12.127420425415039
    10. '#' → logprob: -12.127420425415039

Token 633: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.038487195968628
    2. 'on' → logprob: -1.163487195968628
    3. 'found' → logprob: -2.038487195968628
    4. 'initial' → logprob: -2.038487195968628
    5. 'possible' → logprob: -3.288487195968628
    6. 'stre' → logprob: -4.663487434387207
    7. 'def' → logprob: -4.788487434387207
    8. 'pos' → logprob: -5.538487434387207
    9. 'candidate' → logprob: -5.913487434387207
    10. '   ' → logprob: -6.163487434387207

Token 634: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7629459500312805
    2. 'on' → logprob: -2.0129458904266357
    3. 'found' → logprob: -2.2629458904266357
    4. 'possible' → logprob: -2.2629458904266357
    5. 'initial' → logprob: -2.3879458904266357
    6. 'start' → logprob: -3.1379458904266357
    7. ' for' → logprob: -4.137946128845215
    8. '   ' → logprob: -4.137946128845215
    9. 'current' → logprob: -4.887946128845215
    10. 'pos' → logprob: -4.887946128845215

Token 635: ' #' (ID: 1069)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.44119977951049805
    2. 'on' → logprob: -1.191199779510498
    3. 'possible' → logprob: -3.316199779510498
    4. 'start' → logprob: -4.941199779510498
    5. 'stre' → logprob: -5.941199779510498
    6. 'init' → logprob: -6.316199779510498
    7. '   ' → logprob: -6.441199779510498
    8. 'candidate' → logprob: -6.441199779510498
    9. 'starting' → logprob: -7.066199779510498
    10. 'def' → logprob: -8.191200256347656

Token 636: ' and' (ID: 326)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.36860284209251404
    2. 'on' → logprob: -1.3686028718948364
    3. 'start' → logprob: -3.743602752685547
    4. 'possible' → logprob: -3.743602752685547
    5. 'starting' → logprob: -6.368602752685547
    6. 'for' → logprob: -6.618602752685547
    7. 'init' → logprob: -6.993602752685547
    8. 'def' → logprob: -7.493602752685547
    9. 'candidate' → logprob: -7.493602752685547
    10. '   ' → logprob: -7.618602752685547

Token 637: ' possible' (ID: 4149)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.27363121509552
    2. 'pos' → logprob: -1.39863121509552
    3. 'position' → logprob: -2.2736310958862305
    4. 'possible' → logprob: -2.2736310958862305
    5. ' initial' → logprob: -2.6486310958862305
    6. '#' → logprob: -3.3986310958862305
    7. 'found' → logprob: -3.6486310958862305
    8. 'distance' → logprob: -3.8986310958862305
    9. '   ' → logprob: -4.2736310958862305
    10. 'find' → logprob: -4.3986310958862305

Token 638: ' directions' (ID: 24921)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.23759345710277557
    2. 'starts' → logprob: -2.612593412399292
    3. 'start' → logprob: -2.987593412399292
    4. 'starting' → logprob: -3.237593412399292
    5. 'initial' → logprob: -3.487593412399292
    6. 'stre' → logprob: -5.487593650817871
    7. '_st' → logprob: -5.737593650817871
    8. '_positions' → logprob: -5.862593650817871
    9. 'st' → logprob: -6.737593650817871
    10. '#' → logprob: -6.987593650817871

Token 639: ' at' (ID: 540)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6004219651222229
    2. 'on' → logprob: -1.1004219055175781
    3. 'possible' → logprob: -2.850421905517578
    4. 'start' → logprob: -3.600421905517578
    5. '   ' → logprob: -4.225421905517578
    6. 'pos' → logprob: -5.350421905517578
    7. ' on' → logprob: -5.725421905517578
    8. ' initial' → logprob: -5.975421905517578
    9. 'init' → logprob: -6.225421905517578
    10. 'def' → logprob: -6.350421905517578

Token 640: ' time' (ID: 1058)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.982233464717865
    2. 'that' → logprob: -1.4822335243225098
    3. 'start' → logprob: -1.8572335243225098
    4. '0' → logprob: -2.3572335243225098
    5. 'the' → logprob: -2.7322335243225098
    6. 'x' → logprob: -3.1072335243225098
    7. ' that' → logprob: -5.23223352432251
    8. 'this' → logprob: -5.23223352432251
    9. 'each' → logprob: -5.35723352432251
    10. '=' → logprob: -5.73223352432251

Token 641: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25833818316459656
    2. ' for' → logprob: -2.633338212966919
    3. '   ' → logprob: -2.883338212966919
    4. '#' → logprob: -3.258338212966919
    5. 'on' → logprob: -4.38333797454834
    6. 'pos' → logprob: -4.50833797454834
    7. '0' → logprob: -4.75833797454834
    8. 'visited' → logprob: -5.13333797454834
    9. 'possible' → logprob: -5.25833797454834
    10. 'initial' → logprob: -6.38333797454834

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0116248968988657
    2. '=' → logprob: -4.636624813079834
    3. 't' → logprob: -6.386624813079834
    4. '_' → logprob: -10.261625289916992
    5. ' =' → logprob: -10.261625289916992
    6. ' ' → logprob: -10.386625289916992
    7. '   ' → logprob: -11.261625289916992
    8. '_=' → logprob: -11.261625289916992
    9. 'i' → logprob: -11.386625289916992
    10. 'initial' → logprob: -12.011625289916992

Token 643: '
' (ID: 198)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.7865298390388489
    2. 'on' → logprob: -1.286529779434204
    3. 'start' → logprob: -1.786529779434204
    4. 'possible' → logprob: -2.411529779434204
    5. 'starting' → logprob: -5.786530017852783
    6. '   ' → logprob: -6.036530017852783
    7. 'pos' → logprob: -6.286530017852783
    8. 'positions' → logprob: -6.661530017852783
    9. 'init' → logprob: -7.661530017852783
    10. 'starts' → logprob: -7.786530017852783

Token 644: '   ' (ID: 271)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.4549475312232971
    2. 'on' → logprob: -1.7049474716186523
    3. 'possible' → logprob: -1.9549474716186523
    4. 'start' → logprob: -3.5799474716186523
    5. '   ' → logprob: -4.954947471618652
    6. 'for' → logprob: -5.704947471618652
    7. 'starting' → logprob: -6.704947471618652
    8. 'init' → logprob: -7.454947471618652
    9. 'candidate' → logprob: -7.579947471618652
    10. 'pos' → logprob: -8.079947471618652

Token 645: ' start' (ID: 1604)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.7683534622192383
    2. 'on' → logprob: -1.0183534622192383
    3. 'possible' → logprob: -2.2683534622192383
    4. 'start' (adapté à ' start') → logprob: -2.7683534622192383
    5. 'starting' → logprob: -5.518353462219238
    6. '   ' → logprob: -6.768353462219238
    7. 'candidate' → logprob: -6.893353462219238
    8. 'pos' → logprob: -7.518353462219238
    9. 'def' → logprob: -7.518353462219238
    10. 'for' → logprob: -7.643353462219238

Token 646: '_states' (ID: 53795)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.005773192271590233
    2. '_positions' → logprob: -5.630773067474365
    3. '_on' → logprob: -7.005773067474365
    4. '_pos' → logprob: -7.130773067474365
    5. '_points' → logprob: -8.255773544311523
    6. '_' → logprob: -10.005773544311523
    7. '_candidates' → logprob: -10.380773544311523
    8. '_position' → logprob: -10.880773544311523
    9. '_point' → logprob: -11.005773544311523
    10. '_edges' → logprob: -11.005773544311523

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197552755475044
    2. '=' → logprob: -2.8119754791259766
    3. '=[]' → logprob: -11.811975479125977
    4. ',' → logprob: -15.436975479125977
    5. ':' → logprob: -16.311975479125977
    6. ' ' → logprob: -16.811975479125977
    7. ')' → logprob: -17.061975479125977
    8. '[]' → logprob: -17.436975479125977
    9. ' =[' → logprob: -17.436975479125977
    10. '=[]
' → logprob: -17.936975479125977

Token 648: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00019543453527148813
    2. '[]
' → logprob: -8.750195503234863
    3. ' []' → logprob: -10.500195503234863
    4. 'set' → logprob: -11.875195503234863
    5. '[]

' → logprob: -13.500195503234863
    6. 'deque' → logprob: -14.000195503234863
    7. '[]}' → logprob: -15.500195503234863
    8. '{}' → logprob: -17.250194549560547
    9. '[])' → logprob: -17.375194549560547
    10. 'default' → logprob: -17.500194549560547

Token 649: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22183598577976227
    2. '   ' → logprob: -1.971835970878601
    3. ' for' → logprob: -2.8468360900878906
    4. '
' → logprob: -6.471836090087891
    5. '    
' → logprob: -9.22183609008789
    6. '```' → logprob: -10.47183609008789
    7. '#' → logprob: -11.09683609008789
    8. '  
' → logprob: -11.59683609008789
    9. 'def' → logprob: -11.72183609008789
    10. ':' → logprob: -12.72183609008789

Token 650: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.869017852295656e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' for' → logprob: -14.500006675720215
    4. 'def' → logprob: -15.625006675720215
    5. '```' → logprob: -18.37500762939453
    6. 'found' → logprob: -18.75000762939453
    7. '
' → logprob: -20.37500762939453
    8. '#' → logprob: -20.37500762939453
    9. '``' → logprob: -20.62500762939453
    10. '	for' → logprob: -21.12500762939453

Token 651: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003027148311957717
    2. ' i' → logprob: -6.253026962280273
    3. 's' → logprob: -7.878026962280273
    4. 'sid' → logprob: -8.003026962280273
    5. 'idx' → logprob: -8.128026962280273
    6. 'street' → logprob: -9.753026962280273
    7. ' idx' → logprob: -11.503026962280273
    8. ' sid' → logprob: -12.378026962280273
    9. '```' → logprob: -12.878026962280273
    10. '(i' → logprob: -13.003026962280273

Token 652: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1833758354187012
    2. ' in' → logprob: -1.1833758354187012
    3. '_idx' → logprob: -2.183375835418701
    4. '_id' → logprob: -2.308375835418701
    5. 'id' → logprob: -2.433375835418701
    6. 'i' → logprob: -3.558375835418701
    7. '_index' → logprob: -4.058375835418701
    8. 't' → logprob: -4.433375835418701
    9. 'idx' → logprob: -4.558375835418701
    10. ',' → logprob: -4.558375835418701

Token 653: ' street' (ID: 12901)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1275406926870346
    2. 'street' → logprob: -2.1275405883789062
    3. 'stre' → logprob: -8.252540588378906
    4. 'enumer' → logprob: -8.627540588378906
    5. ' range' → logprob: -9.127540588378906
    6. '[' → logprob: -11.127540588378906
    7. 're' → logprob: -12.002540588378906
    8. ' street' → logprob: -12.252540588378906
    9. '```' → logprob: -12.502540588378906
    10. 'st' → logprob: -12.627540588378906

Token 654: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00023321842309087515
    2. 'data' → logprob: -8.75023365020752
    3. 'in' → logprob: -9.75023365020752
    4. 's' → logprob: -11.87523365020752
    5. ' in' → logprob: -12.62523365020752
    6. '_id' → logprob: -13.75023365020752
    7. '_' → logprob: -14.12523365020752
    8. '   ' → logprob: -14.37523365020752
    9. 't' → logprob: -14.62523365020752
    10. ',' → logprob: -14.75023365020752

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6850262880325317
    2. ':
' → logprob: -1.4350262880325317
    3. '   ' → logprob: -1.8100262880325317
    4. '       ' → logprob: -2.560026168823242
    5. ' if' → logprob: -5.060026168823242
    6. ',' → logprob: -5.685026168823242
    7. '):
' → logprob: -6.310026168823242
    8. ' in' → logprob: -6.560026168823242
    9. 's' → logprob: -6.810026168823242
    10. 'if' → logprob: -7.435026168823242

Token 656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001274877111427486
    2. ' if' → logprob: -7.001275062561035
    3. ',' → logprob: -9.126275062561035
    4. 'x' → logprob: -9.626275062561035
    5. 'if' → logprob: -9.626275062561035
    6. '```' → logprob: -9.876275062561035
    7. ' x' → logprob: -11.251275062561035
    8. '(x' → logprob: -11.501275062561035
    9. '#' → logprob: -11.751275062561035
    10. '   ' → logprob: -11.751275062561035

Token 657: ' x' (ID: 1215)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.17853914201259613
    2. 'x' (adapté à ' x') → logprob: -2.4285390377044678
    3. '(xs' → logprob: -3.4285390377044678
    4. '(x' → logprob: -3.5535390377044678
    5. 'sx' → logprob: -4.553539276123047
    6. 'if' → logprob: -6.303539276123047
    7. '   ' → logprob: -6.928539276123047
    8. '(s' → logprob: -8.428539276123047
    9. ' xs' → logprob: -8.803539276123047
    10. '       ' → logprob: -9.178539276123047

Token 658: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27143698930740356
    2. '0' → logprob: -1.5214369297027588
    3. ',' → logprob: -4.021437168121338
    4. ',y' → logprob: -7.646437168121338
    5. 'start' → logprob: -8.27143669128418
    6. '=' → logprob: -8.27143669128418
    7. ',s' → logprob: -8.52143669128418
    8. '_s' → logprob: -9.64643669128418
    9. ' =' → logprob: -9.89643669128418
    10. '_start' → logprob: -10.39643669128418

Token 659: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13087588548660278
    2. ',y' → logprob: -2.255875825881958
    3. '=' → logprob: -4.380876064300537
    4. ' =' → logprob: -6.005876064300537
    5. 's' → logprob: -6.505876064300537
    6. ',x' → logprob: -7.255876064300537
    7. ' ,' → logprob: -8.005875587463379
    8. '==' → logprob: -8.880875587463379
    9. ',s' → logprob: -9.630875587463379
    10. 'y' → logprob: -10.005875587463379

Token 660: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1221139430999756
    2. '0' → logprob: -1.2471139430999756
    3. 's' → logprob: -1.4971139430999756
    4. ' =' → logprob: -2.6221139430999756
    5. '=' → logprob: -2.8721139430999756
    6. '1' → logprob: -4.372114181518555
    7. ',s' → logprob: -4.497114181518555
    8. '=s' → logprob: -4.747114181518555
    9. ' s' → logprob: -8.122114181518555
    10. ',x' → logprob: -8.747114181518555

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46394768357276917
    2. ',' → logprob: -1.4639476537704468
    3. ' =' → logprob: -2.0889477729797363
    4. ',x' → logprob: -4.213947772979736
    5. '=x' → logprob: -6.838947772979736
    6. '       ' → logprob: -10.088947296142578
    7. 'x' → logprob: -10.338947296142578
    8. '=line' → logprob: -10.838947296142578
    9. 's' → logprob: -11.088947296142578
    10. ',s' → logprob: -11.213947296142578

Token 662: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00103352265432477
    2. ' s' → logprob: -6.876033306121826
    3. '   ' → logprob: -14.376033782958984
    4. '(s' → logprob: -16.376033782958984
    5. '	s' → logprob: -17.251033782958984
    6. '_s' → logprob: -17.251033782958984
    7. '<s' → logprob: -17.626033782958984
    8. '*s' → logprob: -18.251033782958984
    9. '{s' → logprob: -18.376033782958984
    10. '`s' → logprob: -18.501033782958984

Token 663: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -4.167648876318708e-05
    2. 'start' → logprob: -11.000041961669922
    3. ''s' → logprob: -11.875041961669922
    4. '["' → logprob: -12.250041961669922
    5. '[start' → logprob: -12.250041961669922
    6. '[' → logprob: -13.125041961669922
    7. ''' → logprob: -13.375041961669922
    8. '
' → logprob: -14.000041961669922
    9. 's' → logprob: -14.500041961669922
    10. '{'' → logprob: -14.625041961669922

Token 664: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0072863162495195866
    2. ''' → logprob: -5.007286548614502
    3. ''s' → logprob: -7.507286548614502
    4. '['' → logprob: -10.882286071777344
    5. '[start' → logprob: -14.507286071777344
    6. ' start' → logprob: -14.632286071777344
    7. ''end' → logprob: -14.882286071777344
    8. ' '' → logprob: -15.007286071777344
    9. '{'' → logprob: -15.132286071777344
    10. '
' → logprob: -15.257286071777344

Token 665: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6885068416595459
    2. '']
' → logprob: -1.438506841659546
    3. ']' → logprob: -1.938506841659546
    4. '']' → logprob: -2.188506841659546
    5. ''],' → logprob: -6.438507080078125
    6. '       ' → logprob: -6.563507080078125
    7. '],' → logprob: -7.438507080078125
    8. '   ' → logprob: -8.438507080078125
    9. '[' → logprob: -9.063507080078125
    10. ' ]
' → logprob: -9.813507080078125

Token 666: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7473499774932861
    2. '       ' → logprob: -1.3723499774932861
    3. ',' → logprob: -2.122349977493286
    4. ' x' → logprob: -2.122349977493286
    5. ',x' → logprob: -3.497349977493286
    6. ' if' → logprob: -6.372349739074707
    7. 'if' → logprob: -7.622349739074707
    8. '   ' → logprob: -9.122349739074707
    9. ',
' → logprob: -9.497349739074707
    10. 'for' → logprob: -9.747349739074707

Token 667: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.2020991056924686e-05
    2. 'y' → logprob: -10.500032424926758
    3. '       ' → logprob: -13.000032424926758
    4. '   ' → logprob: -13.625032424926758
    5. 'if' → logprob: -15.125032424926758
    6. ' x' → logprob: -16.000032424926758
    7. '           ' → logprob: -16.250032424926758
    8. 's' → logprob: -16.375032424926758
    9. 'dx' → logprob: -16.625032424926758
    10. 'xs' → logprob: -17.000032424926758

Token 668: '2' (ID: 17)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.6441845893859863
    2. '0' → logprob: -1.3941845893859863
    3. ',' → logprob: -1.5191845893859863
    4. '=' → logprob: -6.144184589385986
    5. '<|end|>' → logprob: -6.269184589385986
    6. 'y' → logprob: -6.394184589385986
    7. ' =' → logprob: -7.144184589385986
    8. '1' → logprob: -8.644184112548828
    9. 's' → logprob: -8.644184112548828
    10. ',user' → logprob: -8.769184112548828

Token 669: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.12696266174316406
    2. ',' → logprob: -2.126962661743164
    3. ' ,' → logprob: -10.376962661743164
    4. '=' → logprob: -13.626962661743164
    5. 'y' → logprob: -13.876962661743164
    6. ',s' → logprob: -15.251962661743164
    7. '1' → logprob: -15.501962661743164
    8. 's' → logprob: -15.751962661743164
    9. '```' → logprob: -15.751962661743164
    10. ',
' → logprob: -16.001962661743164

Token 670: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165041036903858
    2. '2' → logprob: -4.264164924621582
    3. 'y' → logprob: -14.514164924621582
    4. '=' → logprob: -15.389164924621582
    5. '```' → logprob: -15.639164924621582
    6. ' ' → logprob: -15.764164924621582
    7. '
' → logprob: -16.0141658782959
    8. 's' → logprob: -16.2641658782959
    9. '<|end|>' → logprob: -16.3891658782959
    10. 'x' → logprob: -16.3891658782959

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958765983581543
    2. ' =' → logprob: -0.6958765983581543
    3. ',' → logprob: -6.070876598358154
    4. '=x' → logprob: -8.445877075195312
    5. '=s' → logprob: -9.445877075195312
    6. ',x' → logprob: -10.070877075195312
    7. '       ' → logprob: -10.320877075195312
    8. '=user' → logprob: -11.695877075195312
    9. '=
' → logprob: -11.820877075195312
    10. '   ' → logprob: -12.195877075195312

Token 672: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16026495397090912
    2. ' s' → logprob: -1.9102649688720703
    3. '(s' → logprob: -10.91026496887207
    4. 'x' → logprob: -11.78526496887207
    5. '   ' → logprob: -12.41026496887207
    6. '0' → logprob: -13.03526496887207
    7. ' x' → logprob: -13.66026496887207
    8. ' ' → logprob: -14.16026496887207
    9. ' =' → logprob: -14.53526496887207
    10. '_s' → logprob: -14.66026496887207

Token 673: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.27633875608444214
    2. '[' → logprob: -2.651338815689087
    3. '0' → logprob: -3.151338815689087
    4. 's' → logprob: -3.526338815689087
    5. ''s' → logprob: -3.651338815689087
    6. ' s' → logprob: -4.026338577270508
    7. ' =' → logprob: -4.526338577270508
    8. ',' → logprob: -5.026338577270508
    9. '1' → logprob: -5.026338577270508
    10. 'def' → logprob: -5.276338577270508

Token 674: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07943826913833618
    2. 'start' → logprob: -2.7044382095336914
    3. ''end' → logprob: -5.829438209533691
    4. 's' → logprob: -5.954438209533691
    5. '1' → logprob: -6.454438209533691
    6. '['' → logprob: -6.829438209533691
    7. ''s' → logprob: -7.079438209533691
    8. ''' → logprob: -9.079438209533691
    9. '[end' → logprob: -9.579438209533691
    10. '0' → logprob: -9.579438209533691

Token 675: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.33938100934028625
    2. ']' → logprob: -1.5893809795379639
    3. '']
' → logprob: -2.839380979537964
    4. '']' → logprob: -3.964380979537964
    5. '       ' → logprob: -5.464381217956543
    6. ')
' → logprob: -7.089381217956543
    7. ')' → logprob: -7.214381217956543
    8. '   ' → logprob: -9.464381217956543
    9. ']

' → logprob: -9.714381217956543
    10. '')
' → logprob: -9.839381217956543

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.810037742368877e-05
    2. '   ' → logprob: -11.625038146972656
    3. '```' → logprob: -11.625038146972656
    4. ' if' → logprob: -11.875038146972656
    5. '        
' → logprob: -12.000038146972656
    6. ',' → logprob: -12.750038146972656
    7. 'if' → logprob: -13.125038146972656
    8. '
' → logprob: -14.375038146972656
    9. '           ' → logprob: -15.125038146972656
    10. '#' → logprob: -15.375038146972656

Token 677: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04810464382171631
    2. 'on' → logprob: -3.673104763031006
    3. 'px' → logprob: -4.673104763031006
    4. 'pos' → logprob: -4.798104763031006
    5. 'x' → logprob: -6.173104763031006
    6. '   ' → logprob: -6.798104763031006
    7. '#' (adapté à ' #') → logprob: -8.548104286193848
    8. '       ' → logprob: -8.923104286193848
    9. 'def' → logprob: -9.298104286193848
    10. 'cx' → logprob: -9.548104286193848

Token 678: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.056402482092380524
    2. 'on' → logprob: -2.9314024448394775
    3. 'pos' → logprob: -7.181402683258057
    4. '#' → logprob: -8.181402206420898
    5. 'def' → logprob: -8.431402206420898
    6. '   ' → logprob: -9.681402206420898
    7. 'found' → logprob: -10.056402206420898
    8. 'inside' → logprob: -10.056402206420898
    9. 'px' → logprob: -10.556402206420898
    10. 't' → logprob: -11.431402206420898

Token 679: ' streets' (ID: 25360)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11857328563928604
    2. ' if' → logprob: -2.6185731887817383
    3. 'dx' → logprob: -3.8685731887817383
    4. 'on' → logprob: -5.243573188781738
    5. ' on' → logprob: -5.743573188781738
    6. 'def' → logprob: -6.118573188781738
    7. '#' → logprob: -6.243573188781738
    8. ' dx' → logprob: -6.368573188781738
    9. 'min' → logprob: -7.118573188781738
    10. '   ' → logprob: -7.743573188781738

Token 680: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.2626842260360718
    2. 'are' → logprob: -1.2626842260360718
    3. ' that' → logprob: -2.7626843452453613
    4. 'can' → logprob: -3.1376843452453613
    5. 's' → logprob: -3.5126843452453613
    6. 'on' → logprob: -3.5126843452453613
    7. ' on' → logprob: -3.8876843452453613
    8. '=' → logprob: -4.012684345245361
    9. ':' → logprob: -4.137684345245361
    10. ' =' → logprob: -4.137684345245361

Token 681: ' axis' (ID: 16300)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.5341324210166931
    2. ' either' → logprob: -1.409132480621338
    3. 'axis' → logprob: -1.909132480621338
    4. '   ' → logprob: -5.034132480621338
    5. ' axis' → logprob: -5.659132480621338
    6. 'all' → logprob: -5.659132480621338
    7. 'always' → logprob: -5.784132480621338
    8. 'aligned' → logprob: -6.659132480621338
    9. 'horizontal' → logprob: -7.159132480621338
    10. 'straight' → logprob: -7.159132480621338

Token 682: '-al' (ID: 13254)
  Prédit: 'aligned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aligned' → logprob: -0.47569549083709717
    2. '-al' → logprob: -0.9756954908370972
    3. '_al' → logprob: -7.100695610046387
    4. ' aligned' → logprob: -7.225695610046387
    5. 'al' → logprob: -10.725695610046387
    6. '   ' → logprob: -11.225695610046387
    7. 'parallel' → logprob: -11.225695610046387
    8. 'Aligned' → logprob: -12.225695610046387
    9. '```' → logprob: -13.100695610046387
    10. '==' → logprob: -13.225695610046387

Token 683: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -0.0039175148122012615
    2. 'gn' → logprob: -5.753917694091797
    3. 'aligned' → logprob: -8.503917694091797
    4. 'ned' → logprob: -8.753917694091797
    5. '```' → logprob: -8.878917694091797
    6. 'ined' → logprob: -9.628917694091797
    7. 'g' → logprob: -10.003917694091797
    8. '   ' → logprob: -10.378917694091797
    9. 'ng' → logprob: -10.753917694091797
    10. 'IGNED' → logprob: -11.003917694091797

Token 684: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5587781071662903
    2. ' and' → logprob: -1.0587780475616455
    3. ',' → logprob: -3.4337780475616455
    4. ' if' → logprob: -3.5587780475616455
    5. '   ' → logprob: -4.683778285980225
    6. 'and' → logprob: -5.183778285980225
    7. '
' → logprob: -6.183778285980225
    8. 'if' → logprob: -6.933778285980225
    9. ':' → logprob: -7.308778285980225
    10. ':
' → logprob: -7.933778285980225

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005465993890538812
    2. ' and' → logprob: -8.5005464553833
    3. ',' → logprob: -9.0005464553833
    4. ' if' → logprob: -9.2505464553833
    5. '   ' → logprob: -10.7505464553833
    6. '```' → logprob: -10.8755464553833
    7. '        
' → logprob: -11.1255464553833
    8. '<|end|>' → logprob: -11.1255464553833
    9. '
' → logprob: -11.6255464553833
    10. 'and' → logprob: -11.8755464553833

Token 686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4122658371925354
    2. ' if' → logprob: -1.6622657775878906
    3. 'if' → logprob: -1.9122657775878906
    4. '   ' → logprob: -8.78726577758789
    5. ' on' → logprob: -9.66226577758789
    6. 'x' → logprob: -10.03726577758789
    7. 'on' → logprob: -10.53726577758789
    8. ' x' → logprob: -11.16226577758789
    9. ' is' → logprob: -11.41226577758789
    10. ' in' → logprob: -11.41226577758789

Token 687: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05257895961403847
    2. '       ' → logprob: -3.052578926086426
    3. 'on' → logprob: -6.052578926086426
    4. ' if' → logprob: -6.677578926086426
    5. '   ' → logprob: -8.427578926086426
    6. 'x' → logprob: -10.052578926086426
    7. 'pos' → logprob: -10.927578926086426
    8. 'is' → logprob: -11.302578926086426
    9. 'def' → logprob: -11.302578926086426
    10. 'in' → logprob: -11.302578926086426

Token 688: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.325589656829834
    2. ' if' → logprob: -1.325589656829834
    3. '   ' → logprob: -4.575589656829834
    4. '(' → logprob: -7.200589656829834
    5. ' (' → logprob: -7.700589656829834
    6. '((' → logprob: -7.825589656829834
    7. '(x' → logprob: -9.825590133666992
    8. ' s' → logprob: -10.075590133666992
    9. '       ' → logprob: -10.200590133666992
    10. '    ' → logprob: -10.200590133666992

Token 689: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22609366476535797
    2. 'x' → logprob: -2.3510937690734863
    3. '(s' → logprob: -2.8510937690734863
    4. 's' → logprob: -4.101093769073486
    5. ' (' → logprob: -4.351093769073486
    6. '(' → logprob: -4.851093769073486
    7. '(min' → logprob: -5.351093769073486
    8. 'min' → logprob: -6.101093769073486
    9. '((' → logprob: -6.351093769073486
    10. '(
' → logprob: -7.101093769073486

Token 690: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004470235202461481
    2. ' x' → logprob: -5.504470348358154
    3. 's' → logprob: -8.504469871520996
    4. '(x' → logprob: -9.504469871520996
    5. '   ' → logprob: -9.629469871520996
    6. 'min' → logprob: -11.754469871520996
    7. ')' → logprob: -11.754469871520996
    8. ' (' → logprob: -11.754469871520996
    9. ' ' → logprob: -12.129469871520996
    10. ' s' → logprob: -12.629469871520996

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010533124441280961
    2. ',' → logprob: -10.250104904174805
    3. ')' → logprob: -10.500104904174805
    4. '```' → logprob: -11.000104904174805
    5. ' ' → logprob: -12.000104904174805
    6. '==' → logprob: -12.125104904174805
    7. 'x' → logprob: -12.375104904174805
    8. 's' → logprob: -12.750104904174805
    9. '``' → logprob: -13.250104904174805
    10. ' ==' → logprob: -14.125104904174805

Token 692: ',y' (ID: 16103)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7965192794799805
    2. ',' → logprob: -1.1715192794799805
    3. '==' → logprob: -1.9215192794799805
    4. ' >=' → logprob: -2.7965192794799805
    5. ' ==' → logprob: -4.1715192794799805
    6. ')' → logprob: -4.7965192794799805
    7. ',y' → logprob: -5.4215192794799805
    8. ' -' → logprob: -7.4215192794799805
    9. '```' → logprob: -7.4215192794799805
    10. ')>=' → logprob: -7.4215192794799805

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004689226043410599
    2. ')' → logprob: -7.750468730926514
    3. ')==' → logprob: -10.750469207763672
    4. '```' → logprob: -11.500469207763672
    5. '==' → logprob: -12.500469207763672
    6. 'o' → logprob: -14.375469207763672
    7. '``' → logprob: -14.375469207763672
    8. ' ' → logprob: -15.375469207763672
    9. '
' → logprob: -15.375469207763672
    10. '   ' → logprob: -15.625469207763672

Token 694: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1636243611574173
    2. '==' → logprob: -2.6636242866516113
    3. '[' → logprob: -2.7886242866516113
    4. ' ==' → logprob: -4.788624286651611
    5. ')==' → logprob: -5.663624286651611
    6. '>=' → logprob: -5.788624286651611
    7. '```' → logprob: -6.663624286651611
    8. ' )' → logprob: -6.663624286651611
    9. ' is' → logprob: -7.538624286651611
    10. '   ' → logprob: -8.03862476348877

Token 695: ' lies' (ID: 24384)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.1720223426818848
    2. ' is' → logprob: -1.5470223426818848
    3. '```' → logprob: -2.1720223426818848
    4. ' lies' → logprob: -2.2970223426818848
    5. '>=' → logprob: -2.2970223426818848
    6. '==' → logprob: -2.5470223426818848
    7. 'lies' → logprob: -3.6720223426818848
    8. 'in' → logprob: -3.9220223426818848
    9. 'on' → logprob: -4.547022342681885
    10. ' ==' → logprob: -5.172022342681885

Token 696: ' on' (ID: 402)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.20099036395549774
    2. 'on' → logprob: -1.8259903192520142
    3. 'between' → logprob: -4.575990200042725
    4. ' on' → logprob: -5.200990200042725
    5. '==' → logprob: -6.450990200042725
    6. ' >=' → logprob: -6.575990200042725
    7. ' between' → logprob: -6.950990200042725
    8. 'within' → logprob: -7.950990200042725
    9. 'in' → logprob: -8.075990676879883
    10. '```' → logprob: -8.200990676879883

Token 697: ' street' (ID: 12901)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.016781210899353
    2. 'the' → logprob: -1.266781210899353
    3. 's' → logprob: -1.641781210899353
    4. ' s' → logprob: -2.0167813301086426
    5. ' this' → logprob: -5.391781330108643
    6. 'min' → logprob: -5.391781330108643
    7. ' min' → logprob: -5.391781330108643
    8. ' (' → logprob: -5.891781330108643
    9. 'this' → logprob: -5.891781330108643
    10. '(s' → logprob: -6.516781330108643

Token 698: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15363597869873047
    2. ' if' → logprob: -2.4036359786987305
    3. 'if' → logprob: -3.5286359786987305
    4. ' and' → logprob: -4.1536359786987305
    5. 'and' → logprob: -6.4036359786987305
    6. ':' → logprob: -6.4036359786987305
    7. '   ' → logprob: -7.1536359786987305
    8. ' (' → logprob: -7.2786359786987305
    9. ':
' → logprob: -7.9036359786987305
    10. ' in' → logprob: -8.15363597869873

Token 699: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3491116762161255
    2. ' if' → logprob: -1.8491116762161255
    3. ' and' → logprob: -2.474111557006836
    4. 'if' → logprob: -3.724111557006836
    5. 'and' → logprob: -4.099111557006836
    6. '   ' → logprob: -5.099111557006836
    7. ':' → logprob: -5.849111557006836
    8. ' in' → logprob: -6.724111557006836
    9. ',' → logprob: -7.599111557006836
    10. ' (' → logprob: -7.974111557006836

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007104054093360901
    2. ' if' → logprob: -7.875710487365723
    3. ':' → logprob: -9.500710487365723
    4. ',' → logprob: -9.500710487365723
    5. ' and' → logprob: -10.000710487365723
    6. 'if' → logprob: -10.625710487365723
    7. '        
' → logprob: -10.750710487365723
    8. '   ' → logprob: -11.125710487365723
    9. '<|end|>' → logprob: -11.250710487365723
    10. '
' → logprob: -11.625710487365723

Token 701: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6337010860443115
    2. '       ' → logprob: -1.0087010860443115
    3. 'if' (adapté à ' if') → logprob: -2.2587010860443115
    4. '   ' → logprob: -9.50870132446289
    5. ' on' → logprob: -10.38370132446289
    6. '```' → logprob: -10.88370132446289
    7. '           ' → logprob: -11.75870132446289
    8. ' in' → logprob: -12.13370132446289
    9. ' is' → logprob: -12.25870132446289
    10. '
' → logprob: -12.25870132446289

Token 702: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5343908071517944
    2. '(s' → logprob: -1.9093908071517944
    3. ' (' → logprob: -2.284390926361084
    4. 'x' → logprob: -2.909390926361084
    5. 's' → logprob: -3.284390926361084
    6. '(min' → logprob: -3.659390926361084
    7. '((' → logprob: -4.159390926361084
    8. '(' → logprob: -4.534390926361084
    9. 'min' → logprob: -4.909390926361084
    10. '   ' → logprob: -5.659390926361084

Token 703: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06556227058172226
    2. '1' → logprob: -2.9405622482299805
    3. '>=' → logprob: -4.8155622482299805
    4. '==' → logprob: -7.0655622482299805
    5. 's' → logprob: -7.1905622482299805
    6. ' >=' → logprob: -7.9405622482299805
    7. '```' → logprob: -8.44056224822998
    8. ' ==' → logprob: -9.69056224822998
    9. ' ' → logprob: -9.69056224822998
    10. 'min' → logprob: -10.06556224822998

Token 704: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.014713392592966557
    2. ' <=' → logprob: -4.264713287353516
    3. '==' → logprob: -7.514713287353516
    4. ' ==' → logprob: -13.014713287353516
    5. '```' → logprob: -13.889713287353516
    6. ')<=' → logprob: -14.889713287353516
    7. '[' → logprob: -15.014713287353516
    8. ']<=' → logprob: -15.139713287353516
    9. '≤' → logprob: -15.514713287353516
    10. '   ' → logprob: -15.889713287353516

Token 705: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011914180358871818
    2. 's' → logprob: -6.87619161605835
    3. ' x' → logprob: -9.251191139221191
    4. 'y' → logprob: -10.001191139221191
    5. '0' → logprob: -12.001191139221191
    6. 'xs' → logprob: -13.063691139221191
    7. ' ' → logprob: -13.876191139221191
    8. '```' → logprob: -14.188691139221191
    9. '
' → logprob: -14.251191139221191
    10. '	x' → logprob: -14.501191139221191

Token 706: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006037107668817043
    2. 'x' → logprob: -5.75603723526001
    3. 's' → logprob: -6.00603723526001
    4. ' ' → logprob: -9.131036758422852
    5. ' x' → logprob: -9.506036758422852
    6. '   ' → logprob: -9.631036758422852
    7. ' s' → logprob: -9.881036758422852
    8. '```' → logprob: -11.006036758422852
    9. '       ' → logprob: -11.256036758422852
    10. 'y' → logprob: -11.381036758422852

Token 707: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016056187450885773
    2. 'and' → logprob: -4.141056060791016
    3. ':' → logprob: -11.266056060791016
    4. '   ' → logprob: -12.516056060791016
    5. ':
' → logprob: -12.766056060791016
    6. ' ' → logprob: -14.141056060791016
    7. '           ' → logprob: -14.891056060791016
    8. ',' → logprob: -15.016056060791016
    9. '	and' → logprob: -15.016056060791016
    10. '       ' → logprob: -15.266056060791016

Token 708: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012636666186153889
    2. '           ' → logprob: -5.012636661529541
    3. 'and' → logprob: -5.137636661529541
    4. '       ' → logprob: -11.7626371383667
    5. '               ' → logprob: -12.0126371383667
    6. ':' → logprob: -12.3876371383667
    7. ',' → logprob: -12.5126371383667
    8. '            ' → logprob: -12.6376371383667
    9. '          ' → logprob: -12.6376371383667
    10. ':
' → logprob: -14.1376371383667

Token 709: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5180349946022034
    2. 'if' → logprob: -1.6430349349975586
    3. '           ' → logprob: -2.2680349349975586
    4. ' and' → logprob: -2.3930349349975586
    5. 'and' → logprob: -4.518034934997559
    6. '               ' → logprob: -5.393034934997559
    7. ' x' → logprob: -8.268034934997559
    8. '0' → logprob: -9.393034934997559
    9. 'x' → logprob: -9.768034934997559
    10. ' ' → logprob: -10.268034934997559

Token 710: ' vertical' (ID: 17679)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024152152240276337
    2. ' if' → logprob: -3.7741520404815674
    3. '           ' → logprob: -7.0241522789001465
    4. '0' → logprob: -12.399151802062988
    5. 'x' → logprob: -12.899151802062988
    6. 'y' → logprob: -12.899151802062988
    7. 'If' → logprob: -13.524151802062988
    8. '#' → logprob: -13.649151802062988
    9. 'elif' → logprob: -13.899151802062988
    10. ' y' → logprob: -13.899151802062988

Token 711: ' street' (ID: 12901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32291579246520996
    2. ' and' → logprob: -1.82291579246521
    3. 'and' → logprob: -2.94791579246521
    4. 'if' → logprob: -3.44791579246521
    5. ' if' → logprob: -4.447916030883789
    6. ':' → logprob: -4.947916030883789
    7. ':
' → logprob: -5.197916030883789
    8. '       ' → logprob: -6.322916030883789
    9. '==' → logprob: -6.822916030883789
    10. ',' → logprob: -6.947916030883789

Token 712: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01349583175033331
    2. ' and' → logprob: -4.513495922088623
    3. 'and' → logprob: -6.888495922088623
    4. ' if' → logprob: -7.138495922088623
    5. '       ' → logprob: -8.513495445251465
    6. 'if' → logprob: -8.638495445251465
    7. ',' → logprob: -9.263495445251465
    8. ':' → logprob: -10.263495445251465
    9. '
' → logprob: -10.513495445251465
    10. '               ' → logprob: -10.638495445251465

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001380709814839065
    2. ' if' → logprob: -7.251380920410156
    3. ' and' → logprob: -8.001380920410156
    4. 'if' → logprob: -8.376380920410156
    5. 'and' → logprob: -10.376380920410156
    6. ',' → logprob: -10.376380920410156
    7. '       ' → logprob: -10.376380920410156
    8. '   ' → logprob: -13.001380920410156
    9. ':' → logprob: -13.251380920410156
    10. '```' → logprob: -13.751380920410156

Token 714: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21634851396083832
    2. ' if' → logprob: -1.7163485288619995
    3. '           ' → logprob: -4.216348648071289
    4. ' ' → logprob: -9.966348648071289
    5. 'min' → logprob: -11.591348648071289
    6. ' min' → logprob: -12.341348648071289
    7. '   ' → logprob: -12.716348648071289
    8. '       ' → logprob: -13.591348648071289
    9. '```' → logprob: -14.341348648071289
    10. ',' → logprob: -14.466348648071289

Token 715: ' x' (ID: 1215)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6680082678794861
    2. 'x' → logprob: -0.9180082678794861
    3. 'y' → logprob: -2.543008327484131
    4. ' min' → logprob: -4.918008327484131
    5. ' y' → logprob: -7.043008327484131
    6. ' x' → logprob: -7.418008327484131
    7. '(min' → logprob: -7.668008327484131
    8. '(x' → logprob: -10.418007850646973
    9. '   ' → logprob: -11.293007850646973
    10. '(y' → logprob: -11.793007850646973

Token 716: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.518524169921875
    2. ' ==' → logprob: -1.393524169921875
    3. '==' → logprob: -2.268524169921875
    4. '1' → logprob: -3.018524169921875
    5. '_' → logprob: -6.518524169921875
    6. '=' → logprob: -7.643524169921875
    7. ' ' → logprob: -7.768524169921875
    8. '```' → logprob: -7.893524169921875
    9. '   ' → logprob: -8.268524169921875
    10. 's' → logprob: -8.643524169921875

Token 717: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4274589419364929
    2. '==' → logprob: -1.6774590015411377
    3. ' >=' → logprob: -2.1774590015411377
    4. ' ==' → logprob: -3.0524590015411377
    5. '=' → logprob: -9.427458763122559
    6. ')' → logprob: -9.677458763122559
    7. '<=' → logprob: -9.927458763122559
    8. ')>=' → logprob: -10.052458763122559
    9. '```' → logprob: -10.302458763122559
    10. ',' → logprob: -10.302458763122559

Token 718: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.625000953674316
    3. 's' → logprob: -20.125
    4. '	x' → logprob: -22.375
    5. '   ' → logprob: -23.125
    6. ' ' → logprob: -24.0
    7. 'xs' → logprob: -24.375
    8. '```' → logprob: -24.75
    9. '(x' → logprob: -24.875
    10. '"x' → logprob: -25.0

Token 719: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2703744173049927
    2. '2' → logprob: -2.020374298095703
    3. '1' → logprob: -2.395374298095703
    4. 's' → logprob: -4.395374298095703
    5. ' x' → logprob: -7.145374298095703
    6. ' s' → logprob: -11.020374298095703
    7. '0' → logprob: -12.770374298095703
    8. '   ' → logprob: -12.895374298095703
    9. '[' → logprob: -13.020374298095703
    10. '[x' → logprob: -13.145374298095703

Token 720: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858827963471413
    2. 'and' → logprob: -3.048588275909424
    3. '           ' → logprob: -14.548588752746582
    4. ' ' → logprob: -15.673588752746582
    5. '	and' → logprob: -16.048587799072266
    6. '               ' → logprob: -16.923587799072266
    7. '   ' → logprob: -17.548587799072266
    8. ',' → logprob: -17.548587799072266
    9. '            ' → logprob: -17.673587799072266
    10. '          ' → logprob: -18.298587799072266

Token 721: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08891100436449051
    2. 'y' → logprob: -2.5889110565185547
    3. ' min' → logprob: -4.838911056518555
    4. '(min' → logprob: -6.338911056518555
    5. ' y' → logprob: -8.213911056518555
    6. '(y' → logprob: -11.338911056518555
    7. '   ' → logprob: -12.588911056518555
    8. ' ' → logprob: -13.838911056518555
    9. '[min' → logprob: -14.213911056518555
    10. ' (' → logprob: -14.713911056518555

Token 722: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0011429571313783526
    2. 'y' → logprob: -7.251142978668213
    3. '(' → logprob: -7.751142978668213
    4. '(
' → logprob: -14.251142501831055
    5. '[y' → logprob: -14.751142501831055
    6. '((' → logprob: -15.251142501831055
    7. '```' → logprob: -15.626142501831055
    8. ',y' → logprob: -15.626142501831055
    9. '{' → logprob: -16.251142501831055
    10. ' (' → logprob: -16.251142501831055

Token 723: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7542380690574646
    2. '(y' → logprob: -0.8792380690574646
    3. '1' → logprob: -2.2542381286621094
    4. '0' → logprob: -5.879238128662109
    5. '[y' → logprob: -6.004238128662109
    6. 's' → logprob: -6.754238128662109
    7. ',y' → logprob: -7.254238128662109
    8. '[' → logprob: -7.379238128662109
    9. ' y' → logprob: -7.754238128662109
    10. '(s' → logprob: -7.754238128662109

Token 724: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1822417825460434
    2. ',y' → logprob: -1.8072417974472046
    3. '<=' → logprob: -6.932241916656494
    4. ')<=' → logprob: -7.182241916656494
    5. ')' → logprob: -8.057241439819336
    6. '(y' → logprob: -9.307241439819336
    7. ',min' → logprob: -9.432241439819336
    8. ' ,' → logprob: -10.307241439819336
    9. 'y' → logprob: -10.307241439819336
    10. ',x' → logprob: -10.557241439819336

Token 725: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003290288441348821
    2. 's' → logprob: -8.87532901763916
    3. '2' → logprob: -9.50032901763916
    4. 'y' → logprob: -9.62532901763916
    5. ')' → logprob: -11.00032901763916
    6. ' ' → logprob: -11.87532901763916
    7. '(s' → logprob: -12.37532901763916
    8. ' y' → logprob: -12.62532901763916
    9. ',' → logprob: -12.87532901763916
    10. '[' → logprob: -13.12532901763916

Token 726: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019454145804047585
    2. ')<=' → logprob: -6.251945495605469
    3. '<=' → logprob: -11.126945495605469
    4. ']<=' → logprob: -14.751945495605469
    5. '")' → logprob: -15.001945495605469
    6. ',' → logprob: -15.251945495605469
    7. ')
' → logprob: -15.501945495605469
    8. ' <=' → logprob: -15.626945495605469
    9. ' )' → logprob: -15.876945495605469
    10. '')' → logprob: -16.00194549560547

Token 727: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.007638329174369574
    2. ' <=' → logprob: -4.882638454437256
    3. ')<=' → logprob: -11.007637977600098
    4. ']<=' → logprob: -11.132637977600098
    5. ')' → logprob: -15.132637977600098
    6. '()' → logprob: -15.632637977600098
    7. '≤' → logprob: -15.882637977600098
    8. '```' → logprob: -16.257638931274414
    9. '
' → logprob: -16.382638931274414
    10. '0' → logprob: -16.757638931274414

Token 728: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.615255839889869e-05
    2. ' y' → logprob: -9.250096321105957
    3. '	y' → logprob: -20.50009536743164
    4. '   ' → logprob: -21.37509536743164
    5. '(y' → logprob: -22.12509536743164
    6. '[y' → logprob: -23.87509536743164
    7. '           ' → logprob: -24.12509536743164
    8. 'y's' → logprob: -24.25009536743164
    9. '*y' → logprob: -24.50009536743164
    10. 'Y' → logprob: -24.87509536743164

Token 729: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.625000953674316
    3. '_' → logprob: -15.750000953674316
    4. '۰' → logprob: -16.875
    5. 'y' → logprob: -17.0
    6. '
' → logprob: -17.125
    7. '   ' → logprob: -17.125
    8. 'o' → logprob: -17.625
    9. '```' → logprob: -18.0625
    10. '[' → logprob: -18.4375

Token 730: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2531803548336029
    2. ' <=' → logprob: -1.5031803846359253
    3. 'and' → logprob: -7.128180503845215
    4. ' and' → logprob: -7.753180503845215
    5. '```' → logprob: -13.003180503845215
    6. '<|end|>' → logprob: -13.128180503845215
    7. ')<=' → logprob: -13.128180503845215
    8. '≤' → logprob: -13.253180503845215
    9. ' ' → logprob: -13.503180503845215
    10. '           ' → logprob: -13.628180503845215

Token 731: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002615742268972099
    2. ' max' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.000261306762695
    4. '	max' → logprob: -16.750261306762695
    5. '(max' → logprob: -17.500261306762695
    6. ' ' → logprob: -18.750261306762695
    7. '  ' → logprob: -19.625261306762695
    8. ' ' → logprob: -19.625261306762695
    9. 'min' → logprob: -20.125261306762695
    10. '[max' → logprob: -20.250261306762695

Token 732: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.000003814697266
    3. 'y' → logprob: -13.375003814697266
    4. '(
' → logprob: -17.750003814697266
    5. ' (' → logprob: -18.000003814697266
    6. '(x' → logprob: -18.500003814697266
    7. '(min' → logprob: -18.750003814697266
    8. '(Y' → logprob: -19.125003814697266
    9. '<|end|>' → logprob: -19.125003814697266
    10. ',y' → logprob: -19.500003814697266

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030436664819717407
    2. 'y' → logprob: -6.2530436515808105
    3. '(y' → logprob: -6.8780436515808105
    4. '(' → logprob: -10.128044128417969
    5. '(s' → logprob: -11.628044128417969
    6. ' y' → logprob: -12.253044128417969
    7. '2' → logprob: -12.690544128417969
    8. '   ' → logprob: -12.815544128417969
    9. '```' → logprob: -12.940544128417969
    10. ' (' → logprob: -13.190544128417969

Token 734: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.003898988477885723
    2. '(y' → logprob: -6.128899097442627
    3. 'y' → logprob: -6.628899097442627
    4. ',' → logprob: -7.878899097442627
    5. '[y' → logprob: -12.628898620605469
    6. '   ' → logprob: -13.503898620605469
    7. '
' → logprob: -13.628898620605469
    8. '```' → logprob: -14.003898620605469
    9. ')' → logprob: -14.128898620605469
    10. '(s' → logprob: -14.503898620605469

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.625001907348633
    3. 'y' → logprob: -14.750001907348633
    4. '<|end|>' → logprob: -15.000001907348633
    5. '
' → logprob: -15.125001907348633
    6. '```' → logprob: -15.250001907348633
    7. '   ' → logprob: -15.812501907348633
    8. '۲' → logprob: -16.500001907348633
    9. '<|end|>' → logprob: -16.750001907348633
    10. '_' → logprob: -17.250001907348633

Token 736: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1040550097823143
    2. '):
' → logprob: -2.8540549278259277
    3. ':' → logprob: -3.2290549278259277
    4. ')' → logprob: -7.479054927825928
    5. '       ' → logprob: -7.479054927825928
    6. ':
' → logprob: -8.229055404663086
    7. '           ' → logprob: -9.479055404663086
    8. '<|end|>' → logprob: -10.479055404663086
    9. '   ' → logprob: -10.604055404663086
    10. '):

' → logprob: -10.979055404663086

Token 737: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4529649317264557
    2. '           ' → logprob: -1.2029649019241333
    3. ':
' → logprob: -3.202965021133423
    4. ':' → logprob: -4.202964782714844
    5. ' and' → logprob: -4.952964782714844
    6. ',' → logprob: -7.327964782714844
    7. 'start' → logprob: -9.202964782714844
    8. '):
' → logprob: -9.327964782714844
    9. ':

' → logprob: -9.827964782714844
    10. '       ' → logprob: -10.077964782714844

Token 738: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.13498391211032867
    2. 'dist' → logprob: -2.384984016418457
    3. 'offset' → logprob: -4.634984016418457
    4. '               ' → logprob: -4.884984016418457
    5. 'distance' → logprob: -5.509984016418457
    6. ' pos' → logprob: -5.509984016418457
    7. 'start' → logprob: -5.759984016418457
    8. ' dist' → logprob: -5.759984016418457
    9. 'position' → logprob: -7.384984016418457
    10. 'd' → logprob: -7.384984016418457

Token 739: ' possible' (ID: 4149)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.048315245658159256
    2. 'dist' → logprob: -3.5483152866363525
    3. 'distance' → logprob: -4.923315048217773
    4. 'offset' → logprob: -5.548315048217773
    5. 'position' → logprob: -5.798315048217773
    6. 'start' → logprob: -6.673315048217773
    7. '#' → logprob: -7.173315048217773
    8. ' pos' → logprob: -7.298315048217773
    9. 'length' → logprob: -7.548315048217773
    10. '   ' → logprob: -8.298315048217773

Token 740: ' directions' (ID: 24921)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4331154227256775
    2. 'start' → logprob: -1.8081154823303223
    3. 'positions' → logprob: -2.3081154823303223
    4. 'position' → logprob: -3.5581154823303223
    5. '               ' → logprob: -4.308115482330322
    6. ' start' → logprob: -4.808115482330322
    7. ' pos' → logprob: -4.933115482330322
    8. '   ' → logprob: -5.058115482330322
    9. ' positions' → logprob: -5.433115482330322
    10. '#' → logprob: -5.933115482330322

Token 741: ':' (ID: 25)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03420284762978554
    2. ' =' → logprob: -4.284203052520752
    3. '               ' → logprob: -4.409203052520752
    4. 'start' → logprob: -5.909203052520752
    5. ' for' → logprob: -7.034203052520752
    6. 'for' → logprob: -7.409203052520752
    7. '                   ' → logprob: -7.784203052520752
    8. ':' → logprob: -8.034202575683594
    9. '
' → logprob: -8.284202575683594
    10. ',' → logprob: -8.284202575683594

Token 742: ' along' (ID: 4251)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5857509970664978
    2. '[' → logprob: -1.4607510566711426
    3. '-' → logprob: -3.4607510566711426
    4. '(-' → logprob: -3.7107510566711426
    5. '[-' → logprob: -3.7107510566711426
    6. 'street' → logprob: -3.8357510566711426
    7. '('' → logprob: -4.335751056671143
    8. '(' → logprob: -4.460751056671143
    9. '1' → logprob: -4.710751056671143
    10. 'start' → logprob: -4.835751056671143

Token 743: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.885063886642456
    2. 'the' → logprob: -1.635063886642456
    3. '(' → logprob: -1.885063886642456
    4. ' s' → logprob: -2.885063886642456
    5. ' the' → logprob: -2.885063886642456
    6. 'y' → logprob: -3.135063886642456
    7. '1' → logprob: -3.885063886642456
    8. ' (' → logprob: -4.010064125061035
    9. ' y' → logprob: -4.385064125061035
    10. 'dy' → logprob: -4.510064125061035

Token 744: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.49329233169555664
    2. ' street' → logprob: -2.3682923316955566
    3. 'y' → logprob: -2.4932923316955566
    4. 's' → logprob: -2.6182923316955566
    5. '1' → logprob: -3.2432923316955566
    6. 'dy' → logprob: -3.4932923316955566
    7. ' y' → logprob: -3.6182923316955566
    8. '+' → logprob: -3.8682923316955566
    9. ' dy' → logprob: -5.743292331695557
    10. ' s' → logprob: -5.868292331695557

Token 745: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12039769440889359
    2. 'start' → logprob: -3.2453978061676025
    3. ',' → logprob: -4.120397567749023
    4. '[start' → logprob: -4.120397567749023
    5. ' for' → logprob: -4.870397567749023
    6. ' start' → logprob: -4.995397567749023
    7. '
' → logprob: -5.120397567749023
    8. ' in' → logprob: -5.120397567749023
    9. 'from' → logprob: -5.620397567749023
    10. 'for' → logprob: -5.995397567749023

Token 746: ' either' (ID: 4784)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7657915353775024
    2. 'pos' → logprob: -2.140791416168213
    3. '(s' → logprob: -2.140791416168213
    4. 'start' → logprob: -2.140791416168213
    5. 'distance' → logprob: -2.765791416168213
    6. '[(' → logprob: -2.890791416168213
    7. '0' → logprob: -3.140791416168213
    8. 'up' → logprob: -3.265791416168213
    9. '-' → logprob: -3.390791416168213
    10. '(-' → logprob: -3.390791416168213

Token 747: ' dy' (ID: 11996)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -1.29547917842865
    2. '1' → logprob: -1.67047917842865
    3. '+' → logprob: -2.2954792976379395
    4. '(' → logprob: -2.2954792976379395
    5. ' forward' → logprob: -2.7954792976379395
    6. ' (' → logprob: -3.1704792976379395
    7. 'tow' → logprob: -3.1704792976379395
    8. 'direction' → logprob: -3.2954792976379395
    9. 'up' → logprob: -3.4204792976379395
    10. '0' → logprob: -3.5454792976379395

Token 748: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.042747486382722855
    2. '==' → logprob: -3.4177474975585938
    3. ' ==' → logprob: -5.542747497558594
    4. ' =' → logprob: -5.542747497558594
    5. '1' → logprob: -7.542747497558594
    6. '==-' → logprob: -7.917747497558594
    7. '=-' → logprob: -8.542747497558594
    8. ' or' → logprob: -9.792747497558594
    9. ' ' → logprob: -10.417747497558594
    10. ' in' → logprob: -11.917747497558594

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028630809858441353
    2. ' ' → logprob: -4.02863073348999
    3. 's' → logprob: -5.02863073348999
    4. '-' → logprob: -5.65363073348999
    5. ' s' → logprob: -8.153631210327148
    6. ' -' → logprob: -9.653631210327148
    7. '
' → logprob: -12.028631210327148
    8. '0' → logprob: -12.403631210327148
    9. '+' → logprob: -12.903631210327148
    10. '```' → logprob: -13.153631210327148

Token 750: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0299833957105875
    2. 'or' → logprob: -3.5299832820892334
    3. ',' → logprob: -9.154983520507812
    4. '<|end|>' → logprob: -9.279983520507812
    5. ')' → logprob: -11.154983520507812
    6. '               ' → logprob: -12.904983520507812
    7. '	or' → logprob: -12.904983520507812
    8. '```' → logprob: -13.029983520507812
    9. '
' → logprob: -13.279983520507812
    10. '<|end|>' → logprob: -13.404983520507812

Token 751: ' dy' (ID: 11996)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5783239006996155
    2. 'dy' → logprob: -1.0783238410949707
    3. ' dy' → logprob: -2.7033238410949707
    4. ' -' → logprob: -3.4533238410949707
    5. '-d' → logprob: -8.328324317932129
    6. '0' → logprob: -10.328324317932129
    7. ' ' → logprob: -10.578324317932129
    8. 'dx' → logprob: -10.703324317932129
    9. ' ' → logprob: -11.703324317932129
    10. '
' → logprob: -12.015824317932129

Token 752: '=-' (ID: 21714)
  Prédit: '=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.2338172048330307
    2. '=' → logprob: -1.608817219734192
    3. '==-' → logprob: -4.858817100524902
    4. ' =' → logprob: -7.983817100524902
    5. '==' → logprob: -8.483817100524902
    6. '=(-' → logprob: -10.233817100524902
    7. '=
' → logprob: -12.108817100524902
    8. '-' → logprob: -12.483817100524902
    9. '```' → logprob: -12.983817100524902
    10. ' ==' → logprob: -13.233817100524902

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33732298016548157
    2. ',' → logprob: -1.8373229503631592
    3. ' or' → logprob: -3.337322950363159
    4. '               ' → logprob: -3.462322950363159
    5. 'or' → logprob: -4.087323188781738
    6. '2' → logprob: -4.837323188781738
    7. '                   ' → logprob: -5.087323188781738
    8. '<|end|>' → logprob: -5.212323188781738
    9. 's' → logprob: -5.587323188781738
    10. '
' → logprob: -5.837323188781738

Token 754: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0071818106807768345
    2. ',' → logprob: -5.507181644439697
    3. '
' → logprob: -6.007181644439697
    4. '                
' → logprob: -8.507182121276855
    5. '<|end|>' → logprob: -9.007182121276855
    6. ' or' → logprob: -9.382182121276855
    7. ',
' → logprob: -10.132182121276855
    8. '       ' → logprob: -10.257182121276855
    9. ' if' → logprob: -10.882182121276855
    10. '   ' → logprob: -11.382182121276855

Token 755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002904966240748763
    2. ',' → logprob: -6.252904891967773
    3. '                
' → logprob: -7.627904891967773
    4. '<|end|>' → logprob: -8.877904891967773
    5. '
' → logprob: -9.002904891967773
    6. ',
' → logprob: -10.127904891967773
    7. '       ' → logprob: -10.377904891967773
    8. '                   ' → logprob: -10.502904891967773
    9. '           ' → logprob: -11.127904891967773
    10. '[' → logprob: -11.127904891967773

Token 756: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0265664029866457
    2. 'start' → logprob: -4.401566505432129
    3. 'for' → logprob: -5.526566505432129
    4. 'if' → logprob: -5.776566505432129
    5. ' if' → logprob: -6.026566505432129
    6. ' for' → logprob: -6.526566505432129
    7. '   ' → logprob: -6.651566505432129
    8. ' start' → logprob: -6.776566505432129
    9. '       ' → logprob: -8.401566505432129
    10. '                   ' → logprob: -8.526566505432129

Token 757: ' At' (ID: 3604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.617885410785675
    2. ' start' → logprob: -1.2428853511810303
    3. ' for' → logprob: -2.6178853511810303
    4. 'for' → logprob: -2.8678853511810303
    5. ' if' → logprob: -4.117885589599609
    6. '               ' → logprob: -4.242885589599609
    7. 'if' → logprob: -4.617885589599609
    8. '   ' → logprob: -6.492885589599609
    9. '
' → logprob: -8.49288558959961
    10. '                   ' → logprob: -9.24288558959961

Token 758: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.33644437789917
    2. ' s' → logprob: -1.58644437789917
    3. ' y' → logprob: -2.33644437789917
    4. 'y' → logprob: -2.83644437789917
    5. 'this' → logprob: -3.21144437789917
    6. '0' → logprob: -3.21144437789917
    7. 'the' → logprob: -3.33644437789917
    8. ' this' → logprob: -3.46144437789917
    9. 'each' → logprob: -3.71144437789917
    10. 'x' → logprob: -3.83644437789917

Token 759: ' initial' (ID: 4871)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3121698200702667
    2. 'end' → logprob: -2.4371697902679443
    3. 'same' → logprob: -3.3121697902679443
    4. 'point' → logprob: -3.3121697902679443
    5. 'moment' → logprob: -3.8121697902679443
    6. 'position' → logprob: -4.062170028686523
    7. '0' → logprob: -4.312170028686523
    8. 'ends' → logprob: -4.812170028686523
    9. 'endpoint' → logprob: -4.812170028686523
    10. 'current' → logprob: -5.187170028686523

Token 760: ' position' (ID: 4010)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.8042135834693909
    2. ' point' → logprob: -1.429213523864746
    3. 'time' → logprob: -1.929213523864746
    4. 'position' → logprob: -2.554213523864746
    5. ' time' → logprob: -3.179213523864746
    6. 'state' → logprob: -4.429213523864746
    7. ' moment' → logprob: -4.929213523864746
    8. ' position' → logprob: -5.054213523864746
    9. '
' → logprob: -5.304213523864746
    10. 'moment' → logprob: -5.804213523864746

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26245206594467163
    2. '               ' → logprob: -1.7624521255493164
    3. ' for' → logprob: -4.137452125549316
    4. '
' → logprob: -4.637452125549316
    5. ':' → logprob: -5.012452125549316
    6. '                   ' → logprob: -5.012452125549316
    7. 'for' → logprob: -5.637452125549316
    8. ':
' → logprob: -5.887452125549316
    9. ' if' → logprob: -5.887452125549316
    10. '       ' → logprob: -6.387452125549316

Token 762: ' the' (ID: 290)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16670460999011993
    2. 'pos' → logprob: -2.7917046546936035
    3. 'for' → logprob: -3.2917046546936035
    4. ' start' → logprob: -3.9167046546936035
    5. 'if' → logprob: -4.5417046546936035
    6. 'distance' → logprob: -5.2917046546936035
    7. 'length' → logprob: -5.4167046546936035
    8. '#' → logprob: -5.6667046546936035
    9. ' for' → logprob: -5.6667046546936035
    10. ' pos' → logprob: -6.4167046546936035

Token 763: ' car' (ID: 1669)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20927347242832184
    2. 'car' → logprob: -2.70927357673645
    3. ' start' → logprob: -3.33427357673645
    4. 'for' → logprob: -3.58427357673645
    5. '#' → logprob: -4.334273338317871
    6. 'if' → logprob: -4.459273338317871
    7. 'possible' → logprob: -4.834273338317871
    8. ' for' → logprob: -5.084273338317871
    9. 'pos' → logprob: -5.709273338317871
    10. 'next' → logprob: -5.959273338317871

Token 764: ''s' (ID: 885)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.39181891083717346
    2. 'can' → logprob: -1.141818881034851
    3. '_can' → logprob: -6.016819000244141
    4. '#' → logprob: -6.891819000244141
    5. 'could' → logprob: -7.516819000244141
    6. ' may' → logprob: -8.51681900024414
    7. ' could' → logprob: -8.76681900024414
    8. 'cannot' → logprob: -8.76681900024414
    9. 'may' → logprob: -8.89181900024414
    10. 's' → logprob: -9.89181900024414

Token 765: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.8768859505653381
    2. ' direction' → logprob: -2.0018858909606934
    3. 'possible' → logprob: -2.3768858909606934
    4. 'position' → logprob: -2.5018858909606934
    5. 'next' → logprob: -2.8768858909606934
    6. ' next' → logprob: -2.8768858909606934
    7. ' position' → logprob: -3.6268858909606934
    8. ' possible' → logprob: -4.001885890960693
    9. 'state' → logprob: -4.376885890960693
    10. 'velocity' → logprob: -4.376885890960693

Token 766: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.38574206829071045
    2. 'can' → logprob: -1.7607420682907104
    3. 's' → logprob: -2.5107421875
    4. '=' → logprob: -3.6357421875
    5. ' =' → logprob: -4.0107421875
    6. ' is' → logprob: -4.5107421875
    7. ' could' → logprob: -5.3857421875
    8. 'could' → logprob: -5.7607421875
    9. 'is' → logprob: -6.5107421875
    10. ' s' → logprob: -7.5107421875

Token 767: ' unknown' (ID: 17927)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.2145996391773224
    2. ' dy' → logprob: -2.589599609375
    3. '1' → logprob: -3.464599609375
    4. '-' → logprob: -4.089599609375
    5. 'either' → logprob: -4.339599609375
    6. 'moves' → logprob: -4.464599609375
    7. 'd' → logprob: -4.714599609375
    8. 'None' → logprob: -5.214599609375
    9. 's' → logprob: -5.214599609375
    10. '(' → logprob: -5.339599609375

Token 768: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0903736799955368
    2. ',' → logprob: -2.7153737545013428
    3. '<|end|>' → logprob: -4.340373516082764
    4. '.' → logprob: -5.840373516082764
    5. '
' → logprob: -6.715373516082764
    6. ' and' → logprob: -7.340373516082764
    7. ' (' → logprob: -7.715373516082764
    8. '           ' → logprob: -8.090373992919922
    9. '<|end|>' → logprob: -8.590373992919922
    10. '       ' → logprob: -8.590373992919922

Token 769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008089671842753887
    2. ' continue' → logprob: -5.008089542388916
    3. ' for' → logprob: -7.883089542388916
    4. '       ' → logprob: -8.133090019226074
    5. 'continue' → logprob: -8.383090019226074
    6. '
' → logprob: -8.883090019226074
    7. '   ' → logprob: -9.758090019226074
    8. ' Continue' → logprob: -10.008090019226074
    9. 'Continue' → logprob: -10.008090019226074
    10. '                   ' → logprob: -10.883090019226074

Token 770: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010988278314471245
    2. ' for' → logprob: -5.635988235473633
    3. 'for' → logprob: -6.010988235473633
    4. 'start' → logprob: -6.760988235473633
    5. ' continue' → logprob: -7.135988235473633
    6. ' if' → logprob: -7.385988235473633
    7. 'continue' → logprob: -7.385988235473633
    8. '                   ' → logprob: -7.385988235473633
    9. ' start' → logprob: -7.885988235473633
    10. '       ' → logprob: -8.635988235473633

Token 771: ' So' (ID: 2632)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.992980420589447
    2. 'for' → logprob: -1.4929804801940918
    3. '               ' → logprob: -1.6179804801940918
    4. ' for' → logprob: -2.367980480194092
    5. ' start' → logprob: -2.492980480194092
    6. '#' → logprob: -4.617980480194092
    7. '   ' → logprob: -4.742980480194092
    8. ' if' → logprob: -6.117980480194092
    9. ' continue' → logprob: -6.242980480194092
    10. 'if' → logprob: -6.242980480194092

Token 772: ' consider' (ID: 3331)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8586509227752686
    2. 'for' → logprob: -0.9836509227752686
    3. 'start' → logprob: -2.2336509227752686
    4. ' start' → logprob: -2.3586509227752686
    5. '
' → logprob: -8.608651161193848
    6. '   ' → logprob: -8.858651161193848
    7. '#' → logprob: -9.483651161193848
    8. '                   ' → logprob: -10.108651161193848
    9. ' continue' → logprob: -10.233651161193848
    10. 'continue' → logprob: -10.233651161193848

Token 773: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.3179326355457306
    2. ' both' → logprob: -1.3179326057434082
    3. '(' → logprob: -6.192932605743408
    4. 'dx' → logprob: -7.692932605743408
    5. 'dire' → logprob: -7.692932605743408
    6. 's' → logprob: -7.942932605743408
    7. 'dy' → logprob: -8.692933082580566
    8. ' (' → logprob: -8.817933082580566
    9. ' directions' → logprob: -8.942933082580566
    10. 'for' → logprob: -9.067933082580566

Token 774: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.05969490110874176
    2. ' directions' → logprob: -3.18469500541687
    3. '(' → logprob: -5.309694766998291
    4. 'for' → logprob: -6.309694766998291
    5. '
' → logprob: -6.309694766998291
    6. '               ' → logprob: -6.434694766998291
    7. 's' → logprob: -7.184694766998291
    8. 'direction' → logprob: -7.434694766998291
    9. ',' → logprob: -7.559694766998291
    10. ' (' → logprob: -7.559694766998291

Token 775: ' allowed' (ID: 9279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014761756174266338
    2. '
' → logprob: -6.626476287841797
    3. ',' → logprob: -9.376476287841797
    4. '                   ' → logprob: -11.376476287841797
    5. ' for' → logprob: -11.626476287841797
    6. ' and' → logprob: -11.751476287841797
    7. 'for' → logprob: -11.751476287841797
    8. '       ' → logprob: -12.001476287841797
    9. '           ' → logprob: -12.251476287841797
    10. '   ' → logprob: -12.876476287841797

Token 776: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025937308091670275
    2. '
' → logprob: -6.127593517303467
    3. ',' → logprob: -8.627593994140625
    4. '       ' → logprob: -9.377593994140625
    5. '   ' → logprob: -10.377593994140625
    6. '           ' → logprob: -10.752593994140625
    7. '<|end|>' → logprob: -10.752593994140625
    8. '.' → logprob: -11.252593994140625
    9. ':' → logprob: -11.627593994140625
    10. '                   ' → logprob: -11.877593994140625

Token 777: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2806428372859955
    2. ' the' → logprob: -2.0306427478790283
    3. ' s' → logprob: -2.9056427478790283
    4. 's' → logprob: -3.7806427478790283
    5. ' this' → logprob: -3.7806427478790283
    6. 'this' → logprob: -4.405642986297607
    7. ' that' → logprob: -8.15564250946045
    8. 'that' → logprob: -8.15564250946045
    9. 'both' → logprob: -9.03064250946045
    10. ' both' → logprob: -10.28064250946045

Token 778: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.13600610196590424
    2. ' street' → logprob: -2.1360061168670654
    3. 'same' → logprob: -6.261005878448486
    4. 's' → logprob: -6.761005878448486
    5. 'line' → logprob: -6.886005878448486
    6. ' line' → logprob: -7.136005878448486
    7. 'token' → logprob: -7.511005878448486
    8. 'car' → logprob: -7.636005878448486
    9. 'next' → logprob: -7.761005878448486
    10. ' s' → logprob: -7.886005878448486

Token 779: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003316980553790927
    2. '
' → logprob: -6.128316879272461
    3. '       ' → logprob: -7.628316879272461
    4. ',' → logprob: -7.628316879272461
    5. ',
' → logprob: -10.503316879272461
    6. '           ' → logprob: -10.878316879272461
    7. '.' → logprob: -10.878316879272461
    8. '   ' → logprob: -11.253316879272461
    9. ' for' → logprob: -11.253316879272461
    10. ':
' → logprob: -11.503316879272461

Token 780: ' that' (ID: 484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1803971529006958
    2. '0' → logprob: -1.4303971529006958
    3. 'the' → logprob: -2.0553970336914062
    4. 'position' → logprob: -2.8053970336914062
    5. 'this' → logprob: -2.9303970336914062
    6. ' s' → logprob: -3.0553970336914062
    7. 'once' → logprob: -3.6803970336914062
    8. 'time' → logprob: -3.9303970336914062
    9. 'start' → logprob: -3.9303970336914062
    10. 'both' → logprob: -4.180397033691406

Token 781: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.028004121035337448
    2. 'position' → logprob: -3.7780041694641113
    3. 'time' → logprob: -6.153004169464111
    4. ' point' → logprob: -6.403004169464111
    5. 'moment' → logprob: -8.153003692626953
    6. 'location' → logprob: -8.278003692626953
    7. '
' → logprob: -9.153003692626953
    8. 'state' → logprob: -10.028003692626953
    9. '```' → logprob: -10.403003692626953
    10. '_point' → logprob: -10.528003692626953

Token 782: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010403135092929006
    2. ',' → logprob: -8.0010404586792
    3. '
' → logprob: -8.2510404586792
    4. '       ' → logprob: -8.7510404586792
    5. '                   ' → logprob: -9.2510404586792
    6. '           ' → logprob: -10.0010404586792
    7. ':' → logprob: -10.3760404586792
    8. '.' → logprob: -10.7510404586792
    9. '   ' → logprob: -10.8760404586792
    10. ',
' → logprob: -11.0010404586792

Token 783: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021571607794612646
    2. '       ' → logprob: -6.502157211303711
    3. '   ' → logprob: -8.127157211303711
    4. '
' → logprob: -8.752157211303711
    5. '                   ' → logprob: -9.252157211303711
    6. '           ' → logprob: -9.502157211303711
    7. ',' → logprob: -11.502157211303711
    8. ' for' → logprob: -12.127157211303711
    9. 'for' → logprob: -12.252157211303711
    10. '                       ' → logprob: -13.127157211303711

Token 784: ' pos' (ID: 1253)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1031087636947632
    2. ' start' → logprob: -1.2281087636947632
    3. 'start' → logprob: -1.4781087636947632
    4. '   ' → logprob: -1.9781087636947632
    5. '                   ' → logprob: -5.603108882904053
    6. ' for' → logprob: -6.103108882904053
    7. 'for' → logprob: -6.728108882904053
    8. '       ' → logprob: -7.603108882904053
    9. ' if' → logprob: -7.728108882904053
    10. '           ' → logprob: -7.978108882904053

Token 785: '_al' (ID: 18493)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2678419351577759
    2. '=' → logprob: -2.1428418159484863
    3. 's' → logprob: -2.5178418159484863
    4. '_al' → logprob: -3.7678418159484863
    5. '_length' → logprob: -4.642841815948486
    6. ',' → logprob: -7.392841815948486
    7. '   ' → logprob: -7.392841815948486
    8. '_' → logprob: -7.767841815948486
    9. ')' → logprob: -7.767841815948486
    10. '_lengths' → logprob: -8.142842292785645

Token 786: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.05391417443752289
    2. 'l' → logprob: -3.5539140701293945
    3. 'low' → logprob: -3.9289140701293945
    4. 'long' → logprob: -7.1789140701293945
    5. 'on' → logprob: -7.6789140701293945
    6. 'ready' → logprob: -7.9289140701293945
    7. 'one' → logprob: -8.178914070129395
    8. 'ng' → logprob: -8.303914070129395
    9. 'o' → logprob: -8.553914070129395
    10. 't' → logprob: -8.803914070129395

Token 787: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5244973301887512
    2. '_s' → logprob: -1.6494972705841064
    3. '_st' → logprob: -1.7744972705841064
    4. 'st' → logprob: -4.3994975090026855
    5. ' s' → logprob: -4.5244975090026855
    6. ' =' → logprob: -4.8994975090026855
    7. 'the' → logprob: -5.1494975090026855
    8. '(s' → logprob: -5.7744975090026855
    9. '=' → logprob: -6.3994975090026855
    10. '=s' → logprob: -6.5244975090026855

Token 788: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07018672674894333
    2. 'y' → logprob: -2.6951866149902344
    3. ' abs' → logprob: -9.195186614990234
    4. 'max' → logprob: -9.945186614990234
    5. ' y' → logprob: -10.195186614990234
    6. 'min' → logprob: -10.820186614990234
    7. '   ' → logprob: -11.070186614990234
    8. '0' → logprob: -11.320186614990234
    9. '(abs' → logprob: -11.445186614990234
    10. '(y' → logprob: -12.820186614990234

Token 789: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00044473158777691424
    2. 'y' → logprob: -7.7504448890686035
    3. '(min' → logprob: -11.750444412231445
    4. '(' → logprob: -12.125444412231445
    5. '(s' → logprob: -15.250444412231445
    6. 'min' → logprob: -16.375444412231445
    7. '(
' → logprob: -17.125444412231445
    8. '(max' → logprob: -17.125444412231445
    9. '(start' → logprob: -17.250444412231445
    10. '(x' → logprob: -17.250444412231445

Token 790: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001359401736408472
    2. '1' → logprob: -6.751359462738037
    3. 's' → logprob: -9.501358985900879
    4. '[' → logprob: -10.376358985900879
    5. '-' → logprob: -10.626358985900879
    6. '_' → logprob: -11.501358985900879
    7. ' ' → logprob: -11.751358985900879
    8. ' -' → logprob: -12.001358985900879
    9. '   ' → logprob: -12.501358985900879
    10. '```' → logprob: -12.938858985900879

Token 791: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38688212633132935
    2. ' -' → logprob: -1.1368820667266846
    3. '-y' → logprob: -11.636881828308105
    4. ' ' → logprob: -13.761881828308105
    5. '-
' → logprob: -14.886881828308105
    6. ',' → logprob: -15.136881828308105
    7. 'y' → logprob: -16.011882781982422
    8. '−' → logprob: -16.386882781982422
    9. ' y' → logprob: -16.511882781982422
    10. ')' → logprob: -16.761882781982422

Token 792: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10028818249702454
    2. 'min' → logprob: -2.350288152694702
    3. '(min' → logprob: -10.600288391113281
    4. ' y' → logprob: -10.850288391113281
    5. 's' → logprob: -11.225288391113281
    6. ' min' → logprob: -11.475288391113281
    7. '   ' → logprob: -11.975288391113281
    8. '(y' → logprob: -12.975288391113281
    9. '  ' → logprob: -14.100288391113281
    10. 'ys' → logprob: -14.350288391113281

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021198365837335587
    2. '0' → logprob: -3.896198272705078
    3. 'min' → logprob: -8.271198272705078
    4. 's' → logprob: -8.396198272705078
    5. '[' → logprob: -10.646198272705078
    6. ')' → logprob: -10.771198272705078
    7. 'start' → logprob: -10.896198272705078
    8. '(s' → logprob: -11.083698272705078
    9. '
' → logprob: -11.396198272705078
    10. ']' → logprob: -12.396198272705078

Token 794: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004705914470832795
    2. ')
' → logprob: -7.7504706382751465
    3. '):' → logprob: -11.625470161437988
    4. ' )' → logprob: -11.750470161437988
    5. ')+' → logprob: -12.125470161437988
    6. '   ' → logprob: -12.250470161437988
    7. '),' → logprob: -12.375470161437988
    8. ')}' → logprob: -13.500470161437988
    9. '):
' → logprob: -13.750470161437988
    10. '       ' → logprob: -14.125470161437988

Token 795: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4280516803264618
    2. '       ' → logprob: -1.9280517101287842
    3. '
' → logprob: -2.803051710128784
    4. '<|end|>' → logprob: -3.053051710128784
    5. ')' → logprob: -3.428051710128784
    6. ' and' → logprob: -3.928051710128784
    7. '           ' → logprob: -4.553051471710205
    8. ',' → logprob: -4.553051471710205
    9. '                   ' → logprob: -5.303051471710205
    10. ':' → logprob: -6.178051471710205

Token 796: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00920817255973816
    2. '(y' → logprob: -5.0092082023620605
    3. ' y' → logprob: -6.6342082023620605
    4. 'dy' → logprob: -7.1342082023620605
    5. 'x' → logprob: -9.009207725524902
    6. 's' → logprob: -9.134207725524902
    7. 'ys' → logprob: -10.009207725524902
    8. '(s' → logprob: -10.384207725524902
    9. '(' → logprob: -11.134207725524902
    10. 'not' → logprob: -11.384207725524902

Token 797: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024110035970807076
    2. '1' → logprob: -3.7741100788116455
    3. '<=' → logprob: -8.524109840393066
    4. '<|end|>' → logprob: -8.774109840393066
    5. '>=' → logprob: -8.899109840393066
    6. '>' → logprob: -9.649109840393066
    7. '```' → logprob: -9.774109840393066
    8. '==' → logprob: -10.024109840393066
    9. 'y' → logprob: -10.336609840393066
    10. ' <=' → logprob: -11.149109840393066

Token 798: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.060594215989112854
    2. ' >=' → logprob: -2.935594320297241
    3. '<=' → logprob: -5.685594081878662
    4. '==' → logprob: -6.435594081878662
    5. ' <=' → logprob: -8.68559455871582
    6. '!=' → logprob: -8.81059455871582
    7. '   ' → logprob: -9.43559455871582
    8. '=' → logprob: -9.56059455871582
    9. '>' → logprob: -9.81059455871582
    10. ' ==' → logprob: -10.31059455871582

Token 799: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004971051122993231
    2. 'min' → logprob: -5.379971027374268
    3. ' y' → logprob: -8.004971504211426
    4. '   ' → logprob: -12.129971504211426
    5. ' min' → logprob: -12.129971504211426
    6. '0' → logprob: -13.379971504211426
    7. 'ys' → logprob: -13.504971504211426
    8. ' ' → logprob: -14.629971504211426
    9. '  ' → logprob: -14.754971504211426
    10. '	y' → logprob: -14.879971504211426

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -13.000011444091797
    3. '```' → logprob: -13.375011444091797
    4. 's' → logprob: -13.500011444091797
    5. 'min' → logprob: -14.000011444091797
    6. '0' → logprob: -14.250011444091797
    7. 'y' → logprob: -14.250011444091797
    8. ' ' → logprob: -14.562511444091797
    9. '<|end|>' → logprob: -14.562511444091797
    10. ')' → logprob: -15.437511444091797

Token 801: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.054885219782590866
    2. 'else' → logprob: -2.929885149002075
    3. '	else' → logprob: -13.429884910583496
    4. ' ' → logprob: -14.929884910583496
    5. '       ' → logprob: -15.554884910583496
    6. '<|end|>' → logprob: -15.679884910583496
    7. '               ' → logprob: -15.804884910583496
    8. '           ' → logprob: -16.054885864257812
    9. ' or' → logprob: -16.554885864257812
    10. ' ' → logprob: -16.679885864257812

Token 802: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10776917636394501
    2. 'y' → logprob: -2.482769250869751
    3. '0' → logprob: -4.232769012451172
    4. ' abs' → logprob: -6.232769012451172
    5. ' y' → logprob: -7.107769012451172
    6. '(abs' → logprob: -7.607769012451172
    7. '(y' → logprob: -7.732769012451172
    8. 'min' → logprob: -8.982769012451172
    9. '   ' → logprob: -9.607769012451172
    10. ' ' → logprob: -10.107769012451172

Token 803: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12695971131324768
    2. '(y' → logprob: -2.126959800720215
    3. '(' → logprob: -11.001959800720215
    4. ' y' → logprob: -12.126959800720215
    5. 's' → logprob: -12.376959800720215
    6. '(s' → logprob: -14.001959800720215
    7. '0' → logprob: -14.251959800720215
    8. '	y' → logprob: -14.501959800720215
    9. '(x' → logprob: -14.751959800720215
    10. '   ' → logprob: -14.751959800720215

Token 804: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.6087021473795176e-05
    2. '1' → logprob: -10.625045776367188
    3. 'y' → logprob: -12.500045776367188
    4. '(y' → logprob: -12.500045776367188
    5. '-' → logprob: -12.750045776367188
    6. '[' → logprob: -13.062545776367188
    7. '(' → logprob: -13.312545776367188
    8. ' y' → logprob: -13.687545776367188
    9. '2' → logprob: -14.125045776367188
    10. ' -' → logprob: -14.187545776367188

Token 805: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761257410049438
    2. ' -' → logprob: -0.8261257410049438
    3. '-y' → logprob: -8.951126098632812
    4. 'y' → logprob: -10.701126098632812
    5. '0' → logprob: -10.951126098632812
    6. '1' → logprob: -12.201126098632812
    7. ' y' → logprob: -12.326126098632812
    8. ' ' → logprob: -12.826126098632812
    9. 'x' → logprob: -13.576126098632812
    10. '(y' → logprob: -14.076126098632812

Token 806: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00030424181022681296
    2. ' y' → logprob: -8.125304222106934
    3. '   ' → logprob: -13.250304222106934
    4. 'x' → logprob: -13.500304222106934
    5. 's' → logprob: -14.000304222106934
    6. '(y' → logprob: -14.000304222106934
    7. ' ' → logprob: -14.375304222106934
    8. '	y' → logprob: -14.500304222106934
    9. 'ys' → logprob: -14.937804222106934
    10. '  ' → logprob: -15.187804222106934

Token 807: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014201588928699493
    2. '1' → logprob: -4.264201641082764
    3. '0' → logprob: -10.264201164245605
    4. '[' → logprob: -13.264201164245605
    5. ' ' → logprob: -15.014201164245605
    6. 's' → logprob: -15.264201164245605
    7. 'y' → logprob: -15.264201164245605
    8. 'start' → logprob: -16.139202117919922
    9. ')' → logprob: -16.764202117919922
    10. '_start' → logprob: -17.201702117919922

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028171599842607975
    2. '):' → logprob: -8.50028133392334
    3. ')
' → logprob: -10.50028133392334
    4. ')+' → logprob: -10.62528133392334
    5. ')}' → logprob: -12.00028133392334
    6. '),' → logprob: -12.25028133392334
    7. ' )' → logprob: -12.50028133392334
    8. ')>' → logprob: -13.37528133392334
    9. ')]' → logprob: -13.87528133392334
    10. '```' → logprob: -14.00028133392334

Token 809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6495097875595093
    2. '<|end|>' → logprob: -1.7745097875595093
    3. ':' → logprob: -1.8995097875595093
    4. ')' → logprob: -2.899509906768799
    5. '       ' → logprob: -3.149509906768799
    6. '):' → logprob: -4.149509906768799
    7. '
' → logprob: -4.149509906768799
    8. ':
' → logprob: -5.024509906768799
    9. ',' → logprob: -5.524509906768799
    10. '           ' → logprob: -5.774509906768799

Token 810: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3027166724205017
    2. ' start' → logprob: -1.5527167320251465
    3. '               ' → logprob: -3.3027167320251465
    4. ' if' → logprob: -5.8027167320251465
    5. 'if' → logprob: -6.0527167320251465
    6. ' for' → logprob: -6.3027167320251465
    7. 'for' → logprob: -6.4277167320251465
    8. 'pos' → logprob: -6.5527167320251465
    9. '       ' → logprob: -6.9277167320251465
    10. '           ' → logprob: -7.6777167320251465

Token 811: ' better' (ID: 3432)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1971295177936554
    2. ' start' → logprob: -1.947129487991333
    3. '               ' → logprob: -3.572129487991333
    4. 'for' → logprob: -5.572129726409912
    5. ' for' → logprob: -6.322129726409912
    6. 'pos' → logprob: -7.197129726409912
    7. '   ' → logprob: -7.697129726409912
    8. '           ' → logprob: -8.322129249572754
    9. '                   ' → logprob: -8.322129249572754
    10. '#' → logprob: -8.697129249572754

Token 812: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0614128112792969
    2. 'pos' → logprob: -1.3114128112792969
    3. 'start' → logprob: -1.8114128112792969
    4. '       ' → logprob: -2.061412811279297
    5. ' start' → logprob: -2.936412811279297
    6. '           ' → logprob: -4.561412811279297
    7. ')' → logprob: -4.561412811279297
    8. '   ' → logprob: -5.936412811279297
    9. 'else' → logprob: -6.436412811279297
    10. '+' → logprob: -6.686412811279297

Token 813: ' define' (ID: 13174)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06399589031934738
    2. ' pos' → logprob: -2.813995838165283
    3. 'abs' → logprob: -7.188995838165283
    4. 'append' → logprob: -7.813995838165283
    5. '       ' → logprob: -8.688996315002441
    6. 'start' → logprob: -8.688996315002441
    7. ' abs' → logprob: -9.313996315002441
    8. '           ' → logprob: -9.313996315002441
    9. '(pos' → logprob: -9.563996315002441
    10. '_pos' → logprob: -9.688996315002441

Token 814: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4888781011104584
    2. ' pos' → logprob: -0.9888781309127808
    3. ' y' → logprob: -5.11387825012207
    4. ' s' → logprob: -5.61387825012207
    5. ' abs' → logprob: -6.86387825012207
    6. 'abs' → logprob: -7.11387825012207
    7. ' =' → logprob: -7.48887825012207
    8. 'y' → logprob: -7.86387825012207
    9. ')' → logprob: -7.86387825012207
    10. '0' → logprob: -7.86387825012207

Token 815: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.04104163870215416
    2. ' =' → logprob: -3.291041612625122
    3. '=' → logprob: -5.916041851043701
    4. '_on' → logprob: -8.791041374206543
    5. '=_' → logprob: -10.291041374206543
    6. ' _' → logprob: -10.416041374206543
    7. ')' → logprob: -11.291041374206543
    8. '               ' → logprob: -12.041041374206543
    9. ' along' → logprob: -12.166041374206543
    10. '           ' → logprob: -12.291041374206543

Token 816: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -3.702754474943504e-05
    2. 'along' → logprob: -11.87503719329834
    3. 'ng' → logprob: -12.12503719329834
    4. 'ing' → logprob: -12.12503719329834
    5. '```' → logprob: -12.62503719329834
    6. 'on' → logprob: -12.75003719329834
    7. 'eng' → logprob: -13.25003719329834
    8. 'ongs' → logprob: -13.25003719329834
    9. 'long' → logprob: -13.62503719329834
    10. 'ength' → logprob: -14.12503719329834

Token 817: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08903085440397263
    2. ' =' → logprob: -2.4640307426452637
    3. '=
' → logprob: -10.214031219482422
    4. '               ' → logprob: -10.839031219482422
    5. '                ' → logprob: -11.839031219482422
    6. ')' → logprob: -12.089031219482422
    7. '_al' → logprob: -12.214031219482422
    8. ' =
' → logprob: -12.839031219482422
    9. '=int' → logprob: -13.464031219482422
    10. ',' → logprob: -13.839031219482422

Token 818: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03249482065439224
    2. 'y' → logprob: -3.6574947834014893
    3. ' abs' → logprob: -5.282495021820068
    4. '(abs' → logprob: -7.657495021820068
    5. ' y' → logprob: -8.65749454498291
    6. '0' → logprob: -8.65749454498291
    7. 'min' → logprob: -9.40749454498291
    8. '(y' → logprob: -9.65749454498291
    9. 'pos' → logprob: -9.78249454498291
    10. '   ' → logprob: -10.03249454498291

Token 819: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5959288477897644
    2. '=' → logprob: -1.0959289073944092
    3. '_al' → logprob: -3.220928907394409
    4. '_from' → logprob: -3.595928907394409
    5. ' from' → logprob: -3.595928907394409
    6. ')' → logprob: -4.72092866897583
    7. ' =' → logprob: -4.97092866897583
    8. 'along' → logprob: -6.47092866897583
    9. ' along' → logprob: -6.97092866897583
    10. '(' → logprob: -8.470929145812988

Token 820: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7572779059410095
    2. 'y' → logprob: -0.7572779059410095
    3. 'x' → logprob: -3.6322779655456543
    4. ' y' → logprob: -3.7572779655456543
    5. ' s' → logprob: -5.132277965545654
    6. 'the' → logprob: -5.632277965545654
    7. ' the' → logprob: -6.507277965545654
    8. 'start' → logprob: -7.382277965545654
    9. ' x' → logprob: -7.757277965545654
    10. 'min' → logprob: -9.257277488708496

Token 821: ' point' (ID: 2438)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.32895007729530334
    2. ':' → logprob: -1.453950047492981
    3. ')' → logprob: -3.8289501667022705
    4. '_' → logprob: -5.578949928283691
    5. ' along' → logprob: -5.703949928283691
    6. '               ' → logprob: -5.828949928283691
    7. '):' → logprob: -5.953949928283691
    8. '           ' → logprob: -6.203949928283691
    9. '   ' → logprob: -6.328949928283691
    10. '       ' → logprob: -6.328949928283691

Token 822: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09762654453516006
    2. ':' → logprob: -2.9726264476776123
    3. '=' → logprob: -4.597626686096191
    4. ')' → logprob: -4.972626686096191
    5. '
' → logprob: -4.972626686096191
    6. ' if' → logprob: -5.347626686096191
    7. ' =' → logprob: -5.722626686096191
    8. '                   ' → logprob: -6.097626686096191
    9. '           ' → logprob: -6.972626686096191
    10. ',' → logprob: -6.972626686096191

Token 823: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017755240201950073
    2. ':' → logprob: -4.767755031585693
    3. '           ' → logprob: -6.142755031585693
    4. '                   ' → logprob: -6.642755031585693
    5. '\n' → logprob: -6.767755031585693
    6. '
' → logprob: -6.892755031585693
    7. ')' → logprob: -7.142755031585693
    8. '                ' → logprob: -8.017755508422852
    9. ' =' → logprob: -8.017755508422852
    10. '=' → logprob: -8.392755508422852

Token 824: ' pos' (ID: 1253)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7534133195877075
    2. 'pos' (adapté à ' pos') → logprob: -1.2534133195877075
    3. ' pos' → logprob: -2.628413200378418
    4. ' =' → logprob: -3.378413200378418
    5. ' y' → logprob: -3.503413200378418
    6. '0' → logprob: -4.003413200378418
    7. ' if' → logprob: -4.128413200378418
    8. '
' → logprob: -4.378413200378418
    9. '=' → logprob: -4.878413200378418
    10. '                ' → logprob: -5.253413200378418

Token 825: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.0013016649754717946
    2. ' =' → logprob: -6.7513017654418945
    3. '=' → logprob: -9.001301765441895
    4. '           ' → logprob: -13.376301765441895
    5. '   ' → logprob: -13.751301765441895
    6. '=_' → logprob: -13.876301765441895
    7. 'along' → logprob: -14.251301765441895
    8. '               ' → logprob: -14.501301765441895
    9. '       ' → logprob: -14.626301765441895
    10. '_at' → logprob: -14.626301765441895

Token 826: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.00835286732763052
    2. '_al' → logprob: -5.383352756500244
    3. 'along' → logprob: -6.133352756500244
    4. 's' → logprob: -7.508352756500244
    5. '=' → logprob: -8.258353233337402
    6. ' =' → logprob: -8.508353233337402
    7. '   ' → logprob: -9.258353233337402
    8. 'on' → logprob: -9.883353233337402
    9. 'ongs' → logprob: -10.008353233337402
    10. '```' → logprob: -10.258353233337402

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326553225517273
    2. ' =' → logprob: -1.3132655620574951
    3. ' +=' → logprob: -13.188265800476074
    4. '+=' → logprob: -13.938265800476074
    5. ')' → logprob: -15.063265800476074
    6. '=
' → logprob: -16.188264846801758
    7. '<|end|>' → logprob: -16.313264846801758
    8. ',' → logprob: -16.563264846801758
    9. ':' → logprob: -16.688264846801758
    10. 'if' → logprob: -16.813264846801758

Token 828: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12725156545639038
    2. 'y' → logprob: -2.127251625061035
    3. ' abs' → logprob: -8.252251625061035
    4. ' y' → logprob: -9.877251625061035
    5. '(abs' → logprob: -11.752251625061035
    6. '   ' → logprob: -13.502251625061035
    7. '(y' → logprob: -13.877251625061035
    8. 'min' → logprob: -15.877251625061035
    9. 'int' → logprob: -16.25225067138672
    10. ' ' → logprob: -16.25225067138672

Token 829: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.000805341056548059
    2. 'y' → logprob: -7.125805377960205
    3. '(' → logprob: -14.375804901123047
    4. '[y' → logprob: -15.250804901123047
    5. '	y' → logprob: -17.750804901123047
    6. '(x' → logprob: -17.875804901123047
    7. 's' → logprob: -17.875804901123047
    8. '(s' → logprob: -17.875804901123047
    9. ' y' → logprob: -18.125804901123047
    10. 'Y' → logprob: -18.500804901123047

Token 830: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8444881536415778e-05
    2. '-' → logprob: -11.250028610229492
    3. 'user' → logprob: -12.875028610229492
    4. '[' → logprob: -13.000028610229492
    5. ' -' → logprob: -13.125028610229492
    6. 's' → logprob: -13.375028610229492
    7. '_' → logprob: -13.375028610229492
    8. 'y' → logprob: -13.625028610229492
    9. ' ' → logprob: -14.250028610229492
    10. '[user' → logprob: -14.687528610229492

Token 831: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3484668731689453
    2. '-' → logprob: -1.2234668731689453
    3. '-y' → logprob: -11.473466873168945
    4. 'y' → logprob: -11.973466873168945
    5. ' ' → logprob: -13.348466873168945
    6. 's' → logprob: -14.223466873168945
    7. ' y' → logprob: -14.473466873168945
    8. '-s' → logprob: -14.973466873168945
    9. '[' → logprob: -15.223466873168945
    10. ',' → logprob: -15.223466873168945

Token 832: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001521049183793366
    2. ' y' → logprob: -6.501521110534668
    3. 's' → logprob: -11.876521110534668
    4. '   ' → logprob: -12.001521110534668
    5. 'ys' → logprob: -13.501521110534668
    6. 'min' → logprob: -14.126521110534668
    7. '  ' → logprob: -14.501521110534668
    8. ' ' → logprob: -14.626521110534668
    9. '       ' → logprob: -14.626521110534668
    10. '           ' → logprob: -14.751521110534668

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003977800370194018
    2. '0' → logprob: -8.250397682189941
    3. 's' → logprob: -9.125397682189941
    4. 'y' → logprob: -12.000397682189941
    5. '[' → logprob: -12.125397682189941
    6. '(s' → logprob: -12.750397682189941
    7. '```' → logprob: -12.750397682189941
    8. ' ' → logprob: -12.875397682189941
    9. ' s' → logprob: -13.437897682189941
    10. ')' → logprob: -13.937897682189941

Token 834: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.111979357432574e-05
    2. '<|end|>' → logprob: -10.37507152557373
    3. ')
' → logprob: -10.62507152557373
    4. ' )' → logprob: -11.37507152557373
    5. '       ' → logprob: -14.12507152557373
    6. '<|end|>' → logprob: -14.25007152557373
    7. '   ' → logprob: -14.37507152557373
    8. '),' → logprob: -14.87507152557373
    9. '):' → logprob: -15.00007152557373
    10. ')}' → logprob: -15.12507152557373

Token 835: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 836: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5031585693359375
    2. 'start' → logprob: -1.1281585693359375
    3. ' start' → logprob: -3.5031585693359375
    4. '           ' → logprob: -3.7531585693359375
    5. '   ' → logprob: -4.7531585693359375
    6. '               ' → logprob: -5.5031585693359375
    7. 'for' → logprob: -6.3781585693359375
    8. '                   ' → logprob: -6.6281585693359375
    9. ' for' → logprob: -6.7531585693359375
    10. ' if' → logprob: -7.7531585693359375

Token 837: ' directions' (ID: 24921)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36985981464385986
    2. '   ' → logprob: -1.8698598146438599
    3. ' start' → logprob: -2.1198596954345703
    4. '               ' → logprob: -4.11985969543457
    5. 'for' → logprob: -4.86985969543457
    6. '                   ' → logprob: -5.24485969543457
    7. ' for' → logprob: -5.86985969543457
    8. '       ' → logprob: -6.36985969543457
    9. '           ' → logprob: -7.11985969543457
    10. ' ' → logprob: -9.11985969543457

Token 838: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02116674743592739
    2. '=' → logprob: -4.521166801452637
    3. '.append' → logprob: -5.646166801452637
    4. '_allowed' → logprob: -5.646166801452637
    5. 'allowed' → logprob: -7.271166801452637
    6. '_possible' → logprob: -7.646166801452637
    7. '   ' → logprob: -8.396166801452637
    8. '=[' → logprob: -8.396166801452637
    9. 's' → logprob: -8.521166801452637
    10. ':' → logprob: -8.771166801452637

Token 839: ' along' (ID: 4251)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03996382653713226
    2. '[' → logprob: -3.539963722229004
    3. ' [(' → logprob: -4.914963722229004
    4. '[-' → logprob: -6.414963722229004
    5. ' [' → logprob: -7.414963722229004
    6. '(' → logprob: -8.039963722229004
    7. '[
' → logprob: -9.414963722229004
    8. '[((' → logprob: -9.914963722229004
    9. ' (' → logprob: -10.414963722229004
    10. '0' → logprob: -10.414963722229004

Token 840: ' dy' (ID: 11996)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9415901899337769
    2. '[' → logprob: -1.8165901899337769
    3. 's' → logprob: -1.8165901899337769
    4. '(' → logprob: -2.3165903091430664
    5. 'y' → logprob: -3.4415903091430664
    6. 'the' → logprob: -3.5665903091430664
    7. '1' → logprob: -3.8165903091430664
    8. '0' → logprob: -4.191590309143066
    9. '[-' → logprob: -4.191590309143066
    10. ' (' → logprob: -4.441590309143066

Token 841: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.517823338508606
    2. 's' → logprob: -1.642823338508606
    3. ' =' → logprob: -1.642823338508606
    4. '=[' → logprob: -5.142823219299316
    5. '                   ' → logprob: -6.267823219299316
    6. '1' → logprob: -6.392823219299316
    7. '               ' → logprob: -6.892823219299316
    8. '   ' → logprob: -7.017823219299316
    9. '=-' → logprob: -7.142823219299316
    10. '```' → logprob: -7.267823219299316

Token 842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002025708556175232
    2. '-' → logprob: -6.627025604248047
    3. ' ' → logprob: -7.377025604248047
    4. 's' → logprob: -10.377025604248047
    5. '0' → logprob: -11.252025604248047
    6. '+' → logprob: -11.627025604248047
    7. ' -' → logprob: -11.627025604248047
    8. '```' → logprob: -12.627025604248047
    9. '±' → logprob: -12.752025604248047
    10. '   ' → logprob: -12.877025604248047

Token 843: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09252717345952988
    2. 'or' → logprob: -3.217527151107788
    3. ' and' → logprob: -3.467527151107788
    4. ',' → logprob: -4.592527389526367
    5. ')' → logprob: -5.967527389526367
    6. 'and' → logprob: -6.467527389526367
    7. '<|end|>' → logprob: -6.467527389526367
    8. '   ' → logprob: -8.217527389526367
    9. ',
' → logprob: -8.717527389526367
    10. 's' → logprob: -8.717527389526367

Token 844: ' dy' (ID: 11996)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.041259344667196274
    2. ' -' → logprob: -3.291259288787842
    3. 'dy' → logprob: -6.416259288787842
    4. '0' → logprob: -7.041259288787842
    5. ' dy' → logprob: -7.416259288787842
    6. ' ' → logprob: -9.791259765625
    7. '-d' → logprob: -10.291259765625
    8. '   ' → logprob: -13.041259765625
    9. ' (' → logprob: -13.166259765625
    10. '(' → logprob: -13.166259765625

Token 845: '=-' (ID: 21714)
  Prédit: '=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.5765287280082703
    2. '=' → logprob: -0.8265287280082703
    3. '==-' → logprob: -8.701528549194336
    4. '-' → logprob: -8.701528549194336
    5. ' =' → logprob: -9.201528549194336
    6. '1' → logprob: -9.201528549194336
    7. '=(-' → logprob: -11.201528549194336
    8. '0' → logprob: -11.451528549194336
    9. '```' → logprob: -11.951528549194336
    10. ',' → logprob: -12.076528549194336

Token 846: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '-' → logprob: -11.625009536743164
    3. '```' → logprob: -15.875009536743164
    4. '0' → logprob: -17.500009536743164
    5. ' -' → logprob: -17.750009536743164
    6. ' ' → logprob: -18.125009536743164
    7. 's' → logprob: -18.687509536743164
    8. '...' → logprob: -19.437509536743164
    9. '{' → logprob: -19.500009536743164
    10. '１' → logprob: -19.625009536743164

Token 847: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2034098207950592
    2. '
' → logprob: -2.5784099102020264
    3. ',' → logprob: -2.8284099102020264
    4. '   ' → logprob: -4.203409671783447
    5. ',
' → logprob: -5.078409671783447
    6. '       ' → logprob: -5.203409671783447
    7. 'start' → logprob: -5.453409671783447
    8. '<|end|>' → logprob: -5.703409671783447
    9. ',start' → logprob: -5.828409671783447
    10. '           ' → logprob: -6.328409671783447

Token 848: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02398713491857052
    2. ',' → logprob: -4.023987293243408
    3. '<|end|>' → logprob: -6.023987293243408
    4. ',
' → logprob: -6.523987293243408
    5. '
' → logprob: -7.773987293243408
    6. '                
' → logprob: -8.14898681640625
    7. '   ' → logprob: -9.02398681640625
    8. '       ' → logprob: -9.14898681640625
    9. ' and' → logprob: -9.27398681640625
    10. ' for' → logprob: -9.39898681640625

Token 849: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07246348261833191
    2. ' start' → logprob: -3.3224635124206543
    3. 'for' → logprob: -3.9474635124206543
    4. '   ' → logprob: -4.572463512420654
    5. ' for' → logprob: -5.572463512420654
    6. '               ' → logprob: -8.447463035583496
    7. '                   ' → logprob: -9.822463035583496
    8. '           ' → logprob: -10.697463035583496
    9. '
' → logprob: -10.822463035583496
    10. 'dire' → logprob: -10.947463035583496

Token 850: ' But' (ID: 3072)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0467882938683033
    2. 'for' → logprob: -3.546788215637207
    3. ' start' → logprob: -4.296788215637207
    4. ' for' → logprob: -6.171788215637207
    5. '   ' → logprob: -7.171788215637207
    6. '               ' → logprob: -8.171788215637207
    7. '
' → logprob: -10.671788215637207
    8. '                   ' → logprob: -11.046788215637207
    9. 'pos' → logprob: -11.046788215637207
    10. 'dire' → logprob: -11.046788215637207

Token 851: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8210458755493164
    2. ' for' → logprob: -1.0710458755493164
    3. 'for' → logprob: -2.6960458755493164
    4. ' start' → logprob: -3.6960458755493164
    5. '#' → logprob: -4.071045875549316
    6. 'if' → logprob: -4.071045875549316
    7. ' the' → logprob: -4.196045875549316
    8. ' we' → logprob: -4.196045875549316
    9. 'start' → logprob: -4.696045875549316
    10. ' #' → logprob: -5.196045875549316

Token 852: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8874037265777588
    2. ' need' → logprob: -1.5124037265777588
    3. ' can' → logprob: -2.137403726577759
    4. 'continue' → logprob: -3.012403726577759
    5. ''ll' → logprob: -3.012403726577759
    6. '#' → logprob: -3.512403726577759
    7. ' have' → logprob: -3.762403726577759
    8. ' will' → logprob: -3.887403726577759
    9. 'need' → logprob: -3.887403726577759
    10. 'can' → logprob: -4.88740348815918

Token 853: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5433970093727112
    2. ' not' → logprob: -0.9183970093727112
    3. 'n't' → logprob: -3.9183969497680664
    4. 'nt' → logprob: -10.043396949768066
    5. 'n' → logprob: -10.168396949768066
    6. 'continue' → logprob: -10.543396949768066
    7. ' need' → logprob: -11.668396949768066
    8. 't' → logprob: -11.668396949768066
    9. ' continue' → logprob: -11.668396949768066
    10. 'consider' → logprob: -11.668396949768066

Token 854: ' know' (ID: 1761)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.7780485153198242
    2. 'consider' → logprob: -1.7780485153198242
    3. ' want' → logprob: -1.9030485153198242
    4. 'append' → logprob: -2.153048515319824
    5. ' continue' → logprob: -2.903048515319824
    6. ' need' → logprob: -2.903048515319824
    7. ' consider' → logprob: -3.153048515319824
    8. ' have' → logprob: -3.403048515319824
    9. 'continue' → logprob: -3.403048515319824
    10. 'add' → logprob: -3.528048515319824

Token 855: ' if' (ID: 538)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.7575175166130066
    2. ' if' → logprob: -1.1325175762176514
    3. 'which' → logprob: -2.6325175762176514
    4. ' whether' → logprob: -3.0075175762176514
    5. 'if' → logprob: -3.8825175762176514
    6. ' yet' → logprob: -3.8825175762176514
    7. ' the' → logprob: -4.882517337799072
    8. 'exact' → logprob: -4.882517337799072
    9. 'whether' → logprob: -5.007517337799072
    10. ' exactly' → logprob: -5.132517337799072

Token 856: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5221641063690186
    2. ' the' → logprob: -2.0221641063690186
    3. 'car' → logprob: -2.1471641063690186
    4. 'direction' → logprob: -3.2721641063690186
    5. ' direction' → logprob: -4.272164344787598
    6. 'which' → logprob: -4.272164344787598
    7. 'both' → logprob: -4.272164344787598
    8. 'we' → logprob: -4.772164344787598
    9. 'initial' → logprob: -4.897164344787598
    10. ' both' → logprob: -5.022164344787598

Token 857: ' point' (ID: 2438)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14526589214801788
    2. ' _' → logprob: -2.520265817642212
    3. '_d' → logprob: -4.395266056060791
    4. '_direction' → logprob: -4.645266056060791
    5. '_states' → logprob: -4.645266056060791
    6. '_state' → logprob: -5.270266056060791
    7. ')' → logprob: -6.270266056060791
    8. ' direction' → logprob: -6.395266056060791
    9. '_positions' → logprob: -6.395266056060791
    10. '_pos' → logprob: -6.895266056060791

Token 858: ' corresponds' (ID: 66938)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4618522822856903
    2. ',' → logprob: -2.4618523120880127
    3. 'is' → logprob: -2.8368523120880127
    4. ' can' → logprob: -3.3368523120880127
    5. ')' → logprob: -3.5868523120880127
    6. ' has' → logprob: -3.7118523120880127
    7. '#' → logprob: -4.086852073669434
    8. ' knows' → logprob: -4.211852073669434
    9. ' or' → logprob: -4.336852073669434
    10. '...' → logprob: -4.711852073669434

Token 859: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6326991319656372
    2. ' to' → logprob: -0.7576991319656372
    3. '<|end|>' → logprob: -10.382699012756348
    4. ' exactly' → logprob: -11.507699012756348
    5. '```' → logprob: -11.757699012756348
    6. '   ' → logprob: -11.757699012756348
    7. ' ' → logprob: -12.132699012756348
    8. '_to' → logprob: -12.382699012756348
    9. '    ' → logprob: -12.632699012756348
    10. '<|end|>' → logprob: -12.757699012756348

Token 860: ' position' (ID: 4010)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6278925538063049
    2. '0' → logprob: -1.1278924942016602
    3. 'the' → logprob: -3.37789249420166
    4. 's' → logprob: -3.87789249420166
    5. ' dy' → logprob: -4.00289249420166
    6. 'start' → logprob: -4.12789249420166
    7. 'pos' → logprob: -4.37789249420166
    8. 'y' → logprob: -4.50289249420166
    9. 'dx' → logprob: -4.87789249420166
    10. 'direction' → logprob: -5.12789249420166

Token 861: ' ' (ID: 220)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.009859264828264713
    2. ' _' → logprob: -5.634859085083008
    3. 'along' → logprob: -6.384859085083008
    4. ' along' → logprob: -6.509859085083008
    5. '_' → logprob: -7.009859085083008
    6. '0' → logprob: -7.134859085083008
    7. ' ' → logprob: -7.884859085083008
    8. 'al' → logprob: -7.884859085083008
    9. ')' → logprob: -9.509859085083008
    10. '_on' → logprob: -9.509859085083008

Token 862: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.771919310092926
    2. '_al' → logprob: -0.771919310092926
    3. 'along' → logprob: -2.7719192504882812
    4. ' ' → logprob: -5.021919250488281
    5. ' along' → logprob: -6.271919250488281
    6. 'on' → logprob: -6.646919250488281
    7. 'al' → logprob: -6.646919250488281
    8. '=' → logprob: -7.646919250488281
    9. '   ' → logprob: -8.146919250488281
    10. 'at' → logprob: -8.646919250488281

Token 863: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3457735478878021
    2. ',' → logprob: -2.470773458480835
    3. '               ' → logprob: -3.095773458480835
    4. ':' → logprob: -3.095773458480835
    5. '   ' → logprob: -3.720773458480835
    6. '.' → logprob: -3.845773458480835
    7. ' and' → logprob: -3.970773458480835
    8. '
' → logprob: -4.220773696899414
    9. ')' → logprob: -4.470773696899414
    10. ' for' → logprob: -5.220773696899414

Token 864: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7326159477233887
    2. '1' → logprob: -1.1076159477233887
    3. 'position' → logprob: -2.4826159477233887
    4. 't' → logprob: -3.4826159477233887
    5. '100' → logprob: -4.482615947723389
    6. 'len' → logprob: -4.482615947723389
    7. ' length' → logprob: -4.607615947723389
    8. 'street' → logprob: -4.607615947723389
    9. 'n' → logprob: -4.732615947723389
    10. ' position' → logprob: -5.607615947723389

Token 865: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15364108979701996
    2. ' or' → logprob: -3.0286409854888916
    3. ':' → logprob: -3.2786409854888916
    4. ',' → logprob: -3.9036409854888916
    5. '   ' → logprob: -5.028641223907471
    6. ' )' → logprob: -5.153641223907471
    7. '.' → logprob: -5.403641223907471
    8. '<|end|>' → logprob: -5.528641223907471
    9. '):' → logprob: -5.778641223907471
    10. ' on' → logprob: -6.028641223907471

Token 866: '               ' (ID: 506)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6797900795936584
    2. ' or' → logprob: -1.4297900199890137
    3. ',' → logprob: -2.4297900199890137
    4. '   ' → logprob: -2.5547900199890137
    5. '<|end|>' → logprob: -3.3047900199890137
    6. ' ' → logprob: -4.304790019989014
    7. ')' → logprob: -5.054790019989014
    8. ':' → logprob: -5.429790019989014
    9. '```' → logprob: -5.679790019989014
    10. '               ' → logprob: -5.679790019989014

Token 867: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4496736526489258
    2. ' start' → logprob: -2.074673652648926
    3. '   ' → logprob: -2.574673652648926
    4. ' for' → logprob: -3.074673652648926
    5. '       ' → logprob: -3.199673652648926
    6. 'start' → logprob: -3.199673652648926
    7. ' continue' → logprob: -4.324673652648926
    8. '                   ' → logprob: -5.074673652648926
    9. '           ' → logprob: -5.574673652648926
    10. 'continue' → logprob: -5.699673652648926

Token 868: ' We' (ID: 1416)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7356035709381104
    2. ' start' → logprob: -1.1106035709381104
    3. ' for' → logprob: -2.2356035709381104
    4. 'for' → logprob: -3.6106035709381104
    5. '               ' → logprob: -3.7356035709381104
    6. '   ' → logprob: -3.8606035709381104
    7. '                   ' → logprob: -5.360603332519531
    8. ' if' → logprob: -6.110603332519531
    9. '
' → logprob: -6.360603332519531
    10. ' continue' → logprob: -6.985603332519531

Token 869: ' defined' (ID: 9113)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2648089826107025
    2. ' can' → logprob: -2.3898088932037354
    3. 'continue' → logprob: -2.7648088932037354
    4. ''ll' → logprob: -3.1398088932037354
    5. ' need' → logprob: -4.3898091316223145
    6. ' will' → logprob: -5.2648091316223145
    7. ' should' → logprob: -5.6398091316223145
    8. ' have' → logprob: -5.7648091316223145
    9. '   ' → logprob: -6.5148091316223145
    10. 'can' → logprob: -6.7648091316223145

Token 870: ' direction' (ID: 9262)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04274794086813927
    2. 'position' → logprob: -4.167747974395752
    3. 'the' → logprob: -4.167747974395752
    4. 'direction' → logprob: -5.792747974395752
    5. 'start' → logprob: -6.167747974395752
    6. 'positions' → logprob: -6.667747974395752
    7. 'dire' → logprob: -7.167747974395752
    8. 's' → logprob: -7.542747974395752
    9. 'that' → logprob: -7.667747974395752
    10. ' pos' → logprob: -7.792747974395752

Token 871: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9835670590400696
    2. ' =' → logprob: -1.1085669994354248
    3. 's' → logprob: -2.358566999435425
    4. ')' → logprob: -3.108566999435425
    5. ',' → logprob: -3.108566999435425
    6. '_' → logprob: -3.483566999435425
    7. 'al' → logprob: -3.733566999435425
    8. ':' → logprob: -4.233567237854004
    9. '   ' → logprob: -4.733567237854004
    10. '(s' → logprob: -5.358567237854004

Token 872: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.32145440578460693
    2. 's' → logprob: -1.321454405784607
    3. 'x' → logprob: -5.0714545249938965
    4. ' start' → logprob: -6.9464545249938965
    5. 'the' → logprob: -7.9464545249938965
    6. ' s' → logprob: -7.9464545249938965
    7. ''s' → logprob: -10.446454048156738
    8. 'xs' → logprob: -10.821454048156738
    9. '_start' → logprob: -10.946454048156738
    10. '0' → logprob: -10.946454048156738

Token 873: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2023872137069702
    2. ':' → logprob: -1.8273872137069702
    3. '   ' → logprob: -1.8273872137069702
    4. ',' → logprob: -1.9523872137069702
    5. '<|end|>' → logprob: -2.7023873329162598
    6. '       ' → logprob: -3.9523873329162598
    7. ' =' → logprob: -4.20238733291626
    8. '               ' → logprob: -4.32738733291626
    9. '```' → logprob: -4.32738733291626
    10. '           ' → logprob: -4.32738733291626

Token 874: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0002613358374219388
    2. ' end' → logprob: -8.250261306762695
    3. '=end' → logprob: -18.875261306762695
    4. '_end' → logprob: -19.000261306762695
    5. '[end' → logprob: -19.875261306762695
    6. ',end' → logprob: -20.125261306762695
    7. '(end' → logprob: -20.125261306762695
    8. '	end' → logprob: -20.750261306762695
    9. '.end' → logprob: -21.625261306762695
    10. '```' → logprob: -21.625261306762695

Token 875: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9919484853744507
    2. '   ' → logprob: -1.2419484853744507
    3. ')' → logprob: -1.3669484853744507
    4. '               ' → logprob: -3.7419486045837402
    5. '<|end|>' → logprob: -4.61694860458374
    6. ')
' → logprob: -4.99194860458374
    7. ',' → logprob: -5.11694860458374
    8. ':' → logprob: -5.24194860458374
    9. '       ' → logprob: -5.36694860458374
    10. ' if' → logprob: -5.86694860458374

Token 876: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.33087393641471863
    2. ' continue' → logprob: -1.955873966217041
    3. 'continue' → logprob: -3.330873966217041
    4. ')' → logprob: -3.705873966217041
    5. ' ' → logprob: -4.080873966217041
    6. ' and' → logprob: -4.455873966217041
    7. '   ' → logprob: -4.580873966217041
    8. '<|end|>' → logprob: -5.330873966217041
    9. ' 
' → logprob: -5.455873966217041
    10. ' continues' → logprob: -5.705873966217041

Token 877: ' distance' (ID: 9324)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.0757057666778564
    2. 'start' → logprob: -1.2007057666778564
    3. ' if' → logprob: -1.7007057666778564
    4. ' for' → logprob: -2.4507057666778564
    5. 'if' → logprob: -3.7007057666778564
    6. ' continue' → logprob: -3.9507057666778564
    7. 'for' → logprob: -4.075705528259277
    8. 'continue' → logprob: -4.325705528259277
    9. '#' → logprob: -5.200705528259277
    10. ' we' → logprob: -5.575705528259277

Token 878: ' along' (ID: 4251)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -1.128433346748352
    2. '=' → logprob: -1.753433346748352
    3. ')' → logprob: -1.878433346748352
    4. '<|end|>' → logprob: -2.0034332275390625
    5. '<|end|>' → logprob: -2.1284332275390625
    6. ' =' → logprob: -3.5034332275390625
    7. 'from' → logprob: -4.1284332275390625
    8. '_from' → logprob: -4.5034332275390625
    9. ' is' → logprob: -4.7534332275390625
    10. ' along' → logprob: -5.5034332275390625

Token 879: ' is' (ID: 382)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5626658797264099
    2. 's' → logprob: -1.1876659393310547
    3. ' the' → logprob: -2.5626659393310547
    4. ' s' → logprob: -3.9376659393310547
    5. '0' → logprob: -4.062665939331055
    6. 'street' → logprob: -4.937665939331055
    7. 'line' → logprob: -7.062665939331055
    8. ' street' → logprob: -7.562665939331055
    9. '[' → logprob: -7.687665939331055
    10. '```' → logprob: -7.687665939331055

Token 880: ' from' (ID: 591)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7827883958816528
    2. ' pos' → logprob: -0.9077883958816528
    3. '0' → logprob: -3.0327882766723633
    4. ' y' → logprob: -3.5327882766723633
    5. ' abs' → logprob: -3.5327882766723633
    6. 'abs' → logprob: -4.407788276672363
    7. 'y' → logprob: -4.407788276672363
    8. 'position' → logprob: -6.157788276672363
    9. ' ' → logprob: -6.532788276672363
    10. ' position' → logprob: -6.657788276672363

Token 881: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2006760686635971
    2. 's' → logprob: -1.9506760835647583
    3. 'y' → logprob: -4.075675964355469
    4. ' start' → logprob: -4.200675964355469
    5. 'the' → logprob: -5.950675964355469
    6. ' s' → logprob: -6.075675964355469
    7. ' y' → logprob: -7.075675964355469
    8. '0' → logprob: -7.325675964355469
    9. 'x' → logprob: -7.575675964355469
    10. ' the' → logprob: -8.325675964355469

Token 882: ' point' (ID: 2438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05201362445950508
    2. '<|end|>' → logprob: -4.052013397216797
    3. '```' → logprob: -4.052013397216797
    4. 'point' → logprob: -4.927013397216797
    5. ' point' → logprob: -6.802013397216797
    6. '_point' → logprob: -7.052013397216797
    7. '_al' → logprob: -7.052013397216797
    8. ')
' → logprob: -7.177013397216797
    9. '<|end|>' → logprob: -7.552013397216797
    10. '0' → logprob: -7.677013397216797

Token 883: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36200520396232605
    2. ')' → logprob: -1.7370052337646484
    3. '<|end|>' → logprob: -2.4870052337646484
    4. '.' → logprob: -4.487005233764648
    5. ':' → logprob: -4.612005233764648
    6. ',' → logprob: -5.237005233764648
    7. '<|end|>' → logprob: -5.487005233764648
    8. '       ' → logprob: -5.987005233764648
    9. '\n' → logprob: -5.987005233764648
    10. '```' → logprob: -6.237005233764648

Token 885: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17845827341079712
    2. '       ' → logprob: -2.6784582138061523
    3. '   ' → logprob: -3.1784582138061523
    4. 'start' (adapté à ' start') → logprob: -4.303458213806152
    5. ' start' → logprob: -5.303458213806152
    6. ')' → logprob: -5.303458213806152
    7. ' for' → logprob: -5.428458213806152
    8. '                   ' → logprob: -5.553458213806152
    9. ' if' → logprob: -5.803458213806152
    10. '           ' → logprob: -5.803458213806152

Token 886: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0002060436672763899
    2. '_positions' → logprob: -9.000205993652344
    3. '_' → logprob: -10.125205993652344
    4. 'States' → logprob: -11.125205993652344
    5. ')' → logprob: -11.750205993652344
    6. '_points' → logprob: -12.500205993652344
    7. ')_' → logprob: -12.750205993652344
    8. 's' → logprob: -13.250205993652344
    9. '```' → logprob: -13.750205993652344
    10. ' _' → logprob: -13.875205993652344

Token 887: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011102409102022648
    2. '.' → logprob: -4.511102199554443
    3. '.extend' → logprob: -10.011102676391602
    4. 'append' → logprob: -12.636102676391602
    5. '.app' → logprob: -13.261102676391602
    6. ' .' → logprob: -13.511102676391602
    7. '+=' → logprob: -14.136102676391602
    8. ').' → logprob: -14.386102676391602
    9. '.add' → logprob: -14.761102676391602
    10. '=' → logprob: -15.011102676391602

Token 888: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0014891503378748894
    2. '(' → logprob: -7.376489162445068
    3. '[(' → logprob: -7.626489162445068
    4. '([(' → logprob: -8.62648868560791
    5. '(((' → logprob: -8.75148868560791
    6. ' ((' → logprob: -11.62648868560791
    7. '({'' → logprob: -11.62648868560791
    8. '(('' → logprob: -11.75148868560791
    9. '   ' → logprob: -12.25148868560791
    10. '[((' → logprob: -12.75148868560791

Token 889: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0445127372804563e-05
    2. ' s' → logprob: -12.00001049041748
    3. '(s' → logprob: -13.12501049041748
    4. 'i' → logprob: -14.37501049041748
    5. '   ' → logprob: -14.37501049041748
    6. ''s' → logprob: -14.62501049041748
    7. '{s' → logprob: -15.37501049041748
    8. '`s' → logprob: -16.125009536743164
    9. '(' → logprob: -16.750009536743164
    10. '```' → logprob: -17.000009536743164

Token 890: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.001331667648628354
    2. '[' → logprob: -7.251331806182861
    3. ''s' → logprob: -8.001331329345703
    4. '{'' → logprob: -9.126331329345703
    5. ''' → logprob: -9.376331329345703
    6. ')['' → logprob: -10.751331329345703
    7. ')' → logprob: -11.251331329345703
    8. ' ['' → logprob: -11.376331329345703
    9. ']['' → logprob: -11.751331329345703
    10. '[
' → logprob: -12.251331329345703

Token 891: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.14690828323364258
    2. ''id' → logprob: -2.0219082832336426
    3. '['' → logprob: -6.396908283233643
    4. '0' → logprob: -6.646908283233643
    5. ''s' → logprob: -7.396908283233643
    6. ''' → logprob: -8.396907806396484
    7. ''i' → logprob: -8.521907806396484
    8. '"id' → logprob: -9.271907806396484
    9. ' '' → logprob: -10.396907806396484
    10. '{'' → logprob: -10.771907806396484

Token 892: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005881795077584684
    2. ' ,' → logprob: -7.625588417053223
    3. '),' → logprob: -10.250588417053223
    4. '0' → logprob: -10.875588417053223
    5. ',s' → logprob: -11.625588417053223
    6. ',x' → logprob: -11.750588417053223
    7. ',pos' → logprob: -11.875588417053223
    8. ',
' → logprob: -12.250588417053223
    9. '',' → logprob: -12.500588417053223
    10. ',start' → logprob: -12.875588417053223

Token 893: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2113979209971149e-05
    2. '0' → logprob: -12.375012397766113
    3. ' pos' → logprob: -12.500012397766113
    4. '   ' → logprob: -13.250012397766113
    5. '(pos' → logprob: -13.750012397766113
    6. ''' → logprob: -14.500012397766113
    7. '(' → logprob: -15.375012397766113
    8. 'position' → logprob: -16.500011444091797
    9. '[pos' → logprob: -16.875011444091797
    10. '('' → logprob: -16.875011444091797

Token 894: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -2.3438327843905427e-05
    2. ')' → logprob: -11.00002384185791
    3. 'along' → logprob: -13.25002384185791
    4. '[' → logprob: -13.75002384185791
    5. 'al' → logprob: -14.12502384185791
    6. ')_' → logprob: -14.12502384185791
    7. 'Along' → logprob: -15.75002384185791
    8. '<|end|>' → logprob: -15.75002384185791
    9. 'alwa' → logprob: -16.000022888183594
    10. '_' → logprob: -16.125022888183594

Token 895: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.00011069540778407827
    2. 'ng' → logprob: -9.250110626220703
    3. '_al' → logprob: -12.125110626220703
    4. 'along' → logprob: -12.375110626220703
    5. 'g' → logprob: -14.125110626220703
    6. 'long' → logprob: -14.375110626220703
    7. 'on' → logprob: -14.625110626220703
    8. 'Along' → logprob: -14.625110626220703
    9. 'st' → logprob: -14.875110626220703
    10. 's' → logprob: -15.000110626220703

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. ' ,' → logprob: -11.000036239624023
    3. ',
' → logprob: -11.625036239624023
    4. '))' → logprob: -11.875036239624023
    5. ')' → logprob: -14.000036239624023
    6. '0' → logprob: -14.125036239624023
    7. ','' → logprob: -14.250036239624023
    8. '   ' → logprob: -14.625036239624023
    9. '),' → logprob: -15.500036239624023
    10. ',None' → logprob: -16.125036239624023

Token 897: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054799340665340424
    2. '-' → logprob: -3.3047993183135986
    3. '0' → logprob: -4.679799556732178
    4. '(' → logprob: -5.304799556732178
    5. '+' → logprob: -6.804799556732178
    6. ''' → logprob: -8.05479907989502
    7. ' ' → logprob: -8.42979907989502
    8. 's' → logprob: -8.67979907989502
    9. 'dy' → logprob: -9.42979907989502
    10. '('' → logprob: -9.42979907989502

Token 898: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -7.465036105713807e-06
    2. ']['' → logprob: -13.000007629394531
    3. ' ['' → logprob: -13.500007629394531
    4. '[' → logprob: -14.000007629394531
    5. ''' → logprob: -14.125007629394531
    6. ''s' → logprob: -14.375007629394531
    7. '   ' → logprob: -14.625007629394531
    8. ')['' → logprob: -15.625007629394531
    9. '["' → logprob: -15.875007629394531
    10. '{'' → logprob: -15.875007629394531

Token 899: 'dx' (ID: 22100)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.7053101658821106
    2. 'dx' → logprob: -1.2053101062774658
    3. ''' → logprob: -1.9553101062774658
    4. ''d' → logprob: -2.955310106277466
    5. '['' → logprob: -5.955310344696045
    6. 'id' → logprob: -6.580310344696045
    7. ''s' → logprob: -6.705310344696045
    8. 'data' → logprob: -6.830310344696045
    9. 'length' → logprob: -6.955310344696045
    10. ''id' → logprob: -7.080310344696045

Token 900: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05351774021983147
    2. ' ,' → logprob: -3.9285178184509277
    3. '],' → logprob: -4.053517818450928
    4. '),' → logprob: -4.803517818450928
    5. ']))' → logprob: -5.678517818450928
    6. '']))' → logprob: -7.303517818450928
    7. ''],' → logprob: -7.553517818450928
    8. ',s' → logprob: -8.17851734161377
    9. ' ],' → logprob: -8.55351734161377
    10. ']' → logprob: -8.67851734161377

Token 901: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02056559920310974
    2. ' s' → logprob: -3.8955655097961426
    3. ' ' → logprob: -12.1455659866333
    4. '-s' → logprob: -12.2705659866333
    5. '   ' → logprob: -12.3955659866333
    6. '-' → logprob: -13.6455659866333
    7. '0' → logprob: -13.7705659866333
    8. '_s' → logprob: -13.7705659866333
    9. '(s' → logprob: -13.8955659866333
    10. '  ' → logprob: -14.2705659866333

Token 902: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.4272752852994017e-05
    2. ''' → logprob: -11.12502384185791
    3. '[' → logprob: -12.62502384185791
    4. ''y' → logprob: -13.37502384185791
    5. ''s' → logprob: -13.62502384185791
    6. ''d' → logprob: -13.75002384185791
    7. 'dy' → logprob: -14.12502384185791
    8. '[
' → logprob: -14.37502384185791
    9. ''ll' → logprob: -15.87502384185791
    10. ''re' → logprob: -16.125024795532227

Token 903: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.8908587662735954e-05
    2. ''' → logprob: -11.125019073486328
    3. '['' → logprob: -12.875019073486328
    4. ''d' → logprob: -13.750019073486328
    5. ' dy' → logprob: -16.000019073486328
    6. '   ' → logprob: -16.000019073486328
    7. '.dy' → logprob: -16.375019073486328
    8. '']' → logprob: -17.000019073486328
    9. '`' → logprob: -17.250019073486328
    10. 'd' → logprob: -18.000019073486328

Token 904: '']))
' (ID: 49740)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003382038848940283
    2. ')' → logprob: -8.500338554382324
    3. '))
' → logprob: -10.000338554382324
    4. ' ))' → logprob: -10.500338554382324
    5. ''))' → logprob: -10.625338554382324
    6. ')))' → logprob: -11.125338554382324
    7. '),' → logprob: -11.375338554382324
    8. ',' → logprob: -12.000338554382324
    9. '))

' → logprob: -13.500338554382324
    10. '   ' → logprob: -14.250338554382324

Token 905: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 906: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020540240220725536
    2. 'start' (adapté à ' start') → logprob: -6.252054214477539
    3. '           ' → logprob: -10.127054214477539
    4. '       ' → logprob: -10.252054214477539
    5. ' start' → logprob: -10.502054214477539
    6. '   ' → logprob: -11.627054214477539
    7. '```' → logprob: -12.127054214477539
    8. '                   ' → logprob: -13.127054214477539
    9. ',' → logprob: -13.377054214477539
    10. '
' → logprob: -13.502054214477539

Token 907: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00019984507525805384
    2. '_' → logprob: -8.625200271606445
    3. 's' → logprob: -11.625200271606445
    4. '_s' → logprob: -12.750200271606445
    5. 'States' → logprob: -13.250200271606445
    6. 'states' → logprob: -13.250200271606445
    7. '_tokens' → logprob: -13.500200271606445
    8. '```' → logprob: -14.125200271606445
    9. '_st' → logprob: -14.875200271606445
    10. ')' → logprob: -14.875200271606445

Token 908: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029849296435713768
    2. '<|end|>' → logprob: -4.029849529266357
    3. '.extend' → logprob: -4.529849529266357
    4. '.' → logprob: -7.654849529266357
    5. ')' → logprob: -9.1548490524292
    6. '.pop' → logprob: -9.6548490524292
    7. ').' → logprob: -9.7798490524292
    8. '.clear' → logprob: -9.7798490524292
    9. 'append' → logprob: -10.6548490524292
    10. '.setdefault' → logprob: -11.2798490524292

Token 909: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015217645559459925
    2. '(' → logprob: -6.501521587371826
    3. '(s' → logprob: -11.251522064208984
    4. '(
' → logprob: -12.501522064208984
    5. ' (' → logprob: -13.251522064208984
    6. ' ((' → logprob: -14.876522064208984
    7. '(('' → logprob: -15.751522064208984
    8. '   ' → logprob: -16.376522064208984
    9. ' ' → logprob: -16.626522064208984
    10. '```' → logprob: -16.751522064208984

Token 910: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014323067443910986
    2. '(s' → logprob: -8.875143051147461
    3. ' s' → logprob: -12.625143051147461
    4. '{s' → logprob: -16.87514305114746
    5. '	s' → logprob: -18.00014305114746
    6. '(' → logprob: -18.00014305114746
    7. ')s' → logprob: -18.12514305114746
    8. '`s' → logprob: -18.25014305114746
    9. ' (' → logprob: -18.62514305114746
    10. '[s' → logprob: -18.87514305114746

Token 911: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0001499060745118186
    2. '[' → logprob: -8.875149726867676
    3. ''s' → logprob: -12.625149726867676
    4. '('' → logprob: -13.000149726867676
    5. ''' → logprob: -13.375149726867676
    6. '[s' → logprob: -13.875149726867676
    7. 's' → logprob: -14.500149726867676
    8. ')' → logprob: -15.375149726867676
    9. '{'' → logprob: -15.625149726867676
    10. '['_' → logprob: -15.750149726867676

Token 912: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.582958996295929
    2. ''id' → logprob: -0.832958996295929
    3. '['' → logprob: -5.207959175109863
    4. ''s' → logprob: -6.582959175109863
    5. 's' → logprob: -9.457959175109863
    6. '"id' → logprob: -10.332959175109863
    7. '[id' → logprob: -11.957959175109863
    8. ''i' → logprob: -12.207959175109863
    9. ' id' → logprob: -12.207959175109863
    10. '0' → logprob: -13.082959175109863

Token 913: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008903791895136237
    2. '',' → logprob: -7.375890254974365
    3. ' ,' → logprob: -8.375890731811523
    4. '‌,' → logprob: -11.375890731811523
    5. '`,' → logprob: -12.000890731811523
    6. '>,' → logprob: -12.625890731811523
    7. '),' → logprob: -13.250890731811523
    8. ',pos' → logprob: -13.750890731811523
    9. ' ' → logprob: -13.875890731811523
    10. '],' → logprob: -14.000890731811523

Token 914: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0015029559144750237
    2. ' pos' → logprob: -6.501502990722656
    3. '0' → logprob: -14.876502990722656
    4. 'abs' → logprob: -16.126502990722656
    5. '(pos' → logprob: -16.751502990722656
    6. '	pos' → logprob: -16.751502990722656
    7. '   ' → logprob: -17.001502990722656
    8. '_pos' → logprob: -17.376502990722656
    9. 'Pos' → logprob: -17.751502990722656
    10. ',pos' → logprob: -18.126502990722656

Token 915: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.012638313695788383
    2. '['' → logprob: -4.387638092041016
    3. ''al' → logprob: -10.012638092041016
    4. '[-' → logprob: -11.387638092041016
    5. 'al' → logprob: -11.512638092041016
    6. '-' → logprob: -11.637638092041016
    7. '[' → logprob: -11.637638092041016
    8. 'Al' → logprob: -12.137638092041016
    9. '-al' → logprob: -12.137638092041016
    10. '['_' → logprob: -12.387638092041016

Token 916: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.11955079436302185
    2. 'along' → logprob: -2.6195507049560547
    3. '_al' → logprob: -3.3695507049560547
    4. 'Along' → logprob: -5.744550704956055
    5. 'ing' → logprob: -7.744550704956055
    6. 'long' → logprob: -7.994550704956055
    7. 'al' → logprob: -8.244550704956055
    8. ' along' → logprob: -8.369550704956055
    9. '1' → logprob: -8.869550704956055
    10. 'ng' → logprob: -9.369550704956055

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003066222125198692
    2. ',s' → logprob: -8.625307083129883
    3. ' ,' → logprob: -9.375307083129883
    4. ',
' → logprob: -10.500307083129883
    5. ',-' → logprob: -11.375307083129883
    6. ',,' → logprob: -14.375307083129883
    7. ',

' → logprob: -15.000307083129883
    8. '',' → logprob: -15.000307083129883
    9. '`,' → logprob: -15.250307083129883
    10. '```' → logprob: -15.375307083129883

Token 918: ' -' (ID: 533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03785567358136177
    2. ' s' → logprob: -3.412855625152588
    3. '-s' → logprob: -5.662855625152588
    4. '0' → logprob: -7.412855625152588
    5. ' -' → logprob: -9.162856101989746
    6. '-' → logprob: -11.412856101989746
    7. ' ' → logprob: -12.412856101989746
    8. '   ' → logprob: -13.162856101989746
    9. '_s' → logprob: -13.912856101989746
    10. '	s' → logprob: -14.287856101989746

Token 919: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.60414821645827e-06
    2. ' s' → logprob: -12.375004768371582
    3. '1' → logprob: -15.500004768371582
    4. '   ' → logprob: -17.375003814697266
    5. '0' → logprob: -18.125003814697266
    6. '(s' → logprob: -19.250003814697266
    7. '```' → logprob: -19.375003814697266
    8. '_s' → logprob: -19.750003814697266
    9. '       ' → logprob: -19.875003814697266
    10. '           ' → logprob: -20.000003814697266

Token 920: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00020103710994590074
    2. 's' → logprob: -8.875201225280762
    3. ''s' → logprob: -9.875201225280762
    4. '[s' → logprob: -12.000201225280762
    5. '[' → logprob: -13.250201225280762
    6. ''' → logprob: -14.125201225280762
    7. '["' → logprob: -15.375201225280762
    8. '[
' → logprob: -15.625201225280762
    9. '{'' → logprob: -15.750201225280762
    10. 'data' → logprob: -16.625200271606445

Token 921: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.3856492842023727e-06
    2. ' dx' → logprob: -13.875000953674316
    3. '_dx' → logprob: -15.500000953674316
    4. '['' → logprob: -15.875000953674316
    5. 'data' → logprob: -16.750001907348633
    6. ''d' → logprob: -17.375001907348633
    7. '.dx' → logprob: -17.500001907348633
    8. '1' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '0' → logprob: -18.500001907348633

Token 922: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012226833961904049
    2. '',' → logprob: -4.7622270584106445
    3. ' ,' → logprob: -5.8872270584106445
    4. '],' → logprob: -7.5122270584106445
    5. ''],' → logprob: -8.512227058410645
    6. ',s' → logprob: -10.762227058410645
    7. ' ',' → logprob: -11.387227058410645
    8. '},' → logprob: -11.762227058410645
    9. ','' → logprob: -12.012227058410645
    10. '','' → logprob: -12.262227058410645

Token 923: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.3147169053554535
    2. ' -' → logprob: -1.3147169351577759
    3. '-' → logprob: -6.564716815948486
    4. 's' → logprob: -10.189717292785645
    5. ' s' → logprob: -11.939717292785645
    6. ' ' → logprob: -15.314717292785645
    7. '0' → logprob: -16.439716339111328
    8. ' 
' → logprob: -16.814716339111328
    9. '<|end|>' → logprob: -17.189716339111328
    10. '```' → logprob: -17.314716339111328

Token 924: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. ' s' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -15.125000953674316
    4. '1' → logprob: -17.000001907348633
    5. '```' → logprob: -18.875001907348633
    6. '`s' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '{s' → logprob: -19.000001907348633
    9. '_s' → logprob: -19.250001907348633
    10. '(s' → logprob: -19.250001907348633

Token 925: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00024168188974726945
    2. 's' → logprob: -8.37524127960205
    3. '[s' → logprob: -12.25024127960205
    4. ''s' → logprob: -12.25024127960205
    5. '[' → logprob: -14.12524127960205
    6. '{'' → logprob: -15.12524127960205
    7. '[
' → logprob: -15.62524127960205
    8. ''' → logprob: -16.000242233276367
    9. '1' → logprob: -16.375242233276367
    10. '["' → logprob: -17.250242233276367

Token 926: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.1472419600977446e-06
    2. 's' → logprob: -13.875000953674316
    3. ' dy' → logprob: -17.000001907348633
    4. '1' → logprob: -17.250001907348633
    5. '.dy' → logprob: -19.000001907348633
    6. 'd' → logprob: -19.250001907348633
    7. 'ddy' → logprob: -19.625001907348633
    8. '[' → logprob: -20.375001907348633
    9. ''s' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.750001907348633

Token 927: '']))
' (ID: 49740)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1999659389257431
    2. ']))' → logprob: -1.8249659538269043
    3. '']))' → logprob: -4.449965953826904
    4. '}))' → logprob: -5.074965953826904
    5. ')))' → logprob: -7.199965953826904
    6. ')' → logprob: -7.699965953826904
    7. '])' → logprob: -8.324965476989746
    8. ''))' → logprob: -8.824965476989746
    9. ')])' → logprob: -8.824965476989746
    10. ')]' → logprob: -8.949965476989746

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24814274907112122
    2. '   ' → logprob: -2.623142719268799
    3. '<|end|>' → logprob: -2.748142719268799
    4. '```' → logprob: -2.873142719268799
    5. 'for' → logprob: -4.373142719268799
    6. ')' → logprob: -4.998142719268799
    7. ' for' → logprob: -6.248142719268799
    8. '           ' → logprob: -6.498142719268799
    9. 'elif' → logprob: -7.248142719268799
    10. '...' → logprob: -7.498142719268799

Token 929: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023653015960007906
    2. 'else' (adapté à ' else') → logprob: -7.2523651123046875
    3. '           ' → logprob: -7.2523651123046875
    4. ' else' → logprob: -7.7523651123046875
    5. '```' → logprob: -8.377365112304688
    6. '   ' → logprob: -8.877365112304688
    7. '<|end|>' → logprob: -10.002365112304688
    8. 'elif' → logprob: -10.502365112304688
    9. ' ' → logprob: -11.002365112304688
    10. ' elif' → logprob: -11.377365112304688

Token 930: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.339871883392334
    2. ':' → logprob: -1.839871883392334
    3. '           ' → logprob: -2.089871883392334
    4. ' if' → logprob: -5.964871883392334
    5. ':
' → logprob: -6.339871883392334
    6. 'if' → logprob: -7.089871883392334
    7. '	       ' → logprob: -8.839872360229492
    8. '        ' → logprob: -9.589872360229492
    9. '<|end|>' → logprob: -10.464872360229492
    10. '   ' → logprob: -10.839872360229492

Token 931: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08340118080377579
    2. '       ' → logprob: -2.7084012031555176
    3. '               ' → logprob: -4.458401203155518
    4. '```' → logprob: -7.458401203155518
    5. '	       ' → logprob: -8.20840072631836
    6. ' ' → logprob: -8.45840072631836
    7. '(' → logprob: -8.58340072631836
    8. '                   ' → logprob: -8.83340072631836
    9. '                       ' → logprob: -9.58340072631836
    10. '   ' → logprob: -10.33340072631836

Token 932: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009714901447296143
    2. 'if' → logprob: -5.1347150802612305
    3. '#' (adapté à ' #') → logprob: -5.7597150802612305
    4. '       ' → logprob: -7.7597150802612305
    5. ' if' → logprob: -9.00971508026123
    6. ' #' → logprob: -10.38471508026123
    7. '```' → logprob: -10.88471508026123
    8. '   ' → logprob: -11.25971508026123
    9. '               ' → logprob: -11.75971508026123
    10. '		' → logprob: -13.13471508026123

Token 933: ' horizontal' (ID: 25511)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1054985374212265
    2. 'y' → logprob: -2.3554985523223877
    3. '           ' → logprob: -5.605498313903809
    4. ' if' → logprob: -6.855498313903809
    5. 'x' → logprob: -8.355498313903809
    6. '#' → logprob: -8.605498313903809
    7. '       ' → logprob: -9.480498313903809
    8. ' y' → logprob: -10.105498313903809
    9. '(y' → logprob: -12.855498313903809
    10. '   ' → logprob: -13.105498313903809

Token 934: ' street' (ID: 12901)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7925109267234802
    2. 'if' → logprob: -1.042510986328125
    3. '           ' → logprob: -1.667510986328125
    4. '```' → logprob: -5.667510986328125
    5. 'street' → logprob: -7.292510986328125
    6. '       ' → logprob: -7.542510986328125
    7. ' street' → logprob: -7.917510986328125
    8. '            
' → logprob: -8.542510986328125
    9. '   ' → logprob: -9.042510986328125
    10. ',' → logprob: -9.667510986328125

Token 935: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27550384402275085
    2. 'if' → logprob: -1.5255038738250732
    3. ' if' → logprob: -3.7755038738250732
    4. '               ' → logprob: -8.775504112243652
    5. '       ' → logprob: -9.025504112243652
    6. '```' → logprob: -9.525504112243652
    7. '   ' → logprob: -11.900504112243652
    8. '	       ' → logprob: -12.525504112243652
    9. '#' → logprob: -12.650504112243652
    10. 'If' → logprob: -12.775504112243652

Token 936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.827200897736475e-05
    2. 'if' → logprob: -10.250078201293945
    3. ' if' → logprob: -10.500078201293945
    4. '       ' → logprob: -11.250078201293945
    5. '               ' → logprob: -13.625078201293945
    6. '```' → logprob: -14.250078201293945
    7. '          ' → logprob: -15.375078201293945
    8. '		' → logprob: -16.000078201293945
    9. '   ' → logprob: -16.625078201293945
    10. '	       ' → logprob: -17.000078201293945

Token 937: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32046690583229065
    2. '           ' → logprob: -1.3204668760299683
    3. ' if' → logprob: -4.945466995239258
    4. '       ' → logprob: -9.820466995239258
    5. '   ' → logprob: -12.570466995239258
    6. 'elif' → logprob: -13.320466995239258
    7. '               ' → logprob: -13.570466995239258
    8. 'If' → logprob: -14.195466995239258
    9. ' ' → logprob: -14.320466995239258
    10. '          ' → logprob: -14.570466995239258

Token 938: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4971107244491577
    2. 'min' → logprob: -0.9971107244491577
    3. ' y' → logprob: -4.372110843658447
    4. ' min' → logprob: -4.622110843658447
    5. '(min' → logprob: -8.247110366821289
    6. '   ' → logprob: -10.747110366821289
    7. '(y' → logprob: -11.247110366821289
    8. 'ys' → logprob: -11.997110366821289
    9. ' ymin' → logprob: -12.497110366821289
    10. ' ' → logprob: -13.372110366821289

Token 939: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013514261227101088
    2. 'y' → logprob: -6.751351356506348
    3. '==' → logprob: -9.251351356506348
    4. '1' → logprob: -9.751351356506348
    5. ' y' → logprob: -11.251351356506348
    6. 'x' → logprob: -12.251351356506348
    7. 'o' → logprob: -13.251351356506348
    8. ' ==' → logprob: -13.251351356506348
    9. ' ' → logprob: -13.501351356506348
    10. '#' → logprob: -13.876351356506348

Token 940: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859236627817154
    2. '==' → logprob: -3.0485923290252686
    3. ')==' → logprob: -13.298592567443848
    4. ']==' → logprob: -13.923592567443848
    5. ' <=' → logprob: -14.673592567443848
    6. '=' → logprob: -14.673592567443848
    7. ' ' → logprob: -14.923592567443848
    8. ' ' → logprob: -15.548592567443848
    9. '==
' → logprob: -15.673592567443848
    10. ')' → logprob: -15.923592567443848

Token 941: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006115250871516764
    2. 's' → logprob: -7.750611305236816
    3. ' y' → logprob: -8.625611305236816
    4. 'x' → logprob: -14.125611305236816
    5. '   ' → logprob: -15.125611305236816
    6. 'ys' → logprob: -15.500611305236816
    7. '       ' → logprob: -16.875612258911133
    8. 'y's' → logprob: -17.250612258911133
    9. ' s' → logprob: -17.375612258911133
    10. '	y' → logprob: -18.000612258911133

Token 942: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5046892762184143
    2. 's' → logprob: -1.2546892166137695
    3. '1' → logprob: -2.2546892166137695
    4. 'y' → logprob: -5.6296892166137695
    5. ' s' → logprob: -6.6296892166137695
    6. ' x' → logprob: -7.0046892166137695
    7. ' y' → logprob: -9.50468921661377
    8. '0' → logprob: -9.62968921661377
    9. ' ' → logprob: -9.62968921661377
    10. '   ' → logprob: -9.87968921661377

Token 943: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021637380123138
    2. 'and' → logprob: -2.3502163887023926
    3. '           ' → logprob: -11.725215911865234
    4. '            ' → logprob: -14.100215911865234
    5. '               ' → logprob: -14.850215911865234
    6. ' ' → logprob: -15.350215911865234
    7. '==' → logprob: -15.600215911865234
    8. ' ==' → logprob: -16.975215911865234
    9. '	and' → logprob: -17.600215911865234
    10. '          ' → logprob: -17.850215911865234

Token 944: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00091217877343297
    2. ' min' → logprob: -7.000912189483643
    3. '(min' → logprob: -14.750911712646484
    4. 'x' → logprob: -14.875911712646484
    5. 'xmin' → logprob: -18.125911712646484
    6. ' x' → logprob: -19.875911712646484
    7. '	min' → logprob: -20.375911712646484
    8. '   ' → logprob: -20.625911712646484
    9. '_min' → logprob: -21.125911712646484
    10. 'minimum' → logprob: -21.750911712646484

Token 945: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04859577491879463
    2. 'x' → logprob: -3.048595666885376
    3. '[x' → logprob: -11.798595428466797
    4. '(xs' → logprob: -14.923595428466797
    5. '<x' → logprob: -16.423595428466797
    6. '{x' → logprob: -16.798595428466797
    7. '(' → logprob: -16.923595428466797
    8. 'def' → logprob: -17.423595428466797
    9. '(s' → logprob: -17.548595428466797
    10. '```' → logprob: -17.673595428466797

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004587903094943613
    2. '0' → logprob: -8.000458717346191
    3. '(x' → logprob: -9.250458717346191
    4. 'x' → logprob: -11.500458717346191
    5. '(s' → logprob: -11.625458717346191
    6. 's' → logprob: -12.750458717346191
    7. '(' → logprob: -13.125458717346191
    8. '(start' → logprob: -14.625458717346191
    9. 'start' → logprob: -14.875458717346191
    10. '(y' → logprob: -15.125458717346191

Token 947: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.19472475349903107
    2. '(x' → logprob: -2.1947247982025146
    3. ',' → logprob: -2.8197247982025146
    4. 'x' → logprob: -5.3197245597839355
    5. '1' → logprob: -7.3197245597839355
    6. ',y' → logprob: -8.444725036621094
    7. '(' → logprob: -10.069725036621094
    8. '[x' → logprob: -10.569725036621094
    9. '[' → logprob: -10.944725036621094
    10. ' ,' → logprob: -11.444725036621094

Token 948: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008117707911878824
    2. '1' → logprob: -7.875811576843262
    3. 'x' → logprob: -8.000811576843262
    4. '2' → logprob: -9.375811576843262
    5. 's' → logprob: -13.000811576843262
    6. ',x' → logprob: -13.250811576843262
    7. ')' → logprob: -13.750811576843262
    8. 'o' → logprob: -13.750811576843262
    9. ',' → logprob: -13.750811576843262
    10. '(x' → logprob: -14.000811576843262

Token 949: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2654572129249573
    2. ' <=' → logprob: -1.7654571533203125
    3. ')<=' → logprob: -3.1404571533203125
    4. '<=' → logprob: -4.5154571533203125
    5. '0' → logprob: -4.8904571533203125
    6. ' )' → logprob: -8.765457153320312
    7. ']<=' → logprob: -9.890457153320312
    8. '```' → logprob: -10.640457153320312
    9. ' ' → logprob: -11.015457153320312
    10. ')>=' → logprob: -11.515457153320312

Token 950: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2014397531747818
    2. '<=' → logprob: -1.7014397382736206
    3. ')<=' → logprob: -10.82643985748291
    4. '```' → logprob: -12.82643985748291
    5. ']<=' → logprob: -12.82643985748291
    6. ')' → logprob: -14.82643985748291
    7. ' ' → logprob: -15.07643985748291
    8. '0' → logprob: -15.95143985748291
    9. ' ≤' → logprob: -16.576438903808594
    10. ' ' → logprob: -16.576438903808594

Token 951: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -9.500075340270996
    3. '(x' → logprob: -19.25007438659668
    4. '
' → logprob: -20.37507438659668
    5. '```' → logprob: -20.37507438659668
    6. 'max' → logprob: -20.62507438659668
    7. '	x' → logprob: -21.00007438659668
    8. '{x' → logprob: -21.00007438659668
    9. '0' → logprob: -21.37507438659668
    10. ')x' → logprob: -21.50007438659668

Token 952: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017072015907615423
    2. 'x' → logprob: -6.376707077026367
    3. ' x' → logprob: -12.751707077026367
    4. '[' → logprob: -13.626707077026367
    5. ' ' → logprob: -14.751707077026367
    6. 'o' → logprob: -15.001707077026367
    7. '_' → logprob: -17.126707077026367
    8. '(x' → logprob: -17.126707077026367
    9. '   ' → logprob: -17.251707077026367
    10. '<x' → logprob: -17.626707077026367

Token 953: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6339939832687378
    2. ' <=' → logprob: -0.7589939832687378
    3. '0' → logprob: -6.633994102478027
    4. ' ' → logprob: -10.633994102478027
    5. 'x' → logprob: -11.508994102478027
    6. ')<=' → logprob: -11.508994102478027
    7. ']<=' → logprob: -11.883994102478027
    8. ' ' → logprob: -12.133994102478027
    9. ' x' → logprob: -12.508994102478027
    10. '           ' → logprob: -12.508994102478027

Token 954: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024762547109276056
    2. ' max' → logprob: -6.002476215362549
    3. 'x' → logprob: -14.502476692199707
    4. '(max' → logprob: -17.37747573852539
    5. ' x' → logprob: -19.00247573852539
    6. '	max' → logprob: -19.75247573852539
    7. '[max' → logprob: -20.37747573852539
    8. 'min' → logprob: -20.62747573852539
    9. '=max' → logprob: -21.62747573852539
    10. '   ' → logprob: -21.62747573852539

Token 955: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.014684110297821e-06
    2. 'x' → logprob: -11.625008583068848
    3. '(' → logprob: -19.625009536743164
    4. '(min' → logprob: -20.000009536743164
    5. '(
' → logprob: -20.375009536743164
    6. '[x' → logprob: -20.625009536743164
    7. '```' → logprob: -21.125009536743164
    8. '<x' → logprob: -22.125009536743164
    9. '{x' → logprob: -22.250009536743164
    10. ' (' → logprob: -22.375009536743164

Token 956: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001213806332089007
    2. '(x' → logprob: -6.876214027404785
    3. '1' → logprob: -8.626214027404785
    4. '[' → logprob: -14.376214027404785
    5. ' x' → logprob: -15.126214027404785
    6. '{x' → logprob: -15.126214027404785
    7. '[x' → logprob: -15.126214027404785
    8. '(' → logprob: -16.25121307373047
    9. ')x' → logprob: -16.37621307373047
    10. '<x' → logprob: -17.62621307373047

Token 957: ',x' (ID: 29748)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001410850090906024
    2. '(x' → logprob: -9.000141143798828
    3. '[' → logprob: -11.250141143798828
    4. '[x' → logprob: -13.375141143798828
    5. ')x' → logprob: -14.375141143798828
    6. '{x' → logprob: -14.750141143798828
    7. '```' → logprob: -14.750141143798828
    8. ' x' → logprob: -15.000141143798828
    9. ',x' → logprob: -15.250141143798828
    10. '_x' → logprob: -15.500141143798828

Token 958: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004816003609448671
    2. 'x' → logprob: -5.504816055297852
    3. '1' → logprob: -7.379816055297852
    4. 's' → logprob: -9.629816055297852
    5. '0' → logprob: -11.129816055297852
    6. '```' → logprob: -11.629816055297852
    7. '
' → logprob: -12.129816055297852
    8. ' ' → logprob: -12.129816055297852
    9. ' x' → logprob: -12.379816055297852
    10. '   ' → logprob: -13.004816055297852

Token 959: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9836832880973816
    2. '):' → logprob: -1.1086833477020264
    3. ':' → logprob: -1.3586833477020264
    4. ':
' → logprob: -3.3586833477020264
    5. '0' → logprob: -7.108683109283447
    6. '           ' → logprob: -7.233683109283447
    7. '```' → logprob: -7.233683109283447
    8. '       ' → logprob: -7.358683109283447
    9. ')' → logprob: -7.983683109283447
    10. '               ' → logprob: -8.233683586120605

Token 960: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.186122770188376e-05
    2. 'pos' → logprob: -9.500091552734375
    3. '```' → logprob: -11.250091552734375
    4. '           ' → logprob: -13.125091552734375
    5. ' pos' → logprob: -13.625091552734375
    6. '              ' → logprob: -14.625091552734375
    7. ' ' → logprob: -16.250091552734375
    8. '
' → logprob: -16.625091552734375
    9. '                   ' → logprob: -17.000091552734375
    10. '                ' → logprob: -17.125091552734375

Token 961: ' pos' (ID: 1253)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08146888762712479
    2. 'pos' (adapté à ' pos') → logprob: -2.8314688205718994
    3. ' pos' → logprob: -3.9564688205718994
    4. '                   ' → logprob: -9.20646858215332
    5. '#' → logprob: -10.83146858215332
    6. ' ' → logprob: -11.08146858215332
    7. '                ' → logprob: -11.08146858215332
    8. ' ' → logprob: -11.83146858215332
    9. '   ' → logprob: -12.58146858215332
    10. ',pos' → logprob: -12.58146858215332

Token 962: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -3.128163257315464e-07
    2. 'x' → logprob: -16.625
    3. 'along' → logprob: -16.75
    4. '=' → logprob: -17.125
    5. ' =' → logprob: -18.0
    6. '_' → logprob: -18.375
    7. '   ' → logprob: -18.625
    8. '	' → logprob: -18.75
    9. '```' → logprob: -18.75
    10. 'al' → logprob: -18.875

Token 963: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.0006372620700858533
    2. '_al' → logprob: -7.500637054443359
    3. 'along' → logprob: -10.25063705444336
    4. 'on' → logprob: -11.87563705444336
    5. '```' → logprob: -11.87563705444336
    6. 'long' → logprob: -12.12563705444336
    7. 'ng' → logprob: -12.50063705444336
    8. '_' → logprob: -12.50063705444336
    9. '   ' → logprob: -12.75063705444336
    10. 'ond' → logprob: -13.50063705444336

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '=
' → logprob: -16.688261032104492
    4. '＝' → logprob: -16.813261032104492
    5. ')' → logprob: -18.188261032104492
    6. '<|end|>' → logprob: -19.313261032104492
    7. '=True' → logprob: -19.563261032104492
    8. 's' → logprob: -19.688261032104492
    9. ' =
' → logprob: -19.813261032104492
    10. '=int' → logprob: -19.938261032104492

Token 965: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00021974841365590692
    2. ' abs' → logprob: -9.000219345092773
    3. 'x' → logprob: -9.250219345092773
    4. '(abs' → logprob: -16.625219345092773
    5. ' x' → logprob: -16.875219345092773
    6. '   ' → logprob: -19.750219345092773
    7. '(x' → logprob: -20.625219345092773
    8. '
' → logprob: -21.625219345092773
    9. '       ' → logprob: -21.750219345092773
    10. '.abs' → logprob: -21.875219345092773

Token 966: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.25193852186203003
    2. 'x' → logprob: -1.5019385814666748
    3. '(' → logprob: -11.751938819885254
    4. '{x' → logprob: -14.251938819885254
    5. '[x' → logprob: -15.001938819885254
    6. ' x' → logprob: -15.251938819885254
    7. '(
' → logprob: -16.126937866210938
    8. ' (' → logprob: -16.251937866210938
    9. '```' → logprob: -16.876937866210938
    10. '#' → logprob: -17.001937866210938

Token 967: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.182190554682165e-05
    2. 'x' → logprob: -10.500061988830566
    3. '1' → logprob: -11.375061988830566
    4. '[' → logprob: -12.375061988830566
    5. '_' → logprob: -12.375061988830566
    6. ' ' → logprob: -12.625061988830566
    7. '(x' → logprob: -12.875061988830566
    8. 's' → logprob: -13.250061988830566
    9. ' -' → logprob: -13.625061988830566
    10. '(' → logprob: -14.000061988830566

Token 968: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25192990899086
    2. '-' → logprob: -1.5019298791885376
    3. ' ' → logprob: -15.126930236816406
    4. 'x' → logprob: -15.626930236816406
    5. '−' → logprob: -16.876930236816406
    6. '-x' → logprob: -17.126930236816406
    7. '[' → logprob: -17.251930236816406
    8. '-
' → logprob: -17.626930236816406
    9. ' -
' → logprob: -17.626930236816406
    10. 's' → logprob: -17.876930236816406

Token 969: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '   ' → logprob: -21.12501335144043
    4. '	x' → logprob: -21.50001335144043
    5. '(x' → logprob: -21.87501335144043
    6. ')x' → logprob: -22.12501335144043
    7. 'min' → logprob: -22.62501335144043
    8. '           ' → logprob: -22.75001335144043
    9. '$x' → logprob: -23.37501335144043
    10. 'start' → logprob: -23.75001335144043

Token 970: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008417651988565922
    2. 's' → logprob: -4.88341760635376
    3. '[' → logprob: -7.38341760635376
    4. ' s' → logprob: -9.383418083190918
    5. ' ' → logprob: -10.383418083190918
    6. '0' → logprob: -10.508418083190918
    7. 'x' → logprob: -11.133418083190918
    8. '(s' → logprob: -11.883418083190918
    9. 'start' → logprob: -12.008418083190918
    10. 'min' → logprob: -12.508418083190918

Token 971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.992775888647884e-05
    2. ')
' → logprob: -9.625069618225098
    3. ' )' → logprob: -13.125069618225098
    4. '<|end|>' → logprob: -14.625069618225098
    5. '),' → logprob: -15.125069618225098
    6. '       ' → logprob: -15.375069618225098
    7. '[' → logprob: -16.125070571899414
    8. '   ' → logprob: -16.375070571899414
    9. '))' → logprob: -16.375070571899414
    10. '())' → logprob: -16.625070571899414

Token 972: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021331508469302207
    2. 'start' → logprob: -8.500213623046875
    3. '```' → logprob: -12.250213623046875
    4. '           ' → logprob: -13.625213623046875
    5. '
' → logprob: -13.625213623046875
    6. '<|end|>' → logprob: -14.000213623046875
    7. '       ' → logprob: -14.500213623046875
    8. ' start' → logprob: -15.125213623046875
    9. '   ' → logprob: -15.250213623046875
    10. '              ' → logprob: -15.750213623046875

Token 973: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.34907037019729614
    2. '               ' → logprob: -1.2240703105926514
    3. '   ' → logprob: -8.09907054901123
    4. '           ' → logprob: -8.47407054901123
    5. ' start' → logprob: -9.84907054901123
    6. '       ' → logprob: -9.97407054901123
    7. '                   ' → logprob: -12.59907054901123
    8. '#' → logprob: -12.97407054901123
    9. '              ' → logprob: -12.97407054901123
    10. ' ' → logprob: -13.59907054901123

Token 974: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -3.531315314830863e-06
    2. 'states' → logprob: -13.500003814697266
    3. 'States' → logprob: -13.625003814697266
    4. '```' → logprob: -15.375003814697266
    5. 's' → logprob: -15.750003814697266
    6. '_positions' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.500003814697266
    8. ' States' → logprob: -16.500003814697266
    9. '[
' → logprob: -17.250003814697266
    10. '_' → logprob: -17.375003814697266

Token 975: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009868944063782692
    2. '.' → logprob: -4.63486909866333
    3. ' .' → logprob: -9.384868621826172
    4. '           ' → logprob: -10.884868621826172
    5. '.app' → logprob: -12.509868621826172
    6. ').' → logprob: -13.759868621826172
    7. 'append' → logprob: -13.884868621826172
    8. '.extend' → logprob: -13.884868621826172
    9. '.add' → logprob: -14.009868621826172
    10. '       ' → logprob: -14.634868621826172

Token 976: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.375008583068848
    3. '(s' → logprob: -12.375008583068848
    4. '(
' → logprob: -16.250009536743164
    5. '[(' → logprob: -16.500009536743164
    6. ' ((' → logprob: -17.500009536743164
    7. '   ' → logprob: -17.750009536743164
    8. ' (' → logprob: -17.750009536743164
    9. '```' → logprob: -18.625009536743164
    10. ' ' → logprob: -20.125009536743164

Token 977: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.723352049040841e-06
    2. '(s' → logprob: -12.375004768371582
    3. ' s' → logprob: -14.750004768371582
    4. ')s' → logprob: -19.375003814697266
    5. '{s' → logprob: -19.375003814697266
    6. '`s' → logprob: -19.875003814697266
    7. '	s' → logprob: -20.125003814697266
    8. '(' → logprob: -20.375003814697266
    9. '   ' → logprob: -21.125003814697266
    10. '<s' → logprob: -21.375003814697266

Token 978: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0002553793019615114
    2. '[' → logprob: -8.375255584716797
    3. ''s' → logprob: -10.750255584716797
    4. ''' → logprob: -13.750255584716797
    5. 's' → logprob: -14.000255584716797
    6. '[
' → logprob: -15.250255584716797
    7. '{'' → logprob: -15.250255584716797
    8. '[s' → logprob: -15.250255584716797
    9. '('' → logprob: -15.875255584716797
    10. '["' → logprob: -16.125255584716797

Token 979: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.008656885474920273
    2. ''id' → logprob: -4.758656978607178
    3. ''s' → logprob: -10.63365650177002
    4. '['' → logprob: -11.13365650177002
    5. '"id' → logprob: -13.38365650177002
    6. 's' → logprob: -14.50865650177002
    7. '[id' → logprob: -14.75865650177002
    8. '0' → logprob: -14.88365650177002
    9. ''' → logprob: -15.38365650177002
    10. ''i' → logprob: -15.75865650177002

Token 980: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009180181659758091
    2. '',' → logprob: -4.759180068969727
    3. ' ,' → logprob: -8.634180068969727
    4. '),' → logprob: -8.634180068969727
    5. '','' → logprob: -9.634180068969727
    6. '‌,' → logprob: -10.384180068969727
    7. '(),' → logprob: -10.509180068969727
    8. ''],' → logprob: -11.134180068969727
    9. '],' → logprob: -11.259180068969727
    10. ',
' → logprob: -11.634180068969727

Token 981: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0015023599844425917
    2. ' pos' → logprob: -6.501502513885498
    3. '	pos' → logprob: -19.001502990722656
    4. '_pos' → logprob: -19.876502990722656
    5. '(pos' → logprob: -20.001502990722656
    6. '[pos' → logprob: -21.501502990722656
    7. '0' → logprob: -21.751502990722656
    8. '.pos' → logprob: -21.751502990722656
    9. 'Pos' → logprob: -22.001502990722656
    10. ',pos' → logprob: -22.001502990722656

Token 982: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -9.253090865968261e-06
    2. 'along' → logprob: -11.875009536743164
    3. 'al' → logprob: -14.625009536743164
    4. 'Along' → logprob: -14.750009536743164
    5. ''al' → logprob: -15.000009536743164
    6. '```' → logprob: -15.250009536743164
    7. '0' → logprob: -15.750009536743164
    8. '[' → logprob: -16.250009536743164
    9. ')' → logprob: -16.500009536743164
    10. '['' → logprob: -16.500009536743164

Token 983: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.0001801801408873871
    2. '_al' → logprob: -8.7501802444458
    3. 'along' → logprob: -11.7501802444458
    4. 's' → logprob: -13.1251802444458
    5. 'ang' → logprob: -13.2501802444458
    6. '1' → logprob: -13.3751802444458
    7. '0' → logprob: -13.5001802444458
    8. 'al' → logprob: -13.8751802444458
    9. 'on' → logprob: -14.2501802444458
    10. 'ol' → logprob: -14.3751802444458

Token 984: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. ' ,' → logprob: -9.750065803527832
    3. ',s' → logprob: -12.000065803527832
    4. ',
' → logprob: -15.375065803527832
    5. 's' → logprob: -16.375064849853516
    6. '),' → logprob: -16.500064849853516
    7. '   ' → logprob: -16.500064849853516
    8. ',p' → logprob: -16.875064849853516
    9. '',' → logprob: -17.000064849853516
    10. '`,' → logprob: -17.250064849853516

Token 985: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40100157260894775
    2. '-s' → logprob: -1.4010015726089478
    3. ' s' → logprob: -2.526001453399658
    4. ' -' → logprob: -5.651001453399658
    5. '-' → logprob: -7.901001453399658
    6. '+s' → logprob: -9.651001930236816
    7. '1' → logprob: -11.151001930236816
    8. ' ' → logprob: -11.401001930236816
    9. '	s' → logprob: -11.651001930236816
    10. '   ' → logprob: -11.776001930236816

Token 986: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -4.9424725148128346e-05
    2. '[' → logprob: -10.125049591064453
    3. ''s' → logprob: -12.500049591064453
    4. ''' → logprob: -12.875049591064453
    5. '[
' → logprob: -14.125049591064453
    6. '```' → logprob: -14.750049591064453
    7. '#' → logprob: -15.000049591064453
    8. ']['' → logprob: -15.000049591064453
    9. '["' → logprob: -15.375049591064453
    10. '{'' → logprob: -15.500049591064453

Token 987: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.03521392197581e-05
    2. ''d' → logprob: -11.750030517578125
    3. '['' → logprob: -11.875030517578125
    4. ''' → logprob: -12.125030517578125
    5. ' dx' → logprob: -12.375030517578125
    6. '_dx' → logprob: -13.250030517578125
    7. ''s' → logprob: -13.625030517578125
    8. '   ' → logprob: -14.500030517578125
    9. 'x' → logprob: -15.000030517578125
    10. ' ' → logprob: -15.000030517578125

Token 988: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003000696888193488
    2. ' ,' → logprob: -8.625300407409668
    3. '',' → logprob: -10.000300407409668
    4. '<|end|>' → logprob: -10.250300407409668
    5. ')' → logprob: -11.500300407409668
    6. ',
' → logprob: -11.625300407409668
    7. '),' → logprob: -11.750300407409668
    8. '‌,' → logprob: -12.750300407409668
    9. '   ' → logprob: -13.125300407409668
    10. '','' → logprob: -13.250300407409668

Token 989: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004622018430382013
    2. ' s' → logprob: -5.379621982574463
    3. '-s' → logprob: -14.379622459411621
    4. '   ' → logprob: -14.504622459411621
    5. '	s' → logprob: -15.379622459411621
    6. ' ' → logprob: -15.629622459411621
    7. '  ' → logprob: -16.754621505737305
    8. '       ' → logprob: -17.004621505737305
    9. '    ' → logprob: -17.254621505737305
    10. 'sd' → logprob: -17.754621505737305

Token 990: '['' (ID: 1181)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20385190844535828
    2. '['' → logprob: -1.8288519382476807
    3. '','' → logprob: -4.453851699829102
    4. '',' → logprob: -5.328851699829102
    5. ','' → logprob: -5.578851699829102
    6. '),' → logprob: -6.828851699829102
    7. '<|end|>' → logprob: -7.703851699829102
    8. ''),' → logprob: -8.328851699829102
    9. '-' → logprob: -8.703851699829102
    10. ',
' → logprob: -8.703851699829102

Token 991: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.6240566083070007e-06
    2. ''' → logprob: -13.875001907348633
    3. 'd' → logprob: -15.875001907348633
    4. 'ddy' → logprob: -15.875001907348633
    5. ' dy' → logprob: -16.000001907348633
    6. ''d' → logprob: -16.375001907348633
    7. 'dym' → logprob: -18.125001907348633
    8. '['' → logprob: -18.375001907348633
    9. '.dy' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.500001907348633

Token 992: '']))
' (ID: 49740)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023522183299064636
    2. '))
' → logprob: -3.773522138595581
    3. ''))' → logprob: -8.39852237701416
    4. ' ))' → logprob: -10.52352237701416
    5. ''))
' → logprob: -11.02352237701416
    6. ' ))
' → logprob: -12.77352237701416
    7. '"))' → logprob: -14.02352237701416
    8. ')' → logprob: -14.02352237701416
    9. '))
' → logprob: -14.14852237701416
    10. '))

' → logprob: -14.27352237701416

Token 993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.843177233240567e-05
    2. 'start' → logprob: -11.500018119812012
    3. '           ' → logprob: -12.750018119812012
    4. '```' → logprob: -12.750018119812012
    5. '   ' → logprob: -14.375018119812012
    6. '       ' → logprob: -14.750018119812012
    7. '<|end|>' → logprob: -15.125018119812012
    8. '
' → logprob: -15.250018119812012
    9. '                   ' → logprob: -15.625018119812012
    10. '[start' → logprob: -15.625018119812012

Token 994: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0001170132018160075
    2. '               ' → logprob: -9.750117301940918
    3. ' start' → logprob: -9.750117301940918
    4. '           ' → logprob: -14.875117301940918
    5. '(start' → logprob: -18.0001163482666
    6. '   ' → logprob: -18.1251163482666
    7. '
' → logprob: -18.5001163482666
    8. '       ' → logprob: -18.6251163482666
    9. '[start' → logprob: -18.6251163482666
    10. '```' → logprob: -19.1251163482666

Token 995: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -2.816093228830141e-06
    2. 'States' → logprob: -13.00000286102295
    3. 's' → logprob: -15.37500286102295
    4. '```' → logprob: -15.87500286102295
    5. '_st' → logprob: -16.500001907348633
    6. 'states' → logprob: -17.750001907348633
    7. ''_' → logprob: -17.875001907348633
    8. ' States' → logprob: -18.375001907348633
    9. '_' → logprob: -18.375001907348633
    10. '[_' → logprob: -18.500001907348633

Token 996: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011391390580683947
    2. '.' → logprob: -9.125113487243652
    3. 'append' → logprob: -12.875113487243652
    4. '.extend' → logprob: -14.250113487243652
    5. '.app' → logprob: -14.375113487243652
    6. '.Append' → logprob: -15.250113487243652
    7. ' .' → logprob: -15.375113487243652
    8. '_append' → logprob: -15.625113487243652
    9. '.setdefault' → logprob: -15.750113487243652
    10. ').' → logprob: -15.750113487243652

Token 997: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3134407103061676
    2. '(' → logprob: -1.3134406805038452
    3. '(
' → logprob: -8.938440322875977
    4. ' (' → logprob: -10.938440322875977
    5. '(('' → logprob: -11.313440322875977
    6. '<|end|>' → logprob: -11.813440322875977
    7. ' ((' → logprob: -12.938440322875977
    8. '(space' → logprob: -13.188440322875977
    9. '(()' → logprob: -13.813440322875977
    10. '('' → logprob: -13.938440322875977

Token 998: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004107373300939798
    2. '(s' → logprob: -5.504107475280762
    3. ' s' → logprob: -10.504107475280762
    4. ' (' → logprob: -14.254107475280762
    5. '(' → logprob: -15.254107475280762
    6. ')s' → logprob: -15.504107475280762
    7. '{s' → logprob: -15.754107475280762
    8. '	s' → logprob: -16.629106521606445
    9. '(
' → logprob: -16.754106521606445
    10. ')' → logprob: -17.129106521606445

Token 999: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0005077573587186635
    2. '[s' → logprob: -7.750507831573486
    3. '[' → logprob: -10.750507354736328
    4. ''s' → logprob: -10.750507354736328
    5. ''' → logprob: -11.125507354736328
    6. 's' → logprob: -11.750507354736328
    7. '-' → logprob: -12.750507354736328
    8. '(s' → logprob: -12.750507354736328
    9. '[-' → logprob: -12.875507354736328
    10. '[
' → logprob: -13.375507354736328

Token 1000: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0031793788075447083
    2. 's' → logprob: -5.753179550170898
    3. ' id' → logprob: -14.503179550170898
    4. 'sid' → logprob: -14.753179550170898
    5. ''id' → logprob: -15.128179550170898
    6. '[id' → logprob: -15.878179550170898
    7. ' s' → logprob: -16.1281795501709
    8. '{id' → logprob: -16.1281795501709
    9. ''s' → logprob: -16.7531795501709
    10. '_id' → logprob: -17.3781795501709

Token 1001: ''],' (ID: 9151)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.045604776591062546
    2. ''s' → logprob: -3.920604705810547
    3. ',' → logprob: -4.670604705810547
    4. ']['' → logprob: -5.045604705810547
    5. '',' → logprob: -5.545604705810547
    6. '],' → logprob: -6.045604705810547
    7. ','' → logprob: -7.545604705810547
    8. '[s' → logprob: -7.670604705810547
    9. 's' → logprob: -8.295604705810547
    10. '','' → logprob: -8.420604705810547

Token 1002: ' pos' (ID: 1253)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026653805747628212
    2. 'pos' → logprob: -3.77665376663208
    3. ' s' → logprob: -5.90165376663208
    4. '-pos' → logprob: -8.401654243469238
    5. ' pos' → logprob: -8.776654243469238
    6. '-s' → logprob: -8.901654243469238
    7. '(s' → logprob: -9.401654243469238
    8. '-' → logprob: -9.901654243469238
    9. ' (' → logprob: -12.151654243469238
    10. ' -' → logprob: -12.276654243469238

Token 1003: '_al' (ID: 18493)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.028463391587138176
    2. '_al' → logprob: -4.528463363647461
    3. '[s' → logprob: -5.028463363647461
    4. '(s' → logprob: -5.278463363647461
    5. 's' → logprob: -6.278463363647461
    6. ''s' → logprob: -6.403463363647461
    7. '{'' → logprob: -7.153463363647461
    8. ''' → logprob: -7.778463363647461
    9. '_s' → logprob: -8.528463363647461
    10. '('' → logprob: -8.903463363647461

Token 1004: 'ong' (ID: 705)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0327809639275074
    2. '1' → logprob: -4.53278112411499
    3. ''s' → logprob: -4.78278112411499
    4. 's' → logprob: -5.78278112411499
    5. ',' → logprob: -6.03278112411499
    6. '_id' → logprob: -6.15778112411499
    7. 'x' → logprob: -6.40778112411499
    8. '{'' → logprob: -6.78278112411499
    9. ''x' → logprob: -7.78278112411499
    10. '('' → logprob: -7.90778112411499

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031294001382775605
    2. ' ,' → logprob: -8.250312805175781
    3. ',s' → logprob: -10.625312805175781
    4. ',
' → logprob: -11.250312805175781
    5. '),' → logprob: -12.875312805175781
    6. '           ' → logprob: -13.625312805175781
    7. '               ' → logprob: -13.875312805175781
    8. ',(' → logprob: -14.125312805175781
    9. ',None' → logprob: -14.125312805175781
    10. ',-' → logprob: -14.250312805175781

Token 1006: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.07975069433450699
    2. ' -' → logprob: -2.5797507762908936
    3. '-' → logprob: -7.0797505378723145
    4. '(-' → logprob: -11.204751014709473
    5. '   ' → logprob: -13.579751014709473
    6. '-xs' → logprob: -13.704751014709473
    7. '-t' → logprob: -14.704751014709473
    8. '-st' → logprob: -14.829751014709473
    9. '-code' → logprob: -15.079751014709473
    10. ' ' → logprob: -15.329751014709473

Token 1007: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8624639324116288e-06
    2. ' s' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.375001907348633
    4. '_s' → logprob: -19.375001907348633
    5. '{s' → logprob: -19.500001907348633
    6. '(s' → logprob: -19.500001907348633
    7. '`s' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '```' → logprob: -21.500001907348633
    10. ')' → logprob: -21.875001907348633

Token 1008: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0006345203728415072
    2. '[s' → logprob: -7.625634670257568
    3. 's' → logprob: -9.00063419342041
    4. ''s' → logprob: -11.75063419342041
    5. '[' → logprob: -11.75063419342041
    6. '['_' → logprob: -12.87563419342041
    7. '{'' → logprob: -13.50063419342041
    8. '(s' → logprob: -13.87563419342041
    9. '_s' → logprob: -14.00063419342041
    10. ' ['' → logprob: -14.37563419342041

Token 1009: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.003389329882338643
    2. 's' → logprob: -5.753389358520508
    3. 'sx' → logprob: -9.878389358520508
    4. 'x' → logprob: -10.003389358520508
    5. '_dx' → logprob: -10.128389358520508
    6. 'ds' → logprob: -11.128389358520508
    7. 'xd' → logprob: -11.253389358520508
    8. 'xs' → logprob: -11.253389358520508
    9. ' dx' → logprob: -11.253389358520508
    10. 'Dx' → logprob: -12.503389358520508

Token 1010: ''],' (ID: 9151)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7585942149162292
    2. ',' → logprob: -1.258594274520874
    3. ''],' → logprob: -1.508594274520874
    4. '',' → logprob: -3.758594274520874
    5. '),' → logprob: -6.633594036102295
    6. '},' → logprob: -7.383594036102295
    7. '(),' → logprob: -8.133594512939453
    8. ' ,' → logprob: -8.758594512939453
    9. '>,' → logprob: -9.133594512939453
    10. '],'' → logprob: -9.633594512939453

Token 1011: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.25280454754829407
    2. ' -' → logprob: -1.5028045177459717
    3. '-' → logprob: -7.127804756164551
    4. 's' → logprob: -9.75280475616455
    5. ' s' → logprob: -11.37780475616455
    6. ' ' → logprob: -14.12780475616455
    7. '0' → logprob: -14.25280475616455
    8. '-code' → logprob: -14.50280475616455
    9. '   ' → logprob: -15.62780475616455
    10. '
' → logprob: -15.62780475616455

Token 1012: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.735893965815194e-05
    2. '1' → logprob: -11.375017166137695
    3. ' s' → logprob: -12.500017166137695
    4. '-s' → logprob: -14.250017166137695
    5. '
' → logprob: -15.000017166137695
    6. '0' → logprob: -15.125017166137695
    7. 'start' → logprob: -15.625017166137695
    8. ')s' → logprob: -15.750017166137695
    9. '{s' → logprob: -15.875017166137695
    10. ')' → logprob: -16.000017166137695

Token 1013: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.014048444107174873
    2. 's' → logprob: -5.3890485763549805
    3. ''s' → logprob: -6.1390485763549805
    4. '_dx' → logprob: -6.1390485763549805
    5. ''' → logprob: -6.3890485763549805
    6. '1' → logprob: -6.5140485763549805
    7. '_s' → logprob: -8.01404857635498
    8. ',' → logprob: -8.01404857635498
    9. ''d' → logprob: -8.38904857635498
    10. '{'' → logprob: -8.63904857635498

Token 1014: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00018804390856530517
    2. '1' → logprob: -9.000187873840332
    3. 's' → logprob: -9.875187873840332
    4. 'ddy' → logprob: -12.125187873840332
    5. 'dym' → logprob: -12.625187873840332
    6. 'd' → logprob: -13.125187873840332
    7. 'dx' → logprob: -14.625187873840332
    8. '.dy' → logprob: -15.125187873840332
    9. 'Dy' → logprob: -15.375187873840332
    10. 'ds' → logprob: -15.500187873840332

Token 1015: '']' (ID: 1089)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0063825687393546104
    2. '']))' → logprob: -5.631382465362549
    3. ']))' → logprob: -6.881382465362549
    4. ')' → logprob: -7.006382465362549
    5. ''))' → logprob: -7.381382465362549
    6. ')))' → logprob: -9.756382942199707
    7. ')])' → logprob: -9.881382942199707
    8. '}))' → logprob: -10.256382942199707
    9. ''])' → logprob: -10.381382942199707
    10. '])' → logprob: -10.506382942199707

Token 1016: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019561098888516426
    2. ')' → logprob: -6.251955986022949
    3. ')))' → logprob: -11.12695598602295
    4. '))
' → logprob: -11.50195598602295
    5. ')}' → logprob: -14.37695598602295
    6. ')]' → logprob: -14.37695598602295
    7. '])' → logprob: -14.75195598602295
    8. '       ' → logprob: -15.37695598602295
    9. '   ' → logprob: -15.37695598602295
    10. ')])' → logprob: -15.75195598602295

Token 1017: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10714510828256607
    2. '#' → logprob: -2.607145071029663
    3. '```' → logprob: -4.482145309448242
    4. '
' → logprob: -4.857145309448242
    5. 'from' → logprob: -5.482145309448242
    6. 'def' → logprob: -5.982145309448242
    7. 'for' → logprob: -6.732145309448242
    8. 'visited' → logprob: -7.982145309448242
    9. '    
' → logprob: -9.357145309448242
    10. 'import' → logprob: -9.482145309448242

Token 1018: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6324968338012695
    2. 'visited' → logprob: -1.0074968338012695
    3. 'from' → logprob: -2.8824968338012695
    4. '#' (adapté à ' #') → logprob: -3.6324968338012695
    5. 'queue' → logprob: -5.3824968338012695
    6. 'def' → logprob: -6.0074968338012695
    7. 'dp' → logprob: -6.0074968338012695
    8. 'distance' → logprob: -6.1324968338012695
    9. '
' → logprob: -6.3824968338012695
    10. 'moves' → logprob: -6.5074968338012695

Token 1019: ' Function' (ID: 11035)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4774002134799957
    2. '#' → logprob: -1.4774001836776733
    3. 'from' → logprob: -1.9774001836776733
    4. 'dp' → logprob: -5.477400302886963
    5. 'queue' → logprob: -6.102400302886963
    6. 'state' → logprob: -6.227400302886963
    7. 'INF' → logprob: -6.602400302886963
    8. 'dist' → logprob: -6.727400302886963
    9. 'def' → logprob: -7.352400302886963
    10. 'states' → logprob: -7.977400302886963

Token 1020: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030715949833393097
    2. ' def' → logprob: -6.0030717849731445
    3. '
' → logprob: -8.253071784973145
    4. 'simulate' → logprob: -8.628071784973145
    5. ' to' → logprob: -10.003071784973145
    6. 'calculate' → logprob: -10.753071784973145
    7. ' move' → logprob: -11.003071784973145
    8. ' simulate' → logprob: -11.378071784973145
    9. 'get' → logprob: -11.503071784973145
    10. 'move' → logprob: -11.503071784973145

Token 1021: ' get' (ID: 717)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.12571768462657928
    2. 'simulate' → logprob: -2.7507176399230957
    3. 'advance' → logprob: -3.8757176399230957
    4. 'get' → logprob: -4.375717639923096
    5. 'distance' → logprob: -5.250717639923096
    6. 'def' → logprob: -6.250717639923096
    7. 'walk' → logprob: -6.375717639923096
    8. 'can' → logprob: -6.500717639923096
    9. 'check' → logprob: -6.500717639923096
    10. 'inside' → logprob: -6.500717639923096

Token 1022: ' street' (ID: 12901)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8271933794021606
    2. 'next' → logprob: -1.2021933794021606
    3. 'neighbors' → logprob: -1.8271933794021606
    4. '_next' → logprob: -3.577193260192871
    5. ' next' → logprob: -4.077193260192871
    6. 'adj' → logprob: -5.202193260192871
    7. '_possible' → logprob: -5.202193260192871
    8. '_neighbors' → logprob: -5.327193260192871
    9. 'position' → logprob: -5.577193260192871
    10. 'reachable' → logprob: -5.702193260192871

Token 1023: ' coordinate' (ID: 30380)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6394506096839905
    2. '_id' → logprob: -1.6394505500793457
    3. '_position' → logprob: -3.1394505500793457
    4. '_data' → logprob: -3.3894505500793457
    5. '_pos' → logprob: -3.6394505500793457
    6. '_info' → logprob: -3.7644505500793457
    7. '_at' → logprob: -3.8894505500793457
    8. 'length' → logprob: -3.8894505500793457
    9. '_segment' → logprob: -4.139450550079346
    10. 'def' → logprob: -4.389450550079346

Token 1024: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008234764449298382
    2. '   ' → logprob: -6.508234977722168
    3. '(' → logprob: -6.758234977722168
    4. '```' → logprob: -7.008234977722168
    5. '_def' → logprob: -7.133234977722168
    6. '(s' → logprob: -7.383234977722168
    7. '(x' → logprob: -7.508234977722168
    8. '(line' → logprob: -7.633234977722168
    9. '_al' → logprob: -8.008234977722168
    10. 's' → logprob: -8.008234977722168

Token 1025: ' pos' (ID: 1253)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3731381893157959
    2. 'pos' → logprob: -1.873138189315796
    3. 'street' → logprob: -2.123138189315796
    4. 'state' → logprob: -4.248138427734375
    5. 'distance' → logprob: -4.873138427734375
    6. '(position' → logprob: -5.748138427734375
    7. 'x' → logprob: -6.248138427734375
    8. '(st' → logprob: -6.373138427734375
    9. '(state' → logprob: -6.623138427734375
    10. '(pos' → logprob: -6.748138427734375

Token 1026: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.01401176955550909
    2. 'def' → logprob: -4.389011859893799
    3. '```' → logprob: -7.889011859893799
    4. 'ition' → logprob: -8.26401138305664
    5. '   ' → logprob: -8.38901138305664
    6. '_def' → logprob: -8.76401138305664
    7. '_' → logprob: -9.76401138305664
    8. 'along' → logprob: -9.88901138305664
    9. 't' → logprob: -10.01401138305664
    10. 'tion' → logprob: -10.01401138305664

Token 1027: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.0005418312503024936
    2. 'on' → logprob: -8.125541687011719
    3. 'o' → logprob: -9.125541687011719
    4. '```' → logprob: -9.625541687011719
    5. 'ng' → logprob: -10.875541687011719
    6. 'along' → logprob: -11.375541687011719
    7. '#' → logprob: -12.125541687011719
    8. '_' → logprob: -12.625541687011719
    9. '`' → logprob: -13.000541687011719
    10. 'ength' → logprob: -13.250541687011719

Token 1028: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1451452523469925
    2. '   ' → logprob: -2.6451451778411865
    3. ':' → logprob: -3.7701451778411865
    4. '_def' → logprob: -4.020145416259766
    5. ' def' → logprob: -5.395145416259766
    6. '(' → logprob: -5.770145416259766
    7. '[' → logprob: -6.145145416259766
    8. '_' → logprob: -6.270145416259766
    9. ',' → logprob: -6.520145416259766
    10. '_al' → logprob: -6.645145416259766

Token 1029: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05280706286430359
    2. '```' → logprob: -3.302807092666626
    3. '   ' → logprob: -4.927806854248047
    4. ':' → logprob: -5.302806854248047
    5. ' def' → logprob: -6.677806854248047
    6. '(' → logprob: -7.802806854248047
    7. '
' → logprob: -8.302806854248047
    8. '``' → logprob: -9.177806854248047
    9. '_def' → logprob: -9.302806854248047
    10. ':def' → logprob: -9.552806854248047

Token 1030: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0029635541141033173
    2. '   ' → logprob: -6.377963542938232
    3. '```' → logprob: -7.127963542938232
    4. '
' → logprob: -8.00296401977539
    5. ' def' → logprob: -9.12796401977539
    6. '    
' → logprob: -11.62796401977539
    7. '``' → logprob: -12.50296401977539
    8. '\' → logprob: -14.75296401977539
    9. '  
' → logprob: -14.87796401977539
    10. ' ' → logprob: -15.12796401977539

Token 1031: ' pos' (ID: 1253)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2759169042110443
    2. 'street' → logprob: -1.5259169340133667
    3. 'pos' → logprob: -3.775916814804077
    4. 'stre' → logprob: -8.150917053222656
    5. 'position' → logprob: -8.650917053222656
    6. 'coord' → logprob: -9.150917053222656
    7. ' get' → logprob: -10.025917053222656
    8. 'lambda' → logprob: -10.275917053222656
    9. 'point' → logprob: -10.400917053222656
    10. ' street' → logprob: -10.525917053222656

Token 1032: '_to' (ID: 5089)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -8.73314929776825e-05
    2. '_to' → logprob: -10.75008773803711
    3. '_at' → logprob: -11.12508773803711
    4. '_' → logprob: -11.50008773803711
    5. '```' → logprob: -11.50008773803711
    6. '_on' → logprob: -12.50008773803711
    7. '   ' → logprob: -13.00008773803711
    8. '(_' → logprob: -13.12508773803711
    9. '_under' → logprob: -13.25008773803711
    10. 'along' → logprob: -13.50008773803711

Token 1033: '_coord' (ID: 71065)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.11654403060674667
    2. 'xy' → logprob: -2.866544008255005
    3. 'point' → logprob: -3.116544008255005
    4. 'coords' → logprob: -5.491544246673584
    5. '_coord' → logprob: -5.866544246673584
    6. 'coordinate' → logprob: -7.366544246673584
    7. 'pos' → logprob: -7.616544246673584
    8. '_coords' → logprob: -8.116543769836426
    9. '_xy' → logprob: -8.241543769836426
    10. '(coord' → logprob: -10.116543769836426

Token 1034: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.207075297832489
    2. '(s' → logprob: -1.8320753574371338
    3. '(' → logprob: -3.832075357437134
    4. '(pos' → logprob: -5.582075119018555
    5. '(i' → logprob: -7.582075119018555
    6. '(
' → logprob: -8.457075119018555
    7. '(position' → logprob: -9.332075119018555
    8. '(token' → logprob: -9.457075119018555
    9. '():' → logprob: -9.582075119018555
    10. '((' → logprob: -9.707075119018555

Token 1035: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.0026252390816807747
    2. 'r' → logprob: -6.377625465393066
    3. 're' → logprob: -7.627625465393066
    4. 'ree' → logprob: -8.877625465393066
    5. '_re' → logprob: -8.877625465393066
    6. 'ret' → logprob: -10.002625465393066
    7. '_' → logprob: -10.502625465393066
    8. '_al' → logprob: -10.627625465393066
    9. '```' → logprob: -11.252625465393066
    10. 'reat' → logprob: -11.377625465393066

Token 1036: ',' (ID: 11)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.1369563341140747
    2. '_data' → logprob: -1.7619563341140747
    3. '[' → logprob: -2.136956214904785
    4. ')' → logprob: -2.636956214904785
    5. '[i' → logprob: -2.886956214904785
    6. '   ' → logprob: -2.886956214904785
    7. '):' → logprob: -3.136956214904785
    8. '_id' → logprob: -3.136956214904785
    9. '['_' → logprob: -3.761956214904785
    10. '):
' → logprob: -4.136956214904785

Token 1037: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002889874158427119
    2. ' pos' → logprob: -8.875288963317871
    3. 'lambda' → logprob: -10.000288963317871
    4. '   ' → logprob: -10.125288963317871
    5. 'position' → logprob: -10.500288963317871
    6. 'p' → logprob: -10.500288963317871
    7. 'distance' → logprob: -13.125288963317871
    8. '
' → logprob: -13.500288963317871
    9. '       ' → logprob: -13.875288963317871
    10. 'idx' → logprob: -14.000288963317871

Token 1038: '):
' (ID: 1883)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.7844213247299194
    2. '):' → logprob: -0.9094213247299194
    3. '):
' → logprob: -2.034421443939209
    4. ')' → logprob: -4.784421443939209
    5. '   ' → logprob: -7.034421443939209
    6. ')_' → logprob: -8.28442096710205
    7. '_' → logprob: -8.53442096710205
    8. '       ' → logprob: -9.40942096710205
    9. ',' → logprob: -9.53442096710205
    10. '):
' → logprob: -10.03442096710205

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032671953085809946
    2. '   ' → logprob: -7.003267288208008
    3. '```' → logprob: -7.253267288208008
    4. '(' → logprob: -7.753267288208008
    5. '<|end|>' → logprob: -8.128267288208008
    6. ':' → logprob: -8.128267288208008
    7. '(x' → logprob: -8.878267288208008
    8. '[' → logprob: -9.003267288208008
    9. '        
' → logprob: -10.128267288208008
    10. '    
' → logprob: -10.378267288208008

Token 1040: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03491856902837753
    2. 'x' (adapté à ' x') → logprob: -3.7849185466766357
    3. '   ' → logprob: -5.534918785095215
    4. '(x' → logprob: -5.534918785095215
    5. '```' → logprob: -6.784918785095215
    6. 'return' → logprob: -7.034918785095215
    7. ' x' → logprob: -7.909918785095215
    8. ' return' → logprob: -7.909918785095215
    9. '(xs' → logprob: -8.284918785095215
    10. 'xs' → logprob: -8.659918785095215

Token 1041: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3539625406265259
    2. '=' → logprob: -1.9789625406265259
    3. ' =' → logprob: -1.9789625406265259
    4. ',y' → logprob: -4.353962421417236
    5. 's' → logprob: -5.228962421417236
    6. ',s' → logprob: -6.728962421417236
    7. '   ' → logprob: -7.103962421417236
    8. '=s' → logprob: -7.853962421417236
    9. '1' → logprob: -7.978962421417236
    10. '       ' → logprob: -8.228962898254395

Token 1042: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15169166028499603
    2. '=' → logprob: -2.0266916751861572
    3. ' =' → logprob: -5.026691436767578
    4. '+' → logprob: -6.651691436767578
    5. ' +' → logprob: -8.026691436767578
    6. ',y' → logprob: -8.401691436767578
    7. ',s' → logprob: -9.026691436767578
    8. 'def' → logprob: -9.526691436767578
    9. '<|end|>' → logprob: -10.026691436767578
    10. ' ,' → logprob: -10.026691436767578

Token 1043: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34060898423194885
    2. '1' → logprob: -2.215609073638916
    3. 's' → logprob: -2.340609073638916
    4. '=' → logprob: -2.715609073638916
    5. ' =' → logprob: -5.090609073638916
    6. '```' → logprob: -5.965609073638916
    7. ',s' → logprob: -6.090609073638916
    8. '[' → logprob: -6.340609073638916
    9. '(s' → logprob: -7.090609073638916
    10. '       ' → logprob: -7.465609073638916

Token 1044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35920020937919617
    2. ' =' → logprob: -1.3592002391815186
    3. ',' → logprob: -3.1092002391815186
    4. ')' → logprob: -9.859200477600098
    5. '       ' → logprob: -9.984200477600098
    6. '<|end|>' → logprob: -10.484200477600098
    7. '=
' → logprob: -10.734200477600098
    8. ',s' → logprob: -10.859200477600098
    9. '=s' → logprob: -11.109200477600098
    10. ',x' → logprob: -11.109200477600098

Token 1045: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.00017755765293259174
    2. ' street' → logprob: -8.750177383422852
    3. 'stre' → logprob: -11.000177383422852
    4. '   ' → logprob: -13.750177383422852
    5. 's' → logprob: -13.875177383422852
    6. 'st' → logprob: -16.12517738342285
    7. '(st' → logprob: -16.62517738342285
    8. 'stroke' → logprob: -17.50017738342285
    9. '.street' → logprob: -17.87517738342285
    10. '       ' → logprob: -17.87517738342285

Token 1046: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00042745075188577175
    2. '[' → logprob: -8.12542724609375
    3. '1' → logprob: -10.12542724609375
    4. '["' → logprob: -10.87542724609375
    5. '   ' → logprob: -11.12542724609375
    6. '       ' → logprob: -11.62542724609375
    7. ''' → logprob: -11.62542724609375
    8. ''s' → logprob: -11.75042724609375
    9. ',' → logprob: -11.87542724609375
    10. 'def' → logprob: -12.00042724609375

Token 1047: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009437421103939414
    2. ''' → logprob: -7.250943660736084
    3. ''s' → logprob: -8.375944137573242
    4. ''end' → logprob: -13.750944137573242
    5. '['' → logprob: -14.125944137573242
    6. '[start' → logprob: -14.375944137573242
    7. ' start' → logprob: -14.750944137573242
    8. '
' → logprob: -16.500944137573242
    9. ' '' → logprob: -16.500944137573242
    10. ''t' → logprob: -16.875944137573242

Token 1048: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1285056173801422
    2. ']' → logprob: -2.3785057067871094
    3. '']
' → logprob: -3.8785057067871094
    4. '']' → logprob: -5.378505706787109
    5. '       ' → logprob: -6.253505706787109
    6. '],' → logprob: -7.628505706787109
    7. ''],' → logprob: -9.00350570678711
    8. ']
' → logprob: -10.75350570678711
    9. '   ' → logprob: -11.62850570678711
    10. '```' → logprob: -12.00350570678711

Token 1049: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07298556715250015
    2. 'x' → logprob: -3.4479856491088867
    3. ',' → logprob: -3.8229856491088867
    4. 'return' → logprob: -4.572985649108887
    5. ' return' → logprob: -6.447985649108887
    6. '```' → logprob: -6.447985649108887
    7. ' x' → logprob: -7.697985649108887
    8. '        
' → logprob: -7.697985649108887
    9. '
' → logprob: -7.947985649108887
    10. '   ' → logprob: -8.322985649108887

Token 1050: ' dx' (ID: 29472)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6940769553184509
    2. 'return' → logprob: -1.0690770149230957
    3. 'dx' (adapté à ' dx') → logprob: -2.9440770149230957
    4. '       ' → logprob: -3.1940770149230957
    5. ' return' → logprob: -3.4440770149230957
    6. ' y' → logprob: -3.6940770149230957
    7. 'x' → logprob: -5.694077014923096
    8. '   ' → logprob: -6.694077014923096
    9. ' dx' → logprob: -6.694077014923096
    10. 'dy' → logprob: -7.694077014923096

Token 1051: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12338829785585403
    2. '*' → logprob: -2.2483882904052734
    3. ',' → logprob: -4.623388290405273
    4. '[' → logprob: -8.123388290405273
    5. '```' → logprob: -9.623388290405273
    6. '*s' → logprob: -9.748388290405273
    7. ' ,' → logprob: -9.748388290405273
    8. '*,' → logprob: -10.623388290405273
    9. '<|end|>' → logprob: -10.623388290405273
    10. '   ' → logprob: -10.748388290405273

Token 1052: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.007432104088366032
    2. ' dy' → logprob: -5.007431983947754
    3. 'y' → logprob: -7.257431983947754
    4. ' y' → logprob: -11.632431983947754
    5. 'd' → logprob: -13.882431983947754
    6. 'ay' → logprob: -14.882431983947754
    7. ' ' → logprob: -15.132431983947754
    8. 'ddy' → logprob: -15.382431983947754
    9. '   ' → logprob: -15.632431983947754
    10. '=' → logprob: -16.00743293762207

Token 1053: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02630714885890484
    2. ' =' → logprob: -3.6513071060180664
    3. '       ' → logprob: -12.901307106018066
    4. '=s' → logprob: -13.776307106018066
    5. '   ' → logprob: -14.026307106018066
    6. ',' → logprob: -14.151307106018066
    7. '=
' → logprob: -14.401307106018066
    8. ')' → logprob: -14.651307106018066
    9. '```' → logprob: -15.026307106018066
    10. ')=' → logprob: -15.151307106018066

Token 1054: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0017334904987365007
    2. ' street' → logprob: -6.376733303070068
    3. 'stre' → logprob: -11.001733779907227
    4. '1' → logprob: -11.626733779907227
    5. '   ' → logprob: -13.001733779907227
    6. ' ' → logprob: -13.376733779907227
    7. 'st' → logprob: -14.501733779907227
    8. '       ' → logprob: -15.251733779907227
    9. 'stroke' → logprob: -15.751733779907227
    10. '0' → logprob: -15.876733779907227

Token 1055: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0001434690784662962
    2. '=' → logprob: -10.250143051147461
    3. '   ' → logprob: -10.875143051147461
    4. ']['' → logprob: -11.000143051147461
    5. '
' → logprob: -11.250143051147461
    6. '[' → logprob: -11.375143051147461
    7. '       ' → logprob: -11.500143051147461
    8. ''' → logprob: -11.500143051147461
    9. ''s' → logprob: -12.250143051147461
    10. ' =' → logprob: -12.750143051147461

Token 1056: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.09013208746910095
    2. ''' → logprob: -3.340131998062134
    3. '['' → logprob: -3.715131998062134
    4. ''d' → logprob: -4.340132236480713
    5. ''s' → logprob: -5.340132236480713
    6. 'street' → logprob: -6.340132236480713
    7. '0' → logprob: -6.465132236480713
    8. '[' → logprob: -7.340132236480713
    9. '{'' → logprob: -7.340132236480713
    10. '1' → logprob: -7.465132236480713

Token 1057: ''],' (ID: 9151)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07620907574892044
    2. ''],' → logprob: -2.82620906829834
    3. ',' → logprob: -4.57620906829834
    4. ']' → logprob: -5.95120906829834
    5. '       ' → logprob: -7.07620906829834
    6. '']' → logprob: -9.57620906829834
    7. '],'' → logprob: -9.70120906829834
    8. ' ],' → logprob: -10.07620906829834
    9. '},' → logprob: -10.45120906829834
    10. '           ' → logprob: -10.57620906829834

Token 1058: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.6941767334938049
    2. 'street' → logprob: -0.6941767334938049
    3. 'stre' → logprob: -6.94417667388916
    4. 'st' → logprob: -9.81917667388916
    5. '.street' → logprob: -12.44417667388916
    6. ' stre' → logprob: -14.19417667388916
    7. ' streets' → logprob: -14.19417667388916
    8. ' st' → logprob: -14.19417667388916
    9. 'dy' → logprob: -14.31917667388916
    10. 'space' → logprob: -14.81917667388916

Token 1059: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0017325369408354163
    2. ''d' → logprob: -6.876732349395752
    3. ''' → logprob: -8.00173282623291
    4. 'dy' → logprob: -9.12673282623291
    5. ']['' → logprob: -9.62673282623291
    6. '']['' → logprob: -9.87673282623291
    7. ''s' → logprob: -10.25173282623291
    8. '   ' → logprob: -11.00173282623291
    9. '']' → logprob: -11.25173282623291
    10. '[' → logprob: -11.62673282623291

Token 1060: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -3.128163257315464e-07
    2. '['' → logprob: -16.0
    3. ''' → logprob: -16.375
    4. ' dy' → logprob: -17.125
    5. ''d' → logprob: -17.5
    6. '.dy' → logprob: -17.75
    7. 'd' → logprob: -19.25
    8. 'ddy' → logprob: -19.375
    9. 'dym' → logprob: -20.25
    10. '{'' → logprob: -20.25

Token 1061: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.49799394607543945
    2. '']
' → logprob: -0.9979939460754395
    3. ']' → logprob: -4.3729939460754395
    4. ']
' → logprob: -4.7479939460754395
    5. '       ' → logprob: -6.1229939460754395
    6. '```' → logprob: -10.122993469238281
    7. '   ' → logprob: -10.372993469238281
    8. '']

' → logprob: -11.372993469238281
    9. ''],' → logprob: -11.497993469238281
    10. '']
' → logprob: -11.622993469238281

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045801266096532345
    2. 'return' → logprob: -6.004580020904541
    3. ' return' → logprob: -6.754580020904541
    4. '```' → logprob: -7.754580020904541
    5. 'x' → logprob: -8.8795804977417
    6. '   ' → logprob: -9.1295804977417
    7. '        
' → logprob: -9.3795804977417
    8. '``' → logprob: -10.5045804977417
    9. ',' → logprob: -10.7545804977417
    10. '<|end|>' → logprob: -10.8795804977417

Token 1063: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1472543478012085
    2. ' return' → logprob: -2.147254467010498
    3. '       ' → logprob: -4.397254467010498
    4. '   ' → logprob: -5.022254467010498
    5. 'x' → logprob: -6.897254467010498
    6. ' ' → logprob: -9.64725399017334
    7. '```' → logprob: -9.64725399017334
    8. ' x' → logprob: -10.02225399017334
    9. '	return' → logprob: -11.27225399017334
    10. '
' → logprob: -11.52225399017334

Token 1064: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.14289237558841705
    2. 'x' → logprob: -2.017892360687256
    3. '(' → logprob: -9.142892837524414
    4. ' (' → logprob: -9.642892837524414
    5. ' x' → logprob: -10.267892837524414
    6. '(
' → logprob: -12.017892837524414
    7. '   ' → logprob: -12.642892837524414
    8. '{x' → logprob: -15.142892837524414
    9. '[x' → logprob: -15.517892837524414
    10. '"x' → logprob: -15.642892837524414

Token 1065: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5690089639974758e-05
    2. ' x' → logprob: -11.500015258789062
    3. '(x' → logprob: -12.375015258789062
    4. '   ' → logprob: -13.875015258789062
    5. '(' → logprob: -15.375015258789062
    6. '       ' → logprob: -17.000015258789062
    7. ')x' → logprob: -17.625015258789062
    8. '
' → logprob: -17.875015258789062
    9. '(
' → logprob: -18.250015258789062
    10. ' (' → logprob: -18.375015258789062

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.250020027160645
    3. '_' → logprob: -13.000020027160645
    4. '=' → logprob: -13.500020027160645
    5. '```' → logprob: -13.625020027160645
    6. '   ' → logprob: -13.875020027160645
    7. '[
' → logprob: -15.625020027160645
    8. 'x' → logprob: -15.625020027160645
    9. '+' → logprob: -15.875020027160645
    10. 's' → logprob: -16.000019073486328

Token 1067: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760063529014587
    2. ' +' → logprob: -0.8260063529014587
    3. ',' → logprob: -10.076005935668945
    4. '+x' → logprob: -11.451005935668945
    5. '```' → logprob: -12.826005935668945
    6. '<|end|>' → logprob: -13.201005935668945
    7. '[' → logprob: -13.326005935668945
    8. '   ' → logprob: -13.576005935668945
    9. ')' → logprob: -14.326005935668945
    10. '+
' → logprob: -14.326005935668945

Token 1068: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00048048171447589993
    2. ' dx' → logprob: -8.125480651855469
    3. 'pos' → logprob: -8.625480651855469
    4. '   ' → logprob: -12.875480651855469
    5. '(dx' → logprob: -13.000480651855469
    6. '_dx' → logprob: -16.75048065185547
    7. ' pos' → logprob: -17.12548065185547
    8. '```' → logprob: -17.25048065185547
    9. '
' → logprob: -18.75048065185547
    10. '    
' → logprob: -18.87548065185547

Token 1069: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47408369183540344
    2. ' *' → logprob: -0.974083662033081
    3. ',' → logprob: -13.09908390045166
    4. '*out' → logprob: -13.97408390045166
    5. '*num' → logprob: -14.09908390045166
    6. '*(' → logprob: -14.09908390045166
    7. '*object' → logprob: -14.47408390045166
    8. '*p' → logprob: -14.72408390045166
    9. '```' → logprob: -14.72408390045166
    10. '*t' → logprob: -16.224082946777344

Token 1070: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.15310683415737e-05
    2. ' pos' → logprob: -10.750021934509277
    3. '(pos' → logprob: -22.87502098083496
    4. '_pos' → logprob: -23.62502098083496
    5. '	pos' → logprob: -23.87502098083496
    6. 'Pos' → logprob: -25.00002098083496
    7. '
' → logprob: -25.25002098083496
    8. '   ' → logprob: -25.37502098083496
    9. 'p' → logprob: -25.62502098083496
    10. '[pos' → logprob: -25.87502098083496

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001438266917830333
    2. ' ,' → logprob: -9.375144004821777
    3. ',
' → logprob: -10.625144004821777
    4. ')' → logprob: -10.750144004821777
    5. ',y' → logprob: -12.125144004821777
    6. '       ' → logprob: -12.625144004821777
    7. '   ' → logprob: -13.000144004821777
    8. '),' → logprob: -14.250144004821777
    9. '```' → logprob: -15.250144004821777
    10. '           ' → logprob: -15.500144004821777

Token 1072: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1602245420217514
    2. ' y' → logprob: -1.9102245569229126
    3. '   ' → logprob: -15.660224914550781
    4. '    ' → logprob: -15.910224914550781
    5. '	y' → logprob: -16.91022491455078
    6. '       ' → logprob: -19.03522491455078
    7. '        ' → logprob: -19.28522491455078
    8. ' ' → logprob: -19.91022491455078
    9. ' ' → logprob: -20.28522491455078
    10. '  ' → logprob: -20.66022491455078

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005484775640070438
    2. 'y' → logprob: -5.255484580993652
    3. ')' → logprob: -9.005484580993652
    4. 'dy' → logprob: -10.380484580993652
    5. '<|end|>' → logprob: -11.130484580993652
    6. ' y' → logprob: -11.380484580993652
    7. '*' → logprob: -11.505484580993652
    8. '['' → logprob: -11.755484580993652
    9. '```' → logprob: -12.005484580993652
    10. 's' → logprob: -12.255484580993652

Token 1074: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519327998161316
    2. '+' → logprob: -1.5019328594207764
    3. ')' → logprob: -13.626933097839355
    4. '*' → logprob: -13.751933097839355
    5. ' *' → logprob: -14.001933097839355
    6. '<|end|>' → logprob: -15.251933097839355
    7. '   ' → logprob: -16.50193214416504
    8. ' +
' → logprob: -16.75193214416504
    9. ')+' → logprob: -16.75193214416504
    10. '+
' → logprob: -17.00193214416504

Token 1075: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002613358374219388
    2. ' dy' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.375261306762695
    4. '
' → logprob: -18.875261306762695
    5. '  ' → logprob: -19.500261306762695
    6. '```' → logprob: -19.500261306762695
    7. '.dy' → logprob: -19.750261306762695
    8. '       ' → logprob: -20.000261306762695
    9. '    ' → logprob: -20.250261306762695
    10. 'dym' → logprob: -20.250261306762695

Token 1076: ' *' (ID: 425)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8580254912376404
    2. ' pos' → logprob: -0.8580254912376404
    3. '*' → logprob: -2.358025550842285
    4. ' *' → logprob: -2.858025550842285
    5. '(pos' → logprob: -11.608025550842285
    6. ')' → logprob: -13.608025550842285
    7. '   ' → logprob: -13.608025550842285
    8. '	pos' → logprob: -14.733025550842285
    9. '[pos' → logprob: -14.983025550842285
    10. '_pos' → logprob: -15.108025550842285

Token 1077: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. '(pos' → logprob: -19.750036239624023
    4. '[pos' → logprob: -22.000036239624023
    5. '	pos' → logprob: -22.375036239624023
    6. '   ' → logprob: -22.500036239624023
    7. '       ' → logprob: -24.000036239624023
    8. '_pos' → logprob: -24.125036239624023
    9. 'po' → logprob: -24.500036239624023
    10. ' ' → logprob: -24.625036239624023

Token 1078: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. '   ' → logprob: -11.250019073486328
    3. '       ' → logprob: -12.500019073486328
    4. ' )' → logprob: -13.625019073486328
    5. '<|end|>' → logprob: -14.875019073486328
    6. ')
' → logprob: -15.000019073486328
    7. ')}' → logprob: -15.750019073486328
    8. '}' → logprob: -16.000019073486328
    9. '```' → logprob: -16.125019073486328
    10. '')' → logprob: -16.500019073486328

Token 1079: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9905878305435181
    2. 'def' → logprob: -1.490587830543518
    3. '   ' → logprob: -1.615587830543518
    4. '```' → logprob: -1.615587830543518
    5. '    
' → logprob: -6.6155877113342285
    6. '#' → logprob: -7.2405877113342285
    7. '``' → logprob: -7.3655877113342285
    8. 'Next' → logprob: -7.8655877113342285
    9. '

' → logprob: -7.8655877113342285
    10. ')' → logprob: -7.8655877113342285

Token 1080: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36161208152770996
    2. '   ' → logprob: -1.36161208152771
    3. 'for' → logprob: -3.98661208152771
    4. '#' (adapté à ' #') → logprob: -4.236612319946289
    5. '
' → logprob: -5.361612319946289
    6. '```' → logprob: -5.486612319946289
    7. 'current' → logprob: -6.361612319946289
    8. 'visited' → logprob: -7.236612319946289
    9. 'from' → logprob: -7.361612319946289
    10. 'remaining' → logprob: -7.736612319946289

Token 1081: ' Function' (ID: 11035)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.758527398109436
    2. 'def' → logprob: -1.508527398109436
    3. 'from' → logprob: -1.508527398109436
    4. '#' → logprob: -2.5085272789001465
    5. '   ' → logprob: -6.2585272789001465
    6. 'for' → logprob: -6.3835272789001465
    7. 'queue' → logprob: -6.7585272789001465
    8. 'current' → logprob: -6.8835272789001465
    9. 'state' → logprob: -7.0085272789001465
    10. 'import' → logprob: -8.383527755737305

Token 1082: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3667583167552948
    2. 'def' → logprob: -1.3667583465576172
    3. 'to' → logprob: -3.366758346557617
    4. ' def' → logprob: -4.491758346557617
    5. '_to' → logprob: -5.116758346557617
    6. '
' → logprob: -8.866758346557617
    7. '=' → logprob: -9.116758346557617
    8. '   ' → logprob: -9.991758346557617
    9. 'To' → logprob: -10.491758346557617
    10. '(' → logprob: -11.116758346557617

Token 1083: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.681286633014679
    2. 'can' → logprob: -1.6812865734100342
    3. 'check' → logprob: -2.556286573410034
    4. 'get' → logprob: -2.806286573410034
    5. 'simulate' → logprob: -3.181286573410034
    6. ' move' → logprob: -3.806286573410034
    7. '#' → logprob: -4.181286811828613
    8. 'def' → logprob: -4.306286811828613
    9. 'advance' → logprob: -4.431286811828613
    10. 'pos' → logprob: -4.431286811828613

Token 1084: ' forward' (ID: 6687)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.4334331750869751
    2. 'def' → logprob: -1.183433175086975
    3. ' (' → logprob: -3.8084330558776855
    4. '(' → logprob: -4.4334330558776855
    5. '(
' → logprob: -6.0584330558776855
    6. ' def' → logprob: -6.3084330558776855
    7. '```' → logprob: -6.3084330558776855
    8. '(current' → logprob: -6.6834330558776855
    9. 'on' → logprob: -6.9334330558776855
    10. ' on' → logprob: -7.0584330558776855

Token 1085: ' along' (ID: 4251)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3881641626358032
    2. '(st' → logprob: -1.1381641626358032
    3. '(' → logprob: -7.013164043426514
    4. '   ' → logprob: -8.638164520263672
    5. '(s' → logprob: -9.263164520263672
    6. '(def' → logprob: -10.513164520263672
    7. '(state' → logprob: -10.638164520263672
    8. '(
' → logprob: -10.888164520263672
    9. ' def' → logprob: -11.263164520263672
    10. '(current' → logprob: -11.388164520263672

Token 1086: ' the' (ID: 290)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.4582708179950714
    2. 'the' → logprob: -1.708270788192749
    3. 'a' → logprob: -1.833270788192749
    4. 'def' → logprob: -4.708271026611328
    5. '   ' → logprob: -5.208271026611328
    6. '#' → logprob: -5.833271026611328
    7. ' street' → logprob: -6.083271026611328
    8. 'stre' → logprob: -6.458271026611328
    9. 'current' → logprob: -6.833271026611328
    10. ' a' → logprob: -6.833271026611328

Token 1087: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.10724973678588867
    2. 'current' → logprob: -2.4822497367858887
    3. ' street' → logprob: -4.732249736785889
    4. ' current' → logprob: -5.607249736785889
    5. 'same' → logprob: -5.857249736785889
    6. 'code' → logprob: -7.482249736785889
    7. 'car' → logprob: -7.732249736785889
    8. 'line' → logprob: -8.232250213623047
    9. 'stre' → logprob: -8.357250213623047
    10. '#' → logprob: -8.357250213623047

Token 1088: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03264932334423065
    2. '```' → logprob: -4.407649517059326
    3. '   ' → logprob: -4.532649517059326
    4. '(st' → logprob: -5.407649517059326
    5. '(' → logprob: -6.407649517059326
    6. '
' → logprob: -6.782649517059326
    7. ' def' → logprob: -6.782649517059326
    8. ' (' → logprob: -8.157649040222168
    9. '(def' → logprob: -9.407649040222168
    10. '``' → logprob: -9.657649040222168

Token 1089: ' dist' (ID: 3601)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.514036774635315
    2. 'distance' → logprob: -1.514036774635315
    3. ' one' → logprob: -1.764036774635315
    4. '1' → logprob: -1.889036774635315
    5. ' steps' → logprob: -2.5140366554260254
    6. 'one' → logprob: -2.6390366554260254
    7. ' distance' → logprob: -3.6390366554260254
    8. 'step' → logprob: -4.139036655426025
    9. 'pos' → logprob: -4.389036655426025
    10. ' ' → logprob: -5.139036655426025

Token 1090: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1658952236175537
    2. ' (' → logprob: -2.6658952236175537
    3. '   ' → logprob: -3.5408952236175537
    4. '(' → logprob: -3.7908952236175537
    5. '(st' → logprob: -4.415895462036133
    6. '```' → logprob: -4.540895462036133
    7. '(s' → logprob: -6.290895462036133
    8. ',' → logprob: -6.790895462036133
    9. ' def' → logprob: -6.915895462036133
    10. '(
' → logprob: -7.040895462036133

Token 1091: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050300706177949905
    2. '   ' → logprob: -3.8003005981445312
    3. 'return' → logprob: -3.9253005981445312
    4. '#' → logprob: -6.050300598144531
    5. '
' → logprob: -6.550300598144531
    6. ' def' → logprob: -6.925300598144531
    7. ' return' → logprob: -8.050300598144531
    8. ' returning' → logprob: -8.175300598144531
    9. 'checking' → logprob: -8.800300598144531
    10. '```' → logprob: -8.800300598144531

Token 1092: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7661328911781311
    2. '(st' → logprob: -1.6411328315734863
    3. ' new' → logprob: -1.7661328315734863
    4. ' (' → logprob: -2.7661328315734863
    5. '(s' → logprob: -2.8911328315734863
    6. '(new' → logprob: -3.7661328315734863
    7. 'street' → logprob: -5.016132831573486
    8. '(pos' → logprob: -5.391132831573486
    9. 'updated' → logprob: -5.516132831573486
    10. ' the' → logprob: -6.141132831573486

Token 1093: ' pos' (ID: 1253)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.7982844114303589
    2. 'pos' → logprob: -1.7982844114303589
    3. ' position' → logprob: -2.4232845306396484
    4. '_pos' → logprob: -2.4232845306396484
    5. 'position' → logprob: -2.6732845306396484
    6. 'street' → logprob: -3.0482845306396484
    7. ' (' → logprob: -3.5482845306396484
    8. 'state' → logprob: -4.048284530639648
    9. '_position' → logprob: -4.673284530639648
    10. ' street' → logprob: -4.798284530639648

Token 1094: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2637365758419037
    2. '_al' → logprob: -2.2637364864349365
    3. '   ' → logprob: -2.3887364864349365
    4. '```' → logprob: -4.513736724853516
    5. '(s' → logprob: -5.388736724853516
    6. ',' → logprob: -5.763736724853516
    7. '(' → logprob: -5.888736724853516
    8. ' (' → logprob: -6.513736724853516
    9. '<|end|>' → logprob: -6.513736724853516
    10. ')' → logprob: -6.763736724853516

Token 1095: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.11012132465839386
    2. '(None' → logprob: -2.860121250152588
    3. ' None' → logprob: -3.235121250152588
    4. 'street' → logprob: -5.860121250152588
    5. '   ' → logprob: -7.235121250152588
    6. '(end' → logprob: -8.235121726989746
    7. 'if' → logprob: -8.360121726989746
    8. 'end' → logprob: -8.360121726989746
    9. ' street' → logprob: -8.485121726989746
    10. '(s' → logprob: -8.485121726989746

Token 1096: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4431878328323364
    2. '   ' → logprob: -1.6931878328323364
    3. '(st' → logprob: -2.193187713623047
    4. '(' → logprob: -3.568187713623047
    5. ',' → logprob: -4.443187713623047
    6. ' def' → logprob: -5.068187713623047
    7. ':' → logprob: -5.443187713623047
    8. ' (' → logprob: -5.943187713623047
    9. '```' → logprob: -5.943187713623047
    10. '(
' → logprob: -5.943187713623047

Token 1097: ' can't' (ID: 8535)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26896458864212036
    2. 'pos' → logprob: -2.2689645290374756
    3. 'out' → logprob: -2.5189645290374756
    4. 'ex' → logprob: -3.3939645290374756
    5. 'b' → logprob: -4.393964767456055
    6. 'outside' → logprob: -6.393964767456055
    7. 'moves' → logprob: -7.143964767456055
    8. 'going' → logprob: -7.518964767456055
    9. 'go' → logprob: -7.768964767456055
    10. 'moving' → logprob: -8.018964767456055

Token 1098: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9956815838813782
    2. '_to' → logprob: -1.6206815242767334
    3. '```' → logprob: -1.9956815242767334
    4. '_al' → logprob: -2.6206815242767334
    5. '_forward' → logprob: -2.6206815242767334
    6. '   ' → logprob: -2.9956815242767334
    7. ' move' → logprob: -3.7456815242767334
    8. 'move' → logprob: -3.8706815242767334
    9. '
' → logprob: -4.1206817626953125
    10. '_move' → logprob: -4.8706817626953125

Token 1099: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6232898831367493
    2. '   ' → logprob: -0.8732898831367493
    3. ':' → logprob: -4.248290061950684
    4. '```' → logprob: -4.248290061950684
    5. '(' → logprob: -4.873290061950684
    6. ' def' → logprob: -6.498290061950684
    7. '(st' → logprob: -6.623290061950684
    8. ' (' → logprob: -6.998290061950684
    9. ',' → logprob: -6.998290061950684
    10. '<|end|>' → logprob: -7.123290061950684

Token 1100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00013393278641160578
    2. '
' → logprob: -9.250133514404297
    3. ' def' → logprob: -10.375133514404297
    4. '   ' → logprob: -12.000133514404297
    5. '    
' → logprob: -15.750133514404297
    6. '```' → logprob: -16.000133514404297
    7. ' 
' → logprob: -16.250133514404297
    8. '  
' → logprob: -16.750133514404297
    9. 'ndef' → logprob: -17.000133514404297
    10. '\' → logprob: -18.000133514404297

Token 1101: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.11858069896697998
    2. ' move' → logprob: -2.2435808181762695
    3. 'try' → logprob: -5.3685808181762695
    4. 'can' → logprob: -7.7435808181762695
    5. ' try' → logprob: -7.8685808181762695
    6. 'pos' → logprob: -8.99358081817627
    7. 'advance' → logprob: -9.36858081817627
    8. ' can' → logprob: -11.49358081817627
    9. 'def' → logprob: -11.86858081817627
    10. 'step' → logprob: -12.24358081817627

Token 1102: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.008541285991668701
    2. '_al' → logprob: -5.758541107177734
    3. '(st' → logprob: -5.883541107177734
    4. '_pos' → logprob: -6.883541107177734
    5. 'forward' → logprob: -7.633541107177734
    6. '_token' → logprob: -8.508541107177734
    7. '_on' → logprob: -8.633541107177734
    8. '_' → logprob: -8.633541107177734
    9. '(_' → logprob: -9.383541107177734
    10. '_st' → logprob: -9.633541107177734

Token 1103: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.002939309924840927
    2. '(' → logprob: -6.252939224243164
    3. '(s' → logprob: -7.002939224243164
    4. '(self' → logprob: -10.252939224243164
    5. ' (' → logprob: -10.502939224243164
    6. '(state' → logprob: -10.877939224243164
    7. '(current' → logprob: -11.627939224243164
    8. '(
' → logprob: -12.627939224243164
    9. '   ' → logprob: -14.377939224243164
    10. '(stock' → logprob: -14.377939224243164

Token 1104: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.0012004701420664787
    2. 'r' → logprob: -6.8762006759643555
    3. 'ree' → logprob: -9.626200675964355
    4. 're' → logprob: -9.876200675964355
    5. 'ret' → logprob: -10.251200675964355
    6. 'reat' → logprob: -12.501200675964355
    7. 'reep' → logprob: -12.626200675964355
    8. 'ep' → logprob: -13.126200675964355
    9. '_re' → logprob: -13.751200675964355
    10. 'REET' → logprob: -13.751200675964355

Token 1105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010187433508690447
    2. ' ,' → logprob: -9.625102043151855
    3. '_,' → logprob: -12.000102043151855
    4. ',
' → logprob: -12.125102043151855
    5. '   ' → logprob: -12.250102043151855
    6. ',s' → logprob: -12.375102043151855
    7. '',' → logprob: -13.125102043151855
    8. '‌,' → logprob: -13.125102043151855
    9. ',state' → logprob: -13.125102043151855
    10. '_tokens' → logprob: -14.125102043151855

Token 1106: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.018247926607728004
    2. ' pos' → logprob: -4.018248081207275
    3. 'current' → logprob: -10.143247604370117
    4. '   ' → logprob: -10.643247604370117
    5. ' current' → logprob: -11.643247604370117
    6. 'position' → logprob: -11.768247604370117
    7. 'dist' → logprob: -12.143247604370117
    8. '       ' → logprob: -13.393247604370117
    9. '```' → logprob: -13.518247604370117
    10. 'curr' → logprob: -13.768247604370117

Token 1107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000682530109770596
    2. ' ,' → logprob: -8.125682830810547
    3. '+,' → logprob: -8.625682830810547
    4. '+' → logprob: -9.000682830810547
    5. ' +' → logprob: -9.625682830810547
    6. '_,' → logprob: -12.500682830810547
    7. ',
' → logprob: -12.500682830810547
    8. '   ' → logprob: -12.625682830810547
    9. ',pos' → logprob: -13.250682830810547
    10. ',int' → logprob: -13.625682830810547

Token 1108: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008120091515593231
    2. ' dist' → logprob: -7.37581205368042
    3. '   ' → logprob: -8.875811576843262
    4. '       ' → logprob: -11.000811576843262
    5. 'distance' → logprob: -12.000811576843262
    6. '	dist' → logprob: -12.500811576843262
    7. '  ' → logprob: -12.625811576843262
    8. '    ' → logprob: -12.750811576843262
    9. '     ' → logprob: -13.125811576843262
    10. '           ' → logprob: -13.375811576843262

Token 1109: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07940259575843811
    2. '):
' → logprob: -2.9544026851654053
    3. ',' → logprob: -3.8294026851654053
    4. '   ' → logprob: -6.079402446746826
    5. ':' → logprob: -9.579402923583984
    6. '+' → logprob: -9.954402923583984
    7. '):
' → logprob: -10.704402923583984
    8. '    ' → logprob: -11.454402923583984
    9. '       ' → logprob: -11.454402923583984
    10. '=' → logprob: -12.079402923583984

Token 1110: ' forward' (ID: 6687)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.8119182586669922
    2. 'street' → logprob: -1.0619182586669922
    3. '):
' → logprob: -1.8119182586669922
    4. '   ' → logprob: -4.436918258666992
    5. 'length' → logprob: -4.811918258666992
    6. '):' → logprob: -4.811918258666992
    7. ')' → logprob: -5.561918258666992
    8. 'pos' → logprob: -6.186918258666992
    9. '):

' → logprob: -6.186918258666992
    10. ' length' → logprob: -6.686918258666992

Token 1111: '=True' (ID: 7827)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5669063329696655
    2. '):' → logprob: -0.9419063329696655
    3. '=True' → logprob: -3.191906452178955
    4. ',' → logprob: -6.816906452178955
    5. '=' → logprob: -7.691906452178955
    6. '   ' → logprob: -9.316905975341797
    7. '=False' → logprob: -10.316905975341797
    8. '_' → logprob: -11.441905975341797
    9. '):
' → logprob: -11.691905975341797
    10. '```' → logprob: -11.816905975341797

Token 1112: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3913213908672333
    2. '):' → logprob: -1.1413214206695557
    3. '   ' → logprob: -5.891321182250977
    4. ':' → logprob: -6.891321182250977
    5. '       ' → logprob: -7.891321182250977
    6. ',' → logprob: -8.891321182250977
    7. '):
' → logprob: -10.391321182250977
    8. ':
' → logprob: -10.766321182250977
    9. '):

' → logprob: -11.141321182250977
    10. '<|end|>' → logprob: -11.141321182250977

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4731857776641846
    2. ' if' → logprob: -1.5981857776641846
    3. '   ' → logprob: -1.7231857776641846
    4. '    ' → logprob: -1.8481857776641846
    5. ' 
' → logprob: -2.2231857776641846
    6. ' ' → logprob: -3.3481857776641846
    7. '<|end|>' → logprob: -4.3481855392456055
    8. '[' → logprob: -4.8481855392456055
    9. '```' → logprob: -4.8481855392456055
    10. '     
' → logprob: -5.0981855392456055

Token 1114: ' length' (ID: 5517)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5462042093276978
    2. 'if' → logprob: -0.9212042093276978
    3. '   ' → logprob: -4.546204090118408
    4. '       ' → logprob: -4.921204090118408
    5. 'pos' → logprob: -6.546204090118408
    6. '```' → logprob: -6.796204090118408
    7. 'max' → logprob: -7.546204090118408
    8. 'n' → logprob: -7.921204090118408
    9. '    ' → logprob: -8.296204566955566
    10. '+' → logprob: -8.671204566955566

Token 1115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4815444946289062
    2. ' =' → logprob: -1.7315444946289062
    3. '<|end|>' → logprob: -1.8565444946289062
    4. ' -' → logprob: -1.9815444946289062
    5. '+' → logprob: -1.9815444946289062
    6. ' +' → logprob: -3.1065444946289062
    7. ',' → logprob: -3.2315444946289062
    8. '-' → logprob: -4.106544494628906
    9. ' >=' → logprob: -4.356544494628906
    10. ')' → logprob: -4.856544494628906

Token 1116: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.02057669311761856
    2. ' street' → logprob: -3.8955767154693604
    3. 'stre' → logprob: -10.770576477050781
    4. 'st' → logprob: -12.020576477050781
    5. '   ' → logprob: -12.770576477050781
    6. 'stroke' → logprob: -13.145576477050781
    7. 'length' → logprob: -13.520576477050781
    8. '.street' → logprob: -15.020576477050781
    9. '```' → logprob: -15.270576477050781
    10. 'dist' → logprob: -15.645576477050781

Token 1117: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -7.290784560609609e-05
    2. '[' → logprob: -10.125072479248047
    3. '["' → logprob: -10.750072479248047
    4. '   ' → logprob: -12.875072479248047
    5. 'length' → logprob: -13.375072479248047
    6. '[length' → logprob: -13.500072479248047
    7. '[
' → logprob: -13.625072479248047
    8. '```' → logprob: -14.125072479248047
    9. ''s' → logprob: -14.250072479248047
    10. ' ['' → logprob: -14.500072479248047

Token 1118: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.001955394633114338
    2. ''' → logprob: -6.251955509185791
    3. '['' → logprob: -11.376955032348633
    4. '[length' → logprob: -11.876955032348633
    5. ''s' → logprob: -12.751955032348633
    6. ''l' → logprob: -13.251955032348633
    7. '{'' → logprob: -14.001955032348633
    8. ''d' → logprob: -14.376955032348633
    9. ' length' → logprob: -14.751955032348633
    10. 'leng' → logprob: -15.001955032348633

Token 1119: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5289414525032043
    2. ' -' → logprob: -2.1539413928985596
    3. '       ' → logprob: -2.4039413928985596
    4. '+' → logprob: -3.2789413928985596
    5. '']' → logprob: -3.2789413928985596
    6. ' +' → logprob: -3.5289413928985596
    7. '-' → logprob: -3.6539413928985596
    8. ']
' → logprob: -4.028941631317139
    9. ')' → logprob: -4.153941631317139
    10. ' if' → logprob: -4.278941631317139

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05502558499574661
    2. ' if' → logprob: -3.055025577545166
    3. 'if' → logprob: -6.055025577545166
    4. '
' → logprob: -6.055025577545166
    5. '   ' → logprob: -7.305025577545166
    6. '        
' → logprob: -8.305026054382324
    7. '```' → logprob: -8.430026054382324
    8. '+' → logprob: -9.055026054382324
    9. '<|end|>' → logprob: -9.180026054382324
    10. ' 
' → logprob: -9.680026054382324

Token 1121: ' dx' (ID: 29472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4477062523365021
    2. ' if' → logprob: -1.0727062225341797
    3. '       ' → logprob: -4.94770622253418
    4. 'new' → logprob: -4.94770622253418
    5. ' new' → logprob: -5.57270622253418
    6. 'next' → logprob: -7.82270622253418
    7. '```' → logprob: -9.19770622253418
    8. ' next' → logprob: -9.57270622253418
    9. 'pos' → logprob: -9.57270622253418
    10. 'return' → logprob: -9.69770622253418

Token 1122: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18670067191123962
    2. '=' → logprob: -3.1867005825042725
    3. ' *' → logprob: -3.3117005825042725
    4. ',' → logprob: -3.4367005825042725
    5. ' =' → logprob: -3.6867005825042725
    6. 'if' → logprob: -4.186700820922852
    7. '<|end|>' → logprob: -4.311700820922852
    8. '*' → logprob: -5.311700820922852
    9. '<|end|>' → logprob: -7.686700820922852
    10. '	if' → logprob: -7.936700820922852

Token 1123: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.06994432210922241
    2. ' dy' → logprob: -2.694944381713867
    3. 'd' → logprob: -12.569944381713867
    4. '<|end|>' → logprob: -14.069944381713867
    5. '0' → logprob: -14.444944381713867
    6. 'ddy' → logprob: -14.569944381713867
    7. '.dy' → logprob: -14.569944381713867
    8. 'Dy' → logprob: -15.069944381713867
    9. 'street' → logprob: -15.069944381713867
    10. 'def' → logprob: -15.194944381713867

Token 1124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062310706824064255
    2. ' =' → logprob: -2.8123106956481934
    3. ',' → logprob: -9.062311172485352
    4. '<|end|>' → logprob: -9.187311172485352
    5. 'if' → logprob: -9.812311172485352
    6. ' if' → logprob: -10.312311172485352
    7. ')' → logprob: -11.312311172485352
    8. '```' → logprob: -12.437311172485352
    9. '=
' → logprob: -12.937311172485352
    10. 'def' → logprob: -13.187311172485352

Token 1125: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.04170149192214012
    2. ' street' → logprob: -3.291701555252075
    3. '(st' → logprob: -7.041701316833496
    4. '1' → logprob: -7.166701316833496
    5. ' (' → logprob: -7.166701316833496
    6. '(' → logprob: -7.666701316833496
    7. 'stre' → logprob: -8.041701316833496
    8. '   ' → logprob: -8.916701316833496
    9. ' ' → logprob: -9.291701316833496
    10. 'st' → logprob: -9.541701316833496

Token 1126: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -12.625012397766113
    3. '_data' → logprob: -12.625012397766113
    4. '   ' → logprob: -13.125012397766113
    5. '{'' → logprob: -14.250012397766113
    6. '['_' → logprob: -15.000012397766113
    7. '```' → logprob: -15.125012397766113
    8. ''s' → logprob: -15.250012397766113
    9. '       ' → logprob: -15.250012397766113
    10. '["' → logprob: -15.250012397766113

Token 1127: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0029920823872089386
    2. ''d' → logprob: -6.502992153167725
    3. ''' → logprob: -7.002992153167725
    4. '['' → logprob: -7.627992153167725
    5. ' dx' → logprob: -10.627991676330566
    6. '_dx' → logprob: -11.377991676330566
    7. '(dx' → logprob: -11.627991676330566
    8. '{'' → logprob: -12.002991676330566
    9. ''s' → logprob: -12.377991676330566
    10. 'd' → logprob: -12.377991676330566

Token 1128: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5718851089477539
    2. '],' → logprob: -0.9468851089477539
    3. ''],' → logprob: -3.571885108947754
    4. ']' → logprob: -4.696885108947754
    5. '',' → logprob: -5.446885108947754
    6. '       ' → logprob: -5.571885108947754
    7. '']' → logprob: -7.446885108947754
    8. ' ,' → logprob: -7.821885108947754
    9. ' ],' → logprob: -8.196885108947754
    10. ','' → logprob: -8.696885108947754

Token 1129: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.00931541994214058
    2. ' street' → logprob: -4.884315490722656
    3. 'dy' → logprob: -6.884315490722656
    4. 'stre' → logprob: -7.384315490722656
    5. 'st' → logprob: -10.134315490722656
    6. ' dy' → logprob: -11.509315490722656
    7. 'stroke' → logprob: -12.634315490722656
    8. '   ' → logprob: -13.134315490722656
    9. '.street' → logprob: -13.509315490722656
    10. '0' → logprob: -13.884315490722656

Token 1130: '['' (ID: 1181)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47261935472488403
    2. '[' → logprob: -1.8476192951202393
    3. '['' → logprob: -1.8476192951202393
    4. ',d' → logprob: -3.0976192951202393
    5. '       ' → logprob: -5.347619533538818
    6. 'dy' → logprob: -5.972619533538818
    7. '   ' → logprob: -6.097619533538818
    8. ','' → logprob: -6.972619533538818
    9. '```' → logprob: -7.097619533538818
    10. ',
' → logprob: -7.347619533538818

Token 1131: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002957783581223339
    2. 'dx' → logprob: -9.250295639038086
    3. ' dy' → logprob: -10.125295639038086
    4. '   ' → logprob: -10.375295639038086
    5. ']' → logprob: -10.875295639038086
    6. '1' → logprob: -11.000295639038086
    7. '']' → logprob: -11.375295639038086
    8. '['' → logprob: -11.625295639038086
    9. ''d' → logprob: -11.750295639038086
    10. 'dz' → logprob: -11.875295639038086

Token 1132: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6399533748626709
    2. ']' → logprob: -1.264953374862671
    3. '']
' → logprob: -2.389953374862671
    4. '       ' → logprob: -2.639953374862671
    5. '']' → logprob: -3.639953374862671
    6. ' if' → logprob: -8.26495361328125
    7. 'if' → logprob: -8.51495361328125
    8. ' ]
' → logprob: -8.88995361328125
    9. '```' → logprob: -9.13995361328125
    10. '   ' → logprob: -9.51495361328125

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036817967891693115
    2. '
' → logprob: -3.786818027496338
    3. '   ' → logprob: -4.786818027496338
    4. ' if' → logprob: -6.286818027496338
    5. '        
' → logprob: -7.161818027496338
    6. ' 
' → logprob: -7.286818027496338
    7. '    
' → logprob: -7.661818027496338
    8. '```' → logprob: -7.786818027496338
    9. '<|end|>' → logprob: -8.16181755065918
    10. '  
' → logprob: -8.78681755065918

Token 1134: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15860174596309662
    2. 'if' → logprob: -2.158601760864258
    3. '       ' → logprob: -3.908601760864258
    4. ' new' → logprob: -4.908601760864258
    5. 'new' → logprob: -6.908601760864258
    6. '   ' → logprob: -7.033601760864258
    7. ' next' → logprob: -7.533601760864258
    8. 'next' → logprob: -7.783601760864258
    9. '```' → logprob: -7.783601760864258
    10. 'pos' → logprob: -9.033601760864258

Token 1135: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009003927931189537
    2. 'new' → logprob: -5.50900411605835
    3. '   ' → logprob: -5.88400411605835
    4. 'delta' → logprob: -7.50900411605835
    5. 'step' → logprob: -7.75900411605835
    6. '       ' → logprob: -8.259003639221191
    7. 'pos' → logprob: -8.384003639221191
    8. ' if' → logprob: -8.384003639221191
    9. '```' → logprob: -9.009003639221191
    10. 'increment' → logprob: -9.634003639221191

Token 1136: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.4824739694595337
    2. ' forward' → logprob: -1.3574739694595337
    3. ' not' → logprob: -2.357473850250244
    4. 'not' → logprob: -3.482473850250244
    5. ' ' → logprob: -11.857474327087402
    6. '
' → logprob: -12.169974327087402
    7. '_forward' → logprob: -12.482474327087402
    8. ' ' → logprob: -12.794974327087402
    9. '.forward' → logprob: -12.857474327087402
    10. '!' → logprob: -12.857474327087402

Token 1137: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1575571894645691
    2. ':
' → logprob: -2.782557249069214
    3. ',' → logprob: -3.282557249069214
    4. ' and' → logprob: -3.532557249069214
    5. 'and' → logprob: -5.157557010650635
    6. '=True' → logprob: -5.407557010650635
    7. '==' → logprob: -5.532557010650635
    8. '=' → logprob: -6.282557010650635
    9. ',
' → logprob: -9.032557487487793
    10. '
' → logprob: -9.157557487487793

Token 1138: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47438669204711914
    2. ' True' → logprob: -0.9743866920471191
    3. 'False' → logprob: -8.224386215209961
    4. ' False' → logprob: -10.099386215209961
    5. '=True' → logprob: -15.224386215209961
    6. '(True' → logprob: -15.849386215209961
    7. '
' → logprob: -18.09938621520996
    8. ' not' → logprob: -18.47438621520996
    9. '```' → logprob: -18.59938621520996
    10. '1' → logprob: -18.59938621520996

Token 1139: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2879381477832794
    2. ':' → logprob: -1.537938117980957
    3. '       ' → logprob: -4.287938117980957
    4. '           ' → logprob: -4.537938117980957
    5. ',' → logprob: -5.162938117980957
    6. ' and' → logprob: -5.537938117980957
    7. '   ' → logprob: -7.787938117980957
    8. '):
' → logprob: -8.412938117980957
    9. '==' → logprob: -8.912938117980957
    10. '```' → logprob: -9.037938117980957

Token 1140: ' moving' (ID: 10067)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5601205825805664
    2. ' dist' → logprob: -1.4351205825805664
    3. ' return' → logprob: -2.6851205825805664
    4. ' pos' → logprob: -2.9351205825805664
    5. 'dist' → logprob: -3.9351205825805664
    6. 'dx' → logprob: -4.185120582580566
    7. ' if' → logprob: -4.935120582580566
    8. '       ' → logprob: -5.060120582580566
    9. ' forward' → logprob: -5.060120582580566
    10. 'pos' → logprob: -5.185120582580566

Token 1141: ' opposite' (ID: 23821)
  Prédit: ' backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' backward' → logprob: -0.7627494931221008
    2. 'back' → logprob: -1.387749433517456
    3. '-' → logprob: -2.762749433517456
    4. ' not' → logprob: -2.887749433517456
    5. '-back' → logprob: -3.387749433517456
    6. 'dx' → logprob: -3.512749433517456
    7. 'not' → logprob: -3.762749433517456
    8. ' dx' → logprob: -4.387749671936035
    9. '_backward' → logprob: -4.387749671936035
    10. '   ' → logprob: -5.137749671936035

Token 1142: ' to' (ID: 316)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.5207564234733582
    2. 'to' → logprob: -2.020756483078003
    3. ' to' → logprob: -2.270756483078003
    4. ',' → logprob: -2.895756483078003
    5. ' direction' → logprob: -3.520756483078003
    6. '=True' → logprob: -4.020756244659424
    7. 'of' → logprob: -4.270756244659424
    8. '       ' → logprob: -4.895756244659424
    9. ' of' → logprob: -5.020756244659424
    10. '=False' → logprob: -5.270756244659424

Token 1143: ' street' (ID: 12901)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.049392495304346085
    2. 'direction' → logprob: -4.0493927001953125
    3. 'dy' → logprob: -4.2993927001953125
    4. '(dx' → logprob: -4.4243927001953125
    5. ' dx' → logprob: -5.9243927001953125
    6. '(' → logprob: -7.5493927001953125
    7. 'the' → logprob: -7.9243927001953125
    8. '   ' → logprob: -7.9243927001953125
    9. 'street' → logprob: -8.549392700195312
    10. '1' → logprob: -8.674392700195312

Token 1144: ' direction' (ID: 9262)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5595734715461731
    2. ':
' → logprob: -1.9345734119415283
    3. ',
' → logprob: -2.8095734119415283
    4. '       ' → logprob: -2.8095734119415283
    5. ':' → logprob: -2.9345734119415283
    6. '   ' → logprob: -3.0595734119415283
    7. '['' → logprob: -4.059573650360107
    8. 'direction' → logprob: -4.684573650360107
    9. '```' → logprob: -5.309573650360107
    10. '):
' → logprob: -5.309573650360107

Token 1145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15029935538768768
    2. '
' → logprob: -2.525299310684204
    3. '   ' → logprob: -3.150299310684204
    4. ',' → logprob: -5.025299549102783
    5. ':' → logprob: -5.900299549102783
    6. ':
' → logprob: -5.900299549102783
    7. ' if' → logprob: -6.275299549102783
    8. ',
' → logprob: -7.400299549102783
    9. '):
' → logprob: -7.525299549102783
    10. '```' → logprob: -7.650299549102783

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7377238869667053
    2. ':' → logprob: -1.2377238273620605
    3. ':
' → logprob: -2.1127238273620605
    4. '   ' → logprob: -2.7377238273620605
    5. '```' → logprob: -4.2377238273620605
    6. ',' → logprob: -4.4877238273620605
    7. '
' → logprob: -5.3627238273620605
    8. '[' → logprob: -5.4877238273620605
    9. '):
' → logprob: -5.8627238273620605
    10. '           ' → logprob: -6.8627238273620605

Token 1147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10805373638868332
    2. '       ' → logprob: -2.608053684234619
    3. 'if' (adapté à ' if') → logprob: -3.983053684234619
    4. '   ' → logprob: -4.983053684234619
    5. ' pos' → logprob: -6.483053684234619
    6. 'pos' → logprob: -7.108053684234619
    7. ' return' → logprob: -8.358054161071777
    8. '
' → logprob: -8.733054161071777
    9. ' new' → logprob: -8.858054161071777
    10. '```' → logprob: -9.608054161071777

Token 1148: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.325594961643219
    2. ' not' → logprob: -1.5755949020385742
    3. 'forward' → logprob: -2.825594902038574
    4. ' forward' → logprob: -4.450594902038574
    5. '	not' → logprob: -10.325594902038574
    6. '   ' → logprob: -11.200594902038574
    7. '
' → logprob: -11.200594902038574
    8. '(not' → logprob: -12.888094902038574
    9. ' ' → logprob: -13.575594902038574
    10. '!' → logprob: -13.700594902038574

Token 1149: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.04858771339058876
    2. ' forward' → logprob: -3.0485877990722656
    3. '_forward' → logprob: -15.548587799072266
    4. '.forward' → logprob: -16.298587799072266
    5. 'Forward' → logprob: -16.923587799072266
    6. ' ' → logprob: -17.923587799072266
    7. '(for' → logprob: -18.048587799072266
    8. '
' → logprob: -18.798587799072266
    9. 'for' → logprob: -19.048587799072266
    10. ' ' → logprob: -19.298587799072266

Token 1150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07896304875612259
    2. ':
' → logprob: -2.578963041305542
    3. ' :' → logprob: -10.078963279724121
    4. ' :
' → logprob: -11.703963279724121
    5. '):
' → logprob: -11.953963279724121
    6. '):' → logprob: -12.328963279724121
    7. ':return' → logprob: -12.828963279724121
    8. ',' → logprob: -12.828963279724121
    9. ':
' → logprob: -13.078963279724121
    10. ':

' → logprob: -13.828963279724121

Token 1151: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6915004849433899
    2. ':
' → logprob: -0.8165004849433899
    3. '       ' → logprob: -2.941500425338745
    4. ' and' → logprob: -6.691500663757324
    5. ',' → logprob: -7.066500663757324
    6. '           ' → logprob: -7.191500663757324
    7. '   ' → logprob: -7.191500663757324
    8. '):
' → logprob: -8.691500663757324
    9. ':return' → logprob: -8.941500663757324
    10. ' :' → logprob: -9.191500663757324

Token 1152: ' dist' (ID: 3601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7295081615447998
    2. 'dist' (adapté à ' dist') → logprob: -0.8545081615447998
    3. 'dx' → logprob: -2.8545081615448
    4. 'return' → logprob: -3.9795081615448
    5. 'if' → logprob: -4.854508399963379
    6. '       ' → logprob: -5.354508399963379
    7. 'new' → logprob: -6.479508399963379
    8. ' pos' → logprob: -7.354508399963379
    9. '           ' → logprob: -8.229508399963379
    10. ' dist' → logprob: -8.354508399963379

Token 1153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003256734926253557
    2. ' =' → logprob: -5.753256797790527
    3. '*=' → logprob: -9.503256797790527
    4. ' *=' → logprob: -13.378256797790527
    5. '*' → logprob: -13.378256797790527
    6. '=-' → logprob: -14.253256797790527
    7. '<=' → logprob: -15.503256797790527
    8. '>' → logprob: -16.12825584411621
    9. '.=' → logprob: -16.62825584411621
    10. '-=' → logprob: -16.75325584411621

Token 1154: ' -' (ID: 533)
  Prédit: '-dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dist' → logprob: -0.9259793162345886
    2. ' -' → logprob: -1.0509793758392334
    3. '-' → logprob: -1.4259793758392334
    4. '-pos' → logprob: -4.550979137420654
    5. 'dist' → logprob: -6.550979137420654
    6. '-distance' → logprob: -7.050979137420654
    7. '-d' → logprob: -7.800979137420654
    8. ' dist' → logprob: -8.050979614257812
    9. '-position' → logprob: -8.800979614257812
    10. '-length' → logprob: -9.800979614257812

Token 1155: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.306760805164231e-05
    2. ' dist' → logprob: -11.25001335144043
    3. '	dist' → logprob: -18.37501335144043
    4. '1' → logprob: -20.37501335144043
    5. '(dist' → logprob: -20.62501335144043
    6. '_dist' → logprob: -21.00001335144043
    7. 'Dist' → logprob: -21.00001335144043
    8. '```' → logprob: -21.87501335144043
    9. '.dist' → logprob: -22.00001335144043
    10. '
' → logprob: -22.37501335144043

Token 1156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41520389914512634
    2. '<|end|>' → logprob: -1.2902039289474487
    3. ',' → logprob: -3.790203809738159
    4. '
' → logprob: -4.290204048156738
    5. '<|end|>' → logprob: -4.290204048156738
    6. ' if' → logprob: -4.790204048156738
    7. '   ' → logprob: -6.415204048156738
    8. ')' → logprob: -6.665204048156738
    9. '...' → logprob: -7.915204048156738
    10. '```' → logprob: -8.415204048156738

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8345450162887573
    2. '<|end|>' → logprob: -1.3345450162887573
    3. '
' → logprob: -1.4595450162887573
    4. '   ' → logprob: -3.459545135498047
    5. '\n' → logprob: -5.084545135498047
    6. ')' → logprob: -5.334545135498047
    7. '```' → logprob: -5.459545135498047
    8. ',' → logprob: -5.584545135498047
    9. '<|end|>' → logprob: -5.709545135498047
    10. '  
' → logprob: -6.084545135498047

Token 1158: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4465513825416565
    2. 'new' (adapté à ' new') → logprob: -1.3215513229370117
    3. '       ' → logprob: -2.6965513229370117
    4. ' if' → logprob: -4.446551322937012
    5. 'if' → logprob: -4.946551322937012
    6. '   ' → logprob: -6.071551322937012
    7. '
' → logprob: -6.196551322937012
    8. 'next' → logprob: -7.196551322937012
    9. 'pos' → logprob: -7.446551322937012
    10. ' next' → logprob: -7.821551322937012

Token 1159: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.004835345782339573
    2. '_' → logprob: -5.37983512878418
    3. '_position' → logprob: -9.00483512878418
    4. 'pos' → logprob: -10.00483512878418
    5. ' _' → logprob: -10.25483512878418
    6. '_positions' → logprob: -12.75483512878418
    7. '_val' → logprob: -13.37983512878418
    8. '_token' → logprob: -13.37983512878418
    9. ',' → logprob: -14.12983512878418
    10. 'Pos' → logprob: -14.25483512878418

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142103731632233
    2. ' =' → logprob: -1.7014210224151611
    3. '<|end|>' → logprob: -11.951420783996582
    4. ')' → logprob: -15.201420783996582
    5. '=
' → logprob: -15.451420783996582
    6. '+=' → logprob: -15.826420783996582
    7. '<|end|>' → logprob: -16.0764217376709
    8. ',' → logprob: -16.0764217376709
    9. ' +=' → logprob: -16.4514217376709
    10. '```' → logprob: -16.4514217376709

Token 1161: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07888989895582199
    2. ' pos' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.078889846801758
    4. '	pos' → logprob: -17.203889846801758
    5. '       ' → logprob: -17.453889846801758
    6. '0' → logprob: -18.078889846801758
    7. 'Pos' → logprob: -18.453889846801758
    8. '_pos' → logprob: -18.828889846801758
    9. '           ' → logprob: -18.828889846801758
    10. '(pos' → logprob: -19.203889846801758

Token 1162: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519439160823822
    2. '+' → logprob: -1.5019439458847046
    3. '<|end|>' → logprob: -11.376943588256836
    4. ' +=' → logprob: -13.876943588256836
    5. '[' → logprob: -14.376943588256836
    6. ' +
' → logprob: -15.001943588256836
    7. '<|end|>' → logprob: -15.251943588256836
    8. '+=' → logprob: -15.376943588256836
    9. ')' → logprob: -15.626943588256836
    10. '+
' → logprob: -15.751943588256836

Token 1163: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005530327325686812
    2. ' dist' → logprob: -7.500553131103516
    3. '(dist' → logprob: -18.500553131103516
    4. '	dist' → logprob: -19.250553131103516
    5. '   ' → logprob: -19.625553131103516
    6. '_dist' → logprob: -19.875553131103516
    7. 'Dist' → logprob: -20.500553131103516
    8. '
' → logprob: -20.750553131103516
    9. '       ' → logprob: -21.000553131103516
    10. '```' → logprob: -21.250553131103516

Token 1164: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5192941427230835
    2. '       ' → logprob: -1.6442941427230835
    3. '
' → logprob: -2.269294261932373
    4. '   ' → logprob: -2.644294261932373
    5. 'if' → logprob: -3.894294261932373
    6. '	if' → logprob: -4.519294261932373
    7. '<|end|>' → logprob: -5.519294261932373
    8. ',' → logprob: -7.144294261932373
    9. '  
' → logprob: -7.769294261932373
    10. '    
' → logprob: -9.019293785095215

Token 1165: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16071371734142303
    2. '   ' → logprob: -2.1607136726379395
    3. '       ' → logprob: -3.6607136726379395
    4. 'if' → logprob: -5.2857136726379395
    5. '	if' → logprob: -7.1607136726379395
    6. '<|end|>' → logprob: -7.5357136726379395
    7. '```' → logprob: -7.6607136726379395
    8. '
' → logprob: -8.410714149475098
    9. ',' → logprob: -9.035714149475098
    10. ')' → logprob: -9.910714149475098

Token 1166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02980221062898636
    2. ' if' → logprob: -3.5298023223876953
    3. '   ' → logprob: -10.779802322387695
    4. '       ' → logprob: -10.779802322387695
    5. '```' → logprob: -11.529802322387695
    6. '
' → logprob: -15.904802322387695
    7. '	if' → logprob: -17.029802322387695
    8. '``' → logprob: -17.404802322387695
    9. ' ' → logprob: -18.154802322387695
    10. 'return' → logprob: -18.404802322387695

Token 1167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13083499670028687
    2. ' ' → logprob: -2.5058350563049316
    3. ' new' → logprob: -3.6308350563049316
    4. 'new' → logprob: -4.255835056304932
    5. ' not' → logprob: -8.255834579467773
    6. 'not' → logprob: -10.005834579467773
    7. '   ' → logprob: -10.130834579467773
    8. '```' → logprob: -13.380834579467773
    9. '  ' → logprob: -13.505834579467773
    10. '       ' → logprob: -14.130834579467773

Token 1168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004819564986974001
    2. 'new' → logprob: -5.379819393157959
    3. 'not' → logprob: -9.129819869995117
    4. ' ' → logprob: -10.004819869995117
    5. '-' → logprob: -10.629819869995117
    6. '<' → logprob: -11.379819869995117
    7. ' new' → logprob: -12.379819869995117
    8. '(' → logprob: -13.879819869995117
    9. '```' → logprob: -13.879819869995117
    10. '   ' → logprob: -14.129819869995117

Token 1169: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4741474390029907
    2. '<=' → logprob: -0.9741474390029907
    3. '<' → logprob: -9.97414779663086
    4. ' <' → logprob: -11.09914779663086
    5. '```' → logprob: -12.84914779663086
    6. ')' → logprob: -13.72414779663086
    7. '[' → logprob: -13.97414779663086
    8. '=' → logprob: -14.22414779663086
    9. '>' → logprob: -14.34914779663086
    10. 'new' → logprob: -14.47414779663086

Token 1170: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0010332842357456684
    2. ' new' → logprob: -6.876033306121826
    3. '```' → logprob: -16.001033782958984
    4. '   ' → logprob: -16.251033782958984
    5. '
' → logprob: -16.376033782958984
    6. '       ' → logprob: -16.751033782958984
    7. '           ' → logprob: -17.126033782958984
    8. '	new' → logprob: -17.251033782958984
    9. ')new' → logprob: -18.501033782958984
    10. ' ' → logprob: -18.501033782958984

Token 1171: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0021979559678584337
    2. 'pos' → logprob: -6.127197742462158
    3. 'new' → logprob: -11.502198219299316
    4. 'Pos' → logprob: -13.127198219299316
    5. '	pos' → logprob: -15.752198219299316
    6. '_' → logprob: -16.377197265625
    7. '_p' → logprob: -16.752197265625
    8. '```' → logprob: -16.752197265625
    9. 's' → logprob: -17.127197265625
    10. 'os' → logprob: -17.377197265625

Token 1172: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6662218570709229
    2. ' <=' → logprob: -1.0412218570709229
    3. '<' → logprob: -2.166221857070923
    4. ' <' → logprob: -4.041221618652344
    5. ' and' → logprob: -7.416221618652344
    6. 'and' → logprob: -7.791221618652344
    7. '<len' → logprob: -10.166221618652344
    8. '<|end|>' → logprob: -10.166221618652344
    9. '[' → logprob: -10.541221618652344
    10. '≤' → logprob: -12.541221618652344

Token 1173: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.047600094228982925
    2. 'street' → logprob: -3.297600030899048
    3. ' length' → logprob: -4.672600269317627
    4. ' street' → logprob: -8.797599792480469
    5. 'stre' → logprob: -11.922599792480469
    6. 'new' → logprob: -12.672599792480469
    7. 'stroke' → logprob: -13.922599792480469
    8. ' ' → logprob: -14.547599792480469
    9. '   ' → logprob: -14.547599792480469
    10. '(length' → logprob: -14.547599792480469

Token 1174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01015539187937975
    2. ':
' → logprob: -4.635155200958252
    3. ':return' → logprob: -8.38515567779541
    4. '       ' → logprob: -9.26015567779541
    5. '<|end|>' → logprob: -10.01015567779541
    6. ' and' → logprob: -11.88515567779541
    7. '):' → logprob: -11.88515567779541
    8. '<|end|>' → logprob: -12.51015567779541
    9. ',' → logprob: -12.76015567779541
    10. ' :' → logprob: -12.76015567779541

Token 1175: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37853842973709106
    2. '           ' → logprob: -1.3785383701324463
    3. ' return' → logprob: -3.7535383701324463
    4. ':' → logprob: -4.253538608551025
    5. ':
' → logprob: -4.753538608551025
    6. ':return' → logprob: -4.878538608551025
    7. 'return' → logprob: -5.503538608551025
    8. ' :' → logprob: -7.128538608551025
    9. '```' → logprob: -7.253538608551025
    10. '	       ' → logprob: -7.378538608551025

Token 1176: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27346083521842957
    2. ' return' → logprob: -2.023460865020752
    3. 'return' (adapté à ' return') → logprob: -2.273460865020752
    4. '           ' → logprob: -5.898460865020752
    5. '	return' → logprob: -7.023460865020752
    6. '	' → logprob: -9.023460388183594
    7. '   ' → logprob: -9.148460388183594
    8. '               ' → logprob: -9.273460388183594
    9. '	       ' → logprob: -9.648460388183594
    10. ' ' → logprob: -11.023460388183594

Token 1177: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1269284337759018
    2. ' new' → logprob: -2.1269283294677734
    3. '	new' → logprob: -16.251928329467773
    4. '(new' → logprob: -16.751928329467773
    5. 'int' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.751928329467773
    7. '
' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.376928329467773
    9. ' ' → logprob: -18.626928329467773
    10. '_new' → logprob: -18.876928329467773

Token 1178: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3663626305060461e-05
    2. 'pos' → logprob: -11.25001335144043
    3. 'Pos' → logprob: -15.25001335144043
    4. '_token' → logprob: -15.87501335144043
    5. '_p' → logprob: -16.25001335144043
    6. 'new' → logprob: -16.50001335144043
    7. '\' → logprob: -17.25001335144043
    8. '_' → logprob: -17.37501335144043
    9. '```' → logprob: -17.87501335144043
    10. '_position' → logprob: -18.12501335144043

Token 1179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011029450688511133
    2. 'return' → logprob: -7.251102924346924
    3. 'else' → logprob: -8.251103401184082
    4. '<|end|>' → logprob: -9.876103401184082
    5. ' else' → logprob: -10.376103401184082
    6. ' return' → logprob: -10.876103401184082
    7. '
' → logprob: -11.751103401184082
    8. '	' → logprob: -12.001103401184082
    9. '	return' → logprob: -12.376103401184082
    10. '<|end|>' → logprob: -12.501103401184082

Token 1180: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1181: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7039018273353577
    2. ' else' → logprob: -0.8289018273353577
    3. '   ' → logprob: -3.453901767730713
    4. 'else' (adapté à ' else') → logprob: -3.953901767730713
    5. '<|end|>' → logprob: -4.703901767730713
    6. '	else' → logprob: -6.203901767730713
    7. '
' → logprob: -6.453901767730713
    8. '    ' → logprob: -7.203901767730713
    9. '    
' → logprob: -7.328901767730713
    10. '<|end|>' → logprob: -7.328901767730713

Token 1182: ':
' (ID: 734)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.2162788063287735
    2. '           ' → logprob: -2.2162787914276123
    3. 'None' → logprob: -2.7162787914276123
    4. ':
' → logprob: -5.091279029846191
    5. '(None' → logprob: -5.341279029846191
    6. ':' → logprob: -5.466279029846191
    7. '       ' → logprob: -6.466279029846191
    8. '=None' → logprob: -6.466279029846191
    9. ' return' → logprob: -8.091279029846191
    10. '   ' → logprob: -8.591279029846191

Token 1183: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4144287109375
    2. 'return' → logprob: -2.0394287109375
    3. '           ' → logprob: -2.1644287109375
    4. ' None' → logprob: -2.5394287109375
    5. '       ' → logprob: -4.4144287109375
    6. 'None' → logprob: -5.7894287109375
    7. '(None' → logprob: -9.4144287109375
    8. '   ' → logprob: -9.7894287109375
    9. '        
' → logprob: -10.0394287109375
    10. '	return' → logprob: -10.9144287109375

Token 1184: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001938750152476132
    2. 'return' (adapté à ' return') → logprob: -6.251938819885254
    3. ' None' → logprob: -11.626938819885254
    4. '           ' → logprob: -14.251938819885254
    5. '   ' → logprob: -14.876938819885254
    6. 'none' → logprob: -16.251937866210938
    7. '       ' → logprob: -16.501937866210938
    8. ' return' → logprob: -17.376937866210938
    9. '
' → logprob: -18.626937866210938
    10. '0' → logprob: -19.501937866210938

Token 1185: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. '(None' → logprob: -21.375036239624023
    4. '_None' → logprob: -21.375036239624023
    5. '   ' → logprob: -21.875036239624023
    6. 'none' → logprob: -22.375036239624023
    7. '
' → logprob: -23.625036239624023
    8. 'False' → logprob: -24.000036239624023
    9. '=None' → logprob: -24.125036239624023
    10. ',None' → logprob: -24.375036239624023

Token 1186: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6442728042602539
    2. '<|end|>' → logprob: -1.644272804260254
    3. '```' → logprob: -2.519272804260254
    4. ':' → logprob: -2.894272804260254
    5. 'def' → logprob: -3.269272804260254
    6. '
' → logprob: -3.644272804260254
    7. ',' → logprob: -4.019272804260254
    8. ')' → logprob: -4.019272804260254
    9. 'for' → logprob: -4.894272804260254
    10. ' for' → logprob: -5.019272804260254

Token 1187: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4482603669166565
    2. '   ' → logprob: -1.0732603073120117
    3. ' for' → logprob: -4.323260307312012
    4. 'next' → logprob: -5.948260307312012
    5. 'def' → logprob: -6.573260307312012
    6. '```' → logprob: -6.573260307312012
    7. 'current' → logprob: -8.698260307312012
    8. 'Next' → logprob: -8.948260307312012
    9. 'remaining' → logprob: -9.073260307312012
    10. 'i' → logprob: -10.073260307312012

Token 1188: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.535668134689331
    2. 'for' → logprob: -1.285668134689331
    3. 'def' → logprob: -2.660668134689331
    4. '```' → logprob: -3.160668134689331
    5. ' for' → logprob: -4.41066837310791
    6. '#' (adapté à ' #') → logprob: -6.03566837310791
    7. '
' → logprob: -6.41066837310791
    8. ')' → logprob: -6.78566837310791
    9. 'next' → logprob: -6.78566837310791
    10. 'if' → logprob: -6.91066837310791

Token 1189: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.312352180480957
    2. 'for' → logprob: -1.937352180480957
    3. '#' → logprob: -2.062352180480957
    4. 'visited' → logprob: -2.062352180480957
    5. '   ' → logprob: -2.562352180480957
    6. 'from' → logprob: -2.687352180480957
    7. 'pos' → logprob: -3.062352180480957
    8. 'current' → logprob: -3.437352180480957
    9. 'time' → logprob: -3.937352180480957
    10. 'queue' → logprob: -4.062352180480957

Token 1190: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2530661821365356
    2. 'def' → logprob: -1.6280661821365356
    3. 'len' → logprob: -1.6280661821365356
    4. 't' → logprob: -1.7530661821365356
    5. 'moves' → logprob: -3.628066062927246
    6. ' if' → logprob: -4.003066062927246
    7. '#' → logprob: -4.003066062927246
    8. 'for' → logprob: -4.503066062927246
    9. 'pos' → logprob: -4.503066062927246
    10. '_moves' → logprob: -4.878066062927246

Token 1191: ' two' (ID: 1920)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9888126254081726
    2. ' pos' → logprob: -1.1138126850128174
    3. ' new' → logprob: -3.2388126850128174
    4. ' move' → logprob: -3.2388126850128174
    5. ' dist' → logprob: -3.8638126850128174
    6. ' the' → logprob: -3.8638126850128174
    7. 'dist' → logprob: -3.8638126850128174
    8. 't' → logprob: -3.9888126850128174
    9. ' moves' → logprob: -4.238812446594238
    10. 'move' → logprob: -4.613812446594238

Token 1192: ' directions' (ID: 24921)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3804759681224823
    2. 'stre' → logprob: -1.3804759979248047
    3. 'segments' → logprob: -3.1304759979248047
    4. 'points' → logprob: -5.255475997924805
    5. 'street' → logprob: -5.630475997924805
    6. 'states' → logprob: -5.755475997924805
    7. '   ' → logprob: -6.005475997924805
    8. ' positions' → logprob: -6.880475997924805
    9. 'pos' → logprob: -7.005475997924805
    10. 'lines' → logprob: -7.380475997924805

Token 1193: ' match' (ID: 3981)
  Prédit: '_are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_are' → logprob: -0.4909196197986603
    2. ' are' → logprob: -1.365919589996338
    3. 'are' → logprob: -2.865919589996338
    4. '_match' → logprob: -3.240919589996338
    5. '_equal' → logprob: -5.115919589996338
    6. ' match' → logprob: -5.240919589996338
    7. '   ' → logprob: -5.490919589996338
    8. 'match' → logprob: -5.490919589996338
    9. '```' → logprob: -5.490919589996338
    10. '_on' → logprob: -5.990919589996338

Token 1194: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04030143469572067
    2. '
' → logprob: -4.040301322937012
    3. '   ' → logprob: -4.040301322937012
    4. ' def' → logprob: -6.790301322937012
    5. ' (' → logprob: -7.415301322937012
    6. '```' → logprob: -7.915301322937012
    7. ' =' → logprob: -8.040301322937012
    8. '(' → logprob: -8.165301322937012
    9. ',' → logprob: -8.290301322937012
    10. '    
' → logprob: -8.415301322937012

Token 1195: 'N' (ID: 45)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9117782711982727
    2. 'd' → logprob: -2.036778211593628
    3. '(dx' → logprob: -2.161778211593628
    4. 'lambda' → logprob: -2.536778211593628
    5. 'def' → logprob: -3.036778211593628
    6. ' (' → logprob: -3.536778211593628
    7. 'dir' → logprob: -3.536778211593628
    8. ' dx' → logprob: -3.786778211593628
    9. '(lambda' → logprob: -3.911778211593628
    10. 'abs' → logprob: -3.911778211593628

Token 1196: ',E' (ID: 101576)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.4960883557796478
    2. ',' → logprob: -1.8710883855819702
    3. 'ot' → logprob: -2.8710882663726807
    4. 'and' → logprob: -3.3710882663726807
    5. 'orth' → logprob: -3.4960882663726807
    6. 'S' → logprob: -3.6210882663726807
    7. '==' → logprob: -4.12108850479126
    8. 'or' → logprob: -4.74608850479126
    9. 'one' → logprob: -4.87108850479126
    10. 'o' → logprob: -4.87108850479126

Token 1197: ',S' (ID: 42097)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04712609946727753
    2. ',' → logprob: -3.672126054763794
    3. 'or' → logprob: -4.172126293182373
    4. ',S' → logprob: -5.547126293182373
    5. 'W' → logprob: -7.047126293182373
    6. ' or' → logprob: -9.047125816345215
    7. 'orth' → logprob: -9.172125816345215
    8. '/S' → logprob: -9.922125816345215
    9. ')' → logprob: -10.672125816345215
    10. 'O' → logprob: -10.672125816345215

Token 1198: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.04864902421832085
    2. ',' → logprob: -4.048648834228516
    3. 'or' → logprob: -4.048648834228516
    4. ' or' → logprob: -4.798648834228516
    5. 'W' → logprob: -5.673648834228516
    6. ')' → logprob: -7.798648834228516
    7. '),' → logprob: -8.298648834228516
    8. ',
' → logprob: -9.673648834228516
    9. ' ,' → logprob: -10.923648834228516
    10. ',O' → logprob: -10.923648834228516

Token 1199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4074644148349762
    2. ')
' → logprob: -1.6574643850326538
    3. ' or' → logprob: -3.0324645042419434
    4. '):
' → logprob: -3.1574645042419434
    5. ',' → logprob: -3.7824645042419434
    6. '):' → logprob: -4.157464504241943
    7. 'def' → logprob: -4.782464504241943
    8. '):

' → logprob: -6.657464504241943
    9. '),' → logprob: -6.907464504241943
    10. '   ' → logprob: -6.907464504241943

Token 1200: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004674572963267565
    2. '
' → logprob: -5.504674434661865
    3. ' def' → logprob: -8.129674911499023
    4. '   ' → logprob: -8.379674911499023
    5. '```' → logprob: -9.754674911499023
    6. 'from' → logprob: -13.504674911499023
    7. '#' → logprob: -13.504674911499023
    8. '  
' → logprob: -13.504674911499023
    9. '    
' → logprob: -13.629674911499023
    10. 'direction' → logprob: -13.629674911499023

Token 1201: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003246183041483164
    2. '
' → logprob: -8.625324249267578
    3. ' def' → logprob: -8.875324249267578
    4. '   ' → logprob: -13.000324249267578
    5. '```' → logprob: -13.000324249267578
    6. ':def' → logprob: -16.125324249267578
    7. '#' → logprob: -16.375324249267578
    8. '  
' → logprob: -16.625324249267578
    9. ':' → logprob: -16.625324249267578
    10. '    
' → logprob: -16.750324249267578

Token 1202: ' dir' (ID: 5609)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06178346648812294
    2. 'dir' → logprob: -3.3117835521698
    3. 'direction' → logprob: -4.311783313751221
    4. 'dirs' → logprob: -4.811783313751221
    5. 'same' → logprob: -6.686783313751221
    6. 'are' → logprob: -8.561783790588379
    7. ' directions' → logprob: -8.811783790588379
    8. 'match' → logprob: -9.186783790588379
    9. 'is' → logprob: -9.686783790588379
    10. 'check' → logprob: -10.061783790588379

Token 1203: '_match' (ID: 26039)
  Prédit: '_matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.13688690960407257
    2. '_match' → logprob: -2.3868868350982666
    3. '_equals' → logprob: -4.386887073516846
    4. 'ection' → logprob: -4.761887073516846
    5. '_equal' → logprob: -5.636887073516846
    6. 's' → logprob: -5.886887073516846
    7. '_to' → logprob: -6.261887073516846
    8. '_eq' → logprob: -6.761887073516846
    9. 'matches' → logprob: -7.761887073516846
    10. 'ections' → logprob: -7.886887073516846

Token 1204: '(dx' (ID: 124932)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6521270275115967
    2. '(dir' → logprob: -1.0271270275115967
    3. '(a' → logprob: -2.1521270275115967
    4. '(old' → logprob: -6.777127265930176
    5. '(' → logprob: -6.902127265930176
    6. '(direction' → logprob: -7.027127265930176
    7. '(s' → logprob: -7.652127265930176
    8. '((' → logprob: -7.902127265930176
    9. '(prev' → logprob: -8.652127265930176
    10. '(current' → logprob: -9.152127265930176

Token 1205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012909513898193836
    2. '1' → logprob: -7.001290798187256
    3. ' ,' → logprob: -8.626291275024414
    4. ',d' → logprob: -9.001291275024414
    5. ',
' → logprob: -9.876291275024414
    6. '_,' → logprob: -11.626291275024414
    7. '   ' → logprob: -12.001291275024414
    8. 'dx' → logprob: -13.251291275024414
    9. '[' → logprob: -13.751291275024414
    10. 'a' → logprob: -14.126291275024414

Token 1206: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00032283025211654603
    2. ' dy' → logprob: -8.250323295593262
    3. 'dx' → logprob: -10.125323295593262
    4. '
' → logprob: -11.375323295593262
    5. '-d' → logprob: -12.875323295593262
    6. 'd' → logprob: -13.750323295593262
    7. 'ddy' → logprob: -14.125323295593262
    8. '```' → logprob: -14.125323295593262
    9. '

' → logprob: -14.250323295593262
    10. '   ' → logprob: -14.250323295593262

Token 1207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028386167832650244
    2. ',d' → logprob: -9.250284194946289
    3. ',
' → logprob: -9.500284194946289
    4. ' ,' → logprob: -9.625284194946289
    5. '):
' → logprob: -10.250284194946289
    6. '):' → logprob: -12.625284194946289
    7. ',x' → logprob: -13.000284194946289
    8. '   ' → logprob: -13.250284194946289
    9. ',user' → logprob: -14.250284194946289
    10. ',int' → logprob: -14.500284194946289

Token 1208: ' c' (ID: 274)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.33475780487060547
    2. 'other' → logprob: -2.7097578048706055
    3. 'nd' → logprob: -2.8347578048706055
    4. 'xd' → logprob: -3.3347578048706055
    5. 'sd' → logprob: -3.7097578048706055
    6. 'md' → logprob: -4.7097578048706055
    7. 'd' → logprob: -4.7097578048706055
    8. 'nx' → logprob: -4.7097578048706055
    9. 'adx' → logprob: -4.9597578048706055
    10. 'fd' → logprob: -4.9597578048706055

Token 1209: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1871516853570938
    2. '):' → logprob: -1.8121516704559326
    3. '):

' → logprob: -5.312151908874512
    4. ')' → logprob: -6.312151908874512
    5. ')==' → logprob: -8.562151908874512
    6. ',' → logprob: -9.062151908874512
    7. '==' → logprob: -9.812151908874512
    8. '):
' → logprob: -9.937151908874512
    9. '
' → logprob: -9.937151908874512
    10. 'ode' → logprob: -10.312151908874512

Token 1210: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18485276401042938
    2. '       ' → logprob: -2.3098528385162354
    3. '(' → logprob: -4.059852600097656
    4. '    ' → logprob: -4.309852600097656
    5. '```' → logprob: -5.059852600097656
    6. '    
' → logprob: -5.184852600097656
    7. ' (' → logprob: -5.309852600097656
    8. '<|end|>' → logprob: -5.434852600097656
    9. '        
' → logprob: -6.184852600097656
    10. '\' → logprob: -6.309852600097656

Token 1211: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.722967803478241
    2. ' return' → logprob: -1.2229678630828857
    3. '   ' → logprob: -1.9729678630828857
    4. ' c' → logprob: -3.7229678630828857
    5. '       ' → logprob: -3.8479678630828857
    6. 'dx' → logprob: -4.347967624664307
    7. ' dx' → logprob: -5.222967624664307
    8. ' if' → logprob: -5.222967624664307
    9. 'c' → logprob: -5.347967624664307
    10. '(dx' → logprob: -6.722967624664307

Token 1212: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3664639890193939
    2. ' c' → logprob: -2.1164638996124268
    3. 'dx' → logprob: -2.4914638996124268
    4. '(dx' → logprob: -3.3664638996124268
    5. ' (' → logprob: -3.6164638996124268
    6. ' dx' → logprob: -3.7414638996124268
    7. '(c' → logprob: -4.116464138031006
    8. '   ' → logprob: -7.366464138031006
    9. '(' → logprob: -7.616464138031006
    10. ' ' → logprob: -7.616464138031006

Token 1213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5301642417907715
    2. '==' → logprob: -0.9051642417907715
    3. '=='' → logprob: -5.7801642417907715
    4. ' in' → logprob: -5.9051642417907715
    5. '[' → logprob: -8.15516471862793
    6. 'in' → logprob: -8.15516471862793
    7. '=' → logprob: -8.78016471862793
    8. '==
' → logprob: -9.03016471862793
    9. '=="' → logprob: -9.90516471862793
    10. ' =='' → logprob: -10.03016471862793

Token 1214: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -1.3913570642471313
    2. ''' → logprob: -1.5163570642471313
    3. ''N' → logprob: -1.7663570642471313
    4. ' '' → logprob: -2.141356945037842
    5. '0' → logprob: -2.266356945037842
    6. '1' → logprob: -2.516356945037842
    7. ' ' → logprob: -3.266356945037842
    8. ''D' → logprob: -5.766356945037842
    9. ''E' → logprob: -5.891356945037842
    10. 'N' → logprob: -6.141356945037842

Token 1215: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18163339793682098
    2. 'U' → logprob: -2.181633472442627
    3. 'R' → logprob: -3.806633472442627
    4. 'L' → logprob: -4.181633472442627
    5. 'E' → logprob: -5.431633472442627
    6. 'D' → logprob: -5.806633472442627
    7. 'F' → logprob: -5.806633472442627
    8. 'W' → logprob: -5.931633472442627
    9. 'S' → logprob: -6.806633472442627
    10. 'u' → logprob: -8.056632995605469

Token 1216: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4748361110687256
    2. '':
' → logprob: -1.0998361110687256
    3. '':' → logprob: -3.2248361110687256
    4. ' and' → logprob: -5.474836349487305
    5. 'and' → logprob: -7.099836349487305
    6. ':
' → logprob: -9.349836349487305
    7. ':' → logprob: -9.724836349487305
    8. '   ' → logprob: -9.974836349487305
    9. '       ' → logprob: -10.474836349487305
    10. '':
' → logprob: -10.849836349487305

Token 1217: '           ' (ID: 352)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.9015175700187683
    2. 'return' → logprob: -2.026517629623413
    3. ' return' → logprob: -2.026517629623413
    4. '       ' → logprob: -2.151517629623413
    5. ' and' → logprob: -2.526517629623413
    6. '           ' → logprob: -2.526517629623413
    7. 'dy' → logprob: -3.776517629623413
    8. 'and' → logprob: -4.901517391204834
    9. '   ' → logprob: -5.151517391204834
    10. ' dx' → logprob: -5.526517391204834

Token 1218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00017839208885561675
    2. ' return' → logprob: -8.750178337097168
    3. '
' → logprob: -11.625178337097168
    4. 'dx' → logprob: -11.875178337097168
    5. '           ' → logprob: -13.375178337097168
    6. 'dy' → logprob: -14.000178337097168
    7. '   ' → logprob: -14.000178337097168
    8. '(dx' → logprob: -14.500178337097168
    9. '       ' → logprob: -15.500178337097168
    10. '	return' → logprob: -16.750179290771484

Token 1219: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.06505247205495834
    2. 'dy' → logprob: -3.1900525093078613
    3. '(dx' → logprob: -3.9400525093078613
    4. ' dx' → logprob: -6.690052509307861
    5. '(' → logprob: -7.440052509307861
    6. '(d' → logprob: -8.190052032470703
    7. ' dy' → logprob: -8.440052032470703
    8. '0' → logprob: -10.815052032470703
    9. ' (' → logprob: -11.065052032470703
    10. 'd' → logprob: -13.690052032470703

Token 1220: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007786547299474478
    2. ' ==' → logprob: -5.007786750793457
    3. '0' → logprob: -6.882786750793457
    4. '=' → logprob: -10.382786750793457
    5. '===' → logprob: -12.007786750793457
    6. '==
' → logprob: -12.382786750793457
    7. '```' → logprob: -13.882786750793457
    8. ')==' → logprob: -14.382786750793457
    9. ',' → logprob: -14.382786750793457
    10. ']==' → logprob: -14.382786750793457

Token 1221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.2500057220459
    4. '=' → logprob: -19.0000057220459
    5. '```' → logprob: -19.7500057220459
    6. '۰' → logprob: -19.8750057220459
    7. '  ' → logprob: -20.2500057220459
    8. '00' → logprob: -20.7500057220459
    9. ' ' → logprob: -21.0625057220459
    10. ' ' → logprob: -21.6875057220459

Token 1222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.875
    4. '=' → logprob: -20.25
    5. '۰' → logprob: -20.25
    6. '```' → logprob: -21.125
    7. '  ' → logprob: -21.75
    8. '00' → logprob: -22.5625
    9. '<|end|>' → logprob: -22.6875
    10. ' ' → logprob: -22.8125

Token 1223: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759432911872864
    2. 'and' → logprob: -0.8259432911872864
    3. '   ' → logprob: -12.825942993164062
    4. '           ' → logprob: -14.950942993164062
    5. '	and' → logprob: -15.325942993164062
    6. '    ' → logprob: -15.575942993164062
    7. ' ' → logprob: -15.575942993164062
    8. ',' → logprob: -15.700942993164062
    9. '       ' → logprob: -16.325942993164062
    10. '
' → logprob: -17.325942993164062

Token 1224: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00020354038861114532
    2. ' dy' → logprob: -8.500203132629395
    3. '1' → logprob: -17.00020408630371
    4. '   ' → logprob: -17.00020408630371
    5. 'd' → logprob: -18.12520408630371
    6. '
' → logprob: -18.87520408630371
    7. '.dy' → logprob: -19.00020408630371
    8. '  ' → logprob: -19.37520408630371
    9. '```' → logprob: -19.62520408630371
    10. ' ' → logprob: -20.00020408630371

Token 1225: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06757455319166183
    2. '1' → logprob: -2.8175745010375977
    3. ' ==' → logprob: -5.317574501037598
    4. '>' → logprob: -8.067574501037598
    5. '=' → logprob: -8.192574501037598
    6. '==
' → logprob: -10.317574501037598
    7. ' ' → logprob: -10.817574501037598
    8. '===' → logprob: -11.442574501037598
    9. '[' → logprob: -11.567574501037598
    10. '==-' → logprob: -11.692574501037598

Token 1226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005502322688698769
    2. '-' → logprob: -5.255502223968506
    3. ' ' → logprob: -8.255502700805664
    4. ' -' → logprob: -11.755502700805664
    5. '   ' → logprob: -14.130502700805664
    6. '```' → logprob: -17.505502700805664
    7. '  ' → logprob: -18.130502700805664
    8. '>' → logprob: -19.318002700805664
    9. '    ' → logprob: -19.318002700805664
    10. '−' → logprob: -19.568002700805664

Token 1227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02976854331791401
    2. '-' → logprob: -3.529768466949463
    3. ' ' → logprob: -11.154768943786621
    4. ' -' → logprob: -12.529768943786621
    5. '   ' → logprob: -16.654767990112305
    6. '−' → logprob: -18.779767990112305
    7. '+' → logprob: -20.029767990112305
    8. '  ' → logprob: -20.154767990112305
    9. '```' → logprob: -20.279767990112305
    10. '１' → logprob: -20.779767990112305

Token 1228: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1229: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1230: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5494187474250793
    2. 'elif' → logprob: -1.2994186878204346
    3. '       ' → logprob: -2.6744186878204346
    4. ' or' → logprob: -3.7994186878204346
    5. ' elif' → logprob: -4.049418926239014
    6. ' and' → logprob: -4.049418926239014
    7. 'and' → logprob: -4.799418926239014
    8. '```' → logprob: -5.674418926239014
    9. 'or' → logprob: -5.924418926239014
    10. '<|end|>' → logprob: -5.924418926239014

Token 1231: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6360956430435181
    2. ' c' → logprob: -0.7610956430435181
    3. 'dx' → logprob: -6.0110955238342285
    4. ' dx' → logprob: -6.8860955238342285
    5. '	c' → logprob: -12.136096000671387
    6. ' ' → logprob: -13.011096000671387
    7. '(c' → logprob: -13.386096000671387
    8. '   ' → logprob: -13.761096000671387
    9. 'x' → logprob: -14.011096000671387
    10. '```' → logprob: -14.136096000671387

Token 1232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08895047754049301
    2. '==' → logprob: -2.4639503955841064
    3. '=' → logprob: -12.213950157165527
    4. ' ' → logprob: -13.463950157165527
    5. ' =' → logprob: -13.838950157165527
    6. ' ' → logprob: -14.713950157165527
    7. ')==' → logprob: -14.963950157165527
    8. '   ' → logprob: -15.213950157165527
    9. '=='' → logprob: -15.213950157165527
    10. '==
' → logprob: -15.213950157165527

Token 1233: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005932947155088186
    2. ' ' → logprob: -5.130932807922363
    3. 'dx' → logprob: -13.380932807922363
    4. '   ' → logprob: -13.630932807922363
    5. '1' → logprob: -14.255932807922363
    6. '  ' → logprob: -15.130932807922363
    7. ' dx' → logprob: -15.630932807922363
    8. '```' → logprob: -15.880932807922363
    9. 'x' → logprob: -17.25593376159668
    10. '    ' → logprob: -17.25593376159668

Token 1234: 'S' (ID: 50)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008116515236906707
    2. ' ' → logprob: -7.125811576843262
    3. '1' → logprob: -12.500811576843262
    4. '   ' → logprob: -13.500811576843262
    5. '  ' → logprob: -14.500811576843262
    6. 'dx' → logprob: -14.625811576843262
    7. '```' → logprob: -14.625811576843262
    8. '=' → logprob: -16.500812530517578
    9. 'x' → logprob: -16.625812530517578
    10. '    ' → logprob: -17.000812530517578

Token 1235: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5191724300384521
    2. ':
' → logprob: -1.7691724300384521
    3. '           ' → logprob: -1.8941724300384521
    4. ':' → logprob: -3.269172430038452
    5. '       ' → logprob: -3.894172430038452
    6. 'and' → logprob: -4.644172668457031
    7. '   ' → logprob: -4.769172668457031
    8. ',' → logprob: -5.519172668457031
    9. '          ' → logprob: -6.644172668457031
    10. '==' → logprob: -8.144172668457031

Token 1236: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013815442100167274
    2. '           ' → logprob: -5.263815402984619
    3. 'return' → logprob: -5.263815402984619
    4. ' return' → logprob: -5.763815402984619
    5. '   ' → logprob: -9.263815879821777
    6. '```' → logprob: -10.888815879821777
    7. '        ' → logprob: -11.013815879821777
    8. '	return' → logprob: -11.013815879821777
    9. ' ' → logprob: -11.388815879821777
    10. ' ' → logprob: -11.763815879821777

Token 1237: ' return' (ID: 622)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5760053992271423
    2. 'dx' → logprob: -0.8260053992271423
    3. '(dx' → logprob: -9.826004981994629
    4. '0' → logprob: -11.951004981994629
    5. '_dx' → logprob: -12.951004981994629
    6. '   ' → logprob: -14.326004981994629
    7. ' ' → logprob: -14.326004981994629
    8. '.dx' → logprob: -14.701004981994629
    9. '    ' → logprob: -15.576004981994629
    10. 'd' → logprob: -15.576004981994629

Token 1238: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3193112313747406
    2. ' dx' → logprob: -1.694311261177063
    3. '0' → logprob: -2.4443111419677734
    4. ' ' → logprob: -5.944311141967773
    5. '(dx' → logprob: -8.569311141967773
    6. '_dx' → logprob: -11.819311141967773
    7. '(' → logprob: -12.069311141967773
    8. ' (' → logprob: -12.819311141967773
    9. '.dx' → logprob: -13.194311141967773
    10. '   ' → logprob: -13.194311141967773

Token 1239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36146295070648193
    2. ' ==' → logprob: -1.486462950706482
    3. '0' → logprob: -2.6114630699157715
    4. ' ' → logprob: -5.6114630699157715
    5. '=' → logprob: -9.611462593078613
    6. '==
' → logprob: -11.986462593078613
    7. '```' → logprob: -12.236462593078613
    8. '   ' → logprob: -12.736462593078613
    9. ' =' → logprob: -12.861462593078613
    10. '===' → logprob: -13.986462593078613

Token 1240: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.131715774536133
    4. '  ' → logprob: -17.881715774536133
    5. '```' → logprob: -18.381715774536133
    6. '
' → logprob: -18.881715774536133
    7. ' ' → logprob: -19.444215774536133
    8. '۰' → logprob: -19.631715774536133
    9. '    ' → logprob: -19.756715774536133
    10. ' ' → logprob: -20.194215774536133

Token 1241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.7501802444458
    4. '
' → logprob: -16.875179290771484
    5. '```' → logprob: -16.875179290771484
    6. '  ' → logprob: -17.562679290771484
    7. '-' → logprob: -17.937679290771484
    8. ' ' → logprob: -18.562679290771484
    9. ' ' → logprob: -18.875179290771484
    10. '1' → logprob: -18.937679290771484

Token 1242: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021205991506577
    2. 'and' → logprob: -2.3502120971679688
    3. '   ' → logprob: -12.975212097167969
    4. '       ' → logprob: -13.600212097167969
    5. '0' → logprob: -14.225212097167969
    6. '	and' → logprob: -14.850212097167969
    7. '           ' → logprob: -15.100212097167969
    8. ' ' → logprob: -15.225212097167969
    9. ',' → logprob: -15.725212097167969
    10. '        ' → logprob: -16.47521209716797

Token 1243: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.09509500861167908
    2. '-' → logprob: -2.595094919204712
    3. ' dy' → logprob: -4.220095157623291
    4. ' -' → logprob: -6.595095157623291
    5. '-d' → logprob: -11.720094680786133
    6. 'd' → logprob: -14.095094680786133
    7. ' ' → logprob: -14.845094680786133
    8. '
' → logprob: -15.095094680786133
    9. '1' → logprob: -15.720094680786133
    10. '   ' → logprob: -15.845094680786133

Token 1244: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6786832213401794
    2. ' ==' → logprob: -0.9286832213401794
    3. '-' → logprob: -2.803683280944824
    4. ' -' → logprob: -3.928683280944824
    5. '==-' → logprob: -4.053683280944824
    6. '=' → logprob: -11.428683280944824
    7. '   ' → logprob: -12.553683280944824
    8. ' ' → logprob: -12.678683280944824
    9. '```' → logprob: -13.178683280944824
    10. '1' → logprob: -13.553683280944824

Token 1245: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011708177626132965
    2. ' -' → logprob: -6.751170635223389
    3. '1' → logprob: -14.251171112060547
    4. '   ' → logprob: -17.126171112060547
    5. '−' → logprob: -19.626171112060547
    6. '0' → logprob: -20.376171112060547
    7. '
' → logprob: -20.376171112060547
    8. ' ' → logprob: -20.501171112060547
    9. '```' → logprob: -20.501171112060547
    10. '  ' → logprob: -21.251171112060547

Token 1246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '```' → logprob: -19.0
    4. '-' → logprob: -19.125
    5. '۱' → logprob: -21.0625
    6. '
' → logprob: -21.125
    7. '१' → logprob: -21.5625
    8. '

' → logprob: -21.5625
    9. '１' → logprob: -21.75
    10. '' → logprob: -21.75

Token 1247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008541051298379898
    2. '   ' → logprob: -5.133541107177734
    3. '<|end|>' → logprob: -6.383541107177734
    4. '
' → logprob: -8.008541107177734
    5. ' if' → logprob: -8.383541107177734
    6. 'if' → logprob: -9.883541107177734
    7. ',' → logprob: -10.133541107177734
    8. '```' → logprob: -10.258541107177734
    9. ')
' → logprob: -10.633541107177734
    10. '           ' → logprob: -10.758541107177734

Token 1248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35313066840171814
    2. '```' → logprob: -1.2281306982040405
    3. '``' → logprob: -6.10313081741333
    4. '   ' → logprob: -6.35313081741333
    5. ' if' → logprob: -7.47813081741333
    6. 'if' → logprob: -10.353130340576172
    7. '<|end|>' → logprob: -10.478130340576172
    8. '           ' → logprob: -10.978130340576172
    9. ' ' → logprob: -11.228130340576172
    10. '`' → logprob: -11.853130340576172

Token 1249: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08967087417840958
    2. ' if' → logprob: -2.5896708965301514
    3. '       ' → logprob: -4.589670658111572
    4. '   ' → logprob: -7.839670658111572
    5. 'return' → logprob: -8.71467113494873
    6. ' return' → logprob: -12.33967113494873
    7. '```' → logprob: -13.83967113494873
    8. '	if' → logprob: -13.96467113494873
    9. '           ' → logprob: -14.33967113494873
    10. '    ' → logprob: -14.33967113494873

Token 1250: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34850576519966125
    2. ' c' → logprob: -1.2235057353973389
    3. 'dx' → logprob: -10.223505973815918
    4. '(c' → logprob: -11.598505973815918
    5. ' dx' → logprob: -12.098505973815918
    6. ' (' → logprob: -12.973505973815918
    7. '   ' → logprob: -13.098505973815918
    8. ' ' → logprob: -13.848505973815918
    9. '	c' → logprob: -13.848505973815918
    10. '    ' → logprob: -14.348505973815918

Token 1251: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17978575825691223
    2. '==' → logprob: -1.8047857284545898
    3. '=='' → logprob: -10.55478572845459
    4. ' ' → logprob: -12.42978572845459
    5. '=' → logprob: -12.67978572845459
    6. ' =='' → logprob: -13.42978572845459
    7. ' =' → logprob: -13.92978572845459
    8. '   ' → logprob: -14.05478572845459
    9. '  ' → logprob: -14.30478572845459
    10. ' ' → logprob: -14.92978572845459

Token 1252: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2679651379585266
    2. ' ' → logprob: -1.5179650783538818
    3. '1' → logprob: -4.142965316772461
    4. '   ' → logprob: -11.017965316772461
    5. '(' → logprob: -11.892965316772461
    6. '-' → logprob: -12.892965316772461
    7. ' (' → logprob: -13.392965316772461
    8. '  ' → logprob: -13.642965316772461
    9. ' -' → logprob: -13.892965316772461
    10. '
' → logprob: -14.517965316772461

Token 1253: 'E' (ID: 36)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000873347744345665
    2. '0' → logprob: -7.250873565673828
    3. '-' → logprob: -9.000873565673828
    4. ' ' → logprob: -10.500873565673828
    5. '```' → logprob: -11.625873565673828
    6. '+' → logprob: -13.375873565673828
    7. '   ' → logprob: -14.625873565673828
    8. 'dx' → logprob: -15.000873565673828
    9. '``' → logprob: -15.000873565673828
    10. '±' → logprob: -15.500873565673828

Token 1254: '':
' (ID: 7669)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7664721608161926
    2. '==' → logprob: -1.0164721012115479
    3. '<|end|>' → logprob: -2.891472101211548
    4. ' and' → logprob: -3.516472101211548
    5. '           ' → logprob: -3.766472101211548
    6. ',' → logprob: -4.266472339630127
    7. '   ' → logprob: -4.391472339630127
    8. '=' → logprob: -4.891472339630127
    9. ' =' → logprob: -5.266472339630127
    10. '<|end|>' → logprob: -5.641472339630127

Token 1255: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6816462874412537
    2. '           ' → logprob: -1.3066463470458984
    3. 'return' → logprob: -2.3066463470458984
    4. ' dx' → logprob: -3.0566463470458984
    5. '        ' → logprob: -3.3066463470458984
    6. '       ' → logprob: -3.4316463470458984
    7. 'dx' → logprob: -5.556646347045898
    8. '            ' → logprob: -7.181646347045898
    9. '   ' → logprob: -7.306646347045898
    10. '=' → logprob: -7.556646347045898

Token 1256: ' return' (ID: 622)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.017369642853736877
    2. ' dx' → logprob: -4.267369747161865
    3. 'return' (adapté à ' return') → logprob: -5.767369747161865
    4. ' return' → logprob: -9.642369270324707
    5. '(dx' → logprob: -12.267369270324707
    6. '   ' → logprob: -13.142369270324707
    7. '_dx' → logprob: -14.392369270324707
    8. '    ' → logprob: -14.892369270324707
    9. '       ' → logprob: -15.767369270324707
    10. '  ' → logprob: -16.142370223999023

Token 1257: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.018324127420783043
    2. ' dx' → logprob: -4.01832389831543
    3. '1' → logprob: -9.14332389831543
    4. '(dx' → logprob: -9.64332389831543
    5. ' ' → logprob: -13.26832389831543
    6. '_dx' → logprob: -14.76832389831543
    7. '   ' → logprob: -15.51832389831543
    8. '  ' → logprob: -16.14332389831543
    9. '.dx' → logprob: -16.89332389831543
    10. '```' → logprob: -18.26832389831543

Token 1258: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34852108359336853
    2. '==' → logprob: -1.223521113395691
    3. '=' → logprob: -10.34852123260498
    4. '1' → logprob: -11.09852123260498
    5. ' ' → logprob: -11.09852123260498
    6. ')' → logprob: -12.59852123260498
    7. ')==' → logprob: -12.59852123260498
    8. ']==' → logprob: -12.84852123260498
    9. '```' → logprob: -13.97352123260498
    10. ' =' → logprob: -14.47352123260498

Token 1259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '0' → logprob: -14.876502990722656
    4. '   ' → logprob: -17.626502990722656
    5. '+' → logprob: -18.876502990722656
    6. '```' → logprob: -19.126502990722656
    7. '  ' → logprob: -19.626502990722656
    8. '=' → logprob: -20.001502990722656
    9. '>' → logprob: -21.001502990722656
    10. '-' → logprob: -21.126502990722656

Token 1260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -14.75015926361084
    4. '+' → logprob: -17.750158309936523
    5. '```' → logprob: -17.875158309936523
    6. '   ' → logprob: -18.312658309936523
    7. '-' → logprob: -18.625158309936523
    8. '  ' → logprob: -19.125158309936523
    9. '=' → logprob: -19.875158309936523
    10. '۱' → logprob: -20.125158309936523

Token 1261: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03806180879473686
    2. 'and' → logprob: -3.2880618572235107
    3. '<|end|>' → logprob: -10.91306209564209
    4. ' or' → logprob: -14.03806209564209
    5. ' ' → logprob: -14.28806209564209
    6. '   ' → logprob: -15.41306209564209
    7. '	and' → logprob: -15.41306209564209
    8. '       ' → logprob: -16.788061141967773
    9. '<|end|>' → logprob: -17.413061141967773
    10. '  ' → logprob: -17.913061141967773

Token 1262: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6811257004737854
    2. ' dy' → logprob: -0.9311257004737854
    3. '0' → logprob: -2.4311256408691406
    4. ' ' → logprob: -4.431125640869141
    5. '   ' → logprob: -13.18112564086914
    6. '.dy' → logprob: -13.93112564086914
    7. 'Dy' → logprob: -14.80612564086914
    8. 'dx' → logprob: -14.93112564086914
    9. '  ' → logprob: -14.93112564086914
    10. 'd' → logprob: -16.55612564086914

Token 1263: ' ==' (ID: 951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09998729079961777
    2. ' ' → logprob: -3.099987268447876
    3. ' ==' → logprob: -3.474987268447876
    4. '==' → logprob: -4.474987506866455
    5. '<|end|>' → logprob: -5.599987506866455
    6. '=' → logprob: -6.099987506866455
    7. ' =' → logprob: -6.599987506866455
    8. '   ' → logprob: -8.849987030029297
    9. ',' → logprob: -8.974987030029297
    10. '  ' → logprob: -10.349987030029297

Token 1264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510117143392563
    2. ' ' → logprob: -4.387510299682617
    3. '   ' → logprob: -15.012510299682617
    4. '  ' → logprob: -16.387510299682617
    5. '1' → logprob: -17.700010299682617
    6. '﻿' → logprob: -18.262510299682617
    7. '```' → logprob: -18.325010299682617
    8. '
' → logprob: -18.512510299682617
    9. '۰' → logprob: -18.700010299682617
    10. ' ' → logprob: -18.825010299682617

Token 1265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -17.687551498413086
    4. '۰' → logprob: -18.375051498413086
    5. '﻿' → logprob: -19.125051498413086
    6. '   ' → logprob: -19.187551498413086
    7. '```' → logprob: -19.312551498413086
    8. '  ' → logprob: -19.437551498413086
    9. '
' → logprob: -20.125051498413086
    10. '=' → logprob: -20.875051498413086

Token 1266: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038137338124215603
    2. '<|end|>' → logprob: -5.753813743591309
    3. '   ' → logprob: -7.878813743591309
    4. '
' → logprob: -9.628813743591309
    5. '	' → logprob: -9.753813743591309
    6. '           ' → logprob: -10.503813743591309
    7. '        ' → logprob: -11.628813743591309
    8. ' ' → logprob: -11.628813743591309
    9. '\
' → logprob: -11.753813743591309
    10. '     ' → logprob: -11.878813743591309

Token 1267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013723729643970728
    2. '   ' → logprob: -7.376372337341309
    3. '```' → logprob: -7.751372337341309
    4. '           ' → logprob: -9.001372337341309
    5. '<|end|>' → logprob: -9.626372337341309
    6. '        ' → logprob: -10.376372337341309
    7. '               ' → logprob: -11.376372337341309
    8. '     ' → logprob: -11.501372337341309
    9. ' ' → logprob: -11.501372337341309
    10. ' ' → logprob: -11.751372337341309

Token 1268: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8845012784004211
    2. '       ' → logprob: -1.0095012187957764
    3. ' if' → logprob: -1.5095012187957764
    4. '   ' → logprob: -7.5095014572143555
    5. ' ' → logprob: -8.259501457214355
    6. '```' → logprob: -8.259501457214355
    7. 'return' → logprob: -8.509501457214355
    8. '        ' → logprob: -9.134501457214355
    9. '           ' → logprob: -9.509501457214355
    10. ' ' → logprob: -9.884501457214355

Token 1269: ' c' (ID: 274)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.44216158986091614
    2. 'dx' → logprob: -1.0671615600585938
    3. 'c' → logprob: -5.067161560058594
    4. ' c' → logprob: -5.567161560058594
    5. '(dx' → logprob: -5.817161560058594
    6. ' ' → logprob: -9.067161560058594
    7. '   ' → logprob: -9.442161560058594
    8. '  ' → logprob: -11.067161560058594
    9. ' dy' → logprob: -11.192161560058594
    10. ' (' → logprob: -11.442161560058594

Token 1270: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14268279075622559
    2. '==' → logprob: -2.0176827907562256
    3. '=='' → logprob: -13.517683029174805
    4. '  ' → logprob: -13.642683029174805
    5. '=' → logprob: -13.767683029174805
    6. ' ' → logprob: -14.017683029174805
    7. '[' → logprob: -14.267683029174805
    8. ' =' → logprob: -14.767683029174805
    9. '=="' → logprob: -15.392683029174805
    10. ')==' → logprob: -15.392683029174805

Token 1271: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44213321805000305
    2. '-' → logprob: -1.1921331882476807
    3. ' ' → logprob: -3.1921331882476807
    4. ' -' → logprob: -4.44213342666626
    5. 'dx' → logprob: -7.19213342666626
    6. ' dx' → logprob: -9.692132949829102
    7. '   ' → logprob: -10.067132949829102
    8. '  ' → logprob: -11.317132949829102
    9. '1' → logprob: -11.879632949829102
    10. '
' → logprob: -12.692132949829102

Token 1272: 'W' (ID: 54)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02533966489136219
    2. 'dx' → logprob: -3.9003396034240723
    3. '0' → logprob: -5.400339603424072
    4. 'dy' → logprob: -8.90034008026123
    5. ' -' → logprob: -9.52534008026123
    6. 'c' → logprob: -10.40034008026123
    7. '(dx' → logprob: -11.02534008026123
    8. '-d' → logprob: -12.65034008026123
    9. ' dx' → logprob: -12.77534008026123
    10. 'x' → logprob: -13.40034008026123

Token 1273: '':
' (ID: 7669)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42985349893569946
    2. ' ==' → logprob: -1.0548534393310547
    3. '=' → logprob: -7.554853439331055
    4. ']==' → logprob: -8.429853439331055
    5. ')==' → logprob: -9.429853439331055
    6. ' =' → logprob: -10.054853439331055
    7. '           ' → logprob: -10.179853439331055
    8. '   ' → logprob: -10.179853439331055
    9. '==
' → logprob: -10.304853439331055
    10. ')' → logprob: -11.054853439331055

Token 1274: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22073523700237274
    2. ' return' → logprob: -1.8457351922988892
    3. '       ' → logprob: -3.8457353115081787
    4. 'dx' → logprob: -4.9707350730896
    5. ' dx' → logprob: -5.0957350730896
    6. '	return' → logprob: -6.0957350730896
    7. '   ' → logprob: -6.8457350730896
    8. '           ' → logprob: -7.2207350730896
    9. '0' → logprob: -7.7207350730896
    10. '	   ' → logprob: -7.8457350730896

Token 1275: ' return' (ID: 622)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.013561694882810116
    2. 'return' (adapté à ' return') → logprob: -5.013561725616455
    3. ' dx' → logprob: -5.013561725616455
    4. ' return' → logprob: -9.138561248779297
    5. '   ' → logprob: -10.513561248779297
    6. '       ' → logprob: -11.138561248779297
    7. '(dx' → logprob: -11.388561248779297
    8. 'dir' → logprob: -12.138561248779297
    9. ' ' → logprob: -13.013561248779297
    10. '    ' → logprob: -13.013561248779297

Token 1276: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.029120808467268944
    2. ' dx' → logprob: -3.654120922088623
    3. '-' → logprob: -6.154120922088623
    4. ' -' → logprob: -8.279120445251465
    5. '(dx' → logprob: -8.654120445251465
    6. '1' → logprob: -9.279120445251465
    7. ' ' → logprob: -9.529120445251465
    8. '0' → logprob: -9.779120445251465
    9. '-d' → logprob: -11.279120445251465
    10. '   ' → logprob: -11.404120445251465

Token 1277: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3042966425418854
    2. ' ==' → logprob: -1.429296612739563
    3. '==-' → logprob: -3.9292967319488525
    4. '=' → logprob: -6.179296493530273
    5. ' -' → logprob: -7.179296493530273
    6. '-' → logprob: -8.554296493530273
    7. ' ' → logprob: -9.929296493530273
    8. ' =' → logprob: -9.929296493530273
    9. '===' → logprob: -10.804296493530273
    10. ')==' → logprob: -10.929296493530273

Token 1278: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0077992030419409275
    2. ' -' → logprob: -4.88279914855957
    3. '0' → logprob: -9.00779914855957
    4. '1' → logprob: -9.63279914855957
    5. ' ' → logprob: -12.25779914855957
    6. '−' → logprob: -15.75779914855957
    7. '   ' → logprob: -16.00779914855957
    8. '```' → logprob: -16.63279914855957
    9. '  ' → logprob: -18.63279914855957
    10. '–' → logprob: -18.75779914855957

Token 1279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -18.375001907348633
    4. '```' → logprob: -18.812501907348633
    5. '<|end|>' → logprob: -19.812501907348633
    6. '   ' → logprob: -20.187501907348633
    7. '  ' → logprob: -20.687501907348633
    8. ',' → logprob: -21.000001907348633
    9. '۱' → logprob: -21.000001907348633
    10. '-' → logprob: -21.500001907348633

Token 1280: ' and' (ID: 326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05672939866781235
    2. ' ' → logprob: -2.931729316711426
    3. ',' → logprob: -6.681729316711426
    4. ' and' → logprob: -7.556729316711426
    5. 'and' → logprob: -10.181729316711426
    6. '   ' → logprob: -11.056729316711426
    7. '```' → logprob: -12.056729316711426
    8. ' ,' → logprob: -12.431729316711426
    9. '=' → logprob: -14.181729316711426
    10. '[' → logprob: -14.306729316711426

Token 1281: ' dy' (ID: 11996)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6935948729515076
    2. ' ' → logprob: -0.6935948729515076
    3. ' dy' → logprob: -8.068594932556152
    4. 'dy' → logprob: -8.943594932556152
    5. 'dx' → logprob: -13.443594932556152
    6. '   ' → logprob: -13.943594932556152
    7. ' dx' → logprob: -13.943594932556152
    8. ' ' → logprob: -15.443594932556152
    9. '  ' → logprob: -15.818594932556152
    10. 'Dy' → logprob: -16.943593978881836

Token 1282: ' ==' (ID: 951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2522014081478119
    2. ' ' → logprob: -1.5022014379501343
    3. '==' → logprob: -9.002201080322266
    4. '=' → logprob: -9.127201080322266
    5. ' ==' → logprob: -10.877201080322266
    6. '   ' → logprob: -11.252201080322266
    7. ' =' → logprob: -12.377201080322266
    8. '<|end|>' → logprob: -13.877201080322266
    9. '           ' → logprob: -14.127201080322266
    10. ',' → logprob: -14.502201080322266

Token 1283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.758615493774414
    4. ' ' → logprob: -20.133615493774414
    5. '۰' → logprob: -20.258615493774414
    6. '       ' → logprob: -20.383615493774414
    7. '           ' → logprob: -20.758615493774414
    8. '  ' → logprob: -20.758615493774414
    9. '1' → logprob: -20.758615493774414
    10. '<|end|>' → logprob: -20.758615493774414

Token 1284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -16.875051498413086
    4. '   ' → logprob: -18.250051498413086
    5. '```' → logprob: -18.750051498413086
    6. '۰' → logprob: -18.812551498413086
    7. '-' → logprob: -19.312551498413086
    8. '  ' → logprob: -19.375051498413086
    9. ' ' → logprob: -19.937551498413086
    10. ' ' → logprob: -21.062551498413086

Token 1285: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3535914421081543
    2. '   ' → logprob: -1.2285914421081543
    3. ':
' → logprob: -6.728591442108154
    4. ')' → logprob: -7.353591442108154
    5. ' return' → logprob: -7.478591442108154
    6. 'return' → logprob: -7.478591442108154
    7. ':' → logprob: -7.478591442108154
    8. '	return' → logprob: -7.603591442108154
    9. '<|end|>' → logprob: -7.853591442108154
    10. ':return' → logprob: -8.853591918945312

Token 1287: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03687656670808792
    2. ':' → logprob: -4.911876678466797
    3. ':
' → logprob: -5.161876678466797
    4. ' return' → logprob: -5.286876678466797
    5. 'return' (adapté à ' return') → logprob: -5.536876678466797
    6. '       ' → logprob: -5.536876678466797
    7. ')' → logprob: -6.286876678466797
    8. ' if' → logprob: -6.411876678466797
    9. '    
' → logprob: -6.786876678466797
    10. ':return' → logprob: -6.786876678466797

Token 1288: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7729658540920354e-05
    2. ' False' → logprob: -10.500027656555176
    3. 'None' → logprob: -16.250028610229492
    4. 'True' → logprob: -21.000028610229492
    5. '(False' → logprob: -21.125028610229492
    6. '0' → logprob: -23.000028610229492
    7. 'false' → logprob: -24.250028610229492
    8. '   ' → logprob: -25.000028610229492
    9. '=False' → logprob: -25.500028610229492
    10. '[]' → logprob: -25.875028610229492

Token 1289: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040352728217840195
    2. 'def' → logprob: -4.540352821350098
    3. 'current' → logprob: -5.290352821350098
    4. 'next' → logprob: -5.290352821350098
    5. 'from' → logprob: -5.290352821350098
    6. '
' → logprob: -5.540352821350098
    7. 'for' → logprob: -5.915352821350098
    8. ' next' → logprob: -6.540352821350098
    9. 'state' → logprob: -7.040352821350098
    10. ')' → logprob: -7.040352821350098

Token 1290: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0626273155212402
    2. 'visited' → logprob: -1.0626273155212402
    3. 'from' → logprob: -1.9376273155212402
    4. 'def' → logprob: -2.1876273155212402
    5. 'queue' → logprob: -4.68762731552124
    6. 'dp' → logprob: -4.68762731552124
    7. 'time' → logprob: -5.18762731552124
    8. '   ' → logprob: -5.18762731552124
    9. 'state' → logprob: -5.43762731552124
    10. 'distance' → logprob: -5.81262731552124

Token 1291: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8621854186058044
    2. 'from' → logprob: -2.362185478210449
    3. 'for' → logprob: -2.362185478210449
    4. '#' (adapté à ' #') → logprob: -2.612185478210449
    5. 'time' → logprob: -2.612185478210449
    6. 'def' → logprob: -2.737185478210449
    7. 'current' → logprob: -3.362185478210449
    8. 'dp' → logprob: -3.862185478210449
    9. 'visited' → logprob: -3.862185478210449
    10. 'pos' → logprob: -3.987185478210449

Token 1292: ' Because' (ID: 13602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7358390092849731
    2. 'visited' → logprob: -1.2358390092849731
    3. '#' → logprob: -2.4858388900756836
    4. 'queue' → logprob: -2.9858388900756836
    5. 'def' → logprob: -3.1108388900756836
    6. 'for' → logprob: -4.485838890075684
    7. 'current' → logprob: -4.610838890075684
    8. 'state' → logprob: -4.985838890075684
    9. 'pos' → logprob: -5.235838890075684
    10. 'q' → logprob: -5.485838890075684

Token 1293: ' direction' (ID: 9262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5681195259094238
    2. ' t' → logprob: -2.318119525909424
    3. '   ' → logprob: -2.443119525909424
    4. 'len' → logprob: -3.193119525909424
    5. 'moves' → logprob: -3.318119525909424
    6. ' the' → logprob: -3.568119525909424
    7. '#' → logprob: -3.693119525909424
    8. ' moves' → logprob: -3.943119525909424
    9. 'the' → logprob: -4.068119525909424
    10. ' len' → logprob: -4.443119525909424

Token 1294: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3094460666179657
    2. ' changes' → logprob: -2.434446096420288
    3. '#' → logprob: -3.809446096420288
    4. 'is' → logprob: -3.934446096420288
    5. 'change' → logprob: -3.934446096420288
    6. 's' → logprob: -4.059445858001709
    7. 'changes' → logprob: -4.184445858001709
    8. ' vectors' → logprob: -4.309445858001709
    9. ' change' → logprob: -4.559445858001709
    10. 'al' → logprob: -4.684445858001709

Token 1295: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.0568583011627197
    2. 'be' → logprob: -1.0568583011627197
    3. 'change' → logprob: -1.8068583011627197
    4. ' change' → logprob: -2.3068583011627197
    5. 'reverse' → logprob: -3.6818583011627197
    6. ' reverse' → logprob: -5.556858062744141
    7. 'not' → logprob: -6.306858062744141
    8. 'continue' → logprob: -6.806858062744141
    9. ' vary' → logprob: -7.181858062744141
    10. ' continue' → logprob: -7.181858062744141

Token 1296: ' the' (ID: 290)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.7822577953338623
    2. 'either' → logprob: -1.9072577953338623
    3. 'changed' → logprob: -2.1572577953338623
    4. 'both' → logprob: -2.2822577953338623
    5. 'along' → logprob: -2.2822577953338623
    6. 'forward' → logprob: -3.5322577953338623
    7. 'op' → logprob: -4.407258033752441
    8. '0' → logprob: -4.782258033752441
    9. '-' → logprob: -5.282258033752441
    10. '(' → logprob: -6.407258033752441

Token 1297: ' direction' (ID: 9262)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.1254114955663681
    2. 'op' → logprob: -2.5004115104675293
    3. ' same' → logprob: -3.7504115104675293
    4. 'car' → logprob: -5.250411510467529
    5. 'reverse' → logprob: -6.125411510467529
    6. '#' → logprob: -6.500411510467529
    7. ' opposite' → logprob: -7.375411510467529
    8. '   ' → logprob: -8.125411033630371
    9. 'negative' → logprob: -8.375411033630371
    10. 'current' → logprob: -8.375411033630371

Token 1298: ' before' (ID: 2254)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7839409112930298
    2. 'of' → logprob: -1.2839409112930298
    3. 'vector' → logprob: -2.6589407920837402
    4. 'al' → logprob: -3.4089407920837402
    5. 'the' → logprob: -3.5339407920837402
    6. ''s' → logprob: -3.6589407920837402
    7. ' of' → logprob: -3.9089407920837402
    8. 's' → logprob: -4.15894079208374
    9. 'along' → logprob: -4.15894079208374
    10. 'to' → logprob: -4.90894079208374

Token 1299: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.17249198257923126
    2. 'after' → logprob: -2.422492027282715
    3. 'the' → logprob: -3.422492027282715
    4. ' or' → logprob: -4.797492027282715
    5. '#' → logprob: -5.297492027282715
    6. 'and' → logprob: -5.547492027282715
    7. 'moving' → logprob: -5.922492027282715
    8. 'each' → logprob: -6.047492027282715
    9. 'def' → logprob: -6.047492027282715
    10. 'a' → logprob: -6.422492027282715

Token 1300: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.0013004729989916086
    2. ' after' → logprob: -6.87630033493042
    3. 'at' → logprob: -9.126300811767578
    4. 'the' → logprob: -10.251300811767578
    5. 'on' → logprob: -10.751300811767578
    6. '   ' → logprob: -10.876300811767578
    7. 'before' → logprob: -11.001300811767578
    8. 'direction' → logprob: -11.501300811767578
    9. 'ahead' → logprob: -11.751300811767578
    10. 'turn' → logprob: -12.251300811767578

Token 1301: ' the' (ID: 290)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.9662277102470398
    2. 'the' → logprob: -1.0912277698516846
    3. 'a' → logprob: -2.8412277698516846
    4. '#' → logprob: -3.3412277698516846
    5. 'each' → logprob: -3.3412277698516846
    6. 'change' → logprob: -3.5912277698516846
    7. 'move' → logprob: -3.9662277698516846
    8. 'after' → logprob: -3.9662277698516846
    9. 'movement' → logprob: -4.0912275314331055
    10. 'and' → logprob: -4.2162275314331055

Token 1302: ' turn' (ID: 3716)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5124728679656982
    2. 'turn' → logprob: -1.3874728679656982
    3. 'movement' → logprob: -2.8874728679656982
    4. 'current' → logprob: -4.012473106384277
    5. 'car' → logprob: -4.012473106384277
    6. 'first' → logprob: -4.137473106384277
    7. 'last' → logprob: -4.887473106384277
    8. ' move' → logprob: -5.012473106384277
    9. 'token' → logprob: -5.887473106384277
    10. 'intersection' → logprob: -6.137473106384277

Token 1303: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41966569423675537
    2. 'def' → logprob: -1.7946656942367554
    3. '#' → logprob: -2.794665813446045
    4. 'for' → logprob: -3.169665813446045
    5. 'from' → logprob: -3.669665813446045
    6. 'visited' → logprob: -4.044665813446045
    7. '
' → logprob: -4.169665813446045
    8. ' for' → logprob: -6.169665813446045
    9. 'queue' → logprob: -6.419665813446045
    10. 'turn' → logprob: -6.419665813446045

Token 1304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051499366760253906
    2. '#' → logprob: -4.301499366760254
    3. '       ' → logprob: -4.426499366760254
    4. '<|end|>' → logprob: -4.926499366760254
    5. ' continue' → logprob: -5.801499366760254
    6. ')' → logprob: -5.926499366760254
    7. ',' → logprob: -6.426499366760254
    8. 'continue' → logprob: -6.926499366760254
    9. '
' → logprob: -7.051499366760254
    10. '           ' → logprob: -7.176499366760254

Token 1305: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3987511694431305
    2. '   ' → logprob: -1.148751139640808
    3. 'def' → logprob: -5.398751258850098
    4. '       ' → logprob: -6.523751258850098
    5. ' #' → logprob: -6.523751258850098
    6. '
' → logprob: -7.148751258850098
    7. '           ' → logprob: -7.398751258850098
    8. 'while' → logprob: -7.398751258850098
    9. 'for' → logprob: -7.648751258850098
    10. '                   ' → logprob: -8.023751258850098

Token 1306: ' at' (ID: 540)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002073767827823758
    2. '   ' → logprob: -6.252073764801025
    3. ' #' → logprob: -9.127074241638184
    4. '
' → logprob: -10.877074241638184
    5. 'def' → logprob: -11.877074241638184
    6. '       ' → logprob: -12.752074241638184
    7. 'continue' → logprob: -14.002074241638184
    8. 'the' → logprob: -14.252074241638184
    9. '```' → logprob: -14.377074241638184
    10. 'we' → logprob: -14.377074241638184

Token 1307: ' turning' (ID: 21087)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.9709683060646057
    2. 'each' → logprob: -1.720968246459961
    3. 'junction' → logprob: -1.720968246459961
    4. 'the' → logprob: -2.220968246459961
    5. 'a' → logprob: -3.470968246459961
    6. ' each' → logprob: -3.970968246459961
    7. 'intersection' → logprob: -4.345968246459961
    8. 'this' → logprob: -4.470968246459961
    9. ' the' → logprob: -4.720968246459961
    10. 'end' → logprob: -4.845968246459961

Token 1308: ' points' (ID: 5571)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5004328489303589
    2. 'points' → logprob: -1.0004328489303589
    3. ' point' → logprob: -4.375432968139648
    4. ' points' → logprob: -4.375432968139648
    5. '#' → logprob: -8.000432968139648
    6. '_point' → logprob: -8.250432968139648
    7. '_points' → logprob: -8.750432968139648
    8. 'time' → logprob: -10.750432968139648
    9. 's' → logprob: -10.875432968139648
    10. '-point' → logprob: -11.250432968139648

Token 1309: ' we' (ID: 581)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1310: ' consider' (ID: 3331)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3086073100566864
    2. ' continue' → logprob: -2.433607339859009
    3. 'can' → logprob: -2.558607339859009
    4. 'continue' → logprob: -2.683607339859009
    5. '#' → logprob: -4.55860710144043
    6. ' will' → logprob: -5.55860710144043
    7. ' may' → logprob: -5.68360710144043
    8. ' have' → logprob: -5.80860710144043
    9. '   ' → logprob: -6.05860710144043
    10. ' need' → logprob: -6.05860710144043

Token 1311: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.16288702189922333
    2. ' both' → logprob: -2.6628870964050293
    3. 'possible' → logprob: -3.7878870964050293
    4. 'all' → logprob: -4.162887096405029
    5. ' all' → logprob: -4.787887096405029
    6. 'two' → logprob: -4.787887096405029
    7. 'continu' → logprob: -5.287887096405029
    8. 'the' → logprob: -5.287887096405029
    9. 'states' → logprob: -6.037887096405029
    10. ' two' → logprob: -6.287887096405029

Token 1312: ' directions' (ID: 24921)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1008683443069458
    2. '<|end|>' → logprob: -1.2258683443069458
    3. '   ' → logprob: -2.1008682250976562
    4. 'def' → logprob: -2.1008682250976562
    5. '<|end|>' → logprob: -3.4758682250976562
    6. '#' → logprob: -3.4758682250976562
    7. 'import' → logprob: -4.350868225097656
    8. ':' → logprob: -4.850868225097656
    9. ')' → logprob: -4.850868225097656
    10. '.' → logprob: -5.350868225097656

Token 1313: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9574890732765198
    2. 'def' → logprob: -0.9574890732765198
    3. '#' → logprob: -2.082489013671875
    4. '
' → logprob: -2.832489013671875
    5. 'distance' → logprob: -4.832489013671875
    6. 'from' → logprob: -4.957489013671875
    7. 'visited' → logprob: -5.332489013671875
    8. 'for' → logprob: -5.832489013671875
    9. 'queue' → logprob: -5.957489013671875
    10. 'import' → logprob: -6.332489013671875

Token 1314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10001038759946823
    2. 'for' → logprob: -2.600010395050049
    3. '#' → logprob: -4.850010395050049
    4. 'from' → logprob: -5.475010395050049
    5. '
' → logprob: -6.225010395050049
    6. ' for' → logprob: -6.350010395050049
    7. 'visited' → logprob: -6.600010395050049
    8. 'def' → logprob: -7.100010395050049
    9. 'import' → logprob: -7.225010395050049
    10. '    
' → logprob: -7.600010395050049

Token 1315: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0147593021392822
    2. '#' (adapté à ' #') → logprob: -1.2647593021392822
    3. '   ' → logprob: -1.8897593021392822
    4. 'queue' → logprob: -2.3897593021392822
    5. 'from' → logprob: -3.1397593021392822
    6. 'for' → logprob: -4.264759063720703
    7. 'time' → logprob: -4.639759063720703
    8. 'q' → logprob: -5.014759063720703
    9. 'dist' → logprob: -5.014759063720703
    10. 'state' → logprob: -5.014759063720703

Token 1316: ' State' (ID: 5388)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6049686670303345
    2. 'visited' → logprob: -1.6049686670303345
    3. 'from' → logprob: -2.229968547821045
    4. '#' → logprob: -2.354968547821045
    5. 'queue' → logprob: -3.729968547821045
    6. 'def' → logprob: -4.479968547821045
    7. 'dist' → logprob: -5.229968547821045
    8. 'state' → logprob: -6.229968547821045
    9. 'q' → logprob: -6.229968547821045
    10. 'INF' → logprob: -6.354968547821045

Token 1317: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07610203325748444
    2. '=' → logprob: -2.8261020183563232
    3. '   ' → logprob: -4.951102256774902
    4. '_states' → logprob: -6.201102256774902
    5. ':' → logprob: -6.451102256774902
    6. '=
' → logprob: -7.451102256774902
    7. ')' → logprob: -8.076102256774902
    8. '_state' → logprob: -8.576102256774902
    9. '=(' → logprob: -8.576102256774902
    10. 's' → logprob: -8.576102256774902

Token 1318: ' tuple' (ID: 31311)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00746630085632205
    2. '(' → logprob: -6.1324663162231445
    3. '(state' → logprob: -6.2574663162231445
    4. '(s' → logprob: -6.6324663162231445
    5. '   ' → logprob: -6.6324663162231445
    6. ' (' → logprob: -7.3824663162231445
    7. '(lambda' → logprob: -10.507466316223145
    8. '#' → logprob: -11.132466316223145
    9. '(current' → logprob: -11.132466316223145
    10. '(start' → logprob: -11.882466316223145

Token 1319: ':' (ID: 25)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.17195400595664978
    2. '(s' → logprob: -2.4219539165496826
    3. '(' → logprob: -3.4219539165496826
    4. '(state' → logprob: -3.6719539165496826
    5. ' (' → logprob: -5.421954154968262
    6. '   ' → logprob: -6.171954154968262
    7. ',' → logprob: -6.171954154968262
    8. ' =' → logprob: -7.671954154968262
    9. '(i' → logprob: -8.046954154968262
    10. ':' → logprob: -8.421954154968262

Token 1320: ' (' (ID: 350)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.005860412959009409
    2. '(s' → logprob: -5.255860328674316
    3. '(state' → logprob: -8.005860328674316
    4. '(' → logprob: -9.130860328674316
    5. ' (' → logprob: -9.255860328674316
    6. '   ' → logprob: -9.630860328674316
    7. '(i' → logprob: -11.130860328674316
    8. '(current' → logprob: -12.630860328674316
    9. '(start' → logprob: -14.630860328674316
    10. '(n' → logprob: -14.755860328674316

Token 1321: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.22809503972530365
    2. 's' → logprob: -1.8530950546264648
    3. '(st' → logprob: -3.353095054626465
    4. '(s' → logprob: -4.853095054626465
    5. 'st' → logprob: -6.478095054626465
    6. '(' → logprob: -6.978095054626465
    7. 'stre' → logprob: -7.603095054626465
    8. '0' → logprob: -7.728095054626465
    9. '('' → logprob: -8.228095054626465
    10. ' street' → logprob: -8.478095054626465

Token 1322: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00150105613283813
    2. ''_' → logprob: -7.751501083374023
    3. '[' → logprob: -8.251501083374023
    4. ',' → logprob: -8.251501083374023
    5. '   ' → logprob: -8.626501083374023
    6. '['' → logprob: -9.001501083374023
    7. '['_' → logprob: -9.376501083374023
    8. 'id' → logprob: -10.376501083374023
    9. '```' → logprob: -10.876501083374023
    10. '[
' → logprob: -11.251501083374023

Token 1323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -11.250041961669922
    3. ',pos' → logprob: -11.375041961669922
    4. ',int' → logprob: -12.500041961669922
    5. ',n' → logprob: -12.875041961669922
    6. ',t' → logprob: -13.500041961669922
    7. ',length' → logprob: -13.750041961669922
    8. ')' → logprob: -14.000041961669922
    9. ',len' → logprob: -14.000041961669922
    10. '   ' → logprob: -14.250041961669922

Token 1324: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005043167620897293
    2. ' pos' → logprob: -5.880043029785156
    3. 'position' → logprob: -6.130043029785156
    4. ' position' → logprob: -9.755043029785156
    5. 'int' → logprob: -14.505043029785156
    6. ')' → logprob: -16.005043029785156
    7. '   ' → logprob: -16.130043029785156
    8. ' int' → logprob: -16.755043029785156
    9. 'distance' → logprob: -16.755043029785156
    10. '_pos' → logprob: -16.880043029785156

Token 1325: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.3573719263076782
    2. ',' → logprob: -1.3573719263076782
    3. ')' → logprob: -3.3573718070983887
    4. '[' → logprob: -6.232371807098389
    5. '),' → logprob: -6.232371807098389
    6. '_,' → logprob: -6.732371807098389
    7. 'along' → logprob: -7.982371807098389
    8. 'Along' → logprob: -7.982371807098389
    9. '   ' → logprob: -8.107372283935547
    10. 'al' → logprob: -8.232372283935547

Token 1326: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.00015943869948387146
    2. 'along' → logprob: -9.62515926361084
    3. ')' → logprob: -10.37515926361084
    4. ',' → logprob: -11.25015926361084
    5. 'on' → logprob: -11.50015926361084
    6. '```' → logprob: -11.87515926361084
    7. 'o' → logprob: -12.25015926361084
    8. 'ng' → logprob: -12.50015926361084
    9. 'one' → logprob: -13.12515926361084
    10. 'ond' → logprob: -13.37515926361084

Token 1327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011200957233086228
    2. ')' → logprob: -7.501120090484619
    3. ' ,' → logprob: -8.251120567321777
    4. '   ' → logprob: -9.001120567321777
    5. '),' → logprob: -9.126120567321777
    6. ',
' → logprob: -11.376120567321777
    7. '[' → logprob: -11.501120567321777
    8. '_,' → logprob: -11.626120567321777
    9. '```' → logprob: -11.626120567321777
    10. '       ' → logprob: -12.001120567321777

Token 1328: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.017168119549751282
    2. ' dx' → logprob: -4.142168045043945
    3. '(dx' → logprob: -7.267168045043945
    4. 'direction' → logprob: -8.267168045043945
    5. 'dir' → logprob: -9.267168045043945
    6. '(' → logprob: -10.392168045043945
    7. ' (' → logprob: -10.642168045043945
    8. ' direction' → logprob: -11.767168045043945
    9. ')' → logprob: -12.392168045043945
    10. '_dx' → logprob: -12.517168045043945

Token 1329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004527182609308511
    2. ' ,' → logprob: -8.375452995300293
    3. ',d' → logprob: -9.125452995300293
    4. '   ' → logprob: -9.625452995300293
    5. ')' → logprob: -11.375452995300293
    6. '),' → logprob: -11.500452995300293
    7. ',
' → logprob: -12.250452995300293
    8. '<|end|>' → logprob: -12.500452995300293
    9. '<|end|>' → logprob: -12.750452995300293
    10. '',' → logprob: -13.125452995300293

Token 1330: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.048589076846838
    2. ' dy' → logprob: -3.048588991165161
    3. 'd' → logprob: -14.423588752746582
    4. '.dy' → logprob: -14.923588752746582
    5. ' ' → logprob: -15.298588752746582
    6. 'Dy' → logprob: -16.2985897064209
    7. ',' → logprob: -16.5485897064209
    8. ' 
' → logprob: -16.9235897064209
    9. 'ddy' → logprob: -17.0485897064209
    10. '<|end|>' → logprob: -17.2985897064209

Token 1331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002002984518185258
    2. ',' → logprob: -6.252003192901611
    3. ')
' → logprob: -10.127002716064453
    4. '   ' → logprob: -11.377002716064453
    5. ')`' → logprob: -12.127002716064453
    6. ')_' → logprob: -12.502002716064453
    7. ',)' → logprob: -12.877002716064453
    8. '):' → logprob: -13.002002716064453
    9. ' )' → logprob: -13.002002716064453
    10. '),' → logprob: -13.252002716064453

Token 1332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25828540325164795
    2. 'for' → logprob: -2.7582855224609375
    3. 'visited' → logprob: -2.7582855224609375
    4. 'from' → logprob: -3.0082855224609375
    5. 'queue' → logprob: -3.5082855224609375
    6. '
' → logprob: -5.3832855224609375
    7. 'dp' → logprob: -5.5082855224609375
    8. 'def' → logprob: -5.7582855224609375
    9. ' for' → logprob: -6.6332855224609375
    10. ',' → logprob: -6.8832855224609375

Token 1333: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.212286114692688
    2. 'queue' → logprob: -1.337286114692688
    3. 'from' → logprob: -1.337286114692688
    4. 'visited' → logprob: -2.0872859954833984
    5. 'for' → logprob: -3.7122859954833984
    6. 'q' → logprob: -4.087285995483398
    7. 'def' → logprob: -5.587285995483398
    8. 'distance' → logprob: -6.337285995483398
    9. 'pos' → logprob: -6.962285995483398
    10. '
' → logprob: -7.087285995483398

Token 1334: ' dx' (ID: 29472)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.279048204421997
    2. 'queue' → logprob: -1.404048204421997
    3. 'for' → logprob: -1.529048204421997
    4. 'from' → logprob: -1.904048204421997
    5. '   ' → logprob: -2.404048204421997
    6. 'q' → logprob: -4.654047966003418
    7. 'state' → logprob: -6.029047966003418
    8. 'def' → logprob: -6.279047966003418
    9. 'dp' → logprob: -6.404047966003418
    10. 'current' → logprob: -6.779047966003418

Token 1335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026353495195508003
    2. ' ,' → logprob: -6.877635478973389
    3. '<|end|>' → logprob: -7.002635478973389
    4. ',d' → logprob: -8.12763500213623
    5. ',
' → logprob: -8.25263500213623
    6. '<|end|>' → logprob: -10.12763500213623
    7. ')' → logprob: -10.25263500213623
    8. '   ' → logprob: -11.37763500213623
    9. '=' → logprob: -11.62763500213623
    10. '==' → logprob: -12.12763500213623

Token 1336: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.16022534668445587
    2. ' dy' → logprob: -1.9102253913879395
    3. 'd' → logprob: -13.910224914550781
    4. ' ' → logprob: -16.53522491455078
    5. ' 
' → logprob: -16.78522491455078
    6. '.dy' → logprob: -16.91022491455078
    7. ' ' → logprob: -17.78522491455078
    8. ' d' → logprob: -18.16022491455078
    9. 'Dy' → logprob: -18.16022491455078
    10. 'dym' → logprob: -18.28522491455078

Token 1337: ' represent' (ID: 5188)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9711686372756958
    2. '=' → logprob: -1.5961686372756958
    3. ' =' → logprob: -1.5961686372756958
    4. ',' → logprob: -1.7211686372756958
    5. ':' → logprob: -4.346168518066406
    6. '<|end|>' → logprob: -4.721168518066406
    7. '   ' → logprob: -5.971168518066406
    8. ' ' → logprob: -6.096168518066406
    9. ' )' → logprob: -6.221168518066406
    10. '):' → logprob: -6.221168518066406

Token 1338: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.030354784801602364
    2. 'the' → logprob: -3.7803547382354736
    3. 'current' → logprob: -5.530354976654053
    4. 'car' → logprob: -6.780354976654053
    5. 'movement' → logprob: -7.030354976654053
    6. ' direction' → logprob: -7.155354976654053
    7. ' the' → logprob: -9.655354499816895
    8. 'street' → logprob: -9.780354499816895
    9. '1' → logprob: -9.905354499816895
    10. '   ' → logprob: -10.155354499816895

Token 1339: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0930149033665657
    2. 'for' → logprob: -3.34301495552063
    3. 'from' → logprob: -3.71801495552063
    4. '
' → logprob: -5.343014717102051
    5. 'current' → logprob: -5.468014717102051
    6. 'time' → logprob: -5.843014717102051
    7. 'def' → logprob: -5.968014717102051
    8. 'dp' → logprob: -5.968014717102051
    9. ' for' → logprob: -6.218014717102051
    10. '```' → logprob: -6.343014717102051

Token 1340: ' travel' (ID: 6410)
  Prédit: ' movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.2818635404109955
    2. 'movement' → logprob: -1.6568635702133179
    3. ' the' → logprob: -3.6568634510040283
    4. ' travel' → logprob: -4.656863689422607
    5. 'the' → logprob: -4.656863689422607
    6. 'travel' → logprob: -5.281863689422607
    7. '1' → logprob: -6.406863689422607
    8. 'car' → logprob: -6.531863689422607
    9. ' move' → logprob: -7.781863689422607
    10. 'motion' → logprob: -7.906863689422607

Token 1341: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03292953968048096
    2. ',' → logprob: -4.407929420471191
    3. ')' → logprob: -4.532929420471191
    4. '
' → logprob: -5.532929420471191
    5. 'for' → logprob: -6.782929420471191
    6. 'def' → logprob: -7.282929420471191
    7. ' for' → logprob: -7.657929420471191
    8. 'current' → logprob: -7.657929420471191
    9. 'pos' → logprob: -7.782929420471191
    10. '    
' → logprob: -8.157929420471191

Token 1342: 'unit' (ID: 5400)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09554074704647064
    2. ',' → logprob: -3.345540761947632
    3. '1' → logprob: -3.845540761947632
    4. ' )' → logprob: -4.095540523529053
    5. ')
' → logprob: -5.720540523529053
    6. ' ,' → logprob: -6.220540523529053
    7. '#' → logprob: -6.220540523529053
    8. '   ' → logprob: -6.345540523529053
    9. ' ' → logprob: -6.345540523529053
    10. 'along' → logprob: -7.095540523529053

Token 1343: ' vector' (ID: 9727)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2892492711544037
    2. ')' → logprob: -1.789249300956726
    3. '_,' → logprob: -3.0392491817474365
    4. '_' → logprob: -3.6642491817474365
    5. ' ,' → logprob: -5.664249420166016
    6. ',
' → logprob: -5.914249420166016
    7. '   ' → logprob: -6.914249420166016
    8. '_)' → logprob: -7.289249420166016
    9. '```' → logprob: -7.289249420166016
    10. '_
' → logprob: -8.914249420166016

Token 1344: ' along' (ID: 4251)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14650505781173706
    2. ',' → logprob: -2.146505117416382
    3. '   ' → logprob: -4.021504878997803
    4. '):' → logprob: -7.896504878997803
    5. ',)' → logprob: -8.771505355834961
    6. ')
' → logprob: -8.771505355834961
    7. ',
' → logprob: -8.896505355834961
    8. ' )' → logprob: -9.396505355834961
    9. '#' → logprob: -9.771505355834961
    10. '```' → logprob: -9.896505355834961

Token 1345: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.6756567358970642
    2. 'the' → logprob: -0.8006567358970642
    3. 'x' → logprob: -3.925656795501709
    4. ' the' → logprob: -5.175656795501709
    5. 'dx' → logprob: -5.550656795501709
    6. '   ' → logprob: -5.550656795501709
    7. 'stre' → logprob: -6.050656795501709
    8. ' street' → logprob: -6.550656795501709
    9. ')' → logprob: -6.675656795501709
    10. ' ' → logprob: -7.175656795501709

Token 1346: ' axis' (ID: 16300)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05230804905295372
    2. ',' → logprob: -3.0523080825805664
    3. '   ' → logprob: -5.802308082580566
    4. ')
' → logprob: -8.927308082580566
    5. ')_' → logprob: -9.552308082580566
    6. ',)' → logprob: -9.552308082580566
    7. 's' → logprob: -9.927308082580566
    8. ' )' → logprob: -10.052308082580566
    9. '')' → logprob: -10.177308082580566
    10. '),' → logprob: -10.302308082580566

Token 1347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024618443101644516
    2. '   ' → logprob: -3.89961838722229
    3. ',' → logprob: -5.774618625640869
    4. '):' → logprob: -8.024618148803711
    5. ')
' → logprob: -8.524618148803711
    6. ' )' → logprob: -9.524618148803711
    7. ' ' → logprob: -9.899618148803711
    8. '.' → logprob: -10.024618148803711
    9. ':' → logprob: -10.024618148803711
    10. '#' → logprob: -10.399618148803711

Token 1348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4673067629337311
    2. 'for' → logprob: -1.5923067331314087
    3. 'time' → logprob: -3.2173068523406982
    4. 'distance' → logprob: -3.4673068523406982
    5. 'from' → logprob: -3.9673068523406982
    6. 'queue' → logprob: -4.217306613922119
    7. 'def' → logprob: -4.717306613922119
    8. 'steps' → logprob: -5.092306613922119
    9. 'next' → logprob: -5.217306613922119
    10. ' for' → logprob: -5.342306613922119

Token 1349: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.47076958417892456
    2. '   ' → logprob: -1.5957696437835693
    3. 'for' → logprob: -2.4707696437835693
    4. 'queue' → logprob: -3.0957696437835693
    5. 'visited' → logprob: -3.9707696437835693
    6. 'dp' → logprob: -4.72076940536499
    7. 'q' → logprob: -5.22076940536499
    8. 'def' → logprob: -6.22076940536499
    9. 'distance' → logprob: -6.59576940536499
    10. 'dist' → logprob: -6.97076940536499

Token 1350: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3109281659126282
    2. 'for' → logprob: -1.9359281063079834
    3. 'from' → logprob: -2.4359281063079834
    4. 'queue' → logprob: -4.1859283447265625
    5. 'def' → logprob: -4.5609283447265625
    6. 'state' → logprob: -6.4359283447265625
    7. 'visited' → logprob: -6.4359283447265625
    8. 'current' → logprob: -6.8109283447265625
    9. '
' → logprob: -6.8109283447265625
    10. 'import' → logprob: -7.0609283447265625

Token 1351: ' BFS' (ID: 190016)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -1.4278547763824463
    2. 'use' → logprob: -1.5528547763824463
    3. '   ' → logprob: -1.6778547763824463
    4. 'continue' → logprob: -2.0528547763824463
    5. ' use' → logprob: -2.3028547763824463
    6. 'process' → logprob: -3.0528547763824463
    7. 'implement' → logprob: -3.3028547763824463
    8. 'import' → logprob: -4.177854537963867
    9. 'expl' → logprob: -4.927854537963867
    10. 'queue' → logprob: -5.677854537963867

Token 1352: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023886453360319138
    2. '
' → logprob: -4.398886680603027
    3. ' queue' → logprob: -5.398886680603027
    4. 'queue' → logprob: -5.648886680603027
    5. 'from' → logprob: -6.773886680603027
    6. ' from' → logprob: -7.523886680603027
    7. '(queue' → logprob: -7.898886680603027
    8. '    
' → logprob: -8.898886680603027
    9. '	queue' → logprob: -8.898886680603027
    10. 'visited' → logprob: -9.023886680603027

Token 1353: ' states' (ID: 9407)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2970937490463257
    2. 'from' → logprob: -1.6720937490463257
    3. 'moves' → logprob: -1.6720937490463257
    4. 'states' → logprob: -2.1720938682556152
    5. 'deque' → logprob: -2.1720938682556152
    6. 't' → logprob: -3.4220938682556152
    7. '(t' → logprob: -3.5470938682556152
    8. '(start' → logprob: -3.5470938682556152
    9. 'the' → logprob: -5.172093868255615
    10. '[(' → logprob: -5.297093868255615

Token 1354: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13533121347427368
    2. 'visited' → logprob: -3.135331153869629
    3. 'from' → logprob: -3.260331153869629
    4. 'queue' → logprob: -3.385331153869629
    5. '
' → logprob: -4.635331153869629
    6. 'q' → logprob: -8.010331153869629
    7. ' from' → logprob: -8.260331153869629
    8. ' visited' → logprob: -8.510331153869629
    9. ' queue' → logprob: -9.010331153869629
    10. '    
' → logprob: -9.385331153869629

Token 1355: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.05147456377744675
    2. 'time' → logprob: -3.6764745712280273
    3. ' each' → logprob: -4.426474571228027
    4. '0' → logprob: -4.926474571228027
    5. 'the' → logprob: -6.801474571228027
    6. 'moves' → logprob: -6.926474571228027
    7. 't' → logprob: -7.051474571228027
    8. 'current' → logprob: -7.051474571228027
    9. 'a' → logprob: -7.801474571228027
    10. '```' → logprob: -8.301474571228027

Token 1356: ' time' (ID: 1058)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.24390378594398499
    2. 'time' → logprob: -2.118903875350952
    3. 'step' → logprob: -2.618903875350952
    4. ' move' → logprob: -4.743903636932373
    5. 't' → logprob: -5.868903636932373
    6. 'token' → logprob: -5.868903636932373
    7. 'movement' → logprob: -6.118903636932373
    8. '   ' → logprob: -6.493903636932373
    9. ' step' → logprob: -7.118903636932373
    10. 'instruction' → logprob: -7.243903636932373

Token 1357: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08155975490808487
    2. 'from' → logprob: -3.081559658050537
    3. '
' → logprob: -3.831559658050537
    4. ' from' → logprob: -5.706559658050537
    5. 'queue' → logprob: -5.706559658050537
    6. 'visited' → logprob: -5.956559658050537
    7. 'q' → logprob: -8.081560134887695
    8. ' queue' → logprob: -8.331560134887695
    9. ' visited' → logprob: -8.581560134887695
    10. '```' → logprob: -8.956560134887695

Token 1358: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4964231252670288
    2. 'from' → logprob: -1.1214231252670288
    3. 'visited' → logprob: -3.6214232444763184
    4. 'queue' → logprob: -3.7464232444763184
    5. '
' → logprob: -4.621423244476318
    6. ' from' → logprob: -5.496423244476318
    7. 'q' → logprob: -7.746423244476318
    8. ' visited' → logprob: -8.74642276763916
    9. ' queue' → logprob: -8.99642276763916
    10. '```' → logprob: -9.62142276763916

Token 1359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06113786995410919
    2. '
' → logprob: -3.8111379146575928
    3. 'from' → logprob: -3.9361379146575928
    4. ' from' → logprob: -4.561137676239014
    5. '```' → logprob: -5.936137676239014
    6. 'visited' → logprob: -6.311137676239014
    7. ' visited' → logprob: -6.811137676239014
    8. 'queue' → logprob: -7.436137676239014
    9. ' queue' → logprob: -7.686137676239014
    10. '    
' → logprob: -9.186138153076172

Token 1360: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35500583052635193
    2. 'visited' → logprob: -1.8550058603286743
    3. 'from' (adapté à ' from') → logprob: -2.4800057411193848
    4. 'queue' → logprob: -3.6050057411193848
    5. 'state' → logprob: -3.9800057411193848
    6. 'for' → logprob: -6.105005741119385
    7. 'states' → logprob: -6.230005741119385
    8. 'q' → logprob: -6.230005741119385
    9. '
' → logprob: -6.355005741119385
    10. 'current' → logprob: -6.730005741119385

Token 1361: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00045712877181358635
    2. 'copy' → logprob: -8.375456809997559
    3. ' collections' → logprob: -8.500456809997559
    4. 'sys' → logprob: -11.625456809997559
    5. '
' → logprob: -11.875456809997559
    6. 'math' → logprob: -12.750456809997559
    7. '_copy' → logprob: -13.500456809997559
    8. 'heap' → logprob: -13.750456809997559
    9. 'collection' → logprob: -14.500456809997559
    10. '_' → logprob: -15.750456809997559

Token 1362: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2426927536725998
    2. 'import' → logprob: -1.7426927089691162
    3. '._' → logprob: -3.992692708969116
    4. '```' → logprob: -5.242692947387695
    5. '.import' → logprob: -5.492692947387695
    6. 'from' → logprob: -5.617692947387695
    7. ' import' → logprob: -6.492692947387695
    8. 'def' → logprob: -6.742692947387695
    9. 'collections' → logprob: -7.617692947387695
    10. '.python' → logprob: -7.617692947387695

Token 1363: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0001732663222355768
    2. 'collections' → logprob: -9.500173568725586
    3. ' deque' → logprob: -9.625173568725586
    4. 'copy' → logprob: -10.625173568725586
    5. 'de' → logprob: -12.125173568725586
    6. 'queue' → logprob: -13.875173568725586
    7. 'default' → logprob: -14.625173568725586
    8. '```' → logprob: -14.875173568725586
    9. 'import' → logprob: -15.125173568725586
    10. '<|end|>' → logprob: -16.250173568725586

Token 1364: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39809951186180115
    2. 'queue' → logprob: -1.3980995416641235
    3. '
' → logprob: -3.398099422454834
    4. ' queue' → logprob: -3.523099422454834
    5. '	queue' → logprob: -5.148099422454834
    6. 'q' → logprob: -5.773099422454834
    7. '    
' → logprob: -6.148099422454834
    8. 'state' → logprob: -6.273099422454834
    9. '(queue' → logprob: -6.398099422454834
    10. 'states' → logprob: -6.648099422454834

Token 1365: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5501840114593506
    2. '   ' → logprob: -1.0501840114593506
    3. 'visited' → logprob: -2.8001840114593506
    4. 'q' → logprob: -4.67518424987793
    5. ' queue' → logprob: -6.80018424987793
    6. '
' → logprob: -7.17518424987793
    7. 'state' → logprob: -7.80018424987793
    8. 'states' → logprob: -8.05018424987793
    9. 'Q' → logprob: -8.67518424987793
    10. '```' → logprob: -8.80018424987793

Token 1366: ' curr' (ID: 10495)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8871684074401855
    2. 'queue' → logprob: -1.0121684074401855
    3. 'q' → logprob: -2.2621684074401855
    4. '   ' → logprob: -2.3871684074401855
    5. 'for' → logprob: -5.0121684074401855
    6. 'time' → logprob: -5.3871684074401855
    7. 'states' → logprob: -5.5121684074401855
    8. 'state' → logprob: -6.0121684074401855
    9. '
' → logprob: -6.0121684074401855
    10. 'Q' → logprob: -6.0121684074401855

Token 1367: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.12504296004772186
    2. '_' → logprob: -2.3750429153442383
    3. '=' → logprob: -4.000042915344238
    4. ' =' → logprob: -5.750042915344238
    5. '_state' → logprob: -6.625042915344238
    6. '_moves' → logprob: -7.375042915344238
    7. '_=' → logprob: -8.750042915344238
    8. 'States' → logprob: -8.875042915344238
    9. '=_' → logprob: -9.125042915344238
    10. 'u' → logprob: -9.250042915344238

Token 1368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759448409080505
    2. '=' → logprob: -0.8259448409080505
    3. '=[]' → logprob: -12.450944900512695
    4. ' =[' → logprob: -15.075944900512695
    5. '[' → logprob: -15.325944900512695
    6. ',' → logprob: -15.450944900512695
    7. '=[' → logprob: -15.700944900512695
    8. '<|end|>' → logprob: -15.825944900512695
    9. '   ' → logprob: -16.200944900512695
    10. ')' → logprob: -16.325944900512695

Token 1369: ' set' (ID: 920)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1667720079421997
    2. 'set' → logprob: -1.9167720079421997
    3. ' deque' → logprob: -5.54177188873291
    4. 'start' → logprob: -6.16677188873291
    5. ' set' → logprob: -7.66677188873291
    6. '[]' → logprob: -11.54177188873291
    7. '[start' → logprob: -11.66677188873291
    8. '   ' → logprob: -12.04177188873291
    9. '[]
' → logprob: -12.16677188873291
    10. ' start' → logprob: -12.91677188873291

Token 1370: '(start' (ID: 20008)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.720288097858429
    2. '(start' → logprob: -0.845288097858429
    3. '([(' → logprob: -3.095288038253784
    4. '(' → logprob: -3.845288038253784
    5. '()
' → logprob: -4.720288276672363
    6. '([' → logprob: -5.720288276672363
    7. '((' → logprob: -5.720288276672363
    8. 'start' → logprob: -7.470288276672363
    9. '({' → logprob: -8.095288276672363
    10. '{' → logprob: -8.345288276672363

Token 1371: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -3.7146746763028204e-05
    2. ')' → logprob: -11.00003719329834
    3. ')_' → logprob: -12.00003719329834
    4. '_' → logprob: -12.87503719329834
    5. '   ' → logprob: -13.25003719329834
    6. '()' → logprob: -13.37503719329834
    7. '_)' → logprob: -13.75003719329834
    8. '```' → logprob: -13.75003719329834
    9. 'States' → logprob: -13.87503719329834
    10. '(_' → logprob: -14.12503719329834

Token 1372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001632451661862433
    2. ')
' → logprob: -6.501632213592529
    3. '   ' → logprob: -9.126632690429688
    4. ' )' → logprob: -11.376632690429688
    5. '```' → logprob: -13.376632690429688
    6. '
' → logprob: -13.876632690429688
    7. ')

' → logprob: -14.001632690429688
    8. ',' → logprob: -14.001632690429688
    9. '.copy' → logprob: -14.376632690429688
    10. '):' → logprob: -14.501632690429688

Token 1373: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002928018569946289
    2. ' for' → logprob: -6.377927780151367
    3. '   ' → logprob: -6.877927780151367
    4. '
' → logprob: -8.877927780151367
    5. '	for' → logprob: -10.877927780151367
    6. ')' → logprob: -11.252927780151367
    7. '```' → logprob: -11.502927780151367
    8. '    
' → logprob: -12.377927780151367
    9. '<|end|>' → logprob: -13.127927780151367
    10. ',' → logprob: -13.377927780151367

Token 1374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038323793560266495
    2. ' for' → logprob: -5.6288323402404785
    3. '   ' → logprob: -9.003832817077637
    4. '
' → logprob: -9.628832817077637
    5. '```' → logprob: -10.253832817077637
    6. '	for' → logprob: -12.503832817077637
    7. ')' → logprob: -14.253832817077637
    8. '``' → logprob: -14.378832817077637
    9. '<|end|>' → logprob: -14.503832817077637
    10. '    
' → logprob: -14.753832817077637

Token 1375: ' dist' (ID: 3601)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7545497417449951
    2. 'd' → logprob: -1.1295497417449951
    3. ' _' → logprob: -3.004549741744995
    4. ' dist' → logprob: -3.504549741744995
    5. 'dist' → logprob: -3.879549741744995
    6. ' i' → logprob: -4.129549980163574
    7. '_' → logprob: -4.129549980163574
    8. 'i' → logprob: -4.254549980163574
    9. ' move' → logprob: -4.379549980163574
    10. ' step' → logprob: -4.879549980163574

Token 1376: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4475022256374359
    2. 'in' → logprob: -1.3225022554397583
    3. ',' → logprob: -2.4475021362304688
    4. '_in' → logprob: -5.322502136230469
    5. ' ,' → logprob: -6.822502136230469
    6. ',in' → logprob: -7.572502136230469
    7. '_' → logprob: -7.822502136230469
    8. ',_' → logprob: -8.947502136230469
    9. ' _' → logprob: -9.072502136230469
    10. ')' → logprob: -9.072502136230469

Token 1377: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22852948307991028
    2. ' c' → logprob: -1.603529453277588
    3. ''' → logprob: -5.978529453277588
    4. 'direction' → logprob: -8.728529930114746
    5. ' direction' → logprob: -9.103529930114746
    6. ' '' → logprob: -9.103529930114746
    7. 'dir' → logprob: -9.228529930114746
    8. '_c' → logprob: -10.478529930114746
    9. ')c' → logprob: -11.603529930114746
    10. ' dir' → logprob: -11.728529930114746

Token 1378: 'dir' (ID: 6457)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015419462695717812
    2. 'in' → logprob: -4.3904194831848145
    3. ':' → logprob: -6.0154194831848145
    4. ' :' → logprob: -8.640419006347656
    5. ',' → logprob: -9.015419006347656
    6. '   ' → logprob: -10.890419006347656
    7. ' ' → logprob: -10.890419006347656
    8. ':
' → logprob: -11.140419006347656
    9. '_in' → logprob: -11.265419006347656
    10. '[' → logprob: -11.515419006347656

Token 1379: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0705268457531929
    2. 'in' → logprob: -2.6955268383026123
    3. ':' → logprob: -8.695527076721191
    4. ',' → logprob: -8.695527076721191
    5. '<|end|>' → logprob: -9.570527076721191
    6. ')' → logprob: -9.820527076721191
    7. '	in' → logprob: -11.070527076721191
    8. '   ' → logprob: -11.195527076721191
    9. ':
' → logprob: -11.195527076721191
    10. '<|end|>' → logprob: -11.195527076721191

Token 1380: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.05550983548164368
    2. ' moves' → logprob: -2.9305098056793213
    3. 'range' → logprob: -8.055509567260742
    4. ' ' → logprob: -9.555509567260742
    5. ' range' → logprob: -9.805509567260742
    6. 'move' → logprob: -9.805509567260742
    7. '   ' → logprob: -10.055509567260742
    8. '_moves' → logprob: -10.430509567260742
    9. '
' → logprob: -10.805509567260742
    10. 'm' → logprob: -11.555509567260742

Token 1381: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14308229088783264
    2. ':
' → logprob: -2.0180823802948
    3. '):
' → logprob: -8.893082618713379
    4. '   ' → logprob: -9.268082618713379
    5. '():
' → logprob: -9.643082618713379
    6. '=' → logprob: -10.018082618713379
    7. ',' → logprob: -11.018082618713379
    8. ':

' → logprob: -11.393082618713379
    9. '):' → logprob: -11.768082618713379
    10. ' :' → logprob: -12.018082618713379

Token 1382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018315577879548073
    2. '   ' → logprob: -4.64331579208374
    3. '```' → logprob: -5.89331579208374
    4. '
' → logprob: -6.01831579208374
    5. ' for' → logprob: -6.01831579208374
    6. ',' → logprob: -8.393315315246582
    7. 'for' → logprob: -8.518315315246582
    8. '        
' → logprob: -8.768315315246582
    9. '    
' → logprob: -9.268315315246582
    10. '``' → logprob: -10.393315315246582

Token 1383: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0026185857132077217
    2. 'new' → logprob: -6.002618789672852
    3. ' next' → logprob: -9.002618789672852
    4. '   ' → logprob: -11.002618789672852
    5. '       ' → logprob: -12.752618789672852
    6. ' new' → logprob: -16.25261878967285
    7. '```' → logprob: -16.62761878967285
    8. 'Next' → logprob: -17.00261878967285
    9. '	next' → logprob: -17.12761878967285
    10. '_next' → logprob: -18.37761878967285

Token 1384: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0003909927327185869
    2. '_moves' → logprob: -8.625391006469727
    3. '_tokens' → logprob: -9.625391006469727
    4. '_curr' → logprob: -9.625391006469727
    5. '_' → logprob: -10.625391006469727
    6. '_state' → logprob: -10.875391006469727
    7. '_steps' → logprob: -11.625391006469727
    8. '_token' → logprob: -12.250391006469727
    9. '_chars' → logprob: -12.625391006469727
    10. '```' → logprob: -12.875391006469727

Token 1385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132953345775604
    2. '=' → logprob: -1.3132953643798828
    3. '=set' → logprob: -10.313295364379883
    4. '=[]' → logprob: -16.313295364379883
    5. '={}' → logprob: -16.438295364379883
    6. 'set' → logprob: -16.563295364379883
    7. ',' → logprob: -17.313295364379883
    8. ' =
' → logprob: -17.313295364379883
    9. ' set' → logprob: -17.688295364379883
    10. '=
' → logprob: -17.938295364379883

Token 1386: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.7610454708337784e-05
    2. ' set' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.00002670288086
    4. '=set' → logprob: -20.50002670288086
    5. '	set' → logprob: -21.12502670288086
    6. '(set' → logprob: -21.87502670288086
    7. '       ' → logprob: -22.00002670288086
    8. '{}' → logprob: -22.37502670288086
    9. ')set' → logprob: -22.87502670288086
    10. '```' → logprob: -23.00002670288086

Token 1387: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03805674985051155
    2. '()
' → logprob: -3.2880568504333496
    3. '(' → logprob: -11.788056373596191
    4. '()
' → logprob: -12.413056373596191
    5. '()

' → logprob: -13.038056373596191
    6. '()`' → logprob: -14.538056373596191
    7. '()\' → logprob: -15.288056373596191
    8. '([]' → logprob: -15.913056373596191
    9. '(
' → logprob: -16.163057327270508
    10. '();' → logprob: -16.538057327270508

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053109969943761826
    2. 'for' → logprob: -3.053109884262085
    3. ' for' → logprob: -5.428110122680664
    4. '   ' → logprob: -9.678110122680664
    5. '```' → logprob: -10.428110122680664
    6. '	for' → logprob: -11.053110122680664
    7. '	' → logprob: -12.303110122680664
    8. '	   ' → logprob: -12.928110122680664
    9. '
' → logprob: -13.053110122680664
    10. '           ' → logprob: -13.303110122680664

Token 1389: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00033760786755010486
    2. '       ' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.625337600708008
    4. ' for' → logprob: -14.000337600708008
    5. 'visited' → logprob: -16.750337600708008
    6. 'while' → logprob: -18.125337600708008
    7. '
' → logprob: -18.500337600708008
    8. '#' → logprob: -18.625337600708008
    9. '           ' → logprob: -19.125337600708008
    10. '	for' → logprob: -19.375337600708008

Token 1390: ' sid' (ID: 22831)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.7989374995231628
    2. '(s' → logprob: -1.4239375591278076
    3. '(st' → logprob: -2.1739375591278076
    4. 'street' → logprob: -2.2989375591278076
    5. '(state' → logprob: -2.9239375591278076
    6. 'sid' → logprob: -4.0489373207092285
    7. 's' → logprob: -4.2989373207092285
    8. ' (' → logprob: -5.7989373207092285
    9. 'st' → logprob: -6.1739373207092285
    10. ' street' → logprob: -6.5489373207092285

Token 1391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025245302822440863
    2. ',s' → logprob: -7.002524375915527
    3. ' ,' → logprob: -7.252524375915527
    4. '<|end|>' → logprob: -7.752524375915527
    5. ',
' → logprob: -9.252524375915527
    6. '<|end|>' → logprob: -9.627524375915527
    7. ',user' → logprob: -10.127524375915527
    8. '',' → logprob: -10.252524375915527
    9. '_,' → logprob: -10.502524375915527
    10. ',next' → logprob: -10.627524375915527

Token 1392: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.003178071230649948
    2. ' pos' → logprob: -5.753178119659424
    3. '	pos' → logprob: -16.003177642822266
    4. '_pos' → logprob: -16.253177642822266
    5. '0' → logprob: -17.003177642822266
    6. 'pid' → logprob: -17.253177642822266
    7. ' ' → logprob: -17.253177642822266
    8. 'p' → logprob: -17.378177642822266
    9. 'npos' → logprob: -18.128177642822266
    10. '   ' → logprob: -18.753177642822266

Token 1393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031619276851415634
    2. '_al' → logprob: -3.5316193103790283
    3. '_,' → logprob: -6.781619071960449
    4. ' ,' → logprob: -7.406619071960449
    5. '_' → logprob: -10.78161907196045
    6. ')' → logprob: -11.03161907196045
    7. '+' → logprob: -11.40661907196045
    8. '[' → logprob: -11.40661907196045
    9. ',_' → logprob: -11.40661907196045
    10. '```' → logprob: -11.53161907196045

Token 1394: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00017743845819495618
    2. ' dx' → logprob: -9.000177383422852
    3. 'd' → logprob: -11.375177383422852
    4. 'dd' → logprob: -11.500177383422852
    5. '_dx' → logprob: -12.250177383422852
    6. '
' → logprob: -12.375177383422852
    7. 'dir' → logprob: -12.625177383422852
    8. '   ' → logprob: -12.875177383422852
    9. '(dx' → logprob: -13.000177383422852
    10. 'xd' → logprob: -13.125177383422852

Token 1395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002070683054625988
    2. ' ,' → logprob: -6.502070903778076
    3. ',d' → logprob: -7.502070903778076
    4. '<|end|>' → logprob: -11.627070426940918
    5. '```' → logprob: -13.502070426940918
    6. ',user' → logprob: -13.877070426940918
    7. '<|end|>' → logprob: -13.877070426940918
    8. ' dy' → logprob: -14.002070426940918
    9. '_,' → logprob: -14.252070426940918
    10. ',next' → logprob: -14.752070426940918

Token 1396: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.676292231422849e-05
    2. ' dy' → logprob: -11.000017166137695
    3. 'd' → logprob: -17.875017166137695
    4. '.dy' → logprob: -19.750017166137695
    5. 'Dy' → logprob: -20.125017166137695
    6. 'dym' → logprob: -20.125017166137695
    7. '<|end|>' → logprob: -20.500017166137695
    8. 'ddy' → logprob: -20.625017166137695
    9. ' ' → logprob: -21.000017166137695
    10. 'dyr' → logprob: -21.250017166137695

Token 1397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006762263830751181
    2. 'in' → logprob: -5.0067620277404785
    3. ',' → logprob: -10.506762504577637
    4. '<|end|>' → logprob: -11.756762504577637
    5. '	in' → logprob: -13.381762504577637
    6. ' ' → logprob: -13.506762504577637
    7. '       ' → logprob: -13.506762504577637
    8. '<|end|>' → logprob: -13.756762504577637
    9. '        ' → logprob: -14.131762504577637
    10. '   ' → logprob: -14.131762504577637

Token 1398: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.00011892046313732862
    2. ' curr' → logprob: -9.12511920928955
    3. '   ' → logprob: -11.87511920928955
    4. '       ' → logprob: -14.00011920928955
    5. '[curr' → logprob: -14.12511920928955
    6. '(curr' → logprob: -14.62511920928955
    7. '    ' → logprob: -15.12511920928955
    8. '           ' → logprob: -16.250118255615234
    9. '	curr' → logprob: -16.250118255615234
    10. 'list' → logprob: -16.500118255615234

Token 1399: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00012999906903132796
    2. ',' → logprob: -10.125129699707031
    3. '           ' → logprob: -10.375129699707031
    4. '       ' → logprob: -11.250129699707031
    5. 'states' → logprob: -11.500129699707031
    6. 'States' → logprob: -12.000129699707031
    7. '_,' → logprob: -12.125129699707031
    8. '   ' → logprob: -12.375129699707031
    9. ')' → logprob: -12.625129699707031
    10. '```' → logprob: -12.875129699707031

Token 1400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09612425416707993
    2. ':
' → logprob: -2.5961241722106934
    3. ',' → logprob: -4.721124172210693
    4. '       ' → logprob: -5.721124172210693
    5. '<|end|>' → logprob: -6.221124172210693
    6. '           ' → logprob: -6.596124172210693
    7. '<|end|>' → logprob: -7.221124172210693
    8. '):
' → logprob: -8.471124649047852
    9. '=' → logprob: -9.471124649047852
    10. '{' → logprob: -9.971124649047852

Token 1401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016873201820999384
    2. '```' → logprob: -7.251687526702881
    3. '       ' → logprob: -7.376687526702881
    4. ' for' → logprob: -9.251687049865723
    5. ',' → logprob: -9.626687049865723
    6. '               ' → logprob: -10.126687049865723
    7. ' if' → logprob: -10.626687049865723
    8. 'street' → logprob: -10.876687049865723
    9. 'for' → logprob: -11.001687049865723
    10. ' street' → logprob: -11.501687049865723

Token 1402: ' s' (ID: 265)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.10555195808410645
    2. '           ' → logprob: -2.3555519580841064
    3. 'for' → logprob: -6.480551719665527
    4. '#' → logprob: -6.855551719665527
    5. '       ' → logprob: -6.980551719665527
    6. 'if' → logprob: -7.730551719665527
    7. 'stre' → logprob: -8.355551719665527
    8. 'distance' → logprob: -8.480551719665527
    9. '```' → logprob: -8.605551719665527
    10. 's' (adapté à ' s') → logprob: -8.855551719665527

Token 1403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288012683391571
    2. '=' → logprob: -1.8038012981414795
    3. 't' → logprob: -1.8038012981414795
    4. 'tre' → logprob: -4.6788010597229
    5. 'tr' → logprob: -5.1788010597229
    6. '['' → logprob: -7.4288010597229
    7. '={'' → logprob: -7.4288010597229
    8. '_' → logprob: -7.5538010597229
    9. 'reet' → logprob: -8.178801536560059
    10. '='' → logprob: -8.178801536560059

Token 1404: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0011703446507453918
    2. ' street' → logprob: -6.7511701583862305
    3. 'stre' → logprob: -16.001171112060547
    4. '   ' → logprob: -17.251171112060547
    5. ' ' → logprob: -19.001171112060547
    6. 'st' → logprob: -20.126171112060547
    7. '       ' → logprob: -20.501171112060547
    8. '.street' → logprob: -20.626171112060547
    9. 'stroke' → logprob: -21.126171112060547
    10. '
' → logprob: -22.001171112060547

Token 1405: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.6286106983898208e-05
    2. 'data' → logprob: -11.250016212463379
    3. 'Data' → logprob: -13.625016212463379
    4. 's' → logprob: -14.625016212463379
    5. '[s' → logprob: -14.875016212463379
    6. '[' → logprob: -15.000016212463379
    7. '           ' → logprob: -15.625016212463379
    8. '['' → logprob: -15.875016212463379
    9. ' =' → logprob: -16.000017166137695
    10. '   ' → logprob: -16.250017166137695

Token 1406: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0031929241959005594
    2. '[' → logprob: -5.878192901611328
    3. ' =' → logprob: -8.253192901611328
    4. '=s' → logprob: -10.253192901611328
    5. '[token' → logprob: -10.753192901611328
    6. '           ' → logprob: -10.878192901611328
    7. '[
' → logprob: -11.253192901611328
    8. '=' → logprob: -11.253192901611328
    9. '            
' → logprob: -12.628192901611328
    10. '['' → logprob: -12.753192901611328

Token 1407: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.018231770023703575
    2. '['' → logprob: -4.5182318687438965
    3. '[s' → logprob: -5.1432318687438965
    4. 'sid' → logprob: -7.5182318687438965
    5. '[id' → logprob: -8.143231391906738
    6. 's' → logprob: -8.518231391906738
    7. '[' → logprob: -9.893231391906738
    8. ''s' → logprob: -10.143231391906738
    9. '_id' → logprob: -10.143231391906738
    10. '[
' → logprob: -10.393231391906738

Token 1408: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08846766501665115
    2. ')
' → logprob: -2.713467597961426
    3. ']' → logprob: -4.338467597961426
    4. '           ' → logprob: -5.713467597961426
    5. ']
' → logprob: -6.463467597961426
    6. '')' → logprob: -8.713467597961426
    7. ')['' → logprob: -9.338467597961426
    8. '       ' → logprob: -9.963467597961426
    9. '               ' → logprob: -10.088467597961426
    10. ')]' → logprob: -11.088467597961426

Token 1409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005162243265658617
    2. 'new' → logprob: -5.755162239074707
    3. 'next' → logprob: -7.630162239074707
    4. '```' → logprob: -7.630162239074707
    5. 'for' → logprob: -8.380162239074707
    6. 'if' → logprob: -8.880162239074707
    7. '#' → logprob: -9.130162239074707
    8. 'pos' → logprob: -9.130162239074707
    9. ' new' → logprob: -9.130162239074707
    10. '       ' → logprob: -9.505162239074707

Token 1410: ' length' (ID: 5517)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.29277777671813965
    2. '           ' → logprob: -1.4177777767181396
    3. '#' → logprob: -5.667778015136719
    4. 'next' → logprob: -5.917778015136719
    5. '```' → logprob: -6.542778015136719
    6. 'for' → logprob: -6.792778015136719
    7. 'n' → logprob: -7.042778015136719
    8. ' new' → logprob: -7.167778015136719
    9. 'if' → logprob: -7.542778015136719
    10. 'forward' → logprob: -8.917778015136719

Token 1411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6824063658714294
    2. '=' → logprob: -1.9324064254760742
    3. '<|end|>' → logprob: -1.9324064254760742
    4. '           ' → logprob: -2.557406425476074
    5. '+' → logprob: -3.932406425476074
    6. '-' → logprob: -4.182406425476074
    7. '
' → logprob: -4.307406425476074
    8. ' -' → logprob: -4.557406425476074
    9. '<|end|>' → logprob: -4.557406425476074
    10. ')' → logprob: -4.557406425476074

Token 1412: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00017982252757064998
    2. ' s' → logprob: -8.6251802444458
    3. 'dist' → logprob: -16.250179290771484
    4. '(s' → logprob: -16.750179290771484
    5. 'length' → logprob: -16.750179290771484
    6. 'len' → logprob: -17.375179290771484
    7. '`s' → logprob: -17.625179290771484
    8. '           ' → logprob: -18.500179290771484
    9. '{s' → logprob: -18.750179290771484
    10. '	s' → logprob: -19.250179290771484

Token 1413: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00012094692647224292
    2. ']['' → logprob: -10.000121116638184
    3. 'length' → logprob: -11.000121116638184
    4. '["' → logprob: -11.000121116638184
    5. ''' → logprob: -11.375121116638184
    6. ''s' → logprob: -11.500121116638184
    7. ')['' → logprob: -12.500121116638184
    8. '[' → logprob: -12.625121116638184
    9. '
' → logprob: -12.750121116638184
    10. '   ' → logprob: -13.125121116638184

Token 1414: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.31333377957344055
    2. ''' → logprob: -1.3133337497711182
    3. '['' → logprob: -10.813333511352539
    4. '[length' → logprob: -10.938333511352539
    5. ''s' → logprob: -11.313333511352539
    6. ''l' → logprob: -11.938333511352539
    7. '{'' → logprob: -13.063333511352539
    8. '(length' → logprob: -13.313333511352539
    9. '
' → logprob: -13.438333511352539
    10. '```' → logprob: -13.688333511352539

Token 1415: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.9486222267150879
    2. '']
' → logprob: -0.9486222267150879
    3. ']' → logprob: -2.323622226715088
    4. '']' → logprob: -2.698622226715088
    5. '           ' → logprob: -2.823622226715088
    6. '       ' → logprob: -8.19862174987793
    7. '               ' → logprob: -9.07362174987793
    8. '']
' → logprob: -9.19862174987793
    9. ']
' → logprob: -9.32362174987793
    10. ')
' → logprob: -9.94862174987793

Token 1416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014128545299172401
    2. '```' → logprob: -7.501412868499756
    3. 'new' → logprob: -8.376412391662598
    4. 'for' → logprob: -9.126412391662598
    5. 'next' → logprob: -9.376412391662598
    6. 'if' → logprob: -9.376412391662598
    7. ' for' → logprob: -9.501412391662598
    8. ' if' → logprob: -9.626412391662598
    9. '            
' → logprob: -9.751412391662598
    10. '
' → logprob: -10.126412391662598

Token 1417: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.09777422994375229
    2. '#' (adapté à ' #') → logprob: -2.7227742671966553
    3. '           ' → logprob: -3.9727742671966553
    4. 'if' → logprob: -5.972774028778076
    5. 'next' → logprob: -5.972774028778076
    6. 'for' → logprob: -6.472774028778076
    7. '```' → logprob: -7.347774028778076
    8. 'forward' → logprob: -7.722774028778076
    9. 'step' → logprob: -8.347774505615234
    10. 'n' → logprob: -8.847774505615234

Token 1418: ' Try' (ID: 14720)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16152657568454742
    2. 'if' → logprob: -3.036526679992676
    3. '#' → logprob: -3.161526679992676
    4. '           ' → logprob: -3.786526679992676
    5. 'next' → logprob: -4.161526679992676
    6. 'for' → logprob: -4.411526679992676
    7. 'forward' → logprob: -6.036526679992676
    8. 'step' → logprob: -6.161526679992676
    9. 'n' → logprob: -6.661526679992676
    10. '```' → logprob: -7.661526679992676

Token 1419: ' to' (ID: 316)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6708133816719055
    2. ' new' → logprob: -1.0458133220672607
    3. 'move' → logprob: -3.5458133220672607
    4. ' move' → logprob: -3.9208133220672607
    5. ' forward' → logprob: -4.17081356048584
    6. '           ' → logprob: -4.29581356048584
    7. 'next' → logprob: -4.29581356048584
    8. 'forward' → logprob: -4.42081356048584
    9. 'to' → logprob: -4.79581356048584
    10. ' to' → logprob: -4.92081356048584

Token 1420: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.22638078033924103
    2. 'new' → logprob: -1.8513808250427246
    3. ' move' → logprob: -3.7263808250427246
    4. 'next' → logprob: -4.726380825042725
    5. 'm' → logprob: -5.101380825042725
    6. ' new' → logprob: -6.351380825042725
    7. 'advance' → logprob: -6.726380825042725
    8. 'go' → logprob: -7.226380825042725
    9. 'pos' → logprob: -7.726380825042725
    10. 'forward' → logprob: -7.851380825042725

Token 1421: ' dist' (ID: 3601)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.28644680976867676
    2. 'new' → logprob: -1.6614468097686768
    3. '_forward' → logprob: -3.1614468097686768
    4. 'pos' → logprob: -5.411446571350098
    5. ' forward' → logprob: -5.661446571350098
    6. '           ' → logprob: -5.786446571350098
    7. 'dist' → logprob: -6.661446571350098
    8. 'f' → logprob: -7.036446571350098
    9. 'for' → logprob: -7.161446571350098
    10. 'next' → logprob: -7.786446571350098

Token 1422: ' forward' (ID: 6687)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3938067555427551
    2. '_forward' → logprob: -2.0188066959381104
    3. 'new' → logprob: -2.3938066959381104
    4. 'forward' → logprob: -3.6438066959381104
    5. ',' → logprob: -4.2688069343566895
    6. 'for' → logprob: -4.3938069343566895
    7. 'next' → logprob: -4.7688069343566895
    8. ' forward' → logprob: -5.1438069343566895
    9. '
' → logprob: -5.5188069343566895
    10. '            
' → logprob: -5.7688069343566895

Token 1423: ' along' (ID: 4251)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02642442099750042
    2. 'new' → logprob: -3.9014244079589844
    3. ',' → logprob: -6.026424407958984
    4. 'next' → logprob: -6.276424407958984
    5. 'pos' → logprob: -7.901424407958984
    6. '
' → logprob: -8.151424407958984
    7. ' new' → logprob: -8.401424407958984
    8. '               ' → logprob: -9.776424407958984
    9. 'if' → logprob: -9.901424407958984
    10. ',new' → logprob: -9.901424407958984

Token 1424: ' current' (ID: 2208)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10495065152645111
    2. ' s' → logprob: -2.7299506664276123
    3. 'sid' → logprob: -3.8549506664276123
    4. 'the' → logprob: -4.979950428009033
    5. 'street' → logprob: -5.729950428009033
    6. ' the' → logprob: -6.854950428009033
    7. '(s' → logprob: -7.104950428009033
    8. ' sid' → logprob: -8.354950904846191
    9. '[s' → logprob: -8.479950904846191
    10. '```' → logprob: -8.854950904846191

Token 1425: ' direction' (ID: 9262)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.08315549045801163
    2. ' street' → logprob: -3.583155393600464
    3. 's' → logprob: -3.833155393600464
    4. ' (' → logprob: -4.708155632019043
    5. 'stre' → logprob: -5.958155632019043
    6. ' s' → logprob: -6.083155632019043
    7. '```' → logprob: -6.333155632019043
    8. '(st' → logprob: -6.583155632019043
    9. 'direction' → logprob: -6.583155632019043
    10. '(s' → logprob: -6.708155632019043

Token 1426: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005942309740930796
    2. 'new' → logprob: -5.505942344665527
    3. 'next' → logprob: -7.380942344665527
    4. '
' → logprob: -7.505942344665527
    5. ',' → logprob: -8.630942344665527
    6. 'pos' → logprob: -8.755942344665527
    7. ' new' → logprob: -9.630942344665527
    8. 'token' → logprob: -9.630942344665527
    9. 'if' → logprob: -10.130942344665527
    10. '               ' → logprob: -10.380942344665527

Token 1427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024821963161230087
    2. ',' → logprob: -7.6274824142456055
    3. 'next' → logprob: -8.127482414245605
    4. '
' → logprob: -8.252482414245605
    5. ' if' → logprob: -8.252482414245605
    6. '            
' → logprob: -8.627482414245605
    7. 'if' → logprob: -9.002482414245605
    8. ' for' → logprob: -9.127482414245605
    9. 'new' → logprob: -9.127482414245605
    10. '```' → logprob: -9.252482414245605

Token 1428: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.009396791458129883
    2. 'next' → logprob: -5.509396553039551
    3. '           ' → logprob: -5.884396553039551
    4. 'if' → logprob: -6.884396553039551
    5. ' new' → logprob: -7.259396553039551
    6. 'for' → logprob: -8.38439655303955
    7. '```' → logprob: -8.50939655303955
    8. 'possible' → logprob: -9.38439655303955
    9. 'n' → logprob: -9.88439655303955
    10. 'pos' → logprob: -10.00939655303955

Token 1429: ' direction' (ID: 9262)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0396091565489769
    2. '           ' → logprob: -3.28960919380188
    3. 'next' → logprob: -7.039608955383301
    4. ' new' → logprob: -8.2896089553833
    5. 'n' → logprob: -9.0396089553833
    6. '   ' → logprob: -9.7896089553833
    7. 'if' → logprob: -9.9146089553833
    8. 'm' → logprob: -9.9146089553833
    9. '       ' → logprob: -10.5396089553833
    10. 'pos' → logprob: -10.6646089553833

Token 1430: ' dx' (ID: 29472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8533489108085632
    2. '_key' → logprob: -2.478348970413208
    3. '_sign' → logprob: -2.603348970413208
    4. '_vector' → logprob: -2.603348970413208
    5. '_flag' → logprob: -2.978348970413208
    6. '_al' → logprob: -3.103348970413208
    7. '_forward' → logprob: -3.103348970413208
    8. '=' → logprob: -3.228348970413208
    9. '_vec' → logprob: -3.353348970413208
    10. '_match' → logprob: -3.853348970413208

Token 1431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011076947674155235
    2. '==' → logprob: -5.761076927185059
    3. 'if' → logprob: -6.011076927185059
    4. ' ,' → logprob: -6.636076927185059
    5. ',d' → logprob: -7.011076927185059
    6. '_,' → logprob: -7.261076927185059
    7. ' ==' → logprob: -7.386076927185059
    8. 'and' → logprob: -8.136076927185059
    9. 'or' → logprob: -8.511076927185059
    10. '=' → logprob: -8.636076927185059

Token 1432: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00029637437546625733
    2. ' dy' → logprob: -8.125296592712402
    3. '
' → logprob: -17.000295639038086
    4. '   ' → logprob: -17.375295639038086
    5. 'dym' → logprob: -17.500295639038086
    6. '                   ' → logprob: -17.875295639038086
    7. '.dy' → logprob: -18.125295639038086
    8. '           ' → logprob: -18.125295639038086
    9. 'd' → logprob: -18.250295639038086
    10. '       ' → logprob: -18.375295639038086

Token 1433: ' may' (ID: 1340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20227211713790894
    2. ',' → logprob: -2.2022721767425537
    3. ':' → logprob: -4.452271938323975
    4. ' if' → logprob: -4.827271938323975
    5. ':
' → logprob: -5.077271938323975
    6. '<|end|>' → logprob: -5.077271938323975
    7. ')' → logprob: -5.452271938323975
    8. ' is' → logprob: -5.452271938323975
    9. ' =' → logprob: -5.952271938323975
    10. 'tokens' → logprob: -6.077271938323975

Token 1434: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.42185309529304504
    2. ' be' → logprob: -1.1718530654907227
    3. 'either' → logprob: -4.046853065490723
    4. 'point' → logprob: -5.671853065490723
    5. 'not' → logprob: -5.796853065490723
    6. ' either' → logprob: -6.046853065490723
    7. 'equal' → logprob: -6.546853065490723
    8. 'change' → logprob: -7.046853065490723
    9. '1' → logprob: -7.171853065490723
    10. '```' → logprob: -7.296853065490723

Token 1435: ' aligned' (ID: 48224)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6296082735061646
    2. '1' → logprob: -1.1296082735061646
    3. 's' → logprob: -2.504608154296875
    4. '0' → logprob: -3.754608154296875
    5. '-' → logprob: -3.879608154296875
    6. 'either' → logprob: -5.129608154296875
    7. ' ' → logprob: -5.629608154296875
    8. ' dx' → logprob: -6.629608154296875
    9. ' s' → logprob: -6.879608154296875
    10. 'd' → logprob: -7.129608154296875

Token 1436: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062204744666814804
    2. ',' → logprob: -4.437204837799072
    3. ' if' → logprob: -4.437204837799072
    4. ' with' → logprob: -5.062204837799072
    5. '               ' → logprob: -5.187204837799072
    6. '
' → logprob: -5.562204837799072
    7. ':
' → logprob: -5.812204837799072
    8. ')' → logprob: -6.187204837799072
    9. ' =' → logprob: -6.437204837799072
    10. '=' → logprob: -6.437204837799072

Token 1437: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03691573068499565
    2. 'street' → logprob: -3.4119157791137695
    3. '(s' → logprob: -6.5369157791137695
    4. ' s' → logprob: -7.2869157791137695
    5. 'c' → logprob: -7.9119157791137695
    6. ' street' → logprob: -8.28691577911377
    7. 'stre' → logprob: -9.41191577911377
    8. '1' → logprob: -9.53691577911377
    9. 'dx' → logprob: -10.03691577911377
    10. '#' → logprob: -10.16191577911377

Token 1438: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.20890061557292938
    2. '           ' → logprob: -2.0839006900787354
    3. '               ' → logprob: -4.083900451660156
    4. 'dx' → logprob: -4.458900451660156
    5. '                   ' → logprob: -5.083900451660156
    6. '[' → logprob: -5.333900451660156
    7. '       ' → logprob: -5.458900451660156
    8. ''s' → logprob: -5.833900451660156
    9. ',' → logprob: -6.083900451660156
    10. '                       ' → logprob: -6.958900451660156

Token 1439: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -8.160971628967673e-05
    2. ''' → logprob: -9.875082015991211
    3. ''d' → logprob: -11.000082015991211
    4. ' dx' → logprob: -11.500082015991211
    5. '_dx' → logprob: -13.500082015991211
    6. 'direction' → logprob: -14.500082015991211
    7. '['' → logprob: -14.875082015991211
    8. ''s' → logprob: -15.125082015991211
    9. '(dx' → logprob: -15.500082015991211
    10. '   ' → logprob: -16.00008201599121

Token 1440: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1252635270357132
    2. '],' → logprob: -2.7502634525299072
    3. ''],' → logprob: -3.8752634525299072
    4. '),' → logprob: -4.500263690948486
    5. ' or' → logprob: -4.875263690948486
    6. ' and' → logprob: -5.875263690948486
    7. ']' → logprob: -6.125263690948486
    8. '<|end|>' → logprob: -6.375263690948486
    9. '',' → logprob: -6.500263690948486
    10. ')' → logprob: -6.500263690948486

Token 1441: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5103108286857605
    2. 's' → logprob: -1.1353108882904053
    3. 'dy' → logprob: -2.6353108882904053
    4. ' dy' → logprob: -6.260310649871826
    5. 'd' → logprob: -7.010310649871826
    6. ' ddy' → logprob: -7.135310649871826
    7. ' or' → logprob: -7.135310649871826
    8. '<|end|>' → logprob: -7.260310649871826
    9. '<|end|>' → logprob: -8.135311126708984
    10. 'ddy' → logprob: -8.635311126708984

Token 1442: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.09206683188676834
    2. ''' → logprob: -2.842066764831543
    3. ''d' → logprob: -3.967066764831543
    4. 'dx' → logprob: -5.467066764831543
    5. ''x' → logprob: -6.592066764831543
    6. ''s' → logprob: -6.967066764831543
    7. '   ' → logprob: -7.342066764831543
    8. ''id' → logprob: -7.467066764831543
    9. ']['' → logprob: -7.717066764831543
    10. '```' → logprob: -7.842066764831543

Token 1443: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -5.080963092041202e-06
    2. ''' → logprob: -12.750004768371582
    3. ' dy' → logprob: -13.750004768371582
    4. '['' → logprob: -14.750004768371582
    5. '.dy' → logprob: -15.625004768371582
    6. ''d' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.2500057220459
    8. 'ddy' → logprob: -16.7500057220459
    9. 'd' → logprob: -17.2500057220459
    10. 'dym' → logprob: -17.5000057220459

Token 1444: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -1.1739026308059692
    2. ']' → logprob: -1.2989026308059692
    3. ' or' → logprob: -1.7989026308059692
    4. '           ' → logprob: -2.2989025115966797
    5. '']:
' → logprob: -3.4239025115966797
    6. ',' → logprob: -3.6739025115966797
    7. ']:
' → logprob: -4.29890251159668
    8. ')' → logprob: -4.29890251159668
    9. '']
' → logprob: -4.42390251159668
    10. ':' → logprob: -4.42390251159668

Token 1445: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006756102200597525
    2. ',' → logprob: -6.25675630569458
    3. ' if' → logprob: -6.88175630569458
    4. '            
' → logprob: -6.88175630569458
    5. '
' → logprob: -7.25675630569458
    6. '		' → logprob: -8.506755828857422
    7. '       ' → logprob: -8.631755828857422
    8. '               ' → logprob: -8.631755828857422
    9. '<|end|>' → logprob: -9.131755828857422
    10. ' 
' → logprob: -9.256755828857422

Token 1446: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7018463611602783
    2. '-op' → logprob: -1.2018463611602783
    3. 'their' → logprob: -2.5768463611602783
    4. '-' → logprob: -3.0768463611602783
    5. 'the' → logprob: -3.4518463611602783
    6. 'its' → logprob: -3.7018463611602783
    7. 'neg' → logprob: -5.451846122741699
    8. '-the' → logprob: -5.576846122741699
    9. ' their' → logprob: -5.701846122741699
    10. 'not' → logprob: -5.826846122741699

Token 1447: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013283521868288517
    2. ',' → logprob: -4.888283729553223
    3. '
' → logprob: -6.263283729553223
    4. '            
' → logprob: -6.388283729553223
    5. ' if' → logprob: -7.013283729553223
    6. ':' → logprob: -9.138283729553223
    7. '               ' → logprob: -9.388283729553223
    8. '```' → logprob: -9.513283729553223
    9. ' for' → logprob: -9.638283729553223
    10. 'token' → logprob: -9.638283729553223

Token 1448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018614033469930291
    2. ' if' → logprob: -8.126861572265625
    3. ' next' → logprob: -8.126861572265625
    4. ',' → logprob: -8.376861572265625
    5. '            
' → logprob: -8.876861572265625
    6. '               ' → logprob: -8.876861572265625
    7. 'token' → logprob: -9.126861572265625
    8. 'next' → logprob: -9.501861572265625
    9. '...' → logprob: -9.751861572265625
    10. 'tokens' → logprob: -9.751861572265625

Token 1449: ' forward' (ID: 6687)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3781360387802124
    2. 'if' → logprob: -1.5031360387802124
    3. 'new' → logprob: -3.003136157989502
    4. 'forward' (adapté à ' forward') → logprob: -4.003136157989502
    5. 'next' → logprob: -4.878136157989502
    6. 'move' → logprob: -5.753136157989502
    7. 'step' → logprob: -5.753136157989502
    8. 'pos' → logprob: -6.253136157989502
    9. '#' → logprob: -6.378136157989502
    10. ' if' → logprob: -6.628136157989502

Token 1450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6712992787361145
    2. '=' → logprob: -0.9212992787361145
    3. '_pos' → logprob: -2.5462992191314697
    4. '_' → logprob: -5.421299457550049
    5. '=True' → logprob: -5.796299457550049
    6. '_move' → logprob: -7.296299457550049
    7. '_states' → logprob: -7.671299457550049
    8. ')' → logprob: -7.921299457550049
    9. '_dist' → logprob: -7.921299457550049
    10. '_new' → logprob: -7.921299457550049

Token 1451: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.004444124177098274
    2. ' (' → logprob: -6.254444122314453
    3. 'dx' → logprob: -6.504444122314453
    4. '(True' → logprob: -7.629444122314453
    5. '(d' → logprob: -8.379444122314453
    6. 'True' → logprob: -8.754444122314453
    7. '   ' → logprob: -10.254444122314453
    8. '((' → logprob: -10.379444122314453
    9. ' dx' → logprob: -10.754444122314453
    10. '(pos' → logprob: -11.629444122314453

Token 1452: 'dx' (ID: 22100)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.3875814974308014
    2. 'dx' → logprob: -1.137581467628479
    3. '(s' → logprob: -8.137581825256348
    4. '(d' → logprob: -8.637581825256348
    5. '   ' → logprob: -9.387581825256348
    6. ' dx' → logprob: -9.887581825256348
    7. ' (' → logprob: -9.887581825256348
    8. 's' → logprob: -11.137581825256348
    9. '(' → logprob: -12.137581825256348
    10. '       ' → logprob: -12.262581825256348

Token 1453: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5847207307815552
    2. '==' → logprob: -0.8347207307815552
    3. ',' → logprob: -4.834720611572266
    4. ')==' → logprob: -7.834720611572266
    5. '=' → logprob: -8.834720611572266
    6. ')' → logprob: -9.209720611572266
    7. '==
' → logprob: -9.334720611572266
    8. ' ,' → logprob: -10.584720611572266
    9. ']==' → logprob: -11.834720611572266
    10. ' ==
' → logprob: -11.959720611572266

Token 1454: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002477796748280525
    2. ' s' → logprob: -6.002477645874023
    3. '   ' → logprob: -14.252477645874023
    4. 'street' → logprob: -14.877477645874023
    5. '(s' → logprob: -15.127477645874023
    6. '1' → logprob: -15.252477645874023
    7. ' ' → logprob: -16.127477645874023
    8. '0' → logprob: -16.377477645874023
    9. ')' → logprob: -16.752477645874023
    10. '       ' → logprob: -16.877477645874023

Token 1455: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.029654676094651222
    2. ''' → logprob: -3.6546547412872314
    3. ''d' → logprob: -5.904654502868652
    4. '_data' → logprob: -8.654654502868652
    5. ''s' → logprob: -8.779654502868652
    6. '[' → logprob: -8.904654502868652
    7. 'data' → logprob: -9.904654502868652
    8. 'Data' → logprob: -10.279654502868652
    9. 'dx' → logprob: -10.779654502868652
    10. '[
' → logprob: -11.404654502868652

Token 1456: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00013321757433004677
    2. '['' → logprob: -9.375133514404297
    3. ''d' → logprob: -10.250133514404297
    4. ''' → logprob: -11.875133514404297
    5. ' dx' → logprob: -12.375133514404297
    6. 'data' → logprob: -13.875133514404297
    7. '[' → logprob: -15.500133514404297
    8. 'x' → logprob: -15.875133514404297
    9. '_dx' → logprob: -15.875133514404297
    10. 'd' → logprob: -16.625133514404297

Token 1457: '']' (ID: 1089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5045848488807678
    2. ' and' → logprob: -1.129584789276123
    3. ')
' → logprob: -3.504584789276123
    4. 'and' → logprob: -4.004584789276123
    5. '')' → logprob: -4.254584789276123
    6. ''])' → logprob: -5.379584789276123
    7. '])' → logprob: -6.504584789276123
    8. ''])
' → logprob: -6.754584789276123
    9. '')
' → logprob: -7.379584789276123
    10. '})' → logprob: -7.629584789276123

Token 1458: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040212878957390785
    2. ' and' → logprob: -5.879021167755127
    3. 'and' → logprob: -7.504021167755127
    4. ')
' → logprob: -7.879021167755127
    5. '<|end|>' → logprob: -8.504021644592285
    6. ' )' → logprob: -9.879021644592285
    7. '<|end|>' → logprob: -11.754021644592285
    8. ')==' → logprob: -12.004021644592285
    9. '),' → logprob: -12.629021644592285
    10. ')>' → logprob: -12.754021644592285

Token 1459: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.9385402993066236e-05
    2. ' dy' → logprob: -11.250019073486328
    3. '1' → logprob: -13.125019073486328
    4. '   ' → logprob: -13.375019073486328
    5. ' ' → logprob: -13.500019073486328
    6. 's' → logprob: -14.750019073486328
    7. '
' → logprob: -14.875019073486328
    8. '  ' → logprob: -15.625019073486328
    9. '     ' → logprob: -16.375019073486328
    10. 'True' → logprob: -16.750019073486328

Token 1460: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24222250282764435
    2. ' ==' → logprob: -1.617222547531128
    3. ')==' → logprob: -4.492222309112549
    4. ')' → logprob: -5.242222309112549
    5. '==
' → logprob: -9.742222785949707
    6. ']==' → logprob: -9.867222785949707
    7. '<|end|>' → logprob: -10.367222785949707
    8. '<|end|>' → logprob: -11.492222785949707
    9. '=' → logprob: -11.617222785949707
    10. ' ' → logprob: -12.617222785949707

Token 1461: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0040882546454668045
    2. ' s' → logprob: -5.504088401794434
    3. '   ' → logprob: -12.129088401794434
    4. ' ' → logprob: -13.129088401794434
    5. '       ' → logprob: -14.504088401794434
    6. '0' → logprob: -14.879088401794434
    7. '           ' → logprob: -15.254088401794434
    8. '    ' → logprob: -15.379088401794434
    9. '  ' → logprob: -15.379088401794434
    10. '     ' → logprob: -15.629088401794434

Token 1462: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0005333751323632896
    2. ''s' → logprob: -7.625533580780029
    3. ''d' → logprob: -10.875533103942871
    4. ''' → logprob: -11.250533103942871
    5. ''y' → logprob: -12.625533103942871
    6. '   ' → logprob: -12.750533103942871
    7. '[' → logprob: -13.625533103942871
    8. ''re' → logprob: -13.750533103942871
    9. '{'' → logprob: -14.000533103942871
    10. '[
' → logprob: -14.375533103942871

Token 1463: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0014722455525770783
    2. ''' → logprob: -6.751472473144531
    3. ''d' → logprob: -8.626472473144531
    4. '1' → logprob: -10.126472473144531
    5. '['' → logprob: -10.501472473144531
    6. '   ' → logprob: -11.001472473144531
    7. ''s' → logprob: -11.376472473144531
    8. '')' → logprob: -12.001472473144531
    9. '
' → logprob: -12.751472473144531
    10. '']' → logprob: -12.751472473144531

Token 1464: ''])
' (ID: 16733)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06366004049777985
    2. ')' → logprob: -2.938660144805908
    3. '')
' → logprob: -5.063660144805908
    4. '')' → logprob: -6.188660144805908
    5. '       ' → logprob: -9.06365966796875
    6. '           ' → logprob: -9.43865966796875
    7. ')

' → logprob: -9.93865966796875
    8. ')')
' → logprob: -9.93865966796875
    9. ')
' → logprob: -11.81365966796875
    10. '   ' → logprob: -11.81365966796875

Token 1465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009314678027294576
    2. '            
' → logprob: -8.625931739807129
    3. ',' → logprob: -8.750931739807129
    4. ' if' → logprob: -8.875931739807129
    5. '```' → logprob: -9.125931739807129
    6. '
' → logprob: -9.750931739807129
    7. 'token' → logprob: -10.375931739807129
    8. '               ' → logprob: -10.500931739807129
    9. 'tokens' → logprob: -10.500931739807129
    10. ' for' → logprob: -11.000931739807129

Token 1466: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.08923279494047165
    2. '           ' → logprob: -2.5892326831817627
    3. 'if' → logprob: -5.339232921600342
    4. 'next' → logprob: -5.714232921600342
    5. 'for' → logprob: -7.214232921600342
    6. '```' → logprob: -7.589232921600342
    7. ' new' → logprob: -7.839232921600342
    8. 'pos' → logprob: -8.339232444763184
    9. '#' → logprob: -9.714232444763184
    10. '               ' → logprob: -10.214232444763184

Token 1467: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00018399098189547658
    2. '_position' → logprob: -9.250184059143066
    3. '_' → logprob: -10.250184059143066
    4. '_positions' → logprob: -10.250184059143066
    5. ' _' → logprob: -11.750184059143066
    6. 'pos' → logprob: -13.125184059143066
    7. '```' → logprob: -13.625184059143066
    8. ''_' → logprob: -13.625184059143066
    9. '_p' → logprob: -13.875184059143066
    10. '_val' → logprob: -14.125184059143066

Token 1468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014288455247879
    2. '=' → logprob: -1.7014288902282715
    3. '<|end|>' → logprob: -11.576428413391113
    4. ')' → logprob: -14.201428413391113
    5. '=
' → logprob: -14.826428413391113
    6. '=user' → logprob: -14.826428413391113
    7. '=line' → logprob: -14.826428413391113
    8. '=int' → logprob: -15.201428413391113
    9. '_tokens' → logprob: -15.326428413391113
    10. '<|end|>' → logprob: -15.326428413391113

Token 1469: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.12209559977054596
    2. ' move' → logprob: -2.2470955848693848
    3. 'pos' → logprob: -4.747095584869385
    4. ' pos' → logprob: -7.622095584869385
    5. 'new' → logprob: -10.372096061706543
    6. '(move' → logprob: -12.122096061706543
    7. '	move' → logprob: -12.372096061706543
    8. 'None' → logprob: -12.497096061706543
    9. ' new' → logprob: -12.497096061706543
    10. ' None' → logprob: -13.372096061706543

Token 1470: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.875000953674316
    3. 'forward' → logprob: -15.750000953674316
    4. '_backward' → logprob: -16.0
    5. '_' → logprob: -16.625
    6. '_FORWARD' → logprob: -17.0
    7. 'Forward' → logprob: -17.125
    8. '`' → logprob: -18.0
    9. 's' → logprob: -18.5
    10. '"_' → logprob: -18.5

Token 1471: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0012352262856438756
    2. '(st' → logprob: -7.376235008239746
    3. 's' → logprob: -7.501235008239746
    4. '(' → logprob: -10.751235008239746
    5. '(
' → logprob: -11.001235008239746
    6. '```' → logprob: -11.251235008239746
    7. 'street' → logprob: -12.751235008239746
    8. ' (' → logprob: -13.501235008239746
    9. '[' → logprob: -15.501235008239746
    10. ')' → logprob: -16.126235961914062

Token 1472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012509774416685104
    2. ',s' → logprob: -5.387509822845459
    3. '(s' → logprob: -5.762509822845459
    4. ',pos' → logprob: -5.762509822845459
    5. '(' → logprob: -7.012509822845459
    6. ',
' → logprob: -9.3875093460083
    7. ' ,' → logprob: -9.3875093460083
    8. ',(' → logprob: -9.7625093460083
    9. ')' → logprob: -9.8875093460083
    10. '[' → logprob: -9.8875093460083

Token 1473: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.003813376184552908
    2. ' pos' → logprob: -6.37881326675415
    3. 's' → logprob: -6.75381326675415
    4. 'sid' → logprob: -7.00381326675415
    5. ' s' → logprob: -11.128813743591309
    6. '(s' → logprob: -12.253813743591309
    7. '(pos' → logprob: -12.628813743591309
    8. ' sid' → logprob: -13.003813743591309
    9. 'new' → logprob: -13.253813743591309
    10. '```' → logprob: -13.503813743591309

Token 1474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014369006967172027
    2. ',new' → logprob: -6.751436710357666
    3. ' ,' → logprob: -8.501437187194824
    4. ',s' → logprob: -10.751437187194824
    5. ',next' → logprob: -11.001437187194824
    6. 'new' → logprob: -11.876437187194824
    7. '```' → logprob: -13.001437187194824
    8. '           ' → logprob: -13.001437187194824
    9. ',d' → logprob: -13.126437187194824
    10. ',current' → logprob: -13.751437187194824

Token 1475: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009413579828105867
    2. ' dist' → logprob: -7.000941276550293
    3. 'new' → logprob: -10.750941276550293
    4. '(dist' → logprob: -13.000941276550293
    5. ')' → logprob: -13.750941276550293
    6. '<|end|>' → logprob: -13.750941276550293
    7. '```' → logprob: -13.875941276550293
    8. '	dist' → logprob: -14.250941276550293
    9. ' new' → logprob: -14.375941276550293
    10. '_dist' → logprob: -14.750941276550293

Token 1476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023365555331110954
    2. ')' → logprob: -3.7733654975891113
    3. '           ' → logprob: -10.02336597442627
    4. ')
' → logprob: -10.39836597442627
    5. ' ,' → logprob: -11.27336597442627
    6. '<|end|>' → logprob: -11.64836597442627
    7. '               ' → logprob: -12.14836597442627
    8. '       ' → logprob: -12.39836597442627
    9. '   ' → logprob: -13.14836597442627
    10. ',
' → logprob: -13.39836597442627

Token 1477: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -2.4391956685576588e-05
    2. ' forward' → logprob: -10.750024795532227
    3. 'True' → logprob: -12.750024795532227
    4. '   ' → logprob: -19.250024795532227
    5. '           ' → logprob: -19.875024795532227
    6. ' True' → logprob: -21.000024795532227
    7. 'true' → logprob: -21.000024795532227
    8. ')' → logprob: -21.250024795532227
    9. '=True' → logprob: -21.375024795532227
    10. '       ' → logprob: -21.750024795532227

Token 1478: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10780909657478333
    2. '=True' → logprob: -2.357809066772461
    3. ')
' → logprob: -5.232809066772461
    4. '=' → logprob: -6.107809066772461
    5. '=False' → logprob: -11.982809066772461
    6. ')

' → logprob: -13.607809066772461
    7. ')
' → logprob: -14.982809066772461
    8. '   ' → logprob: -15.232809066772461
    9. '           ' → logprob: -15.607809066772461
    10. '),' → logprob: -15.857809066772461

Token 1479: 'forward' (ID: 20233)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1602829247713089
    2. 'forward' → logprob: -1.9102829694747925
    3. ' True' → logprob: -10.160283088684082
    4. ' forward' → logprob: -11.910283088684082
    5. 'true' → logprob: -12.285283088684082
    6. ')' → logprob: -12.410283088684082
    7. '=True' → logprob: -13.660283088684082
    8. '
' → logprob: -13.660283088684082
    9. '1' → logprob: -14.410283088684082
    10. '   ' → logprob: -14.785283088684082

Token 1480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.387137770652771
    2. ')
' → logprob: -1.137137770652771
    3. '           ' → logprob: -8.262137413024902
    4. ')
' → logprob: -12.262137413024902
    5. '       ' → logprob: -13.387137413024902
    6. '):
' → logprob: -14.387137413024902
    7. ')

' → logprob: -15.012137413024902
    8. '               ' → logprob: -15.387137413024902
    9. '                   ' → logprob: -15.512137413024902
    10. ')`
' → logprob: -15.887137413024902

Token 1481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016162583604454994
    2. '       ' → logprob: -4.391162395477295
    3. ' if' → logprob: -6.641162395477295
    4. '<|end|>' → logprob: -7.141162395477295
    5. '               ' → logprob: -7.891162395477295
    6. 'if' → logprob: -8.266162872314453
    7. '```' → logprob: -8.766162872314453
    8. '                   ' → logprob: -9.391162872314453
    9. ')' → logprob: -9.391162872314453
    10. '   ' → logprob: -9.391162872314453

Token 1482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004739483818411827
    2. ' if' → logprob: -5.504739284515381
    3. '           ' → logprob: -7.379739284515381
    4. '       ' → logprob: -10.504739761352539
    5. 'If' → logprob: -12.129739761352539
    6. '   ' → logprob: -13.879739761352539
    7. '```' → logprob: -13.879739761352539
    8. ';if' → logprob: -13.879739761352539
    9. '	if' → logprob: -15.254739761352539
    10. ')' → logprob: -15.254739761352539

Token 1483: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.048590775579214096
    2. ' new' → logprob: -3.048590660095215
    3. 'not' → logprob: -13.298590660095215
    4. 'None' → logprob: -14.423590660095215
    5. '           ' → logprob: -14.798590660095215
    6. '                   ' → logprob: -15.298590660095215
    7. '               ' → logprob: -15.548590660095215
    8. ' not' → logprob: -16.17359161376953
    9. 'New' → logprob: -17.17359161376953
    10. '   ' → logprob: -17.42359161376953

Token 1484: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.2723104848410003e-05
    2. 'pos' → logprob: -10.875022888183594
    3. '_' → logprob: -12.625022888183594
    4. '_positions' → logprob: -15.750022888183594
    5. 'Pos' → logprob: -16.125022888183594
    6. '_POS' → logprob: -16.625022888183594
    7. ' _' → logprob: -17.375022888183594
    8. '```' → logprob: -17.375022888183594
    9. '[pos' → logprob: -17.500022888183594
    10. '_new' → logprob: -17.875022888183594

Token 1485: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07909742742776871
    2. 'is' → logprob: -2.5790975093841553
    3. ')' → logprob: -8.954097747802734
    4. '!=' → logprob: -10.079097747802734
    5. '<|end|>' → logprob: -11.329097747802734
    6. ')is' → logprob: -12.204097747802734
    7. '	is' → logprob: -12.954097747802734
    8. ' !=' → logprob: -13.079097747802734
    9. '            ' → logprob: -13.329097747802734
    10. '=' → logprob: -13.329097747802734

Token 1486: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07247468829154968
    2. ' not' → logprob: -2.822474718093872
    3. 'None' → logprob: -4.572474479675293
    4. ' None' → logprob: -9.197474479675293
    5. 'Not' → logprob: -11.322474479675293
    6. '   ' → logprob: -12.947474479675293
    7. '=None' → logprob: -14.072474479675293
    8. '0' → logprob: -14.572474479675293
    9. '	not' → logprob: -14.697474479675293
    10. 'none' → logprob: -14.947474479675293

Token 1487: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.088346359931165e-07
    2. ' None' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.25
    4. 'none' → logprob: -16.375
    5. '       ' → logprob: -17.0
    6. '           ' → logprob: -17.375
    7. '
' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. '(None' → logprob: -18.25
    10. '=None' → logprob: -18.25

Token 1488: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5076341032981873
    2. ':' → logprob: -1.007634162902832
    3. ',' → logprob: -4.507634162902832
    4. ':
' → logprob: -4.632634162902832
    5. '           ' → logprob: -5.257634162902832
    6. '                       ' → logprob: -6.257634162902832
    7. '                               ' → logprob: -6.382634162902832
    8. '<|end|>' → logprob: -6.757634162902832
    9. '                           ' → logprob: -7.382634162902832
    10. ')' → logprob: -7.757634162902832

Token 1489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036394817288964987
    2. '```' → logprob: -8.875364303588867
    3. ' next' → logprob: -9.625364303588867
    4. '           ' → logprob: -10.125364303588867
    5. '                   ' → logprob: -10.625364303588867
    6. 'next' → logprob: -11.000364303588867
    7. '                               ' → logprob: -11.125364303588867
    8. '              ' → logprob: -11.375364303588867
    9. '                ' → logprob: -11.625364303588867
    10. '                       ' → logprob: -12.000364303588867

Token 1490: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7581243515014648
    2. 'if' → logprob: -1.0081243515014648
    3. '               ' → logprob: -1.8831243515014648
    4. ' if' → logprob: -4.758124351501465
    5. ' next' → logprob: -5.633124351501465
    6. '#' (adapté à ' #') → logprob: -7.383124351501465
    7. '                   ' → logprob: -7.758124351501465
    8. 'x' → logprob: -8.133124351501465
    9. 'direction' → logprob: -8.883124351501465
    10. 'coord' → logprob: -8.883124351501465

Token 1491: ' No' (ID: 3004)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1654011607170105
    2. 'if' → logprob: -2.0404012203216553
    3. '#' → logprob: -4.165400981903076
    4. 'new' → logprob: -5.790400981903076
    5. 'dir' → logprob: -6.665400981903076
    6. 'key' → logprob: -7.165400981903076
    7. 'state' → logprob: -7.165400981903076
    8. 'direction' → logprob: -8.415401458740234
    9. '               ' → logprob: -8.790401458740234
    10. '           ' → logprob: -9.040401458740234

Token 1492: ' turn' (ID: 3716)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.07768384367227554
    2. '           ' → logprob: -4.202683925628662
    3. '_state' → logprob: -4.577683925628662
    4. ' if' → logprob: -4.577683925628662
    5. '               ' → logprob: -5.327683925628662
    6. '#' → logprob: -5.327683925628662
    7. ' #' → logprob: -5.577683925628662
    8. ' next' → logprob: -5.577683925628662
    9. 'change' → logprob: -5.577683925628662
    10. '                   ' → logprob: -6.077683925628662

Token 1493: ' needed' (ID: 6118)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.328834593296051
    2. '                   ' → logprob: -1.3288345336914062
    3. ',' → logprob: -5.328834533691406
    4. '                       ' → logprob: -5.453834533691406
    5. ' next' → logprob: -5.703834533691406
    6. 'next' → logprob: -6.328834533691406
    7. '
' → logprob: -8.453834533691406
    8. ':
' → logprob: -8.828834533691406
    9. '           ' → logprob: -8.953834533691406
    10. '                           ' → logprob: -8.953834533691406

Token 1494: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00761951832100749
    2. '                   ' → logprob: -5.632619380950928
    3. ' next' → logprob: -6.132619380950928
    4. ',' → logprob: -7.507619380950928
    5. 'next' → logprob: -7.757619380950928
    6. '                       ' → logprob: -8.632619857788086
    7. '
' → logprob: -8.632619857788086
    8. '(next' → logprob: -8.757619857788086
    9. ',next' → logprob: -9.007619857788086
    10. '```' → logprob: -9.882619857788086

Token 1495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018154505640268326
    2. ' next' → logprob: -4.893154621124268
    3. '                   ' → logprob: -5.018154621124268
    4. '                       ' → logprob: -6.768154621124268
    5. 'next' → logprob: -7.393154621124268
    6. ',' → logprob: -7.393154621124268
    7. '(next' → logprob: -8.01815414428711
    8. '                               ' → logprob: -8.26815414428711
    9. '```' → logprob: -8.39315414428711
    10. ',next' → logprob: -8.64315414428711

Token 1496: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003552463313098997
    2. ' next' → logprob: -8.12535572052002
    3. '                   ' → logprob: -10.12535572052002
    4. '               ' → logprob: -11.25035572052002
    5. '           ' → logprob: -12.62535572052002
    6. 'if' → logprob: -13.25035572052002
    7. '                       ' → logprob: -14.75035572052002
    8. '   ' → logprob: -14.87535572052002
    9. 'new' → logprob: -15.87535572052002
    10. '	next' → logprob: -16.625354766845703

Token 1497: ' Check' (ID: 6208)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0008702484192326665
    2. ' next' → logprob: -7.250870227813721
    3. '                   ' → logprob: -9.000870704650879
    4. '               ' → logprob: -10.875870704650879
    5. 'if' → logprob: -11.750870704650879
    6. '           ' → logprob: -12.375870704650879
    7. 'new' → logprob: -13.000870704650879
    8. '                       ' → logprob: -13.375870704650879
    9. '#' → logprob: -14.125870704650879
    10. '   ' → logprob: -14.500870704650879

Token 1498: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25122249126434326
    2. ' if' → logprob: -2.001222610473633
    3. '                   ' → logprob: -3.251222610473633
    4. '               ' → logprob: -3.251222610473633
    5. 'dir' → logprob: -5.001222610473633
    6. '(dir' → logprob: -6.626222610473633
    7. '           ' → logprob: -7.876222610473633
    8. ' dir' → logprob: -7.876222610473633
    9. '                       ' → logprob: -8.001222610473633
    10. '                ' → logprob: -9.376222610473633

Token 1499: ' direction' (ID: 9262)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0049211084842681885
    2. ' dir' → logprob: -5.504920959472656
    3. '(dir' → logprob: -8.004920959472656
    4. 'c' → logprob: -8.504920959472656
    5. 'new' → logprob: -9.379920959472656
    6. ' (' → logprob: -10.254920959472656
    7. '(' → logprob: -10.504920959472656
    8. 'dx' → logprob: -10.629920959472656
    9. '   ' → logprob: -10.754920959472656
    10. ' ' → logprob: -10.879920959472656

Token 1500: ' matches' (ID: 15248)
  Prédit: '_match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.2933777570724487
    2. '==' → logprob: -1.6683777570724487
    3. 'match' → logprob: -2.2933778762817383
    4. '               ' → logprob: -2.4183778762817383
    5. '           ' → logprob: -2.6683778762817383
    6. 'matches' → logprob: -2.7933778762817383
    7. 's' → logprob: -2.9183778762817383
    8. 'in' → logprob: -3.1683778762817383
    9. ' ==' → logprob: -3.2933778762817383
    10. '                   ' → logprob: -3.9183778762817383

Token 1501: ' measured' (ID: 26489)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6351587772369385
    2. 'if' → logprob: -1.3851587772369385
    3. ' dir' → logprob: -1.7601587772369385
    4. 'dir' → logprob: -3.6351587772369385
    5. '               ' → logprob: -4.010158538818359
    6. '                   ' → logprob: -6.010158538818359
    7. '           ' → logprob: -7.885158538818359
    8. '```' → logprob: -8.76015853881836
    9. '(dir' → logprob: -9.26015853881836
    10. ' (' → logprob: -10.01015853881836

Token 1502: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2273368090391159
    2. 'if' → logprob: -2.352336883544922
    3. ' c' → logprob: -3.352336883544922
    4. '               ' → logprob: -3.602336883544922
    5. ' if' → logprob: -3.602336883544922
    6. '                   ' → logprob: -4.852336883544922
    7. '(c' → logprob: -5.102336883544922
    8. '                       ' → logprob: -6.977336883544922
    9. ',' → logprob: -7.227336883544922
    10. '           ' → logprob: -7.477336883544922

Token 1503: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.00010151672904612496
    2. 'c' → logprob: -10.000101089477539
    3. 'ir' → logprob: -10.625101089477539
    4. '(dir' → logprob: -11.375101089477539
    5. '(c' → logprob: -11.750101089477539
    6. '   ' → logprob: -13.500101089477539
    7. '_dir' → logprob: -13.875101089477539
    8. 'def' → logprob: -14.125101089477539
    9. 'if' → logprob: -14.125101089477539
    10. '[c' → logprob: -14.375101089477539

Token 1504: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001616034540347755
    2. ' if' → logprob: -7.00161600112915
    3. 'if' → logprob: -7.50161600112915
    4. '                   ' → logprob: -9.126616477966309
    5. '           ' → logprob: -11.626616477966309
    6. ',' → logprob: -11.751616477966309
    7. '                       ' → logprob: -12.001616477966309
    8. '```' → logprob: -12.251616477966309
    9. '                               ' → logprob: -12.376616477966309
    10. '                ' → logprob: -12.751616477966309

Token 1505: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06878606975078583
    2. ' if' → logprob: -3.443786144256592
    3. '                   ' → logprob: -3.568786144256592
    4. 'if' → logprob: -5.568786144256592
    5. '```' → logprob: -6.568786144256592
    6. '                       ' → logprob: -7.443786144256592
    7. '                               ' → logprob: -8.318785667419434
    8. '                ' → logprob: -8.818785667419434
    9. '                           ' → logprob: -10.443785667419434
    10. ' next' → logprob: -10.568785667419434

Token 1506: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007808666210621595
    2. ' if' → logprob: -5.007808685302734
    3. '               ' → logprob: -6.882808685302734
    4. '                   ' → logprob: -9.757808685302734
    5. '```' → logprob: -12.132808685302734
    6. '                       ' → logprob: -13.007808685302734
    7. '                               ' → logprob: -14.382808685302734
    8. 'If' → logprob: -15.132808685302734
    9. '{
' → logprob: -15.382808685302734
    10. '                           ' → logprob: -15.757808685302734

Token 1507: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.04864447936415672
    2. ' dir' → logprob: -3.048644542694092
    3. '               ' → logprob: -10.423644065856934
    4. '                   ' → logprob: -11.298644065856934
    5. '(dir' → logprob: -12.298644065856934
    6. 'not' → logprob: -12.423644065856934
    7. '           ' → logprob: -13.673644065856934
    8. '                ' → logprob: -13.923644065856934
    9. ' not' → logprob: -14.173644065856934
    10. '              ' → logprob: -14.298644065856934

Token 1508: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.750017166137695
    3. 'match' → logprob: -12.250017166137695
    4. '_MATCH' → logprob: -13.375017166137695
    5. '_mat' → logprob: -14.250017166137695
    6. ' _' → logprob: -14.875017166137695
    7. '_matching' → logprob: -15.125017166137695
    8. '_matches' → logprob: -15.250017166137695
    9. '_m' → logprob: -15.625017166137695
    10. '(_' → logprob: -15.750017166137695

Token 1509: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.0013248840114101768
    2. 'dx' → logprob: -6.751324653625488
    3. ' dx' → logprob: -9.001324653625488
    4. '(' → logprob: -10.626324653625488
    5. ' (' → logprob: -12.001324653625488
    6. '(
' → logprob: -14.876324653625488
    7. '_dx' → logprob: -15.501324653625488
    8. '(d' → logprob: -15.501324653625488
    9. 'Dx' → logprob: -16.626325607299805
    10. '.dx' → logprob: -17.126325607299805

Token 1510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010391215328127146
    2. ' ,' → logprob: -7.001039028167725
    3. ',d' → logprob: -9.251039505004883
    4. '',' → logprob: -11.501039505004883
    5. ',len' → logprob: -12.626039505004883
    6. ',None' → logprob: -12.626039505004883
    7. ')' → logprob: -12.876039505004883
    8. '[' → logprob: -13.501039505004883
    9. '','' → logprob: -13.876039505004883
    10. '           ' → logprob: -14.001039505004883

Token 1511: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0059302207082509995
    2. ' dy' → logprob: -5.130930423736572
    3. '0' → logprob: -13.880929946899414
    4. ' ' → logprob: -15.755929946899414
    5. '.dy' → logprob: -15.755929946899414
    6. 'd' → logprob: -16.630929946899414
    7. '
' → logprob: -16.755929946899414
    8. '<|end|>' → logprob: -16.880929946899414
    9. 'Dy' → logprob: -17.005929946899414
    10. '```' → logprob: -17.130929946899414

Token 1512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009939531795680523
    2. ',c' → logprob: -4.634939670562744
    3. ' ,' → logprob: -8.634939193725586
    4. 'c' → logprob: -13.259939193725586
    5. '           ' → logprob: -14.384939193725586
    6. '               ' → logprob: -14.384939193725586
    7. '[' → logprob: -14.509939193725586
    8. ' c' → logprob: -15.259939193725586
    9. '`,' → logprob: -15.259939193725586
    10. '   ' → logprob: -15.384939193725586

Token 1513: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03805067762732506
    2. ' c' → logprob: -3.288050651550293
    3. ')c' → logprob: -12.288050651550293
    4. '                   ' → logprob: -13.413050651550293
    5. '               ' → logprob: -13.788050651550293
    6. ')' → logprob: -14.913050651550293
    7. '	c' → logprob: -14.913050651550293
    8. '                           ' → logprob: -15.288050651550293
    9. '```' → logprob: -15.288050651550293
    10. ' ' → logprob: -15.913050651550293

Token 1514: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -4.763666947837919e-05
    2. 'c' → logprob: -10.12504768371582
    3. '(dir' → logprob: -13.75004768371582
    4. ')' → logprob: -13.75004768371582
    5. 'd' → logprob: -14.25004768371582
    6. '_dir' → logprob: -14.37504768371582
    7. '   ' → logprob: -14.37504768371582
    8. '```' → logprob: -14.62504768371582
    9. ' dir' → logprob: -14.75004768371582
    10. '(c' → logprob: -14.87504768371582

Token 1515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20204684138298035
    2. '):
' → logprob: -1.7020468711853027
    3. ')' → logprob: -7.827046871185303
    4. '                   ' → logprob: -9.452046394348145
    5. '               ' → logprob: -9.952046394348145
    6. '):
' → logprob: -10.202046394348145
    7. '                       ' → logprob: -10.327046394348145
    8. ':' → logprob: -11.702046394348145
    9. '):

' → logprob: -11.702046394348145
    10. '                           ' → logprob: -11.827046394348145

Token 1516: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004378214362077415
    2. ' next' → logprob: -8.87543773651123
    3. '                       ' → logprob: -9.00043773651123
    4. 'next' → logprob: -9.25043773651123
    5. '                           ' → logprob: -10.87543773651123
    6. '(next' → logprob: -11.12543773651123
    7. '                  ' → logprob: -11.37543773651123
    8. '               ' → logprob: -12.00043773651123
    9. ':' → logprob: -12.25043773651123
    10. '```' → logprob: -12.50043773651123

Token 1517: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.2059345692396164
    2. ' next' → logprob: -1.7059345245361328
    3. '                       ' → logprob: -5.955934524536133
    4. '                   ' → logprob: -6.955934524536133
    5. '               ' → logprob: -7.455934524536133
    6. '                               ' → logprob: -8.455934524536133
    7. '                           ' → logprob: -9.455934524536133
    8. '[next' → logprob: -10.705934524536133
    9. ',next' → logprob: -10.955934524536133
    10. '(next' → logprob: -11.330934524536133

Token 1518: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.9361264946837764e-07
    2. 'States' → logprob: -16.5
    3. 'states' → logprob: -17.25
    4. '```' → logprob: -18.25
    5. '
' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. 's' → logprob: -19.0
    8. '_state' → logprob: -19.375
    9. '_tokens' → logprob: -19.5
    10. '_st' → logprob: -19.75

Token 1519: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00040219054790213704
    2. '.' → logprob: -7.875401973724365
    3. '.update' → logprob: -11.000402450561523
    4. ' .' → logprob: -13.375402450561523
    5. '.append' → logprob: -13.500402450561523
    6. '.setdefault' → logprob: -13.750402450561523
    7. '.Add' → logprob: -14.500402450561523
    8. 'add' → logprob: -15.125402450561523
    9. '.dis' → logprob: -16.250402450561523
    10. '_add' → logprob: -16.250402450561523

Token 1520: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003473825636319816
    2. '(' → logprob: -8.000347137451172
    3. '(s' → logprob: -11.375347137451172
    4. ' (' → logprob: -15.250347137451172
    5. '   ' → logprob: -16.250347137451172
    6. '```' → logprob: -17.250347137451172
    7. ' ((' → logprob: -17.875347137451172
    8. ' ' → logprob: -19.000347137451172
    9. '[(' → logprob: -19.250347137451172
    10. '  ' → logprob: -19.375347137451172

Token 1521: 'sid' (ID: 38734)
  Prédit: 'sid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -6.2729995988775045e-06
    2. ' sid' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. '(s' → logprob: -18.1250057220459
    5. '           ' → logprob: -18.7500057220459
    6. '.sid' → logprob: -19.0000057220459
    7. '_sid' → logprob: -19.3750057220459
    8. '	s' → logprob: -19.3750057220459
    9. '               ' → logprob: -19.5000057220459
    10. 'side' → logprob: -19.7500057220459

Token 1522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008687060908414423
    2. ',new' → logprob: -7.125868797302246
    3. ' ,' → logprob: -10.750868797302246
    4. ',next' → logprob: -10.875868797302246
    5. ',
' → logprob: -12.250868797302246
    6. 'new' → logprob: -12.375868797302246
    7. '<|end|>' → logprob: -12.750868797302246
    8. '‌,' → logprob: -13.000868797302246
    9. '`,' → logprob: -13.250868797302246
    10. ',None' → logprob: -13.750868797302246

Token 1523: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00018268341955263168
    2. ' new' → logprob: -8.62518310546875
    3. 'round' → logprob: -13.50018310546875
    4. '   ' → logprob: -14.00018310546875
    5. 'New' → logprob: -16.00018310546875
    6. 'int' → logprob: -16.37518310546875
    7. '                   ' → logprob: -16.50018310546875
    8. ')new' → logprob: -16.50018310546875
    9. '	new' → logprob: -16.62518310546875
    10. '```' → logprob: -16.62518310546875

Token 1524: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -9.372294698550832e-06
    2. 'pos' → logprob: -11.625009536743164
    3. 'Pos' → logprob: -15.000009536743164
    4. '_p' → logprob: -17.250009536743164
    5. '_' → logprob: -17.500009536743164
    6. '_POS' → logprob: -18.625009536743164
    7. '```' → logprob: -19.125009536743164
    8. '_obj' → logprob: -19.250009536743164
    9. '-pos' → logprob: -19.500009536743164
    10. 'os' → logprob: -19.625009536743164

Token 1525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.921253225300461e-05
    2. ' ,' → logprob: -10.000069618225098
    3. '                   ' → logprob: -11.500069618225098
    4. '```' → logprob: -12.875069618225098
    5. ',
' → logprob: -13.375069618225098
    6. '                       ' → logprob: -13.500069618225098
    7. '                               ' → logprob: -14.000069618225098
    8. '`,' → logprob: -14.000069618225098
    9. '                           ' → logprob: -14.125069618225098
    10. '               ' → logprob: -14.500069618225098

Token 1526: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00033903829171322286
    2. ' dx' → logprob: -8.00033950805664
    3. '   ' → logprob: -13.12533950805664
    4. '                   ' → logprob: -14.75033950805664
    5. '    ' → logprob: -15.25033950805664
    6. '           ' → logprob: -15.37533950805664
    7. '       ' → logprob: -15.87533950805664
    8. '               ' → logprob: -16.25033950805664
    9. '                           ' → logprob: -16.75033950805664
    10. '                       ' → logprob: -16.87533950805664

Token 1527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009168167016468942
    2. ' ,' → logprob: -7.000916957855225
    3. ',d' → logprob: -13.000916481018066
    4. ',
' → logprob: -13.125916481018066
    5. '   ' → logprob: -14.375916481018066
    6. '    ' → logprob: -16.000917434692383
    7. '                   ' → logprob: -16.125917434692383
    8. '```' → logprob: -16.625917434692383
    9. '       ' → logprob: -16.875917434692383
    10. '           ' → logprob: -17.000917434692383

Token 1528: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.15310683415737e-05
    2. ' dy' → logprob: -10.750021934509277
    3. '.dy' → logprob: -21.12502098083496
    4. '   ' → logprob: -21.62502098083496
    5. 'dym' → logprob: -22.12502098083496
    6. 'Dy' → logprob: -22.75002098083496
    7. '
' → logprob: -23.00002098083496
    8. 'ddy' → logprob: -23.12502098083496
    9. 'd' → logprob: -23.25002098083496
    10. 'dyr' → logprob: -23.62502098083496

Token 1529: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0016764947213232517
    2. '))
' → logprob: -6.626676559448242
    3. '                   ' → logprob: -8.501676559448242
    4. ')' → logprob: -9.251676559448242
    5. '               ' → logprob: -10.876676559448242
    6. '                       ' → logprob: -11.376676559448242
    7. '                           ' → logprob: -12.251676559448242
    8. '           ' → logprob: -12.626676559448242
    9. ')))' → logprob: -13.001676559448242
    10. '       ' → logprob: -13.251676559448242

Token 1530: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1531: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02699686400592327
    2. 'else' → logprob: -3.9019968509674072
    3. '               ' → logprob: -5.276997089385986
    4. 'elif' → logprob: -7.651997089385986
    5. 'continue' → logprob: -8.026996612548828
    6. ' else' → logprob: -8.276996612548828
    7. '       ' → logprob: -8.526996612548828
    8. '
' → logprob: -10.276996612548828
    9. '                   ' → logprob: -11.151996612548828
    10. ' elif' → logprob: -12.151996612548828

Token 1532: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4445800483226776
    2. '           ' → logprob: -1.194580078125
    3. '               ' → logprob: -3.694580078125
    4. ' else' → logprob: -4.444580078125
    5. 'continue' → logprob: -4.819580078125
    6. 'elif' → logprob: -5.694580078125
    7. 'if' → logprob: -5.819580078125
    8. '
' → logprob: -5.944580078125
    9. '#' → logprob: -6.819580078125
    10. 'for' → logprob: -7.069580078125

Token 1533: ' no' (ID: 860)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7659311294555664
    2. ':
' → logprob: -0.7659311294555664
    3. ' continue' → logprob: -2.8909311294555664
    4. 'continue' → logprob: -4.640931129455566
    5. 'if' → logprob: -6.515931129455566
    6. ' if' → logprob: -6.640931129455566
    7. ' pass' → logprob: -6.890931129455566
    8. ',' → logprob: -8.015931129455566
    9. '           ' → logprob: -8.265931129455566
    10. '                   ' → logprob: -8.640931129455566

Token 1534: ' possible' (ID: 4149)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5933676362037659
    2. 'pass' → logprob: -0.9683676362037659
    3. 'else' → logprob: -3.968367576599121
    4. 'elif' → logprob: -4.718367576599121
    5. 'next' → logprob: -4.843367576599121
    6. 'continu' → logprob: -4.968367576599121
    7. '#' → logprob: -5.343367576599121
    8. 'action' → logprob: -5.593367576599121
    9. ' continue' → logprob: -5.593367576599121
    10. ' pass' → logprob: -5.718367576599121

Token 1535: ' with' (ID: 483)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1169626712799072
    2. 'states' → logprob: -1.4919626712799072
    3. '<|end|>' → logprob: -2.2419626712799072
    4. 'else' → logprob: -2.4919626712799072
    5. ' states' → logprob: -3.1169626712799072
    6. 'state' → logprob: -3.1169626712799072
    7. 'next' → logprob: -3.6169626712799072
    8. 'token' → logprob: -3.8669626712799072
    9. 'elif' → logprob: -3.9919626712799072
    10. 'continu' → logprob: -3.9919626712799072

Token 1536: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5595737099647522
    2. 'this' → logprob: -1.4345736503601074
    3. 'next' → logprob: -2.3095736503601074
    4. 'that' → logprob: -3.1845736503601074
    5. ' this' → logprob: -4.309573650360107
    6. 'the' → logprob: -4.684573650360107
    7. 'turn' → logprob: -4.934573650360107
    8. 'out' → logprob: -5.309573650360107
    9. ' that' → logprob: -5.809573650360107
    10. ' continue' → logprob: -6.059573650360107

Token 1537: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.11074984818696976
    2. ' turn' → logprob: -2.4857499599456787
    3. 'next' → logprob: -4.7357497215271
    4. '_turn' → logprob: -5.6107497215271
    5. 'change' → logprob: -5.6107497215271
    6. ' next' → logprob: -6.4857497215271
    7. 'continue' → logprob: -6.7357497215271
    8. 'changes' → logprob: -7.7357497215271
    9. '
' → logprob: -7.9857497215271
    10. 'move' → logprob: -8.360750198364258

Token 1538: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011076712980866432
    2. '               ' → logprob: -5.386076927185059
    3. 'else' → logprob: -5.511076927185059
    4. ' else' → logprob: -6.136076927185059
    5. '
' → logprob: -9.261076927185059
    6. '       ' → logprob: -9.386076927185059
    7. '                   ' → logprob: -11.136076927185059
    8. 'elif' → logprob: -11.386076927185059
    9. '            
' → logprob: -12.136076927185059
    10. ',' → logprob: -12.386076927185059

Token 1539: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03215769678354263
    2. '               ' → logprob: -3.5321576595306396
    3. 'else' → logprob: -6.282157897949219
    4. ' else' → logprob: -8.407157897949219
    5. '       ' → logprob: -9.157157897949219
    6. '```' → logprob: -9.407157897949219
    7. 'continue' → logprob: -9.782157897949219
    8. '                   ' → logprob: -9.907157897949219
    9. ' continue' → logprob: -12.407157897949219
    10. '
' → logprob: -12.407157897949219

Token 1540: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1615973711013794
    2. 'else' → logprob: -2.28659725189209
    3. '               ' → logprob: -3.66159725189209
    4. 'continue' (adapté à ' continue') → logprob: -4.41159725189209
    5. ' else' → logprob: -4.78659725189209
    6. ' continue' → logprob: -7.28659725189209
    7. '
' → logprob: -7.66159725189209
    8. '       ' → logprob: -9.03659725189209
    9. 'elif' → logprob: -9.41159725189209
    10. '                   ' → logprob: -10.16159725189209

Token 1541: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024944450706243515
    2. '
' → logprob: -7.2524943351745605
    3. 'if' → logprob: -7.6274943351745605
    4. '       ' → logprob: -7.6274943351745605
    5. '#' → logprob: -8.127494812011719
    6. '            
' → logprob: -8.502494812011719
    7. '```' → logprob: -9.002494812011719
    8. 'for' → logprob: -9.252494812011719
    9. '        
' → logprob: -10.127494812011719
    10. '   ' → logprob: -11.502494812011719

Token 1542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08018627762794495
    2. '```' → logprob: -2.955186367034912
    3. '       ' → logprob: -3.955186367034912
    4. 'if' → logprob: -5.705186367034912
    5. 'for' → logprob: -6.580186367034912
    6. '   ' → logprob: -7.830186367034912
    7. '
' → logprob: -8.080185890197754
    8. 'else' → logprob: -9.580185890197754
    9. '<|end|>' → logprob: -9.580185890197754
    10. 'next' → logprob: -9.955185890197754

Token 1543: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018364032730460167
    2. '#' (adapté à ' #') → logprob: -4.143363952636719
    3. '
' → logprob: -6.518363952636719
    4. '       ' → logprob: -8.268363952636719
    5. '            
' → logprob: -8.268363952636719
    6. 'pos' → logprob: -9.018363952636719
    7. 'if' → logprob: -9.768363952636719
    8. 'new' → logprob: -10.518363952636719
    9. 'for' → logprob: -10.768363952636719
    10. ' #' → logprob: -10.768363952636719

Token 1544: ' Else' (ID: 42978)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0062262024730443954
    2. 'if' → logprob: -6.256226062774658
    3. 'else' → logprob: -6.881226062774658
    4. '       ' → logprob: -7.006226062774658
    5. '   ' → logprob: -7.131226062774658
    6. 'remaining' → logprob: -7.256226062774658
    7. '           ' → logprob: -8.631226539611816
    8. 'end' → logprob: -9.006226539611816
    9. 'edge' → logprob: -9.131226539611816
    10. 'pos' → logprob: -9.756226539611816

Token 1545: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01314493641257286
    2. '#' → logprob: -4.3881449699401855
    3. ':' → logprob: -8.513144493103027
    4. '
' → logprob: -9.138144493103027
    5. ',' → logprob: -9.263144493103027
    6. ' #' → logprob: -9.513144493103027
    7. 'if' → logprob: -9.638144493103027
    8. '       ' → logprob: -10.888144493103027
    9. ':
' → logprob: -11.013144493103027
    10. '   ' → logprob: -11.263144493103027

Token 1546: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6350255012512207
    2. '#' → logprob: -0.7600255012512207
    3. ' #' → logprob: -6.260025501251221
    4. '
' → logprob: -8.635025024414062
    5. '   ' → logprob: -8.760025024414062
    6. '       ' → logprob: -9.885025024414062
    7. 'pos' → logprob: -9.885025024414062
    8. '               ' → logprob: -10.760025024414062
    9. 'if' → logprob: -11.135025024414062
    10. ' ' → logprob: -12.510025024414062

Token 1547: ' hit' (ID: 7103)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4491192698478699
    2. '           ' → logprob: -1.3241193294525146
    3. ' can' → logprob: -3.1991193294525146
    4. ' #' → logprob: -3.6991193294525146
    5. ' might' → logprob: -4.5741190910339355
    6. ' may' → logprob: -5.5741190910339355
    7. '       ' → logprob: -6.0741190910339355
    8. ' try' → logprob: -6.1991190910339355
    9. '   ' → logprob: -6.5741190910339355
    10. ' must' → logprob: -6.6991190910339355

Token 1548: ' end' (ID: 1268)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5170732736587524
    2. 'an' → logprob: -1.3920732736587524
    3. '0' → logprob: -2.892073154449463
    4. '(' → logprob: -3.392073154449463
    5. 'street' → logprob: -3.642073154449463
    6. 'a' → logprob: -4.142073154449463
    7. '(st' → logprob: -4.267073154449463
    8. 'end' → logprob: -5.142073154449463
    9. '(s' → logprob: -6.642073154449463
    10. ' an' → logprob: -7.392073154449463

Token 1549: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5977699160575867
    2. 'if' → logprob: -0.9727699160575867
    3. 'point' → logprob: -3.0977699756622314
    4. 'of' → logprob: -4.972769737243652
    5. ' if' → logprob: -5.347769737243652
    6. ' of' → logprob: -6.097769737243652
    7. '   ' → logprob: -6.222769737243652
    8. '       ' → logprob: -6.222769737243652
    9. '_flag' → logprob: -6.347769737243652
    10. 'flag' → logprob: -6.472769737243652

Token 1550: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0789436548948288
    2. 'the' → logprob: -2.7039437294006348
    3. 'current' → logprob: -5.328943729400635
    4. 'line' → logprob: -6.703943729400635
    5. '```' → logprob: -7.203943729400635
    6. 's' → logprob: -7.328943729400635
    7. 'a' → logprob: -8.203943252563477
    8. ' street' → logprob: -8.328943252563477
    9. 'stre' → logprob: -8.578943252563477
    10. '(st' → logprob: -8.828943252563477

Token 1551: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006631145952269435
    2. ',' → logprob: -7.6256632804870605
    3. ' at' → logprob: -10.625662803649902
    4. ' for' → logprob: -10.625662803649902
    5. '               ' → logprob: -10.625662803649902
    6. 'for' → logprob: -10.750662803649902
    7. '
' → logprob: -10.875662803649902
    8. '            
' → logprob: -11.125662803649902
    9. '       ' → logprob: -11.375662803649902
    10. ' and' → logprob: -11.875662803649902

Token 1552: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3466346859931946
    2. '           ' → logprob: -2.09663462638855
    3. 'end' → logprob: -2.59663462638855
    4. 'if' → logprob: -3.59663462638855
    5. ' #' → logprob: -3.97163462638855
    6. 'for' → logprob: -4.346634864807129
    7. 'pos' → logprob: -4.971634864807129
    8. 'endpoint' → logprob: -5.221634864807129
    9. ' if' → logprob: -5.596634864807129
    10. '       ' → logprob: -5.846634864807129

Token 1553: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7750656604766846
    2. '               ' → logprob: -1.2750656604766846
    3. ':' → logprob: -2.1500656604766846
    4. ':
' → logprob: -2.7750656604766846
    5. '           ' → logprob: -3.4000656604766846
    6. 'ing' → logprob: -4.1500654220581055
    7. 'turn' → logprob: -4.9000654220581055
    8. 'moving' → logprob: -5.2750654220581055
    9. ' to' → logprob: -5.4000654220581055
    10. 'both' → logprob: -5.7750654220581055

Token 1554: ' turn' (ID: 3716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25337734818458557
    2. ' for' → logprob: -1.8783773183822632
    3. ' move' → logprob: -3.5033774375915527
    4. '#' → logprob: -4.503377437591553
    5. 'extend' → logprob: -5.253377437591553
    6. 'continue' → logprob: -5.378377437591553
    7. 'move' → logprob: -5.753377437591553
    8. 'change' → logprob: -6.003377437591553
    9. 'turn' → logprob: -6.253377437591553
    10. ' continue' → logprob: -6.378377437591553

Token 1555: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004438662901520729
    2. '
' → logprob: -6.629438877105713
    3. 'for' → logprob: -6.879438877105713
    4. '       ' → logprob: -7.254438877105713
    5. '               ' → logprob: -8.129438400268555
    6. '(' → logprob: -8.629438400268555
    7. '(s' → logprob: -9.379438400268555
    8. '(end' → logprob: -9.504438400268555
    9. '```' → logprob: -9.629438400268555
    10. ' (' → logprob: -9.754438400268555

Token 1556: ' endpoint' (ID: 29703)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.025109391659498215
    2. '(st' → logprob: -3.77510929107666
    3. '(pos' → logprob: -7.27510929107666
    4. '(' → logprob: -8.65010929107666
    5. 'the' → logprob: -8.65010929107666
    6. 'pos' → logprob: -8.77510929107666
    7. 'connections' → logprob: -9.15010929107666
    8. 'new' → logprob: -9.40010929107666
    9. '(side' → logprob: -9.40010929107666
    10. 'position' → logprob: -9.77510929107666

Token 1557: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011626037303358316
    2. 'end' → logprob: -8.0011625289917
    3. '
' → logprob: -8.1261625289917
    4. 'for' → logprob: -9.3761625289917
    5. '```' → logprob: -9.6261625289917
    6. '       ' → logprob: -9.7511625289917
    7. '            
' → logprob: -9.7511625289917
    8. 'endpoint' → logprob: -9.8761625289917
    9. '               ' → logprob: -10.6261625289917
    10. ',' → logprob: -10.7511625289917

Token 1558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08182518184185028
    2. '```' → logprob: -3.4568252563476562
    3. 'for' → logprob: -4.331825256347656
    4. '       ' → logprob: -4.581825256347656
    5. '               ' → logprob: -4.706825256347656
    6. ' for' → logprob: -4.956825256347656
    7. 'end' → logprob: -5.956825256347656
    8. '                   ' → logprob: -6.206825256347656
    9. '``' → logprob: -7.581825256347656
    10. ' at' → logprob: -7.581825256347656

Token 1559: ' #' (ID: 1069)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.1155585050582886
    2. 'for' → logprob: -1.1155585050582886
    3. '#' (adapté à ' #') → logprob: -2.115558624267578
    4. 'if' → logprob: -2.490558624267578
    5. 'endpoint' → logprob: -2.615558624267578
    6. '       ' → logprob: -3.240558624267578
    7. '           ' → logprob: -4.490558624267578
    8. '   ' → logprob: -4.740558624267578
    9. 'ends' → logprob: -5.615558624267578
    10. 'flag' → logprob: -6.240558624267578

Token 1560: ' Need' (ID: 19792)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0361613035202026
    2. 'end' → logprob: -1.0361613035202026
    3. 'for' → logprob: -1.9111613035202026
    4. 'if' → logprob: -2.536161422729492
    5. 'endpoint' → logprob: -3.161161422729492
    6. '#' → logprob: -4.536161422729492
    7. '       ' → logprob: -6.036161422729492
    8. 'flag' → logprob: -6.411161422729492
    9. 'point' → logprob: -6.536161422729492
    10. '   ' → logprob: -6.911161422729492

Token 1561: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11359097808599472
    2. ' to' → logprob: -2.238590955734253
    3. '           ' → logprob: -7.488591194152832
    4. 'for' → logprob: -9.488591194152832
    5. '=' → logprob: -10.613591194152832
    6. '(' → logprob: -11.238591194152832
    7. '_to' → logprob: -11.488591194152832
    8. ' (' → logprob: -11.738591194152832
    9. 'at' → logprob: -11.863591194152832
    10. '(s' → logprob: -11.988591194152832

Token 1562: ' go' (ID: 810)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.9343305230140686
    2. 'for' → logprob: -1.6843304634094238
    3. '#' → logprob: -1.8093304634094238
    4. 'pos' → logprob: -2.934330463409424
    5. 'continue' → logprob: -3.059330463409424
    6. 'if' → logprob: -3.184330463409424
    7. 'flag' → logprob: -3.559330463409424
    8. 'find' → logprob: -4.309330463409424
    9. 'point' → logprob: -4.684330463409424
    10. 'check' → logprob: -4.809330463409424

Token 1563: ' dist' (ID: 3601)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -1.1430286169052124
    2. 'to' → logprob: -1.7680286169052124
    3. 'forward' → logprob: -1.7680286169052124
    4. '(' → logprob: -2.393028736114502
    5. '(s' → logprob: -2.518028736114502
    6. 'b' → logprob: -3.018028736114502
    7. 'on' → logprob: -4.143028736114502
    8. 'over' → logprob: -4.393028736114502
    9. ' through' → logprob: -4.518028736114502
    10. ' forward' → logprob: -4.768028736114502

Token 1564: ' steps' (ID: 10331)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1946107149124146
    2. 'remaining' → logprob: -1.5696107149124146
    3. '_remaining' → logprob: -2.569610595703125
    4. 'to' → logprob: -2.694610595703125
    5. '<|end|>' → logprob: -2.694610595703125
    6. ' =' → logprob: -3.069610595703125
    7. 'at' → logprob: -3.569610595703125
    8. ',' → logprob: -3.569610595703125
    9. 'b' → logprob: -3.819610595703125
    10. '<|end|>' → logprob: -3.819610595703125

Token 1565: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7145496606826782
    2. ' at' → logprob: -1.3395496606826782
    3. '=' → logprob: -2.7145495414733887
    4. ',' → logprob: -3.5895495414733887
    5. ' =' → logprob: -3.8395495414733887
    6. '       ' → logprob: -4.339549541473389
    7. '   ' → logprob: -4.339549541473389
    8. '```' → logprob: -4.339549541473389
    9. '_remaining' → logprob: -4.464549541473389
    10. '...' → logprob: -4.839549541473389

Token 1566: ' moving' (ID: 10067)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3824841976165771
    2. 'remaining' → logprob: -1.3824841976165771
    3. 'pos' → logprob: -1.5074841976165771
    4. 'if' → logprob: -2.507484197616577
    5. 'remain' → logprob: -3.132484197616577
    6. '#' → logprob: -3.632484197616577
    7. 'while' → logprob: -3.757484197616577
    8. 'endpoint' → logprob: -4.007484436035156
    9. 'end' → logprob: -4.132484436035156
    10. ' at' → logprob: -4.757484436035156

Token 1567: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.36144834756851196
    2. 'from' → logprob: -2.736448287963867
    3. 'forward' → logprob: -2.986448287963867
    4. 'along' → logprob: -2.986448287963867
    5. 'through' → logprob: -3.486448287963867
    6. 'tow' → logprob: -3.486448287963867
    7. 'b' → logprob: -3.986448287963867
    8. 'into' → logprob: -4.486448287963867
    9. 'dist' → logprob: -4.861448287963867
    10. 'onto' → logprob: -4.861448287963867

Token 1568: ' adjacent' (ID: 39069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9815562963485718
    2. 'connected' → logprob: -1.6065562963485718
    3. 'another' → logprob: -2.1065564155578613
    4. 'the' → logprob: -2.2315564155578613
    5. 'other' → logprob: -2.3565564155578613
    6. 'adj' → logprob: -3.8565564155578613
    7. 'neighbor' → logprob: -3.9815564155578613
    8. 'connections' → logprob: -4.231556415557861
    9. '0' → logprob: -4.356556415557861
    10. '1' → logprob: -5.481556415557861

Token 1569: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.7725617289543152
    2. 'stre' → logprob: -1.02256178855896
    3. '_st' → logprob: -2.27256178855896
    4. '(st' → logprob: -3.27256178855896
    5. '(' → logprob: -5.022561550140381
    6. '```' → logprob: -5.022561550140381
    7. '(s' → logprob: -5.147561550140381
    8. 'st' → logprob: -5.147561550140381
    9. ')' → logprob: -6.272561550140381
    10. 'token' → logprob: -6.522561550140381

Token 1570: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.482397198677063
    2. 'for' → logprob: -1.607397198677063
    3. ' for' → logprob: -2.7323970794677734
    4. '       ' → logprob: -3.3573970794677734
    5. '               ' → logprob: -4.107397079467773
    6. '#' → logprob: -4.982397079467773
    7. '
' → logprob: -5.107397079467773
    8. '   ' → logprob: -5.357397079467773
    9. '                   ' → logprob: -5.357397079467773
    10. ')' → logprob: -5.482397079467773

Token 1571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16294406354427338
    2. '```' → logprob: -2.7879440784454346
    3. ' for' → logprob: -3.9129440784454346
    4. '               ' → logprob: -3.9129440784454346
    5. 'for' → logprob: -4.2879438400268555
    6. ' at' → logprob: -4.5379438400268555
    7. '       ' → logprob: -4.6629438400268555
    8. '                   ' → logprob: -4.9129438400268555
    9. '``' → logprob: -5.6629438400268555
    10. '`' → logprob: -7.6629438400268555

Token 1572: ' #' (ID: 1069)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.1806145906448364
    2. '           ' → logprob: -1.3056145906448364
    3. 'if' → logprob: -1.9306145906448364
    4. 'for' → logprob: -2.180614471435547
    5. 'endpoint' → logprob: -2.555614471435547
    6. '       ' → logprob: -3.555614471435547
    7. '#' (adapté à ' #') → logprob: -3.930614471435547
    8. ' if' → logprob: -4.930614471435547
    9. 'point' → logprob: -5.430614471435547
    10. '   ' → logprob: -5.555614471435547

Token 1573: ' How' (ID: 3253)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0979281663894653
    2. 'end' → logprob: -1.0979281663894653
    3. 'endpoint' → logprob: -2.097928047180176
    4. 'if' → logprob: -2.222928047180176
    5. 'for' → logprob: -3.472928047180176
    6. '       ' → logprob: -3.597928047180176
    7. '#' → logprob: -4.222928047180176
    8. 'point' → logprob: -5.222928047180176
    9. '   ' → logprob: -5.222928047180176
    10. '```' → logprob: -6.097928047180176

Token 1574: ' many' (ID: 1991)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1013316810131073
    2. '=' → logprob: -3.9763317108154297
    3. ' to' → logprob: -4.22633171081543
    4. 'to' → logprob: -4.35133171081543
    5. '```' → logprob: -4.60133171081543
    6. '       ' → logprob: -4.85133171081543
    7. '               ' → logprob: -5.22633171081543
    8. '#' → logprob: -5.47633171081543
    9. 's' → logprob: -5.72633171081543
    10. '   ' → logprob: -6.22633171081543

Token 1575: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.4636377692222595
    2. 'dist' → logprob: -2.2136378288269043
    3. '_steps' → logprob: -2.7136378288269043
    4. 'left' → logprob: -3.0886378288269043
    5. 'remaining' → logprob: -3.0886378288269043
    6. '_remaining' → logprob: -3.5886378288269043
    7. '_left' → logprob: -3.9636378288269043
    8. 'remain' → logprob: -3.9636378288269043
    9. ' steps' → logprob: -5.088637828826904
    10. 'moves' → logprob: -5.338637828826904

Token 1576: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.024623155593872
    2. 'left' → logprob: -1.149623155593872
    3. ' =' → logprob: -2.149623155593872
    4. 'needed' → logprob: -2.899623155593872
    5. 'remaining' → logprob: -3.649623155593872
    6. '_left' → logprob: -3.649623155593872
    7. '_remaining' → logprob: -3.649623155593872
    8. '           ' → logprob: -3.774623155593872
    9. '_needed' → logprob: -4.524622917175293
    10. 'to' → logprob: -4.524622917175293

Token 1577: ' reach' (ID: 7627)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.6197567582130432
    2. 'end' → logprob: -1.6197566986083984
    3. 'move' → logprob: -1.6197566986083984
    4. 'the' → logprob: -4.244756698608398
    5. 'edge' → logprob: -4.619756698608398
    6. 'complete' → logprob: -4.744756698608398
    7. 'finish' → logprob: -4.869756698608398
    8. 'endpoint' → logprob: -4.869756698608398
    9. ' go' → logprob: -5.119756698608398
    10. ' move' → logprob: -5.619756698608398

Token 1578: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14012780785560608
    2. '0' → logprob: -2.3901278972625732
    3. 'move' → logprob: -4.265127658843994
    4. '1' → logprob: -4.765127658843994
    5. 'the' → logprob: -5.265127658843994
    6. 'endpoint' → logprob: -5.640127658843994
    7. '(' → logprob: -5.890127658843994
    8. 'length' → logprob: -6.390127658843994
    9. 'edge' → logprob: -7.265127658843994
    10. ' end' → logprob: -8.015128135681152

Token 1579: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4942227303981781
    2. ' =' → logprob: -1.1192227602005005
    3. '           ' → logprob: -4.244222640991211
    4. ':' → logprob: -4.369222640991211
    5. '?' → logprob: -5.369222640991211
    6. '   ' → logprob: -5.619222640991211
    7. '```' → logprob: -5.994222640991211
    8. 's' → logprob: -6.244222640991211
    9. ' (' → logprob: -6.244222640991211
    10. ')' → logprob: -6.244222640991211

Token 1580: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.09811373800039291
    2. 'current' → logprob: -2.473113775253296
    3. 'the' → logprob: -5.848113536834717
    4. 'stre' → logprob: -6.098113536834717
    5. 'line' → logprob: -6.473113536834717
    6. '```' → logprob: -6.848113536834717
    7. 's' → logprob: -7.098113536834717
    8. ' street' → logprob: -9.348114013671875
    9. '           ' → logprob: -9.848114013671875
    10. '   ' → logprob: -10.098114013671875

Token 1581: ' along' (ID: 4251)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9744918942451477
    2. '=' → logprob: -1.474491834640503
    3. '           ' → logprob: -1.849491834640503
    4. '?' → logprob: -3.724491834640503
    5. 'pos' → logprob: -3.724491834640503
    6. ':' → logprob: -3.849491834640503
    7. 'new' → logprob: -3.849491834640503
    8. '```' → logprob: -4.099492073059082
    9. 'tokens' → logprob: -4.474492073059082
    10. 'next' → logprob: -4.974492073059082

Token 1582: ' current' (ID: 2208)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.2054702043533325
    2. 's' → logprob: -1.4554702043533325
    3. 'the' → logprob: -2.205470085144043
    4. 'direction' → logprob: -2.580470085144043
    5. 'street' → logprob: -2.830470085144043
    6. 'current' → logprob: -2.830470085144043
    7. 'sid' → logprob: -2.955470085144043
    8. 'side' → logprob: -2.955470085144043
    9. 'line' → logprob: -4.080470085144043
    10. '```' → logprob: -5.330470085144043

Token 1583: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.7270995378494263
    2. 'pos' → logprob: -1.9770995378494263
    3. 'street' → logprob: -1.9770995378494263
    4. '```' → logprob: -2.2270994186401367
    5. '_pos' → logprob: -3.3520994186401367
    6. '_direction' → logprob: -3.8520994186401367
    7. 'line' → logprob: -4.602099418640137
    8. ' direction' → logprob: -4.852099418640137
    9. '(' → logprob: -5.102099418640137
    10. 'position' → logprob: -5.227099418640137

Token 1584: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1174844279885292
    2. '```' → logprob: -4.7424845695495605
    3. '       ' → logprob: -4.8674845695495605
    4. ')' → logprob: -4.8674845695495605
    5. ',' → logprob: -4.8674845695495605
    6. '=' → logprob: -4.9924845695495605
    7. '            ' → logprob: -5.1174845695495605
    8. '-' → logprob: -5.2424845695495605
    9. '`' → logprob: -5.3674845695495605
    10. ' steps' → logprob: -5.4924845695495605

Token 1585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3001213073730469
    2. '```' → logprob: -2.175121307373047
    3. '       ' → logprob: -3.800121307373047
    4. '               ' → logprob: -3.925121307373047
    5. ' new' → logprob: -4.050121307373047
    6. ' if' → logprob: -5.050121307373047
    7. '``' → logprob: -5.050121307373047
    8. ' tokens' → logprob: -5.175121307373047
    9. 'new' → logprob: -5.300121307373047
    10. 'tokens' → logprob: -5.300121307373047

Token 1586: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8264197707176208
    2. '           ' → logprob: -1.8264198303222656
    3. ' new' → logprob: -2.2014198303222656
    4. '```' → logprob: -2.5764198303222656
    5. '            ' → logprob: -2.9514198303222656
    6. 'if' (adapté à ' if') → logprob: -3.5764198303222656
    7. ' for' → logprob: -3.7014198303222656
    8. 'new' → logprob: -4.201419830322266
    9. 'for' → logprob: -4.826419830322266
    10. '               ' → logprob: -5.076419830322266

Token 1587: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.25024473667144775
    2. 'dx' → logprob: -1.7502447366714478
    3. ' forward' → logprob: -3.500244617462158
    4. 'dy' → logprob: -5.125244617462158
    5. ' dx' → logprob: -5.250244617462158
    6. 'length' → logprob: -6.375244617462158
    7. '(dx' → logprob: -6.500244617462158
    8. 'pos' → logprob: -6.875244617462158
    9. 'new' → logprob: -7.875244617462158
    10. 'abs' → logprob: -8.000245094299316

Token 1588: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3382278084754944
    2. ':
' → logprob: -1.7132277488708496
    3. '==' → logprob: -2.5882277488708496
    4. '=' → logprob: -4.33822774887085
    5. '<|end|>' → logprob: -4.96322774887085
    6. ' ==' → logprob: -5.83822774887085
    7. '<|end|>' → logprob: -6.33822774887085
    8. '=True' → logprob: -6.46322774887085
    9. '):
' → logprob: -6.58822774887085
    10. '       ' → logprob: -6.96322774887085

Token 1589: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8983487486839294
    2. 'length' → logprob: -0.8983487486839294
    3. 'remaining' → logprob: -2.523348808288574
    4. '           ' → logprob: -3.523348808288574
    5. 'steps' → logprob: -3.648348808288574
    6. ' length' → logprob: -4.398348808288574
    7. 'distance' → logprob: -4.398348808288574
    8. 'dist' → logprob: -5.773348808288574
    9. '   ' → logprob: -5.773348808288574
    10. 'new' → logprob: -5.898348808288574

Token 1590: ' dist' (ID: 3601)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.15117935836315155
    2. 'steps' → logprob: -2.401179313659668
    3. 'remaining' → logprob: -3.276179313659668
    4. 'distance' → logprob: -5.026179313659668
    5. 'remain' → logprob: -5.901179313659668
    6. 'dist' (adapté à ' dist') → logprob: -7.151179313659668
    7. 'needed' → logprob: -7.901179313659668
    8. 'rem' → logprob: -8.401179313659668
    9. 'step' → logprob: -8.526179313659668
    10. 'left' → logprob: -8.776179313659668

Token 1591: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035412076860666275
    2. ' =' → logprob: -3.410412073135376
    3. ' -=' → logprob: -7.535412311553955
    4. '_remaining' → logprob: -7.785412311553955
    5. '-=' → logprob: -8.035411834716797
    6. ' -' → logprob: -8.410411834716797
    7. '-' → logprob: -9.035411834716797
    8. 'remaining' → logprob: -10.285411834716797
    9. '<|end|>' → logprob: -11.410411834716797
    10. '_to' → logprob: -11.535411834716797

Token 1592: '_end' (ID: 13707)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2594022750854492
    2. 'end' → logprob: -1.5094022750854492
    3. ' length' → logprob: -5.634402275085449
    4. 'go' → logprob: -7.009402275085449
    5. 's' → logprob: -7.259402275085449
    6. 'move' → logprob: -7.384402275085449
    7. ' end' → logprob: -7.634402275085449
    8. 'the' → logprob: -8.25940227508545
    9. '_end' → logprob: -9.13440227508545
    10. '0' → logprob: -9.38440227508545

Token 1593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132701516151428
    2. ' =' → logprob: -1.313270092010498
    3. '=s' → logprob: -12.813270568847656
    4. '=end' → logprob: -13.313270568847656
    5. '=len' → logprob: -14.313270568847656
    6. '=line' → logprob: -14.438270568847656
    7. '=
' → logprob: -14.563270568847656
    8. '=int' → logprob: -15.063270568847656
    9. '=min' → logprob: -15.313270568847656
    10. ')' → logprob: -15.313270568847656

Token 1594: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.002096253214403987
    2. 's' → logprob: -6.377096176147461
    3. 'street' → logprob: -7.877096176147461
    4. '(length' → logprob: -12.127096176147461
    5. ' length' → logprob: -12.502096176147461
    6. 'stre' → logprob: -12.877096176147461
    7. '   ' → logprob: -14.252096176147461
    8. '(s' → logprob: -14.752096176147461
    9. ' s' → logprob: -14.752096176147461
    10. '[length' → logprob: -15.127096176147461

Token 1595: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132627606391907
    2. '-' → logprob: -1.313262701034546
    3. '-pos' → logprob: -15.063262939453125
    4. '-position' → logprob: -15.938262939453125
    5. '-end' → logprob: -16.188262939453125
    6. '   ' → logprob: -16.563262939453125
    7. '-token' → logprob: -17.063262939453125
    8. '−' → logprob: -17.188262939453125
    9. '-in' → logprob: -17.438262939453125
    10. '-t' → logprob: -17.438262939453125

Token 1596: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.306760805164231e-05
    2. ' pos' → logprob: -11.25001335144043
    3. 'position' → logprob: -18.75001335144043
    4. '(pos' → logprob: -19.50001335144043
    5. '   ' → logprob: -20.37501335144043
    6. 'Pos' → logprob: -20.75001335144043
    7. '	pos' → logprob: -20.75001335144043
    8. '_pos' → logprob: -20.87501335144043
    9. '1' → logprob: -21.25001335144043
    10. 'prev' → logprob: -22.00001335144043

Token 1597: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2183661311864853
    2. ' else' → logprob: -2.4683661460876465
    3. '               ' → logprob: -2.8433661460876465
    4. '<|end|>' → logprob: -3.8433661460876465
    5. '<|end|>' → logprob: -4.4683661460876465
    6. 'else' → logprob: -4.7183661460876465
    7. '
' → logprob: -5.0933661460876465
    8. '       ' → logprob: -6.7183661460876465
    9. '+' → logprob: -7.2183661460876465
    10. '            
' → logprob: -7.2183661460876465

Token 1598: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02819003537297249
    2. 'else' → logprob: -3.7781901359558105
    3. ' else' → logprob: -6.0281901359558105
    4. '               ' → logprob: -6.2781901359558105
    5. '```' → logprob: -7.4031901359558105
    6. 'elif' → logprob: -10.903189659118652
    7. ',' → logprob: -12.153189659118652
    8. ' if' → logprob: -13.028189659118652
    9. ' elif' → logprob: -13.528189659118652
    10. 'if' → logprob: -13.653189659118652

Token 1599: ' endpoint' (ID: 29703)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.796819269657135
    2. 'remaining' → logprob: -1.1718192100524902
    3. '           ' → logprob: -1.9218192100524902
    4. 'remain' → logprob: -3.5468192100524902
    5. '               ' → logprob: -4.17181921005249
    6. 'steps' → logprob: -4.29681921005249
    7. 'dist' → logprob: -4.42181921005249
    8. ' else' → logprob: -4.79681921005249
    9. 'if' → logprob: -5.67181921005249
    10. 'rest' → logprob: -5.92181921005249

Token 1600: '_flag' (ID: 25269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2264190912246704
    2. ' =' → logprob: -1.6014190912246704
    3. '_flag' → logprob: -7.726418972015381
    4. '_idx' → logprob: -8.601419448852539
    5. '_endpoint' → logprob: -9.351419448852539
    6. '=end' → logprob: -9.476419448852539
    7. '_index' → logprob: -9.726419448852539
    8. '_end' → logprob: -9.726419448852539
    9. '_pos' → logprob: -10.851419448852539
    10. '_point' → logprob: -11.101419448852539

Token 1601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759502649307251
    2. '=' → logprob: -0.8259502649307251
    3. '[' → logprob: -12.200950622558594
    4. '0' → logprob: -13.450950622558594
    5. ':' → logprob: -13.950950622558594
    6. ' ' → logprob: -14.075950622558594
    7. '1' → logprob: -14.200950622558594
    8. ')' → logprob: -14.700950622558594
    9. '	' → logprob: -14.825950622558594
    10. ' if' → logprob: -15.575950622558594

Token 1602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.250004768371582
    5. '0' → logprob: -15.500004768371582
    6. '           ' → logprob: -16.7500057220459
    7. '       ' → logprob: -17.3750057220459
    8. '               ' → logprob: -17.8750057220459
    9. '                   ' → logprob: -18.1250057220459
    10. ' (' → logprob: -18.1250057220459

Token 1603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.75
    3. ' ' → logprob: -17.875
    4. '0' → logprob: -19.375
    5. '           ' → logprob: -20.125
    6. '       ' → logprob: -20.625
    7. '(' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. '`' → logprob: -21.0
    10. '               ' → logprob: -21.125

Token 1604: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1605: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5796239972114563
    2. '           ' → logprob: -1.7046239376068115
    3. '
' → logprob: -2.3296239376068115
    4. ' else' → logprob: -2.5796239376068115
    5. '<|end|>' → logprob: -2.8296239376068115
    6. '       ' → logprob: -4.454624176025391
    7. '<|end|>' → logprob: -5.954624176025391
    8. '               ' → logprob: -6.079624176025391
    9. '#else' → logprob: -6.204624176025391
    10. ' if' → logprob: -6.329624176025391

Token 1606: ' end' (ID: 1268)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.65982586145401
    2. '0' → logprob: -1.6598258018493652
    3. 'else' → logprob: -2.2848258018493652
    4. '<|end|>' → logprob: -2.6598258018493652
    5. '               ' → logprob: -3.1598258018493652
    6. 'if' → logprob: -4.159825801849365
    7. ')' → logprob: -4.284825801849365
    8. '<|end|>' → logprob: -4.534825801849365
    9. 'elif' → logprob: -5.034825801849365
    10. '```' → logprob: -5.034825801849365

Token 1607: ' point' (ID: 2438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1576082706451416
    2. '<|end|>' → logprob: -1.1576082706451416
    3. '           ' → logprob: -1.6576082706451416
    4. '
' → logprob: -2.4076082706451416
    5. '```' → logprob: -2.9076082706451416
    6. '       ' → logprob: -4.6576080322265625
    7. '<|end|>' → logprob: -5.0326080322265625
    8. ')
' → logprob: -5.1576080322265625
    9. 'token' → logprob: -5.2826080322265625
    10. '               ' → logprob: -6.5326080322265625

Token 1608: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11733803898096085
    2. '<|end|>' → logprob: -2.992337942123413
    3. '```' → logprob: -3.617337942123413
    4. '               ' → logprob: -4.367338180541992
    5. '       ' → logprob: -4.867338180541992
    6. ')' → logprob: -5.117338180541992
    7. '
' → logprob: -5.992338180541992
    8. '<|end|>' → logprob: -6.617338180541992
    9. 'else' → logprob: -6.867338180541992
    10. 'elif' → logprob: -7.867338180541992

Token 1609: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8121440410614014
    2. '```' → logprob: -1.3121440410614014
    3. ' else' → logprob: -1.9371440410614014
    4. 'else' → logprob: -2.0621440410614014
    5. '               ' → logprob: -4.3121442794799805
    6. '<|end|>' → logprob: -7.1871442794799805
    7. '       ' → logprob: -7.4371442794799805
    8. '
' → logprob: -8.31214427947998
    9. 'elif' → logprob: -8.43714427947998
    10. ' elif' → logprob: -9.43714427947998

Token 1610: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14487187564373016
    2. 'else' → logprob: -2.019871950149536
    3. ' else' → logprob: -7.144871711730957
    4. '               ' → logprob: -7.644871711730957
    5. '```' → logprob: -7.769871711730957
    6. 'elif' → logprob: -7.894871711730957
    7. 'remaining' → logprob: -10.019871711730957
    8. '       ' → logprob: -10.644871711730957
    9. 'next' → logprob: -11.394871711730957
    10. '#' → logprob: -11.769871711730957

Token 1611: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.034930311143398285
    2. 'pos' → logprob: -3.4099302291870117
    3. '_' → logprob: -7.409930229187012
    4. '```' → logprob: -8.659930229187012
    5. '_positions' → logprob: -8.909930229187012
    6. '_states' → logprob: -9.909930229187012
    7. '_dist' → logprob: -10.409930229187012
    8. ' _' → logprob: -10.659930229187012
    9. 'distance' → logprob: -11.034930229187012
    10. '_position' → logprob: -11.034930229187012

Token 1612: '_at' (ID: 8254)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141451060771942
    2. ' =' → logprob: -1.7014144659042358
    3. ',' → logprob: -14.326414108276367
    4. '=len' → logprob: -16.076414108276367
    5. '=end' → logprob: -16.326414108276367
    6. '=
' → logprob: -16.451414108276367
    7. ' ' → logprob: -16.951414108276367
    8. '=}' → logprob: -16.951414108276367
    9. ')' → logprob: -17.076414108276367
    10. '=int' → logprob: -17.576414108276367

Token 1613: '_end' (ID: 13707)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.9061194658279419
    2. 'sid' → logprob: -1.781119465827942
    3. 'end' → logprob: -1.906119465827942
    4. 'length' → logprob: -2.7811193466186523
    5. '(s' → logprob: -2.7811193466186523
    6. '1' → logprob: -2.9061193466186523
    7. 's' → logprob: -3.6561193466186523
    8. 'dist' → logprob: -3.7811193466186523
    9. '(endpoint' → logprob: -4.156119346618652
    10. '0' → logprob: -4.281119346618652

Token 1614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692968547344208
    2. ' =' → logprob: -2.126929759979248
    3. ',' → logprob: -14.00192928314209
    4. '=end' → logprob: -15.87692928314209
    5. '=
' → logprob: -16.001930236816406
    6. '	' → logprob: -16.126930236816406
    7. ')' → logprob: -16.251930236816406
    8. '=len' → logprob: -16.876930236816406
    9. ' ' → logprob: -16.876930236816406
    10. '=int' → logprob: -17.001930236816406

Token 1615: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0005059692775830626
    2. '0' → logprob: -8.000506401062012
    3. 'dist' → logprob: -9.500506401062012
    4. 'street' → logprob: -10.000506401062012
    5. 'pos' → logprob: -11.125506401062012
    6. ' length' → logprob: -12.375506401062012
    7. 'leng' → logprob: -12.625506401062012
    8. 'new' → logprob: -12.625506401062012
    9. 'stre' → logprob: -12.750506401062012
    10. 'distance' → logprob: -12.750506401062012

Token 1616: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06939984112977982
    2. 'else' → logprob: -3.569399833679199
    3. '<|end|>' → logprob: -4.069399833679199
    4. ' else' → logprob: -4.694399833679199
    5. '<|end|>' → logprob: -5.694399833679199
    6. '
' → logprob: -5.819399833679199
    7. '               ' → logprob: -6.194399833679199
    8. '+' → logprob: -6.444399833679199
    9. '       ' → logprob: -7.569399833679199
    10. 'elif' → logprob: -7.819399833679199

Token 1617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06346394121646881
    2. 'else' → logprob: -3.1884639263153076
    3. ' else' → logprob: -4.438464164733887
    4. '               ' → logprob: -5.313464164733887
    5. '```' → logprob: -5.688464164733887
    6. ',' → logprob: -10.438464164733887
    7. '
' → logprob: -10.438464164733887
    8. ')' → logprob: -11.438464164733887
    9. 'elif' → logprob: -11.563464164733887
    10. '	       ' → logprob: -11.813464164733887

Token 1618: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16258929669857025
    2. '           ' → logprob: -1.9125893115997314
    3. ' else' → logprob: -6.287589073181152
    4. '```' → logprob: -7.662589073181152
    5. '       ' → logprob: -11.037589073181152
    6. 'elif' → logprob: -11.537589073181152
    7. '               ' → logprob: -12.162589073181152
    8. '   ' → logprob: -13.787589073181152
    9. '``' → logprob: -15.662589073181152
    10. '	else' → logprob: -16.16259002685547

Token 1619: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8253378868103027
    2. ':' → logprob: -1.5753378868103027
    3. ':
' → logprob: -1.8253378868103027
    4. ' =' → logprob: -2.2003378868103027
    5. '```' → logprob: -2.9503378868103027
    6. '=' → logprob: -3.8253378868103027
    7. '{
' → logprob: -5.950337886810303
    8. '{' → logprob: -6.200337886810303
    9. '           ' → logprob: -6.450337886810303
    10. ',' → logprob: -7.575337886810303

Token 1620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034001000225543976
    2. '0' → logprob: -4.034000873565674
    3. '```' → logprob: -4.784000873565674
    4. 'endpoint' → logprob: -6.284000873565674
    5. ' ' → logprob: -6.659000873565674
    6. '`' → logprob: -6.909000873565674
    7. '           ' → logprob: -6.909000873565674
    8. '                ' → logprob: -7.284000873565674
    9. '``' → logprob: -7.784000873565674
    10. '            ' → logprob: -8.034001350402832

Token 1621: ' dist' (ID: 3601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032843282679095864
    2. 'endpoint' → logprob: -8.125328063964844
    3. '               ' → logprob: -11.750328063964844
    4. ' ' → logprob: -11.750328063964844
    5. '           ' → logprob: -12.125328063964844
    6. 'dist' (adapté à ' dist') → logprob: -12.125328063964844
    7. '   ' → logprob: -13.375328063964844
    8. 'new' → logprob: -13.375328063964844
    9. '1' → logprob: -14.625328063964844
    10. '                   ' → logprob: -14.750328063964844

Token 1622: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.04434903338551521
    2. '=' → logprob: -3.169348955154419
    3. 'to' → logprob: -6.794349193572998
    4. 'To' → logprob: -9.16934871673584
    5. ' =' → logprob: -9.41934871673584
    6. '               ' → logprob: -11.54434871673584
    7. ' to' → logprob: -11.91934871673584
    8. '```' → logprob: -12.16934871673584
    9. '0' → logprob: -12.29434871673584
    10. ' ' → logprob: -12.66934871673584

Token 1623: '_end' (ID: 13707)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.175179585814476
    2. 'pos' → logprob: -2.3001794815063477
    3. 'end' → logprob: -2.9251794815063477
    4. '_end' → logprob: -5.300179481506348
    5. ' ' → logprob: -7.800179481506348
    6. 'start' → logprob: -8.050179481506348
    7. '   ' → logprob: -8.925179481506348
    8. '_pos' → logprob: -9.050179481506348
    9. '_al' → logprob: -9.050179481506348
    10. '_start' → logprob: -9.175179481506348

Token 1624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407740354537964
    2. '=' → logprob: -0.9740774035453796
    3. ':' → logprob: -15.974077224731445
    4. ' ' → logprob: -16.349077224731445
    5. '```' → logprob: -16.474077224731445
    6. ',' → logprob: -17.349077224731445
    7. '   ' → logprob: -17.474077224731445
    8. ' ' → logprob: -17.599077224731445
    9. '`' → logprob: -17.724077224731445
    10. '	' → logprob: -18.099077224731445

Token 1625: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00016909420082811266
    2. ' pos' → logprob: -8.750168800354004
    3. '0' → logprob: -11.625168800354004
    4. '   ' → logprob: -14.125168800354004
    5. '           ' → logprob: -14.875168800354004
    6. '	pos' → logprob: -15.500168800354004
    7. 'position' → logprob: -16.50016975402832
    8. '_pos' → logprob: -16.50016975402832
    9. '(pos' → logprob: -16.62516975402832
    10. '                   ' → logprob: -16.75016975402832

Token 1626: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48268479108810425
    2. '0' → logprob: -1.482684850692749
    3. '               ' → logprob: -2.607684850692749
    4. ',' → logprob: -2.982684850692749
    5. ' ' → logprob: -4.23268461227417
    6. '=' → logprob: -5.23268461227417
    7. ' if' → logprob: -6.35768461227417
    8. '       ' → logprob: -6.48268461227417
    9. '<|end|>' → logprob: -6.48268461227417
    10. '            ' → logprob: -6.98268461227417

Token 1627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20689773559570312
    2. '           ' → logprob: -1.7068977355957031
    3. '```' → logprob: -5.581897735595703
    4. ',' → logprob: -8.206897735595703
    5. ':' → logprob: -8.456897735595703
    6. '       ' → logprob: -8.581897735595703
    7. '            ' → logprob: -8.706897735595703
    8. '<|end|>' → logprob: -9.081897735595703
    9. ':
' → logprob: -9.331897735595703
    10. '   ' → logprob: -9.456897735595703

Token 1628: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' (adapté à ' endpoint') → logprob: -0.04016116261482239
    2. '0' → logprob: -3.2901611328125
    3. '           ' → logprob: -6.4151611328125
    4. '               ' → logprob: -7.6651611328125
    5. ' endpoint' → logprob: -11.7901611328125
    6. '   ' → logprob: -13.5401611328125
    7. ' ' → logprob: -13.9151611328125
    8. '.endpoint' → logprob: -14.9151611328125
    9. '1' → logprob: -15.0401611328125
    10. '       ' → logprob: -15.1651611328125

Token 1629: '_flag' (ID: 25269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7757526636123657
    2. '_flag' → logprob: -0.9007526636123657
    3. ' =' → logprob: -2.025752544403076
    4. '_FLAG' → logprob: -7.150752544403076
    5. 'Flag' → logprob: -7.900752544403076
    6. 'flag' → logprob: -8.650753021240234
    7. '_' → logprob: -10.275753021240234
    8. ' flag' → logprob: -10.650753021240234
    9. '_flags' → logprob: -10.775753021240234
    10. '```' → logprob: -10.900753021240234

Token 1630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759403705596924
    2. ' =' → logprob: -0.8259403705596924
    3. '	' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '==' → logprob: -16.57594108581543
    6. ':' → logprob: -16.57594108581543
    7. '   ' → logprob: -16.82594108581543
    8. '```' → logprob: -16.95094108581543
    9. '[' → logprob: -17.07594108581543
    10. ' ==' → logprob: -17.57594108581543

Token 1631: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. '           ' → logprob: -16.000011444091797
    5. '       ' → logprob: -18.375011444091797
    6. '               ' → logprob: -18.375011444091797
    7. '```' → logprob: -18.500011444091797
    8. '[' → logprob: -18.875011444091797
    9. '                   ' → logprob: -18.875011444091797
    10. '=' → logprob: -19.375011444091797

Token 1632: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.75
    4. '=' → logprob: -19.0
    5. '[' → logprob: -19.0
    6. '```' → logprob: -19.0
    7. '<|end|>' → logprob: -19.375
    8. '۰' → logprob: -19.375
    9. '           ' → logprob: -19.875
    10. '       ' → logprob: -20.1875

Token 1633: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7471460103988647
    2. '           ' → logprob: -1.8721460103988647
    3. '<|end|>' → logprob: -1.8721460103988647
    4. ',' → logprob: -2.1221461296081543
    5. '```' → logprob: -3.2471461296081543
    6. ':' → logprob: -4.997146129608154
    7. '            ' → logprob: -5.122146129608154
    8. ' new' → logprob: -5.372146129608154
    9. '=' → logprob: -5.372146129608154
    10. '   ' → logprob: -5.372146129608154

Token 1634: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1635: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003633327316492796
    2. 'start' → logprob: -5.628633499145508
    3. ' ' → logprob: -10.503633499145508
    4. 'end' → logprob: -12.503633499145508
    5. ' start' → logprob: -14.003633499145508
    6. 'begin' → logprob: -15.003633499145508
    7. '```' → logprob: -15.128633499145508
    8. 'def' → logprob: -16.003633499145508
    9. '   ' → logprob: -16.003633499145508
    10. 'pos' → logprob: -16.378633499145508

Token 1636: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2605805993080139
    2. 'flag' → logprob: -1.5105805397033691
    3. '_flag' → logprob: -5.885580539703369
    4. '```' → logprob: -6.010580539703369
    5. '_point' → logprob: -6.510580539703369
    6. '<|end|>' → logprob: -7.385580539703369
    7. ')' → logprob: -7.510580539703369
    8. ' point' → logprob: -8.010581016540527
    9. '0' → logprob: -9.260581016540527
    10. ' flag' → logprob: -9.510581016540527

Token 1637: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19495657086372375
    2. '               ' → logprob: -2.4449565410614014
    3. '```' → logprob: -3.1949565410614014
    4. '<|end|>' → logprob: -3.3199565410614014
    5. 'new' → logprob: -6.1949567794799805
    6. '<|end|>' → logprob: -6.1949567794799805
    7. ',' → logprob: -6.3199567794799805
    8. ' new' → logprob: -6.9449567794799805
    9. '       ' → logprob: -7.0699567794799805
    10. '            ' → logprob: -7.0699567794799805

Token 1638: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5769493579864502
    2. '```' → logprob: -1.4519493579864502
    3. '               ' → logprob: -1.7019493579864502
    4. '       ' → logprob: -4.451949119567871
    5. '   ' → logprob: -5.826949119567871
    6. ')' → logprob: -6.576949119567871
    7. ':' → logprob: -6.701949119567871
    8. '                   ' → logprob: -6.951949119567871
    9. '<|end|>' → logprob: -7.451949119567871
    10. '            ' → logprob: -7.576949119567871

Token 1639: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.007132923696190119
    2. ' new' → logprob: -5.3821330070495605
    3. 'pos' → logprob: -6.2571330070495605
    4. '0' → logprob: -7.7571330070495605
    5. 'dist' → logprob: -8.882132530212402
    6. ' pos' → logprob: -11.632132530212402
    7. 'next' → logprob: -12.132132530212402
    8. '           ' → logprob: -12.507132530212402
    9. '               ' → logprob: -12.882132530212402
    10. '```' → logprob: -13.132132530212402

Token 1640: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.886803359724581e-05
    2. 'pos' → logprob: -9.625079154968262
    3. '_positions' → logprob: -11.625079154968262
    4. 'Pos' → logprob: -12.625079154968262
    5. '_position' → logprob: -15.000079154968262
    6. '_' → logprob: -16.750078201293945
    7. 'positions' → logprob: -17.000078201293945
    8. '_POS' → logprob: -17.375078201293945
    9. '_states' → logprob: -17.625078201293945
    10. '_p' → logprob: -17.625078201293945

Token 1641: '_at' (ID: 8254)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234356038272381
    2. ' =' → logprob: -5.255234241485596
    3. '=
' → logprob: -15.630234718322754
    4. '_at' → logprob: -15.755234718322754
    5. '0' → logprob: -16.380233764648438
    6. '```' → logprob: -16.755233764648438
    7. '	' → logprob: -17.755233764648438
    8. '＝' → logprob: -18.505233764648438
    9. '=None' → logprob: -18.630233764648438
    10. ' ' → logprob: -18.630233764648438

Token 1642: '_end' (ID: 13707)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004141072859056294
    2. ' ' → logprob: -8.12541389465332
    3. 'pos' → logprob: -9.50041389465332
    4. 'end' → logprob: -10.50041389465332
    5. 'start' → logprob: -11.75041389465332
    6. '```' → logprob: -13.00041389465332
    7. '_end' → logprob: -13.50041389465332
    8. 'the' → logprob: -13.75041389465332
    9. '_start' → logprob: -14.62541389465332
    10. 'End' → logprob: -14.75041389465332

Token 1643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.018150329589844
    4. '```' → logprob: -17.518150329589844
    5. '=None' → logprob: -18.018150329589844
    6. '＝' → logprob: -18.018150329589844
    7. '=True' → logprob: -18.268150329589844
    8. ')' → logprob: -18.393150329589844
    9. '=int' → logprob: -18.893150329589844
    10. '=}' → logprob: -19.018150329589844

Token 1644: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.75
    4. '00' → logprob: -19.75
    5. '000' → logprob: -21.375
    6. 'new' → logprob: -21.5
    7. '  ' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. '۰' → logprob: -21.875
    10. '=' → logprob: -22.125

Token 1645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.250001907348633
    4. 'new' → logprob: -18.250001907348633
    5. '00' → logprob: -18.875001907348633
    6. '=' → logprob: -19.125001907348633
    7. '000' → logprob: -19.437501907348633
    8. '۰' → logprob: -19.687501907348633
    9. '```' → logprob: -20.062501907348633
    10. '1' → logprob: -20.562501907348633

Token 1646: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05134128779172897
    2. 'if' → logprob: -4.0513410568237305
    3. 'remaining' → logprob: -4.3013410568237305
    4. '       ' → logprob: -5.4263410568237305
    5. '   ' → logprob: -5.9263410568237305
    6. ' if' → logprob: -6.0513410568237305
    7. '
' → logprob: -6.3013410568237305
    8. 'rest' → logprob: -6.4263410568237305
    9. 'remain' → logprob: -6.4263410568237305
    10. 'for' → logprob: -7.1763410568237305

Token 1648: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5212770104408264
    2. '           ' → logprob: -1.3962769508361816
    3. 'remaining' → logprob: -2.2712769508361816
    4. 'remain' → logprob: -3.2712769508361816
    5. 'rem' → logprob: -5.146276950836182
    6. ' if' → logprob: -5.896276950836182
    7. 'steps' → logprob: -5.896276950836182
    8. 'left' → logprob: -6.396276950836182
    9. '       ' → logprob: -6.771276950836182
    10. 'rest' → logprob: -7.021276950836182

Token 1649: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38753819465637207
    2. ' dist' → logprob: -1.137538194656372
    3. '   ' → logprob: -7.637537956237793
    4. '(dist' → logprob: -9.762537956237793
    5. '           ' → logprob: -10.262537956237793
    6. '       ' → logprob: -10.512537956237793
    7. '	dist' → logprob: -10.887537956237793
    8. 'd' → logprob: -12.012537956237793
    9. '               ' → logprob: -12.387537956237793
    10. '    ' → logprob: -12.512537956237793

Token 1650: '_to' (ID: 5089)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4808782637119293
    2. '_to' → logprob: -1.355878233909607
    3. ' >' → logprob: -2.1058783531188965
    4. '>=' → logprob: -7.1058783531188965
    5. '<=' → logprob: -7.8558783531188965
    6. ' <=' → logprob: -8.105877876281738
    7. ' >=' → logprob: -8.230877876281738
    8. '               ' → logprob: -8.980877876281738
    9. '           ' → logprob: -9.105877876281738
    10. '_' → logprob: -9.855877876281738

Token 1651: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05723758786916733
    2. 'dist' → logprob: -3.9322376251220703
    3. '0' → logprob: -4.43223762512207
    4. 'continue' → logprob: -4.80723762512207
    5. 'move' → logprob: -5.43223762512207
    6. '_end' → logprob: -5.93223762512207
    7. 'be' → logprob: -6.93223762512207
    8. '-end' → logprob: -6.93223762512207
    9. 'len' → logprob: -7.30723762512207
    10. '
' → logprob: -7.43223762512207

Token 1652: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0611737966537476
    2. ' <' → logprob: -1.3111737966537476
    3. '>=' → logprob: -1.3111737966537476
    4. ' >=' → logprob: -2.186173915863037
    5. '==' → logprob: -6.686173915863037
    6. '>' → logprob: -7.311173915863037
    7. ' ==' → logprob: -8.436173439025879
    8. '   ' → logprob: -9.061173439025879
    9. '<=' → logprob: -9.186173439025879
    10. '<p' → logprob: -10.686173439025879

Token 1653: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.029227565973997116
    2. '0' → logprob: -3.7792274951934814
    3. ' dist' → logprob: -5.1542277336120605
    4. '           ' → logprob: -8.904227256774902
    5. '               ' → logprob: -10.654227256774902
    6. '=' → logprob: -11.029227256774902
    7. '1' → logprob: -12.654227256774902
    8. '            ' → logprob: -13.279227256774902
    9. '(dist' → logprob: -13.904227256774902
    10. '	dist' → logprob: -14.029227256774902

Token 1654: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5056077241897583
    2. ':' → logprob: -1.1306077241897583
    3. ':
' → logprob: -2.6306076049804688
    4. '           ' → logprob: -6.880607604980469
    5. ' or' → logprob: -8.255607604980469
    6. ' continue' → logprob: -8.630607604980469
    7. ':return' → logprob: -8.880607604980469
    8. 'continue' → logprob: -9.130607604980469
    9. '<|end|>' → logprob: -10.255607604980469
    10. '                       ' → logprob: -10.255607604980469

Token 1655: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017836984246969223
    2. ' continue' → logprob: -4.267837047576904
    3. ':' → logprob: -6.142837047576904
    4. '           ' → logprob: -7.517837047576904
    5. 'continue' → logprob: -7.517837047576904
    6. ':
' → logprob: -8.267836570739746
    7. '```' → logprob: -9.892836570739746
    8. ' continues' → logprob: -10.517836570739746
    9. '                   ' → logprob: -11.267836570739746
    10. '   ' → logprob: -11.392836570739746

Token 1656: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.31364691257476807
    2. ' continue' → logprob: -1.438646912574768
    3. '               ' → logprob: -3.6886467933654785
    4. 'next' → logprob: -6.3136467933654785
    5. 'new' → logprob: -6.3136467933654785
    6. ' new' → logprob: -6.6886467933654785
    7. '           ' → logprob: -7.1886467933654785
    8. ' next' → logprob: -7.5636467933654785
    9. '	continue' → logprob: -8.438647270202637
    10. '                   ' → logprob: -8.563647270202637

Token 1657: ' Should' (ID: 18057)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14415796101093292
    2. '               ' → logprob: -2.269157886505127
    3. ' continue' → logprob: -3.519157886505127
    4. '           ' → logprob: -7.769157886505127
    5. 'next' → logprob: -8.269158363342285
    6. '                   ' → logprob: -8.644158363342285
    7. '#' → logprob: -8.769158363342285
    8. '```' → logprob: -9.394158363342285
    9. '   ' → logprob: -9.644158363342285
    10. 'pass' → logprob: -11.019158363342285

Token 1658: ' not' (ID: 625)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9328367710113525
    2. 'continue' → logprob: -1.0578367710113525
    3. ' not' → logprob: -2.0578367710113525
    4. 'not' → logprob: -2.4328367710113525
    5. 'n't' → logprob: -3.6828367710113525
    6. '               ' → logprob: -4.307836532592773
    7. '           ' → logprob: -6.182836532592773
    8. '```' → logprob: -6.807836532592773
    9. '_continue' → logprob: -6.932836532592773
    10. '#' → logprob: -7.932836532592773

Token 1659: ' happen' (ID: 5659)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10534104704856873
    2. ' continue' → logprob: -2.8553409576416016
    3. ')' → logprob: -3.7303409576416016
    4. 'not' → logprob: -5.355340957641602
    5. '<|end|>' → logprob: -5.730340957641602
    6. '```' → logprob: -5.855340957641602
    7. '.' → logprob: -6.105340957641602
    8. '=' → logprob: -6.730340957641602
    9. '+=' → logprob: -6.980340957641602
    10. ' not' → logprob: -7.980340957641602

Token 1660: ' since' (ID: 3630)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11430326104164124
    2. ' continue' → logprob: -2.3643033504486084
    3. 'continue' → logprob: -4.864303112030029
    4. '           ' → logprob: -5.489303112030029
    5. ':' → logprob: -7.489303112030029
    6. '                   ' → logprob: -7.989303112030029
    7. '	continue' → logprob: -8.239303588867188
    8. ':
' → logprob: -8.364303588867188
    9. '\t' → logprob: -8.614303588867188
    10. ')' → logprob: -9.364303588867188

Token 1661: ' previous' (ID: 5880)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0958497524261475
    2. ' continue' → logprob: -1.7208497524261475
    3. 'new' → logprob: -1.8458497524261475
    4. ' new' → logprob: -2.0958497524261475
    5. 'True' → logprob: -2.2208497524261475
    6. ' True' → logprob: -2.8458497524261475
    7. 'False' → logprob: -4.220849990844727
    8. 'next' → logprob: -4.595849990844727
    9. ' next' → logprob: -5.720849990844727
    10. ' False' → logprob: -6.345849990844727

Token 1662: ' move' (ID: 5275)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.098773717880249
    2. 'new' → logprob: -1.223773717880249
    3. ' line' → logprob: -2.348773717880249
    4. 'if' → logprob: -3.098773717880249
    5. ' code' → logprob: -3.098773717880249
    6. 'code' → logprob: -3.098773717880249
    7. 'token' → logprob: -3.223773717880249
    8. ' new' → logprob: -3.973773717880249
    9. '           ' → logprob: -4.223773956298828
    10. 'check' → logprob: -4.723773956298828

Token 1663: '_forward' (ID: 75888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5641348361968994
    2. ' continue' → logprob: -1.0641348361968994
    3. 'continue' → logprob: -2.9391348361968994
    4. '           ' → logprob: -3.9391348361968994
    5. '                   ' → logprob: -5.31413459777832
    6. ' continues' → logprob: -5.56413459777832
    7. ':
' → logprob: -6.56413459777832
    8. '                       ' → logprob: -7.31413459777832
    9. '	continue' → logprob: -7.31413459777832
    10. '   ' → logprob: -8.06413459777832

Token 1664: ' returned' (ID: 10508)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06731590628623962
    2. '           ' → logprob: -3.4423158168792725
    3. ' continue' → logprob: -3.8173158168792725
    4. 'continue' → logprob: -4.817316055297852
    5. ' continues' → logprob: -6.817316055297852
    6. '                   ' → logprob: -7.442316055297852
    7. ',' → logprob: -7.567316055297852
    8. '                       ' → logprob: -8.192316055297852
    9. '	continue' → logprob: -9.317316055297852
    10. '
' → logprob: -9.442316055297852

Token 1665: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0038317868020385504
    2. 'new' → logprob: -6.12883186340332
    3. 'not' → logprob: -7.00383186340332
    4. 'a' → logprob: -8.50383186340332
    5. '```' → logprob: -8.50383186340332
    6. 'False' → logprob: -9.12883186340332
    7. 'valid' → logprob: -9.25383186340332
    8. 'True' → logprob: -9.87883186340332
    9. ' None' → logprob: -10.50383186340332
    10. 'none' → logprob: -11.25383186340332

Token 1666: '
' (ID: 198)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9200439453125
    2. '               ' → logprob: -1.0450439453125
    3. 'continue' → logprob: -1.5450439453125
    4. ':
' → logprob: -4.1700439453125
    5. ':' → logprob: -4.4200439453125
    6. '           ' → logprob: -5.2950439453125
    7. '	continue' → logprob: -6.6700439453125
    8. '                   ' → logprob: -6.7950439453125
    9. '   ' → logprob: -7.5450439453125
    10. '\t' → logprob: -8.2950439453125

Token 1667: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3317616581916809
    2. ' continue' → logprob: -1.7067615985870361
    3. '           ' → logprob: -2.706761598587036
    4. 'continue' → logprob: -3.956761598587036
    5. '                   ' → logprob: -5.581761837005615
    6. '                               ' → logprob: -5.831761837005615
    7. '	continue' → logprob: -6.581761837005615
    8. '   ' → logprob: -6.581761837005615
    9. ':
' → logprob: -7.081761837005615
    10. '                           ' → logprob: -7.206761837005615

Token 1668: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10082053393125534
    2. 'continue' (adapté à ' continue') → logprob: -2.350820541381836
    3. '               ' → logprob: -8.475820541381836
    4. '	continue' → logprob: -8.600820541381836
    5. '\t' → logprob: -9.475820541381836
    6. '                   ' → logprob: -10.725820541381836
    7. ':' → logprob: -10.725820541381836
    8. ')' → logprob: -10.725820541381836
    9. ' continues' → logprob: -11.225820541381836
    10. '           ' → logprob: -11.600820541381836

Token 1669: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008204729296267033
    2. '       ' → logprob: -6.508204936981201
    3. '               ' → logprob: -6.633204936981201
    4. '            
' → logprob: -7.133204936981201
    5. '<|end|>' → logprob: -7.383204936981201
    6. ')' → logprob: -7.383204936981201
    7. ' else' → logprob: -7.633204936981201
    8. 'else' → logprob: -7.758204936981201
    9. '		' → logprob: -8.133204460144043
    10. '...' → logprob: -8.133204460144043

Token 1670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003960024565458298
    2. '
' → logprob: -6.503960132598877
    3. 'remaining' → logprob: -6.878960132598877
    4. '            
' → logprob: -7.003960132598877
    5. '       ' → logprob: -8.628959655761719
    6. 'else' → logprob: -8.878959655761719
    7. '```' → logprob: -10.003959655761719
    8. '#' → logprob: -10.503959655761719
    9. 'rest' → logprob: -10.878959655761719
    10. '               ' → logprob: -11.128959655761719

Token 1671: ' rem' (ID: 1662)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.2904728353023529
    2. 'remain' → logprob: -2.1654727458953857
    3. 'dist' → logprob: -3.0404727458953857
    4. '           ' → logprob: -3.1654727458953857
    5. 'rem' (adapté à ' rem') → logprob: -3.6654727458953857
    6. 'left' → logprob: -4.415472984313965
    7. 'rest' → logprob: -5.915472984313965
    8. '#' → logprob: -6.540472984313965
    9. 'steps' → logprob: -6.790472984313965
    10. 'extra' → logprob: -6.915472984313965

Token 1672: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2387371063232422
    2. '_dist' → logprob: -1.2387371063232422
    3. 'aining' → logprob: -1.6137371063232422
    4. ' =' → logprob: -2.238737106323242
    5. 'ain' → logprob: -3.363737106323242
    6. '_' → logprob: -3.738737106323242
    7. '_steps' → logprob: -4.613737106323242
    8. '=' → logprob: -4.738737106323242
    9. '_distance' → logprob: -5.113737106323242
    10. 'ains' → logprob: -5.363737106323242

Token 1673: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141421258449554
    2. '=' → logprob: -1.7014142274856567
    3. '           ' → logprob: -15.326414108276367
    4. ')' → logprob: -15.451414108276367
    5. '＝' → logprob: -16.326414108276367
    6. '            ' → logprob: -16.826414108276367
    7. ' -=' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.076414108276367
    9. '                ' → logprob: -17.201414108276367
    10. '               ' → logprob: -17.326414108276367

Token 1674: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018152514472603798
    2. ' dist' → logprob: -4.018152713775635
    3. '(dist' → logprob: -13.393152236938477
    4. '           ' → logprob: -14.143152236938477
    5. '	dist' → logprob: -15.643152236938477
    6. '               ' → logprob: -15.893152236938477
    7. '   ' → logprob: -17.768152236938477
    8. '_dist' → logprob: -18.018152236938477
    9. 'Dist' → logprob: -18.018152236938477
    10. 'diff' → logprob: -18.268152236938477

Token 1675: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004682526458054781
    2. '-' → logprob: -5.379682540893555
    3. '           ' → logprob: -9.754682540893555
    4. '
' → logprob: -14.004682540893555
    5. '               ' → logprob: -14.004682540893555
    6. ' -
' → logprob: -14.879682540893555
    7. ' ' → logprob: -15.129682540893555
    8. '   ' → logprob: -15.254682540893555
    9. ' -=' → logprob: -15.254682540893555
    10. '=' → logprob: -15.879682540893555

Token 1676: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.547789674485102e-05
    2. ' dist' → logprob: -10.250035285949707
    3. '           ' → logprob: -16.750036239624023
    4. '_dist' → logprob: -19.875036239624023
    5. '               ' → logprob: -20.125036239624023
    6. '	dist' → logprob: -20.250036239624023
    7. '```' → logprob: -21.000036239624023
    8. '(dist' → logprob: -21.625036239624023
    9. 'Dist' → logprob: -21.750036239624023
    10. 'distance' → logprob: -21.875036239624023

Token 1677: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. 'o' → logprob: -16.375
    3. 'To' → logprob: -16.875
    4. 'to' → logprob: -17.125
    5. '```' → logprob: -19.0
    6. '_TO' → logprob: -19.625
    7. '_at' → logprob: -20.375
    8. '`' → logprob: -20.375
    9. '[' → logprob: -20.5
    10. '...' → logprob: -20.875

Token 1678: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01830212026834488
    2. '_end' → logprob: -4.018301963806152
    3. 'dist' → logprob: -9.018301963806152
    4. 'End' → logprob: -11.518301963806152
    5. 'e' → logprob: -12.143301963806152
    6. 'to' → logprob: -12.893301963806152
    7. '   ' → logprob: -13.268301963806152
    8. 'rem' → logprob: -13.768301963806152
    9. '
' → logprob: -13.893301963806152
    10. 'END' → logprob: -14.018301963806152

Token 1679: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06959623098373413
    2. '
' → logprob: -3.694596290588379
    3. ' for' → logprob: -3.694596290588379
    4. 'for' → logprob: -4.194596290588379
    5. ',' → logprob: -6.694596290588379
    6. '            
' → logprob: -7.819596290588379
    7. '#' → logprob: -9.569596290588379
    8. '<|end|>' → logprob: -9.569596290588379
    9. '```' → logprob: -9.694596290588379
    10. '       ' → logprob: -9.694596290588379

Token 1680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030374562367796898
    2. 'for' → logprob: -4.155374526977539
    3. ' for' → logprob: -4.405374526977539
    4. '
' → logprob: -7.530374526977539
    5. '       ' → logprob: -7.655374526977539
    6. ',' → logprob: -8.280374526977539
    7. '```' → logprob: -8.780374526977539
    8. '            
' → logprob: -9.155374526977539
    9. '               ' → logprob: -9.155374526977539
    10. '   ' → logprob: -9.530374526977539

Token 1681: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020580526324920356
    2. 'key' → logprob: -9.125205993652344
    3. '           ' → logprob: -9.375205993652344
    4. '#' (adapté à ' #') → logprob: -11.875205993652344
    5. 'from' → logprob: -13.750205993652344
    6. ' for' → logprob: -13.875205993652344
    7. 'queue' → logprob: -14.000205993652344
    8. 'if' → logprob: -14.250205993652344
    9. 'next' → logprob: -15.500205993652344
    10. '            
' → logprob: -15.625205993652344

Token 1682: ' From' (ID: 7217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004468772385735065
    2. '           ' → logprob: -8.375447273254395
    3. 'key' → logprob: -8.875447273254395
    4. '#' → logprob: -10.750447273254395
    5. 'possible' → logprob: -11.875447273254395
    6. 'ends' → logprob: -11.875447273254395
    7. ' for' → logprob: -12.000447273254395
    8. 'queue' → logprob: -12.250447273254395
    9. 'next' → logprob: -12.375447273254395
    10. 'connections' → logprob: -12.750447273254395

Token 1683: ' endpoint' (ID: 29703)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.11845088005065918
    2. '(endpoint' → logprob: -3.243450880050659
    3. '(con' → logprob: -3.493450880050659
    4. '(point' → logprob: -4.368451118469238
    5. 'point' → logprob: -4.868451118469238
    6. 'endpoint' → logprob: -5.243451118469238
    7. '(' → logprob: -5.368451118469238
    8. '(end' → logprob: -6.243451118469238
    9. 'con' → logprob: -6.243451118469238
    10. '
' → logprob: -6.743451118469238

Token 1684: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7020530700683594
    2. '           ' → logprob: -0.9520530700683594
    3. 'key' → logprob: -2.5770530700683594
    4. 'ends' → logprob: -4.077053070068359
    5. 'flag' → logprob: -5.077053070068359
    6. ',' → logprob: -5.452053070068359
    7. ' for' → logprob: -5.452053070068359
    8. 'end' → logprob: -6.202053070068359
    9. '_key' → logprob: -6.327053070068359
    10. ' key' → logprob: -6.452053070068359

Token 1685: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011252827011048794
    2. ' for' → logprob: -4.7612528800964355
    3. '           ' → logprob: -6.2612528800964355
    4. 'key' → logprob: -7.5112528800964355
    5. ' key' → logprob: -9.386252403259277
    6. '#' → logprob: -10.511252403259277
    7. 'next' → logprob: -11.261252403259277
    8. 'ends' → logprob: -11.886252403259277
    9. 'neighbors' → logprob: -12.136252403259277
    10. 'from' → logprob: -12.261252403259277

Token 1686: ' turn' (ID: 3716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15288080275058746
    2. ' for' → logprob: -2.027880907058716
    3. ' go' → logprob: -6.027880668640137
    4. '           ' → logprob: -6.152880668640137
    5. ')' → logprob: -6.652880668640137
    6. 'go' → logprob: -7.527880668640137
    7. '               ' → logprob: -7.777880668640137
    8. ' (' → logprob: -8.027880668640137
    9. ',' → logprob: -8.277880668640137
    10. '                   ' → logprob: -8.277880668640137

Token 1687: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08873745799064636
    2. 'to' → logprob: -2.9637374877929688
    3. ' for' → logprob: -3.7137374877929688
    4. ' to' → logprob: -5.463737487792969
    5. 'connections' → logprob: -7.463737487792969
    6. ' (' → logprob: -7.588737487792969
    7. '_to' → logprob: -7.713737487792969
    8. '[(' → logprob: -7.963737487792969
    9. '           ' → logprob: -8.088737487792969
    10. 'into' → logprob: -8.213737487792969

Token 1688: ' other' (ID: 1273)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.8608942627906799
    2. 'for' → logprob: -0.9858942627906799
    3. 'con' → logprob: -2.485894203186035
    4. 'each' → logprob: -3.610894203186035
    5. 'connected' → logprob: -4.235894203186035
    6. 'all' → logprob: -4.235894203186035
    7. 'neighbors' → logprob: -4.360894203186035
    8. 'other' → logprob: -4.360894203186035
    9. 'adj' → logprob: -4.610894203186035
    10. 'next' → logprob: -4.610894203186035

Token 1689: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.5388345718383789
    2. 'street' → logprob: -1.663834571838379
    3. '_st' → logprob: -2.413834571838379
    4. '(s' → logprob: -3.163834571838379
    5. '(st' → logprob: -3.663834571838379
    6. 'for' → logprob: -3.913834571838379
    7. 'sid' → logprob: -4.413834571838379
    8. 's' → logprob: -4.913834571838379
    9. 'connections' → logprob: -4.913834571838379
    10. 'st' → logprob: -5.413834571838379

Token 1690: ' connected' (ID: 12079)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017216624692082405
    2. ' for' → logprob: -4.392216682434082
    3. 'for' → logprob: -5.767216682434082
    4. ' endpoints' → logprob: -7.642216682434082
    5. ',' → logprob: -8.142216682434082
    6. ' (' → logprob: -9.017216682434082
    7. ' at' → logprob: -9.142216682434082
    8. '(end' → logprob: -9.517216682434082
    9. 'end' → logprob: -9.767216682434082
    10. '<|end|>' → logprob: -9.892216682434082

Token 1691: '
' (ID: 198)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.23980869352817535
    2. 'to' → logprob: -2.6148087978363037
    3. 'for' → logprob: -2.7398087978363037
    4. '           ' → logprob: -3.1148087978363037
    5. ' at' → logprob: -3.8648087978363037
    6. '=' → logprob: -6.364808559417725
    7. '[(' → logprob: -6.614808559417725
    8. ' =' → logprob: -6.989808559417725
    9. '_at' → logprob: -7.239808559417725
    10. 's' → logprob: -7.489808559417725

Token 1692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009166713804006577
    2. 'for' → logprob: -5.259166717529297
    3. ' for' → logprob: -5.759166717529297
    4. '               ' → logprob: -8.634166717529297
    5. ' (' → logprob: -9.009166717529297
    6. ',' → logprob: -9.009166717529297
    7. '```' → logprob: -9.259166717529297
    8. '(' → logprob: -9.634166717529297
    9. '   ' → logprob: -10.009166717529297
    10. ' at' → logprob: -10.259166717529297

Token 1693: ' connects' (ID: 47599)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.758300438988954e-05
    2. '           ' → logprob: -9.625097274780273
    3. ' for' → logprob: -10.375097274780273
    4. 'key' → logprob: -15.625097274780273
    5. '```' → logprob: -16.000097274780273
    6. '            
' → logprob: -18.000097274780273
    7. 'neighbors' → logprob: -18.125097274780273
    8. '               ' → logprob: -18.125097274780273
    9. 'next' → logprob: -18.250097274780273
    10. 'possible' → logprob: -18.500097274780273

Token 1694: ' =' (ID: 314)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.41625428199768066
    2. ' =' → logprob: -2.0412542819976807
    3. 'ions' → logprob: -2.0412542819976807
    4. '=' → logprob: -3.4162542819976807
    5. 's' → logprob: -4.291254043579102
    6. '=(' → logprob: -4.791254043579102
    7. 'ion' → logprob: -4.916254043579102
    8. 'e' → logprob: -5.166254043579102
    9. 'ed' → logprob: -5.541254043579102
    10. 'ations' → logprob: -6.166254043579102

Token 1695: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.0004309076175559312
    2. ' connections' → logprob: -7.750431060791016
    3. '           ' → logprob: -15.625431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '.connections' → logprob: -17.625431060791016
    6. 'con' → logprob: -18.375431060791016
    7. '               ' → logprob: -18.750431060791016
    8. '       ' → logprob: -18.875431060791016
    9. 'collections' → logprob: -19.125431060791016
    10. '```' → logprob: -19.875431060791016

Token 1696: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.214019307051785e-05
    2. '.get' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.125032424926758
    4. '       ' → logprob: -16.625032424926758
    5. '(s' → logprob: -17.000032424926758
    6. '[s' → logprob: -17.375032424926758
    7. '((' → logprob: -17.500032424926758
    8. '[
' → logprob: -17.875032424926758
    9. '           ' → logprob: -18.375032424926758
    10. '[' → logprob: -18.500032424926758

Token 1697: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.028536492725834e-05
    2. '(s' → logprob: -10.000070571899414
    3. '(' → logprob: -10.875070571899414
    4. '   ' → logprob: -12.625070571899414
    5. '[(' → logprob: -13.875070571899414
    6. ' (' → logprob: -14.000070571899414
    7. ' ((' → logprob: -14.875070571899414
    8. '(st' → logprob: -16.125070571899414
    9. '(((' → logprob: -16.250070571899414
    10. ' ' → logprob: -16.625070571899414

Token 1698: 'sid' (ID: 38734)
  Prédit: 'sid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -8.816591434879228e-05
    2. '(s' → logprob: -9.50008773803711
    3. ' sid' → logprob: -11.25008773803711
    4. '   ' → logprob: -16.37508773803711
    5. 'side' → logprob: -17.50008773803711
    6. 'Sid' → logprob: -17.62508773803711
    7. '_sid' → logprob: -17.87508773803711
    8. '.sid' → logprob: -17.87508773803711
    9. '[s' → logprob: -18.12508773803711
    10. '
' → logprob: -18.25008773803711

Token 1699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010771531378850341
    2. ',end' → logprob: -10.000107765197754
    3. 'endpoint' → logprob: -10.125107765197754
    4. ' ,' → logprob: -11.750107765197754
    5. '(endpoint' → logprob: -12.250107765197754
    6. ',
' → logprob: -12.625107765197754
    7. '```' → logprob: -14.125107765197754
    8. '`,' → logprob: -14.375107765197754
    9. '[' → logprob: -14.500107765197754
    10. 'Endpoint' → logprob: -14.750107765197754

Token 1700: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.0001242772996192798
    2. ' endpoint' → logprob: -9.000123977661133
    3. '(endpoint' → logprob: -15.125123977661133
    4. '{' → logprob: -15.500123977661133
    5. '
' → logprob: -15.625123977661133
    6. '   ' → logprob: -16.125123977661133
    7. ' ' → logprob: -17.750123977661133
    8. '```' → logprob: -18.250123977661133
    9. ')' → logprob: -18.750123977661133
    10. '0' → logprob: -18.875123977661133

Token 1701: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.001173917087726295
    2. 'flag' → logprob: -6.751173973083496
    3. 'Flag' → logprob: -13.251173973083496
    4. '_FLAG' → logprob: -13.626173973083496
    5. '```' → logprob: -15.376173973083496
    6. ',' → logprob: -15.626173973083496
    7. ')' → logprob: -15.876173973083496
    8. '   ' → logprob: -17.12617301940918
    9. '),' → logprob: -17.62617301940918
    10. '	flag' → logprob: -17.75117301940918

Token 1702: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.6087021473795176e-05
    2. '))
' → logprob: -10.875045776367188
    3. '))' → logprob: -11.625045776367188
    4. '],' → logprob: -11.875045776367188
    5. ')' → logprob: -12.875045776367188
    6. ' ),' → logprob: -13.125045776367188
    7. '       ' → logprob: -13.250045776367188
    8. ',),' → logprob: -13.750045776367188
    9. '           ' → logprob: -14.250045776367188
    10. '},' → logprob: -14.375045776367188

Token 1703: ' [])
' (ID: 64395)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.005250125657767057
    2. '[])
' → logprob: -5.630249977111816
    3. '[]' → logprob: -6.505249977111816
    4. ' [])' → logprob: -9.005249977111816
    5. ')' → logprob: -10.630249977111816
    6. '[],' → logprob: -12.630249977111816
    7. '[]
' → logprob: -13.380249977111816
    8. ' [])
' → logprob: -14.505249977111816
    9. '[]):' → logprob: -15.505249977111816
    10. '[' → logprob: -15.755249977111816

Token 1704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.405145525932312
    2. '               ' → logprob: -1.780145525932312
    3. ' for' → logprob: -1.905145525932312
    4. 'for' → logprob: -4.905145645141602
    5. '                   ' → logprob: -5.905145645141602
    6. '       ' → logprob: -6.030145645141602
    7. '   ' → logprob: -7.155145645141602
    8. '                       ' → logprob: -7.530145645141602
    9. '```' → logprob: -7.655145645141602
    10. '
' → logprob: -8.405145645141602

Token 1705: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018531501293182373
    2. '           ' → logprob: -4.018531322479248
    3. ' for' → logprob: -7.893531322479248
    4. '```' → logprob: -12.393531799316406
    5. '       ' → logprob: -13.268531799316406
    6. '               ' → logprob: -13.893531799316406
    7. '   ' → logprob: -14.643531799316406
    8. '``' → logprob: -14.768531799316406
    9. '                   ' → logprob: -15.018531799316406
    10. '	for' → logprob: -15.518531799316406

Token 1706: ' ns' (ID: 18343)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.764765739440918
    2. 'other' → logprob: -1.764765739440918
    3. 'ns' → logprob: -2.264765739440918
    4. '(s' → logprob: -3.264765739440918
    5. 'os' → logprob: -3.264765739440918
    6. '(other' → logprob: -3.514765739440918
    7. 'oid' → logprob: -3.764765739440918
    8. '(n' → logprob: -3.889765739440918
    9. 'next' → logprob: -4.014765739440918
    10. 'nid' → logprob: -4.139765739440918

Token 1707: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.049062713980674744
    2. '_id' → logprob: -3.049062728881836
    3. 'sid' → logprob: -8.049062728881836
    4. 'd' → logprob: -9.799062728881836
    5. '_sid' → logprob: -10.549062728881836
    6. 's' → logprob: -11.049062728881836
    7. '_' → logprob: -11.049062728881836
    8. ',' → logprob: -11.674062728881836
    9. 'i' → logprob: -12.424062728881836
    10. '_,' → logprob: -12.549062728881836

Token 1708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005798388738185167
    2. ',end' → logprob: -7.625579833984375
    3. ',next' → logprob: -10.250579833984375
    4. ',n' → logprob: -10.500579833984375
    5. ' ,' → logprob: -10.750579833984375
    6. ',in' → logprob: -13.750579833984375
    7. '           ' → logprob: -13.750579833984375
    8. ',new' → logprob: -13.875579833984375
    9. ',int' → logprob: -14.250579833984375
    10. ',user' → logprob: -15.125579833984375

Token 1709: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028345203027129173
    2. 'end' → logprob: -3.9033451080322266
    3. '0' → logprob: -6.028345108032227
    4. 'ned' → logprob: -6.028345108032227
    5. 'new' → logprob: -7.153345108032227
    6. 'ne' → logprob: -7.528345108032227
    7. 'next' → logprob: -7.903345108032227
    8. 'other' → logprob: -8.028345108032227
    9. 'nent' → logprob: -8.778345108032227
    10. 'nest' → logprob: -8.903345108032227

Token 1710: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07683540880680084
    2. 'endpoint' → logprob: -2.8268353939056396
    3. '_end' → logprob: -5.451835632324219
    4. '1' → logprob: -6.201835632324219
    5. '0' → logprob: -6.451835632324219
    6. '_endpoint' → logprob: -6.826835632324219
    7. 'def' → logprob: -7.076835632324219
    8. 'sid' → logprob: -7.326835632324219
    9. 's' → logprob: -7.576835632324219
    10. 'id' → logprob: -7.826835632324219

Token 1711: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.04496736079454422
    2. 'flag' → logprob: -3.1699674129486084
    3. '0' → logprob: -6.794967174530029
    4. 'Flag' → logprob: -8.044967651367188
    5. '_FLAG' → logprob: -8.419967651367188
    6. '1' → logprob: -9.169967651367188
    7. '```' → logprob: -9.794967651367188
    8. '2' → logprob: -9.919967651367188
    9. '_flags' → logprob: -10.294967651367188
    10. '=' → logprob: -12.044967651367188

Token 1712: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22560594975948334
    2. 'in' → logprob: -1.6006059646606445
    3. '	in' → logprob: -9.225605964660645
    4. ')' → logprob: -9.600605964660645
    5. '_in' → logprob: -11.600605964660645
    6. 'In' → logprob: -12.600605964660645
    7. ',' → logprob: -13.225605964660645
    8. '   ' → logprob: -13.350605964660645
    9. ' ' → logprob: -13.850605964660645
    10. '<|end|>' → logprob: -13.975605964660645

Token 1713: ' connects' (ID: 47599)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.00228894897736609
    2. 'connections' → logprob: -6.127288818359375
    3. ' connects' → logprob: -9.752288818359375
    4. '(connect' → logprob: -10.127288818359375
    5. '
' → logprob: -13.252288818359375
    6. '_connect' → logprob: -13.877288818359375
    7. '[' → logprob: -14.252288818359375
    8. ' connections' → logprob: -14.752288818359375
    9. '(' → logprob: -14.877288818359375
    10. ' connect' → logprob: -15.252288818359375

Token 1714: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8966022729873657
    2. ':' → logprob: -1.0216022729873657
    3. '               ' → logprob: -2.021602153778076
    4. ',' → logprob: -2.521602153778076
    5. '           ' → logprob: -5.146602153778076
    6. '       ' → logprob: -5.271602153778076
    7. '                       ' → logprob: -6.146602153778076
    8. '):
' → logprob: -6.521602153778076
    9. '                   ' → logprob: -7.146602153778076
    10. '   ' → logprob: -7.396602153778076

Token 1715: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007904515950940549
    2. 's' → logprob: -9.0007905960083
    3. '                   ' → logprob: -9.0007905960083
    4. '                               ' → logprob: -9.1257905960083
    5. '```' → logprob: -9.2507905960083
    6. '           ' → logprob: -9.8757905960083
    7. '                       ' → logprob: -10.0007905960083
    8. ',' → logprob: -10.1257905960083
    9. 'new' → logprob: -10.5007905960083
    10. ' new' → logprob: -10.6257905960083

Token 1716: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' (adapté à ' ns') → logprob: -0.6399136185646057
    2. 'n' → logprob: -0.8899136185646057
    3. '               ' → logprob: -3.764913558959961
    4. 's' → logprob: -4.014913558959961
    5. 'new' → logprob: -4.764913558959961
    6. 'npos' → logprob: -5.514913558959961
    7. 'nst' → logprob: -5.639913558959961
    8. 'next' → logprob: -7.014913558959961
    9. '                   ' → logprob: -7.139913558959961
    10. ' ns' → logprob: -7.389913558959961

Token 1717: ' =' (ID: 314)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5729979872703552
    2. '['' → logprob: -1.197998046875
    3. ''s' → logprob: -2.572998046875
    4. 'sid' → logprob: -3.447998046875
    5. '{'' → logprob: -4.572998046875
    6. 's' → logprob: -5.072998046875
    7. '=' → logprob: -5.947998046875
    8. ''id' → logprob: -6.072998046875
    9. ''' → logprob: -6.822998046875
    10. '{
' → logprob: -7.447998046875

Token 1718: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0024775585625320673
    2. ' street' → logprob: -6.002477645874023
    3. 'stre' → logprob: -13.377477645874023
    4. '   ' → logprob: -16.377477645874023
    5. 'stroke' → logprob: -16.502477645874023
    6. 's' → logprob: -16.502477645874023
    7. 'st' → logprob: -16.877477645874023
    8. '.street' → logprob: -17.752477645874023
    9. '```' → logprob: -18.502477645874023
    10. '{' → logprob: -18.877477645874023

Token 1719: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -8.578184497309849e-05
    2. 'data' → logprob: -9.375085830688477
    3. 's' → logprob: -15.000085830688477
    4. '[' → logprob: -16.250085830688477
    5. '['' → logprob: -16.375085830688477
    6. 'street' → logprob: -16.500085830688477
    7. '{'' → logprob: -16.625085830688477
    8. 'Data' → logprob: -16.750085830688477
    9. '_DATA' → logprob: -17.125085830688477
    10. '[s' → logprob: -17.375085830688477

Token 1720: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5094070477061905e-05
    2. '(ns' → logprob: -12.625015258789062
    3. '               ' → logprob: -13.250015258789062
    4. '[n' → logprob: -13.375015258789062
    5. 'ns' → logprob: -14.000015258789062
    6. ' [' → logprob: -14.125015258789062
    7. '_ns' → logprob: -14.125015258789062
    8. '[
' → logprob: -14.125015258789062
    9. '   ' → logprob: -14.250015258789062
    10. '[(' → logprob: -14.375015258789062

Token 1721: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -8.2994620242971e-06
    2. ' ns' → logprob: -11.875008583068848
    3. 'n' → logprob: -14.750008583068848
    4. '[' → logprob: -14.875008583068848
    5. '(ns' → logprob: -15.125008583068848
    6. '{' → logprob: -16.25000762939453
    7. '	ns' → logprob: -16.37500762939453
    8. '/ns' → logprob: -17.37500762939453
    9. 'NS' → logprob: -18.12500762939453
    10. '{
' → logprob: -18.62500762939453

Token 1722: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.11100325733423233
    2. 'sid' → logprob: -2.7360031604766846
    3. '['' → logprob: -3.2360031604766846
    4. 'did' → logprob: -9.111002922058105
    5. '{'' → logprob: -9.111002922058105
    6. '[' → logprob: -9.486002922058105
    7. 'nid' → logprob: -9.486002922058105
    8. ''s' → logprob: -9.486002922058105
    9. 'ids' → logprob: -9.736002922058105
    10. '```' → logprob: -10.111002922058105

Token 1723: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.014500876888632774
    2. ']' → logprob: -4.264501094818115
    3. ']
' → logprob: -8.264500617980957
    4. '']
' → logprob: -11.014500617980957
    5. ']

' → logprob: -11.264500617980957
    6. '               ' → logprob: -11.514500617980957
    7. ']['' → logprob: -11.639500617980957
    8. ')
' → logprob: -11.639500617980957
    9. ' ]
' → logprob: -12.639500617980957
    10. '];' → logprob: -12.639500617980957

Token 1724: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02572512812912464
    2. 'new' → logprob: -4.275725364685059
    3. 'x' → logprob: -5.650725364685059
    4. '```' → logprob: -6.525725364685059
    5. 'for' → logprob: -6.650725364685059
    6. 'dx' → logprob: -6.775725364685059
    7. 'n' → logprob: -7.025725364685059
    8. '			' → logprob: -7.150725364685059
    9. 'start' → logprob: -8.025725364685059
    10. 'if' → logprob: -8.025725364685059

Token 1725: ' #' (ID: 1069)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5472241640090942
    2. 'ndir' → logprob: -1.4222241640090942
    3. 'if' → logprob: -2.6722240447998047
    4. 'n' → logprob: -3.1722240447998047
    5. 'new' → logprob: -3.7972240447998047
    6. 'for' → logprob: -4.172224044799805
    7. 'npos' → logprob: -4.547224044799805
    8. 'nx' → logprob: -4.797224044799805
    9. '#' (adapté à ' #') → logprob: -5.297224044799805
    10. 'dx' → logprob: -6.422224044799805

Token 1726: ' Determine' (ID: 57076)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.8762503862380981
    2. 'for' → logprob: -1.7512503862380981
    3. 'ndir' → logprob: -2.1262502670288086
    4. 'n' → logprob: -2.2512502670288086
    5. '#' → logprob: -2.5012502670288086
    6. 'ns' → logprob: -3.7512502670288086
    7. 'nx' → logprob: -3.7512502670288086
    8. 'if' → logprob: -3.8762502670288086
    9. 'new' → logprob: -4.751250267028809
    10. 'npos' → logprob: -5.126250267028809

Token 1727: ' direction' (ID: 9262)
  Prédit: 'ndir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ndir' → logprob: -0.6722782850265503
    2. 'nd' → logprob: -1.0472782850265503
    3. 'n' → logprob: -2.54727840423584
    4. 'new' → logprob: -3.29727840423584
    5. 'ns' → logprob: -5.17227840423584
    6. 'nx' → logprob: -5.17227840423584
    7. '#' → logprob: -5.29727840423584
    8. 'start' → logprob: -6.17227840423584
    9. 'next' → logprob: -6.54727840423584
    10. 'npos' → logprob: -7.29727840423584

Token 1728: ' possibilities' (ID: 31061)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.42639392614364624
    2. '               ' → logprob: -2.051393985748291
    3. 'n' → logprob: -3.051393985748291
    4. 'dx' → logprob: -3.676393985748291
    5. 'ns' → logprob: -3.801393985748291
    6. ' nd' → logprob: -3.801393985748291
    7. 'if' → logprob: -3.926393985748291
    8. '(nd' → logprob: -4.551393985748291
    9. '(dx' → logprob: -4.551393985748291
    10. 'of' → logprob: -4.676393985748291

Token 1729: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004527673125267029
    2. ' for' → logprob: -6.629527568817139
    3. ',' → logprob: -6.879527568817139
    4. 'for' → logprob: -7.254527568817139
    5. '```' → logprob: -8.379528045654297
    6. ' if' → logprob: -8.629528045654297
    7. '                
' → logprob: -8.629528045654297
    8. 'if' → logprob: -8.629528045654297
    9. '
' → logprob: -9.004528045654297
    10. '<|end|>' → logprob: -9.379528045654297

Token 1730: ' new' (ID: 620)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0024257178883999586
    2. 'the' → logprob: -6.627425670623779
    3. '(ns' → logprob: -7.877425670623779
    4. ' ns' → logprob: -8.252426147460938
    5. 'that' → logprob: -8.877426147460938
    6. '[' → logprob: -9.252426147460938
    7. '#' → logprob: -10.377426147460938
    8. 'this' → logprob: -10.502426147460938
    9. '(' → logprob: -11.002426147460938
    10. 'new' → logprob: -11.252426147460938

Token 1731: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5105422735214233
    2. 's' → logprob: -1.2605422735214233
    3. 'sid' → logprob: -3.135542392730713
    4. 'ns' → logprob: -3.885542392730713
    5. 'direction' → logprob: -4.635542392730713
    6. '```' → logprob: -4.885542392730713
    7. 'side' → logprob: -5.385542392730713
    8. 'stre' → logprob: -5.510542392730713
    9. '
' → logprob: -5.510542392730713
    10. 'st' → logprob: -5.635542392730713

Token 1732: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005093070212751627
    2. '                
' → logprob: -9.125509262084961
    3. '```' → logprob: -9.125509262084961
    4. 'for' → logprob: -9.375509262084961
    5. '
' → logprob: -9.375509262084961
    6. ',' → logprob: -9.625509262084961
    7. ' for' → logprob: -11.500509262084961
    8. '#' → logprob: -11.500509262084961
    9. 'new' → logprob: -12.500509262084961
    10. 'if' → logprob: -12.625509262084961

Token 1733: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2187048196792603
    2. ' if' → logprob: -1.4687048196792603
    3. '                   ' → logprob: -2.3437047004699707
    4. ' for' → logprob: -2.4687047004699707
    5. ' (' → logprob: -3.0937047004699707
    6. '                               ' → logprob: -3.0937047004699707
    7. 'if' → logprob: -3.0937047004699707
    8. '               ' → logprob: -3.2187047004699707
    9. 'for' → logprob: -3.3437047004699707
    10. '(' → logprob: -3.7187047004699707

Token 1734: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034760959446430206
    2. '#' (adapté à ' #') → logprob: -4.65976095199585
    3. '               ' → logprob: -4.65976095199585
    4. 'new' → logprob: -5.78476095199585
    5. 'poss' → logprob: -5.78476095199585
    6. 'dire' → logprob: -5.90976095199585
    7. 'if' → logprob: -6.15976095199585
    8. 'possible' → logprob: -6.65976095199585
    9. 'nd' → logprob: -7.15976095199585
    10. 'dx' → logprob: -7.40976095199585

Token 1735: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22769734263420105
    2. '#' → logprob: -2.8526973724365234
    3. 'nd' → logprob: -2.9776973724365234
    4. '               ' → logprob: -3.3526973724365234
    5. 'poss' → logprob: -3.7276973724365234
    6. 'new' → logprob: -4.727697372436523
    7. 'dire' → logprob: -4.977697372436523
    8. 'possible' → logprob: -5.102697372436523
    9. 'nds' → logprob: -5.602697372436523
    10. 'ns' → logprob: -5.727697372436523

Token 1736: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40261611342430115
    2. 'for' → logprob: -2.402616024017334
    3. 'new' → logprob: -2.652616024017334
    4. 'n' → logprob: -2.777616024017334
    5. 'nd' → logprob: -3.402616024017334
    6. 'ns' → logprob: -3.527616024017334
    7. 'if' → logprob: -3.777616024017334
    8. 'start' → logprob: -4.277616024017334
    9. 'nx' → logprob: -6.152616024017334
    10. 'dx' → logprob: -7.152616024017334

Token 1737: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5273674726486206
    2. 'can' → logprob: -1.2773674726486206
    3. '               ' → logprob: -3.15236759185791
    4. 'must' → logprob: -3.40236759185791
    5. 's' → logprob: -4.27736759185791
    6. '#' → logprob: -4.40236759185791
    7. ''s' → logprob: -5.02736759185791
    8. ' must' → logprob: -5.40236759185791
    9. '_can' → logprob: -5.52736759185791
    10. 'could' → logprob: -6.02736759185791

Token 1738: ' be' (ID: 413)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.9957373738288879
    2. 'go' → logprob: -1.6207373142242432
    3. 'choose' → logprob: -1.7457373142242432
    4. 'turn' → logprob: -2.870737314224243
    5. 'continue' → logprob: -2.870737314224243
    6. 'either' → logprob: -3.495737314224243
    7. 'travel' → logprob: -3.495737314224243
    8. 'enter' → logprob: -3.995737314224243
    9. 'appro' → logprob: -4.370737552642822
    10. 'be' → logprob: -4.620737552642822

Token 1739: ' going' (ID: 2966)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5811386704444885
    2. '(ns' → logprob: -1.5811386108398438
    3. 'on' → logprob: -2.5811386108398438
    4. 'ns' → logprob: -3.3311386108398438
    5. 'moving' → logprob: -3.3311386108398438
    6. 'either' → logprob: -3.4561386108398438
    7. '(n' → logprob: -3.7061386108398438
    8. '(' → logprob: -4.831138610839844
    9. 'going' → logprob: -5.081138610839844
    10. '0' → logprob: -5.206138610839844

Token 1740: ' in' (ID: 306)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.8102418780326843
    2. 'in' → logprob: -1.810241937637329
    3. '1' → logprob: -1.935241937637329
    4. 'along' → logprob: -2.685241937637329
    5. 'n' → logprob: -2.810241937637329
    6. 'either' → logprob: -3.685241937637329
    7. '(ns' → logprob: -3.685241937637329
    8. '(' → logprob: -4.18524169921875
    9. 'forward' → logprob: -4.18524169921875
    10. '(n' → logprob: -4.68524169921875

Token 1741: ' direction' (ID: 9262)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.07150785624980927
    2. 'both' → logprob: -3.3215079307556152
    3. '1' → logprob: -4.196507930755615
    4. 'direction' → logprob: -4.821507930755615
    5. 'the' → logprob: -5.571507930755615
    6. 'two' → logprob: -6.196507930755615
    7. '(' → logprob: -6.321507930755615
    8. 'ns' → logprob: -6.946507930755615
    9. ' either' → logprob: -8.321507453918457
    10. 'any' → logprob: -8.696507453918457

Token 1742: ' s' (ID: 265)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.02666657604277134
    2. 'of' → logprob: -4.776666641235352
    3. '(ns' → logprob: -5.276666641235352
    4. 's' → logprob: -5.401666641235352
    5. ' ns' → logprob: -6.276666641235352
    6. '1' → logprob: -6.526666641235352
    7. '=' → logprob: -6.901666641235352
    8. ' of' → logprob: -7.151666641235352
    9. '(s' → logprob: -7.651666641235352
    10. 'either' → logprob: -7.901666641235352

Token 1743: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.09522811323404312
    2. 'ns' → logprob: -2.5952281951904297
    3. 's' → logprob: -5.47022819519043
    4. ''' → logprob: -6.09522819519043
    5. '{'' → logprob: -6.84522819519043
    6. '_ns' → logprob: -6.84522819519043
    7. '   ' → logprob: -6.84522819519043
    8. '(ns' → logprob: -7.22022819519043
    9. 'ids' → logprob: -7.34522819519043
    10. '=' → logprob: -7.34522819519043

Token 1744: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.11292708665132523
    2. ''d' → logprob: -2.737927198410034
    3. ''' → logprob: -3.362927198410034
    4. ''s' → logprob: -6.112926959991455
    5. 'id' → logprob: -6.362926959991455
    6. ''id' → logprob: -6.862926959991455
    7. '['' → logprob: -7.487926959991455
    8. '{'' → logprob: -7.987926959991455
    9. '```' → logprob: -8.487927436828613
    10. 'd' → logprob: -8.487927436828613

Token 1745: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8509464859962463
    2. '],' → logprob: -1.1009464263916016
    3. ' or' → logprob: -2.1009464263916016
    4. ']' → logprob: -3.2259464263916016
    5. ''],' → logprob: -3.3509464263916016
    6. 's' → logprob: -3.9759464263916016
    7. '),' → logprob: -5.100946426391602
    8. 'or' → logprob: -5.225946426391602
    9. '']' → logprob: -5.725946426391602
    10. '',' → logprob: -6.475946426391602

Token 1746: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031912627164274454
    2. ' s' → logprob: -5.7531914710998535
    3. ''s' → logprob: -12.503190994262695
    4. '`s' → logprob: -12.628190994262695
    5. '   ' → logprob: -12.753190994262695
    6. '```' → logprob: -14.753190994262695
    7. '       ' → logprob: -15.003190994262695
    8. ' ' → logprob: -15.128190994262695
    9. '
' → logprob: -15.253190994262695
    10. '[s' → logprob: -15.378190994262695

Token 1747: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.21004432439804077
    2. ''s' → logprob: -2.5850443840026855
    3. ',' → logprob: -3.3350443840026855
    4. ''' → logprob: -3.5850443840026855
    5. 'dy' → logprob: -3.7100443840026855
    6. ''y' → logprob: -5.7100443840026855
    7. '{'' → logprob: -5.9600443840026855
    8. '[' → logprob: -5.9600443840026855
    9. 's' → logprob: -6.0850443840026855
    10. '```' → logprob: -6.0850443840026855

Token 1748: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0025263146962970495
    2. ''' → logprob: -6.12752628326416
    3. ''d' → logprob: -8.12752628326416
    4. ''s' → logprob: -10.75252628326416
    5. ''y' → logprob: -11.62752628326416
    6. '['' → logprob: -12.50252628326416
    7. 'd' → logprob: -12.87752628326416
    8. ' dy' → logprob: -13.00252628326416
    9. ''ny' → logprob: -13.37752628326416
    10. '.dy' → logprob: -13.75252628326416

Token 1749: '']' (ID: 1089)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4710083603858948
    2. ')' → logprob: -1.84600830078125
    3. ']' → logprob: -2.22100830078125
    4. '']' → logprob: -3.34600830078125
    5. 'or' → logprob: -3.47100830078125
    6. '')' → logprob: -3.97100830078125
    7. ',' → logprob: -5.09600830078125
    8. '}' → logprob: -5.34600830078125
    9. '               ' → logprob: -5.72100830078125
    10. '),' → logprob: -6.09600830078125

Token 1750: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12461166083812714
    2. '               ' → logprob: -2.4996116161346436
    3. 'or' → logprob: -4.374611854553223
    4. ',' → logprob: -4.624611854553223
    5. ' if' → logprob: -4.874611854553223
    6. '
' → logprob: -6.499611854553223
    7. '=' → logprob: -6.999611854553223
    8. '(s' → logprob: -8.249611854553223
    9. 'if' → logprob: -8.374611854553223
    10. '                   ' → logprob: -8.499611854553223

Token 1751: ' opposite' (ID: 23821)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.4697612524032593
    2. 'ns' → logprob: -2.094761371612549
    3. '-n' → logprob: -2.344761371612549
    4. '-' → logprob: -2.844761371612549
    5. ' -' → logprob: -2.844761371612549
    6. 's' → logprob: -3.594761371612549
    7. '(-' → logprob: -5.094761371612549
    8. '
' → logprob: -6.594761371612549
    9. ' ns' → logprob: -6.719761371612549
    10. '(ns' → logprob: -7.719761371612549

Token 1752: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41715455055236816
    2. ' or' → logprob: -2.292154550552368
    3. '
' → logprob: -2.417154550552368
    4. ',' → logprob: -2.667154550552368
    5. ' if' → logprob: -3.292154550552368
    6. '(s' → logprob: -4.917154312133789
    7. ' of' → logprob: -5.292154312133789
    8. 'if' → logprob: -5.542154312133789
    9. ' (' → logprob: -5.667154312133789
    10. '.' → logprob: -5.917154312133789

Token 1753: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028848797082901
    2. '```' → logprob: -4.403848648071289
    3. '                               ' → logprob: -5.278848648071289
    4. '                   ' → logprob: -5.778848648071289
    5. ' or' → logprob: -6.153848648071289
    6. ',' → logprob: -6.653848648071289
    7. '                       ' → logprob: -6.778848648071289
    8. '(' → logprob: -7.153848648071289
    9. ' (' → logprob: -7.278848648071289
    10. '                
' → logprob: -7.778848648071289

Token 1754: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3082551062107086
    2. '               ' → logprob: -2.058255195617676
    3. 'if' → logprob: -2.308255195617676
    4. '#' (adapté à ' #') → logprob: -4.308255195617676
    5. 'dx' → logprob: -5.183255195617676
    6. ' for' → logprob: -5.183255195617676
    7. 'pos' → logprob: -5.308255195617676
    8. 'new' → logprob: -6.308255195617676
    9. ' if' → logprob: -6.558255195617676
    10. 'poss' → logprob: -6.683255195617676

Token 1755: ' Choose' (ID: 25151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9831866025924683
    2. 'nd' → logprob: -1.2331866025924683
    3. '#' → logprob: -2.108186721801758
    4. 'if' → logprob: -2.483186721801758
    5. '               ' → logprob: -2.733186721801758
    6. 'new' → logprob: -3.983186721801758
    7. 'possible' → logprob: -4.733186721801758
    8. 'start' → logprob: -4.858186721801758
    9. 'poss' → logprob: -4.858186721801758
    10. 'pos' → logprob: -5.108186721801758

Token 1756: ' directions' (ID: 24921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007848530076444149
    2. '[(' → logprob: -5.882848739624023
    3. 'both' → logprob: -6.632848739624023
    4. ' for' → logprob: -7.757848739624023
    5. '1' → logprob: -7.757848739624023
    6. '#' → logprob: -7.757848739624023
    7. '[' → logprob: -7.882848739624023
    8. '[
' → logprob: -8.382848739624023
    9. 'direction' → logprob: -8.507848739624023
    10. 'dire' → logprob: -8.632848739624023

Token 1757: ' consistent' (ID: 20434)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5273967981338501
    2. 'for' → logprob: -1.02739679813385
    3. ' for' → logprob: -3.0273966789245605
    4. '
' → logprob: -7.1523966789245605
    5. '[' → logprob: -8.152397155761719
    6. '```' → logprob: -8.152397155761719
    7. '                   ' → logprob: -8.402397155761719
    8. '#' → logprob: -8.402397155761719
    9. 'possible' → logprob: -8.652397155761719
    10. ',' → logprob: -8.902397155761719

Token 1758: ';' (ID: 26)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.03178880736231804
    2. ' with' → logprob: -3.7817888259887695
    3. '               ' → logprob: -5.4067888259887695
    4. '                   ' → logprob: -6.4067888259887695
    5. '```' → logprob: -7.0317888259887695
    6. '(s' → logprob: -7.4067888259887695
    7. 's' → logprob: -8.40678882598877
    8. '                       ' → logprob: -8.53178882598877
    9. '                               ' → logprob: -9.90678882598877
    10. '``' → logprob: -10.03178882598877

Token 1759: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1514815092086792
    2. 'for' → logprob: -1.2764815092086792
    3. ' if' → logprob: -1.6514815092086792
    4. 'if' → logprob: -2.4014816284179688
    5. '               ' → logprob: -2.5264816284179688
    6. '#' → logprob: -3.5264816284179688
    7. '```' → logprob: -6.026481628417969
    8. ' x' → logprob: -6.401481628417969
    9. 'x' → logprob: -6.526481628417969
    10. 'continue' → logprob: -7.026481628417969

Token 1760: ' turn' (ID: 3716)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038775231689214706
    2. 'new' → logprob: -4.038775444030762
    3. 'the' → logprob: -5.538775444030762
    4. 'endpoint' → logprob: -5.663775444030762
    5. '(n' → logprob: -6.038775444030762
    6. '#' → logprob: -6.038775444030762
    7. 'this' → logprob: -6.788775444030762
    8. 'point' → logprob: -7.038775444030762
    9. 'connection' → logprob: -7.163775444030762
    10. '(s' → logprob: -7.413775444030762

Token 1761: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2853214740753174
    2. 'for' → logprob: -1.6603214740753174
    3. '                   ' → logprob: -1.9103214740753174
    4. 'point' → logprob: -2.2853214740753174
    5. '(s' → logprob: -2.5353214740753174
    6. 'if' → logprob: -3.2853214740753174
    7. 's' → logprob: -3.5353214740753174
    8. '_flag' → logprob: -3.5353214740753174
    9. '#' → logprob: -3.6603214740753174
    10. 'ion' → logprob: -4.410321235656738

Token 1762: ' direction' (ID: 9262)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.026584163308143616
    2. '               ' → logprob: -3.7765841484069824
    3. 'for' → logprob: -6.401584148406982
    4. '
' → logprob: -7.401584148406982
    5. ' #' → logprob: -8.40158462524414
    6. '                   ' → logprob: -8.52658462524414
    7. '```' → logprob: -9.02658462524414
    8. 'we' → logprob: -9.27658462524414
    9. '                               ' → logprob: -9.40158462524414
    10. 'the' → logprob: -10.02658462524414

Token 1763: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33509406447410583
    2. ' =' → logprob: -2.8350939750671387
    3. '=' → logprob: -2.9600939750671387
    4. 'c' → logprob: -3.0850939750671387
    5. ' can' → logprob: -3.7100939750671387
    6. 'can' → logprob: -4.335093975067139
    7. 'options' → logprob: -4.335093975067139
    8. '               ' → logprob: -4.960093975067139
    9. '_options' → logprob: -5.085093975067139
    10. 'must' → logprob: -5.085093975067139

Token 1764: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.09842449426651001
    2. ' either' → logprob: -3.8484244346618652
    3. 'be' → logprob: -3.8484244346618652
    4. 'either' → logprob: -3.9734244346618652
    5. 'both' → logprob: -4.848424434661865
    6. '1' → logprob: -4.848424434661865
    7. 's' → logprob: -5.098424434661865
    8. ' both' → logprob: -5.348424434661865
    9. 'n' → logprob: -7.223424434661865
    10. '(s' → logprob: -7.223424434661865

Token 1765: ' either' (ID: 4784)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6931425333023071
    2. 'either' → logprob: -1.6931425333023071
    3. 's' → logprob: -1.8181425333023071
    4. '(' → logprob: -3.0681424140930176
    5. '-' → logprob: -3.8181424140930176
    6. '-n' → logprob: -4.068142414093018
    7. '(s' → logprob: -4.193142414093018
    8. '-s' → logprob: -4.443142414093018
    9. ' either' → logprob: -4.568142414093018
    10. '(ns' → logprob: -4.693142414093018

Token 1766: ' before' (ID: 2254)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6732824444770813
    2. '(s' → logprob: -1.4232823848724365
    3. ' for' → logprob: -2.9232823848724365
    4. '(' → logprob: -3.0482823848724365
    5. '               ' → logprob: -3.6732823848724365
    6. ':
' → logprob: -4.423282623291016
    7. '{
' → logprob: -4.548282623291016
    8. 'for' → logprob: -4.548282623291016
    9. '(
' → logprob: -4.923282623291016
    10. ' or' → logprob: -4.923282623291016

Token 1767: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.35940998792648315
    2. ' or' → logprob: -1.234410047531128
    3. 's' → logprob: -5.609409809112549
    4. 'the' → logprob: -5.734409809112549
    5. 'turn' → logprob: -6.234409809112549
    6. '```' → logprob: -7.234409809112549
    7. 'n' → logprob: -8.234410285949707
    8. '(s' → logprob: -8.734410285949707
    9. '               ' → logprob: -8.984410285949707
    10. ',' → logprob: -8.984410285949707

Token 1768: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.016039764508605003
    2. ' after' → logprob: -4.141039848327637
    3. '```' → logprob: -13.266039848327637
    4. '
' → logprob: -13.891039848327637
    5. '               ' → logprob: -13.891039848327637
    6. '(after' → logprob: -14.891039848327637
    7. '_after' → logprob: -15.266039848327637
    8. 's' → logprob: -15.766039848327637
    9. '                   ' → logprob: -15.891039848327637
    10. ' ' → logprob: -16.01603889465332

Token 1769: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.19341647624969482
    2. 'the' → logprob: -2.3184165954589844
    3. 'endpoint' → logprob: -4.443416595458984
    4. '```' → logprob: -4.443416595458984
    5. 'n' → logprob: -4.568416595458984
    6. 'direction' → logprob: -4.943416595458984
    7. 'point' → logprob: -5.068416595458984
    8. '_turn' → logprob: -5.068416595458984
    9. 'new' → logprob: -5.693416595458984
    10. 'end' → logprob: -5.818416595458984

Token 1770: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00796455517411232
    2. ',' → logprob: -6.007964611053467
    3. '<|end|>' → logprob: -6.382964611053467
    4. '                   ' → logprob: -7.257964611053467
    5. '                               ' → logprob: -7.882964611053467
    6. ' (' → logprob: -8.007964134216309
    7. ' for' → logprob: -8.257964134216309
    8. '                ' → logprob: -8.382964134216309
    9. '<|end|>' → logprob: -8.507964134216309
    10. '                       ' → logprob: -8.507964134216309

Token 1771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008760893833823502
    2. '```' → logprob: -8.125876426696777
    3. '                               ' → logprob: -8.625876426696777
    4. '                   ' → logprob: -9.125876426696777
    5. '                
' → logprob: -9.500876426696777
    6. ' for' → logprob: -9.625876426696777
    7. '                       ' → logprob: -10.250876426696777
    8. '                ' → logprob: -10.500876426696777
    9. '			' → logprob: -10.750876426696777
    10. ',' → logprob: -11.375876426696777

Token 1772: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0784553289413452
    2. 'for' → logprob: -1.0784553289413452
    3. ' for' → logprob: -1.2034553289413452
    4. ' if' → logprob: -4.703455448150635
    5. 'if' → logprob: -5.328455448150635
    6. '```' → logprob: -7.578455448150635
    7. ' new' → logprob: -7.703455448150635
    8. 'new' → logprob: -7.703455448150635
    9. '                
' → logprob: -7.953455448150635
    10. '
' → logprob: -8.078454971313477

Token 1773: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0822460651397705
    2. 'for' → logprob: -1.2072460651397705
    3. 'new' → logprob: -1.5822460651397705
    4. 'start' → logprob: -2.7072460651397705
    5. '#' → logprob: -3.2072460651397705
    6. 'ns' → logprob: -4.082245826721191
    7. 'n' → logprob: -4.957245826721191
    8. 'pos' → logprob: -5.207245826721191
    9. 'if' → logprob: -5.332245826721191
    10. 'next' → logprob: -5.957245826721191

Token 1774: ' direction' (ID: 9262)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039205171167850494
    2. '#' → logprob: -4.039205074310303
    3. '               ' → logprob: -4.164205074310303
    4. ' for' → logprob: -5.664205074310303
    5. 'if' → logprob: -7.539205074310303
    6. 'dire' → logprob: -7.914205074310303
    7. 'possible' → logprob: -8.289205551147461
    8. 'new' → logprob: -8.539205551147461
    9. '```' → logprob: -8.664205551147461
    10. '                   ' → logprob: -10.164205551147461

Token 1775: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7052845358848572
    2. 'options' → logprob: -1.080284595489502
    3. '_options' → logprob: -2.580284595489502
    4. 'c' → logprob: -3.455284595489502
    5. 'for' → logprob: -3.455284595489502
    6. 'choices' → logprob: -5.455284595489502
    7. 'poss' → logprob: -5.455284595489502
    8. '_candidates' → logprob: -5.455284595489502
    9. 'can' → logprob: -5.830284595489502
    10. ' options' → logprob: -5.955284595489502

Token 1776: ' current' (ID: 2208)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8930676579475403
    2. 'turn' → logprob: -1.8930675983428955
    3. 'start' → logprob: -2.1430675983428955
    4. 'ns' → logprob: -2.2680675983428955
    5. 'n' → logprob: -3.0180675983428955
    6. 'the' → logprob: -3.0180675983428955
    7. '(n' → logprob: -3.1430675983428955
    8. '(s' → logprob: -4.018067836761475
    9. 'endpoint' → logprob: -4.393067836761475
    10. '(ns' → logprob: -4.518067836761475

Token 1777: ' time' (ID: 1058)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.4861166477203369
    2. ' street' → logprob: -2.861116647720337
    3. '```' → logprob: -3.236116647720337
    4. 'sid' → logprob: -3.611116647720337
    5. 'st' → logprob: -3.736116647720337
    6. 'token' → logprob: -3.736116647720337
    7. 'side' → logprob: -4.111116409301758
    8. 's' → logprob: -4.111116409301758
    9. 'end' → logprob: -4.236116409301758
    10. '               ' → logprob: -4.361116409301758

Token 1778: ' can' (ID: 665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.349338412284851
    2. '(s' → logprob: -1.724338412284851
    3. ' is' → logprob: -1.974338412284851
    4. ')' → logprob: -2.2243385314941406
    5. ' (' → logprob: -2.9743385314941406
    6. '               ' → logprob: -3.4743385314941406
    7. '#' → logprob: -3.7243385314941406
    8. 's' → logprob: -3.9743385314941406
    9. ' step' → logprob: -4.099338531494141
    10. ' can' → logprob: -4.224338531494141

Token 1779: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.06346651166677475
    2. 'either' → logprob: -3.1884665489196777
    3. ' be' → logprob: -4.188466548919678
    4. 'ns' → logprob: -6.313466548919678
    5. 's' → logprob: -7.438466548919678
    6. ' either' → logprob: -7.563466548919678
    7. '(s' → logprob: -7.813466548919678
    8. 'n' → logprob: -8.43846607208252
    9. '#' → logprob: -8.81346607208252
    10. '               ' → logprob: -8.93846607208252

Token 1780: ' before' (ID: 2254)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.2866889238357544
    2. 's' → logprob: -2.161688804626465
    3. 'either' → logprob: -2.911688804626465
    4. '(s' → logprob: -3.036688804626465
    5. '(ns' → logprob: -4.286688804626465
    6. '-' → logprob: -5.786688804626465
    7. '[s' → logprob: -5.911688804626465
    8. '(' → logprob: -6.161688804626465
    9. 'both' → logprob: -6.161688804626465
    10. '-n' → logprob: -7.036688804626465

Token 1781: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.1749277412891388
    2. 'turn' → logprob: -2.5499277114868164
    3. ' or' → logprob: -3.2999277114868164
    4. 'the' → logprob: -3.9249277114868164
    5. '(turn' → logprob: -4.799927711486816
    6. ',' → logprob: -5.424927711486816
    7. '```' → logprob: -5.924927711486816
    8. '(s' → logprob: -6.299927711486816
    9. 'and' → logprob: -6.299927711486816
    10. 'ns' → logprob: -6.674927711486816

Token 1782: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.0012011817889288068
    2. ' after' → logprob: -6.751201152801514
    3. 'True' → logprob: -11.376201629638672
    4. 'now' → logprob: -12.251201629638672
    5. '1' → logprob: -13.251201629638672
    6. '(after' → logprob: -13.251201629638672
    7. '```' → logprob: -13.626201629638672
    8. 's' → logprob: -13.626201629638672
    9. '
' → logprob: -14.001201629638672
    10. 'before' → logprob: -14.001201629638672

Token 1783: ' turning' (ID: 21087)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.259359210729599
    2. 'the' → logprob: -1.6343592405319214
    3. ' the' → logprob: -4.384359359741211
    4. ' turn' → logprob: -4.884359359741211
    5. '```' → logprob: -5.884359359741211
    6. 'direction' → logprob: -6.134359359741211
    7. 'n' → logprob: -6.634359359741211
    8. '               ' → logprob: -6.759359359741211
    9. 'new' → logprob: -7.259359359741211
    10. '_turn' → logprob: -7.759359359741211

Token 1784: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027479345444589853
    2. ',' → logprob: -6.377748012542725
    3. '```' → logprob: -7.252748012542725
    4. '                
' → logprob: -9.627747535705566
    5. '                   ' → logprob: -10.127747535705566
    6. ' (' → logprob: -10.252747535705566
    7. '<|end|>' → logprob: -10.502747535705566
    8. ' for' → logprob: -10.502747535705566
    9. ' at' → logprob: -11.127747535705566
    10. '                       ' → logprob: -11.252747535705566

Token 1785: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041634365916252136
    2. '                               ' → logprob: -4.541634559631348
    3. '                   ' → logprob: -4.541634559631348
    4. ' for' → logprob: -4.666634559631348
    5. '                       ' → logprob: -5.666634559631348
    6. '```' → logprob: -5.791634559631348
    7. 'for' → logprob: -7.041634559631348
    8. '                                       ' → logprob: -7.416634559631348
    9. '                           ' → logprob: -7.541634559631348
    10. '                ' → logprob: -8.666634559631348

Token 1786: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027734573930501938
    2. ' for' → logprob: -3.9027345180511475
    3. 'for' → logprob: -5.402734756469727
    4. '                   ' → logprob: -6.777734756469727
    5. '```' → logprob: -7.777734756469727
    6. ' new' → logprob: -8.402734756469727
    7. '                       ' → logprob: -8.777734756469727
    8. ' if' → logprob: -8.777734756469727
    9. '                
' → logprob: -8.777734756469727
    10. '                               ' → logprob: -9.402734756469727

Token 1787: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9009625911712646
    2. 'for' → logprob: -1.2759625911712646
    3. ' for' → logprob: -2.4009625911712646
    4. 'if' → logprob: -2.4009625911712646
    5. ' if' → logprob: -3.1509625911712646
    6. 'new' → logprob: -3.2759625911712646
    7. 'pos' → logprob: -3.9009625911712646
    8. '#' → logprob: -4.775962829589844
    9. ' new' → logprob: -5.025962829589844
    10. '
' → logprob: -5.400962829589844

Token 1788: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10372628271579742
    2. ' for' → logprob: -3.103726387023926
    3. '#' → logprob: -3.478726387023926
    4. 'if' → logprob: -5.103726387023926
    5. '               ' → logprob: -5.228726387023926
    6. 'new' → logprob: -5.478726387023926
    7. 'positions' → logprob: -6.728726387023926
    8. 'next' → logprob: -6.853726387023926
    9. 'possible' → logprob: -6.853726387023926
    10. '                   ' → logprob: -7.353726387023926

Token 1789: 'dir' (ID: 6457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8021642565727234
    2. 'on' → logprob: -1.5521643161773682
    3. '#' → logprob: -2.302164316177368
    4. 'onn' → logprob: -2.927164316177368
    5. 'ur' → logprob: -3.427164316177368
    6. 'dir' → logprob: -3.927164316177368
    7. 'urr' → logprob: -4.052164077758789
    8. 'urrent' → logprob: -4.052164077758789
    9. 'ont' → logprob: -4.052164077758789
    10. '               ' → logprob: -4.177164077758789

Token 1790: ' measured' (ID: 26489)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6387407779693604
    2. ' ==' → logprob: -1.7637407779693604
    3. '==' → logprob: -1.8887407779693604
    4. ' in' → logprob: -2.3887407779693604
    5. ' is' → logprob: -3.0137407779693604
    6. ' can' → logprob: -3.2637407779693604
    7. '_match' → logprob: -3.2637407779693604
    8. ' =' → logprob: -3.5137407779693604
    9. ',' → logprob: -3.6387407779693604
    10. '):
' → logprob: -3.7637407779693604

Token 1791: ' can' (ID: 665)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.355000615119934
    2. 'must' → logprob: -1.480000615119934
    3. 'can' → logprob: -2.1050004959106445
    4. 'matches' → logprob: -2.8550004959106445
    5. 'may' → logprob: -2.8550004959106445
    6. ')' → logprob: -2.9800004959106445
    7. 'at' → logprob: -3.6050004959106445
    8. 'is' → logprob: -3.6050004959106445
    9. ' at' → logprob: -3.9800004959106445
    10. ' must' → logprob: -4.1050004959106445

Token 1792: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.045813798904419
    2. ' be' → logprob: -1.170813798904419
    3. 'match' → logprob: -1.420813798904419
    4. ' match' → logprob: -2.545813798904419
    5. 'either' → logprob: -4.67081356048584
    6. ' either' → logprob: -5.17081356048584
    7. ' correspond' → logprob: -6.17081356048584
    8. 'equal' → logprob: -7.92081356048584
    9. '==' → logprob: -8.67081356048584
    10. 'cor' → logprob: -8.92081356048584

Token 1793: ' direction' (ID: 9262)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.3507898151874542
    2. 'either' → logprob: -1.6007897853851318
    3. 'dx' → logprob: -3.975789785385132
    4. 'checked' → logprob: -4.100790023803711
    5. 'the' → logprob: -4.725790023803711
    6. 'used' → logprob: -4.725790023803711
    7. 'any' → logprob: -5.100790023803711
    8. 'aligned' → logprob: -5.725790023803711
    9. 'in' → logprob: -5.975790023803711
    10. 'c' → logprob: -5.975790023803711

Token 1794: ' on' (ID: 402)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.2723115682601929
    2. '==' → logprob: -2.5223116874694824
    3. 'at' → logprob: -2.6473116874694824
    4. 'after' → logprob: -2.8973116874694824
    5. '               ' → logprob: -3.1473116874694824
    6. ' after' → logprob: -3.1473116874694824
    7. ' of' → logprob: -3.2723116874694824
    8. 'that' → logprob: -3.3973116874694824
    9. '```' → logprob: -3.3973116874694824
    10. ' in' → logprob: -3.7723116874694824

Token 1795: ' previous' (ID: 5880)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6877854466438293
    2. 'new' → logprob: -1.0627853870391846
    3. 'the' → logprob: -1.9377853870391846
    4. 'n' → logprob: -6.687785625457764
    5. '(ns' → logprob: -6.687785625457764
    6. 'street' → logprob: -6.937785625457764
    7. 'either' → logprob: -7.062785625457764
    8. 'next' → logprob: -7.312785625457764
    9. '```' → logprob: -7.437785625457764
    10. 'that' → logprob: -7.437785625457764

Token 1796: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3237871527671814
    2. 'line' → logprob: -2.323787212371826
    3. 'side' → logprob: -3.073787212371826
    4. ' line' → logprob: -3.698787212371826
    5. ' or' → logprob: -3.823787212371826
    6. ' street' → logprob: -3.948787212371826
    7. 'direction' → logprob: -4.448787212371826
    8. ',' → logprob: -4.698787212371826
    9. 'or' → logprob: -4.698787212371826
    10. 'token' → logprob: -5.198787212371826

Token 1797: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03461748734116554
    2. ',' → logprob: -4.2846174240112305
    3. ':' → logprob: -5.5346174240112305
    4. ':
' → logprob: -5.7846174240112305
    5. ' for' → logprob: -6.1596174240112305
    6. '                   ' → logprob: -6.2846174240112305
    7. '```' → logprob: -6.2846174240112305
    8. '):
' → logprob: -7.2846174240112305
    9. 'for' → logprob: -7.4096174240112305
    10. ')' → logprob: -7.4096174240112305

Token 1798: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.22803156077861786
    2. '#' → logprob: -1.9780315160751343
    3. 'next' → logprob: -3.228031635284424
    4. 'current' → logprob: -4.728031635284424
    5. 'the' → logprob: -4.728031635284424
    6. 'on' → logprob: -5.228031635284424
    7. ' new' → logprob: -6.728031635284424
    8. 'after' → logprob: -7.103031635284424
    9. ' next' → logprob: -8.728031158447266
    10. 'ns' → logprob: -8.728031158447266

Token 1799: ' street' (ID: 12901)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.059461627155542374
    2. 'street' → logprob: -4.18446159362793
    3. '(s' → logprob: -4.80946159362793
    4. ' sid' → logprob: -4.93446159362793
    5. 'side' → logprob: -4.93446159362793
    6. '_s' → logprob: -5.30946159362793
    7. 's' → logprob: -5.55946159362793
    8. '_sid' → logprob: -6.18446159362793
    9. ',' → logprob: -6.80946159362793
    10. '```' → logprob: -7.18446159362793

Token 1800: '
                
' (ID: 84151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045843268162570894
    2. '<|end|>' → logprob: -9.000458717346191
    3. '                
' → logprob: -9.125458717346191
    4. '```' → logprob: -9.750458717346191
    5. '                   ' → logprob: -10.000458717346191
    6. ',' → logprob: -10.375458717346191
    7. '<|end|>' → logprob: -10.750458717346191
    8. '                       ' → logprob: -10.875458717346191
    9. '#' → logprob: -11.875458717346191
    10. '
' → logprob: -12.250458717346191

Token 1801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019673554226756096
    2. '                   ' → logprob: -4.1446733474731445
    3. '```' → logprob: -6.5196733474731445
    4. '                       ' → logprob: -6.7696733474731445
    5. ' for' → logprob: -7.7696733474731445
    6. '                               ' → logprob: -8.394673347473145
    7. ',' → logprob: -9.894673347473145
    8. '                ' → logprob: -10.019673347473145
    9. '           ' → logprob: -10.019673347473145
    10. '                           ' → logprob: -10.269673347473145

Token 1802: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3931008279323578
    2. 'for' → logprob: -1.5181008577346802
    3. '#' (adapté à ' #') → logprob: -3.8931007385253906
    4. 'if' → logprob: -4.018100738525391
    5. 'ns' → logprob: -4.018100738525391
    6. 'new' → logprob: -4.018100738525391
    7. 'pos' → logprob: -5.143100738525391
    8. 'x' → logprob: -5.143100738525391
    9. 'n' → logprob: -5.518100738525391
    10. 'start' → logprob: -5.518100738525391

Token 1803: ' Directions' (ID: 85422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5512931942939758
    2. 'nd' → logprob: -1.551293134689331
    3. 'if' → logprob: -3.051293134689331
    4. '#' → logprob: -3.051293134689331
    5. 'possible' → logprob: -3.176293134689331
    6. 'new' → logprob: -4.05129337310791
    7. 'ns' → logprob: -4.05129337310791
    8. '               ' → logprob: -4.30129337310791
    9. 'n' → logprob: -4.92629337310791
    10. 'ndir' → logprob: -5.17629337310791

Token 1804: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2394088506698608
    2. 'options' → logprob: -1.7394088506698608
    3. 'for' → logprob: -1.7394088506698608
    4. 'poss' → logprob: -1.9894088506698608
    5. '_options' → logprob: -2.7394089698791504
    6. '               ' → logprob: -3.1144089698791504
    7. 's' → logprob: -3.7394089698791504
    8. 'c' → logprob: -3.8644089698791504
    9. '_pos' → logprob: -3.9894089698791504
    10. '=' → logprob: -4.36440896987915

Token 1805: ' new' (ID: 620)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.008126335218548775
    2. 'new' → logprob: -5.508126258850098
    3. 'the' → logprob: -6.633126258850098
    4. '(ns' → logprob: -7.008126258850098
    5. '[' → logprob: -7.758126258850098
    6. ' ns' → logprob: -8.008126258850098
    7. 'street' → logprob: -8.758126258850098
    8. 'n' → logprob: -8.758126258850098
    9. 's' → logprob: -9.008126258850098
    10. '#' → logprob: -9.758126258850098

Token 1806: ' street' (ID: 12901)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.8560344576835632
    2. 'sid' → logprob: -1.106034517288208
    3. '_s' → logprob: -2.481034517288208
    4. 'street' → logprob: -2.606034517288208
    5. '_sid' → logprob: -3.981034517288208
    6. 's' → logprob: -4.606034278869629
    7. 'ns' → logprob: -4.856034278869629
    8. 'st' → logprob: -4.856034278869629
    9. '['' → logprob: -5.231034278869629
    10. ' street' → logprob: -5.356034278869629

Token 1807: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6043893098831177
    2. '               ' → logprob: -1.2293893098831177
    3. ' for' → logprob: -2.104389190673828
    4. 'new' → logprob: -4.479389190673828
    5. ' =' → logprob: -5.229389190673828
    6. '#' → logprob: -5.729389190673828
    7. 'poss' → logprob: -5.854389190673828
    8. 'ns' → logprob: -5.979389190673828
    9. 'possible' → logprob: -6.104389190673828
    10. ':' → logprob: -6.229389190673828

Token 1808: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5662594437599182
    2. '               ' → logprob: -0.9412594437599182
    3. ' for' → logprob: -3.5662593841552734
    4. 'new' → logprob: -5.566259384155273
    5. 'dire' → logprob: -5.691259384155273
    6. ' directions' → logprob: -6.691259384155273
    7. 'poss' → logprob: -7.066259384155273
    8. '```' → logprob: -7.066259384155273
    9. '                
' → logprob: -7.316259384155273
    10. 'possible' → logprob: -7.316259384155273

Token 1809: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030564998742192984
    2. 'poss' → logprob: -6.878056526184082
    3. 'new' → logprob: -7.378056526184082
    4. 'possible' → logprob: -7.503056526184082
    5. 'dire' → logprob: -8.628056526184082
    6. 'nd' (adapté à ' nd') → logprob: -8.878056526184082
    7. '               ' → logprob: -8.878056526184082
    8. 'ndir' → logprob: -9.378056526184082
    9. 'dirs' → logprob: -9.503056526184082
    10. 'n' → logprob: -10.003056526184082

Token 1810: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01294055674225092
    2. ' =' → logprob: -5.012940406799316
    3. '=' → logprob: -6.012940406799316
    4. 's' → logprob: -6.637940406799316
    5. 'sid' → logprob: -6.762940406799316
    6. '['' → logprob: -8.137940406799316
    7. 'sx' → logprob: -8.512940406799316
    8. '1' → logprob: -9.012940406799316
    9. 'ir' → logprob: -9.262940406799316
    10. '_x' → logprob: -9.512940406799316

Token 1811: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36957257986068726
    2. ' =' → logprob: -1.244572639465332
    3. ',' → logprob: -3.869572639465332
    4. ',n' → logprob: -11.369572639465332
    5. '=s' → logprob: -11.619572639465332
    6. ',s' → logprob: -11.994572639465332
    7. 's' → logprob: -12.619572639465332
    8. ' ,' → logprob: -13.494572639465332
    9. '               ' → logprob: -13.744572639465332
    10. '=n' → logprob: -13.744572639465332

Token 1812: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -5.943783253314905e-05
    2. ' ns' → logprob: -9.750059127807617
    3. '(ns' → logprob: -14.500059127807617
    4. '   ' → logprob: -15.375059127807617
    5. '	ns' → logprob: -15.375059127807617
    6. '0' → logprob: -17.250059127807617
    7. '_ns' → logprob: -17.375059127807617
    8. 's' → logprob: -17.875059127807617
    9. '1' → logprob: -17.875059127807617
    10. '  ' → logprob: -18.000059127807617

Token 1813: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0005284877843223512
    2. ''s' → logprob: -7.750528335571289
    3. ''' → logprob: -10.375528335571289
    4. '[' → logprob: -10.375528335571289
    5. ''d' → logprob: -10.625528335571289
    6. '["' → logprob: -13.125528335571289
    7. '
' → logprob: -13.625528335571289
    8. 's' → logprob: -13.875528335571289
    9. '   ' → logprob: -13.875528335571289
    10. '`' → logprob: -14.000528335571289

Token 1814: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2026495635509491
    2. ''d' → logprob: -1.9526495933532715
    3. ''' → logprob: -3.2026495933532715
    4. ''s' → logprob: -7.3276495933532715
    5. '['' → logprob: -8.952649116516113
    6. ' dx' → logprob: -10.577649116516113
    7. ''id' → logprob: -10.952649116516113
    8. ' '' → logprob: -11.827649116516113
    9. '   ' → logprob: -12.077649116516113
    10. '{'' → logprob: -12.077649116516113

Token 1815: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.15302596986293793
    2. '']
' → logprob: -2.2780258655548096
    3. '               ' → logprob: -3.9030258655548096
    4. ']' → logprob: -4.278026103973389
    5. ',' → logprob: -6.153026103973389
    6. '']' → logprob: -6.278026103973389
    7. '],' → logprob: -7.778026103973389
    8. ')
' → logprob: -7.778026103973389
    9. '                   ' → logprob: -9.40302562713623
    10. ''],' → logprob: -9.52802562713623

Token 1816: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8878576755523682
    2. ',n' → logprob: -1.3878576755523682
    3. '               ' → logprob: -2.012857675552368
    4. '<|end|>' → logprob: -2.387857675552368
    5. '                
' → logprob: -2.762857675552368
    6. '<|end|>' → logprob: -4.512857437133789
    7. ',d' → logprob: -5.012857437133789
    8. '                ' → logprob: -5.387857437133789
    9. 'nd' → logprob: -5.387857437133789
    10. 'n' → logprob: -5.887857437133789

Token 1817: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.039032068103551865
    2. ' nd' → logprob: -3.914031982421875
    3. 'n' → logprob: -4.289031982421875
    4. '   ' → logprob: -6.664031982421875
    5. '_nd' → logprob: -7.039031982421875
    6. '```' → logprob: -7.789031982421875
    7. ' n' → logprob: -7.914031982421875
    8. 'tdy' → logprob: -8.164031982421875
    9. ' ' → logprob: -8.539031982421875
    10. '
' → logprob: -9.039031982421875

Token 1818: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3533640205860138
    2. 'x' → logprob: -1.2283639907836914
    3. 'dy' → logprob: -5.978363990783691
    4. 'dx' → logprob: -6.728363990783691
    5. '=' → logprob: -6.853363990783691
    6. ' =' → logprob: -10.353363990783691
    7. '['' → logprob: -10.728363990783691
    8. 'd' → logprob: -10.853363990783691
    9. '
' → logprob: -11.228363990783691
    10. ''y' → logprob: -12.228363990783691

Token 1819: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7730348706245422
    2. ',' → logprob: -0.8980348706245422
    3. '=' → logprob: -2.1480348110198975
    4. '<|end|>' → logprob: -5.023035049438477
    5. '               ' → logprob: -5.523035049438477
    6. '<|end|>' → logprob: -6.773035049438477
    7. ',n' → logprob: -7.273035049438477
    8. '=None' → logprob: -7.398035049438477
    9. ' ,' → logprob: -7.773035049438477
    10. ',
' → logprob: -8.773035049438477

Token 1820: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.03809255361557007
    2. ' ns' → logprob: -3.288092613220215
    3. '0' → logprob: -10.538092613220215
    4. '(ns' → logprob: -11.413092613220215
    5. '-n' → logprob: -12.538092613220215
    6. '	ns' → logprob: -12.663092613220215
    7. '1' → logprob: -13.163092613220215
    8. ' ' → logprob: -13.413092613220215
    9. 'n' → logprob: -13.913092613220215
    10. '_ns' → logprob: -14.413092613220215

Token 1821: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7405174970626831
    2. '['' → logprob: -0.9905174970626831
    3. '{'' → logprob: -3.2405176162719727
    4. '<|end|>' → logprob: -3.4905176162719727
    5. ',' → logprob: -3.9905176162719727
    6. '```' → logprob: -4.490517616271973
    7. '<|end|>' → logprob: -4.490517616271973
    8. ''s' → logprob: -4.740517616271973
    9. '#' → logprob: -5.490517616271973
    10. '=' → logprob: -5.990517616271973

Token 1822: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.001426067785359919
    2. ''' → logprob: -7.7514262199401855
    3. ''d' → logprob: -7.8764262199401855
    4. '['' → logprob: -8.251425743103027
    5. 'd' → logprob: -8.501425743103027
    6. '{'' → logprob: -10.376425743103027
    7. ''s' → logprob: -10.751425743103027
    8. 'ddy' → logprob: -10.876425743103027
    9. '1' → logprob: -11.001425743103027
    10. 'n' → logprob: -11.751425743103027

Token 1823: '']
' (ID: 9756)
  Prédit: '']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']
' → logprob: -0.07927772402763367
    2. '               ' → logprob: -3.329277753829956
    3. '']' → logprob: -3.829277753829956
    4. ']
' → logprob: -4.079277515411377
    5. ']' → logprob: -7.329277515411377
    6. ')
' → logprob: -7.704277515411377
    7. '```' → logprob: -9.329277992248535
    8. '                   ' → logprob: -9.579277992248535
    9. '']

' → logprob: -9.579277992248535
    10. ',' → logprob: -9.829277992248535

Token 1824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04221667721867561
    2. '```' → logprob: -3.9172167778015137
    3. ' if' → logprob: -4.667216777801514
    4. ',' → logprob: -5.542216777801514
    5. '                   ' → logprob: -6.792216777801514
    6. ' (' → logprob: -6.792216777801514
    7. '<|end|>' → logprob: -6.792216777801514
    8. ' new' → logprob: -7.417216777801514
    9. '                               ' → logprob: -7.542216777801514
    10. '                ' → logprob: -7.917216777801514

Token 1825: ' candidates' (ID: 18116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46115195751190186
    2. 'new' → logprob: -2.4611520767211914
    3. '               ' → logprob: -2.7111520767211914
    4. '#' → logprob: -2.7111520767211914
    5. 'for' → logprob: -2.8361520767211914
    6. 'pos' → logprob: -3.3361520767211914
    7. 'positions' → logprob: -3.5861520767211914
    8. 'start' → logprob: -4.836152076721191
    9. 'possible' → logprob: -5.086152076721191
    10. 'npos' → logprob: -5.461152076721191

Token 1826: '_dir' (ID: 9526)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741614758968353
    2. ' =' → logprob: -0.9741615056991577
    3. '=[' → logprob: -9.974161148071289
    4. '=[
' → logprob: -10.974161148071289
    5. '=[]' → logprob: -12.224161148071289
    6. '                   ' → logprob: -12.974161148071289
    7. '```' → logprob: -13.349161148071289
    8. '=
' → logprob: -13.474161148071289
    9. '[
' → logprob: -13.474161148071289
    10. '.append' → logprob: -13.474161148071289

Token 1827: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1837671846151352
    2. '=' → logprob: -2.308767080307007
    3. ' =' → logprob: -2.683767080307007
    4. '=[
' → logprob: -9.933767318725586
    5. ',' → logprob: -10.433767318725586
    6. '_list' → logprob: -10.808767318725586
    7. '=[' → logprob: -11.683767318725586
    8. '   ' → logprob: -11.808767318725586
    9. ' s' → logprob: -11.933767318725586
    10. '=s' → logprob: -12.183767318725586

Token 1828: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00036810929304920137
    2. '[
' → logprob: -8.125368118286133
    3. ' [(' → logprob: -9.875368118286133
    4. '[((' → logprob: -11.125368118286133
    5. '[' → logprob: -12.750368118286133
    6. '[]
' → logprob: -13.250368118286133
    7. '[n' → logprob: -14.625368118286133
    8. '{' → logprob: -15.375368118286133
    9. '   ' → logprob: -15.625368118286133
    10. '[]' → logprob: -16.250368118286133

Token 1829: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.06137053668498993
    2. ' nd' → logprob: -3.061370611190796
    3. 'ns' → logprob: -4.436370372772217
    4. '(nd' → logprob: -8.436370849609375
    5. '1' → logprob: -8.811370849609375
    6. '-' → logprob: -9.186370849609375
    7. ' ns' → logprob: -9.436370849609375
    8. '0' → logprob: -9.811370849609375
    9. '   ' → logprob: -9.936370849609375
    10. '(' → logprob: -10.186370849609375

Token 1830: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002593130338937044
    2. '['' → logprob: -9.125259399414062
    3. '1' → logprob: -10.375259399414062
    4. 'dx' → logprob: -10.500259399414062
    5. ''x' → logprob: -10.625259399414062
    6. '0' → logprob: -10.750259399414062
    7. 'sx' → logprob: -11.625259399414062
    8. '```' → logprob: -12.000259399414062
    9. ''s' → logprob: -12.125259399414062
    10. '{'' → logprob: -12.250259399414062

Token 1831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007538817590102553
    2. '),' → logprob: -8.000754356384277
    3. ' ,' → logprob: -8.875754356384277
    4. ',d' → logprob: -8.875754356384277
    5. ',n' → logprob: -9.875754356384277
    6. ',),' → logprob: -10.875754356384277
    7. ')],' → logprob: -11.000754356384277
    8. '<|end|>' → logprob: -11.750754356384277
    9. '),(' → logprob: -12.000754356384277
    10. '               ' → logprob: -12.375754356384277

Token 1832: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.07107148319482803
    2. ' nd' → logprob: -2.6960713863372803
    3. 'n' → logprob: -7.571071624755859
    4. '0' → logprob: -8.57107162475586
    5. '_nd' → logprob: -8.69607162475586
    6. ' ' → logprob: -9.57107162475586
    7. ' n' → logprob: -10.19607162475586
    8. 'ND' → logprob: -10.69607162475586
    9. 'ndir' → logprob: -10.69607162475586
    10. '```' → logprob: -11.32107162475586

Token 1833: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004628888331353664
    2. 'dy' → logprob: -5.379628658294678
    3. '1' → logprob: -13.379629135131836
    4. 'd' → logprob: -13.629629135131836
    5. 'iy' → logprob: -13.879629135131836
    6. 'y's' → logprob: -14.004629135131836
    7. 'ý' → logprob: -14.254629135131836
    8. 'ny' → logprob: -14.629629135131836
    9. 'ỹ' → logprob: -14.879629135131836
    10. '```' → logprob: -15.004629135131836

Token 1834: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01442438643425703
    2. '),(' → logprob: -4.2644243240356445
    3. '),
' → logprob: -8.639424324035645
    4. ' ),' → logprob: -9.764424324035645
    5. ',' → logprob: -11.014424324035645
    6. ')' → logprob: -12.889424324035645
    7. ')]' → logprob: -13.014424324035645
    8. '               ' → logprob: -13.139424324035645
    9. ',),' → logprob: -13.889424324035645
    10. '           ' → logprob: -14.889424324035645

Token 1835: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.007297906093299389
    2. '(nd' → logprob: -5.007297992706299
    3. ' (-' → logprob: -7.882297992706299
    4. '(' → logprob: -8.88229751586914
    5. ' (' → logprob: -10.00729751586914
    6. '(n' → logprob: -11.88229751586914
    7. '(nx' → logprob: -12.88229751586914
    8. '(nn' → logprob: -13.13229751586914
    9. '(-(' → logprob: -13.63229751586914
    10. '((-' → logprob: -13.75729751586914

Token 1836: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -2.696889623621246e-06
    2. ' nd' → logprob: -13.25000286102295
    3. '1' → logprob: -14.87500286102295
    4. '(nd' → logprob: -15.50000286102295
    5. 'ns' → logprob: -15.50000286102295
    6. '_nd' → logprob: -16.625001907348633
    7. 'ndl' → logprob: -17.750001907348633
    8. 'n' → logprob: -18.375001907348633
    9. 'ndir' → logprob: -18.500001907348633
    10. '   ' → logprob: -19.250001907348633

Token 1837: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.36574100604048e-06
    2. 'sx' → logprob: -13.250004768371582
    3. '1' → logprob: -14.125004768371582
    4. 'dx' → logprob: -14.250004768371582
    5. '```' → logprob: -14.625004768371582
    6. 'ns' → logprob: -15.750004768371582
    7. 's' → logprob: -16.125003814697266
    8. 'xs' → logprob: -16.375003814697266
    9. '``' → logprob: -16.750003814697266
    10. '
' → logprob: -17.312503814697266

Token 1838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.351697033504024e-05
    2. ' ,' → logprob: -9.875083923339844
    3. ',n' → logprob: -10.625083923339844
    4. '<|end|>' → logprob: -12.750083923339844
    5. ',-' → logprob: -13.625083923339844
    6. 'nd' → logprob: -14.125083923339844
    7. '‌,' → logprob: -14.625083923339844
    8. '(nd' → logprob: -14.750083923339844
    9. ',d' → logprob: -14.875083923339844
    10. ',
' → logprob: -14.875083923339844

Token 1839: ' -' (ID: 533)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0035879528149962425
    2. '-' → logprob: -6.12858772277832
    3. ' nd' → logprob: -7.12858772277832
    4. '_nd' → logprob: -8.25358772277832
    5. 'n' → logprob: -8.50358772277832
    6. '0' → logprob: -10.00358772277832
    7. '1' → logprob: -11.00358772277832
    8. ' -' → logprob: -11.37858772277832
    9. 'tdy' → logprob: -11.37858772277832
    10. '-n' → logprob: -12.00358772277832

Token 1840: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -5.9153885558771435e-06
    2. ' nd' → logprob: -12.500005722045898
    3. '1' → logprob: -13.375005722045898
    4. '(nd' → logprob: -15.500005722045898
    5. '_nd' → logprob: -16.2500057220459
    6. 'ndir' → logprob: -16.3750057220459
    7. 'n' → logprob: -16.5000057220459
    8. '
' → logprob: -17.1250057220459
    9. 'ns' → logprob: -18.2500057220459
    10. '   ' → logprob: -18.3750057220459

Token 1841: 'y' (ID: 88)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0006087943911552429
    2. 'd' → logprob: -7.875608921051025
    3. '1' → logprob: -8.875608444213867
    4. 'y' → logprob: -9.500608444213867
    5. 'yd' → logprob: -12.000608444213867
    6. ' dy' → logprob: -13.125608444213867
    7. 'ny' → logprob: -13.875608444213867
    8. 'ddy' → logprob: -14.000608444213867
    9. 'ay' → logprob: -14.250608444213867
    10. 'nd' → logprob: -14.375608444213867

Token 1842: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016319748247042298
    2. ')]
' → logprob: -6.501631736755371
    3. ')' → logprob: -9.751631736755371
    4. '),' → logprob: -9.876631736755371
    5. ',' → logprob: -12.126631736755371
    6. ')]

' → logprob: -12.501631736755371
    7. ' )' → logprob: -12.751631736755371
    8. ']' → logprob: -13.126631736755371
    9. ')]
' → logprob: -13.251631736755371
    10. ')][' → logprob: -13.501631736755371

Token 1843: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04588920623064041
    2. ',' → logprob: -3.670889139175415
    3. ',
' → logprob: -5.295889377593994
    4. '```' → logprob: -5.295889377593994
    5. '
' → logprob: -5.795889377593994
    6. '                   ' → logprob: -6.170889377593994
    7. '                
' → logprob: -6.795889377593994
    8. '[' → logprob: -7.545889377593994
    9. ':
' → logprob: -7.670889377593994
    10. ':' → logprob: -7.920889377593994

Token 1844: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06850548088550568
    2. ' for' → logprob: -3.1935055255889893
    3. 'for' (adapté à ' for') → logprob: -3.6935055255889893
    4. '```' → logprob: -8.81850528717041
    5. '                   ' → logprob: -9.81850528717041
    6. '       ' → logprob: -10.56850528717041
    7. ',' → logprob: -11.06850528717041
    8. '
' → logprob: -11.69350528717041
    9. '                
' → logprob: -12.06850528717041
    10. '           ' → logprob: -12.06850528717041

Token 1845: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.47953668236732483
    2. '(nd' → logprob: -1.7295366525650024
    3. '(c' → logprob: -2.604536771774292
    4. '(' → logprob: -2.729536771774292
    5. 'cd' → logprob: -3.979536771774292
    6. 'c' → logprob: -3.979536771774292
    7. 'ndir' → logprob: -5.104536533355713
    8. 'n' → logprob: -5.354536533355713
    9. '(n' → logprob: -5.604536533355713
    10. 'cand' → logprob: -5.604536533355713

Token 1846: 'xx' (ID: 7605)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -13.625001907348633
    3. '(x' → logprob: -16.375001907348633
    4. '
' → logprob: -16.500001907348633
    5. '(' → logprob: -16.625001907348633
    6. 'ex' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '           ' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. '                   ' → logprob: -17.750001907348633

Token 1847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04128473624587059
    2. ',n' → logprob: -3.4162847995758057
    3. ' ,' → logprob: -5.416284561157227
    4. ' in' → logprob: -7.041284561157227
    5. ',c' → logprob: -7.541284561157227
    6. ',d' → logprob: -7.791284561157227
    7. ',x' → logprob: -8.166284561157227
    8. 'in' → logprob: -8.791284561157227
    9. ',user' → logprob: -8.916284561157227
    10. ',in' → logprob: -9.291284561157227

Token 1848: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0007968813297338784
    2. ' nd' → logprob: -7.250796794891357
    3. 'n' → logprob: -10.125797271728516
    4. '_nd' → logprob: -10.625797271728516
    5. 'ndir' → logprob: -11.875797271728516
    6. '(nd' → logprob: -12.500797271728516
    7. 'ndry' → logprob: -13.250797271728516
    8. '.nd' → logprob: -13.500797271728516
    9. 'nder' → logprob: -13.750797271728516
    10. 'ndl' → logprob: -13.875797271728516

Token 1849: 'yy' (ID: 7496)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023563163354992867
    2. 'y' → logprob: -3.7735631465911865
    3. 'xx' → logprob: -8.273563385009766
    4. 'dx' → logprob: -9.898563385009766
    5. 'dy' → logprob: -11.773563385009766
    6. 'xy' → logprob: -13.523563385009766
    7. 'd' → logprob: -14.523563385009766
    8. 'yy' → logprob: -14.523563385009766
    9. 'xdd' → logprob: -14.523563385009766
    10. '_dx' → logprob: -14.648563385009766

Token 1850: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033651113510131836
    2. 'in' → logprob: -3.408651113510132
    3. ',' → logprob: -12.658651351928711
    4. 'In' → logprob: -14.533651351928711
    5. '	in' → logprob: -15.033651351928711
    6. ')' → logprob: -15.158651351928711
    7. '_in' → logprob: -15.533651351928711
    8. '   ' → logprob: -16.03365135192871
    9. '```' → logprob: -16.15865135192871
    10. '                   ' → logprob: -16.15865135192871

Token 1851: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006638261256739497
    2. ' candidates' → logprob: -7.375663757324219
    3. '[c' → logprob: -10.625663757324219
    4. 'candidate' → logprob: -11.625663757324219
    5. '[' → logprob: -13.125663757324219
    6. 'cand' → logprob: -14.375663757324219
    7. '[(' → logprob: -14.750663757324219
    8. '(c' → logprob: -15.000663757324219
    9. '_candidates' → logprob: -15.000663757324219
    10. '   ' → logprob: -15.750663757324219

Token 1852: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.29651305079460144
    2. '):
' → logprob: -1.6715130805969238
    3. ':
' → logprob: -3.546513080596924
    4. '               ' → logprob: -4.921513080596924
    5. '(dir' → logprob: -4.921513080596924
    6. 'Dir' → logprob: -5.296513080596924
    7. '):' → logprob: -5.296513080596924
    8. ':' → logprob: -5.296513080596924
    9. 'dir' → logprob: -6.171513080596924
    10. '(' → logprob: -6.296513080596924

Token 1853: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6912080645561218
    2. ':
' → logprob: -1.0662081241607666
    3. ':' → logprob: -2.1912081241607666
    4. ',' → logprob: -3.6912081241607666
    5. '                       ' → logprob: -4.8162078857421875
    6. '               ' → logprob: -5.3162078857421875
    7. '                           ' → logprob: -6.8162078857421875
    8. ' if' → logprob: -7.4412078857421875
    9. '):
' → logprob: -7.8162078857421875
    10. '                               ' → logprob: -7.8162078857421875

Token 1854: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003480454906821251
    2. '                       ' → logprob: -6.253480434417725
    3. '               ' → logprob: -6.878480434417725
    4. '                           ' → logprob: -8.878480911254883
    5. '                               ' → logprob: -9.503480911254883
    6. '```' → logprob: -9.503480911254883
    7. '                ' → logprob: -10.003480911254883
    8. '                    ' → logprob: -10.503480911254883
    9. '                  ' → logprob: -10.503480911254883
    10. '           ' → logprob: -10.878480911254883

Token 1855: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22636567056179047
    2. 'new' → logprob: -2.226365566253662
    3. '                       ' → logprob: -3.101365566253662
    4. '                   ' → logprob: -3.351365566253662
    5. 'pos' → logprob: -5.351365566253662
    6. ' if' → logprob: -5.601365566253662
    7. 'next' → logprob: -6.101365566253662
    8. '```' → logprob: -6.351365566253662
    9. '#' (adapté à ' #') → logprob: -7.726365566253662
    10. 'x' → logprob: -8.10136604309082

Token 1856: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05755072459578514
    2. '                   ' → logprob: -3.5575506687164307
    3. 'new' → logprob: -3.6825506687164307
    4. 'pos' → logprob: -7.05755090713501
    5. ' if' → logprob: -7.93255090713501
    6. '```' → logprob: -8.182550430297852
    7. '                       ' → logprob: -8.432550430297852
    8. '#' → logprob: -8.807550430297852
    9. 'next' → logprob: -9.432550430297852
    10. '
' → logprob: -9.432550430297852

Token 1857: ' will' (ID: 738)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3187084496021271
    2. 'if' → logprob: -1.8187084197998047
    3. '                       ' → logprob: -2.5687084197998047
    4. '#' → logprob: -3.9437084197998047
    5. 'check' → logprob: -5.818708419799805
    6. '                     ' → logprob: -7.068708419799805
    7. 'need' → logprob: -7.068708419799805
    8. '```' → logprob: -7.068708419799805
    9. 'must' → logprob: -7.193708419799805
    10. 'have' → logprob: -7.193708419799805

Token 1858: ' start' (ID: 1604)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6853877305984497
    2. '#' → logprob: -2.18538761138916
    3. 'if' → logprob: -2.18538761138916
    4. 'try' → logprob: -2.56038761138916
    5. 'move' → logprob: -3.06038761138916
    6. 'continue' → logprob: -3.31038761138916
    7. '                   ' → logprob: -3.81038761138916
    8. ' check' → logprob: -3.81038761138916
    9. 'calculate' → logprob: -4.18538761138916
    10. '                       ' → logprob: -4.81038761138916

Token 1859: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.18956302106380463
    2. 'from' → logprob: -2.689563035964966
    3. 'pos' → logprob: -3.064563035964966
    4. 'position' → logprob: -3.314563035964966
    5. '                   ' → logprob: -5.189562797546387
    6. '                       ' → logprob: -5.314562797546387
    7. ' at' → logprob: -5.939562797546387
    8. '(' → logprob: -6.189562797546387
    9. 'new' → logprob: -6.189562797546387
    10. 'on' → logprob: -7.564562797546387

Token 1860: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0110578536987305
    2. 'new' → logprob: -1.1360578536987305
    3. '0' → logprob: -2.0110578536987305
    4. 'n' → logprob: -2.5110578536987305
    5. 'ns' → logprob: -3.0110578536987305
    6. 'nd' → logprob: -3.6360578536987305
    7. '(n' → logprob: -4.5110578536987305
    8. '(ns' → logprob: -5.3860578536987305
    9. '(new' → logprob: -5.7610578536987305
    10. '(nd' → logprob: -5.8860578536987305

Token 1861: ' endpoint' (ID: 29703)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42282354831695557
    2. 'new' → logprob: -1.7978235483169556
    3. '0' → logprob: -2.297823429107666
    4. 'ns' → logprob: -2.672823429107666
    5. 'nd' → logprob: -5.297823429107666
    6. 'end' → logprob: -7.297823429107666
    7. '(' → logprob: -7.297823429107666
    8. '{' → logprob: -7.922823429107666
    9. '{
' → logprob: -7.922823429107666
    10. 'start' → logprob: -8.047823905944824

Token 1862: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40901532769203186
    2. ' if' → logprob: -2.034015417098999
    3. ',' → logprob: -2.909015417098999
    4. ' (' → logprob: -3.034015417098999
    5. ' of' → logprob: -3.534015417098999
    6. '                       ' → logprob: -3.784015417098999
    7. ' at' → logprob: -4.15901517868042
    8. '(' → logprob: -4.90901517868042
    9. ' with' → logprob: -5.15901517868042
    10. ' on' → logprob: -5.90901517868042

Token 1863: ' new' (ID: 620)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.17951880395412445
    2. 'new' → logprob: -2.554518699645996
    3. ' ns' → logprob: -2.929518699645996
    4. 'the' → logprob: -4.179518699645996
    5. ' new' → logprob: -4.304518699645996
    6. ' the' → logprob: -5.929518699645996
    7. 'street' → logprob: -7.679518699645996
    8. '(ns' → logprob: -7.804518699645996
    9. '```' → logprob: -8.179518699645996
    10. '[' → logprob: -9.179518699645996

Token 1864: ' street' (ID: 12901)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.8394182324409485
    2. 'street' → logprob: -0.8394182324409485
    3. 'ns' → logprob: -2.3394181728363037
    4. ' street' → logprob: -4.089418411254883
    5. 'st' → logprob: -5.339418411254883
    6. 'sd' → logprob: -5.589418411254883
    7. 'stre' → logprob: -5.714418411254883
    8. '```' → logprob: -6.464418411254883
    9. ' sid' → logprob: -6.839418411254883
    10. ' ns' → logprob: -6.839418411254883

Token 1865: ' that' (ID: 484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0690566822886467
    2. ' (' → logprob: -3.444056749343872
    3. ',' → logprob: -4.319056510925293
    4. ' if' → logprob: -4.944056510925293
    5. '                       ' → logprob: -5.819056510925293
    6. '(' → logprob: -5.944056510925293
    7. '...' → logprob: -6.069056510925293
    8. ':' → logprob: -6.944056510925293
    9. '.' → logprob: -7.319056510925293
    10. ' with' → logprob: -7.819056510925293

Token 1866: ' connects' (ID: 47599)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8019439578056335
    2. 'matches' → logprob: -2.0519440174102783
    3. ' corresponds' → logprob: -2.0519440174102783
    4. ' matches' → logprob: -2.5519440174102783
    5. 'is' → logprob: -2.6769440174102783
    6. '```' → logprob: -3.3019440174102783
    7. ' nd' → logprob: -4.301943778991699
    8. 'op' → logprob: -4.426943778991699
    9. ' opposite' → logprob: -4.551943778991699
    10. '0' → logprob: -4.801943778991699

Token 1867: ' here' (ID: 2105)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.49258220195770264
    2. ' to' → logprob: -1.8675822019577026
    3. '(s' → logprob: -2.742582321166992
    4. '(' → logprob: -3.242582321166992
    5. 'here' → logprob: -3.617582321166992
    6. 'there' → logprob: -3.617582321166992
    7. 's' → logprob: -4.117582321166992
    8. 'the' → logprob: -4.242582321166992
    9. ')' → logprob: -4.617582321166992
    10. ',' → logprob: -5.117582321166992

Token 1868: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005304077640175819
    2. '                    ' → logprob: -6.505303859710693
    3. '                       ' → logprob: -7.005303859710693
    4. '<|end|>' → logprob: -7.505303859710693
    5. '				' → logprob: -7.630303859710693
    6. ' (' → logprob: -7.630303859710693
    7. '...' → logprob: -8.630304336547852
    8. '               ' → logprob: -8.755304336547852
    9. '(' → logprob: -8.880304336547852
    10. '                  ' → logprob: -9.255304336547852

Token 1869: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10631679743528366
    2. '                       ' → logprob: -2.3563168048858643
    3. '                    ' → logprob: -6.731316566467285
    4. '```' → logprob: -6.856316566467285
    5. ' (' → logprob: -7.231316566467285
    6. '                           ' → logprob: -7.481316566467285
    7. '                        
' → logprob: -7.481316566467285
    8. ':' → logprob: -7.856316566467285
    9. ',' → logprob: -8.231316566467285
    10. '(' → logprob: -8.356316566467285

Token 1870: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1806347370147705
    2. 'if' → logprob: -1.9306347370147705
    3. 'pos' → logprob: -4.555634498596191
    4. 'start' → logprob: -5.680634498596191
    5. 'new' → logprob: -5.930634498596191
    6. ' if' → logprob: -6.555634498596191
    7. '```' → logprob: -7.430634498596191
    8. 'position' → logprob: -7.680634498596191
    9. '
' → logprob: -7.805634498596191
    10. '                       ' → logprob: -8.555634498596191

Token 1871: ' position' (ID: 4010)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3573269248008728
    2. '                   ' → logprob: -1.6073269844055176
    3. 'pos' → logprob: -2.8573269844055176
    4. ' if' → logprob: -3.9823269844055176
    5. 'start' → logprob: -4.232326984405518
    6. 'new' → logprob: -5.607326984405518
    7. '```' → logprob: -5.982326984405518
    8. 'position' → logprob: -6.607326984405518
    9. '#' → logprob: -7.982326984405518
    10. 'point' → logprob: -8.60732650756836

Token 1872: ' at' (ID: 540)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.4532815217971802
    2. '=' → logprob: -1.0782815217971802
    3. ' =' → logprob: -3.9532814025878906
    4. 'along' → logprob: -5.453281402587891
    5. 'al' → logprob: -8.32828140258789
    6. '_on' → logprob: -8.45328140258789
    7. '_at' → logprob: -9.45328140258789
    8. '```' → logprob: -9.82828140258789
    9. 'new' → logprob: -10.07828140258789
    10. ' along' → logprob: -10.70328140258789

Token 1873: ' new' (ID: 620)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16515561938285828
    2. 'n' → logprob: -2.0401556491851807
    3. 'new' → logprob: -4.290155410766602
    4. 'ns' → logprob: -5.165155410766602
    5. '(' → logprob: -7.165155410766602
    6. '   ' → logprob: -7.790155410766602
    7. ' ' → logprob: -8.415155410766602
    8. ' n' → logprob: -8.540155410766602
    9. 'nd' → logprob: -8.665155410766602
    10. '
' → logprob: -9.290155410766602

Token 1874: ' street' (ID: 12901)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.5541607737541199
    2. 'street' → logprob: -1.5541608333587646
    3. 'ns' → logprob: -1.9291608333587646
    4. '_end' → logprob: -4.4291605949401855
    5. 'st' → logprob: -4.8041605949401855
    6. 'x' → logprob: -5.0541605949401855
    7. '_x' → logprob: -5.4291605949401855
    8. 'side' → logprob: -5.8041605949401855
    9. 'xx' → logprob: -6.0541605949401855
    10. '_st' → logprob: -6.0541605949401855

Token 1875: ' depends' (ID: 20102)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28313887119293213
    2. ' =' → logprob: -1.4081388711929321
    3. '_al' → logprob: -6.658138751983643
    4. '0' → logprob: -8.0331392288208
    5. 'new' → logprob: -9.0331392288208
    6. '```' → logprob: -9.4081392288208
    7. ')' → logprob: -9.9081392288208
    8. '_new' → logprob: -10.4081392288208
    9. 'if' → logprob: -10.5331392288208
    10. ',' → logprob: -11.1581392288208

Token 1876: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.08044864237308502
    2. ' on' → logprob: -2.580448627471924
    3. 'if' → logprob: -7.205448627471924
    4. '=' → logprob: -7.205448627471924
    5. ' if' → logprob: -10.205449104309082
    6. '	on' → logprob: -11.830449104309082
    7. '(' → logprob: -12.080449104309082
    8. ' =' → logprob: -12.205449104309082
    9. 'ont' → logprob: -13.205449104309082
    10. '=(' → logprob: -13.330449104309082

Token 1877: ' which' (ID: 1118)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0746496170759201
    2. ' n' → logprob: -3.1996495723724365
    3. '1' → logprob: -4.574649810791016
    4. '(' → logprob: -4.824649810791016
    5. '0' → logprob: -5.074649810791016
    6. 'new' → logprob: -5.449649810791016
    7. ' (' → logprob: -7.074649810791016
    8. ' ' → logprob: -7.699649810791016
    9. ' new' → logprob: -7.949649810791016
    10. '(n' → logprob: -8.324649810791016

Token 1878: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04596753790974617
    2. ' end' → logprob: -4.1709675788879395
    3. 'side' → logprob: -4.2959675788879395
    4. '_end' → logprob: -5.2959675788879395
    5. 'direction' → logprob: -5.5459675788879395
    6. 'endpoint' → logprob: -5.6709675788879395
    7. 'point' → logprob: -7.0459675788879395
    8. ' side' → logprob: -7.9209675788879395
    9. 'n' → logprob: -7.9209675788879395
    10. 'way' → logprob: -8.045967102050781

Token 1879: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.12679123878479
    2. ' of' → logprob: -1.25179123878479
    3. '                   ' → logprob: -1.87679123878479
    4. ' (' → logprob: -2.75179123878479
    5. 'if' → logprob: -2.87679123878479
    6. '(' → logprob: -3.25179123878479
    7. ' is' → logprob: -3.75179123878479
    8. ':' → logprob: -4.751791000366211
    9. '                       ' → logprob: -4.876791000366211
    10. 'of' → logprob: -5.126791000366211

Token 1880: ' connected' (ID: 12079)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6591120362281799
    2. '0' → logprob: -1.1591119766235352
    3. '1' → logprob: -2.784111976623535
    4. '(' → logprob: -3.159111976623535
    5. ' n' → logprob: -3.909111976623535
    6. 'connected' → logprob: -4.409111976623535
    7. ' connected' → logprob: -4.534111976623535
    8. '(n' → logprob: -4.909111976623535
    9. ' (' → logprob: -5.159111976623535
    10. '   ' → logprob: -5.659111976623535

Token 1881: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6170946359634399
    2. '<|end|>' → logprob: -2.1170945167541504
    3. '                       ' → logprob: -2.9920945167541504
    4. '                    ' → logprob: -3.1170945167541504
    5. ':' → logprob: -3.2420945167541504
    6. '(' → logprob: -3.7420945167541504
    7. '[' → logprob: -3.8670945167541504
    8. '                           ' → logprob: -4.11709451675415
    9. '                               ' → logprob: -4.61709451675415
    10. ' (' → logprob: -4.61709451675415

Token 1882: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003225837368518114
    2. '                       ' → logprob: -6.378225803375244
    3. '```' → logprob: -7.878225803375244
    4. '               ' → logprob: -8.128226280212402
    5. '                    ' → logprob: -9.003226280212402
    6. '				' → logprob: -9.253226280212402
    7. 'if' → logprob: -9.253226280212402
    8. ' if' → logprob: -9.253226280212402
    9. '                  ' → logprob: -9.628226280212402
    10. '                               ' → logprob: -10.253226280212402

Token 1883: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8927143216133118
    2. ' if' → logprob: -1.142714262008667
    3. '                   ' → logprob: -1.642714262008667
    4. 'pos' → logprob: -2.892714262008667
    5. 'new' → logprob: -4.392714500427246
    6. '```' → logprob: -5.142714500427246
    7. ' new' → logprob: -6.392714500427246
    8. 'position' → logprob: -7.017714500427246
    9. '                       ' → logprob: -7.267714500427246
    10. ' pos' → logprob: -7.892714500427246

Token 1884: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026799239218235016
    2. ' n' → logprob: -3.651799201965332
    3. '   ' → logprob: -8.526799201965332
    4. 'not' → logprob: -9.401799201965332
    5. 'ns' → logprob: -9.901799201965332
    6. '(n' → logprob: -9.901799201965332
    7. 'new' → logprob: -10.276799201965332
    8. ' not' → logprob: -11.276799201965332
    9. '                   ' → logprob: -11.651799201965332
    10. 'n't' → logprob: -12.089299201965332

Token 1885: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00014096579980105162
    2. 'end' → logprob: -8.875141143798828
    3. 'sid' → logprob: -14.875141143798828
    4. '_' → logprob: -15.750141143798828
    5. '_END' → logprob: -16.250141143798828
    6. 'id' → logprob: -16.500141143798828
    7. ''end' → logprob: -16.500141143798828
    8. '```' → logprob: -16.625141143798828
    9. 's' → logprob: -16.750141143798828
    10. '_id' → logprob: -17.000141143798828

Token 1886: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -7.064297824399546e-05
    2. 'flag' → logprob: -10.750070571899414
    3. '_FLAG' → logprob: -11.000070571899414
    4. 'Flag' → logprob: -11.750070571899414
    5. '```' → logprob: -12.000070571899414
    6. '_flags' → logprob: -12.250070571899414
    7. '_f' → logprob: -12.750070571899414
    8. '_' → logprob: -12.875070571899414
    9. '_point' → logprob: -13.375070571899414
    10. ' _' → logprob: -14.125070571899414

Token 1887: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42881035804748535
    2. '==' → logprob: -1.0538103580474854
    3. '0' → logprob: -9.928810119628906
    4. '[' → logprob: -11.178810119628906
    5. ']==' → logprob: -11.428810119628906
    6. '==
' → logprob: -11.803810119628906
    7. '	' → logprob: -12.053810119628906
    8. ')==' → logprob: -12.178810119628906
    9. '=' → logprob: -12.553810119628906
    10. '()==' → logprob: -12.553810119628906

Token 1888: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019300628919154406
    2. '1' → logprob: -6.251930236816406
    3. ' ' → logprob: -13.501930236816406
    4. '   ' → logprob: -16.501930236816406
    5. '۰' → logprob: -19.501930236816406
    6. '```' → logprob: -19.564430236816406
    7. '=' → logprob: -19.626930236816406
    8. '[' → logprob: -19.876930236816406
    9. '`' → logprob: -19.939430236816406
    10. '#' → logprob: -20.064430236816406

Token 1889: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197262182831764
    2. '1' → logprob: -2.8119726181030273
    3. ' ' → logprob: -12.311972618103027
    4. '   ' → logprob: -14.936972618103027
    5. '```' → logprob: -16.311973571777344
    6. '=' → logprob: -17.749473571777344
    7. '[' → logprob: -17.936973571777344
    8. '  ' → logprob: -18.624473571777344
    9. '
' → logprob: -18.686973571777344
    10. '	' → logprob: -19.061973571777344

Token 1890: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03005269169807434
    2. ':' → logprob: -3.530052661895752
    3. '):
' → logprob: -9.15505313873291
    4. '==' → logprob: -10.03005313873291
    5. '                       ' → logprob: -10.15505313873291
    6. ':
' → logprob: -10.40505313873291
    7. ',' → logprob: -10.53005313873291
    8. '0' → logprob: -11.03005313873291
    9. '       ' → logprob: -11.90505313873291
    10. ':

' → logprob: -12.15505313873291

Token 1891: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4177550971508026
    2. ':
' → logprob: -1.792755126953125
    3. '0' → logprob: -1.917755126953125
    4. ',' → logprob: -4.667755126953125
    5. ':' → logprob: -4.792755126953125
    6. '(' → logprob: -6.042755126953125
    7. ' ==' → logprob: -6.417755126953125
    8. '):
' → logprob: -6.542755126953125
    9. 'new' → logprob: -6.917755126953125
    10. '                   ' → logprob: -7.292755126953125

Token 1892: ' n' (ID: 297)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.307156503200531
    2. 'new' → logprob: -1.6821565628051758
    3. '0' → logprob: -2.557156562805176
    4. 'start' → logprob: -8.182156562805176
    5. 'npos' → logprob: -8.307156562805176
    6. 'position' → logprob: -9.057156562805176
    7. 'n' (adapté à ' n') → logprob: -9.057156562805176
    8. 'next' → logprob: -9.307156562805176
    9. '```' → logprob: -10.432156562805176
    10. ' new' → logprob: -10.557156562805176

Token 1893: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2815696895122528
    2. '_pos' → logprob: -1.4065697193145752
    3. 'ew' → logprob: -8.531569480895996
    4. 'd' → logprob: -10.031569480895996
    5. 'x' → logprob: -10.156569480895996
    6. '_d' → logprob: -10.656569480895996
    7. '_position' → logprob: -11.156569480895996
    8. 'id' → logprob: -11.281569480895996
    9. 'Pos' → logprob: -11.531569480895996
    10. '_id' → logprob: -11.531569480895996

Token 1894: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858986660838127
    2. ' =' → logprob: -3.0485899448394775
    3. '0' → logprob: -13.048589706420898
    4. '=n' → logprob: -15.798589706420898
    5. ')' → logprob: -16.6735897064209
    6. '<|end|>' → logprob: -17.1735897064209
    7. ',' → logprob: -17.2985897064209
    8. '＝' → logprob: -17.4235897064209
    9. '=int' → logprob: -17.5485897064209
    10. ':' → logprob: -17.5485897064209

Token 1895: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -18.5
    5. '000' → logprob: -19.75
    6. '00' → logprob: -19.875
    7. '                   ' → logprob: -20.125
    8. '۰' → logprob: -20.25
    9. '[' → logprob: -20.375
    10. '`' → logprob: -20.75

Token 1896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. 'new' → logprob: -16.0
    4. 'length' → logprob: -17.375
    5. '   ' → logprob: -17.5
    6. 'ns' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. 'n' → logprob: -18.625
    9. '(' → logprob: -19.3125
    10. '۰' → logprob: -19.3125

Token 1897: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2745230495929718
    2. '<|end|>' → logprob: -1.6495230197906494
    3. 'else' → logprob: -4.2745232582092285
    4. '                       ' → logprob: -4.3995232582092285
    5. '
' → logprob: -4.8995232582092285
    6. ' else' → logprob: -5.5245232582092285
    7. '<|end|>' → logprob: -5.5245232582092285
    8. '                        
' → logprob: -6.1495232582092285
    9. '```' → logprob: -6.7745232582092285
    10. '                           ' → logprob: -7.6495232582092285

Token 1898: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8999345898628235
    2. '<|end|>' → logprob: -1.1499345302581787
    3. '```' → logprob: -2.3999345302581787
    4. '                   ' → logprob: -2.6499345302581787
    5. ' else' → logprob: -3.0249345302581787
    6. 'else' → logprob: -3.3999345302581787
    7. '                               ' → logprob: -5.024934768676758
    8. '                           ' → logprob: -5.274934768676758
    9. '                        
' → logprob: -5.524934768676758
    10. ')' → logprob: -5.774934768676758

Token 1899: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9476438164710999
    2. 'else' → logprob: -0.9476438164710999
    3. 'if' → logprob: -2.447643756866455
    4. '#' → logprob: -2.947643756866455
    5. 'forward' → logprob: -3.822643756866455
    6. 'new' → logprob: -4.197643756866455
    7. '                       ' → logprob: -4.697643756866455
    8. 'continue' → logprob: -4.947643756866455
    9. '                   ' → logprob: -5.197643756866455
    10. 'next' → logprob: -5.322643756866455

Token 1900: 'forward' (ID: 20233)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0009355206857435405
    2. 'new' → logprob: -7.8759355545043945
    3. 'dx' → logprob: -8.875935554504395
    4. 'npos' → logprob: -9.125935554504395
    5. 'os' → logprob: -9.375935554504395
    6. 'dist' → logprob: -10.250935554504395
    7. '_pos' → logprob: -10.250935554504395
    8. 'n' → logprob: -10.625935554504395
    9. 'x' → logprob: -10.875935554504395
    10. 'dir' → logprob: -11.125935554504395

Token 1901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049591146409511566
    2. ' =' → logprob: -3.049591064453125
    3. '=True' → logprob: -6.924591064453125
    4. '==' → logprob: -11.799591064453125
    5. '=False' → logprob: -11.799591064453125
    6. ')' → logprob: -13.174591064453125
    7. '<|end|>' → logprob: -14.299591064453125
    8. ':' → logprob: -14.549591064453125
    9. '=None' → logprob: -15.299591064453125
    10. ' ==' → logprob: -15.424591064453125

Token 1902: ' (' (ID: 350)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001507405104348436
    2. '(True' → logprob: -9.250150680541992
    3. ' True' → logprob: -9.875150680541992
    4. 'False' → logprob: -13.500150680541992
    5. 'nd' → logprob: -14.875150680541992
    6. '(nd' → logprob: -14.875150680541992
    7. '   ' → logprob: -15.250150680541992
    8. 'n' → logprob: -15.625150680541992
    9. '(' → logprob: -15.625150680541992
    10. '1' → logprob: -15.875150680541992

Token 1903: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.005866101942956448
    2. '(nd' → logprob: -5.380866050720215
    3. 'n' → logprob: -7.255866050720215
    4. '(' → logprob: -8.255866050720215
    5. '(n' → logprob: -9.380866050720215
    6. '1' → logprob: -9.380866050720215
    7. ' nd' → logprob: -10.255866050720215
    8. 'True' → logprob: -10.505866050720215
    9. 'not' → logprob: -12.005866050720215
    10. '   ' → logprob: -12.693366050720215

Token 1904: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.6326349973678589
    2. 'x' → logprob: -0.7576349973678589
    3. 'dx' → logprob: -11.382635116577148
    4. 'd' → logprob: -12.007635116577148
    5. '``' → logprob: -12.632635116577148
    6. '```' → logprob: -12.757635116577148
    7. '
' → logprob: -13.382635116577148
    8. 'xxx' → logprob: -13.945135116577148
    9. '_x' → logprob: -14.007635116577148
    10. '`' → logprob: -14.445135116577148

Token 1905: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023361479863524437
    2. ' ==' → logprob: -3.7733614444732666
    3. ')==' → logprob: -9.898361206054688
    4. ')' → logprob: -10.648361206054688
    5. '=' → logprob: -11.523361206054688
    6. '==
' → logprob: -11.898361206054688
    7. '```' → logprob: -11.898361206054688
    8. ',' → logprob: -12.398361206054688
    9. '<|end|>' → logprob: -12.398361206054688
    10. '[' → logprob: -12.648361206054688

Token 1906: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5235446095466614
    2. 'nd' → logprob: -0.8985446095466614
    3. ' nd' → logprob: -8.398544311523438
    4. ' ns' → logprob: -8.773544311523438
    5. 'n' → logprob: -11.398544311523438
    6. 'nds' → logprob: -11.648544311523438
    7. '   ' → logprob: -12.148544311523438
    8. '(ns' → logprob: -12.898544311523438
    9. ' ' → logprob: -13.398544311523438
    10. '  ' → logprob: -13.398544311523438

Token 1907: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.005653471685945988
    2. ''' → logprob: -5.630653381347656
    3. ''d' → logprob: -6.255653381347656
    4. ''s' → logprob: -9.630653381347656
    5. '[' → logprob: -10.505653381347656
    6. 'dx' → logprob: -11.130653381347656
    7. '"' → logprob: -12.255653381347656
    8. '["' → logprob: -12.505653381347656
    9. '`' → logprob: -12.630653381347656
    10. '[
' → logprob: -13.380653381347656

Token 1908: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0013442812487483025
    2. ''d' → logprob: -6.751344203948975
    3. ''' → logprob: -8.876344680786133
    4. '['' → logprob: -11.251344680786133
    5. ' dx' → logprob: -11.751344680786133
    6. ''s' → logprob: -11.751344680786133
    7. '_dx' → logprob: -12.876344680786133
    8. '   ' → logprob: -14.126344680786133
    9. ' ' → logprob: -14.751344680786133
    10. '(dx' → logprob: -14.876344680786133

Token 1909: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.2187267392873764
    2. ' and' → logprob: -1.9687267541885376
    3. ''])' → logprob: -3.468726634979248
    4. 'and' → logprob: -3.843726634979248
    5. ''' → logprob: -5.968726634979248
    6. ''])
' → logprob: -7.218726634979248
    7. ']' → logprob: -8.218727111816406
    8. ')' → logprob: -8.468727111816406
    9. '')' → logprob: -8.593727111816406
    10. ''],' → logprob: -9.593727111816406

Token 1910: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25297191739082336
    2. 'and' → logprob: -1.502971887588501
    3. ')' → logprob: -7.00297212600708
    4. ')
' → logprob: -9.002971649169922
    5. '                           ' → logprob: -12.127971649169922
    6. '                            ' → logprob: -14.252971649169922
    7. '),' → logprob: -14.377971649169922
    8. '                               ' → logprob: -14.627971649169922
    9. '<|end|>' → logprob: -14.627971649169922
    10. '                       ' → logprob: -14.877971649169922

Token 1911: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -9.496052371105179e-05
    2. ' nd' → logprob: -9.50009536743164
    3. 'n' → logprob: -11.25009536743164
    4. '(nd' → logprob: -13.25009536743164
    5. '_nd' → logprob: -13.37509536743164
    6. '.nd' → logprob: -14.37509536743164
    7. 'ndry' → logprob: -14.50009536743164
    8. 'ndir' → logprob: -14.87509536743164
    9. 'ns' → logprob: -15.00009536743164
    10. '   ' → logprob: -15.12509536743164

Token 1912: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.013094703666865826
    2. 'y' → logprob: -4.513094902038574
    3. 'xx' → logprob: -6.513094902038574
    4. 'd' → logprob: -8.138094902038574
    5. 'x' → logprob: -9.138094902038574
    6. 'xy' → logprob: -10.013094902038574
    7. '	yy' → logprob: -10.388094902038574
    8. 'yyy' → logprob: -10.638094902038574
    9. 'dy' → logprob: -11.388094902038574
    10. '
' → logprob: -11.513094902038574

Token 1913: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47416946291923523
    2. ' ==' → logprob: -0.9741694927215576
    3. '=='' → logprob: -10.099169731140137
    4. '[' → logprob: -10.974169731140137
    5. '['' → logprob: -10.974169731140137
    6. '=' → logprob: -12.724169731140137
    7. '==-' → logprob: -12.849169731140137
    8. ')' → logprob: -13.224169731140137
    9. '   ' → logprob: -13.224169731140137
    10. '  ' → logprob: -14.099169731140137

Token 1914: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0015258101047948003
    2. ' ns' → logprob: -6.50152587890625
    3. '1' → logprob: -11.37652587890625
    4. 'nd' → logprob: -12.75152587890625
    5. '(ns' → logprob: -13.25152587890625
    6. '-' → logprob: -13.25152587890625
    7. 'n' → logprob: -13.75152587890625
    8. '-n' → logprob: -13.75152587890625
    9. ' ' → logprob: -14.00152587890625
    10. '	ns' → logprob: -14.25152587890625

Token 1915: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00021951000962872058
    2. ''' → logprob: -8.750219345092773
    3. '1' → logprob: -10.875219345092773
    4. ''d' → logprob: -11.875219345092773
    5. 'dy' → logprob: -12.000219345092773
    6. ''s' → logprob: -12.125219345092773
    7. '```' → logprob: -12.750219345092773
    8. '{'' → logprob: -13.500219345092773
    9. '[' → logprob: -13.625219345092773
    10. ''ny' → logprob: -13.750219345092773

Token 1916: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00017755765293259174
    2. ''' → logprob: -8.875177383422852
    3. '['' → logprob: -11.125177383422852
    4. ''d' → logprob: -11.500177383422852
    5. '   ' → logprob: -12.500177383422852
    6. ''s' → logprob: -13.875177383422852
    7. '')' → logprob: -14.250177383422852
    8. '-' → logprob: -14.250177383422852
    9. ''y' → logprob: -14.250177383422852
    10. '.dy' → logprob: -14.375177383422852

Token 1917: ''])
' (ID: 16733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25648513436317444
    2. ')
' → logprob: -2.2564852237701416
    3. '')' → logprob: -2.5064852237701416
    4. '')
' → logprob: -4.0064849853515625
    5. ''])' → logprob: -4.7564849853515625
    6. ')')
' → logprob: -5.1314849853515625
    7. ''])
' → logprob: -5.3814849853515625
    8. '})' → logprob: -7.2564849853515625
    9. '])' → logprob: -8.006484985351562
    10. '})
' → logprob: -8.131484985351562

Token 1918: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.44407063722610474
    2. '                       ' → logprob: -1.31907057762146
    3. '                           ' → logprob: -2.94407057762146
    4. '                               ' → logprob: -4.194070816040039
    5. ')' → logprob: -5.069070816040039
    6. '                        
' → logprob: -5.319070816040039
    7. '                        ' → logprob: -6.444070816040039
    8. '                   ' → logprob: -6.569070816040039
    9. ' ' → logprob: -6.694070816040039
    10. '``' → logprob: -6.819070816040039

Token 1919: ' else' (ID: 1203)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2704147398471832
    2. '                       ' → logprob: -2.1454148292541504
    3. ' else' → logprob: -3.2704148292541504
    4. '                   ' → logprob: -3.7704148292541504
    5. 'else' (adapté à ' else') → logprob: -3.8954148292541504
    6. '                           ' → logprob: -4.52041482925415
    7. '                               ' → logprob: -5.02041482925415
    8. '                        
' → logprob: -5.27041482925415
    9. '   ' → logprob: -5.89541482925415
    10. '                                           ' → logprob: -6.27041482925415

Token 1920: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24871553480625153
    2. ':
' → logprob: -2.24871563911438
    3. '                       ' → logprob: -2.37371563911438
    4. '{
' → logprob: -5.123715400695801
    5. '                   ' → logprob: -5.373715400695801
    6. '{' → logprob: -5.623715400695801
    7. ' =' → logprob: -5.623715400695801
    8. '=' → logprob: -6.748715400695801
    9. '<|end|>' → logprob: -7.623715400695801
    10. '```' → logprob: -7.998715400695801

Token 1921: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04446442052721977
    2. '                   ' → logprob: -3.669464349746704
    3. '               ' → logprob: -4.419464588165283
    4. '                        ' → logprob: -6.544464588165283
    5. '```' → logprob: -6.794464588165283
    6. 'n' → logprob: -7.169464588165283
    7. '                           ' → logprob: -7.294464588165283
    8. '                    ' → logprob: -8.044464111328125
    9. '                               ' → logprob: -8.044464111328125
    10. '           ' → logprob: -8.294464111328125

Token 1922: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018353741616010666
    2. ' n' → logprob: -4.1433539390563965
    3. '                       ' → logprob: -6.6433539390563965
    4. '                   ' → logprob: -7.3933539390563965
    5. 'npos' → logprob: -8.518353462219238
    6. '   ' → logprob: -9.643353462219238
    7. '```' → logprob: -9.768353462219238
    8. '               ' → logprob: -10.518353462219238
    9. '           ' → logprob: -11.518353462219238
    10. '``' → logprob: -11.643353462219238

Token 1923: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.8789383830153383e-05
    2. 'npos' → logprob: -11.625019073486328
    3. 'poss' → logprob: -12.750019073486328
    4. 'os' → logprob: -13.375019073486328
    5. 'forward' → logprob: -13.625019073486328
    6. '_pos' → logprob: -14.000019073486328
    7. '
' → logprob: -14.250019073486328
    8. '```' → logprob: -14.750019073486328
    9. 'dx' → logprob: -15.125019073486328
    10. 'x' → logprob: -15.500019073486328

Token 1924: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. '```' → logprob: -16.951414108276367
    4. ')' → logprob: -17.201414108276367
    5. '＝' → logprob: -17.326414108276367
    6. '=
' → logprob: -17.576414108276367
    7. '==' → logprob: -17.951414108276367
    8. '=n' → logprob: -18.201414108276367
    9. '=_' → logprob: -18.576414108276367
    10. ':' → logprob: -18.701414108276367

Token 1925: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0019307781476527452
    2. ' ns' → logprob: -6.2519307136535645
    3. '(ns' → logprob: -13.501931190490723
    4. '   ' → logprob: -14.876931190490723
    5. '	ns' → logprob: -15.001931190490723
    6. '_ns' → logprob: -17.126930236816406
    7. '  ' → logprob: -17.251930236816406
    8. '/ns' → logprob: -17.626930236816406
    9. ' ' → logprob: -17.751930236816406
    10. 'n' → logprob: -18.251930236816406

Token 1926: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0009306333377026021
    2. ''s' → logprob: -7.7509307861328125
    3. 'length' → logprob: -8.375930786132812
    4. ''' → logprob: -8.625930786132812
    5. '[length' → logprob: -9.750930786132812
    6. '[' → logprob: -11.625930786132812
    7. '   ' → logprob: -12.375930786132812
    8. '_length' → logprob: -12.750930786132812
    9. '{'' → logprob: -13.125930786132812
    10. ']['' → logprob: -13.375930786132812

Token 1927: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0021422896534204483
    2. ''' → logprob: -6.252142429351807
    3. '['' → logprob: -8.627141952514648
    4. ''l' → logprob: -11.502141952514648
    5. ''s' → logprob: -12.252141952514648
    6. ''end' → logprob: -12.377141952514648
    7. ''m' → logprob: -12.502141952514648
    8. ''id' → logprob: -13.377141952514648
    9. 'leng' → logprob: -13.377141952514648
    10. '[length' → logprob: -13.502141952514648

Token 1928: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4193574786186218
    2. '-' → logprob: -1.7943575382232666
    3. '']' → logprob: -2.4193575382232666
    4. '<|end|>' → logprob: -3.2943575382232666
    5. ' -' → logprob: -3.4193575382232666
    6. ']
' → logprob: -4.5443572998046875
    7. ']-' → logprob: -6.1693572998046875
    8. '']
' → logprob: -6.7943572998046875
    9. '}' → logprob: -6.9193572998046875
    10. '```' → logprob: -7.5443572998046875

Token 1929: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07583510130643845
    2. '<|end|>' → logprob: -3.2008349895477295
    3. ')' → logprob: -4.950835227966309
    4. '                           ' → logprob: -5.075835227966309
    5. '                       ' → logprob: -5.200835227966309
    6. ':' → logprob: -6.075835227966309
    7. '[' → logprob: -6.325835227966309
    8. '``' → logprob: -6.700835227966309
    9. ' =' → logprob: -6.700835227966309
    10. '<|end|>' → logprob: -7.325835227966309

Token 1930: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00018780550453811884
    2. ' n' → logprob: -9.250187873840332
    3. 'next' → logprob: -10.375187873840332
    4. '                   ' → logprob: -10.500187873840332
    5. 'nd' → logprob: -11.625187873840332
    6. '   ' → logprob: -12.375187873840332
    7. 'forward' → logprob: -12.750187873840332
    8. 'new' → logprob: -13.000187873840332
    9. '           ' → logprob: -13.125187873840332
    10. '               ' → logprob: -13.500187873840332

Token 1931: 'forward' (ID: 20233)
  Prédit: 'forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -6.988221684878226e-06
    2. 'pos' → logprob: -12.625006675720215
    3. '_forward' → logprob: -13.375006675720215
    4. 'for' → logprob: -13.750006675720215
    5. ' forward' → logprob: -14.875006675720215
    6. 'x' → logprob: -16.00000762939453
    7. '.forward' → logprob: -16.00000762939453
    8. 'Forward' → logprob: -16.25000762939453
    9. 'dx' → logprob: -16.50000762939453
    10. '```' → logprob: -16.75000762939453

Token 1932: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143049955368042
    2. '=' → logprob: -1.7014305591583252
    3. '=False' → logprob: -11.451430320739746
    4. '=True' → logprob: -11.951430320739746
    5. ')' → logprob: -17.826431274414062
    6. ' =
' → logprob: -18.076431274414062
    7. ':' → logprob: -18.076431274414062
    8. ',' → logprob: -18.326431274414062
    9. '=(' → logprob: -18.326431274414062
    10. ' ' → logprob: -18.326431274414062

Token 1933: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.13824081420898438
    2. 'not' → logprob: -3.1382408142089844
    3. '(not' → logprob: -3.2632408142089844
    4. 'False' → logprob: -4.388240814208984
    5. 'nd' → logprob: -4.513240814208984
    6. ' (' → logprob: -4.888240814208984
    7. '(n' → logprob: -5.013240814208984
    8. '(False' → logprob: -5.013240814208984
    9. ' not' → logprob: -6.388240814208984
    10. '(' → logprob: -8.138240814208984

Token 1934: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -5.288163083605468e-05
    2. 'not' → logprob: -10.750052452087402
    3. '(nd' → logprob: -10.875052452087402
    4. ' nd' → logprob: -12.500052452087402
    5. '   ' → logprob: -12.750052452087402
    6. '(' → logprob: -13.625052452087402
    7. 'n' → logprob: -14.250052452087402
    8. '           ' → logprob: -14.250052452087402
    9. '       ' → logprob: -14.750052452087402
    10. '
' → logprob: -14.750052452087402

Token 1935: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -14.000000953674316
    3. '
' → logprob: -16.000001907348633
    4. 'd' → logprob: -16.625001907348633
    5. '``' → logprob: -16.625001907348633
    6. '(xx' → logprob: -17.375001907348633
    7. '

' → logprob: -18.125001907348633
    8. '''' → logprob: -18.250001907348633
    9. '**' → logprob: -18.375001907348633
    10. '`' → logprob: -18.375001907348633

Token 1936: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0788961797952652
    2. '==' → logprob: -2.5788962841033936
    3. '==-' → logprob: -13.328896522521973
    4. ' !=' → logprob: -13.828896522521973
    5. '==
' → logprob: -13.953896522521973
    6. ')==' → logprob: -14.203896522521973
    7. '```' → logprob: -14.328896522521973
    8. ']==' → logprob: -14.703896522521973
    9. '==(' → logprob: -15.453896522521973
    10. ')' → logprob: -15.578896522521973

Token 1937: ' -' (ID: 533)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.016139237210154533
    2. ' ns' → logprob: -4.141139030456543
    3. '-' → logprob: -10.766139030456543
    4. '-n' → logprob: -10.766139030456543
    5. 's' → logprob: -11.016139030456543
    6. '(ns' → logprob: -11.391139030456543
    7. '/ns' → logprob: -11.766139030456543
    8. '	ns' → logprob: -12.141139030456543
    9. 'n' → logprob: -12.391139030456543
    10. ' ' → logprob: -12.766139030456543

Token 1938: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0004375830467324704
    2. ' ns' → logprob: -7.8754377365112305
    3. 'nd' → logprob: -10.12543773651123
    4. '1' → logprob: -11.62543773651123
    5. '(ns' → logprob: -12.12543773651123
    6. '	ns' → logprob: -13.87543773651123
    7. '_ns' → logprob: -14.87543773651123
    8. '   ' → logprob: -15.25043773651123
    9. 's' → logprob: -15.25043773651123
    10. ' nd' → logprob: -15.75043773651123

Token 1939: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00826006568968296
    2. 'dx' → logprob: -5.258260250091553
    3. ''' → logprob: -5.883260250091553
    4. ''s' → logprob: -9.883259773254395
    5. ''d' → logprob: -10.008259773254395
    6. '1' → logprob: -10.133259773254395
    7. '_dx' → logprob: -10.508259773254395
    8. '[' → logprob: -11.008259773254395
    9. 'ds' → logprob: -11.133259773254395
    10. '`' → logprob: -11.633259773254395

Token 1940: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2026471346616745
    2. ''' → logprob: -2.3276472091674805
    3. ''d' → logprob: -3.2026472091674805
    4. ''s' → logprob: -3.5776472091674805
    5. '['' → logprob: -4.2026472091674805
    6. 's' → logprob: -7.0776472091674805
    7. 'ds' → logprob: -7.4526472091674805
    8. 'ns' → logprob: -8.07764720916748
    9. 'sx' → logprob: -9.07764720916748
    10. 'sd' → logprob: -9.20264720916748

Token 1941: '']' (ID: 1089)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04318530112504959
    2. 'and' → logprob: -3.168185234069824
    3. ')' → logprob: -8.918185234069824
    4. ',' → logprob: -10.418185234069824
    5. ']' → logprob: -11.293185234069824
    6. '```' → logprob: -13.168185234069824
    7. '<|end|>' → logprob: -13.543185234069824
    8. '']' → logprob: -14.168185234069824
    9. ' ' → logprob: -14.168185234069824
    10. '0' → logprob: -14.168185234069824

Token 1942: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197754293680191
    2. 'and' → logprob: -2.8119776248931885
    3. ')' → logprob: -12.06197738647461
    4. ',' → logprob: -12.81197738647461
    5. '0' → logprob: -14.93697738647461
    6. ' ' → logprob: -15.18697738647461
    7. '<|end|>' → logprob: -15.81197738647461
    8. '[' → logprob: -16.06197738647461
    9. '1' → logprob: -16.31197738647461
    10. '```' → logprob: -16.43697738647461

Token 1943: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0033602239564061165
    2. ' nd' → logprob: -5.753360271453857
    3. 'n' → logprob: -9.0033597946167
    4. '-' → logprob: -10.8783597946167
    5. '_nd' → logprob: -11.5033597946167
    6. '-n' → logprob: -11.6283597946167
    7. '   ' → logprob: -12.0033597946167
    8. '(nd' → logprob: -12.6283597946167
    9. ' -' → logprob: -13.2533597946167
    10. '  ' → logprob: -13.2533597946167

Token 1944: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.0005803157109767199
    2. '-' → logprob: -7.625580310821533
    3. 'dy' → logprob: -11.000580787658691
    4. 'iyy' → logprob: -11.375580787658691
    5. '	yy' → logprob: -11.500580787658691
    6. 'ny' → logprob: -11.625580787658691
    7. ' -' → logprob: -11.875580787658691
    8. 'y' → logprob: -12.375580787658691
    9. 'xx' → logprob: -12.500580787658691
    10. 'yd' → logprob: -12.750580787658691

Token 1945: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2276737093925476
    2. '==' → logprob: -1.6026737689971924
    3. '==-' → logprob: -6.102673530578613
    4. '==
' → logprob: -12.227673530578613
    5. ')==' → logprob: -12.477673530578613
    6. '1' → logprob: -13.102673530578613
    7. '==(' → logprob: -13.477673530578613
    8. ' ' → logprob: -13.602673530578613
    9. '[' → logprob: -13.727673530578613
    10. ']==' → logprob: -13.852673530578613

Token 1946: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7465575933456421
    2. ' -' → logprob: -0.9965575933456421
    3. '-n' → logprob: -1.871557593345642
    4. '-s' → logprob: -6.496557712554932
    5. '-ng' → logprob: -7.871557712554932
    6. '-sn' → logprob: -8.496557235717773
    7. '-ms' → logprob: -8.496557235717773
    8. '-nos' → logprob: -8.871557235717773
    9. '-%' → logprob: -9.496557235717773
    10. '-xs' → logprob: -9.621557235717773

Token 1947: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.00010115911572938785
    2. 'nd' → logprob: -9.625101089477539
    3. ' ns' → logprob: -10.625101089477539
    4. 's' → logprob: -12.750101089477539
    5. '(ns' → logprob: -13.000101089477539
    6. 'n' → logprob: -13.125101089477539
    7. '1' → logprob: -14.125101089477539
    8. '	ns' → logprob: -14.625101089477539
    9. '_ns' → logprob: -14.750101089477539
    10. '/ns' → logprob: -15.000101089477539

Token 1948: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0012060654116794467
    2. ''' → logprob: -7.751205921173096
    3. ''s' → logprob: -8.126206398010254
    4. 'dy' → logprob: -9.126206398010254
    5. 'yy' → logprob: -9.126206398010254
    6. ''ny' → logprob: -9.876206398010254
    7. '   ' → logprob: -10.251206398010254
    8. ''d' → logprob: -10.251206398010254
    9. '[' → logprob: -10.376206398010254
    10. 'ys' → logprob: -10.626206398010254

Token 1949: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002099773846566677
    2. 'dx' → logprob: -9.25020980834961
    3. '['' → logprob: -10.37520980834961
    4. 'ddy' → logprob: -11.25020980834961
    5. 'ds' → logprob: -11.50020980834961
    6. ''' → logprob: -11.50020980834961
    7. 'sy' → logprob: -11.62520980834961
    8. 'ny' → logprob: -12.00020980834961
    9. 'dd' → logprob: -12.00020980834961
    10. 'yy' → logprob: -12.62520980834961

Token 1950: ''])

' (ID: 57615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009268058463931084
    2. '])' → logprob: -5.134268283843994
    3. '})' → logprob: -6.134268283843994
    4. ')
' → logprob: -7.759268283843994
    5. ''])' → logprob: -8.259267807006836
    6. '))' → logprob: -8.884267807006836
    7. ')}' → logprob: -9.759267807006836
    8. '0' → logprob: -9.884267807006836
    9. ')])' → logprob: -10.259267807006836
    10. '')' → logprob: -10.384267807006836

Token 1951: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8687212467193604
    2. '                       ' → logprob: -1.2437212467193604
    3. '                           ' → logprob: -2.3687212467193604
    4. '```' → logprob: -2.3687212467193604
    5. '                   ' → logprob: -3.3687212467193604
    6. '                               ' → logprob: -3.8687212467193604
    7. '):' → logprob: -4.493721008300781
    8. '<|end|>' → logprob: -4.618721008300781
    9. ')' → logprob: -5.243721008300781
    10. '):
' → logprob: -5.368721008300781

Token 1952: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5684563517570496
    2. '                   ' → logprob: -1.5684564113616943
    3. 'new' → logprob: -1.6934564113616943
    4. 'next' → logprob: -3.3184564113616943
    5. '                       ' → logprob: -6.818456172943115
    6. 'move' → logprob: -7.068456172943115
    7. ' if' → logprob: -7.318456172943115
    8. 'n' → logprob: -7.318456172943115
    9. '#' (adapté à ' #') → logprob: -7.568456172943115
    10. '```' → logprob: -8.318456649780273

Token 1953: ' Move' (ID: 25485)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.2663908004760742
    2. 'if' → logprob: -1.3913908004760742
    3. 'next' → logprob: -1.7663908004760742
    4. '                   ' → logprob: -2.266390800476074
    5. 'rem' → logprob: -2.516390800476074
    6. 'n' → logprob: -3.141390800476074
    7. 'move' → logprob: -3.516390800476074
    8. 'remain' → logprob: -4.516390800476074
    9. '#' → logprob: -5.141390800476074
    10. 'step' → logprob: -5.391390800476074

Token 1954: ' rem' (ID: 1662)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.08351194113492966
    2. 'n' → logprob: -3.8335118293762207
    3. 'forward' → logprob: -4.208511829376221
    4. 'new' → logprob: -4.333511829376221
    5. '(n' → logprob: -4.458511829376221
    6. 'Forward' → logprob: -5.333511829376221
    7. '```' → logprob: -5.833511829376221
    8. '
' → logprob: -5.958511829376221
    9. 'dist' → logprob: -6.583511829376221
    10. '                   ' → logprob: -6.583511829376221

Token 1955: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0028795339167118073
    2. '_pos' → logprob: -6.752879619598389
    3. '                   ' → logprob: -7.002879619598389
    4. 'pos' → logprob: -8.62787914276123
    5. 'dist' → logprob: -8.62787914276123
    6. '_' → logprob: -8.87787914276123
    7. '```' → logprob: -9.50287914276123
    8. '                    ' → logprob: -9.87787914276123
    9. 'Dist' → logprob: -10.25287914276123
    10. '_distance' → logprob: -10.50287914276123

Token 1956: ' along' (ID: 4251)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1339797973632812
    2. ' =' → logprob: -1.2589797973632812
    3. '<|end|>' → logprob: -1.5089797973632812
    4. '<|end|>' → logprob: -2.1339797973632812
    5. '=' → logprob: -4.508979797363281
    6. ',' → logprob: -4.883979797363281
    7. ')' → logprob: -5.008979797363281
    8. 'token' → logprob: -5.633979797363281
    9. '(token' → logprob: -6.008979797363281
    10. '_token' → logprob: -6.258979797363281

Token 1957: ' new' (ID: 620)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.003990542609244585
    2. 'nd' → logprob: -6.503990650177002
    3. ' ns' → logprob: -6.878990650177002
    4. 'n' → logprob: -7.378990650177002
    5. '(ns' → logprob: -7.378990650177002
    6. 'new' → logprob: -8.753990173339844
    7. '                   ' → logprob: -10.878990173339844
    8. ' nd' → logprob: -11.878990173339844
    9. '	ns' → logprob: -12.503990173339844
    10. '(nd' → logprob: -12.878990173339844

Token 1958: ' street' (ID: 12901)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6265299916267395
    2. 'street' → logprob: -0.8765299916267395
    3. 'sid' → logprob: -4.126530170440674
    4. 'nd' → logprob: -5.251530170440674
    5. '[' → logprob: -5.501530170440674
    6. 'st' → logprob: -5.751530170440674
    7. ' ns' → logprob: -6.126530170440674
    8. '`' → logprob: -6.126530170440674
    9. '```' → logprob: -6.126530170440674
    10. 'n' → logprob: -6.876530170440674

Token 1959: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031613188330084085
    2. '
' → logprob: -7.253161430358887
    3. 'new' → logprob: -7.378161430358887
    4. ' new' → logprob: -7.378161430358887
    5. ',' → logprob: -8.128161430358887
    6. '               ' → logprob: -8.878161430358887
    7. '```' → logprob: -8.878161430358887
    8. 'n' → logprob: -9.378161430358887
    9. '                    
' → logprob: -9.503161430358887
    10. '<|end|>' → logprob: -9.628161430358887

Token 1960: ' direction' (ID: 9262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7892811894416809
    2. 'move' → logprob: -2.289281129837036
    3. 'True' → logprob: -2.414281129837036
    4. 'the' → logprob: -2.539281129837036
    5. '(' → logprob: -2.789281129837036
    6. 'new' → logprob: -3.164281129837036
    7. '1' → logprob: -3.414281129837036
    8. 'nd' → logprob: -3.414281129837036
    9. 'forward' → logprob: -4.164281368255615
    10. '(n' → logprob: -4.414281368255615

Token 1961: ' nd' (ID: 5914)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12907470762729645
    2. ' =' → logprob: -2.754074811935425
    3. 'n' → logprob: -4.254074573516846
    4. '=' → logprob: -4.254074573516846
    5. 'new' → logprob: -4.754074573516846
    6. 'if' → logprob: -5.629074573516846
    7. 'pos' → logprob: -6.379074573516846
    8. 'npos' → logprob: -6.379074573516846
    9. ' if' → logprob: -6.504074573516846
    10. ',' → logprob: -6.754074573516846

Token 1962: 'x' (ID: 87)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -1.8624639324116288e-06
    2. 'x' → logprob: -13.250001907348633
    3. '
' → logprob: -17.125001907348633
    4. '(xx' → logprob: -17.125001907348633
    5. '           ' → logprob: -17.750001907348633
    6. '``' → logprob: -18.125001907348633
    7. '```' → logprob: -18.250001907348633
    8. '       ' → logprob: -19.250001907348633
    9. '               ' → logprob: -19.500001907348633
    10. '                   ' → logprob: -19.750001907348633

Token 1963: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003938175272196531
    2. ',' → logprob: -5.7539381980896
    3. '                       ' → logprob: -8.753937721252441
    4. '               ' → logprob: -9.128937721252441
    5. '                    ' → logprob: -9.878937721252441
    6. '                  ' → logprob: -9.878937721252441
    7. 'if' → logprob: -10.253937721252441
    8. '                           ' → logprob: -10.253937721252441
    9. '				' → logprob: -10.253937721252441
    10. '           ' → logprob: -10.753937721252441

Token 1964: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.007626388221979141
    2. ' nd' → logprob: -4.882626533508301
    3. '_nd' → logprob: -12.0076265335083
    4. '(nd' → logprob: -12.5076265335083
    5. 'n' → logprob: -12.6326265335083
    6. '.nd' → logprob: -13.5076265335083
    7. '   ' → logprob: -14.0076265335083
    8. 'ndry' → logprob: -14.0076265335083
    9. 'ndl' → logprob: -14.3826265335083
    10. 'ndir' → logprob: -14.5076265335083

Token 1965: 'y' (ID: 88)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.006024195812642574
    2. 'y' → logprob: -5.756024360656738
    3. 'xx' → logprob: -5.881024360656738
    4. 'x' → logprob: -10.381024360656738
    5. '	yy' → logprob: -12.506024360656738
    6. 'd' → logprob: -12.631024360656738
    7. 'xy' → logprob: -12.881024360656738
    8. ' yy' → logprob: -13.381024360656738
    9. '
' → logprob: -13.506024360656738
    10. 'dy' → logprob: -13.756024360656738

Token 1966: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08759329468011856
    2. ',' → logprob: -4.212593078613281
    3. ':' → logprob: -4.587593078613281
    4. ')' → logprob: -4.587593078613281
    5. '
' → logprob: -4.837593078613281
    6. '<|end|>' → logprob: -5.337593078613281
    7. '```' → logprob: -5.462593078613281
    8. 'new' → logprob: -5.462593078613281
    9. '                       ' → logprob: -5.462593078613281
    10. ':
' → logprob: -5.462593078613281

Token 1967: ' reversed' (ID: 57184)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.01648426428437233
    2. 'n' → logprob: -4.391484260559082
    3. '(-' → logprob: -6.766484260559082
    4. '-' → logprob: -7.141484260559082
    5. '(nd' → logprob: -7.141484260559082
    6. ' nd' → logprob: -7.391484260559082
    7. '(' → logprob: -8.641484260559082
    8. '-n' → logprob: -9.141484260559082
    9. 'not' → logprob: -9.516484260559082
    10. 'ny' → logprob: -10.141484260559082

Token 1968: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000573167169932276
    2. 'new' → logprob: -9.37557315826416
    3. ',' → logprob: -9.50057315826416
    4. '				' → logprob: -9.62557315826416
    5. '               ' → logprob: -9.62557315826416
    6. '
' → logprob: -9.75057315826416
    7. ' new' → logprob: -10.50057315826416
    8. '                    
' → logprob: -10.50057315826416
    9. '                       ' → logprob: -10.87557315826416
    10. '<|end|>' → logprob: -10.87557315826416

Token 1969: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4265252649784088
    2. '                       ' → logprob: -1.6765252351760864
    3. '```' → logprob: -1.9265252351760864
    4. ' if' → logprob: -5.551525115966797
    5. '``' → logprob: -6.301525115966797
    6. '                        
' → logprob: -6.301525115966797
    7. '                           ' → logprob: -6.551525115966797
    8. '               ' → logprob: -6.926525115966797
    9. '                               ' → logprob: -7.426525115966797
    10. '`' → logprob: -7.551525115966797

Token 1970: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.047662608325481415
    2. ' new' → logprob: -3.6726624965667725
    3. '                   ' → logprob: -4.297662734985352
    4. 'n' → logprob: -5.297662734985352
    5. 'next' → logprob: -6.297662734985352
    6. 'm' → logprob: -8.922662734985352
    7. ' next' → logprob: -9.297662734985352
    8. '```' → logprob: -9.672662734985352
    9. 'npos' → logprob: -9.672662734985352
    10. '                       ' → logprob: -9.922662734985352

Token 1971: ' Determine' (ID: 57076)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.13590307533740997
    2. 'n' → logprob: -3.1359031200408936
    3. ' new' → logprob: -3.1359031200408936
    4. '                   ' → logprob: -4.2609028816223145
    5. 'npos' → logprob: -4.5109028816223145
    6. 'next' → logprob: -4.7609028816223145
    7. 'm' → logprob: -5.7609028816223145
    8. 'np' → logprob: -7.1359028816223145
    9. ' next' → logprob: -7.3859028816223145
    10. ' n' → logprob: -7.8859028816223145

Token 1972: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06601332873106003
    2. 'move' → logprob: -3.8160133361816406
    3. 'm' → logprob: -4.191013336181641
    4. 'npos' → logprob: -4.441013336181641
    5. 'n' → logprob: -4.816013336181641
    6. 'if' → logprob: -5.816013336181641
    7. 'next' → logprob: -7.066013336181641
    8. 'mov' → logprob: -7.816013336181641
    9. ' new' → logprob: -7.941013336181641
    10. 'actual' → logprob: -8.31601333618164

Token 1973: ' direction' (ID: 9262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2082650512456894
    2. 'move' → logprob: -2.2082650661468506
    3. 'new' → logprob: -3.0832650661468506
    4. 'forward' → logprob: -4.2082648277282715
    5. ' move' → logprob: -5.5832648277282715
    6. ' n' → logprob: -5.5832648277282715
    7. 'nd' → logprob: -5.7082648277282715
    8. '(move' → logprob: -6.7082648277282715
    9. ' new' → logprob: -6.8332648277282715
    10. 'not' → logprob: -7.2082648277282715

Token 1974: ' vector' (ID: 9727)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -1.5276330709457397
    2. '_match' → logprob: -1.5276330709457397
    3. '==' → logprob: -2.4026331901550293
    4. 'nd' → logprob: -2.5276331901550293
    5. ' nd' → logprob: -3.0276331901550293
    6. 'matches' → logprob: -3.0276331901550293
    7. 'n' → logprob: -3.1526331901550293
    8. 'if' → logprob: -3.1526331901550293
    9. ' ==' → logprob: -3.2776331901550293
    10. ' is' → logprob: -3.9026331901550293

Token 1975: ' matches' (ID: 15248)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7646992206573486
    2. '=' → logprob: -1.7646992206573486
    3. ' if' → logprob: -2.3896992206573486
    4. ' is' → logprob: -2.7646992206573486
    5. ')' → logprob: -3.3896992206573486
    6. ' nd' → logprob: -3.8896992206573486
    7. 'if' → logprob: -4.5146989822387695
    8. 'nd' → logprob: -4.6396989822387695
    9. ' (' → logprob: -4.6396989822387695
    10. ',' → logprob: -4.6396989822387695

Token 1976: ' moving' (ID: 10067)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6345129609107971
    2. 'dir' → logprob: -1.6345129013061523
    3. ' dir' → logprob: -1.8845129013061523
    4. ' if' → logprob: -2.1345129013061523
    5. '                   ' → logprob: -5.759512901306152
    6. '                           ' → logprob: -7.884512901306152
    7. '                       ' → logprob: -8.259512901306152
    8. '```' → logprob: -8.384512901306152
    9. '                               ' → logprob: -9.634512901306152
    10. '               ' → logprob: -9.884512901306152

Token 1977: ' from' (ID: 591)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.306302934885025
    2. 'forward' → logprob: -2.681303024291992
    3. ' forward' → logprob: -2.681303024291992
    4. ' nd' → logprob: -3.431303024291992
    5. 'nd' → logprob: -3.806303024291992
    6. 'new' → logprob: -3.806303024291992
    7. 'along' → logprob: -4.056303024291992
    8. 'Forward' → logprob: -4.931303024291992
    9. ' along' → logprob: -5.431303024291992
    10. 'n' → logprob: -5.431303024291992

Token 1978: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5139283537864685
    2. 'npos' → logprob: -1.8889284133911133
    3. 'new' → logprob: -2.0139284133911133
    4. ' n' → logprob: -3.0139284133911133
    5. 'start' → logprob: -3.7639284133911133
    6. 'endpoint' → logprob: -4.513928413391113
    7. ' new' → logprob: -4.638928413391113
    8. '(n' → logprob: -5.513928413391113
    9. 'pos' → logprob: -5.763928413391113
    10. 'end' → logprob: -5.763928413391113

Token 1979: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002980432182084769
    2. '_pos' → logprob: -9.125298500061035
    3. 'end' → logprob: -10.375298500061035
    4. 'position' → logprob: -10.625298500061035
    5. 'poss' → logprob: -10.625298500061035
    6. '_end' → logprob: -10.875298500061035
    7. '```' → logprob: -10.875298500061035
    8. 'npos' → logprob: -11.375298500061035
    9. 'p' → logprob: -11.500298500061035
    10. 'forward' → logprob: -12.000298500061035

Token 1980: ' along' (ID: 4251)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1468566209077835
    2. '```' → logprob: -3.7718565464019775
    3. ',' → logprob: -3.8968565464019775
    4. 'if' → logprob: -4.271856784820557
    5. '+' → logprob: -4.271856784820557
    6. ' if' → logprob: -4.396856784820557
    7. ' along' → logprob: -4.646856784820557
    8. ' to' → logprob: -4.896856784820557
    9. 'along' → logprob: -5.396856784820557
    10. 'to' → logprob: -5.646856784820557

Token 1981: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.48722606897354126
    2. ' nd' → logprob: -1.6122260093688965
    3. 'new' → logprob: -2.7372260093688965
    4. 'n' → logprob: -2.8622260093688965
    5. '1' → logprob: -3.9872260093688965
    6. '(' → logprob: -3.9872260093688965
    7. '(nd' → logprob: -5.1122260093688965
    8. ' new' → logprob: -5.2372260093688965
    9. 'the' → logprob: -5.3622260093688965
    10. ' n' → logprob: -5.9872260093688965

Token 1982: 'x' (ID: 87)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -9.77022064034827e-05
    2. 'x' → logprob: -9.250097274780273
    3. '(xx' → logprob: -13.625097274780273
    4. '```' → logprob: -16.125097274780273
    5. '``' → logprob: -17.250097274780273
    6. ' xx' → logprob: -17.500097274780273
    7. 'dx' → logprob: -17.625097274780273
    8. '
' → logprob: -17.750097274780273
    9. 'xxx' → logprob: -17.750097274780273
    10. '(' → logprob: -17.750097274780273

Token 1983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15544766187667847
    2. '<|end|>' → logprob: -3.5304477214813232
    3. ')' → logprob: -3.6554477214813232
    4. '                   ' → logprob: -4.030447483062744
    5. ' ,' → logprob: -4.405447483062744
    6. '+' → logprob: -4.405447483062744
    7. ',n' → logprob: -4.655447483062744
    8. '<|end|>' → logprob: -4.780447483062744
    9. ' or' → logprob: -5.030447483062744
    10. ' +' → logprob: -5.780447483062744

Token 1984: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.005440312437713146
    2. ' nd' → logprob: -5.2554402351379395
    3. 'n' → logprob: -8.630440711975098
    4. '(nd' → logprob: -11.630440711975098
    5. '_nd' → logprob: -11.630440711975098
    6. 'ndry' → logprob: -12.755440711975098
    7. '.nd' → logprob: -12.880440711975098
    8. '```' → logprob: -14.380440711975098
    9. '   ' → logprob: -14.755440711975098
    10. 'ndir' → logprob: -14.880440711975098

Token 1985: 'y' (ID: 88)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.01676834188401699
    2. 'x' → logprob: -4.141768455505371
    3. 'yy' → logprob: -7.266768455505371
    4. 'y' → logprob: -10.391768455505371
    5. 'd' → logprob: -13.641768455505371
    6. '
' → logprob: -13.766768455505371
    7. 'xy' → logprob: -14.266768455505371
    8. ' xx' → logprob: -14.641768455505371
    9. '``' → logprob: -14.766768455505371
    10. '```' → logprob: -15.766768455505371

Token 1986: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017596544697880745
    2. ',' → logprob: -6.14259672164917
    3. '```' → logprob: -6.14259672164917
    4. ' if' → logprob: -6.26759672164917
    5. '                       ' → logprob: -6.64259672164917
    6. ' (' → logprob: -6.89259672164917
    7. '               ' → logprob: -7.01759672164917
    8. '(n' → logprob: -7.01759672164917
    9. '                    ' → logprob: -7.01759672164917
    10. ' to' → logprob: -7.14259672164917

Token 1987: 'or' (ID: 267)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1660197228193283
    2. ' True' → logprob: -2.1660196781158447
    3. 'n' → logprob: -4.166019916534424
    4. ' n' → logprob: -5.916019916534424
    5. ' forward' → logprob: -5.916019916534424
    6. ' nd' → logprob: -6.041019916534424
    7. ')' → logprob: -6.041019916534424
    8. 'forward' → logprob: -6.166019916534424
    9. '=True' → logprob: -6.291019916534424
    10. 'new' → logprob: -6.291019916534424

Token 1988: ' reverse' (ID: 18199)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.08480463922023773
    2. '-n' → logprob: -3.7098045349121094
    3. ' not' → logprob: -4.334804534912109
    4. 'n' → logprob: -4.584804534912109
    5. 'op' → logprob: -4.709804534912109
    6. '-not' → logprob: -4.959804534912109
    7. '-' → logprob: -5.459804534912109
    8. 'reverse' → logprob: -5.709804534912109
    9. '(not' → logprob: -5.959804534912109
    10. '-op' → logprob: -5.959804534912109

Token 1989: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8001019358634949
    2. '):
' → logprob: -0.8001019358634949
    3. '):' → logprob: -2.6751019954681396
    4. '                       ' → logprob: -5.0501017570495605
    5. '                   ' → logprob: -5.1751017570495605
    6. '):

' → logprob: -5.4251017570495605
    7. ',' → logprob: -5.8001017570495605
    8. '```' → logprob: -5.9251017570495605
    9. ')
' → logprob: -6.1751017570495605
    10. ':' → logprob: -6.4251017570495605

Token 1990: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02823951654136181
    2. '                       ' → logprob: -4.403239727020264
    3. '```' → logprob: -5.153239727020264
    4. '                    ' → logprob: -6.153239727020264
    5. ' if' → logprob: -6.403239727020264
    6. '                           ' → logprob: -6.903239727020264
    7. '               ' → logprob: -7.403239727020264
    8. '                               ' → logprob: -7.528239727020264
    9. 'new' → logprob: -7.903239727020264
    10. ' new' → logprob: -7.903239727020264

Token 1991: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14917625486850739
    2. 'new' → logprob: -2.0241763591766357
    3. ' new' → logprob: -6.024176120758057
    4. 'if' → logprob: -6.149176120758057
    5. '```' → logprob: -7.649176120758057
    6. 'next' → logprob: -7.899176120758057
    7. 'n' → logprob: -8.274176597595215
    8. 'token' → logprob: -8.899176597595215
    9. '
' → logprob: -8.899176597595215
    10. '                       ' → logprob: -9.024176597595215

Token 1992: ' But' (ID: 3072)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23010116815567017
    2. ' if' → logprob: -2.1051011085510254
    3. ' new' → logprob: -3.1051011085510254
    4. 'if' → logprob: -4.105101108551025
    5. 'new' → logprob: -5.230101108551025
    6. '                               ' → logprob: -5.605101108551025
    7. '                           ' → logprob: -5.730101108551025
    8. '```' → logprob: -5.980101108551025
    9. '                    ' → logprob: -6.105101108551025
    10. '                       ' → logprob: -6.480101108551025

Token 1993: ' depending' (ID: 14537)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9565000534057617
    2. 'if' → logprob: -1.3315000534057617
    3. ' not' → logprob: -1.9565000534057617
    4. 'the' → logprob: -2.8315000534057617
    5. 'new' → logprob: -3.8315000534057617
    6. ' if' → logprob: -3.8315000534057617
    7. 'next' → logprob: -3.8315000534057617
    8. 'we' → logprob: -4.081500053405762
    9. 'here' → logprob: -4.706500053405762
    10. 'n' → logprob: -4.831500053405762

Token 1994: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.28126636147499084
    2. ' on' → logprob: -1.4062663316726685
    3. 'n' → logprob: -10.031266212463379
    4. '	on' → logprob: -10.656266212463379
    5. '                   ' → logprob: -11.031266212463379
    6. '...' → logprob: -12.156266212463379
    7. 'whether' → logprob: -12.281266212463379
    8. ' n' → logprob: -12.531266212463379
    9. '(n' → logprob: -12.531266212463379
    10. 'if' → logprob: -13.406266212463379

Token 1995: ' direction' (ID: 9262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09242132306098938
    2. ' n' → logprob: -2.717421293258667
    3. 'forward' → logprob: -4.842421531677246
    4. 'endpoint' → logprob: -5.217421531677246
    5. 'not' → logprob: -6.342421531677246
    6. ' endpoint' → logprob: -6.967421531677246
    7. ' forward' → logprob: -6.967421531677246
    8. 'direction' → logprob: -7.092421531677246
    9. 'new' → logprob: -7.342421531677246
    10. '
' → logprob: -7.467421531677246

Token 1996: ' assigned' (ID: 21482)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3684502840042114
    2. ' if' → logprob: -1.4934502840042114
    3. ',' → logprob: -3.243450164794922
    4. 'if' → logprob: -4.243450164794922
    5. '                       ' → logprob: -5.118450164794922
    6. '                           ' → logprob: -5.993450164794922
    7. ' of' → logprob: -6.118450164794922
    8. ' is' → logprob: -6.243450164794922
    9. '...' → logprob: -6.368450164794922
    10. '                    ' → logprob: -6.618450164794922

Token 1997: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30419012904167175
    2. ' if' → logprob: -2.054190158843994
    3. '```' → logprob: -3.929190158843994
    4. '                       ' → logprob: -4.054190158843994
    5. 'if' → logprob: -4.429190158843994
    6. ' to' → logprob: -4.429190158843994
    7. ',' → logprob: -4.554190158843994
    8. ' next' → logprob: -4.804190158843994
    9. '                    ' → logprob: -4.804190158843994
    10. '...' → logprob: -5.054190158843994

Token 1998: ' moving' (ID: 10067)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8301346898078918
    2. ' new' → logprob: -1.330134630203247
    3. 'if' → logprob: -1.955134630203247
    4. 'new' → logprob: -2.205134630203247
    5. ' the' → logprob: -4.330134868621826
    6. 'the' → logprob: -4.705134868621826
    7. 'n' → logprob: -5.330134868621826
    8. 'next' → logprob: -5.705134868621826
    9. ' we' → logprob: -5.955134868621826
    10. ' next' → logprob: -6.205134868621826

Token 1999: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.5288614630699158
    2. '_forward' → logprob: -1.9038615226745605
    3. 'along' → logprob: -1.9038615226745605
    4. ' forward' → logprob: -2.7788615226745605
    5. '```' → logprob: -4.0288615226745605
    6. 'new' → logprob: -4.2788615226745605
    7. 'n' → logprob: -5.1538615226745605
    8. ' along' → logprob: -6.2788615226745605
    9. 'the' → logprob: -6.5288615226745605
    10. 'distance' → logprob: -6.5288615226745605

Token 2000: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8929522037506104
    2. ',' → logprob: -1.6429522037506104
    3. ' along' → logprob: -1.8929522037506104
    4. 'along' → logprob: -3.2679522037506104
    5. '               ' → logprob: -3.6429522037506104
    6. '=' → logprob: -4.392951965332031
    7. ' in' → logprob: -4.392951965332031
    8. 'in' → logprob: -4.517951965332031
    9. ':
' → logprob: -4.517951965332031
    10. '```' → logprob: -4.517951965332031

Token 2001: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.09421976655721664
    2. 'not' → logprob: -2.59421968460083
    3. 'reverse' → logprob: -4.59421968460083
    4. ' not' → logprob: -6.21921968460083
    5. 'False' → logprob: -6.21921968460083
    6. ' backward' → logprob: -6.96921968460083
    7. 'op' → logprob: -9.969220161437988
    8. ' reverse' → logprob: -10.094220161437988
    9. 'forward' → logprob: -10.469220161437988
    10. 'True' → logprob: -10.719220161437988

Token 2002: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08775895088911057
    2. ' if' → logprob: -2.962759017944336
    3. ')' → logprob: -3.962759017944336
    4. 'if' → logprob: -5.587759017944336
    5. ')
' → logprob: -6.337759017944336
    6. '                       ' → logprob: -6.587759017944336
    7. '               ' → logprob: -6.962759017944336
    8. ' new' → logprob: -7.462759017944336
    9. ' is' → logprob: -7.837759017944336
    10. ',' → logprob: -7.962759017944336

Token 2003: ' the' (ID: 290)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.043386220932006836
    2. ' ns' → logprob: -3.168386220932007
    3. 'new' → logprob: -8.043386459350586
    4. ' new' → logprob: -10.668386459350586
    5. '	ns' → logprob: -11.168386459350586
    6. 'the' → logprob: -11.668386459350586
    7. 'n' → logprob: -11.793386459350586
    8. '(ns' → logprob: -11.793386459350586
    9. 'nd' → logprob: -13.668386459350586
    10. ' the' → logprob: -13.793386459350586

Token 2004: ' new' (ID: 620)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.3748903274536133
    2. 'new' → logprob: -1.4998903274536133
    3. ' ns' → logprob: -2.8748903274536133
    4. ' new' → logprob: -3.9998903274536133
    5. 'n' → logprob: -4.499890327453613
    6. 'street' → logprob: -6.249890327453613
    7. 'nd' → logprob: -7.374890327453613
    8. ' n' → logprob: -8.874890327453613
    9. ' nd' → logprob: -9.124890327453613
    10. 's' → logprob: -9.249890327453613

Token 2005: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.31482672691345215
    2. 'street' → logprob: -1.3148267269134521
    3. 'st' → logprob: -8.189826965332031
    4. 'stre' → logprob: -8.564826965332031
    5. '_st' → logprob: -8.564826965332031
    6. 'n' → logprob: -8.814826965332031
    7. ' straat' → logprob: -9.189826965332031
    8. 'ns' → logprob: -9.189826965332031
    9. 's' → logprob: -9.814826965332031
    10. '[' → logprob: -9.939826965332031

Token 2006: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30119994282722473
    2. ' if' → logprob: -1.9261999130249023
    3. 'if' → logprob: -2.5511999130249023
    4. 'new' → logprob: -4.926199913024902
    5. '                       ' → logprob: -5.426199913024902
    6. ' new' → logprob: -5.426199913024902
    7. '
' → logprob: -5.926199913024902
    8. ')' → logprob: -6.301199913024902
    9. ',' → logprob: -6.426199913024902
    10. ' is' → logprob: -6.676199913024902

Token 2007: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04250611364841461
    2. '                       ' → logprob: -3.542506217956543
    3. '```' → logprob: -5.542506217956543
    4. '                    ' → logprob: -6.667506217956543
    5. '                        
' → logprob: -6.792506217956543
    6. ' if' → logprob: -6.917506217956543
    7. ')' → logprob: -7.167506217956543
    8. '                           ' → logprob: -7.292506217956543
    9. '               ' → logprob: -7.292506217956543
    10. '                    
' → logprob: -7.417506217956543

Token 2008: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.303862601518631
    2. ' if' → logprob: -1.9288625717163086
    3. ')' → logprob: -3.4288625717163086
    4. '                       ' → logprob: -3.8038625717163086
    5. '                    ' → logprob: -3.9288625717163086
    6. 'if' → logprob: -4.678862571716309
    7. '               ' → logprob: -5.178862571716309
    8. ' new' → logprob: -5.178862571716309
    9. ' )' → logprob: -5.428862571716309
    10. '                           ' → logprob: -5.803862571716309

Token 2009: ' Need' (ID: 19792)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6329977512359619
    2. '                   ' → logprob: -1.632997751235962
    3. 'if' → logprob: -1.882997751235962
    4. ' new' → logprob: -2.632997751235962
    5. 'new' → logprob: -3.382997751235962
    6. 'dist' → logprob: -5.257997512817383
    7. ' next' → logprob: -6.757997512817383
    8. '                       ' → logprob: -6.882997512817383
    9. 'next' → logprob: -6.882997512817383
    10. '                           ' → logprob: -7.132997512817383

Token 2010: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5241053700447083
    2. ' to' → logprob: -0.8991053700447083
    3. '
' → logprob: -7.899105548858643
    4. '_to' → logprob: -8.024105072021484
    5. 'pos' → logprob: -8.524105072021484
    6. '_pos' → logprob: -10.899105072021484
    7. 'continue' → logprob: -11.649105072021484
    8. 'new' → logprob: -12.274105072021484
    9. 'forward' → logprob: -12.274105072021484
    10. 'next' → logprob: -12.524105072021484

Token 2011: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1259359121322632
    2. 'move' → logprob: -1.2509359121322632
    3. 'check' → logprob: -1.5009359121322632
    4. 'det' → logprob: -2.2509360313415527
    5. ' move' → logprob: -4.125936031341553
    6. ' check' → logprob: -5.000936031341553
    7. 'if' → logprob: -5.375936031341553
    8. 'consider' → logprob: -5.375936031341553
    9. 'pos' → logprob: -5.500936031341553
    10. 'calculate' → logprob: -5.875936031341553

Token 2012: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3903180658817291
    2. ' if' → logprob: -2.1403181552886963
    3. ' continue' → logprob: -3.0153181552886963
    4. 'n' → logprob: -3.3903181552886963
    5. ' ' → logprob: -3.3903181552886963
    6. 'if' → logprob: -3.8903181552886963
    7. '<|end|>' → logprob: -3.8903181552886963
    8. 'continue' → logprob: -5.640317916870117
    9. 'd' → logprob: -5.765317916870117
    10. '[' → logprob: -5.890317916870117

Token 2013: ' have' (ID: 679)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19375400245189667
    2. 'move' → logprob: -2.693753957748413
    3. '(n' → logprob: -3.318753957748413
    4. '(move' → logprob: -4.068754196166992
    5. 'new' → logprob: -4.568754196166992
    6. 'forward' → logprob: -4.693754196166992
    7. 'not' → logprob: -4.943754196166992
    8. ' n' → logprob: -5.318754196166992
    9. 'nd' → logprob: -5.443754196166992
    10. ' move' → logprob: -5.568754196166992

Token 2014: ' enough' (ID: 4951)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.3151971101760864
    2. '(move' → logprob: -1.5651971101760864
    3. 'n' → logprob: -1.8151971101760864
    4. ' move' → logprob: -2.315196990966797
    5. '_forward' → logprob: -2.690196990966797
    6. 'forward' → logprob: -3.190196990966797
    7. '(n' → logprob: -3.815196990966797
    8. ' n' → logprob: -3.940196990966797
    9. 'abs' → logprob: -4.440196990966797
    10. 'pos' → logprob: -4.440196990966797

Token 2015: ' length' (ID: 5517)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6067175269126892
    2. 'distance' → logprob: -2.231717586517334
    3. 'if' → logprob: -2.356717586517334
    4. 'dist' → logprob: -2.606717586517334
    5. ' new' → logprob: -2.981717586517334
    6. 'length' → logprob: -3.731717586517334
    7. 'n' → logprob: -3.856717586517334
    8. 'steps' → logprob: -4.356717586517334
    9. 'tokens' → logprob: -4.356717586517334
    10. ' if' → logprob: -4.606717586517334

Token 2016: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5714209675788879
    2. ' if' → logprob: -1.8214209079742432
    3. ')' → logprob: -2.946420907974243
    4. '                           ' → logprob: -3.571420907974243
    5. '               ' → logprob: -3.571420907974243
    6. ',' → logprob: -3.696420907974243
    7. 'if' → logprob: -3.696420907974243
    8. '<|end|>' → logprob: -3.696420907974243
    9. '                       ' → logprob: -4.196421146392822
    10. '.' → logprob: -4.446421146392822

Token 2017: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2963004410266876
    2. '                       ' → logprob: -2.6713004112243652
    3. '                               ' → logprob: -2.7963004112243652
    4. '```' → logprob: -2.7963004112243652
    5. '                           ' → logprob: -3.6713004112243652
    6. '               ' → logprob: -4.171300411224365
    7. '                    ' → logprob: -5.921300411224365
    8. ')' → logprob: -6.046300411224365
    9. ' ' → logprob: -6.046300411224365
    10. '                                           ' → logprob: -6.421300411224365

Token 2018: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22152580320835114
    2. 'new' → logprob: -1.84652578830719
    3. 'if' (adapté à ' if') → logprob: -3.3465259075164795
    4. 'next' → logprob: -6.3465256690979
    5. 'pos' → logprob: -6.7215256690979
    6. 'move' → logprob: -7.4715256690979
    7. '```' → logprob: -7.4715256690979
    8. 'n' → logprob: -7.7215256690979
    9. 'dist' → logprob: -7.8465256690979
    10. '               ' → logprob: -8.971526145935059

Token 2019: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2260996550321579
    2. 'move' → logprob: -1.9760996103286743
    3. ' n' → logprob: -3.476099729537964
    4. '(n' → logprob: -4.226099491119385
    5. ' move' → logprob: -4.601099491119385
    6. '(move' → logprob: -5.851099491119385
    7. 'forward' → logprob: -6.476099491119385
    8. 'not' → logprob: -6.976099491119385
    9. ' (' → logprob: -7.101099491119385
    10. '(' → logprob: -7.476099491119385

Token 2020: 'forward' (ID: 20233)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10866206139326096
    2. 'forward' → logprob: -2.7336621284484863
    3. '_forward' → logprob: -3.7336621284484863
    4. '_pos' → logprob: -5.108662128448486
    5. '_end' → logprob: -5.233662128448486
    6. 'poss' → logprob: -6.858662128448486
    7. 'npos' → logprob: -7.608662128448486
    8. 'for' → logprob: -8.608661651611328
    9. '
' → logprob: -9.108661651611328
    10. '[pos' → logprob: -9.233661651611328

Token 2021: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12946489453315735
    2. ':
' → logprob: -2.379464864730835
    3. ' and' → logprob: -4.004465103149414
    4. 'and' → logprob: -4.754465103149414
    5. '<|end|>' → logprob: -7.879465103149414
    6. '):
' → logprob: -8.254465103149414
    7. '           ' → logprob: -8.629465103149414
    8. '==' → logprob: -8.754465103149414
    9. '):' → logprob: -8.754465103149414
    10. '<|end|>' → logprob: -8.879465103149414

Token 2022: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04301940277218819
    2. ':
' → logprob: -3.6680192947387695
    3. ':' → logprob: -4.2930192947387695
    4. ' and' → logprob: -6.1680192947387695
    5. '                   ' → logprob: -8.41801929473877
    6. 'new' → logprob: -9.16801929473877
    7. 'and' → logprob: -9.41801929473877
    8. ' new' → logprob: -9.54301929473877
    9. '                           ' → logprob: -10.04301929473877
    10. '                      ' → logprob: -10.29301929473877

Token 2023: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.082180455327034
    2. 'npos' → logprob: -3.2071805000305176
    3. 'next' → logprob: -4.207180500030518
    4. 'n' → logprob: -4.457180500030518
    5. 'if' (adapté à ' if') → logprob: -5.207180500030518
    6. '                       ' → logprob: -5.707180500030518
    7. 'm' → logprob: -6.957180500030518
    8. ' new' → logprob: -7.332180500030518
    9. 'np' → logprob: -7.832180500030518
    10. 'pos' → logprob: -8.33218002319336

Token 2024: ' rem' (ID: 1662)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.5950505137443542
    2. 'n' → logprob: -1.095050573348999
    3. ' n' → logprob: -3.095050573348999
    4. 'rem' → logprob: -3.220050573348999
    5. ' rem' → logprob: -4.09505033493042
    6. 'new' → logprob: -4.84505033493042
    7. 'pos' → logprob: -5.97005033493042
    8. '(rem' → logprob: -7.84505033493042
    9. ' new' → logprob: -8.220050811767578
    10. '(n' → logprob: -8.470050811767578

Token 2025: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -5.717296517104842e-05
    2. 'dist' → logprob: -10.125057220458984
    3. '_pos' → logprob: -12.000057220458984
    4. '	dist' → logprob: -12.625057220458984
    5. '_rem' → logprob: -13.125057220458984
    6. '-dist' → logprob: -13.250057220458984
    7. '_DIST' → logprob: -13.625057220458984
    8. 'Dist' → logprob: -14.000057220458984
    9. '\' → logprob: -15.250057220458984
    10. 'pos' → logprob: -15.375057220458984

Token 2026: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07890399545431137
    2. '<=' → logprob: -2.578903913497925
    3. '```' → logprob: -11.953904151916504
    4. '<|end|>' → logprob: -12.828904151916504
    5. '[' → logprob: -13.703904151916504
    6. ' >' → logprob: -14.203904151916504
    7. '>' → logprob: -14.578904151916504
    8. ' ≤' → logprob: -14.828904151916504
    9. ' ' → logprob: -14.953904151916504
    10. ')<=' → logprob: -15.078904151916504

Token 2027: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.09550803154706955
    2. 'npos' → logprob: -2.970508098602295
    3. 'n' → logprob: -3.345508098602295
    4. '(ns' → logprob: -6.345508098602295
    5. ' ns' → logprob: -6.845508098602295
    6. '(n' → logprob: -7.095508098602295
    7. '(' → logprob: -7.720508098602295
    8. 'pos' → logprob: -9.345507621765137
    9. '0' → logprob: -9.470507621765137
    10. '=' → logprob: -9.470507621765137

Token 2028: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.010331316851079464
    2. 'length' → logprob: -4.885331153869629
    3. '[length' → logprob: -6.635331153869629
    4. ''' → logprob: -7.885331153869629
    5. ''s' → logprob: -8.135331153869629
    6. 'ength' → logprob: -8.135331153869629
    7. '_length' → logprob: -8.760331153869629
    8. '[' → logprob: -10.510331153869629
    9. ']['' → logprob: -10.510331153869629
    10. '{'' → logprob: -10.510331153869629

Token 2029: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -7.159660890465602e-05
    2. ''' → logprob: -10.37507152557373
    3. ' length' → logprob: -11.87507152557373
    4. 'leng' → logprob: -11.87507152557373
    5. '['' → logprob: -12.12507152557373
    6. '	length' → logprob: -12.50007152557373
    7. ''n' → logprob: -12.62507152557373
    8. 'npos' → logprob: -13.12507152557373
    9. 'ength' → logprob: -13.50007152557373
    10. '-length' → logprob: -13.50007152557373

Token 2030: '']' (ID: 1089)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006249546073377132
    2. '-' → logprob: -5.50624942779541
    3. ':' → logprob: -6.75624942779541
    4. ':
' → logprob: -7.50624942779541
    5. '-n' → logprob: -8.13124942779541
    6. '):
' → logprob: -10.88124942779541
    7. '[' → logprob: -11.00624942779541
    8. '<|end|>' → logprob: -11.00624942779541
    9. '                               ' → logprob: -11.25624942779541
    10. '<|end|>' → logprob: -11.50624942779541

Token 2031: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18846184015274048
    2. '-' → logprob: -2.4384617805480957
    3. ':' → logprob: -2.5634617805480957
    4. ':return' → logprob: -6.063461780548096
    5. ':
' → logprob: -6.563461780548096
    6. '   ' → logprob: -7.313461780548096
    7. ')' → logprob: -7.688461780548096
    8. ' or' → logprob: -7.813461780548096
    9. '):' → logprob: -7.813461780548096
    10. '-n' → logprob: -8.063462257385254

Token 2032: ' n' (ID: 297)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.00034833617974072695
    2. 'n' → logprob: -8.000348091125488
    3. '(n' → logprob: -12.125348091125488
    4. 'nop' → logprob: -12.250348091125488
    5. 'pos' → logprob: -13.500348091125488
    6. ' n' → logprob: -14.375348091125488
    7. 'abs' → logprob: -15.750348091125488
    8. '	n' → logprob: -15.875348091125488
    9. 'npc' → logprob: -15.875348091125488
    10. '
' → logprob: -16.125349044799805

Token 2033: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00020056030189152807
    2. 'npos' → logprob: -9.250200271606445
    3. 'os' → logprob: -10.125200271606445
    4. 'length' → logprob: -10.625200271606445
    5. '_pos' → logprob: -11.375200271606445
    6. ''' → logprob: -11.875200271606445
    7. '[pos' → logprob: -12.125200271606445
    8. 'posa' → logprob: -13.125200271606445
    9. 'position' → logprob: -13.125200271606445
    10. 'poss' → logprob: -13.500200271606445

Token 2034: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26631811261177063
    2. ':
' → logprob: -1.5163180828094482
    3. ':return' → logprob: -4.641318321228027
    4. ' or' → logprob: -6.641318321228027
    5. ' and' → logprob: -7.141318321228027
    6. '):' → logprob: -7.516318321228027
    7. '                       ' → logprob: -7.766318321228027
    8. '):
' → logprob: -8.141318321228027
    9. '                           ' → logprob: -8.266318321228027
    10. ')' → logprob: -8.391318321228027

Token 2035: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004201274830847979
    2. ':' → logprob: -6.879201412200928
    3. '                       ' → logprob: -6.879201412200928
    4. ' continue' → logprob: -7.129201412200928
    5. '                               ' → logprob: -7.129201412200928
    6. ':
' → logprob: -8.25420093536377
    7. 'continue' → logprob: -8.87920093536377
    8. '                            ' → logprob: -10.25420093536377
    9. '                          ' → logprob: -11.00420093536377
    10. '                        ' → logprob: -11.75420093536377

Token 2036: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.008944854140281677
    2. ' continue' → logprob: -4.758944988250732
    3. '```' → logprob: -9.383944511413574
    4. '                       ' → logprob: -9.758944511413574
    5. '                   ' → logprob: -9.883944511413574
    6. '           ' → logprob: -10.133944511413574
    7. '                           ' → logprob: -10.133944511413574
    8. '                               ' → logprob: -11.133944511413574
    9. '               ' → logprob: -11.133944511413574
    10. '   ' → logprob: -11.258944511413574

Token 2037: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7125639915466309
    2. '                       ' → logprob: -0.9625639915466309
    3. '                               ' → logprob: -2.337563991546631
    4. '                   ' → logprob: -4.212563991546631
    5. ')' → logprob: -5.087563991546631
    6. '               ' → logprob: -6.712563991546631
    7. '<|end|>' → logprob: -7.087563991546631
    8. '           ' → logprob: -7.212563991546631
    9. '```' → logprob: -7.212563991546631
    10. '                                   ' → logprob: -7.212563991546631

Token 2038: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1107039675116539
    2. '                           ' → logprob: -2.985703945159912
    3. '                   ' → logprob: -3.235703945159912
    4. 'continue' → logprob: -5.110703945159912
    5. 'if' → logprob: -5.610703945159912
    6. '                               ' → logprob: -5.860703945159912
    7. 'next' → logprob: -6.735703945159912
    8. '               ' → logprob: -7.860703945159912
    9. ' if' → logprob: -8.23570442199707
    10. ' continue' → logprob: -8.98570442199707

Token 2039: ' new' (ID: 620)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7942776083946228
    2. '                           ' → logprob: -0.9192776083946228
    3. ' next' → logprob: -2.7942776679992676
    4. '                               ' → logprob: -3.0442776679992676
    5. 'n' → logprob: -4.294277667999268
    6. ' n' → logprob: -5.044277667999268
    7. 'next' → logprob: -5.294277667999268
    8. ' new' → logprob: -5.544277667999268
    9. '                   ' → logprob: -6.169277667999268
    10. ' if' → logprob: -6.169277667999268

Token 2040: '_n' (ID: 2170)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0070935082621872425
    2. 'pos' → logprob: -5.00709342956543
    3. 'npos' → logprob: -8.00709342956543
    4. '_n' → logprob: -10.88209342956543
    5. '```' → logprob: -12.00709342956543
    6. '_' → logprob: -12.38209342956543
    7. '_p' → logprob: -12.38209342956543
    8. '_positions' → logprob: -13.00709342956543
    9. '_state' → logprob: -13.50709342956543
    10. 'n' → logprob: -13.63209342956543

Token 2041: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.961759259458631e-06
    2. 'os' → logprob: -12.500004768371582
    3. '_pos' → logprob: -14.375004768371582
    4. '```' → logprob: -15.500004768371582
    5. 'npos' → logprob: -16.2500057220459
    6. 'p' → logprob: -16.5000057220459
    7. '	pos' → logprob: -16.7500057220459
    8. 'poss' → logprob: -17.3750057220459
    9. '
' → logprob: -17.7500057220459
    10. ' pos' → logprob: -17.8750057220459

Token 2042: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407805919647217
    2. '=' → logprob: -0.9740780591964722
    3. ')' → logprob: -14.724078178405762
    4. '<|end|>' → logprob: -15.349078178405762
    5. '=n' → logprob: -15.599078178405762
    6. '```' → logprob: -16.474077224731445
    7. ',' → logprob: -17.099077224731445
    8. ' ' → logprob: -17.224077224731445
    9. '=
' → logprob: -17.474077224731445
    10. '＝' → logprob: -17.974077224731445

Token 2043: ' n' (ID: 297)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.0006355931982398033
    2. 'n' → logprob: -7.500635623931885
    3. ' n' → logprob: -9.750635147094727
    4. 'pos' → logprob: -10.750635147094727
    5. 'nop' → logprob: -13.250635147094727
    6. 'npc' → logprob: -14.875635147094727
    7. '	n' → logprob: -15.750635147094727
    8. 'upos' → logprob: -16.000635147094727
    9. 'ipos' → logprob: -16.750635147094727
    10. '   ' → logprob: -17.000635147094727

Token 2044: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.9424725148128346e-05
    2. 'npos' → logprob: -10.625049591064453
    3. '_pos' → logprob: -12.000049591064453
    4. '```' → logprob: -12.250049591064453
    5. 'os' → logprob: -12.625049591064453
    6. '`' → logprob: -13.250049591064453
    7. 'posa' → logprob: -13.625049591064453
    8. '   ' → logprob: -13.625049591064453
    9. 'poss' → logprob: -14.000049591064453
    10. '[pos' → logprob: -14.125049591064453

Token 2045: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693241238594055
    2. '+' → logprob: -2.126932382583618
    3. ' -' → logprob: -12.751932144165039
    4. '+n' → logprob: -14.251932144165039
    5. '-' → logprob: -14.501932144165039
    6. ' ' → logprob: -15.876932144165039
    7. '=' → logprob: -17.37693214416504
    8. '+
' → logprob: -17.62693214416504
    9. ' +
' → logprob: -17.75193214416504
    10. '<|end|>' → logprob: -18.00193214416504

Token 2046: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.000553151941858232
    2. ' rem' → logprob: -7.500553131103516
    3. '(rem' → logprob: -16.500553131103516
    4. 'rep' → logprob: -17.625553131103516
    5. 'reman' → logprob: -18.250553131103516
    6. '   ' → logprob: -18.625553131103516
    7. 'rest' → logprob: -18.875553131103516
    8. 'dist' → logprob: -19.250553131103516
    9. 're' → logprob: -19.625553131103516
    10. 'res' → logprob: -20.125553131103516

Token 2047: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0004892880679108202
    2. 'dist' → logprob: -7.625489234924316
    3. '	dist' → logprob: -14.125489234924316
    4. '_rem' → logprob: -16.250490188598633
    5. 'Dist' → logprob: -17.000490188598633
    6. 'n' → logprob: -17.125490188598633
    7. '_DIST' → logprob: -17.375490188598633
    8. '-dist' → logprob: -17.375490188598633
    9. 'DIST' → logprob: -17.500490188598633
    10. '_pos' → logprob: -17.625490188598633

Token 2048: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2049: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2050: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.19984617829322815
    2. ' else' → logprob: -2.4498462677001953
    3. '                   ' → logprob: -2.5748462677001953
    4. '```' → logprob: -4.574846267700195
    5. '                       ' → logprob: -5.324846267700195
    6. ':
' → logprob: -6.449846267700195
    7. ':' → logprob: -7.699846267700195
    8. '<|end|>' → logprob: -7.824846267700195
    9. 'elif' → logprob: -8.324846267700195
    10. ')' → logprob: -8.574846267700195

Token 2051: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12323612719774246
    2. '                       ' → logprob: -2.8732361793518066
    3. '=' → logprob: -3.6232361793518066
    4. ':' → logprob: -3.8732361793518066
    5. ':
' → logprob: -4.998236179351807
    6. ' new' → logprob: -6.748236179351807
    7. '                           ' → logprob: -6.748236179351807
    8. '                   ' → logprob: -7.123236179351807
    9. '                               ' → logprob: -7.748236179351807
    10. '                        ' → logprob: -7.998236179351807

Token 2052: '                       ' (ID: 968)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.6755508184432983
    2. ' n' → logprob: -0.8005508184432983
    3. 'n' → logprob: -3.175550937652588
    4. 'pos' → logprob: -8.42555046081543
    5. '(n' → logprob: -11.05055046081543
    6. 'None' → logprob: -11.92555046081543
    7. 'nop' → logprob: -11.92555046081543
    8. '	n' → logprob: -12.55055046081543
    9. 'npc' → logprob: -12.80055046081543
    10. ' None' → logprob: -12.80055046081543

Token 2053: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.038412898778915405
    2. ' new' → logprob: -3.2884128093719482
    3. 'n' → logprob: -7.913413047790527
    4. 'continue' → logprob: -13.163413047790527
    5. 'if' (adapté à ' if') → logprob: -13.413413047790527
    6. ' n' → logprob: -14.413413047790527
    7. 'New' → logprob: -14.413413047790527
    8. '_new' → logprob: -15.163413047790527
    9. 'None' → logprob: -15.413413047790527
    10. '                               ' → logprob: -16.03841209411621

Token 2054: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.3486190736293793
    2. ' rem' → logprob: -1.2236191034317017
    3. 'n' → logprob: -9.59861946105957
    4. '   ' → logprob: -10.22361946105957
    5. '(rem' → logprob: -11.34861946105957
    6. '    ' → logprob: -11.47361946105957
    7. 're' → logprob: -11.72361946105957
    8. '       ' → logprob: -11.72361946105957
    9. 'reman' → logprob: -11.84861946105957
    10. '           ' → logprob: -12.34861946105957

Token 2055: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00015788905147928745
    2. '_pos' → logprob: -9.375158309936523
    3. '_rem' → logprob: -9.875158309936523
    4. 'dist' → logprob: -11.125158309936523
    5. 'pos' → logprob: -14.125158309936523
    6. 'Dist' → logprob: -14.625158309936523
    7. '_DIST' → logprob: -14.625158309936523
    8. 'n' → logprob: -14.750158309936523
    9. 'rem' → logprob: -14.875158309936523
    10. '_rel' → logprob: -15.000158309936523

Token 2056: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20142485201358795
    2. '>' → logprob: -1.7014248371124268
    3. '[' → logprob: -12.076424598693848
    4. ' ' → logprob: -13.576424598693848
    5. ')' → logprob: -13.951424598693848
    6. '<|end|>' → logprob: -14.201424598693848
    7. ' ' → logprob: -14.951424598693848
    8. ' >
' → logprob: -15.076424598693848
    9. ' <=' → logprob: -15.201424598693848
    10. ' >
' → logprob: -15.326424598693848

Token 2057: ' n' (ID: 297)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.38732174038887024
    2. 'n' → logprob: -1.1373217105865479
    3. ' n' → logprob: -7.887321949005127
    4. 'new' → logprob: -9.637321472167969
    5. 'np' → logprob: -13.012321472167969
    6. 'pos' → logprob: -13.012321472167969
    7. 'npc' → logprob: -13.137321472167969
    8. 'nop' → logprob: -13.387321472167969
    9. '	n' → logprob: -14.262321472167969
    10. ' new' → logprob: -15.262321472167969

Token 2058: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00048024329589679837
    2. 'npos' → logprob: -8.500480651855469
    3. 'os' → logprob: -8.750480651855469
    4. 'n' → logprob: -10.000480651855469
    5. '_pos' → logprob: -10.625480651855469
    6. 'new' → logprob: -10.750480651855469
    7. '[pos' → logprob: -12.125480651855469
    8. '_n' → logprob: -12.125480651855469
    9. 'p' → logprob: -12.250480651855469
    10. '```' → logprob: -13.375480651855469

Token 2059: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.274709016084671
    2. '                           ' → logprob: -1.8997089862823486
    3. ':' → logprob: -2.6497089862823486
    4. '                       ' → logprob: -4.149709224700928
    5. '):
' → logprob: -7.274709224700928
    6. '                               ' → logprob: -7.399709224700928
    7. '                            ' → logprob: -7.524709224700928
    8. '                        ' → logprob: -7.899709224700928
    9. '-' → logprob: -8.27470874786377
    10. '           ' → logprob: -8.39970874786377

Token 2060: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2686983644962311
    2. '                       ' → logprob: -1.5186983346939087
    3. ' continue' → logprob: -4.643698215484619
    4. '                               ' → logprob: -6.268698215484619
    5. 'continue' → logprob: -6.393698215484619
    6. '                        ' → logprob: -7.393698215484619
    7. ':
' → logprob: -7.518698215484619
    8. '                            ' → logprob: -7.643698215484619
    9. '```' → logprob: -7.768698215484619
    10. '           ' → logprob: -8.018698692321777

Token 2061: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -7.612634362885728e-05
    2. ' continue' → logprob: -9.500076293945312
    3. '```' → logprob: -15.000076293945312
    4. '                           ' → logprob: -15.125076293945312
    5. '                       ' → logprob: -15.500076293945312
    6. '	continue' → logprob: -15.625076293945312
    7. '                   ' → logprob: -15.750076293945312
    8. '                               ' → logprob: -17.000076293945312
    9. 'contin' → logprob: -17.750076293945312
    10. 'continu' → logprob: -17.875076293945312

Token 2062: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6485632061958313
    2. ' new' → logprob: -1.0235631465911865
    3. '                           ' → logprob: -2.2735631465911865
    4. '                               ' → logprob: -5.648563385009766
    5. 'new' → logprob: -5.773563385009766
    6. '                   ' → logprob: -6.023563385009766
    7. '```' → logprob: -6.273563385009766
    8. ':
' → logprob: -7.648563385009766
    9. '[new' → logprob: -7.898563385009766
    10. '   ' → logprob: -8.148563385009766

Token 2063: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4612567126750946
    2. '```' → logprob: -1.586256742477417
    3. '                           ' → logprob: -2.086256742477417
    4. '                               ' → logprob: -3.836256742477417
    5. ' new' → logprob: -4.961256504058838
    6. ' continue' → logprob: -5.711256504058838
    7. '                        ' → logprob: -6.836256504058838
    8. '``' → logprob: -6.836256504058838
    9. '                        
' → logprob: -6.961256504058838
    10. '                            ' → logprob: -7.086256504058838

Token 2064: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.10024064034223557
    2. ' new' → logprob: -2.350240707397461
    3. '```' → logprob: -10.350240707397461
    4. '                       ' → logprob: -14.225240707397461
    5. 'n' → logprob: -14.600240707397461
    6. '``' → logprob: -15.350240707397461
    7. '	new' → logprob: -15.475240707397461
    8. '$new' → logprob: -15.975240707397461
    9. '                           ' → logprob: -16.22524070739746
    10. '_new' → logprob: -16.35024070739746

Token 2065: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.182190554682165e-05
    2. 'npos' → logprob: -9.750061988830566
    3. 'n' → logprob: -13.250061988830566
    4. '_pos' → logprob: -13.625061988830566
    5. 'pos' → logprob: -15.250061988830566
    6. '```' → logprob: -15.375061988830566
    7. '_p' → logprob: -17.25006103515625
    8. '\' → logprob: -17.87506103515625
    9. '_positions' → logprob: -18.37506103515625
    10. '
' → logprob: -18.50006103515625

Token 2066: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00016301481809932739
    2. '_pos' → logprob: -9.250163078308105
    3. 'os' → logprob: -9.625163078308105
    4. '_n' → logprob: -15.875163078308105
    5. '	pos' → logprob: -15.875163078308105
    6. 'npos' → logprob: -15.875163078308105
    7. 'poss' → logprob: -16.00016212463379
    8. 'Pos' → logprob: -16.12516212463379
    9. 'poz' → logprob: -16.37516212463379
    10. 'posa' → logprob: -17.50016212463379

Token 2067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '=
' → logprob: -17.876502990722656
    4. '＝' → logprob: -20.126502990722656
    5. '=}' → logprob: -20.251502990722656
    6. '+=' → logprob: -20.376502990722656
    7. '.=' → logprob: -21.001502990722656
    8. '=

' → logprob: -21.001502990722656
    9. '-=' → logprob: -21.001502990722656
    10. ')' → logprob: -21.126502990722656

Token 2068: ' n' (ID: 297)
  Prédit: 'npos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'npos' → logprob: -0.11665775626897812
    2. 'n' → logprob: -2.3666577339172363
    3. ' n' → logprob: -4.116657733917236
    4. 'pos' → logprob: -10.991658210754395
    5. 'npc' → logprob: -14.616658210754395
    6. '	n' → logprob: -15.241658210754395
    7. 'nop' → logprob: -16.116657257080078
    8. 'np' → logprob: -17.116657257080078
    9. ' pos' → logprob: -17.116657257080078
    10. '_n' → logprob: -17.366657257080078

Token 2069: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03265267610549927
    2. 'npos' → logprob: -3.5326526165008545
    3. 'n' → logprob: -5.907652854919434
    4. 'os' → logprob: -9.782652854919434
    5. 'Pos' → logprob: -10.157652854919434
    6. '(n' → logprob: -10.657652854919434
    7. 'posa' → logprob: -11.282652854919434
    8. 'poss' → logprob: -11.907652854919434
    9. '_pos' → logprob: -12.157652854919434
    10. '```' → logprob: -12.282652854919434

Token 2070: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03376061096787453
    2. '-' → logprob: -3.4087605476379395
    3. ' +' → logprob: -9.408761024475098
    4. '+' → logprob: -10.533761024475098
    5. '-n' → logprob: -12.658761024475098
    6. ' ' → logprob: -14.283761024475098
    7. ' ' → logprob: -14.408761024475098
    8. '```' → logprob: -14.533761024475098
    9. 'n' → logprob: -14.658761024475098
    10. '<|end|>' → logprob: -15.533761024475098

Token 2071: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0009114635176956654
    2. ' rem' → logprob: -7.000911235809326
    3. 'rep' → logprob: -17.750911712646484
    4. 'rest' → logprob: -19.000911712646484
    5. '(rem' → logprob: -19.375911712646484
    6. 'res' → logprob: -19.625911712646484
    7. 'reman' → logprob: -19.750911712646484
    8. 'rel' → logprob: -19.875911712646484
    9. 'dist' → logprob: -20.625911712646484
    10. 'ret' → logprob: -21.500911712646484

Token 2072: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00029995047952979803
    2. 'dist' → logprob: -8.125300407409668
    3. '_rem' → logprob: -13.500300407409668
    4. 'rem' → logprob: -13.625300407409668
    5. '	dist' → logprob: -14.750300407409668
    6. 'Dist' → logprob: -15.625300407409668
    7. 'ist' → logprob: -15.875300407409668
    8. '_pos' → logprob: -16.00029945373535
    9. '_DIST' → logprob: -16.00029945373535
    10. 'pos' → logprob: -16.50029945373535

Token 2073: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27021920680999756
    2. ')' → logprob: -1.7702192068099976
    3. '                       ' → logprob: -3.895219326019287
    4. '<|end|>' → logprob: -3.895219326019287
    5. '                           ' → logprob: -4.395219326019287
    6. '                               ' → logprob: -5.270219326019287
    7. ':' → logprob: -5.895219326019287
    8. '               ' → logprob: -6.395219326019287
    9. '```' → logprob: -7.145219326019287
    10. '):' → logprob: -7.395219326019287

Token 2074: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7004521489143372
    2. '```' → logprob: -1.7004520893096924
    3. '(next' → logprob: -2.0754520893096924
    4. '                           ' → logprob: -2.5754520893096924
    5. '                       ' → logprob: -3.2004520893096924
    6. ')' → logprob: -4.2004523277282715
    7. '                               ' → logprob: -4.3254523277282715
    8. 'next' → logprob: -4.3254523277282715
    9. '                                           ' → logprob: -4.7004523277282715
    10. ')
' → logprob: -5.4504523277282715

Token 2075: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11542952805757523
    2. '                   ' → logprob: -2.240429639816284
    3. 'next' → logprob: -6.740429401397705
    4. '                       ' → logprob: -7.615429401397705
    5. 'state' → logprob: -8.115429878234863
    6. '#' (adapté à ' #') → logprob: -8.115429878234863
    7. '                           ' → logprob: -8.740429878234863
    8. ' if' → logprob: -9.740429878234863
    9. '                               ' → logprob: -9.990429878234863
    10. '               ' → logprob: -11.240429878234863

Token 2076: ' Now' (ID: 6549)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1004437804222107
    2. '                   ' → logprob: -2.3504438400268555
    3. '                       ' → logprob: -9.225443840026855
    4. ' if' → logprob: -10.100443840026855
    5. '                           ' → logprob: -10.350443840026855
    6. '                               ' → logprob: -10.975443840026855
    7. '#' → logprob: -10.975443840026855
    8. '               ' → logprob: -11.350443840026855
    9. '```' → logprob: -11.850443840026855
    10. '                                   ' → logprob: -12.600443840026855

Token 2077: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2969836890697479
    2. 'if' → logprob: -1.5469837188720703
    3. ' if' → logprob: -3.9219837188720703
    4. '#' → logprob: -3.9219837188720703
    5. '                       ' → logprob: -5.92198371887207
    6. ' #' → logprob: -7.17198371887207
    7. '                           ' → logprob: -7.79698371887207
    8. '               ' → logprob: -9.29698371887207
    9. 'direction' → logprob: -9.29698371887207
    10. '                               ' → logprob: -9.42198371887207

Token 2078: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013174114748835564
    2. '                   ' → logprob: -5.138174057006836
    3. ' if' → logprob: -5.763174057006836
    4. '                       ' → logprob: -6.013174057006836
    5. '                           ' → logprob: -6.888174057006836
    6. '                               ' → logprob: -8.013174057006836
    7. '#' → logprob: -9.388174057006836
    8. '                                   ' → logprob: -9.763174057006836
    9. '                     ' → logprob: -10.888174057006836
    10. '                                       ' → logprob: -11.263174057006836

Token 2079: ' direction' (ID: 9262)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.02339513786137104
    2. 'if' → logprob: -4.14839506149292
    3. ' dir' → logprob: -5.14839506149292
    4. '                   ' → logprob: -6.77339506149292
    5. '(dir' → logprob: -8.398395538330078
    6. ' if' → logprob: -9.273395538330078
    7. '```' → logprob: -10.773395538330078
    8. '                       ' → logprob: -11.273395538330078
    9. '                           ' → logprob: -11.773395538330078
    10. '               ' → logprob: -12.523395538330078

Token 2080: ' measurement' (ID: 27666)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7362479567527771
    2. '                   ' → logprob: -1.3612480163574219
    3. '_match' → logprob: -1.4862480163574219
    4. '_matches' → logprob: -4.486248016357422
    5. 'match' → logprob: -4.611248016357422
    6. 'matches' → logprob: -4.611248016357422
    7. ' =' → logprob: -6.236248016357422
    8. '                       ' → logprob: -7.111248016357422
    9. 'matched' → logprob: -7.236248016357422
    10. '=' → logprob: -7.236248016357422

Token 2081: ' c' (ID: 274)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004462812503334135
    2. 'if' → logprob: -7.875446319580078
    3. ' if' → logprob: -10.000446319580078
    4. '                       ' → logprob: -11.750446319580078
    5. '```' → logprob: -12.375446319580078
    6. '               ' → logprob: -12.625446319580078
    7. ',' → logprob: -13.250446319580078
    8. '                  ' → logprob: -14.000446319580078
    9. '(' → logprob: -14.375446319580078
    10. '                    ' → logprob: -14.875446319580078

Token 2082: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.26335608959198
    2. ' =' → logprob: -1.63835608959198
    3. 'matches' → logprob: -1.88835608959198
    4. '=' → logprob: -2.1383562088012695
    5. 'match' → logprob: -2.5133562088012695
    6. '_match' → logprob: -2.7633562088012695
    7. 'orrect' → logprob: -3.6383562088012695
    8. '_matches' → logprob: -4.6383562088012695
    9. '==' → logprob: -4.8883562088012695
    10. 'heck' → logprob: -5.0133562088012695

Token 2083: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006650181603617966
    2. 'if' → logprob: -7.750665187835693
    3. ' if' → logprob: -8.750664710998535
    4. '                       ' → logprob: -10.625664710998535
    5. '               ' → logprob: -11.500664710998535
    6. '<|end|>' → logprob: -11.875664710998535
    7. '                  ' → logprob: -12.125664710998535
    8. '                    ' → logprob: -12.250664710998535
    9. ',' → logprob: -12.250664710998535
    10. ')' → logprob: -12.375664710998535

Token 2084: ' the' (ID: 290)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0621059387922287
    2. 'if' → logprob: -2.812105894088745
    3. '               ' → logprob: -10.062106132507324
    4. ' if' → logprob: -10.187106132507324
    5. 'for' → logprob: -10.687106132507324
    6. '                       ' → logprob: -10.687106132507324
    7. '```' → logprob: -12.437106132507324
    8. '           ' → logprob: -12.812106132507324
    9. '                  ' → logprob: -13.562106132507324
    10. '   ' → logprob: -13.812106132507324

Token 2085: ' measurement' (ID: 27666)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.053763821721076965
    2. '#' → logprob: -3.5537638664245605
    3. '                   ' → logprob: -4.6787638664245605
    4. 'direction' → logprob: -5.0537638664245605
    5. ' if' → logprob: -5.3037638664245605
    6. 'dir' → logprob: -6.8037638664245605
    7. 'for' → logprob: -7.3037638664245605
    8. '                       ' → logprob: -7.5537638664245605
    9. 'new' → logprob: -8.553763389587402
    10. ' #' → logprob: -8.803763389587402

Token 2086: ' can' (ID: 665)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.39965155720710754
    2. 'must' → logprob: -1.6496515274047852
    3. 'should' → logprob: -2.524651527404785
    4. 'may' → logprob: -4.524651527404785
    5. 'match' → logprob: -4.524651527404785
    6. '                   ' → logprob: -5.024651527404785
    7. 'can' → logprob: -5.524651527404785
    8. ' matches' → logprob: -5.524651527404785
    9. '#' → logprob: -5.649651527404785
    10. ' should' → logprob: -6.024651527404785

Token 2087: ' be' (ID: 413)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.20898456871509552
    2. ' match' → logprob: -2.333984613418579
    3. 'either' → logprob: -3.333984613418579
    4. 'be' → logprob: -3.458984613418579
    5. ' be' → logprob: -4.083984375
    6. ' either' → logprob: -5.333984375
    7. '```' → logprob: -7.333984375
    8. 'also' → logprob: -7.458984375
    9. '==' → logprob: -7.833984375
    10. 'equal' → logprob: -8.208984375

Token 2088: ' either' (ID: 4784)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.7756472826004028
    2. 'on' → logprob: -1.1506472826004028
    3. 'either' → logprob: -2.0256471633911133
    4. 'dir' → logprob: -3.0256471633911133
    5. 'the' → logprob: -4.150647163391113
    6. 'from' → logprob: -5.025647163391113
    7. ' matched' → logprob: -5.275647163391113
    8. ' on' → logprob: -6.525647163391113
    9. 'matching' → logprob: -6.525647163391113
    10. ' either' → logprob: -6.650647163391113

Token 2089: ' before' (ID: 2254)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.8090296387672424
    2. 'dx' → logprob: -1.1840295791625977
    3. 'nd' → logprob: -2.5590295791625977
    4. '(nd' → logprob: -2.9340295791625977
    5. '(' → logprob: -3.4340295791625977
    6. 'dir' → logprob: -3.6840295791625977
    7. 'on' → logprob: -4.059029579162598
    8. '(dir' → logprob: -4.184029579162598
    9. ' dx' → logprob: -5.434029579162598
    10. ' nd' → logprob: -5.434029579162598

Token 2090: ' turn' (ID: 3716)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.15298740565776825
    2. 'the' → logprob: -2.902987480163574
    3. 'turn' → logprob: -3.277987480163574
    4. ' or' → logprob: -3.402987480163574
    5. 'new' → logprob: -5.152987480163574
    6. '```' → logprob: -5.152987480163574
    7. '#' → logprob: -6.402987480163574
    8. 'moving' → logprob: -6.902987480163574
    9. ',' → logprob: -7.277987480163574
    10. 'move' → logprob: -8.777987480163574

Token 2091: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9127101898193359
    2. ',' → logprob: -1.162710189819336
    3. 'or' → logprob: -1.662710189819336
    4. '                   ' → logprob: -2.787710189819336
    5. ')' → logprob: -4.287710189819336
    6. '<|end|>' → logprob: -4.912710189819336
    7. '```' → logprob: -5.912710189819336
    8. '...' → logprob: -6.287710189819336
    9. '                           ' → logprob: -6.662710189819336
    10. '(' → logprob: -6.787710189819336

Token 2092: 'old' (ID: 1280)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3217687606811523
    2. 'nd' → logprob: -1.4467687606811523
    3. 'new' → logprob: -1.5717687606811523
    4. 'sid' → logprob: -2.3217687606811523
    5. 'dx' → logprob: -2.5717687606811523
    6. 'ns' → logprob: -3.6967687606811523
    7. '(nd' → logprob: -4.196768760681152
    8. 'n' → logprob: -4.321768760681152
    9. '#' → logprob: -4.696768760681152
    10. '(dx' → logprob: -4.946768760681152

Token 2093: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9082610607147217
    2. 'direction' → logprob: -1.5332610607147217
    3. 'street' → logprob: -1.7832610607147217
    4. '_dx' → logprob: -3.2832610607147217
    5. ' direction' → logprob: -3.4082610607147217
    6. ' dx' → logprob: -3.6582610607147217
    7. ' street' → logprob: -3.7832610607147217
    8. 'd' → logprob: -4.158261299133301
    9. ',' → logprob: -4.408261299133301
    10. ')' → logprob: -4.658261299133301

Token 2094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002384568564593792
    2. ',d' → logprob: -6.877384662628174
    3. ')' → logprob: -7.127384662628174
    4. '),' → logprob: -8.377384185791016
    5. ',
' → logprob: -9.377384185791016
    6. ',)' → logprob: -9.877384185791016
    7. ' ,' → logprob: -10.002384185791016
    8. ',y' → logprob: -10.502384185791016
    9. ',n' → logprob: -10.877384185791016
    10. '                           ' → logprob: -11.252384185791016

Token 2095: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.008766191080212593
    2. ' dy' → logprob: -4.758766174316406
    3. 'old' → logprob: -9.133766174316406
    4. ' old' → logprob: -10.883766174316406
    5. 'd' → logprob: -11.758766174316406
    6. 'new' → logprob: -11.758766174316406
    7. 'ddy' → logprob: -13.383766174316406
    8. '```' → logprob: -13.758766174316406
    9. '
' → logprob: -14.008766174316406
    10. 'ady' → logprob: -14.383766174316406

Token 2096: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2234691083431244
    2. ',' → logprob: -2.4734690189361572
    3. ' or' → logprob: -2.9734690189361572
    4. '),' → logprob: -3.0984690189361572
    5. 'or' → logprob: -4.348469257354736
    6. ',)' → logprob: -5.223469257354736
    7. ')
' → logprob: -7.598469257354736
    8. '                   ' → logprob: -8.098468780517578
    9. '```' → logprob: -8.473468780517578
    10. '`)' → logprob: -9.598468780517578

Token 2097: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2720659077167511
    2. 'or' → logprob: -2.1470658779144287
    3. ' or' → logprob: -2.1470658779144287
    4. '```' → logprob: -6.397066116333008
    5. ',' → logprob: -6.772066116333008
    6. '<|end|>' → logprob: -7.772066116333008
    7. '                       ' → logprob: -8.147066116333008
    8. '#' → logprob: -8.272066116333008
    9. ')' → logprob: -8.522066116333008
    10. '                           ' → logprob: -9.397066116333008

Token 2098: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.6578090190887451
    2. 'new' → logprob: -1.2828090190887451
    3. '#' → logprob: -1.7828090190887451
    4. 'on' → logprob: -3.782809019088745
    5. ' after' → logprob: -5.282809257507324
    6. '                   ' → logprob: -5.407809257507324
    7. ' new' → logprob: -6.032809257507324
    8. ' on' → logprob: -7.782809257507324
    9. 'the' → logprob: -7.907809257507324
    10. ' #' → logprob: -8.407809257507324

Token 2099: ' turn' (ID: 3716)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nd' → logprob: -1.0597683191299438
    2. 'new' → logprob: -1.3097683191299438
    3. '(n' → logprob: -1.6847683191299438
    4. 'the' → logprob: -3.3097681999206543
    5. 'nd' → logprob: -3.4347681999206543
    6. ' (' → logprob: -3.6847681999206543
    7. '(new' → logprob: -3.6847681999206543
    8. 'c' → logprob: -3.9347681999206543
    9. '(' → logprob: -4.434768199920654
    10. '(c' → logprob: -4.559768199920654

Token 2100: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00020818933262489736
    2. ',' → logprob: -9.500207901000977
    3. '                       ' → logprob: -10.125207901000977
    4. '<|end|>' → logprob: -10.875207901000977
    5. '               ' → logprob: -11.000207901000977
    6. '```' → logprob: -11.375207901000977
    7. '                           ' → logprob: -12.000207901000977
    8. '                  ' → logprob: -12.000207901000977
    9. ')' → logprob: -12.250207901000977
    10. '                    
' → logprob: -12.250207901000977

Token 2101: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0026956244837492704
    2. '(nd' → logprob: -6.627695560455322
    3. ' nd' → logprob: -6.877695560455322
    4. 'new' → logprob: -8.12769603729248
    5. 'n' → logprob: -10.75269603729248
    6. '(' → logprob: -11.87769603729248
    7. 'ns' → logprob: -12.62769603729248
    8. '(n' → logprob: -13.25269603729248
    9. '   ' → logprob: -13.50269603729248
    10. '_nd' → logprob: -13.75269603729248

Token 2102: 'xx' (ID: 7605)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3484543561935425
    2. 'xx' → logprob: -1.2234543561935425
    3. 'dx' → logprob: -12.223454475402832
    4. 'd' → logprob: -13.973454475402832
    5. 'xd' → logprob: -14.223454475402832
    6. '
' → logprob: -14.848454475402832
    7. '(x' → logprob: -14.973454475402832
    8. ' xx' → logprob: -15.410954475402832
    9. '``' → logprob: -15.598454475402832
    10. '(xx' → logprob: -15.598454475402832

Token 2103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. ' ,' → logprob: -11.375036239624023
    3. '```' → logprob: -11.750036239624023
    4. '),' → logprob: -12.000036239624023
    5. ',d' → logprob: -12.375036239624023
    6. ',n' → logprob: -13.375036239624023
    7. ')' → logprob: -13.375036239624023
    8. ',
' → logprob: -14.125036239624023
    9. '`,' → logprob: -14.500036239624023
    10. 'and' → logprob: -14.750036239624023

Token 2104: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00010163593105971813
    2. ' nd' → logprob: -9.250102043151855
    3. '_nd' → logprob: -12.750102043151855
    4. '(nd' → logprob: -13.750102043151855
    5. 'нд' → logprob: -14.750102043151855
    6. '.nd' → logprob: -15.375102043151855
    7. 'n' → logprob: -15.500102043151855
    8. 'ndl' → logprob: -15.625102043151855
    9. 'ndum' → logprob: -16.37510108947754
    10. 'ndash' → logprob: -16.50010108947754

Token 2105: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -7.088138227118179e-05
    2. 'dy' → logprob: -9.625070571899414
    3. 'y' → logprob: -13.000070571899414
    4. 'xx' → logprob: -13.250070571899414
    5. 'd' → logprob: -15.375070571899414
    6. '	yy' → logprob: -15.375070571899414
    7. 'yd' → logprob: -16.125070571899414
    8. ' yy' → logprob: -17.000070571899414
    9. 'dd' → logprob: -17.250070571899414
    10. '.yy' → logprob: -18.000070571899414

Token 2106: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.24245630204677582
    2. ')' → logprob: -1.742456316947937
    3. '):
' → logprob: -3.2424561977386475
    4. '                   ' → logprob: -8.242456436157227
    5. '),' → logprob: -8.367456436157227
    6. '):' → logprob: -8.492456436157227
    7. '):

' → logprob: -8.742456436157227
    8. ')

' → logprob: -8.992456436157227
    9. ').
' → logprob: -9.992456436157227
    10. ').' → logprob: -9.992456436157227

Token 2107: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00013369438238441944
    2. '```' → logprob: -9.625133514404297
    3. '                       ' → logprob: -10.250133514404297
    4. '               ' → logprob: -11.250133514404297
    5. '                           ' → logprob: -12.500133514404297
    6. '                  ' → logprob: -13.250133514404297
    7. 'if' → logprob: -13.250133514404297
    8. '<|end|>' → logprob: -13.375133514404297
    9. '`' → logprob: -13.500133514404297
    10. '``' → logprob: -13.500133514404297

Token 2108: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007178372237831354
    2. 'if' → logprob: -5.00717830657959
    3. '```' → logprob: -8.75717830657959
    4. '                       ' → logprob: -8.88217830657959
    5. '               ' → logprob: -9.13217830657959
    6. ' if' → logprob: -10.13217830657959
    7. '           ' → logprob: -11.50717830657959
    8. '       ' → logprob: -13.13217830657959
    9. '   ' → logprob: -13.25717830657959
    10. '                           ' → logprob: -13.63217830657959

Token 2109: ' So' (ID: 2632)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011213925667107105
    2. 'if' → logprob: -4.511213779449463
    3. '               ' → logprob: -9.011214256286621
    4. '                       ' → logprob: -11.261214256286621
    5. ' if' → logprob: -11.386214256286621
    6. '```' → logprob: -11.511214256286621
    7. '           ' → logprob: -12.011214256286621
    8. '                  ' → logprob: -13.886214256286621
    9. '   ' → logprob: -14.011214256286621
    10. '                           ' → logprob: -14.886214256286621

Token 2110: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03948849439620972
    2. '                   ' → logprob: -3.4144885540008545
    3. ' if' → logprob: -5.164488315582275
    4. '```' → logprob: -10.164488792419434
    5. 'for' → logprob: -10.289488792419434
    6. '                       ' → logprob: -11.914488792419434
    7. '#' → logprob: -12.164488792419434
    8. '   ' → logprob: -12.289488792419434
    9. '               ' → logprob: -12.289488792419434
    10. '(if' → logprob: -12.914488792419434

Token 2111: ' c' (ID: 274)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.04022746533155441
    2. ' dir' → logprob: -3.2902274131774902
    3. '(dir' → logprob: -6.16522741317749
    4. '(' → logprob: -10.665227890014648
    5. '```' → logprob: -11.165227890014648
    6. ' (' → logprob: -11.540227890014648
    7. '   ' → logprob: -11.540227890014648
    8. '`' → logprob: -11.915227890014648
    9. 'direction' → logprob: -13.227727890014648
    10. '	dir' → logprob: -13.352727890014648

Token 2112: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0700967088341713
    2. '_match' → logprob: -3.070096731185913
    3. 'dx' → logprob: -4.070096492767334
    4. 'd' → logprob: -6.820096492767334
    5. '(dir' → logprob: -6.820096492767334
    6. '_dir' → logprob: -7.695096492767334
    7. 'xx' → logprob: -8.570096969604492
    8. 'Match' → logprob: -8.695096969604492
    9. ' dir' → logprob: -8.820096969604492
    10. '(' → logprob: -9.445096969604492

Token 2113: ' matches' (ID: 15248)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8583377599716187
    2. ' ==' → logprob: -1.4833377599716187
    3. '==' → logprob: -1.4833377599716187
    4. 'in' → logprob: -2.108337879180908
    5. '_match' → logprob: -7.858337879180908
    6. '==(' → logprob: -9.85833740234375
    7. 'not' → logprob: -9.98333740234375
    8. ' not' → logprob: -9.98333740234375
    9. 'dir' → logprob: -10.10833740234375
    10. ')' → logprob: -10.10833740234375

Token 2114: ' either' (ID: 4784)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3013019859790802
    2. '(dx' → logprob: -2.051301956176758
    3. 'nd' → logprob: -2.176301956176758
    4. '(nd' → logprob: -4.926301956176758
    5. ' dx' → logprob: -5.051301956176758
    6. ' nd' → logprob: -6.301301956176758
    7. 'old' → logprob: -6.801301956176758
    8. '(' → logprob: -7.926301956176758
    9. 'dir' → logprob: -8.176301956176758
    10. '   ' → logprob: -8.676301956176758

Token 2115: ' (' (ID: 350)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6686370372772217
    2. 'dir' → logprob: -1.2936370372772217
    3. '(dx' → logprob: -1.7936370372772217
    4. '(dir' → logprob: -3.4186370372772217
    5. ' dir' → logprob: -5.543637275695801
    6. ' dx' → logprob: -5.543637275695801
    7. 'if' → logprob: -5.793637275695801
    8. '(' → logprob: -6.293637275695801
    9. 'nd' → logprob: -7.168637275695801
    10. ' (' → logprob: -8.2936372756958

Token 2116: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.35805389285087585
    2. 'nd' → logprob: -1.2330539226531982
    3. 'old' → logprob: -4.733053684234619
    4. '   ' → logprob: -8.733054161071777
    5. 'nx' → logprob: -8.858054161071777
    6. ' dx' → logprob: -9.233054161071777
    7. '(dx' → logprob: -9.233054161071777
    8. ' nd' → logprob: -9.733054161071777
    9. 'xd' → logprob: -10.733054161071777
    10. '       ' → logprob: -10.858054161071777

Token 2117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014256240800023079
    2. ' or' → logprob: -4.639256477355957
    3. 'or' → logprob: -6.764256477355957
    4. '),' → logprob: -6.764256477355957
    5. ')' → logprob: -6.889256477355957
    6. ' ,' → logprob: -7.764256477355957
    7. ',d' → logprob: -9.389256477355957
    8. ',),' → logprob: -9.389256477355957
    9. ',)' → logprob: -9.514256477355957
    10. '','' → logprob: -9.639256477355957

Token 2118: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00038086410495452583
    2. ' dy' → logprob: -7.875380992889404
    3. '   ' → logprob: -15.000380516052246
    4. '
' → logprob: -15.500380516052246
    5. ' ' → logprob: -16.625381469726562
    6. '.dy' → logprob: -16.750381469726562
    7. '  ' → logprob: -16.875381469726562
    8. 'ddy' → logprob: -18.250381469726562
    9. '    ' → logprob: -18.750381469726562
    10. 'd' → logprob: -19.125381469726562

Token 2119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012502464465796947
    2. ' or' → logprob: -5.012502670288086
    3. ',' → logprob: -6.012502670288086
    4. '),' → logprob: -6.137502670288086
    5. ',)' → logprob: -7.512502670288086
    6. 'or' → logprob: -8.137502670288086
    7. '                   ' → logprob: -8.637502670288086
    8. ' )' → logprob: -10.012502670288086
    9. '),(' → logprob: -10.887502670288086
    10. ')
' → logprob: -11.262502670288086

Token 2120: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1883755624294281
    2. 'or' → logprob: -1.8133755922317505
    3. '                   ' → logprob: -5.313375473022461
    4. '                       ' → logprob: -6.188375473022461
    5. ')' → logprob: -7.438375473022461
    6. ',' → logprob: -8.438375473022461
    7. ' and' → logprob: -8.563375473022461
    8. 'and' → logprob: -8.938375473022461
    9. ':' → logprob: -9.188375473022461
    10. 'in' → logprob: -9.188375473022461

Token 2121: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.001960512949153781
    2. ' (' → logprob: -7.126960277557373
    3. 'nd' → logprob: -7.501960277557373
    4. '(n' → logprob: -7.876960277557373
    5. '(ns' → logprob: -9.126960754394531
    6. '(' → logprob: -9.501960754394531
    7. '(nx' → logprob: -11.376960754394531
    8. '(nb' → logprob: -11.751960754394531
    9. ' nd' → logprob: -12.626960754394531
    10. '`' → logprob: -12.876960754394531

Token 2122: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -9.901345038088039e-05
    2. ' nd' → logprob: -9.250099182128906
    3. '(nd' → logprob: -13.000099182128906
    4. '   ' → logprob: -15.125099182128906
    5. 'n' → logprob: -16.125099182128906
    6. '
' → logprob: -16.375099182128906
    7. 'new' → logprob: -16.625099182128906
    8. '_nd' → logprob: -17.250099182128906
    9. '  ' → logprob: -17.375099182128906
    10. '    ' → logprob: -18.000099182128906

Token 2123: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -1.3544423381972592e-05
    2. 'x' → logprob: -11.25001335144043
    3. '
' → logprob: -15.62501335144043
    4. '(xx' → logprob: -16.12501335144043
    5. '``' → logprob: -16.75001335144043
    6. ' xx' → logprob: -17.75001335144043
    7. 'd' → logprob: -18.00001335144043
    8. '```' → logprob: -18.12501335144043
    9. '(x' → logprob: -18.37501335144043
    10. 'dx' → logprob: -18.50001335144043

Token 2124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -13.625003814697266
    3. 'nd' → logprob: -13.875003814697266
    4. '```' → logprob: -14.625003814697266
    5. ')' → logprob: -14.875003814697266
    6. ',
' → logprob: -15.000003814697266
    7. ',n' → logprob: -15.375003814697266
    8. '(nd' → logprob: -15.750003814697266
    9. '
' → logprob: -15.875003814697266
    10. ',-' → logprob: -16.125003814697266

Token 2125: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -8.673547563375905e-05
    2. ' nd' → logprob: -9.375086784362793
    3. '(nd' → logprob: -13.750086784362793
    4. '_nd' → logprob: -14.375086784362793
    5. 'Nd' → logprob: -17.500085830688477
    6. '.nd' → logprob: -17.625085830688477
    7. 'ND' → logprob: -17.625085830688477
    8. 'ndl' → logprob: -18.000085830688477
    9. '
' → logprob: -18.250085830688477
    10. 'n' → logprob: -18.250085830688477

Token 2126: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -2.2200749754119897e-06
    2. 'dy' → logprob: -13.750001907348633
    3. ' yy' → logprob: -14.250001907348633
    4. '	yy' → logprob: -14.875001907348633
    5. '0' → logprob: -17.375001907348633
    6. '.yy' → logprob: -17.500001907348633
    7. 'd' → logprob: -17.750001907348633
    8. '1' → logprob: -18.000001907348633
    9. ' ' → logprob: -18.500001907348633
    10. 'yyy' → logprob: -19.000001907348633

Token 2127: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03251812979578972
    2. '):' → logprob: -3.657518148422241
    3. ')' → logprob: -5.907517910003662
    4. '),' → logprob: -5.907517910003662
    5. '                   ' → logprob: -8.28251838684082
    6. ',' → logprob: -8.40751838684082
    7. '):

' → logprob: -8.65751838684082
    8. ')
' → logprob: -10.53251838684082
    9. ':
' → logprob: -10.53251838684082
    10. '                       ' → logprob: -10.53251838684082

Token 2128: ' accept' (ID: 5923)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8609281778335571
    2. 'if' → logprob: -1.2359281778335571
    3. '                       ' → logprob: -1.9859281778335571
    4. '                   ' → logprob: -2.7359280586242676
    5. ' next' → logprob: -3.3609280586242676
    6. 'continue' → logprob: -3.6109280586242676
    7. ' if' → logprob: -4.610928058624268
    8. '                           ' → logprob: -5.110928058624268
    9. '                               ' → logprob: -5.860928058624268
    10. ' continue' → logprob: -6.485928058624268

Token 2129: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017123986617662013
    2. '                       ' → logprob: -9.250171661376953
    3. '               ' → logprob: -10.500171661376953
    4. 'if' → logprob: -11.375171661376953
    5. '<|end|>' → logprob: -11.500171661376953
    6. '```' → logprob: -11.875171661376953
    7. '                           ' → logprob: -12.000171661376953
    8. ' if' → logprob: -13.250171661376953
    9. '           ' → logprob: -13.250171661376953
    10. '				' → logprob: -13.250171661376953

Token 2130: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014247603248804808
    2. '                       ' → logprob: -6.876424789428711
    3. '               ' → logprob: -8.876424789428711
    4. 'if' → logprob: -9.876424789428711
    5. '```' → logprob: -10.001424789428711
    6. '   ' → logprob: -10.376424789428711
    7. '           ' → logprob: -10.626424789428711
    8. '(' → logprob: -10.751424789428711
    9. '                           ' → logprob: -10.751424789428711
    10. '       ' → logprob: -11.501424789428711

Token 2131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5767505168914795
    2. '                   ' → logprob: -0.8267505168914795
    3. ' if' → logprob: -7.451750755310059
    4. '               ' → logprob: -8.951750755310059
    5. '           ' → logprob: -9.576750755310059
    6. '```' → logprob: -11.576750755310059
    7. '                       ' → logprob: -11.701750755310059
    8. '       ' → logprob: -12.201750755310059
    9. '   ' → logprob: -12.576750755310059
    10. 'for' → logprob: -13.076750755310059

Token 2132: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.04422140493988991
    2. ' dir' → logprob: -3.1692214012145996
    3. '(dir' → logprob: -6.7942214012146
    4. '   ' → logprob: -9.669221878051758
    5. '(' → logprob: -12.044221878051758
    6. ' (' → logprob: -12.169221878051758
    7. 'c' → logprob: -12.294221878051758
    8. ' ' → logprob: -12.419221878051758
    9. '       ' → logprob: -12.544221878051758
    10. '  ' → logprob: -12.919221878051758

Token 2133: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.3856492842023727e-06
    2. '_MATCH' → logprob: -14.500000953674316
    3. 'match' → logprob: -14.875000953674316
    4. '_matches' → logprob: -14.875000953674316
    5. '_' → logprob: -16.625001907348633
    6. '_matching' → logprob: -16.750001907348633
    7. '==' → logprob: -17.750001907348633
    8. 'Match' → logprob: -18.000001907348633
    9. ' match' → logprob: -19.375001907348633
    10. '=' → logprob: -19.500001907348633

Token 2134: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.0029811484273523092
    2. 'dx' → logprob: -5.877981185913086
    3. '(nd' → logprob: -8.877981185913086
    4. '(nx' → logprob: -11.252981185913086
    5. ' dx' → logprob: -11.627981185913086
    6. '(' → logprob: -11.877981185913086
    7. 'nd' → logprob: -12.752981185913086
    8. '(d' → logprob: -13.502981185913086
    9. '
' → logprob: -14.127981185913086
    10. '(
' → logprob: -14.877981185913086

Token 2135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036227621603757143
    2. ' ,' → logprob: -5.628622531890869
    3. ',d' → logprob: -11.253623008728027
    4. ')' → logprob: -12.753623008728027
    5. ',
' → logprob: -12.753623008728027
    6. '`,' → logprob: -14.378623008728027
    7. '),' → logprob: -14.878623008728027
    8. '[' → logprob: -15.128623008728027
    9. '           ' → logprob: -15.128623008728027
    10. '‌,' → logprob: -15.378623008728027

Token 2136: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002475777640938759
    2. ' dy' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.50247573852539
    4. '  ' → logprob: -18.37747573852539
    5. '.dy' → logprob: -18.50247573852539
    6. ' ' → logprob: -19.00247573852539
    7. 'd' → logprob: -19.00247573852539
    8. '    ' → logprob: -19.12747573852539
    9. 'dym' → logprob: -19.37747573852539
    10. 'Dy' → logprob: -19.50247573852539

Token 2137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001581993536092341
    2. ' ,' → logprob: -6.751582145690918
    3. ',c' → logprob: -8.126582145690918
    4. ',d' → logprob: -9.376582145690918
    5. ',n' → logprob: -12.126582145690918
    6. ')' → logprob: -12.126582145690918
    7. '           ' → logprob: -12.251582145690918
    8. '                   ' → logprob: -12.876582145690918
    9. ' or' → logprob: -13.001582145690918
    10. '               ' → logprob: -13.001582145690918

Token 2138: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005247395019978285
    2. ' c' → logprob: -5.255247592926025
    3. '   ' → logprob: -11.880247116088867
    4. ')c' → logprob: -13.130247116088867
    5. '    ' → logprob: -13.880247116088867
    6. '  ' → logprob: -14.380247116088867
    7. '	c' → logprob: -14.505247116088867
    8. ' ' → logprob: -14.755247116088867
    9. '           ' → logprob: -14.880247116088867
    10. '                   ' → logprob: -15.380247116088867

Token 2139: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0003403495065867901
    2. 'c' → logprob: -8.000340461730957
    3. '(dir' → logprob: -13.500340461730957
    4. '(c' → logprob: -13.625340461730957
    5. ')' → logprob: -14.250340461730957
    6. 'd' → logprob: -14.875340461730957
    7. ' dir' → logprob: -15.125340461730957
    8. '[c' → logprob: -15.500340461730957
    9. 'di' → logprob: -15.875340461730957
    10. 'ir' → logprob: -16.25033950805664

Token 2140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ' )' → logprob: -11.750027656555176
    3. ' or' → logprob: -12.250027656555176
    4. '                   ' → logprob: -12.375027656555176
    5. '                       ' → logprob: -12.375027656555176
    6. '):
' → logprob: -12.750027656555176
    7. 'or' → logprob: -13.250027656555176
    8. '')' → logprob: -14.500027656555176
    9. '")' → logprob: -15.125027656555176
    10. '):' → logprob: -15.125027656555176

Token 2141: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000799980596639216
    2. 'or' → logprob: -7.250800132751465
    3. '                       ' → logprob: -9.875800132751465
    4. ':' → logprob: -11.500800132751465
    5. '                           ' → logprob: -11.625800132751465
    6. '                               ' → logprob: -12.125800132751465
    7. '                   ' → logprob: -12.125800132751465
    8. '	or' → logprob: -13.500800132751465
    9. ':
' → logprob: -13.750800132751465
    10. '                        ' → logprob: -14.125800132751465

Token 2142: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.006717505399137735
    2. ' dir' → logprob: -5.006717681884766
    3. '                   ' → logprob: -13.131717681884766
    4. '(dir' → logprob: -15.756717681884766
    5. '                  ' → logprob: -17.631717681884766
    6. '               ' → logprob: -18.256717681884766
    7. '	dir' → logprob: -18.631717681884766
    8. '           ' → logprob: -19.006717681884766
    9. '                           ' → logprob: -19.756717681884766
    10. '              ' → logprob: -19.756717681884766

Token 2143: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.0280383548888494e-06
    2. 'match' → logprob: -14.125000953674316
    3. '(' → logprob: -16.750001907348633
    4. '+' → logprob: -17.125001907348633
    5. 'Match' → logprob: -17.125001907348633
    6. '_MATCH' → logprob: -17.500001907348633
    7. '_matches' → logprob: -17.500001907348633
    8. '_predict' → logprob: -17.500001907348633
    9. '```' → logprob: -18.125001907348633
    10. '(match' → logprob: -18.375001907348633

Token 2144: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -5.824579784530215e-05
    2. '(' → logprob: -10.0000581741333
    3. '(n' → logprob: -12.1250581741333
    4. 'nd' → logprob: -12.6250581741333
    5. '(nx' → logprob: -13.6250581741333
    6. '(ns' → logprob: -13.7500581741333
    7. ' (' → logprob: -13.8750581741333
    8. '(nb' → logprob: -15.2500581741333
    9. '(nt' → logprob: -15.5000581741333
    10. '(
' → logprob: -15.6250581741333

Token 2145: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -1.9361264946837764e-07
    2. '(xx' → logprob: -16.75
    3. 'x' → logprob: -16.875
    4. '``' → logprob: -19.25
    5. 'dx' → logprob: -19.375
    6. '
' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. ' xx' → logprob: -20.5
    9. '(' → logprob: -22.0
    10. '**' → logprob: -22.125

Token 2146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005533903022296727
    2. ' ,' → logprob: -7.500553607940674
    3. ',
' → logprob: -16.375553131103516
    4. ',d' → logprob: -16.500553131103516
    5. '‌,' → logprob: -16.875553131103516
    6. '_,' → logprob: -16.875553131103516
    7. '(),' → logprob: -17.125553131103516
    8. ')' → logprob: -17.250553131103516
    9. '',' → logprob: -17.375553131103516
    10. '<|end|>' → logprob: -17.625553131103516

Token 2147: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0011711753904819489
    2. ' nd' → logprob: -6.751171112060547
    3. '(nd' → logprob: -14.251171112060547
    4. '_nd' → logprob: -15.751171112060547
    5. 'Nd' → logprob: -17.376171112060547
    6. 'ND' → logprob: -17.376171112060547
    7. 'n' → logprob: -17.626171112060547
    8. '.nd' → logprob: -18.376171112060547
    9. '
' → logprob: -18.501171112060547
    10. '  ' → logprob: -18.626171112060547

Token 2148: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.008936699479818344
    2. 'xx' → logprob: -5.133936882019043
    3. 'x' → logprob: -6.008936882019043
    4. 'c' → logprob: -8.383936882019043
    5. 'd' → logprob: -8.883936882019043
    6. 'dy' → logprob: -8.883936882019043
    7. 'dx' → logprob: -10.883936882019043
    8. 'xy' → logprob: -12.133936882019043
    9. 'y' → logprob: -12.133936882019043
    10. '
' → logprob: -13.383936882019043

Token 2149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002834007143974304
    2. ',c' → logprob: -5.877833843231201
    3. ' ,' → logprob: -10.87783432006836
    4. '(c' → logprob: -12.12783432006836
    5. 'c' → logprob: -12.37783432006836
    6. ' c' → logprob: -14.75283432006836
    7. '(' → logprob: -16.62783432006836
    8. '```' → logprob: -16.75283432006836
    9. ')' → logprob: -17.00283432006836
    10. '[c' → logprob: -17.25283432006836

Token 2150: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007117166533134878
    2. ' c' → logprob: -7.250711917877197
    3. ')c' → logprob: -14.000711441040039
    4. '   ' → logprob: -14.625711441040039
    5. '	c' → logprob: -15.750711441040039
    6. ')' → logprob: -16.25071144104004
    7. ' ' → logprob: -16.37571144104004
    8. '  ' → logprob: -16.87571144104004
    9. '```' → logprob: -17.00071144104004
    10. '`' → logprob: -17.37571144104004

Token 2151: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.7835754988482222e-05
    2. 'c' → logprob: -11.000018119812012
    3. '(c' → logprob: -15.375018119812012
    4. 'di' → logprob: -15.375018119812012
    5. '(dir' → logprob: -15.875018119812012
    6. ')' → logprob: -16.000017166137695
    7. 'd' → logprob: -17.000017166137695
    8. '[c' → logprob: -17.000017166137695
    9. ' dir' → logprob: -17.125017166137695
    10. 'cli' → logprob: -17.875017166137695

Token 2152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38693830370903015
    2. '):
' → logprob: -1.1369383335113525
    3. ')' → logprob: -10.011938095092773
    4. '):
' → logprob: -11.511938095092773
    5. ':' → logprob: -12.511938095092773
    6. '                   ' → logprob: -12.761938095092773
    7. '):

' → logprob: -12.886938095092773
    8. '                       ' → logprob: -13.261938095092773
    9. ':
' → logprob: -14.886938095092773
    10. '                           ' → logprob: -15.636938095092773

Token 2153: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009244434535503387
    2. '                               ' → logprob: -5.759244441986084
    3. '                           ' → logprob: -5.884244441986084
    4. '                   ' → logprob: -7.259244441986084
    5. '(next' → logprob: -7.259244441986084
    6. '):
' → logprob: -7.509244441986084
    7. ':
' → logprob: -7.509244441986084
    8. ':' → logprob: -8.259243965148926
    9. '                        
' → logprob: -9.759243965148926
    10. '```' → logprob: -9.884243965148926

Token 2154: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.1329975724220276
    2. ' next' → logprob: -2.132997512817383
    3. '                               ' → logprob: -5.382997512817383
    4. '                           ' → logprob: -6.882997512817383
    5. '                       ' → logprob: -7.882997512817383
    6. '```' → logprob: -11.257997512817383
    7. '                                   ' → logprob: -11.507997512817383
    8. '(next' → logprob: -11.632997512817383
    9. '                                           ' → logprob: -12.132997512817383
    10. '                                       ' → logprob: -12.132997512817383

Token 2155: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -2.1008713702030946e-06
    2. 'States' → logprob: -14.000001907348633
    3. '_' → logprob: -14.875001907348633
    4. 'states' → logprob: -14.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. '_state' → logprob: -16.250001907348633
    7. '_st' → logprob: -16.625001907348633
    8. 's' → logprob: -16.625001907348633
    9. '_
' → logprob: -16.750001907348633
    10. '
' → logprob: -17.500001907348633

Token 2156: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005326604936271906
    2. '.' → logprob: -5.255326747894287
    3. '.setdefault' → logprob: -10.380326271057129
    4. ').' → logprob: -11.005326271057129
    5. ' .' → logprob: -11.130326271057129
    6. '<|end|>' → logprob: -11.380326271057129
    7. '.update' → logprob: -12.130326271057129
    8. '.append' → logprob: -12.755326271057129
    9. '.Add' → logprob: -13.505326271057129
    10. '{}.' → logprob: -13.755326271057129

Token 2157: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00041184606379829347
    2. '(s' → logprob: -7.8754119873046875
    3. '(' → logprob: -11.000411987304688
    4. ' (' → logprob: -11.375411987304688
    5. '```' → logprob: -13.750411987304688
    6. '   ' → logprob: -14.250411987304688
    7. ' ((' → logprob: -14.250411987304688
    8. '                           ' → logprob: -14.750411987304688
    9. '(
' → logprob: -15.125411987304688
    10. '                       ' → logprob: -16.375411987304688

Token 2158: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -1.1994775377388578e-05
    2. 'sid' → logprob: -11.750012397766113
    3. ' ns' → logprob: -12.750012397766113
    4. '(ns' → logprob: -14.375012397766113
    5. 'nid' → logprob: -15.625012397766113
    6. '	ns' → logprob: -15.875012397766113
    7. 'nd' → logprob: -16.125011444091797
    8. 'n' → logprob: -16.250011444091797
    9. '   ' → logprob: -16.375011444091797
    10. 'nsk' → logprob: -17.625011444091797

Token 2159: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.8402083516120911
    2. ''id' → logprob: -0.8402083516120911
    3. ''s' → logprob: -2.5902082920074463
    4. '['' → logprob: -2.8402082920074463
    5. ''' → logprob: -6.965208530426025
    6. '[' → logprob: -7.340208530426025
    7. 'sid' → logprob: -7.465208530426025
    8. '[id' → logprob: -7.840208530426025
    9. '('' → logprob: -8.215208053588867
    10. '{'' → logprob: -8.840208053588867

Token 2160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ',
' → logprob: -11.500025749206543
    3. ',new' → logprob: -12.125025749206543
    4. '<|end|>' → logprob: -12.250025749206543
    5. ',n' → logprob: -13.625025749206543
    6. ' ,' → logprob: -13.875025749206543
    7. '‌,' → logprob: -13.875025749206543
    8. '',' → logprob: -14.500025749206543
    9. 'new' → logprob: -14.875025749206543
    10. ',next' → logprob: -15.250025749206543

Token 2161: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.8206473871250637e-05
    2. ' new' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.375028610229492
    4. '```' → logprob: -16.000028610229492
    5. '0' → logprob: -16.625028610229492
    6. 'n' → logprob: -17.250028610229492
    7. '	new' → logprob: -17.250028610229492
    8. 'New' → logprob: -18.125028610229492
    9. ')new' → logprob: -18.125028610229492
    10. ' ' → logprob: -18.125028610229492

Token 2162: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.5776411294937134
    2. 'npos' → logprob: -0.8276411294937134
    3. 'pos' → logprob: -6.452641010284424
    4. 'n' → logprob: -9.202641487121582
    5. '_pos' → logprob: -11.827641487121582
    6. '
' → logprob: -12.702641487121582
    7. 'nop' → logprob: -12.827641487121582
    8. 'x' → logprob: -13.202641487121582
    9. 'new' → logprob: -13.202641487121582
    10. '```' → logprob: -13.577641487121582

Token 2163: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -8.554343366995454e-05
    2. 'poss' → logprob: -11.125085830688477
    3. 'xx' → logprob: -11.250085830688477
    4. '_pos' → logprob: -11.250085830688477
    5. 'os' → logprob: -11.500085830688477
    6. 'd' → logprob: -12.125085830688477
    7. 'px' → logprob: -12.750085830688477
    8. 'x' → logprob: -13.250085830688477
    9. 'posa' → logprob: -13.500085830688477
    10. '``' → logprob: -13.500085830688477

Token 2164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',
' → logprob: -14.12501049041748
    4. '```' → logprob: -14.75001049041748
    5. '`,' → logprob: -15.62501049041748
    6. '                           ' → logprob: -15.62501049041748
    7. ',n' → logprob: -15.62501049041748
    8. '                               ' → logprob: -15.75001049041748
    9. '   ' → logprob: -16.250009536743164
    10. '           ' → logprob: -16.750009536743164

Token 2165: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.0325924449716695e-05
    2. ' nd' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.125009536743164
    4. '                   ' → logprob: -17.750009536743164
    5. '           ' → logprob: -18.125009536743164
    6. '       ' → logprob: -18.625009536743164
    7. '               ' → logprob: -18.625009536743164
    8. '(nd' → logprob: -18.625009536743164
    9. '    ' → logprob: -18.750009536743164
    10. 'n' → logprob: -19.375009536743164

Token 2166: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -3.1424973713001236e-05
    2. 'x' → logprob: -10.375031471252441
    3. 'd' → logprob: -16.125030517578125
    4. ' xx' → logprob: -17.375030517578125
    5. 'dx' → logprob: -17.625030517578125
    6. '``' → logprob: -17.875030517578125
    7. '(xx' → logprob: -17.875030517578125
    8. '```' → logprob: -18.125030517578125
    9. '
' → logprob: -18.625030517578125
    10. '   ' → logprob: -19.750030517578125

Token 2167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021569548698607832
    2. ' ,' → logprob: -8.500215530395508
    3. ',
' → logprob: -12.375215530395508
    4. '```' → logprob: -13.250215530395508
    5. ',n' → logprob: -13.250215530395508
    6. ',d' → logprob: -13.625215530395508
    7. '<|end|>' → logprob: -13.750215530395508
    8. '`,' → logprob: -14.750215530395508
    9. '‌,' → logprob: -15.750215530395508
    10. ',-' → logprob: -16.000215530395508

Token 2168: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.7432603272027336e-06
    2. ' nd' → logprob: -13.500001907348633
    3. '_nd' → logprob: -15.250001907348633
    4. '(nd' → logprob: -16.250001907348633
    5. '.nd' → logprob: -17.625001907348633
    6. 'ndl' → logprob: -18.500001907348633
    7. 'Nd' → logprob: -18.750001907348633
    8. 'nds' → logprob: -19.500001907348633
    9. 'ND' → logprob: -19.750001907348633
    10. 'n' → logprob: -20.000001907348633

Token 2169: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -2.3199920178740285e-05
    2. 'dy' → logprob: -10.750022888183594
    3. 'y' → logprob: -13.875022888183594
    4. '	yy' → logprob: -15.000022888183594
    5. 'yyy' → logprob: -15.375022888183594
    6. ' yy' → logprob: -16.250022888183594
    7. 'd' → logprob: -17.750022888183594
    8. 'yd' → logprob: -17.875022888183594
    9. 'ydd' → logprob: -18.000022888183594
    10. 'dd' → logprob: -18.000022888183594

Token 2170: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011202845722436905
    2. '))
' → logprob: -4.511202812194824
    3. ')' → logprob: -8.886202812194824
    4. ')))' → logprob: -12.011202812194824
    5. '                       ' → logprob: -12.761202812194824
    6. '                   ' → logprob: -12.761202812194824
    7. ')}' → logprob: -13.761202812194824
    8. '))}
' → logprob: -13.886202812194824
    9. ')
' → logprob: -14.136202812194824
    10. '               ' → logprob: -14.886202812194824

Token 2171: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7744274139404297
    2. '       ' → logprob: -1.2744274139404297
    3. '<|end|>' → logprob: -1.5244274139404297
    4. '```' → logprob: -4.14942741394043
    5. '           ' → logprob: -5.14942741394043
    6. '               ' → logprob: -5.64942741394043
    7. '   ' → logprob: -5.64942741394043
    8. '<|end|>' → logprob: -5.89942741394043
    9. ',' → logprob: -6.27442741394043
    10. ')
' → logprob: -6.77442741394043

Token 2172: ' curr' (ID: 10495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018438229337334633
    2. '   ' → logprob: -4.518438339233398
    3. '
' → logprob: -5.643438339233398
    4. 'curr' (adapté à ' curr') → logprob: -5.643438339233398
    5. ' curr' → logprob: -10.018438339233398
    6. '<|end|>' → logprob: -10.268438339233398
    7. '           ' → logprob: -10.518438339233398
    8. ')
' → logprob: -10.518438339233398
    9. ')' → logprob: -10.518438339233398
    10. '        
' → logprob: -10.643438339233398

Token 2173: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.500005722045898
    3. '_st' → logprob: -13.875005722045898
    4. '_s' → logprob: -14.500005722045898
    5. 'States' → logprob: -15.000005722045898
    6. ' _' → logprob: -15.500005722045898
    7. '_state' → logprob: -16.2500057220459
    8. ')_' → logprob: -16.5000057220459
    9. '_curr' → logprob: -17.2500057220459
    10. ''_' → logprob: -17.6250057220459

Token 2174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476016292348504
    2. ' =' → logprob: -6.002476215362549
    3. '=set' → logprob: -16.75247573852539
    4. '＝' → logprob: -17.12747573852539
    5. '<|end|>' → logprob: -17.37747573852539
    6. '_=' → logprob: -17.62747573852539
    7. ',' → logprob: -17.75247573852539
    8. '=}' → logprob: -17.75247573852539
    9. '=
' → logprob: -17.87747573852539
    10. '.=' → logprob: -18.50247573852539

Token 2175: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00024643904180265963
    2. 'curr' → logprob: -8.625246047973633
    3. ' next' → logprob: -9.625246047973633
    4. 'set' → logprob: -14.625246047973633
    5. 'copy' → logprob: -16.375246047973633
    6. '(next' → logprob: -16.375246047973633
    7. '```' → logprob: -17.125246047973633
    8. ' curr' → logprob: -17.625246047973633
    9. '=' → logprob: -18.250246047973633
    10. '`' → logprob: -18.375246047973633

Token 2176: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.1398757123970427e-05
    2. 'States' → logprob: -11.875011444091797
    3. 'states' → logprob: -13.000011444091797
    4. 'curr' → logprob: -13.625011444091797
    5. 'next' → logprob: -14.375011444091797
    6. '_' → logprob: -16.375011444091797
    7. '_state' → logprob: -16.625011444091797
    8. '_st' → logprob: -16.625011444091797
    9. '```' → logprob: -17.250011444091797
    10. '(curr' → logprob: -17.375011444091797

Token 2177: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2178: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7283943891525269
    2. '
' → logprob: -1.6033943891525269
    3. 'for' → logprob: -1.8533943891525269
    4. '   ' → logprob: -2.6033945083618164
    5. '```' → logprob: -3.2283945083618164
    6. 'print' → logprob: -3.3533945083618164
    7. '#' → logprob: -5.603394508361816
    8. 'if' → logprob: -5.728394508361816
    9. ' return' → logprob: -6.853394508361816
    10. '    
' → logprob: -6.853394508361816

Token 2179: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06598062813282013
    2. 'result' → logprob: -3.6909806728363037
    3. 'for' → logprob: -4.190980434417725
    4. 'answer' → logprob: -4.565980434417725
    5. 'if' → logprob: -5.815980434417725
    6. '#' (adapté à ' #') → logprob: -6.315980434417725
    7. 'positions' → logprob: -6.440980434417725
    8. 'possible' → logprob: -6.440980434417725
    9. 'pos' → logprob: -6.815980434417725
    10. 'final' → logprob: -7.065980434417725

Token 2180: ' Extract' (ID: 39239)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13291387259960175
    2. 'ans' → logprob: -3.257913827896118
    3. 'res' → logprob: -3.257913827896118
    4. 'result' → logprob: -4.132914066314697
    5. 'best' → logprob: -4.382914066314697
    6. 'possible' → logprob: -4.632914066314697
    7. 'answer' → logprob: -5.882914066314697
    8. 'for' → logprob: -6.257914066314697
    9. '#' → logprob: -6.507914066314697
    10. 'valid' → logprob: -6.882914066314697

Token 2181: ' all' (ID: 722)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.4816526770591736
    2. 'result' → logprob: -2.3566527366638184
    3. 'min' → logprob: -2.8566527366638184
    4. 'ans' → logprob: -3.1066527366638184
    5. 'results' → logprob: -3.2316527366638184
    6. 'possible' → logprob: -3.3566527366638184
    7. 'if' → logprob: -3.4816527366638184
    8. 'final' → logprob: -3.7316527366638184
    9. 'res' → logprob: -3.7316527366638184
    10. 'x' → logprob: -4.231652736663818

Token 2182: ' possible' (ID: 4149)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.40618401765823364
    2. 'possible' → logprob: -1.4061839580535889
    3. 'coords' → logprob: -3.406183958053589
    4. 'x' → logprob: -4.031184196472168
    5. 'res' → logprob: -4.656184196472168
    6. 'results' → logprob: -4.906184196472168
    7. 'result' → logprob: -5.156184196472168
    8. 'final' → logprob: -5.406184196472168
    9. 'best' → logprob: -6.156184196472168
    10. 'curr' → logprob: -6.656184196472168

Token 2183: ' end' (ID: 1268)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.015193474479019642
    2. 'possible' → logprob: -5.515193462371826
    3. 'final' → logprob: -5.765193462371826
    4. 'coords' → logprob: -5.765193462371826
    5. 'x' → logprob: -6.015193462371826
    6. 'results' → logprob: -6.515193462371826
    7. 'coordinates' → logprob: -7.515193462371826
    8. 'result' → logprob: -9.515193939208984
    9. 'answers' → logprob: -9.515193939208984
    10. 'pos' → logprob: -10.390193939208984

Token 2184: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5156475305557251
    2. '_positions' → logprob: -1.015647530555725
    3. 'points' → logprob: -3.2656474113464355
    4. '_points' → logprob: -7.7656474113464355
    5. '_coords' → logprob: -7.7656474113464355
    6. '   ' → logprob: -7.8906474113464355
    7. 'ing' → logprob: -8.265647888183594
    8. '```' → logprob: -8.640647888183594
    9. '_coordinates' → logprob: -8.765647888183594
    10. 'ings' → logprob: -8.765647888183594

Token 2185: ' coordinates' (ID: 27933)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1513855457305908
    2. 'end' → logprob: -1.4013855457305908
    3. 'possible' → logprob: -2.276385545730591
    4. 'res' → logprob: -2.526385545730591
    5. 'results' → logprob: -2.651385545730591
    6. 'ans' → logprob: -2.651385545730591
    7. 'positions' → logprob: -2.901385545730591
    8. '   ' → logprob: -3.651385545730591
    9. 'final' → logprob: -5.026385307312012
    10. 'answers' → logprob: -5.026385307312012

Token 2186: ' and' (ID: 326)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9100304245948792
    2. 'end' → logprob: -1.4100303649902344
    3. 'res' → logprob: -1.9100303649902344
    4. 'ans' → logprob: -2.1600303649902344
    5. 'results' → logprob: -3.4100303649902344
    6. 'possible' → logprob: -3.9100303649902344
    7. 'positions' → logprob: -4.160030364990234
    8. 'ends' → logprob: -5.160030364990234
    9. 'answer' → logprob: -5.285030364990234
    10. 'coords' → logprob: -5.910030364990234

Token 2187: ' output' (ID: 4733)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8515674471855164
    2. 'coords' → logprob: -1.4765675067901611
    3. 'positions' → logprob: -1.6015675067901611
    4. 'print' → logprob: -2.976567506790161
    5. 'possible' → logprob: -3.351567506790161
    6. 'res' → logprob: -3.976567506790161
    7. 'results' → logprob: -4.351567268371582
    8. 'result' → logprob: -4.601567268371582
    9. 'coordinates' → logprob: -4.976567268371582
    10. 'answers' → logprob: -6.101567268371582

Token 2188: ' unique' (ID: 5746)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3208316564559937
    2. 'end' → logprob: -1.8208316564559937
    3. 'possible' → logprob: -1.8208316564559937
    4. 'positions' → logprob: -2.195831775665283
    5. 'result' → logprob: -2.445831775665283
    6. 'ans' → logprob: -2.570831775665283
    7. 'results' → logprob: -2.820831775665283
    8. 'coords' → logprob: -3.320831775665283
    9. '   ' → logprob: -4.570831775665283
    10. 'poss' → logprob: -4.945831775665283

Token 2189: ' sorted' (ID: 20099)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1690510511398315
    2. 'end' → logprob: -1.6690510511398315
    3. 'ans' → logprob: -1.6690510511398315
    4. 'result' → logprob: -1.6690510511398315
    5. 'results' → logprob: -2.669051170349121
    6. 'coords' → logprob: -3.544051170349121
    7. 'positions' → logprob: -4.544051170349121
    8. 'ends' → logprob: -5.794051170349121
    9. 'out' → logprob: -6.044051170349121
    10. 'possible' → logprob: -6.419051170349121

Token 2190: ' by' (ID: 656)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9863717555999756
    2. '   ' → logprob: -1.6113717555999756
    3. 'result' → logprob: -1.7363717555999756
    4. 'results' → logprob: -2.3613717555999756
    5. 'ans' → logprob: -2.7363717555999756
    6. 'end' → logprob: -3.1113717555999756
    7. 'positions' → logprob: -3.8613717555999756
    8. 'coords' → logprob: -4.736371994018555
    9. 'ends' → logprob: -4.986371994018555
    10. 'possible' → logprob: -6.236371994018555

Token 2191: ' lex' (ID: 37772)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5036371350288391
    2. 'x' → logprob: -1.0036370754241943
    3. 'pos' → logprob: -4.503637313842773
    4. '(lambda' → logprob: -4.753637313842773
    5. '```' → logprob: -5.753637313842773
    6. '
' → logprob: -6.878637313842773
    7. '   ' → logprob: -7.253637313842773
    8. ' lambda' → logprob: -7.253637313842773
    9. '[' → logprob: -7.503637313842773
    10. 'def' → logprob: -7.503637313842773

Token 2192: ' order' (ID: 2569)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.3715991675853729
    2. 'positions' → logprob: -1.3715991973876953
    3. 'sorted' → logprob: -4.121599197387695
    4. 'result' → logprob: -4.371599197387695
    5. 'pos' → logprob: -4.746599197387695
    6. 'res' → logprob: -5.496599197387695
    7. 'end' → logprob: -5.621599197387695
    8. '_coords' → logprob: -5.746599197387695
    9. 'coordinates' → logprob: -6.621599197387695
    10. 'possible' → logprob: -6.746599197387695

Token 2193: '

' (ID: 279)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5980572700500488
    2. 'result' → logprob: -1.8480572700500488
    3. 'ans' → logprob: -2.223057270050049
    4. 'res' → logprob: -2.348057270050049
    5. 'results' → logprob: -3.098057270050049
    6. '   ' → logprob: -4.473057270050049
    7. 'positions' → logprob: -4.723057270050049
    8. 'ends' → logprob: -4.848057270050049
    9. '```' → logprob: -5.223057270050049
    10. 'coords' → logprob: -5.473057270050049

Token 2194: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5067891478538513
    2. 'res' → logprob: -1.756789207458496
    3. 'positions' → logprob: -2.756789207458496
    4. 'results' → logprob: -3.131789207458496
    5. 'ans' → logprob: -3.256789207458496
    6. 'coords' → logprob: -3.881789207458496
    7. 'end' → logprob: -4.006789207458496
    8. 'possible' → logprob: -4.256789207458496
    9. '```' → logprob: -4.881789207458496
    10. '   ' → logprob: -5.006789207458496

Token 2195: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2425163984298706
    2. 'result' (adapté à ' result') → logprob: -1.2425163984298706
    3. 'end' → logprob: -1.4925163984298706
    4. 'ans' → logprob: -2.49251651763916
    5. 'results' → logprob: -2.49251651763916
    6. 'ends' → logprob: -4.74251651763916
    7. 'positions' → logprob: -4.86751651763916
    8. '   ' → logprob: -5.36751651763916
    9. 'possible' → logprob: -5.36751651763916
    10. '```' → logprob: -5.86751651763916

Token 2196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860224947333336
    2. ' =' → logprob: -3.048602342605591
    3. '=set' → logprob: -11.548602104187012
    4. '=[]' → logprob: -13.423602104187012
    5. '=
' → logprob: -13.548602104187012
    6. '   ' → logprob: -14.548602104187012
    7. '_positions' → logprob: -14.923602104187012
    8. '=[]
' → logprob: -15.048602104187012
    9. 's' → logprob: -15.173602104187012
    10. '_' → logprob: -15.298602104187012

Token 2197: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -6.909333023941144e-05
    2. '{' → logprob: -9.750068664550781
    3. '[]' → logprob: -11.750068664550781
    4. '{}' → logprob: -13.500068664550781
    5. ' set' → logprob: -13.875068664550781
    6. '[]
' → logprob: -15.125068664550781
    7. 'sorted' → logprob: -15.250068664550781
    8. '{
' → logprob: -17.25006866455078
    9. '(set' → logprob: -18.37506866455078
    10. '{}
' → logprob: -18.50006866455078

Token 2198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31602492928504944
    2. '()
' → logprob: -1.316024899482727
    3. 'for' → logprob: -7.1910247802734375
    4. '```' → logprob: -7.1910247802734375
    5. '([(' → logprob: -8.566024780273438
    6. '(' → logprob: -8.816024780273438
    7. '((' → logprob: -8.816024780273438
    8. '   ' → logprob: -9.441024780273438
    9. 'result' → logprob: -9.691024780273438
    10. '[]' → logprob: -9.691024780273438

Token 2199: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8351892473874614e-05
    2. '```' → logprob: -10.750048637390137
    3. '   ' → logprob: -11.125048637390137
    4. ' for' → logprob: -11.375048637390137
    5. '``' → logprob: -15.000048637390137
    6. '
' → logprob: -15.625048637390137
    7. '	for' → logprob: -16.37504768371582
    8. '`' → logprob: -18.25004768371582
    9. '    
' → logprob: -18.62504768371582
    10. '       ' → logprob: -19.50004768371582

Token 2200: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1041145626222715e-05
    2. '```' → logprob: -11.625011444091797
    3. ' for' → logprob: -13.625011444091797
    4. '   ' → logprob: -14.125011444091797
    5. '``' → logprob: -15.625011444091797
    6. '       ' → logprob: -18.000011444091797
    7. '
' → logprob: -18.250011444091797
    8. '	for' → logprob: -18.875011444091797
    9. '    
' → logprob: -19.625011444091797
    10. '        
' → logprob: -19.875011444091797

Token 2201: ' sid' (ID: 22831)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.062004320323467255
    2. '(s' → logprob: -2.812004327774048
    3. ' sid' → logprob: -11.312004089355469
    4. 'state' → logprob: -11.437004089355469
    5. '(st' → logprob: -11.687004089355469
    6. '(state' → logprob: -12.812004089355469
    7. 's' → logprob: -14.187004089355469
    8. '   ' → logprob: -15.187004089355469
    9. '_sid' → logprob: -15.187004089355469
    10. '.sid' → logprob: -15.437004089355469

Token 2202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022920407354831696
    2. ',s' → logprob: -6.127292156219482
    3. 'in' → logprob: -10.877291679382324
    4. ',
' → logprob: -11.002291679382324
    5. ',result' → logprob: -11.002291679382324
    6. ' in' → logprob: -11.752291679382324
    7. ',state' → logprob: -11.877291679382324
    8. ' ,' → logprob: -12.002291679382324
    9. '_,' → logprob: -12.377291679382324
    10. ',user' → logprob: -12.502291679382324

Token 2203: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4855663721391466e-05
    2. ' pos' → logprob: -11.125015258789062
    3. 'curr' → logprob: -18.500015258789062
    4. '   ' → logprob: -18.750015258789062
    5. '```' → logprob: -19.875015258789062
    6. '	pos' → logprob: -20.375015258789062
    7. ' ' → logprob: -21.125015258789062
    8. ',pos' → logprob: -21.375015258789062
    9. '
' → logprob: -21.750015258789062
    10. '    
' → logprob: -22.000015258789062

Token 2204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03985753282904625
    2. 'in' → logprob: -3.2898576259613037
    3. ' in' → logprob: -6.914857387542725
    4. ',s' → logprob: -7.914857387542725
    5. ',pos' → logprob: -8.914857864379883
    6. ' ,' → logprob: -9.664857864379883
    7. '   ' → logprob: -9.914857864379883
    8. '```' → logprob: -10.414857864379883
    9. ',result' → logprob: -10.664857864379883
    10. ')' → logprob: -10.664857864379883

Token 2205: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0037582749500870705
    2. ' dx' → logprob: -6.003758430480957
    3. '0' → logprob: -7.128758430480957
    4. '...,' → logprob: -9.128758430480957
    5. '...' → logprob: -9.378758430480957
    6. '_dx' → logprob: -9.628758430480957
    7. '_,' → logprob: -9.878758430480957
    8. '```' → logprob: -10.128758430480957
    9. '_' → logprob: -10.628758430480957
    10. '   ' → logprob: -10.878758430480957

Token 2206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ',d' → logprob: -11.750019073486328
    3. 'in' → logprob: -12.375019073486328
    4. ' ,' → logprob: -12.750019073486328
    5. '_,' → logprob: -13.000019073486328
    6. ',_' → logprob: -14.875019073486328
    7. '```' → logprob: -15.500019073486328
    8. ',pos' → logprob: -15.625019073486328
    9. 'dx' → logprob: -15.750019073486328
    10. ',s' → logprob: -15.750019073486328

Token 2207: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.001170225441455841
    2. ' dy' → logprob: -6.7511701583862305
    3. 'd' → logprob: -19.376171112060547
    4. '.dy' → logprob: -19.626171112060547
    5. 'Dy' → logprob: -20.126171112060547
    6. '   ' → logprob: -21.251171112060547
    7. ' ' → logprob: -21.376171112060547
    8. '0' → logprob: -22.251171112060547
    9. '```' → logprob: -22.251171112060547
    10. 'dyr' → logprob: -23.126171112060547

Token 2208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20148682594299316
    2. 'in' → logprob: -1.7014868259429932
    3. ',' → logprob: -10.576486587524414
    4. '   ' → logprob: -10.826486587524414
    5. 'In' → logprob: -11.576486587524414
    6. '	in' → logprob: -11.951486587524414
    7. '_in' → logprob: -12.951486587524414
    8. ':
' → logprob: -13.201486587524414
    9. '):
' → logprob: -13.576486587524414
    10. ' ' → logprob: -13.701486587524414

Token 2209: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.6639242172241211
    2. 'street' → logprob: -0.7889242172241211
    3. 'result' → logprob: -3.913924217224121
    4. ' curr' → logprob: -5.788924217224121
    5. 'pos' → logprob: -6.038924217224121
    6. ' street' → logprob: -6.163924217224121
    7. 'next' → logprob: -7.663924217224121
    8. 'range' → logprob: -7.788924217224121
    9. '[' → logprob: -7.788924217224121
    10. 'start' → logprob: -7.913924217224121

Token 2210: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.020896047353744507
    2. '_' → logprob: -5.395895957946777
    3. '_st' → logprob: -5.520895957946777
    4. '   ' → logprob: -5.770895957946777
    5. '{
' → logprob: -5.770895957946777
    6. '_state' → logprob: -7.145895957946777
    7. '['' → logprob: -7.270895957946777
    8. '{'' → logprob: -7.520895957946777
    9. 'result' → logprob: -7.770895957946777
    10. '[
' → logprob: -7.770895957946777

Token 2211: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9662244915962219
    2. ',' → logprob: -1.2162244319915771
    3. '       ' → logprob: -1.5912244319915771
    4. ':' → logprob: -2.466224431991577
    5. '   ' → logprob: -4.341224670410156
    6. '):
' → logprob: -4.841224670410156
    7. '<|end|>' → logprob: -5.716224670410156
    8. 's' → logprob: -5.966224670410156
    9. '```' → logprob: -6.716224670410156
    10. '{' → logprob: -7.216224670410156

Token 2212: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1589854657649994
    2. 'x' → logprob: -2.4089853763580322
    3. 'result' → logprob: -3.2839853763580322
    4. 's' → logprob: -4.283985614776611
    5. 'street' → logprob: -5.908985614776611
    6. '```' → logprob: -6.283985614776611
    7. '       ' → logprob: -7.283985614776611
    8. 'coord' → logprob: -8.283985137939453
    9. ' x' → logprob: -9.658985137939453
    10. 'coords' → logprob: -10.283985137939453

Token 2213: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1907443404197693
    2. 'street' → logprob: -2.440744400024414
    3. 'result' → logprob: -2.815744400024414
    4. 'coord' → logprob: -4.315744400024414
    5. '       ' → logprob: -5.190744400024414
    6. 's' (adapté à ' s') → logprob: -5.315744400024414
    7. '   ' → logprob: -6.815744400024414
    8. 'point' → logprob: -7.815744400024414
    9. 'c' → logprob: -8.065744400024414
    10. 'stre' → logprob: -8.190744400024414

Token 2214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765380263328552
    2. '=' → logprob: -0.8265380263328552
    3. '['' → logprob: -7.9515380859375
    4. '=s' → logprob: -8.9515380859375
    5. 's' → logprob: -10.4515380859375
    6. '={'' → logprob: -10.7015380859375
    7. '=result' → logprob: -11.4515380859375
    8. '=
' → logprob: -11.7015380859375
    9. '='' → logprob: -12.2015380859375
    10. ',' → logprob: -12.2015380859375

Token 2215: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.00021093101531732827
    2. ' street' → logprob: -8.500210762023926
    3. 'stre' → logprob: -12.125210762023926
    4. '   ' → logprob: -13.250210762023926
    5. '```' → logprob: -16.375211715698242
    6. '       ' → logprob: -16.750211715698242
    7. 'st' → logprob: -16.875211715698242
    8. '{
' → logprob: -17.750211715698242
    9. '{' → logprob: -18.250211715698242
    10. 's' → logprob: -18.250211715698242

Token 2216: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00024620062322355807
    2. 'data' → logprob: -9.250246047973633
    3. '['' → logprob: -9.375246047973633
    4. '[s' → logprob: -10.750246047973633
    5. '[' → logprob: -11.500246047973633
    6. '[id' → logprob: -11.750246047973633
    7. '   ' → logprob: -12.125246047973633
    8. '       ' → logprob: -12.500246047973633
    9. 'Data' → logprob: -12.625246047973633
    10. 's' → logprob: -13.375246047973633

Token 2217: '[s' (ID: 24177)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026735646650195122
    2. '[s' → logprob: -4.401735782623291
    3. ' =' → logprob: -4.901735782623291
    4. '=s' → logprob: -5.026735782623291
    5. 's' → logprob: -9.151735305786133
    6. '[' → logprob: -11.401735305786133
    7. '(s' → logprob: -12.651735305786133
    8. '   ' → logprob: -12.901735305786133
    9. '```' → logprob: -13.026735305786133
    10. '       ' → logprob: -13.401735305786133

Token 2218: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.008712549693882465
    2. '['' → logprob: -5.7587127685546875
    3. '[s' → logprob: -6.0087127685546875
    4. '[id' → logprob: -6.5087127685546875
    5. 'sid' → logprob: -7.0087127685546875
    6. ''s' → logprob: -8.133712768554688
    7. ''id' → logprob: -8.383712768554688
    8. '[' → logprob: -9.883712768554688
    9. 's' → logprob: -10.258712768554688
    10. '{'' → logprob: -11.383712768554688

Token 2219: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007388555910438299
    2. '['' → logprob: -5.132388591766357
    3. '
' → logprob: -7.632388591766357
    4. '           ' → logprob: -8.1323881149292
    5. ',' → logprob: -8.6323881149292
    6. ')
' → logprob: -9.2573881149292
    7. '```' → logprob: -9.2573881149292
    8. ' =' → logprob: -9.8823881149292
    9. '#' → logprob: -10.1323881149292
    10. '   ' → logprob: -10.3823881149292

Token 2220: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.32975709438323975
    2. '       ' → logprob: -1.3297570943832397
    3. 'coord' → logprob: -4.954757213592529
    4. 'result' → logprob: -5.329757213592529
    5. '```' → logprob: -5.579757213592529
    6. 'point' → logprob: -8.454756736755371
    7. 'pt' → logprob: -9.579756736755371
    8. ' coord' → logprob: -9.579756736755371
    9. '``' → logprob: -9.704756736755371
    10. '   ' → logprob: -9.954756736755371

Token 2221: ' coord' (ID: 25819)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2959611415863037
    2. 'coord' (adapté à ' coord') → logprob: -1.5459611415863037
    3. 'result' → logprob: -3.1709611415863037
    4. 'point' → logprob: -7.920961380004883
    5. 'cx' → logprob: -8.670961380004883
    6. 'pt' → logprob: -8.920961380004883
    7. '```' → logprob: -9.045961380004883
    8. '   ' → logprob: -9.295961380004883
    9. 'coords' → logprob: -9.920961380004883
    10. 'res' → logprob: -10.295961380004883

Token 2222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03855089843273163
    2. ' =' → logprob: -3.288550853729248
    3. '=
' → logprob: -7.913550853729248
    4. 's' → logprob: -10.038551330566406
    5. '       ' → logprob: -10.538551330566406
    6. 'x' → logprob: -10.913551330566406
    7. '_coord' → logprob: -11.413551330566406
    8. ',' → logprob: -12.038551330566406
    9. 'coord' → logprob: -12.163551330566406
    10. '[' → logprob: -12.413551330566406

Token 2223: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0022232949268072844
    2. '(' → logprob: -7.002223491668701
    3. ' pos' → logprob: -7.377223491668701
    4. '(pos' → logprob: -7.502223491668701
    5. ' (' → logprob: -10.127223014831543
    6. 's' → logprob: -10.252223014831543
    7. '(s' → logprob: -10.502223014831543
    8. '(
' → logprob: -11.002223014831543
    9. '(x' → logprob: -12.002223014831543
    10. '(*' → logprob: -12.877223014831543

Token 2224: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.6047699318733066e-05
    2. 'To' → logprob: -12.500016212463379
    3. '   ' → logprob: -13.500016212463379
    4. 'to' → logprob: -13.500016212463379
    5. ')' → logprob: -13.625016212463379
    6. '```' → logprob: -13.625016212463379
    7. '_TO' → logprob: -13.750016212463379
    8. '+' → logprob: -13.875016212463379
    9. '[' → logprob: -14.000016212463379
    10. '       ' → logprob: -14.375016212463379

Token 2225: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.1602441370487213
    2. 'coord' → logprob: -1.910244107246399
    3. '(coord' → logprob: -11.66024398803711
    4. 'cord' → logprob: -12.16024398803711
    5. 's' → logprob: -12.66024398803711
    6. 'Coord' → logprob: -14.16024398803711
    7. ' coord' → logprob: -14.53524398803711
    8. 'coordinate' → logprob: -14.91024398803711
    9. 'co' → logprob: -15.78524398803711
    10. 'c' → logprob: -15.91024398803711

Token 2226: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004155925940722227
    2. 's' → logprob: -5.504156112670898
    3. '[s' → logprob: -9.754156112670898
    4. '```' → logprob: -11.879156112670898
    5. '(' → logprob: -12.629156112670898
    6. '(st' → logprob: -12.754156112670898
    7. '(
' → logprob: -13.254156112670898
    8. '[' → logprob: -13.629156112670898
    9. '`s' → logprob: -13.879156112670898
    10. '{s' → logprob: -14.504156112670898

Token 2227: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5030578374862671
    2. ',' → logprob: -1.378057837486267
    3. '[s' → logprob: -2.7530579566955566
    4. '(s' → logprob: -2.8780579566955566
    5. '[' → logprob: -4.753057956695557
    6. '['' → logprob: -5.378057956695557
    7. ')' → logprob: -5.628057956695557
    8. ',s' → logprob: -5.878057956695557
    9. ' s' → logprob: -6.753057956695557
    10. ')[' → logprob: -7.628057956695557

Token 2228: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.339278580620885e-06
    2. ' pos' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.125001907348633
    5. 'position' → logprob: -20.500001907348633
    6. '       ' → logprob: -20.500001907348633
    7. 'int' → logprob: -20.750001907348633
    8. '	pos' → logprob: -21.750001907348633
    9. '           ' → logprob: -21.875001907348633
    10. '(pos' → logprob: -22.000001907348633

Token 2229: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4841535687446594
    2. ')' → logprob: -0.9841535687446594
    3. '       ' → logprob: -4.609153747558594
    4. '           ' → logprob: -11.484153747558594
    5. '   ' → logprob: -11.734153747558594
    6. ')
' → logprob: -11.734153747558594
    7. '):
' → logprob: -11.984153747558594
    8. '[' → logprob: -12.359153747558594
    9. '())
' → logprob: -12.359153747558594
    10. ')

' → logprob: -12.359153747558594

Token 2230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021883226931095123
    2. 'result' → logprob: -4.021883010864258
    3. '```' → logprob: -5.646883010864258
    4. ' result' → logprob: -9.271883010864258
    5. '   ' → logprob: -9.646883010864258
    6. '``' → logprob: -11.021883010864258
    7. '           ' → logprob: -11.521883010864258
    8. '`' → logprob: -12.146883010864258
    9. '
' → logprob: -12.646883010864258
    10. '        
' → logprob: -13.021883010864258

Token 2231: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -5.180879816180095e-05
    2. '       ' → logprob: -10.250051498413086
    3. '```' → logprob: -11.500051498413086
    4. ' result' → logprob: -12.625051498413086
    5. '   ' → logprob: -13.375051498413086
    6. 'for' → logprob: -13.750051498413086
    7. '``' → logprob: -15.500051498413086
    8. '           ' → logprob: -16.625051498413086
    9. '
' → logprob: -17.125051498413086
    10. '`' → logprob: -18.500051498413086

Token 2232: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019324433524161577
    2. '.' → logprob: -6.251932621002197
    3. '.update' → logprob: -13.251932144165039
    4. 'add' → logprob: -13.876932144165039
    5. '   ' → logprob: -14.876932144165039
    6. ' .' → logprob: -15.876932144165039
    7. '.Add' → logprob: -16.00193214416504
    8. '().' → logprob: -16.12693214416504
    9. ').' → logprob: -16.25193214416504
    10. '.append' → logprob: -16.37693214416504

Token 2233: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.023257939144968987
    2. 'coord' → logprob: -3.7732579708099365
    3. '(co' → logprob: -11.773258209228516
    4. ' coord' → logprob: -12.398258209228516
    5. '(' → logprob: -15.648258209228516
    6. '```' → logprob: -15.648258209228516
    7. '((' → logprob: -16.273258209228516
    8. '   ' → logprob: -16.773258209228516
    9. ' (' → logprob: -16.898258209228516
    10. '(coords' → logprob: -17.148258209228516

Token 2234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017681238241493702
    2. ')
' → logprob: -6.376768112182617
    3. '   ' → logprob: -10.501768112182617
    4. '       ' → logprob: -10.751768112182617
    5. ')}' → logprob: -12.001768112182617
    6. '())' → logprob: -12.251768112182617
    7. '`)' → logprob: -13.751768112182617
    8. '```' → logprob: -14.376768112182617
    9. ')`' → logprob: -14.376768112182617
    10. '}' → logprob: -14.501768112182617

Token 2235: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5995907187461853
    2. 'result' → logprob: -0.8495907187461853
    3. '```' → logprob: -4.34959077835083
    4. '
' → logprob: -5.22459077835083
    5. 'print' → logprob: -5.97459077835083
    6. '   ' → logprob: -6.34959077835083
    7. 'sorted' → logprob: -8.474590301513672
    8. 'points' → logprob: -8.974590301513672
    9. 'coordinates' → logprob: -9.349590301513672
    10. 'coords' → logprob: -9.474590301513672

Token 2236: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3192964196205139
    2. 'result' (adapté à ' result') → logprob: -1.3192963600158691
    3. '```' → logprob: -5.569296360015869
    4. 'print' → logprob: -6.319296360015869
    5. '   ' → logprob: -8.569296836853027
    6. '
' → logprob: -8.944296836853027
    7. ' for' → logprob: -10.444296836853027
    8. 'sorted' → logprob: -10.694296836853027
    9. '``' → logprob: -11.444296836853027
    10. 'results' → logprob: -12.194296836853027

Token 2237: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2238: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0002703953068703413
    2. 'set' → logprob: -8.25027084350586
    3. ' sorted' → logprob: -12.12527084350586
    4. '   ' → logprob: -13.00027084350586
    5. 'list' → logprob: -13.62527084350586
    6. '(sorted' → logprob: -16.50027084350586
    7. '{' → logprob: -16.62527084350586
    8. '```' → logprob: -17.37527084350586
    9. 'tuple' → logprob: -17.62527084350586
    10. 'result' → logprob: -18.37527084350586

Token 2239: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0016674461076036096
    2. 'result' → logprob: -6.501667499542236
    3. '(list' → logprob: -8.751667022705078
    4. '(' → logprob: -12.501667022705078
    5. 'list' → logprob: -13.126667022705078
    6. '((' → logprob: -14.876667022705078
    7. '[result' → logprob: -15.126667022705078
    8. '()' → logprob: -15.501667022705078
    9. '```' → logprob: -16.126667022705078
    10. '([(' → logprob: -16.376667022705078

Token 2240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02675873599946499
    2. ',' → logprob: -3.9017586708068848
    3. '(key' → logprob: -5.776758670806885
    4. ',key' → logprob: -6.776758670806885
    5. '())' → logprob: -7.151758670806885
    6. ')
' → logprob: -7.776758670806885
    7. '()' → logprob: -8.401759147644043
    8. '   ' → logprob: -8.526759147644043
    9. '```' → logprob: -9.276759147644043
    10. ',)' → logprob: -10.026759147644043

Token 2241: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14234992861747742
    2. 'print' → logprob: -2.3923499584198
    3. '```' → logprob: -3.2673499584198
    4. '   ' → logprob: -6.267349720001221
    5. ' for' → logprob: -7.392349720001221
    6. '``' → logprob: -7.892349720001221
    7. '
' → logprob: -8.892350196838379
    8. 'return' → logprob: -9.017350196838379
    9. '    
' → logprob: -12.517350196838379
    10. ' print' → logprob: -13.017350196838379

Token 2242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.035317953675985336
    2. '```' → logprob: -3.410317897796631
    3. 'print' → logprob: -6.660317897796631
    4. '``' → logprob: -8.535318374633789
    5. ' for' → logprob: -9.160318374633789
    6. '   ' → logprob: -9.535318374633789
    7. '
' → logprob: -11.660318374633789
    8. '    
' → logprob: -12.535318374633789
    9. '<|end|>' → logprob: -13.410318374633789
    10. '  
' → logprob: -14.035318374633789

Token 2243: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00016420685278717428
    2. 'r' → logprob: -9.000164031982422
    3. '(x' → logprob: -11.125164031982422
    4. 'coord' → logprob: -11.125164031982422
    5. 'res' → logprob: -11.500164031982422
    6. ' x' → logprob: -14.750164031982422
    7. 'pt' → logprob: -15.000164031982422
    8. 'point' → logprob: -15.500164031982422
    9. 'xy' → logprob: -16.625164031982422
    10. 'c' → logprob: -17.250164031982422

Token 2244: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25199514627456665
    2. ',y' → logprob: -1.5019950866699219
    3. 'y' → logprob: -9.751995086669922
    4. ' ,' → logprob: -12.876995086669922
    5. '_,' → logprob: -13.626995086669922
    6. ' y' → logprob: -13.751995086669922
    7. ',x' → logprob: -14.626995086669922
    8. ' in' → logprob: -14.626995086669922
    9. '```' → logprob: -14.876995086669922
    10. ',
' → logprob: -15.001995086669922

Token 2245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2676713764667511
    2. 'in' → logprob: -1.5176713466644287
    3. ',' → logprob: -4.642671585083008
    4. '   ' → logprob: -6.267671585083008
    5. '       ' → logprob: -6.767671585083008
    6. ':
' → logprob: -7.017671585083008
    7. 'print' → logprob: -7.267671585083008
    8. '```' → logprob: -7.642671585083008
    9. ':' → logprob: -7.767671585083008
    10. ' print' → logprob: -8.767671585083008

Token 2246: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.128163257315464e-07
    2. ' result' → logprob: -15.75
    3. '
' → logprob: -16.375
    4. '   ' → logprob: -18.0
    5. 'print' → logprob: -18.75
    6. '```' → logprob: -19.5
    7. '(result' → logprob: -20.375
    8. 'results' → logprob: -20.75
    9. '	result' → logprob: -22.5
    10. '[result' → logprob: -22.625

Token 2247: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8833304047584534
    2. '   ' → logprob: -1.3833303451538086
    3. ':
' → logprob: -1.6333303451538086
    4. ':' → logprob: -2.1333303451538086
    5. ',' → logprob: -4.883330345153809
    6. '```' → logprob: -5.133330345153809
    7. ' print' → logprob: -6.258330345153809
    8. 'print' → logprob: -6.258330345153809
    9. '():
' → logprob: -6.758330345153809
    10. '<|end|>' → logprob: -6.883330345153809

Token 2248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019257364328950644
    2. '   ' → logprob: -8.625192642211914
    3. '```' → logprob: -11.750192642211914
    4. 'print' → logprob: -13.000192642211914
    5. ' print' → logprob: -13.375192642211914
    6. '           ' → logprob: -14.250192642211914
    7. '`' → logprob: -15.250192642211914
    8. '
' → logprob: -16.000192642211914
    9. '     ' → logprob: -16.625192642211914
    10. '#' → logprob: -17.000192642211914

Token 2249: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.9153885558771435e-06
    2. '       ' → logprob: -13.000005722045898
    3. ' print' → logprob: -13.250005722045898
    4. '```' → logprob: -13.875005722045898
    5. '   ' → logprob: -14.000005722045898
    6. '	print' → logprob: -16.8750057220459
    7. '
' → logprob: -18.0000057220459
    8. '           ' → logprob: -18.6250057220459
    9. '``' → logprob: -19.5000057220459
    10. 'printf' → logprob: -20.1250057220459

Token 2250: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7025813460350037
    2. '(x' → logprob: -0.7025813460350037
    3. '(f' → logprob: -4.702581405639648
    4. 'f' → logprob: -8.327581405639648
    5. '{x' → logprob: -9.827581405639648
    6. '(' → logprob: -11.452581405639648
    7. ' x' → logprob: -12.077581405639648
    8. '{}' → logprob: -12.952581405639648
    9. '   ' → logprob: -13.452581405639648
    10. '("{}' → logprob: -14.202581405639648

Token 2251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10030759125947952
    2. ',y' → logprob: -2.3503077030181885
    3. ' ,' → logprob: -9.22530746459961
    4. ',end' → logprob: -13.35030746459961
    5. ' y' → logprob: -14.47530746459961
    6. ',
' → logprob: -15.60030746459961
    7. 'y' → logprob: -16.72530746459961
    8. ',Y' → logprob: -17.85030746459961
    9. ',p' → logprob: -18.60030746459961
    10. ',b' → logprob: -18.72530746459961

Token 2252: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0206720617134124e-05
    2. ' y' → logprob: -11.50001049041748
    3. '(y' → logprob: -21.375009536743164
    4. '   ' → logprob: -22.125009536743164
    5. ''y' → logprob: -22.625009536743164
    6. '	y' → logprob: -22.625009536743164
    7. ')y' → logprob: -23.500009536743164
    8. '       ' → logprob: -23.750009536743164
    9. ' ' → logprob: -24.625009536743164
    10. '    ' → logprob: -24.750009536743164

Token 2253: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019090480054728687
    2. '<|end|>' → logprob: -8.625190734863281
    3. ')
' → logprob: -12.125190734863281
    4. '```' → logprob: -13.000190734863281
    5. '()' → logprob: -14.000190734863281
    6. '())' → logprob: -14.500190734863281
    7. '')' → logprob: -14.625190734863281
    8. '`)' → logprob: -14.750190734863281
    9. '")' → logprob: -15.125190734863281
    10. ');' → logprob: -15.375190734863281

Token 2254: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2255: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012523310258984566
    2. '__' → logprob: -4.387523174285889
    3. ' _' → logprob: -12.137523651123047
    4. '_' → logprob: -13.137523651123047
    5. '___' → logprob: -13.387523651123047
    6. '```' → logprob: -13.387523651123047
    7. ' ___' → logprob: -14.012523651123047
    8. '_name' → logprob: -14.262523651123047
    9. ' main' → logprob: -14.512523651123047
    10. '(__' → logprob: -15.387523651123047

Token 2256: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03162713348865509
    2. '==' → logprob: -3.7816271781921387
    3. ' ==' → logprob: -5.531627178192139
    4. '=="' → logprob: -6.031627178192139
    5. '=='' → logprob: -7.031627178192139
    6. '```' → logprob: -7.281627178192139
    7. 'name' → logprob: -9.15662670135498
    8. '__.__' → logprob: -9.40662670135498
    9. ' __' → logprob: -10.28162670135498
    10. '__":
' → logprob: -10.78162670135498

Token 2257: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003700081491842866
    2. '==' → logprob: -6.378700256347656
    3. '```' → logprob: -6.878700256347656
    4. '=='' → logprob: -8.253700256347656
    5. '=="' → logprob: -8.378700256347656
    6. '__('' → logprob: -9.003700256347656
    7. ' ==' → logprob: -9.628700256347656
    8. '__.__' → logprob: -9.753700256347656
    9. '__":
' → logprob: -9.878700256347656
    10. '__':
' → logprob: -10.003700256347656

Token 2258: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7059497833251953
    2. '==' → logprob: -1.3309497833251953
    3. '=='' → logprob: -1.8309497833251953
    4. '```' → logprob: -3.4559497833251953
    5. '=="' → logprob: -3.9559497833251953
    6. ' ==' → logprob: -4.205949783325195
    7. '['' → logprob: -5.705949783325195
    8. '__.__' → logprob: -6.205949783325195
    9. '==='' → logprob: -6.330949783325195
    10. '<|end|>' → logprob: -6.830949783325195

Token 2259: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.251953661441803
    2. ''' → logprob: -1.5019536018371582
    3. '__' → logprob: -10.626954078674316
    4. ' "__' → logprob: -15.751954078674316
    5. ' '__' → logprob: -16.876953125
    6. ''m' → logprob: -17.876953125
    7. '"user' → logprob: -18.001953125
    8. '   ' → logprob: -18.126953125
    9. ''name' → logprob: -18.251953125
    10. ''"' → logprob: -18.251953125

Token 2260: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2346678078174591
    2. 'main' → logprob: -1.7346677780151367
    3. ''' → logprob: -3.4846677780151367
    4. '"' → logprob: -6.234667778015137
    5. '_main' → logprob: -10.109667778015137
    6. 'name' → logprob: -11.609667778015137
    7. '__':
' → logprob: -11.734667778015137
    8. '____' → logprob: -11.984667778015137
    9. '___' → logprob: -12.609667778015137
    10. ' main' → logprob: -12.734667778015137

Token 2261: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07036696374416351
    2. '():
' → logprob: -3.570366859436035
    3. '__' → logprob: -3.820366859436035
    4. '__":
' → logprob: -4.195366859436035
    5. '__()
' → logprob: -7.570366859436035
    6. '```' → logprob: -8.070366859436035
    7. '().__' → logprob: -8.195366859436035
    8. '==' → logprob: -8.320366859436035
    9. '()' → logprob: -8.570366859436035
    10. '('__' → logprob: -8.820366859436035

Token 2262: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01636289805173874
    2. '   ' → logprob: -4.26636266708374
    3. '	main' → logprob: -6.51636266708374
    4. '```' → logprob: -7.64136266708374
    5. ' main' → logprob: -8.516363143920898
    6. '_main' → logprob: -11.016363143920898
    7. '(main' → logprob: -11.391363143920898
    8. '``' → logprob: -11.891363143920898
    9. '`' → logprob: -14.141363143920898
    10. 'Main' → logprob: -14.266363143920898

Token 2263: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -21.125
    4. '   ' → logprob: -23.25
    5. '(main' → logprob: -24.5
    6. '_main' → logprob: -24.625
    7. 'import' → logprob: -24.75
    8. '.main' → logprob: -25.5
    9. '```' → logprob: -25.75
    10. 'Main' → logprob: -27.0

Token 2264: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2262
Tokens correctement prédits (1ère position, stricte): 757
Tokens correctement prédits (1ère position, avec adaptation): 811
Tokens correctement prédits (top 10): 1681
Précision stricte (1ère position): 33.47%
Précision adaptée (1ère position): 35.85%
Précision (top 10): 74.31%
================================================================================
