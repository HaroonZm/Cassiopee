================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
pasta = [int(input()) for _ in range(3)]
juice = [int(input()) for _ in range(2)]

min_price = min(p + j - 50 for p in pasta for j in juice)
print(min_price)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'p' (ID: 79)
  → Token d'amorce (pas de prédiction)

Token 1: 'asta' (ID: 6307)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' [' (ID: 723)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15299415588378906
    2. ''' → logprob: -2.027994155883789
    3. ' "' → logprob: -4.902994155883789
    4. ' '' → logprob: -6.527994155883789
    5. ' ' → logprob: -7.152994155883789
    6. '"user' → logprob: -9.277994155883789
    7. ''s' → logprob: -9.402994155883789
    8. '[' → logprob: -9.902994155883789
    9. '"path' → logprob: -10.027994155883789
    10. ''p' → logprob: -10.152994155883789

Token 4: 'int' (ID: 491)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2300645112991333
    2. '"' → logprob: -2.4800643920898438
    3. ']' → logprob: -2.7300643920898438
    4. ''p' → logprob: -3.7300643920898438
    5. '']' → logprob: -5.230064392089844
    6. ''s' → logprob: -5.355064392089844
    7. '0' → logprob: -5.355064392089844
    8. ''m' → logprob: -5.730064392089844
    9. '1' → logprob: -5.855064392089844
    10. '""' → logprob: -6.730064392089844

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003187810070812702
    2. ']' → logprob: -8.62531852722168
    3. '('' → logprob: -9.50031852722168
    4. '(x' → logprob: -10.87531852722168
    5. '(p' → logprob: -11.12531852722168
    6. '(user' → logprob: -12.25031852722168
    7. '[' → logprob: -12.50031852722168
    8. ''' → logprob: -12.50031852722168
    9. ' (' → logprob: -12.87531852722168
    10. 's' → logprob: -13.37531852722168

Token 6: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32847604155540466
    2. '())' → logprob: -2.2034759521484375
    3. ')]' → logprob: -2.7034759521484375
    4. ')' → logprob: -2.9534759521484375
    5. '()]' → logprob: -3.9534759521484375
    6. '()' → logprob: -4.4534759521484375
    7. ']' → logprob: -5.4534759521484375
    8. '('' → logprob: -5.7034759521484375
    9. '])' → logprob: -5.8284759521484375
    10. '(()' → logprob: -6.3284759521484375

Token 7: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5618009567260742
    2. ')]' → logprob: -0.9368009567260742
    3. ')' → logprob: -3.311800956726074
    4. '`]' → logprob: -7.561800956726074
    5. '])' → logprob: -7.811800956726074
    6. '[' → logprob: -8.436800956726074
    7. '])]' → logprob: -9.686800956726074
    8. '']' → logprob: -9.811800956726074
    9. ')])' → logprob: -10.311800956726074
    10. '```' → logprob: -10.436800956726074

Token 8: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10714960098266602
    2. ' ' → logprob: -3.107149600982666
    3. ' pasta' → logprob: -3.232149600982666
    4. 'range' → logprob: -5.732149600982666
    5. '<|end|>' → logprob: -5.732149600982666
    6. ' i' → logprob: -5.857149600982666
    7. ' a' → logprob: -6.482149600982666
    8. ' _' → logprob: -6.732149600982666
    9. ' in' → logprob: -6.982149600982666
    10. ' user' → logprob: -7.607149600982666

Token 9: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005238260608166456
    2. 'in' → logprob: -5.255238056182861
    3. ' ' → logprob: -12.63023853302002
    4. 'range' → logprob: -14.75523853302002
    5. 'import' → logprob: -15.38023853302002
    6. ')' → logprob: -15.63023853302002
    7. '<|end|>' → logprob: -16.755237579345703
    8. ',' → logprob: -17.005237579345703
    9. '	in' → logprob: -17.005237579345703
    10. ']' → logprob: -17.130237579345703

Token 10: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193139910697937
    2. 'range' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.626931190490723
    4. '	range' → logprob: -14.751931190490723
    5. 'p' → logprob: -15.501931190490723
    6. ' ran' → logprob: -16.25193214416504
    7. '(range' → logprob: -16.50193214416504
    8. '_range' → logprob: -16.87693214416504
    9. ' rango' → logprob: -17.00193214416504
    10. 'rang' → logprob: -17.00193214416504

Token 11: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '(len' → logprob: -13.500001907348633
    3. ' (' → logprob: -15.000001907348633
    4. '```' → logprob: -15.500001907348633
    5. '(
' → logprob: -16.625001907348633
    6. '4' → logprob: -16.625001907348633
    7. '((' → logprob: -16.875001907348633
    8. '3' → logprob: -17.250001907348633
    9. '6' → logprob: -17.375001907348633
    10. '(n' → logprob: -17.750001907348633

Token 12: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.13353613018989563
    2. '3' → logprob: -3.1335361003875732
    3. '10' → logprob: -3.3835361003875732
    4. '7' → logprob: -3.5085361003875732
    5. '6' → logprob: -4.758536338806152
    6. '4' → logprob: -4.883536338806152
    7. '8' → logprob: -7.758536338806152
    8. '9' → logprob: -7.758536338806152
    9. ' ' → logprob: -8.383536338806152
    10. '2' → logprob: -9.383536338806152

Token 13: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.2166411478538066e-05
    2. ')' → logprob: -10.375052452087402
    3. ']' → logprob: -10.875052452087402
    4. ')])' → logprob: -14.125052452087402
    5. ' )' → logprob: -14.625052452087402
    6. '))' → logprob: -15.375052452087402
    7. '])]' → logprob: -15.750052452087402
    8. '])' → logprob: -15.750052452087402
    9. '')]' → logprob: -16.125051498413086
    10. ')],' → logprob: -16.625051498413086

Token 14: 'juice' (ID: 158664)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05995415151119232
    2. '+
' → logprob: -4.4349541664123535
    3. 'p' → logprob: -4.5599541664123535
    4. '*' → logprob: -4.6849541664123535
    5. '.' → logprob: -5.5599541664123535
    6. 'sum' → logprob: -5.6849541664123535
    7. '+p' → logprob: -5.8099541664123535
    8. '[' → logprob: -5.9349541664123535
    9. '#' → logprob: -6.1849541664123535
    10. '```' → logprob: -6.3099541664123535

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025071388110518456
    2. '=' → logprob: -3.900071382522583
    3. '_' → logprob: -6.150071620941162
    4. 's' → logprob: -6.525071620941162
    5. '_amount' → logprob: -7.900071620941162
    6. '[' → logprob: -8.525071144104004
    7. '_volume' → logprob: -9.150071144104004
    8. '(' → logprob: -10.275071144104004
    9. ' ' → logprob: -10.400071144104004
    10. '_s' → logprob: -11.025071144104004

Token 16: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.122050166130066
    2. ' [' → logprob: -1.372050166130066
    3. 'int' → logprob: -2.1220502853393555
    4. ' int' → logprob: -2.2470502853393555
    5. ' pasta' → logprob: -3.1220502853393555
    6. '[' → logprob: -3.2470502853393555
    7. '[p' → logprob: -3.3720502853393555
    8. 'p' → logprob: -3.4970502853393555
    9. 'sum' → logprob: -3.8720502853393555
    10. ' sum' → logprob: -4.3720502853393555

Token 17: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016074957326054573
    2. ' int' → logprob: -4.141075134277344
    3. '0' → logprob: -11.016075134277344
    4. '(int' → logprob: -12.016075134277344
    5. ']int' → logprob: -12.266075134277344
    6. ' ' → logprob: -12.516075134277344
    7. '   ' → logprob: -13.391075134277344
    8. 'input' → logprob: -13.391075134277344
    9. '[int' → logprob: -13.391075134277344
    10. '1' → logprob: -13.891075134277344

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005239616730250418
    2. '(' → logprob: -7.625524044036865
    3. ' (' → logprob: -10.250523567199707
    4. 'input' → logprob: -16.125524520874023
    5. '=input' → logprob: -16.375524520874023
    6. '(inputs' → logprob: -16.625524520874023
    7. '(inp' → logprob: -16.625524520874023
    8. '(x' → logprob: -17.000524520874023
    9. '(int' → logprob: -17.250524520874023
    10. ',input' → logprob: -17.375524520874023

Token 19: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.723973582556937e-05
    2. '()]' → logprob: -11.250017166137695
    3. '()' → logprob: -12.625017166137695
    4. '()),' → logprob: -15.000017166137695
    5. ' ())' → logprob: -15.125017166137695
    6. '())
' → logprob: -15.750017166137695
    7. '()))' → logprob: -16.500017166137695
    8. ')]' → logprob: -17.625017166137695
    9. '()`' → logprob: -17.750017166137695
    10. '());' → logprob: -17.875017166137695

Token 20: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08353684097528458
    2. '()' → logprob: -2.9585368633270264
    3. 'for' → logprob: -3.8335368633270264
    4. ' for' → logprob: -5.458536624908447
    5. '())' → logprob: -6.458536624908447
    6. ')]' → logprob: -7.833536624908447
    7. ']' → logprob: -9.333537101745605
    8. '[' → logprob: -9.708537101745605
    9. '()]' → logprob: -9.833537101745605
    10. '])' → logprob: -9.833537101745605

Token 21: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4044847786426544
    2. '(' → logprob: -1.279484748840332
    3. ' ' → logprob: -3.529484748840332
    4. ' (' → logprob: -3.904484748840332
    5. ' _' → logprob: -6.029484748840332
    6. 'range' → logprob: -6.779484748840332
    7. '(range' → logprob: -7.154484748840332
    8. '_' → logprob: -7.779484748840332
    9. '3' → logprob: -9.154484748840332
    10. '_range' → logprob: -9.529484748840332

Token 22: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11385123431682587
    2. 'range' → logprob: -2.238851308822632
    3. '(' → logprob: -6.988851070404053
    4. '(range' → logprob: -9.363851547241211
    5. '	range' → logprob: -11.738851547241211
    6. ' ' → logprob: -11.988851547241211
    7. '<|end|>' → logprob: -12.863851547241211
    8. ' (' → logprob: -13.863851547241211
    9. ' in' → logprob: -13.988851547241211
    10. ' xrange' → logprob: -14.488851547241211

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2521469295024872
    2. 'range' → logprob: -1.5021469593048096
    3. '(' → logprob: -8.50214672088623
    4. ' ' → logprob: -11.50214672088623
    5. '3' → logprob: -13.00214672088623
    6. '(range' → logprob: -13.25214672088623
    7. '	range' → logprob: -15.12714672088623
    8. ' (' → logprob: -15.87714672088623
    9. ' xrange' → logprob: -16.627147674560547
    10. '_range' → logprob: -17.127147674560547

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '3' → logprob: -15.375000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(
' → logprob: -15.875000953674316
    5. '(

' → logprob: -19.625
    6. ' ' → logprob: -20.25
    7. '4' → logprob: -21.25
    8. '2' → logprob: -21.5
    9. '((' → logprob: -21.5
    10. '6' → logprob: -21.5

Token 25: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009300446254201233
    2. '2' → logprob: -7.500929832458496
    3. ' ' → logprob: -8.875929832458496
    4. '4' → logprob: -9.375929832458496
    5. '5' → logprob: -9.625929832458496
    6. '1' → logprob: -9.750929832458496
    7. '6' → logprob: -10.875929832458496
    8. '7' → logprob: -12.250929832458496
    9. '10' → logprob: -13.500929832458496
    10. '   ' → logprob: -14.313429832458496

Token 26: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.017927029868588e-05
    2. ']' → logprob: -10.000080108642578
    3. ')' → logprob: -11.000080108642578
    4. '])]' → logprob: -11.625080108642578
    5. ')])' → logprob: -12.250080108642578
    6. '])' → logprob: -13.625080108642578
    7. ')]
' → logprob: -13.750080108642578
    8. '')]' → logprob: -14.000080108642578
    9. ' )' → logprob: -15.125080108642578
    10. ')]
' → logprob: -15.625080108642578

Token 27: 'min' (ID: 1493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7553033232688904
    2. 'total' → logprob: -1.1303033828735352
    3. 'p' → logprob: -2.255303382873535
    4. 'max' → logprob: -3.630303382873535
    5. 'result' → logprob: -4.255303382873535
    6. 'time' → logprob: -4.505303382873535
    7. 'sum' → logprob: -4.755303382873535
    8. 'answer' → logprob: -4.880303382873535
    9. 'a' → logprob: -5.005303382873535
    10. 't' → logprob: -5.505303382873535

Token 28: '_price' (ID: 18814)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20441071689128876
    2. '(p' → logprob: -1.7044106721878052
    3. '([' → logprob: -7.079410552978516
    4. '(min' → logprob: -7.329410552978516
    5. '(sum' → logprob: -8.204410552978516
    6. 's' → logprob: -8.329410552978516
    7. 'p' → logprob: -8.329410552978516
    8. '_' → logprob: -8.329410552978516
    9. ' (' → logprob: -8.829410552978516
    10. '_p' → logprob: -9.579410552978516

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4944164752960205
    2. '_' → logprob: -1.6194164752960205
    3. '=' → logprob: -2.6194164752960205
    4. 's' → logprob: -2.8694164752960205
    5. '(' → logprob: -3.4944164752960205
    6. '_p' → logprob: -3.6194164752960205
    7. '_price' → logprob: -5.744416236877441
    8. '(p' → logprob: -7.244416236877441
    9. 'p' → logprob: -8.244416236877441
    10. '_=' → logprob: -8.369416236877441

Token 30: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5394592881202698
    2. ' min' → logprob: -0.9144592881202698
    3. '(min' → logprob: -4.539459228515625
    4. 'p' → logprob: -5.914459228515625
    5. '[min' → logprob: -6.664459228515625
    6. '100' → logprob: -7.414459228515625
    7. ' p' → logprob: -9.039459228515625
    8. ' ' → logprob: -9.414459228515625
    9. '(p' → logprob: -9.414459228515625
    10. '10' → logprob: -9.789459228515625

Token 31: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.002190233441069722
    2. '(' → logprob: -6.502190113067627
    3. '([' → logprob: -7.377190113067627
    4. '(min' → logprob: -10.252190589904785
    5. '((' → logprob: -11.252190589904785
    6. '(sum' → logprob: -12.127190589904785
    7. '()' → logprob: -13.627190589904785
    8. ' (' → logprob: -14.127190589904785
    9. '(max' → logprob: -14.127190589904785
    10. '(
' → logprob: -14.127190589904785

Token 32: ' +' (ID: 659)
  Prédit: 'asta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'asta' → logprob: -0.017025619745254517
    2. 'p' → logprob: -4.642025470733643
    3. '(p' → logprob: -5.142025470733643
    4. 'a' → logprob: -7.142025470733643
    5. 'ast' → logprob: -9.2670259475708
    6. '(' → logprob: -9.3920259475708
    7. ' pasta' → logprob: -9.5170259475708
    8. '(a' → logprob: -9.5170259475708
    9. ')p' → logprob: -10.2670259475708
    10. ')' → logprob: -10.3920259475708

Token 33: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22747527062892914
    2. ' j' → logprob: -1.7274752855300903
    3. 'q' → logprob: -4.602475166320801
    4. 'm' → logprob: -5.852475166320801
    5. ' ' → logprob: -5.852475166320801
    6. ' q' → logprob: -6.227475166320801
    7. 'p' → logprob: -6.352475166320801
    8. 's' → logprob: -6.602475166320801
    9. 'min' → logprob: -6.727475166320801
    10. ' min' → logprob: -7.227475166320801

Token 34: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021254632622003555
    2. 'for' → logprob: -3.896254539489746
    3. ' ' → logprob: -7.396254539489746
    4. '  ' → logprob: -10.271254539489746
    5. '   ' → logprob: -10.271254539489746
    6. 'ice' → logprob: -11.896254539489746
    7. '	for' → logprob: -12.021254539489746
    8. '```' → logprob: -12.646254539489746
    9. 'ices' → logprob: -13.271254539489746
    10. ')' → logprob: -13.271254539489746

Token 35: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.23072311282157898
    2. '50' → logprob: -1.6057231426239014
    3. ' ' → logprob: -6.480722904205322
    4. '(p' → logprob: -6.855722904205322
    5. 'min' → logprob: -6.980722904205322
    6. '(min' → logprob: -7.855722904205322
    7. '2' → logprob: -8.35572338104248
    8. 'int' → logprob: -8.60572338104248
    9. 'max' → logprob: -8.60572338104248
    10. '(' → logprob: -8.73072338104248

Token 36: '50' (ID: 1434)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.5257869362831116
    2. '50' → logprob: -0.9007869362831116
    3. 'min' → logprob: -7.025786876678467
    4. 'max' → logprob: -7.775786876678467
    5. 'discount' → logprob: -8.400787353515625
    6. '(p' → logprob: -8.525787353515625
    7. '2' → logprob: -8.775787353515625
    8. 'int' → logprob: -9.400787353515625
    9. '(min' → logprob: -9.525787353515625
    10. ' ' → logprob: -9.525787353515625

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519436180591583
    2. 'for' → logprob: -1.501943588256836
    3. ' ' → logprob: -11.501943588256836
    4. ')' → logprob: -13.501943588256836
    5. 'p' → logprob: -13.501943588256836
    6. '	for' → logprob: -13.876943588256836
    7. '  ' → logprob: -14.626943588256836
    8. '   ' → logprob: -15.251943588256836
    9. ' p' → logprob: -17.501943588256836
    10. ',' → logprob: -17.501943588256836

Token 38: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4741385877132416
    2. 'p' → logprob: -0.974138617515564
    3. '(p' → logprob: -9.849138259887695
    4. '	p' → logprob: -12.599138259887695
    5. ' (' → logprob: -13.099138259887695
    6. '[p' → logprob: -14.474138259887695
    7. '_p' → logprob: -14.599138259887695
    8. ' pasta' → logprob: -14.724138259887695
    9. ' ' → logprob: -14.849138259887695
    10. ' ' → logprob: -15.099138259887695

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0045508150942623615
    2. 'in' → logprob: -5.879550933837891
    3. ',' → logprob: -6.379550933837891
    4. ',p' → logprob: -10.87955093383789
    5. ' ,' → logprob: -11.87955093383789
    6. 's' → logprob: -11.87955093383789
    7. ',j' → logprob: -12.00455093383789
    8. 'p' → logprob: -12.25455093383789
    9. '<|end|>' → logprob: -13.00455093383789
    10. ' ' → logprob: -13.87955093383789

Token 40: ' pasta' (ID: 33847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3869052231311798
    2. ' pasta' → logprob: -1.1369051933288574
    3. 'paste' → logprob: -11.136905670166016
    4. ' paste' → logprob: -12.261905670166016
    5. ' past' → logprob: -12.761905670166016
    6. '_p' → logprob: -13.136905670166016
    7. 'past' → logprob: -13.261905670166016
    8. '	p' → logprob: -13.386905670166016
    9. '(p' → logprob: -13.636905670166016
    10. ')p' → logprob: -13.886905670166016

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38731324672698975
    2. 'for' → logprob: -1.1373132467269897
    3. ' ' → logprob: -7.887313365936279
    4. '   ' → logprob: -10.262312889099121
    5. ')' → logprob: -11.137312889099121
    6. '  ' → logprob: -11.512312889099121
    7. '	for' → logprob: -12.762312889099121
    8. '    ' → logprob: -13.637312889099121
    9. '       ' → logprob: -14.387312889099121
    10. ' ' → logprob: -14.387312889099121

Token 42: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47408080101013184
    2. ' j' → logprob: -0.9740808010101318
    3. ' ' → logprob: -12.724081039428711
    4. '	j' → logprob: -14.599081039428711
    5. '  ' → logprob: -15.599081039428711
    6. '   ' → logprob: -16.22408103942871
    7. '    ' → logprob: -16.84908103942871
    8. ' ' → logprob: -16.97408103942871
    9. '     ' → logprob: -18.97408103942871
    10. '$j' → logprob: -19.09908103942871

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014186544343829155
    2. 'in' → logprob: -4.264186382293701
    3. 'juice' → logprob: -11.13918685913086
    4. ' juice' → logprob: -11.76418685913086
    5. ' ' → logprob: -15.01418685913086
    6. '<|end|>' → logprob: -16.13918685913086
    7. 'ju' → logprob: -16.76418685913086
    8. 'e' → logprob: -16.88918685913086
    9. '=' → logprob: -17.01418685913086
    10. '```' → logprob: -17.26418685913086

Token 44: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.11287682503461838
    2. ' juice' → logprob: -2.2378768920898438
    3. 'ju' → logprob: -9.862876892089844
    4. 'j' → logprob: -14.487876892089844
    5. '```' → logprob: -14.987876892089844
    6. ' ' → logprob: -14.987876892089844
    7. 'joy' → logprob: -15.112876892089844
    8. 'jo' → logprob: -16.362876892089844
    9. 'jug' → logprob: -16.612876892089844
    10. ' ju' → logprob: -16.612876892089844

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -12.500004768371582
    3. '))' → logprob: -14.875004768371582
    4. ')
' → logprob: -15.625004768371582
    5. ')`' → logprob: -17.000003814697266
    6. '])' → logprob: -17.875003814697266
    7. '）' → logprob: -18.125003814697266
    8. ')}' → logprob: -18.250003814697266
    9. ']' → logprob: -18.875003814697266
    10. '`)' → logprob: -19.000003814697266

Token 46: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.0339031834737398e-05
    2. '
' → logprob: -10.875020027160645
    3. ' print' → logprob: -13.875020027160645
    4. '
' → logprob: -15.250020027160645
    5. ')' → logprob: -17.00002098083496
    6. ')
' → logprob: -17.37502098083496
    7. '```' → logprob: -17.50002098083496
    8. '(print' → logprob: -18.25002098083496
    9. '\n' → logprob: -20.12502098083496
    10. '#print' → logprob: -20.37502098083496

Token 47: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519359588623047
    2. '(min' → logprob: -1.5019359588623047
    3. '(max' → logprob: -12.751935958862305
    4. '('' → logprob: -14.001935958862305
    5. '(p' → logprob: -14.001935958862305
    6. '("("' → logprob: -14.501935958862305
    7. '(f' → logprob: -14.751935958862305
    8. '(`' → logprob: -15.001935958862305
    9. '(m' → logprob: -15.501935958862305
    10. ' (' → logprob: -15.626935958862305

Token 48: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: 0.0
    2. '(price' → logprob: -18.125
    3. 'price' → logprob: -19.625
    4. '_PRICE' → logprob: -19.875
    5. '_pr' → logprob: -20.25
    6. '_prices' → logprob: -20.875
    7. 'Price' → logprob: -21.0
    8. '_p' → logprob: -21.125
    9. '_' → logprob: -21.5
    10. '(_' → logprob: -21.875

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '))' → logprob: -12.375004768371582
    3. ' )' → logprob: -14.250004768371582
    4. ')`' → logprob: -16.6250057220459
    5. '')' → logprob: -17.2500057220459
    6. '`)' → logprob: -17.8750057220459
    7. ')
' → logprob: -18.3750057220459
    8. '）' → logprob: -19.0000057220459
    9. '()' → logprob: -19.0000057220459
    10. ')))' → logprob: -19.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 40.43%
Précision adaptée (1ère position): 40.43%
Précision (top 10): 76.60%
================================================================================
