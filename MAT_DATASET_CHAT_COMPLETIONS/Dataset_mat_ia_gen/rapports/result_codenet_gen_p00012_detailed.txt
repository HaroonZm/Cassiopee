================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def sign(p1, p2, p3):
    """
    Calcule le signe de l'aire par rapport à l'orientation des points.
    Cela est utilisé pour déterminer de quel côté une point se situe par rapport à un vecteur.
    """
    return (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])

def point_in_triangle(pt, v1, v2, v3):
    """
    Détermine si un point pt est à l'intérieur du triangle formé par v1, v2, v3.

    La méthode utilise le produit vectoriel (sign) pour vérifier que le point est du même côté
    de chaque côté du triangle.

    Retourne True si le point est à l'intérieur ou sur le bord, False sinon.
    """
    d1 = sign(pt, v1, v2)
    d2 = sign(pt, v2, v3)
    d3 = sign(pt, v3, v1)

    has_neg = (d1 < 0) or (d2 < 0) or (d3 < 0)
    has_pos = (d1 > 0) or (d2 > 0) or (d3 > 0)

    # Le point est dans le triangle si tous les signes sont positifs ou tous négatifs (même signe)
    return not(has_neg and has_pos)

def main():
    """
    Fonction principale qui lit les données depuis l'entrée standard jusqu'à la fin du fichier (EOF),
    détermine pour chaque dataset si le point est dans le triangle, puis imprime la réponse.
    """
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        # Lire les données de la ligne
        x1, y1, x2, y2, x3, y3, xp, yp = map(float, line.split())
        v1 = (x1, y1)
        v2 = (x2, y2)
        v3 = (x3, y3)
        pt = (xp, yp)

        if point_in_triangle(pt, v1, v2, v3):
            print("YES")
        else:
            print("NO")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26892414689064026
    2. '\n' → logprob: -1.8939241170883179
    3. 'import' → logprob: -3.3939242362976074
    4. '<|end|>' → logprob: -3.8939242362976074
    5. '\' → logprob: -4.768924236297607
    6. '[' → logprob: -5.518924236297607
    7. 'newline' → logprob: -5.643924236297607
    8. '
' → logprob: -5.643924236297607
    9. '' → logprob: -5.893924236297607
    10. '<|end|>' → logprob: -6.518924236297607

Token 4: ' sign' (ID: 2232)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27689647674560547
    2. ' process' → logprob: -2.6518964767456055
    3. ' read' → logprob: -3.0268964767456055
    4. ' space' → logprob: -3.2768964767456055
    5. ' main' → logprob: -3.7768964767456055
    6. ' calculate' → logprob: -4.7768964767456055
    7. ' my' → logprob: -5.0268964767456055
    8. ' sys' → logprob: -5.2768964767456055
    9. ' ' → logprob: -5.5268964767456055
    10. ' def' → logprob: -5.7768964767456055

Token 5: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8832767605781555
    2. 'ature' → logprob: -0.8832767605781555
    3. '_' → logprob: -2.5082767009735107
    4. '_up' → logprob: -3.0082767009735107
    5. 'ificant' → logprob: -4.63327693939209
    6. 'up' → logprob: -4.88327693939209
    7. 'ificance' → logprob: -5.13327693939209
    8. 'at' → logprob: -5.63327693939209
    9. '(_' → logprob: -6.13327693939209
    10. '_at' → logprob: -6.25827693939209

Token 6: '1' (ID: 16)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.8692371249198914
    2. 'r' → logprob: -0.9942371249198914
    3. 'aram' → logprob: -1.9942371845245361
    4. '):' → logprob: -3.994237184524536
    5. 'er' → logprob: -4.119236946105957
    6. 'ayload' → logprob: -4.494236946105957
    7. 'os' → logprob: -4.994236946105957
    8. 'assword' → logprob: -5.619236946105957
    9. 'y' → logprob: -5.869236946105957
    10. ')' → logprob: -5.869236946105957

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008512565866112709
    2. '):' → logprob: -5.133512496948242
    3. ')' → logprob: -7.008512496948242
    4. ',p' → logprob: -7.508512496948242
    5. '.' → logprob: -7.633512496948242
    6. '_' → logprob: -8.633512496948242
    7. ' ,' → logprob: -9.383512496948242
    8. 'oint' → logprob: -9.633512496948242
    9. '1' → logprob: -10.008512496948242
    10. '[' → logprob: -10.008512496948242

Token 8: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.017583072185516357
    2. 'p' → logprob: -4.142582893371582
    3. ',' → logprob: -6.517582893371582
    4. ' ,' → logprob: -10.517582893371582
    5. ',p' → logprob: -10.517582893371582
    6. ' ' → logprob: -11.142582893371582
    7. ' ' → logprob: -14.892582893371582
    8. '```' → logprob: -15.392582893371582
    9. '   ' → logprob: -15.767582893371582
    10. '	p' → logprob: -15.892582893371582

Token 9: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4583905339241028
    2. '2' → logprob: -1.208390474319458
    3. '1' → logprob: -3.083390474319458
    4. '):' → logprob: -4.833390712738037
    5. 'oint' → logprob: -5.083390712738037
    6. '3' → logprob: -5.583390712738037
    7. 'oints' → logprob: -5.583390712738037
    8. ',p' → logprob: -7.458390712738037
    9. 'p' → logprob: -8.083390235900879
    10. ')' → logprob: -8.458390235900879

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5976529717445374
    2. ',' → logprob: -0.8476529717445374
    3. ')' → logprob: -3.8476529121398926
    4. ',p' → logprob: -9.97265338897705
    5. '):
' → logprob: -10.22265338897705
    6. '.' → logprob: -10.84765338897705
    7. '),' → logprob: -12.09765338897705
    8. ':' → logprob: -12.09765338897705
    9. ' ):' → logprob: -12.09765338897705
    10. ' ,' → logprob: -12.09765338897705

Token 11: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.005929982289671898
    2. 'p' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.380929946899414
    4. ' п' → logprob: -15.630929946899414
    5. '	p' → logprob: -15.755929946899414
    6. ')' → logprob: -16.505929946899414
    7. '   ' → logprob: -17.005929946899414
    8. ',' → logprob: -17.005929946899414
    9. ' ' → logprob: -17.005929946899414
    10. '<|end|>' → logprob: -17.005929946899414

Token 12: '3' (ID: 18)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6131965517997742
    2. '3' → logprob: -1.113196611404419
    3. '1' → logprob: -2.738196611404419
    4. '):' → logprob: -2.738196611404419
    5. '4' → logprob: -8.86319637298584
    6. '2' → logprob: -9.11319637298584
    7. '):
' → logprob: -9.86319637298584
    8. '_' → logprob: -9.98819637298584
    9. ',' → logprob: -10.73819637298584
    10. ')**' → logprob: -10.73819637298584

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003203615779057145
    2. ')' → logprob: -5.753203392028809
    3. ':' → logprob: -11.628203392028809
    4. '):
' → logprob: -11.878203392028809
    5. ' ):' → logprob: -12.378203392028809
    6. ''):' → logprob: -13.128203392028809
    7. ',' → logprob: -13.878203392028809
    8. '   ' → logprob: -14.253203392028809
    9. ' ' → logprob: -15.628203392028809
    10. '）：' → logprob: -15.628203392028809

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5824695825576782
    2. ':' → logprob: -0.8324695825576782
    3. '):' → logprob: -5.832469463348389
    4. '(' → logprob: -7.082469463348389
    5. '():' → logprob: -7.457469463348389
    6. '    ' → logprob: -7.707469463348389
    7. ':
' → logprob: -7.707469463348389
    8. ' :' → logprob: -8.707469940185547
    9. '(p' → logprob: -8.832469940185547
    10. '):
' → logprob: -9.207469940185547

Token 15: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1325226128101349
    2. ' return' → logprob: -2.3825225830078125
    3. '    ' → logprob: -3.6325225830078125
    4. 'return' → logprob: -5.3825225830078125
    5. '	return' → logprob: -8.507522583007812
    6. ' ' → logprob: -8.632522583007812
    7. ':' → logprob: -9.007522583007812
    8. '```' → logprob: -10.382522583007812
    9. '   ' → logprob: -10.382522583007812
    10. '  ' → logprob: -10.632522583007812

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01494571752846241
    2. ' return' → logprob: -4.5149455070495605
    3. '    ' → logprob: -6.0149455070495605
    4. 'return' → logprob: -7.0149455070495605
    5. '       ' → logprob: -8.764945983886719
    6. ')' → logprob: -9.389945983886719
    7. ' ' → logprob: -9.514945983886719
    8. '  ' → logprob: -9.764945983886719
    9. ' )' → logprob: -10.014945983886719
    10. ' """' → logprob: -10.389945983886719

Token 17: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06400182098150253
    2. ' return' → logprob: -2.9390017986297607
    3. 'return' → logprob: -4.81400203704834
    4. '    ' → logprob: -7.31400203704834
    5. '  ' → logprob: -9.43900203704834
    6. ' ' → logprob: -9.56400203704834
    7. ' """' → logprob: -10.18900203704834
    8. '"""' → logprob: -10.18900203704834
    9. '       ' → logprob: -10.93900203704834
    10. '	return' → logprob: -11.18900203704834

Token 18: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18095579743385315
    2. 'culate' → logprob: -1.8059557676315308
    3. 'cul' → logprob: -7.80595588684082
    4. 'cula' → logprob: -8.18095588684082
    5. '   ' → logprob: -8.68095588684082
    6. ' c' → logprob: -8.80595588684082
    7. '  ' → logprob: -9.68095588684082
    8. 'culated' → logprob: -10.05595588684082
    9. ' ' → logprob: -10.80595588684082
    10. 'cular' → logprob: -10.80595588684082

Token 19: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06731490045785904
    2. 'te' → logprob: -3.442314863204956
    3. '(' → logprob: -4.692315101623535
    4. '_' → logprob: -4.817315101623535
    5. ' ' → logprob: -5.567315101623535
    6. 'd' → logprob: -5.942315101623535
    7. '   ' → logprob: -6.067315101623535
    8. 't' → logprob: -6.192315101623535
    9. 'm' → logprob: -7.067315101623535
    10. ''s' → logprob: -7.317315101623535

Token 20: ' signe' (ID: 87345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9323825240135193
    2. '  ' → logprob: -1.307382583618164
    3. ' ' → logprob: -2.182382583618164
    4. ' la' → logprob: -3.307382583618164
    5. ' return' → logprob: -3.432382583618164
    6. ' triangle' → logprob: -3.557382583618164
    7. ' determinant' → logprob: -3.932382583618164
    8. ' sign' → logprob: -4.057382583618164
    9. ' signe' → logprob: -4.557382583618164
    10. 's' → logprob: -4.682382583618164

Token 21: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12245489656925201
    2. '   ' → logprob: -3.372454881668091
    3. ' (' → logprob: -3.622454881668091
    4. '_' → logprob: -4.12245512008667
    5. ' ' → logprob: -4.24745512008667
    6. ' de' → logprob: -5.62245512008667
    7. '(
' → logprob: -5.62245512008667
    8. '=' → logprob: -6.37245512008667
    9. '(p' → logprob: -6.37245512008667
    10. 's' → logprob: -6.62245512008667

Token 22: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4499092400074005
    2. '(p' → logprob: -1.1999092102050781
    3. '(' → logprob: -4.199909210205078
    4. ' p' → logprob: -4.574909210205078
    5. ' ((' → logprob: -4.699909210205078
    6. '((' → logprob: -4.699909210205078
    7. ' ' → logprob: -4.824909210205078
    8. '   ' → logprob: -5.449909210205078
    9. 'p' → logprob: -6.449909210205078
    10. ' la' → logprob: -6.699909210205078

Token 23: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8141002655029297
    2. 'a' → logprob: -0.8141002655029297
    3. 'angle' → logprob: -3.5641002655029297
    4. ''espace' → logprob: -3.6891002655029297
    5. 'e' → logprob: -4.68910026550293
    6. ''ex' → logprob: -4.81410026550293
    7. 'orientation' → logprob: -4.93910026550293
    8. '’expression' → logprob: -5.06410026550293
    9. 'area' → logprob: -5.56410026550293
    10. 'aire' → logprob: -5.81410026550293

Token 24: 'aire' (ID: 8189)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.31470322608947754
    2. ' produit' → logprob: -2.5647032260894775
    3. ' orientation' → logprob: -2.6897032260894775
    4. 'area' → logprob: -3.0647032260894775
    5. 'orientation' → logprob: -4.064702987670898
    6. ' determinant' → logprob: -4.189702987670898
    7. ' ' → logprob: -4.814702987670898
    8. ' triangle' → logprob: -4.939702987670898
    9. ' détermin' → logprob: -5.439702987670898
    10. 'aire' → logprob: -5.564702987670898

Token 25: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.57350093126297
    2. '(' → logprob: -1.9485008716583252
    3. '_' → logprob: -2.073500871658325
    4. ')' → logprob: -3.323500871658325
    5. ' ' → logprob: -3.323500871658325
    6. ' (' → logprob: -3.948500871658325
    7. ' entre' → logprob: -4.448501110076904
    8. ' de' → logprob: -4.698501110076904
    9. '  ' → logprob: -4.823501110076904
    10. '    ' → logprob: -4.823501110076904

Token 26: ' rapport' (ID: 20847)
  Prédit: ' rapport'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapport' → logprob: -0.03636159002780914
    2. 'rapport' → logprob: -3.7863616943359375
    3. 'a' → logprob: -5.7863616943359375
    4. ' ' → logprob: -7.0363616943359375
    5. '   ' → logprob: -7.0363616943359375
    6. 'mi' → logprob: -7.1613616943359375
    7. ' def' → logprob: -7.2863616943359375
    8. 'rap' → logprob: -7.2863616943359375
    9. ' apport' → logprob: -7.5363616943359375
    10. '3' → logprob: -7.6613616943359375

Token 27: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6746565699577332
    2. ' a' → logprob: -1.174656629562378
    3. ' au' → logprob: -2.424656629562378
    4. '<|end|>' → logprob: -2.924656629562378
    5. ' ' → logprob: -3.924656629562378
    6. ' to' → logprob: -4.924656391143799
    7. ' aux' → logprob: -5.924656391143799
    8. '  ' → logprob: -6.174656391143799
    9. 'a' → logprob: -6.424656391143799
    10. '<|end|>' → logprob: -7.049656391143799

Token 28: ' l' (ID: 305)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5445544123649597
    2. ' la' → logprob: -1.2945544719696045
    3. ' ' → logprob: -2.2945544719696045
    4. ' l' → logprob: -3.7945544719696045
    5. 'p' → logprob: -4.419554233551025
    6. '   ' → logprob: -5.669554233551025
    7. 'l' → logprob: -6.794554233551025
    8. ' un' → logprob: -7.169554233551025
    9. '  ' → logprob: -7.169554233551025
    10. ' (' → logprob: -7.669554233551025

Token 29: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23170384764671326
    2. 'e' → logprob: -1.9817038774490356
    3. ''' → logprob: -3.231703758239746
    4. ''espace' → logprob: -3.731703758239746
    5. 'es' → logprob: -6.106703758239746
    6. 'u' → logprob: -6.731703758239746
    7. ' a' → logprob: -7.731703758239746
    8. '’espace' → logprob: -8.481703758239746
    9. ''''' → logprob: -8.731703758239746
    10. ''a' → logprob: -8.981703758239746

Token 30: 'orientation' (ID: 65957)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0299931764602661
    2. ''' → logprob: -1.2799931764602661
    3. 'p' → logprob: -1.4049931764602661
    4. ' p' → logprob: -3.6549930572509766
    5. 'triangle' → logprob: -3.9049930572509766
    6. '   ' → logprob: -5.154993057250977
    7. '"""' → logprob: -5.154993057250977
    8. ' ' → logprob: -5.154993057250977
    9. ' triangle' → logprob: -5.279993057250977
    10. ' a' → logprob: -5.529993057250977

Token 31: ' des' (ID: 731)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5400385856628418
    2. '(' → logprob: -1.1650385856628418
    3. '(
' → logprob: -3.915038585662842
    4. '   ' → logprob: -4.665038585662842
    5. '_' → logprob: -4.790038585662842
    6. ')' → logprob: -4.790038585662842
    7. ' de' → logprob: -5.040038585662842
    8. ' (' → logprob: -5.165038585662842
    9. 'e' → logprob: -5.290038585662842
    10. '\' → logprob: -5.415038585662842

Token 32: ' points' (ID: 5571)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.40089476108551025
    2. '  ' → logprob: -1.5258947610855103
    3. ' ' → logprob: -2.6508946418762207
    4. 'p' → logprob: -4.525894641876221
    5. ' points' → logprob: -4.525894641876221
    6. ' )' → logprob: -5.525894641876221
    7. ')' → logprob: -5.900894641876221
    8. '(p' → logprob: -6.650894641876221
    9. ' triangle' → logprob: -6.775894641876221
    10. ' triangles' → logprob: -6.775894641876221

Token 33: '.
' (ID: 558)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5472254157066345
    2. '(' → logprob: -1.6722254753112793
    3. '   ' → logprob: -1.9222254753112793
    4. ':' → logprob: -4.047225475311279
    5. ')' → logprob: -4.797225475311279
    6. 'p' → logprob: -4.922225475311279
    7. '\' → logprob: -5.047225475311279
    8. '_' → logprob: -5.172225475311279
    9. ' (' → logprob: -5.422225475311279
    10. ',' → logprob: -5.547225475311279

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03487816080451012
    2. '    
' → logprob: -4.659878253936768
    3. ')' → logprob: -5.159878253936768
    4. '   
' → logprob: -5.409878253936768
    5. '    ' → logprob: -5.784878253936768
    6. ' ' → logprob: -6.159878253936768
    7. ' 
' → logprob: -6.409878253936768
    8. '\' → logprob: -6.409878253936768
    9. '\n' → logprob: -6.659878253936768
    10. '  ' → logprob: -7.034878253936768

Token 35: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010445753112435341
    2. ')' → logprob: -5.635445594787598
    3. '    ' → logprob: -5.635445594787598
    4. '  ' → logprob: -7.760445594787598
    5. '    
' → logprob: -7.760445594787598
    6. '   
' → logprob: -7.760445594787598
    7. '"""' → logprob: -8.260445594787598
    8. '```' → logprob: -8.385445594787598
    9. ' """' → logprob: -8.510445594787598
    10. ' return' → logprob: -8.635445594787598

Token 36: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0163543224334717
    2. ' return' → logprob: -1.1413543224334717
    3. ' ' → logprob: -1.3913543224334717
    4. '  ' → logprob: -4.391354560852051
    5. ' a' → logprob: -4.516354560852051
    6. 'return' → logprob: -5.016354560852051
    7. 's' → logprob: -5.391354560852051
    8. ' retourne' → logprob: -5.391354560852051
    9. ' ' → logprob: -5.766354560852051
    10. '    ' → logprob: -6.141354560852051

Token 37: ' utilisé' (ID: 53138)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1993924379348755
    2. ' ' → logprob: -1.5743924379348755
    3. '  ' → logprob: -2.199392318725586
    4. ' return' → logprob: -2.199392318725586
    5. '-' → logprob: -2.574392318725586
    6. ' a' → logprob: -2.699392318725586
    7. ' calcul' → logprob: -3.949392318725586
    8. ' un' → logprob: -4.324392318725586
    9. '    ' → logprob: -4.449392318725586
    10. ' p' → logprob: -4.824392318725586

Token 38: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6334549188613892
    2. '   ' → logprob: -1.1334549188613892
    3. ' to' → logprob: -2.7584547996520996
    4. '  ' → logprob: -4.2584547996521
    5. 'pour' → logprob: -4.5084547996521
    6. ' for' → logprob: -4.7584547996521
    7. ' ' → logprob: -4.8834547996521
    8. '```' → logprob: -5.0084547996521
    9. '    ' → logprob: -5.3834547996521
    10. ' à' → logprob: -5.3834547996521

Token 39: ' déterminer' (ID: 122024)
  Prédit: ' déterminer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déterminer' → logprob: -0.19534741342067719
    2. 'dé' → logprob: -2.070347309112549
    3. 'det' → logprob: -3.820347309112549
    4. 'determ' → logprob: -4.195347309112549
    5. 'd' → logprob: -5.695347309112549
    6. '   ' → logprob: -5.945347309112549
    7. 'l' → logprob: -6.445347309112549
    8. ' vérifier' → logprob: -6.945347309112549
    9. 'calcul' → logprob: -7.070347309112549
    10. ' calcul' → logprob: -7.320347309112549

Token 40: ' de' (ID: 334)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5714228749275208
    2. ' ' → logprob: -1.946422815322876
    3. ' la' → logprob: -1.946422815322876
    4. ' le' → logprob: -2.696422815322876
    5. '  ' → logprob: -3.696422815322876
    6. '   ' → logprob: -4.321423053741455
    7. ' if' → logprob: -4.446423053741455
    8. 'l' → logprob: -4.946423053741455
    9. ')' → logprob: -5.321423053741455
    10. 's' → logprob: -5.571423053741455

Token 41: ' quel' (ID: 10613)
  Prédit: ' quel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quel' → logprob: -1.2366487979888916
    2. 'l' → logprob: -2.1116487979888916
    3. '-' → logprob: -2.2366487979888916
    4. ' ' → logprob: -2.7366487979888916
    5. '<|end|>' → logprob: -3.1116487979888916
    6. ' l' → logprob: -3.6116487979888916
    7. 'i' → logprob: -3.7366487979888916
    8. 's' → logprob: -3.7366487979888916
    9. 'quel' → logprob: -3.7366487979888916
    10. '   ' → logprob: -3.7366487979888916

Token 42: ' côté' (ID: 33533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5166296362876892
    2. ' sens' → logprob: -1.391629695892334
    3. ' côté' → logprob: -2.891629695892334
    4. '_' → logprob: -4.391629695892334
    5. ')' → logprob: -4.516629695892334
    6. ' point' → logprob: -4.641629695892334
    7. ' triangle' → logprob: -4.766629695892334
    8. 'c' → logprob: -5.266629695892334
    9. ''' → logprob: -5.266629695892334
    10. 'sens' → logprob: -5.266629695892334

Token 43: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1275850534439087
    2. ' des' → logprob: -1.6275850534439087
    3. '  ' → logprob: -2.252584934234619
    4. ' p' → logprob: -2.377584934234619
    5. '<|end|>' → logprob: -2.627584934234619
    6. ' de' → logprob: -2.752584934234619
    7. 's' → logprob: -3.502584934234619
    8. ')' → logprob: -3.877584934234619
    9. ' )' → logprob: -4.127584934234619
    10. ' a' → logprob: -4.252584934234619

Token 44: ' point' (ID: 2438)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6017365455627441
    2. ' ' → logprob: -0.9767365455627441
    3. 'p' → logprob: -3.476736545562744
    4. ' point' → logprob: -3.726736545562744
    5. ' triangle' → logprob: -5.601736545562744
    6. ' des' → logprob: -6.101736545562744
    7. '  ' → logprob: -6.351736545562744
    8. '(p' → logprob: -6.351736545562744
    9. ')' → logprob: -6.601736545562744
    10. 's' → logprob: -6.726736545562744

Token 45: ' se' (ID: 458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6375594735145569
    2. ')' → logprob: -1.762559413909912
    3. '<|end|>' → logprob: -2.637559413909912
    4. 's' → logprob: -2.762559413909912
    5. 'e' → logprob: -2.887559413909912
    6. ' )' → logprob: -3.387559413909912
    7. '_' → logprob: -3.887559413909912
    8. ' a' → logprob: -4.637559413909912
    9. 'u' → logprob: -4.637559413909912
    10. '  ' → logprob: -5.137559413909912

Token 46: ' situe' (ID: 126699)
  Prédit: ' trouve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.013813329860568047
    2. 'tr' → logprob: -5.013813495635986
    3. 't' → logprob: -5.638813495635986
    4. ' situe' → logprob: -6.138813495635986
    5. '  ' → logprob: -8.013813018798828
    6. ' ' → logprob: -8.138813018798828
    7. ' t' → logprob: -8.638813018798828
    8. ' trouvent' → logprob: -9.138813018798828
    9. ' trouver' → logprob: -9.388813018798828
    10. ' trouv' → logprob: -9.763813018798828

Token 47: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.168867588043213
    2. '.' → logprob: -1.918867588043213
    3. '   ' → logprob: -1.918867588043213
    4. ' de' → logprob: -2.043867588043213
    5. ' d' → logprob: -2.793867588043213
    6. ' ' → logprob: -3.543867588043213
    7. ')' → logprob: -3.668867588043213
    8. ',' → logprob: -3.793867588043213
    9. ' du' → logprob: -4.043867588043213
    10. ' """
' → logprob: -4.043867588043213

Token 48: ' rapport' (ID: 20847)
  Prédit: ' rapport'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapport' → logprob: -0.44170936942100525
    2. 'rap' → logprob: -1.3167093992233276
    3. 'rapport' → logprob: -2.566709280014038
    4. ' rap' → logprob: -5.566709518432617
    5. ' rapp' → logprob: -5.941709518432617
    6. '-' → logprob: -6.566709518432617
    7. ' raport' → logprob: -6.566709518432617
    8. ' ' → logprob: -7.191709518432617
    9. ' apport' → logprob: -7.441709518432617
    10. 'ra' → logprob: -7.816709518432617

Token 49: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.057600587606430054
    2. ' a' → logprob: -3.932600498199463
    3. 'à' → logprob: -4.432600498199463
    4. ' ' → logprob: -4.557600498199463
    5. ' au' → logprob: -5.182600498199463
    6. 'a' → logprob: -6.557600498199463
    7. '  ' → logprob: -6.557600498199463
    8. 's' → logprob: -6.682600498199463
    9. ' aux' → logprob: -6.932600498199463
    10. ''à' → logprob: -7.182600498199463

Token 50: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7606943249702454
    2. ' l' → logprob: -1.3856942653656006
    3. ' p' → logprob: -1.6356942653656006
    4. ' ' → logprob: -3.0106942653656006
    5. 'l' → logprob: -4.63569450378418
    6. 'p' → logprob: -4.76069450378418
    7. ' un' → logprob: -5.13569450378418
    8. ' une' → logprob: -5.88569450378418
    9. ' a' → logprob: -6.26069450378418
    10. '   ' → logprob: -6.63569450378418

Token 51: ' vect' (ID: 106052)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.2610781788825989
    2. ' ' → logprob: -2.386078119277954
    3. ' segment' → logprob: -2.761078119277954
    4. ' p' → logprob: -4.011078357696533
    5. 'triangle' → logprob: -4.636078357696533
    6. 'segment' → logprob: -5.011078357696533
    7. ')' → logprob: -5.261078357696533
    8. 'p' → logprob: -5.511078357696533
    9. ',' → logprob: -5.511078357696533
    10. '.' → logprob: -6.636078357696533

Token 52: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.09236252307891846
    2. 'e' → logprob: -2.467362403869629
    3. 'eu' → logprob: -5.842362403869629
    4. 'or' → logprob: -8.092362403869629
    5. 'o' → logprob: -8.967362403869629
    6. 'eurs' → logprob: -10.842362403869629
    7. '```' → logprob: -11.592362403869629
    8. 'ect' → logprob: -11.592362403869629
    9. 'ec' → logprob: -12.217362403869629
    10. '#' → logprob: -12.217362403869629

Token 53: '.
' (ID: 558)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.01634812168776989
    2. '(' → logprob: -5.141347885131836
    3. '   ' → logprob: -5.891347885131836
    4. '(
' → logprob: -6.016347885131836
    5. '_' → logprob: -6.266347885131836
    6. ' (' → logprob: -6.766347885131836
    7. ',' → logprob: -7.516347885131836
    8. ':' → logprob: -8.016347885131836
    9. ' p' → logprob: -8.641347885131836
    10. ' (
' → logprob: -8.891347885131836

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016323262825608253
    2. ')' → logprob: -4.266323089599609
    3. '    
' → logprob: -7.641323089599609
    4. 'p' → logprob: -8.39132308959961
    5. '):
' → logprob: -8.89132308959961
    6. 'def' → logprob: -8.89132308959961
    7. ' ' → logprob: -8.89132308959961
    8. '  ' → logprob: -9.01632308959961
    9. '```' → logprob: -9.14132308959961
    10. '    ' → logprob: -9.26632308959961

Token 55: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022486722096800804
    2. ')' → logprob: -4.147486686706543
    3. '\n' → logprob: -6.647486686706543
    4. '    ' → logprob: -7.147486686706543
    5. '    
' → logprob: -7.147486686706543
    6. ' ' → logprob: -7.522486686706543
    7. '"""' → logprob: -7.522486686706543
    8. ' 
' → logprob: -8.022486686706543
    9. ' """' → logprob: -8.147486686706543
    10. '   
' → logprob: -8.272486686706543

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002646735229063779
    2. '    
' → logprob: -8.625265121459961
    3. 'return' → logprob: -10.375265121459961
    4. '    ' → logprob: -11.250265121459961
    5. ' return' → logprob: -11.750265121459961
    6. '\n' → logprob: -12.125265121459961
    7. '       ' → logprob: -12.250265121459961
    8. ')' → logprob: -12.625265121459961
    9. '\' → logprob: -12.625265121459961
    10. '
' → logprob: -13.000265121459961

Token 57: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005409730598330498
    2. 'return' (adapté à ' return') → logprob: -6.0054097175598145
    3. ' return' → logprob: -6.2554097175598145
    4. '    ' → logprob: -7.6304097175598145
    5. '    
' → logprob: -8.255410194396973
    6. ')' → logprob: -9.755410194396973
    7. '  ' → logprob: -10.255410194396973
    8. '       ' → logprob: -10.505410194396973
    9. ' 
' → logprob: -10.755410194396973
    10. '	return' → logprob: -10.755410194396973

Token 58: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.011716675013303757
    2. '(p' → logprob: -4.511716842651367
    3. '(' → logprob: -8.136716842651367
    4. ' ((' → logprob: -8.136716842651367
    5. ' ' → logprob: -10.136716842651367
    6. '((' → logprob: -11.136716842651367
    7. ' (
' → logprob: -11.886716842651367
    8. '(P' → logprob: -12.011716842651367
    9. '(s' → logprob: -12.886716842651367
    10. ' p' → logprob: -12.886716842651367

Token 59: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04727313295006752
    2. '(p' → logprob: -3.9222731590270996
    3. ' p' → logprob: -3.9222731590270996
    4. ' (' → logprob: -5.0472731590271
    5. '   ' → logprob: -9.422272682189941
    6. '(' → logprob: -10.547272682189941
    7. '	p' → logprob: -11.297272682189941
    8. 'x' → logprob: -11.672272682189941
    9. ' ' → logprob: -11.797272682189941
    10. '  ' → logprob: -12.297272682189941

Token 60: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22684627771377563
    2. '1' → logprob: -1.6018462181091309
    3. '3' → logprob: -6.601846218109131
    4. '[' → logprob: -9.601846694946289
    5. '0' → logprob: -12.726846694946289
    6. '_' → logprob: -13.726846694946289
    7. '
' → logprob: -14.476846694946289
    8. '```' → logprob: -14.851846694946289
    9. 'x' → logprob: -15.289346694946289
    10. '   ' → logprob: -15.414346694946289

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002763518423307687
    2. 'x' → logprob: -8.375276565551758
    3. '.x' → logprob: -10.750276565551758
    4. ' [' → logprob: -11.625276565551758
    5. '0' → logprob: -12.250276565551758
    6. '.' → logprob: -12.750276565551758
    7. 'y' → logprob: -13.000276565551758
    8. '['' → logprob: -13.750276565551758
    9. '-' → logprob: -14.125276565551758
    10. '1' → logprob: -14.375276565551758

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001239196863025427
    2. '1' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.250123977661133
    4. '
' → logprob: -16.125123977661133
    5. 'x' → logprob: -17.000123977661133
    6. '   ' → logprob: -17.250123977661133
    7. '

' → logprob: -17.375123977661133
    8. '```' → logprob: -18.000123977661133
    9. '[' → logprob: -18.062623977661133
    10. '۰' → logprob: -18.375123977661133

Token 63: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009781114757061005
    2. '-' → logprob: -4.6347808837890625
    3. '-p' → logprob: -11.509780883789062
    4. 'p' → logprob: -11.759780883789062
    5. ' ' → logprob: -12.759780883789062
    6. ' p' → logprob: -13.509780883789062
    7. '[' → logprob: -13.759780883789062
    8. '   ' → logprob: -14.134780883789062
    9. ' ' → logprob: -14.509780883789062
    10. '  ' → logprob: -16.134780883789062

Token 64: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00411959970369935
    2. '-' → logprob: -5.504119396209717
    3. '-p' → logprob: -10.254119873046875
    4. 'p' → logprob: -13.254119873046875
    5. ' *' → logprob: -13.379119873046875
    6. ' ' → logprob: -13.629119873046875
    7. '   ' → logprob: -14.879119873046875
    8. ' p' → logprob: -15.629119873046875
    9. '  ' → logprob: -15.879119873046875
    10. ' ' → logprob: -15.879119873046875

Token 65: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889155298471451
    2. ' p' → logprob: -2.5788915157318115
    3. '	p' → logprob: -13.57889175415039
    4. ' ' → logprob: -15.32889175415039
    5. '   ' → logprob: -16.20389175415039
    6. ' п' → logprob: -16.82889175415039
    7. '  ' → logprob: -17.07889175415039
    8. ')p' → logprob: -17.07889175415039
    9. ' ' → logprob: -19.32889175415039
    10. ')' → logprob: -19.64139175415039

Token 66: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012630375567823648
    2. '[' → logprob: -9.250125885009766
    3. '3' → logprob: -10.875125885009766
    4. '0' → logprob: -12.750125885009766
    5. ' ' → logprob: -13.000125885009766
    6. '1' → logprob: -13.375125885009766
    7. 'x' → logprob: -14.125125885009766
    8. 's' → logprob: -14.250125885009766
    9. 'p' → logprob: -14.375125885009766
    10. '   ' → logprob: -15.062625885009766

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0059643457643687725
    2. ')' → logprob: -5.130964279174805
    3. ' )' → logprob: -11.255964279174805
    4. '0' → logprob: -11.880964279174805
    5. ')*(' → logprob: -12.255964279174805
    6. ')[' → logprob: -12.755964279174805
    7. 'p' → logprob: -13.630964279174805
    8. 'x' → logprob: -13.630964279174805
    9. ')*' → logprob: -14.005964279174805
    10. '1' → logprob: -14.505964279174805

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -14.375001907348633
    4. '۰' → logprob: -15.875001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '1' → logprob: -16.500001907348633
    7. '```' → logprob: -17.000001907348633
    8. '
' → logprob: -17.687501907348633
    9. '

' → logprob: -17.937501907348633
    10. ']' → logprob: -18.062501907348633

Token 69: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001519325451226905
    2. ' )' → logprob: -9.125151634216309
    3. ')*(' → logprob: -10.125151634216309
    4. ')*' → logprob: -12.875151634216309
    5. '   ' → logprob: -16.500152587890625
    6. '*)' → logprob: -16.750152587890625
    7. ')(' → logprob: -16.875152587890625
    8. '))' → logprob: -16.875152587890625
    9. '）' → logprob: -17.125152587890625
    10. '`)' → logprob: -17.375152587890625

Token 70: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02780507691204548
    2. '*' → logprob: -3.6528050899505615
    3. '*(' → logprob: -6.777804851531982
    4. ')' → logprob: -8.02780532836914
    5. ')*(' → logprob: -11.02780532836914
    6. '(' → logprob: -11.65280532836914
    7. ' ' → logprob: -12.52780532836914
    8. ' ' → logprob: -12.77780532836914
    9. ' *(' → logprob: -13.27780532836914
    10. ')*' → logprob: -13.52780532836914

Token 71: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07896337658166885
    2. '(p' → logprob: -2.578963279724121
    3. '(' → logprob: -9.578963279724121
    4. '(py' → logprob: -13.453963279724121
    5. '<|end|>' → logprob: -14.203963279724121
    6. '(pp' → logprob: -14.453963279724121
    7. ' ' → logprob: -14.703963279724121
    8. '(P' → logprob: -15.203963279724121
    9. '   ' → logprob: -15.453963279724121
    10. '  ' → logprob: -15.578963279724121

Token 72: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.091128870844841
    2. '(p' → logprob: -2.9661288261413574
    3. ' p' → logprob: -3.3411288261413574
    4. ' (' → logprob: -8.841129302978516
    5. '(' → logprob: -10.341129302978516
    6. ')p' → logprob: -11.591129302978516
    7. '[p' → logprob: -12.466129302978516
    8. '	p' → logprob: -12.591129302978516
    9. '<|end|>' → logprob: -12.591129302978516
    10. '   ' → logprob: -14.466129302978516

Token 73: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23559005558490753
    2. '[' → logprob: -1.6105901002883911
    3. '2' → logprob: -4.610589981079102
    4. 'y' → logprob: -9.110589981079102
    5. '3' → logprob: -10.610589981079102
    6. '```' → logprob: -10.860589981079102
    7. ''[' → logprob: -12.235589981079102
    8. '[
' → logprob: -12.735589981079102
    9. 'python' → logprob: -12.860589981079102
    10. '   ' → logprob: -13.610589981079102

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.500000953674316
    3. '<|end|>' → logprob: -16.0
    4. ' [' → logprob: -17.25
    5. '```' → logprob: -17.375
    6. 'def' → logprob: -17.75
    7. '][' → logprob: -18.125
    8. ')[' → logprob: -18.875
    9. 'y' → logprob: -19.0
    10. '()[' → logprob: -19.25

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.125020980834961
    3. ']' → logprob: -12.625020980834961
    4. ' ' → logprob: -13.750020980834961
    5. '0' → logprob: -14.375020980834961
    6. '
' → logprob: -14.625020980834961
    7. '<|end|>' → logprob: -14.625020980834961
    8. '```' → logprob: -15.125020980834961
    9. ')' → logprob: -15.625020980834961
    10. '' → logprob: -16.62502098083496

Token 76: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006278686225414276
    2. '-' → logprob: -5.2562785148620605
    3. ')' → logprob: -7.3812785148620605
    4. '<|end|>' → logprob: -7.8812785148620605
    5. ' ' → logprob: -11.381278991699219
    6. ' ' → logprob: -11.881278991699219
    7. ']' → logprob: -12.006278991699219
    8. '[' → logprob: -12.006278991699219
    9. ' )' → logprob: -12.131278991699219
    10. '<|end|>' → logprob: -13.006278991699219

Token 77: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0067204674705863
    2. '-' → logprob: -5.006720542907715
    3. '<|end|>' → logprob: -12.881720542907715
    4. ')' → logprob: -14.006720542907715
    5. ' ' → logprob: -14.381720542907715
    6. ' ' → logprob: -14.381720542907715
    7. '[' → logprob: -14.881720542907715
    8. ' -
' → logprob: -16.5067195892334
    9. '<|end|>' → logprob: -17.3817195892334
    10. ' –' → logprob: -17.3817195892334

Token 78: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07899653166532516
    2. ' p' → logprob: -2.578996419906616
    3. '<|end|>' → logprob: -9.703996658325195
    4. '3' → logprob: -10.078996658325195
    5. '	p' → logprob: -13.453996658325195
    6. ' ' → logprob: -13.453996658325195
    7. ')p' → logprob: -14.953996658325195
    8. '<|end|>' → logprob: -15.828996658325195
    9. '  ' → logprob: -16.453996658325195
    10. '   ' → logprob: -16.578996658325195

Token 79: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004438971809577197
    2. '[' → logprob: -7.750443935394287
    3. '0' → logprob: -12.125443458557129
    4. '2' → logprob: -12.125443458557129
    5. ' ' → logprob: -13.875443458557129
    6. '1' → logprob: -14.125443458557129
    7. ']' → logprob: -15.312943458557129
    8. '   ' → logprob: -16.562944412231445
    9. '```' → logprob: -17.000444412231445
    10. ')' → logprob: -17.437944412231445

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9795445849886164e-05
    2. '][' → logprob: -9.875060081481934
    3. '0' → logprob: -12.625060081481934
    4. ']' → logprob: -13.000060081481934
    5. '[
' → logprob: -13.875060081481934
    6. ')[' → logprob: -14.125060081481934
    7. ')' → logprob: -15.000060081481934
    8. ' [' → logprob: -15.125060081481934
    9. '}[' → logprob: -15.875060081481934
    10. '```' → logprob: -16.000059127807617

Token 81: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6331666707992554
    2. '1' → logprob: -0.7581666707992554
    3. '[' → logprob: -7.633166790008545
    4. ' ' → logprob: -10.008166313171387
    5. ']' → logprob: -10.383166313171387
    6. ')' → logprob: -13.383166313171387
    7. '   ' → logprob: -13.383166313171387
    8. '```' → logprob: -14.008166313171387
    9. '' → logprob: -14.508166313171387
    10. '])' → logprob: -14.633166313171387

Token 82: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.91732100979425e-05
    2. ' )' → logprob: -10.250039100646973
    3. '-' → logprob: -13.125039100646973
    4. '}' → logprob: -14.500039100646973
    5. ']' → logprob: -14.875039100646973
    6. ')
' → logprob: -15.250039100646973
    7. ')-' → logprob: -15.625039100646973
    8. '）' → logprob: -16.12504005432129
    9. ' -' → logprob: -16.25004005432129
    10. ')`' → logprob: -16.37504005432129

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029766805469989777
    2. '-' → logprob: -3.529766798019409
    3. ' ' → logprob: -11.529767036437988
    4. ' -
' → logprob: -13.279767036437988
    5. ')' → logprob: -13.779767036437988
    6. ' ' → logprob: -13.904767036437988
    7. '>' → logprob: -14.529767036437988
    8. '    ' → logprob: -14.529767036437988
    9. '   ' → logprob: -15.029767036437988
    10. ' )' → logprob: -15.404767036437988

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06243322789669037
    2. '(p' → logprob: -2.8124332427978516
    3. '(' → logprob: -7.687433242797852
    4. '(s' → logprob: -12.812433242797852
    5. ' ' → logprob: -13.937433242797852
    6. ' ' → logprob: -14.062433242797852
    7. '<|end|>' → logprob: -14.062433242797852
    8. '	' → logprob: -14.437433242797852
    9. '(P' → logprob: -14.937433242797852
    10. '   ' → logprob: -15.062433242797852

Token 85: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08247018605470657
    2. ' p' → logprob: -2.707470178604126
    3. '(p' → logprob: -4.457470417022705
    4. ' (' → logprob: -7.082470417022705
    5. '(' → logprob: -11.332469940185547
    6. '	p' → logprob: -11.582469940185547
    7. ')p' → logprob: -13.582469940185547
    8. ' ' → logprob: -14.457469940185547
    9. ')' → logprob: -14.832469940185547
    10. '<|end|>' → logprob: -15.707469940185547

Token 86: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011089558713138103
    2. '2' → logprob: -4.636089324951172
    3. '[' → logprob: -7.011089324951172
    4. '3' → logprob: -7.761089324951172
    5. '' → logprob: -14.448589324951172
    6. '```' → logprob: -14.448589324951172
    7. 'p' → logprob: -14.573589324951172
    8. ')' → logprob: -14.948589324951172
    9. ' ' → logprob: -15.136089324951172
    10. ']' → logprob: -15.261089324951172

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. '<|end|>' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -15.000007629394531
    4. '[
' → logprob: -15.250007629394531
    5. ''[' → logprob: -17.37500762939453
    6. '1' → logprob: -17.62500762939453
    7. ')' → logprob: -17.62500762939453
    8. ' [' → logprob: -18.12500762939453
    9. '#' → logprob: -18.25000762939453
    10. '```' → logprob: -18.25000762939453

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003386806638445705
    2. '[' → logprob: -8.000338554382324
    3. ' ' → logprob: -13.375338554382324
    4. '1' → logprob: -13.500338554382324
    5. ']' → logprob: -16.75033950805664
    6. 'x' → logprob: -17.00033950805664
    7. '۰' → logprob: -17.12533950805664
    8. '```' → logprob: -17.50033950805664
    9. '[
' → logprob: -17.62533950805664
    10. '<|end|>' → logprob: -17.68783950805664

Token 89: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06199043244123459
    2. '[' → logprob: -3.06199049949646
    3. '-' → logprob: -4.936990261077881
    4. '<|end|>' → logprob: -5.186990261077881
    5. ')' → logprob: -8.186990737915039
    6. ' ' → logprob: -8.686990737915039
    7. ' [' → logprob: -9.811990737915039
    8. '<|end|>' → logprob: -11.436990737915039
    9. ' ' → logprob: -11.686990737915039
    10. ' p' → logprob: -12.061990737915039

Token 91: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.24205726385116577
    2. 'p' → logprob: -1.6170573234558105
    3. '<|end|>' → logprob: -4.1170573234558105
    4. ' ' → logprob: -8.617056846618652
    5. '3' → logprob: -11.367056846618652
    6. '<|end|>' → logprob: -11.992056846618652
    7. ')' → logprob: -12.992056846618652
    8. '	p' → logprob: -13.367056846618652
    9. ')p' → logprob: -13.367056846618652
    10. '  ' → logprob: -13.367056846618652

Token 92: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03206268325448036
    2. '1' → logprob: -4.032062530517578
    3. '[' → logprob: -4.282062530517578
    4. '```' → logprob: -14.532062530517578
    5. '[
' → logprob: -15.282062530517578
    6. ' ' → logprob: -15.407062530517578
    7. 'p' → logprob: -15.844562530517578
    8. '0' → logprob: -15.844562530517578
    9. '' → logprob: -16.407062530517578
    10. '<|end|>' → logprob: -16.469562530517578

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ')[' → logprob: -15.750000953674316
    3. '[
' → logprob: -16.125
    4. '][' → logprob: -16.625
    5. '```' → logprob: -17.125
    6. ''[' → logprob: -17.25
    7. ' [' → logprob: -18.0
    8. ')' → logprob: -18.375
    9. '0' → logprob: -18.75
    10. '>[' → logprob: -18.75

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006310671451501548
    2. '[' → logprob: -7.375630855560303
    3. ' ' → logprob: -12.625631332397461
    4. '1' → logprob: -14.000631332397461
    5. ']' → logprob: -16.00063133239746
    6. '   ' → logprob: -16.12563133239746
    7. '```' → logprob: -16.25063133239746
    8. ')' → logprob: -17.25063133239746
    9. '	' → logprob: -17.62563133239746
    10. '<|end|>' → logprob: -17.75063133239746

Token 95: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03143874183297157
    2. '])' → logprob: -3.6564388275146484
    3. '[' → logprob: -6.156438827514648
    4. ')[' → logprob: -6.406438827514648
    5. ']' → logprob: -7.031438827514648
    6. ')]' → logprob: -9.156438827514648
    7. '][' → logprob: -9.656438827514648
    8. ')])' → logprob: -9.906438827514648
    9. '])[' → logprob: -9.906438827514648
    10. '<|end|>' → logprob: -10.156438827514648

Token 96: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25973081588745117
    2. ' *' → logprob: -1.5097308158874512
    3. '*(' → logprob: -6.009730815887451
    4. '<|end|>' → logprob: -6.009730815887451
    5. '[' → logprob: -6.509730815887451
    6. ')' → logprob: -7.009730815887451
    7. '(' → logprob: -8.50973129272461
    8. '*[' → logprob: -8.75973129272461
    9. ' *
' → logprob: -10.75973129272461
    10. ''*' → logprob: -11.13473129272461

Token 97: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.20177067816257477
    2. ' (' → logprob: -1.7017706632614136
    3. '(' → logprob: -8.076770782470703
    4. ' p' → logprob: -11.326770782470703
    5. '[p' → logprob: -11.701770782470703
    6. '<|end|>' → logprob: -11.826770782470703
    7. '(s' → logprob: -11.951770782470703
    8. 'p' → logprob: -12.326770782470703
    9. ')' → logprob: -13.201770782470703
    10. ' ' → logprob: -13.701770782470703

Token 98: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019647935405373573
    2. '(p' → logprob: -6.376964569091797
    3. ' p' → logprob: -8.251964569091797
    4. '(' → logprob: -14.126964569091797
    5. ')p' → logprob: -14.626964569091797
    6. ' (' → logprob: -14.751964569091797
    7. '	p' → logprob: -16.001964569091797
    8. '[p' → logprob: -16.251964569091797
    9. ')' → logprob: -17.626964569091797
    10. '-p' → logprob: -18.251964569091797

Token 99: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06993988156318665
    2. '1' → logprob: -2.6949398517608643
    3. '[
' → logprob: -13.069939613342285
    4. ']' → logprob: -15.319939613342285
    5. '```' → logprob: -15.319939613342285
    6. '3' → logprob: -15.944939613342285
    7. ' [' → logprob: -15.944939613342285
    8. '   ' → logprob: -16.1949405670166
    9. 'p' → logprob: -16.3199405670166
    10. '(' → logprob: -16.4449405670166

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -14.125001907348633
    3. '[
' → logprob: -14.500001907348633
    4. '][' → logprob: -14.750001907348633
    5. ' [' → logprob: -15.375001907348633
    6. ')[' → logprob: -15.750001907348633
    7. '```' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.375001907348633
    9. ']' → logprob: -18.500001907348633
    10. '>[' → logprob: -18.750001907348633

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '0' → logprob: -11.62501049041748
    3. '[' → logprob: -14.12501049041748
    4. '
' → logprob: -14.50001049041748
    5. ' ' → logprob: -16.750009536743164
    6. ']' → logprob: -17.250009536743164
    7. '' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.375009536743164
    9. '

' → logprob: -17.875009536743164
    10. '```' → logprob: -18.000009536743164

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019260174594819546
    2. ')' → logprob: -6.626925945281982
    3. '[' → logprob: -8.00192642211914
    4. '<|end|>' → logprob: -9.12692642211914
    5. '-' → logprob: -9.50192642211914
    6. ' ]' → logprob: -10.37692642211914
    7. ' -' → logprob: -10.75192642211914
    8. '])' → logprob: -11.00192642211914
    9. ']-' → logprob: -12.37692642211914
    10. ' ' → logprob: -12.87692642211914

Token 103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4829185903072357
    2. ' -' → logprob: -0.9829186201095581
    3. ')' → logprob: -5.232918739318848
    4. '[' → logprob: -5.857918739318848
    5. '<|end|>' → logprob: -7.982918739318848
    6. ']' → logprob: -8.732918739318848
    7. ' ' → logprob: -9.607918739318848
    8. '-)' → logprob: -11.232918739318848
    9. ' )' → logprob: -11.732918739318848
    10. '<|end|>' → logprob: -13.107918739318848

Token 104: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889000326395035
    2. ' p' → logprob: -2.578890085220337
    3. '	p' → logprob: -15.953889846801758
    4. ' ' → logprob: -15.953889846801758
    5. '3' → logprob: -17.828889846801758
    6. ')p' → logprob: -17.828889846801758
    7. '  ' → logprob: -18.703889846801758
    8. ')' → logprob: -19.453889846801758
    9. ' ' → logprob: -19.578889846801758
    10. '   ' → logprob: -19.703889846801758

Token 105: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1798415333032608
    2. '1' → logprob: -1.8048415184020996
    3. '[' → logprob: -9.554841995239258
    4. '2' → logprob: -11.179841995239258
    5. ' ' → logprob: -12.054841995239258
    6. ']' → logprob: -12.804841995239258
    7. '```' → logprob: -14.117341995239258
    8. ')' → logprob: -14.492341995239258
    9. 'p' → logprob: -15.117341995239258
    10. '   ' → logprob: -15.242341995239258

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008939657360315323
    2. '][' → logprob: -5.508939743041992
    3. '1' → logprob: -5.758939743041992
    4. ']' → logprob: -6.633939743041992
    5. '])' → logprob: -8.258939743041992
    6. ')' → logprob: -9.508939743041992
    7. ')[' → logprob: -10.258939743041992
    8. ' [' → logprob: -12.008939743041992
    9. '])[' → logprob: -13.383939743041992
    10. '0' → logprob: -13.633939743041992

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. '[' → logprob: -14.625003814697266
    4. ']' → logprob: -14.625003814697266
    5. '])' → logprob: -15.375003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '' → logprob: -17.000003814697266
    8. '0' → logprob: -17.125003814697266
    9. '
' → logprob: -17.375003814697266
    10. '```' → logprob: -17.500003814697266

Token 108: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '}' → logprob: -15.125000953674316
    5. ')}' → logprob: -16.375001907348633
    6. ')return' → logprob: -17.625001907348633
    7. '))' → logprob: -17.625001907348633
    8. ']' → logprob: -17.875001907348633
    9. ')`' → logprob: -17.875001907348633
    10. '),' → logprob: -18.375001907348633

Token 109: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16295580565929413
    2. '

' → logprob: -2.1629557609558105
    3. 'def' → logprob: -3.4129557609558105
    4. '\' → logprob: -7.0379557609558105
    5. 'd' → logprob: -7.6629557609558105
    6. '\n' → logprob: -8.162956237792969
    7. ' 

' → logprob: -8.537956237792969
    8. '```' → logprob: -9.037956237792969
    9. '' → logprob: -9.412956237792969
    10. '
' → logprob: -9.412956237792969

Token 110: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.22955037653446198
    2. ' is' → logprob: -1.6045503616333008
    3. 'point' → logprob: -5.854550361633301
    4. '_point' → logprob: -8.6045503616333
    5. ' inside' → logprob: -8.6045503616333
    6. ' Point' → logprob: -8.7295503616333
    7. 'is' → logprob: -8.9795503616333
    8. ' orientation' → logprob: -9.1045503616333
    9. ' main' → logprob: -9.3545503616333
    10. ' pt' → logprob: -9.6045503616333

Token 111: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.022458167746663094
    2. '_' → logprob: -4.147458076477051
    3. '_inside' → logprob: -5.272458076477051
    4. '_triangle' → logprob: -7.647458076477051
    5. '_location' → logprob: -9.14745807647705
    6. '(' → logprob: -9.39745807647705
    7. 's' → logprob: -9.52245807647705
    8. '_orientation' → logprob: -9.52245807647705
    9. 'in' → logprob: -9.64745807647705
    10. 'In' → logprob: -9.64745807647705

Token 112: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.002834826707839966
    2. '_rectangle' → logprob: -6.127834796905518
    3. '_polygon' → logprob: -8.127835273742676
    4. 'triangle' → logprob: -8.252835273742676
    5. '_tri' → logprob: -10.002835273742676
    6. 'Triangle' → logprob: -11.377835273742676
    7. '_' → logprob: -11.627835273742676
    8. '_box' → logprob: -11.752835273742676
    9. '_rect' → logprob: -12.127835273742676
    10. '_quad' → logprob: -13.002835273742676

Token 113: '(pt' (ID: 73498)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5783684253692627
    2. '(p' → logprob: -0.8283684253692627
    3. '(point' → logprob: -6.453368186950684
    4. ' (' → logprob: -7.203368186950684
    5. '(points' → logprob: -10.078368186950684
    6. '(Point' → logprob: -11.078368186950684
    7. '(x' → logprob: -11.453368186950684
    8. '(pt' → logprob: -12.328368186950684
    9. '(parent' → logprob: -12.453368186950684
    10. '(a' → logprob: -12.578368186950684

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030213458463549614
    2. ')' → logprob: -3.5302133560180664
    3. ',p' → logprob: -8.405213356018066
    4. ' ,' → logprob: -8.905213356018066
    5. 'e' → logprob: -10.530213356018066
    6. '):' → logprob: -11.030213356018066
    7. ',)' → logprob: -11.655213356018066
    8. '),' → logprob: -11.780213356018066
    9. '(' → logprob: -12.155213356018066
    10. 's' → logprob: -12.280213356018066

Token 115: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4778641164302826
    2. ' p' → logprob: -1.977864146232605
    3. ' v' → logprob: -2.6028640270233154
    4. ' tri' → logprob: -2.9778640270233154
    5. 'tri' → logprob: -3.2278640270233154
    6. 'p' → logprob: -3.3528640270233154
    7. ' triangle' → logprob: -4.4778642654418945
    8. 't' → logprob: -4.6028642654418945
    9. ' t' → logprob: -4.7278642654418945
    10. 'triangle' → logprob: -4.7278642654418945

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006857454776763916
    2. '0' → logprob: -5.256857395172119
    3. '[' → logprob: -6.756857395172119
    4. ')' → logprob: -8.506857872009277
    5. 'ert' → logprob: -8.506857872009277
    6. 'er' → logprob: -11.006857872009277
    7. 'et' → logprob: -11.756857872009277
    8. 'erts' → logprob: -12.506857872009277
    9. 'tx' → logprob: -12.506857872009277
    10. 'a' → logprob: -12.631857872009277

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004974966403096914
    2. ')' → logprob: -5.379974842071533
    3. '):' → logprob: -8.129975318908691
    4. ' ,' → logprob: -10.629975318908691
    5. ',v' → logprob: -10.754975318908691
    6. '),' → logprob: -12.254975318908691
    7. ',
' → logprob: -12.879975318908691
    8. '[' → logprob: -13.129975318908691
    9. '   ' → logprob: -13.754975318908691
    10. ')v' → logprob: -14.379975318908691

Token 118: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4741007387638092
    2. 'v' → logprob: -0.9741007089614868
    3. '	v' → logprob: -11.724101066589355
    4. ' ' → logprob: -11.849101066589355
    5. '<|end|>' → logprob: -11.849101066589355
    6. '<|end|>' → logprob: -14.974101066589355
    7. ',v' → logprob: -15.224101066589355
    8. ',' → logprob: -15.474101066589355
    9. ' ' → logprob: -15.599101066589355
    10. '  ' → logprob: -16.22410011291504

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'ert' → logprob: -17.5
    3. '3' → logprob: -18.375
    4. ')' → logprob: -18.375
    5. '₂' → logprob: -19.5
    6. ' ' → logprob: -19.625
    7. '２' → logprob: -20.0
    8. 'v' → logprob: -20.25
    9. '۲' → logprob: -20.375
    10. '23' → logprob: -20.5

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032521432149223983
    2. ')' → logprob: -8.250325202941895
    3. '):' → logprob: -10.250325202941895
    4. ' ,' → logprob: -11.125325202941895
    5. ',v' → logprob: -11.625325202941895
    6. ',
' → logprob: -13.125325202941895
    7. '),' → logprob: -14.375325202941895
    8. 'v' → logprob: -14.500325202941895
    9. '   ' → logprob: -14.500325202941895
    10. '):
' → logprob: -15.375325202941895

Token 121: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.31326669454574585
    2. 'v' → logprob: -1.3132667541503906
    3. '	v' → logprob: -12.43826675415039
    4. ' ' → logprob: -15.18826675415039
    5. '<|end|>' → logprob: -15.43826675415039
    6. ')v' → logprob: -15.81326675415039
    7. '
' → logprob: -16.43826675415039
    8. ' ' → logprob: -16.93826675415039
    9. ',v' → logprob: -17.31326675415039
    10. ')' → logprob: -17.43826675415039

Token 122: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011093381908722222
    2. ')' → logprob: -9.125110626220703
    3. '1' → logprob: -14.000110626220703
    4. 'v' → logprob: -15.500110626220703
    5. '<|end|>' → logprob: -15.625110626220703
    6. '   ' → logprob: -16.125110626220703
    7. ' ' → logprob: -16.375110626220703
    8. ',' → logprob: -16.500110626220703
    9. '۳' → logprob: -16.625110626220703
    10. '[' → logprob: -17.000110626220703

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002845768118277192
    2. ')' → logprob: -5.877845764160156
    3. '):
' → logprob: -10.252845764160156
    4. ':' → logprob: -12.252845764160156
    5. ' ):' → logprob: -14.252845764160156
    6. '):

' → logprob: -16.502845764160156
    7. ')**' → logprob: -17.502845764160156
    8. ')：' → logprob: -17.752845764160156
    9. '   ' → logprob: -17.877845764160156
    10. ']:' → logprob: -18.127845764160156

Token 124: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6694885492324829
    2. '   ' → logprob: -0.7944885492324829
    3. '(' → logprob: -3.7944884300231934
    4. ' ' → logprob: -5.544488430023193
    5. '<|end|>' → logprob: -6.419488430023193
    6. '):' → logprob: -6.794488430023193
    7. ' (' → logprob: -6.794488430023193
    8. ')' → logprob: -7.044488430023193
    9. '():' → logprob: -7.294488430023193
    10. ' :' → logprob: -7.294488430023193

Token 125: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5578811764717102
    2. ' 
' → logprob: -1.8078811168670654
    3. '    ' → logprob: -2.3078811168670654
    4. '
' → logprob: -2.6828811168670654
    5. ' ' → logprob: -3.1828811168670654
    6. '    
' → logprob: -4.3078813552856445
    7. ' b' → logprob: -5.1828813552856445
    8. ' t' → logprob: -5.3078813552856445
    9. '     
' → logprob: -5.5578813552856445
    10. ' s' → logprob: -5.5578813552856445

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026449263095855713
    2. ' """' → logprob: -4.151449203491211
    3. '    ' → logprob: -5.776449203491211
    4. '"""' → logprob: -6.151449203491211
    5. '"' → logprob: -6.526449203491211
    6. ' """
' → logprob: -6.776449203491211
    7. ')' → logprob: -6.901449203491211
    8. ' "' → logprob: -7.026449203491211
    9. ' ' → logprob: -8.776449203491211
    10. '  ' → logprob: -9.401449203491211

Token 127: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9693425297737122
    2. ' t' → logprob: -1.9693424701690674
    3. ' s' → logprob: -2.2193424701690674
    4. '    ' → logprob: -2.7193424701690674
    5. ' b' → logprob: -2.7193424701690674
    6. ' p' → logprob: -2.9693424701690674
    7. 'b' → logprob: -3.2193424701690674
    8. 't' → logprob: -3.2193424701690674
    9. ' ' → logprob: -3.9693424701690674
    10. ' a' → logprob: -4.7193427085876465

Token 128: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.06440775096416473
    2. 'f' → logprob: -2.8144078254699707
    3. 't' → logprob: -6.314407825469971
    4. 'te' → logprob: -8.189407348632812
    5. '   ' → logprob: -8.564407348632812
    6. ' termine' → logprob: -10.064407348632812
    7. 'ter' → logprob: -10.189407348632812
    8. 'termin' → logprob: -10.814407348632812
    9. 'tect' → logprob: -11.439407348632812
    10. 'fin' → logprob: -11.689407348632812

Token 129: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.08555762469768524
    2. '   ' → logprob: -2.710557699203491
    3. 'i' → logprob: -5.085557460784912
    4. '  ' → logprob: -5.710557460784912
    5. 'u' → logprob: -7.085557460784912
    6. ' ine' → logprob: -7.335557460784912
    7. '    ' → logprob: -7.585557460784912
    8. 'e' → logprob: -7.648057460784912
    9. 'inez' → logprob: -7.898057460784912
    10. 'in' → logprob: -7.960557460784912

Token 130: ' si' (ID: 1784)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9690070152282715
    2. ' ' → logprob: -1.0940070152282715
    3. '  ' → logprob: -2.3440070152282715
    4. '<|end|>' → logprob: -2.8440070152282715
    5. ' True' → logprob: -2.9690070152282715
    6. '   ' → logprob: -3.8440070152282715
    7. ')' → logprob: -4.7190070152282715
    8. '    ' → logprob: -4.9690070152282715
    9. ' whether' → logprob: -5.2190070152282715
    10. '_' → logprob: -5.3440070152282715

Token 131: ' un' (ID: 537)
  Prédit: ' pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.952313244342804
    2. ' point' → logprob: -1.3273131847381592
    3. 'point' → logprob: -2.327313184738159
    4. ' (' → logprob: -2.452313184738159
    5. 'pt' → logprob: -2.827313184738159
    6. '(pt' → logprob: -2.952313184738159
    7. '(point' → logprob: -3.077313184738159
    8. 'sign' → logprob: -5.952313423156738
    9. ' sign' → logprob: -6.952313423156738
    10. '(' → logprob: -7.202313423156738

Token 132: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.01590672880411148
    2. 'point' → logprob: -4.890906810760498
    3. ' pt' → logprob: -5.015906810760498
    4. 'pt' → logprob: -7.265906810760498
    5. ' trip' → logprob: -8.26590633392334
    6. '<|end|>' → logprob: -8.26590633392334
    7. ' ' → logprob: -8.89090633392334
    8. '_point' → logprob: -10.14090633392334
    9. ' ' → logprob: -10.51590633392334
    10. '(point' → logprob: -10.64090633392334

Token 133: ' pt' (ID: 18961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19562631845474243
    2. ')' → logprob: -2.4456262588500977
    3. ' est' → logprob: -3.4456262588500977
    4. '<|end|>' → logprob: -3.8206262588500977
    5. ' )' → logprob: -4.195626258850098
    6. ' ' → logprob: -4.945626258850098
    7. ' is' → logprob: -5.195626258850098
    8. '  ' → logprob: -5.820626258850098
    9. ' se' → logprob: -6.445626258850098
    10. ' a' → logprob: -6.570626258850098

Token 135: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6671619415283203
    2. ' à' → logprob: -2.0421619415283203
    3. ' situé' → logprob: -2.4171619415283203
    4. ' inside' → logprob: -2.5421619415283203
    5. ' dans' → logprob: -2.7921619415283203
    6. '<|end|>' → logprob: -3.4171619415283203
    7. ' contenu' → logprob: -4.41716194152832
    8. 'dans' → logprob: -4.66716194152832
    9. '   ' → logprob: -5.04216194152832
    10. 'inside' → logprob: -5.16716194152832

Token 136: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.01144495140761137
    2. 'l' → logprob: -4.511445045471191
    3. ' ' → logprob: -8.636445045471191
    4. 'int' → logprob: -9.886445045471191
    5. ''intérieur' → logprob: -9.886445045471191
    6. '	l' → logprob: -10.761445045471191
    7. '   ' → logprob: -11.261445045471191
    8. '<|end|>' → logprob: -11.761445045471191
    9. '’intérieur' → logprob: -11.886445045471191
    10. '
' → logprob: -12.136445045471191

Token 137: ''intérieur' (ID: 102083)
  Prédit: ''intérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérieur' → logprob: -0.014942429959774017
    2. ''int' → logprob: -5.639942646026611
    3. ''inter' → logprob: -5.639942646026611
    4. ''' → logprob: -6.264942646026611
    5. '’intérieur' → logprob: -6.514942646026611
    6. '   ' → logprob: -6.639942646026611
    7. ''in' → logprob: -7.139942646026611
    8. ' ' → logprob: -7.639942646026611
    9. 'int' → logprob: -8.389942169189453
    10. '```' → logprob: -8.764942169189453

Token 138: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' triangle' (ID: 41487)
  Prédit: ' triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.3260549008846283
    2. 'triangle' → logprob: -1.3260549306869507
    3. 'tri' → logprob: -5.57605504989624
    4. 'v' → logprob: -5.57605504989624
    5. ' v' → logprob: -5.57605504989624
    6. '_triangle' → logprob: -7.45105504989624
    7. ' ' → logprob: -7.95105504989624
    8. ' tri' → logprob: -8.451054573059082
    9. ' triang' → logprob: -9.826054573059082
    10. ' Triangle' → logprob: -10.701054573059082

Token 140: ' form' (ID: 1625)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.759714663028717
    2. ' ' → logprob: -1.1347146034240723
    3. '(' → logprob: -2.1347146034240723
    4. ',' → logprob: -3.6347146034240723
    5. '(pt' → logprob: -3.8847146034240723
    6. '<|end|>' → logprob: -4.009714603424072
    7. '(p' → logprob: -5.259714603424072
    8. ' ' → logprob: -5.509714603424072
    9. '  ' → logprob: -6.134714603424072
    10. '(point' → logprob: -6.134714603424072

Token 141: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.004406263120472431
    2. 'ed' → logprob: -5.629406452178955
    3. 'e' → logprob: -7.129406452178955
    4. 'ée' → logprob: -13.504405975341797
    5. ' par' → logprob: -13.879405975341797
    6. ')' → logprob: -14.129405975341797
    7. 'd' → logprob: -15.379405975341797
    8. '   ' → logprob: -15.754405975341797
    9. 'par' → logprob: -16.004405975341797
    10. 'né' → logprob: -16.004405975341797

Token 142: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.009829523041844368
    2. 'v' → logprob: -5.384829521179199
    3. '(v' → logprob: -5.384829521179199
    4. ' ' → logprob: -8.1348295211792
    5. ' (' → logprob: -9.5098295211792
    6. ' les' → logprob: -9.5098295211792
    7. '<|end|>' → logprob: -9.7598295211792
    8. ' ' → logprob: -9.8848295211792
    9. '[v' → logprob: -10.6348295211792
    10. '	v' → logprob: -12.5098295211792

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.500016212463379
    3. '3' → logprob: -13.500016212463379
    4. ' v' → logprob: -14.000016212463379
    5. '   ' → logprob: -14.000016212463379
    6. 'v' → logprob: -14.875016212463379
    7. '<|end|>' → logprob: -14.875016212463379
    8. ',' → logprob: -15.000016212463379
    9. '4' → logprob: -15.125016212463379
    10. '  ' → logprob: -15.250016212463379

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04943288117647171
    2. '<|end|>' → logprob: -3.1744329929351807
    3. ' ,' → logprob: -5.549432754516602
    4. ',v' → logprob: -7.049432754516602
    5. ')' → logprob: -7.174432754516602
    6. ' v' → logprob: -8.049432754516602
    7. ' ' → logprob: -8.424432754516602
    8. 'v' → logprob: -8.674432754516602
    9. ' or' → logprob: -10.424432754516602
    10. '<|end|>' → logprob: -10.424432754516602

Token 146: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.01459921058267355
    2. 'v' → logprob: -4.264599323272705
    3. '<|end|>' → logprob: -7.889599323272705
    4. ' ' → logprob: -10.014598846435547
    5. ' ' → logprob: -11.889598846435547
    6. '(v' → logprob: -13.514598846435547
    7. '<|end|>' → logprob: -13.514598846435547
    8. 's' → logprob: -13.889598846435547
    9. '  ' → logprob: -13.889598846435547
    10. '	v' → logprob: -14.139598846435547

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011641718447208405
    2. ',' → logprob: -10.000116348266602
    3. '3' → logprob: -10.250116348266602
    4. ' ' → logprob: -10.875116348266602
    5. '   ' → logprob: -12.000116348266602
    6. ' ,' → logprob: -12.875116348266602
    7. '  ' → logprob: -13.125116348266602
    8. '1' → logprob: -13.250116348266602
    9. 'v' → logprob: -13.875116348266602
    10. ' v' → logprob: -14.375116348266602

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000568402698263526
    2. ' et' → logprob: -8.125568389892578
    3. ' ,' → logprob: -8.375568389892578
    4. ',v' → logprob: -10.875568389892578
    5. 'v' → logprob: -12.000568389892578
    6. '   ' → logprob: -12.125568389892578
    7. 'et' → logprob: -12.750568389892578
    8. ')' → logprob: -13.000568389892578
    9. '<|end|>' → logprob: -13.000568389892578
    10. ' v' → logprob: -13.125568389892578

Token 149: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.020621884614229202
    2. 'v' → logprob: -3.8956217765808105
    3. '<|end|>' → logprob: -10.020622253417969
    4. ' ' → logprob: -10.520622253417969
    5. ' ' → logprob: -12.520622253417969
    6. '	v' → logprob: -13.395622253417969
    7. ' p' → logprob: -14.395622253417969
    8. '<|end|>' → logprob: -14.520622253417969
    9. ',v' → logprob: -14.770622253417969
    10. 's' → logprob: -15.145622253417969

Token 150: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23845045268535614
    2. '3' → logprob: -1.6134504079818726
    3. '2' → logprob: -4.488450527191162
    4. ',' → logprob: -7.238450527191162
    5. '<|end|>' → logprob: -7.863450527191162
    6. 'v' → logprob: -8.738450050354004
    7. '   ' → logprob: -8.738450050354004
    8. '```' → logprob: -9.613450050354004
    9. ' ' → logprob: -9.988450050354004
    10. '<|end|>' → logprob: -10.613450050354004

Token 151: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031367458403110504
    2. '):' → logprob: -4.531367301940918
    3. ',' → logprob: -4.781367301940918
    4. '   ' → logprob: -5.281367301940918
    5. ')' → logprob: -6.156367301940918
    6. ' :' → logprob: -6.406367301940918
    7. '<|end|>' → logprob: -6.781367301940918
    8. '.' → logprob: -7.031367301940918
    9. ':
' → logprob: -8.656367301940918
    10. ' ):' → logprob: -9.031367301940918

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011160303838551044
    2. ' ' → logprob: -4.886160373687744
    3. ')' → logprob: -7.136160373687744
    4. '  ' → logprob: -7.511160373687744
    5. '    ' → logprob: -7.636160373687744
    6. '    
' → logprob: -7.761160373687744
    7. '
' → logprob: -7.761160373687744
    8. ' 
' → logprob: -7.886160373687744
    9. ' )' → logprob: -8.386159896850586
    10. '   
' → logprob: -9.261159896850586

Token 153: ' La' (ID: 3038)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0839842557907104
    2. '   ' → logprob: -1.3339842557907104
    3. 'b' → logprob: -1.4589842557907104
    4. ' d' → logprob: -2.208984375
    5. 'd' → logprob: -3.708984375
    6. ' s' → logprob: -4.958984375
    7. 't' → logprob: -5.333984375
    8. 'v' → logprob: -5.458984375
    9. ' sign' → logprob: -5.583984375
    10. 's' → logprob: -5.833984375

Token 154: ' méthode' (ID: 71490)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8064081072807312
    2. 'pt' → logprob: -1.431408166885376
    3. ' pt' → logprob: -1.806408166885376
    4. ' b' → logprob: -2.556408166885376
    5. 'd' → logprob: -3.681408166885376
    6. 't' → logprob: -3.931408166885376
    7. ' d' → logprob: -4.681407928466797
    8. 's' → logprob: -5.306407928466797
    9. 'sign' → logprob: -5.556407928466797
    10. 'p' → logprob: -6.806407928466797

Token 155: ' utilise' (ID: 70283)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2153382301330566
    2. ':' → logprob: -1.9653382301330566
    3. ' ' → logprob: -2.2153382301330566
    4. '=' → logprob: -2.5903382301330566
    5. ' est' → logprob: -2.7153382301330566
    6. ' =' → logprob: -2.7153382301330566
    7. ' s' → logprob: -2.7153382301330566
    8. ' des' → logprob: -3.3403382301330566
    9. ' de' → logprob: -3.7153382301330566
    10. ' a' → logprob: -3.9653382301330566

Token 156: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6086870431900024
    2. ' les' → logprob: -1.2336870431900024
    3. ' le' → logprob: -2.233686923980713
    4. 'les' → logprob: -4.108686923980713
    5. 'sign' → logprob: -4.233686923980713
    6. 'la' → logprob: -4.483686923980713
    7. ' l' → logprob: -5.233686923980713
    8. 'le' → logprob: -5.483686923980713
    9. ' une' → logprob: -6.608686923980713
    10. ' sign' → logprob: -6.858686923980713

Token 157: ' produit' (ID: 29429)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0456714630126953
    2. 'sign' → logprob: -1.1706714630126953
    3. 'v' → logprob: -2.1706714630126953
    4. 's' → logprob: -3.1706714630126953
    5. 'd' → logprob: -3.6706714630126953
    6. '(' → logprob: -3.6706714630126953
    7. 'not' → logprob: -3.6706714630126953
    8. ' sign' → logprob: -3.9206714630126953
    9. ' b' → logprob: -4.045671463012695
    10. ' (' → logprob: -4.170671463012695

Token 158: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.0711824968457222
    2. ' des' → logprob: -4.071182727813721
    3. ' de' → logprob: -4.196182727813721
    4. 's' → logprob: -4.196182727813721
    5. 'vector' → logprob: -5.196182727813721
    6. ' scala' → logprob: -5.696182727813721
    7. 'des' → logprob: -5.946182727813721
    8. ' scalar' → logprob: -6.571182727813721
    9. '  ' → logprob: -6.696182727813721
    10. ' scal' → logprob: -6.821182727813721

Token 159: 'iel' (ID: 930)
  Prédit: 'iel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.012801569886505604
    2. 'eur' → logprob: -5.012801647186279
    3. 'e' → logprob: -5.887801647186279
    4. 'uel' → logprob: -7.137801647186279
    5. 'ielle' → logprob: -7.762801647186279
    6. 'i' → logprob: -7.887801647186279
    7. 'riel' → logprob: -8.262801170349121
    8. 'orel' → logprob: -8.637801170349121
    9. 'el' → logprob: -9.012801170349121
    10. 'or' → logprob: -9.012801170349121

Token 160: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: 'sign' (ID: 14677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5579618811607361
    2. 'sign' → logprob: -1.6829619407653809
    3. ' les' → logprob: -3.182961940765381
    4. ' des' → logprob: -3.307961940765381
    5. 's' → logprob: -3.307961940765381
    6. ' sign' → logprob: -3.432961940765381
    7. 'des' → logprob: -3.682961940765381
    8. 'le' → logprob: -4.057961940765381
    9. 'les' → logprob: -4.432961940765381
    10. ' le' → logprob: -4.432961940765381

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17761553823947906
    2. 's' → logprob: -2.4276156425476074
    3. '(' → logprob: -2.8026156425476074
    4. '(p' → logprob: -4.802615642547607
    5. ' )' → logprob: -6.552615642547607
    6. '(
' → logprob: -6.802615642547607
    7. 'e' → logprob: -7.302615642547607
    8. '(pt' → logprob: -7.677615642547607
    9. 'es' → logprob: -7.802615642547607
    10. '()' → logprob: -7.927615642547607

Token 163: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30684855580329895
    2. ')' → logprob: -2.6818485260009766
    3. ',' → logprob: -2.9318485260009766
    4. '   ' → logprob: -3.0568485260009766
    5. ':' → logprob: -3.9318485260009766
    6. '.' → logprob: -4.056848526000977
    7. '_' → logprob: -4.181848526000977
    8. '(
' → logprob: -4.681848526000977
    9. ' (' → logprob: -5.056848526000977
    10. ' ' → logprob: -5.181848526000977

Token 164: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.1890554577112198
    2. ' déterminer' → logprob: -2.0640554428100586
    3. 'v' → logprob: -4.689055442810059
    4. ' détect' → logprob: -4.689055442810059
    5. ' calcul' → logprob: -5.439055442810059
    6. ' s' → logprob: -5.939055442810059
    7. 'dé' → logprob: -5.939055442810059
    8. 'calcul' → logprob: -6.064055442810059
    9. 's' → logprob: -6.189055442810059
    10. ' tester' → logprob: -6.439055442810059

Token 165: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.5840973854064941
    2. ' ' → logprob: -1.7090973854064941
    3. '<|end|>' → logprob: -1.7090973854064941
    4. ' si' → logprob: -2.209097385406494
    5. ' la' → logprob: -2.209097385406494
    6. ' les' → logprob: -2.334097385406494
    7. ' if' → logprob: -2.834097385406494
    8. ' l' → logprob: -4.084097385406494
    9. 's' → logprob: -4.459097385406494
    10. ' le' → logprob: -5.084097385406494

Token 166: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18689638376235962
    2. ' ' → logprob: -3.311896324157715
    3. ' point' → logprob: -4.061896324157715
    4. '(' → logprob: -4.186896324157715
    5. ' pt' → logprob: -4.186896324157715
    6. ' le' → logprob: -4.311896324157715
    7. '(point' → logprob: -4.311896324157715
    8. ' les' → logprob: -4.936896324157715
    9. ' (
' → logprob: -4.936896324157715
    10. 'point' → logprob: -5.061896324157715

Token 167: ' point' (ID: 2438)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -1.0934323072433472
    2. ' pt' → logprob: -1.4684323072433472
    3. 'sign' → logprob: -1.9684323072433472
    4. ' point' → logprob: -2.4684324264526367
    5. ' sign' → logprob: -2.5934324264526367
    6. ' (' → logprob: -3.0934324264526367
    7. 'point' → logprob: -3.3434324264526367
    8. 's' → logprob: -4.468432426452637
    9. ' s' → logprob: -4.468432426452637
    10. '(pt' → logprob: -4.718432426452637

Token 168: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20592863857746124
    2. '  ' → logprob: -3.2059285640716553
    3. 's' → logprob: -3.3309285640716553
    4. ' est' → logprob: -3.4559285640716553
    5. ' s' → logprob: -3.5809285640716553
    6. '   ' → logprob: -4.080928802490234
    7. ' is' → logprob: -5.205928802490234
    8. ' a' → logprob: -5.205928802490234
    9. '<|end|>' → logprob: -5.205928802490234
    10. ')' → logprob: -5.830928802490234

Token 169: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4802611470222473
    2. ' sur' → logprob: -2.2302610874176025
    3. 'sur' → logprob: -2.8552610874176025
    4. ' dans' → logprob: -3.1052610874176025
    5. 'de' → logprob: -3.2302610874176025
    6. 'dans' → logprob: -3.2302610874176025
    7. ' on' → logprob: -3.9802610874176025
    8. ' consistent' → logprob: -4.230261325836182
    9. ' ' → logprob: -4.355261325836182
    10. ' toujours' → logprob: -4.480261325836182

Token 170: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.027988702058792114
    2. 'm' → logprob: -3.7779886722564697
    3. ' ' → logprob: -6.152988910675049
    4. ' mêmes' → logprob: -6.902988910675049
    5. ' m' → logprob: -7.527988910675049
    6. '   ' → logprob: -8.65298843383789
    7. ' same' → logprob: -9.02798843383789
    8. ' Même' → logprob: -9.02798843383789
    9. '  ' → logprob: -9.15298843383789
    10. 'Même' → logprob: -9.40298843383789

Token 171: ' côté' (ID: 33533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8263425827026367
    2. ' de' → logprob: -1.0763425827026367
    3. ' ' → logprob: -1.8263425827026367
    4. '<|end|>' → logprob: -3.2013425827026367
    5. 's' → logprob: -5.076342582702637
    6. '  ' → logprob: -5.201342582702637
    7. '.' → logprob: -6.701342582702637
    8. 'des' → logprob: -6.951342582702637
    9. ' of' → logprob: -7.076342582702637
    10. ' d' → logprob: -7.076342582702637

Token 173: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.631971538066864
    2. ' de' → logprob: -1.8819715976715088
    3. '<|end|>' → logprob: -2.006971597671509
    4. ' ' → logprob: -2.131971597671509
    5. ')' → logprob: -3.256971597671509
    6. 's' → logprob: -5.13197135925293
    7. '  ' → logprob: -5.25697135925293
    8. ' )' → logprob: -5.38197135925293
    9. ' of' → logprob: -6.13197135925293
    10. ' d' → logprob: -6.38197135925293

Token 174: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7679365277290344
    2. ' de' → logprob: -0.8929365277290344
    3. '<|end|>' → logprob: -2.1429364681243896
    4. 'de' (adapté à ' de') → logprob: -5.642936706542969
    5. 'des' → logprob: -6.642936706542969
    6. ' ' → logprob: -6.642936706542969
    7. ' que' → logprob: -7.017936706542969
    8. '.' → logprob: -7.767936706542969
    9. ' of' → logprob: -8.142936706542969
    10. 's' → logprob: -8.392936706542969

Token 175: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8379459381103516
    2. ' each' → logprob: -1.2129459381103516
    3. ' chacun' → logprob: -1.9629459381103516
    4. ' chacune' → logprob: -2.4629459381103516
    5. 'each' → logprob: -3.5879459381103516
    6. ' chac' → logprob: -4.837945938110352
    7. 'ch' → logprob: -6.087945938110352
    8. 'cha' → logprob: -6.337945938110352
    9. ' ' → logprob: -6.837945938110352
    10. ' all' → logprob: -7.337945938110352

Token 176: ' côté' (ID: 33533)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.671672523021698
    2. ' vect' → logprob: -1.1716725826263428
    3. ' ' → logprob: -2.6716725826263428
    4. ' edge' → logprob: -3.2966725826263428
    5. ' côté' → logprob: -3.5466725826263428
    6. ' vector' → logprob: -4.546672344207764
    7. ' segment' → logprob: -5.046672344207764
    8. ' tri' → logprob: -5.421672344207764
    9. ' trip' → logprob: -5.671672344207764
    10. ' des' → logprob: -5.796672344207764

Token 177: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5771658420562744
    2. ' de' → logprob: -1.3271658420562744
    3. ' du' → logprob: -1.8271658420562744
    4. 'de' → logprob: -5.452165603637695
    5. 'des' → logprob: -5.577165603637695
    6. ' of' → logprob: -6.952165603637695
    7. ')' → logprob: -7.202165603637695
    8. '.' → logprob: -7.952165603637695
    9. ' ' → logprob: -7.952165603637695
    10. 'du' → logprob: -7.952165603637695

Token 178: ' triangle' (ID: 41487)
  Prédit: ' triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.014285031706094742
    2. 'triangle' → logprob: -4.639285087585449
    3. ' tri' → logprob: -5.639285087585449
    4. 'tri' → logprob: -7.764285087585449
    5. ' triangles' → logprob: -8.88928508758545
    6. '_triangle' → logprob: -9.13928508758545
    7. ' trip' → logprob: -9.38928508758545
    8. ' ' → logprob: -9.63928508758545
    9. ' triang' → logprob: -10.38928508758545
    10. 's' → logprob: -10.38928508758545

Token 179: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4855792820453644
    2. ')' → logprob: -1.735579252243042
    3. ',' → logprob: -1.735579252243042
    4. '   ' → logprob: -3.985579252243042
    5. ':' → logprob: -5.110579490661621
    6. ' )' → logprob: -6.110579490661621
    7. 's' → logprob: -6.485579490661621
    8. 'def' → logprob: -7.735579490661621
    9. ' ' → logprob: -7.860579490661621
    10. ' de' → logprob: -7.985579490661621

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03775925189256668
    2. ')' → logprob: -3.412759304046631
    3. '
' → logprob: -6.162759304046631
    4. ' )' → logprob: -7.537759304046631
    5. '    
' → logprob: -7.787759304046631
    6. ' ' → logprob: -8.162758827209473
    7. '    ' → logprob: -8.287758827209473
    8. '  ' → logprob: -8.537758827209473
    9. ' 
' → logprob: -9.162758827209473
    10. '  
' → logprob: -9.662758827209473

Token 181: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07467616349458694
    2. 'b' → logprob: -3.449676275253296
    3. ' b' → logprob: -3.824676275253296
    4. 'v' → logprob: -4.949676036834717
    5. 'a' → logprob: -5.699676036834717
    6. '
' → logprob: -6.074676036834717
    7. ' a' → logprob: -7.449676036834717
    8. ')' → logprob: -7.574676036834717
    9. 'p' → logprob: -7.574676036834717
    10. ' s' → logprob: -7.699676036834717

Token 182: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00048596507986076176
    2. 'n' → logprob: -7.875485897064209
    3. 'e' → logprob: -9.625486373901367
    4. '   ' → logprob: -10.250486373901367
    5. 'nne' → logprob: -13.625486373901367
    6. ' ' → logprob: -13.750486373901367
    7. ' None' → logprob: -14.750486373901367
    8. '  ' → logprob: -15.000486373901367
    9. ' ne' → logprob: -15.250486373901367
    10. '       ' → logprob: -15.250486373901367

Token 183: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0017164701130241156
    2. 'True' → logprob: -6.376716613769531
    3. ' ' → logprob: -11.751716613769531
    4. ' ' → logprob: -12.126716613769531
    5. ' False' → logprob: -15.251716613769531
    6. ' None' → logprob: -15.251716613769531
    7. '   ' → logprob: -15.501716613769531
    8. ' Tru' → logprob: -16.12671661376953
    9. ' vrai' → logprob: -16.50171661376953
    10. ' true' → logprob: -17.00171661376953

Token 184: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05579758808016777
    2. '<|end|>' → logprob: -3.055797576904297
    3. ',' → logprob: -6.430797576904297
    4. ' if' → logprob: -6.555797576904297
    5. '  ' → logprob: -6.805797576904297
    6. '   ' → logprob: -7.055797576904297
    7. '<|end|>' → logprob: -8.055797576904297
    8. '    ' → logprob: -8.305797576904297
    9. ' or' → logprob: -8.680797576904297
    10. ' (' → logprob: -8.930797576904297

Token 185: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.060106828808784485
    2. ' pt' → logprob: -3.1851067543029785
    3. ' point' → logprob: -5.1851067543029785
    4. ' le' → logprob: -5.3101067543029785
    5. ' ' → logprob: -6.1851067543029785
    6. 'True' → logprob: -6.4351067543029785
    7. ' ' → logprob: -6.5601067543029785
    8. 'pt' → logprob: -7.6851067543029785
    9. ' l' → logprob: -8.060107231140137
    10. ' la' → logprob: -8.810107231140137

Token 186: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.034486666321754456
    2. 'point' → logprob: -4.034486770629883
    3. ' pt' → logprob: -4.659486770629883
    4. 'pt' → logprob: -5.034486770629883
    5. ' ' → logprob: -9.159486770629883
    6. ' p' → logprob: -11.284486770629883
    7. 't' → logprob: -11.284486770629883
    8. ' ' → logprob: -11.534486770629883
    9. '_point' → logprob: -11.784486770629883
    10. ' a' → logprob: -11.909486770629883

Token 187: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4702235460281372
    2. ' est' → logprob: -1.4702235460281372
    3. '<|end|>' → logprob: -3.2202234268188477
    4. ' is' → logprob: -3.4702234268188477
    5. '  ' → logprob: -3.7202234268188477
    6. ' a' → logprob: -4.345223426818848
    7. ' ' → logprob: -4.595223426818848
    8. 's' → logprob: -5.595223426818848
    9. '   ' → logprob: -6.095223426818848
    10. ' )' → logprob: -6.220223426818848

Token 188: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4158596992492676
    2. ' dans' → logprob: -1.9158596992492676
    3. 'dans' → logprob: -2.1658596992492676
    4. 'à' → logprob: -4.040859699249268
    5. ' ' → logprob: -4.040859699249268
    6. ' True' → logprob: -4.290859699249268
    7. ' dedans' → logprob: -4.665859699249268
    8. ' inside' → logprob: -4.790859699249268
    9. '   ' → logprob: -6.290859699249268
    10. 'inside' → logprob: -6.540859699249268

Token 189: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.21048752963542938
    2. ' ' → logprob: -1.9604874849319458
    3. 'l' → logprob: -3.4604876041412354
    4. ' True' → logprob: -5.585487365722656
    5. 'int' → logprob: -5.710487365722656
    6. 'i' → logprob: -6.085487365722656
    7. ''intérieur' → logprob: -6.085487365722656
    8. '  ' → logprob: -6.960487365722656
    9. '   ' → logprob: -7.085487365722656
    10. 'in' → logprob: -7.335487365722656

Token 190: ''intérieur' (ID: 102083)
  Prédit: ''intérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérieur' → logprob: -0.01441910769790411
    2. 'int' → logprob: -5.514419078826904
    3. ''int' → logprob: -5.639419078826904
    4. '’intérieur' → logprob: -5.889419078826904
    5. ''' → logprob: -6.514419078826904
    6. ''inté' → logprob: -7.639419078826904
    7. 'a' → logprob: -8.014419555664062
    8. ''inter' → logprob: -8.014419555664062
    9. 'i' → logprob: -8.389419555664062
    10. '   ' → logprob: -8.639419555664062

Token 191: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03724014014005661
    2. ' ' → logprob: -3.7872400283813477
    3. ' ,' → logprob: -4.912240028381348
    4. ' else' → logprob: -6.287240028381348
    5. '<|end|>' → logprob: -6.787240028381348
    6. ' or' → logprob: -6.912240028381348
    7. ' True' → logprob: -6.912240028381348
    8. ' False' → logprob: -7.787240028381348
    9. '   ' → logprob: -8.162240028381348
    10. '  ' → logprob: -8.912240028381348

Token 192: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.3751062750816345
    2. ' on' → logprob: -1.3751063346862793
    3. 'sur' → logprob: -3.1251063346862793
    4. 'on' → logprob: -4.500106334686279
    5. ' au' → logprob: -7.125106334686279
    6. ' ' → logprob: -7.250106334686279
    7. 'ont' → logprob: -7.500106334686279
    8. ' False' → logprob: -7.625106334686279
    9. 'False' → logprob: -7.750106334686279
    10. 'strict' → logprob: -7.875106334686279

Token 193: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5244945287704468
    2. ' les' → logprob: -1.6494945287704468
    3. ' la' → logprob: -2.3994946479797363
    4. ' l' → logprob: -2.8994946479797363
    5. ' ' → logprob: -3.1494946479797363
    6. '<|end|>' → logprob: -4.649494647979736
    7. ' the' → logprob: -4.899494647979736
    8. 'le' → logprob: -6.024494647979736
    9. ' un' → logprob: -6.399494647979736
    10. 'l' → logprob: -6.774494647979736

Token 194: ' bord' (ID: 26431)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.36423537135124207
    2. 'triangle' → logprob: -1.2392354011535645
    3. '_triangle' → logprob: -5.7392354011535645
    4. 'c' → logprob: -5.8642354011535645
    5. ' ' → logprob: -5.9892354011535645
    6. 'tri' → logprob: -6.1142354011535645
    7. 'bord' → logprob: -6.7392354011535645
    8. 'b' → logprob: -6.8642354011535645
    9. ' bord' → logprob: -7.4892354011535645
    10. ' b' → logprob: -7.7392354011535645

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025890910997986794
    2. ' ,' → logprob: -3.900890827178955
    3. ' True' → logprob: -6.150890827178955
    4. ' ' → logprob: -6.775890827178955
    5. ' de' → logprob: -6.900890827178955
    6. ' else' → logprob: -8.400891304016113
    7. ' False' → logprob: -8.525891304016113
    8. '=True' → logprob: -8.775891304016113
    9. '  ' → logprob: -9.400891304016113
    10. '   ' → logprob: -9.400891304016113

Token 196: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.05693471431732178
    2. 'False' → logprob: -2.9319348335266113
    3. '   ' → logprob: -6.556934833526611
    4. ' True' → logprob: -7.556934833526611
    5. ' else' → logprob: -10.681934356689453
    6. '    ' → logprob: -10.806934356689453
    7. 'True' → logprob: -11.181934356689453
    8. ' None' → logprob: -11.556934356689453
    9. ' sinon' → logprob: -12.056934356689453
    10. ' otherwise' → logprob: -12.181934356689453

Token 197: ' sinon' (ID: 52915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7205879092216492
    2. '<|end|>' → logprob: -1.095587968826294
    3. '   ' → logprob: -2.095587968826294
    4. ' ' → logprob: -4.345587730407715
    5. ')' → logprob: -4.595587730407715
    6. '.' → logprob: -5.470587730407715
    7. '```' → logprob: -5.470587730407715
    8. ' False' → logprob: -5.720587730407715
    9. ' else' → logprob: -5.845587730407715
    10. '<|end|>' → logprob: -6.095587730407715

Token 198: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26892906427383423
    2. '   ' → logprob: -1.5189290046691895
    3. '.' → logprob: -4.8939290046691895
    4. ':
' → logprob: -5.5189290046691895
    5. ')' → logprob: -6.0189290046691895
    6. ',' → logprob: -6.8939290046691895
    7. '
' → logprob: -6.8939290046691895
    8. '):' → logprob: -7.6439290046691895
    9. '    
' → logprob: -9.393929481506348
    10. '):
' → logprob: -9.393929481506348

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09443650394678116
    2. '
' → logprob: -2.5944364070892334
    3. '    
' → logprob: -4.2194366455078125
    4. '\n' → logprob: -8.094436645507812
    5. '   
' → logprob: -8.594436645507812
    6. ')' → logprob: -9.969436645507812
    7. '  
' → logprob: -10.094436645507812
    8. ' 
' → logprob: -10.469436645507812
    9. ':' → logprob: -10.594436645507812
    10. '```' → logprob: -10.594436645507812

Token 200: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004478185437619686
    2. ')' → logprob: -6.0044779777526855
    3. '
' → logprob: -7.6294779777526855
    4. '    
' → logprob: -7.7544779777526855
    5. 'b' → logprob: -8.379478454589844
    6. 'n' → logprob: -8.629478454589844
    7. ':' → logprob: -9.004478454589844
    8. 'a' → logprob: -9.129478454589844
    9. 'v' → logprob: -9.754478454589844
    10. '    ' → logprob: -9.879478454589844

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08429054915904999
    2. 'b' → logprob: -3.3342905044555664
    3. 'a' → logprob: -3.9592905044555664
    4. 'v' → logprob: -4.459290504455566
    5. ' b' → logprob: -4.834290504455566
    6. 's' → logprob: -6.459290504455566
    7. ' s' → logprob: -6.584290504455566
    8. ' a' → logprob: -6.959290504455566
    9. ' v' → logprob: -7.084290504455566
    10. 't' → logprob: -7.334290504455566

Token 202: ' d' (ID: 272)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20211336016654968
    2. 'd' (adapté à ' d') → logprob: -1.702113389968872
    3. ' b' → logprob: -7.702113151550293
    4. ' d' → logprob: -8.577113151550293
    5. '   ' → logprob: -9.827113151550293
    6. 's' → logprob: -13.077113151550293
    7. 'v' → logprob: -13.452113151550293
    8. '	b' → logprob: -13.577113151550293
    9. 'sign' → logprob: -14.827113151550293
    10. ' ' → logprob: -16.07711410522461

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -13.625004768371582
    3. '0' → logprob: -14.250004768371582
    4. 'd' → logprob: -14.375004768371582
    5. '   ' → logprob: -14.375004768371582
    6. '_' → logprob: -14.750004768371582
    7. 'e' → logprob: -15.125004768371582
    8. 't' → logprob: -15.250004768371582
    9. 'w' → logprob: -16.000003814697266
    10. 'l' → logprob: -16.125003814697266

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282773315906525
    2. '=' → logprob: -2.237827777862549
    3. ',' → logprob: -12.48782730102539
    4. ' ' → logprob: -14.73782730102539
    5. ' =
' → logprob: -14.73782730102539
    6. '=d' → logprob: -15.11282730102539
    7. ' ' → logprob: -15.98782730102539
    8. ')' → logprob: -16.36282730102539
    9. '=

' → logprob: -16.48782730102539
    10. ' ,' → logprob: -16.73782730102539

Token 205: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.0019291093340143561
    2. ' sign' → logprob: -6.25192928314209
    3. '	sign' → logprob: -15.50192928314209
    4. '   ' → logprob: -16.126928329467773
    5. ' ' → logprob: -16.251928329467773
    6. '(sign' → logprob: -17.376928329467773
    7. '  ' → logprob: -17.876928329467773
    8. 'sig' → logprob: -18.751928329467773
    9. '_sign' → logprob: -19.876928329467773
    10. ' ' → logprob: -20.626928329467773

Token 206: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.0007252985378727317
    2. '(' → logprob: -7.250725269317627
    3. '(p' → logprob: -11.750725746154785
    4. ' (' → logprob: -13.250725746154785
    5. '(point' → logprob: -13.625725746154785
    6. '(
' → logprob: -13.625725746154785
    7. '(py' → logprob: -14.000725746154785
    8. 'pt' → logprob: -15.000725746154785
    9. '(pa' → logprob: -15.125725746154785
    10. '(po' → logprob: -15.500725746154785

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18152254819869995
    2. ',v' → logprob: -1.8065226078033447
    3. '(v' → logprob: -6.556522369384766
    4. ' ,' → logprob: -8.931522369384766
    5. '(' → logprob: -8.931522369384766
    6. ')' → logprob: -9.931522369384766
    7. ',d' → logprob: -10.556522369384766
    8. ',n' → logprob: -11.931522369384766
    9. 'v' → logprob: -13.056522369384766
    10. ',p' → logprob: -13.806522369384766

Token 208: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011736786691471934
    2. ' v' → logprob: -6.751173496246338
    3. '   ' → logprob: -13.376173973083496
    4. '	v' → logprob: -13.626173973083496
    5. ')v' → logprob: -15.376173973083496
    6. '(v' → logprob: -16.37617301940918
    7. '  ' → logprob: -16.50117301940918
    8. ')' → logprob: -16.50117301940918
    9. '<v' → logprob: -16.87617301940918
    10. ' ' → logprob: -16.87617301940918

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.5
    3. 'v' → logprob: -17.75
    4. '[' → logprob: -18.625
    5. 'l' → logprob: -19.0
    6. ' ' → logprob: -19.5625
    7. 'ert' → logprob: -19.5625
    8. '   ' → logprob: -19.875
    9. 'er' → logprob: -20.3125
    10. '12' → logprob: -20.3125

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008993157534860075
    2. ',v' → logprob: -7.375899314880371
    3. ' ,' → logprob: -8.250899314880371
    4. ')' → logprob: -11.875899314880371
    5. ',
' → logprob: -13.500899314880371
    6. 'v' → logprob: -13.625899314880371
    7. ' v' → logprob: -13.750899314880371
    8. ',d' → logprob: -15.250899314880371
    9. ' ' → logprob: -15.500899314880371
    10. '   ' → logprob: -15.500899314880371

Token 211: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009117019944824278
    2. ' v' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.375911712646484
    4. '	v' → logprob: -16.875911712646484
    5. ' ' → logprob: -18.875911712646484
    6. '2' → logprob: -19.000911712646484
    7. '<v' → logprob: -19.000911712646484
    8. ')v' → logprob: -19.125911712646484
    9. '  ' → logprob: -19.750911712646484
    10. '_v' → logprob: -19.750911712646484

Token 212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -17.25
    3. ')' → logprob: -17.375
    4. ' ' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. 'v' → logprob: -18.25
    7. '```' → logprob: -19.25
    8. 's' → logprob: -19.5625
    9. 'ersion' → logprob: -19.5625
    10. '۲' → logprob: -19.75

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019827603828161955
    2. ')
' → logprob: -6.251982688903809
    3. ' )' → logprob: -10.001982688903809
    4. ')
' → logprob: -12.626982688903809
    5. ')

' → logprob: -13.501982688903809
    6. ')>' → logprob: -13.751982688903809
    7. ' )
' → logprob: -14.001982688903809
    8. '>' → logprob: -14.501982688903809
    9. 'd' → logprob: -14.626982688903809
    10. '   ' → logprob: -15.126982688903809

Token 214: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28817927837371826
    2. '   ' → logprob: -2.038179397583008
    3. ' d' → logprob: -2.788179397583008
    4. '
' → logprob: -2.913179397583008
    5. ' 
' → logprob: -6.038179397583008
    6. '  
' → logprob: -8.038179397583008
    7. '    
' → logprob: -8.413179397583008
    8. ',' → logprob: -8.538179397583008
    9. ' ' → logprob: -8.788179397583008
    10. '<|end|>' → logprob: -8.788179397583008

Token 215: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6356809735298157
    2. 'd' (adapté à ' d') → logprob: -0.7606809735298157
    3. '
' → logprob: -6.26068115234375
    4. ' 
' → logprob: -7.13568115234375
    5. '   ' → logprob: -8.26068115234375
    6. '	d' → logprob: -10.26068115234375
    7. '    
' → logprob: -10.26068115234375
    8. '  
' → logprob: -11.76068115234375
    9. ' ' → logprob: -12.26068115234375
    10. ' ' → logprob: -12.63568115234375

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020497082732617855
    2. ' =' → logprob: -9.375205039978027
    3. '=' → logprob: -9.625205039978027
    4. ' ' → logprob: -10.125205039978027
    5. '1' → logprob: -12.500205039978027
    6. '_' → logprob: -13.250205039978027
    7. ',' → logprob: -13.250205039978027
    8. '0' → logprob: -13.750205039978027
    9. '  ' → logprob: -13.750205039978027
    10. '   ' → logprob: -13.750205039978027

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150296062231064
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. ')' → logprob: -16.643150329589844
    5. ' =
' → logprob: -16.768150329589844
    6. 'd' → logprob: -19.268150329589844
    7. 's' → logprob: -19.268150329589844
    8. ',' → logprob: -19.393150329589844
    9. ' =(' → logprob: -19.643150329589844
    10. '＝' → logprob: -19.768150329589844

Token 218: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2524038553237915
    2. ' sign' → logprob: -1.5024038553237915
    3. '(sign' → logprob: -7.752403736114502
    4. 'point' → logprob: -11.12740421295166
    5. 's' → logprob: -11.87740421295166
    6. '	sign' → logprob: -11.87740421295166
    7. ' point' → logprob: -12.37740421295166
    8. 'pt' → logprob: -12.75240421295166
    9. '(point' → logprob: -13.62740421295166
    10. 'sig' → logprob: -13.75240421295166

Token 219: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.000006675720215
    4. '(point' → logprob: -15.500006675720215
    5. '(py' → logprob: -16.62500762939453
    6. '(p' → logprob: -16.75000762939453
    7. '(px' → logprob: -17.50000762939453
    8. '(
' → logprob: -17.75000762939453
    9. ' pt' → logprob: -17.75000762939453
    10. '(pm' → logprob: -17.87500762939453

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09597610682249069
    2. '(pt' → logprob: -2.4709761142730713
    3. '(' → logprob: -5.220975875854492
    4. ' ,' → logprob: -6.595975875854492
    5. ' (' → logprob: -9.220975875854492
    6. '(v' → logprob: -9.720975875854492
    7. ')' → logprob: -9.845975875854492
    8. ' pt' → logprob: -11.345975875854492
    9. ',v' → logprob: -11.970975875854492
    10. '(p' → logprob: -11.970975875854492

Token 221: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1426837295293808
    2. ' v' → logprob: -2.017683744430542
    3. '(v' → logprob: -12.642683982849121
    4. '	v' → logprob: -13.017683982849121
    5. ')v' → logprob: -14.017683982849121
    6. '2' → logprob: -14.767683982849121
    7. ' ' → logprob: -14.892683982849121
    8. '[v' → logprob: -15.267683982849121
    9. '   ' → logprob: -15.392683982849121
    10. '3' → logprob: -15.392683982849121

Token 222: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.34895217418670654
    2. '2' → logprob: -1.2239521741867065
    3. '1' → logprob: -7.598952293395996
    4. 'v' → logprob: -12.848952293395996
    5. '[' → logprob: -14.348952293395996
    6. '```' → logprob: -14.786452293395996
    7. '(v' → logprob: -14.911452293395996
    8. ' ' → logprob: -14.911452293395996
    9. 's' → logprob: -14.973952293395996
    10. '(' → logprob: -15.348952293395996

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ',v' → logprob: -9.875077247619629
    3. ' ,' → logprob: -10.625077247619629
    4. 'v' → logprob: -14.750077247619629
    5. ')' → logprob: -15.250077247619629
    6. ',d' → logprob: -15.875077247619629
    7. ',
' → logprob: -16.125076293945312
    8. '',' → logprob: -16.375076293945312
    9. '`,' → logprob: -16.625076293945312
    10. ' v' → logprob: -17.250076293945312

Token 224: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47407999634742737
    2. 'v' → logprob: -0.974079966545105
    3. '	v' → logprob: -13.724080085754395
    4. ' ' → logprob: -14.224080085754395
    5. '_v' → logprob: -14.974080085754395
    6. '3' → logprob: -15.474080085754395
    7. ')v' → logprob: -15.974080085754395
    8. ',v' → logprob: -16.474079132080078
    9. ' ' → logprob: -16.724079132080078
    10. '?v' → logprob: -16.849079132080078

Token 225: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '1' → logprob: -16.875
    3. '[' → logprob: -19.0
    4. ')' → logprob: -19.25
    5. ' ' → logprob: -19.625
    6. '۳' → logprob: -19.875
    7. 'v' → logprob: -20.0
    8. '３' → logprob: -21.375
    9. ',' → logprob: -21.625
    10. '৩' → logprob: -22.0625

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00523612555116415
    2. ')
' → logprob: -5.2552361488342285
    3. ' )' → logprob: -13.88023567199707
    4. ')
' → logprob: -14.50523567199707
    5. '   ' → logprob: -14.75523567199707
    6. ')d' → logprob: -15.13023567199707
    7. 'd' → logprob: -16.63023567199707
    8. ')

' → logprob: -16.63023567199707
    9. ' )
' → logprob: -16.75523567199707
    10. ' ' → logprob: -17.00523567199707

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028458870947360992
    2. 'd' → logprob: -6.252845764160156
    3. ' d' → logprob: -7.502845764160156
    4. '    
' → logprob: -8.252845764160156
    5. '
' → logprob: -9.377845764160156
    6. '	d' → logprob: -11.752845764160156
    7. ' 
' → logprob: -12.377845764160156
    8. '   
' → logprob: -13.127845764160156
    9. '  ' → logprob: -13.377845764160156
    10. '  
' → logprob: -13.502845764160156

Token 228: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6815446019172668
    2. 'd' (adapté à ' d') → logprob: -0.9315446019172668
    3. '   ' → logprob: -2.306544542312622
    4. '
' → logprob: -7.681544780731201
    5. '	d' → logprob: -9.556544303894043
    6. ' ' → logprob: -10.306544303894043
    7. '  ' → logprob: -10.431544303894043
    8. '    ' → logprob: -12.056544303894043
    9. '    
' → logprob: -12.181544303894043
    10. ' 
' → logprob: -12.806544303894043

Token 229: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.018557360395789146
    2. '1' → logprob: -4.018557548522949
    3. '2' → logprob: -8.26855754852295
    4. '=' → logprob: -10.14355754852295
    5. ' ' → logprob: -10.39355754852295
    6. '_' → logprob: -10.76855754852295
    7. '   ' → logprob: -11.01855754852295
    8. ')' → logprob: -11.14355754852295
    9. ' =' → logprob: -11.26855754852295
    10. 'd' → logprob: -12.14355754852295

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.061967849731445
    4. ')' → logprob: -18.186967849731445
    5. '(' → logprob: -18.311967849731445
    6. '   ' → logprob: -19.186967849731445
    7. '	' → logprob: -19.311967849731445
    8. 'd' → logprob: -19.436967849731445
    9. '＝' → logprob: -19.436967849731445
    10. ' =
' → logprob: -19.561967849731445

Token 231: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.161600723862648
    2. ' sign' → logprob: -1.9116007089614868
    3. '(sign' → logprob: -6.661600589752197
    4. 'point' → logprob: -9.536601066589355
    5. ' point' → logprob: -11.661601066589355
    6. '(point' → logprob: -11.786601066589355
    7. '	sign' → logprob: -12.536601066589355
    8. '_sign' → logprob: -13.911601066589355
    9. '.sign' → logprob: -14.286601066589355
    10. 's' → logprob: -14.536601066589355

Token 232: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. '(point' → logprob: -16.125
    4. '(p' → logprob: -16.5
    5. 'pt' → logprob: -18.875
    6. ' (' → logprob: -19.25
    7. '	pt' → logprob: -19.25
    8. '(py' → logprob: -19.375
    9. ' pt' → logprob: -19.625
    10. '(ct' → logprob: -20.25

Token 233: ',' (ID: 11)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.004152360837906599
    2. ',' → logprob: -5.504152297973633
    3. '(' → logprob: -10.504152297973633
    4. 'pt' → logprob: -10.629152297973633
    5. ')' → logprob: -11.754152297973633
    6. ' pt' → logprob: -11.879152297973633
    7. ' (' → logprob: -12.879152297973633
    8. ' ,' → logprob: -13.254152297973633
    9. '	pt' → logprob: -13.504152297973633
    10. '(point' → logprob: -14.004152297973633

Token 234: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004647995810955763
    2. ' v' → logprob: -5.504648208618164
    3. 'pt' → logprob: -7.504648208618164
    4. ' pt' → logprob: -11.004648208618164
    5. '(pt' → logprob: -14.629648208618164
    6. '(v' → logprob: -14.879648208618164
    7. '	v' → logprob: -15.129648208618164
    8. 'vt' → logprob: -15.129648208618164
    9. 'p' → logprob: -15.254648208618164
    10. 'point' → logprob: -16.379648208618164

Token 235: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.429121732711792
    2. '3' → logprob: -1.054121732711792
    3. '[' → logprob: -8.679121971130371
    4. ')' → logprob: -9.054121971130371
    5. '4' → logprob: -10.054121971130371
    6. '```' → logprob: -10.179121971130371
    7. '   ' → logprob: -11.554121971130371
    8. '[
' → logprob: -12.179121971130371
    9. '(' → logprob: -12.491621971130371
    10. 'ert' → logprob: -12.804121971130371

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '[' → logprob: -14.125007629394531
    4. ')' → logprob: -15.125007629394531
    5. ',
' → logprob: -15.375007629394531
    6. ',p' → logprob: -16.12500762939453
    7. '(pt' → logprob: -17.12500762939453
    8. 'pt' → logprob: -17.87500762939453
    9. ',v' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.25000762939453

Token 237: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005929274018853903
    2. ' v' → logprob: -5.130929470062256
    3. '	v' → logprob: -15.130928993225098
    4. '   ' → logprob: -16.255929946899414
    5. ')v' → logprob: -16.755929946899414
    6. '1' → logprob: -16.880929946899414
    7. '[v' → logprob: -16.880929946899414
    8. '(v' → logprob: -17.005929946899414
    9. ' ' → logprob: -17.505929946899414
    10. ')' → logprob: -17.755929946899414

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. 'v' → logprob: -8.6251802444458
    3. 'pt' → logprob: -16.750179290771484
    4. 'p' → logprob: -17.125179290771484
    5. '2' → logprob: -17.125179290771484
    6. ' v' → logprob: -17.250179290771484
    7. ')' → logprob: -17.375179290771484
    8. 'u' → logprob: -18.250179290771484
    9. ')
' → logprob: -18.750179290771484
    10. '4' → logprob: -19.125179290771484

Token 239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012868782505393028
    2. ')
' → logprob: -9.000128746032715
    3. '   ' → logprob: -12.625128746032715
    4. ' )' → logprob: -13.375128746032715
    5. ')

' → logprob: -15.375128746032715
    6. ')
' → logprob: -16.5001277923584
    7. ' ' → logprob: -17.0001277923584
    8. '()' → logprob: -17.7501277923584
    9. '  ' → logprob: -18.2501277923584
    10. '))' → logprob: -18.3751277923584

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0394621342420578
    2. '
' → logprob: -3.289462089538574
    3. '    
' → logprob: -7.039462089538574
    4. ' 
' → logprob: -8.039462089538574
    5. '    ' → logprob: -10.039462089538574
    6. '  
' → logprob: -10.914462089538574
    7. ' is' → logprob: -11.039462089538574
    8. ' True' → logprob: -11.164462089538574
    9. ' b' → logprob: -11.539462089538574
    10. ' has' → logprob: -11.664462089538574

Token 241: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' (adapté à ' has') → logprob: -0.003958955407142639
    2. ' has' → logprob: -5.7539591789245605
    3. 'neg' → logprob: -7.2539591789245605
    4. '	has' → logprob: -9.753958702087402
    5. '   ' → logprob: -12.003958702087402
    6. ' neg' → logprob: -12.253958702087402
    7. 'have' → logprob: -13.378958702087402
    8. 'negative' → logprob: -14.128958702087402
    9. 'b' → logprob: -14.378958702087402
    10. 'bool' → logprob: -15.753958702087402

Token 242: '_neg' (ID: 75899)
  Prédit: '_neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -5.717296517104842e-05
    2. '_pos' → logprob: -10.250057220458984
    3. '_negative' → logprob: -11.000057220458984
    4. '_' → logprob: -12.500057220458984
    5. '_n' → logprob: -14.875057220458984
    6. '_positive' → logprob: -14.875057220458984
    7. '_ne' → logprob: -15.250057220458984
    8. 'neg' → logprob: -16.500057220458984
    9. '_same' → logprob: -16.750057220458984
    10. 'Neg' → logprob: -17.000057220458984

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024820810649544
    2. '=' → logprob: -6.002481937408447
    3. ' ' → logprob: -12.877482414245605
    4. '   ' → logprob: -13.627482414245605
    5. 'ative' → logprob: -13.752482414245605
    6. 'itive' → logprob: -15.127482414245605
    7. 'e' → logprob: -15.252482414245605
    8. '=True' → logprob: -15.627482414245605
    9. ',' → logprob: -15.877482414245605
    10. '=False' → logprob: -16.25248146057129

Token 244: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.004263007547706366
    2. ' (' → logprob: -5.504262924194336
    3. 'd' → logprob: -8.629262924194336
    4. ' d' → logprob: -12.379262924194336
    5. '(' → logprob: -14.004262924194336
    6. '   ' → logprob: -15.754262924194336
    7. '((' → logprob: -16.004262924194336
    8. ' ' → logprob: -16.254262924194336
    9. '(has' → logprob: -16.379262924194336
    10. '
' → logprob: -17.129262924194336

Token 245: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.9186317482963204e-05
    2. ' d' → logprob: -10.000049591064453
    3. '(d' → logprob: -12.500049591064453
    4. '	d' → logprob: -17.375049591064453
    5. '   ' → logprob: -18.000049591064453
    6. ')d' → logprob: -18.750049591064453
    7. '
' → logprob: -19.000049591064453
    8. ' ' → logprob: -19.125049591064453
    9. ' (' → logprob: -19.625049591064453
    10. '  ' → logprob: -19.625049591064453

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '<' → logprob: -14.125001907348633
    3. ' <' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.250001907348633
    5. ')' → logprob: -16.625001907348633
    6. '2' → logprob: -17.812501907348633
    7. '```' → logprob: -17.812501907348633
    8. '  ' → logprob: -17.875001907348633
    9. '   ' → logprob: -17.937501907348633
    10. '１' → logprob: -18.000001907348633

Token 247: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04300708696246147
    2. '<' → logprob: -3.1680071353912354
    3. ')' → logprob: -12.168006896972656
    4. ' ' → logprob: -13.293006896972656
    5. ')<' → logprob: -15.293006896972656
    6. ' <=' → logprob: -15.543006896972656
    7. ' <",' → logprob: -15.918006896972656
    8. ' )' → logprob: -16.168006896972656
    9. '[' → logprob: -16.668006896972656
    10. '1' → logprob: -17.668006896972656

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193002820014954
    2. ' ' → logprob: -1.5019299983978271
    3. ')' → logprob: -14.001930236816406
    4. '=' → logprob: -17.501930236816406
    5. ' )' → logprob: -19.376930236816406
    6. '۰' → logprob: -19.626930236816406
    7. '<|end|>' → logprob: -19.751930236816406
    8. '  ' → logprob: -20.001930236816406
    9. ' ' → logprob: -20.376930236816406
    10. '```' → logprob: -20.876930236816406

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. ')' → logprob: -18.875123977661133
    4. '=' → logprob: -20.750123977661133
    5. '۰' → logprob: -20.875123977661133
    6. '
' → logprob: -22.750123977661133
    7. '  ' → logprob: -22.750123977661133
    8. '   ' → logprob: -23.375123977661133
    9. '00' → logprob: -23.375123977661133
    10. '```' → logprob: -23.375123977661133

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016231719637289643
    2. ' )' → logprob: -7.001623153686523
    3. ' or' → logprob: -7.376623153686523
    4. 'or' → logprob: -9.376623153686523
    5. '),' → logprob: -14.751623153686523
    6. ')
' → logprob: -15.751623153686523
    7. ' ' → logprob: -15.876623153686523
    8. ',' → logprob: -16.376623153686523
    9. 'e' → logprob: -16.876623153686523
    10. 's' → logprob: -17.626623153686523

Token 251: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.057633209973573685
    2. 'or' → logprob: -2.9326331615448
    3. ' and' → logprob: -6.682633399963379
    4. ',' → logprob: -7.432633399963379
    5. 'and' → logprob: -7.557633399963379
    6. ' ' → logprob: -8.557633399963379
    7. '<|end|>' → logprob: -9.182633399963379
    8. ' ,' → logprob: -9.807633399963379
    9. '
' → logprob: -11.932633399963379
    10. ')' → logprob: -11.932633399963379

Token 252: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04304669052362442
    2. '(d' → logprob: -3.168046712875366
    3. '(' → logprob: -10.543046951293945
    4. '   ' → logprob: -11.918046951293945
    5. '<|end|>' → logprob: -12.543046951293945
    6. '  ' → logprob: -12.668046951293945
    7. '    ' → logprob: -13.168046951293945
    8. ' ' → logprob: -13.168046951293945
    9. ' d' → logprob: -13.668046951293945
    10. '(True' → logprob: -13.918046951293945

Token 253: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47412970662117004
    2. ' d' → logprob: -0.9741296768188477
    3. '(d' → logprob: -11.099129676818848
    4. '   ' → logprob: -11.224129676818848
    5. ')d' → logprob: -11.974129676818848
    6. '  ' → logprob: -12.099129676818848
    7. '	d' → logprob: -12.224129676818848
    8. ' (' → logprob: -13.224129676818848
    9. ' ' → logprob: -13.349129676818848
    10. ')' → logprob: -13.474129676818848

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.281485836254433e-05
    2. ' ' → logprob: -9.500092506408691
    3. ' d' → logprob: -12.125092506408691
    4. '   ' → logprob: -12.125092506408691
    5. '  ' → logprob: -13.000092506408691
    6. '1' → logprob: -13.125092506408691
    7. 'd' → logprob: -13.125092506408691
    8. ')' → logprob: -15.375092506408691
    9. '3' → logprob: -15.875092506408691
    10. '    ' → logprob: -16.125093460083008

Token 255: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009784776717424393
    2. '<' → logprob: -4.634784698486328
    3. ')' → logprob: -11.384784698486328
    4. '<|end|>' → logprob: -11.509784698486328
    5. ')<' → logprob: -12.134784698486328
    6. ' ' → logprob: -13.759784698486328
    7. '[' → logprob: -15.759784698486328
    8. ' <",' → logprob: -16.134784698486328
    9. '()<' → logprob: -16.134784698486328
    10. '  ' → logprob: -16.509784698486328

Token 256: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740869104862213
    2. ' ' → logprob: -0.9740868806838989
    3. '<|end|>' → logprob: -11.97408676147461
    4. '  ' → logprob: -13.34908676147461
    5. '   ' → logprob: -13.59908676147461
    6. ' ' → logprob: -16.03658676147461
    7. ')' → logprob: -16.34908676147461
    8. '    ' → logprob: -16.66158676147461
    9. '
' → logprob: -16.84908676147461
    10. '```' → logprob: -16.91158676147461

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.376033782958984
    4. '  ' → logprob: -17.501033782958984
    5. '<|end|>' → logprob: -18.688533782958984
    6. '```' → logprob: -18.751033782958984
    7. ')' → logprob: -18.813533782958984
    8. '۰' → logprob: -20.063533782958984
    9. '1' → logprob: -20.313533782958984
    10. '
' → logprob: -20.501033782958984

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005567280459217727
    2. ' )' → logprob: -8.000556945800781
    3. ' or' → logprob: -8.500556945800781
    4. 'or' → logprob: -11.000556945800781
    5. ' ' → logprob: -14.375556945800781
    6. '   ' → logprob: -15.375556945800781
    7. '")' → logprob: -16.62555694580078
    8. '')' → logprob: -17.00055694580078
    9. '),' → logprob: -17.00055694580078
    10. '`)' → logprob: -17.25055694580078

Token 259: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03805216774344444
    2. 'or' → logprob: -3.2880520820617676
    3. ')' → logprob: -12.038052558898926
    4. ' ' → logprob: -13.038052558898926
    5. '<|end|>' → logprob: -13.413052558898926
    6. ',' → logprob: -14.788052558898926
    7. ' and' → logprob: -15.538052558898926
    8. '	or' → logprob: -15.663052558898926
    9. '
' → logprob: -16.03805160522461
    10. '   ' → logprob: -16.66305160522461

Token 260: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1272360235452652
    2. ' (' → logprob: -2.1272361278533936
    3. '(' → logprob: -8.127236366271973
    4. 'd' → logprob: -12.252236366271973
    5. ' d' → logprob: -12.502236366271973
    6. '   ' → logprob: -13.627236366271973
    7. '(
' → logprob: -13.752236366271973
    8. ' ' → logprob: -14.877236366271973
    9. '  ' → logprob: -14.877236366271973
    10. '(True' → logprob: -15.377236366271973

Token 261: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010095883626490831
    2. ' d' → logprob: -7.001009464263916
    3. '(d' → logprob: -9.751009941101074
    4. '   ' → logprob: -10.376009941101074
    5. '  ' → logprob: -12.376009941101074
    6. '	d' → logprob: -13.751009941101074
    7. ' (' → logprob: -14.001009941101074
    8. '(' → logprob: -14.126009941101074
    9. ')d' → logprob: -14.501009941101074
    10. ' ' → logprob: -14.626009941101074

Token 262: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.500017166137695
    3. '1' → logprob: -12.250017166137695
    4. '   ' → logprob: -13.875017166137695
    5. ')' → logprob: -14.500017166137695
    6. '  ' → logprob: -15.062517166137695
    7. 'd' → logprob: -16.187517166137695
    8. '۳' → logprob: -16.500017166137695
    9. '```' → logprob: -16.562517166137695
    10. '    ' → logprob: -16.812517166137695

Token 263: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8216122388839722
    2. ' <' → logprob: -1.1966122388839722
    3. '<' → logprob: -1.4466122388839722
    4. ')<' → logprob: -4.446612358093262
    5. ' )' → logprob: -4.571612358093262
    6. ' ' → logprob: -7.696612358093262
    7. '<|end|>' → logprob: -9.321612358093262
    8. '   ' → logprob: -10.071612358093262
    9. '  ' → logprob: -10.821612358093262
    10. ' ' → logprob: -11.571612358093262

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035307198762894
    2. ' ' → logprob: -4.141035079956055
    3. '   ' → logprob: -14.516035079956055
    4. '  ' → logprob: -15.391035079956055
    5. ')' → logprob: -15.641035079956055
    6. '1' → logprob: -16.391035079956055
    7. '    ' → logprob: -17.766035079956055
    8. ' ' → logprob: -17.828535079956055
    9. '>' → logprob: -18.391035079956055
    10. '=' → logprob: -18.516035079956055

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.750336647033691
    4. ')' → logprob: -15.250336647033691
    5. '  ' → logprob: -15.250336647033691
    6. '1' → logprob: -15.500336647033691
    7. '    ' → logprob: -18.187837600708008
    8. '```' → logprob: -18.437837600708008
    9. '>' → logprob: -18.937837600708008
    10. '     ' → logprob: -19.125337600708008

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002193908003391698
    2. ')
' → logprob: -8.750219345092773
    3. ' )' → logprob: -9.750219345092773
    4. '   ' → logprob: -13.250219345092773
    5. ' or' → logprob: -15.625219345092773
    6. ')

' → logprob: -15.875219345092773
    7. 'or' → logprob: -16.000219345092773
    8. ' )
' → logprob: -16.000219345092773
    9. '))' → logprob: -16.500219345092773
    10. '),' → logprob: -16.625219345092773

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022381698712706566
    2. ' has' → logprob: -4.397381782531738
    3. 'has' → logprob: -4.647381782531738
    4. '
' → logprob: -9.272381782531738
    5. '	has' → logprob: -9.772381782531738
    6. '    
' → logprob: -10.272381782531738
    7. '  ' → logprob: -10.897381782531738
    8. '_has' → logprob: -11.397381782531738
    9. '(has' → logprob: -11.522381782531738
    10. '    ' → logprob: -12.272381782531738

Token 268: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' (adapté à ' has') → logprob: -0.2369253784418106
    2. ' has' → logprob: -1.9869253635406494
    3. '   ' → logprob: -2.6119253635406494
    4. '	has' → logprob: -7.8619256019592285
    5. '_has' → logprob: -11.48692512512207
    6. '  ' → logprob: -11.61192512512207
    7. '(has' → logprob: -11.73692512512207
    8. '    
' → logprob: -11.73692512512207
    9. '
' → logprob: -12.36192512512207
    10. '    ' → logprob: -12.61192512512207

Token 269: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.000915039679966867
    2. '_' → logprob: -7.125915050506592
    3. '_neg' → logprob: -9.750914573669434
    4. '_positive' → logprob: -10.000914573669434
    5. ' _' → logprob: -12.875914573669434
    6. '_po' → logprob: -13.875914573669434
    7. 'pos' → logprob: -14.000914573669434
    8. '_p' → logprob: -14.000914573669434
    9. '_not' → logprob: -14.875914573669434
    10. '_n' → logprob: -15.000914573669434

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031790214125066996
    2. '=' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.253178596496582
    4. ')' → logprob: -15.503178596496582
    5. ' =(' → logprob: -16.0031795501709
    6. '<|end|>' → logprob: -16.5031795501709
    7. ' =)' → logprob: -16.6281795501709
    8. 's' → logprob: -17.3781795501709
    9. ' =
' → logprob: -17.6281795501709
    10. 'space' → logprob: -18.0031795501709

Token 271: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.029761366546154022
    2. '(d' → logprob: -3.52976131439209
    3. '(' → logprob: -11.52976131439209
    4. ' ' → logprob: -14.52976131439209
    5. ' d' → logprob: -14.77976131439209
    6. ' not' → logprob: -16.529762268066406
    7. ' ((' → logprob: -16.904762268066406
    8. 'd' → logprob: -16.904762268066406
    9. ' ' → logprob: -17.154762268066406
    10. ' False' → logprob: -17.904762268066406

Token 272: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008917913772165775
    2. '(d' → logprob: -4.883917808532715
    3. ' d' → logprob: -6.758917808532715
    4. ' (' → logprob: -8.883917808532715
    5. '   ' → logprob: -12.258917808532715
    6. '	d' → logprob: -13.258917808532715
    7. ' ' → logprob: -13.758917808532715
    8. ')' → logprob: -13.883917808532715
    9. '
' → logprob: -14.008917808532715
    10. ')d' → logprob: -14.133917808532715

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.250019073486328
    3. '>' → logprob: -12.750019073486328
    4. '  ' → logprob: -14.250019073486328
    5. '   ' → logprob: -14.375019073486328
    6. ')' → logprob: -14.750019073486328
    7. '_' → logprob: -15.250019073486328
    8. '3' → logprob: -15.625019073486328
    9. ' >' → logprob: -15.625019073486328
    10. '```' → logprob: -15.625019073486328

Token 274: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04578162357211113
    2. '>' → logprob: -3.1707816123962402
    3. ')' → logprob: -5.92078161239624
    4. ' )' → logprob: -9.795782089233398
    5. ')>' → logprob: -10.795782089233398
    6. ' ' → logprob: -10.920782089233398
    7. ' ' → logprob: -14.295782089233398
    8. ' >
' → logprob: -16.0457820892334
    9. '  ' → logprob: -16.4207820892334
    10. '[' → logprob: -16.6707820892334

Token 275: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07892889529466629
    2. '0' → logprob: -2.5789289474487305
    3. '<|end|>' → logprob: -10.20392894744873
    4. ')' → logprob: -13.70392894744873
    5. '>' → logprob: -15.70392894744873
    6. '  ' → logprob: -15.95392894744873
    7. ' ' → logprob: -16.453927993774414
    8. '<|end|>' → logprob: -16.516427993774414
    9. '1' → logprob: -16.766427993774414
    10. ' )' → logprob: -17.203927993774414

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '<|end|>' → logprob: -15.252805709838867
    4. ')' → logprob: -16.877805709838867
    5. '   ' → logprob: -17.377805709838867
    6. '  ' → logprob: -17.627805709838867
    7. '1' → logprob: -18.252805709838867
    8. '۰' → logprob: -18.440305709838867
    9. '```' → logprob: -18.627805709838867
    10. '>' → logprob: -19.440305709838867

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017192080849781632
    2. ' )' → logprob: -6.376718997955322
    3. ' or' → logprob: -11.00171947479248
    4. 'or' → logprob: -15.25171947479248
    5. '   ' → logprob: -17.626718521118164
    6. ' ' → logprob: -17.626718521118164
    7. '),' → logprob: -18.376718521118164
    8. '`)' → logprob: -18.751718521118164
    9. ')
' → logprob: -19.126718521118164
    10. '')' → logprob: -19.251718521118164

Token 278: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001123072113841772
    2. 'or' → logprob: -6.876122951507568
    3. ')' → logprob: -9.376123428344727
    4. ' )' → logprob: -12.376123428344727
    5. ' ' → logprob: -13.751123428344727
    6. '   ' → logprob: -16.251123428344727
    7. '	or' → logprob: -16.876123428344727
    8. ' and' → logprob: -17.126123428344727
    9. ' ou' → logprob: -18.376123428344727
    10. '    ' → logprob: -18.376123428344727

Token 279: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -6.945094355614856e-05
    2. '(d' → logprob: -9.625069618225098
    3. '(' → logprob: -12.875069618225098
    4. '(has' → logprob: -14.375069618225098
    5. '(not' → logprob: -16.37506866455078
    6. '(False' → logprob: -16.62506866455078
    7. '(True' → logprob: -17.00006866455078
    8. ' ' → logprob: -17.62506866455078
    9. '<|end|>' → logprob: -17.62506866455078
    10. ' not' → logprob: -18.25006866455078

Token 280: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13387258350849152
    2. '(d' → logprob: -2.1338725090026855
    3. ' d' → logprob: -5.2588725090026855
    4. ' (' → logprob: -6.3838725090026855
    5. '   ' → logprob: -11.633872985839844
    6. '  ' → logprob: -12.508872985839844
    7. ')' → logprob: -12.758872985839844
    8. '(' → logprob: -13.008872985839844
    9. '	d' → logprob: -13.008872985839844
    10. ')d' → logprob: -13.008872985839844

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020013193134218454
    2. '3' → logprob: -6.2520012855529785
    3. ' ' → logprob: -9.877001762390137
    4. '1' → logprob: -11.877001762390137
    5. '   ' → logprob: -12.002001762390137
    6. '(' → logprob: -13.002001762390137
    7. '  ' → logprob: -13.877001762390137
    8. ')' → logprob: -14.189501762390137
    9. '```' → logprob: -14.377001762390137
    10. '
' → logprob: -14.439501762390137

Token 282: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011705362237989902
    2. '>' → logprob: -4.63670539855957
    3. ')' → logprob: -6.63670539855957
    4. ' <' → logprob: -7.63670539855957
    5. '<|end|>' → logprob: -9.76170539855957
    6. ' ' → logprob: -10.01170539855957
    7. ')>' → logprob: -10.63670539855957
    8. '[' → logprob: -11.13670539855957
    9. ' )' → logprob: -12.51170539855957
    10. '<' → logprob: -12.76170539855957

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16024088859558105
    2. ' ' → logprob: -1.910240888595581
    3. '<|end|>' → logprob: -11.28524112701416
    4. '   ' → logprob: -13.28524112701416
    5. '  ' → logprob: -13.91024112701416
    6. ')' → logprob: -14.78524112701416
    7. '(' → logprob: -14.91024112701416
    8. '>' → logprob: -15.97274112701416
    9. '```' → logprob: -15.97274112701416
    10. ' (' → logprob: -16.285240173339844

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.625295639038086
    4. '>' → logprob: -17.250295639038086
    5. ')' → logprob: -17.562795639038086
    6. '(' → logprob: -17.625295639038086
    7. '1' → logprob: -17.937795639038086
    8. '```' → logprob: -18.187795639038086
    9. '  ' → logprob: -18.375295639038086
    10. '۰' → logprob: -18.562795639038086

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ' or' → logprob: -10.000086784362793
    3. ' )' → logprob: -10.125086784362793
    4. 'or' → logprob: -13.625086784362793
    5. '<|end|>' → logprob: -17.62508773803711
    6. '),' → logprob: -17.87508773803711
    7. ')
' → logprob: -18.25008773803711
    8. ')>' → logprob: -18.37508773803711
    9. '))' → logprob: -18.50008773803711
    10. ' ' → logprob: -18.50008773803711

Token 286: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019443416967988014
    2. 'or' → logprob: -6.876944541931152
    3. ')' → logprob: -7.251944541931152
    4. ' (' → logprob: -8.626944541931152
    5. ' )' → logprob: -11.501944541931152
    6. '(' → logprob: -12.001944541931152
    7. ' ' → logprob: -12.751944541931152
    8. ' and' → logprob: -13.376944541931152
    9. '(or' → logprob: -13.876944541931152
    10. '	or' → logprob: -15.001944541931152

Token 287: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5759576559066772
    2. ' (' → logprob: -0.8259576559066772
    3. '(' → logprob: -11.325957298278809
    4. '(True' → logprob: -12.575957298278809
    5. '(False' → logprob: -13.950957298278809
    6. '(
' → logprob: -14.825957298278809
    7. 'd' → logprob: -15.325957298278809
    8. ' ' → logprob: -15.450957298278809
    9. ' True' → logprob: -15.575957298278809
    10. '
' → logprob: -15.700957298278809

Token 288: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006432149093598127
    2. '(d' → logprob: -7.500643253326416
    3. ' d' → logprob: -9.375642776489258
    4. '   ' → logprob: -12.625642776489258
    5. ')d' → logprob: -14.375642776489258
    6. ')' → logprob: -14.625642776489258
    7. ' (' → logprob: -14.875642776489258
    8. '	d' → logprob: -15.375642776489258
    9. '  ' → logprob: -15.625642776489258
    10. '(' → logprob: -15.750642776489258

Token 289: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011021859245374799
    2. '1' → logprob: -9.875110626220703
    3. ' ' → logprob: -9.875110626220703
    4. '   ' → logprob: -13.000110626220703
    5. '  ' → logprob: -13.250110626220703
    6. 'd' → logprob: -14.125110626220703
    7. ')' → logprob: -14.812610626220703
    8. '<' → logprob: -14.875110626220703
    9. '0' → logprob: -15.375110626220703
    10. '(' → logprob: -15.500110626220703

Token 290: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.525301456451416
    2. '>' → logprob: -0.900301456451416
    3. ')' → logprob: -6.275301456451416
    4. ')>' → logprob: -9.150300979614258
    5. '[' → logprob: -9.775300979614258
    6. ' ' → logprob: -10.025300979614258
    7. '<' → logprob: -10.275300979614258
    8. ' <' → logprob: -10.525300979614258
    9. '0' → logprob: -11.400300979614258
    10. '>)' → logprob: -12.900300979614258

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005259372293949127
    2. ' ' → logprob: -5.2552595138549805
    3. '   ' → logprob: -10.75525951385498
    4. ')' → logprob: -13.13025951385498
    5. '  ' → logprob: -13.88025951385498
    6. '1' → logprob: -15.38025951385498
    7. '    ' → logprob: -15.75525951385498
    8. '```' → logprob: -15.94275951385498
    9. '     ' → logprob: -16.192758560180664
    10. '
' → logprob: -16.192758560180664

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. ')' → logprob: -15.250046730041504
    5. '1' → logprob: -16.125045776367188
    6. '3' → logprob: -16.250045776367188
    7. '  ' → logprob: -16.625045776367188
    8. '```' → logprob: -16.750045776367188
    9. '>' → logprob: -18.187545776367188
    10. '2' → logprob: -18.562545776367188

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027968952781520784
    2. '   ' → logprob: -9.125279426574707
    3. ')
' → logprob: -9.375279426574707
    4. ' )' → logprob: -9.375279426574707
    5. ' ' → logprob: -15.250279426574707
    6. ')

' → logprob: -15.375279426574707
    7. ')return' → logprob: -15.625279426574707
    8. '  ' → logprob: -16.500280380249023
    9. '<|end|>' → logprob: -16.500280380249023
    10. ' )
' → logprob: -16.625280380249023

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032950565218925476
    2. '
' → logprob: -8.250329971313477
    3. 'return' → logprob: -10.625329971313477
    4. '    
' → logprob: -10.625329971313477
    5. ' return' → logprob: -11.000329971313477
    6. '	return' → logprob: -13.750329971313477
    7. '       ' → logprob: -14.750329971313477
    8. ' 
' → logprob: -15.000329971313477
    9. '  
' → logprob: -15.000329971313477
    10. '  ' → logprob: -15.625329971313477

Token 295: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00532993208616972
    2. '   ' → logprob: -5.2553300857543945
    3. ' return' → logprob: -9.255330085754395
    4. '	return' → logprob: -15.380330085754395
    5. ' ' → logprob: -15.880330085754395
    6. '  ' → logprob: -16.130329132080078
    7. 'result' → logprob: -17.130329132080078
    8. 'not' → logprob: -17.255329132080078
    9. '
' → logprob: -18.005329132080078
    10. 'if' → logprob: -18.505329132080078

Token 296: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05785263702273369
    2. 'return' → logprob: -3.3078527450561523
    3. ' return' → logprob: -3.9328527450561523
    4. 'not' → logprob: -11.682852745056152
    5. '  ' → logprob: -11.932852745056152
    6. ' not' → logprob: -12.307852745056152
    7. '    ' → logprob: -12.682852745056152
    8. ' ' → logprob: -12.807852745056152
    9. '	return' → logprob: -13.807852745056152
    10. '       ' → logprob: -13.932852745056152

Token 297: ' point' (ID: 2438)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3200797140598297
    2. 'not' → logprob: -1.5700796842575073
    3. ' return' → logprob: -3.070079803466797
    4. ' not' → logprob: -4.070079803466797
    5. '   ' → logprob: -6.695079803466797
    6. 'result' → logprob: -7.195079803466797
    7. '!' → logprob: -9.820079803466797
    8. 're' → logprob: -9.820079803466797
    9. 'point' → logprob: -9.945079803466797
    10. ' ' → logprob: -10.320079803466797

Token 298: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39167702198028564
    2. 'return' → logprob: -2.141676902770996
    3. ' return' → logprob: -2.141676902770996
    4. '=' → logprob: -3.516676902770996
    5. ' ' → logprob: -3.891676902770996
    6. '  ' → logprob: -4.266676902770996
    7. ' is' → logprob: -5.266676902770996
    8. 'n' → logprob: -6.016676902770996
    9. '<|end|>' → logprob: -6.016676902770996
    10. ' =' → logprob: -6.266676902770996

Token 299: ' dans' (ID: 2671)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5239108204841614
    2. ' not' → logprob: -0.8989108204841614
    3. 'n' → logprob: -8.023910522460938
    4. '(not' → logprob: -8.898910522460938
    5. '   ' → logprob: -9.648910522460938
    6. ' n' → logprob: -10.023910522460938
    7. '	not' → logprob: -10.273910522460938
    8. '!' → logprob: -10.273910522460938
    9. '
' → logprob: -10.398910522460938
    10. '```' → logprob: -11.336410522460938

Token 300: ' le' (ID: 505)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.22562231123447418
    2. ' not' → logprob: -1.600622296333313
    3. '(not' → logprob: -8.850622177124023
    4. '   ' → logprob: -9.975622177124023
    5. 'pas' → logprob: -12.225622177124023
    6. '	not' → logprob: -12.350622177124023
    7. ' (' → logprob: -13.100622177124023
    8. 'n' → logprob: -13.100622177124023
    9. ' ' → logprob: -13.350622177124023
    10. ' pas' → logprob: -13.725622177124023

Token 301: ' triangle' (ID: 41487)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11398409307003021
    2. ' not' → logprob: -2.2389841079711914
    3. '(not' → logprob: -7.363984107971191
    4. 'has' → logprob: -8.738984107971191
    5. '   ' → logprob: -9.738984107971191
    6. ' (' → logprob: -9.863984107971191
    7. '
' → logprob: -10.363984107971191
    8. 'triangle' → logprob: -10.363984107971191
    9. ' has' → logprob: -10.488984107971191
    10. '!' → logprob: -10.488984107971191

Token 302: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028569400310516357
    2. ' return' → logprob: -6.252856731414795
    3. 'return' → logprob: -7.627856731414795
    4. '  ' → logprob: -8.377857208251953
    5. '    ' → logprob: -9.752857208251953
    6. ' or' → logprob: -9.752857208251953
    7. ' ' → logprob: -10.002857208251953
    8. '	return' → logprob: -11.127857208251953
    9. ' if' → logprob: -11.252857208251953
    10. ' not' → logprob: -12.377857208251953

Token 303: ' tous' (ID: 10688)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11359778791666031
    2. ' not' → logprob: -2.238597869873047
    3. '(not' → logprob: -7.488597869873047
    4. 'pas' → logprob: -9.363597869873047
    5. '   ' → logprob: -9.738597869873047
    6. 'n' → logprob: -10.488597869873047
    7. 'non' → logprob: -11.113597869873047
    8. ' pas' → logprob: -11.988597869873047
    9. '
' → logprob: -12.238597869873047
    10. ' (' → logprob: -12.738597869873047

Token 304: ' les' (ID: 1341)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.48450157046318054
    2. ' not' → logprob: -1.234501600265503
    3. '(not' → logprob: -2.859501600265503
    4. ' has' → logprob: -4.609501361846924
    5. '(has' → logprob: -4.984501361846924
    6. 'les' → logprob: -5.109501361846924
    7. ' les' → logprob: -5.484501361846924
    8. 'has' → logprob: -6.109501361846924
    9. '(d' → logprob: -6.359501361846924
    10. '   ' → logprob: -6.984501361846924

Token 305: ' signes' (ID: 133923)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.3735758066177368
    2. 'has' → logprob: -1.4985758066177368
    3. ' has' → logprob: -1.9985758066177368
    4. ' points' → logprob: -1.9985758066177368
    5. ' signes' → logprob: -2.1235756874084473
    6. 'points' → logprob: -2.9985756874084473
    7. 'not' → logprob: -3.4985756874084473
    8. 'd' → logprob: -4.373575687408447
    9. ' côtés' → logprob: -4.373575687408447
    10. ' not' → logprob: -4.748575687408447

Token 306: ' sont' (ID: 5242)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.49788761138916016
    2. ' not' → logprob: -1.7478876113891602
    3. ' is' → logprob: -2.49788761138916
    4. ' ' → logprob: -2.99788761138916
    5. '   ' → logprob: -3.62288761138916
    6. ' ==' → logprob: -3.87288761138916
    7. '==' → logprob: -5.24788761138916
    8. ' n' → logprob: -5.37288761138916
    9. ' are' → logprob: -5.37288761138916
    10. 'not' → logprob: -5.74788761138916

Token 307: ' posit' (ID: 13047)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16526778042316437
    2. ' not' → logprob: -2.0402677059173584
    3. 'False' → logprob: -4.0402679443359375
    4. ' False' → logprob: -5.6652679443359375
    5. 'n' → logprob: -7.4152679443359375
    6. 'pas' → logprob: -8.665267944335938
    7. ' pas' → logprob: -9.165267944335938
    8. '(not' → logprob: -9.665267944335938
    9. ' (' → logprob: -9.790267944335938
    10. 'True' → logprob: -9.915267944335938

Token 308: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.22562934458255768
    2. 'es' → logprob: -2.6006293296813965
    3. 'e' → logprob: -2.9756293296813965
    4. ' ou' → logprob: -3.7256293296813965
    5. 'if' → logprob: -3.8506293296813965
    6. '   ' → logprob: -4.4756293296813965
    7. ' or' → logprob: -5.1006293296813965
    8. 'i' → logprob: -5.2256293296813965
    9. 's' → logprob: -5.9756293296813965
    10. 'és' → logprob: -6.3506293296813965

Token 309: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004858953412622213
    2. 'or' → logprob: -6.12985897064209
    3. ' ' → logprob: -6.37985897064209
    4. ' ou' → logprob: -7.87985897064209
    5. ' and' → logprob: -8.62985897064209
    6. '   ' → logprob: -8.62985897064209
    7. 'ou' → logprob: -9.00485897064209
    8. ' is' → logprob: -10.75485897064209
    9. '  ' → logprob: -10.87985897064209
    10. ',' → logprob: -11.25485897064209

Token 310: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.35778653621673584
    2. ' all' → logprob: -1.6077865362167358
    3. ' nég' → logprob: -2.6077866554260254
    4. ' not' → logprob: -4.732786655426025
    5. ' pas' → logprob: -5.232786655426025
    6. 'all' → logprob: -5.732786655426025
    7. 'neg' → logprob: -5.857786655426025
    8. ' tout' → logprob: -6.732786655426025
    9. 'tout' → logprob: -6.857786655426025
    10. 'not' → logprob: -6.982786655426025

Token 311: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.5503936409950256
    2. ' nég' → logprob: -0.9253936409950256
    3. 'n' → logprob: -4.425393581390381
    4. ' les' → logprob: -5.425393581390381
    5. 'les' → logprob: -5.425393581390381
    6. '<|end|>' → logprob: -6.800393581390381
    7. ' negativos' → logprob: -7.300393581390381
    8. ' n' → logprob: -7.550393581390381
    9. ' neg' → logprob: -7.675393581390381
    10. ' are' → logprob: -7.925393581390381

Token 312: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.00022272850037552416
    2. 'atives' → logprob: -9.125223159790039
    3. 'at' → logprob: -10.375223159790039
    4. 'és' → logprob: -10.875223159790039
    5. 'atif' → logprob: -11.000223159790039
    6. 'ativement' → logprob: -11.000223159790039
    7. '   ' → logprob: -11.250223159790039
    8. 's' → logprob: -11.750223159790039
    9. 'it' → logprob: -13.250223159790039
    10. 'ativ' → logprob: -13.875223159790039

Token 313: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018802082631736994
    2. 'return' → logprob: -7.501880168914795
    3. '  ' → logprob: -7.626880168914795
    4. ' return' → logprob: -8.376880645751953
    5. ' ' → logprob: -8.876880645751953
    6. ' or' → logprob: -8.876880645751953
    7. ',' → logprob: -9.001880645751953
    8. '    ' → logprob: -9.751880645751953
    9. '    
' → logprob: -10.626880645751953
    10. '	return' → logprob: -11.126880645751953

Token 314: 'm' (ID: 76)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18220104277133942
    2. 'not' → logprob: -1.8072010278701782
    3. '   ' → logprob: -6.057200908660889
    4. ')' → logprob: -10.182201385498047
    5. '(not' → logprob: -10.682201385498047
    6. '	not' → logprob: -11.057201385498047
    7. 'n' → logprob: -11.807201385498047
    8. '
' → logprob: -12.307201385498047
    9. ' )' → logprob: -12.682201385498047
    10. '  ' → logprob: -12.682201385498047

Token 315: 'ême' (ID: 7961)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.21949267387390137
    2. '   ' → logprob: -1.9694926738739014
    3. 'ot' → logprob: -3.7194926738739014
    4. ' not' → logprob: -4.2194929122924805
    5. 'on' → logprob: -4.9694929122924805
    6. 'return' → logprob: -5.8444929122924805
    7. '(not' → logprob: -6.4694929122924805
    8. '  ' → logprob: -6.8444929122924805
    9. 'and' → logprob: -7.0944929122924805
    10. 'e' → logprob: -7.0944929122924805

Token 316: ' signe' (ID: 87345)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.946079671382904
    2. 'not' → logprob: -1.0710797309875488
    3. ')' → logprob: -1.6960797309875488
    4. ' not' → logprob: -3.571079730987549
    5. 'or' → logprob: -3.696079730987549
    6. '   ' → logprob: -4.196079730987549
    7. ' )' → logprob: -5.571079730987549
    8. 'pas' → logprob: -5.946079730987549
    9. 'return' → logprob: -6.446079730987549
    10. ' ' → logprob: -6.946079730987549

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011501519940793514
    2. '   ' → logprob: -5.261501312255859
    3. ' or' → logprob: -5.261501312255859
    4. ' )' → logprob: -7.761501312255859
    5. ',' → logprob: -8.76150131225586
    6. 'or' → logprob: -8.76150131225586
    7. ')
' → logprob: -9.38650131225586
    8. ' and' → logprob: -9.76150131225586
    9. 'return' → logprob: -10.13650131225586
    10. '  ' → logprob: -10.76150131225586

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006141475751064718
    2. 'return' → logprob: -7.500614166259766
    3. ' return' → logprob: -9.875614166259766
    4. '    
' → logprob: -12.000614166259766
    5. '  ' → logprob: -14.125614166259766
    6. '
' → logprob: -14.125614166259766
    7. '   ' → logprob: -14.375614166259766
    8. '    ' → logprob: -14.500614166259766
    9. '	return' → logprob: -14.750614166259766
    10. '       ' → logprob: -15.375614166259766

Token 319: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018290061503648758
    2. 'return' (adapté à ' return') → logprob: -4.643290042877197
    3. ' return' → logprob: -4.768290042877197
    4. '  ' → logprob: -13.768290519714355
    5. '    ' → logprob: -14.143290519714355
    6. '	return' → logprob: -14.518290519714355
    7. ' ' → logprob: -15.518290519714355
    8. '    
' → logprob: -15.893290519714355
    9. '   ' → logprob: -15.893290519714355
    10. '
' → logprob: -16.01828956604004

Token 320: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5822640061378479
    2. 'not' → logprob: -0.8322640061378479
    3. '(not' → logprob: -5.082263946533203
    4. ' (' → logprob: -10.082263946533203
    5. 'n' → logprob: -10.957263946533203
    6. '	not' → logprob: -11.957263946533203
    7. ' n' → logprob: -12.082263946533203
    8. ' no' → logprob: -12.082263946533203
    9. '(' → logprob: -12.082263946533203
    10. ' ' → logprob: -12.332263946533203

Token 321: '(has' (ID: 74460)
  Prédit: '(has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(has' → logprob: -0.06471116840839386
    2. ' (' → logprob: -2.814711093902588
    3. '(' → logprob: -6.314711093902588
    4. ' has' → logprob: -7.064711093902588
    5. 'has' → logprob: -9.564711570739746
    6. '(h' → logprob: -13.189711570739746
    7. ' ' → logprob: -13.189711570739746
    8. ' ' → logprob: -13.814711570739746
    9. '	has' → logprob: -14.814711570739746
    10. '(not' → logprob: -15.564711570739746

Token 322: '_neg' (ID: 75899)
  Prédit: '_neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.002074483083561063
    2. '_pos' → logprob: -6.252074718475342
    3. '_' → logprob: -9.252074241638184
    4. ' _' → logprob: -10.502074241638184
    5. 'neg' → logprob: -11.877074241638184
    6. '_has' → logprob: -12.002074241638184
    7. '_not' → logprob: -12.502074241638184
    8. '_n' → logprob: -13.002074241638184
    9. '_NEG' → logprob: -14.627074241638184
    10. '_negative' → logprob: -14.752074241638184

Token 323: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014590402133762836
    2. 'and' → logprob: -4.264590263366699
    3. ')' → logprob: -7.889590263366699
    4. ' or' → logprob: -10.6395902633667
    5. ' )' → logprob: -11.0145902633667
    6. ' ' → logprob: -11.5145902633667
    7. ' an' → logprob: -14.3895902633667
    8. '	and' → logprob: -14.7645902633667
    9. ' a' → logprob: -15.0145902633667
    10. ' ' → logprob: -16.014591217041016

Token 324: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.00861930102109909
    2. 'has' → logprob: -4.75861930847168
    3. ' ' → logprob: -13.00861930847168
    4. '_has' → logprob: -14.13361930847168
    5. '	has' → logprob: -14.25861930847168
    6. '(has' → logprob: -14.38361930847168
    7. ' ' → logprob: -14.50861930847168
    8. ' hasa' → logprob: -17.13361930847168
    9. ' hass' → logprob: -17.50861930847168
    10. ' ha' → logprob: -17.75861930847168

Token 325: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -12.87500286102295
    3. '_' → logprob: -16.250001907348633
    4. '_neg' → logprob: -18.125001907348633
    5. '_p' → logprob: -19.250001907348633
    6. ' pos' → logprob: -19.750001907348633
    7. ' _' → logprob: -19.875001907348633
    8. '	pos' → logprob: -20.250001907348633
    9. 'Pos' → logprob: -20.750001907348633
    10. '_po' → logprob: -20.875001907348633

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')
' → logprob: -15.125006675720215
    4. '))' → logprob: -16.5000057220459
    5. '())' → logprob: -17.3750057220459
    6. ')#' → logprob: -18.5000057220459
    7. ')return' → logprob: -18.7500057220459
    8. '()' → logprob: -19.6250057220459
    9. ')`' → logprob: -19.7500057220459
    10. '}' → logprob: -19.8750057220459

Token 327: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03043908253312111
    2. ' convex' → logprob: -4.4054388999938965
    3. ' is' → logprob: -5.4054388999938965
    4. ' parse' → logprob: -5.5304388999938965
    5. ' calculate' → logprob: -6.1554388999938965
    6. ' compute' → logprob: -6.5304388999938965
    7. ' distance' → logprob: -6.6554388999938965
    8. ' area' → logprob: -6.7804388999938965
    9. 'main' → logprob: -7.0304388999938965
    10. ' point' → logprob: -7.6554388999938965

Token 329: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004959598300047219
    2. '(' → logprob: -8.000495910644531
    3. '()' → logprob: -8.875495910644531
    4. ' ():' → logprob: -11.250495910644531
    5. '():
' → logprob: -13.000495910644531
    6. '(args' → logprob: -13.500495910644531
    7. '(argv' → logprob: -13.500495910644531
    8. ':' → logprob: -13.875495910644531
    9. '(:' → logprob: -14.750495910644531
    10. '()>' → logprob: -14.750495910644531

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007161450572311878
    2. '    ' → logprob: -7.132161617279053
    3. 'input' → logprob: -7.132161617279053
    4. 'n' → logprob: -7.257161617279053
    5. 'import' → logprob: -7.382161617279053
    6. '(' → logprob: -7.632161617279053
    7. ' input' → logprob: -8.007161140441895
    8. '    
' → logprob: -8.007161140441895
    9. ' pass' → logprob: -8.007161140441895
    10. '```' → logprob: -8.132161140441895

Token 331: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.7795313596725464
    2. ' input' → logprob: -1.7795313596725464
    3. ' lines' → logprob: -2.529531478881836
    4. ' import' → logprob: -2.654531478881836
    5. ' argv' → logprob: -2.779531478881836
    6. '   ' → logprob: -2.904531478881836
    7. 'n' → logprob: -2.904531478881836
    8. ' try' → logprob: -3.029531478881836
    9. ' triangle' → logprob: -3.029531478881836
    10. ' points' → logprob: -3.029531478881836

Token 332: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1367167234420776
    2. ' #' → logprob: -1.7617167234420776
    3. '   ' → logprob: -2.011716842651367
    4. 'p' → logprob: -3.011716842651367
    5. ' lines' → logprob: -3.386716842651367
    6. ' p' → logprob: -3.636716842651367
    7. ' input' → logprob: -3.636716842651367
    8. ' points' → logprob: -3.761716842651367
    9. 'n' → logprob: -3.886716842651367
    10. ' triangle' → logprob: -4.011716842651367

Token 333: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.121657133102417
    2. ' lines' → logprob: -1.871657133102417
    3. ' code' → logprob: -2.246657133102417
    4. ' import' → logprob: -2.621657133102417
    5. ' test' → logprob: -2.746657133102417
    6. ' #' → logprob: -2.871657133102417
    7. '   ' → logprob: -3.371657133102417
    8. ' input' → logprob: -3.746657133102417
    9. 'import' → logprob: -3.996657133102417
    10. ' user' → logprob: -4.246657371520996

Token 334: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.41184836626052856
    2. ' de' → logprob: -1.7868483066558838
    3. ' main' → logprob: -2.036848306655884
    4. ' ' → logprob: -4.661848545074463
    5. ' principal' → logprob: -5.161848545074463
    6. '   ' → logprob: -5.161848545074463
    7. ' d' → logprob: -5.286848545074463
    8. 'def' → logprob: -5.411848545074463
    9. 'de' → logprob: -5.911848545074463
    10. ' ' → logprob: -7.161848545074463

Token 335: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08299718797206879
    2. '   ' → logprob: -2.9579970836639404
    3. ':' → logprob: -4.3329973220825195
    4. '():
' → logprob: -4.8329973220825195
    5. '()' → logprob: -5.3329973220825195
    6. 'def' → logprob: -6.5829973220825195
    7. '(' → logprob: -9.45799732208252
    8. 'import' → logprob: -9.58299732208252
    9. ':
' → logprob: -9.70799732208252
    10. '
' → logprob: -10.20799732208252

Token 336: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.4798106849193573
    2. '   ' → logprob: -2.7298107147216797
    3. ' récup' → logprob: -2.7298107147216797
    4. ' g' → logprob: -2.7298107147216797
    5. ' import' → logprob: -2.8548107147216797
    6. 'import' → logprob: -3.9798107147216797
    7. ' traite' → logprob: -3.9798107147216797
    8. ' reads' → logprob: -4.22981071472168
    9. ' importe' → logprob: -4.35481071472168
    10. ' prend' → logprob: -4.72981071472168

Token 337: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7173740267753601
    2. ' les' → logprob: -0.8423740267753601
    3. ' la' → logprob: -3.092374086380005
    4. ' des' → logprob: -3.967374086380005
    5. ' le' → logprob: -5.092373847961426
    6. ' un' → logprob: -5.967373847961426
    7. ' l' → logprob: -6.342373847961426
    8. '():' → logprob: -6.342373847961426
    9. '   ' → logprob: -6.967373847961426
    10. ' the' → logprob: -7.592373847961426

Token 338: ' données' (ID: 30580)
  Prédit: ' coordonnées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordonnées' → logprob: -0.6066523194313049
    2. ' points' → logprob: -2.10665225982666
    3. ' données' → logprob: -2.23165225982666
    4. 'points' → logprob: -2.98165225982666
    5. ' lignes' → logprob: -2.98165225982666
    6. ' arguments' → logprob: -3.48165225982666
    7. ' entr' → logprob: -3.73165225982666
    8. 'arguments' → logprob: -3.98165225982666
    9. 'coord' → logprob: -4.23165225982666
    10. ' ' → logprob: -4.60665225982666

Token 339: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8654031753540039
    2. ' d' → logprob: -1.615403175354004
    3. ',' → logprob: -2.365403175354004
    4. ' des' → logprob: -2.490403175354004
    5. ' de' → logprob: -2.490403175354004
    6. 'import' → logprob: -3.990403175354004
    7. '    ' → logprob: -4.115403175354004
    8. ' ' → logprob: -4.240403175354004
    9. ' import' → logprob: -4.740403175354004
    10. ' ,' → logprob: -4.990403175354004

Token 340: ' l' (ID: 305)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.5109778642654419
    2. ' l' → logprob: -1.510977864265442
    3. 'l' → logprob: -2.7609777450561523
    4. ' sys' → logprob: -3.0109777450561523
    5. 'stdin' → logprob: -3.6359777450561523
    6. ' la' → logprob: -4.010977745056152
    7. ' standard' → logprob: -4.385977745056152
    8. 'sys' → logprob: -5.510977745056152
    9. ' les' → logprob: -6.385977745056152
    10. 'standard' → logprob: -7.135977745056152

Token 341: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.07827796041965485
    2. 'a' → logprob: -3.578278064727783
    3. 'stdin' → logprob: -4.453278064727783
    4. ''' → logprob: -4.578278064727783
    5. 'input' → logprob: -4.578278064727783
    6. 'e' → logprob: -4.828278064727783
    7. 'entrée' → logprob: -5.328278064727783
    8. 'es' → logprob: -6.828278064727783
    9. ''''' → logprob: -8.703277587890625
    10. ' stdin' → logprob: -8.953277587890625

Token 342: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.029423201456665993
    2. 'standard' → logprob: -3.654423236846924
    3. '   ' → logprob: -7.154423236846924
    4. ' stdin' → logprob: -7.279423236846924
    5. '_standard' → logprob: -8.029422760009766
    6. ',' → logprob: -8.029422760009766
    7. 'stdin' → logprob: -8.404422760009766
    8. '(stdin' → logprob: -8.779422760009766
    9. ' utilisateur' → logprob: -9.154422760009766
    10. ' std' → logprob: -9.529422760009766

Token 343: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06282837688922882
    2. ',' → logprob: -2.812828302383423
    3. '.' → logprob: -8.062828063964844
    4. ' ,' → logprob: -8.562828063964844
    5. ' et' → logprob: -8.937828063964844
    6. ':' → logprob: -9.062828063964844
    7. '    
' → logprob: -10.562828063964844
    8. ' and' → logprob: -10.937828063964844
    9. ' (' → logprob: -11.687828063964844
    10. 'import' → logprob: -11.687828063964844

Token 344: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.36093074083328247
    2. ' à' → logprob: -1.7359306812286377
    3. 'à' → logprob: -2.3609306812286377
    4. '’à' → logprob: -4.110930919647217
    5. '   ' → logprob: -4.985930919647217
    6. '_' → logprob: -6.110930919647217
    7. ''au' → logprob: -6.360930919647217
    8. ''' → logprob: -6.610930919647217
    9. ' ' → logprob: -6.860930919647217
    10. 'au' → logprob: -7.110930919647217

Token 345: ' la' (ID: 557)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.14069218933582306
    2. 'EOF' → logprob: -2.3906922340393066
    3. ' la' → logprob: -3.2656922340393066
    4. ' une' → logprob: -7.015692234039307
    5. 'la' → logprob: -8.515691757202148
    6. ' l' → logprob: -9.015691757202148
    7. ' eof' → logprob: -9.265691757202148
    8. ' ce' → logprob: -9.890691757202148
    9. ' un' → logprob: -10.515691757202148
    10. 'l' → logprob: -10.515691757202148

Token 346: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -1.1736212968826294
    2. 'EOF' → logprob: -1.2986212968826294
    3. ' fin' → logprob: -1.4236212968826294
    4. ' EOF' → logprob: -1.7986212968826294
    5. ' ligne' → logprob: -5.29862117767334
    6. 'n' → logprob: -6.42362117767334
    7. 'ligne' → logprob: -6.67362117767334
    8. 'f' → logprob: -6.79862117767334
    9. '```' → logprob: -7.42362117767334
    10. 'Fin' → logprob: -8.54862117767334

Token 347: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.011419965885579586
    2. ' des' → logprob: -5.386419773101807
    3. ' du' → logprob: -5.636419773101807
    4. 'de' → logprob: -5.886419773101807
    5. 'du' → logprob: -8.636420249938965
    6. ',' → logprob: -9.386420249938965
    7. ' input' → logprob: -10.386420249938965
    8. '   ' → logprob: -11.011420249938965
    9. ' ' → logprob: -11.136420249938965
    10. ' of' → logprob: -11.261420249938965

Token 348: ' fichier' (ID: 69637)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1441597193479538
    2. ' fichier' → logprob: -2.3941597938537598
    3. 'file' → logprob: -3.2691597938537598
    4. ' file' → logprob: -6.14415979385376
    5. 'fic' → logprob: -7.14415979385376
    6. 'flux' → logprob: -7.64415979385376
    7. 'input' → logprob: -7.76915979385376
    8. '_' → logprob: -8.394159317016602
    9. 'entrée' → logprob: -8.894159317016602
    10. 'l' → logprob: -9.269159317016602

Token 349: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005441858433187008
    2. ',' → logprob: -6.380441665649414
    3. ':' → logprob: -6.380441665649414
    4. '.' → logprob: -7.005441665649414
    5. '(' → logprob: -7.255441665649414
    6. '\' → logprob: -8.880441665649414
    7. '    ' → logprob: -10.255441665649414
    8. '    
' → logprob: -10.255441665649414
    9. '\n' → logprob: -10.255441665649414
    10. ' :' → logprob: -10.505441665649414

Token 350: 'EOF' (ID: 54793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8391452431678772
    2. '   ' → logprob: -1.7141451835632324
    3. ').' → logprob: -1.8391451835632324
    4. ')
' → logprob: -2.2141451835632324
    5. '),' → logprob: -3.4641451835632324
    6. ').
' → logprob: -3.7141451835632324
    7. 'EOF' → logprob: -4.089145183563232
    8. ' )' → logprob: -4.589145183563232
    9. '):
' → logprob: -5.089145183563232
    10. '
' → logprob: -5.839145183563232

Token 351: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14262935519218445
    2. '):' → logprob: -2.517629384994507
    3. '   ' → logprob: -3.392629384994507
    4. '):
' → logprob: -4.767629146575928
    5. ')
' → logprob: -5.517629146575928
    6. '),' → logprob: -5.892629146575928
    7. ').' → logprob: -6.392629146575928
    8. ':' → logprob: -7.142629146575928
    9. ' )' → logprob: -8.142629623413086
    10. ',' → logprob: -9.517629623413086

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006235609762370586
    2. '    ' → logprob: -7.62562370300293
    3. '    
' → logprob: -9.62562370300293
    4. '  ' → logprob: -11.12562370300293
    5. ' ' → logprob: -11.87562370300293
    6. '
' → logprob: -12.25062370300293
    7. '       ' → logprob: -12.37562370300293
    8. '   ' → logprob: -12.50062370300293
    9. ' puis' → logprob: -12.87562370300293
    10. ' while' → logprob: -13.00062370300293

Token 353: ' dé' (ID: 2393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033275492023676634
    2. ' while' → logprob: -6.503327369689941
    3. '    ' → logprob: -7.003327369689941
    4. '    
' → logprob: -8.628327369689941
    5. 'while' → logprob: -9.378327369689941
    6. ' et' → logprob: -9.378327369689941
    7. '  ' → logprob: -9.753327369689941
    8. ' puis' → logprob: -9.753327369689941
    9. '   ' → logprob: -10.003327369689941
    10. 'import' → logprob: -10.128327369689941

Token 354: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.036573078483343124
    2. 'term' → logprob: -3.5365731716156006
    3. 'tect' → logprob: -5.2865729331970215
    4. '   ' → logprob: -7.1615729331970215
    5. '
' → logprob: -8.66157341003418
    6. 't' → logprob: -9.41157341003418
    7. 'mar' → logprob: -9.53657341003418
    8. 'fin' → logprob: -9.66157341003418
    9. '#' → logprob: -10.28657341003418
    10. '    ' → logprob: -10.28657341003418

Token 355: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.024378577247262
    2. '   ' → logprob: -4.524378776550293
    3. 'ermine' → logprob: -5.649378776550293
    4. 'i' → logprob: -5.774378776550293
    5. 'e' → logprob: -6.399378776550293
    6. 'ines' → logprob: -6.774378776550293
    7. 'er' → logprob: -6.899378776550293
    8. 'îne' → logprob: -7.024378776550293
    9. 'iné' → logprob: -8.024378776550293
    10. 'ire' → logprob: -8.899378776550293

Token 356: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9310162663459778
    2. ' si' → logprob: -1.306016206741333
    3. ' le' → logprob: -2.181016206741333
    4. ' les' → logprob: -2.556016206741333
    5. ' if' → logprob: -2.556016206741333
    6. ' l' → logprob: -3.306016206741333
    7. '   ' → logprob: -4.181016445159912
    8. ' ' → logprob: -5.306016445159912
    9. '    ' → logprob: -6.181016445159912
    10. ' s' → logprob: -6.556016445159912

Token 357: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.00282924622297287
    2. '   ' → logprob: -6.627829074859619
    3. ' each' → logprob: -7.127829074859619
    4. ' ' → logprob: -8.252829551696777
    5. 'each' → logprob: -9.752829551696777
    6. ' chacun' → logprob: -9.877829551696777
    7. 'Chaque' → logprob: -10.127829551696777
    8. '    ' → logprob: -10.252829551696777
    9. ' chacune' → logprob: -10.252829551696777
    10. ' la' → logprob: -10.252829551696777

Token 358: ' dataset' (ID: 20830)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5965749621391296
    2. ' point' → logprob: -1.3465750217437744
    3. ' triangle' → logprob: -2.3465750217437744
    4. ' trip' → logprob: -2.9715750217437744
    5. 'ligne' → logprob: -4.346574783325195
    6. 'point' → logprob: -4.471574783325195
    7. ' line' → logprob: -5.846574783325195
    8. 'triangle' → logprob: -5.971574783325195
    9. ' tri' → logprob: -6.096574783325195
    10. ' ensemble' → logprob: -6.346574783325195

Token 359: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2047879695892334
    2. ' si' → logprob: -1.2047879695892334
    3. ' ' → logprob: -1.8297879695892334
    4. ' s' → logprob: -1.9547879695892334
    5. '   ' → logprob: -3.0797879695892334
    6. ' la' → logprob: -3.7047879695892334
    7. '    ' → logprob: -4.0797882080078125
    8. ' l' → logprob: -6.2047882080078125
    9. 'si' → logprob: -6.3297882080078125
    10. ' le' → logprob: -6.4547882080078125

Token 360: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8273906707763672
    2. ' la' → logprob: -1.0773906707763672
    3. ' un' → logprob: -2.702390670776367
    4. '   ' → logprob: -3.202390670776367
    5. ' point' → logprob: -3.452390670776367
    6. '    ' → logprob: -3.702390670776367
    7. ' l' → logprob: -3.952390670776367
    8. ' les' → logprob: -5.202390670776367
    9. ' une' → logprob: -5.202390670776367
    10. ' chaque' → logprob: -5.202390670776367

Token 361: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.045086439698934555
    2. 'point' → logprob: -3.17008638381958
    3. ' pt' → logprob: -7.17008638381958
    4. 'pt' → logprob: -7.42008638381958
    5. ' code' → logprob: -8.545086860656738
    6. ' trip' → logprob: -9.045086860656738
    7. ' points' → logprob: -9.920086860656738
    8. '_point' → logprob: -10.045086860656738
    9. ' triangle' → logprob: -10.482586860656738
    10. ' p' → logprob: -10.670086860656738

Token 362: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6239010691642761
    2. ' ' → logprob: -0.8739010691642761
    3. ' is' → logprob: -4.123900890350342
    4. ' se' → logprob: -5.123900890350342
    5. ' donné' → logprob: -5.623900890350342
    6. ' trip' → logprob: -6.123900890350342
    7. '<|end|>' → logprob: -6.123900890350342
    8. ' given' → logprob: -6.373900890350342
    9. ' appartient' → logprob: -6.623900890350342
    10. ' (' → logprob: -6.873900890350342

Token 363: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.0796173810958862
    2. ' dans' → logprob: -1.5796173810958862
    3. ' à' → logprob: -1.7046173810958862
    4. '<|end|>' → logprob: -2.204617500305176
    5. ' inside' → logprob: -2.829617500305176
    6. 'à' → logprob: -3.829617500305176
    7. ' ' → logprob: -4.329617500305176
    8. 'inside' → logprob: -4.454617500305176
    9. '_inside' → logprob: -4.454617500305176
    10. 'in' → logprob: -4.829617500305176

Token 364: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.30992254614830017
    2. 'le' → logprob: -1.4349225759506226
    3. ' un' → logprob: -4.184922695159912
    4. 'l' → logprob: -6.059922695159912
    5. ' ' → logprob: -6.059922695159912
    6. ' la' → logprob: -6.184922695159912
    7. ' l' → logprob: -6.434922695159912
    8. '_triangle' → logprob: -6.934922695159912
    9. ' triangle' → logprob: -7.059922695159912
    10. ' les' → logprob: -7.184922695159912

Token 365: ' triangle' (ID: 41487)
  Prédit: ' triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.47668126225471497
    2. 'triangle' → logprob: -0.9766812324523926
    3. 'tri' → logprob: -6.351681232452393
    4. '_triangle' → logprob: -7.351681232452393
    5. 'trip' → logprob: -9.85168170928955
    6. ' trip' → logprob: -9.97668170928955
    7. ' triang' → logprob: -9.97668170928955
    8. ' tri' → logprob: -10.72668170928955
    9. ' ' → logprob: -10.97668170928955
    10. 'tr' → logprob: -12.35168170928955

Token 366: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43136757612228394
    2. ',' → logprob: -1.4313676357269287
    3. ' et' → logprob: -2.8063676357269287
    4. ' ou' → logprob: -3.5563676357269287
    5. '.' → logprob: -4.30636739730835
    6. ' (' → logprob: -5.68136739730835
    7. ' or' → logprob: -6.55636739730835
    8. ' ,' → logprob: -7.05636739730835
    9. 'et' → logprob: -7.68136739730835
    10. 'def' → logprob: -7.80636739730835

Token 367: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008546845056116581
    2. ' et' → logprob: -5.508546829223633
    3. '    ' → logprob: -6.008546829223633
    4. ' puis' → logprob: -7.258546829223633
    5. 'et' → logprob: -7.883546829223633
    6. '  ' → logprob: -8.008546829223633
    7. '    
' → logprob: -8.258546829223633
    8. ' ' → logprob: -9.008546829223633
    9. ' and' → logprob: -10.008546829223633
    10. ',' → logprob: -10.008546829223633

Token 368: ' imprime' (ID: 195564)
  Prédit: ' affiche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.6957097053527832
    2. '   ' → logprob: -1.0707097053527832
    3. ' imprime' → logprob: -2.570709705352783
    4. ' print' → logprob: -3.445709705352783
    5. 'aff' → logprob: -3.945709705352783
    6. ' les' → logprob: -4.945709705352783
    7. ' continue' → logprob: -5.070709705352783
    8. ' impr' → logprob: -5.445709705352783
    9. 'print' → logprob: -6.070709705352783
    10. ' l' → logprob: -6.570709705352783

Token 369: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8024054169654846
    2. '("' → logprob: -0.9274054169654846
    3. ' la' → logprob: -3.05240535736084
    4. '   ' → logprob: -3.05240535736084
    5. '('' → logprob: -3.55240535736084
    6. '()' → logprob: -4.05240535736084
    7. '    ' → logprob: -5.80240535736084
    8. '(
' → logprob: -5.80240535736084
    9. '("")' → logprob: -6.17740535736084
    10. ' le' → logprob: -6.55240535736084

Token 370: ' réponse' (ID: 50332)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.6157149076461792
    2. 'result' → logprob: -1.2407149076461792
    3. ' result' → logprob: -2.3657150268554688
    4. 'r' → logprob: -3.7407150268554688
    5. 'ré' → logprob: -4.115715026855469
    6. ' réponse' → logprob: -4.240715026855469
    7. ' résultat' → logprob: -4.740715026855469
    8. '"' → logprob: -6.240715026855469
    9. '   ' → logprob: -6.490715026855469
    10. 'Rés' → logprob: -6.490715026855469

Token 371: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0714183822274208
    2. '.' → logprob: -2.946418285369873
    3. '(' → logprob: -4.571418285369873
    4. ':' → logprob: -5.696418285369873
    5. ',' → logprob: -7.821418285369873
    6. '()' → logprob: -7.946418285369873
    7. '    ' → logprob: -8.196418762207031
    8. '"' → logprob: -8.571418762207031
    9. ' (' → logprob: -8.571418762207031
    10. ' en' → logprob: -8.571418762207031

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014867151156067848
    2. '
' → logprob: -4.764867305755615
    3. '    
' → logprob: -5.139867305755615
    4. '\n' → logprob: -9.514866828918457
    5. '' → logprob: -9.764866828918457
    6. ' 
' → logprob: -10.139866828918457
    7. '    ' → logprob: -10.139866828918457
    8. '```' → logprob: -10.264866828918457
    9. 'newline' → logprob: -10.889866828918457
    10. '\' → logprob: -11.139866828918457

Token 373: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01583363674581051
    2. '
' → logprob: -4.390833854675293
    3. '    
' → logprob: -5.765833854675293
    4. 'while' → logprob: -9.890833854675293
    5. '    ' → logprob: -10.265833854675293
    6. 'import' → logprob: -10.890833854675293
    7. ' while' → logprob: -11.015833854675293
    8. 'try' → logprob: -11.390833854675293
    9. '```' → logprob: -11.390833854675293
    10. ' 
' → logprob: -11.765833854675293

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012665743008255959
    2. ' while' → logprob: -4.762665748596191
    3. 'while' → logprob: -5.637665748596191
    4. 'try' → logprob: -8.012665748596191
    5. ' try' → logprob: -9.137665748596191
    6. 'import' → logprob: -11.637665748596191
    7. '    
' → logprob: -12.137665748596191
    8. ' for' → logprob: -12.387665748596191
    9. '```' → logprob: -12.762665748596191
    10. '
' → logprob: -12.887665748596191

Token 375: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20656879246234894
    2. 'while' → logprob: -1.7065688371658325
    3. 'lines' → logprob: -5.581568717956543
    4. '   ' → logprob: -7.206568717956543
    5. 'line' → logprob: -7.956568717956543
    6. 'try' → logprob: -8.831568717956543
    7. ' for' → logprob: -9.331568717956543
    8. ' while' → logprob: -10.456568717956543
    9. ' lines' → logprob: -11.956568717956543
    10. 'input' → logprob: -12.081568717956543

Token 376: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0002931558701675385
    2. ' ligne' → logprob: -8.500292778015137
    3. 'line' → logprob: -9.625292778015137
    4. '	line' → logprob: -11.875292778015137
    5. ' ' → logprob: -12.000292778015137
    6. ' l' → logprob: -12.250292778015137
    7. ' lin' → logprob: -12.625292778015137
    8. ' ' → logprob: -13.750292778015137
    9. ' linha' → logprob: -14.875292778015137
    10. ' li' → logprob: -15.000292778015137

Token 377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007670275866985321
    2. 'in' → logprob: -4.8826704025268555
    3. 's' → logprob: -10.632670402526855
    4. ' ' → logprob: -11.757670402526855
    5. '_' → logprob: -12.132670402526855
    6. 'import' → logprob: -12.757670402526855
    7. '=' → logprob: -12.882670402526855
    8. 'de' → logprob: -13.257670402526855
    9. ' =' → logprob: -13.382670402526855
    10. ' ' → logprob: -13.382670402526855

Token 378: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008615754544734955
    2. ' sys' → logprob: -4.758615970611572
    3. '	sys' → logprob: -14.508615493774414
    4. '=sys' → logprob: -14.508615493774414
    5. '(sys' → logprob: -16.008615493774414
    6. 'iter' → logprob: -17.383615493774414
    7. 'sy' → logprob: -18.883615493774414
    8. '```' → logprob: -19.133615493774414
    9. 'in' → logprob: -19.883615493774414
    10. 'input' → logprob: -20.258615493774414

Token 379: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.963691804325208e-05
    2. 'stdin' → logprob: -11.125029563903809
    3. '.' → logprob: -11.375029563903809
    4. ' stdin' → logprob: -13.625029563903809
    5. '(stdin' → logprob: -13.875029563903809
    6. '.stdout' → logprob: -14.500029563903809
    7. '.readline' → logprob: -14.875029563903809
    8. '.argv' → logprob: -15.375029563903809
    9. '.std' → logprob: -16.375030517578125
    10. '.stderr' → logprob: -19.000030517578125

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05794273689389229
    2. '.strip' → logprob: -3.8079426288604736
    3. ' in' → logprob: -4.307942867279053
    4. 'in' → logprob: -4.932942867279053
    5. 'strip' → logprob: -5.057942867279053
    6. ':
' → logprob: -6.557942867279053
    7. '.rstrip' → logprob: -6.682942867279053
    8. '_strip' → logprob: -6.682942867279053
    9. '.readline' → logprob: -7.182942867279053
    10. 'rstrip' → logprob: -7.432942867279053

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005137692671269178
    2. '   ' → logprob: -5.630137920379639
    3. ' if' → logprob: -7.255137920379639
    4. '    ' → logprob: -7.755137920379639
    5. '        
' → logprob: -8.63013744354248
    6. '    
' → logprob: -10.00513744354248
    7. '.rstrip' → logprob: -10.13013744354248
    8. '.strip' → logprob: -10.50513744354248
    9. '      ' → logprob: -11.13013744354248
    10. 'rstrip' → logprob: -11.25513744354248

Token 382: ' line' (ID: 2543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9905974864959717
    2. 'line' (adapté à ' line') → logprob: -1.1155974864959717
    3. ' line' → logprob: -1.8655974864959717
    4. '       ' → logprob: -2.7405974864959717
    5. 'if' → logprob: -2.9905974864959717
    6. ' stripped' → logprob: -3.6155974864959717
    7. 'strip' → logprob: -6.615597724914551
    8. '   ' → logprob: -6.865597724914551
    9. 'data' → logprob: -7.490597724914551
    10. ' parts' → logprob: -7.740597724914551

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04907087981700897
    2. ' =' → logprob: -3.0490708351135254
    3. '.strip' → logprob: -8.299071311950684
    4. '=line' → logprob: -8.549071311950684
    5. '_strip' → logprob: -10.549071311950684
    6. 'strip' → logprob: -11.424071311950684
    7. '.rstrip' → logprob: -13.799071311950684
    8. '.' → logprob: -13.924071311950684
    9. 's' → logprob: -14.549071311950684
    10. '=
' → logprob: -15.049071311950684

Token 384: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020678490400314
    2. ' line' → logprob: -2.3502068519592285
    3. '=line' → logprob: -16.85020637512207
    4. '	line' → logprob: -17.60020637512207
    5. ' ligne' → logprob: -18.60020637512207
    6. '(line' → logprob: -18.72520637512207
    7. 'ligne' → logprob: -18.72520637512207
    8. '#line' → logprob: -18.97520637512207
    9. ' ' → logprob: -19.35020637512207
    10. 'li' → logprob: -19.47520637512207

Token 385: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -8.709308167453855e-05
    2. '.' → logprob: -10.000086784362793
    3. '.rstrip' → logprob: -10.250086784362793
    4. 'strip' → logprob: -12.000086784362793
    5. ' .' → logprob: -18.00008773803711
    6. '.split' → logprob: -18.12508773803711
    7. '.trim' → logprob: -18.37508773803711
    8. ' strip' → logprob: -18.37508773803711
    9. '_strip' → logprob: -18.50008773803711
    10. 'rstrip' → logprob: -18.62508773803711

Token 386: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003182348096743226
    2. '()
' → logprob: -5.753182411193848
    3. '()

' → logprob: -12.878182411193848
    4. '()
' → logprob: -14.128182411193848
    5. '()\' → logprob: -14.128182411193848
    6. '())' → logprob: -16.37818145751953
    7. '<|end|>' → logprob: -16.37818145751953
    8. '()`' → logprob: -16.62818145751953
    9. ' ()' → logprob: -16.62818145751953
    10. '(' → logprob: -16.62818145751953

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013448772951960564
    2. ' if' → logprob: -7.376344680786133
    3. 'if' → logprob: -8.001344680786133
    4. '   ' → logprob: -8.876344680786133
    5. '<|end|>' → logprob: -9.001344680786133
    6. '        
' → logprob: -9.501344680786133
    7. '
' → logprob: -11.501344680786133
    8. ' ' → logprob: -12.001344680786133
    9. ',' → logprob: -12.001344680786133
    10. '<|end|>' → logprob: -12.126344680786133

Token 388: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.165027217415627e-05
    2. ' if' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.875021934509277
    4. '
' → logprob: -17.75002098083496
    5. '       ' → logprob: -18.75002098083496
    6. 'If' → logprob: -19.75002098083496
    7. '	if' → logprob: -19.75002098083496
    8. '#' → logprob: -19.87502098083496
    9. '    
' → logprob: -20.00002098083496
    10. '        
' → logprob: -20.12502098083496

Token 389: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.001995846861973405
    2. 'not' → logprob: -6.501996040344238
    3. ' line' → logprob: -7.626996040344238
    4. 'line' → logprob: -12.001996040344238
    5. ' no' → logprob: -15.876996040344238
    6. ' len' → logprob: -16.876995086669922
    7. ' ' → logprob: -17.501995086669922
    8. '	not' → logprob: -18.126995086669922
    9. 'n' → logprob: -18.501995086669922
    10. '(line' → logprob: -18.751995086669922

Token 390: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.02324594371020794
    2. 'line' → logprob: -3.7732460498809814
    3. '	line' → logprob: -15.273245811462402
    4. '(line' → logprob: -16.77324676513672
    5. ' ' → logprob: -17.64824676513672
    6. ' ligne' → logprob: -18.39824676513672
    7. '#line' → logprob: -18.39824676513672
    8. '=line' → logprob: -18.64824676513672
    9. '[line' → logprob: -18.77324676513672
    10. ' linha' → logprob: -19.77324676513672

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012595122680068016
    2. ':
' → logprob: -4.387595176696777
    3. ' or' → logprob: -9.637595176696777
    4. ':return' → logprob: -11.762595176696777
    5. ' :' → logprob: -12.637595176696777
    6. '<|end|>' → logprob: -13.137595176696777
    7. '.' → logprob: -13.512595176696777
    8. '   ' → logprob: -13.887595176696777
    9. '=' → logprob: -14.137595176696777
    10. ':

' → logprob: -14.137595176696777

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.660315895918757e-05
    2. '       ' → logprob: -9.875076293945312
    3. '          ' → logprob: -12.250076293945312
    4. '	       ' → logprob: -12.250076293945312
    5. ':' → logprob: -12.500076293945312
    6. ' break' → logprob: -13.375076293945312
    7. '	   ' → logprob: -13.500076293945312
    8. '   ' → logprob: -13.500076293945312
    9. '               ' → logprob: -13.625076293945312
    10. '		' → logprob: -13.750076293945312

Token 393: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.044667359441518784
    2. ' break' → logprob: -3.2946672439575195
    3. 'continue' (adapté à ' continue') → logprob: -5.0446672439575195
    4. ' continue' → logprob: -8.79466724395752
    5. '   ' → logprob: -12.29466724395752
    6. '       ' → logprob: -13.04466724395752
    7. '	break' → logprob: -13.29466724395752
    8. 'return' → logprob: -15.54466724395752
    9. '           ' → logprob: -17.044668197631836
    10. 'continu' → logprob: -17.044668197631836

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031496648443862796
    2. '        
' → logprob: -8.375314712524414
    3. '<|end|>' → logprob: -10.000314712524414
    4. ' tokens' → logprob: -11.750314712524414
    5. 'tokens' → logprob: -11.750314712524414
    6. '
' → logprob: -12.250314712524414
    7. '        ' → logprob: -12.500314712524414
    8. '      ' → logprob: -13.125314712524414
    9. '           ' → logprob: -13.500314712524414
    10. '_tokens' → logprob: -13.750314712524414

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012511172099038959
    2. '        
' → logprob: -9.25012493133545
    3. ' tokens' → logprob: -11.75012493133545
    4. 'tokens' → logprob: -11.75012493133545
    5. ' try' → logprob: -13.25012493133545
    6. '      ' → logprob: -13.50012493133545
    7. '<|end|>' → logprob: -13.62512493133545
    8. '           ' → logprob: -13.62512493133545
    9. '   ' → logprob: -14.00012493133545
    10. 'try' → logprob: -14.12512493133545

Token 396: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.41773170232772827
    2. 'coords' → logprob: -1.417731761932373
    3. 'data' → logprob: -3.292731761932373
    4. 'values' → logprob: -3.667731761932373
    5. 'points' → logprob: -4.542731761932373
    6. ' parts' → logprob: -4.667731761932373
    7. 'tokens' → logprob: -5.167731761932373
    8. 'try' → logprob: -5.292731761932373
    9. 'x' → logprob: -6.542731761932373
    10. 'nums' → logprob: -6.667731761932373

Token 397: ' Lire' (ID: 57624)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.6674532890319824
    2. 'parts' → logprob: -0.9174532890319824
    3. 'data' → logprob: -3.1674532890319824
    4. 'values' → logprob: -3.5424532890319824
    5. 'try' → logprob: -5.167453289031982
    6. 'points' → logprob: -5.417453289031982
    7. 'tokens' → logprob: -5.792453289031982
    8. 'vals' → logprob: -6.667453289031982
    9. ' parts' → logprob: -7.667453289031982
    10. 'coordinates' → logprob: -7.667453289031982

Token 398: ' les' (ID: 1341)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.7614026665687561
    2. ' coords' → logprob: -2.1364026069641113
    3. 'coords' → logprob: -2.2614026069641113
    4. ' data' → logprob: -2.5114026069641113
    5. ' tokens' → logprob: -2.7614026069641113
    6. 'parts' → logprob: -3.1364026069641113
    7. 'tokens' → logprob: -3.2614026069641113
    8. 'points' → logprob: -3.7614026069641113
    9. ' points' → logprob: -3.8864026069641113
    10. 'data' → logprob: -4.261402606964111

Token 399: ' données' (ID: 30580)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5544583201408386
    2. 'coords' → logprob: -1.6794583797454834
    3. 'parts' → logprob: -2.6794583797454834
    4. 'vals' → logprob: -2.6794583797454834
    5. 'val' → logprob: -2.8044583797454834
    6. 'tokens' → logprob: -4.554458141326904
    7. 'nums' → logprob: -4.804458141326904
    8. 'points' → logprob: -4.929458141326904
    9. 'x' → logprob: -4.929458141326904
    10. ' parts' → logprob: -6.054458141326904

Token 400: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7567464113235474
    2. 'tokens' → logprob: -1.0067464113235474
    3. 'points' → logprob: -2.631746292114258
    4. ' tokens' → logprob: -3.506746292114258
    5. 'coords' → logprob: -3.881746292114258
    6. 'values' → logprob: -4.631746292114258
    7. 'coordinates' → logprob: -5.006746292114258
    8. ' parts' → logprob: -5.381746292114258
    9. 'parts' → logprob: -5.506746292114258
    10. 'data' → logprob: -5.756746292114258

Token 401: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.6567059755325317
    2. 'points' → logprob: -1.6567059755325317
    3. 'coords' → logprob: -1.6567059755325317
    4. ' la' → logprob: -2.156705856323242
    5. 'tokens' → logprob: -2.656705856323242
    6. 'line' → logprob: -3.156705856323242
    7. 'l' → logprob: -3.531705856323242
    8. 'les' → logprob: -3.906705856323242
    9. 'ints' → logprob: -3.906705856323242
    10. ' line' → logprob: -4.031705856323242

Token 402: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2899338901042938
    2. ' ligne' → logprob: -1.4149339199066162
    3. 'part' → logprob: -5.789933681488037
    4. 'line' → logprob: -5.914933681488037
    5. 'l' → logprob: -7.039933681488037
    6. ' line' → logprob: -8.039934158325195
    7. 'liste' → logprob: -8.414934158325195
    8. ' part' → logprob: -8.664934158325195
    9. 'tri' → logprob: -9.039934158325195
    10. 'point' → logprob: -9.164934158325195

Token 403: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4158218801021576
    2. ' tokens' → logprob: -2.5408217906951904
    3. 'tokens' → logprob: -2.5408217906951904
    4. 'points' → logprob: -2.9158217906951904
    5. ' points' → logprob: -3.5408217906951904
    6. ' coordinates' → logprob: -3.7908217906951904
    7. ' parts' → logprob: -4.0408220291137695
    8. ' =' → logprob: -4.6658220291137695
    9. 'coordinates' → logprob: -4.6658220291137695
    10. 'values' → logprob: -5.0408220291137695

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03492582216858864
    2. ' tokens' → logprob: -4.909925937652588
    3. ' coords' → logprob: -5.159925937652588
    4. 'points' → logprob: -5.284925937652588
    5. 'tokens' → logprob: -5.284925937652588
    6. ' points' → logprob: -5.409925937652588
    7. 'coords' → logprob: -6.409925937652588
    8. ' parts' → logprob: -6.659925937652588
    9. ' =' → logprob: -7.034925937652588
    10. ' coordinates' → logprob: -7.284925937652588

Token 405: ' x' (ID: 1215)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.6873879432678223
    2. ' parts' → logprob: -1.9373879432678223
    3. 'parts' → logprob: -1.9373879432678223
    4. 'x' (adapté à ' x') → logprob: -2.4373879432678223
    5. ' coords' → logprob: -2.9373879432678223
    6. 'data' → logprob: -3.6873879432678223
    7. 'values' → logprob: -4.062387943267822
    8. ' data' → logprob: -4.562387943267822
    9. 'points' → logprob: -5.312387943267822
    10. ' x' → logprob: -5.687387943267822

Token 406: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05994708091020584
    2. 's' → logprob: -3.0599470138549805
    3. ',y' → logprob: -4.6849470138549805
    4. '1' → logprob: -6.6849470138549805
    5. ' ,' → logprob: -8.18494701385498
    6. 'y' → logprob: -8.80994701385498
    7. '_values' → logprob: -9.80994701385498
    8. '_vals' → logprob: -9.93494701385498
    9. '_coords' → logprob: -10.05994701385498
    10. 'values' → logprob: -10.05994701385498

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001114106344175525
    2. ',x' → logprob: -9.75011157989502
    3. ' ,' → logprob: -10.12511157989502
    4. ',y' → logprob: -11.37511157989502
    5. ',v' → logprob: -15.00011157989502
    6. ',s' → logprob: -15.12511157989502
    7. ',n' → logprob: -15.12511157989502
    8. ',
' → logprob: -16.250110626220703
    9. ',user' → logprob: -16.375110626220703
    10. ',\
' → logprob: -16.375110626220703

Token 408: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25193390250205994
    2. ' y' → logprob: -1.5019339323043823
    3. ' ' → logprob: -12.876934051513672
    4. 'x' → logprob: -14.001934051513672
    5. ',' → logprob: -14.251934051513672
    6. ',y' → logprob: -15.251934051513672
    7. '=' → logprob: -15.876934051513672
    8. ' 
' → logprob: -16.126934051513672
    9. '    ' → logprob: -16.501934051513672
    10. ' =' → logprob: -16.876934051513672

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08906226605176926
    2. ',' → logprob: -2.464062213897705
    3. '2' → logprob: -10.214062690734863
    4. ' ,' → logprob: -10.214062690734863
    5. '_' → logprob: -11.339062690734863
    6. ' ' → logprob: -11.339062690734863
    7. '3' → logprob: -11.964062690734863
    8. ')' → logprob: -12.214062690734863
    9. ',x' → logprob: -12.839062690734863
    10. '<|end|>' → logprob: -13.214062690734863

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',x' → logprob: -14.000004768371582
    4. '=' → logprob: -15.375004768371582
    5. '‌,' → logprob: -17.125003814697266
    6. '_,' → logprob: -17.500003814697266
    7. ' =' → logprob: -17.750003814697266
    8. ',y' → logprob: -17.875003814697266
    9. ',user' → logprob: -18.000003814697266
    10. ',\
' → logprob: -18.125003814697266

Token 411: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014913111925125
    2. ' x' → logprob: -1.701491355895996
    3. ',' → logprob: -9.701491355895996
    4. ',x' → logprob: -11.326491355895996
    5. ' ' → logprob: -13.201491355895996
    6. ' =' → logprob: -13.951491355895996
    7. '_,' → logprob: -14.576491355895996
    8. '=' → logprob: -15.076491355895996
    9. '  ' → logprob: -15.076491355895996
    10. '	x' → logprob: -15.701491355895996

Token 412: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3699432909488678
    2. '2' → logprob: -1.2449432611465454
    3. ',' → logprob: -3.869943380355835
    4. '3' → logprob: -8.619943618774414
    5. ' ' → logprob: -9.244943618774414
    6. ' ,' → logprob: -9.369943618774414
    7. ' =' → logprob: -10.494943618774414
    8. '=' → logprob: -12.619943618774414
    9. '   ' → logprob: -12.619943618774414
    10. '  ' → logprob: -12.869943618774414

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',y' → logprob: -15.625005722045898
    4. '<|end|>' → logprob: -15.750005722045898
    5. ',x' → logprob: -16.0000057220459
    6. '‌,' → logprob: -16.3750057220459
    7. '=' → logprob: -17.1250057220459
    8. ',user' → logprob: -17.5000057220459
    9. ',\
' → logprob: -18.0000057220459
    10. ',
' → logprob: -18.1250057220459

Token 414: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.35725486278533936
    2. 'y' → logprob: -1.7322548627853394
    3. '<|end|>' → logprob: -2.107254981994629
    4. ' ' → logprob: -6.482254981994629
    5. ',' → logprob: -8.732254981994629
    6. 'x' → logprob: -9.232254981994629
    7. ' x' → logprob: -9.732254981994629
    8. '<|end|>' → logprob: -10.107254981994629
    9. ' =' → logprob: -11.107254981994629
    10. ',y' → logprob: -11.857254981994629

Token 415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -12.87500286102295
    3. ' ' → logprob: -17.375001907348633
    4. '<|end|>' → logprob: -18.125001907348633
    5. '3' → logprob: -19.375001907348633
    6. ',' → logprob: -19.500001907348633
    7. '   ' → logprob: -20.000001907348633
    8. '<|end|>' → logprob: -20.500001907348633
    9. '  ' → logprob: -20.750001907348633
    10. '```' → logprob: -20.750001907348633

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.750003814697266
    3. '=' → logprob: -15.250003814697266
    4. ',x' → logprob: -15.375003814697266
    5. 'x' → logprob: -17.500003814697266
    6. ' =' → logprob: -17.500003814697266
    7. ',\
' → logprob: -17.750003814697266
    8. '‌,' → logprob: -18.125003814697266
    9. ',
' → logprob: -18.375003814697266
    10. '_,' → logprob: -19.000003814697266

Token 417: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47408273816108704
    2. 'x' → logprob: -0.9740827083587646
    3. '<|end|>' → logprob: -12.974082946777344
    4. ',' → logprob: -13.474082946777344
    5. ' ' → logprob: -13.724082946777344
    6. 's' → logprob: -14.974082946777344
    7. ',x' → logprob: -15.849082946777344
    8. ' 
' → logprob: -17.099082946777344
    9. '	x' → logprob: -17.099082946777344
    10. '3' → logprob: -17.224082946777344

Token 418: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009755438077263534
    2. ',' → logprob: -7.375975608825684
    3. '1' → logprob: -8.000975608825684
    4. 'p' → logprob: -11.500975608825684
    5. 's' → logprob: -13.250975608825684
    6. 'pt' → logprob: -14.500975608825684
    7. ' ' → logprob: -15.250975608825684
    8. 'c' → logprob: -15.375975608825684
    9. 't' → logprob: -15.500975608825684
    10. '_pt' → logprob: -15.625975608825684

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. '<|end|>' → logprob: -11.37501335144043
    3. ' ,' → logprob: -13.87501335144043
    4. ',
' → logprob: -15.50001335144043
    5. ',user' → logprob: -16.25001335144043
    6. '=' → logprob: -16.25001335144043
    7. '<|end|>' → logprob: -16.25001335144043
    8. ',y' → logprob: -16.87501335144043
    9. ',\
' → logprob: -17.37501335144043
    10. '‌,' → logprob: -17.37501335144043

Token 420: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07032941281795502
    2. 'y' → logprob: -2.695329427719116
    3. '<|end|>' → logprob: -8.695329666137695
    4. 'x' → logprob: -9.070329666137695
    5. ' x' → logprob: -9.195329666137695
    6. ' ' → logprob: -12.195329666137695
    7. ',' → logprob: -13.945329666137695
    8. ',y' → logprob: -14.320329666137695
    9. '	y' → logprob: -14.945329666137695
    10. ' ' → logprob: -15.070329666137695

Token 421: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -16.0
    5. '1' → logprob: -16.25
    6. ',' → logprob: -16.875
    7. '۳' → logprob: -17.5
    8. '  ' → logprob: -19.375
    9. '৩' → logprob: -19.6875
    10. '```' → logprob: -20.0625

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',x' → logprob: -16.000001907348633
    4. '=' → logprob: -17.500001907348633
    5. ',
' → logprob: -18.000001907348633
    6. ',\
' → logprob: -18.000001907348633
    7. ',p' → logprob: -18.625001907348633
    8. ' =' → logprob: -18.875001907348633
    9. '‌,' → logprob: -19.000001907348633
    10. '_,' → logprob: -20.000001907348633

Token 423: ' xp' (ID: 74091)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6322217583656311
    2. 'x' → logprob: -1.0072216987609863
    3. ' px' → logprob: -2.8822216987609863
    4. 'xp' → logprob: -3.5072216987609863
    5. ' xp' → logprob: -4.632221698760986
    6. 'px' → logprob: -4.882221698760986
    7. '_x' → logprob: -11.632222175598145
    8. '	x' → logprob: -11.632222175598145
    9. ' ' → logprob: -12.257222175598145
    10. ' xs' → logprob: -12.507222175598145

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021402664424385875
    2. '=' → logprob: -9.250213623046875
    3. ' =' → logprob: -9.625213623046875
    4. ' ,' → logprob: -10.250213623046875
    5. 'x' → logprob: -11.875213623046875
    6. '<|end|>' → logprob: -12.250213623046875
    7. ',x' → logprob: -13.250213623046875
    8. '1' → logprob: -14.000213623046875
    9. '_,' → logprob: -15.000213623046875
    10. 'oint' → logprob: -15.125213623046875

Token 425: ' yp' (ID: 151848)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.16022981703281403
    2. ' yp' → logprob: -1.9102298021316528
    3. 'y' → logprob: -12.535229682922363
    4. 'ypy' → logprob: -14.160229682922363
    5. 'yper' → logprob: -14.535229682922363
    6. 'ypass' → logprob: -16.16023063659668
    7. 'yg' → logprob: -16.28523063659668
    8. 'ype' → logprob: -16.28523063659668
    9. 'yb' → logprob: -16.41023063659668
    10. 'YP' → logprob: -16.53523063659668

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. ',' → logprob: -15.626928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '＝' → logprob: -17.501928329467773
    6. '=line' → logprob: -17.501928329467773
    7. '=

' → logprob: -18.126928329467773
    8. '=
' → logprob: -18.501928329467773
    9. '   ' → logprob: -18.751928329467773
    10. '	' → logprob: -18.876928329467773

Token 427: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20150485634803772
    2. 'map' → logprob: -1.7015048265457153
    3. ' line' → logprob: -9.826504707336426
    4. 'line' → logprob: -10.451504707336426
    5. '(map' → logprob: -12.701504707336426
    6. '[' → logprob: -12.951504707336426
    7. '	map' → logprob: -14.201504707336426
    8. ' [' → logprob: -14.201504707336426
    9. ' ' → logprob: -14.326504707336426
    10. ' ' → logprob: -14.576504707336426

Token 428: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02217196486890316
    2. '(float' → logprob: -4.022171974182129
    3. '(' → logprob: -5.522171974182129
    4. '(str' → logprob: -11.272171974182129
    5. '(lambda' → logprob: -13.147171974182129
    6. '(eval' → logprob: -14.647171974182129
    7. '(
' → logprob: -14.772171974182129
    8. 'int' → logprob: -15.022171974182129
    9. ' (' → logprob: -15.272171974182129
    10. '[int' → logprob: -15.272171974182129

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04740968346595764
    2. '(line' → logprob: -3.547409772872925
    3. ',line' → logprob: -4.047409534454346
    4. 'line' → logprob: -11.172410011291504
    5. ' ,' → logprob: -11.672410011291504
    6. ')' → logprob: -12.422410011291504
    7. '[line' → logprob: -12.672410011291504
    8. '(' → logprob: -13.047410011291504
    9. '=line' → logprob: -13.422410011291504
    10. ' line' → logprob: -14.172410011291504

Token 430: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003180094063282013
    2. ' line' → logprob: -5.753180027008057
    3. '(line' → logprob: -13.003180503845215
    4. '[line' → logprob: -16.2531795501709
    5. '	line' → logprob: -17.0031795501709
    6. '=line' → logprob: -17.7531795501709
    7. '#line' → logprob: -19.2531795501709
    8. ')' → logprob: -19.3781795501709
    9. '_line' → logprob: -19.6281795501709
    10. '   ' → logprob: -19.7531795501709

Token 431: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.017347032204270363
    2. '.split' → logprob: -4.2673468589782715
    3. '.strip' → logprob: -5.7673468589782715
    4. '.' → logprob: -10.26734733581543
    5. ' .' → logprob: -11.39234733581543
    6. '()' → logprob: -12.51734733581543
    7. 'split' → logprob: -15.51734733581543
    8. '.rstrip' → logprob: -15.89234733581543
    9. ' ().' → logprob: -15.89234733581543
    10. '   ' → logprob: -16.51734733581543

Token 432: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019906485453248024
    2. '()' → logprob: -4.019906520843506
    3. '('' → logprob: -6.519906520843506
    4. '(' → logprob: -8.769906044006348
    5. '()))' → logprob: -9.144906044006348
    6. '())
' → logprob: -12.144906044006348
    7. ')' → logprob: -12.644906044006348
    8. ' ())' → logprob: -12.769906044006348
    9. '()]' → logprob: -13.269906044006348
    10. '("' → logprob: -13.269906044006348

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33593419194221497
    2. '
' → logprob: -1.4609341621398926
    3. '<|end|>' → logprob: -3.4609341621398926
    4. '        
' → logprob: -4.460934162139893
    5. '   ' → logprob: -5.710934162139893
    6. '    
' → logprob: -5.835934162139893
    7. '  
' → logprob: -6.585934162139893
    8. '<|end|>' → logprob: -7.335934162139893
    9. ')' → logprob: -8.08593463897705
    10. '' → logprob: -8.21093463897705

Token 434: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14216679334640503
    2. 'pt' → logprob: -3.14216685295105
    3. ' pt' → logprob: -3.76716685295105
    4. 'result' → logprob: -4.017166614532471
    5. 'point' → logprob: -4.517166614532471
    6. '   ' → logprob: -4.892166614532471
    7. ' point' → logprob: -5.142166614532471
    8. '
' → logprob: -5.142166614532471
    9. ' result' → logprob: -5.142166614532471
    10. 'v' (adapté à ' v') → logprob: -5.892166614532471

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'ector' → logprob: -15.375000953674316
    3. 'ectors' → logprob: -16.25
    4. 'v' → logprob: -16.375
    5. 'ect' → logprob: -16.5
    6. ' =' → logprob: -16.75
    7. '=' → logprob: -17.25
    8. 'ec' → logprob: -17.375
    9. 'al' → logprob: -17.5
    10. '_' → logprob: -17.625

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. ',' → logprob: -15.548587799072266
    4. '=(' → logprob: -15.673587799072266
    5. ')' → logprob: -16.548587799072266
    6. '=v' → logprob: -17.423587799072266
    7. '=
' → logprob: -17.548587799072266
    8. 'v' → logprob: -18.548587799072266
    9. '＝' → logprob: -18.548587799072266
    10. '(' → logprob: -18.673587799072266

Token 437: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0023593560326844454
    2. '(' → logprob: -6.252359390258789
    3. ' (' → logprob: -7.752359390258789
    4. '[x' → logprob: -14.502359390258789
    5. 'x' → logprob: -15.627359390258789
    6. '   ' → logprob: -16.25235939025879
    7. '(y' → logprob: -16.87735939025879
    8. '(
' → logprob: -17.37735939025879
    9. '(p' → logprob: -17.62735939025879
    10. '[' → logprob: -17.87735939025879

Token 438: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.5
    3. ')x' → logprob: -18.25
    4. '(x' → logprob: -20.125
    5. '"x' → logprob: -20.5
    6. '	x' → logprob: -21.0
    7. ',x' → logprob: -22.0
    8. '%x' → logprob: -23.5
    9. '{x' → logprob: -23.625
    10. '   ' → logprob: -23.625

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. ',' → logprob: -16.625
    4. '<|end|>' → logprob: -17.5
    5. '[' → logprob: -18.25
    6. '_' → logprob: -19.375
    7. '１' → logprob: -19.5
    8. '\xe2\x82' → logprob: -20.5
    9. '۱' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ',y' → logprob: -10.500029563903809
    3. ' ,' → logprob: -13.250029563903809
    4. ',v' → logprob: -15.250029563903809
    5. ',
' → logprob: -16.000030517578125
    6. '<|end|>' → logprob: -16.750030517578125
    7. '‌,' → logprob: -17.375030517578125
    8. 'y' → logprob: -18.750030517578125
    9. ',x' → logprob: -19.000030517578125
    10. ',user' → logprob: -19.375030517578125

Token 441: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001170225441455841
    2. ' y' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -18.001171112060547
    4. '	y' → logprob: -18.626171112060547
    5. ' ' → logprob: -20.251171112060547
    6. ')y' → logprob: -20.376171112060547
    7. '
' → logprob: -20.876171112060547
    8. '   ' → logprob: -21.376171112060547
    9. ')' → logprob: -21.376171112060547
    10. '‘y' → logprob: -21.751171112060547

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'y' → logprob: -17.625
    3. '<|end|>' → logprob: -17.75
    4. ')' → logprob: -18.0
    5. ' ' → logprob: -19.125
    6. '   ' → logprob: -19.625
    7. '[' → logprob: -20.75
    8. ' y' → logprob: -21.25
    9. ',' → logprob: -21.5
    10. '2' → logprob: -21.625

Token 443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04858975484967232
    2. ')
' → logprob: -3.0485897064208984
    3. ')
' → logprob: -14.298589706420898
    4. ' )' → logprob: -14.548589706420898
    5. ')

' → logprob: -14.673589706420898
    6. ',' → logprob: -15.048589706420898
    7. ' )
' → logprob: -15.423589706420898
    8. '),' → logprob: -15.548589706420898
    9. ')v' → logprob: -15.798589706420898
    10. '   ' → logprob: -17.1735897064209

Token 444: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14752016961574554
    2. ' v' → logprob: -2.022520065307617
    3. '   ' → logprob: -5.522520065307617
    4. '       ' → logprob: -7.647520065307617
    5. '	v' → logprob: -8.022520065307617
    6. ',v' → logprob: -11.522520065307617
    7. ' ' → logprob: -12.147520065307617
    8. ',' → logprob: -12.147520065307617
    9. '<|end|>' → logprob: -12.647520065307617
    10. '    ' → logprob: -12.897520065307617

Token 445: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5760511159896851
    2. ' v' → logprob: -0.8260511159896851
    3. '	v' → logprob: -9.326050758361816
    4. '   ' → logprob: -11.201050758361816
    5. '       ' → logprob: -12.201050758361816
    6. '    ' → logprob: -13.826050758361816
    7. ' ' → logprob: -13.951050758361816
    8. ' ' → logprob: -14.201050758361816
    9. '	' → logprob: -14.826050758361816
    10. '_v' → logprob: -15.701050758361816

Token 446: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '₂' → logprob: -16.875
    4. '3' → logprob: -18.125
    5. '(' → logprob: -18.25
    6. '۲' → logprob: -18.75
    7. '_' → logprob: -19.125
    8. '২' → logprob: -19.375
    9. '=' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01828736625611782
    2. '=' → logprob: -4.018287181854248
    3. ',' → logprob: -9.018287658691406
    4. '<|end|>' → logprob: -12.018287658691406
    5. ' ' → logprob: -12.268287658691406
    6. ' (' → logprob: -13.268287658691406
    7. ')' → logprob: -13.518287658691406
    8. ' ,' → logprob: -13.893287658691406
    9. ' =(' → logprob: -14.393287658691406
    10. '=(' → logprob: -15.643287658691406

Token 448: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26052868366241455
    2. '(x' → logprob: -1.5105286836624146
    3. '(' → logprob: -4.760528564453125
    4. ' x' → logprob: -14.260528564453125
    5. 'x' → logprob: -14.760528564453125
    6. '(
' → logprob: -14.885528564453125
    7. ' ' → logprob: -16.010528564453125
    8. '（' → logprob: -16.135528564453125
    9. ' (
' → logprob: -17.260528564453125
    10. '(s' → logprob: -18.135528564453125

Token 449: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0040793512016534805
    2. ' x' → logprob: -5.504079341888428
    3. '(x' → logprob: -13.879079818725586
    4. '	x' → logprob: -18.879079818725586
    5. ' ' → logprob: -19.504079818725586
    6. ' (' → logprob: -19.629079818725586
    7. '"x' → logprob: -20.004079818725586
    8. ')x' → logprob: -20.254079818725586
    9. '(' → logprob: -20.504079818725586
    10. ''x' → logprob: -21.129079818725586

Token 450: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. '3' → logprob: -12.750006675720215
    3. ' ' → logprob: -12.750006675720215
    4. ',' → logprob: -13.750006675720215
    5. '```' → logprob: -17.00000762939453
    6. 'x' → logprob: -17.75000762939453
    7. '  ' → logprob: -17.87500762939453
    8. ' ,' → logprob: -18.37500762939453
    9. ')' → logprob: -18.75000762939453
    10. '   ' → logprob: -18.75000762939453

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -10.875027656555176
    3. ',y' → logprob: -11.750027656555176
    4. ',v' → logprob: -15.250027656555176
    5. '<|end|>' → logprob: -16.87502670288086
    6. '‌,' → logprob: -17.12502670288086
    7. ',
' → logprob: -17.25002670288086
    8. 'y' → logprob: -17.62502670288086
    9. ',x' → logprob: -18.50002670288086
    10. ',user' → logprob: -19.25002670288086

Token 452: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25192907452583313
    2. ' y' → logprob: -1.5019290447235107
    3. ' ' → logprob: -17.126928329467773
    4. '<|end|>' → logprob: -17.751928329467773
    5. '	y' → logprob: -18.251928329467773
    6. 'x' → logprob: -18.376928329467773
    7. ')y' → logprob: -19.626928329467773
    8. ''y' → logprob: -19.751928329467773
    9. ',' → logprob: -20.376928329467773
    10. ',y' → logprob: -20.626928329467773

Token 453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ',' → logprob: -9.50008487701416
    3. ' ' → logprob: -11.62508487701416
    4. ' ,' → logprob: -14.62508487701416
    5. ')' → logprob: -15.37508487701416
    6. 'y' → logprob: -15.75008487701416
    7. ' y' → logprob: -16.125085830688477
    8. '[' → logprob: -16.625085830688477
    9. '```' → logprob: -16.875085830688477
    10. '   ' → logprob: -17.375085830688477

Token 454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023066338151693344
    2. ',' → logprob: -3.898066282272339
    3. ')
' → logprob: -6.023066520690918
    4. ',
' → logprob: -9.898066520690918
    5. '   ' → logprob: -10.773066520690918
    6. '),' → logprob: -11.523066520690918
    7. ',)' → logprob: -11.648066520690918
    8. ' )' → logprob: -12.648066520690918
    9. ',v' → logprob: -13.648066520690918
    10. '<|end|>' → logprob: -13.648066520690918

Token 455: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24086247384548187
    2. '       ' → logprob: -1.615862488746643
    3. ' v' → logprob: -4.3658623695373535
    4. '   ' → logprob: -6.3658623695373535
    5. '	v' → logprob: -7.1158623695373535
    6. '
' → logprob: -10.990862846374512
    7. ',v' → logprob: -11.115862846374512
    8. '        
' → logprob: -11.490862846374512
    9. '<|end|>' → logprob: -11.740862846374512
    10. '```' → logprob: -11.990862846374512

Token 456: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.12801048159599304
    2. ' v' → logprob: -2.1280105113983154
    3. '(v' → logprob: -7.253010272979736
    4. ' (' → logprob: -8.128010749816895
    5. '	v' → logprob: -10.628010749816895
    6. '(' → logprob: -10.753010749816895
    7. '       ' → logprob: -11.628010749816895
    8. '   ' → logprob: -12.003010749816895
    9. ' =' → logprob: -12.128010749816895
    10. '(
' → logprob: -12.253010749816895

Token 457: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011761783389374614
    2. '2' → logprob: -6.751176357269287
    3. '1' → logprob: -12.376175880432129
    4. ' ' → logprob: -14.751175880432129
    5. '(' → logprob: -15.001175880432129
    6. '   ' → logprob: -15.376175880432129
    7. 'ectors' → logprob: -15.626175880432129
    8. '<|end|>' → logprob: -15.876175880432129
    9. 'x' → logprob: -16.501176834106445
    10. 'v' → logprob: -16.626176834106445

Token 458: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688522577285767
    2. ' =' → logprob: -1.136885166168213
    3. ',' → logprob: -11.511885643005371
    4. '=(' → logprob: -13.261885643005371
    5. ')' → logprob: -14.136885643005371
    6. '<|end|>' → logprob: -14.386885643005371
    7. '(' → logprob: -15.011885643005371
    8. ' =(' → logprob: -15.011885643005371
    9. ' (' → logprob: -15.636885643005371
    10. '=
' → logprob: -15.886885643005371

Token 459: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07954671233892441
    2. ' (' → logprob: -2.5795466899871826
    3. '(' → logprob: -7.329546928405762
    4. 'x' → logprob: -14.079546928405762
    5. '(
' → logprob: -16.704545974731445
    6. ' x' → logprob: -17.079545974731445
    7. '(y' → logprob: -17.829545974731445
    8. ' ' → logprob: -18.079545974731445
    9. '(s' → logprob: -18.204545974731445
    10. '（' → logprob: -19.454545974731445

Token 460: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3663626305060461e-05
    2. '(x' → logprob: -11.25001335144043
    3. ' x' → logprob: -14.25001335144043
    4. '(' → logprob: -19.37501335144043
    5. '3' → logprob: -20.62501335144043
    6. ')x' → logprob: -20.87501335144043
    7. '	x' → logprob: -21.00001335144043
    8. ' (' → logprob: -21.37501335144043
    9. ')' → logprob: -21.50001335144043
    10. '"x' → logprob: -21.75001335144043

Token 461: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ',' → logprob: -15.250000953674316
    3. '۳' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. '[' → logprob: -17.125
    6. '৩' → logprob: -17.875
    7. ' ' → logprob: -18.125
    8. '<|end|>' → logprob: -18.5625
    9. ')' → logprob: -18.6875
    10. '३' → logprob: -19.25

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ',y' → logprob: -12.875005722045898
    3. ' ,' → logprob: -13.250005722045898
    4. '<|end|>' → logprob: -14.375005722045898
    5. ')' → logprob: -14.500005722045898
    6. ',
' → logprob: -15.375005722045898
    7. ',v' → logprob: -16.8750057220459
    8. '‌,' → logprob: -17.7500057220459
    9. '),' → logprob: -18.0000057220459
    10. ',user' → logprob: -18.1250057220459

Token 463: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888989895582199
    2. ' y' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.953889846801758
    4. ')y' → logprob: -17.078889846801758
    5. '	y' → logprob: -17.453889846801758
    6. '(y' → logprob: -18.078889846801758
    7. ')' → logprob: -18.328889846801758
    8. '   ' → logprob: -18.828889846801758
    9. ''y' → logprob: -18.953889846801758
    10. '```' → logprob: -19.078889846801758

Token 464: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.0
    3. '۳' → logprob: -17.875
    4. '```' → logprob: -19.125
    5. ' ' → logprob: -19.25
    6. '৩' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '٣' → logprob: -20.375
    9. 'з' → logprob: -20.5
    10. 'y' → logprob: -20.875

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694574892520905
    2. ')
' → logprob: -2.126945734024048
    3. '   ' → logprob: -11.126945495605469
    4. ')
' → logprob: -13.626945495605469
    5. '       ' → logprob: -14.501945495605469
    6. ' )
' → logprob: -14.751945495605469
    7. ' )' → logprob: -15.251945495605469
    8. ',' → logprob: -15.376945495605469
    9. ')

' → logprob: -15.626945495605469
    10. '),' → logprob: -16.25194549560547

Token 466: '       ' (ID: 309)
  Prédit: ' pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.09732365608215332
    2. '       ' → logprob: -2.5973236560821533
    3. 'pt' → logprob: -4.472323417663574
    4. '   ' → logprob: -5.597323417663574
    5. '	pt' → logprob: -6.097323417663574
    6. ' p' → logprob: -7.847323417663574
    7. 'p' → logprob: -8.847323417663574
    8. ' point' → logprob: -9.097323417663574
    9. '<|end|>' → logprob: -9.597323417663574
    10. '(pt' → logprob: -9.722323417663574

Token 467: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' (adapté à ' pt') → logprob: -0.2081802636384964
    2. 'p' → logprob: -2.3331801891326904
    3. ' pt' → logprob: -2.4581801891326904
    4. ' p' → logprob: -5.5831804275512695
    5. 'point' → logprob: -6.8331804275512695
    6. ' point' → logprob: -8.20818042755127
    7. '       ' → logprob: -8.70818042755127
    8. '	pt' → logprob: -9.95818042755127
    9. '   ' → logprob: -11.45818042755127
    10. '(pt' → logprob: -12.20818042755127

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=(' → logprob: -18.186967849731445
    4. '＝' → logprob: -19.061967849731445
    5. ' =(' → logprob: -19.561967849731445
    6. '=
' → logprob: -19.936967849731445
    7. '=

' → logprob: -20.686967849731445
    8. ')' → logprob: -21.436967849731445
    9. '=}' → logprob: -21.936967849731445
    10. ' ' → logprob: -22.311967849731445

Token 469: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38735339045524597
    2. ' (' → logprob: -1.1373534202575684
    3. '(' → logprob: -7.637353420257568
    4. ' ' → logprob: -17.262353897094727
    5. '(px' → logprob: -17.387353897094727
    6. '(xs' → logprob: -17.762353897094727
    7. '(
' → logprob: -18.387353897094727
    8. '(p' → logprob: -18.387353897094727
    9. '(ip' → logprob: -18.387353897094727
    10. 'xp' → logprob: -18.387353897094727

Token 470: 'xp' (ID: 65620)
  Prédit: 'xp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xp' → logprob: -0.00043972869752906263
    2. 'x' → logprob: -7.750439643859863
    3. ' xp' → logprob: -11.625439643859863
    4. ' x' → logprob: -16.12544059753418
    5. ' ' → logprob: -19.50044059753418
    6. '   ' → logprob: -19.75044059753418
    7. '(x' → logprob: -20.12544059753418
    8. '_x' → logprob: -20.12544059753418
    9. '  ' → logprob: -21.00044059753418
    10. 'xu' → logprob: -21.37544059753418

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -10.250040054321289
    3. '<|end|>' → logprob: -12.750040054321289
    4. ',y' → logprob: -13.625040054321289
    5. ',
' → logprob: -14.625040054321289
    6. ',p' → logprob: -15.000040054321289
    7. '‌,' → logprob: -16.25004005432129
    8. ')' → logprob: -16.62504005432129
    9. '[' → logprob: -17.25004005432129
    10. ',

' → logprob: -17.87504005432129

Token 472: ' yp' (ID: 151848)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00861468818038702
    2. ' yp' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.633615493774414
    4. 'y' → logprob: -17.258615493774414
    5. ' ' → logprob: -17.508615493774414
    6. 'yper' → logprob: -17.633615493774414
    7. 'yd' → logprob: -17.883615493774414
    8. 'ypy' → logprob: -18.008615493774414
    9. 'yb' → logprob: -18.508615493774414
    10. 'ym' → logprob: -18.758615493774414

Token 473: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014299227041192353
    2. ')
' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.250143051147461
    4. '       ' → logprob: -14.125143051147461
    5. ' )' → logprob: -14.875143051147461
    6. ')

' → logprob: -16.00014305114746
    7. '<|end|>' → logprob: -17.00014305114746
    8. ')
' → logprob: -17.12514305114746
    9. '),' → logprob: -17.37514305114746
    10. ' ' → logprob: -18.25014305114746

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005449305754154921
    2. '<|end|>' → logprob: -8.375544548034668
    3. '
' → logprob: -8.500544548034668
    4. '   ' → logprob: -9.875544548034668
    5. '        
' → logprob: -10.000544548034668
    6. '```' → logprob: -12.500544548034668
    7. '<|end|>' → logprob: -13.000544548034668
    8. ' if' → logprob: -13.125544548034668
    9. 'if' → logprob: -13.375544548034668
    10. '    
' → logprob: -13.375544548034668

Token 475: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38877543807029724
    2. 'if' (adapté à ' if') → logprob: -1.6387754678726196
    3. 'inside' → logprob: -2.26377534866333
    4. 'in' → logprob: -4.01377534866333
    5. '       ' → logprob: -6.63877534866333
    6. 'res' → logprob: -6.76377534866333
    7. 'is' → logprob: -6.76377534866333
    8. 'print' → logprob: -7.01377534866333
    9. 'answer' → logprob: -7.63877534866333
    10. ' result' → logprob: -7.88877534866333

Token 476: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.1602407842874527
    2. 'point' → logprob: -1.9102407693862915
    3. '(point' → logprob: -11.03524112701416
    4. '	point' → logprob: -14.91024112701416
    5. ' ' → logprob: -16.785240173339844
    6. '_point' → logprob: -16.910240173339844
    7. ' not' → logprob: -17.035240173339844
    8. ' ' → logprob: -17.410240173339844
    9. '   ' → logprob: -17.910240173339844
    10. '.point' → logprob: -18.035240173339844

Token 477: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.125000953674316
    3. ' _' → logprob: -17.25
    4. ')_' → logprob: -17.5
    5. '_inside' → logprob: -17.625
    6. '_to' → logprob: -18.375
    7. '_IN' → logprob: -18.5
    8. '_i' → logprob: -18.75
    9. '_point' → logprob: -19.0
    10. '_out' → logprob: -19.25

Token 478: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.00026634239475242794
    2. 'triangle' → logprob: -8.250266075134277
    3. '_tri' → logprob: -12.375266075134277
    4. '_point' → logprob: -14.750266075134277
    5. ' triangle' → logprob: -15.625266075134277
    6. '_tr' → logprob: -16.250267028808594
    7. '(point' → logprob: -17.000267028808594
    8. '_rectangle' → logprob: -17.000267028808594
    9. '_TRI' → logprob: -17.125267028808594
    10. 'point' → logprob: -17.625267028808594

Token 479: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.000007629394531
    3. '(' → logprob: -13.750007629394531
    4. '(p' → logprob: -17.25000762939453
    5. '(py' → logprob: -17.50000762939453
    6. '(px' → logprob: -19.12500762939453
    7. ' pt' → logprob: -19.37500762939453
    8. '(
' → logprob: -19.50000762939453
    9. '(tp' → logprob: -19.50000762939453
    10. '(point' → logprob: -19.50000762939453

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006794307846575975
    2. ',v' → logprob: -7.5006794929504395
    3. ' ,' → logprob: -9.375679016113281
    4. '(v' → logprob: -10.250679016113281
    5. 'v' → logprob: -12.500679016113281
    6. ',
' → logprob: -13.250679016113281
    7. '(' → logprob: -14.375679016113281
    8. ')' → logprob: -15.375679016113281
    9. '
' → logprob: -17.12567901611328
    10. ' v' → logprob: -17.62567901611328

Token 481: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012510590255260468
    2. ' v' → logprob: -4.387510776519775
    3. ')v' → logprob: -14.762510299682617
    4. '	v' → logprob: -15.512510299682617
    5. '(v' → logprob: -15.887510299682617
    6. ')' → logprob: -16.012510299682617
    7. '   ' → logprob: -16.387510299682617
    8. '       ' → logprob: -17.012510299682617
    9. '_v' → logprob: -17.262510299682617
    10. '<v' → logprob: -18.137510299682617

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. 'ector' → logprob: -13.750004768371582
    3. 'ectors' → logprob: -14.437504768371582
    4. 'ect' → logprob: -15.187504768371582
    5. '```' → logprob: -15.250004768371582
    6. 'ersion' → logprob: -15.312504768371582
    7. 'alue' → logprob: -15.437504768371582
    8. 'or' → logprob: -15.500004768371582
    9. 'l' → logprob: -15.500004768371582
    10. 'al' → logprob: -15.687504768371582

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005643534241244197
    2. ',v' → logprob: -7.5005645751953125
    3. ' ,' → logprob: -11.500564575195312
    4. ',
' → logprob: -14.000564575195312
    5. 'v' → logprob: -14.750564575195312
    6. ',

' → logprob: -17.125564575195312
    7. ')' → logprob: -18.000564575195312
    8. ' v' → logprob: -18.500564575195312
    9. '```' → logprob: -19.500564575195312
    10. ',,' → logprob: -19.875564575195312

Token 484: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002613358374219388
    2. ' v' → logprob: -8.250261306762695
    3. '       ' → logprob: -18.000261306762695
    4. '	v' → logprob: -18.500261306762695
    5. ')v' → logprob: -18.750261306762695
    6. '<|end|>' → logprob: -19.625261306762695
    7. '<v' → logprob: -20.750261306762695
    8. '_v' → logprob: -21.000261306762695
    9. '   ' → logprob: -21.125261306762695
    10. 'vq' → logprob: -21.250261306762695

Token 485: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010366239439463243
    2. 'v' → logprob: -9.375103950500488
    3. '3' → logprob: -11.625103950500488
    4. ',' → logprob: -12.125103950500488
    5. ' v' → logprob: -13.500103950500488
    6. ' ' → logprob: -13.875103950500488
    7. ',v' → logprob: -14.250103950500488
    8. '       ' → logprob: -14.500103950500488
    9. '   ' → logprob: -15.250103950500488
    10. '<v' → logprob: -15.625103950500488

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001198562909848988
    2. ',v' → logprob: -6.751198768615723
    3. ' ,' → logprob: -11.001198768615723
    4. 'v' → logprob: -11.626198768615723
    5. ',
' → logprob: -13.251198768615723
    6. ')' → logprob: -14.626198768615723
    7. ' v' → logprob: -15.126198768615723
    8. '```' → logprob: -17.251197814941406
    9. '),' → logprob: -17.626197814941406
    10. '2' → logprob: -17.751197814941406

Token 487: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.615255839889869e-05
    2. ' v' → logprob: -9.250096321105957
    3. '	v' → logprob: -19.62509536743164
    4. ')' → logprob: -20.00009536743164
    5. '   ' → logprob: -20.12509536743164
    6. ')v' → logprob: -20.12509536743164
    7. 'vq' → logprob: -22.00009536743164
    8. '       ' → logprob: -22.12509536743164
    9. '_v' → logprob: -22.37509536743164
    10. '```' → logprob: -22.75009536743164

Token 488: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. '<|end|>' → logprob: -15.875000953674316
    3. '2' → logprob: -16.0
    4. ')' → logprob: -16.0
    5. '۳' → logprob: -16.375
    6. ',' → logprob: -16.375
    7. ' ' → logprob: -16.875
    8. 'v' → logprob: -17.0
    9. '৩' → logprob: -18.125
    10. 's' → logprob: -18.125

Token 489: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015115276910364628
    2. '):
' → logprob: -6.501511573791504
    3. ')' → logprob: -12.501511573791504
    4. ':' → logprob: -12.501511573791504
    5. ' ):' → logprob: -13.376511573791504
    6. '):
' → logprob: -15.751511573791504
    7. '():' → logprob: -17.501510620117188
    8. '}:' → logprob: -18.251510620117188
    9. ']:' → logprob: -18.376510620117188
    10. '   ' → logprob: -18.501510620117188

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017558604013174772
    2. '       ' → logprob: -6.376755714416504
    3. 'print' → logprob: -10.126755714416504
    4. '	       ' → logprob: -12.126755714416504
    5. ' print' → logprob: -12.501755714416504
    6. ':' → logprob: -13.001755714416504
    7. '          ' → logprob: -14.126755714416504
    8. '```' → logprob: -15.001755714416504
    9. '               ' → logprob: -15.126755714416504
    10. '        
' → logprob: -16.12675666809082

Token 491: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8325461149215698
    2. 'print' (adapté à ' print') → logprob: -0.8325461149215698
    3. '           ' → logprob: -2.0825462341308594
    4. ' print' → logprob: -5.207546234130859
    5. '	print' → logprob: -11.20754623413086
    6. '	       ' → logprob: -11.83254623413086
    7. '               ' → logprob: -12.45754623413086
    8. '```' → logprob: -13.20754623413086
    9. '   ' → logprob: -13.70754623413086
    10. '         ' → logprob: -13.95754623413086

Token 492: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0012433248339220881
    2. '(' → logprob: -6.7512431144714355
    3. '('' → logprob: -9.751243591308594
    4. '(True' → logprob: -11.251243591308594
    5. '("#' → logprob: -14.876243591308594
    6. '(f' → logprob: -15.001243591308594
    7. '("+' → logprob: -15.626243591308594
    8. '"' → logprob: -16.001243591308594
    9. '("*' → logprob: -16.126243591308594
    10. '(":' → logprob: -16.501243591308594

Token 493: 'YES' (ID: 31958)
  Prédit: 'INS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INS' → logprob: -0.646941065788269
    2. 'YES' → logprob: -1.021941065788269
    3. 'Inside' → logprob: -2.8969411849975586
    4. 'Yes' → logprob: -3.7719411849975586
    5. 'O' → logprob: -5.396941184997559
    6. 'IN' → logprob: -5.396941184997559
    7. 'Oui' → logprob: -5.396941184997559
    8. 'True' → logprob: -5.521941184997559
    9. 'INTER' → logprob: -5.521941184997559
    10. 'true' → logprob: -5.771941184997559

Token 494: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0031892398837953806
    2. '")
' → logprob: -5.7531890869140625
    3. ')' → logprob: -11.503189086914062
    4. '")
' → logprob: -14.378189086914062
    5. ' ")' → logprob: -14.628189086914062
    6. ')")' → logprob: -15.753189086914062
    7. '");' → logprob: -16.378189086914062
    8. '')' → logprob: -16.628189086914062
    9. '"' → logprob: -16.628189086914062
    10. '")

' → logprob: -16.878189086914062

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027795585338026285
    2. 'else' → logprob: -6.002779483795166
    3. ' else' → logprob: -8.127779960632324
    4. '      ' → logprob: -12.752779960632324
    5. '   ' → logprob: -13.877779960632324
    6. '<|end|>' → logprob: -13.877779960632324
    7. '	' → logprob: -14.252779960632324
    8. 'elif' → logprob: -14.877779960632324
    9. '	else' → logprob: -14.877779960632324
    10. '        ' → logprob: -14.877779960632324

Token 496: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.095688097178936
    2. 'else' (adapté à ' else') → logprob: -2.5956881046295166
    3. ' else' → logprob: -4.0956878662109375
    4. '	' → logprob: -12.220687866210938
    5. '	else' → logprob: -12.470687866210938
    6. '   ' → logprob: -13.470687866210938
    7. '```' → logprob: -14.220687866210938
    8. '      ' → logprob: -14.470687866210938
    9. ' ' → logprob: -14.845687866210938
    10. '           ' → logprob: -14.845687866210938

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011144968448206782
    2. ':
' → logprob: -7.251114368438721
    3. ' :' → logprob: -8.501114845275879
    4. '       ' → logprob: -9.126114845275879
    5. '           ' → logprob: -9.876114845275879
    6. '   ' → logprob: -10.626114845275879
    7. '{' → logprob: -12.251114845275879
    8. '):' → logprob: -12.876114845275879
    9. ' :
' → logprob: -13.626114845275879
    10. '      ' → logprob: -14.126114845275879

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014390426222234964
    2. ' print' → logprob: -6.626439094543457
    3. 'print' → logprob: -9.501439094543457
    4. '       ' → logprob: -11.251439094543457
    5. '	       ' → logprob: -11.751439094543457
    6. '               ' → logprob: -12.001439094543457
    7. '		' → logprob: -12.626439094543457
    8. ' ' → logprob: -13.126439094543457
    9. '          ' → logprob: -13.876439094543457
    10. '   ' → logprob: -14.001439094543457

Token 499: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20163357257843018
    2. 'print' (adapté à ' print') → logprob: -1.7016335725784302
    3. '           ' → logprob: -8.45163345336914
    4. '(print' → logprob: -13.20163345336914
    5. '       ' → logprob: -13.45163345336914
    6. '            ' → logprob: -13.57663345336914
    7. '	print' → logprob: -14.07663345336914
    8. '"' → logprob: -14.45163345336914
    9. '        ' → logprob: -15.20163345336914
    10. '.print' → logprob: -15.70163345336914

Token 500: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00317783304490149
    2. '(' → logprob: -5.753177642822266
    3. '(
' → logprob: -16.003177642822266
    4. '('' → logprob: -17.003177642822266
    5. '("""' → logprob: -18.003177642822266
    6. '(""' → logprob: -19.378177642822266
    7. '("("' → logprob: -19.878177642822266
    8. '("")' → logprob: -19.878177642822266
    9. ' ("' → logprob: -20.003177642822266
    10. '(("' → logprob: -20.378177642822266

Token 501: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: 0.0
    2. ' NO' → logprob: -17.75
    3. '"No' → logprob: -20.25
    4. '"' → logprob: -20.5
    5. 'N' → logprob: -21.25
    6. '"N' → logprob: -22.625
    7. 'NOT' → logprob: -23.125
    8. 'No' → logprob: -23.5
    9. '_NO' → logprob: -23.75
    10. '   ' → logprob: -24.125

Token 502: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.029768308624625206
    2. ')' → logprob: -3.529768228530884
    3. ')")' → logprob: -11.404767990112305
    4. '()' → logprob: -12.654767990112305
    5. '")
' → logprob: -13.779767990112305
    6. '')' → logprob: -14.029767990112305
    7. '}")' → logprob: -14.779767990112305
    8. '```' → logprob: -15.029767990112305
    9. ' ")' → logprob: -15.529767990112305
    10. '"' → logprob: -15.779767990112305

Token 503: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008495326619595289
    2. '
' → logprob: -7.375849723815918
    3. '<|end|>' → logprob: -9.125849723815918
    4. ' if' → logprob: -9.875849723815918
    5. '```' → logprob: -9.875849723815918
    6. '\n' → logprob: -11.875849723815918
    7. '\' → logprob: -13.500849723815918
    8. '#' → logprob: -13.750849723815918
    9. '  
' → logprob: -14.875849723815918
    10. '

' → logprob: -15.000849723815918

Token 504: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00890609622001648
    2. '__' → logprob: -4.75890588760376
    3. '_' → logprob: -8.258906364440918
    4. ' ' → logprob: -11.508906364440918
    5. ' _' → logprob: -11.758906364440918
    6. '_name' → logprob: -12.258906364440918
    7. ' ' → logprob: -12.758906364440918
    8. '___' → logprob: -13.008906364440918
    9. ' ___' → logprob: -13.383906364440918
    10. ' ​' → logprob: -14.133906364440918

Token 505: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012468801811337471
    2. '.__' → logprob: -5.1374688148498535
    3. '==' → logprob: -6.3874688148498535
    4. ' ==' → logprob: -6.5124688148498535
    5. '__.' → logprob: -6.6374688148498535
    6. '__.__' → logprob: -6.7624688148498535
    7. ' __' → logprob: -7.8874688148498535
    8. '.' → logprob: -8.637468338012695
    9. '[' → logprob: -9.512468338012695
    10. '_' → logprob: -9.637468338012695

Token 506: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '__.__' → logprob: -14.375000953674316
    3. '==' → logprob: -16.125
    4. '_' → logprob: -16.875
    5. '___' → logprob: -17.125
    6. '____' → logprob: -18.125
    7. '__.' → logprob: -18.375
    8. '__
' → logprob: -18.5
    9. ' __' → logprob: -18.75
    10. '__["' → logprob: -19.0

Token 507: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00015062130114529282
    2. '==' → logprob: -9.125150680541992
    3. ' ==' → logprob: -10.375150680541992
    4. '=="' → logprob: -12.000150680541992
    5. '___' → logprob: -13.250150680541992
    6. '__.__' → logprob: -13.500150680541992
    7. '_' → logprob: -14.875150680541992
    8. '__["' → logprob: -15.500150680541992
    9. '=='' → logprob: -15.750150680541992
    10. '__,' → logprob: -16.250150680541992

Token 508: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006798495072871447
    2. ''' → logprob: -5.006798267364502
    3. ' "__' → logprob: -9.75679874420166
    4. '__' → logprob: -10.63179874420166
    5. ' '__' → logprob: -14.13179874420166
    6. '"name' → logprob: -16.131797790527344
    7. ''"' → logprob: -16.756797790527344
    8. '"user' → logprob: -16.756797790527344
    9. '("__' → logprob: -16.756797790527344
    10. ' "' → logprob: -16.881797790527344

Token 509: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.3464544432936236e-05
    2. '__' → logprob: -10.250043869018555
    3. 'name' → logprob: -12.125043869018555
    4. 'ma' → logprob: -13.500043869018555
    5. '_main' → logprob: -14.875043869018555
    6. 'built' → logprob: -15.000043869018555
    7. 'm' → logprob: -15.250043869018555
    8. ' main' → logprob: -16.000043869018555
    9. 'python' → logprob: -16.750043869018555
    10. 'mp' → logprob: -17.125043869018555

Token 510: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.029773399233818054
    2. '__' → logprob: -3.529773473739624
    3. '__':
' → logprob: -10.779773712158203
    4. '__["' → logprob: -14.029773712158203
    5. '__.' → logprob: -14.279773712158203
    6. '__.__' → logprob: -14.654773712158203
    7. '__",' → logprob: -16.904773712158203
    8. '__:' → logprob: -17.029773712158203
    9. '__("' → logprob: -17.154773712158203
    10. '_' → logprob: -17.529773712158203

Token 511: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6181031465530396
    2. ' main' → logprob: -0.8681031465530396
    3. '	main' → logprob: -3.61810302734375
    4. '   ' → logprob: -4.24310302734375
    5. '_main' → logprob: -9.61810302734375
    6. '(main' → logprob: -12.11810302734375
    7. '    
' → logprob: -12.24310302734375
    8. ' ' → logprob: -12.61810302734375
    9. '  ' → logprob: -12.86810302734375
    10. '   ' → logprob: -13.36810302734375

Token 512: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. '	main' → logprob: -21.00000762939453
    4. '   ' → logprob: -22.75000762939453
    5. '.main' → logprob: -25.75000762939453
    6. '(main' → logprob: -26.37500762939453
    7. '_main' → logprob: -26.50000762939453
    8. 'ma' → logprob: -27.75000762939453
    9. ' ' → logprob: -27.87500762939453
    10. 'Main' → logprob: -28.00000762939453

Token 513: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 511
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 267
Tokens correctement prédits (top 10): 420
Précision stricte (1ère position): 50.68%
Précision adaptée (1ère position): 52.25%
Précision (top 10): 82.19%
================================================================================
