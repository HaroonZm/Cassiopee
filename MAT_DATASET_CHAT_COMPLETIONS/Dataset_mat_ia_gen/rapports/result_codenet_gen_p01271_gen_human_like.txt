================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def solve():
    while True:
        W, H = map(int, input().split())
        if W == 0 and H == 0:
            break

        roomL = []
        roomR = []
        for _ in range(H):
            l, r = input().split()
            roomL.append(list(l))
            roomR.append(list(r))

        # Find initial positions and goals
        startL = None
        startR = None
        goalL = None
        goalR = None
        for y in range(H):
            for x in range(W):
                cL = roomL[y][x]
                cR = roomR[y][x]
                if cL == 'L':
                    startL = (y,x)
                    roomL[y][x] = '.'
                elif cL == '%':
                    goalL = (y,x)
                if cR == 'R':
                    startR = (y,x)
                    roomR[y][x] = '.'
                elif cR == '%':
                    goalR = (y,x)

        # BFS over states: (posL, posR)
        # moves: N S E W
        moves = [(-1,0),(1,0),(0,-1),(0,1)]

        visited = set()
        queue = deque()
        queue.append( (startL, startR) )
        visited.add( (startL, startR) )

        def is_open(room, y, x):
            return 0 <= y < H and 0 <= x < W and room[y][x] != '#'

        can_open = False
        while queue:
            (ly, lx), (ry, rx) = queue.popleft()

            if (ly, lx) == goalL and (ry, rx) == goalR:
                can_open = True
                break

            for dy, dx in moves:
                nly, nlx = ly + dy, lx + dx
                nry, nrx = ry + dy, rx + dx

                # For left room, if next cell is wall or outside, Len stays
                if not is_open(roomL, nly, nlx):
                    nly, nlx = ly, lx
                # For right room, similar for Rin
                if not is_open(roomR, nry, nrx):
                    nry, nrx = ry, rx

                next_state = ((nly, nlx), (nry, nrx))
                if next_state not in visited:
                    visited.add(next_state)
                    queue.append(next_state)

        print("Yes" if can_open else "No")

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.0524399280548096
    2. 'deque' → logprob: -1.3024399280548096
    3. ' defaultdict' → logprob: -1.4274399280548096
    4. ' abc' → logprob: -2.9274399280548096
    5. 'default' → logprob: -2.9274399280548096
    6. 'Counter' → logprob: -4.4274396896362305
    7. ' deque' → logprob: -4.5524396896362305
    8. ' Counter' → logprob: -5.5524396896362305
    9. 'named' → logprob: -6.1774396896362305
    10. '```' → logprob: -6.4274396896362305

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22112730145454407
    2. '(' → logprob: -2.3461272716522217
    3. 'a' → logprob: -2.8461272716522217
    4. ' ' → logprob: -4.846127510070801
    5. '[' → logprob: -5.346127510070801
    6. 'q' → logprob: -5.346127510070801
    7. 'b' → logprob: -5.471127510070801
    8. '`' → logprob: -5.596127510070801
    9. '.' → logprob: -6.096127510070801
    10. ',' → logprob: -6.346127510070801

Token 6: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008024984039366245
    2. ' bfs' → logprob: -5.633025169372559
    3. ' deque' → logprob: -6.383025169372559
    4. ' ' → logprob: -7.508025169372559
    5. ' queue' → logprob: -8.258025169372559
    6. ' de' → logprob: -8.383025169372559
    7. ' space' → logprob: -8.758025169372559
    8. ' a' → logprob: -8.883025169372559
    9. ' breadth' → logprob: -9.008025169372559
    10. ' create' → logprob: -9.008025169372559

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007942321710288525
    2. '```' → logprob: -5.507942199707031
    3. '_' → logprob: -6.507942199707031
    4. ':' → logprob: -7.257942199707031
    5. '():' → logprob: -7.382942199707031
    6. '(:' → logprob: -7.757942199707031
    7. ' (' → logprob: -9.257942199707031
    8. '(`' → logprob: -9.632942199707031
    9. '(line' → logprob: -10.382942199707031
    10. '(":' → logprob: -10.507942199707031

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07870557904243469
    2. '    
' → logprob: -3.7037055492401123
    3. '```' → logprob: -3.7037055492401123
    4. '\' → logprob: -5.328705787658691
    5. '    ' → logprob: -5.578705787658691
    6. '\n' → logprob: -5.703705787658691
    7. 'n' → logprob: -6.078705787658691
    8. '`' → logprob: -6.078705787658691
    9. 'input' → logprob: -6.828705787658691
    10. ' 
' → logprob: -6.953705787658691

Token 9: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0528502464294434
    2. ' n' → logprob: -1.5528502464294434
    3. ' queue' → logprob: -1.8028502464294434
    4. 'q' → logprob: -2.3028502464294434
    5. 'queue' → logprob: -2.6778502464294434
    6. '   ' → logprob: -2.6778502464294434
    7. ' q' → logprob: -4.552850246429443
    8. 'd' → logprob: -5.052850246429443
    9. 'input' → logprob: -5.552850246429443
    10. ' input' → logprob: -5.927850246429443

Token 10: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0008496518130414188
    2. ' ' → logprob: -7.375849723815918
    3. ' not' → logprob: -8.875849723815918
    4. 'True' → logprob: -9.500849723815918
    5. '  ' → logprob: -12.375849723815918
    6. ' input' → logprob: -13.125849723815918
    7. '(True' → logprob: -14.000849723815918
    8. ' ' → logprob: -15.125849723815918
    9. ' a' → logprob: -15.375849723815918
    10. ' (' → logprob: -15.625849723815918

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003817533841356635
    2. '():' → logprob: -6.003817558288574
    3. ' :' → logprob: -7.003817558288574
    4. '       ' → logprob: -8.503817558288574
    5. '   ' → logprob: -9.503817558288574
    6. '):' → logprob: -9.878817558288574
    7. ':
' → logprob: -10.378817558288574
    8. ':**' → logprob: -10.503817558288574
    9. '    ' → logprob: -11.503817558288574
    10. ' ():' → logprob: -11.628817558288574

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011879968456923962
    2. '   ' → logprob: -5.011879920959473
    3. '    ' → logprob: -5.636879920959473
    4. ' ' → logprob: -7.511879920959473
    5. '        
' → logprob: -8.011879920959473
    6. '<|end|>' → logprob: -8.386879920959473
    7. '      ' → logprob: -9.511879920959473
    8. '        ' → logprob: -9.761879920959473
    9. '     ' → logprob: -9.886879920959473
    10. '  ' → logprob: -10.011879920959473

Token 13: ' W' (ID: 486)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.21461166441440582
    2. 'line' → logprob: -2.339611768722534
    3. '   ' → logprob: -2.464611768722534
    4. ' try' → logprob: -5.839611530303955
    5. 'n' → logprob: -6.589611530303955
    6. 'try' → logprob: -6.714611530303955
    7. ' n' → logprob: -6.839611530303955
    8. 'data' → logprob: -6.839611530303955
    9. '```' → logprob: -6.839611530303955
    10. ' inp' → logprob: -7.589611530303955

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5884547829627991
    2. ',' → logprob: -0.9634547829627991
    3. '=' → logprob: -2.8384547233581543
    4. ' ,' → logprob: -6.713454723358154
    5. ' ' → logprob: -7.213454723358154
    6. 'idth' → logprob: -7.338454723358154
    7. '=input' → logprob: -7.588454723358154
    8. '   ' → logprob: -7.713454723358154
    9. ' ==' → logprob: -8.338455200195312
    10. ' >' → logprob: -8.588455200195312

Token 15: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03371359407901764
    2. ' H' → logprob: -3.7837135791778564
    3. 'L' → logprob: -4.6587138175964355
    4. 'D' → logprob: -7.1587138175964355
    5. ' L' → logprob: -9.158713340759277
    6. ' D' → logprob: -11.533713340759277
    7. ')' → logprob: -12.533713340759277
    8. '_H' → logprob: -12.596213340759277
    9. '```' → logprob: -12.846213340759277
    10. 'E' → logprob: -12.846213340759277

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759574174880981
    2. '=' → logprob: -0.8259574174880981
    3. '=input' → logprob: -11.075957298278809
    4. ',' → logprob: -14.075957298278809
    5. '=line' → logprob: -14.700957298278809
    6. ')' → logprob: -15.325957298278809
    7. '=int' → logprob: -15.825957298278809
    8. '    ' → logprob: -15.825957298278809
    9. ' ' → logprob: -16.200958251953125
    10. '＝' → logprob: -16.575958251953125

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1002453863620758
    2. 'map' → logprob: -2.350245475769043
    3. ' input' → logprob: -11.225245475769043
    4. 'input' → logprob: -11.475245475769043
    5. '(map' → logprob: -12.350245475769043
    6. ' ' → logprob: -12.725245475769043
    7. ' list' → logprob: -13.100245475769043
    8. '[' → logprob: -13.475245475769043
    9. '   ' → logprob: -13.600245475769043
    10. '	map' → logprob: -13.725245475769043

Token 18: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5309696793556213
    2. '(int' → logprob: -1.2809696197509766
    3. '(' → logprob: -2.0309696197509766
    4. '(str' → logprob: -5.905969619750977
    5. '(lambda' → logprob: -8.405969619750977
    6. 'input' → logprob: -11.280969619750977
    7. '(
' → logprob: -12.030969619750977
    8. '(list' → logprob: -12.030969619750977
    9. '(eval' → logprob: -12.155969619750977
    10. ' input' → logprob: -13.030969619750977

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10914967954158783
    2. 'input' → logprob: -2.734149694442749
    3. ')' → logprob: -3.859149694442749
    4. ',input' → logprob: -4.73414945602417
    5. '(' → logprob: -5.48414945602417
    6. ',' → logprob: -5.73414945602417
    7. ' input' → logprob: -7.10914945602417
    8. '=input' → logprob: -8.609149932861328
    9. '()' → logprob: -10.359149932861328
    10. '<input' → logprob: -10.359149932861328

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687434792518616
    2. ' input' → logprob: -1.1368743181228638
    3. ')' → logprob: -13.761874198913574
    4. '	input' → logprob: -14.136874198913574
    5. '(input' → logprob: -14.261874198913574
    6. '=input' → logprob: -14.511874198913574
    7. ',input' → logprob: -15.636874198913574
    8. '<input' → logprob: -16.63687515258789
    9. ' ' → logprob: -17.13687515258789
    10. '```' → logprob: -17.38687515258789

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -14.875004768371582
    4. '())' → logprob: -15.750004768371582
    5. '(' → logprob: -17.2500057220459
    6. ')' → logprob: -17.5000057220459
    7. '()))' → logprob: -17.6250057220459
    8. '()
' → logprob: -17.7500057220459
    9. '('').' → logprob: -18.8750057220459
    10. '("").' → logprob: -19.0000057220459

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015166497323662043
    2. 'strip' → logprob: -6.501516819000244
    3. 'rstrip' → logprob: -11.251516342163086
    4. '().' → logprob: -14.626516342163086
    5. ')' → logprob: -15.001516342163086
    6. 'read' → logprob: -15.126516342163086
    7. '(split' → logprob: -16.001516342163086
    8. ' split' → logprob: -16.001516342163086
    9. '.readline' → logprob: -17.126516342163086
    10. '.split' → logprob: -17.251516342163086

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3197014033794403
    2. ')' → logprob: -1.4447014331817627
    3. '))' → logprob: -4.069701194763184
    4. '()))' → logprob: -4.319701194763184
    5. '()' → logprob: -4.944701194763184
    6. '('' → logprob: -8.819701194763184
    7. '(' → logprob: -9.944701194763184
    8. '())
' → logprob: -10.569701194763184
    9. '()),' → logprob: -10.569701194763184
    10. '),' → logprob: -10.944701194763184

Token 24: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6783465147018433
    2. ' if' → logprob: -1.0533465147018433
    3. 'if' (adapté à ' if') → logprob: -2.303346633911133
    4. '<|end|>' → logprob: -3.928346633911133
    5. ' ' → logprob: -4.053346633911133
    6. '        ' → logprob: -5.303346633911133
    7. '        
' → logprob: -7.928346633911133
    8. '```' → logprob: -8.678346633911133
    9. ')' → logprob: -8.803346633911133
    10. '  ' → logprob: -8.928346633911133

Token 26: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.001706367009319365
    2. 'W' → logprob: -6.376706600189209
    3. ' not' → logprob: -13.00170612335205
    4. ' ' → logprob: -13.75170612335205
    5. ' (' → logprob: -14.37670612335205
    6. '(' → logprob: -15.75170612335205
    7. '	W' → logprob: -16.751707077026367
    8. 'not' → logprob: -17.126707077026367
    9. '   ' → logprob: -17.126707077026367
    10. '  ' → logprob: -17.501707077026367

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08899835497140884
    2. '==' → logprob: -2.463998317718506
    3. '=' → logprob: -10.588998794555664
    4. ' ' → logprob: -11.963998794555664
    5. ')' → logprob: -12.088998794555664
    6. ' =' → logprob: -12.338998794555664
    7. '```' → logprob: -12.338998794555664
    8. '<|end|>' → logprob: -12.838998794555664
    9. '0' → logprob: -12.963998794555664
    10. ' <=' → logprob: -12.963998794555664

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34844663739204407
    2. ' ' → logprob: -1.2234466075897217
    3. '  ' → logprob: -14.3484468460083
    4. ' ' → logprob: -14.9734468460083
    5. '   ' → logprob: -14.9734468460083
    6. ' H' → logprob: -15.2234468460083
    7. '۰' → logprob: -15.7234468460083
    8. 'H' → logprob: -15.9109468460083
    9. '```' → logprob: -16.660945892333984
    10. '<|end|>' → logprob: -16.848445892333984

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'H' → logprob: -15.875045776367188
    4. '```' → logprob: -17.000045776367188
    5. '۰' → logprob: -17.125045776367188
    6. '０' → logprob: -17.937545776367188
    7. 'O' → logprob: -19.187545776367188
    8. '00' → logprob: -19.375045776367188
    9. '``' → logprob: -19.437545776367188
    10. '_' → logprob: -19.500045776367188

Token 30: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03808463364839554
    2. 'and' → logprob: -3.2880847454071045
    3. ' or' → logprob: -10.538084983825684
    4. ' ' → logprob: -11.163084983825684
    5. '<|end|>' → logprob: -14.288084983825684
    6. '```' → logprob: -14.788084983825684
    7. '   ' → logprob: -15.163084983825684
    8. '	and' → logprob: -15.163084983825684
    9. '  ' → logprob: -15.288084983825684
    10. '0' → logprob: -15.913084983825684

Token 31: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.00193149340339005
    2. 'H' → logprob: -6.251931667327881
    3. ' ' → logprob: -13.126931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '	H' → logprob: -17.37693214416504
    6. '   ' → logprob: -18.50193214416504
    7. '  ' → logprob: -19.00193214416504
    8. ',H' → logprob: -19.25193214416504
    9. '<|end|>' → logprob: -19.37693214416504
    10. '    ' → logprob: -19.62693214416504

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062275417149066925
    2. '==' → logprob: -2.8122754096984863
    3. '<|end|>' → logprob: -8.687275886535645
    4. ' ' → logprob: -9.937275886535645
    5. '<|end|>' → logprob: -10.437275886535645
    6. ')==' → logprob: -11.062275886535645
    7. ' =' → logprob: -11.687275886535645
    8. '0' → logprob: -11.687275886535645
    9. '=' → logprob: -11.687275886535645
    10. ')' → logprob: -12.187275886535645

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.251502990722656
    4. '  ' → logprob: -17.251502990722656
    5. ' ' → logprob: -17.376502990722656
    6. '       ' → logprob: -17.814002990722656
    7. '<|end|>' → logprob: -17.814002990722656
    8. '```' → logprob: -17.876502990722656
    9. '۰' → logprob: -18.064002990722656
    10. '    ' → logprob: -19.251502990722656

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -16.37520408630371
    4. '۰' → logprob: -17.87520408630371
    5. '   ' → logprob: -18.75020408630371
    6. '<|end|>' → logprob: -19.00020408630371
    7. '  ' → logprob: -19.37520408630371
    8. '```' → logprob: -19.62520408630371
    9. '       ' → logprob: -20.62520408630371
    10. '০' → logprob: -20.75020408630371

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.1928003813372925e-05
    2. ':
' → logprob: -10.250051498413086
    3. ':return' → logprob: -11.375051498413086
    4. '):' → logprob: -13.125051498413086
    5. '       ' → logprob: -13.500051498413086
    6. '   ' → logprob: -14.750051498413086
    7. ',' → logprob: -14.750051498413086
    8. '           ' → logprob: -15.000051498413086
    9. '.' → logprob: -15.375051498413086
    10. ' :' → logprob: -15.500051498413086

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2071145474910736
    2. ':' → logprob: -2.3321144580841064
    3. '       ' → logprob: -2.4571144580841064
    4. '\n' → logprob: -6.0821146965026855
    5. ':
' → logprob: -6.5821146965026855
    6. '   ' → logprob: -8.582114219665527
    7. ' break' → logprob: -9.582114219665527
    8. '
' → logprob: -9.582114219665527
    9. '\' → logprob: -9.957114219665527
    10. ':return' → logprob: -10.082114219665527

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.11853549629449844
    2. '           ' → logprob: -2.4935355186462402
    3. '       ' → logprob: -4.36853551864624
    4. 'break' (adapté à ' break') → logprob: -4.74353551864624
    5. ' return' → logprob: -4.99353551864624
    6. 'return' → logprob: -7.49353551864624
    7. '   ' → logprob: -8.368535041809082
    8. '	break' → logprob: -9.118535041809082
    9. '               ' → logprob: -9.743535041809082
    10. '```' → logprob: -10.993535041809082

Token 38: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07298024743795395
    2. '
' → logprob: -3.5729801654815674
    3. '        
' → logprob: -3.5729801654815674
    4. '<|end|>' → logprob: -5.0729804039001465
    5. '\n' → logprob: -6.5729804039001465
    6. '   ' → logprob: -6.6979804039001465
    7. '    
' → logprob: -6.9479804039001465
    8. ',' → logprob: -7.6979804039001465
    9. '  
' → logprob: -7.8229804039001465
    10. '' → logprob: -7.8229804039001465

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09287432581186295
    2. '        
' → logprob: -2.96787428855896
    3. '
' → logprob: -3.84287428855896
    4. '   ' → logprob: -5.342874526977539
    5. '    
' → logprob: -5.342874526977539
    6. '```' → logprob: -5.467874526977539
    7. '<|end|>' → logprob: -8.092874526977539
    8. '  
' → logprob: -8.592874526977539
    9. '\' → logprob: -8.592874526977539
    10. '\n' → logprob: -8.592874526977539

Token 40: ' room' (ID: 3435)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6888843774795532
    2. 'graph' → logprob: -1.4388843774795532
    3. 'map' → logprob: -2.0638842582702637
    4. ' grid' → logprob: -2.5638842582702637
    5. '       ' → logprob: -3.6888842582702637
    6. ' graph' → logprob: -4.438884258270264
    7. ' map' → logprob: -5.063884258270264
    8. 'maps' → logprob: -5.313884258270264
    9. 'field' → logprob: -5.813884258270264
    10. '_map' → logprob: -6.313884258270264

Token 41: 'L' (ID: 43)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009450643323361874
    2. '=' → logprob: -5.009450435638428
    3. '_map' → logprob: -6.009450435638428
    4. '_' → logprob: -9.384450912475586
    5. 's' → logprob: -9.759450912475586
    6. '[' → logprob: -10.759450912475586
    7. '   ' → logprob: -10.884450912475586
    8. '[]' → logprob: -11.009450912475586
    9. ' ' → logprob: -11.134450912475586
    10. '_maps' → logprob: -11.134450912475586

Token 42: ' =' (ID: 314)
  Prédit: 'ayout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayout' → logprob: -0.10283580422401428
    2. 'ist' → logprob: -3.2278358936309814
    3. ' =' → logprob: -3.3528358936309814
    4. '=' → logprob: -4.727835655212402
    5. 'and' → logprob: -5.227835655212402
    6. 'ength' → logprob: -5.977835655212402
    7. 'e' → logprob: -6.602835655212402
    8. 'abel' → logprob: -7.102835655212402
    9. 'og' → logprob: -7.227835655212402
    10. ',' → logprob: -7.852835655212402

Token 43: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1597013622522354
    2. '[]' → logprob: -2.659701347351074
    3. ' [' → logprob: -2.784701347351074
    4. '[list' → logprob: -5.034701347351074
    5. '[input' → logprob: -5.284701347351074
    6. '[[' → logprob: -6.659701347351074
    7. ' []' → logprob: -6.784701347351074
    8. '[int' → logprob: -7.534701347351074
    9. ' [[' → logprob: -8.909701347351074
    10. '[data' → logprob: -9.034701347351074

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03947875276207924
    2. ' for' → logprob: -3.5394787788391113
    3. '<|end|>' → logprob: -5.664478778839111
    4. 'for' → logprob: -5.789478778839111
    5. '	' → logprob: -6.289478778839111
    6. '	for' → logprob: -7.789478778839111
    7. '   ' → logprob: -8.164478302001953
    8. '<|end|>' → logprob: -9.039478302001953
    9. ' ' → logprob: -9.164478302001953
    10. ' ' → logprob: -9.789478302001953

Token 45: ' room' (ID: 3435)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47422584891319275
    2. 'for' → logprob: -0.9742258787155151
    3. '       ' → logprob: -9.099225997924805
    4. '	for' → logprob: -10.849225997924805
    5. '   ' → logprob: -11.474225997924805
    6. '[' → logprob: -12.724225997924805
    7. ' ' → logprob: -13.099225997924805
    8. ' ' → logprob: -14.099225997924805
    9. '\t' → logprob: -15.099225997924805
    10. '	' → logprob: -15.849225997924805

Token 46: 'R' (ID: 49)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3620813190937042
    2. 'L' → logprob: -1.2370812892913818
    3. ' =' → logprob: -4.737081527709961
    4. '=' → logprob: -5.987081527709961
    5. '       ' → logprob: -7.487081527709961
    6. '.extend' → logprob: -7.487081527709961
    7. '=[]' → logprob: -7.987081527709961
    8. '.' → logprob: -8.237081527709961
    9. '_' → logprob: -9.487081527709961
    10. ' +=' → logprob: -9.612081527709961

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3486272394657135
    2. '=' → logprob: -1.2236272096633911
    3. '=[]' → logprob: -8.848627090454102
    4. ' ' → logprob: -10.848627090454102
    5. '   ' → logprob: -11.848627090454102
    6. '[]' → logprob: -12.473627090454102
    7. '[' → logprob: -13.723627090454102
    8. '.append' → logprob: -13.723627090454102
    9. '=[]
' → logprob: -13.723627090454102
    10. '  ' → logprob: -13.848627090454102

Token 48: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.36639630794525146
    2. ' []' → logprob: -1.2413963079452515
    3. 'deque' → logprob: -4.116396427154541
    4. ' deque' → logprob: -7.241396427154541
    5. '[' → logprob: -7.616396427154541
    6. ' [' → logprob: -9.491395950317383
    7. ' ' → logprob: -10.116395950317383
    8. '[][]' → logprob: -10.241395950317383
    9. '[]}' → logprob: -10.616395950317383
    10. '[]
' → logprob: -10.741395950317383

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15603190660476685
    2. ' for' → logprob: -2.406031847000122
    3. 'for' → logprob: -3.781031847000122
    4. '
' → logprob: -4.156032085418701
    5. '<|end|>' → logprob: -4.656032085418701
    6. '[' → logprob: -6.406032085418701
    7. '<|end|>' → logprob: -7.031032085418701
    8. '        
' → logprob: -7.406032085418701
    9. '   ' → logprob: -7.531032085418701
    10. '	' → logprob: -7.656032085418701

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.307114839553833
    2. 'for' (adapté à ' for') → logprob: -1.432114839553833
    3. '       ' → logprob: -3.682114839553833
    4. '   ' → logprob: -8.682114601135254
    5. ' ' → logprob: -9.682114601135254
    6. '	for' → logprob: -10.057114601135254
    7. '\t' → logprob: -10.682114601135254
    8. ' ' → logprob: -11.057114601135254
    9. '[' → logprob: -11.307114601135254
    10. '    ' → logprob: -11.432114601135254

Token 51: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0024700670037418604
    2. '_' → logprob: -6.752470016479492
    3. ' ' → logprob: -6.877470016479492
    4. ' i' → logprob: -8.252470016479492
    5. ' ' → logprob: -12.252470016479492
    6. ' ‌' → logprob: -13.627470016479492
    7. 'i' → logprob: -14.002470016479492
    8. ' ​' → logprob: -15.502470016479492
    9. ' in' → logprob: -15.627470016479492
    10. ' H' → logprob: -15.627470016479492

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015392655041068792
    2. 'in' → logprob: -6.50153923034668
    3. 'range' → logprob: -11.25153923034668
    4. ' ' → logprob: -11.37653923034668
    5. 'n' → logprob: -12.25153923034668
    6. 'i' → logprob: -12.75153923034668
    7. 'import' → logprob: -14.37653923034668
    8. '_' → logprob: -14.50153923034668
    9. '```' → logprob: -14.62653923034668
    10. ' _' → logprob: -14.87653923034668

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018244501552544534
    2. ' range' → logprob: -8.625182151794434
    3. '(range' → logprob: -13.500182151794434
    4. ')' → logprob: -14.125182151794434
    5. 'room' → logprob: -15.500182151794434
    6. '	range' → logprob: -15.500182151794434
    7. 'rang' → logprob: -16.25018310546875
    8. 'input' → logprob: -17.12518310546875
    9. '_range' → logprob: -17.37518310546875
    10. '```' → logprob: -17.50018310546875

Token 54: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00032640635618008673
    2. '(' → logprob: -8.500326156616211
    3. ' (' → logprob: -9.875326156616211
    4. ' H' → logprob: -10.375326156616211
    5. '(W' → logprob: -10.875326156616211
    6. 'H' → logprob: -10.875326156616211
    7. '(int' → logprob: -14.000326156616211
    8. '   ' → logprob: -15.000326156616211
    9. '	H' → logprob: -15.250326156616211
    10. '(I' → logprob: -16.00032615661621

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0342414453625679
    2. '):
' → logprob: -3.4092414379119873
    3. '   ' → logprob: -8.784241676330566
    4. '):
' → logprob: -8.909241676330566
    5. ')' → logprob: -9.034241676330566
    6. '       ' → logprob: -9.284241676330566
    7. ' ):' → logprob: -9.909241676330566
    8. ':' → logprob: -10.409241676330566
    9. '+' → logprob: -12.784241676330566
    10. '```' → logprob: -13.159241676330566

Token 56: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.151863694190979
    2. '           ' → logprob: -1.651863694190979
    3. '<|end|>' → logprob: -1.651863694190979
    4. ' ' → logprob: -2.0268635749816895
    5. '   ' → logprob: -2.1518635749816895
    6. '<|end|>' → logprob: -3.6518635749816895
    7. '    ' → logprob: -5.0268635749816895
    8. '        ' → logprob: -6.0268635749816895
    9. '```' → logprob: -6.0268635749816895
    10. '	   ' → logprob: -6.4018635749816895

Token 57: ' l' (ID: 305)
  Prédit: ' room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.2503550052642822
    2. ' row' → logprob: -1.7503550052642822
    3. ' line' → logprob: -3.1253550052642822
    4. 'room' → logprob: -6.625354766845703
    5. 'row' → logprob: -7.375354766845703
    6. ' s' → logprob: -7.875354766845703
    7. 'line' → logprob: -8.000354766845703
    8. ' left' → logprob: -8.500354766845703
    9. ' data' → logprob: -8.750354766845703
    10. ' lst' → logprob: -9.125354766845703

Token 58: ',' (ID: 11)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0010166140273213387
    2. 'line' → logprob: -8.001016616821289
    3. 'ines' → logprob: -8.126016616821289
    4. 'ist' → logprob: -9.626016616821289
    5. 'e' → logprob: -9.751016616821289
    6. '_line' → logprob: -10.001016616821289
    7. 'inea' → logprob: -10.376016616821289
    8. 'l' → logprob: -10.501016616821289
    9. '   ' → logprob: -10.501016616821289
    10. 'input' → logprob: -10.626016616821289

Token 59: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38700157403945923
    2. ' r' → logprob: -1.1370015144348145
    3. ' ' → logprob: -10.637001991271973
    4. '_' → logprob: -10.887001991271973
    5. '_r' → logprob: -10.887001991271973
    6. '   ' → logprob: -11.387001991271973
    7. 's' → logprob: -11.387001991271973
    8. '  ' → logprob: -11.637001991271973
    9. ' =' → logprob: -12.012001991271973
    10. ' _' → logprob: -12.574501991271973

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20167313516139984
    2. '=' → logprob: -1.701673150062561
    3. ',' → logprob: -8.32667350769043
    4. ' ' → logprob: -11.57667350769043
    5. '   ' → logprob: -13.07667350769043
    6. '=input' → logprob: -13.57667350769043
    7. '  ' → logprob: -14.20167350769043
    8. '    ' → logprob: -14.32667350769043
    9. '_' → logprob: -14.70167350769043
    10. '=line' → logprob: -14.82667350769043

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8044406175613403
    2. 'input' → logprob: -1.1794406175613403
    3. ' map' → logprob: -1.9294406175613403
    4. 'map' → logprob: -2.304440498352051
    5. ' list' → logprob: -9.42944049835205
    6. 'list' → logprob: -9.55444049835205
    7. ' ' → logprob: -11.92944049835205
    8. '   ' → logprob: -12.17944049835205
    9. '	map' → logprob: -13.80444049835205
    10. '  ' → logprob: -14.17944049835205

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1318875446449965e-05
    2. '()' → logprob: -10.125041007995605
    3. ' ().' → logprob: -14.250041007995605
    4. '.split' → logprob: -15.750041007995605
    5. ')' → logprob: -16.125041961669922
    6. '(' → logprob: -16.125041961669922
    7. 's' → logprob: -16.500041961669922
    8. '.' → logprob: -16.625041961669922
    9. '())' → logprob: -17.500041961669922
    10. '()
' → logprob: -17.875041961669922

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011474833445390686
    2. 'strip' → logprob: -9.250114440917969
    3. 'rstrip' → logprob: -11.000114440917969
    4. ' split' → logprob: -13.375114440917969
    5. 'rs' → logprob: -15.125114440917969
    6. 'spl' → logprob: -16.25011444091797
    7. '(split' → logprob: -17.00011444091797
    8. 's' → logprob: -18.50011444091797
    9. 'plit' → logprob: -19.37511444091797
    10. '.split' → logprob: -19.75011444091797

Token 64: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00081963452976197
    2. '())' → logprob: -8.000819206237793
    3. '(' → logprob: -8.375819206237793
    4. '()
' → logprob: -9.000819206237793
    5. ')' → logprob: -9.750819206237793
    6. '('' → logprob: -10.125819206237793
    7. '(),' → logprob: -11.500819206237793
    8. '()`' → logprob: -12.250819206237793
    9. '(',' → logprob: -12.500819206237793
    10. '()]' → logprob: -13.125819206237793

Token 65: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' room' (ID: 3435)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002664361847564578
    2. '<|end|>' → logprob: -6.502664566040039
    3. ' room' → logprob: -7.752664566040039
    4. 'room' (adapté à ' room') → logprob: -7.877664566040039
    5. ' ' → logprob: -9.127664566040039
    6. '<|end|>' → logprob: -9.502664566040039
    7. '       ' → logprob: -10.252664566040039
    8. '          ' → logprob: -10.252664566040039
    9. ',' → logprob: -10.377664566040039
    10. '   ' → logprob: -11.252664566040039

Token 67: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.320199877838604e-07
    2. 'R' → logprob: -15.625
    3. ' L' → logprob: -16.125
    4. '[' → logprob: -16.875
    5. 'l' → logprob: -18.0
    6. '-' → logprob: -18.375
    7. '   ' → logprob: -18.625
    8. '       ' → logprob: -18.625
    9. '.' → logprob: -18.75
    10. 'LObject' → logprob: -18.75

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006305903079919517
    2. '.' → logprob: -7.3756303787231445
    3. '.extend' → logprob: -13.500630378723145
    4. '.setdefault' → logprob: -14.000630378723145
    5. ' .' → logprob: -14.375630378723145
    6. '           ' → logprob: -14.625630378723145
    7. '       ' → logprob: -15.500630378723145
    8. ').' → logprob: -16.00063133239746
    9. 'append' → logprob: -16.37563133239746
    10. '.app' → logprob: -16.50063133239746

Token 69: '(list' (ID: 13116)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0011577237164601684
    2. '(' → logprob: -6.876157760620117
    3. '(list' → logprob: -9.751157760620117
    4. '(int' → logprob: -10.251157760620117
    5. '((' → logprob: -11.126157760620117
    6. '(r' → logprob: -11.751157760620117
    7. '(str' → logprob: -12.876157760620117
    8. '(len' → logprob: -13.376157760620117
    9. '(line' → logprob: -14.626157760620117
    10. '(i' → logprob: -14.626157760620117

Token 70: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.008476993069052696
    2. '(map' → logprob: -4.883477210998535
    3. '(' → logprob: -7.508477210998535
    4. '(r' → logprob: -8.133477210998535
    5. ')' → logprob: -10.883477210998535
    6. '(str' → logprob: -13.258477210998535
    7. 'map' → logprob: -13.508477210998535
    8. '('' → logprob: -13.758477210998535
    9. ')(' → logprob: -13.883477210998535
    10. '(list' → logprob: -14.508477210998535

Token 71: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16193483769893646
    2. '))
' → logprob: -1.9119348526000977
    3. '))
' → logprob: -7.536934852600098
    4. ')' → logprob: -8.036934852600098
    5. '()))' → logprob: -8.411934852600098
    6. '()))
' → logprob: -8.911934852600098
    7. ' ))' → logprob: -8.911934852600098
    8. '           ' → logprob: -9.286934852600098
    9. ' ))
' → logprob: -9.411934852600098
    10. '.strip' → logprob: -9.536934852600098

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018458699923940003
    2. '       ' → logprob: -9.375185012817383
    3. ')' → logprob: -10.250185012817383
    4. '               ' → logprob: -10.750185012817383
    5. '<|end|>' → logprob: -11.125185012817383
    6. '          ' → logprob: -11.375185012817383
    7. '   ' → logprob: -12.250185012817383
    8. ',' → logprob: -13.000185012817383
    9. '         ' → logprob: -13.375185012817383
    10. '```' → logprob: -13.625185012817383

Token 73: ' room' (ID: 3435)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5051568746566772
    2. 'room' (adapté à ' room') → logprob: -1.5051568746566772
    3. ' room' → logprob: -1.7551568746566772
    4. '       ' → logprob: -7.755156993865967
    5. 'list' → logprob: -7.880156993865967
    6. '          ' → logprob: -8.255156517028809
    7. 'r' → logprob: -8.630156517028809
    8. ' list' → logprob: -8.755156517028809
    9. '   ' → logprob: -8.880156517028809
    10. '               ' → logprob: -9.755156517028809

Token 74: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.088346359931165e-07
    2. 'L' → logprob: -14.750000953674316
    3. ' R' → logprob: -15.625000953674316
    4. '.' → logprob: -16.375
    5. '[' → logprob: -16.5
    6. 'r' → logprob: -17.125
    7. 'Right' → logprob: -17.125
    8. '           ' → logprob: -17.25
    9. '                   ' → logprob: -17.875
    10. '.append' → logprob: -18.375

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.08944896562025e-05
    2. '.' → logprob: -9.625081062316895
    3. '.extend' → logprob: -11.250081062316895
    4. ').' → logprob: -14.000081062316895
    5. 'append' → logprob: -15.125081062316895
    6. '.app' → logprob: -15.125081062316895
    7. ' .' → logprob: -16.375080108642578
    8. '.setdefault' → logprob: -16.500080108642578
    9. '.Append' → logprob: -17.125080108642578
    10. '.add' → logprob: -17.250080108642578

Token 76: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -1.6240566083070007e-06
    2. 'list' → logprob: -14.000001907348633
    3. '(' → logprob: -14.250001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '=list' → logprob: -18.250001907348633
    6. '(tuple' → logprob: -19.000001907348633
    7. ')(' → logprob: -19.500001907348633
    8. '```' → logprob: -19.750001907348633
    9. '(lista' → logprob: -19.875001907348633
    10. ' list' → logprob: -19.875001907348633

Token 77: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.229872087715194e-05
    2. ')' → logprob: -10.125061988830566
    3. '(' → logprob: -11.000061988830566
    4. ')(' → logprob: -12.250061988830566
    5. ' (' → logprob: -15.000061988830566
    6. 'r' → logprob: -15.500061988830566
    7. ' )' → logprob: -16.250062942504883
    8. '   ' → logprob: -17.375062942504883
    9. '```' → logprob: -17.375062942504883
    10. '(
' → logprob: -18.000062942504883

Token 78: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31327173113822937
    2. '))' → logprob: -1.3132717609405518
    3. ')))' → logprob: -11.688271522521973
    4. ')
' → logprob: -14.813271522521973
    5. ' )' → logprob: -15.313271522521973
    6. '))
' → logprob: -15.313271522521973
    7. '       ' → logprob: -15.563271522521973
    8. ' ))' → logprob: -16.43827247619629
    9. ')}' → logprob: -16.56327247619629
    10. '   ' → logprob: -16.81327247619629

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9241439700126648
    2. '<|end|>' → logprob: -1.0491440296173096
    3. '
' → logprob: -1.4241440296173096
    4. '        
' → logprob: -4.7991437911987305
    5. '<|end|>' → logprob: -6.2991437911987305
    6. '```' → logprob: -7.7991437911987305
    7. '    
' → logprob: -7.7991437911987305
    8. '   ' → logprob: -7.7991437911987305
    9. '\n' → logprob: -8.42414379119873
    10. '            
' → logprob: -9.29914379119873

Token 80: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1360713243484497
    2. 'visited' → logprob: -2.76107120513916
    3. 'dist' → logprob: -3.13607120513916
    4. 'distance' → logprob: -4.63607120513916
    5. '   ' → logprob: -5.26107120513916
    6. 'from' → logprob: -7.26107120513916
    7. 'queue' → logprob: -7.38607120513916
    8. 'def' → logprob: -7.51107120513916
    9. '        
' → logprob: -7.63607120513916
    10. 'dp' → logprob: -7.63607120513916

Token 81: ' Find' (ID: 9764)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8436286449432373
    2. ' directions' → logprob: -1.0936286449432373
    3. ' for' → logprob: -2.5936286449432373
    4. ' #' → logprob: -3.5936286449432373
    5. ' visited' → logprob: -3.7186286449432373
    6. '#' → logprob: -3.8436286449432373
    7. 'visited' → logprob: -4.468628883361816
    8. '<|end|>' → logprob: -4.468628883361816
    9. ' queue' → logprob: -4.593628883361816
    10. '        ' → logprob: -4.968628883361816

Token 82: ' initial' (ID: 4871)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.8368271589279175
    2. 's' → logprob: -1.9618271589279175
    3. ' the' → logprob: -2.086827278137207
    4. 'start' → logprob: -2.211827278137207
    5. '<|end|>' → logprob: -3.461827278137207
    6. ' positions' → logprob: -3.711827278137207
    7. ' entrances' → logprob: -3.711827278137207
    8. ' s' → logprob: -3.836827278137207
    9. ' queue' → logprob: -4.336827278137207
    10. ' entrance' → logprob: -5.211827278137207

Token 83: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.1686702966690063
    2. 'positions' → logprob: -1.4186702966690063
    3. '_positions' → logprob: -1.7936702966690063
    4. 's' → logprob: -2.293670177459717
    5. '_pos' → logprob: -3.043670177459717
    6. 'pos' → logprob: -3.293670177459717
    7. '_' → logprob: -3.793670177459717
    8. '_position' → logprob: -4.918670177459717
    9. 'x' → logprob: -4.918670177459717
    10. 'position' → logprob: -5.043670177459717

Token 84: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11042474955320358
    2. '<|end|>' → logprob: -2.610424757003784
    3. '        
' → logprob: -4.360424518585205
    4. '
' → logprob: -4.860424518585205
    5. ':' → logprob: -5.735424518585205
    6. '<|end|>' → logprob: -6.235424518585205
    7. '```' → logprob: -6.360424518585205
    8. '        ' → logprob: -7.360424518585205
    9. 'n' → logprob: -8.110424995422363
    10. ',' → logprob: -8.110424995422363

Token 85: ' goals' (ID: 11366)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'targets' → logprob: -1.2043476104736328
    2. ' targets' → logprob: -2.329347610473633
    3. 'initialize' → logprob: -2.829347610473633
    4. '#' → logprob: -3.579347610473633
    5. 'goal' → logprob: -3.579347610473633
    6. 'target' → logprob: -3.579347610473633
    7. 'keys' → logprob: -3.704347610473633
    8. 'count' → logprob: -3.829347610473633
    9. 'coins' → logprob: -3.829347610473633
    10. 'positions' → logprob: -3.829347610473633

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5394172668457031
    2. '<|end|>' → logprob: -1.4144172668457031
    3. '       ' → logprob: -1.9144172668457031
    4. '        
' → logprob: -4.289417266845703
    5. '<|end|>' → logprob: -5.664417266845703
    6. '```' → logprob: -5.789417266845703
    7. '\n' → logprob: -6.414417266845703
    8. 'newline' → logprob: -7.039417266845703
    9. ':' → logprob: -7.414417266845703
    10. 'n' → logprob: -7.539417266845703

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06843167543411255
    2. '        
' → logprob: -3.9434316158294678
    3. '
' → logprob: -4.443431854248047
    4. '```' → logprob: -4.443431854248047
    5. '<|end|>' → logprob: -4.943431854248047
    6. 'n' → logprob: -5.318431854248047
    7. '\n' → logprob: -5.818431854248047
    8. '   ' → logprob: -6.193431854248047
    9. ':' → logprob: -7.068431854248047
    10. 'newline' → logprob: -7.318431854248047

Token 88: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35870951414108276
    2. ' l' → logprob: -2.1087095737457275
    3. ' i' → logprob: -2.8587095737457275
    4. ' for' → logprob: -3.8587095737457275
    5. ' positions' → logprob: -3.8587095737457275
    6. '        
' → logprob: -3.9837095737457275
    7. '        ' → logprob: -4.733709335327148
    8. ' L' → logprob: -4.983709335327148
    9. ' left' → logprob: -5.108709335327148
    10. ' s' → logprob: -5.233709335327148

Token 89: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.025159616023302078
    2. '_L' → logprob: -3.9001595973968506
    3. ' =' → logprob: -6.02515983581543
    4. 's' → logprob: -7.02515983581543
    5. '_l' → logprob: -7.02515983581543
    6. '_positions' → logprob: -8.52515983581543
    7. '_pos' → logprob: -9.52515983581543
    8. '=' → logprob: -10.52515983581543
    9. '_' → logprob: -10.77515983581543
    10. '_left' → logprob: -10.90015983581543

Token 90: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17326244711875916
    2. ' =' → logprob: -2.048262357711792
    3. '=' → logprob: -4.548262596130371
    4. '_idx' → logprob: -4.798262596130371
    5. '_pos' → logprob: -5.423262596130371
    6. '_x' → logprob: -5.673262596130371
    7. '_y' → logprob: -7.048262596130371
    8. '_' → logprob: -7.173262596130371
    9. '_positions' → logprob: -8.298262596130371
    10. '_row' → logprob: -8.423262596130371

Token 91: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5540253520011902
    2. ' None' → logprob: -0.9290253520011902
    3. '(' → logprob: -4.429025173187256
    4. '(None' → logprob: -5.179025173187256
    5. ' (' → logprob: -5.304025173187256
    6. '(-' → logprob: -5.554025173187256
    7. ' (-' → logprob: -6.554025173187256
    8. 'start' → logprob: -6.804025173187256
    9. '[]' → logprob: -7.929025173187256
    10. 'next' → logprob: -8.554025650024414

Token 92: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6536431908607483
    2. '<|end|>' → logprob: -1.0286431312561035
    3. '
' → logprob: -3.1536431312561035
    4. ',' → logprob: -3.4036431312561035
    5. 'start' → logprob: -3.7786431312561035
    6. ' for' → logprob: -5.1536431312561035
    7. 'for' → logprob: -5.1536431312561035
    8. '<|end|>' → logprob: -5.5286431312561035
    9. '        ' → logprob: -5.7786431312561035
    10. '        
' → logprob: -7.2786431312561035

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5482915043830872
    2. 'start' → logprob: -0.9232915043830872
    3. ' start' → logprob: -4.1732916831970215
    4. '<|end|>' → logprob: -5.7982916831970215
    5. ',' → logprob: -6.0482916831970215
    6. ',start' → logprob: -6.5482916831970215
    7. '
' → logprob: -7.2982916831970215
    8. '[start' → logprob: -7.5482916831970215
    9. '   ' → logprob: -8.048291206359863
    10. '           ' → logprob: -8.423291206359863

Token 94: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.03863232955336571
    2. ' start' → logprob: -3.288632392883301
    3. '       ' → logprob: -8.2886323928833
    4. 'goal' → logprob: -8.2886323928833
    5. 'end' → logprob: -10.7886323928833
    6. ' goal' → logprob: -10.9136323928833
    7. '   ' → logprob: -11.4136323928833
    8. 'for' → logprob: -11.7886323928833
    9. '           ' → logprob: -12.1636323928833
    10. ' for' → logprob: -12.6636323928833

Token 95: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12693335115909576
    2. 'L' → logprob: -2.1269333362579346
    3. '<|end|>' → logprob: -13.501933097839355
    4. '_R' → logprob: -13.751933097839355
    5. '_' → logprob: -14.001933097839355
    6. ')' → logprob: -14.751933097839355
    7. ' R' → logprob: -14.876933097839355
    8. 's' → logprob: -15.251933097839355
    9. '[' → logprob: -15.501933097839355
    10. 'S' → logprob: -16.376934051513672

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198079511523247
    2. '=' → logprob: -2.811980724334717
    3. '=None' → logprob: -11.311981201171875
    4. '<|end|>' → logprob: -14.561981201171875
    5. ' ' → logprob: -15.686981201171875
    6. ')' → logprob: -16.311981201171875
    7. ' =)' → logprob: -16.311981201171875
    8. ' =
' → logprob: -16.811981201171875
    9. '=[]' → logprob: -16.811981201171875
    10. '＝' → logprob: -17.561981201171875

Token 97: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014166327193379402
    2. ' None' → logprob: -4.264166355133057
    3. '(None' → logprob: -13.514165878295898
    4. '_None' → logprob: -14.389165878295898
    5. 'none' → logprob: -15.514165878295898
    6. '[]' → logprob: -15.764165878295898
    7. '.None' → logprob: -15.764165878295898
    8. '0' → logprob: -16.0141658782959
    9. '=None' → logprob: -16.0141658782959
    10. ' ' → logprob: -16.5141658782959

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08825880289077759
    2. '
' → logprob: -2.838258743286133
    3. '<|end|>' → logprob: -3.713258743286133
    4. '        
' → logprob: -6.963258743286133
    5. '<|end|>' → logprob: -8.713258743286133
    6. ' 
' → logprob: -9.338258743286133
    7. ',' → logprob: -9.463258743286133
    8. ' for' → logprob: -9.963258743286133
    9. ' ' → logprob: -10.213258743286133
    10. '  
' → logprob: -10.338258743286133

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007741317385807633
    2. 'goal' → logprob: -7.750773906707764
    3. '        
' → logprob: -9.500774383544922
    4. ' for' → logprob: -9.625774383544922
    5. '
' → logprob: -9.750774383544922
    6. 'for' → logprob: -10.125774383544922
    7. ' goal' → logprob: -10.875774383544922
    8. ',' → logprob: -10.875774383544922
    9. '_goal' → logprob: -11.500774383544922
    10. '<|end|>' → logprob: -11.500774383544922

Token 100: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.03140512481331825
    2. 'for' → logprob: -4.281404972076416
    3. ' goal' → logprob: -5.031404972076416
    4. '       ' → logprob: -5.031404972076416
    5. 'go' → logprob: -5.781404972076416
    6. ' for' → logprob: -8.156405448913574
    7. 'start' → logprob: -8.531405448913574
    8. 'end' → logprob: -8.531405448913574
    9. ' goals' → logprob: -10.031405448913574
    10. 'exit' → logprob: -10.406405448913574

Token 101: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01791379228234291
    2. ' =' → logprob: -4.142913818359375
    3. '=' → logprob: -6.892913818359375
    4. 'R' → logprob: -7.392913818359375
    5. 's' → logprob: -9.392913818359375
    6. '_' → logprob: -9.517913818359375
    7. '_positions' → logprob: -9.767913818359375
    8. '_indices' → logprob: -12.017913818359375
    9. '=[]' → logprob: -12.642913818359375
    10. '=None' → logprob: -12.767913818359375

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142309367656708
    2. '=' → logprob: -1.7014230489730835
    3. ',' → logprob: -11.826422691345215
    4. '=None' → logprob: -13.576422691345215
    5. '<|end|>' → logprob: -14.576422691345215
    6. ')' → logprob: -14.826422691345215
    7. ' ' → logprob: -15.826422691345215
    8. ' =)' → logprob: -16.57642364501953
    9. '＝' → logprob: -17.20142364501953
    10. 's' → logprob: -17.20142364501953

Token 103: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.38720035552978516
    2. 'None' → logprob: -1.1372003555297852
    3. '(None' → logprob: -8.387200355529785
    4. '[]' → logprob: -9.887200355529785
    5. ' ' → logprob: -11.137200355529785
    6. '=None' → logprob: -11.512200355529785
    7. ' []' → logprob: -11.637200355529785
    8. '_None' → logprob: -12.387200355529785
    9. '0' → logprob: -12.887200355529785
    10. '(' → logprob: -13.137200355529785

Token 104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.674858301877975e-05
    2. '<|end|>' → logprob: -10.250096321105957
    3. ' goal' → logprob: -10.500096321105957
    4. 'goal' → logprob: -10.875096321105957
    5. '   ' → logprob: -12.375096321105957
    6. '(goal' → logprob: -12.625096321105957
    7. '```' → logprob: -13.125096321105957
    8. '        
' → logprob: -13.875096321105957
    9. '           ' → logprob: -14.125096321105957
    10. '_goal' → logprob: -14.125096321105957

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0066091460175812244
    2. ' goal' → logprob: -5.381608963012695
    3. 'goal' → logprob: -6.256608963012695
    4. '(goal' → logprob: -10.631608963012695
    5. '<|end|>' → logprob: -10.756608963012695
    6. '_goal' → logprob: -11.881608963012695
    7. 'Goal' → logprob: -12.381608963012695
    8. '.goal' → logprob: -12.381608963012695
    9. '      ' → logprob: -13.381608963012695
    10. '<|end|>' → logprob: -13.506608963012695

Token 106: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.5769065022468567
    2. ' goal' → logprob: -0.8269065022468567
    3. '       ' → logprob: -6.951906681060791
    4. '.goal' → logprob: -12.826906204223633
    5. '_goal' → logprob: -13.201906204223633
    6. '(goal' → logprob: -13.201906204223633
    7. 'Goal' → logprob: -13.201906204223633
    8. 'None' → logprob: -14.201906204223633
    9. '   ' → logprob: -15.326906204223633
    10. 'go' → logprob: -15.451906204223633

Token 107: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.048597365617752075
    2. 'L' → logprob: -3.0485973358154297
    3. '<|end|>' → logprob: -12.04859733581543
    4. '_' → logprob: -13.17359733581543
    5. '=' → logprob: -14.67359733581543
    6. '_R' → logprob: -14.79859733581543
    7. ')' → logprob: -15.17359733581543
    8. '<|end|>' → logprob: -15.29859733581543
    9. '[' → logprob: -15.42359733581543
    10. ' R' → logprob: -15.67359733581543

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1604771763086319
    2. ' =' → logprob: -1.9104771614074707
    3. '=None' → logprob: -8.285477638244629
    4. '=

' → logprob: -15.285477638244629
    5. '=True' → logprob: -15.410477638244629
    6. ' ' → logprob: -15.910477638244629
    7. '=
' → logprob: -16.535476684570312
    8. '＝' → logprob: -17.160476684570312
    9. 'None' → logprob: -17.285476684570312
    10. ' None' → logprob: -17.535476684570312

Token 109: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004623322281986475
    2. ' None' → logprob: -5.3796234130859375
    3. '(None' → logprob: -13.004623413085938
    4. '=None' → logprob: -14.879623413085938
    5. '_None' → logprob: -15.254623413085938
    6. '0' → logprob: -16.504623413085938
    7. ',None' → logprob: -16.629623413085938
    8. ' ' → logprob: -17.504623413085938
    9. '.None' → logprob: -17.754623413085938
    10. 'none' → logprob: -18.129623413085938

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10810670256614685
    2. '<|end|>' → logprob: -2.7331066131591797
    3. '        
' → logprob: -4.60810661315918
    4. '
' → logprob: -4.85810661315918
    5. ' for' → logprob: -4.98310661315918
    6. '   ' → logprob: -5.10810661315918
    7. '  
' → logprob: -6.60810661315918
    8. ' 
' → logprob: -6.60810661315918
    9. '<|end|>' → logprob: -6.73310661315918
    10. '    
' → logprob: -6.73310661315918

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005784566048532724
    2. ' for' → logprob: -5.380784511566162
    3. 'for' → logprob: -7.630784511566162
    4. '<|end|>' → logprob: -7.755784511566162
    5. '   ' → logprob: -9.25578498840332
    6. '        
' → logprob: -9.38078498840332
    7. '
' → logprob: -10.63078498840332
    8. '<|end|>' → logprob: -11.38078498840332
    9. '```' → logprob: -11.75578498840332
    10. ',' → logprob: -12.63078498840332

Token 112: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22045980393886566
    2. ' for' → logprob: -1.9704598188400269
    3. '       ' → logprob: -2.8454596996307373
    4. '
' → logprob: -8.095459938049316
    5. '   ' → logprob: -10.595459938049316
    6. '	for' → logprob: -11.470459938049316
    7. '        
' → logprob: -12.595459938049316
    8. '```' → logprob: -13.595459938049316
    9. '           ' → logprob: -13.720459938049316
    10. '<|end|>' → logprob: -14.095459938049316

Token 113: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5130049586296082
    2. ' y' → logprob: -1.013005018234253
    3. 'i' → logprob: -3.513005018234253
    4. 'y' → logprob: -4.888004779815674
    5. ' h' → logprob: -7.388004779815674
    6. 'h' → logprob: -9.138005256652832
    7. ' row' → logprob: -9.388005256652832
    8. 'row' → logprob: -11.888005256652832
    9. ' ' → logprob: -12.138005256652832
    10. ' _' → logprob: -12.388005256652832

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036420035175979137
    2. 'in' → logprob: -5.6286420822143555
    3. ',' → logprob: -10.378642082214355
    4. ' ' → logprob: -12.128642082214355
    5. 'range' → logprob: -13.003642082214355
    6. '<|end|>' → logprob: -13.128642082214355
    7. 's' → logprob: -15.253642082214355
    8. ' range' → logprob: -15.378642082214355
    9. 'In' → logprob: -16.25364112854004
    10. '0' → logprob: -16.25364112854004

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -17.750261306762695
    4. '	range' → logprob: -19.750261306762695
    5. '```' → logprob: -19.875261306762695
    6. '   ' → logprob: -21.250261306762695
    7. ')' → logprob: -21.625261306762695
    8. 'rang' → logprob: -22.125261306762695
    9. '
' → logprob: -22.250261306762695
    10. ' ' → logprob: -22.375261306762695

Token 116: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0005622077151201665
    2. 'H' → logprob: -7.5005621910095215
    3. '(' → logprob: -12.00056266784668
    4. ' H' → logprob: -13.12556266784668
    5. '   ' → logprob: -14.87556266784668
    6. ' (' → logprob: -15.12556266784668
    7. '       ' → logprob: -15.62556266784668
    8. '	H' → logprob: -15.75056266784668
    9. '(len' → logprob: -16.25056266784668
    10. '(
' → logprob: -17.25056266784668

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759875178337097
    2. '):
' → logprob: -0.8259875178337097
    3. ':' → logprob: -10.950987815856934
    4. '   ' → logprob: -11.575987815856934
    5. '       ' → logprob: -12.075987815856934
    6. '):
' → logprob: -12.325987815856934
    7. '):

' → logprob: -12.950987815856934
    8. '<|end|>' → logprob: -12.950987815856934
    9. ':
' → logprob: -13.700987815856934
    10. '+' → logprob: -13.700987815856934

Token 118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4770922362804413
    2. '<|end|>' → logprob: -1.3520922660827637
    3. '   ' → logprob: -2.6020922660827637
    4. ' for' → logprob: -4.102092266082764
    5. '           ' → logprob: -4.227092266082764
    6. '<|end|>' → logprob: -4.727092266082764
    7. '	       ' → logprob: -6.102092266082764
    8. '	   ' → logprob: -6.852092266082764
    9. ' ' → logprob: -7.102092266082764
    10. ',' → logprob: -7.727092266082764

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009122061543166637
    2. 'for' (adapté à ' for') → logprob: -5.134121894836426
    3. '   ' → logprob: -5.759121894836426
    4. '       ' → logprob: -11.009121894836426
    5. '	for' → logprob: -11.134121894836426
    6. '           ' → logprob: -13.759121894836426
    7. ' ' → logprob: -13.759121894836426
    8. '```' → logprob: -14.009121894836426
    9. '<|end|>' → logprob: -16.134122848510742
    10. '    ' → logprob: -16.759122848510742

Token 120: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2519468665122986
    2. ' x' → logprob: -1.5019469261169434
    3. '   ' → logprob: -11.501946449279785
    4. ' ' → logprob: -12.376946449279785
    5. '```' → logprob: -13.876946449279785
    6. 'X' → logprob: -15.126946449279785
    7. '	x' → logprob: -15.376946449279785
    8. '  ' → logprob: -15.626946449279785
    9. '       ' → logprob: -15.751946449279785
    10. '    ' → logprob: -15.751946449279785

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14752797782421112
    2. 'in' → logprob: -2.2725279331207275
    3. '<|end|>' → logprob: -3.5225279331207275
    4. '       ' → logprob: -7.022528171539307
    5. ' ' → logprob: -7.022528171539307
    6. '           ' → logprob: -7.272528171539307
    7. '<|end|>' → logprob: -7.397528171539307
    8. '        ' → logprob: -8.272527694702148
    9. '[' → logprob: -8.397527694702148
    10. '               ' → logprob: -8.647527694702148

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5762153267860413
    2. ' range' → logprob: -0.8262153267860413
    3. '(range' → logprob: -8.201215744018555
    4. '	range' → logprob: -14.076215744018555
    5. ' xrange' → logprob: -15.076215744018555
    6. '```' → logprob: -16.326215744018555
    7. '(' → logprob: -16.451215744018555
    8. '.range' → logprob: -16.951215744018555
    9. 'room' → logprob: -16.951215744018555
    10. ' ' → logprob: -17.076215744018555

Token 123: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.05497920513153076
    2. '(H' → logprob: -3.4299793243408203
    3. '(' → logprob: -3.9299793243408203
    4. 'W' → logprob: -7.55497932434082
    5. ' (' → logprob: -7.67997932434082
    6. '(room' → logprob: -8.67997932434082
    7. '       ' → logprob: -9.55497932434082
    8. '(len' → logprob: -9.67997932434082
    9. ')' → logprob: -10.42997932434082
    10. ' W' → logprob: -10.55497932434082

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1612764298915863
    2. '):
' → logprob: -1.9112764596939087
    3. ':' → logprob: -7.411276340484619
    4. '           ' → logprob: -8.661276817321777
    5. ')' → logprob: -9.161276817321777
    6. '               ' → logprob: -9.411276817321777
    7. '       ' → logprob: -10.036276817321777
    8. '):
' → logprob: -11.536276817321777
    9. '):

' → logprob: -12.036276817321777
    10. ' ):' → logprob: -12.286276817321777

Token 125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019838817417621613
    2. '           ' → logprob: -4.019838809967041
    3. '<|end|>' → logprob: -7.644838809967041
    4. ',' → logprob: -7.769838809967041
    5. ':' → logprob: -7.769838809967041
    6. '                
' → logprob: -9.6448392868042
    7. '```' → logprob: -9.6448392868042
    8. ' if' → logprob: -10.2698392868042
    9. '            
' → logprob: -10.3948392868042
    10. '              ' → logprob: -10.5198392868042

Token 126: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8055688738822937
    2. '                   ' → logprob: -1.1805689334869385
    3. '               ' → logprob: -2.0555689334869385
    4. '           ' → logprob: -2.3055689334869385
    5. 'if' → logprob: -4.430568695068359
    6. '```' → logprob: -6.055568695068359
    7. '                       ' → logprob: -6.930568695068359
    8. ' ' → logprob: -7.055568695068359
    9. ' ' → logprob: -7.305568695068359
    10. '                ' → logprob: -7.430568695068359

Token 127: 'L' (ID: 43)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029839463531970978
    2. '=' → logprob: -3.529839515686035
    3. '           ' → logprob: -10.654839515686035
    4. '   ' → logprob: -11.154839515686035
    5. ' ' → logprob: -11.529839515686035
    6. '=user' → logprob: -11.654839515686035
    7. 's' → logprob: -11.904839515686035
    8. '       ' → logprob: -12.904839515686035
    9. '          ' → logprob: -12.904839515686035
    10. '  ' → logprob: -12.904839515686035

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194114446640015
    2. ' =' → logprob: -1.501941204071045
    3. '=user' → logprob: -12.876940727233887
    4. '==' → logprob: -13.126940727233887
    5. '           ' → logprob: -13.251940727233887
    6. ' ==' → logprob: -13.501940727233887
    7. ',' → logprob: -14.376940727233887
    8. ')' → logprob: -14.501940727233887
    9. '=line' → logprob: -14.501940727233887
    10. '            ' → logprob: -15.626940727233887

Token 129: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.1602276712656021
    2. 'room' → logprob: -1.910227656364441
    3. '(room' → logprob: -13.03522777557373
    4. '	room' → logprob: -13.66022777557373
    5. '   ' → logprob: -16.660226821899414
    6. '.room' → logprob: -17.410226821899414
    7. '`' → logprob: -17.910226821899414
    8. '           ' → logprob: -18.285226821899414
    9. ' code' → logprob: -18.660226821899414
    10. '_room' → logprob: -18.785226821899414

Token 130: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. '[L' → logprob: -17.25
    4. '[y' → logprob: -17.5
    5. ' L' → logprob: -18.25
    6. '[x' → logprob: -19.125
    7. '```' → logprob: -19.875
    8. '           ' → logprob: -20.75
    9. '   ' → logprob: -21.125
    10. 'l' → logprob: -21.25

Token 131: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -17.0
    3. '][' → logprob: -17.375
    4. '[' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. '           ' → logprob: -18.625
    7. 'y' → logprob: -18.625
    8. '   ' → logprob: -19.625
    9. '[Y' → logprob: -20.125
    10. ',y' → logprob: -20.25

Token 132: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024239711638074368
    2. '[x' → logprob: -8.500242233276367
    3. ')[' → logprob: -10.500242233276367
    4. ']' → logprob: -12.375242233276367
    5. ' ][' → logprob: -13.125242233276367
    6. '           ' → logprob: -13.500242233276367
    7. ')][' → logprob: -13.625242233276367
    8. '[y' → logprob: -13.750242233276367
    9. '"][' → logprob: -14.875242233276367
    10. ')' → logprob: -15.250242233276367

Token 133: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -13.750000953674316
    3. '
' → logprob: -18.500001907348633
    4. ']' → logprob: -18.750001907348633
    5. '][' → logprob: -19.375001907348633
    6. '	x' → logprob: -19.625001907348633
    7. '(x' → logprob: -19.750001907348633
    8. '```' → logprob: -19.875001907348633
    9. ')x' → logprob: -19.875001907348633
    10. ' ' → logprob: -20.625001907348633

Token 134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1937071681022644
    2. ')' → logprob: -1.8187072277069092
    3. ']
' → logprob: -4.94370698928833
    4. '               ' → logprob: -5.81870698928833
    5. ')
' → logprob: -6.31870698928833
    6. '<|end|>' → logprob: -7.19370698928833
    7. '           ' → logprob: -7.44370698928833
    8. '<|end|>' → logprob: -8.693707466125488
    9. '                   ' → logprob: -9.068707466125488
    10. ']==' → logprob: -9.818707466125488

Token 135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009031688794493675
    2. '                ' → logprob: -5.509031772613525
    3. '<|end|>' → logprob: -5.759031772613525
    4. '                
' → logprob: -6.759031772613525
    5. ' ' → logprob: -8.259031295776367
    6. '```' → logprob: -9.259031295776367
    7. '              ' → logprob: -9.384031295776367
    8. ' 
' → logprob: -11.009031295776367
    9. ' if' → logprob: -11.009031295776367
    10. '<|end|>' → logprob: -11.009031295776367

Token 136: ' c' (ID: 274)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30690592527389526
    2. 'c' (adapté à ' c') → logprob: -1.68190598487854
    3. ' c' → logprob: -2.55690598487854
    4. ' if' → logprob: -8.306905746459961
    5. '                ' → logprob: -8.556905746459961
    6. '           ' → logprob: -9.806905746459961
    7. '```' → logprob: -9.806905746459961
    8. ' ' → logprob: -10.306905746459961
    9. '              ' → logprob: -10.431905746459961
    10. 'if' → logprob: -10.681905746459961

Token 137: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6944534778594971
    2. 'R' → logprob: -0.6944534778594971
    3. '=' → logprob: -6.694453239440918
    4. '[' → logprob: -10.944453239440918
    5. '==' → logprob: -11.944453239440918
    6. 's' → logprob: -12.069453239440918
    7. ' =' → logprob: -12.069453239440918
    8. '_' → logprob: -12.194453239440918
    9. '           ' → logprob: -12.819453239440918
    10. ']' → logprob: -12.944453239440918

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408124804496765
    2. '=' → logprob: -0.97408127784729
    3. ' ' → logprob: -12.599081039428711
    4. ')' → logprob: -15.724081039428711
    5. ' =
' → logprob: -15.724081039428711
    6. '==' → logprob: -15.974081039428711
    7. ' ==' → logprob: -15.974081039428711
    8. ' =)' → logprob: -17.09908103942871
    9. '            ' → logprob: -17.47408103942871
    10. '=
' → logprob: -17.47408103942871

Token 139: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.16022473573684692
    2. 'room' → logprob: -1.9102246761322021
    3. '(room' → logprob: -14.910224914550781
    4. '	room' → logprob: -15.660224914550781
    5. 'space' → logprob: -16.53522491455078
    6. '.room' → logprob: -17.91022491455078
    7. ' ' → logprob: -18.16022491455078
    8. 'Room' → logprob: -18.28522491455078
    9. ' space' → logprob: -19.41022491455078
    10. '_room' → logprob: -19.53522491455078

Token 140: 'R' (ID: 49)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.01814187318086624
    2. 'R' → logprob: -4.143141746520996
    3. 'y' → logprob: -6.268141746520996
    4. '[' → logprob: -9.018141746520996
    5. 'L' → logprob: -9.643141746520996
    6. '(y' → logprob: -12.018141746520996
    7. '[user' → logprob: -12.768141746520996
    8. '```' → logprob: -12.768141746520996
    9. '[R' → logprob: -13.393141746520996
    10. 'Y' → logprob: -13.393141746520996

Token 141: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.633853652398102e-05
    2. '[' → logprob: -10.875056266784668
    3. '][' → logprob: -10.875056266784668
    4. ']' → logprob: -11.500056266784668
    5. 'y' → logprob: -12.375056266784668
    6. '[user' → logprob: -13.375056266784668
    7. '           ' → logprob: -14.500056266784668
    8. '<|end|>' → logprob: -14.875056266784668
    9. '```' → logprob: -15.625056266784668
    10. ' [' → logprob: -15.625056266784668

Token 142: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003534582501742989
    2. ']' → logprob: -8.875353813171387
    3. '[y' → logprob: -8.875353813171387
    4. '[x' → logprob: -10.000353813171387
    5. ' ][' → logprob: -11.000353813171387
    6. ')[' → logprob: -12.625353813171387
    7. '])' → logprob: -12.750353813171387
    8. '         ' → logprob: -14.250353813171387
    9. '           ' → logprob: -14.250353813171387
    10. ')' → logprob: -14.250353813171387

Token 143: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7432603272027336e-06
    2. ' x' → logprob: -13.500001907348633
    3. ']' → logprob: -16.000001907348633
    4. '<|end|>' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'y' → logprob: -17.375001907348633
    7. ')x' → logprob: -18.000001907348633
    8. '][' → logprob: -18.375001907348633
    9. ')' → logprob: -18.375001907348633
    10. '0' → logprob: -19.000001907348633

Token 144: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004246504511684179
    2. ')
' → logprob: -6.379246711730957
    3. '               ' → logprob: -6.629246711730957
    4. '           ' → logprob: -7.504246711730957
    5. ']' → logprob: -8.254246711730957
    6. '<|end|>' → logprob: -8.254246711730957
    7. '<|end|>' → logprob: -10.879246711730957
    8. '       ' → logprob: -11.129246711730957
    9. '                   ' → logprob: -11.254246711730957
    10. '')' → logprob: -11.379246711730957

Token 145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012240137904882431
    2. '                
' → logprob: -5.387239933013916
    3. '                ' → logprob: -5.512239933013916
    4. '<|end|>' → logprob: -6.512239933013916
    5. '```' → logprob: -7.887239933013916
    6. '                   ' → logprob: -8.387240409851074
    7. ' 
' → logprob: -8.512240409851074
    8. '           ' → logprob: -8.762240409851074
    9. ' ' → logprob: -8.887240409851074
    10. '              ' → logprob: -9.137240409851074

Token 146: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061473216861486435
    2. ' if' → logprob: -3.8114731311798096
    3. '                ' → logprob: -3.9364731311798096
    4. 'if' (adapté à ' if') → logprob: -4.561473369598389
    5. ' ' → logprob: -6.061473369598389
    6. '           ' → logprob: -6.436473369598389
    7. '                   ' → logprob: -6.561473369598389
    8. '                
' → logprob: -7.561473369598389
    9. '<|end|>' → logprob: -8.06147289276123
    10. '       ' → logprob: -8.68647289276123

Token 147: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.002476135268807411
    2. 'c' → logprob: -6.002476215362549
    3. ' not' → logprob: -15.37747573852539
    4. ' start' → logprob: -15.75247573852539
    5. 'start' → logprob: -16.62747573852539
    6. '(c' → logprob: -17.12747573852539
    7. ' ' → logprob: -17.50247573852539
    8. '	c' → logprob: -18.00247573852539
    9. '               ' → logprob: -18.37747573852539
    10. 'not' → logprob: -18.50247573852539

Token 148: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00012201975914649665
    2. '==' → logprob: -9.7501220703125
    3. ' ==' → logprob: -10.0001220703125
    4. '```' → logprob: -12.7501220703125
    5. '=='' → logprob: -12.8751220703125
    6. '_L' → logprob: -13.3751220703125
    7. '[' → logprob: -13.3751220703125
    8. '`' → logprob: -13.3751220703125
    9. '=' → logprob: -13.5001220703125
    10. ' L' → logprob: -14.1251220703125

Token 149: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06243984028697014
    2. ' ==' → logprob: -2.8124399185180664
    3. '=='' → logprob: -7.687439918518066
    4. '=' → logprob: -11.687439918518066
    5. '==
' → logprob: -13.187439918518066
    6. '=="' → logprob: -13.687439918518066
    7. ' =='' → logprob: -14.062439918518066
    8. ' ' → logprob: -14.312439918518066
    9. '[' → logprob: -15.687439918518066
    10. ' in' → logprob: -15.937439918518066

Token 150: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.053981613367795944
    2. ''' → logprob: -3.1789815425872803
    3. ''A' → logprob: -6.053981781005859
    4. '"S' → logprob: -6.428981781005859
    5. ''O' → logprob: -6.428981781005859
    6. ''s' → logprob: -6.553981781005859
    7. ''I' → logprob: -7.428981781005859
    8. ''L' → logprob: -7.428981781005859
    9. ' '' → logprob: -7.553981781005859
    10. ''U' → logprob: -8.05398178100586

Token 151: 'L' (ID: 43)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7472380995750427
    2. '@' → logprob: -1.6222381591796875
    3. 's' → logprob: -1.8722381591796875
    4. 'o' → logprob: -2.4972381591796875
    5. '*' → logprob: -4.1222381591796875
    6. '#' → logprob: -4.2472381591796875
    7. 'L' → logprob: -4.2472381591796875
    8. 'A' → logprob: -4.2472381591796875
    9. 'P' → logprob: -5.3722381591796875
    10. 'O' → logprob: -5.7472381591796875

Token 152: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5412996411323547
    2. '':' → logprob: -1.04129958152771
    3. 'S' → logprob: -3.66629958152771
    4. ''):' → logprob: -3.66629958152771
    5. 'o' → logprob: -6.541299819946289
    6. '1' → logprob: -6.541299819946289
    7. ''):
' → logprob: -6.541299819946289
    8. '')' → logprob: -6.791299819946289
    9. '':
' → logprob: -6.916299819946289
    10. 'i' → logprob: -7.041299819946289

Token 153: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019778281450271606
    2. ':' → logprob: -4.519778251647949
    3. '                       ' → logprob: -5.769778251647949
    4. ':
' → logprob: -6.019778251647949
    5. '                    
' → logprob: -6.644778251647949
    6. '               ' → logprob: -7.769778251647949
    7. '                           ' → logprob: -8.26977825164795
    8. ' and' → logprob: -8.64477825164795
    9. '<|end|>' → logprob: -8.64477825164795
    10. '                  ' → logprob: -8.89477825164795

Token 154: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.2333565354347229
    2. ' start' → logprob: -1.7333564758300781
    3. '                   ' → logprob: -3.483356475830078
    4. '               ' → logprob: -7.608356475830078
    5. '                       ' → logprob: -9.358356475830078
    6. '[start' → logprob: -9.358356475830078
    7. '           ' → logprob: -10.858356475830078
    8. '
' → logprob: -11.483356475830078
    9. ',start' → logprob: -12.233356475830078
    10. '   ' → logprob: -12.483356475830078

Token 155: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -9.968312951968983e-06
    2. '_L' → logprob: -11.750009536743164
    3. '[' → logprob: -14.375009536743164
    4. '_' → logprob: -15.000009536743164
    5. ')' → logprob: -15.125009536743164
    6. 'R' → logprob: -15.250009536743164
    7. ' L' → logprob: -15.375009536743164
    8. '=' → logprob: -16.000009536743164
    9. '[L' → logprob: -16.250009536743164
    10. '(L' → logprob: -16.375009536743164

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1003524512052536
    2. '=' → logprob: -2.3503525257110596
    3. ',' → logprob: -8.85035228729248
    4. ' =
' → logprob: -14.35035228729248
    5. ')' → logprob: -14.60035228729248
    6. ' ' → logprob: -15.10035228729248
    7. '=None' → logprob: -15.35035228729248
    8. ' ,' → logprob: -15.47535228729248
    9. '=

' → logprob: -15.60035228729248
    10. ' =)' → logprob: -15.72535228729248

Token 157: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00043579499470070004
    2. ' (' → logprob: -8.250435829162598
    3. '(x' → logprob: -9.250435829162598
    4. '(' → logprob: -9.500435829162598
    5. '[y' → logprob: -12.750435829162598
    6. 'y' → logprob: -14.250435829162598
    7. '                   ' → logprob: -18.50043487548828
    8. ' y' → logprob: -19.12543487548828
    9. ''y' → logprob: -19.25043487548828
    10. 'x' → logprob: -19.50043487548828

Token 158: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5764880776405334
    2. 'x' → logprob: -0.8264880776405334
    3. ' y' → logprob: -7.576488018035889
    4. ' x' → logprob: -10.326488494873047
    5. ')y' → logprob: -13.451488494873047
    6. ')' → logprob: -14.576488494873047
    7. '(y' → logprob: -15.201488494873047
    8. '	y' → logprob: -15.326488494873047
    9. ')x' → logprob: -15.326488494873047
    10. '0' → logprob: -15.451488494873047

Token 159: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02351321280002594
    2. ',x' → logprob: -3.7735133171081543
    3. ' ,' → logprob: -8.273512840270996
    4. 'x' → logprob: -11.773512840270996
    5. '<|end|>' → logprob: -13.523512840270996
    6. ',
' → logprob: -13.898512840270996
    7. ')' → logprob: -14.023512840270996
    8. '‌,' → logprob: -15.398512840270996
    9. '[x' → logprob: -15.398512840270996
    10. '[' → logprob: -15.398512840270996

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005618501454591751
    2. ')
' → logprob: -7.500561714172363
    3. ' )' → logprob: -11.875561714172363
    4. ')

' → logprob: -14.250561714172363
    5. ',' → logprob: -15.000561714172363
    6. '<|end|>' → logprob: -15.625561714172363
    7. '),' → logprob: -15.875561714172363
    8. ')#' → logprob: -16.50056266784668
    9. ')
' → logprob: -16.87556266784668
    10. '                   ' → logprob: -17.00056266784668

Token 161: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011682627722620964
    2. '<|end|>' → logprob: -4.636682510375977
    3. '                ' → logprob: -6.511682510375977
    4. '                   ' → logprob: -8.761682510375977
    5. '                
' → logprob: -9.386682510375977
    6. 'elif' → logprob: -9.636682510375977
    7. '<|end|>' → logprob: -10.636682510375977
    8. '              ' → logprob: -10.761682510375977
    9. '
' → logprob: -11.011682510375977
    10. '           ' → logprob: -11.261682510375977

Token 162: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' (adapté à ' room') → logprob: -0.0002848152944352478
    2. ' room' → logprob: -8.375285148620605
    3. '                   ' → logprob: -9.875285148620605
    4. '               ' → logprob: -13.750285148620605
    5. 'c' → logprob: -14.125285148620605
    6. '                       ' → logprob: -15.375285148620605
    7. '                           ' → logprob: -15.875285148620605
    8. '	room' → logprob: -16.12528419494629
    9. '.room' → logprob: -16.25028419494629
    10. '(room' → logprob: -16.37528419494629

Token 163: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. ' L' → logprob: -17.125
    4. '[L' → logprob: -18.0
    5. 'room' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. 'R' → logprob: -20.375
    8. '`' → logprob: -21.625
    9. '_L' → logprob: -21.875
    10. 'l' → logprob: -21.875

Token 164: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00025430647656321526
    2. '[user' → logprob: -9.37525463104248
    3. '[' → logprob: -9.62525463104248
    4. '```' → logprob: -10.50025463104248
    5. '[row' → logprob: -11.12525463104248
    6. '<|end|>' → logprob: -11.62525463104248
    7. '<|end|>' → logprob: -12.50025463104248
    8. 'y' → logprob: -12.50025463104248
    9. '[line' → logprob: -12.62525463104248
    10. '[to' → logprob: -12.62525463104248

Token 165: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6959916949272156
    2. '[x' → logprob: -0.6959916949272156
    3. '[y' → logprob: -6.070991516113281
    4. '[' → logprob: -8.570991516113281
    5. ')[' → logprob: -9.195991516113281
    6. '"][' → logprob: -9.820991516113281
    7. ']' → logprob: -10.195991516113281
    8. ''][' → logprob: -10.195991516113281
    9. '}[' → logprob: -10.195991516113281
    10. 'x' → logprob: -11.445991516113281

Token 166: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868354856967926
    2. ''x' → logprob: -1.2618354558944702
    3. ''' → logprob: -4.13683557510376
    4. '0' → logprob: -4.63683557510376
    5. ''.' → logprob: -5.01183557510376
    6. '"x' → logprob: -7.01183557510376
    7. ''s' → logprob: -7.38683557510376
    8. '['' → logprob: -7.63683557510376
    9. '('.')' → logprob: -7.63683557510376
    10. ']' → logprob: -7.76183557510376

Token 167: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030354207381606102
    2. ']' → logprob: -3.7803542613983154
    3. ' =' → logprob: -5.530354022979736
    4. ']=' → logprob: -5.905354022979736
    5. ')' → logprob: -8.780354499816895
    6. '='' → logprob: -8.905354499816895
    7. ')=' → logprob: -9.905354499816895
    8. ']='' → logprob: -10.030354499816895
    9. '[' → logprob: -12.905354499816895
    10. ' ='' → logprob: -13.280354499816895

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017250381642952561
    2. ' =' → logprob: -6.376725196838379
    3. '='' → logprob: -10.876725196838379
    4. '[' → logprob: -13.251725196838379
    5. ' ='' → logprob: -13.251725196838379
    6. '.=' → logprob: -16.501724243164062
    7. ''=' → logprob: -16.626724243164062
    8. '['' → logprob: -16.751724243164062
    9. ']=' → logprob: -17.251724243164062
    10. '＝' → logprob: -17.251724243164062

Token 169: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.002342111896723509
    2. ''' → logprob: -6.252342224121094
    3. '.' → logprob: -8.002342224121094
    4. '"."' → logprob: -10.627342224121094
    5. ' '.'' → logprob: -11.252342224121094
    6. ''o' → logprob: -11.502342224121094
    7. ''-' → logprob: -11.502342224121094
    8. ''a' → logprob: -12.627342224121094
    9. ''*' → logprob: -13.127342224121094
    10. ''#' → logprob: -13.252342224121094

Token 170: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6182271838188171
    2. ')' → logprob: -1.118227243423462
    3. '<|end|>' → logprob: -2.243227243423462
    4. '                   ' → logprob: -4.743227005004883
    5. '')' → logprob: -5.243227005004883
    6. '                ' → logprob: -5.618227005004883
    7. ''' → logprob: -6.368227005004883
    8. '           ' → logprob: -6.368227005004883
    9. ' ' → logprob: -6.868227005004883
    10. ']' → logprob: -7.243227005004883

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005699227098375559
    2. '                ' → logprob: -5.630699157714844
    3. '                
' → logprob: -6.880699157714844
    4. '<|end|>' → logprob: -7.630699157714844
    5. ' 
' → logprob: -8.005699157714844
    6. '              ' → logprob: -9.880699157714844
    7. ' ' → logprob: -10.255699157714844
    8. '  
' → logprob: -10.505699157714844
    9. '                   ' → logprob: -10.630699157714844
    10. '                    
' → logprob: -10.880699157714844

Token 172: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015109316445887089
    2. ' elif' → logprob: -7.251511096954346
    3. 'elif' (adapté à ' elif') → logprob: -7.626511096954346
    4. '                ' → logprob: -8.251510620117188
    5. ' if' → logprob: -11.251510620117188
    6. '<|end|>' → logprob: -11.376510620117188
    7. '              ' → logprob: -11.876510620117188
    8. '                   ' → logprob: -12.251510620117188
    9. '           ' → logprob: -12.626510620117188
    10. 'if' → logprob: -13.126510620117188

Token 173: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.17976056039333344
    2. 'c' → logprob: -1.8047605752944946
    3. ' ' → logprob: -12.429760932922363
    4. '(c' → logprob: -12.554760932922363
    5. ' ' → logprob: -13.179760932922363
    6. '	c' → logprob: -13.929760932922363
    7. '                   ' → logprob: -14.429760932922363
    8. ')c' → logprob: -14.679760932922363
    9. '`' → logprob: -14.992260932922363
    10. '```' → logprob: -15.179760932922363

Token 174: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.276630163192749
    2. 'R' → logprob: -1.776630163192749
    3. ' ==' → logprob: -3.151630163192749
    4. '==' → logprob: -3.651630163192749
    5. ''' → logprob: -6.401630401611328
    6. '=='' → logprob: -6.776630401611328
    7. ' ' → logprob: -8.026630401611328
    8. ' '' → logprob: -9.151630401611328
    9. ' R' → logprob: -9.776630401611328
    10. ' L' → logprob: -9.776630401611328

Token 175: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07044617831707001
    2. '==' → logprob: -2.695446252822876
    3. '=='' → logprob: -7.945446014404297
    4. '<|end|>' → logprob: -9.820446014404297
    5. ' =='' → logprob: -9.820446014404297
    6. ' ' → logprob: -10.945446014404297
    7. '=' → logprob: -11.570446014404297
    8. ' =' → logprob: -12.445446014404297
    9. '=="' → logprob: -12.570446014404297
    10. ']==' → logprob: -13.320446014404297

Token 176: ' '%' (ID: 17392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04376488924026489
    2. ''S' → logprob: -4.543765068054199
    3. ''L' → logprob: -4.543765068054199
    4. ''U' → logprob: -5.043765068054199
    5. ''O' → logprob: -5.293765068054199
    6. ''I' → logprob: -5.668765068054199
    7. ''A' → logprob: -5.918765068054199
    8. ' '' → logprob: -6.793765068054199
    9. ''T' → logprob: -7.293765068054199
    10. ''E' → logprob: -7.918765068054199

Token 177: '':
' (ID: 7669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029130535200238228
    2. 'goal' → logprob: -4.154130458831787
    3. ' goal' → logprob: -4.904130458831787
    4. '               ' → logprob: -6.654130458831787
    5. ' ' → logprob: -7.404130458831787
    6. '<|end|>' → logprob: -7.654130458831787
    7. '                    ' → logprob: -7.904130458831787
    8. 'start' → logprob: -7.904130458831787
    9. '%' → logprob: -8.154130935668945
    10. '                  ' → logprob: -8.279130935668945

Token 179: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.00263915304094553
    2. ' goal' → logprob: -6.002639293670654
    3. '                   ' → logprob: -9.502638816833496
    4. '(goal' → logprob: -9.752638816833496
    5. 'start' → logprob: -11.502638816833496
    6. '(' → logprob: -11.752638816833496
    7. ' ' → logprob: -12.877638816833496
    8. ' (' → logprob: -13.002638816833496
    9. '   ' → logprob: -13.502638816833496
    10. '               ' → logprob: -13.877638816833496

Token 180: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0025841009337455034
    2. 'R' → logprob: -6.002583980560303
    3. ' =' → logprob: -9.877584457397461
    4. '=' → logprob: -10.377584457397461
    5. '[' → logprob: -11.377584457397461
    6. '[y' → logprob: -12.377584457397461
    7. ')' → logprob: -12.752584457397461
    8. '<|end|>' → logprob: -13.002584457397461
    9. 'y' → logprob: -14.127584457397461
    10. '(y' → logprob: -14.127584457397461

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326520442962646
    2. '=' → logprob: -1.3132652044296265
    3. '=(' → logprob: -14.188264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '<|end|>' → logprob: -14.188264846801758
    6. ')' → logprob: -14.438264846801758
    7. ' =(' → logprob: -15.313264846801758
    8. ' (' → logprob: -15.813264846801758
    9. ',' → logprob: -16.688264846801758
    10. '(' → logprob: -16.813264846801758

Token 182: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.014173848554491997
    2. ' (' → logprob: -4.264173984527588
    3. '(' → logprob: -11.63917350769043
    4. '   ' → logprob: -14.76417350769043
    5. ' ' → logprob: -15.13917350769043
    6. '(x' → logprob: -16.01417350769043
    7. ' y' → logprob: -16.26417350769043
    8. '[y' → logprob: -16.26417350769043
    9. '(None' → logprob: -16.26417350769043
    10. '  ' → logprob: -16.63917350769043

Token 183: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.607391408877447e-05
    2. ' y' → logprob: -10.375036239624023
    3. '(y' → logprob: -12.625036239624023
    4. ')y' → logprob: -14.375036239624023
    5. ')' → logprob: -14.875036239624023
    6. '<|end|>' → logprob: -16.125036239624023
    7. '   ' → logprob: -16.375036239624023
    8. '[y' → logprob: -16.375036239624023
    9. ''y' → logprob: -16.500036239624023
    10. ',y' → logprob: -16.750036239624023

Token 184: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.002723683137446642
    2. ',y' → logprob: -6.002723693847656
    3. ',' → logprob: -8.752723693847656
    4. 'x' → logprob: -9.377723693847656
    5. ' ,' → logprob: -13.127723693847656
    6. '<|end|>' → logprob: -13.752723693847656
    7. '[x' → logprob: -13.877723693847656
    8. 'y' → logprob: -14.627723693847656
    9. '(x' → logprob: -16.127723693847656
    10. '
' → logprob: -16.252723693847656

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005025160498917103
    2. ')
' → logprob: -7.625502586364746
    3. '<|end|>' → logprob: -12.250502586364746
    4. '')' → logprob: -12.875502586364746
    5. '               ' → logprob: -13.000502586364746
    6. ' )' → logprob: -13.125502586364746
    7. '                   ' → logprob: -14.375502586364746
    8. ')

' → logprob: -14.375502586364746
    9. ')#' → logprob: -15.250502586364746
    10. '           ' → logprob: -15.500502586364746

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003054301778320223
    2. '<|end|>' → logprob: -9.25030517578125
    3. ' elif' → logprob: -9.87530517578125
    4. '
' → logprob: -9.87530517578125
    5. 'elif' → logprob: -10.00030517578125
    6. '                
' → logprob: -10.37530517578125
    7. '                ' → logprob: -11.50030517578125
    8. '           ' → logprob: -12.50030517578125
    9. '              ' → logprob: -12.87530517578125
    10. '       ' → logprob: -13.12530517578125

Token 187: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056594349443912506
    2. ' elif' → logprob: -3.4315943717956543
    3. 'elif' → logprob: -3.8065943717956543
    4. '                ' → logprob: -9.181593894958496
    5. ' else' → logprob: -9.431593894958496
    6. '       ' → logprob: -9.806593894958496
    7. '                
' → logprob: -10.181593894958496
    8. '
' → logprob: -10.556593894958496
    9. '<|end|>' → logprob: -10.556593894958496
    10. '	elif' → logprob: -10.681593894958496

Token 188: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0036006635054945946
    2. 'c' → logprob: -5.628600597381592
    3. ' ' → logprob: -14.50360107421875
    4. '	c' → logprob: -16.87860107421875
    5. ' ' → logprob: -17.12860107421875
    6. '   ' → logprob: -17.37860107421875
    7. '(c' → logprob: -17.56610107421875
    8. '    ' → logprob: -17.69110107421875
    9. '  ' → logprob: -18.25360107421875
    10. ')c' → logprob: -18.37860107421875

Token 189: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00023619852436240762
    2. 'L' → logprob: -8.375236511230469
    3. ' R' → logprob: -13.250236511230469
    4. 'c' → logprob: -14.000236511230469
    5. 'x' → logprob: -14.750236511230469
    6. '==' → logprob: -14.750236511230469
    7. 'r' → logprob: -14.750236511230469
    8. '_R' → logprob: -14.875236511230469
    9. 'l' → logprob: -15.125236511230469
    10. '=' → logprob: -16.25023651123047

Token 190: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014165629632771015
    2. '==' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.639165878295898
    4. ' ' → logprob: -15.139165878295898
    5. '[' → logprob: -15.514165878295898
    6. ')' → logprob: -15.889165878295898
    7. ')==' → logprob: -16.5141658782959
    8. ']==' → logprob: -16.5141658782959
    9. '=='' → logprob: -16.7641658782959
    10. ' =' → logprob: -16.8891658782959

Token 191: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47424307465553284
    2. ' '' → logprob: -0.9742430448532104
    3. ''L' → logprob: -9.2242431640625
    4. ''S' → logprob: -10.3492431640625
    5. ' ' → logprob: -11.0992431640625
    6. '"' → logprob: -12.7242431640625
    7. ''I' → logprob: -12.8492431640625
    8. 'space' → logprob: -13.2242431640625
    9. ''A' → logprob: -13.5992431640625
    10. ''s' → logprob: -13.5992431640625

Token 192: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4283493161201477
    2. ''' → logprob: -1.303349256515503
    3. 'L' → logprob: -2.928349256515503
    4. ''L' → logprob: -3.803349256515503
    5. ''r' → logprob: -8.428349494934082
    6. ''S' → logprob: -8.428349494934082
    7. ''C' → logprob: -9.178349494934082
    8. '')' → logprob: -9.928349494934082
    9. ''M' → logprob: -10.178349494934082
    10. ''.' → logprob: -10.303349494934082

Token 193: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.32115936279296875
    2. '':
' → logprob: -1.3211593627929688
    3. ''' → logprob: -4.946159362792969
    4. ''):
' → logprob: -7.571159362792969
    5. '<|end|>' → logprob: -9.446159362792969
    6. '':
' → logprob: -10.446159362792969
    7. '':

' → logprob: -10.696159362792969
    8. ':
' → logprob: -10.946159362792969
    9. ':' → logprob: -11.071159362792969
    10. '']:
' → logprob: -11.071159362792969

Token 194: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030872784554958344
    2. '           ' → logprob: -7.503087043762207
    3. ' (' → logprob: -7.878087043762207
    4. '               ' → logprob: -7.878087043762207
    5. '<|end|>' → logprob: -7.878087043762207
    6. ' start' → logprob: -8.003087043762207
    7. '[start' → logprob: -8.378087043762207
    8. '(start' → logprob: -8.503087043762207
    9. '=start' → logprob: -8.753087043762207
    10. '                  ' → logprob: -8.878087043762207

Token 195: ' start' (ID: 1604)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6703580021858215
    2. ' start' → logprob: -1.4203579425811768
    3. 'start' (adapté à ' start') → logprob: -1.5453579425811768
    4. '(start' → logprob: -3.4203579425811768
    5. '                   ' → logprob: -7.670358180999756
    6. '(end' → logprob: -8.795357704162598
    7. '[start' → logprob: -9.295357704162598
    8. 'end' → logprob: -9.420357704162598
    9. '=start' → logprob: -10.420357704162598
    10. '               ' → logprob: -10.795357704162598

Token 196: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1704089343547821
    2. '<|end|>' → logprob: -2.4204089641571045
    3. '(' → logprob: -2.9204089641571045
    4. '(R' → logprob: -4.920408725738525
    5. '=' → logprob: -5.920408725738525
    6. '[' → logprob: -6.545408725738525
    7. ' (' → logprob: -7.170408725738525
    8. ')' → logprob: -7.170408725738525
    9. ' =' → logprob: -8.170409202575684
    10. '(x' → logprob: -9.295409202575684

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931524872779846
    2. ' =' → logprob: -0.6931524872779846
    3. '=(' → logprob: -12.94315242767334
    4. ' =(' → logprob: -13.94315242767334
    5. ' ' → logprob: -14.44315242767334
    6. ' (' → logprob: -14.81815242767334
    7. '＝' → logprob: -15.19315242767334
    8. '=None' → logprob: -15.69315242767334
    9. '   ' → logprob: -15.81815242767334
    10. '=y' → logprob: -16.068153381347656

Token 198: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.04858759790658951
    2. ' (' → logprob: -3.0485875606536865
    3. '(' → logprob: -15.673587799072266
    4. '(None' → logprob: -17.048587799072266
    5. ' y' → logprob: -18.548587799072266
    6. ' ' → logprob: -18.798587799072266
    7. '[y' → logprob: -19.548587799072266
    8. '(Y' → logprob: -19.673587799072266
    9. '(z' → logprob: -19.798587799072266
    10. '   ' → logprob: -20.298587799072266

Token 199: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0059920744970440865
    2. '(y' → logprob: -5.1309919357299805
    3. ' y' → logprob: -9.75599193572998
    4. '[y' → logprob: -13.50599193572998
    5. ')y' → logprob: -13.75599193572998
    6. ' (' → logprob: -13.75599193572998
    7. ''y' → logprob: -14.63099193572998
    8. ',y' → logprob: -14.63099193572998
    9. '	y' → logprob: -14.88099193572998
    10. '(' → logprob: -15.50599193572998

Token 200: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.006837091408669949
    2. 'y' → logprob: -5.631836891174316
    3. ',x' → logprob: -6.006836891174316
    4. ',' → logprob: -7.256836891174316
    5. '[y' → logprob: -10.381836891174316
    6. ' ,' → logprob: -11.631836891174316
    7. 'x' → logprob: -11.881836891174316
    8. '[' → logprob: -12.006836891174316
    9. ')' → logprob: -12.881836891174316
    10. ' y' → logprob: -12.881836891174316

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009293333627283573
    2. ')
' → logprob: -4.759293556213379
    3. '<|end|>' → logprob: -8.009293556213379
    4. '                   ' → logprob: -8.259293556213379
    5. '               ' → logprob: -9.759293556213379
    6. '           ' → logprob: -12.009293556213379
    7. '')' → logprob: -12.134293556213379
    8. '       ' → logprob: -12.884293556213379
    9. ' )' → logprob: -13.009293556213379
    10. '[' → logprob: -13.384293556213379

Token 202: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003917630296200514
    2. '           ' → logprob: -6.128917694091797
    3. '               ' → logprob: -6.503917694091797
    4. '<|end|>' → logprob: -9.628917694091797
    5. '		           ' → logprob: -10.753917694091797
    6. '       ' → logprob: -10.753917694091797
    7. '                    ' → logprob: -11.128917694091797
    8. '                  ' → logprob: -11.128917694091797
    9. '```' → logprob: -11.128917694091797
    10. '                    
' → logprob: -11.503917694091797

Token 203: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.10216183960437775
    2. 'room' (adapté à ' room') → logprob: -2.3521618843078613
    3. '                   ' → logprob: -6.602161884307861
    4. '               ' → logprob: -8.227161407470703
    5. '(room' → logprob: -9.227161407470703
    6. '           ' → logprob: -9.727161407470703
    7. ''' → logprob: -10.352161407470703
    8. ' ' → logprob: -10.602161407470703
    9. '                           ' → logprob: -10.977161407470703
    10. ')' → logprob: -11.352161407470703

Token 204: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.771655115589965e-05
    2. '[' → logprob: -11.125018119812012
    3. '[R' → logprob: -13.750018119812012
    4. 'L' → logprob: -14.125018119812012
    5. ' R' → logprob: -14.625018119812012
    6. '           ' → logprob: -16.000017166137695
    7. '   ' → logprob: -16.125017166137695
    8. '[right' → logprob: -16.125017166137695
    9. '[user' → logprob: -16.875017166137695
    10. '                   ' → logprob: -17.125017166137695

Token 205: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.62501049041748
    3. '[user' → logprob: -14.50001049041748
    4. 'y' → logprob: -15.37501049041748
    5. '][' → logprob: -15.50001049041748
    6. '           ' → logprob: -16.000011444091797
    7. ' [' → logprob: -16.375011444091797
    8. '[Y' → logprob: -16.375011444091797
    9. '<|end|>' → logprob: -16.625011444091797
    10. '[z' → logprob: -16.625011444091797

Token 206: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.20155474543571472
    2. '][' → logprob: -1.701554775238037
    3. ']' → logprob: -9.576554298400879
    4. 'y' → logprob: -10.326554298400879
    5. '[' → logprob: -10.951554298400879
    6. ' ][' → logprob: -12.201554298400879
    7. '           ' → logprob: -13.076554298400879
    8. '   ' → logprob: -13.201554298400879
    9. '       ' → logprob: -13.326554298400879
    10. ' [' → logprob: -13.451554298400879

Token 207: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5928495486150496e-05
    2. 'y' → logprob: -11.125016212463379
    3. ' x' → logprob: -13.750016212463379
    4. ']' → logprob: -18.125015258789062
    5. '{x' → logprob: -18.875015258789062
    6. '][' → logprob: -18.875015258789062
    7. '0' → logprob: -18.875015258789062
    8. ''x' → logprob: -19.000015258789062
    9. '   ' → logprob: -19.500015258789062
    10. '[x' → logprob: -19.625015258789062

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02964714914560318
    2. ']=' → logprob: -3.7796471118927
    3. '=' → logprob: -5.154647350311279
    4. '[y' → logprob: -8.154646873474121
    5. ' =' → logprob: -8.904646873474121
    6. '][' → logprob: -9.654646873474121
    7. '           ' → logprob: -10.404646873474121
    8. ' ]' → logprob: -10.529646873474121
    9. ']='' → logprob: -11.404646873474121
    10. '                   ' → logprob: -11.529646873474121

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049704626202583
    2. ' =' → logprob: -4.511049747467041
    3. ']' → logprob: -13.636049270629883
    4. ']=' → logprob: -14.386049270629883
    5. '[' → logprob: -16.511049270629883
    6. '='' → logprob: -17.511049270629883
    7. ')' → logprob: -17.761049270629883
    8. ')=' → logprob: -18.511049270629883
    9. '           ' → logprob: -18.636049270629883
    10. '                   ' → logprob: -18.636049270629883

Token 210: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0003637097543105483
    2. ' '.'' → logprob: -8.00036334991455
    3. ''' → logprob: -10.87536334991455
    4. '.' → logprob: -12.50036334991455
    5. '('.')' → logprob: -12.50036334991455
    6. '"."' → logprob: -14.00036334991455
    7. '['' → logprob: -15.12536334991455
    8. ' '' → logprob: -15.37536334991455
    9. ' '.' → logprob: -16.250364303588867
    10. '('.' → logprob: -17.000364303588867

Token 211: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11637318879365921
    2. '<|end|>' → logprob: -2.241373300552368
    3. ')' → logprob: -6.241373062133789
    4. '       ' → logprob: -7.241373062133789
    5. '<|end|>' → logprob: -8.116373062133789
    6. 'elif' → logprob: -8.991373062133789
    7. '           ' → logprob: -8.991373062133789
    8. '```' → logprob: -9.491373062133789
    9. '
' → logprob: -10.241373062133789
    10. '')' → logprob: -10.616373062133789

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010403135092929006
    2. 'elif' → logprob: -7.251040458679199
    3. ' elif' → logprob: -8.2510404586792
    4. '<|end|>' → logprob: -9.8760404586792
    5. '                ' → logprob: -12.5010404586792
    6. '       ' → logprob: -12.5010404586792
    7. '                   ' → logprob: -13.2510404586792
    8. '           ' → logprob: -13.3760404586792
    9. '<|end|>' → logprob: -13.3760404586792
    10. '```' → logprob: -13.5010404586792

Token 213: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5523301362991333
    2. 'elif' (adapté à ' elif') → logprob: -0.9273301362991333
    3. '               ' → logprob: -3.5523300170898438
    4. '       ' → logprob: -10.302330017089844
    5. '	elif' → logprob: -10.302330017089844
    6. '           ' → logprob: -10.802330017089844
    7. ' if' → logprob: -11.802330017089844
    8. '```' → logprob: -11.927330017089844
    9. ' ' → logprob: -12.177330017089844
    10. '              ' → logprob: -12.302330017089844

Token 214: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5233017206192017
    2. 'c' → logprob: -0.8983017206192017
    3. '%c' → logprob: -8.89830207824707
    4. 'r' → logprob: -10.89830207824707
    5. '(c' → logprob: -12.64830207824707
    6. '                   ' → logprob: -12.77330207824707
    7. '               ' → logprob: -12.89830207824707
    8. 'R' → logprob: -13.14830207824707
    9. '	c' → logprob: -13.27330207824707
    10. ' ' → logprob: -13.27330207824707

Token 215: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -7.755678961984813e-05
    2. 'c' → logprob: -9.750077247619629
    3. 'L' → logprob: -12.125077247619629
    4. 'r' → logprob: -12.250077247619629
    5. ''' → logprob: -12.375077247619629
    6. '_R' → logprob: -13.125077247619629
    7. ' R' → logprob: -14.250077247619629
    8. ''%' → logprob: -14.625077247619629
    9. 'C' → logprob: -15.375077247619629
    10. '`' → logprob: -15.750077247619629

Token 216: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12692968547344208
    2. '==' → logprob: -2.126929759979248
    3. '=' → logprob: -14.00192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '=='' → logprob: -15.37692928314209
    6. ']==' → logprob: -15.87692928314209
    7. '[' → logprob: -16.001930236816406
    8. ' =' → logprob: -17.626930236816406
    9. '===' → logprob: -17.626930236816406
    10. ' =='' → logprob: -17.876930236816406

Token 217: ' '%' (ID: 17392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02526341937482357
    2. ''%' → logprob: -3.7752633094787598
    3. ' '%'' → logprob: -6.27526330947876
    4. ' '' → logprob: -9.775263786315918
    5. ''#' → logprob: -10.275263786315918
    6. ' '%' → logprob: -11.025263786315918
    7. ''$' → logprob: -12.525263786315918
    8. '"' → logprob: -12.650263786315918
    9. ''%(' → logprob: -12.775263786315918
    10. ' ' → logprob: -13.025263786315918

Token 218: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1066499948501587
    2. '==' → logprob: -1.4816499948501587
    3. '               ' → logprob: -1.9816499948501587
    4. ' ==' → logprob: -2.231649875640869
    5. ' (' → logprob: -3.356649875640869
    6. ')' → logprob: -3.356649875640869
    7. '(' → logprob: -3.981649875640869
    8. '[' → logprob: -4.106649875640869
    9. '           ' → logprob: -4.106649875640869
    10. '                  ' → logprob: -4.481649875640869

Token 219: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003026910126209259
    2. '(goal' → logprob: -6.628026962280273
    3. 'goal' → logprob: -7.378026962280273
    4. ' goal' → logprob: -7.878026962280273
    5. '               ' → logprob: -8.378026962280273
    6. '                  ' → logprob: -9.003026962280273
    7. '                    ' → logprob: -9.503026962280273
    8. '           ' → logprob: -9.753026962280273
    9. ' (' → logprob: -9.878026962280273
    10. '=' → logprob: -10.128026962280273

Token 220: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.5841274857521057
    2. '(goal' → logprob: -0.8341274857521057
    3. ' goal' → logprob: -4.834127426147461
    4. ' (' → logprob: -8.584127426147461
    5. '(' → logprob: -11.334127426147461
    6. '(y' → logprob: -14.334127426147461
    7. '.goal' → logprob: -14.334127426147461
    8. 'go' → logprob: -15.209127426147461
    9. '_goal' → logprob: -15.459127426147461
    10. 'Goal' → logprob: -15.834127426147461

Token 221: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.153795766294934e-06
    2. '_R' → logprob: -12.125005722045898
    3. 'L' → logprob: -14.875005722045898
    4. ' R' → logprob: -15.750005722045898
    5. '_' → logprob: -16.3750057220459
    6. '=' → logprob: -17.1250057220459
    7. '[' → logprob: -17.1250057220459
    8. '[R' → logprob: -17.5000057220459
    9. '_right' → logprob: -19.1250057220459
    10. ' =' → logprob: -19.3750057220459

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '=(' → logprob: -16.203889846801758
    4. '   ' → logprob: -18.578889846801758
    5. ' ' → logprob: -18.703889846801758
    6. ' =(' → logprob: -18.703889846801758
    7. '           ' → logprob: -19.078889846801758
    8. ' (' → logprob: -20.078889846801758
    9. '＝' → logprob: -20.203889846801758
    10. '(' → logprob: -20.203889846801758

Token 223: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.01416350994259119
    2. ' (' → logprob: -4.264163494110107
    3. '(x' → logprob: -17.764163970947266
    4. '(' → logprob: -17.889163970947266
    5. ' y' → logprob: -19.014163970947266
    6. '   ' → logprob: -19.514163970947266
    7. ' ' → logprob: -19.764163970947266
    8. '[y' → logprob: -19.889163970947266
    9. 'y' → logprob: -20.389163970947266
    10. '(Y' → logprob: -21.139163970947266

Token 224: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005254864692687988
    2. '(y' → logprob: -5.255254745483398
    3. ')y' → logprob: -11.755254745483398
    4. ' y' → logprob: -12.005254745483398
    5. '[y' → logprob: -12.755254745483398
    6. ')' → logprob: -13.505254745483398
    7. ' (' → logprob: -13.505254745483398
    8. ',y' → logprob: -14.505254745483398
    9. 'x' → logprob: -15.255254745483398
    10. ''y' → logprob: -15.755254745483398

Token 225: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.006310323253273964
    2. ',y' → logprob: -5.50631046295166
    3. 'x' → logprob: -6.50631046295166
    4. '[x' → logprob: -7.75631046295166
    5. ',' → logprob: -8.63131046295166
    6. '[y' → logprob: -9.88131046295166
    7. 'y' → logprob: -10.63131046295166
    8. '[' → logprob: -10.75631046295166
    9. '][' → logprob: -11.13131046295166
    10. ')' → logprob: -12.00631046295166

Token 226: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011945136357098818
    2. '               ' → logprob: -7.001194477081299
    3. '):' → logprob: -8.501194953918457
    4. '):
' → logprob: -10.376194953918457
    5. ')
' → logprob: -10.751194953918457
    6. '<|end|>' → logprob: -11.251194953918457
    7. '       ' → logprob: -12.751194953918457
    8. ' )' → logprob: -12.751194953918457
    9. '           ' → logprob: -13.001194953918457
    10. '                   ' → logprob: -13.376194953918457

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008252733387053013
    2. '        
' → logprob: -5.6332526206970215
    3. '<|end|>' → logprob: -6.0082526206970215
    4. '   ' → logprob: -8.13325309753418
    5. '        ' → logprob: -8.25825309753418
    6. ',' → logprob: -8.25825309753418
    7. ' 
' → logprob: -8.63325309753418
    8. ' directions' → logprob: -8.88325309753418
    9. '  
' → logprob: -9.38325309753418
    10. '
' → logprob: -9.38325309753418

Token 228: ' #' (ID: 1069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8288952708244324
    2. '       ' → logprob: -1.5788953304290771
    3. 'moves' → logprob: -1.7038953304290771
    4. 'dirs' → logprob: -2.578895330429077
    5. 'dx' → logprob: -3.203895330429077
    6. 'dy' → logprob: -3.328895330429077
    7. '   ' → logprob: -4.328895092010498
    8. 'from' → logprob: -5.703895092010498
    9. ' directions' → logprob: -5.953895092010498
    10. ' moves' → logprob: -6.953895092010498

Token 229: ' BFS' (ID: 190016)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3902546465396881
    2. 'dirs' → logprob: -2.2652547359466553
    3. 'from' → logprob: -2.3902547359466553
    4. 'moves' → logprob: -2.5152547359466553
    5. 'dy' → logprob: -3.7652547359466553
    6. 'dx' → logprob: -4.765254497528076
    7. '   ' → logprob: -5.515254497528076
    8. '       ' → logprob: -5.640254497528076
    9. 'd' → logprob: -6.265254497528076
    10. 'dir' → logprob: -6.515254497528076

Token 230: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08338835090398788
    2. '
' → logprob: -2.583388328552246
    3. '        
' → logprob: -6.208388328552246
    4. 'queue' → logprob: -6.833388328552246
    5. 'dire' → logprob: -7.333388328552246
    6. ' directions' → logprob: -7.583388328552246
    7. ' queue' → logprob: -8.958388328552246
    8. '
' → logprob: -11.458388328552246
    9. '   ' → logprob: -11.458388328552246
    10. '```' → logprob: -11.583388328552246

Token 231: ' states' (ID: 9407)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -1.1078366041183472
    2. ' states' → logprob: -1.7328366041183472
    3. ' queue' → logprob: -2.3578367233276367
    4. '   ' → logprob: -2.6078367233276367
    5. 'dire' → logprob: -2.7328367233276367
    6. 'deque' → logprob: -2.9828367233276367
    7. 'states' → logprob: -3.1078367233276367
    8. 'queue' → logprob: -3.3578367233276367
    9. ' deque' → logprob: -3.9828367233276367
    10. 'from' → logprob: -4.107836723327637

Token 232: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042391433380544186
    2. '
' → logprob: -5.754239082336426
    3. '        
' → logprob: -7.379239082336426
    4. 'queue' → logprob: -9.004239082336426
    5. ' directions' → logprob: -9.629239082336426
    6. ' queue' → logprob: -10.004239082336426
    7. '```' → logprob: -10.254239082336426
    8. '(queue' → logprob: -10.379239082336426
    9. ',' → logprob: -10.629239082336426
    10. 'dire' → logprob: -10.754239082336426

Token 233: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17866508662700653
    2. ' queue' → logprob: -2.8036651611328125
    3. ' from' → logprob: -3.5536651611328125
    4. ' directions' → logprob: -3.6786651611328125
    5. '   ' → logprob: -4.0536651611328125
    6. ' visited' → logprob: -5.0536651611328125
    7. ' dy' → logprob: -5.1786651611328125
    8. 'from' → logprob: -5.5536651611328125
    9. 'queue' → logprob: -5.6786651611328125
    10. ' states' → logprob: -6.1786651611328125

Token 234: 'pos' (ID: 1103)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14351768791675568
    2. 'start' → logprob: -2.1435177326202393
    3. '(y' → logprob: -4.51851749420166
    4. 'sy' → logprob: -6.01851749420166
    5. '(start' → logprob: -6.89351749420166
    6. ')' → logprob: -7.14351749420166
    7. ')y' → logprob: -7.64351749420166
    8. ' y' → logprob: -7.76851749420166
    9. ' (' → logprob: -9.39351749420166
    10. 'pos' → logprob: -9.51851749420166

Token 235: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014952288940548897
    2. ',' → logprob: -5.514952182769775
    3. ')' → logprob: -5.889952182769775
    4. '(' → logprob: -6.014952182769775
    5. '_left' → logprob: -6.514952182769775
    6. '_L' → logprob: -6.764952182769775
    7. ' (' → logprob: -7.889952182769775
    8. '_' → logprob: -8.264952659606934
    9. '(y' → logprob: -8.389952659606934
    10. 'y' → logprob: -8.389952659606934

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41020217537879944
    2. '[' → logprob: -1.285202145576477
    3. '_y' → logprob: -3.7852022647857666
    4. ')' → logprob: -4.1602020263671875
    5. 'y' → logprob: -4.9102020263671875
    6. ',y' → logprob: -5.5352020263671875
    7. '),' → logprob: -6.1602020263671875
    8. 'L' → logprob: -6.1602020263671875
    9. ' ,' → logprob: -6.4102020263671875
    10. 'Y' → logprob: -6.5352020263671875

Token 237: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2255789339542389
    2. ' pos' → logprob: -1.6005789041519165
    3. '(pos' → logprob: -9.350579261779785
    4. '   ' → logprob: -10.225579261779785
    5. ' (' → logprob: -11.975579261779785
    6. '       ' → logprob: -11.975579261779785
    7. ',' → logprob: -12.600579261779785
    8. '           ' → logprob: -12.600579261779785
    9. ',pos' → logprob: -12.725579261779785
    10. '	pos' → logprob: -12.725579261779785

Token 238: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0014602351002395153
    2. ')' → logprob: -7.376460075378418
    3. '(' → logprob: -7.751460075378418
    4. ',' → logprob: -9.126460075378418
    5. '_L' → logprob: -9.126460075378418
    6. 'R' → logprob: -9.626460075378418
    7. '_left' → logprob: -10.126460075378418
    8. '(L' → logprob: -10.626460075378418
    9. '_' → logprob: -11.751460075378418
    10. '_l' → logprob: -12.126460075378418

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037991306744515896
    2. ',' → logprob: -5.628798961639404
    3. ')
' → logprob: -9.753799438476562
    4. '),' → logprob: -10.253799438476562
    5. '):' → logprob: -10.378799438476562
    6. '       ' → logprob: -10.503799438476562
    7. '):
' → logprob: -11.628799438476562
    8. '))' → logprob: -11.628799438476562
    9. ' )' → logprob: -12.128799438476562
    10. ',)' → logprob: -12.378799438476562

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051579978317022324
    2. '
' → logprob: -4.30157995223999
    3. 'dire' → logprob: -4.42657995223999
    4. ',' → logprob: -4.92657995223999
    5. ' directions' → logprob: -5.30157995223999
    6. '```' → logprob: -5.67657995223999
    7. ',
' → logprob: -6.17657995223999
    8. '   ' → logprob: -6.55157995223999
    9. '        
' → logprob: -6.55157995223999
    10. 'queue' → logprob: -6.55157995223999

Token 241: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016183696687221527
    2. '
' → logprob: -5.516183853149414
    3. 'queue' → logprob: -5.641183853149414
    4. 'dire' → logprob: -5.891183853149414
    5. '   ' → logprob: -6.391183853149414
    6. ' directions' → logprob: -6.516183853149414
    7. ' queue' → logprob: -7.141183853149414
    8. '        
' → logprob: -7.266183853149414
    9. 'moves' → logprob: -8.016183853149414
    10. 'dy' → logprob: -8.641183853149414

Token 242: ' moves' (ID: 19523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5151835083961487
    2. '       ' → logprob: -1.640183448791504
    3. 'dire' → logprob: -2.140183448791504
    4. 'queue' → logprob: -3.140183448791504
    5. 'dy' → logprob: -3.640183448791504
    6. 'moves' → logprob: -5.265183448791504
    7. 'dirs' → logprob: -5.765183448791504
    8. 'from' → logprob: -5.890183448791504
    9. ' queue' → logprob: -6.015183448791504
    10. ' directions' → logprob: -6.265183448791504

Token 243: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005471024662256241
    2. '=' → logprob: -6.005471229553223
    3. '   ' → logprob: -6.505471229553223
    4. 's' → logprob: -6.880471229553223
    5. ',' → logprob: -9.380471229553223
    6. ':' → logprob: -9.505471229553223
    7. '[' → logprob: -10.255471229553223
    8. ' directions' → logprob: -10.255471229553223
    9. '       ' → logprob: -11.005471229553223
    10. 'dire' → logprob: -11.130471229553223

Token 244: ' N' (ID: 478)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9672828316688538
    2. 'dy' → logprob: -1.342282772064209
    3. '[' → logprob: -1.842282772064209
    4. '(-' → logprob: -1.967282772064209
    5. '(' → logprob: -3.842282772064209
    6. ' [(' → logprob: -4.717282772064209
    7. ' dy' → logprob: -4.842282772064209
    8. ' (' → logprob: -4.967282772064209
    9. 'dire' → logprob: -5.592282772064209
    10. 'dirs' → logprob: -6.217282772064209

Token 245: ' S' (ID: 336)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35654643177986145
    2. '   ' → logprob: -1.856546401977539
    3. ' =' → logprob: -2.231546401977539
    4. '       ' → logprob: -4.606546401977539
    5. ' ,' → logprob: -4.731546401977539
    6. '  ' → logprob: -6.481546401977539
    7. 'e' → logprob: -6.481546401977539
    8. '=' → logprob: -6.481546401977539
    9. ' ' → logprob: -6.731546401977539
    10. '      ' → logprob: -6.856546401977539

Token 246: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.33500412106513977
    2. 'E' → logprob: -1.3350040912628174
    3. '   ' → logprob: -3.9600040912628174
    4. ',' → logprob: -7.3350043296813965
    5. ' ' → logprob: -7.9600043296813965
    6. ' W' → logprob: -7.9600043296813965
    7. '  ' → logprob: -8.585003852844238
    8. 'W' → logprob: -8.585003852844238
    9. '       ' → logprob: -8.835003852844238
    10. ' U' → logprob: -9.210003852844238

Token 247: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.012126503512263298
    2. '   ' → logprob: -5.262126445770264
    3. 'ort' → logprob: -6.387126445770264
    4. ' W' → logprob: -6.637126445770264
    5. ',' → logprob: -7.012126445770264
    6. 'orth' → logprob: -7.137126445770264
    7. ' ' → logprob: -7.512126445770264
    8. '  ' → logprob: -8.137126922607422
    9. 'or' → logprob: -8.637126922607422
    10. '       ' → logprob: -9.012126922607422

Token 248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25261983275413513
    2. 'dire' → logprob: -2.127619743347168
    3. ' directions' → logprob: -2.877619743347168
    4. '   ' → logprob: -4.002619743347168
    5. 'dx' → logprob: -5.252619743347168
    6. 'moves' → logprob: -5.502619743347168
    7. 'dy' → logprob: -5.752619743347168
    8. 'd' → logprob: -5.877619743347168
    9. 'dirs' → logprob: -5.877619743347168
    10. '
' → logprob: -6.252619743347168

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033342745155096054
    2. ' directions' → logprob: -4.5333428382873535
    3. 'dire' → logprob: -4.5333428382873535
    4. '
' → logprob: -5.1583428382873535
    5. '        
' → logprob: -6.0333428382873535
    6. ',' → logprob: -7.1583428382873535
    7. '   ' → logprob: -7.1583428382873535
    8. ',
' → logprob: -8.533342361450195
    9. 'moves' → logprob: -8.533342361450195
    10. ' moves' → logprob: -8.783342361450195

Token 250: ' moves' (ID: 19523)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.0027289390563965
    2. '       ' → logprob: -1.1277289390563965
    3. ' directions' → logprob: -2.1277289390563965
    4. 'moves' (adapté à ' moves') → logprob: -2.6277289390563965
    5. ' moves' → logprob: -3.6277289390563965
    6. '
' → logprob: -3.6277289390563965
    7. 'dy' → logprob: -4.1277289390563965
    8. ' dy' → logprob: -4.5027289390563965
    9. 'dirs' → logprob: -4.6277289390563965
    10. 'd' → logprob: -4.6277289390563965

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005548207554966211
    2. '=' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.750555038452148
    4. ' ' → logprob: -15.125555038452148
    5. 's' → logprob: -15.375555038452148
    6. '=[' → logprob: -15.875555038452148
    7. ' =[' → logprob: -16.12555503845215
    8. ' =(' → logprob: -18.25055503845215
    9. '=['' → logprob: -18.75055503845215
    10. ',' → logprob: -18.75055503845215

Token 252: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13000799715518951
    2. '[(' → logprob: -2.1300079822540283
    3. ' [' → logprob: -5.880008220672607
    4. ' [(' → logprob: -8.25500774383545
    5. '[-' → logprob: -11.25500774383545
    6. '[((' → logprob: -12.38000774383545
    7. '['' → logprob: -12.88000774383545
    8. '[
' → logprob: -15.75500774383545
    9. '   ' → logprob: -15.75500774383545
    10. ' [('' → logprob: -15.88000774383545

Token 253: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00091217877343297
    2. '(' → logprob: -7.000912189483643
    3. ' (-' → logprob: -14.625911712646484
    4. '-' → logprob: -16.375911712646484
    5. '   ' → logprob: -16.375911712646484
    6. ' (' → logprob: -19.000911712646484
    7. '0' → logprob: -19.500911712646484
    8. '[-' → logprob: -20.375911712646484
    9. '(+' → logprob: -21.250911712646484
    10. ' ' → logprob: -22.000911712646484

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.625
    3. ' ' → logprob: -16.625
    4. '0' → logprob: -18.375
    5. '   ' → logprob: -19.375
    6. ' -' → logprob: -19.625
    7. '１' → logprob: -20.25
    8. '2' → logprob: -20.8125
    9. ')' → logprob: -20.8125
    10. '(' → logprob: -20.9375

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010485442908247933
    2. ' ,' → logprob: -9.750104904174805
    3. '0' → logprob: -10.000104904174805
    4. '),' → logprob: -14.375104904174805
    5. ',
' → logprob: -15.625104904174805
    6. '),(' → logprob: -16.250104904174805
    7. '<|end|>' → logprob: -16.250104904174805
    8. ',),' → logprob: -16.750104904174805
    9. '```' → logprob: -18.125104904174805
    10. ',),
' → logprob: -18.375104904174805

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -17.000030517578125
    4. ',' → logprob: -19.750030517578125
    5. '
' → logprob: -20.000030517578125
    6. '   ' → logprob: -20.625030517578125
    7. '۰' → logprob: -21.375030517578125
    8. '),' → logprob: -21.625030517578125
    9. '  ' → logprob: -21.875030517578125
    10. '```' → logprob: -22.875030517578125

Token 257: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.011780884116888046
    2. '),(' → logprob: -4.511780738830566
    3. '),
' → logprob: -7.261780738830566
    4. ' ),' → logprob: -11.136780738830566
    5. ')' → logprob: -11.261780738830566
    6. '),

' → logprob: -12.761780738830566
    7. ',),' → logprob: -15.011780738830566
    8. '),
' → logprob: -16.011781692504883
    9. ' ),
' → logprob: -16.761781692504883
    10. ',' → logprob: -16.761781692504883

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012570773833431304
    2. '0' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.125125885009766
    4. '+' → logprob: -15.500125885009766
    5. '
' → logprob: -18.000125885009766
    6. '```' → logprob: -18.250125885009766
    7. '   ' → logprob: -18.500125885009766
    8. ')' → logprob: -18.625125885009766
    9. '2' → logprob: -18.750125885009766
    10. '01' → logprob: -19.125125885009766

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008178464486263692
    2. '0' → logprob: -7.125817775726318
    3. ' ,' → logprob: -11.250818252563477
    4. ' ' → logprob: -15.250818252563477
    5. '<|end|>' → logprob: -18.000818252563477
    6. ')' → logprob: -18.250818252563477
    7. '   ' → logprob: -18.500818252563477
    8. ',
' → logprob: -18.750818252563477
    9. '),(' → logprob: -19.000818252563477
    10. '```' → logprob: -19.125818252563477

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.125009536743164
    4. '۰' → logprob: -18.125009536743164
    5. '-' → logprob: -18.687509536743164
    6. '00' → logprob: -18.687509536743164
    7. '０' → logprob: -19.812509536743164
    8. '  ' → logprob: -20.250009536743164
    9. '```' → logprob: -20.312509536743164
    10. '000' → logprob: -20.562509536743164

Token 261: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0005549400229938328
    2. '),' → logprob: -7.500555038452148
    3. ',' → logprob: -14.750555038452148
    4. '0' → logprob: -14.875555038452148
    5. ',(' → logprob: -15.000555038452148
    6. '(' → logprob: -15.000555038452148
    7. ' ),' → logprob: -15.500555038452148
    8. '),
' → logprob: -15.750555038452148
    9. ')' → logprob: -16.62555503845215
    10. ' ' → logprob: -17.37555503845215

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.8750057220459
    4. '۰' → logprob: -17.0000057220459
    5. '00' → logprob: -17.5000057220459
    6. '(' → logprob: -17.6250057220459
    7. '000' → logprob: -19.0000057220459
    8. '０' → logprob: -19.2500057220459
    9. '  ' → logprob: -19.3125057220459
    10. '
' → logprob: -19.4375057220459

Token 263: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0017033906187862158
    2. ',' → logprob: -6.376703262329102
    3. ',+' → logprob: -14.376703262329102
    4. ' ,-' → logprob: -15.251703262329102
    5. ',--' → logprob: -16.0017032623291
    6. ',-
' → logprob: -16.3767032623291
    7. '-' → logprob: -16.5017032623291
    8. ',-

' → logprob: -16.7517032623291
    9. ' ,' → logprob: -16.8767032623291
    10. ',
' → logprob: -17.7517032623291

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.625001907348633
    4. ',' → logprob: -16.500001907348633
    5. ')' → logprob: -18.375001907348633
    6. '-' → logprob: -18.562501907348633
    7. '```' → logprob: -18.562501907348633
    8. '+' → logprob: -18.812501907348633
    9. '2' → logprob: -19.937501907348633
    10. '   ' → logprob: -20.375001907348633

Token 265: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0001475220051361248
    2. '),' → logprob: -9.250147819519043
    3. ',' → logprob: -10.250147819519043
    4. ',(' → logprob: -11.750147819519043
    5. ')' → logprob: -12.875147819519043
    6. ')]' → logprob: -13.000147819519043
    7. '(' → logprob: -13.250147819519043
    8. '0' → logprob: -13.875147819519043
    9. '),
' → logprob: -15.500147819519043
    10. ')(' → logprob: -15.875147819519043

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. '1' → logprob: -11.875014305114746
    3. ' ' → logprob: -11.875014305114746
    4. '(' → logprob: -16.437515258789062
    5. '۰' → logprob: -16.750015258789062
    6. ',' → logprob: -16.937515258789062
    7. ')' → logprob: -17.062515258789062
    8. '```' → logprob: -17.562515258789062
    9. '-' → logprob: -17.750015258789062
    10. '   ' → logprob: -17.937515258789062

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024813658092170954
    2. '1' → logprob: -6.002481460571289
    3. ',+' → logprob: -12.752481460571289
    4. ' ,' → logprob: -13.752481460571289
    5. '0' → logprob: -14.002481460571289
    6. ' ' → logprob: -15.252481460571289
    7. ',(' → logprob: -15.627481460571289
    8. ',
' → logprob: -15.627481460571289
    9. '```' → logprob: -15.752481460571289
    10. ',-' → logprob: -16.81498146057129

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. '0' → logprob: -11.125024795532227
    3. '+' → logprob: -11.750024795532227
    4. ' ' → logprob: -13.125024795532227
    5. '```' → logprob: -16.625024795532227
    6. ')' → logprob: -18.500024795532227
    7. '
' → logprob: -18.750024795532227
    8. '-' → logprob: -18.937524795532227
    9. ' +' → logprob: -19.187524795532227
    10. '[' → logprob: -19.937524795532227

Token 269: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0023127419408410788
    2. ')' → logprob: -6.252312660217285
    3. '),' → logprob: -8.502312660217285
    4. '),(' → logprob: -8.752312660217285
    5. ' )' → logprob: -11.502312660217285
    6. ']' → logprob: -11.877312660217285
    7. '))' → logprob: -12.877312660217285
    8. ')}' → logprob: -14.002312660217285
    9. ')])' → logprob: -14.502312660217285
    10. ')]
' → logprob: -14.752312660217285

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036342807579785585
    2. 'visited' → logprob: -6.253634452819824
    3. 'queue' → logprob: -7.378634452819824
    4. ',' → logprob: -7.628634452819824
    5. ' visited' → logprob: -8.628634452819824
    6. ' queue' → logprob: -9.628634452819824
    7. 'from' → logprob: -9.628634452819824
    8. '
' → logprob: -10.003634452819824
    9. '        
' → logprob: -10.003634452819824
    10. '   ' → logprob: -10.003634452819824

Token 271: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.8000133633613586
    2. 'from' → logprob: -1.3000133037567139
    3. 'queue' → logprob: -1.3000133037567139
    4. '   ' → logprob: -6.175013542175293
    5. '       ' → logprob: -6.175013542175293
    6. 'q' → logprob: -8.300013542175293
    7. 'seen' → logprob: -8.425013542175293
    8. 'dist' → logprob: -8.550013542175293
    9. 'que' → logprob: -8.675013542175293
    10. 'deque' → logprob: -8.800013542175293

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011064562946557999
    2. '=' → logprob: -4.511064529418945
    3. '=set' → logprob: -11.136064529418945
    4. ')' → logprob: -13.886064529418945
    5. '[' → logprob: -14.136064529418945
    6. ' ' → logprob: -15.511064529418945
    7. ',' → logprob: -16.011064529418945
    8. ']' → logprob: -17.011064529418945
    9. ' ' → logprob: -17.511064529418945
    10. '.add' → logprob: -17.761064529418945

Token 273: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.062106166034936905
    2. ' set' → logprob: -2.812106132507324
    3. '[[' → logprob: -9.062106132507324
    4. '{' → logprob: -11.437106132507324
    5. ' [[[' → logprob: -11.562106132507324
    6. '[' → logprob: -13.687106132507324
    7. ' [[' → logprob: -14.437106132507324
    8. '{}' → logprob: -15.437106132507324
    9. '	set' → logprob: -16.18710708618164
    10. '(set' → logprob: -16.43710708618164

Token 274: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1494031697511673
    2. '(' → logprob: -2.7744030952453613
    3. '       ' → logprob: -3.1494030952453613
    4. ',' → logprob: -4.149403095245361
    5. '((' → logprob: -4.524403095245361
    6. '()
' → logprob: -6.399403095245361
    7. '   ' → logprob: -6.524403095245361
    8. '(
' → logprob: -6.649403095245361
    9. '([(' → logprob: -7.774403095245361
    10. '<|end|>' → logprob: -7.774403095245361

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030086461454629898
    2. ',' → logprob: -5.280086517333984
    3. '   ' → logprob: -5.280086517333984
    4. ' queue' → logprob: -5.280086517333984
    5. '```' → logprob: -5.780086517333984
    6. '(queue' → logprob: -6.030086517333984
    7. ' 
' → logprob: -6.530086517333984
    8. 'queue' → logprob: -6.655086517333984
    9. '        
' → logprob: -6.905086517333984
    10. '<|end|>' → logprob: -6.905086517333984

Token 276: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.1297120302915573
    2. 'from' → logprob: -2.1297121047973633
    3. ' queue' → logprob: -7.254712104797363
    4. '   ' → logprob: -7.379712104797363
    5. '       ' → logprob: -7.379712104797363
    6. ' from' → logprob: -8.129712104797363
    7. 'deque' → logprob: -8.379712104797363
    8. '```' → logprob: -8.754712104797363
    9. 'q' → logprob: -9.254712104797363
    10. '
' → logprob: -11.004712104797363

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1283806562423706
    2. '=' → logprob: -2.75338077545166
    3. '.append' → logprob: -2.87838077545166
    4. 'deque' → logprob: -9.00338077545166
    5. '.' → logprob: -9.37838077545166
    6. '(queue' → logprob: -9.75338077545166
    7. '.dequeue' → logprob: -9.75338077545166
    8. '([(' → logprob: -9.75338077545166
    9. '(' → logprob: -10.37838077545166
    10. '.add' → logprob: -10.50338077545166

Token 278: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0001234428636962548
    2. ' deque' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.500123977661133
    4. 'Deque' → logprob: -19.875123977661133
    5. 'collections' → logprob: -20.250123977661133
    6. '```' → logprob: -21.250123977661133
    7. '[(' → logprob: -21.500123977661133
    8. '(de' → logprob: -22.000123977661133
    9. 'de' → logprob: -22.625123977661133
    10. ' ' → logprob: -22.750123977661133

Token 279: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.013822134584188461
    2. '([' → logprob: -4.888822078704834
    3. '()' → logprob: -5.263822078704834
    4. '(' → logprob: -7.138822078704834
    5. '([
' → logprob: -9.013822555541992
    6. '[(' → logprob: -9.888822555541992
    7. '((' → logprob: -10.138822555541992
    8. '([]' → logprob: -12.513822555541992
    9. '[((' → logprob: -12.638822555541992
    10. '(((' → logprob: -12.888822555541992

Token 280: '       ' (ID: 309)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.6124497056007385
    2. '       ' → logprob: -0.9874497056007385
    3. ' queue' → logprob: -3.2374496459960938
    4. ' (' → logprob: -3.7374496459960938
    5. '(' → logprob: -4.737449645996094
    6. 'queue' → logprob: -4.987449645996094
    7. '[' → logprob: -5.987449645996094
    8. '```' → logprob: -6.612449645996094
    9. '   ' → logprob: -7.362449645996094
    10. '((' → logprob: -7.362449645996094

Token 281: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.3843115568161011
    2. ' queue' → logprob: -1.759311556816101
    3. '       ' → logprob: -2.6343116760253906
    4. '(queue' → logprob: -2.6343116760253906
    5. ' (' → logprob: -6.884311676025391
    6. '   ' → logprob: -7.009311676025391
    7. 'visited' → logprob: -7.634311676025391
    8. '(' → logprob: -8.00931167602539
    9. 'start' → logprob: -8.50931167602539
    10. '((' → logprob: -8.88431167602539

Token 282: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -10.87502384185791
    3. '().' → logprob: -13.37502384185791
    4. '.extend' → logprob: -13.50002384185791
    5. '.enqueue' → logprob: -14.00002384185791
    6. ').' → logprob: -14.50002384185791
    7. ' .' → logprob: -15.25002384185791
    8. '.put' → logprob: -15.87502384185791
    9. '.p' → logprob: -15.87502384185791
    10. 'append' → logprob: -16.250024795532227

Token 283: '(' (ID: 7)
  Prédit: '((('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(((' → logprob: -0.0013880894985049963
    2. '((' → logprob: -7.001388072967529
    3. '(' → logprob: -7.876388072967529
    4. '((((' → logprob: -9.251388549804688
    5. '([(' → logprob: -14.626388549804688
    6. '[((' → logprob: -15.626388549804688
    7. ')(((' → logprob: -16.876388549804688
    8. '(
' → logprob: -17.251388549804688
    9. ' (((' → logprob: -17.626388549804688
    10. '   ' → logprob: -17.751388549804688

Token 284: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.006792459171265364
    2. '((' → logprob: -5.0067925453186035
    3. '(' → logprob: -9.506792068481445
    4. ' (' → logprob: -13.381792068481445
    5. '[start' → logprob: -15.006792068481445
    6. '   ' → logprob: -15.256792068481445
    7. 'start' → logprob: -15.881792068481445
    8. '(s' → logprob: -16.131792068481445
    9. '(((' → logprob: -16.506792068481445
    10. '       ' → logprob: -16.506792068481445

Token 285: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.008783210068941116
    2. '(start' → logprob: -4.758783340454102
    3. '(' → logprob: -8.883783340454102
    4. ' start' → logprob: -10.758783340454102
    5. '0' → logprob: -12.133783340454102
    6. '((' → logprob: -13.133783340454102
    7. ' (' → logprob: -14.383783340454102
    8. ')' → logprob: -15.008783340454102
    9. '[start' → logprob: -15.383783340454102
    10. '(*' → logprob: -15.758783340454102

Token 286: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -5.676981345459353e-06
    2. '(L' → logprob: -12.750005722045898
    3. '(' → logprob: -13.250005722045898
    4. ')' → logprob: -15.125005722045898
    5. ' L' → logprob: -15.125005722045898
    6. ',' → logprob: -15.250005722045898
    7. ')L' → logprob: -16.1250057220459
    8. '_L' → logprob: -17.0000057220459
    9. '((' → logprob: -17.0000057220459
    10. '[' → logprob: -17.2500057220459

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006484562181867659
    2. ',
' → logprob: -8.875648498535156
    3. '),' → logprob: -8.875648498535156
    4. ',(' → logprob: -9.500648498535156
    5. ' ,' → logprob: -9.625648498535156
    6. ',start' → logprob: -9.750648498535156
    7. '),(' → logprob: -9.875648498535156
    8. ')' → logprob: -10.250648498535156
    9. ',y' → logprob: -11.000648498535156
    10. ',None' → logprob: -11.250648498535156

Token 288: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0019287518225610256
    2. ' start' → logprob: -6.251928806304932
    3. '(start' → logprob: -16.126928329467773
    4. ')' → logprob: -19.251928329467773
    5. ' ' → logprob: -19.251928329467773
    6. '[start' → logprob: -19.501928329467773
    7. '   ' → logprob: -19.751928329467773
    8. '(' → logprob: -19.876928329467773
    9. '	start' → logprob: -20.376928329467773
    10. '  ' → logprob: -21.501928329467773

Token 289: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.2842308680992573e-05
    2. 'L' → logprob: -10.750022888183594
    3. ')' → logprob: -14.125022888183594
    4. '_R' → logprob: -15.250022888183594
    5. ',' → logprob: -15.875022888183594
    6. '(' → logprob: -16.500022888183594
    7. ' R' → logprob: -17.250022888183594
    8. '(start' → logprob: -17.750022888183594
    9. 'start' → logprob: -17.875022888183594
    10. '(R' → logprob: -18.000022888183594

Token 290: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003637011395767331
    2. ')' → logprob: -5.628636837005615
    3. ' ,' → logprob: -10.378637313842773
    4. '),' → logprob: -13.003637313842773
    5. ',)' → logprob: -14.003637313842773
    6. '))' → logprob: -14.378637313842773
    7. ',None' → logprob: -15.003637313842773
    8. ' )' → logprob: -15.378637313842773
    9. ',true' → logprob: -15.628637313842773
    10. ',len' → logprob: -15.753637313842773

Token 291: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2814233601093292
    2. ',' → logprob: -1.4064233303070068
    3. ' )' → logprob: -9.156423568725586
    4. ')
' → logprob: -9.781423568725586
    5. '       ' → logprob: -10.156423568725586
    6. ' ,' → logprob: -10.781423568725586
    7. ',
' → logprob: -11.281423568725586
    8. '<|end|>' → logprob: -11.531423568725586
    9. ',)' → logprob: -11.781423568725586
    10. '))' → logprob: -12.531423568725586

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7113555073738098
    2. 'visited' → logprob: -0.7113555073738098
    3. ',' → logprob: -5.086355686187744
    4. '```' → logprob: -5.086355686187744
    5. ' visited' → logprob: -5.336355686187744
    6. '<|end|>' → logprob: -8.961355209350586
    7. '   ' → logprob: -9.086355209350586
    8. ')' → logprob: -9.211355209350586
    9. '
' → logprob: -9.336355209350586
    10. '        
' → logprob: -9.711355209350586

Token 293: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.08466336131095886
    2. '       ' → logprob: -2.5846633911132812
    3. 'steps' → logprob: -6.209663391113281
    4. ' visited' → logprob: -6.334663391113281
    5. 'distance' → logprob: -7.334663391113281
    6. '
' → logprob: -7.834663391113281
    7. 'moves' → logprob: -7.959663391113281
    8. 'dist' → logprob: -8.959663391113281
    9. 'depth' → logprob: -9.334663391113281
    10. '0' → logprob: -9.709663391113281

Token 294: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.64839569455944e-05
    2. '.' → logprob: -9.500076293945312
    3. '.append' → logprob: -14.000076293945312
    4. ').' → logprob: -15.750076293945312
    5. '.setdefault' → logprob: -16.125076293945312
    6. '.update' → logprob: -16.375076293945312
    7. ' .' → logprob: -16.500076293945312
    8. '.Add' → logprob: -16.875076293945312
    9. '.clear' → logprob: -17.000076293945312
    10. '.=' → logprob: -17.750076293945312

Token 295: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07979604601860046
    2. '(' → logprob: -2.579796075820923
    3. '(((' → logprob: -7.079795837402344
    4. '(start' → logprob: -10.454795837402344
    5. ' ((' → logprob: -10.829795837402344
    6. ' (' → logprob: -11.704795837402344
    7. '(queue' → logprob: -11.954795837402344
    8. '```' → logprob: -15.454795837402344
    9. '   ' → logprob: -16.079795837402344
    10. '(tuple' → logprob: -16.454795837402344

Token 296: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00041267683263868093
    2. ' (' → logprob: -8.000412940979004
    3. '(' → logprob: -10.000412940979004
    4. '((' → logprob: -10.375412940979004
    5. '   ' → logprob: -15.250412940979004
    6. '  ' → logprob: -15.875412940979004
    7. '(st' → logprob: -16.125411987304688
    8. '(Start' → logprob: -16.875411987304688
    9. 'start' → logprob: -17.000411987304688
    10. '[start' → logprob: -17.250411987304688

Token 297: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007378002628684044
    2. '(start' → logprob: -7.25073766708374
    3. ' start' → logprob: -10.500738143920898
    4. '(' → logprob: -15.000738143920898
    5. '((' → logprob: -16.5007381439209
    6. ' (' → logprob: -16.8757381439209
    7. '[start' → logprob: -19.2507381439209
    8. ',start' → logprob: -19.3757381439209
    9. ')' → logprob: -19.6257381439209
    10. '	start' → logprob: -19.7507381439209

Token 298: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.000206401280593127
    2. '(start' → logprob: -8.625205993652344
    3. '(' → logprob: -11.375205993652344
    4. '((' → logprob: -11.500205993652344
    5. '(L' → logprob: -12.625205993652344
    6. 'start' → logprob: -14.000205993652344
    7. ' L' → logprob: -14.625205993652344
    8. ')' → logprob: -15.750205993652344
    9. ' (' → logprob: -16.000205993652344
    10. ')L' → logprob: -16.625205993652344

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007499480270780623
    2. ' ,' → logprob: -7.6257500648498535
    3. ',
' → logprob: -8.625749588012695
    4. ')' → logprob: -9.625749588012695
    5. ',start' → logprob: -12.125749588012695
    6. ',end' → logprob: -12.875749588012695
    7. ',state' → logprob: -13.625749588012695
    8. '),' → logprob: -14.500749588012695
    9. '<|end|>' → logprob: -14.500749588012695
    10. ',last' → logprob: -14.750749588012695

Token 300: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009117019944824278
    2. ' start' → logprob: -7.000911712646484
    3. '(start' → logprob: -16.750911712646484
    4. ')' → logprob: -17.000911712646484
    5. ' ' → logprob: -17.375911712646484
    6. '0' → logprob: -18.750911712646484
    7. '  ' → logprob: -19.000911712646484
    8. '   ' → logprob: -19.250911712646484
    9. '[start' → logprob: -19.875911712646484
    10. '    ' → logprob: -21.000911712646484

Token 301: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03979773446917534
    2. ',' → logprob: -3.539797782897949
    3. ')' → logprob: -5.664797782897949
    4. ' ,' → logprob: -5.664797782897949
    5. '(' → logprob: -6.914797782897949
    6. ',None' → logprob: -7.039797782897949
    7. 'R' → logprob: -7.789797782897949
    8. ',L' → logprob: -8.66479778289795
    9. ',(' → logprob: -9.28979778289795
    10. '),(' → logprob: -9.28979778289795

Token 302: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. '))' → logprob: -10.625029563903809
    3. ' )' → logprob: -12.625029563903809
    4. ')
' → logprob: -13.750029563903809
    5. ',' → logprob: -15.250029563903809
    6. ')}' → logprob: -15.875029563903809
    7. '       ' → logprob: -16.625028610229492
    8. '}' → logprob: -16.750028610229492
    9. '   ' → logprob: -16.750028610229492
    10. '),' → logprob: -17.000028610229492

Token 303: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ')
' → logprob: -12.000012397766113
    3. ' )' → logprob: -12.375012397766113
    4. '))' → logprob: -14.750012397766113
    5. '       ' → logprob: -15.250012397766113
    6. '),' → logprob: -15.750012397766113
    7. ')}' → logprob: -15.750012397766113
    8. ',' → logprob: -16.000011444091797
    9. '<|end|>' → logprob: -16.250011444091797
    10. '`)' → logprob: -16.750011444091797

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019023919478058815
    2. ',' → logprob: -5.019023895263672
    3. 'steps' → logprob: -5.519023895263672
    4. '```' → logprob: -5.769023895263672
    5. 'while' → logprob: -6.019023895263672
    6. '   ' → logprob: -7.019023895263672
    7. ' while' → logprob: -8.019023895263672
    8. '        
' → logprob: -8.144023895263672
    9. ' steps' → logprob: -8.394023895263672
    10. 'moves' → logprob: -8.519023895263672

Token 305: ' def' (ID: 1056)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.04208683967590332
    2. 'dist' → logprob: -3.5420868396759033
    3. 'while' → logprob: -5.292086601257324
    4. 'distance' → logprob: -5.542086601257324
    5. 'moves' → logprob: -6.667086601257324
    6. 'depth' → logprob: -6.792086601257324
    7. 'step' → logprob: -7.792086601257324
    8. 'level' → logprob: -8.292086601257324
    9. '       ' → logprob: -8.542086601257324
    10. ' steps' → logprob: -10.792086601257324

Token 306: ' is' (ID: 382)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.4058005213737488
    2. ' is' → logprob: -2.0308005809783936
    3. ' bfs' → logprob: -2.0308005809783936
    4. 'valid' → logprob: -3.4058005809783936
    5. ' can' → logprob: -3.7808005809783936
    6. 'is' → logprob: -4.5308003425598145
    7. ' in' → logprob: -6.5308003425598145
    8. 'b' → logprob: -6.7808003425598145
    9. ' neighbors' → logprob: -7.5308003425598145
    10. 'can' → logprob: -8.155800819396973

Token 307: '_open' (ID: 26173)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.18442076444625854
    2. '_pass' → logprob: -2.5594208240509033
    3. '_open' → logprob: -3.0594208240509033
    4. '_free' → logprob: -4.309420585632324
    5. '_wall' → logprob: -4.684420585632324
    6. '_access' → logprob: -4.934420585632324
    7. '_walk' → logprob: -5.059420585632324
    8. 'valid' → logprob: -6.059420585632324
    9. '_in' → logprob: -6.809420585632324
    10. '_block' → logprob: -6.934420585632324

Token 308: '(room' (ID: 69259)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00572197837755084
    2. '(room' → logprob: -5.8807220458984375
    3. '(pos' → logprob: -6.5057220458984375
    4. '(' → logprob: -6.6307220458984375
    5. '(cell' → logprob: -9.880722045898438
    6. '(
' → logprob: -11.130722045898438
    7. '((' → logprob: -11.755722045898438
    8. '(x' → logprob: -12.005722045898438
    9. '(space' → logprob: -12.505722045898438
    10. ' (' → logprob: -12.755722045898438

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14755873382091522
    2. '[y' → logprob: -2.2725586891174316
    3. ',y' → logprob: -3.5225586891174316
    4. 'L' → logprob: -5.647558689117432
    5. '[' → logprob: -7.897558689117432
    6. ' ,' → logprob: -8.14755916595459
    7. '   ' → logprob: -9.02255916595459
    8. ',[' → logprob: -9.89755916595459
    9. '_,' → logprob: -10.14755916595459
    10. ')' → logprob: -10.52255916595459

Token 310: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13234928250312805
    2. 'pos' → logprob: -2.1323492527008057
    3. ' y' → logprob: -5.507349491119385
    4. ' pos' → logprob: -6.882349491119385
    5. '   ' → logprob: -8.132349014282227
    6. 'position' → logprob: -11.257349014282227
    7. '       ' → logprob: -12.132349014282227
    8. ' ' → logprob: -13.257349014282227
    9. '           ' → logprob: -13.382349014282227
    10. 'p' → logprob: -13.632349014282227

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07365100830793381
    2. ',y' → logprob: -2.698651075363159
    3. ',x' → logprob: -5.94865083694458
    4. ' ,' → logprob: -6.94865083694458
    5. ',int' → logprob: -10.823651313781738
    6. ',w' → logprob: -11.198651313781738
    7. ',v' → logprob: -11.198651313781738
    8. ',n' → logprob: -11.448651313781738
    9. ',t' → logprob: -11.948651313781738
    10. ',
' → logprob: -11.948651313781738

Token 312: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. '	x' → logprob: -18.000059127807617
    4. '   ' → logprob: -18.250059127807617
    5. ',x' → logprob: -20.375059127807617
    6. ' ' → logprob: -20.500059127807617
    7. ')x' → logprob: -20.750059127807617
    8. '_x' → logprob: -21.500059127807617
    9. '  ' → logprob: -21.625059127807617
    10. '    ' → logprob: -21.875059127807617

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1274479180574417
    2. '):
' → logprob: -2.1274478435516357
    3. ')' → logprob: -7.627448081970215
    4. '):

' → logprob: -11.502448081970215
    5. '   ' → logprob: -11.627448081970215
    6. '):
' → logprob: -11.877448081970215
    7. ' ):' → logprob: -12.502448081970215
    8. ',' → logprob: -14.127448081970215
    9. ')==' → logprob: -15.252448081970215
    10. '       ' → logprob: -15.252448081970215

Token 314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4936232566833496
    2. '       ' → logprob: -1.2436232566833496
    3. ' ' → logprob: -3.7436232566833496
    4. '   ' → logprob: -3.8686232566833496
    5. ' return' → logprob: -4.36862325668335
    6. ' 
' → logprob: -4.36862325668335
    7. '        ' → logprob: -4.86862325668335
    8. '<|end|>' → logprob: -4.86862325668335
    9. ')' → logprob: -5.99362325668335
    10. ',' → logprob: -6.11862325668335

Token 315: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3970412611961365
    2. ' return' → logprob: -1.1470413208007812
    3. '           ' → logprob: -4.647041320800781
    4. '   ' → logprob: -8.397041320800781
    5. '               ' → logprob: -9.147041320800781
    6. 'if' → logprob: -9.522041320800781
    7. ' ' → logprob: -9.772041320800781
    8. ' if' → logprob: -10.147041320800781
    9. '0' → logprob: -11.272041320800781
    10. '	return' → logprob: -12.772041320800781

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010940528474748135
    2. 'room' → logprob: -5.2609405517578125
    3. ' ' → logprob: -5.3859405517578125
    4. ' room' → logprob: -8.010940551757812
    5. 'y' → logprob: -8.135940551757812
    6. '(' → logprob: -8.510940551757812
    7. '(room' → logprob: -8.885940551757812
    8. '(y' → logprob: -9.885940551757812
    9. ' y' → logprob: -10.010940551757812
    10. ' (' → logprob: -10.510940551757812

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002628096379339695
    2. 'room' → logprob: -6.127628326416016
    3. '(' → logprob: -8.127628326416016
    4. 'y' → logprob: -9.502628326416016
    5. '(room' → logprob: -10.252628326416016
    6. '(y' → logprob: -10.502628326416016
    7. ' ' → logprob: -11.752628326416016
    8. ' room' → logprob: -13.502628326416016
    9. ' (' → logprob: -15.127628326416016
    10. ' y' → logprob: -16.002628326416016

Token 318: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6768370270729065
    2. '<' → logprob: -1.1768369674682617
    3. ' <=' → logprob: -2.0518369674682617
    4. ' <' → logprob: -3.0518369674682617
    5. '<len' → logprob: -5.051836967468262
    6. ' or' → logprob: -8.051836967468262
    7. 'or' → logprob: -8.051836967468262
    8. '   ' → logprob: -8.676836967468262
    9. ' y' → logprob: -9.176836967468262
    10. '       ' → logprob: -9.676836967468262

Token 319: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019287518225610256
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -15.751928329467773
    4. 'x' → logprob: -18.501928329467773
    5. '   ' → logprob: -19.376928329467773
    6. ' ' → logprob: -19.501928329467773
    7. ')y' → logprob: -19.626928329467773
    8. 'Y' → logprob: -19.751928329467773
    9. '```' → logprob: -20.251928329467773
    10. '‘y' → logprob: -21.001928329467773

Token 320: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10442233830690384
    2. ' <' → logprob: -2.8544223308563232
    3. '<H' → logprob: -3.2294223308563232
    4. ' and' → logprob: -6.854422569274902
    5. 'and' → logprob: -7.729422569274902
    6. '<W' → logprob: -8.354422569274902
    7. '<len' → logprob: -8.729422569274902
    8. '<size' → logprob: -10.479422569274902
    9. '<n' → logprob: -11.479422569274902
    10. '<N' → logprob: -11.479422569274902

Token 321: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.935296834039036e-06
    2. ' H' → logprob: -12.75000286102295
    3. 'len' → logprob: -17.500003814697266
    4. '(H' → logprob: -20.750003814697266
    5. '   ' → logprob: -21.500003814697266
    6. ' len' → logprob: -22.625003814697266
    7. '	H' → logprob: -22.750003814697266
    8. 'h' → logprob: -23.500003814697266
    9. ' ' → logprob: -23.500003814697266
    10. '(' → logprob: -23.750003814697266

Token 322: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005244783591479063
    2. 'and' → logprob: -5.255244731903076
    3. '<|end|>' → logprob: -12.005245208740234
    4. '       ' → logprob: -13.755245208740234
    5. '           ' → logprob: -14.005245208740234
    6. '        ' → logprob: -14.005245208740234
    7. ',' → logprob: -14.005245208740234
    8. '	and' → logprob: -14.880245208740234
    9. '               ' → logprob: -15.630245208740234
    10. ' ' → logprob: -15.755245208740234

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003799834754317999
    2. 'x' → logprob: -6.003799915313721
    3. ' ' → logprob: -6.753799915313721
    4. 'W' → logprob: -9.003799438476562
    5. ' x' → logprob: -10.628799438476562
    6. ' W' → logprob: -11.628799438476562
    7. '   ' → logprob: -15.128799438476562
    8. '           ' → logprob: -16.003799438476562
    9. '       ' → logprob: -16.128799438476562
    10. 'w' → logprob: -16.878799438476562

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26943179965019226
    2. 'x' → logprob: -2.0194318294525146
    3. 'W' → logprob: -2.2694318294525146
    4. ' W' → logprob: -9.894432067871094
    5. ' ' → logprob: -10.519432067871094
    6. ' x' → logprob: -11.894432067871094
    7. 'X' → logprob: -16.019432067871094
    8. 'w' → logprob: -16.269432067871094
    9. '<W' → logprob: -16.394432067871094
    10. '   ' → logprob: -16.769432067871094

Token 325: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2960437834262848
    2. ' <' → logprob: -1.5460437536239624
    3. 'and' → logprob: -3.921043872833252
    4. ' and' → logprob: -4.421043872833252
    5. '<len' → logprob: -5.296043872833252
    6. '<W' → logprob: -5.296043872833252
    7. '<x' → logprob: -7.671043872833252
    8. 'x' → logprob: -8.421043395996094
    9. '   ' → logprob: -9.046043395996094
    10. '       ' → logprob: -9.046043395996094

Token 326: ' x' (ID: 1215)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.017070148140192032
    2. 'x' → logprob: -4.142070293426514
    3. ' W' → logprob: -6.892070293426514
    4. ' x' → logprob: -11.517069816589355
    5. '   ' → logprob: -12.517069816589355
    6. 'w' → logprob: -12.892069816589355
    7. 'y' → logprob: -13.267069816589355
    8. ' ' → logprob: -14.267069816589355
    9. '  ' → logprob: -15.267069816589355
    10. '```' → logprob: -15.392069816589355

Token 327: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47997453808784485
    2. '<' → logprob: -0.9799745082855225
    3. '<H' → logprob: -5.229974746704102
    4. '<W' → logprob: -7.604974746704102
    5. '[' → logprob: -11.729974746704102
    6. '<|end|>' → logprob: -12.479974746704102
    7. '<LM' → logprob: -13.104974746704102
    8. 'H' → logprob: -13.104974746704102
    9. ' ' → logprob: -13.229974746704102
    10. '<len' → logprob: -13.354974746704102

Token 328: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.001503313542343676
    2. ' W' → logprob: -6.5015034675598145
    3. ' ' → logprob: -14.501502990722656
    4. '   ' → logprob: -14.626502990722656
    5. '  ' → logprob: -16.751502990722656
    6. '	W' → logprob: -17.751502990722656
    7. '
' → logprob: -18.626502990722656
    8. '    ' → logprob: -18.876502990722656
    9. '       ' → logprob: -19.126502990722656
    10. '```' → logprob: -19.251502990722656

Token 329: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004641949664801359
    2. 'and' → logprob: -5.379642009735107
    3. '   ' → logprob: -11.87964153289795
    4. '       ' → logprob: -12.12964153289795
    5. '           ' → logprob: -12.75464153289795
    6. ' ' → logprob: -13.00464153289795
    7. '<|end|>' → logprob: -13.12964153289795
    8. '	and' → logprob: -14.12964153289795
    9. '    ' → logprob: -15.25464153289795
    10. '          ' → logprob: -15.50464153289795

Token 330: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.20181432366371155
    2. ' room' → logprob: -1.7018142938613892
    3. '(room' → logprob: -7.8268141746521
    4. '	room' → logprob: -13.451814651489258
    5. ' (' → logprob: -15.451814651489258
    6. '   ' → logprob: -16.326814651489258
    7. '.room' → logprob: -16.451814651489258
    8. '           ' → logprob: -17.201814651489258
    9. '_room' → logprob: -17.701814651489258
    10. '(' → logprob: -17.701814651489258

Token 331: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.512236498361744e-07
    2. '][' → logprob: -14.750000953674316
    3. '[' → logprob: -16.75
    4. 'y' → logprob: -17.0
    5. ')[' → logprob: -17.75
    6. '[Y' → logprob: -18.125
    7. '```' → logprob: -19.25
    8. '[user' → logprob: -20.0
    9. '[x' → logprob: -20.125
    10. ' [' → logprob: -20.25

Token 332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010032468708232045
    2. '[x' → logprob: -9.750100135803223
    3. ']' → logprob: -10.250100135803223
    4. '[y' → logprob: -12.250100135803223
    5. '   ' → logprob: -14.500100135803223
    6. ']!=' → logprob: -14.875100135803223
    7. '[' → logprob: -14.875100135803223
    8. ' ][' → logprob: -16.12510108947754
    9. ']][' → logprob: -16.25010108947754
    10. ''][' → logprob: -16.50010108947754

Token 333: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.531315314830863e-06
    2. ' x' → logprob: -12.625003814697266
    3. '0' → logprob: -16.125003814697266
    4. ']' → logprob: -17.000003814697266
    5. ')x' → logprob: -17.375003814697266
    6. ''x' → logprob: -18.125003814697266
    7. '][' → logprob: -18.250003814697266
    8. '```' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '[x' → logprob: -18.750003814697266

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012216555187478662
    2. ']!=' → logprob: -6.751221656799316
    3. ']==' → logprob: -10.751221656799316
    4. ']!='' → logprob: -10.751221656799316
    5. '!=' → logprob: -11.876221656799316
    6. ' ]' → logprob: -14.626221656799316
    7. '[' → logprob: -14.751221656799316
    8. '']' → logprob: -15.376221656799316
    9. 'not' → logprob: -15.876221656799316
    10. ']=='' → logprob: -16.001220703125

Token 335: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36799609661102295
    2. '!=' → logprob: -1.367996096611023
    3. ' !=' → logprob: -3.3679962158203125
    4. ' ==' → logprob: -4.3679962158203125
    5. ' in' → logprob: -5.4929962158203125
    6. '!='' → logprob: -6.4929962158203125
    7. '[' → logprob: -8.492996215820312
    8. '=='' → logprob: -8.742996215820312
    9. 'in' → logprob: -9.617996215820312
    10. ' not' → logprob: -10.242996215820312

Token 336: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.019601546227931976
    2. ''' → logprob: -4.269601345062256
    3. ''%' → logprob: -5.519601345062256
    4. ''*' → logprob: -7.144601345062256
    5. ' '#'' → logprob: -7.769601345062256
    6. '#' → logprob: -9.644601821899414
    7. '"#' → logprob: -10.394601821899414
    8. ' '%'' → logprob: -10.644601821899414
    9. '')' → logprob: -10.894601821899414
    10. ''.' → logprob: -11.144601821899414

Token 337: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14602206647396088
    2. '')' → logprob: -2.021022081375122
    3. '<|end|>' → logprob: -6.021021842956543
    4. ''' → logprob: -7.896021842956543
    5. ' and' → logprob: -8.146021842956543
    6. ' )' → logprob: -9.271021842956543
    7. ']' → logprob: -10.521021842956543
    8. 'and' → logprob: -10.646021842956543
    9. '<|end|>' → logprob: -11.021021842956543
    10. '")' → logprob: -11.271021842956543

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07805923372507095
    2. '<|end|>' → logprob: -3.203059196472168
    3. ')' → logprob: -4.203059196472168
    4. '   ' → logprob: -4.578059196472168
    5. ',' → logprob: -5.578059196472168
    6. '        
' → logprob: -6.328059196472168
    7. '    
' → logprob: -7.078059196472168
    8. '```' → logprob: -7.203059196472168
    9. '<|end|>' → logprob: -7.203059196472168
    10. '  
' → logprob: -7.703059196472168

Token 339: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43023931980133057
    2. 'while' → logprob: -1.1802393198013306
    3. ' while' → logprob: -3.305239200592041
    4. '   ' → logprob: -5.805239200592041
    5. ',' → logprob: -6.305239200592041
    6. ')' → logprob: -7.805239200592041
    7. '        
' → logprob: -9.3052396774292
    8. 'for' → logprob: -9.4302396774292
    9. 'count' → logprob: -9.8052396774292
    10. 'next' → logprob: -10.3052396774292

Token 340: '_open' (ID: 26173)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0744776800274849
    2. '_move' → logprob: -2.6994776725769043
    3. '_continue' → logprob: -6.199477672576904
    4. ' _' → logprob: -7.199477672576904
    5. '_find' → logprob: -7.324477672576904
    6. '_jump' → logprob: -8.574478149414062
    7. '_go' → logprob: -8.824478149414062
    8. '   ' → logprob: -9.574478149414062
    9. '_execute' → logprob: -10.199478149414062
    10. '_visit' → logprob: -10.199478149414062

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8614440560340881
    2. '=' → logprob: -1.1114439964294434
    3. '_' → logprob: -1.6114439964294434
    4. '[' → logprob: -3.8614439964294434
    5. '()' → logprob: -4.736443996429443
    6. '(' → logprob: -4.986443996429443
    7. '_d' → logprob: -5.736443996429443
    8. 'ed' → logprob: -5.861443996429443
    9. '   ' → logprob: -6.736443996429443
    10. '[]' → logprob: -7.236443996429443

Token 342: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.19172659516334534
    2. ' False' → logprob: -1.816726565361023
    3. 'True' → logprob: -4.9417266845703125
    4. ' True' → logprob: -6.0667266845703125
    5. '(False' → logprob: -7.9417266845703125
    6. ' []' → logprob: -8.316726684570312
    7. 'visited' → logprob: -8.316726684570312
    8. '[]' → logprob: -8.316726684570312
    9. 'set' → logprob: -8.566726684570312
    10. 'lambda' → logprob: -8.691726684570312

Token 343: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070172762498259544
    2. '        
' → logprob: -5.757017135620117
    3. ',' → logprob: -6.382017135620117
    4. '
' → logprob: -7.632017135620117
    5. 'while' → logprob: -7.632017135620117
    6. '<|end|>' → logprob: -7.632017135620117
    7. ' while' → logprob: -8.382017135620117
    8. '  
' → logprob: -9.007017135620117
    9. ')' → logprob: -9.382017135620117
    10. '    
' → logprob: -9.882017135620117

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0124184126034379
    2. '        
' → logprob: -5.762418270111084
    3. ',' → logprob: -5.887418270111084
    4. '<|end|>' → logprob: -6.012418270111084
    5. '   ' → logprob: -6.762418270111084
    6. ' while' → logprob: -7.387418270111084
    7. '
' → logprob: -8.137418746948242
    8. '    
' → logprob: -8.512418746948242
    9. 'while' → logprob: -8.512418746948242
    10. '```' → logprob: -8.637418746948242

Token 345: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15738792717456818
    2. '       ' → logprob: -2.1573879718780518
    3. ' while' → logprob: -3.5323879718780518
    4. '
' → logprob: -7.532387733459473
    5. 'queue' → logprob: -9.282387733459473
    6. '        
' → logprob: -9.782387733459473
    7. 'for' → logprob: -10.282387733459473
    8. '```' → logprob: -11.157387733459473
    9. '   ' → logprob: -12.157387733459473
    10. ' 
' → logprob: -12.282387733459473

Token 346: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.09097433090209961
    2. 'queue' → logprob: -2.7159743309020996
    3. ' True' → logprob: -4.0909743309021
    4. 'True' → logprob: -5.5909743309021
    5. ' len' → logprob: -8.465974807739258
    6. '(queue' → logprob: -9.590974807739258
    7. ' not' → logprob: -10.090974807739258
    8. 'len' → logprob: -11.340974807739258
    9. ' can' → logprob: -11.340974807739258
    10. '	queue' → logprob: -12.215974807739258

Token 347: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07951071858406067
    2. ':' → logprob: -2.5795106887817383
    3. '):
' → logprob: -7.704510688781738
    4. '.pop' → logprob: -9.329510688781738
    5. '=' → logprob: -10.954510688781738
    6. '   ' → logprob: -11.079510688781738
    7. '       ' → logprob: -11.829510688781738
    8. '():
' → logprob: -11.954510688781738
    9. '```' → logprob: -12.079510688781738
    10. ' and' → logprob: -12.329510688781738

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.265633419388905e-05
    2. ',' → logprob: -10.750062942504883
    3. '```' → logprob: -12.250062942504883
    4. ' (' → logprob: -12.375062942504883
    5. ' current' → logprob: -12.375062942504883
    6. '            
' → logprob: -12.375062942504883
    7. '   ' → logprob: -12.500062942504883
    8. 'current' → logprob: -12.750062942504883
    9. '(' → logprob: -13.000062942504883
    10. 'token' → logprob: -13.125062942504883

Token 349: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1080690398812294
    2. '(pos' → logprob: -2.7330689430236816
    3. ' pos' → logprob: -3.9830689430236816
    4. '(y' → logprob: -4.983068943023682
    5. '           ' → logprob: -5.233068943023682
    6. ' (' → logprob: -5.733068943023682
    7. 'cur' → logprob: -7.108068943023682
    8. '               ' → logprob: -7.108068943023682
    9. 'l' → logprob: -8.73306941986084
    10. '(current' → logprob: -8.85806941986084

Token 350: 'ly' (ID: 423)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.34846362471580505
    2. 'y' → logprob: -1.3484636545181274
    3. 'cur' → logprob: -4.473463535308838
    4. '(y' → logprob: -4.473463535308838
    5. 'curr' → logprob: -5.348463535308838
    6. 'l' → logprob: -5.723463535308838
    7. 'current' → logprob: -6.848463535308838
    8. 'yl' → logprob: -7.473463535308838
    9. 'cy' → logprob: -8.098464012145996
    10. 'p' → logprob: -8.223464012145996

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014173506759107113
    2. '),(' → logprob: -4.63917350769043
    3. ',y' → logprob: -6.01417350769043
    4. '),' → logprob: -6.88917350769043
    5. ' ,' → logprob: -7.76417350769043
    6. ',l' → logprob: -8.88917350769043
    7. ',ll' → logprob: -9.01417350769043
    8. ',),' → logprob: -9.63917350769043
    9. ',
' → logprob: -10.01417350769043
    10. ' ly' → logprob: -10.26417350769043

Token 352: ' lx' (ID: 153863)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.02388075739145279
    2. ' lx' → logprob: -3.77388072013855
    3. 'rx' → logprob: -7.398880958557129
    4. ' rx' → logprob: -11.648880958557129
    5. ' l' → logprob: -12.148880958557129
    6. 'l' → logprob: -12.773880958557129
    7. 'lz' → logprob: -13.398880958557129
    8. 'ry' → logprob: -13.898880958557129
    9. '   ' → logprob: -14.398880958557129
    10. ' ry' → logprob: -14.773880958557129

Token 353: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002039629500359297
    2. '),(' → logprob: -6.377039432525635
    3. ' ),' → logprob: -9.002039909362793
    4. '           ' → logprob: -9.002039909362793
    5. ')' → logprob: -9.877039909362793
    6. ',' → logprob: -10.502039909362793
    7. '       ' → logprob: -12.877039909362793
    8. '),
' → logprob: -13.002039909362793
    9. '        ' → logprob: -13.377039909362793
    10. '            ' → logprob: -13.627039909362793

Token 354: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027611342375166714
    2. ' (' → logprob: -8.250276565551758
    3. '(r' → logprob: -12.000276565551758
    4. '((' → logprob: -13.000276565551758
    5. '(py' → logprob: -13.250276565551758
    6. ' ' → logprob: -13.750276565551758
    7. '   ' → logprob: -14.625276565551758
    8. '(rv' → logprob: -14.875276565551758
    9. '```' → logprob: -15.000276565551758
    10. 'ry' → logprob: -15.250276565551758

Token 355: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -2.0100624169572257e-05
    2. ' ry' → logprob: -10.875020027160645
    3. 'riy' → logprob: -15.000020027160645
    4. '   ' → logprob: -16.00002098083496
    5. 'ryw' → logprob: -16.00002098083496
    6. ')' → logprob: -16.12502098083496
    7. '
' → logprob: -16.37502098083496
    8. '```' → logprob: -16.75002098083496
    9. 'Ry' → logprob: -16.87502098083496
    10. '

' → logprob: -17.12502098083496

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019553037360310555
    2. '),' → logprob: -4.019553184509277
    3. ')' → logprob: -7.144553184509277
    4. ' ,' → logprob: -7.894553184509277
    5. ',y' → logprob: -9.019553184509277
    6. ',),' → logprob: -10.394553184509277
    7. 'y' → logprob: -10.769553184509277
    8. ' ),' → logprob: -11.144553184509277
    9. ',)' → logprob: -11.394553184509277
    10. ',x' → logprob: -11.769553184509277

Token 357: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0004468772385735065
    2. ' rx' → logprob: -7.875446796417236
    3. 'cx' → logprob: -10.000447273254395
    4. 'rc' → logprob: -12.375447273254395
    5. ')' → logprob: -12.500447273254395
    6. '(rx' → logprob: -12.875447273254395
    7. ' ' → logprob: -13.000447273254395
    8. 'rr' → logprob: -13.375447273254395
    9. 'rz' → logprob: -13.750447273254395
    10. 'rix' → logprob: -14.000447273254395

Token 358: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')=' → logprob: -11.625016212463379
    3. ' )' → logprob: -12.125016212463379
    4. '),' → logprob: -13.875016212463379
    5. '))' → logprob: -14.500016212463379
    6. '   ' → logprob: -15.750016212463379
    7. ')
' → logprob: -16.125017166137695
    8. '       ' → logprob: -16.500017166137695
    9. '=' → logprob: -17.125017166137695
    10. '           ' → logprob: -17.750017166137695

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740912914276123
    2. '=' → logprob: -0.9740912914276123
    3. ')' → logprob: -11.474091529846191
    4. ')=' → logprob: -13.224091529846191
    5. '           ' → logprob: -13.974091529846191
    6. ',' → logprob: -14.474091529846191
    7. '        ' → logprob: -15.849091529846191
    8. '       ' → logprob: -16.099090576171875
    9. ' ' → logprob: -16.224090576171875
    10. '            ' → logprob: -16.599090576171875

Token 360: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.03804401680827141
    2. 'queue' → logprob: -3.288043975830078
    3. '           ' → logprob: -14.538043975830078
    4. '(queue' → logprob: -14.663043975830078
    5. '       ' → logprob: -15.038043975830078
    6. '    ' → logprob: -15.038043975830078
    7. '   ' → logprob: -15.413043975830078
    8. '	queue' → logprob: -15.538043975830078
    9. '        ' → logprob: -15.663043975830078
    10. ' ' → logprob: -15.788043975830078

Token 361: '.p' (ID: 1201)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695194780826569
    2. '=' → logprob: -2.1269519329071045
    3. '           ' → logprob: -11.126952171325684
    4. '       ' → logprob: -13.001952171325684
    5. '.pop' → logprob: -13.001952171325684
    6. '   ' → logprob: -13.501952171325684
    7. ')' → logprob: -13.751952171325684
    8. '        ' → logprob: -14.001952171325684
    9. '    ' → logprob: -15.126952171325684
    10. ')=' → logprob: -15.376952171325684

Token 362: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00071553117595613
    2. 'op' → logprob: -7.250715732574463
    3. 'ople' → logprob: -12.500715255737305
    4. 'opl' → logprob: -13.250715255737305
    5. 'opup' → logprob: -17.625715255737305
    6. 'opy' → logprob: -19.125715255737305
    7. 'opped' → logprob: -19.125715255737305
    8. 'opt' → logprob: -19.375715255737305
    9. 'oplevel' → logprob: -19.750715255737305
    10. '   ' → logprob: -19.750715255737305

Token 363: '()

' (ID: 5874)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5687142610549927
    2. ')' → logprob: -1.6937142610549927
    3. '
' → logprob: -2.318714141845703
    4. '<|end|>' → logprob: -2.318714141845703
    5. '<|end|>' → logprob: -3.568714141845703
    6. '            
' → logprob: -4.818714141845703
    7. '       ' → logprob: -5.068714141845703
    8. ',' → logprob: -5.693714141845703
    9. ')
' → logprob: -6.318714141845703
    10. '               ' → logprob: -7.318714141845703

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00237885769456625
    2. '<|end|>' → logprob: -6.127378940582275
    3. '            
' → logprob: -9.627378463745117
    4. '<|end|>' → logprob: -9.877378463745117
    5. ',' → logprob: -10.627378463745117
    6. '       ' → logprob: -11.627378463745117
    7. '
' → logprob: -11.752378463745117
    8. '          ' → logprob: -12.252378463745117
    9. ' 
' → logprob: -12.377378463745117
    10. '  
' → logprob: -12.377378463745117

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37198370695114136
    2. '           ' → logprob: -1.8719837665557861
    3. 'for' → logprob: -1.8719837665557861
    4. ' if' → logprob: -6.621983528137207
    5. ' for' → logprob: -6.871983528137207
    6. '       ' → logprob: -7.871983528137207
    7. '   ' → logprob: -8.371983528137207
    8. '               ' → logprob: -11.746983528137207
    9. 'found' → logprob: -12.746983528137207
    10. ' ' → logprob: -12.871983528137207

Token 366: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4440895915031433
    2. '(' → logprob: -1.069089651107788
    3. ' ly' → logprob: -4.194089412689209
    4. '(l' → logprob: -8.944089889526367
    5. '((' → logprob: -11.319089889526367
    6. '(room' → logprob: -11.569089889526367
    7. '   ' → logprob: -11.694089889526367
    8. '(y' → logprob: -11.944089889526367
    9. ' ' → logprob: -12.694089889526367
    10. ' ((' → logprob: -12.944089889526367

Token 367: 'ly' (ID: 423)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3884809911251068
    2. 'ly' → logprob: -1.1384810209274292
    3. ' ly' → logprob: -7.138481140136719
    4. ' (' → logprob: -7.763481140136719
    5. '(l' → logprob: -8.638481140136719
    6. ')' → logprob: -9.638481140136719
    7. '(y' → logprob: -10.263481140136719
    8. '((' → logprob: -10.763481140136719
    9. '   ' → logprob: -10.888481140136719
    10. '(start' → logprob: -12.138481140136719

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010616570711135864
    2. ' ==' → logprob: -5.010616779327393
    3. ' ,' → logprob: -6.260616779327393
    4. '==' → logprob: -6.510616779327393
    5. ',y' → logprob: -8.010616302490234
    6. ',x' → logprob: -9.135616302490234
    7. ')' → logprob: -10.635616302490234
    8. ')==' → logprob: -11.885616302490234
    9. ',
' → logprob: -12.260616302490234
    10. ',l' → logprob: -12.385616302490234

Token 369: ' lx' (ID: 153863)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.008674495853483677
    2. ' lx' → logprob: -4.758674621582031
    3. ',' → logprob: -10.508674621582031
    4. ')' → logprob: -10.883674621582031
    5. 'y' → logprob: -12.633674621582031
    6. 'LX' → logprob: -13.008674621582031
    7. ' y' → logprob: -13.508674621582031
    8. 'rx' → logprob: -13.633674621582031
    9. ' ' → logprob: -14.008674621582031
    10. '
' → logprob: -14.133674621582031

Token 370: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4585837721824646
    2. ')' → logprob: -1.2085838317871094
    3. ' ==' → logprob: -2.9585838317871094
    4. '==' → logprob: -4.583583831787109
    5. ' ,' → logprob: -5.333583831787109
    6. ')==' → logprob: -6.833583831787109
    7. ' )' → logprob: -6.833583831787109
    8. ',)' → logprob: -10.08358383178711
    9. '),' → logprob: -10.83358383178711
    10. '==(' → logprob: -11.20858383178711

Token 371: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06459350138902664
    2. ' ==' → logprob: -2.814593553543091
    3. ',' → logprob: -6.064593315124512
    4. ')' → logprob: -8.939593315124512
    5. '==(' → logprob: -9.314593315124512
    6. ')==' → logprob: -9.564593315124512
    7. '==
' → logprob: -13.189593315124512
    8. '=' → logprob: -13.314593315124512
    9. ']==' → logprob: -13.689593315124512
    10. '```' → logprob: -13.939593315124512

Token 372: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.38695693016052246
    2. 'goal' → logprob: -1.1369569301605225
    3. '(goal' → logprob: -9.386957168579102
    4. ' (' → logprob: -14.511957168579102
    5. '_goal' → logprob: -14.886957168579102
    6. '.goal' → logprob: -15.386957168579102
    7. ' ' → logprob: -15.386957168579102
    8. '   ' → logprob: -15.511957168579102
    9. '           ' → logprob: -15.511957168579102
    10. 'go' → logprob: -16.2619571685791

Token 373: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.8624639324116288e-06
    2. 'R' → logprob: -14.250001907348633
    3. '_L' → logprob: -15.000001907348633
    4. ')' → logprob: -15.125001907348633
    5. ' L' → logprob: -15.500001907348633
    6. '(' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.875001907348633
    8. '(L' → logprob: -16.875001907348633
    9. '```' → logprob: -17.625001907348633
    10. ',' → logprob: -17.875001907348633

Token 374: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03810495138168335
    2. 'and' → logprob: -3.288105010986328
    3. ' or' → logprob: -9.788105010986328
    4. '           ' → logprob: -12.538105010986328
    5. ')' → logprob: -13.538105010986328
    6. '            ' → logprob: -13.913105010986328
    7. ' ' → logprob: -14.288105010986328
    8. '               ' → logprob: -14.788105010986328
    9. '        ' → logprob: -15.788105010986328
    10. 'or' → logprob: -16.538105010986328

Token 375: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07891634106636047
    2. ' (' → logprob: -2.578916311264038
    3. '   ' → logprob: -11.203916549682617
    4. ' ' → logprob: -12.203916549682617
    5. '       ' → logprob: -12.703916549682617
    6. '           ' → logprob: -13.078916549682617
    7. '  ' → logprob: -14.578916549682617
    8. '         ' → logprob: -14.578916549682617
    9. '          ' → logprob: -14.828916549682617
    10. '(r' → logprob: -15.078916549682617

Token 376: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.001378210261464119
    2. ' ry' → logprob: -7.251378059387207
    3. '(' → logprob: -7.626378059387207
    4. ' (' → logprob: -9.251378059387207
    5. '   ' → logprob: -10.501378059387207
    6. '
' → logprob: -11.126378059387207
    7. ')' → logprob: -11.376378059387207
    8. '

' → logprob: -12.126378059387207
    9. ' ' → logprob: -12.376378059387207
    10. '(r' → logprob: -12.626378059387207

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013934499584138393
    2. ' ,' → logprob: -6.7513933181762695
    3. ',y' → logprob: -9.12639331817627
    4. '[' → logprob: -9.25139331817627
    5. ')' → logprob: -11.87639331817627
    6. ' ==' → logprob: -12.62639331817627
    7. '==' → logprob: -12.62639331817627
    8. ',
' → logprob: -13.87639331817627
    9. 'y' → logprob: -14.12639331817627
    10. 'ly' → logprob: -14.75139331817627

Token 378: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.22847199440002441
    2. 'ry' → logprob: -1.7284719944000244
    3. ' rx' → logprob: -4.103471755981445
    4. ' ry' → logprob: -4.853471755981445
    5. '(rx' → logprob: -6.603471755981445
    6. ')' → logprob: -7.478471755981445
    7. 'gx' → logprob: -8.978471755981445
    8. ' ' → logprob: -9.228471755981445
    9. ',' → logprob: -9.853471755981445
    10. '   ' → logprob: -10.228471755981445

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002714681322686374
    2. ')==' → logprob: -8.250271797180176
    3. '==' → logprob: -12.000271797180176
    4. ' )' → logprob: -12.625271797180176
    5. ' ==' → logprob: -14.250271797180176
    6. '）' → logprob: -17.00027084350586
    7. '   ' → logprob: -18.00027084350586
    8. ')
' → logprob: -18.00027084350586
    9. ')=' → logprob: -18.50027084350586
    10. '),' → logprob: -18.75027084350586

Token 380: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48449546098709106
    2. '==' → logprob: -0.9844954609870911
    3. ')' → logprob: -4.609495639801025
    4. ')==' → logprob: -7.859495639801025
    5. ']==' → logprob: -11.484495162963867
    6. '==(' → logprob: -12.609495162963867
    7. ']' → logprob: -13.234495162963867
    8. '==
' → logprob: -13.734495162963867
    9. ' )' → logprob: -13.734495162963867
    10. ' ' → logprob: -13.859495162963867

Token 381: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.03807569295167923
    2. ' goal' → logprob: -3.2880756855010986
    3. '(goal' → logprob: -10.28807544708252
    4. 'go' → logprob: -15.78807544708252
    5. '.goal' → logprob: -18.163076400756836
    6. '_goal' → logprob: -18.288076400756836
    7. ' ' → logprob: -19.163076400756836
    8. '(' → logprob: -19.788076400756836
    9. '   ' → logprob: -20.288076400756836
    10. 'Goal' → logprob: -20.663076400756836

Token 382: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.961759259458631e-06
    2. 'L' → logprob: -13.000004768371582
    3. '_R' → logprob: -13.250004768371582
    4. ' R' → logprob: -14.125004768371582
    5. '(R' → logprob: -17.3750057220459
    6. ')' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.3750057220459
    8. '```' → logprob: -18.7500057220459
    9. ' ' → logprob: -19.2500057220459
    10. '	R' → logprob: -19.5000057220459

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1343226134777069
    2. ':
' → logprob: -2.2593226432800293
    3. '               ' → logprob: -3.8843226432800293
    4. '           ' → logprob: -7.634322643280029
    5. '):
' → logprob: -9.384322166442871
    6. '):' → logprob: -10.509322166442871
    7. ')' → logprob: -10.884322166442871
    8. ':return' → logprob: -10.884322166442871
    9. '                   ' → logprob: -11.259322166442871
    10. ' and' → logprob: -11.384322166442871

Token 384: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.150362166110426e-05
    2. '           ' → logprob: -9.750091552734375
    3. '                
' → logprob: -11.125091552734375
    4. '                   ' → logprob: -12.125091552734375
    5. '
' → logprob: -12.875091552734375
    6. '                ' → logprob: -13.000091552734375
    7. '       ' → logprob: -13.125091552734375
    8. '              ' → logprob: -13.500091552734375
    9. '                       ' → logprob: -13.875091552734375
    10. '            
' → logprob: -14.000091552734375

Token 385: ' can' (ID: 665)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22292560338974
    2. 'can' (adapté à ' can') → logprob: -1.7229256629943848
    3. ' can' → logprob: -4.597925662994385
    4. '           ' → logprob: -5.222925662994385
    5. 'print' → logprob: -5.597925662994385
    6. 'break' → logprob: -6.847925662994385
    7. '                   ' → logprob: -7.597925662994385
    8. '
' → logprob: -8.722925186157227
    9. '   ' → logprob: -8.847925186157227
    10. '	can' → logprob: -9.222925186157227

Token 386: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.00042412037146277726
    2. 'open' → logprob: -8.2504243850708
    3. '_continue' → logprob: -9.7504243850708
    4. '_break' → logprob: -10.1254243850708
    5. '_unlock' → logprob: -10.8754243850708
    6. '           ' → logprob: -11.7504243850708
    7. '_close' → logprob: -12.2504243850708
    8. '_return' → logprob: -12.6254243850708
    9. 'Open' → logprob: -12.6254243850708
    10. '_OPEN' → logprob: -12.7504243850708

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40039142966270447
    2. ' =' → logprob: -1.1503914594650269
    3. '=True' → logprob: -4.650391578674316
    4. '               ' → logprob: -6.025391578674316
    5. '                   ' → logprob: -7.025391578674316
    6. '
' → logprob: -8.775391578674316
    7. '=
' → logprob: -9.025391578674316
    8. '           ' → logprob: -9.275391578674316
    9. 'break' → logprob: -10.275391578674316
    10. '                       ' → logprob: -10.275391578674316

Token 388: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009115827269852161
    2. ' True' → logprob: -7.000911712646484
    3. '               ' → logprob: -17.125911712646484
    4. '                   ' → logprob: -17.500911712646484
    5. '(True' → logprob: -17.750911712646484
    6. '   ' → logprob: -17.875911712646484
    7. '           ' → logprob: -18.250911712646484
    8. '=True' → logprob: -18.375911712646484
    9. 'true' → logprob: -19.875911712646484
    10. '1' → logprob: -21.625911712646484

Token 389: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.583550642360933e-05
    2. '<|end|>' → logprob: -11.250036239624023
    3. '
' → logprob: -12.000036239624023
    4. '           ' → logprob: -12.500036239624023
    5. ',' → logprob: -12.500036239624023
    6. '                   ' → logprob: -12.625036239624023
    7. '                
' → logprob: -13.375036239624023
    8. '              ' → logprob: -13.875036239624023
    9. '<|end|>' → logprob: -14.500036239624023
    10. '.' → logprob: -14.750036239624023

Token 390: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4974866644479334e-05
    2. '           ' → logprob: -11.750015258789062
    3. '			' → logprob: -13.625015258789062
    4. '                   ' → logprob: -13.750015258789062
    5. '<|end|>' → logprob: -13.875015258789062
    6. '                
' → logprob: -14.250015258789062
    7. '       ' → logprob: -14.500015258789062
    8. '```' → logprob: -14.625015258789062
    9. '
' → logprob: -14.875015258789062
    10. ',' → logprob: -15.000015258789062

Token 391: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5783002376556396
    2. 'break' (adapté à ' break') → logprob: -0.8283002376556396
    3. ' break' → logprob: -6.078300476074219
    4. '           ' → logprob: -9.703300476074219
    5. '	break' → logprob: -12.953300476074219
    6. '			' → logprob: -14.578300476074219
    7. 'return' → logprob: -14.828300476074219
    8. '```' → logprob: -14.953300476074219
    9. '              ' → logprob: -15.203300476074219
    10. '
' → logprob: -15.203300476074219

Token 392: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.776898251497187e-05
    2. '            
' → logprob: -10.7500581741333
    3. '       ' → logprob: -10.8750581741333
    4. '
' → logprob: -11.8750581741333
    5. '```' → logprob: -13.0000581741333
    6. '<|end|>' → logprob: -13.0000581741333
    7. '        
' → logprob: -13.1250581741333
    8. '    
' → logprob: -13.6250581741333
    9. '  
' → logprob: -14.3750581741333
    10. '   ' → logprob: -14.3750581741333

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012274051085114479
    2. '       ' → logprob: -4.512274265289307
    3. '```' → logprob: -7.012274265289307
    4. 'for' → logprob: -9.387273788452148
    5. ' for' → logprob: -9.762273788452148
    6. '<|end|>' → logprob: -9.887273788452148
    7. '   ' → logprob: -10.262273788452148
    8. '            
' → logprob: -10.512273788452148
    9. '        
' → logprob: -10.762273788452148
    10. '
' → logprob: -11.137273788452148

Token 394: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0028115289751440287
    2. '           ' → logprob: -6.002811431884766
    3. ' for' → logprob: -8.002811431884766
    4. '```' → logprob: -14.377811431884766
    5. '       ' → logprob: -14.502811431884766
    6. '   ' → logprob: -16.002811431884766
    7. '	for' → logprob: -16.502811431884766
    8. '            
' → logprob: -18.502811431884766
    9. '``' → logprob: -18.502811431884766
    10. ' ' → logprob: -19.502811431884766

Token 395: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.014634454622864723
    2. ' dy' → logprob: -4.264634609222412
    3. '(d' → logprob: -8.139634132385254
    4. 'd' → logprob: -9.389634132385254
    5. '(' → logprob: -10.264634132385254
    6. 'dym' → logprob: -11.264634132385254
    7. '   ' → logprob: -11.264634132385254
    8. '	d' → logprob: -11.514634132385254
    9. ' ' → logprob: -12.014634132385254
    10. ' (' → logprob: -12.139634132385254

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07141350209712982
    2. ',d' → logprob: -3.071413516998291
    3. ',x' → logprob: -3.946413516998291
    4. ',l' → logprob: -6.446413516998291
    5. ',n' → logprob: -6.946413516998291
    6. ' ,' → logprob: -8.946413040161133
    7. ',w' → logprob: -9.071413040161133
    8. ',y' → logprob: -9.446413040161133
    9. 'dx' → logprob: -9.696413040161133
    10. ',value' → logprob: -10.446413040161133

Token 397: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.06196802109479904
    2. ' dx' → logprob: -2.8119680881500244
    3. '_dx' → logprob: -15.186967849731445
    4. 'dl' → logprob: -18.186967849731445
    5. '(dx' → logprob: -18.186967849731445
    6. '.dx' → logprob: -19.436967849731445
    7. 'lx' → logprob: -20.311967849731445
    8. ' ' → logprob: -21.061967849731445
    9. 'DX' → logprob: -21.186967849731445
    10. 'Dx' → logprob: -21.311967849731445

Token 398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029763683676719666
    2. 'in' → logprob: -3.529763698577881
    3. ',' → logprob: -12.029763221740723
    4. '<|end|>' → logprob: -13.154763221740723
    5. '	in' → logprob: -13.654763221740723
    6. ')' → logprob: -13.654763221740723
    7. ' ' → logprob: -14.029763221740723
    8. 'In' → logprob: -14.279763221740723
    9. '<|end|>' → logprob: -15.279763221740723
    10. '   ' → logprob: -15.654763221740723

Token 399: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.014216276817023754
    2. ' moves' → logprob: -4.264216423034668
    3. 'm' → logprob: -9.889216423034668
    4. '[' → logprob: -14.139216423034668
    5. '   ' → logprob: -15.014216423034668
    6. ' ' → logprob: -15.014216423034668
    7. '.moves' → logprob: -15.389216423034668
    8. '_moves' → logprob: -15.514216423034668
    9. ')' → logprob: -15.889216423034668
    10. '[m' → logprob: -16.51421546936035

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028252042829990387
    2. ',' → logprob: -7.2528252601623535
    3. ':
' → logprob: -7.3778252601623535
    4. '<|end|>' → logprob: -7.3778252601623535
    5. '           ' → logprob: -8.002824783325195
    6. '=' → logprob: -8.752824783325195
    7. '):' → logprob: -9.002824783325195
    8. '               ' → logprob: -9.502824783325195
    9. '<|end|>' → logprob: -9.877824783325195
    10. ' :' → logprob: -10.377824783325195

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0069379559718072414
    2. '            ' → logprob: -6.0069379806518555
    3. '                ' → logprob: -6.5069379806518555
    4. ' ly' → logprob: -6.8819379806518555
    5. '           ' → logprob: -7.1319379806518555
    6. ' new' → logprob: -8.131937980651855
    7. '                
' → logprob: -8.756937980651855
    8. ' ny' → logprob: -9.256937980651855
    9. ' ' → logprob: -9.381937980651855
    10. '```' → logprob: -9.381937980651855

Token 402: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2522978186607361
    2. ' n' → logprob: -1.5022978782653809
    3. '               ' → logprob: -9.252297401428223
    4. ' new' → logprob: -10.127297401428223
    5. '_n' → logprob: -10.377297401428223
    6. '.n' → logprob: -10.752297401428223
    7. '#' → logprob: -10.877297401428223
    8. 'ny' → logprob: -11.002297401428223
    9. '           ' → logprob: -11.127297401428223
    10. ' nny' → logprob: -11.127297401428223

Token 403: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.024846509099006653
    2. 'y' → logprob: -4.27484655380249
    3. '_' → logprob: -4.64984655380249
    4. 'l' → logprob: -7.39984655380249
    5. '_l' → logprob: -8.774846076965332
    6. '(' → logprob: -9.774846076965332
    7. '_y' → logprob: -9.899846076965332
    8. '1' → logprob: -10.899846076965332
    9. 'yl' → logprob: -10.899846076965332
    10. '   ' → logprob: -11.274846076965332

Token 404: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01982526108622551
    2. ' =' → logprob: -4.019825458526611
    3. ',' → logprob: -6.394825458526611
    4. '=y' → logprob: -13.144824981689453
    5. ',y' → logprob: -14.644824981689453
    6. '=
' → logprob: -14.894824981689453
    7. '=n' → logprob: -15.394824981689453
    8. ' ,' → logprob: -15.519824981689453
    9. 'y' → logprob: -15.519824981689453
    10. ' ly' → logprob: -16.644824981689453

Token 405: ' nl' (ID: 44724)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.7034666538238525
    2. 'nl' → logprob: -1.5784666538238525
    3. ' ly' → logprob: -2.3284666538238525
    4. ' lx' → logprob: -2.3284666538238525
    5. 'n' → logprob: -2.5784666538238525
    6. 'ly' → logprob: -4.703466415405273
    7. ' nl' → logprob: -4.828466415405273
    8. 'l' → logprob: -5.703466415405273
    9. '
' → logprob: -5.953466415405273
    10. ' ' → logprob: -6.703466415405273

Token 406: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038044705986976624
    2. 'y' → logprob: -3.2880446910858154
    3. '=' → logprob: -13.288044929504395
    4. 'ux' → logprob: -14.788044929504395
    5. 'yx' → logprob: -14.788044929504395
    6. ' y' → logprob: -15.663044929504395
    7. ' =' → logprob: -15.913044929504395
    8. 'ox' → logprob: -16.163043975830078
    9. '   ' → logprob: -16.538043975830078
    10. 'ax' → logprob: -16.663043975830078

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. ',' → logprob: -14.913042068481445
    4. ')' → logprob: -16.538042068481445
    5. '=
' → logprob: -17.163042068481445
    6. '=y' → logprob: -17.663042068481445
    7. '   ' → logprob: -18.038042068481445
    8. ')=' → logprob: -19.038042068481445
    9. '＝' → logprob: -19.163042068481445
    10. '=n' → logprob: -19.788042068481445

Token 408: ' ly' (ID: 15280)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.07892173528671265
    2. ' ly' → logprob: -2.5789217948913574
    3. '(' → logprob: -11.2039213180542
    4. '   ' → logprob: -11.3289213180542
    5. ' (' → logprob: -12.9539213180542
    6. '
' → logprob: -13.9539213180542
    7. ' ' → logprob: -13.9539213180542
    8. 'lyph' → logprob: -14.4539213180542
    9. '  ' → logprob: -14.8289213180542
    10. '    ' → logprob: -14.9539213180542

Token 409: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740999639034271
    2. '+' → logprob: -0.9740999937057495
    3. ',' → logprob: -10.974100112915039
    4. '   ' → logprob: -13.474100112915039
    5. ' dy' → logprob: -14.099100112915039
    6. ')' → logprob: -14.474100112915039
    7. '=' → logprob: -14.599100112915039
    8. '-' → logprob: -14.849100112915039
    9. 'dy' → logprob: -14.974100112915039
    10. ' ' → logprob: -15.099100112915039

Token 410: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.306760805164231e-05
    2. ' dy' → logprob: -11.25001335144043
    3. 'dym' → logprob: -19.75001335144043
    4. '.dy' → logprob: -20.00001335144043
    5. 'd' → logprob: -20.37501335144043
    6. '   ' → logprob: -21.00001335144043
    7. '0' → logprob: -21.62501335144043
    8. '
' → logprob: -21.87501335144043
    9. 'ddy' → logprob: -22.25001335144043
    10. ' ' → logprob: -22.37501335144043

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002693224814720452
    2. ' ,' → logprob: -8.750268936157227
    3. ',n' → logprob: -9.125268936157227
    4. ',
' → logprob: -13.500268936157227
    5. 'n' → logprob: -16.125268936157227
    6. ',y' → logprob: -16.250268936157227
    7. '<|end|>' → logprob: -16.250268936157227
    8. '               ' → logprob: -16.375268936157227
    9. '‌,' → logprob: -16.375268936157227
    10. ',ll' → logprob: -17.000268936157227

Token 412: ' lx' (ID: 153863)
  Prédit: ' lx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lx' → logprob: -0.38688623905181885
    2. 'lx' → logprob: -1.1368862390518188
    3. ' ' → logprob: -11.261886596679688
    4. '   ' → logprob: -14.136886596679688
    5. '0' → logprob: -15.261886596679688
    6. 'nx' → logprob: -15.636886596679688
    7. ' nx' → logprob: -15.886886596679688
    8. 'x' → logprob: -16.011886596679688
    9. '    ' → logprob: -16.386886596679688
    10. ' dx' → logprob: -16.386886596679688

Token 413: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0485873706638813
    2. '+' → logprob: -3.0485873222351074
    3. ' ' → logprob: -19.298587799072266
    4. '[' → logprob: -19.548587799072266
    5. 'dx' → logprob: -19.673587799072266
    6. ',' → logprob: -19.798587799072266
    7. '=' → logprob: -20.048587799072266
    8. '+x' → logprob: -20.548587799072266
    9. '＋' → logprob: -20.798587799072266
    10. ' +
' → logprob: -20.798587799072266

Token 414: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0002973280206788331
    2. ' dx' → logprob: -8.125297546386719
    3. '0' → logprob: -14.125297546386719
    4. '1' → logprob: -15.125297546386719
    5. '_dx' → logprob: -16.62529754638672
    6. '(dx' → logprob: -16.87529754638672
    7. '.dx' → logprob: -17.75029754638672
    8. 'x' → logprob: -18.12529754638672
    9. '   ' → logprob: -18.37529754638672
    10. 'Dx' → logprob: -19.25029754638672

Token 415: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020075805485248566
    2. '<|end|>' → logprob: -4.270075798034668
    3. '                
' → logprob: -5.270075798034668
    4. ',' → logprob: -8.270075798034668
    5. '                ' → logprob: -9.145075798034668
    6. '<|end|>' → logprob: -9.395075798034668
    7. '  
' → logprob: -9.770075798034668
    8. '               
' → logprob: -10.145075798034668
    9. '
' → logprob: -10.520075798034668
    10. '```' → logprob: -10.645075798034668

Token 416: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005729094613343477
    2. '<|end|>' → logprob: -5.6307291984558105
    3. '                
' → logprob: -6.6307291984558105
    4. '                ' → logprob: -7.7557291984558105
    5. ' if' → logprob: -8.880728721618652
    6. '```' → logprob: -10.130728721618652
    7. '              ' → logprob: -10.380728721618652
    8. ',' → logprob: -10.380728721618652
    9. '               
' → logprob: -10.755728721618652
    10. ' 
' → logprob: -11.005728721618652

Token 417: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.009509564377367496
    2. ' n' → logprob: -5.634509563446045
    3. ' if' → logprob: -5.759509563446045
    4. 'if' → logprob: -6.134509563446045
    5. 'try' → logprob: -8.259510040283203
    6. '```' → logprob: -8.884510040283203
    7. '   ' → logprob: -10.634510040283203
    8. 'nr' → logprob: -11.134510040283203
    9. '       ' → logprob: -11.259510040283203
    10. '_n' → logprob: -11.259510040283203

Token 418: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.01554189994931221
    2. 'ly' → logprob: -4.265542030334473
    3. 'try' → logprob: -7.765542030334473
    4. 'n' → logprob: -8.390542030334473
    5. 'ny' → logprob: -8.765542030334473
    6. 'r' → logprob: -9.640542030334473
    7. '   ' → logprob: -9.890542030334473
    8. 'ryl' → logprob: -10.140542030334473
    9. ' ry' → logprob: -10.390542030334473
    10. 'l' → logprob: -10.515542030334473

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014180884463712573
    2. '+' → logprob: -7.251418113708496
    3. ' +' → logprob: -7.376418113708496
    4. ' ,' → logprob: -9.501418113708496
    5. '+,' → logprob: -12.001418113708496
    6. '=' → logprob: -14.501418113708496
    7. '`,' → logprob: -15.251418113708496
    8. ',
' → logprob: -16.12641716003418
    9. ' =' → logprob: -17.00141716003418
    10. ' ' → logprob: -17.50141716003418

Token 420: ' nr' (ID: 24055)
  Prédit: ' ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ry' → logprob: -0.16306568682193756
    2. 'ry' → logprob: -1.9130656719207764
    3. 'rr' → logprob: -6.4130659103393555
    4. ' ' → logprob: -8.038065910339355
    5. '   ' → logprob: -8.788065910339355
    6. 'rx' → logprob: -8.913065910339355
    7. '
' → logprob: -9.038065910339355
    8. ' r' → logprob: -9.163065910339355
    9. 'r' → logprob: -9.163065910339355
    10. ' rx' → logprob: -9.538065910339355

Token 421: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5771784782409668
    2. 'x' → logprob: -1.0771784782409668
    3. 'rx' → logprob: -3.202178478240967
    4. 'ry' → logprob: -3.452178478240967
    5. 'dx' → logprob: -4.327178478240967
    6. 'dy' → logprob: -4.452178478240967
    7. '+' → logprob: -7.827178478240967
    8. ' rx' → logprob: -9.327178955078125
    9. ' ' → logprob: -10.202178955078125
    10. '   ' → logprob: -10.327178955078125

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. ',' → logprob: -14.673587799072266
    4. '   ' → logprob: -18.173587799072266
    5. '=
' → logprob: -18.548587799072266
    6. ' ' → logprob: -19.173587799072266
    7. '```' → logprob: -19.298587799072266
    8. ')' → logprob: -19.423587799072266
    9. '=

' → logprob: -19.923587799072266
    10. '＝' → logprob: -20.173587799072266

Token 423: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0017552643548697233
    2. ' ry' → logprob: -6.376755237579346
    3. '   ' → logprob: -10.126755714416504
    4. ' ' → logprob: -11.626755714416504
    5. '  ' → logprob: -13.501755714416504
    6. '    ' → logprob: -14.251755714416504
    7. '       ' → logprob: -14.626755714416504
    8. '
' → logprob: -14.626755714416504
    9. '     ' → logprob: -15.501755714416504
    10. '	' → logprob: -15.626755714416504

Token 424: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048608485609292984
    2. '+' → logprob: -3.0486085414886475
    3. ',' → logprob: -10.798608779907227
    4. ' ' → logprob: -14.798608779907227
    5. ' ' → logprob: -16.548608779907227
    6. '=' → logprob: -16.798608779907227
    7. '   ' → logprob: -16.923608779907227
    8. '       ' → logprob: -17.673608779907227
    9. ' ,' → logprob: -17.923608779907227
    10. '           ' → logprob: -18.048608779907227

Token 425: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002359117614105344
    2. 'dx' → logprob: -6.627358913421631
    3. ' dy' → logprob: -6.877358913421631
    4. ' dx' → logprob: -13.752359390258789
    5. ' ' → logprob: -15.252359390258789
    6. '   ' → logprob: -15.752359390258789
    7. 'd' → logprob: -16.12735939025879
    8. '0' → logprob: -16.37735939025879
    9. ',' → logprob: -16.87735939025879
    10. '
' → logprob: -18.12735939025879

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ',n' → logprob: -10.125046730041504
    3. ' ,' → logprob: -12.000046730041504
    4. ',
' → logprob: -16.125045776367188
    5. ',r' → logprob: -17.750045776367188
    6. '‌,' → logprob: -19.125045776367188
    7. 'n' → logprob: -19.750045776367188
    8. '`,' → logprob: -19.750045776367188
    9. '```' → logprob: -19.875045776367188
    10. '               ' → logprob: -20.375045776367188

Token 427: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.6932624578475952
    2. ' rx' → logprob: -0.6932624578475952
    3. ' ry' → logprob: -10.193262100219727
    4. 'ry' → logprob: -10.443262100219727
    5. '(rx' → logprob: -10.568262100219727
    6. '   ' → logprob: -11.318262100219727
    7. ' ' → logprob: -11.693262100219727
    8. 'r' → logprob: -14.568262100219727
    9. '.rx' → logprob: -14.693262100219727
    10. '
' → logprob: -14.943262100219727

Token 428: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011047814972698689
    2. '+' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.76104736328125
    4. ' ' → logprob: -19.13604736328125
    5. ' +
' → logprob: -19.63604736328125
    6. '[' → logprob: -20.01104736328125
    7. '＋' → logprob: -20.13604736328125
    8. 'dx' → logprob: -20.63604736328125
    9. '```' → logprob: -20.63604736328125
    10. '1' → logprob: -21.38604736328125

Token 429: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009337326046079397
    2. ' dx' → logprob: -7.000933647155762
    3. '1' → logprob: -10.750933647155762
    4. '(dx' → logprob: -14.500933647155762
    5. '_dx' → logprob: -15.500933647155762
    6. '.dx' → logprob: -17.000934600830078
    7. '   ' → logprob: -17.125934600830078
    8. '+' → logprob: -17.625934600830078
    9. ' ' → logprob: -17.750934600830078
    10. 'x' → logprob: -17.750934600830078

Token 430: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013934777118265629
    2. '                
' → logprob: -4.88893461227417
    3. '<|end|>' → logprob: -5.51393461227417
    4. '```' → logprob: -6.76393461227417
    5. '
' → logprob: -7.63893461227417
    6. '<|end|>' → logprob: -8.388935089111328
    7. '  
' → logprob: -9.013935089111328
    8. '               
' → logprob: -9.388935089111328
    9. ' 
' → logprob: -10.513935089111328
    10. '                ' → logprob: -11.013935089111328

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004912212025374174
    2. '```' → logprob: -5.379912376403809
    3. '                
' → logprob: -8.754912376403809
    4. '<|end|>' → logprob: -9.379912376403809
    5. '                ' → logprob: -11.504912376403809
    6. '              ' → logprob: -12.004912376403809
    7. ' if' → logprob: -12.129912376403809
    8. '               
' → logprob: -12.254912376403809
    9. '           ' → logprob: -12.254912376403809
    10. '``' → logprob: -12.754912376403809

Token 432: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019314298406243324
    2. ' if' → logprob: -4.019314289093018
    3. '               ' → logprob: -6.894314289093018
    4. '#' (adapté à ' #') → logprob: -9.269314765930176
    5. 'valid' → logprob: -11.019314765930176
    6. 'can' → logprob: -11.769314765930176
    7. 'n' → logprob: -12.019314765930176
    8. '```' → logprob: -12.269314765930176
    9. ' #' → logprob: -12.519314765930176
    10. 'l' → logprob: -12.644314765930176

Token 433: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03282664343714714
    2. '               ' → logprob: -3.9078266620635986
    3. 'left' → logprob: -5.2828264236450195
    4. '#' → logprob: -5.5328264236450195
    5. ' if' → logprob: -6.5328264236450195
    6. 'ly' → logprob: -7.0328264236450195
    7. 'valid' → logprob: -7.7828264236450195
    8. 'can' → logprob: -9.15782642364502
    9. 'l' → logprob: -9.40782642364502
    10. 'for' → logprob: -9.65782642364502

Token 434: ' left' (ID: 3561)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9288756847381592
    2. 'not' → logprob: -1.3038756847381592
    3. 'is' → logprob: -2.303875684738159
    4. 'n' → logprob: -2.553875684738159
    5. ' is' → logprob: -2.553875684738159
    6. 'room' → logprob: -3.678875684738159
    7. ' n' → logprob: -4.178875923156738
    8. ' room' → logprob: -4.303875923156738
    9. 'the' → logprob: -5.178875923156738
    10. 'both' → logprob: -5.428875923156738

Token 435: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.4212155342102051
    2. 'if' → logprob: -1.171215534210205
    3. '               ' → logprob: -3.796215534210205
    4. ' if' → logprob: -5.671215534210205
    5. ' room' → logprob: -6.296215534210205
    6. 'side' → logprob: -6.421215534210205
    7. 'position' → logprob: -6.796215534210205
    8. ',' → logprob: -7.046215534210205
    9. 'pos' → logprob: -7.421215534210205
    10. 'player' → logprob: -7.921215534210205

Token 436: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007692986633628607
    2. ' if' → logprob: -5.507692813873291
    3. 'if' → logprob: -6.132692813873291
    4. ',' → logprob: -6.632692813873291
    5. '                
' → logprob: -9.38269329071045
    6. ':' → logprob: -11.75769329071045
    7. ' and' → logprob: -12.38269329071045
    8. '```' → logprob: -12.38269329071045
    9. ' is' → logprob: -12.50769329071045
    10. '                ' → logprob: -12.75769329071045

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03372223675251007
    2. '               ' → logprob: -3.533722162246704
    3. ' if' → logprob: -5.533722400665283
    4. '```' → logprob: -11.908721923828125
    5. 'n' → logprob: -13.158721923828125
    6. 'is' → logprob: -13.283721923828125
    7. '                ' → logprob: -14.783721923828125
    8. '#' → logprob: -14.783721923828125
    9. '                   ' → logprob: -14.908721923828125
    10. 'check' → logprob: -15.658721923828125

Token 438: ' next' (ID: 2613)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09832671284675598
    2. ' not' → logprob: -2.4733266830444336
    3. 'is' → logprob: -4.723326683044434
    4. ' is' → logprob: -7.723326683044434
    5. 'n' → logprob: -12.473326683044434
    6. 'the' → logprob: -12.848326683044434
    7. '(not' → logprob: -13.098326683044434
    8. '	not' → logprob: -13.598326683044434
    9. 'can' → logprob: -13.973326683044434
    10. '```' → logprob: -14.598326683044434

Token 439: ' cell' (ID: 4206)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6993317604064941
    2. ' not' → logprob: -1.1993317604064941
    3. 'position' → logprob: -2.449331760406494
    4. ' position' → logprob: -2.699331760406494
    5. 'ly' → logprob: -4.449331760406494
    6. ' move' → logprob: -5.074331760406494
    7. 'move' → logprob: -5.324331760406494
    8. 'L' → logprob: -5.824331760406494
    9. 'n' → logprob: -5.824331760406494
    10. 'y' → logprob: -5.824331760406494

Token 440: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.03793223202228546
    2. ' is' → logprob: -3.4129321575164795
    3. 'not' → logprob: -6.537932395935059
    4. '==' → logprob: -7.162932395935059
    5. ' not' → logprob: -7.162932395935059
    6. 'in' → logprob: -7.912932395935059
    7. ' ==' → logprob: -8.037932395935059
    8. '```' → logprob: -8.537932395935059
    9. 'and' → logprob: -9.537932395935059
    10. '               ' → logprob: -9.662932395935059

Token 441: ' wall' (ID: 9688)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.4782429337501526
    2. 'not' → logprob: -1.3532428741455078
    3. 'blocked' → logprob: -3.103242874145508
    4. 'wall' → logprob: -3.353242874145508
    5. ' not' → logprob: -3.603242874145508
    6. ' open' → logprob: -5.353242874145508
    7. ' wall' → logprob: -6.478242874145508
    8. '#' → logprob: -6.853242874145508
    9. ' blocked' → logprob: -6.853242874145508
    10. ''#' → logprob: -6.978242874145508

Token 442: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.19887854158878326
    2. 'or' → logprob: -2.198878526687622
    3. ',' → logprob: -3.073878526687622
    4. '               ' → logprob: -4.448878765106201
    5. '                   ' → logprob: -5.198878765106201
    6. 'and' → logprob: -6.198878765106201
    7. ' and' → logprob: -6.448878765106201
    8. ':' → logprob: -6.948878765106201
    9. '```' → logprob: -6.948878765106201
    10. '           ' → logprob: -8.823878288269043

Token 443: ' outside' (ID: 7539)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.04184211418032646
    2. 'outside' → logprob: -4.041841983795166
    3. ' out' → logprob: -4.666841983795166
    4. 'not' → logprob: -5.541841983795166
    5. 'blocked' → logprob: -5.541841983795166
    6. '#' → logprob: -5.666841983795166
    7. ''#' → logprob: -7.541841983795166
    8. 'n' → logprob: -7.666841983795166
    9. 'invalid' → logprob: -8.166842460632324
    10. 'off' → logprob: -8.541842460632324

Token 444: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.35675591230392456
    2. 'or' → logprob: -1.4817559719085693
    3. ',' → logprob: -3.2317559719085693
    4. '               ' → logprob: -3.8567559719085693
    5. 'if' → logprob: -5.85675573348999
    6. '                   ' → logprob: -5.85675573348999
    7. ':' → logprob: -6.23175573348999
    8. 'not' → logprob: -6.85675573348999
    9. ' not' → logprob: -6.98175573348999
    10. ' the' → logprob: -8.106756210327148

Token 445: ' Len' (ID: 38183)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15533611178398132
    2. '                   ' → logprob: -2.4053361415863037
    3. ' n' → logprob: -3.0303361415863037
    4. '               ' → logprob: -5.530335903167725
    5. 'if' → logprob: -7.280335903167725
    6. ' if' → logprob: -8.405336380004883
    7. '                ' → logprob: -9.280336380004883
    8. '   ' → logprob: -9.405336380004883
    9. '#' → logprob: -9.780336380004883
    10. '                       ' → logprob: -10.405336380004883

Token 446: ' stays' (ID: 35239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4939205646514893
    2. '       ' → logprob: -2.4939205646514893
    3. '(n' → logprob: -2.6189205646514893
    4. '```' → logprob: -2.8689205646514893
    5. 'n' → logprob: -2.9939205646514893
    6. 'if' → logprob: -2.9939205646514893
    7. 'ft' → logprob: -3.1189205646514893
    8. '(' → logprob: -3.1189205646514893
    9. 'y' → logprob: -3.2439205646514893
    10. '==' → logprob: -3.3689205646514893

Token 447: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.118410587310791
    2. 'in' → logprob: -1.243410587310791
    3. 'put' → logprob: -1.993410587310791
    4. 'same' → logprob: -2.493410587310791
    5. 'the' → logprob: -3.118410587310791
    6. '                   ' → logprob: -3.243410587310791
    7. 'at' → logprob: -3.368410587310791
    8. ' at' → logprob: -4.743410587310791
    9. ' in' → logprob: -4.868410587310791
    10. '   ' → logprob: -4.993410587310791

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021035075187683105
    2. 'else' → logprob: -5.021035194396973
    3. ' if' → logprob: -5.396035194396973
    4. ' else' → logprob: -5.896035194396973
    5. ',' → logprob: -6.271035194396973
    6. ' or' → logprob: -6.521035194396973
    7. 'n' → logprob: -6.896035194396973
    8. 'if' → logprob: -7.146035194396973
    9. '                   ' → logprob: -7.521035194396973
    10. 'elif' → logprob: -8.271035194396973

Token 449: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7318576574325562
    2. ' if' → logprob: -1.2318576574325562
    3. 'if' (adapté à ' if') → logprob: -1.4818576574325562
    4. '```' → logprob: -11.606857299804688
    5. '                
' → logprob: -12.106857299804688
    6. 'n' → logprob: -13.606857299804688
    7. '	if' → logprob: -14.481857299804688
    8. '                ' → logprob: -14.481857299804688
    9. 'If' → logprob: -14.606857299804688
    10. '           ' → logprob: -14.981857299804688

Token 450: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16035117208957672
    2. 'not' → logprob: -1.9103511571884155
    3. '0' → logprob: -10.535350799560547
    4. 'n' → logprob: -10.535350799560547
    5. '   ' → logprob: -10.785350799560547
    6. 'is' → logprob: -10.785350799560547
    7. ' n' → logprob: -11.285350799560547
    8. ' is' → logprob: -11.285350799560547
    9. '(not' → logprob: -12.910350799560547
    10. ' ' → logprob: -13.410350799560547

Token 451: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5761810541152954
    2. ' is' → logprob: -0.8261810541152954
    3. '(is' → logprob: -8.826181411743164
    4. ' (' → logprob: -9.451181411743164
    5. '(' → logprob: -11.076181411743164
    6. '0' → logprob: -15.076181411743164
    7. '	is' → logprob: -15.826181411743164
    8. ' ' → logprob: -15.826181411743164
    9. ' ' → logprob: -16.951181411743164
    10. '   ' → logprob: -17.326181411743164

Token 452: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.00018006093159783632
    2. 'open' → logprob: -8.6251802444458
    3. '(open' → logprob: -16.125179290771484
    4. 'Open' → logprob: -16.250179290771484
    5. '```' → logprob: -16.500179290771484
    6. 'n' → logprob: -17.125179290771484
    7. '_safe' → logprob: -17.500179290771484
    8. '_OPEN' → logprob: -17.625179290771484
    9. '_' → logprob: -17.750179290771484
    10. ' open' → logprob: -18.375179290771484

Token 453: '(room' (ID: 69259)
  Prédit: '(room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(room' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.87500286102295
    4. 'room' → logprob: -18.125001907348633
    5. ' room' → logprob: -18.250001907348633
    6. '(Room' → logprob: -18.250001907348633
    7. '(
' → logprob: -19.000001907348633
    8. '	room' → logprob: -19.750001907348633
    9. '```' → logprob: -21.500001907348633
    10. '(robot' → logprob: -21.750001907348633

Token 454: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.4849443838757e-06
    2. ',' → logprob: -12.625004768371582
    3. ')' → logprob: -14.500004768371582
    4. '[' → logprob: -15.125004768371582
    5. ' L' → logprob: -16.250003814697266
    6. 'room' → logprob: -16.250003814697266
    7. '(room' → logprob: -17.000003814697266
    8. '               ' → logprob: -17.125003814697266
    9. '```' → logprob: -17.375003814697266
    10. ',L' → logprob: -18.125003814697266

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005270753521472216
    2. ',n' → logprob: -5.255270957946777
    3. ' ,' → logprob: -10.505270957946777
    4. '(n' → logprob: -12.630270957946777
    5. ',y' → logprob: -13.130270957946777
    6. ',(' → logprob: -13.630270957946777
    7. '   ' → logprob: -14.130270957946777
    8. 'n' → logprob: -14.380270957946777
    9. '           ' → logprob: -15.505270957946777
    10. ',
' → logprob: -15.630270957946777

Token 456: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001171056181192398
    2. ' n' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.126171112060547
    4. '	n' → logprob: -17.251171112060547
    5. 'ny' → logprob: -17.876171112060547
    6. ')n' → logprob: -18.626171112060547
    7. '    ' → logprob: -18.751171112060547
    8. '               ' → logprob: -19.126171112060547
    9. '           ' → logprob: -19.376171112060547
    10. '       ' → logprob: -19.376171112060547

Token 457: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -4.008129963040119e-06
    2. 'l' → logprob: -12.750003814697266
    3. 'n' → logprob: -14.625003814697266
    4. 'ny' → logprob: -15.375003814697266
    5. 'y' → logprob: -15.625003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '
' → logprob: -16.875003814697266
    8. '1' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. '

' → logprob: -17.875003814697266

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033770643174648285
    2. ',n' → logprob: -3.4087705612182617
    3. ' ,' → logprob: -9.033770561218262
    4. 'n' → logprob: -13.533770561218262
    5. ')' → logprob: -13.908770561218262
    6. '   ' → logprob: -14.408770561218262
    7. '[' → logprob: -14.908770561218262
    8. ' ' → logprob: -15.033770561218262
    9. '       ' → logprob: -15.158770561218262
    10. ',y' → logprob: -15.283770561218262

Token 459: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.00028648413717746735
    2. ' nl' → logprob: -8.750286102294922
    3. 'n' → logprob: -9.000286102294922
    4. 'nr' → logprob: -13.250286102294922
    5. '
' → logprob: -14.000286102294922
    6. '0' → logprob: -15.000286102294922
    7. '   ' → logprob: -15.250286102294922
    8. '
' → logprob: -15.375286102294922
    9. 'nx' → logprob: -15.750286102294922
    10. 'nel' → logprob: -15.750286102294922

Token 460: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.842555426876061e-06
    2. 'nx' → logprob: -13.250004768371582
    3. 'sx' → logprob: -14.250004768371582
    4. 'n' → logprob: -14.750004768371582
    5. ' x' → logprob: -15.000004768371582
    6. ')' → logprob: -15.000004768371582
    7. 'y' → logprob: -15.375004768371582
    8. '   ' → logprob: -15.375004768371582
    9. '```' → logprob: -15.750004768371582
    10. 'lx' → logprob: -15.875004768371582

Token 461: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18303564190864563
    2. '):' → logprob: -1.8080356121063232
    3. ')' → logprob: -5.933035850524902
    4. '               ' → logprob: -7.808035850524902
    5. '):
' → logprob: -9.433035850524902
    6. '                   ' → logprob: -9.808035850524902
    7. '           ' → logprob: -10.558035850524902
    8. ':' → logprob: -11.308035850524902
    9. ' ):
' → logprob: -11.308035850524902
    10. '):

' → logprob: -11.433035850524902

Token 462: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20565703511238098
    2. 'n' → logprob: -1.7056570053100586
    3. ' n' → logprob: -5.580657005310059
    4. '               ' → logprob: -8.330657005310059
    5. '                    
' → logprob: -9.330657005310059
    6. '
' → logprob: -10.330657005310059
    7. '                       ' → logprob: -10.455657005310059
    8. '   ' → logprob: -10.455657005310059
    9. ',' → logprob: -11.830657005310059
    10. '```' → logprob: -12.205657005310059

Token 463: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0025938500184565783
    2. '                   ' → logprob: -6.627593994140625
    3. ' n' → logprob: -7.252593994140625
    4. '               ' → logprob: -7.752593994140625
    5. '   ' → logprob: -9.127593994140625
    6. '
' → logprob: -11.752593994140625
    7. ' ' → logprob: -12.377593994140625
    8. '                       ' → logprob: -12.752593994140625
    9. '           ' → logprob: -13.877593994140625
    10. '	n' → logprob: -14.252593994140625

Token 464: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -9.865583706414327e-05
    2. 'y' → logprob: -9.37509822845459
    3. 'l' → logprob: -12.37509822845459
    4. ' ly' → logprob: -12.87509822845459
    5. '   ' → logprob: -13.37509822845459
    6. '  ' → logprob: -14.25009822845459
    7. 'n' → logprob: -14.62509822845459
    8. 'ely' → logprob: -14.87509822845459
    9. '
' → logprob: -15.00009822845459
    10. 'ny' → logprob: -15.25009822845459

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005539070349186659
    2. '=' → logprob: -5.2555389404296875
    3. ',n' → logprob: -8.255538940429688
    4. ',l' → logprob: -10.255538940429688
    5. ' ,' → logprob: -12.505538940429688
    6. 'n' → logprob: -13.255538940429688
    7. ' =' → logprob: -13.255538940429688
    8. ',y' → logprob: -13.755538940429688
    9. ',ll' → logprob: -14.130538940429688
    10. ',
' → logprob: -15.380538940429688

Token 466: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.003065653145313263
    2. ' nl' → logprob: -5.878065586090088
    3. 'n' → logprob: -8.503066062927246
    4. 'lx' → logprob: -9.878066062927246
    5. 'nx' → logprob: -12.378066062927246
    6. '   ' → logprob: -14.253066062927246
    7. ' n' → logprob: -14.378066062927246
    8. ' ' → logprob: -15.003066062927246
    9. 'ly' → logprob: -15.378066062927246
    10. ' lx' → logprob: -15.628066062927246

Token 467: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00035048185964114964
    2. 'lx' → logprob: -8.125350952148438
    3. ' lx' → logprob: -10.125350952148438
    4. ' ly' → logprob: -11.875350952148438
    5. 'ly' → logprob: -12.625350952148438
    6. 'y' → logprob: -13.625350952148438
    7. 'nx' → logprob: -14.125350952148438
    8. ' x' → logprob: -14.875350952148438
    9. ',' → logprob: -15.250350952148438
    10. 'ux' → logprob: -15.500350952148438

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029613598599098623
    2. ' =' → logprob: -8.125296592712402
    3. '=
' → logprob: -16.250295639038086
    4. ',' → logprob: -16.875295639038086
    5. '=

' → logprob: -18.625295639038086
    6. '=}' → logprob: -19.125295639038086
    7. '.=' → logprob: -19.250295639038086
    8. ')=' → logprob: -19.500295639038086
    9. '＝' → logprob: -20.250295639038086
    10. '   ' → logprob: -20.625295639038086

Token 469: ' ly' (ID: 15280)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.0280383548888494e-06
    2. ' ly' → logprob: -14.000000953674316
    3. '(' → logprob: -16.000001907348633
    4. 'lys' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.500001907348633
    6. 'lay' → logprob: -19.250001907348633
    7. 'lyph' → logprob: -19.500001907348633
    8. 'ley' → logprob: -19.875001907348633
    9. 'lya' → logprob: -19.875001907348633
    10. 'Ly' → logprob: -20.500001907348633

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006177236791700125
    2. ',n' → logprob: -7.500617504119873
    3. ' ,' → logprob: -10.000617980957031
    4. ',l' → logprob: -11.875617980957031
    5. '               ' → logprob: -12.375617980957031
    6. ',ll' → logprob: -12.500617980957031
    7. ',
' → logprob: -13.125617980957031
    8. '<|end|>' → logprob: -14.250617980957031
    9. '       ' → logprob: -15.500617980957031
    10. 'n' → logprob: -15.500617980957031

Token 471: ' lx' (ID: 153863)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.0004309076175559312
    2. ' lx' → logprob: -7.750431060791016
    3. ' ' → logprob: -16.625431060791016
    4. 'l' → logprob: -17.250431060791016
    5. 'kx' → logprob: -17.250431060791016
    6. '   ' → logprob: -17.625431060791016
    7. 'x' → logprob: -18.125431060791016
    8. 'lc' → logprob: -19.125431060791016
    9. 'lox' → logprob: -19.375431060791016
    10. 'nx' → logprob: -19.500431060791016

Token 472: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040908332914114
    2. '<|end|>' → logprob: -3.4159083366394043
    3. '                
' → logprob: -5.165908336639404
    4. '                ' → logprob: -7.165908336639404
    5. '              ' → logprob: -8.415907859802246
    6. ')' → logprob: -8.790907859802246
    7. ',' → logprob: -9.165907859802246
    8. '<|end|>' → logprob: -9.915907859802246
    9. '  
' → logprob: -10.540907859802246
    10. '                    
' → logprob: -10.540907859802246

Token 473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.004696090007201e-05
    2. '                
' → logprob: -10.125069618225098
    3. '```' → logprob: -11.750069618225098
    4. '                ' → logprob: -12.125069618225098
    5. '#' → logprob: -12.125069618225098
    6. '              ' → logprob: -12.375069618225098
    7. '<|end|>' → logprob: -13.000069618225098
    8. '                   ' → logprob: -14.000069618225098
    9. '           ' → logprob: -14.125069618225098
    10. ',' → logprob: -14.250069618225098

Token 474: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002831464516930282
    2. '                
' → logprob: -9.500283241271973
    3. '```' → logprob: -9.625283241271973
    4. 'if' → logprob: -9.750283241271973
    5. '#' (adapté à ' #') → logprob: -9.750283241271973
    6. '              ' → logprob: -11.625283241271973
    7. '                ' → logprob: -11.875283241271973
    8. ' if' → logprob: -13.000283241271973
    9. '           ' → logprob: -13.250283241271973
    10. '                   ' → logprob: -13.750283241271973

Token 475: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4804311990737915
    2. '               ' → logprob: -0.9804311990737915
    3. '#' → logprob: -5.105431079864502
    4. '```' → logprob: -8.98043155670166
    5. ' if' → logprob: -9.10543155670166
    6. '           ' → logprob: -11.73043155670166
    7. '                
' → logprob: -11.85543155670166
    8. '                ' → logprob: -12.35543155670166
    9. '              ' → logprob: -12.48043155670166
    10. '                   ' → logprob: -12.73043155670166

Token 476: ' right' (ID: 1849)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.015065844170749187
    2. 'room' → logprob: -5.015065670013428
    3. ' not' → logprob: -5.265065670013428
    4. 'right' → logprob: -5.765065670013428
    5. ' room' → logprob: -11.640066146850586
    6. '               ' → logprob: -13.890066146850586
    7. '(not' → logprob: -14.140066146850586
    8. ' right' → logprob: -14.515066146850586
    9. '           ' → logprob: -15.515066146850586
    10. '       ' → logprob: -16.140066146850586

Token 477: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.029760213568806648
    2. ' room' → logprob: -3.5297601222991943
    3. '_room' → logprob: -13.404760360717773
    4. '           ' → logprob: -13.529760360717773
    5. '       ' → logprob: -13.654760360717773
    6. '   ' → logprob: -13.779760360717773
    7. '               ' → logprob: -13.904760360717773
    8. ',' → logprob: -14.029760360717773
    9. 'if' → logprob: -14.029760360717773
    10. '(room' → logprob: -14.279760360717773

Token 478: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37745529413223267
    2. ',' → logprob: -1.377455234527588
    3. ' if' → logprob: -3.252455234527588
    4. 'if' → logprob: -3.752455234527588
    5. ' ,' → logprob: -10.502455711364746
    6. '                
' → logprob: -13.002455711364746
    7. '```' → logprob: -13.127455711364746
    8. '              ' → logprob: -13.377455711364746
    9. '                   ' → logprob: -13.877455711364746
    10. '           ' → logprob: -14.252455711364746

Token 479: ' similar' (ID: 6771)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3004394769668579
    2. 'if' → logprob: -1.550439476966858
    3. '               ' → logprob: -3.0504393577575684
    4. '                ' → logprob: -12.175439834594727
    5. ' not' → logprob: -12.300439834594727
    6. 'not' → logprob: -12.800439834594727
    7. '                   ' → logprob: -14.300439834594727
    8. '```' → logprob: -14.675439834594727
    9. '                
' → logprob: -15.175439834594727
    10. '              ' → logprob: -15.425439834594727

Token 480: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2524206340312958
    2. 'if' → logprob: -1.7524206638336182
    3. ' if' → logprob: -3.002420663833618
    4. '```' → logprob: -10.127420425415039
    5. '                   ' → logprob: -11.627420425415039
    6. '           ' → logprob: -12.627420425415039
    7. '              ' → logprob: -12.627420425415039
    8. '                ' → logprob: -12.877420425415039
    9. '                
' → logprob: -13.377420425415039
    10. '   ' → logprob: -14.627420425415039

Token 481: ' Rin' (ID: 149204)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8313779830932617
    2. 'room' → logprob: -1.0813779830932617
    3. ' not' → logprob: -1.5813779830932617
    4. ' room' → logprob: -4.081377983093262
    5. 'n' → logprob: -6.331377983093262
    6. 'if' → logprob: -7.831377983093262
    7. '(room' → logprob: -8.581377983093262
    8. ' n' → logprob: -8.706377983093262
    9. '               ' → logprob: -9.081377983093262
    10. '(not' → logprob: -9.581377983093262

Token 482: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40889430046081543
    2. 'n' → logprob: -1.4088943004608154
    3. 't' → logprob: -2.6588943004608154
    4. '       ' → logprob: -5.7838945388793945
    5. 'not' → logprob: -5.7838945388793945
    6. ' not' → logprob: -5.9088945388793945
    7. '   ' → logprob: -6.1588945388793945
    8. 'if' → logprob: -6.1588945388793945
    9. 'nr' → logprob: -7.2838945388793945
    10. 'g' → logprob: -7.5338945388793945

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006044454872608185
    2. 'if' → logprob: -5.256044387817383
    3. ' if' → logprob: -7.131044387817383
    4. '```' → logprob: -11.631044387817383
    5. '                   ' → logprob: -14.381044387817383
    6. '              ' → logprob: -14.756044387817383
    7. '                ' → logprob: -14.881044387817383
    8. '                
' → logprob: -16.506044387817383
    9. '           ' → logprob: -16.756044387817383
    10. '   ' → logprob: -17.006044387817383

Token 484: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6382226943969727
    2. ' if' → logprob: -1.1382226943969727
    3. 'if' (adapté à ' if') → logprob: -1.8882226943969727
    4. '                ' → logprob: -10.638222694396973
    5. '```' → logprob: -12.013222694396973
    6. '                   ' → logprob: -12.263222694396973
    7. '              ' → logprob: -13.513222694396973
    8. 'not' → logprob: -13.888222694396973
    9. ' not' → logprob: -13.888222694396973
    10. '                
' → logprob: -14.013222694396973

Token 485: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31326761841773987
    2. 'not' → logprob: -1.3132675886154175
    3. '(not' → logprob: -12.688267707824707
    4. '   ' → logprob: -13.813267707824707
    5. '               ' → logprob: -14.438267707824707
    6. '           ' → logprob: -15.063267707824707
    7. '	not' → logprob: -15.563267707824707
    8. 'n' → logprob: -15.938267707824707
    9. '       ' → logprob: -16.31326675415039
    10. '#' → logprob: -16.56326675415039

Token 486: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.10020678490400314
    2. ' is' → logprob: -2.3502068519592285
    3. '(is' → logprob: -16.22520637512207
    4. ' ' → logprob: -19.35020637512207
    5. '   ' → logprob: -19.47520637512207
    6. ' ' → logprob: -19.72520637512207
    7. '	is' → logprob: -19.97520637512207
    8. '#' → logprob: -20.47520637512207
    9. '.is' → logprob: -20.60020637512207
    10. '```' → logprob: -20.97520637512207

Token 487: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.0007144584087654948
    2. 'open' → logprob: -7.250714302062988
    3. 'Open' → logprob: -12.375714302062988
    4. '_OPEN' → logprob: -16.500715255737305
    5. '(open' → logprob: -17.250715255737305
    6. '_close' → logprob: -17.375715255737305
    7. '_right' → logprob: -18.625715255737305
    8. '(' → logprob: -19.000715255737305
    9. '_' → logprob: -19.000715255737305
    10. '_Open' → logprob: -19.125715255737305

Token 488: '(room' (ID: 69259)
  Prédit: '(room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(room' → logprob: -2.1888679839321412e-05
    2. 'room' → logprob: -10.875021934509277
    3. ' room' → logprob: -13.375021934509277
    4. '(' → logprob: -13.625021934509277
    5. '	room' → logprob: -15.875021934509277
    6. ' (' → logprob: -17.50002098083496
    7. '(
' → logprob: -17.75002098083496
    8. '```' → logprob: -19.12502098083496
    9. '(Room' → logprob: -19.25002098083496
    10. '.room' → logprob: -19.62502098083496

Token 489: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.038337063044309616
    2. 'room' → logprob: -3.288336992263794
    3. '(room' → logprob: -8.788336753845215
    4. ',' → logprob: -9.538336753845215
    5. ' room' → logprob: -9.663336753845215
    6. ' R' → logprob: -13.038336753845215
    7. ')' → logprob: -13.788336753845215
    8. '               ' → logprob: -14.038336753845215
    9. '   ' → logprob: -14.288336753845215
    10. '.room' → logprob: -14.788336753845215

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ',n' → logprob: -10.625041961669922
    3. ' ,' → logprob: -11.250041961669922
    4. 'n' → logprob: -12.500041961669922
    5. ' n' → logprob: -15.375041961669922
    6. ' ' → logprob: -17.000041961669922
    7. '   ' → logprob: -17.125041961669922
    8. '(n' → logprob: -17.500041961669922
    9. ',
' → logprob: -17.500041961669922
    10. ')' → logprob: -18.375041961669922

Token 491: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014251544780563563
    2. ' n' → logprob: -8.875142097473145
    3. 'nr' → logprob: -13.875142097473145
    4. ',' → logprob: -14.000142097473145
    5. '   ' → logprob: -14.250142097473145
    6. '    ' → logprob: -17.25014305114746
    7. ' ' → logprob: -17.37514305114746
    8. '
' → logprob: -17.62514305114746
    9. '	n' → logprob: -17.75014305114746
    10. '       ' → logprob: -18.00014305114746

Token 492: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.02020058035850525
    2. ',' → logprob: -4.270200729370117
    3. 'r' → logprob: -6.020200729370117
    4. ' ry' → logprob: -6.645200729370117
    5. 'n' → logprob: -6.895200729370117
    6. ' n' → logprob: -7.520200729370117
    7. '   ' → logprob: -8.145200729370117
    8. '(n' → logprob: -9.645200729370117
    9. ' ,' → logprob: -9.770200729370117
    10. ' ' → logprob: -10.020200729370117

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011865380220115185
    2. ',n' → logprob: -6.751186370849609
    3. ' ,' → logprob: -11.25118637084961
    4. '   ' → logprob: -13.62618637084961
    5. ',r' → logprob: -14.62618637084961
    6. '           ' → logprob: -14.75118637084961
    7. '               ' → logprob: -14.87618637084961
    8. ',
' → logprob: -15.00118637084961
    9. '       ' → logprob: -15.37618637084961
    10. 'n' → logprob: -16.00118637084961

Token 494: ' nr' (ID: 24055)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6781339049339294
    2. 'r' → logprob: -0.8031339049339294
    3. 'nr' → logprob: -3.178133964538574
    4. ' nr' → logprob: -6.678133964538574
    5. 'rx' → logprob: -7.053133964538574
    6. 'ry' → logprob: -7.678133964538574
    7. '
' → logprob: -9.928133964538574
    8. '   ' → logprob: -10.053133964538574
    9. 'rr' → logprob: -10.428133964538574
    10. '```' → logprob: -10.553133964538574

Token 495: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00021224225929472595
    2. 'y' → logprob: -8.500212669372559
    3. '   ' → logprob: -13.000212669372559
    4. 'rx' → logprob: -13.500212669372559
    5. '0' → logprob: -14.375212669372559
    6. ')' → logprob: -14.625212669372559
    7. '
' → logprob: -14.625212669372559
    8. 'nx' → logprob: -14.875212669372559
    9. ',' → logprob: -15.000212669372559
    10. 'ax' → logprob: -15.125212669372559

Token 496: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0338975228369236
    2. '):' → logprob: -3.408897638320923
    3. ')' → logprob: -8.783897399902344
    4. '):
' → logprob: -10.408897399902344
    5. '               ' → logprob: -11.158897399902344
    6. '                   ' → logprob: -11.408897399902344
    7. ',' → logprob: -11.533897399902344
    8. ':' → logprob: -11.783897399902344
    9. '):

' → logprob: -11.783897399902344
    10. ':
' → logprob: -12.033897399902344

Token 497: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1049741581082344
    2. 'n' → logprob: -2.3549742698669434
    3. '               ' → logprob: -5.604974269866943
    4. ' n' → logprob: -7.104974269866943
    5. '   ' → logprob: -8.604973793029785
    6. '           ' → logprob: -10.854973793029785
    7. '                    ' → logprob: -11.354973793029785
    8. '                  ' → logprob: -11.479973793029785
    9. '                ' → logprob: -11.729973793029785
    10. '                 ' → logprob: -11.854973793029785

Token 498: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00014168102643452585
    2. ' n' → logprob: -8.875142097473145
    3. 'nr' → logprob: -13.500142097473145
    4. '   ' → logprob: -15.875142097473145
    5. '               ' → logprob: -16.000141143798828
    6. '           ' → logprob: -17.250141143798828
    7. '	n' → logprob: -17.750141143798828
    8. ' nr' → logprob: -18.125141143798828
    9. '                   ' → logprob: -18.375141143798828
    10. ' ' → logprob: -18.500141143798828

Token 499: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -3.2378600735682994e-05
    2. 'ly' → logprob: -11.250032424926758
    3. ' ry' → logprob: -11.625032424926758
    4. 'r' → logprob: -12.875032424926758
    5. '   ' → logprob: -12.875032424926758
    6. 'y' → logprob: -13.125032424926758
    7. ',' → logprob: -14.500032424926758
    8. '     ' → logprob: -14.750032424926758
    9. 'rx' → logprob: -15.125032424926758
    10. '    ' → logprob: -15.250032424926758

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ',n' → logprob: -12.000008583068848
    3. ' ,' → logprob: -13.625008583068848
    4. ',r' → logprob: -14.250008583068848
    5. '=' → logprob: -15.500008583068848
    6. 'n' → logprob: -16.12500762939453
    7. ',
' → logprob: -16.25000762939453
    8. '                   ' → logprob: -17.75000762939453
    9. '               ' → logprob: -18.87500762939453
    10. ' =' → logprob: -19.00000762939453

Token 501: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.6862205862998962
    2. 'n' → logprob: -1.186220645904541
    3. 'rx' → logprob: -1.811220645904541
    4. 'r' → logprob: -4.186220645904541
    5. 'ry' → logprob: -4.936220645904541
    6. ' nr' → logprob: -5.936220645904541
    7. '   ' → logprob: -6.686220645904541
    8. 'rr' → logprob: -7.561220645904541
    9. '
' → logprob: -8.186220169067383
    10. '       ' → logprob: -9.561220169067383

Token 502: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043100930750370026
    2. 'rx' → logprob: -3.2931008338928223
    3. 'y' → logprob: -6.293100833892822
    4. '   ' → logprob: -6.543100833892822
    5. ',' → logprob: -7.668100833892822
    6. 'ry' → logprob: -7.918100833892822
    7. ' rx' → logprob: -8.04310131072998
    8. '     ' → logprob: -8.66810131072998
    9. '       ' → logprob: -9.16810131072998
    10. 'r' → logprob: -9.79310131072998

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. ',' → logprob: -17.126502990722656
    4. ')' → logprob: -19.501502990722656
    5. '=}' → logprob: -19.876502990722656
    6. '   ' → logprob: -20.251502990722656
    7. '＝' → logprob: -20.376502990722656
    8. '```' → logprob: -20.751502990722656
    9. '=

' → logprob: -21.251502990722656
    10. ')=' → logprob: -21.376502990722656

Token 504: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.00018661346985027194
    2. ' ry' → logprob: -8.750186920166016
    3. '   ' → logprob: -10.875186920166016
    4. '(' → logprob: -12.750186920166016
    5. ' ' → logprob: -13.250186920166016
    6. '  ' → logprob: -13.250186920166016
    7. '    ' → logprob: -14.000186920166016
    8. '       ' → logprob: -14.375186920166016
    9. '     ' → logprob: -14.625186920166016
    10. ' (' → logprob: -15.625186920166016

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.875012397766113
    3. ',n' → logprob: -12.875012397766113
    4. ',x' → logprob: -14.250012397766113
    5. '           ' → logprob: -14.375012397766113
    6. '               ' → logprob: -14.625012397766113
    7. ',d' → logprob: -15.250012397766113
    8. ',r' → logprob: -15.500012397766113
    9. '       ' → logprob: -16.000011444091797
    10. ',
' → logprob: -16.375011444091797

Token 506: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.00033558503491804004
    2. ' rx' → logprob: -8.000335693359375
    3. '(rx' → logprob: -17.250335693359375
    4. 'r' → logprob: -17.375335693359375
    5. ' ' → logprob: -17.500335693359375
    6. '   ' → logprob: -17.750335693359375
    7. 'rc' → logprob: -18.125335693359375
    8. '.rx' → logprob: -18.250335693359375
    9. 'ry' → logprob: -18.500335693359375
    10. '_rx' → logprob: -18.500335693359375

Token 507: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022206364199519157
    2. '<|end|>' → logprob: -4.0222063064575195
    3. '                
' → logprob: -5.6472063064575195
    4. '                ' → logprob: -9.27220630645752
    5. '              ' → logprob: -9.64720630645752
    6. ')' → logprob: -9.64720630645752
    7. '<|end|>' → logprob: -9.77220630645752
    8. '  
' → logprob: -10.27220630645752
    9. '                

' → logprob: -10.39720630645752
    10. '
' → logprob: -10.77220630645752

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018223817460238934
    2. '                
' → logprob: -6.376822471618652
    3. '```' → logprob: -9.876822471618652
    4. '
' → logprob: -10.876822471618652
    5. '  
' → logprob: -11.501822471618652
    6. ' 
' → logprob: -12.001822471618652
    7. '               
' → logprob: -12.126822471618652
    8. '                    
' → logprob: -12.251822471618652
    9. 'if' → logprob: -12.501822471618652
    10. ' if' → logprob: -13.001822471618652

Token 509: ' next' (ID: 2613)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013602360850200057
    2. 'if' → logprob: -6.6263604164123535
    3. ' if' → logprob: -10.751359939575195
    4. '                
' → logprob: -12.126359939575195
    5. '#' → logprob: -12.626359939575195
    6. '              ' → logprob: -14.001359939575195
    7. '                ' → logprob: -14.376359939575195
    8. 'state' → logprob: -14.376359939575195
    9. '```' → logprob: -14.376359939575195
    10. '           ' → logprob: -14.751359939575195

Token 510: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.11632948368787766
    2. '_pos' → logprob: -2.9913294315338135
    3. '_positions' → logprob: -3.7413294315338135
    4. '_' → logprob: -4.366329669952393
    5. 'L' → logprob: -4.616329669952393
    6. 'state' → logprob: -5.491329669952393
    7. '_states' → logprob: -5.491329669952393
    8. '_L' → logprob: -6.116329669952393
    9. '_token' → logprob: -7.741329669952393
    10. 'pos' → logprob: -7.741329669952393

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282921582460403
    2. '=' → logprob: -2.2378292083740234
    3. '<|end|>' → logprob: -13.237829208374023
    4. ' =(' → logprob: -13.612829208374023
    5. ' =
' → logprob: -14.737829208374023
    6. '=(' → logprob: -14.737829208374023
    7. '<|end|>' → logprob: -14.862829208374023
    8. '                ' → logprob: -14.987829208374023
    9. ',' → logprob: -14.987829208374023
    10. ')' → logprob: -15.237829208374023

Token 512: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001347672223346308
    2. ' ((' → logprob: -9.000134468078613
    3. '(' → logprob: -11.500134468078613
    4. '   ' → logprob: -13.750134468078613
    5. '(((' → logprob: -16.62513542175293
    6. ' ' → logprob: -17.37513542175293
    7. '       ' → logprob: -17.50013542175293
    8. '               ' → logprob: -17.87513542175293
    9. '           ' → logprob: -18.25013542175293
    10. ' (' → logprob: -18.62513542175293

Token 513: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. ' n' → logprob: -15.500000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '(n' → logprob: -16.375
    5. ')n' → logprob: -18.625
    6. '	n' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '                   ' → logprob: -19.25
    9. '_n' → logprob: -19.375
    10. '
' → logprob: -19.375

Token 514: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -4.2987729102605954e-05
    2. '(n' → logprob: -10.375042915344238
    3. 'l' → logprob: -12.375042915344238
    4. '(' → logprob: -12.500042915344238
    5. 'n' → logprob: -13.750042915344238
    6. 'y' → logprob: -14.000042915344238
    7. 'ny' → logprob: -14.125042915344238
    8. '(y' → logprob: -15.250042915344238
    9. '   ' → logprob: -16.000043869018555
    10. ' (' → logprob: -16.125043869018555

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03806329518556595
    2. ',n' → logprob: -3.2880632877349854
    3. ' ,' → logprob: -11.163063049316406
    4. ',
' → logprob: -11.913063049316406
    5. ',next' → logprob: -15.038063049316406
    6. '(n' → logprob: -15.663063049316406
    7. 'n' → logprob: -15.913063049316406
    8. '<|end|>' → logprob: -16.288063049316406
    9. ',
' → logprob: -16.663063049316406
    10. '),' → logprob: -16.913063049316406

Token 516: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.0005821037339046597
    2. ' nl' → logprob: -7.500582218170166
    3. 'n' → logprob: -10.500581741333008
    4. 'nr' → logprob: -14.375581741333008
    5. '(n' → logprob: -15.125581741333008
    6. 'NL' → logprob: -15.250581741333008
    7. ',n' → logprob: -15.625581741333008
    8. '.nl' → logprob: -16.500581741333008
    9. '
' → logprob: -16.625581741333008
    10. ' ' → logprob: -16.875581741333008

Token 517: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009947025682777166
    2. 'n' → logprob: -7.875994682312012
    3. 'nx' → logprob: -8.500994682312012
    4. ',n' → logprob: -8.750994682312012
    5. 'nl' → logprob: -8.750994682312012
    6. ',' → logprob: -9.500994682312012
    7. '(n' → logprob: -11.625994682312012
    8. '(nx' → logprob: -13.000994682312012
    9. ' nx' → logprob: -13.375994682312012
    10. ')' → logprob: -13.375994682312012

Token 518: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006806910037994385
    2. ',' → logprob: -5.00680685043335
    3. '),(' → logprob: -9.381807327270508
    4. ' ),' → logprob: -12.381807327270508
    5. '),
' → logprob: -13.631807327270508
    6. ',),' → logprob: -13.881807327270508
    7. ' ,' → logprob: -14.506807327270508
    8. ')' → logprob: -16.256807327270508
    9. ',(' → logprob: -16.631807327270508
    10. '},' → logprob: -16.756807327270508

Token 519: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06207804009318352
    2. ' (' → logprob: -2.8120779991149902
    3. '(' → logprob: -9.312078475952148
    4. '((' → logprob: -11.187078475952148
    5. '               ' → logprob: -12.937078475952148
    6. '   ' → logprob: -13.937078475952148
    7. '           ' → logprob: -14.062078475952148
    8. '       ' → logprob: -14.187078475952148
    9. '              ' → logprob: -15.312078475952148
    10. '                   ' → logprob: -15.312078475952148

Token 520: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.6789137084269896e-05
    2. '(n' → logprob: -10.25003719329834
    3. '	n' → logprob: -15.00003719329834
    4. '(' → logprob: -15.00003719329834
    5. 'nr' → logprob: -15.12503719329834
    6. '   ' → logprob: -15.37503719329834
    7. ' n' → logprob: -15.87503719329834
    8. ' (' → logprob: -17.000036239624023
    9. '[n' → logprob: -17.500036239624023
    10. '_n' → logprob: -18.125036239624023

Token 521: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0029880439396947622
    2. '(n' → logprob: -6.002987861633301
    3. 'r' → logprob: -7.752987861633301
    4. 'n' → logprob: -10.1279878616333
    5. '(' → logprob: -10.6279878616333
    6. '(r' → logprob: -12.5029878616333
    7. ' (' → logprob: -12.8779878616333
    8. 'ny' → logprob: -13.5029878616333
    9. ' ry' → logprob: -13.5029878616333
    10. 'y' → logprob: -13.6279878616333

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004914938937872648
    2. ',n' → logprob: -5.5049147605896
    3. '(n' → logprob: -7.1299147605896
    4. 'n' → logprob: -10.504915237426758
    5. ' ,' → logprob: -12.254915237426758
    6. '(' → logprob: -13.879915237426758
    7. '   ' → logprob: -14.504915237426758
    8. '[n' → logprob: -14.879915237426758
    9. ')' → logprob: -15.129915237426758
    10. ',r' → logprob: -15.129915237426758

Token 523: ' nr' (ID: 24055)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5577775128767826e-06
    2. 'nr' → logprob: -12.250005722045898
    3. '(n' → logprob: -14.500005722045898
    4. ' nr' → logprob: -16.0000057220459
    5. '_n' → logprob: -17.1250057220459
    6. '	n' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.7500057220459
    8. '```' → logprob: -18.2500057220459
    9. 'r' → logprob: -18.3750057220459
    10. ' n' → logprob: -18.5000057220459

Token 524: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006339243846014142
    2. 'rx' → logprob: -7.500633716583252
    3. 'r' → logprob: -10.37563419342041
    4. ')' → logprob: -11.62563419342041
    5. '(' → logprob: -11.87563419342041
    6. '(rx' → logprob: -11.87563419342041
    7. '(n' → logprob: -12.37563419342041
    8. 'nx' → logprob: -12.50063419342041
    9. 'sx' → logprob: -12.62563419342041
    10. 'y' → logprob: -13.00063419342041

Token 525: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133504390716553
    2. ')' → logprob: -1.3133504390716553
    3. '))
' → logprob: -9.438350677490234
    4. ')
' → logprob: -11.938350677490234
    5. ')))' → logprob: -14.188350677490234
    6. '))

' → logprob: -14.438350677490234
    7. ' )' → logprob: -14.813350677490234
    8. ' ))' → logprob: -15.063350677490234
    9. ')}' → logprob: -15.563350677490234
    10. '               ' → logprob: -16.063350677490234

Token 526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03673224151134491
    2. '<|end|>' → logprob: -3.6617321968078613
    3. '```' → logprob: -4.911732196807861
    4. '<|end|>' → logprob: -7.161732196807861
    5. ' if' → logprob: -7.536732196807861
    6. '                
' → logprob: -7.661732196807861
    7. 'if' → logprob: -7.661732196807861
    8. ')' → logprob: -9.03673267364502
    9. 'visited' → logprob: -9.16173267364502
    10. '[' → logprob: -9.41173267364502

Token 527: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025542939081788063
    2. ' if' → logprob: -4.400542736053467
    3. '<|end|>' → logprob: -4.900542736053467
    4. 'if' (adapté à ' if') → logprob: -5.400542736053467
    5. '```' → logprob: -7.525542736053467
    6. '                
' → logprob: -8.400543212890625
    7. '<|end|>' → logprob: -9.900543212890625
    8. '
' → logprob: -10.150543212890625
    9. '       ' → logprob: -10.275543212890625
    10. '           ' → logprob: -10.525543212890625

Token 528: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0009132515988312662
    2. 'next' → logprob: -7.000913143157959
    3. ' not' → logprob: -13.500913619995117
    4. '(next' → logprob: -15.000913619995117
    5. '[next' → logprob: -17.000913619995117
    6. '	next' → logprob: -18.125913619995117
    7. '.next' → logprob: -18.250913619995117
    8. 'not' → logprob: -18.625913619995117
    9. '_next' → logprob: -19.250913619995117
    10. ',next' → logprob: -20.625913619995117

Token 529: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.306760805164231e-05
    2. 'state' → logprob: -11.37501335144043
    3. '_STATE' → logprob: -14.25001335144043
    4. '_states' → logprob: -15.37501335144043
    5. '(next' → logprob: -15.75001335144043
    6. 'State' → logprob: -16.37501335144043
    7. 'next' → logprob: -16.50001335144043
    8. '_State' → logprob: -17.00001335144043
    9. '   ' → logprob: -17.12501335144043
    10. '[next' → logprob: -17.50001335144043

Token 530: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0007298283162526786
    2. 'not' → logprob: -7.250730037689209
    3. ' in' → logprob: -10.87572956085205
    4. '	not' → logprob: -14.87572956085205
    5. 'in' → logprob: -15.12572956085205
    6. ')' → logprob: -15.12572956085205
    7. '<|end|>' → logprob: -17.875730514526367
    8. '_not' → logprob: -18.250730514526367
    9. ':not' → logprob: -19.250730514526367
    10. ' ' → logprob: -19.875730514526367

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4808952510356903
    2. 'in' → logprob: -0.9808952808380127
    3. '               ' → logprob: -5.980895042419434
    4. '                   ' → logprob: -6.230895042419434
    5. 'visited' → logprob: -6.480895042419434
    6. '           ' → logprob: -8.355895042419434
    7. ')' → logprob: -8.605895042419434
    8. '                       ' → logprob: -9.605895042419434
    9. '   ' → logprob: -9.980895042419434
    10. '```' → logprob: -10.105895042419434

Token 532: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.306760805164231e-05
    2. ' visited' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.62501335144043
    4. '           ' → logprob: -20.62501335144043
    5. '```' → logprob: -21.12501335144043
    6. '       ' → logprob: -21.12501335144043
    7. '               ' → logprob: -21.75001335144043
    8. 'seen' → logprob: -22.25001335144043
    9. '                   ' → logprob: -22.25001335144043
    10. 'visible' → logprob: -22.50001335144043

Token 533: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7099176645278931
    2. ':' → logprob: -1.334917664527893
    3. '                   ' → logprob: -1.459917664527893
    4. '               ' → logprob: -5.4599175453186035
    5. '):
' → logprob: -5.8349175453186035
    6. '                       ' → logprob: -6.3349175453186035
    7. '           ' → logprob: -6.3349175453186035
    8. '                           ' → logprob: -7.3349175453186035
    9. '<|end|>' → logprob: -8.209918022155762
    10. ',' → logprob: -8.459918022155762

Token 534: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.756989700486884e-05
    2. '                       ' → logprob: -10.50008773803711
    3. '               ' → logprob: -11.00008773803711
    4. '                    
' → logprob: -11.12508773803711
    5. '                           ' → logprob: -11.87508773803711
    6. '```' → logprob: -12.00008773803711
    7. '           ' → logprob: -12.75008773803711
    8. '                  ' → logprob: -12.87508773803711
    9. '<|end|>' → logprob: -12.87508773803711
    10. '                    ' → logprob: -13.50008773803711

Token 535: ' visited' (ID: 18416)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.055470358580350876
    2. '                       ' → logprob: -3.5554704666137695
    3. ' visited' → logprob: -3.9304704666137695
    4. 'visited' (adapté à ' visited') → logprob: -5.8054704666137695
    5. ' queue' → logprob: -6.4304704666137695
    6. '```' → logprob: -7.8054704666137695
    7. '
' → logprob: -8.05547046661377
    8. 'queue' → logprob: -9.55547046661377
    9. '                    ' → logprob: -9.68047046661377
    10. '               ' → logprob: -9.68047046661377

Token 536: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00033999193692579865
    2. '.' → logprob: -8.000340461730957
    3. '                   ' → logprob: -12.875340461730957
    4. 'add' → logprob: -14.250340461730957
    5. '.append' → logprob: -15.000340461730957
    6. '.update' → logprob: -15.375340461730957
    7. '                       ' → logprob: -15.750340461730957
    8. '.Add' → logprob: -15.875340461730957
    9. ' .' → logprob: -16.00033950805664
    10. '                           ' → logprob: -16.25033950805664

Token 537: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0025592572055757046
    2. '(' → logprob: -6.002559185028076
    3. ' (' → logprob: -9.502559661865234
    4. 'next' → logprob: -11.877559661865234
    5. ' next' → logprob: -13.127559661865234
    6. '((' → logprob: -16.752559661865234
    7. '(
' → logprob: -17.502559661865234
    8. '   ' → logprob: -17.627559661865234
    9. '[next' → logprob: -18.002559661865234
    10. ',next' → logprob: -18.002559661865234

Token 538: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.742448022123426e-05
    2. 'state' → logprob: -9.625067710876465
    3. 'next' → logprob: -15.000067710876465
    4. '(next' → logprob: -15.125067710876465
    5. '_next' → logprob: -15.250067710876465
    6. 'State' → logprob: -15.750067710876465
    7. '_STATE' → logprob: -15.750067710876465
    8. '   ' → logprob: -17.12506675720215
    9. '_states' → logprob: -17.37506675720215
    10. '(state' → logprob: -17.87506675720215

Token 539: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17190824449062347
    2. ')' → logprob: -1.9219082593917847
    3. ')
' → logprob: -4.671908378601074
    4. '<|end|>' → logprob: -6.921908378601074
    5. ',' → logprob: -7.296908378601074
    6. '               ' → logprob: -8.796908378601074
    7. '```' → logprob: -9.796908378601074
    8. '):
' → logprob: -9.921908378601074
    9. '                       ' → logprob: -9.921908378601074
    10. '
' → logprob: -9.921908378601074

Token 540: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008947924710810184
    2. '```' → logprob: -5.133947849273682
    3. '<|end|>' → logprob: -7.633947849273682
    4. '               ' → logprob: -7.758947849273682
    5. '                    
' → logprob: -7.758947849273682
    6. '
' → logprob: -8.13394832611084
    7. '``' → logprob: -8.13394832611084
    8. '           ' → logprob: -8.63394832611084
    9. '       ' → logprob: -8.75894832611084
    10. '                       ' → logprob: -9.00894832611084

Token 541: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.23270665109157562
    2. 'queue' (adapté à ' queue') → logprob: -1.7327066659927368
    3. '                   ' → logprob: -3.4827065467834473
    4. '```' → logprob: -9.982707023620605
    5. '               ' → logprob: -11.482707023620605
    6. '                       ' → logprob: -11.482707023620605
    7. '           ' → logprob: -12.357707023620605
    8. '``' → logprob: -12.607707023620605
    9. '	queue' → logprob: -13.107707023620605
    10. '
' → logprob: -13.107707023620605

Token 542: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.297462171758525e-05
    2. '.extend' → logprob: -11.375033378601074
    3. '.' → logprob: -11.500033378601074
    4. '.p' → logprob: -11.625033378601074
    5. '.enqueue' → logprob: -13.375033378601074
    6. ').' → logprob: -15.250033378601074
    7. '.app' → logprob: -15.750033378601074
    8. '.Append' → logprob: -15.875033378601074
    9. '.put' → logprob: -15.875033378601074
    10. '```' → logprob: -16.875032424926758

Token 543: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.007247499655932188
    2. ' (' → logprob: -5.507247447967529
    3. '((' → logprob: -6.507247447967529
    4. '(' → logprob: -6.757247447967529
    5. ' next' → logprob: -8.257247924804688
    6. 'next' → logprob: -8.382247924804688
    7. ' ((' → logprob: -11.132247924804688
    8. '[next' → logprob: -13.132247924804688
    9. '(((' → logprob: -13.257247924804688
    10. '```' → logprob: -14.007247924804688

Token 544: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.004297303501516581
    2. '((' → logprob: -5.879297256469727
    3. 'state' → logprob: -7.379297256469727
    4. '(next' → logprob: -7.504297256469727
    5. 'next' → logprob: -8.379297256469727
    6. 'State' → logprob: -11.004297256469727
    7. '_STATE' → logprob: -11.254297256469727
    8. '(' → logprob: -11.879297256469727
    9. ' ((' → logprob: -11.879297256469727
    10. ')' → logprob: -12.129297256469727

Token 545: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. '               ' → logprob: -10.625042915344238
    3. ')
' → logprob: -11.125042915344238
    4. '                   ' → logprob: -13.500042915344238
    5. '       ' → logprob: -14.125042915344238
    6. '           ' → logprob: -14.250042915344238
    7. '<|end|>' → logprob: -15.250042915344238
    8. '`)' → logprob: -15.500042915344238
    9. '')' → logprob: -16.000041961669922
    10. ' )' → logprob: -16.250041961669922

Token 546: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.28434354066848755
    2. '       ' → logprob: -1.7843434810638428
    3. '   ' → logprob: -2.5343434810638428
    4. '
' → logprob: -8.909343719482422
    5. '```' → logprob: -9.909343719482422
    6. 'if' → logprob: -10.159343719482422
    7. '        
' → logprob: -10.909343719482422
    8. ' print' → logprob: -11.159343719482422
    9. '    
' → logprob: -11.409343719482422
    10. '           ' → logprob: -13.034343719482422

Token 548: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1285732388496399
    2. '('' → logprob: -2.128573179244995
    3. '(' → logprob: -7.128573417663574
    4. '(can' → logprob: -7.253573417663574
    5. '(int' → logprob: -9.253573417663574
    6. '(True' → logprob: -11.003573417663574
    7. '"' → logprob: -11.628573417663574
    8. '(bool' → logprob: -12.503573417663574
    9. '()' → logprob: -12.628573417663574
    10. '(("' → logprob: -13.503573417663574

Token 549: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.7995255589485168
    2. 'Yes' → logprob: -1.174525499343872
    3. 'yes' → logprob: -2.049525499343872
    4. 'Y' → logprob: -2.424525499343872
    5. '"' → logprob: -4.799525737762451
    6. 'Possible' → logprob: -4.924525737762451
    7. 'possible' → logprob: -5.424525737762451
    8. '“Yes' → logprob: -7.549525737762451
    9. 'open' → logprob: -7.799525737762451
    10. 'OPEN' → logprob: -7.799525737762451

Token 550: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029770854860544205
    2. '")' → logprob: -3.529770851135254
    3. '")
' → logprob: -10.904770851135254
    4. '")
' → logprob: -14.029770851135254
    5. '```' → logprob: -14.529770851135254
    6. ')"' → logprob: -14.904770851135254
    7. ')' → logprob: -16.15477180480957
    8. '   ' → logprob: -16.90477180480957
    9. '\n' → logprob: -17.15477180480957
    10. 'if' → logprob: -17.15477180480957

Token 551: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01036812737584114
    2. ' if' → logprob: -4.635368347167969
    3. 'if' → logprob: -7.635368347167969
    4. '")' → logprob: -9.635368347167969
    5. '   ' → logprob: -10.260368347167969
    6. '       ' → logprob: -11.010368347167969
    7. '"' → logprob: -12.885368347167969
    8. ')")' → logprob: -13.260368347167969
    9. '()' → logprob: -13.385368347167969
    10. ',' → logprob: -13.510368347167969

Token 552: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.048587486147880554
    2. ' can' → logprob: -3.0485875606536865
    3. '	can' → logprob: -16.173587799072266
    4. '(can' → logprob: -16.798587799072266
    5. '_can' → logprob: -18.173587799072266
    6. ' ' → logprob: -19.923587799072266
    7. '   ' → logprob: -20.173587799072266
    8. '.can' → logprob: -20.548587799072266
    9. 'Can' → logprob: -22.048587799072266
    10. ' ' → logprob: -23.173587799072266

Token 553: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -2.963691804325208e-05
    2. 'open' → logprob: -10.500029563903809
    3. 'Open' → logprob: -13.500029563903809
    4. '\' → logprob: -14.750029563903809
    5. '_be' → logprob: -17.125030517578125
    6. '	open' → logprob: -17.125030517578125
    7. '_can' → logprob: -17.500030517578125
    8. '   ' → logprob: -17.500030517578125
    9. '_OPEN' → logprob: -17.750030517578125
    10. '(open' → logprob: -17.750030517578125

Token 554: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029750604182481766
    2. 'else' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.02975082397461
    4. '   ' → logprob: -17.52975082397461
    5. '	else' → logprob: -18.77975082397461
    6. '```' → logprob: -19.40475082397461
    7. '==' → logprob: -19.52975082397461
    8. ' ' → logprob: -19.65475082397461
    9. '        ' → logprob: -19.77975082397461
    10. '     ' → logprob: -19.77975082397461

Token 555: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00023977462842594832
    2. ' "' → logprob: -8.500239372253418
    3. '"No' → logprob: -10.625239372253418
    4. '("' → logprob: -11.625239372253418
    5. '   ' → logprob: -13.625239372253418
    6. ')' → logprob: -13.625239372253418
    7. ''' → logprob: -15.000239372253418
    8. '       ' → logprob: -15.250239372253418
    9. '
' → logprob: -17.250240325927734
    10. ' ' → logprob: -17.375240325927734

Token 556: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.002476016292348504
    2. '"No' → logprob: -6.002476215362549
    3. '"' → logprob: -15.25247573852539
    4. ' No' → logprob: -16.50247573852539
    5. 'NO' → logprob: -17.12747573852539
    6. '“No' → logprob: -18.00247573852539
    7. '   ' → logprob: -18.87747573852539
    8. 'no' → logprob: -19.37747573852539
    9. 'Impossible' → logprob: -19.75247573852539
    10. ''' → logprob: -20.12747573852539

Token 557: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007567389984615147
    2. ')")' → logprob: -7.500756740570068
    3. ')' → logprob: -8.50075626373291
    4. '")
' → logprob: -15.25075626373291
    5. '}")' → logprob: -16.125757217407227
    6. '”)' → logprob: -17.750757217407227
    7. ')"' → logprob: -17.875757217407227
    8. '")}' → logprob: -18.375757217407227
    9. ')")
' → logprob: -18.500757217407227
    10. '!")' → logprob: -18.625757217407227

Token 558: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3132631778717041
    2. '__' → logprob: -1.313263177871704
    3. 'name' → logprob: -14.313262939453125
    4. '___' → logprob: -14.938262939453125
    5. '_name' → logprob: -15.688262939453125
    6. '_' → logprob: -16.063262939453125
    7. ' ' → logprob: -16.438262939453125
    8. '____' → logprob: -17.688262939453125
    9. '/__' → logprob: -17.813262939453125
    10. ' _' → logprob: -18.313262939453125

Token 560: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4795494079589844
    2. ' ==' → logprob: -1.3545494079589844
    3. '==' → logprob: -2.1045494079589844
    4. '=="' → logprob: -7.854549407958984
    5. 'name' → logprob: -8.729549407958984
    6. 'if' → logprob: -8.729549407958984
    7. '```' → logprob: -9.479549407958984
    8. ' __' → logprob: -9.729549407958984
    9. '.__' → logprob: -9.979549407958984
    10. '__.__' → logprob: -11.104549407958984

Token 561: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002835780382156372
    2. '==' → logprob: -6.002835750579834
    3. '=="' → logprob: -8.502836227416992
    4. '__.__' → logprob: -9.752836227416992
    5. ' ==' → logprob: -10.127836227416992
    6. '=='' → logprob: -10.627836227416992
    7. '```' → logprob: -11.502836227416992
    8. '__('' → logprob: -11.877836227416992
    9. '___' → logprob: -12.377836227416992
    10. '____' → logprob: -12.752836227416992

Token 562: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14358603954315186
    2. '==' → logprob: -2.5185861587524414
    3. ' ==' → logprob: -3.2685861587524414
    4. '=="' → logprob: -4.268586158752441
    5. '=='' → logprob: -7.143586158752441
    6. '```' → logprob: -9.268586158752441
    7. '__.__' → logprob: -9.893586158752441
    8. '__":
' → logprob: -10.143586158752441
    9. '_' → logprob: -10.768586158752441
    10. '__["' → logprob: -11.143586158752441

Token 563: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014499234966933727
    2. ''' → logprob: -4.264499187469482
    3. '__' → logprob: -8.01449966430664
    4. ' "__' → logprob: -12.38949966430664
    5. ' '__' → logprob: -15.88949966430664
    6. '("__' → logprob: -16.01449966430664
    7. '   ' → logprob: -16.13949966430664
    8. '"name' → logprob: -16.63949966430664
    9. '"user' → logprob: -16.63949966430664
    10. '('__' → logprob: -17.01449966430664

Token 564: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.11175297200679779
    2. '__' → logprob: -2.361752986907959
    3. '"' → logprob: -4.486752986907959
    4. ''' → logprob: -8.4867525100708
    5. '__":
' → logprob: -11.7367525100708
    6. 'name' → logprob: -12.8617525100708
    7. '_main' → logprob: -13.7367525100708
    8. '=="' → logprob: -14.2367525100708
    9. ''m' → logprob: -14.3617525100708
    10. '__':
' → logprob: -14.4867525100708

Token 565: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.003828225424513221
    2. '__' → logprob: -5.753828048706055
    3. '__':
' → logprob: -7.378828048706055
    4. '():
' → logprob: -10.878828048706055
    5. '__.' → logprob: -13.128828048706055
    6. '__["' → logprob: -13.253828048706055
    7. '__()
' → logprob: -13.628828048706055
    8. '__.__' → logprob: -14.253828048706055
    9. '__:' → logprob: -14.503828048706055
    10. '()' → logprob: -16.128828048706055

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027796491980552673
    2. ' solve' → logprob: -4.027796268463135
    3. 'solve' → logprob: -4.652796268463135
    4. '.solve' → logprob: -10.527796745300293
    5. '```' → logprob: -10.777796745300293
    6. '    
' → logprob: -12.277796745300293
    7. '   ' → logprob: -12.777796745300293
    8. '	s' → logprob: -12.902796745300293
    9. '  ' → logprob: -12.902796745300293
    10. '<|end|>' → logprob: -13.402796745300293

Token 567: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -6.704273118884885e-07
    2. ' solve' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.125
    4. 'import' → logprob: -18.375
    5. '.solve' → logprob: -18.625
    6. 'resolve' → logprob: -20.75
    7. 'validate' → logprob: -23.75
    8. 'try' → logprob: -23.875
    9. 's' → logprob: -23.875
    10. '    
' → logprob: -24.125

Token 568: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 566
Tokens correctement prédits (1ère position, stricte): 275
Tokens correctement prédits (1ère position, avec adaptation): 297
Tokens correctement prédits (top 10): 484
Précision stricte (1ère position): 48.59%
Précision adaptée (1ère position): 52.47%
Précision (top 10): 85.51%
================================================================================
