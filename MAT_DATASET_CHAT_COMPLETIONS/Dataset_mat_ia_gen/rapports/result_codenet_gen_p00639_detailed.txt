================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys

def dot(u, v):
    # Produit scalaire de deux vecteurs 2D
    return u[0]*v[0] + u[1]*v[1]

def norm(v):
    # Norme euclidienne d'un vecteur 2D
    return math.sqrt(v[0]*v[0] + v[1]*v[1])

def reflect(v, n):
    # Réflexion du vecteur v par rapport à la normale n (v et n sont unitaires)
    # v' = v - 2*(v·n)*n
    vn = dot(v, n)
    return (v[0] - 2*vn*n[0], v[1] - 2*vn*n[1])

def solve(D, px, py, vx, vy):
    R = 1.0  # rayon du mur virtuel
    EPS = 1e-14  # epsilon petites erreurs flottantes

    pos = (px, py)
    vel = (vx, vy)

    dist_total = 0.0

    # On simule les déplacements par segment jusqu'à distance D
    # A chaque segment, on cherche l'intersection avec le cercle R=1
    # puis on calcule l'intersection avec l'origine
    # Si on touche l'origine on renvoie la distance
    # Si on dépasse D sans toucher, on renvoie impossible

    while dist_total <= D + EPS:
        # 1) On vérifie si on touche le centre (0,0) avant le mur (rayon 1)
        # La trajectoire : P(t) = pos + vel*t
        # -> distance du point à l'origine: ||pos + vel*t||=0 => chercher t
        # En fait on cherche s'il existe t>0 tel que P(t)=(0,0)
        # P(t)=(0,0) => pos + vel*t= (0,0) => t = -pos/vel (composantes)
        # mais on veut t unique, pos et vel sont 2D... sauf si vel nul? non

        # On cherche intersection paramétrique au point (0,0). Car la cible est un point,
        # on résout l'équation vectorielle pos + vel t=0 => on cherche un t ≥0 tel que les deux composantes nulles
        # ce n'est possible que si pos et vel sont colinéaires et de sens opposé.
        # On peut vérifier si le mouvement passe par l'origine en recherchant t:

        # pos + vel*t = (0,0) => deux équations:
        # px + vx * t =0
        # py + vy * t =0
        # Ces deux équations doivent être cohérentes pour un t unique ≥0.

        t1 = None
        if abs(vx) > EPS:
            t_x = -px / vx
        else:
            t_x = None
        if abs(vy) > EPS:
            t_y = -py / vy
        else:
            t_y = None

        t_hit = None
        if t_x is not None and t_y is not None:
            # les deux existent, vérifier s'ils sont approx égaux
            if abs(t_x - t_y) < 1e-14 and t_x >= -EPS:
                t_hit = t_x
        elif t_x is not None:
            # vy nul, alors py doit être nul aussi
            if abs(py) < 1e-14 and t_x >= -EPS:
                t_hit = t_x
        elif t_y is not None:
            # vx nul, alors px doit être nul aussi
            if abs(px) < 1e-14 and t_y >= -EPS:
                t_hit = t_y
        else:
            # vx et vy nuls, vitesse nulle donc pas de mouvement
            # si position différente de zéro, pas possible d'atteindre origine
            t_hit = None

        if t_hit is not None and t_hit > EPS:
            # La distance parcourue jusqu'au hit est |vel|*t_hit
            dist_to_hit = norm(vel)*t_hit
            if dist_total + dist_to_hit <= D + EPS:
                # on touche la cible avant l'épuisement de la portée
                return dist_total + dist_to_hit

        # 2) Sinon, chercher le temps t_intersect où la trajectoire touche le cercle de rayon R=1
        # pos=(px, py), vel=(vx, vy), R=1
        # ||pos + vel t||^2 = R^2
        # Equation quadratique:
        # (px + vx t)^2 + (py + vy t)^2 = 1^2
        # (vx^2 + vy^2) t^2 + 2(px vx + py vy) t + (px^2 + py^2 -1) = 0
        a = vel[0]*vel[0] + vel[1]*vel[1]
        b = 2*(pos[0]*vel[0] + pos[1]*vel[1])
        c = pos[0]*pos[0] + pos[1]*pos[1] - R*R

        discriminant = b*b - 4*a*c
        if discriminant < -EPS:
            # Pas d'intersection, trajectoire ne touche plus le cercle
            # On n'atteint donc pas la cible
            break
        discriminant = max(0.0, discriminant)

        sqrt_disc = math.sqrt(discriminant)

        t_candidates = []
        t_a = (-b - sqrt_disc) / (2*a)
        t_b = (-b + sqrt_disc) / (2*a)
        # On conserve t strictement positif, on cherche la plus petite positive
        for t_cand in [t_a, t_b]:
            if t_cand > EPS:
                t_candidates.append(t_cand)
        if not t_candidates:
            # Pas d'intersection future avec le cercle
            break
        t_wall = min(t_candidates)

        # 3) Vérifier que la distance parcourue sur ce segment ne dépasse pas D
        segment_dist = norm(vel)*t_wall
        if dist_total + segment_dist > D + EPS:
            # On dépasse la limite de distance sans toucher la cible
            break

        # 4) Avancer à la naissance collision avec le mur
        pos = (pos[0] + vel[0]*t_wall, pos[1] + vel[1]*t_wall)
        dist_total += segment_dist

        # 5) Calculer la normale au point d'impact sur le cercle (origine->pos)
        n = (pos[0]/R, pos[1]/R)  # vecteur unitaire normal extérieur

        # 6) Réfléchir la vitesse selon la normale
        v_len = norm(vel)
        v_normed = (vel[0]/v_len, vel[1]/v_len)
        v_reflected = reflect(v_normed, n)
        # Garder la même norme de vitesse
        vel = (v_reflected[0]*v_len, v_reflected[1]*v_len)

        # Petite protection anti-boucle infinie: si la vitesse est trop faible, on quitte
        if norm(vel) < 1e-12:
            break

        px, py = pos
        vx, vy = vel

    return None  # impossible de toucher

def main():
    input = sys.stdin.read().strip().split()
    idx = 0
    while True:
        if idx >= len(input):
            break
        D = float(input[idx])
        idx += 1
        if D == 0:
            break
        px = float(input[idx])
        py = float(input[idx+1])
        vx = float(input[idx+2])
        vy = float(input[idx+3])
        idx += 4

        res = solve(D, px, py, vx, vy)
        if res is None:
            print("impossible")
        else:
            print(f"{res:.8f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027101305313408375
    2. '<|end|>' → logprob: -6.627710342407227
    3. '```' → logprob: -7.877710342407227
    4. '\n' → logprob: -8.252710342407227
    5. '\' → logprob: -8.252710342407227
    6. 'import' → logprob: -8.752710342407227
    7. '<|end|>' → logprob: -9.752710342407227
    8. '.e' → logprob: -10.502710342407227
    9. '.pi' → logprob: -10.627710342407227
    10. '
' → logprob: -10.877710342407227

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4802471399307251
    2. ' sys' → logprob: -0.9802471399307251
    3. ' numpy' → logprob: -5.6052470207214355
    4. ' random' → logprob: -7.2302470207214355
    5. ' ' → logprob: -7.3552470207214355
    6. 'os' → logprob: -7.9802470207214355
    7. ' re' → logprob: -8.355247497558594
    8. 'sys' → logprob: -8.605247497558594
    9. ' statistics' → logprob: -9.105247497558594
    10. '_' → logprob: -9.605247497558594

Token 5: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5803091526031494
    2. '.' → logprob: -1.7053091526031494
    3. '\' → logprob: -1.9553091526031494
    4. '\n' → logprob: -3.2053091526031494
    5. 'import' → logprob: -3.9553091526031494
    6. '```' → logprob: -4.08030891418457
    7. '#' → logprob: -4.20530891418457
    8. '
' → logprob: -5.95530891418457
    9. '`' → logprob: -6.08030891418457
    10. 'print' → logprob: -6.20530891418457

Token 7: ' dot' (ID: 16579)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03880825266242027
    2. ' calculate' → logprob: -3.5388083457946777
    3. ' factorial' → logprob: -5.788808345794678
    4. ' space' → logprob: -6.788808345794678
    5. '_' → logprob: -6.913808345794678
    6. ' math' → logprob: -7.038808345794678
    7. ' sqrt' → logprob: -7.288808345794678
    8. ' add' → logprob: -7.788808345794678
    9. ' compute' → logprob: -7.913808345794678
    10. ' ' → logprob: -8.53880786895752

Token 8: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1467255800962448
    2. '_' → logprob: -2.396725654602051
    3. ' (' → logprob: -3.271725654602051
    4. '_product' → logprob: -5.021725654602051
    5. ' ' → logprob: -8.52172565460205
    6. ' product' → logprob: -9.14672565460205
    7. ',' → logprob: -9.52172565460205
    8. ')' → logprob: -9.52172565460205
    9. ':' → logprob: -10.02172565460205
    10. 'Product' → logprob: -10.27172565460205

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036352307070046663
    2. ',u' → logprob: -5.878635406494141
    3. ')' → logprob: -7.503635406494141
    4. ' ,' → logprob: -8.87863540649414
    5. '.' → logprob: -9.25363540649414
    6. ',)' → logprob: -10.87863540649414
    7. '[' → logprob: -12.50363540649414
    8. 'u' → logprob: -12.75363540649414
    9. '[u' → logprob: -13.37863540649414
    10. ' ' → logprob: -13.37863540649414

Token 10: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4740838408470154
    2. ' v' → logprob: -0.9740838408470154
    3. ' ' → logprob: -13.47408390045166
    4. ',' → logprob: -13.47408390045166
    5. 'u' → logprob: -13.59908390045166
    6. '	v' → logprob: -13.72408390045166
    7. ',v' → logprob: -14.22408390045166
    8. ' u' → logprob: -14.97408390045166
    9. '_v' → logprob: -15.47408390045166
    10. ' ,' → logprob: -15.59908390045166

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00864659808576107
    2. ')' → logprob: -4.758646488189697
    3. '):
' → logprob: -11.383646965026855
    4. ',' → logprob: -12.383646965026855
    5. ' ):' → logprob: -12.508646965026855
    6. ':' → logprob: -12.758646965026855
    7. '[' → logprob: -12.758646965026855
    8. '[]):' → logprob: -14.008646965026855
    9. '   ' → logprob: -14.133646965026855
    10. ')：' → logprob: -14.383646965026855

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08268871903419495
    2. ':' → logprob: -2.707688808441162
    3. ' :' → logprob: -5.707688808441162
    4. ' return' → logprob: -5.957688808441162
    5. '(' → logprob: -6.082688808441162
    6. '):' → logprob: -6.457688808441162
    7. ' ' → logprob: -6.957688808441162
    8. '    ' → logprob: -7.457688808441162
    9. ' ):' → logprob: -8.207688331604004
    10. 'return' → logprob: -8.832688331604004

Token 13: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02831367962062359
    2. 'return' → logprob: -4.028313636779785
    3. '   ' → logprob: -5.028313636779785
    4. ' u' → logprob: -6.403313636779785
    5. '    ' → logprob: -7.278313636779785
    6. ' ' → logprob: -7.528313636779785
    7. ' sum' → logprob: -8.153313636779785
    8. 'u' → logprob: -8.403313636779785
    9. 'sum' → logprob: -10.278313636779785
    10. 'r' → logprob: -10.278313636779785

Token 14: ' Produit' (ID: 199991)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24371367692947388
    2. ' return' → logprob: -1.993713617324829
    3. '   ' → logprob: -3.618713617324829
    4. ' u' → logprob: -3.743713617324829
    5. '  ' → logprob: -4.993713855743408
    6. '    ' → logprob: -4.993713855743408
    7. ' """' → logprob: -5.368713855743408
    8. 'return' → logprob: -5.493713855743408
    9. 'u' → logprob: -5.993713855743408
    10. ' r' → logprob: -7.243713855743408

Token 15: ' scala' (ID: 35513)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26226380467414856
    2. '  ' → logprob: -1.6372637748718262
    3. '   ' → logprob: -4.262263774871826
    4. ' inner' → logprob: -4.637263774871826
    5. ' vector' → logprob: -6.137263774871826
    6. ' de' → logprob: -6.512263774871826
    7. '    ' → logprob: -6.637263774871826
    8. 's' → logprob: -6.637263774871826
    9. '.' → logprob: -7.137263774871826
    10. ' dot' → logprob: -7.262263774871826

Token 16: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0025723290164023638
    2. 're' → logprob: -6.002572536468506
    3. 'ir' → logprob: -9.877572059631348
    4. 'r' → logprob: -10.877572059631348
    5. '```' → logprob: -12.002572059631348
    6. 'irement' → logprob: -12.627572059631348
    7. 'aire' → logprob: -13.002572059631348
    8. 'ires' → logprob: -13.252572059631348
    9. 'IRE' → logprob: -13.752572059631348
    10. '1' → logprob: -13.752572059631348

Token 17: ' de' (ID: 334)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3123469054698944
    2. '   ' → logprob: -1.8123469352722168
    3. '(' → logprob: -2.562346935272217
    4. ' (' → logprob: -4.687346935272217
    5. 'u' → logprob: -4.937346935272217
    6. ' ' → logprob: -6.187346935272217
    7. ' return' → logprob: -6.562346935272217
    8. ' =' → logprob: -6.687346935272217
    9. ')' → logprob: -6.687346935272217
    10. '=' → logprob: -6.937346935272217

Token 18: ' deux' (ID: 10301)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3418671190738678
    2. 'u' → logprob: -1.8418670892715454
    3. ' deux' → logprob: -2.216867208480835
    4. 'de' → logprob: -4.466866970062256
    5. ' ' → logprob: -4.841866970062256
    6. ' two' → logprob: -6.841866970062256
    7. ' vect' → logprob: -7.466866970062256
    8. ' les' → logprob: -8.591867446899414
    9. ' vectors' → logprob: -8.591867446899414
    10. '(u' → logprob: -9.091867446899414

Token 19: ' vect' (ID: 106052)
  Prédit: ' vect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vect' → logprob: -0.5273699760437012
    2. ' vectors' → logprob: -1.1523699760437012
    3. ' ' → logprob: -2.652369976043701
    4. ' listes' → logprob: -5.027369976043701
    5. 'vect' → logprob: -5.652369976043701
    6. ' list' → logprob: -5.777369976043701
    7. ' lists' → logprob: -6.027369976043701
    8. ' u' → logprob: -6.152369976043701
    9. 'vectors' → logprob: -6.402369976043701
    10. '   ' → logprob: -6.902369976043701

Token 20: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.0002583594177849591
    2. 'e' → logprob: -9.375258445739746
    3. 'eur' → logprob: -9.500258445739746
    4. 'eux' → logprob: -10.000258445739746
    5. 'eu' → logprob: -11.250258445739746
    6. '```' → logprob: -11.375258445739746
    7. 'ors' → logprob: -11.625258445739746
    8. '[' → logprob: -12.875258445739746
    9. 'ectors' → logprob: -13.125258445739746
    10. 'eus' → logprob: -13.500258445739746

Token 21: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15479454398155212
    2. '(u' → logprob: -2.404794454574585
    3. '(' → logprob: -4.029794692993164
    4. ' (' → logprob: -4.154794692993164
    5. 'u' → logprob: -5.404794692993164
    6. ' return' → logprob: -5.529794692993164
    7. '    ' → logprob: -6.029794692993164
    8. ':' → logprob: -6.404794692993164
    9. ' :' → logprob: -6.654794692993164
    10. 'return' → logprob: -6.654794692993164

Token 22: '2' (ID: 17)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8574967384338379
    2. '(u' → logprob: -1.232496738433838
    3. '   ' → logprob: -2.232496738433838
    4. ' u' → logprob: -3.232496738433838
    5. ' ' → logprob: -3.732496738433838
    6. ')' → logprob: -3.732496738433838
    7. ' (' → logprob: -4.107496738433838
    8. 'def' → logprob: -4.107496738433838
    9. ':' → logprob: -4.107496738433838
    10. ',' → logprob: -4.982496738433838

Token 23: 'D' (ID: 35)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5751639008522034
    2. ' ' → logprob: -1.2001638412475586
    3. ' )' → logprob: -3.0751638412475586
    4. '-' → logprob: -3.8251638412475586
    5. 'D' → logprob: -4.700163841247559
    6. '  ' → logprob: -4.950163841247559
    7. '[' → logprob: -5.075163841247559
    8. ',' → logprob: -5.200163841247559
    9. ']' → logprob: -5.325163841247559
    10. 'd' → logprob: -5.325163841247559

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00476214149966836
    2. ':' → logprob: -5.629762172698975
    3. ' :' → logprob: -7.629762172698975
    4. 'return' → logprob: -8.504761695861816
    5. ' return' → logprob: -8.629761695861816
    6. '    ' → logprob: -9.129761695861816
    7. '    
' → logprob: -10.004761695861816
    8. '  ' → logprob: -10.754761695861816
    9. '):' → logprob: -10.754761695861816
    10. ')' → logprob: -11.129761695861816

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038289371877908707
    2. ':' → logprob: -6.128829002380371
    3. ' :' → logprob: -7.878829002380371
    4. 'u' → logprob: -8.378829002380371
    5. '    ' → logprob: -8.378829002380371
    6. '    
' → logprob: -8.628829002380371
    7. ' return' → logprob: -9.253829002380371
    8. ' ' → logprob: -9.378829002380371
    9. ',' → logprob: -9.753829002380371
    10. ')' → logprob: -9.753829002380371

Token 26: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004991574212908745
    2. 'return' (adapté à ' return') → logprob: -6.00499153137207
    3. ' return' → logprob: -6.00499153137207
    4. '    ' → logprob: -10.12999153137207
    5. ')' → logprob: -13.25499153137207
    6. '  ' → logprob: -13.50499153137207
    7. ' ' → logprob: -14.37999153137207
    8. ' )' → logprob: -14.50499153137207
    9. '	return' → logprob: -14.87999153137207
    10. '    
' → logprob: -15.00499153137207

Token 27: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.0639718547463417
    2. 'u' → logprob: -2.813971757888794
    3. ' sum' → logprob: -6.813971996307373
    4. ' math' → logprob: -7.688971996307373
    5. ' ' → logprob: -8.563971519470215
    6. 'sum' → logprob: -8.813971519470215
    7. 'math' → logprob: -10.188971519470215
    8. '(u' → logprob: -10.563971519470215
    9. ' (' → logprob: -10.938971519470215
    10. '  ' → logprob: -11.813971519470215

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -14.500001907348633
    3. '.' → logprob: -14.875001907348633
    4. ''' → logprob: -14.875001907348633
    5. '*' → logprob: -16.000001907348633
    6. ''[' → logprob: -17.250001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '0' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.750001907348633
    10. '['' → logprob: -17.875001907348633

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '1' → logprob: -20.125
    4. ']' → logprob: -20.375
    5. '۰' → logprob: -22.0
    6. '   ' → logprob: -22.75
    7. '０' → logprob: -23.3125
    8. '[' → logprob: -23.4375
    9. '```' → logprob: -23.5
    10. '٠' → logprob: -23.625

Token 30: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.42348891496658325
    2. '*' → logprob: -1.5484888553619385
    3. ']' → logprob: -2.0484888553619385
    4. ']*' → logprob: -6.298489093780518
    5. ' ]' → logprob: -6.423489093780518
    6. '*u' → logprob: -9.04848861694336
    7. ')' → logprob: -9.42348861694336
    8. ' ' → logprob: -9.54848861694336
    9. '*v' → logprob: -12.54848861694336
    10. ')*' → logprob: -13.54848861694336

Token 31: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. '	v' → logprob: -18.8750057220459
    4. ')v' → logprob: -19.6250057220459
    5. ' ' → logprob: -21.5000057220459
    6. 'u' → logprob: -22.8750057220459
    7. '_v' → logprob: -23.0000057220459
    8. 'vj' → logprob: -23.5000057220459
    9. '*v' → logprob: -23.6250057220459
    10. '  ' → logprob: -23.8750057220459

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016313884407281876
    2. '0' → logprob: -4.1413140296936035
    3. '1' → logprob: -8.766313552856445
    4. ' ' → logprob: -9.641313552856445
    5. ' [' → logprob: -10.266313552856445
    6. '```' → logprob: -11.516313552856445
    7. ']' → logprob: -11.766313552856445
    8. '][' → logprob: -13.516313552856445
    9. '[
' → logprob: -13.766313552856445
    10. '.' → logprob: -14.141313552856445

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. ']' → logprob: -19.75
    5. '[' → logprob: -21.625
    6. '۰' → logprob: -21.625
    7. '```' → logprob: -21.75
    8. '   ' → logprob: -22.125
    9. '])' → logprob: -22.375
    10. '  ' → logprob: -22.75

Token 34: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07010282576084137
    2. '+' → logprob: -2.6951029300689697
    3. ')' → logprob: -9.69510269165039
    4. ' ' → logprob: -10.19510269165039
    5. '<|end|>' → logprob: -10.19510269165039
    6. ' )' → logprob: -11.57010269165039
    7. ' ]' → logprob: -12.44510269165039
    8. ']' → logprob: -12.82010269165039
    9. '*' → logprob: -12.94510269165039
    10. ' +
' → logprob: -13.19510269165039

Token 35: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197306513786316
    2. '+' → logprob: -2.8119730949401855
    3. ' ' → logprob: -13.061972618103027
    4. ')' → logprob: -14.311972618103027
    5. ' +
' → logprob: -14.436972618103027
    6. '[' → logprob: -14.811972618103027
    7. '   ' → logprob: -14.936972618103027
    8. '  ' → logprob: -15.561972618103027
    9. 'u' → logprob: -15.811972618103027
    10. ' ' → logprob: -15.936972618103027

Token 36: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.04858941584825516
    2. 'u' → logprob: -3.0485894680023193
    3. ' ' → logprob: -13.548589706420898
    4. '	u' → logprob: -15.173589706420898
    5. ' ' → logprob: -15.548589706420898
    6. 'v' → logprob: -16.2985897064209
    7. '<|end|>' → logprob: -16.7985897064209
    8. '(u' → logprob: -18.0485897064209
    9. ' v' → logprob: -18.4235897064209
    10. ' ‌' → logprob: -18.5485897064209

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.25
    3. '[
' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '1' → logprob: -17.5
    6. '][' → logprob: -17.75
    7. ' ' → logprob: -18.75
    8. '0' → logprob: -18.75
    9. '.' → logprob: -19.0
    10. '   ' → logprob: -19.25

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00219273311085999
    2. '[' → logprob: -6.127192497253418
    3. '0' → logprob: -12.377192497253418
    4. ' ' → logprob: -12.752192497253418
    5. ']' → logprob: -15.627192497253418
    6. '```' → logprob: -16.127193450927734
    7. ' [' → logprob: -16.752193450927734
    8. '   ' → logprob: -17.377193450927734
    9. '][' → logprob: -17.502193450927734
    10. '-' → logprob: -18.002193450927734

Token 39: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -2.7252845029579476e-05
    2. ']' → logprob: -10.750027656555176
    3. '*' → logprob: -12.125027656555176
    4. '*v' → logprob: -15.750027656555176
    5. ' ]' → logprob: -16.75002670288086
    6. '[' → logprob: -17.37502670288086
    7. ')*' → logprob: -18.75002670288086
    8. '"*' → logprob: -19.00002670288086
    9. '][' → logprob: -19.25002670288086
    10. ']*(' → logprob: -19.62502670288086

Token 40: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -16.875
    3. '	v' → logprob: -22.125
    4. ')v' → logprob: -22.25
    5. 'u' → logprob: -23.125
    6. '*v' → logprob: -24.5
    7. 'vq' → logprob: -24.5
    8. 'vj' → logprob: -25.125
    9. '$v' → logprob: -25.5
    10. '[v' → logprob: -25.75

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.75
    3. '[
' → logprob: -16.375
    4. '][' → logprob: -16.625
    5. ' [' → logprob: -17.25
    6. '```' → logprob: -17.5
    7. ']' → logprob: -18.75
    8. '0' → logprob: -19.125
    9. '\[' → logprob: -19.25
    10. ')[' → logprob: -19.75

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ']' → logprob: -18.625
    3. '0' → logprob: -19.25
    4. ' ' → logprob: -19.875
    5. '])' → logprob: -21.5
    6. '[' → logprob: -21.5
    7. '۱' → logprob: -22.125
    8. '１' → logprob: -22.25
    9. '```' → logprob: -22.75
    10. '' → logprob: -23.625

Token 43: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008488174062222242
    2. ')' → logprob: -7.250848770141602
    3. '}' → logprob: -10.000848770141602
    4. '])' → logprob: -10.625848770141602
    5. ' ]' → logprob: -10.875848770141602
    6. '[' → logprob: -10.875848770141602
    7. ']*' → logprob: -11.125848770141602
    8. '']' → logprob: -11.625848770141602
    9. ']}' → logprob: -12.875848770141602
    10. '*' → logprob: -13.500848770141602

Token 44: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21106785535812378
    2. 'def' → logprob: -1.7110679149627686
    3. '

' → logprob: -5.3360676765441895
    4. '```' → logprob: -5.7110676765441895
    5. '\' → logprob: -8.086068153381348
    6. ' 
' → logprob: -8.586068153381348
    7. '<|end|>' → logprob: -8.586068153381348
    8. 'newline' → logprob: -8.961068153381348
    9. '\n' → logprob: -9.086068153381348
    10. '  
' → logprob: -9.336068153381348

Token 45: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.6922925710678101
    2. ' cross' → logprob: -1.31729257106781
    3. ' length' → logprob: -2.4422926902770996
    4. ' angle' → logprob: -3.1922926902770996
    5. ' magnitude' → logprob: -3.4422926902770996
    6. ' vector' → logprob: -3.4422926902770996
    7. ' distance' → logprob: -4.1922926902771
    8. ' normalize' → logprob: -5.1922926902771
    9. 'norm' → logprob: -5.4422926902771
    10. ' perpendicular' → logprob: -5.5672926902771

Token 46: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3872716426849365
    2. '(u' → logprob: -1.1372716426849365
    3. '(v' → logprob: -8.887271881103516
    4. '(user' → logprob: -10.262271881103516
    5. '_' → logprob: -10.512271881103516
    6. '(x' → logprob: -10.637271881103516
    7. '_squared' → logprob: -10.637271881103516
    8. 'u' → logprob: -11.387271881103516
    9. '(s' → logprob: -11.512271881103516
    10. '()' → logprob: -11.762271881103516

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023464540019631386
    2. ')' → logprob: -3.7734644412994385
    3. '):
' → logprob: -8.52346420288086
    4. '[' → logprob: -12.02346420288086
    5. ' ):' → logprob: -12.89846420288086
    6. '(v' → logprob: -13.02346420288086
    7. ')v' → logprob: -13.02346420288086
    8. '[]):' → logprob: -13.64846420288086
    9. '[v' → logprob: -13.89846420288086
    10. '):

' → logprob: -13.89846420288086

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06374180316925049
    2. ' return' → logprob: -3.813741683959961
    3. '(' → logprob: -4.063741683959961
    4. '(v' → logprob: -4.313741683959961
    5. 'return' → logprob: -5.438741683959961
    6. ' v' → logprob: -7.188741683959961
    7. '    ' → logprob: -7.188741683959961
    8. 'v' → logprob: -7.313741683959961
    9. ' (' → logprob: -7.313741683959961
    10. ' math' → logprob: -7.688741683959961

Token 49: ' #' (ID: 1069)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04664096608757973
    2. ' return' → logprob: -3.4216408729553223
    3. 'math' → logprob: -5.171640872955322
    4. '   ' → logprob: -6.046640872955322
    5. '(math' → logprob: -6.296640872955322
    6. ' (' → logprob: -6.296640872955322
    7. 'return' → logprob: -7.421640872955322
    8. '(' → logprob: -8.17164134979248
    9. ' ' → logprob: -8.54664134979248
    10. ' v' → logprob: -10.29664134979248

Token 50: ' Norm' (ID: 25970)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1837495118379593
    2. 'math' → logprob: -1.9337495565414429
    3. 'return' → logprob: -5.058749675750732
    4. '(math' → logprob: -5.058749675750732
    5. ' return' → logprob: -5.183749675750732
    6. 'import' → logprob: -5.558749675750732
    7. ' (' → logprob: -7.558749675750732
    8. '(' → logprob: -8.058749198913574
    9. ' import' → logprob: -8.808749198913574
    10. 'v' → logprob: -10.933749198913574

Token 51: 'e' (ID: 68)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5271466374397278
    2. '(v' → logprob: -0.9021466374397278
    3. 'e' → logprob: -6.527146816253662
    4. '   ' → logprob: -7.277146816253662
    5. 'def' → logprob: -7.652146816253662
    6. ' (' → logprob: -8.277146339416504
    7. ' ' → logprob: -8.527146339416504
    8. ')' → logprob: -8.777146339416504
    9. ' =' → logprob: -9.027146339416504
    10. '=' → logprob: -9.527146339416504

Token 52: ' eu' (ID: 5658)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.049352217465639114
    2. '(' → logprob: -3.0493521690368652
    3. ' (' → logprob: -7.299352169036865
    4. ' ' → logprob: -10.799352645874023
    5. '(vector' → logprob: -11.174352645874023
    6. 'def' → logprob: -11.549352645874023
    7. '(s' → logprob: -12.174352645874023
    8. '(vec' → logprob: -12.299352645874023
    9. '(
' → logprob: -12.424352645874023
    10. '  ' → logprob: -12.549352645874023

Token 53: 'clid' (ID: 156121)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.7867079377174377
    2. 'clidean' → logprob: -1.036707878112793
    3. 'clid' → logprob: -1.661707878112793
    4. 'c' → logprob: -9.786707878112793
    5. 'clé' → logprob: -9.786707878112793
    6. '```' → logprob: -10.161707878112793
    7. 'v' → logprob: -11.286707878112793
    8. 'cli' → logprob: -11.286707878112793
    9. 'q' → logprob: -11.286707878112793
    10. '2' → logprob: -12.036707878112793

Token 54: 'ienne' (ID: 18387)
  Prédit: 'ienne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.7162690758705139
    2. 'ide' → logprob: -1.2162690162658691
    3. 'e' → logprob: -3.341269016265869
    4. 'ique' → logprob: -3.466269016265869
    5. 'enne' → logprob: -3.591269016265869
    6. 'en' → logprob: -3.841269016265869
    7. 'v' → logprob: -4.091269016265869
    8. 'ene' → logprob: -4.341269016265869
    9. '2' → logprob: -4.716269016265869
    10. 'é' → logprob: -4.841269016265869

Token 55: ' d' (ID: 272)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.006046350579708815
    2. '(' → logprob: -5.256046295166016
    3. ' (' → logprob: -7.256046295166016
    4. '   ' → logprob: -9.881046295166016
    5. ' return' → logprob: -11.131046295166016
    6. 'def' → logprob: -11.506046295166016
    7. '```' → logprob: -12.131046295166016
    8. ' v' → logprob: -12.381046295166016
    9. 'v' → logprob: -12.381046295166016
    10. ' ' → logprob: -12.756046295166016

Token 56: ''un' (ID: 9788)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7242957949638367
    2. ' v' → logprob: -1.2242958545684814
    3. '(v' → logprob: -2.2242958545684814
    4. 'v' → logprob: -3.0992958545684814
    5. 'u' → logprob: -3.8492958545684814
    6. ''un' → logprob: -3.8492958545684814
    7. 'e' → logprob: -4.474295616149902
    8. '’un' → logprob: -5.349295616149902
    9. ' vector' → logprob: -6.224295616149902
    10. 'a' → logprob: -6.224295616149902

Token 57: ' vect' (ID: 106052)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12180308997631073
    2. 'v' → logprob: -2.871803045272827
    3. ' vect' → logprob: -2.996803045272827
    4. ' vector' → logprob: -4.871803283691406
    5. 'vector' → logprob: -8.746803283691406
    6. 'vect' → logprob: -8.996803283691406
    7. ' ' → logprob: -10.246803283691406
    8. ' vetor' → logprob: -10.746803283691406
    9. '(v' → logprob: -10.871803283691406
    10. ' vec' → logprob: -11.121803283691406

Token 58: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.021099045872688293
    2. 'ex' → logprob: -4.771099090576172
    3. 'ector' → logprob: -5.521099090576172
    4. 'ect' → logprob: -5.771099090576172
    5. 'or' → logprob: -6.146099090576172
    6. 'e' → logprob: -6.646099090576172
    7. '[' → logprob: -7.646099090576172
    8. 'er' → logprob: -7.896099090576172
    9. 'ec' → logprob: -7.896099090576172
    10. '```' → logprob: -8.896099090576172

Token 59: ' ' (ID: 220)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0336519218981266
    2. 'v' → logprob: -4.408651828765869
    3. '   ' → logprob: -4.908651828765869
    4. ' (' → logprob: -5.158651828765869
    5. ' v' → logprob: -5.658651828765869
    6. '(' → logprob: -5.783651828765869
    7. ' return' → logprob: -7.158651828765869
    8. '```' → logprob: -8.658652305603027
    9. 'return' → logprob: -9.533652305603027
    10. 'def' → logprob: -9.658652305603027

Token 60: '2' (ID: 17)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014464221894741058
    2. '(v' → logprob: -4.264464378356934
    3. ' v' → logprob: -8.764464378356934
    4. '(' → logprob: -9.514464378356934
    5. '(
' → logprob: -10.389464378356934
    6. '[' → logprob: -10.889464378356934
    7. ' (' → logprob: -11.514464378356934
    8. '   ' → logprob: -12.764464378356934
    9. '	v' → logprob: -13.639464378356934
    10. '```' → logprob: -13.639464378356934

Token 61: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.030552048236131668
    2. '[' → logprob: -3.5305521488189697
    3. '[
' → logprob: -8.03055191040039
    4. ')' → logprob: -8.65555191040039
    5. '```' → logprob: -9.40555191040039
    6. '[]' → logprob: -10.28055191040039
    7. ']' → logprob: -10.28055191040039
    8. 'v' → logprob: -10.53055191040039
    9. 'd' → logprob: -10.65555191040039
    10. '0' → logprob: -11.03055191040039

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030826441943645477
    2. ' return' → logprob: -6.003082752227783
    3. 'return' → logprob: -7.753082752227783
    4. '(v' → logprob: -10.128082275390625
    5. '(' → logprob: -10.378082275390625
    6. '```' → logprob: -10.628082275390625
    7. 'def' → logprob: -10.753082275390625
    8. 'import' → logprob: -10.878082275390625
    9. ' v' → logprob: -11.753082275390625
    10. 'v' → logprob: -12.003082275390625

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12569759786128998
    2. ' return' → logprob: -2.625697612762451
    3. 'return' → logprob: -3.875697612762451
    4. ' math' → logprob: -4.000697612762451
    5. 'import' → logprob: -5.625697612762451
    6. '(math' → logprob: -7.000697612762451
    7. 'math' → logprob: -7.250697612762451
    8. ' (' → logprob: -7.875697612762451
    9. '(' → logprob: -8.000697135925293
    10. ' import' → logprob: -8.375697135925293

Token 64: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4460262656211853
    2. 'return' (adapté à ' return') → logprob: -1.44602632522583
    3. ' math' → logprob: -2.44602632522583
    4. ' return' → logprob: -3.69602632522583
    5. '(math' → logprob: -4.57102632522583
    6. 'import' → logprob: -6.94602632522583
    7. '(' → logprob: -7.32102632522583
    8. '   ' → logprob: -7.94602632522583
    9. 'v' → logprob: -8.071025848388672
    10. '(v' → logprob: -9.571025848388672

Token 65: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.01639115996658802
    2. '(math' → logprob: -4.641391277313232
    3. 'math' → logprob: -5.266391277313232
    4. ' (' → logprob: -6.641391277313232
    5. '(' → logprob: -8.891390800476074
    6. ' ' → logprob: -12.891390800476074
    7. ' ' → logprob: -12.891390800476074
    8. 'm' → logprob: -13.516390800476074
    9. '(m' → logprob: -14.266390800476074
    10. ' m' → logprob: -14.766390800476074

Token 66: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0620955228805542
    2. '.' → logprob: -2.8120956420898438
    3. '.s' → logprob: -9.687095642089844
    4. '.h' → logprob: -9.937095642089844
    5. '.Sqrt' → logprob: -11.062095642089844
    6. '.norm' → logprob: -14.937095642089844
    7. '.atan' → logprob: -15.437095642089844
    8. '.dist' → logprob: -15.437095642089844
    9. '.pow' → logprob: -15.562095642089844
    10. ' .' → logprob: -15.687095642089844

Token 67: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5877643823623657
    2. '(v' → logprob: -0.8377643823623657
    3. '((' → logprob: -4.462764263153076
    4. '(u' → logprob: -8.962764739990234
    5. '(
' → logprob: -10.712764739990234
    6. '(sum' → logprob: -10.962764739990234
    7. '(s' → logprob: -11.212764739990234
    8. ' (' → logprob: -11.712764739990234
    9. '(

' → logprob: -11.837764739990234
    10. '(x' → logprob: -11.962764739990234

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.25
    3. '\[' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. '0' → logprob: -17.375
    6. '[
' → logprob: -17.875
    7. '   ' → logprob: -18.625
    8. '
' → logprob: -18.875
    9. ')[' → logprob: -19.25
    10. '(' → logprob: -19.375

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. '[' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.500014305114746
    4. '   ' → logprob: -17.37501335144043
    5. '1' → logprob: -17.50001335144043
    6. '```' → logprob: -17.62501335144043
    7. '۰' → logprob: -17.75001335144043
    8. ']' → logprob: -17.75001335144043
    9. '][' → logprob: -18.37501335144043
    10. '０' → logprob: -19.25001335144043

Token 70: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033094123005867004
    2. '**' → logprob: -3.5330941677093506
    3. ']*' → logprob: -5.7830939292907715
    4. ' ]' → logprob: -8.78309440612793
    5. '*' → logprob: -9.65809440612793
    6. '*v' → logprob: -10.78309440612793
    7. '[' → logprob: -11.90809440612793
    8. '']' → logprob: -12.03309440612793
    9. 'v' → logprob: -12.90809440612793
    10. '```' → logprob: -13.15809440612793

Token 71: 'v' (ID: 85)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.723973582556937e-05
    2. '][' → logprob: -12.000017166137695
    3. '0' → logprob: -12.750017166137695
    4. '2' → logprob: -12.875017166137695
    5. ']' → logprob: -13.000017166137695
    6. '1' → logprob: -13.625017166137695
    7. '[
' → logprob: -13.875017166137695
    8. '```' → logprob: -14.625017166137695
    9. '   ' → logprob: -16.125017166137695
    10. ' [' → logprob: -16.250017166137695

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '۰' → logprob: -15.625000953674316
    3. ' ' → logprob: -16.0
    4. '1' → logprob: -16.0
    5. '[' → logprob: -17.75
    6. '０' → logprob: -18.25
    7. '   ' → logprob: -18.5
    8. '01' → logprob: -18.8125
    9. ']' → logprob: -18.875
    10. '০' → logprob: -18.875

Token 74: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9172348380088806
    2. ']' → logprob: -1.1672348976135254
    3. '+' → logprob: -1.9172348976135254
    4. ')' → logprob: -2.0422348976135254
    5. '])' → logprob: -4.917234897613525
    6. ']+' → logprob: -6.042234897613525
    7. ' ]' → logprob: -6.542234897613525
    8. ' )' → logprob: -7.292234897613525
    9. ')+' → logprob: -9.042234420776367
    10. ' ])' → logprob: -9.042234420776367

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016042228788137436
    2. '+' → logprob: -4.141042232513428
    3. ' ' → logprob: -12.26604175567627
    4. ')' → logprob: -13.14104175567627
    5. ' +
' → logprob: -14.76604175567627
    6. ' )' → logprob: -15.26604175567627
    7. ' plus' → logprob: -16.016042709350586
    8. '[' → logprob: -16.516042709350586
    9. '   ' → logprob: -16.516042709350586
    10. ' ' → logprob: -16.766042709350586

Token 76: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.10020752996206284
    2. 'v' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.600207328796387
    4. ' ' → logprob: -15.225207328796387
    5. '	v' → logprob: -15.850207328796387
    6. ')v' → logprob: -17.850208282470703
    7. '_v' → logprob: -18.975208282470703
    8. '```' → logprob: -19.600208282470703
    9. '2' → logprob: -19.850208282470703
    10. '(v' → logprob: -20.100208282470703

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '[
' → logprob: -14.875000953674316
    3. '1' → logprob: -16.0
    4. ' [' → logprob: -16.5
    5. '```' → logprob: -16.625
    6. '][' → logprob: -17.125
    7. '
' → logprob: -18.375
    8. '\[' → logprob: -18.75
    9. 'v' → logprob: -18.875
    10. '}[' → logprob: -19.25

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. '[' → logprob: -10.375031471252441
    3. ' ' → logprob: -16.750032424926758
    4. '```' → logprob: -17.125032424926758
    5. '   ' → logprob: -17.750032424926758
    6. ']' → logprob: -18.000032424926758
    7. '
' → logprob: -18.250032424926758
    8. '{' → logprob: -19.062532424926758
    9. '][' → logprob: -19.562532424926758
    10. ' [' → logprob: -19.625032424926758

Token 79: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.010979432612657547
    2. ']' → logprob: -4.635979652404785
    3. '][' → logprob: -7.135979652404785
    4. '[' → logprob: -7.885979652404785
    5. '*' → logprob: -10.010979652404785
    6. ' ]' → logprob: -12.885979652404785
    7. ']*)' → logprob: -14.010979652404785
    8. '])*' → logprob: -14.885979652404785
    9. '1' → logprob: -15.385979652404785
    10. '```' → logprob: -15.385979652404785

Token 80: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005597044946625829
    2. ' v' → logprob: -7.5005598068237305
    3. '2' → logprob: -12.75055980682373
    4. '	v' → logprob: -13.12555980682373
    5. ')v' → logprob: -13.87555980682373
    6. '1' → logprob: -14.37555980682373
    7. ' ' → logprob: -15.37555980682373
    8. ')' → logprob: -17.000558853149414
    9. '```' → logprob: -17.500558853149414
    10. '*v' → logprob: -17.500558853149414

Token 81: '[' (ID: 58)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49243658781051636
    2. '[' → logprob: -0.9924365878105164
    3. '])' → logprob: -4.367436408996582
    4. '1' → logprob: -5.492436408996582
    5. ')' → logprob: -6.742436408996582
    6. '][' → logprob: -9.367436408996582
    7. ']])' → logprob: -10.992436408996582
    8. ' ' → logprob: -11.117436408996582
    9. ']))' → logprob: -11.117436408996582
    10. '**' → logprob: -11.242436408996582

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '])' → logprob: -13.875000953674316
    3. '0' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.250001907348633
    5. ']' → logprob: -16.750001907348633
    6. '```' → logprob: -17.250001907348633
    7. '-' → logprob: -18.375001907348633
    8. '' → logprob: -19.000001907348633
    9. '])*' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.500001907348633

Token 83: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028040475444868207
    2. '])' → logprob: -8.625280380249023
    3. ']' → logprob: -9.250280380249023
    4. '))' → logprob: -13.375280380249023
    5. ')])' → logprob: -13.375280380249023
    6. '）' → logprob: -14.250280380249023
    7. ')]' → logprob: -15.500280380249023
    8. '})' → logprob: -15.625280380249023
    9. ' )' → logprob: -15.750280380249023
    10. '}' → logprob: -15.875280380249023

Token 84: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1256156861782074
    2. 'def' → logprob: -2.5006155967712402
    3. '

' → logprob: -3.3756155967712402
    4. '\' → logprob: -7.00061559677124
    5. '```' → logprob: -7.87561559677124
    6. '\n' → logprob: -8.750616073608398
    7. 'd' → logprob: -8.875616073608398
    8. '
' → logprob: -9.000616073608398
    9. '' → logprob: -10.750616073608398
    10. ' def' → logprob: -11.500616073608398

Token 85: ' reflect' (ID: 12140)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.14327724277973175
    2. ' angle' → logprob: -3.268277168273926
    3. ' a' → logprob: -4.268277168273926
    4. ' ' → logprob: -4.393277168273926
    5. ' distance' → logprob: -4.643277168273926
    6. ' vector' → logprob: -4.768277168273926
    7. '_' → logprob: -4.893277168273926
    8. ' line' → logprob: -4.893277168273926
    9. ' ' → logprob: -5.768277168273926
    10. ' closest' → logprob: -6.143277168273926

Token 86: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07908046990633011
    2. '_' → logprob: -2.579080581665039
    3. '_(' → logprob: -9.454080581665039
    4. '_space' → logprob: -10.454080581665039
    5. ' (' → logprob: -10.829080581665039
    6. 's' → logprob: -11.204080581665039
    7. ' ' → logprob: -12.204080581665039
    8. '_^(' → logprob: -12.329080581665039
    9. '(_)' → logprob: -12.704080581665039
    10. '_a' → logprob: -12.829080581665039

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013274075172375888
    2. ' ,' → logprob: -9.50013256072998
    3. ',v' → logprob: -9.87513256072998
    4. ')' → logprob: -13.12513256072998
    5. ',
' → logprob: -13.50013256072998
    6. ',u' → logprob: -14.37513256072998
    7. '‌,' → logprob: -15.12513256072998
    8. '_,' → logprob: -15.37513256072998
    9. '   ' → logprob: -15.37513256072998
    10. ',

' → logprob: -15.50013256072998

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4373849034309387
    2. ' n' → logprob: -1.062384843826294
    3. 'u' → logprob: -5.062385082244873
    4. ' u' → logprob: -6.437385082244873
    5. 'w' → logprob: -8.812384605407715
    6. ' ' → logprob: -8.812384605407715
    7. ' l' → logprob: -9.312384605407715
    8. 'l' → logprob: -9.437384605407715
    9. ' w' → logprob: -9.437384605407715
    10. ' normal' → logprob: -9.812384605407715

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018208589404821396
    2. ')' → logprob: -4.0182085037231445
    3. '):
' → logprob: -10.518208503723145
    4. ' ):' → logprob: -10.768208503723145
    5. ':' → logprob: -12.143208503723145
    6. ',' → logprob: -13.768208503723145
    7. ' ' → logprob: -13.893208503723145
    8. ')：' → logprob: -14.143208503723145
    9. '(' → logprob: -14.518208503723145
    10. ' )' → logprob: -15.018208503723145

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32730749249458313
    2. ':' → logprob: -1.3273074626922607
    3. ' :' → logprob: -5.07730770111084
    4. ' ' → logprob: -5.57730770111084
    5. '):' → logprob: -6.70230770111084
    6. ')' → logprob: -7.45230770111084
    7. '#' → logprob: -7.57730770111084
    8. '(' → logprob: -8.20230770111084
    9. '<|end|>' → logprob: -8.45230770111084
    10. '    ' → logprob: -8.57730770111084

Token 91: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013136344961822033
    2. '   ' → logprob: -4.888136386871338
    3. '4' → logprob: -7.138136386871338
    4. ' return' → logprob: -7.138136386871338
    5. ' "' → logprob: -7.513136386871338
    6. '    ' → logprob: -7.638136386871338
    7. '2' → logprob: -7.763136386871338
    8. ' v' → logprob: -8.01313591003418
    9. ''' → logprob: -8.13813591003418
    10. '  ' → logprob: -8.38813591003418

Token 92: ' Ré' (ID: 27181)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8443918824195862
    2. '2' → logprob: -1.4693918228149414
    3. '   ' → logprob: -1.7193918228149414
    4. 'd' → logprob: -3.9693918228149414
    5. 'u' → logprob: -3.9693918228149414
    6. ' """' → logprob: -4.094391822814941
    7. ' r' → logprob: -4.344391822814941
    8. '4' → logprob: -4.469391822814941
    9. ' u' → logprob: -4.594391822814941
    10. 'r' → logprob: -4.594391822814941

Token 93: 'flex' (ID: 15843)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008758628740906715
    2. 't' → logprob: -4.758758544921875
    3. 'fl' → logprob: -10.008758544921875
    4. ' ' → logprob: -10.258758544921875
    5. 'p' → logprob: -11.383758544921875
    6. '   ' → logprob: -12.133758544921875
    7. ' `' → logprob: -12.383758544921875
    8. '  ' → logprob: -12.633758544921875
    9. 'c' → logprob: -12.633758544921875
    10. 'v' → logprob: -12.758758544921875

Token 94: 'ion' (ID: 294)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5418953895568848
    2. 'ion' → logprob: -1.4168953895568848
    3. 'i' → logprob: -1.9168953895568848
    4. '   ' → logprob: -4.166895389556885
    5. 't' → logprob: -5.916895389556885
    6. ' e' → logprob: -6.166895389556885
    7. ' ' → logprob: -6.416895389556885
    8. ')' → logprob: -6.791895389556885
    9. ' i' → logprob: -6.791895389556885
    10. 'o' → logprob: -6.916895389556885

Token 95: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1742791086435318
    2. ':' → logprob: -2.79927921295166
    3. '   ' → logprob: -3.54927921295166
    4. ' :' → logprob: -3.67427921295166
    5. ' (' → logprob: -4.67427921295166
    6. ')' → logprob: -5.04927921295166
    7. '(' → logprob: -5.04927921295166
    8. 'v' → logprob: -5.17427921295166
    9. '=' → logprob: -5.29927921295166
    10. ' v' → logprob: -5.67427921295166

Token 96: ' vect' (ID: 106052)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20696596801280975
    2. 'v' → logprob: -2.206965923309326
    3. ' ' → logprob: -2.581965923309326
    4. 'u' → logprob: -7.456965923309326
    5. ' u' → logprob: -7.956965923309326
    6. '2' → logprob: -8.706966400146484
    7. '1' → logprob: -10.956966400146484
    8. ' '' → logprob: -10.956966400146484
    9. ' vector' → logprob: -11.081966400146484
    10. '  ' → logprob: -11.081966400146484

Token 97: 'eur' (ID: 8671)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1486661583185196
    2. 'eur' → logprob: -2.0236661434173584
    3. 'ect' → logprob: -5.8986663818359375
    4. ' e' → logprob: -6.5236663818359375
    5. 'ec' → logprob: -7.0236663818359375
    6. 'eu' → logprob: -8.523666381835938
    7. 'ection' → logprob: -8.648666381835938
    8. '   ' → logprob: -9.273666381835938
    9. 'ector' → logprob: -9.773666381835938
    10. '	e' → logprob: -9.773666381835938

Token 98: ' v' (ID: 323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6424921751022339
    2. ' v' → logprob: -0.7674921751022339
    3. 'v' → logprob: -4.767492294311523
    4. '  ' → logprob: -7.642492294311523
    5. ')' → logprob: -8.267492294311523
    6. ' )' → logprob: -8.892492294311523
    7. ' u' → logprob: -9.517492294311523
    8. ''' → logprob: -9.767492294311523
    9. '   ' → logprob: -10.017492294311523
    10. 'u' → logprob: -10.142492294311523

Token 99: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1772460788488388
    2. ',' → logprob: -2.05224609375
    3. ')' → logprob: -3.92724609375
    4. ' ,' → logprob: -4.92724609375
    5. ' )' → logprob: -6.30224609375
    6. ' à' → logprob: -6.80224609375
    7. ' sur' → logprob: -7.55224609375
    8. ' autour' → logprob: -7.92724609375
    9. ' ' → logprob: -8.17724609375
    10. '<|end|>' → logprob: -8.42724609375

Token 100: ' rapport' (ID: 20847)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6753131151199341
    2. '<|end|>' → logprob: -1.425313115119934
    3. ' au' → logprob: -1.800313115119934
    4. ' a' → logprob: -2.8003129959106445
    5. ' ' → logprob: -4.3003129959106445
    6. ')' → logprob: -6.1753129959106445
    7. ' to' → logprob: -6.3003129959106445
    8. '<|end|>' → logprob: -6.9253129959106445
    9. 's' → logprob: -7.0503129959106445
    10. 'au' → logprob: -7.0503129959106445

Token 102: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07323342561721802
    2. ' ' → logprob: -2.9482333660125732
    3. ' l' → logprob: -4.698233604431152
    4. 'n' → logprob: -5.198233604431152
    5. ' un' → logprob: -7.323233604431152
    6. '  ' → logprob: -7.573233604431152
    7. ''' → logprob: -7.698233604431152
    8. ' a' → logprob: -8.323233604431152
    9. ' u' → logprob: -8.323233604431152
    10. ' la' → logprob: -8.573233604431152

Token 103: ' normale' (ID: 57494)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4037812650203705
    2. 'n' → logprob: -1.5287812948226929
    3. ' ' → logprob: -2.5287811756134033
    4. ' normal' → logprob: -3.7787811756134033
    5. ' normale' → logprob: -5.403781414031982
    6. 'norm' → logprob: -6.403781414031982
    7. ''' → logprob: -6.528781414031982
    8. '"' → logprob: -6.778781414031982
    9. ' norm' → logprob: -7.278781414031982
    10. '  ' → logprob: -7.278781414031982

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5230953097343445
    2. 'n' → logprob: -1.8980953693389893
    3. ' ' → logprob: -2.3980953693389893
    4. ' (' → logprob: -2.7730953693389893
    5. '   ' → logprob: -4.02309513092041
    6. ' v' → logprob: -4.52309513092041
    7. ')' → logprob: -4.64809513092041
    8. ',' → logprob: -4.77309513092041
    9. ' :' → logprob: -4.89809513092041
    10. ' de' → logprob: -5.02309513092041

Token 105: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06853386759757996
    2. '   ' → logprob: -3.5685338973999023
    3. '):' → logprob: -3.8185338973999023
    4. ' :' → logprob: -4.443533897399902
    5. ')' → logprob: -6.443533897399902
    6. ',' → logprob: -6.943533897399902
    7. ':
' → logprob: -7.193533897399902
    8. ':return' → logprob: -7.943533897399902
    9. ' ' → logprob: -8.693533897399902
    10. ' :
' → logprob: -9.193533897399902

Token 106: 'v' (ID: 85)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6228324770927429
    2. ')' → logprob: -0.9978324770927429
    3. ' ):' → logprob: -2.9978325366973877
    4. '   ' → logprob: -3.8728325366973877
    5. '):' → logprob: -4.247832298278809
    6. ' ):
' → logprob: -6.372832298278809
    7. ' v' → logprob: -6.497832298278809
    8. 'v' → logprob: -6.497832298278809
    9. ',' → logprob: -6.997832298278809
    10. ' la' → logprob: -7.247832298278809

Token 107: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7023506164550781
    2. ')' → logprob: -0.8273506164550781
    3. '-' → logprob: -3.702350616455078
    4. ' )' → logprob: -3.702350616455078
    5. ' *' → logprob: -4.577350616455078
    6. '.' → logprob: -5.952350616455078
    7. ',' → logprob: -6.702350616455078
    8. '*' → logprob: -6.827350616455078
    9. ' ' → logprob: -7.327350616455078
    10. '   ' → logprob: -7.827350616455078

Token 108: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07026907056570053
    2. 'n' → logprob: -2.6952691078186035
    3. ')' → logprob: -9.070268630981445
    4. ' )' → logprob: -9.320268630981445
    5. ' ' → logprob: -9.820268630981445
    6. ' ' → logprob: -10.570268630981445
    7. ')n' → logprob: -11.445268630981445
    8. '	n' → logprob: -11.945268630981445
    9. '<|end|>' → logprob: -12.195268630981445
    10. ',' → logprob: -12.445268630981445

Token 109: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21440139412879944
    2. '):' → logprob: -2.0894014835357666
    3. ' )' → logprob: -3.7144014835357666
    4. ' sont' → logprob: -3.7144014835357666
    5. '   ' → logprob: -4.8394012451171875
    6. ' ):' → logprob: -6.2144012451171875
    7. ',' → logprob: -6.4644012451171875
    8. ' are' → logprob: -6.5894012451171875
    9. ' ' → logprob: -6.8394012451171875
    10. '):
' → logprob: -6.8394012451171875

Token 110: ' unit' (ID: 7670)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'aires' (ID: 8507)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0421500205993652
    2. ' )' → logprob: -1.4171500205993652
    3. ')' → logprob: -1.6671500205993652
    4. '_' → logprob: -2.5421500205993652
    5. 'a' → logprob: -3.6671500205993652
    6. 's' → logprob: -3.6671500205993652
    7. 'aire' → logprob: -4.042150020599365
    8. '   ' → logprob: -4.417150020599365
    9. 'aires' → logprob: -4.667150020599365
    10. '[' → logprob: -4.792150020599365

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03369918093085289
    2. '):' → logprob: -3.4086992740631104
    3. ',' → logprob: -10.533699035644531
    4. ' )' → logprob: -11.658699035644531
    5. '):
' → logprob: -11.658699035644531
    6. ':' → logprob: -13.283699035644531
    7. ' ):' → logprob: -13.408699035644531
    8. ')
' → logprob: -13.533699035644531
    9. ').' → logprob: -13.783699035644531
    10. '.' → logprob: -14.033699035644531

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08807128667831421
    2. ':' → logprob: -2.713071346282959
    3. ' ' → logprob: -4.713071346282959
    4. ')' → logprob: -6.463071346282959
    5. ' :' → logprob: -6.463071346282959
    6. '
' → logprob: -6.588071346282959
    7. ' 
' → logprob: -6.838071346282959
    8. '    
' → logprob: -7.338071346282959
    9. ':return' → logprob: -7.588071346282959
    10. ' return' → logprob: -7.713071346282959

Token 114: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2728257477283478
    2. ' return' → logprob: -2.2728257179260254
    3. '   ' → logprob: -2.3978257179260254
    4. 'return' → logprob: -4.522825717926025
    5. 'r' → logprob: -4.897825717926025
    6. ''' → logprob: -5.147825717926025
    7. ' v' → logprob: -5.147825717926025
    8. ' r' → logprob: -6.022825717926025
    9. '-' → logprob: -6.522825717926025
    10. '"' → logprob: -6.647825717926025

Token 115: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0895647332072258
    2. ' t' → logprob: -3.339564800262451
    3. '    ' → logprob: -3.839564800262451
    4. ' return' → logprob: -4.464564800262451
    5. ' r' → logprob: -5.339564800262451
    6. ' ' → logprob: -5.714564800262451
    7. ' u' → logprob: -6.964564800262451
    8. ' c' → logprob: -6.964564800262451
    9. ' s' → logprob: -6.964564800262451
    10. ' d' → logprob: -7.214564800262451

Token 116: ''' (ID: 6)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5709108710289001
    2. ' -' → logprob: -1.070910930633545
    3. ')' → logprob: -3.445910930633545
    4. '.' → logprob: -4.695910930633545
    5. '_' → logprob: -4.695910930633545
    6. ' ' → logprob: -4.820910930633545
    7. '[' → logprob: -5.320910930633545
    8. '=' → logprob: -5.570910930633545
    9. ' return' → logprob: -5.945910930633545
    10. ' =' → logprob: -5.945910930633545

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12241587042808533
    2. '=' → logprob: -2.247415781021118
    3. ' ' → logprob: -5.122416019439697
    4. '-' → logprob: -6.497416019439697
    5. ' -' → logprob: -7.247416019439697
    6. ')' → logprob: -7.372416019439697
    7. '_' → logprob: -7.622416019439697
    8. '.' → logprob: -10.497415542602539
    9. 's' → logprob: -10.747415542602539
    10. '[' → logprob: -10.747415542602539

Token 118: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11290717124938965
    2. ' v' → logprob: -2.2379071712493896
    3. ' ' → logprob: -9.862907409667969
    4. '	v' → logprob: -10.862907409667969
    5. ')v' → logprob: -12.862907409667969
    6. '(' → logprob: -13.737907409667969
    7. '  ' → logprob: -13.737907409667969
    8. ')' → logprob: -14.237907409667969
    9. 'vector' → logprob: -14.300407409667969
    10. '[' → logprob: -14.425407409667969

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005021463148295879
    2. '-' → logprob: -5.755021572113037
    3. ' ' → logprob: -6.380021572113037
    4. ''' → logprob: -10.005021095275879
    5. '"' → logprob: -10.630021095275879
    6. ')' → logprob: -11.005021095275879
    7. '[' → logprob: -11.255021095275879
    8. '`' → logprob: -12.255021095275879
    9. 's' → logprob: -12.255021095275879
    10. 'space' → logprob: -12.255021095275879

Token 120: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07893936336040497
    2. '2' → logprob: -2.578939437866211
    3. ' n' → logprob: -11.203939437866211
    4. '"' → logprob: -11.578939437866211
    5. 'n' → logprob: -11.703939437866211
    6. '  ' → logprob: -12.453939437866211
    7. ''' → logprob: -12.828939437866211
    8. 's' → logprob: -12.828939437866211
    9. ' ' → logprob: -13.078939437866211
    10. '(' → logprob: -14.328939437866211

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001041978714056313
    2. ' ' → logprob: -6.876041889190674
    3. '`' → logprob: -12.876042366027832
    4. '   ' → logprob: -13.251042366027832
    5. '  ' → logprob: -14.251042366027832
    6. '```' → logprob: -14.251042366027832
    7. '"' → logprob: -14.501042366027832
    8. '[' → logprob: -14.876042366027832
    9. '

' → logprob: -14.876042366027832
    10. '(' → logprob: -14.876042366027832

Token 122: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014174672774970531
    2. '*' → logprob: -4.264174461364746
    3. ' ' → logprob: -12.639174461364746
    4. ' ' → logprob: -13.014174461364746
    5. '*np' → logprob: -13.389174461364746
    6. '*object' → logprob: -14.014174461364746
    7. '*(' → logprob: -14.014174461364746
    8. '.' → logprob: -14.139174461364746
    9. ' **' → logprob: -14.639174461364746
    10. '**' → logprob: -14.764174461364746

Token 123: 'v' (ID: 85)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.021283907815814018
    2. ' dot' → logprob: -3.8962838649749756
    3. '(dot' → logprob: -7.271284103393555
    4. ')' → logprob: -10.771284103393555
    5. '.dot' → logprob: -12.271284103393555
    6. 'math' → logprob: -12.271284103393555
    7. '-dot' → logprob: -12.521284103393555
    8. ' ' → logprob: -12.646284103393555
    9. '_dot' → logprob: -13.146284103393555
    10. 'd' → logprob: -13.396284103393555

Token 124: '·' (ID: 5366)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9843335151672363
    2. ')' → logprob: -1.4843335151672363
    3. '<|end|>' → logprob: -1.7343335151672363
    4. '[' → logprob: -2.4843335151672363
    5. '*' → logprob: -2.4843335151672363
    6. ' ' → logprob: -3.2343335151672363
    7. ' )' → logprob: -4.734333515167236
    8. ' dot' → logprob: -6.359333515167236
    9. '.' → logprob: -6.484333515167236
    10. '<|end|>' → logprob: -6.984333515167236

Token 125: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017077792435884476
    2. ' n' → logprob: -6.376707553863525
    3. '<|end|>' → logprob: -12.376708030700684
    4. ')n' → logprob: -14.501708030700684
    5. '	n' → logprob: -14.751708030700684
    6. '
' → logprob: -16.001707077026367
    7. ' ' → logprob: -16.251707077026367
    8. '```' → logprob: -16.501707077026367
    9. '(n' → logprob: -16.626707077026367
    10. ')' → logprob: -16.876707077026367

Token 126: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0738241970539093
    2. ')*' → logprob: -2.698824167251587
    3. ')n' → logprob: -5.698824405670166
    4. ' )' → logprob: -7.573824405670166
    5. '*)' → logprob: -12.198823928833008
    6. ')*(' → logprob: -12.573823928833008
    7. ')
' → logprob: -13.323823928833008
    8. '*' → logprob: -13.948823928833008
    9. ')**' → logprob: -14.323823928833008
    10. 'n' → logprob: -14.448823928833008

Token 127: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269339919090271
    2. ' n' → logprob: -2.126934051513672
    3. '	n' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.751934051513672
    5. '(n' → logprob: -14.626934051513672
    6. ')n' → logprob: -15.251934051513672
    7. '   ' → logprob: -15.751934051513672
    8. ' н' → logprob: -15.751934051513672
    9. '_n' → logprob: -16.251934051513672
    10. '(' → logprob: -16.376934051513672

Token 128: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3364407420158386
    2. '<|end|>' → logprob: -1.5864408016204834
    3. '   ' → logprob: -3.3364408016204834
    4. '
' → logprob: -3.8364408016204834
    5. ' ' → logprob: -5.211440563201904
    6. '<|end|>' → logprob: -5.336440563201904
    7. 'v' → logprob: -5.961440563201904
    8. '*' → logprob: -6.336440563201904
    9. ']' → logprob: -6.586440563201904
    10. 'n' → logprob: -6.586440563201904

Token 129: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009852771647274494
    2. '<|end|>' → logprob: -5.509852886199951
    3. '   ' → logprob: -5.759852886199951
    4. ' ' → logprob: -6.509852886199951
    5. '
' → logprob: -8.384852409362793
    6. ']' → logprob: -8.634852409362793
    7. '<|end|>' → logprob: -9.009852409362793
    8. ' return' → logprob: -9.509852409362793
    9. ')return' → logprob: -9.509852409362793
    10. '(' → logprob: -9.634852409362793

Token 130: ' vn' (ID: 88772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6783502697944641
    2. ' ' → logprob: -0.9283502697944641
    3. ' return' → logprob: -3.0533502101898193
    4. ')' → logprob: -4.553350448608398
    5. 'return' → logprob: -4.803350448608398
    6. 'r' → logprob: -4.803350448608398
    7. ' 
' → logprob: -4.928350448608398
    8. 'v' → logprob: -5.428350448608398
    9. '(' → logprob: -6.053350448608398
    10. 'n' → logprob: -6.428350448608398

Token 131: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15216344594955444
    2. '.' → logprob: -2.027163505554199
    3. ')' → logprob: -5.777163505554199
    4. ']' → logprob: -6.027163505554199
    5. '<|end|>' → logprob: -6.527163505554199
    6. ' ' → logprob: -6.777163505554199
    7. ',' → logprob: -7.777163505554199
    8. ' .' → logprob: -8.4021635055542
    9. '=' → logprob: -9.1521635055542
    10. '*' → logprob: -9.2771635055542

Token 132: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.07892316579818726
    2. ' dot' → logprob: -2.578923225402832
    3. '(dot' → logprob: -10.453923225402832
    4. '2' → logprob: -13.828923225402832
    5. '_dot' → logprob: -13.828923225402832
    6. '-dot' → logprob: -13.828923225402832
    7. '.dot' → logprob: -14.078923225402832
    8. '0' → logprob: -14.328923225402832
    9. ' ' → logprob: -16.703922271728516
    10. 'Dot' → logprob: -16.953922271728516

Token 133: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3869101405143738
    2. '(' → logprob: -1.1369102001190186
    3. '<|end|>' → logprob: -10.511910438537598
    4. '(
' → logprob: -11.636910438537598
    5. '(n' → logprob: -13.261910438537598
    6. ' (' → logprob: -15.511910438537598
    7. 'v' → logprob: -15.511910438537598
    8. '(

' → logprob: -15.886910438537598
    9. '('' → logprob: -16.38690948486328
    10. '(vector' → logprob: -16.51190948486328

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024075270630419254
    2. ',n' → logprob: -6.127407550811768
    3. ' ,' → logprob: -8.62740707397461
    4. ',
' → logprob: -10.50240707397461
    5. '<|end|>' → logprob: -12.00240707397461
    6. ',v' → logprob: -12.12740707397461
    7. 'n' → logprob: -13.25240707397461
    8. ',

' → logprob: -14.75240707397461
    9. '[' → logprob: -14.87740707397461
    10. ' n' → logprob: -15.12740707397461

Token 135: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20155338943004608
    2. 'n' → logprob: -1.7015533447265625
    3. '(n' → logprob: -9.951553344726562
    4. ')' → logprob: -10.201553344726562
    5. ')n' → logprob: -10.326553344726562
    6. '	n' → logprob: -12.076553344726562
    7. ' ' → logprob: -12.201553344726562
    8. ' )' → logprob: -12.826553344726562
    9. ' 
' → logprob: -12.951553344726562
    10. ',n' → logprob: -13.326553344726562

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. ')*' → logprob: -11.250020980834961
    3. ')
' → logprob: -11.750020980834961
    4. ' )' → logprob: -14.750020980834961
    5. ')`' → logprob: -16.12502098083496
    6. ')

' → logprob: -16.75002098083496
    7. ')**' → logprob: -16.87502098083496
    8. ']' → logprob: -18.75002098083496
    9. ')
' → logprob: -19.00002098083496
    10. '))' → logprob: -19.12502098083496

Token 137: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.46844568848609924
    2. '*' → logprob: -1.2184456586837769
    3. '   ' → logprob: -3.2184457778930664
    4. ')' → logprob: -4.093445777893066
    5. ' ' → logprob: -4.718445777893066
    6. '
' → logprob: -5.968445777893066
    7. '*n' → logprob: -6.218445777893066
    8. ' *
' → logprob: -6.343445777893066
    9. '<|end|>' → logprob: -6.968445777893066
    10. ',' → logprob: -6.968445777893066

Token 138: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5236332416534424
    2. ' return' → logprob: -2.0236332416534424
    3. '   ' → logprob: -2.3986332416534424
    4. ' 
' → logprob: -2.5236332416534424
    5. '
' → logprob: -4.023633003234863
    6. '2' → logprob: -4.148633003234863
    7. ' *' → logprob: -4.523633003234863
    8. 'return' (adapté à ' return') → logprob: -4.648633003234863
    9. '    
' → logprob: -4.898633003234863
    10. '*' → logprob: -5.023633003234863

Token 139: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9471761584281921
    2. '(v' → logprob: -1.572176218032837
    3. '[v' → logprob: -1.947176218032837
    4. '(' → logprob: -2.197176218032837
    5. ' (' → logprob: -2.447176218032837
    6. ' [' → logprob: -3.072176218032837
    7. '(
' → logprob: -4.322175979614258
    8. '[
' → logprob: -5.947175979614258
    9. '[u' → logprob: -6.697175979614258
    10. '(u' → logprob: -8.072175979614258

Token 140: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7729658540920354e-05
    2. ' v' → logprob: -10.500027656555176
    3. ')v' → logprob: -16.875028610229492
    4. '(v' → logprob: -17.000028610229492
    5. '(' → logprob: -17.875028610229492
    6. '	v' → logprob: -18.125028610229492
    7. '   ' → logprob: -18.750028610229492
    8. ')' → logprob: -19.750028610229492
    9. '$v' → logprob: -20.125028610229492
    10. 'vj' → logprob: -20.625028610229492

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3915141355246305e-05
    2. '0' → logprob: -10.87502384185791
    3. '[
' → logprob: -13.37502384185791
    4. '-' → logprob: -13.62502384185791
    5. ' ' → logprob: -14.12502384185791
    6. ' [' → logprob: -14.12502384185791
    7. ')' → logprob: -15.12502384185791
    8. '1' → logprob: -15.62502384185791
    9. ' -' → logprob: -15.62502384185791
    10. ',' → logprob: -16.750024795532227

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -17.75
    4. '-' → logprob: -18.375
    5. '   ' → logprob: -18.625
    6. '1' → logprob: -18.625
    7. '۰' → logprob: -18.75
    8. '
' → logprob: -19.4375
    9. '０' → logprob: -19.6875
    10. ']' → logprob: -20.0

Token 143: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009308332577347755
    2. '-' → logprob: -4.759308338165283
    3. ' ' → logprob: -7.509308338165283
    4. ')' → logprob: -9.009307861328125
    5. ' )' → logprob: -11.884307861328125
    6. ' ' → logprob: -12.134307861328125
    7. ']' → logprob: -13.009307861328125
    8. ' ,' → logprob: -13.384307861328125
    9. ' ]' → logprob: -13.634307861328125
    10. ' -
' → logprob: -13.759307861328125

Token 144: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006110332440584898
    2. '-' → logprob: -5.131110191345215
    3. ' ' → logprob: -8.631110191345215
    4. ')' → logprob: -13.506110191345215
    5. ' -
' → logprob: -14.381110191345215
    6. ' )' → logprob: -15.006110191345215
    7. ' ' → logprob: -15.006110191345215
    8. ' ,' → logprob: -16.13111114501953
    9. '"' → logprob: -16.25611114501953
    10. ''' → logprob: -16.63111114501953

Token 145: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759406685829163
    2. ' ' → logprob: -0.8259406685829163
    3. '   ' → logprob: -14.45094108581543
    4. ' ' → logprob: -15.20094108581543
    5. '  ' → logprob: -16.20094108581543
    6. '２' → logprob: -16.95094108581543
    7. '```' → logprob: -17.07594108581543
    8. '    ' → logprob: -17.13844108581543
    9. '	' → logprob: -17.57594108581543
    10. '۲' → logprob: -17.76344108581543

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. '```' → logprob: -17.750335693359375
    5. '  ' → logprob: -17.875335693359375
    6. '       ' → logprob: -18.125335693359375
    7. '     ' → logprob: -18.125335693359375
    8. '２' → logprob: -18.312835693359375
    9. '         ' → logprob: -18.437835693359375
    10. '`' → logprob: -18.500335693359375

Token 147: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05496601387858391
    2. ' *' → logprob: -3.0549659729003906
    3. '*v' → logprob: -5.179965972900391
    4. '*(' → logprob: -7.304965972900391
    5. '*object' → logprob: -10.80496597290039
    6. '*n' → logprob: -12.05496597290039
    7. '*np' → logprob: -12.67996597290039
    8. '**' → logprob: -12.80496597290039
    9. '*out' → logprob: -12.80496597290039
    10. '<|end|>' → logprob: -12.80496597290039

Token 148: 'vn' (ID: 43477)
  Prédit: 'vn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -0.10020871460437775
    2. ' vn' → logprob: -2.3502087593078613
    3. '.vn' → logprob: -13.975208282470703
    4. 'v' → logprob: -14.225208282470703
    5. 'avn' → logprob: -16.475208282470703
    6. ' v' → logprob: -16.475208282470703
    7. '(v' → logprob: -16.600208282470703
    8. ' ' → logprob: -17.100208282470703
    9. '<|end|>' → logprob: -17.225208282470703
    10. ' (' → logprob: -17.600208282470703

Token 149: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.007399214431643486
    2. '*' → logprob: -5.007399082183838
    3. ' *' → logprob: -7.382399082183838
    4. '*v' → logprob: -10.007399559020996
    5. 'n' → logprob: -11.132399559020996
    6. ')*' → logprob: -14.257399559020996
    7. '```' → logprob: -15.757399559020996
    8. '**' → logprob: -16.00739860534668
    9. ')n' → logprob: -16.00739860534668
    10. ']*' → logprob: -16.13239860534668

Token 150: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.440506407059729e-05
    2. '0' → logprob: -10.87503433227539
    3. '[
' → logprob: -11.25003433227539
    4. ' [' → logprob: -13.25003433227539
    5. ' ' → logprob: -15.62503433227539
    6. ',' → logprob: -16.25003433227539
    7. '```' → logprob: -16.50003433227539
    8. '1' → logprob: -16.75003433227539
    9. '][' → logprob: -16.87503433227539
    10. '.' → logprob: -17.00003433227539

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '۰' → logprob: -18.125
    5. '   ' → logprob: -19.75
    6. '０' → logprob: -20.125
    7. ']' → logprob: -20.5
    8. ')' → logprob: -21.5
    9. '<|end|>' → logprob: -21.5625
    10. ',' → logprob: -21.75

Token 152: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001177012687548995
    2. ')' → logprob: -7.376176834106445
    3. '),' → logprob: -8.001176834106445
    4. ' ,' → logprob: -8.626176834106445
    5. '],' → logprob: -11.251176834106445
    6. ',

' → logprob: -11.751176834106445
    7. ']' → logprob: -11.751176834106445
    8. ',
' → logprob: -12.876176834106445
    9. ',)' → logprob: -13.001176834106445
    10. ' )' → logprob: -14.751176834106445

Token 153: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3868725001811981
    2. 'v' → logprob: -1.1368725299835205
    3. '	v' → logprob: -13.761872291564941
    4. '    ' → logprob: -16.011873245239258
    5. ')v' → logprob: -16.136873245239258
    6. ' ' → logprob: -17.011873245239258
    7. ' ' → logprob: -17.136873245239258
    8. '0' → logprob: -17.136873245239258
    9. '(v' → logprob: -17.261873245239258
    10. '_v' → logprob: -18.136873245239258

Token 154: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.491498531133402e-06
    2. '1' → logprob: -11.625009536743164
    3. '[
' → logprob: -15.125009536743164
    4. ' [' → logprob: -16.250009536743164
    5. '```' → logprob: -17.375009536743164
    6. '0' → logprob: -17.625009536743164
    7. ' ' → logprob: -17.750009536743164
    8. '<|end|>' → logprob: -18.250009536743164
    9. '   ' → logprob: -18.375009536743164
    10. '.' → logprob: -18.625009536743164

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '0' → logprob: -16.875001907348633
    6. '
' → logprob: -17.500001907348633
    7. ']' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.437501907348633
    10. ')' → logprob: -19.062501907348633

Token 156: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8856369853019714
    2. ']' → logprob: -1.0106370449066162
    3. '-' → logprob: -1.5106370449066162
    4. '[' → logprob: -6.010636806488037
    5. ')' → logprob: -8.635637283325195
    6. ' ' → logprob: -9.510637283325195
    7. ']-' → logprob: -10.010637283325195
    8. ' ]' → logprob: -11.135637283325195
    9. '   ' → logprob: -12.385637283325195
    10. ' ' → logprob: -12.510637283325195

Token 157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020559873431921005
    2. '-' → logprob: -3.895559787750244
    3. ' ' → logprob: -11.145560264587402
    4. ')' → logprob: -12.895560264587402
    5. ' ' → logprob: -14.895560264587402
    6. '[' → logprob: -15.395560264587402
    7. '-n' → logprob: -15.895560264587402
    8. '<|end|>' → logprob: -16.520559310913086
    9. '   ' → logprob: -16.895559310913086
    10. ' -
' → logprob: -17.145559310913086

Token 158: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2254134863615036
    2. '2' → logprob: -1.60041344165802
    3. ' ' → logprob: -14.35041332244873
    4. '   ' → logprob: -15.72541332244873
    5. '  ' → logprob: -16.600414276123047
    6. ' two' → logprob: -17.537914276123047
    7. '    ' → logprob: -18.100414276123047
    8. ')' → logprob: -18.350414276123047
    9. '２' → logprob: -18.475414276123047
    10. ',' → logprob: -18.600414276123047

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '２' → logprob: -19.12509536743164
    4. '   ' → logprob: -19.12509536743164
    5. '۲' → logprob: -19.62509536743164
    6. '  ' → logprob: -20.25009536743164
    7. '```' → logprob: -21.00009536743164
    8. '(' → logprob: -21.31259536743164
    9. ' ' → logprob: -21.56259536743164
    10. '-' → logprob: -21.62509536743164

Token 160: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -6.704273118884885e-07
    2. ' *' → logprob: -14.625000953674316
    3. '*v' → logprob: -16.125
    4. '**' → logprob: -20.125
    5. 'vn' → logprob: -20.75
    6. '*n' → logprob: -20.875
    7. '＊' → logprob: -21.25
    8. '```' → logprob: -21.375
    9. ''*' → logprob: -21.5
    10. '***' → logprob: -21.625

Token 161: 'vn' (ID: 43477)
  Prédit: 'vn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -6.704273118884885e-07
    2. ' vn' → logprob: -14.375000953674316
    3. '2' → logprob: -18.5
    4. '.vn' → logprob: -18.75
    5. 'wn' → logprob: -19.125
    6. '
' → logprob: -19.125
    7. 'n' → logprob: -19.5
    8. 'v' → logprob: -19.625
    9. ' ' → logprob: -20.0
    10. 'xn' → logprob: -20.0

Token 162: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.00015431294741574675
    2. '*' → logprob: -9.125154495239258
    3. 'n' → logprob: -10.000154495239258
    4. '*v' → logprob: -18.875154495239258
    5. '[n' → logprob: -18.875154495239258
    6. '```' → logprob: -19.125154495239258
    7. ' *' → logprob: -19.250154495239258
    8. ')n' → logprob: -19.500154495239258
    9. '*
' → logprob: -19.875154495239258
    10. '	n' → logprob: -20.000154495239258

Token 163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. '1' → logprob: -11.500029563903809
    3. '*' → logprob: -11.625029563903809
    4. 'n' → logprob: -11.750029563903809
    5. '*[' → logprob: -13.500029563903809
    6. '*n' → logprob: -14.125029563903809
    7. '*y' → logprob: -16.000030517578125
    8. '```' → logprob: -16.125030517578125
    9. 'y' → logprob: -16.250030517578125
    10. '[
' → logprob: -16.375030517578125

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.625009536743164
    3. '0' → logprob: -16.125009536743164
    4. ']' → logprob: -17.625009536743164
    5. ' ' → logprob: -17.750009536743164
    6. '   ' → logprob: -18.250009536743164
    7. '```' → logprob: -18.375009536743164
    8. '

' → logprob: -18.750009536743164
    9. '１' → logprob: -18.812509536743164
    10. 'n' → logprob: -19.312509536743164

Token 165: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '}' → logprob: -14.000000953674316
    3. ' )' → logprob: -16.375001907348633
    4. ')
' → logprob: -17.375001907348633
    5. ')}' → logprob: -17.375001907348633
    6. '})' → logprob: -19.000001907348633
    7. '')' → logprob: -19.125001907348633
    8. '))' → logprob: -19.125001907348633
    9. ')

' → logprob: -19.250001907348633
    10. ')`' → logprob: -20.000001907348633

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15784624218940735
    2. 'd' → logprob: -2.032846212387085
    3. '
' → logprob: -5.532846450805664
    4. '\' → logprob: -5.532846450805664
    5. '(' → logprob: -5.657846450805664
    6. '#' → logprob: -6.032846450805664
    7. 'n' → logprob: -8.282846450805664
    8. '```' → logprob: -8.407846450805664
    9. ' 
' → logprob: -8.782846450805664
    10. '\n' → logprob: -9.032846450805664

Token 167: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19181005656719208
    2. ' angle' → logprob: -2.316810131072998
    3. ' project' → logprob: -3.691810131072998
    4. ' distance' → logprob: -3.816810131072998
    5. 'angle' → logprob: -5.066810131072998
    6. ' line' → logprob: -5.441810131072998
    7. 'main' → logprob: -5.816810131072998
    8. ' vector' → logprob: -6.566810131072998
    9. ' ray' → logprob: -6.566810131072998
    10. ' refr' → logprob: -6.691810131072998

Token 168: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060147691518068314
    2. '(line' → logprob: -3.935147762298584
    3. '(points' → logprob: -4.685147762298584
    4. '(lines' → logprob: -4.810147762298584
    5. '_circle' → logprob: -6.310147762298584
    6. '(x' → logprob: -6.435147762298584
    7. '(s' → logprob: -6.560147762298584
    8. '()' → logprob: -6.560147762298584
    9. '():' → logprob: -6.560147762298584
    10. '(a' → logprob: -6.560147762298584

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16085420548915863
    2. 'P' → logprob: -2.1608541011810303
    3. '):' → logprob: -4.910854339599609
    4. 'O' → logprob: -5.285854339599609
    5. ' ,' → logprob: -5.410854339599609
    6. ',P' → logprob: -5.535854339599609
    7. 'p' → logprob: -6.160854339599609
    8. ')' → logprob: -6.910854339599609
    9. ' P' → logprob: -6.910854339599609
    10. 'A' → logprob: -7.160854339599609

Token 170: ' px' (ID: 27003)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.5513113737106323
    2. 'O' → logprob: -2.051311492919922
    3. ' P' → logprob: -2.301311492919922
    4. 'N' → logprob: -2.551311492919922
    5. 'S' → logprob: -2.926311492919922
    6. 'R' → logprob: -2.926311492919922
    7. ' O' → logprob: -3.176311492919922
    8. 'L' → logprob: -3.426311492919922
    9. ' N' → logprob: -3.426311492919922
    10. ' S' → logprob: -3.426311492919922

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026937208604067564
    2. 'y' → logprob: -6.0026936531066895
    3. ',
' → logprob: -9.877694129943848
    4. '0' → logprob: -10.127694129943848
    5. 'p' → logprob: -10.627694129943848
    6. ')' → logprob: -10.752694129943848
    7. '_,' → logprob: -11.127694129943848
    8. ',y' → logprob: -11.252694129943848
    9. '_py' → logprob: -11.752694129943848
    10. '):' → logprob: -11.752694129943848

Token 172: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.011166667565703392
    2. ' py' → logprob: -4.511166572570801
    3. 'dy' → logprob: -10.2611665725708
    4. ' ' → logprob: -11.3861665725708
    5. '```' → logprob: -11.6361665725708
    6. 'p' → logprob: -11.8236665725708
    7. '   ' → logprob: -12.0111665725708
    8. 'qy' → logprob: -12.0736665725708
    9. 'px' → logprob: -12.4486665725708
    10. '_py' → logprob: -12.5111665725708

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07918983697891235
    2. '):' → logprob: -2.5791897773742676
    3. ')' → logprob: -8.954190254211426
    4. '):
' → logprob: -9.204190254211426
    5. ' ,' → logprob: -10.829190254211426
    6. ' ):' → logprob: -11.204190254211426
    7. ',
' → logprob: -11.329190254211426
    8. '0' → logprob: -12.579190254211426
    9. '1' → logprob: -12.954190254211426
    10. '_,' → logprob: -13.329190254211426

Token 174: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -1.3425484895706177
    2. 'vx' → logprob: -1.4675484895706177
    3. 'nx' → logprob: -2.217548370361328
    4. 'qx' → logprob: -3.217548370361328
    5. ' nx' → logprob: -3.342548370361328
    6. ' n' → logprob: -3.717548370361328
    7. 'n' → logprob: -3.842548370361328
    8. 'dx' → logprob: -4.217548370361328
    9. 'r' → logprob: -4.342548370361328
    10. 'rx' → logprob: -4.405048370361328

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004228091274853796
    2. '):' → logprob: -7.875422954559326
    3. ' ,' → logprob: -11.250422477722168
    4. ',v' → logprob: -11.375422477722168
    5. '):
' → logprob: -12.000422477722168
    6. ')' → logprob: -12.875422477722168
    7. ',
' → logprob: -13.000422477722168
    8. '0' → logprob: -13.250422477722168
    9. ',y' → logprob: -13.500422477722168
    10. '_,' → logprob: -14.125422477722168

Token 176: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.002812124788761139
    2. ' vy' → logprob: -5.877811908721924
    3. 'v' → logprob: -12.752812385559082
    4. '```' → logprob: -14.252812385559082
    5. 'Vy' → logprob: -14.627812385559082
    6. 'yv' → logprob: -14.752812385559082
    7. ' ' → logprob: -14.877812385559082
    8. 'vi' → logprob: -15.252812385559082
    9. ',' → logprob: -15.627812385559082
    10. '   ' → logprob: -15.877812385559082

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030721191316843033
    2. ',' → logprob: -3.5307211875915527
    3. ')' → logprob: -7.030721187591553
    4. ' ):' → logprob: -10.155721664428711
    5. ':' → logprob: -10.780721664428711
    6. '):
' → logprob: -11.280721664428711
    7. ' ,' → logprob: -13.280721664428711
    8. ',p' → logprob: -13.280721664428711
    9. '   ' → logprob: -13.655721664428711
    10. ',n' → logprob: -13.780721664428711

Token 178: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13615570962429047
    2. '   ' → logprob: -2.136155605316162
    3. ' :' → logprob: -5.636155605316162
    4. ',' → logprob: -6.011155605316162
    5. ':
' → logprob: -6.761155605316162
    6. '<|end|>' → logprob: -7.511155605316162
    7. '):' → logprob: -8.13615608215332
    8. ' ' → logprob: -8.38615608215332
    9. '#' → logprob: -8.63615608215332
    10. ')' → logprob: -9.38615608215332

Token 179: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5941266417503357
    2. ' ' → logprob: -1.5941267013549805
    3. '#' → logprob: -2.9691267013549805
    4. '    ' → logprob: -3.0941267013549805
    5. ' #' → logprob: -3.3441267013549805
    6. ' 
' → logprob: -3.4691267013549805
    7. 'n' → logprob: -3.7191267013549805
    8. 'x' → logprob: -4.0941267013549805
    9. ',' → logprob: -5.4691267013549805
    10. ':' → logprob: -5.5941267013549805

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051316145807504654
    2. '=' → logprob: -3.051316261291504
    3. 'ADIUS' → logprob: -7.051316261291504
    4. ',' → logprob: -7.176316261291504
    5. 'adius' → logprob: -7.926316261291504
    6. '0' → logprob: -9.176316261291504
    7. 'e' → logprob: -9.676316261291504
    8. 'E' → logprob: -9.801316261291504
    9. '   ' → logprob: -9.801316261291504
    10. ' ' → logprob: -9.801316261291504

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9600712060928345
    2. ' ' → logprob: -0.9600712060928345
    3. ' math' → logprob: -2.460071086883545
    4. '100' → logprob: -3.460071086883545
    5. '10' → logprob: -3.710071086883545
    6. 'math' → logprob: -3.710071086883545
    7. '0' → logprob: -4.085071086883545
    8. ' px' → logprob: -4.710071086883545
    9. '50' → logprob: -5.210071086883545
    10. 'px' → logprob: -5.210071086883545

Token 182: '1' (ID: 16)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2964640259742737
    2. '1' → logprob: -2.546463966369629
    3. 'px' → logprob: -3.046463966369629
    4. 'math' → logprob: -3.296463966369629
    5. '0' → logprob: -4.171463966369629
    6. '100' → logprob: -4.421463966369629
    7. '10' → logprob: -4.921463966369629
    8. ' D' → logprob: -5.046463966369629
    9. '(D' → logprob: -5.171463966369629
    10. '2' → logprob: -5.296463966369629

Token 183: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.697374701499939
    2. '0' → logprob: -1.197374701499939
    3. 'e' → logprob: -2.8223748207092285
    4. ' 
' → logprob: -3.5723748207092285
    5. ' ' → logprob: -3.6973748207092285
    6. '  
' → logprob: -3.6973748207092285
    7. '
' → logprob: -4.5723748207092285
    8. '2' → logprob: -4.9473748207092285
    9. ',' → logprob: -5.1973748207092285
    10. ')' → logprob: -5.3223748207092285

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6457285284996033
    2. '5' → logprob: -0.8957285284996033
    3. '8' → logprob: -3.895728588104248
    4. '7' → logprob: -4.270728588104248
    5. '9' → logprob: -4.395728588104248
    6. '6' → logprob: -5.270728588104248
    7. '4' → logprob: -5.395728588104248
    8. '2' → logprob: -5.395728588104248
    9. '3' → logprob: -6.520728588104248
    10. '1' → logprob: -6.770728588104248

Token 185: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21533040702342987
    2. '<|end|>' → logprob: -2.4653303623199463
    3. ' ' → logprob: -3.2153303623199463
    4. ' 
' → logprob: -3.2153303623199463
    5. '  
' → logprob: -4.340330600738525
    6. '#' → logprob: -5.715330600738525
    7. ',' → logprob: -5.840330600738525
    8. '    
' → logprob: -6.340330600738525
    9. ')' → logprob: -6.590330600738525
    10. '*' → logprob: -6.715330600738525

Token 186: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21833489835262299
    2. '
' → logprob: -1.9683349132537842
    3. '*' → logprob: -4.093334674835205
    4. '-' → logprob: -4.468334674835205
    5. '2' → logprob: -5.343334674835205
    6. ' #' → logprob: -5.468334674835205
    7. '+' → logprob: -5.593334674835205
    8. 'def' → logprob: -5.718334674835205
    9. '/' → logprob: -6.343334674835205
    10. 'radius' → logprob: -6.843334674835205

Token 187: ' rayon' (ID: 80967)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.015939582139253616
    2. ' D' → logprob: -5.390939712524414
    3. '0' → logprob: -5.640939712524414
    4. '1' → logprob: -6.015939712524414
    5. 'px' → logprob: -6.765939712524414
    6. 'py' → logprob: -7.015939712524414
    7. 'R' → logprob: -7.140939712524414
    8. ' ' → logprob: -7.765939712524414
    9. '10' → logprob: -8.140939712524414
    10. '50' → logprob: -8.265939712524414

Token 188: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' mur' (ID: 11426)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0364590585231781
    2. 'c' → logprob: -3.536458969116211
    3. 'p' → logprob: -5.661458969116211
    4. 'circle' → logprob: -7.536458969116211
    5. 'b' → logprob: -7.786458969116211
    6. 'ball' → logprob: -7.911458969116211
    7. 'tube' → logprob: -8.036458969116211
    8. 'table' → logprob: -8.411458969116211
    9. 'plate' → logprob: -8.661458969116211
    10. 'coin' → logprob: -8.661458969116211

Token 190: ' virt' (ID: 5824)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6100155711174011
    2. '#' → logprob: -1.485015630722046
    3. '   ' → logprob: -2.735015630722046
    4. ' #' → logprob: -3.985015630722046
    5. ' ' → logprob: -4.110015392303467
    6. 'radius' → logprob: -4.235015392303467
    7. 'r' → logprob: -4.610015392303467
    8. '  
' → logprob: -4.610015392303467
    9. ' 
' → logprob: -4.860015392303467
    10. 'd' → logprob: -4.860015392303467

Token 191: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.09259477257728577
    2. 'al' → logprob: -2.967594861984253
    3. 'u' → logprob: -3.717594861984253
    4. 'el' → logprob: -4.842594623565674
    5. 'ue' → logprob: -6.592594623565674
    6. 'ual' → logprob: -6.967594623565674
    7. 'e' → logprob: -7.092594623565674
    8. 'a' → logprob: -7.467594623565674
    9. '```' → logprob: -8.592595100402832
    10. 'aul' → logprob: -9.342595100402832

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3456760346889496
    2. '
' → logprob: -1.845676064491272
    3. '#' → logprob: -3.5956759452819824
    4. '    
' → logprob: -3.7206759452819824
    5. '  
' → logprob: -4.470675945281982
    6. 'v' → logprob: -5.095675945281982
    7. 't' → logprob: -5.095675945281982
    8. 'r' → logprob: -5.095675945281982
    9. 'radius' → logprob: -5.220675945281982
    10. ' 
' → logprob: -5.220675945281982

Token 193: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.097408413887024
    2. ' 
' → logprob: -1.222408413887024
    3. '   ' → logprob: -1.472408413887024
    4. '    
' → logprob: -2.7224082946777344
    5. '  
' → logprob: -3.8474082946777344
    6. ' ' → logprob: -3.8474082946777344
    7. '   
' → logprob: -4.847408294677734
    8. '<|end|>' → logprob: -5.097408294677734
    9. '#' → logprob: -5.597408294677734
    10. 'n' → logprob: -6.097408294677734

Token 194: ' EPS' (ID: 66979)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5784419178962708
    2. '#' → logprob: -1.578441858291626
    3. 'vx' → logprob: -2.953441858291626
    4. 'a' → logprob: -3.203441858291626
    5. 'x' → logprob: -3.328441858291626
    6. 't' → logprob: -3.828441858291626
    7. 'v' → logprob: -4.078442096710205
    8. 'px' → logprob: -4.453442096710205
    9. 'cx' → logprob: -4.953442096710205
    10. 'A' → logprob: -4.953442096710205

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025069991126656532
    2. '=' → logprob: -3.7750699520111084
    3. '_' → logprob: -6.4000701904296875
    4. ' _' → logprob: -10.150070190429688
    5. 'ILON' → logprob: -10.150070190429688
    6. ')' → logprob: -11.025070190429688
    7. ' ' → logprob: -11.900070190429688
    8. '    ' → logprob: -12.025070190429688
    9. ' ' → logprob: -12.275070190429688
    10. ':' → logprob: -12.400070190429688

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759400725364685
    2. ' ' → logprob: -0.8259400725364685
    3. '0' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.325940132141113
    5. '10' → logprob: -15.700940132141113
    6. '   ' → logprob: -17.825939178466797
    7. '2' → logprob: -17.950939178466797
    8. '<|end|>' → logprob: -18.075939178466797
    9. '  ' → logprob: -18.200939178466797
    10. '9' → logprob: -18.575939178466797

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '-' → logprob: -15.625001907348633
    4. '10' → logprob: -17.125001907348633
    5. '```' → logprob: -19.500001907348633
    6. '0' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '.' → logprob: -20.000001907348633
    9. '(' → logprob: -20.875001907348633
    10. 'e' → logprob: -21.125001907348633

Token 198: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08001131564378738
    2. '-' → logprob: -2.5800113677978516
    3. '.' → logprob: -6.830011367797852
    4. '.e' → logprob: -10.330011367797852
    5. '-e' → logprob: -13.205011367797852
    6. '-
' → logprob: -13.705011367797852
    7. ' -' → logprob: -13.955011367797852
    8. '0' → logprob: -14.205011367797852
    9. '^-' → logprob: -14.330011367797852
    10. 'E' → logprob: -14.580011367797852

Token 199: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -19.25
    3. '-
' → logprob: -19.625
    4. '−' → logprob: -19.875
    5. '```' → logprob: -20.125
    6. '6' → logprob: -22.0
    7. '

' → logprob: -22.125
    8. '0' → logprob: -22.125
    9. '{-' → logprob: -22.25
    10. '‑' → logprob: -22.25

Token 200: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2851749360561371
    2. '8' → logprob: -1.7851749658584595
    3. '7' → logprob: -2.91017484664917
    4. '10' → logprob: -4.28517484664917
    5. '6' → logprob: -4.78517484664917
    6. '12' → logprob: -5.66017484664917
    7. '14' → logprob: -9.535175323486328
    8. '09' → logprob: -9.785175323486328
    9. '5' → logprob: -10.160175323486328
    10. '08' → logprob: -10.285175323486328

Token 201: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005085510667413473
    2. '<|end|>' → logprob: -6.005085468292236
    3. '

' → logprob: -6.755085468292236
    4. ' 
' → logprob: -8.005085945129395
    5. '  
' → logprob: -8.255085945129395
    6. '' → logprob: -8.505085945129395
    7. '\n' → logprob: -8.755085945129395
    8. '
' → logprob: -9.005085945129395
    9. '    
' → logprob: -9.130085945129395
    10. '<|end|>' → logprob: -9.755085945129395

Token 202: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005307165905833244
    2. 'if' → logprob: -6.505307197570801
    3. '#' → logprob: -6.880307197570801
    4. '
    
' → logprob: -7.255307197570801
    5. '
' → logprob: -7.630307197570801
    6. '    
' → logprob: -7.880307197570801
    7. '   ' → logprob: -7.880307197570801
    8. '

' → logprob: -8.1303071975708
    9. 'def' → logprob: -8.6303071975708
    10. '  
' → logprob: -9.5053071975708

Token 203: ' epsilon' (ID: 73311)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2064694166183472
    2. ' #' → logprob: -2.0814695358276367
    3. '#' → logprob: -2.2064695358276367
    4. 'delta' → logprob: -2.5814695358276367
    5. ' tol' → logprob: -2.8314695358276367
    6. 'epsilon' → logprob: -2.9564695358276367
    7. ' tolerance' → logprob: -3.0814695358276367
    8. ' t' → logprob: -3.5814695358276367
    9. 'abs' → logprob: -3.9564695358276367
    10. 'tol' → logprob: -3.9564695358276367

Token 204: ' petites' (ID: 55617)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1821250468492508
    2. '<|end|>' → logprob: -1.9321250915527344
    3. '<|end|>' → logprob: -4.307125091552734
    4. '    
' → logprob: -6.057125091552734
    5. '   ' → logprob: -6.307125091552734
    6. '

' → logprob: -6.432125091552734
    7. '  
' → logprob: -7.182125091552734
    8. 'def' → logprob: -7.432125091552734
    9. '
    
' → logprob: -8.182125091552734
    10. ')' → logprob: -9.057125091552734

Token 205: ' erreurs' (ID: 139891)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.100123643875122
    2. ' espaces' → logprob: -2.100123643875122
    3. ' valeurs' → logprob: -2.350123643875122
    4. ')' → logprob: -2.350123643875122
    5. ' variations' → logprob: -2.600123643875122
    6. 'spaces' → logprob: -2.850123643875122
    7. ' =' → logprob: -3.475123643875122
    8. ' differences' → logprob: -3.600123643875122
    9. 'f' → logprob: -3.725123643875122
    10. ' ,' → logprob: -3.725123643875122

Token 206: ' flott' (ID: 108700)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03194123134016991
    2. '   ' → logprob: -4.4069414138793945
    3. '    
' → logprob: -4.9069414138793945
    4. '

' → logprob: -5.4069414138793945
    5. '  
' → logprob: -5.9069414138793945
    6. '<|end|>' → logprob: -6.2819414138793945
    7. '
    
' → logprob: -7.5319414138793945
    8. 'def' → logprob: -7.5319414138793945
    9. '<|end|>' → logprob: -7.7819414138793945
    10. '   
' → logprob: -8.281941413879395

Token 207: 'antes' (ID: 5193)
  Prédit: '-point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-point' → logprob: -0.14815345406532288
    2. 'point' → logprob: -2.14815354347229
    3. 'Point' → logprob: -4.898153305053711
    4. '_point' → logprob: -5.648153305053711
    5. ' point' → logprob: -5.898153305053711
    6. 'oint' → logprob: -6.023153305053711
    7. 'ing' → logprob: -7.273153305053711
    8. '```' → logprob: -7.773153305053711
    9. 'e' → logprob: -7.898153305053711
    10. '   ' → logprob: -8.023153305053711

Token 208: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1570434272289276
    2. '   ' → logprob: -2.28204345703125
    3. '    
' → logprob: -3.40704345703125
    4. 'def' → logprob: -5.78204345703125
    5. '

' → logprob: -6.40704345703125
    6. '  
' → logprob: -6.65704345703125
    7. '<|end|>' → logprob: -7.15704345703125
    8. '   
' → logprob: -8.03204345703125
    9. ' 
' → logprob: -8.15704345703125
    10. '
' → logprob: -8.28204345703125

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08398380875587463
    2. '    
' → logprob: -3.083983898162842
    3. '
' → logprob: -3.833983898162842
    4. 'v' → logprob: -5.833983898162842
    5. '  
' → logprob: -6.583983898162842
    6. 'x' → logprob: -6.708983898162842
    7. 'a' → logprob: -6.708983898162842
    8. '#' → logprob: -7.083983898162842
    9. 'def' → logprob: -7.083983898162842
    10. ' 
' → logprob: -7.083983898162842

Token 210: ' pos' (ID: 1253)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8854792714118958
    2. 'a' → logprob: -1.510479211807251
    3. 'dx' → logprob: -1.885479211807251
    4. 'A' → logprob: -2.760479211807251
    5. 'x' → logprob: -3.260479211807251
    6. 't' → logprob: -3.760479211807251
    7. 'vx' → logprob: -3.760479211807251
    8. 'px' → logprob: -4.38547945022583
    9. 'if' → logprob: -4.76047945022583
    10. 'cx' → logprob: -4.88547945022583

Token 211: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7794083952903748
    2. ' =' → logprob: -0.9044083952903748
    3. '_x' → logprob: -2.1544084548950195
    4. '=' → logprob: -4.0294084548950195
    5. 'X' → logprob: -6.1544084548950195
    6. '_' → logprob: -8.27940845489502
    7. ' ' → logprob: -9.27940845489502
    8. '[' → logprob: -9.40440845489502
    9. '   ' → logprob: -9.65440845489502
    10. 'ition' → logprob: -9.90440845489502

Token 212: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.06072523817420006
    2. '(py' → logprob: -3.060725212097168
    3. '[' → logprob: -5.060725212097168
    4. ' (' → logprob: -6.310725212097168
    5. '(p' → logprob: -6.310725212097168
    6. '(' → logprob: -6.560725212097168
    7. '[p' → logprob: -7.810725212097168
    8. ' [' → logprob: -8.810725212097168
    9. '(x' → logprob: -10.060725212097168
    10. '(v' → logprob: -11.060725212097168

Token 213: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -4.334533878136426e-05
    2. 'float' → logprob: -10.500042915344238
    3. ' px' → logprob: -11.500042915344238
    4. '(px' → logprob: -12.500042915344238
    5. '   ' → logprob: -14.000042915344238
    6. '0' → logprob: -15.375042915344238
    7. 'Px' → logprob: -15.500042915344238
    8. 'py' → logprob: -16.000043869018555
    9. 'vx' → logprob: -16.750043869018555
    10. 'x' → logprob: -16.750043869018555

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004100958351045847
    2. ' ,' → logprob: -5.504100799560547
    3. ',v' → logprob: -11.504100799560547
    4. ',y' → logprob: -11.504100799560547
    5. ',
' → logprob: -14.504100799560547
    6. ',p' → logprob: -14.879100799560547
    7. '+' → logprob: -15.504100799560547
    8. '‌,' → logprob: -15.629100799560547
    9. '   ' → logprob: -15.754100799560547
    10. '<|end|>' → logprob: -15.879100799560547

Token 215: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.048591457307338715
    2. ' py' → logprob: -3.048591375350952
    3. '(py' → logprob: -13.548591613769531
    4. '_py' → logprob: -13.923591613769531
    5. ' ' → logprob: -14.173591613769531
    6. 'px' → logprob: -15.173591613769531
    7. '   ' → logprob: -15.673591613769531
    8. '
' → logprob: -15.673591613769531
    9. '.py' → logprob: -15.923591613769531
    10. 'ppy' → logprob: -16.29859161376953

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013214473437983543
    2. ')
' → logprob: -9.12513256072998
    3. ',' → logprob: -11.75013256072998
    4. '   ' → logprob: -11.87513256072998
    5. ' )' → logprob: -12.00013256072998
    6. ')

' → logprob: -14.37513256072998
    7. '+' → logprob: -15.12513256072998
    8. '),' → logprob: -15.75013256072998
    9. ')v' → logprob: -15.75013256072998
    10. ')
' → logprob: -16.000131607055664

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.693701446056366
    2. 'vel' → logprob: -0.818701446056366
    3. 'v' → logprob: -3.9437015056610107
    4. '    
' → logprob: -4.443701267242432
    5. '
' → logprob: -4.693701267242432
    6. ' vel' → logprob: -4.818701267242432
    7. 'vec' → logprob: -5.068701267242432
    8. '  
' → logprob: -6.443701267242432
    9. ',' → logprob: -7.318701267242432
    10. ' v' → logprob: -8.19370174407959

Token 218: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' (adapté à ' vel') → logprob: -0.10908041894435883
    2. 'v' → logprob: -2.4840803146362305
    3. 'dir' → logprob: -4.1090803146362305
    4. 'vec' → logprob: -6.4840803146362305
    5. 'velocity' → logprob: -7.4840803146362305
    6. 'speed' → logprob: -7.8590803146362305
    7. ' vel' → logprob: -8.10908031463623
    8. 'pos' → logprob: -8.48408031463623
    9. 'direction' → logprob: -9.35908031463623
    10. 'velo' → logprob: -9.48408031463623

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868902921676636
    2. '=' → logprob: -1.1368902921676636
    3. ')' → logprob: -11.011890411376953
    4. ',' → logprob: -13.511890411376953
    5. '   ' → logprob: -15.261890411376953
    6. '[' → logprob: -15.261890411376953
    7. ' ' → logprob: -15.511890411376953
    8. '(' → logprob: -15.761890411376953
    9. ')=' → logprob: -15.886890411376953
    10. '_' → logprob: -16.511890411376953

Token 220: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02976194955408573
    2. ' (' → logprob: -3.529762029647827
    3. '(' → logprob: -11.404762268066406
    4. ' ' → logprob: -15.779762268066406
    5. '   ' → logprob: -17.279762268066406
    6. '(vm' → logprob: -17.529762268066406
    7. '(vc' → logprob: -17.529762268066406
    8. '  ' → logprob: -18.154762268066406
    9. '(vo' → logprob: -18.904762268066406
    10. 'vx' → logprob: -19.154762268066406

Token 221: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -3.8889261304575484e-06
    2. ' vx' → logprob: -12.500003814697266
    3. 'vy' → logprob: -18.000003814697266
    4. '   ' → logprob: -18.125003814697266
    5. ' ' → logprob: -18.375003814697266
    6. '
' → logprob: -19.250003814697266
    7. '  ' → logprob: -20.125003814697266
    8. ')' → logprob: -20.750003814697266
    9. 'float' → logprob: -20.750003814697266
    10. '```' → logprob: -21.000003814697266

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.466968650580384e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',v' → logprob: -12.750054359436035
    4. ',y' → logprob: -16.12505531311035
    5. ',
' → logprob: -16.75005531311035
    6. '[' → logprob: -17.25005531311035
    7. '‌,' → logprob: -17.62505531311035
    8. ')' → logprob: -17.87505531311035
    9. '<|end|>' → logprob: -18.75005531311035
    10. ' ' → logprob: -18.87505531311035

Token 223: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00861468818038702
    2. ' vy' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.258615493774414
    4. 'yv' → logprob: -17.883615493774414
    5. '   ' → logprob: -18.008615493774414
    6. 'vyk' → logprob: -18.133615493774414
    7. 'wy' → logprob: -18.508615493774414
    8. 'Vy' → logprob: -18.758615493774414
    9. 'v' → logprob: -19.008615493774414
    10. ')' → logprob: -19.633615493774414

Token 224: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. '   ' → logprob: -11.875011444091797
    3. ')
' → logprob: -12.750011444091797
    4. ' )' → logprob: -14.375011444091797
    5. ')

' → logprob: -14.500011444091797
    6. ')#' → logprob: -18.250011444091797
    7. ',' → logprob: -19.125011444091797
    8. ')`' → logprob: -19.250011444091797
    9. '))' → logprob: -19.500011444091797
    10. ')
' → logprob: -19.500011444091797

Token 225: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16079461574554443
    2. '   ' → logprob: -2.535794734954834
    3. 'while' → logprob: -3.410794734954834
    4. 'for' → logprob: -4.535794734954834
    5. '    
' → logprob: -4.785794734954834
    6. ' while' → logprob: -4.910794734954834
    7. 'n' → logprob: -6.160794734954834
    8. ' for' → logprob: -6.410794734954834
    9. '  
' → logprob: -6.785794734954834
    10. '\n' → logprob: -7.035794734954834

Token 226: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5746383666992188
    2. 'while' → logprob: -0.9496383666992188
    3. 't' → logprob: -4.074638366699219
    4. 'path' → logprob: -4.449638366699219
    5. 'b' → logprob: -5.824638366699219
    6. 'steps' → logprob: -6.074638366699219
    7. 'if' → logprob: -6.324638366699219
    8. 'time' → logprob: -6.324638366699219
    9. 'times' → logprob: -6.324638366699219
    10. 'result' → logprob: -6.699638366699219

Token 227: '_total' (ID: 23814)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3433803915977478
    2. '=' → logprob: -1.3433804512023926
    3. 'ance' → logprob: -3.9683804512023926
    4. 'anced' → logprob: -5.718380451202393
    5. 'ances' → logprob: -5.718380451202393
    6. '_squared' → logprob: -6.218380451202393
    7. '_sq' → logprob: -7.218380451202393
    8. '_' → logprob: -8.343379974365234
    9. 'anc' → logprob: -8.468379974365234
    10. ',' → logprob: -8.593379974365234

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10156980901956558
    2. '=' → logprob: -2.351569890975952
    3. '_' → logprob: -7.476569652557373
    4. ' ' → logprob: -7.976569652557373
    5. ',' → logprob: -7.976569652557373
    6. ')' → logprob: -9.726570129394531
    7. ' +=' → logprob: -10.476570129394531
    8. '  ' → logprob: -12.476570129394531
    9. ' ,' → logprob: -12.976570129394531
    10. '   ' → logprob: -13.101570129394531

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300296679139137
    2. ' ' → logprob: -3.1680030822753906
    3. ' ' → logprob: -13.79300308227539
    4. ' math' → logprob: -13.91800308227539
    5. 'abs' → logprob: -15.41800308227539
    6. 'float' → logprob: -15.41800308227539
    7. ' abs' → logprob: -15.60550308227539
    8. ' float' → logprob: -15.73050308227539
    9. 'math' → logprob: -16.10550308227539
    10. ' sys' → logprob: -16.16800308227539

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.375041961669922
    3. 'float' → logprob: -12.625041961669922
    4. 'math' → logprob: -12.625041961669922
    5. 'abs' → logprob: -13.500041961669922
    6. 'D' → logprob: -14.250041961669922
    7. '.' → logprob: -15.000041961669922
    8. '1' → logprob: -15.000041961669922
    9. 'R' → logprob: -15.500041961669922
    10. '-' → logprob: -15.875041961669922

Token 231: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.790129555156454e-05
    2. '0' → logprob: -10.250067710876465
    3. '
' → logprob: -10.500067710876465
    4. ' ' → logprob: -14.125067710876465
    5. 'def' → logprob: -14.375067710876465
    6. '1' → logprob: -15.000067710876465
    7. '[' → logprob: -15.375067710876465
    8. '' → logprob: -15.375067710876465
    9. 'e' → logprob: -15.375067710876465
    10. '.
' → logprob: -15.500067710876465

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010199354437645525
    2. '15' → logprob: -9.875102043151855
    3. '6' → logprob: -10.125102043151855
    4. '9' → logprob: -12.875102043151855
    5. '5' → logprob: -13.375102043151855
    6. '8' → logprob: -13.500102043151855
    7. '7' → logprob: -13.625102043151855
    8. '1' → logprob: -14.000102043151855
    9. '14' → logprob: -14.000102043151855
    10. '```' → logprob: -14.625102043151855

Token 233: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10231725126504898
    2. '   ' → logprob: -2.7273173332214355
    3. '<|end|>' → logprob: -4.8523173332214355
    4. ' while' → logprob: -5.6023173332214355
    5. 'while' → logprob: -5.6023173332214355
    6. ',' → logprob: -5.8523173332214355
    7. '\n' → logprob: -5.9773173332214355
    8. '    
' → logprob: -5.9773173332214355
    9. ' 
' → logprob: -6.1023173332214355
    10. '  
' → logprob: -6.4773173332214355

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4595765173435211
    2. ' while' → logprob: -1.5845764875411987
    3. 'while' → logprob: -1.9595764875411987
    4. 'for' → logprob: -4.709576606750488
    5. '
' → logprob: -5.084576606750488
    6. ' for' → logprob: -5.459576606750488
    7. '    
' → logprob: -6.584576606750488
    8. '	while' → logprob: -8.334576606750488
    9. ' ' → logprob: -8.459576606750488
    10. ' 
' → logprob: -8.709576606750488

Token 235: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3141316771507263
    2. 'for' → logprob: -1.314131736755371
    3. 't' → logprob: -7.314131736755371
    4. ' while' → logprob: -10.189131736755371
    5. 'steps' → logprob: -10.189131736755371
    6. 'time' → logprob: -10.314131736755371
    7. 'max' → logprob: -10.439131736755371
    8. 'positions' → logprob: -11.314131736755371
    9. 'step' → logprob: -11.814131736755371
    10. 'i' → logprob: -12.064131736755371

Token 236: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6935914754867554
    2. 'while' → logprob: -0.6935914754867554
    3. ' for' → logprob: -8.693591117858887
    4. ' while' → logprob: -8.943591117858887
    5. 't' → logprob: -10.443591117858887
    6. 'i' → logprob: -11.193591117858887
    7. 'positions' → logprob: -11.193591117858887
    8. 'max' → logprob: -11.568591117858887
    9. 'b' → logprob: -11.568591117858887
    10. 'points' → logprob: -11.693591117858887

Token 237: ' sim' (ID: 1845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5153918862342834
    2. ' for' → logprob: -1.1403918266296387
    3. 'while' → logprob: -3.0153918266296387
    4. ' while' → logprob: -3.3903918266296387
    5. 'def' → logprob: -9.265392303466797
    6. ' =' → logprob: -9.890392303466797
    7. '=' → logprob: -10.140392303466797
    8. '#' → logprob: -10.140392303466797
    9. '   ' → logprob: -10.265392303466797
    10. ' #' → logprob: -11.890392303466797

Token 238: 'ule' (ID: 1601)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.05257884040474892
    2. 'ule' → logprob: -4.052578926086426
    3. '#' → logprob: -4.677578926086426
    4. 'p' → logprob: -5.052578926086426
    5. 'plement' → logprob: -5.427578926086426
    6. 'ulate' → logprob: -5.677578926086426
    7. 'pl' → logprob: -5.802578926086426
    8. 'plate' → logprob: -6.177578926086426
    9. 'ply' → logprob: -7.302578926086426
    10. '[' → logprob: -7.302578926086426

Token 239: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33031418919563293
    2. '(' → logprob: -2.3303141593933105
    3. 'while' → logprob: -2.3303141593933105
    4. ' for' → logprob: -2.9553141593933105
    5. ' while' → logprob: -4.0803141593933105
    6. '   ' → logprob: -4.3303141593933105
    7. ' la' → logprob: -7.3303141593933105
    8. ' ' → logprob: -7.4553141593933105
    9. ',' → logprob: -7.5803141593933105
    10. '(
' → logprob: -7.9553141593933105

Token 240: ' déplacements' (ID: 193957)
  Prédit: ' reb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reb' → logprob: -0.29274094104766846
    2. 'reb' → logprob: -2.542740821838379
    3. ' b' → logprob: -2.917740821838379
    4. 'b' → logprob: -3.167740821838379
    5. ' ' → logprob: -3.417740821838379
    6. '10' → logprob: -4.167740821838379
    7. '100' → logprob: -4.417740821838379
    8. ' all' → logprob: -5.792740821838379
    9. 'm' → logprob: -6.542740821838379
    10. '5' → logprob: -6.792740821838379

Token 241: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6322200894355774
    2. ' for' → logprob: -1.8822200298309326
    3. 'while' → logprob: -2.1322200298309326
    4. '   ' → logprob: -2.6322200298309326
    5. ',' → logprob: -3.5072200298309326
    6. ' pour' → logprob: -3.7572200298309326
    7. ' while' → logprob: -3.8822200298309326
    8. 'pour' → logprob: -4.882220268249512
    9. ' en' → logprob: -5.132220268249512
    10. ' jusqu' → logprob: -5.257220268249512

Token 242: ' segment' (ID: 14806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7325881719589233
    2. 'pas' → logprob: -2.357588291168213
    3. 'b' → logprob: -2.857588291168213
    4. 'abol' → logprob: -3.107588291168213
    5. 'inter' → logprob: -3.482588291168213
    6. 'ré' → logprob: -3.482588291168213
    7. 'bou' → logprob: -3.482588291168213
    8. 're' → logprob: -3.732588291168213
    9. 'it' → logprob: -3.732588291168213
    10. 'interval' → logprob: -3.982588291168213

Token 243: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5520759224891663
    2. 'for' → logprob: -1.1770758628845215
    3. 'while' → logprob: -2.6770758628845215
    4. ' for' → logprob: -3.8020758628845215
    5. ' while' → logprob: -4.9270758628845215
    6. '
' → logprob: -5.0520758628845215
    7. '    
' → logprob: -5.1770758628845215
    8. ',' → logprob: -5.9270758628845215
    9. '.' → logprob: -7.0520758628845215
    10. ':' → logprob: -7.1770758628845215

Token 244: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.013857175596058369
    2. ''au' → logprob: -5.138857364654541
    3. 'à' → logprob: -5.263857364654541
    4. ''' → logprob: -6.763857364654541
    5. '   ' → logprob: -7.263857364654541
    6. '’à' → logprob: -7.388857364654541
    7. 'a' → logprob: -9.513856887817383
    8. ''a' → logprob: -9.638856887817383
    9. 'au' → logprob: -10.138856887817383
    10. '_' → logprob: -10.513856887817383

Token 245: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5039215683937073
    2. 'atte' → logprob: -2.0039215087890625
    3. 'ce' → logprob: -2.1289215087890625
    4. 'distance' → logprob: -2.7539215087890625
    5. ' ce' → logprob: -3.3789215087890625
    6. 'la' → logprob: -5.0039215087890625
    7. 'abs' → logprob: -5.0039215087890625
    8. 'l' → logprob: -5.1289215087890625
    9. ' atteindre' → logprob: -5.3789215087890625
    10. 'une' → logprob: -5.7539215087890625

Token 246: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0548747181892395
    2. ' D' → logprob: -3.3048746585845947
    3. 'd' → logprob: -4.929874897003174
    4. 'dist' → logprob: -5.679874897003174
    5. ' dist' → logprob: -6.679874897003174
    6. 'sup' → logprob: -6.929874897003174
    7. '_D' → logprob: -7.179874897003174
    8. '>=' → logprob: -7.429874897003174
    9. '_d' → logprob: -7.679874897003174
    10. '>D' → logprob: -7.804874897003174

Token 247: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3343126177787781
    2. ':' → logprob: -2.209312677383423
    3. 'while' → logprob: -2.709312677383423
    4. ' while' → logprob: -2.959312677383423
    5. ',' → logprob: -3.084312677383423
    6. '.' → logprob: -4.959312438964844
    7. ' :' → logprob: -7.084312438964844
    8. '
' → logprob: -7.334312438964844
    9. '  ' → logprob: -8.459312438964844
    10. 'While' → logprob: -8.834312438964844

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036242831498384476
    2. 'while' → logprob: -4.036242961883545
    3. ' while' → logprob: -4.536242961883545
    4. '
' → logprob: -6.036242961883545
    5. '    
' → logprob: -6.661242961883545
    6. ',' → logprob: -6.786242961883545
    7. '.' → logprob: -6.911242961883545
    8. ':' → logprob: -7.161242961883545
    9. '```' → logprob: -8.536242485046387
    10. '  ' → logprob: -9.411242485046387

Token 249: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001624237629584968
    2. ' while' → logprob: -6.75162410736084
    3. '   ' → logprob: -8.00162410736084
    4. 'distance' → logprob: -9.50162410736084
    5. 'wh' → logprob: -10.87662410736084
    6. 'w' → logprob: -11.62662410736084
    7. 't' → logprob: -12.00162410736084
    8. 'remaining' → logprob: -12.75162410736084
    9. 'current' → logprob: -13.12662410736084
    10. 'd' → logprob: -13.37662410736084

Token 250: ' A' (ID: 355)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.031394608318805695
    2. '   ' → logprob: -4.0313944816589355
    3. ' while' → logprob: -4.4063944816589355
    4. 'distance' → logprob: -7.9063944816589355
    5. 'for' → logprob: -8.156394958496094
    6. 'remaining' → logprob: -8.906394958496094
    7. 'pos' → logprob: -9.906394958496094
    8. 'current' → logprob: -10.156394958496094
    9. 't' → logprob: -11.406394958496094
    10. '
' → logprob: -11.906394958496094

Token 251: ' chaque' (ID: 21194)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4813438951969147
    2. 'cc' → logprob: -1.4813438653945923
    3. 't' → logprob: -2.231343984603882
    4. ' t' → logprob: -4.231343746185303
    5. ' while' → logprob: -4.856343746185303
    6. 'for' → logprob: -5.106343746185303
    7. 'l' → logprob: -5.356343746185303
    8. 'ct' → logprob: -5.856343746185303
    9. 'tt' → logprob: -6.606343746185303
    10. 'def' → logprob: -6.731343746185303

Token 252: ' segment' (ID: 14806)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8211796283721924
    2. 'bounce' → logprob: -1.8211796283721924
    3. 'segment' → logprob: -2.4461796283721924
    4. 'iteration' → logprob: -2.6961796283721924
    5. 'it' → logprob: -2.8211796283721924
    6. ' while' → logprob: -3.1961796283721924
    7. ' it' → logprob: -3.6961796283721924
    8. 'b' → logprob: -3.8211796283721924
    9. ' segment' → logprob: -3.8211796283721924
    10. 'collision' → logprob: -3.9461796283721924

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19610203802585602
    2. ':' → logprob: -1.8211020231246948
    3. '   ' → logprob: -5.321102142333984
    4. 'while' → logprob: -5.571102142333984
    5. ' ,' → logprob: -5.946102142333984
    6. ':
' → logprob: -6.196102142333984
    7. ' :' → logprob: -7.571102142333984
    8. ',
' → logprob: -7.946102142333984
    9. ' while' → logprob: -8.571102142333984
    10. '=' → logprob: -8.571102142333984

Token 254: ' on' (ID: 402)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.48347270488739014
    2. '#' → logprob: -1.1084727048873901
    3. 't' → logprob: -4.35847282409668
    4. 'pos' → logprob: -4.73347282409668
    5. 'on' → logprob: -4.85847282409668
    6. ' while' → logprob: -4.85847282409668
    7. '   ' → logprob: -5.35847282409668
    8. 'x' → logprob: -5.60847282409668
    9. 'dx' → logprob: -6.48347282409668
    10. 'if' → logprob: -6.73347282409668

Token 255: ' cherche' (ID: 52345)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -1.1986192464828491
    2. 'calc' → logprob: -1.5736192464828491
    3. 'cal' → logprob: -2.1986193656921387
    4. '#' → logprob: -2.6986193656921387
    5. ' calc' → logprob: -2.6986193656921387
    6. 'calcul' → logprob: -2.6986193656921387
    7. 'detect' → logprob: -3.1986193656921387
    8. ' cherche' → logprob: -4.073619365692139
    9. 'check' → logprob: -4.073619365692139
    10. 'trace' → logprob: -4.073619365692139

Token 256: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8699668049812317
    2. ' le' → logprob: -1.119966745376587
    3. ' l' → logprob: -1.744966745376587
    4. 'le' → logprob: -2.994966745376587
    5. 'l' → logprob: -4.244966983795166
    6. ' intersection' → logprob: -5.494966983795166
    7. 'intersection' → logprob: -6.119966983795166
    8. 'la' → logprob: -6.119966983795166
    9. ' ' → logprob: -6.619966983795166
    10. 'où' → logprob: -7.119966983795166

Token 257: ''inter' (ID: 55731)
  Prédit: ''inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.9627192616462708
    2. 'a' → logprob: -1.212719202041626
    3. 'intersection' → logprob: -1.712719202041626
    4. 'e' → logprob: -2.587719202041626
    5. ''instant' → logprob: -3.212719202041626
    6. ''' → logprob: -4.087719440460205
    7. 'inter' → logprob: -6.837719440460205
    8. ' intersection' → logprob: -6.962719440460205
    9. ''end' → logprob: -6.962719440460205
    10. ''é' → logprob: -7.212719440460205

Token 258: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.009373409673571587
    2. 'ception' → logprob: -5.134373188018799
    3. 'sect' → logprob: -6.509373188018799
    4. 'ection' → logprob: -8.134373664855957
    5. 'sec' → logprob: -8.884373664855957
    6. 'face' → logprob: -9.009373664855957
    7. 'cept' → logprob: -9.134373664855957
    8. 's' → logprob: -9.134373664855957
    9. '```' → logprob: -9.134373664855957
    10. '#' → logprob: -9.634373664855957

Token 259: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.7095053791999817
    2. ' with' → logprob: -0.9595053791999817
    3. ' du' → logprob: -2.959505319595337
    4. 'with' → logprob: -3.459505319595337
    5. '<|end|>' → logprob: -3.959505319595337
    6. 's' → logprob: -5.459505558013916
    7. 'avec' → logprob: -5.459505558013916
    8. ' entre' → logprob: -5.459505558013916
    9. ' de' → logprob: -6.209505558013916
    10. ' between' → logprob: -6.709505558013916

Token 260: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3419269919395447
    2. 'les' → logprob: -1.4669270515441895
    3. ' le' → logprob: -3.7169270515441895
    4. 'la' → logprob: -4.0919270515441895
    5. ' les' → logprob: -4.7169270515441895
    6. ' la' → logprob: -5.8419270515441895
    7. 'un' → logprob: -6.0919270515441895
    8. 'l' → logprob: -6.7169270515441895
    9. 'x' → logprob: -7.0919270515441895
    10. 'the' → logprob: -7.2169270515441895

Token 261: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7804205417633057
    2. ' cercle' → logprob: -1.4054205417633057
    3. 'm' → logprob: -2.1554205417633057
    4. 'mur' → logprob: -2.2804205417633057
    5. 'circle' → logprob: -4.030420303344727
    6. ' circle' → logprob: -4.155420303344727
    7. 'cer' → logprob: -4.405420303344727
    8. 'x' → logprob: -4.530420303344727
    9. ' mur' → logprob: -5.030420303344727
    10. 'axe' → logprob: -6.717920303344727

Token 262: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3073315918445587
    2. ' (' → logprob: -2.3073315620422363
    3. 'def' → logprob: -3.1823315620422363
    4. '(' → logprob: -3.3073315620422363
    5. ',' → logprob: -3.5573315620422363
    6. '.' → logprob: -4.432331562042236
    7. 'import' → logprob: -5.432331562042236
    8. '(s' → logprob: -5.557331562042236
    9. ' de' → logprob: -5.682331562042236
    10. '(pos' → logprob: -5.682331562042236

Token 263: '=' (ID: 28)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9013521671295166
    2. '   ' → logprob: -1.6513521671295166
    3. ' while' → logprob: -1.7763521671295166
    4. ')' → logprob: -2.5263521671295166
    5. ',' → logprob: -2.6513521671295166
    6. '(' → logprob: -3.9013521671295166
    7. ' (' → logprob: -4.5263519287109375
    8. 'radius' → logprob: -5.0263519287109375
    9. '  ' → logprob: -5.4013519287109375
    10. ':' → logprob: -5.6513519287109375

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24594751000404358
    2. 'R' → logprob: -1.7459474802017212
    3. ' R' → logprob: -3.6209475994110107
    4. ' ' → logprob: -4.120947360992432
    5. 'r' → logprob: -7.870947360992432
    6. '0' → logprob: -9.87094783782959
    7. '  ' → logprob: -11.24594783782959
    8. 'radius' → logprob: -11.24594783782959
    9. '```' → logprob: -11.55844783782959
    10. '   ' → logprob: -11.55844783782959

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29951924085617065
    2. ',' → logprob: -1.9245193004608154
    3. 'def' → logprob: -3.7995193004608154
    4. 'while' → logprob: -3.9245193004608154
    5. '.' → logprob: -4.049519062042236
    6. ')' → logprob: -4.299519062042236
    7. ' while' → logprob: -4.799519062042236
    8. ':' → logprob: -4.799519062042236
    9. '    
' → logprob: -5.424519062042236
    10. 'import' → logprob: -5.924519062042236

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10295690596103668
    2. ',' → logprob: -2.852957010269165
    3. '
' → logprob: -4.352956771850586
    4. '    
' → logprob: -4.477956771850586
    5. '.' → logprob: -5.477956771850586
    6. ')' → logprob: -5.852956771850586
    7. ' while' → logprob: -6.602956771850586
    8. ':' → logprob: -6.852956771850586
    9. 'def' → logprob: -6.977956771850586
    10. 'while' → logprob: -6.977956771850586

Token 267: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.019195372238755226
    2. '   ' → logprob: -4.394195556640625
    3. ' while' → logprob: -5.269195556640625
    4. 'for' → logprob: -6.894195556640625
    5. 't' → logprob: -8.394195556640625
    6. 'def' → logprob: -9.394195556640625
    7. '
' → logprob: -10.019195556640625
    8. 'dx' → logprob: -10.394195556640625
    9. 'v' → logprob: -10.769195556640625
    10. 'distance' → logprob: -11.519195556640625

Token 268: ' puis' (ID: 18766)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.017032651230692863
    2. 'for' → logprob: -5.142032623291016
    3. '   ' → logprob: -5.392032623291016
    4. ' while' → logprob: -5.642032623291016
    5. 't' → logprob: -6.267032623291016
    6. 'a' → logprob: -8.392032623291016
    7. 'def' → logprob: -8.892032623291016
    8. 'x' → logprob: -9.017032623291016
    9. 'r' → logprob: -9.267032623291016
    10. '#' → logprob: -9.517032623291016

Token 269: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4075513184070587
    2. 'on' → logprob: -2.1575512886047363
    3. ' calc' → logprob: -2.1575512886047363
    4. '   ' → logprob: -3.9075512886047363
    5. ' réfléch' → logprob: -4.282551288604736
    6. 'calcul' → logprob: -5.032551288604736
    7. ' calcul' → logprob: -5.157551288604736
    8. 'def' → logprob: -5.282551288604736
    9. 'calc' → logprob: -5.407551288604736
    10. '#' → logprob: -5.532551288604736

Token 270: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.3992665112018585
    2. 'cal' → logprob: -1.8992664813995361
    3. 'calc' → logprob: -2.149266481399536
    4. 'calcul' → logprob: -4.774266719818115
    5. 'dé' → logprob: -4.774266719818115
    6. ' avance' → logprob: -5.274266719818115
    7. 'compute' → logprob: -5.524266719818115
    8. 'avance' → logprob: -5.524266719818115
    9. ' boucle' → logprob: -5.649266719818115
    10. 'proj' → logprob: -6.274266719818115

Token 271: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.025913208723068237
    2. 'uler' → logprob: -4.400913238525391
    3. 'ulate' → logprob: -4.900913238525391
    4. 'ul' → logprob: -5.400913238525391
    5. '   ' → logprob: -8.65091323852539
    6. 'er' → logprob: -8.90091323852539
    7. 'ules' → logprob: -9.02591323852539
    8. 'ulte' → logprob: -9.27591323852539
    9. 'uer' → logprob: -9.40091323852539
    10. 'ulé' → logprob: -9.40091323852539

Token 272: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2225974202156067
    2. ' le' → logprob: -1.972597360610962
    3. 'le' → logprob: -3.472597360610962
    4. 'la' → logprob: -3.847597360610962
    5. ' l' → logprob: -5.597597599029541
    6. 'l' → logprob: -6.847597599029541
    7. ' ' → logprob: -7.097597599029541
    8. ' t' → logprob: -7.722597599029541
    9. '   ' → logprob: -8.097597122192383
    10. ',' → logprob: -8.097597122192383

Token 273: ''inter' (ID: 55731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6177548170089722
    2. ''inter' → logprob: -1.2427548170089722
    3. 'intersection' → logprob: -2.1177549362182617
    4. ''instant' → logprob: -3.7427549362182617
    5. ''' → logprob: -4.492754936218262
    6. ''é' → logprob: -5.117754936218262
    7. 'e' → logprob: -6.242754936218262
    8. ' intersection' → logprob: -6.867754936218262
    9. 'distance' → logprob: -7.117754936218262
    10. ''ensemble' → logprob: -7.367754936218262

Token 274: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.00025073037249967456
    2. 'ection' → logprob: -9.250250816345215
    3. 'sect' → logprob: -10.250250816345215
    4. '```' → logprob: -11.000250816345215
    5. 'se' → logprob: -11.125250816345215
    6. 's' → logprob: -11.375250816345215
    7. 'sections' → logprob: -11.500250816345215
    8. 'action' → logprob: -11.500250816345215
    9. 'ception' → logprob: -11.625250816345215
    10. '   ' → logprob: -12.125250816345215

Token 275: ' avec' (ID: 3937)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.345547080039978
    2. 's' → logprob: -1.845547080039978
    3. '_point' → logprob: -1.845547080039978
    4. 'point' → logprob: -2.3455471992492676
    5. ' point' → logprob: -2.7205471992492676
    6. ' avec' → logprob: -2.9705471992492676
    7. 'with' → logprob: -3.0955471992492676
    8. ' with' → logprob: -3.3455471992492676
    9. ',' → logprob: -3.3455471992492676
    10. 't' → logprob: -4.345547199249268

Token 276: ' l' (ID: 305)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9146361351013184
    2. 'le' → logprob: -1.4146361351013184
    3. ' la' → logprob: -1.6646361351013184
    4. ' les' → logprob: -2.9146361351013184
    5. 'les' → logprob: -3.0396361351013184
    6. 'the' → logprob: -4.164636135101318
    7. ' the' → logprob: -4.289636135101318
    8. 'la' → logprob: -4.289636135101318
    9. 'l' → logprob: -5.539636135101318
    10. 'def' → logprob: -6.164636135101318

Token 277: ''origine' (ID: 89355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3404518961906433
    2. 'a' → logprob: -1.465451955795288
    3. ''' → logprob: -4.090451717376709
    4. ''intérieur' → logprob: -4.340451717376709
    5. 'es' → logprob: -5.090451717376709
    6. ''instant' → logprob: -5.715451717376709
    7. ''autre' → logprob: -5.840451717376709
    8. ''objet' → logprob: -6.840451717376709
    9. 'em' → logprob: -7.090451717376709
    10. ''extérieur' → logprob: -7.215451717376709

Token 278: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5691404938697815
    2. '   ' → logprob: -1.4441404342651367
    3. ':' → logprob: -2.1941404342651367
    4. ',' → logprob: -3.5691404342651367
    5. 'while' → logprob: -4.694140434265137
    6. '<|end|>' → logprob: -4.944140434265137
    7. '  
' → logprob: -5.319140434265137
    8. '

' → logprob: -5.319140434265137
    9. '    
' → logprob: -5.444140434265137
    10. 'n' → logprob: -5.444140434265137

Token 279: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1875178962945938
    2. ' while' → logprob: -2.4375178813934326
    3. '   ' → logprob: -2.6875178813934326
    4. 'for' → logprob: -4.937518119812012
    5. 't' → logprob: -5.687518119812012
    6. 'i' → logprob: -5.937518119812012
    7. ' for' → logprob: -7.312518119812012
    8. '
' → logprob: -7.562518119812012
    9. 'w' → logprob: -8.187518119812012
    10. 'n' → logprob: -8.437518119812012

Token 281: ' Si' (ID: 7832)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19107134640216827
    2. '   ' → logprob: -2.0660712718963623
    3. ' while' → logprob: -3.3160712718963623
    4. 'for' → logprob: -4.816071510314941
    5. '
' → logprob: -6.941071510314941
    6. ' for' → logprob: -7.816071510314941
    7. 'i' → logprob: -8.191071510314941
    8. 'n' → logprob: -8.816071510314941
    9. '    
' → logprob: -8.941071510314941
    10. 'x' → logprob: -9.066071510314941

Token 282: ' on' (ID: 402)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8573736548423767
    2. ' norm' → logprob: -1.3573737144470215
    3. ' pos' → logprob: -2.1073737144470215
    4. 'pos' → logprob: -2.7323737144470215
    5. 'dist' → logprob: -3.1073737144470215
    6. 'norm' → logprob: -3.4823737144470215
    7. ' abs' → logprob: -3.6073737144470215
    8. ' vel' → logprob: -4.6073737144470215
    9. 'abs' → logprob: -5.2323737144470215
    10. ' not' → logprob: -5.7323737144470215

Token 283: ' touche' (ID: 77303)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8369962573051453
    2. ' pos' → logprob: -0.9619962573051453
    3. ' dist' → logprob: -2.08699631690979
    4. 'dist' → logprob: -3.46199631690979
    5. ' atteint' → logprob: -5.211996078491211
    6. ' trouve' → logprob: -5.336996078491211
    7. '(pos' → logprob: -5.711996078491211
    8. ' n' → logprob: -5.836996078491211
    9. ' detect' → logprob: -6.336996078491211
    10. 've' → logprob: -6.711996078491211

Token 284: ' l' (ID: 305)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.14136390388011932
    2. ' la' → logprob: -2.7663638591766357
    3. 'le' → logprob: -3.5163638591766357
    4. ' l' → logprob: -4.641364097595215
    5. ' (' → logprob: -4.891364097595215
    6. 'pos' → logprob: -5.516364097595215
    7. '(pos' → logprob: -5.516364097595215
    8. ' un' → logprob: -5.766364097595215
    9. ' une' → logprob: -6.766364097595215
    10. ' ' → logprob: -6.891364097595215

Token 285: ''origine' (ID: 89355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8091070055961609
    2. ''' → logprob: -1.8091070652008057
    3. 'e' → logprob: -2.1841070652008057
    4. ''espace' → logprob: -3.0591070652008057
    5. ''origine' → logprob: -3.3091070652008057
    6. ''intérieur' → logprob: -3.3091070652008057
    7. ''objet' → logprob: -4.184106826782227
    8. ''end' → logprob: -4.309106826782227
    9. ''instant' → logprob: -4.309106826782227
    10. ''extérieur' → logprob: -4.434106826782227

Token 286: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06515546143054962
    2. ':' → logprob: -3.565155506134033
    3. ' ,' → logprob: -4.565155506134033
    4. ' or' → logprob: -4.690155506134033
    5. '   ' → logprob: -5.190155506134033
    6. ' ou' → logprob: -5.815155506134033
    7. ' (' → logprob: -6.190155506134033
    8. ' :' → logprob: -6.940155506134033
    9. ' et' → logprob: -7.690155506134033
    10. ' and' → logprob: -8.065155029296875

Token 287: ' ren' (ID: 5427)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0192689895629883
    2. 'return' → logprob: -1.2692689895629883
    3. ' return' → logprob: -1.5192689895629883
    4. ' break' → logprob: -2.7692689895629883
    5. '   ' → logprob: -2.8942689895629883
    6. '       ' → logprob: -4.519268989562988
    7. '    ' → logprob: -5.644268989562988
    8. ' retourne' → logprob: -6.269268989562988
    9. ' ' → logprob: -6.769268989562988
    10. '	break' → logprob: -7.769268989562988

Token 288: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.022809894755482674
    2. 'v' → logprob: -3.8978099822998047
    3. 'voy' → logprob: -6.272809982299805
    4. 'vo' → logprob: -9.272809982299805
    5. 't' → logprob: -9.397809982299805
    6. 'voi' → logprob: -9.647809982299805
    7. 'voit' → logprob: -10.272809982299805
    8. 'return' → logprob: -10.522809982299805
    9. '```' → logprob: -11.272809982299805
    10. 'e' → logprob: -11.397809982299805

Token 289: ' la' (ID: 557)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2401036024093628
    2. ' dist' → logprob: -1.4901036024093628
    3. ' True' → logprob: -1.6151036024093628
    4. '"' → logprob: -2.1151037216186523
    5. 'dist' → logprob: -2.3651037216186523
    6. 'int' → logprob: -3.4901037216186523
    7. ' "' → logprob: -4.490103721618652
    8. 'distance' → logprob: -5.240103721618652
    9. 'pos' → logprob: -5.490103721618652
    10. 'False' → logprob: -5.740103721618652

Token 290: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9922584891319275
    2. ' dist' → logprob: -1.3672585487365723
    3. 'distance' → logprob: -1.6172585487365723
    4. ' distance' → logprob: -2.8672585487365723
    5. '"' → logprob: -3.1172585487365723
    6. 'pos' → logprob: -3.7422585487365723
    7. 'D' → logprob: -4.992258548736572
    8. ' "' → logprob: -5.117258548736572
    9. 'int' → logprob: -5.492258548736572
    10. ' pos' → logprob: -5.617258548736572

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1158447340130806
    2. '
' → logprob: -2.4908447265625
    3. '    
' → logprob: -4.2408447265625
    4. 'while' → logprob: -6.1158447265625
    5. '  
' → logprob: -6.3658447265625
    6. ':' → logprob: -6.4908447265625
    7. ' while' → logprob: -6.6158447265625
    8. ',' → logprob: -6.6158447265625
    9. '\n' → logprob: -7.6158447265625
    10. '   
' → logprob: -7.7408447265625

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012333989143371582
    2. '    
' → logprob: -5.012333869934082
    3. '
' → logprob: -6.012333869934082
    4. ':' → logprob: -6.512333869934082
    5. ',' → logprob: -7.637333869934082
    6. '<|end|>' → logprob: -7.887333869934082
    7. '  
' → logprob: -8.262333869934082
    8. ')' → logprob: -9.137333869934082
    9. ' 
' → logprob: -9.262333869934082
    10. 'def' → logprob: -10.012333869934082

Token 293: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.360637366771698
    2. '
' → logprob: -2.1106374263763428
    3. 'while' → logprob: -2.3606374263763428
    4. ' while' → logprob: -3.3606374263763428
    5. 'i' → logprob: -4.235637187957764
    6. 'for' → logprob: -4.485637187957764
    7. ' for' → logprob: -5.110637187957764
    8. '    
' → logprob: -5.110637187957764
    9. 'n' → logprob: -5.360637187957764
    10. ' i' → logprob: -6.235637187957764

Token 294: ' Si' (ID: 7832)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.056413523852825165
    2. ' while' → logprob: -3.556413412094116
    3. '   ' → logprob: -4.181413650512695
    4. 'for' → logprob: -4.556413650512695
    5. ' for' → logprob: -8.056413650512695
    6. 't' → logprob: -10.056413650512695
    7. 'steps' → logprob: -10.431413650512695
    8. 'step' → logprob: -10.806413650512695
    9. 'i' → logprob: -10.806413650512695
    10. 'distance' → logprob: -10.931413650512695

Token 295: ' on' (ID: 402)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.17849288880825043
    2. ' not' → logprob: -2.553492784500122
    3. ' pos' → logprob: -3.428492784500122
    4. 'pos' → logprob: -3.678492784500122
    5. 'dist' → logprob: -3.803492784500122
    6. 'not' → logprob: -6.053493022918701
    7. ' vel' → logprob: -7.053493022918701
    8. ' abs' → logprob: -7.303493022918701
    9. 'abs' → logprob: -7.928493022918701
    10. ' la' → logprob: -8.303492546081543

Token 296: ' dépasse' (ID: 165701)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8953741788864136
    2. ' n' → logprob: -1.3953741788864136
    3. 'n' → logprob: -1.8953741788864136
    4. 'continue' → logprob: -3.395374298095703
    5. ''ve' → logprob: -3.395374298095703
    6. ' atteint' → logprob: -4.395374298095703
    7. ' ne' → logprob: -4.645374298095703
    8. 'pos' → logprob: -4.645374298095703
    9. 've' → logprob: -4.895374298095703
    10. ''arrive' → logprob: -5.145374298095703

Token 297: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.13565683364868164
    2. 'D' → logprob: -2.2606568336486816
    3. ' la' → logprob: -4.635656833648682
    4. ' ' → logprob: -4.760656833648682
    5. ' le' → logprob: -5.885656833648682
    6. '   ' → logprob: -8.010656356811523
    7. ' l' → logprob: -8.510656356811523
    8. 'l' → logprob: -8.760656356811523
    9. 'le' → logprob: -9.010656356811523
    10. ' ' → logprob: -9.135656356811523

Token 298: ' sans' (ID: 9828)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043008092790842056
    2. ' :' → logprob: -3.7930080890655518
    3. ',' → logprob: -4.418008327484131
    4. ':return' → logprob: -5.793008327484131
    5. ' or' → logprob: -5.918008327484131
    6. '   ' → logprob: -7.293008327484131
    7. ' ,' → logprob: -8.043007850646973
    8. ' and' → logprob: -8.918007850646973
    9. '>' → logprob: -9.293007850646973
    10. ':
' → logprob: -9.543007850646973

Token 299: ' toucher' (ID: 127487)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6301201581954956
    2. 'return' → logprob: -2.005120277404785
    3. 'ren' → logprob: -2.380120277404785
    4. 'inter' → logprob: -2.380120277404785
    5. 'ret' → logprob: -3.255120277404785
    6. 'atte' → logprob: -3.630120277404785
    7. ' toucher' → logprob: -3.755120277404785
    8. 'tr' → logprob: -4.880120277404785
    9. 're' → logprob: -5.130120277404785
    10. 'touch' → logprob: -5.255120277404785

Token 300: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5918944478034973
    2. ' l' → logprob: -0.8418944478034973
    3. 'origin' → logprob: -5.341894626617432
    4. 'origine' → logprob: -5.466894626617432
    5. 'r' → logprob: -5.841894626617432
    6. '0' → logprob: -6.841894626617432
    7. ' ' → logprob: -7.591894626617432
    8. ' origin' → logprob: -7.716894626617432
    9. 'return' → logprob: -7.966894626617432
    10. ',' → logprob: -8.091894149780273

Token 301: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5865932703018188
    2. ' return' → logprob: -0.8365932703018188
    3. '   ' → logprob: -4.586593151092529
    4. 'break' → logprob: -8.211593627929688
    5. ' break' → logprob: -9.836593627929688
    6. '	return' → logprob: -9.836593627929688
    7. '    ' → logprob: -11.461593627929688
    8. ':return' → logprob: -12.711593627929688
    9. 'print' → logprob: -12.836593627929688
    10. ' ' → logprob: -13.211593627929688

Token 302: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.419350802898407
    2. ' return' → logprob: -1.1693508625030518
    3. 'break' → logprob: -4.044350624084473
    4. ' break' → logprob: -4.294350624084473
    5. 'ret' → logprob: -7.544350624084473
    6. '	return' → logprob: -9.919350624084473
    7. 'raise' → logprob: -10.669350624084473
    8. 'continue' → logprob: -10.794350624084473
    9. '   ' → logprob: -10.919350624084473
    10. ' retourne' → logprob: -10.919350624084473

Token 303: 'voie' (ID: 70072)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4178454577922821
    2. 'v' → logprob: -1.9178454875946045
    3. '   ' → logprob: -2.9178454875946045
    4. 'ew' → logprob: -3.4178454875946045
    5. 'voie' → logprob: -4.167845249176025
    6. 't' → logprob: -4.292845249176025
    7. 'd' → logprob: -4.542845249176025
    8. 'eturn' → logprob: -4.667845249176025
    9. 'return' → logprob: -4.792845249176025
    10. 'eur' → logprob: -5.042845249176025

Token 304: ' impossible' (ID: 19786)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6511191129684448
    2. 'D' → logprob: -1.2761191129684448
    3. '-' → logprob: -1.9011191129684448
    4. 'float' → logprob: -4.276119232177734
    5. 'dist' → logprob: -4.401119232177734
    6. '-D' → logprob: -4.651119232177734
    7. ' None' → logprob: -5.026119232177734
    8. '-dist' → logprob: -5.776119232177734
    9. ' -' → logprob: -6.151119232177734
    10. ' D' → logprob: -7.401119232177734

Token 305: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2607554793357849
    2. '   ' → logprob: -1.5107555389404297
    3. '    
' → logprob: -5.01075553894043
    4. 'while' → logprob: -7.38575553894043
    5. ' while' → logprob: -8.13575553894043
    6. 'n' → logprob: -8.51075553894043
    7. '\n' → logprob: -8.76075553894043
    8. 'for' → logprob: -9.01075553894043
    9. '  
' → logprob: -9.13575553894043
    10. ' 
' → logprob: -9.51075553894043

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3785906136035919
    2. '
' → logprob: -1.2535905838012695
    3. '    
' → logprob: -4.1285905838012695
    4. ' 
' → logprob: -5.8785905838012695
    5. 'while' → logprob: -5.8785905838012695
    6. ' while' → logprob: -6.0035905838012695
    7. '\n' → logprob: -6.8785905838012695
    8. 'for' → logprob: -7.1285905838012695
    9. '   
' → logprob: -7.7535905838012695
    10. '  
' → logprob: -7.8785905838012695

Token 307: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01363964844495058
    2. 'for' → logprob: -4.638639450073242
    3. ' while' → logprob: -6.263639450073242
    4. '   ' → logprob: -6.888639450073242
    5. 't' → logprob: -7.388639450073242
    6. 'i' → logprob: -9.263639450073242
    7. 'step' → logprob: -9.388639450073242
    8. 'steps' → logprob: -10.388639450073242
    9. 'w' → logprob: -10.638639450073242
    10. '
' → logprob: -10.763639450073242

Token 308: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.010132967494428158
    2. 'dist' → logprob: -5.010132789611816
    3. ' True' → logprob: -5.760132789611816
    4. 'True' → logprob: -8.385132789611816
    5. '	dist' → logprob: -11.135132789611816
    6. '(dist' → logprob: -11.760132789611816
    7. 'Dist' → logprob: -12.760132789611816
    8. '_dist' → logprob: -13.010132789611816
    9. ' ' → logprob: -13.385132789611816
    10. '1' → logprob: -14.010132789611816

Token 309: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.3590025305747986
    2. '_' → logprob: -1.2340025901794434
    3. ' <' → logprob: -4.984002590179443
    4. ' _' → logprob: -6.234002590179443
    5. '<' → logprob: -7.109002590179443
    6. ' ' → logprob: -7.609002590179443
    7. '_<' → logprob: -8.609002113342285
    8. '<_' → logprob: -9.859002113342285
    9. '_tot' → logprob: -9.984002113342285
    10. '_Total' → logprob: -10.359002113342285

Token 310: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0010925926035270095
    2. '<' → logprob: -6.876092433929443
    3. ' ' → logprob: -10.251092910766602
    4. ' <=' → logprob: -10.751092910766602
    5. ' +' → logprob: -13.501092910766602
    6. ' <
' → logprob: -13.876092910766602
    7. '+' → logprob: -14.751092910766602
    8. '<D' → logprob: -15.876092910766602
    9. '[' → logprob: -16.5010929107666
    10. '<=' → logprob: -16.6260929107666

Token 311: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.06196824833750725
    2. ' D' → logprob: -2.8119683265686035
    3. '	D' → logprob: -14.936967849731445
    4. '   ' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.561967849731445
    6. '>D' → logprob: -19.186967849731445
    7. '_D' → logprob: -20.061967849731445
    8. ' ' → logprob: -20.436967849731445
    9. '<D' → logprob: -20.686967849731445
    10. 'd' → logprob: -20.686967849731445

Token 312: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009332557674497366
    2. ':
' → logprob: -7.0009331703186035
    3. ' :' → logprob: -11.375933647155762
    4. '   ' → logprob: -12.250933647155762
    5. ' and' → logprob: -12.750933647155762
    6. ':

' → logprob: -14.000933647155762
    7. '):' → logprob: -14.250933647155762
    8. 'and' → logprob: -14.500933647155762
    9. ':\' → logprob: -16.125932693481445
    10. ',' → logprob: -16.250932693481445

Token 313: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.5759950876235962
    2. ' EPS' → logprob: -0.8259950876235962
    3. ' ' → logprob: -10.325995445251465
    4. '1' → logprob: -11.450995445251465
    5. '   ' → logprob: -11.700995445251465
    6. 'EP' → logprob: -14.325995445251465
    7. 'E' → logprob: -14.575995445251465
    8. '  ' → logprob: -14.700995445251465
    9. 'eps' → logprob: -14.700995445251465
    10. '0' → logprob: -14.950995445251465

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001761272142175585
    2. ':
' → logprob: -8.750176429748535
    3. ' :' → logprob: -11.500176429748535
    4. '   ' → logprob: -12.250176429748535
    5. '):' → logprob: -13.500176429748535
    6. ' and' → logprob: -14.500176429748535
    7. ':

' → logprob: -15.375176429748535
    8. ':**' → logprob: -15.875176429748535
    9. ',' → logprob: -16.12517547607422
    10. '       ' → logprob: -16.37517547607422

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1671825796365738
    2. '   ' → logprob: -2.792182683944702
    3. 'dx' → logprob: -3.417182683944702
    4. ' dx' → logprob: -4.417182445526123
    5. 'vx' → logprob: -4.667182445526123
    6. 'if' → logprob: -4.792182445526123
    7. 'pos' → logprob: -5.042182445526123
    8. ' vx' → logprob: -5.042182445526123
    9. 'x' → logprob: -5.167182445526123
    10. ' if' → logprob: -5.667182445526123

Token 316: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8163831830024719
    2. '#' (adapté à ' #') → logprob: -1.0663831233978271
    3. 'px' → logprob: -2.441383123397827
    4. 'A' → logprob: -3.066383123397827
    5. 'dx' → logprob: -3.441383123397827
    6. 'ox' → logprob: -3.941383123397827
    7. 'vx' → logprob: -4.566383361816406
    8. 'cx' → logprob: -4.691383361816406
    9. 'x' → logprob: -5.816383361816406
    10. '       ' → logprob: -5.816383361816406

Token 317: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9867666363716125
    2. 'dx' → logprob: -1.6117665767669678
    3. 'px' → logprob: -1.7367665767669678
    4. 'x' → logprob: -2.4867665767669678
    5. 'cx' → logprob: -2.4867665767669678
    6. 'ox' → logprob: -2.7367665767669678
    7. 'A' → logprob: -5.361766815185547
    8. 'pos' → logprob: -5.486766815185547
    9. 'if' → logprob: -6.111766815185547
    10. 'a' → logprob: -6.236766815185547

Token 318: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7919032573699951
    2. '#' → logprob: -0.9169032573699951
    3. 'A' → logprob: -3.041903257369995
    4. 'dx' → logprob: -3.041903257369995
    5. 'px' → logprob: -3.416903257369995
    6. 'ox' → logprob: -4.791903495788574
    7. 'x' → logprob: -5.666903495788574
    8. 'vx' → logprob: -5.791903495788574
    9. 'cx' → logprob: -5.916903495788574
    10. 'ax' → logprob: -7.541903495788574

Token 319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8595679402351379
    2. '#' → logprob: -1.2345678806304932
    3. '       ' → logprob: -2.359567880630493
    4. '.' → logprob: -2.609567880630493
    5. ' #' → logprob: -3.609567880630493
    6. 'import' → logprob: -4.484568119049072
    7. '0' → logprob: -4.484568119049072
    8. 'if' → logprob: -4.734568119049072
    9. '   ' → logprob: -4.734568119049072
    10. ' if' → logprob: -4.984568119049072

Token 320: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28960174322128296
    2. 'a' → logprob: -1.9146018028259277
    3. 'px' → logprob: -3.1646018028259277
    4. 'dx' → logprob: -3.4146018028259277
    5. 'vx' → logprob: -4.789601802825928
    6. 'A' → logprob: -5.664601802825928
    7. ' px' → logprob: -5.914601802825928
    8. 'pos' → logprob: -6.039601802825928
    9. ' #' → logprob: -6.164601802825928
    10. 'x' → logprob: -6.289601802825928

Token 321: ' vér' (ID: 42524)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.2517703771591187
    2. '#' → logprob: -1.6267703771591187
    3. 'cal' → logprob: -2.251770496368408
    4. 'a' → logprob: -2.376770496368408
    5. ' calc' → logprob: -2.376770496368408
    6. 'x' → logprob: -3.126770496368408
    7. 'cherche' → logprob: -3.501770496368408
    8. 'dx' → logprob: -4.251770496368408
    9. 'coeff' → logprob: -4.251770496368408
    10. 'v' → logprob: -4.251770496368408

Token 322: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -6.957014556974173e-05
    2. 'if' → logprob: -9.750069618225098
    3. 'f' → logprob: -12.750069618225098
    4. 'ifi' → logprob: -13.250069618225098
    5. 'ife' → logprob: -13.375069618225098
    6. 'ifié' → logprob: -13.875069618225098
    7. 'ifier' → logprob: -14.000069618225098
    8. 'ifiez' → logprob: -14.250069618225098
    9. '```' → logprob: -14.375069618225098
    10. 'ficie' → logprob: -14.875069618225098

Token 323: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.2349460870027542
    2. 'si' → logprob: -1.6099461317062378
    3. ' if' → logprob: -5.359946250915527
    4. 'if' → logprob: -5.609946250915527
    5. 's' → logprob: -7.609946250915527
    6. ' s' → logprob: -7.984946250915527
    7. 'que' → logprob: -9.484946250915527
    8. 'l' → logprob: -10.109946250915527
    9. ' la' → logprob: -10.234946250915527
    10. ' que' → logprob: -10.359946250915527

Token 324: ' on' (ID: 402)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5934123396873474
    2. 'abs' → logprob: -2.343412399291992
    3. 'norm' → logprob: -2.593412399291992
    4. ' norm' → logprob: -2.843412399291992
    5. ' math' → logprob: -2.843412399291992
    6. 'math' → logprob: -2.968412399291992
    7. ' abs' → logprob: -3.218412399291992
    8. ' pos' → logprob: -3.343412399291992
    9. '(pos' → logprob: -3.968412399291992
    10. 'px' → logprob: -5.843412399291992

Token 325: ' touche' (ID: 77303)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.22673761844635
    2. 't' → logprob: -1.60173761844635
    3. ' touche' → logprob: -2.1017374992370605
    4. 'is' → logprob: -2.2267374992370605
    5. ' a' → logprob: -2.7267374992370605
    6. 'a' → logprob: -2.8517374992370605
    7. ' peut' → logprob: -2.9767374992370605
    8. ' est' → logprob: -3.8517374992370605
    9. ' atteint' → logprob: -4.1017374992370605
    10. 'pe' → logprob: -4.7267374992370605

Token 326: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43346524238586426
    2. ' (' → logprob: -1.1834652423858643
    3. ' l' → logprob: -3.4334652423858643
    4. 'l' → logprob: -4.558465003967285
    5. '   ' → logprob: -7.558465003967285
    6. '(l' → logprob: -7.808465003967285
    7. ' ' → logprob: -7.933465003967285
    8. '0' → logprob: -8.308465003967285
    9. ' la' → logprob: -8.433465003967285
    10. 'le' → logprob: -8.933465003967285

Token 327: ' centre' (ID: 13268)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07202865183353424
    2. ' (' → logprob: -3.822028636932373
    3. 'origine' → logprob: -4.072028636932373
    4. '0' → logprob: -4.322028636932373
    5. 'origin' → logprob: -5.322028636932373
    6. 'point' → logprob: -5.322028636932373
    7. ' centre' → logprob: -6.822028636932373
    8. 'or' → logprob: -6.822028636932373
    9. ' point' → logprob: -6.947028636932373
    10. 'centre' → logprob: -7.197028636932373

Token 328: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1355109065771103
    2. ' (' → logprob: -3.0105109214782715
    3. ' if' → logprob: -3.2605109214782715
    4. ' and' → logprob: -4.5105109214782715
    5. '(' → logprob: -4.7605109214782715
    6. 'if' → logprob: -5.1355109214782715
    7. ' et' → logprob: -5.8855109214782715
    8. ':' → logprob: -6.0105109214782715
    9. 'and' → logprob: -6.1355109214782715
    10. ' or' → logprob: -6.2605109214782715

Token 329: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8109332323074341
    2. 'math' → logprob: -1.185933232307434
    3. 'norm' → logprob: -1.810933232307434
    4. ' math' → logprob: -3.0609331130981445
    5. ' norm' → logprob: -4.0609331130981445
    6. 'abs' → logprob: -4.1859331130981445
    7. ' pos' → logprob: -5.4359331130981445
    8. '(math' → logprob: -6.9359331130981445
    9. '(pos' → logprob: -7.4359331130981445
    10. '(norm' → logprob: -7.4359331130981445

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4153549020411447e-05
    2. '.' → logprob: -11.37502384185791
    3. ')' → logprob: -12.25002384185791
    4. ' ,' → logprob: -12.62502384185791
    5. '0' → logprob: -12.75002384185791
    6. ' ' → logprob: -14.62502384185791
    7. '.,' → logprob: -14.62502384185791
    8. 'and' → logprob: -15.87502384185791
    9. ';' → logprob: -16.875024795532227
    10. ' and' → logprob: -16.875024795532227

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. ')' → logprob: -15.505233764648438
    4. '   ' → logprob: -16.380233764648438
    5. '  ' → logprob: -17.630233764648438
    6. ',' → logprob: -17.755233764648438
    7. '
' → logprob: -19.255233764648438
    8. '    ' → logprob: -20.380233764648438
    9. ' )' → logprob: -21.130233764648438
    10. ' ' → logprob: -21.130233764648438

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035637229681015015
    2. '):' → logprob: -3.660637140274048
    3. '       ' → logprob: -5.910637378692627
    4. ')
' → logprob: -6.160637378692627
    5. ' )' → logprob: -6.535637378692627
    6. '):
' → logprob: -7.285637378692627
    7. ' avec' → logprob: -7.535637378692627
    8. '   ' → logprob: -7.660637378692627
    9. ',' → logprob: -7.910637378692627
    10. ' et' → logprob: -8.535636901855469

Token 333: ' avant' (ID: 13339)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007123126997612417
    2. ',' → logprob: -7.7507123947143555
    3. ' if' → logprob: -9.250712394714355
    4. ':' → logprob: -9.750712394714355
    5. '        
' → logprob: -9.750712394714355
    6. 'if' → logprob: -11.000712394714355
    7. ' :' → logprob: -11.750712394714355
    8. '      ' → logprob: -12.000712394714355
    9. ')' → logprob: -12.125712394714355
    10. '        ' → logprob: -12.125712394714355

Token 334: ' le' (ID: 505)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6693163514137268
    2. 'le' → logprob: -1.419316291809082
    3. ' de' → logprob: -2.669316291809082
    4. 'd' → logprob: -2.919316291809082
    5. '   ' → logprob: -3.294316291809082
    6. '       ' → logprob: -3.544316291809082
    7. 'la' → logprob: -3.544316291809082
    8. ' le' → logprob: -5.294316291809082
    9. ' la' → logprob: -5.669316291809082
    10. 'l' → logprob: -5.794316291809082

Token 335: ' mur' (ID: 11426)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.024880224838852882
    2. 'm' → logprob: -4.024880409240723
    3. 'next' → logprob: -6.399880409240723
    4. ' mur' → logprob: -6.899880409240723
    5. ' prochain' → logprob: -6.899880409240723
    6. 'c' → logprob: -7.274880409240723
    7. 'pro' → logprob: -7.649880409240723
    8. 'bord' → logprob: -8.149880409240723
    9. ' next' → logprob: -8.774880409240723
    10. 'R' → logprob: -8.774880409240723

Token 336: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007112328894436359
    2. ' if' → logprob: -5.632112503051758
    3. ':' → logprob: -6.757112503051758
    4. ',' → logprob: -6.882112503051758
    5. 'if' → logprob: -7.382112503051758
    6. '        
' → logprob: -8.257112503051758
    7. '.' → logprob: -8.882112503051758
    8. '
' → logprob: -9.382112503051758
    9. '#' → logprob: -10.882112503051758
    10. ';' → logprob: -11.007112503051758

Token 337: 'ray' (ID: 25430)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8220616579055786
    2. 'if' → logprob: -1.0720616579055786
    3. '):' → logprob: -2.322061538696289
    4. 'pos' → logprob: -3.197061538696289
    5. '       ' → logprob: -3.447061538696289
    6. ' if' → logprob: -4.322061538696289
    7. 'R' → logprob: -4.822061538696289
    8. '):
' → logprob: -4.947061538696289
    9. '0' → logprob: -5.947061538696289
    10. ')
' → logprob: -6.072061538696289

Token 338: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.22193185985088348
    2. ')' → logprob: -2.3469319343566895
    3. '=' → logprob: -2.3469319343566895
    4. ' =' → logprob: -6.0969319343566895
    5. 'onnement' → logprob: -6.3469319343566895
    6. 't' → logprob: -7.3469319343566895
    7. '0' → logprob: -7.9719319343566895
    8. '>' → logprob: -8.096931457519531
    9. 'onne' → logprob: -8.221931457519531
    10. ')
' → logprob: -8.471931457519531

Token 339: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6368287801742554
    2. '):' → logprob: -1.3868287801742554
    3. '=' → logprob: -1.8868287801742554
    4. '):
' → logprob: -3.386828899383545
    5. '):

' → logprob: -4.261828899383545
    6. ' =' → logprob: -4.886828899383545
    7. ').' → logprob: -5.136828899383545
    8. ' )' → logprob: -6.386828899383545
    9. '   ' → logprob: -6.511828899383545
    10. ')
' → logprob: -6.886828899383545

Token 340: '1' (ID: 16)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7660656571388245
    2. ')' → logprob: -0.8910656571388245
    3. '=' → logprob: -2.7660655975341797
    4. '1' → logprob: -3.5160655975341797
    5. '):' → logprob: -4.51606559753418
    6. ' R' → logprob: -4.76606559753418
    7. ').' → logprob: -5.26606559753418
    8. '):
' → logprob: -5.89106559753418
    9. '):

' → logprob: -6.39106559753418
    10. ')
' → logprob: -7.26606559753418

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04788239672780037
    2. '):' → logprob: -3.172882318496704
    3. '):
' → logprob: -6.672882556915283
    4. ')
' → logprob: -6.672882556915283
    5. '       ' → logprob: -6.922882556915283
    6. ' )' → logprob: -7.422882556915283
    7. '):

' → logprob: -7.922882556915283
    8. ').' → logprob: -8.922882080078125
    9. '   ' → logprob: -9.422882080078125
    10. ')

' → logprob: -10.047882080078125

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008635803242214024
    2. ' if' → logprob: -8.250864028930664
    3. '        
' → logprob: -8.375864028930664
    4. '<|end|>' → logprob: -9.000864028930664
    5. ',' → logprob: -9.500864028930664
    6. '        ' → logprob: -9.625864028930664
    7. '
' → logprob: -10.625864028930664
    8. '      ' → logprob: -11.000864028930664
    9. ')' → logprob: -11.000864028930664
    10. 'if' → logprob: -11.375864028930664

Token 343: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6485502123832703
    2. 'oc' → logprob: -1.648550271987915
    3. 'to' → logprob: -2.648550271987915
    4. 'a' → logprob: -2.898550271987915
    5. 'dp' → logprob: -3.023550271987915
    6. '   ' → logprob: -3.148550271987915
    7. 'd' → logprob: -4.523550033569336
    8. 'pos' → logprob: -4.648550033569336
    9. 't' → logprob: -4.648550033569336
    10. 'A' → logprob: -4.898550033569336

Token 344: ' La' (ID: 3038)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.45236921310424805
    2. 'a' → logprob: -1.952369213104248
    3. 'oc' → logprob: -2.577369213104248
    4. 'to' → logprob: -2.702369213104248
    5. 'A' → logprob: -3.827369213104248
    6. 'vec' → logprob: -4.827369213104248
    7. 'ox' → logprob: -4.827369213104248
    8. 'if' → logprob: -5.077369213104248
    9. 'dp' → logprob: -5.077369213104248
    10. '#' → logprob: -5.327369213104248

Token 345: ' traject' (ID: 81313)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.587361216545105
    2. 'a' → logprob: -1.462361216545105
    3. '#' → logprob: -2.2123613357543945
    4. 'px' → logprob: -3.2123613357543945
    5. 'A' → logprob: -3.8373613357543945
    6. 'pos' → logprob: -5.2123613357543945
    7. 'ox' → logprob: -5.3373613357543945
    8. ' dx' → logprob: -5.3373613357543945
    9. 'vx' → logprob: -5.5873613357543945
    10. 'x' → logprob: -5.7123613357543945

Token 346: 'oire' (ID: 31141)
  Prédit: 'oire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.01548578217625618
    2. 'orie' → logprob: -5.015485763549805
    3. 'toire' → logprob: -5.140485763549805
    4. 'ction' → logprob: -6.265485763549805
    5. 'ct' → logprob: -8.265485763549805
    6. 'ore' → logprob: -8.515485763549805
    7. 'que' → logprob: -9.640485763549805
    8. 'ire' → logprob: -9.890485763549805
    9. 'cte' → logprob: -10.015485763549805
    10. 'cto' → logprob: -10.140485763549805

Token 347: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2859827280044556
    2. ' =' → logprob: -1.5359827280044556
    3. 'dx' → logprob: -1.7859827280044556
    4. 'dir' → logprob: -2.660982608795166
    5. '_dx' → logprob: -3.535982608795166
    6. 'vect' → logprob: -3.535982608795166
    7. 'vec' → logprob: -3.660982608795166
    8. 'vx' → logprob: -3.660982608795166
    9. '=(' → logprob: -3.785982608795166
    10. 'v' → logprob: -3.910982608795166

Token 348: ' P' (ID: 398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7268357872962952
    2. ' pos' → logprob: -1.2268357276916504
    3. ' (' → logprob: -2.8518357276916504
    4. '(x' → logprob: -2.9768357276916504
    5. '(pos' → logprob: -3.3518357276916504
    6. '(' → logprob: -3.3518357276916504
    7. 'x' → logprob: -4.22683572769165
    8. 'p' → logprob: -5.60183572769165
    9. '(px' → logprob: -5.72683572769165
    10. '(lambda' → logprob: -5.85183572769165

Token 349: '(t' (ID: 2025)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0340081453323364
    2. ' +' → logprob: -1.4090081453323364
    3. '0' → logprob: -2.034008026123047
    4. ' =' → logprob: -2.409008026123047
    5. 'os' → logprob: -3.034008026123047
    6. '+' → logprob: -3.034008026123047
    7. '_x' → logprob: -3.909008026123047
    8. 'r' → logprob: -4.159008026123047
    9. '(t' → logprob: -4.284008026123047
    10. '=' → logprob: -4.284008026123047

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027654136065393686
    2. ')=' → logprob: -6.25276517868042
    3. '=' → logprob: -8.627765655517578
    4. ' =' → logprob: -8.752765655517578
    5. 'x' → logprob: -8.877765655517578
    6. '[' → logprob: -9.002765655517578
    7. ' +' → logprob: -9.752765655517578
    8. '+' → logprob: -9.752765655517578
    9. ' )' → logprob: -10.127765655517578
    10. ')+' → logprob: -10.627765655517578

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386886328458786
    2. ' =' → logprob: -1.1368863582611084
    3. '=(' → logprob: -11.636886596679688
    4. 'x' → logprob: -12.636886596679688
    5. ')' → logprob: -13.761886596679688
    6. ' =(' → logprob: -14.636886596679688
    7. '0' → logprob: -15.136886596679688
    8. '=
' → logprob: -15.136886596679688
    9. '=lambda' → logprob: -15.261886596679688
    10. '[' → logprob: -15.261886596679688

Token 352: ' pos' (ID: 1253)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.2562755346298218
    2. '(pos' → logprob: -1.5062755346298218
    3. ' (' → logprob: -5.756275653839111
    4. 'pos' → logprob: -7.131275653839111
    5. '(py' → logprob: -8.631275177001953
    6. '(' → logprob: -8.756275177001953
    7. ' pos' → logprob: -11.256275177001953
    8. '(pi' → logprob: -12.006275177001953
    9. 'px' → logprob: -12.131275177001953
    10. '(x' → logprob: -12.631275177001953

Token 353: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048923783004283905
    2. '+' → logprob: -3.0489237308502197
    3. '[' → logprob: -9.04892349243164
    4. ' ' → logprob: -9.17392349243164
    5. ' plus' → logprob: -9.29892349243164
    6. ',' → logprob: -11.92392349243164
    7. '   ' → logprob: -12.29892349243164
    8. ' ' → logprob: -12.54892349243164
    9. '    ' → logprob: -13.17392349243164
    10. '  ' → logprob: -13.54892349243164

Token 354: ' vel' (ID: 7326)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5358679294586182
    2. 't' → logprob: -1.1608679294586182
    3. ' t' → logprob: -3.535867929458618
    4. ' (' → logprob: -3.660867929458618
    5. '(' → logprob: -3.660867929458618
    6. '(v' → logprob: -4.410867691040039
    7. 'vel' → logprob: -4.785867691040039
    8. '   ' → logprob: -8.410867691040039
    9. ' vel' → logprob: -9.160867691040039
    10. ' ' → logprob: -9.410867691040039

Token 355: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.10610733181238174
    2. '*' → logprob: -2.856107234954834
    3. ' *' → logprob: -3.231107234954834
    4. 't' → logprob: -6.231107234954834
    5. ' t' → logprob: -6.731107234954834
    6. '   ' → logprob: -8.606107711791992
    7. ' ' → logprob: -10.106107711791992
    8. ',' → logprob: -10.106107711791992
    9. '*time' → logprob: -10.231107711791992
    10. '
' → logprob: -10.606107711791992

Token 356: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24113768339157104
    2. '       ' → logprob: -1.9911377429962158
    3. '\n' → logprob: -2.866137742996216
    4. ',' → logprob: -4.616137504577637
    5. '  
' → logprob: -6.116137504577637
    6. ',
' → logprob: -6.241137504577637
    7. '
' → logprob: -6.491137504577637
    8. '        
' → logprob: -6.741137504577637
    9. 't' → logprob: -7.241137504577637
    10. '\' → logprob: -7.491137504577637

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004603149369359016
    2. ',' → logprob: -6.129603385925293
    3. '\n' → logprob: -7.504603385925293
    4. '        
' → logprob: -7.879603385925293
    5. '<|end|>' → logprob: -8.004603385925293
    6. '   ' → logprob: -8.254603385925293
    7. ')' → logprob: -8.254603385925293
    8. '  
' → logprob: -9.254603385925293
    9. ':' → logprob: -10.004603385925293
    10. '
' → logprob: -10.004603385925293

Token 358: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0796205922961235
    2. 't' → logprob: -3.829620599746704
    3. '\n' → logprob: -3.829620599746704
    4. ' t' → logprob: -4.579620361328125
    5. 'v' → logprob: -5.454620361328125
    6. 'x' → logprob: -5.579620361328125
    7. '   ' → logprob: -5.704620361328125
    8. '        
' → logprob: -6.079620361328125
    9. '
' → logprob: -6.204620361328125
    10. 'A' → logprob: -6.579620361328125

Token 359: ' ->' (ID: 2747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3247777223587036
    2. 'A' → logprob: -1.3247777223587036
    3. '#' → logprob: -4.574777603149414
    4. ' a' → logprob: -7.199777603149414
    5. '   ' → logprob: -8.699777603149414
    6. ' A' → logprob: -9.199777603149414
    7. 'dx' → logprob: -10.949777603149414
    8. 'Ax' → logprob: -11.074777603149414
    9. '#a' → logprob: -11.199777603149414
    10. 'px' → logprob: -11.199777603149414

Token 360: ' distance' (ID: 9324)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5418823957443237
    2. ' a' → logprob: -1.5418823957443237
    3. '#' → logprob: -2.2918825149536133
    4. 'A' → logprob: -2.4168825149536133
    5. '(px' → logprob: -2.7918825149536133
    6. ' (' → logprob: -3.0418825149536133
    7. '(u' → logprob: -3.1668825149536133
    8. ' A' → logprob: -3.2918825149536133
    9. 'On' → logprob: -4.041882514953613
    10. ' px' → logprob: -4.166882514953613

Token 361: ' du' (ID: 1462)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.18746542930603027
    2. '_squared' → logprob: -2.9374654293060303
    3. '_vect' → logprob: -3.9374654293060303
    4. ' =' → logprob: -4.062465667724609
    5. 'to' → logprob: -4.062465667724609
    6. '=' → logprob: -4.312465667724609
    7. 'au' → logprob: -4.312465667724609
    8. '_sq' → logprob: -4.437465667724609
    9. '_oc' → logprob: -5.437465667724609
    10. 'toc' → logprob: -6.187465667724609

Token 362: ' point' (ID: 2438)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.7615891695022583
    2. 'point' → logprob: -1.0115891695022583
    3. ' point' → logprob: -2.8865890502929688
    4. 'pos' → logprob: -3.8865890502929688
    5. 'vect' → logprob: -4.011589050292969
    6. ' centre' → logprob: -4.011589050292969
    7. '0' → logprob: -4.386589050292969
    8. 'origine' → logprob: -4.511589050292969
    9. ' vect' → logprob: -4.886589050292969
    10. 'c' → logprob: -5.261589050292969

Token 363: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.6370055079460144
    2. ' au' → logprob: -1.1370055675506592
    3. '(pos' → logprob: -3.137005567550659
    4. '(' → logprob: -3.762005567550659
    5. 'pos' → logprob: -3.887005567550659
    6. '0' → logprob: -4.38700532913208
    7. ' (' → logprob: -4.63700532913208
    8. ' ' → logprob: -4.88700532913208
    9. ' à' → logprob: -5.13700532913208
    10. '=' → logprob: -5.51200532913208

Token 364: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6682111620903015
    2. '(' → logprob: -0.7932111620903015
    3. '0' → logprob: -4.668210983276367
    4. ' (' → logprob: -4.668210983276367
    5. ' l' → logprob: -5.168210983276367
    6. 'pos' → logprob: -5.418210983276367
    7. 'la' → logprob: -5.918210983276367
    8. 'origin' → logprob: -6.793210983276367
    9. 'origine' → logprob: -7.293210983276367
    10. ' ' → logprob: -7.668210983276367

Token 365: ''origine' (ID: 89355)
  Prédit: 'origine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origine' → logprob: -0.44623076915740967
    2. '(' → logprob: -1.5712307691574097
    3. ''origine' → logprob: -2.071230888366699
    4. '0' → logprob: -3.821230888366699
    5. 'origin' → logprob: -5.821230888366699
    6. 'orig' → logprob: -7.696230888366699
    7. '[' → logprob: -8.9462308883667
    8. 'org' → logprob: -9.0712308883667
    9. ' (' → logprob: -9.1962308883667
    10. ' origine' → logprob: -9.6962308883667

Token 366: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7219163775444031
    2. '=' → logprob: -1.7219164371490479
    3. ' =' → logprob: -1.8469164371490479
    4. ':' → logprob: -2.221916437149048
    5. '²' → logprob: -4.221916198730469
    6. 't' → logprob: -4.721916198730469
    7. '2' → logprob: -5.096916198730469
    8. '   ' → logprob: -5.221916198730469
    9. ' :' → logprob: -5.221916198730469
    10. 's' → logprob: -5.471916198730469

Token 367: ' ||' (ID: 2398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0237442255020142
    2. ' math' → logprob: -1.5237442255020142
    3. ' pos' → logprob: -2.0237441062927246
    4. ' (' → logprob: -2.3987441062927246
    5. 'math' → logprob: -2.3987441062927246
    6. '(pos' → logprob: -2.8987441062927246
    7. '(' → logprob: -4.148744106292725
    8. 'abs' → logprob: -4.273744106292725
    9. ' abs' → logprob: -5.023744106292725
    10. '(math' → logprob: -5.023744106292725

Token 368: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.059780679643154144
    2. '(pos' → logprob: -3.0597805976867676
    3. ' pos' → logprob: -4.934780597686768
    4. ' (' → logprob: -5.809780597686768
    5. '(' → logprob: -7.434780597686768
    6. '(px' → logprob: -8.934781074523926
    7. '(P' → logprob: -9.559781074523926
    8. 'px' → logprob: -9.934781074523926
    9. 'P' → logprob: -10.309781074523926
    10. '[pos' → logprob: -11.184781074523926

Token 369: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22651071846485138
    2. '+' → logprob: -1.601510763168335
    3. '+t' → logprob: -6.851510524749756
    4. ' ' → logprob: -12.226511001586914
    5. ' plus' → logprob: -12.601511001586914
    6. ' -' → logprob: -12.601511001586914
    7. 's' → logprob: -12.726511001586914
    8. '[' → logprob: -12.726511001586914
    9. '+r' → logprob: -12.851511001586914
    10. '+p' → logprob: -12.851511001586914

Token 370: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.06354404240846634
    2. ' vel' → logprob: -2.9385440349578857
    3. '(' → logprob: -5.063544273376465
    4. ' (' → logprob: -6.688544273376465
    5. '   ' → logprob: -7.813544273376465
    6. 't' → logprob: -8.563544273376465
    7. '(t' → logprob: -8.813544273376465
    8. ' t' → logprob: -9.063544273376465
    9. ' ' → logprob: -10.063544273376465
    10. 'pos' → logprob: -10.938544273376465

Token 371: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.01346183568239212
    2. '*' → logprob: -4.388462066650391
    3. ' *' → logprob: -7.013462066650391
    4. 't' → logprob: -10.76346206665039
    5. '*u' → logprob: -12.51346206665039
    6. '*(' → logprob: -12.51346206665039
    7. '*object' → logprob: -12.88846206665039
    8. '   ' → logprob: -13.13846206665039
    9. '*time' → logprob: -13.26346206665039
    10. ' t' → logprob: -13.38846206665039

Token 372: '||' (ID: 12439)
  Prédit: '||'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '||' → logprob: -0.0054361699149012566
    2. ' ||' → logprob: -5.255435943603516
    3. ')||' → logprob: -9.130435943603516
    4. ')' → logprob: -10.755435943603516
    5. '||||' → logprob: -11.755435943603516
    6. '||
' → logprob: -11.755435943603516
    7. '|||' → logprob: -11.755435943603516
    8. '|' → logprob: -11.880435943603516
    9. ''||' → logprob: -11.880435943603516
    10. ')**' → logprob: -12.130435943603516

Token 373: '=' (ID: 28)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05301782488822937
    2. '   ' → logprob: -4.178017616271973
    3. '<|end|>' → logprob: -4.553017616271973
    4. '=' → logprob: -4.678017616271973
    5. ' =' → logprob: -6.053017616271973
    6. ')' → logprob: -6.178017616271973
    7. '2' → logprob: -6.303017616271973
    8. '_squared' → logprob: -6.553017616271973
    9. ' <=' → logprob: -6.678017616271973
    10. '
' → logprob: -6.928017616271973

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023282520473003387
    2. ' ' → logprob: -3.773282527923584
    3. ' math' → logprob: -10.648282051086426
    4. 'math' → logprob: -12.710782051086426
    5. '=' → logprob: -12.898282051086426
    6. ' t' → logprob: -13.898282051086426
    7. '   ' → logprob: -13.960782051086426
    8. '1' → logprob: -14.148282051086426
    9. '  ' → logprob: -14.648282051086426
    10. 't' → logprob: -14.835782051086426

Token 375: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4635355472564697
    2. ')' → logprob: -1.7135355472564697
    3. '
' → logprob: -2.7135355472564697
    4. ',' → logprob: -3.0885355472564697
    5. ':' → logprob: -4.213535308837891
    6. '        ' → logprob: -4.713535308837891
    7. '<|end|>' → logprob: -4.838535308837891
    8. '\n' → logprob: -5.088535308837891
    9. 'if' → logprob: -5.338535308837891
    10. '.' → logprob: -5.588535308837891

Token 376: ' chercher' (ID: 79602)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36795222759246826
    2. ' t' → logprob: -1.7429522275924683
    3. 't' → logprob: -2.367952346801758
    4. ' math' → logprob: -4.492952346801758
    5. ' ' → logprob: -4.617952346801758
    6. 'None' → logprob: -5.742952346801758
    7. '(t' → logprob: -6.242952346801758
    8. '-' → logprob: -6.242952346801758
    9. ' solve' → logprob: -6.742952346801758
    10. ' (' → logprob: -6.867952346801758

Token 377: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47565996646881104
    2. ' t' → logprob: -0.975659966468811
    3. ' for' → logprob: -7.6006598472595215
    4. ' roots' → logprob: -7.8506598472595215
    5. 'roots' → logprob: -8.72566032409668
    6. ' ' → logprob: -8.85066032409668
    7. ' le' → logprob: -9.10066032409668
    8. ' la' → logprob: -9.60066032409668
    9. '_t' → logprob: -10.72566032409668
    10. '	t' → logprob: -10.72566032409668

Token 378: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278390049934387
    2. ' =' → logprob: -2.027838945388794
    3. '=' → logprob: -2.527838945388794
    4. '        ' → logprob: -3.152838945388794
    5. 's' → logprob: -3.402838945388794
    6. '0' → logprob: -3.527838945388794
    7. ' ' → logprob: -3.902838945388794
    8. '<|end|>' → logprob: -4.527839183807373
    9. ',' → logprob: -4.902839183807373
    10. ':' → logprob: -4.902839183807373

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1343059241771698
    2. '<|end|>' → logprob: -3.134305953979492
    3. ' if' → logprob: -3.509305953979492
    4. '        ' → logprob: -5.009305953979492
    5. '
' → logprob: -5.134305953979492
    6. 'if' → logprob: -5.259305953979492
    7. ':' → logprob: -5.509305953979492
    8. '=' → logprob: -5.634305953979492
    9. '[' → logprob: -5.634305953979492
    10. ' ' → logprob: -5.759305953979492

Token 380: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026472369208931923
    2. 'a' → logprob: -5.151472568511963
    3. 'if' → logprob: -5.526472568511963
    4. ' if' → logprob: -5.651472568511963
    5. ' a' → logprob: -6.151472568511963
    6. '-' → logprob: -6.151472568511963
    7. 'A' → logprob: -6.651472568511963
    8. 't' → logprob: -6.901472568511963
    9. 'x' → logprob: -6.901472568511963
    10. '=' → logprob: -7.151472568511963

Token 381: ' En' (ID: 2130)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4581885039806366
    2. 'A' → logprob: -1.083188533782959
    3. ' a' → logprob: -3.958188533782959
    4. '       ' → logprob: -5.333188533782959
    5. ' A' → logprob: -5.458188533782959
    6. 't' → logprob: -8.5831880569458
    7. 'c' → logprob: -8.8331880569458
    8. '   ' → logprob: -9.0831880569458
    9. 'if' → logprob: -9.2081880569458
    10. 'b' → logprob: -9.9581880569458

Token 382: ' fait' (ID: 7473)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.157643437385559
    2. 'coeff' → logprob: -1.407643437385559
    3. ' t' → logprob: -1.907643437385559
    4. 'suite' → logprob: -2.9076433181762695
    5. ' coeff' → logprob: -3.6576433181762695
    6. ' discrimin' → logprob: -3.9076433181762695
    7. ' fait' → logprob: -4.2826433181762695
    8. ' pos' → logprob: -4.5326433181762695
    9. 'def' → logprob: -4.5326433181762695
    10. ' a' → logprob: -4.9076433181762695

Token 383: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1725434064865112
    2. '       ' → logprob: -1.4225434064865112
    3. ',' → logprob: -1.9225434064865112
    4. 'a' → logprob: -2.172543525695801
    5. ' a' → logprob: -3.172543525695801
    6. 't' → logprob: -3.297543525695801
    7. '#' → logprob: -4.047543525695801
    8. '=' → logprob: -4.172543525695801
    9. ':' → logprob: -4.422543525695801
    10. ' A' → logprob: -4.422543525695801

Token 384: ' cherche' (ID: 52345)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.31581512093544006
    2. 'continue' → logprob: -2.4408152103424072
    3. ' cherche' → logprob: -3.0658152103424072
    4. 'a' → logprob: -3.9408152103424072
    5. 'va' → logprob: -4.315814971923828
    6. ' continue' → logprob: -4.440814971923828
    7. ':' → logprob: -4.690814971923828
    8. 've' → logprob: -4.815814971923828
    9. 'n' → logprob: -4.940814971923828
    10. 's' → logprob: -5.065814971923828

Token 385: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7838720083236694
    2. 'les' → logprob: -1.5338720083236694
    3. ' t' → logprob: -2.533872127532959
    4. 'le' → logprob: -2.908872127532959
    5. ' les' → logprob: -3.158872127532959
    6. ' un' → logprob: -3.158872127532959
    7. 'un' → logprob: -3.908872127532959
    8. 'a' → logprob: -3.908872127532959
    9. ' le' → logprob: -4.158872127532959
    10. ' la' → logprob: -4.533872127532959

Token 386: ''il' (ID: 14683)
  Prédit: 'olutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olutions' → logprob: -0.7924438714981079
    2. 'ol' → logprob: -1.792443871498108
    3. 'olution' → logprob: -2.2924437522888184
    4. '=' → logprob: -2.2924437522888184
    5. 'olve' → logprob: -2.7924437522888184
    6. 't' → logprob: -3.6674437522888184
    7. 'qrt' → logprob: -3.9174437522888184
    8. 'i' → logprob: -4.042443752288818
    9. 'ols' → logprob: -4.167443752288818
    10. '=(' → logprob: -4.542443752288818

Token 387: ' existe' (ID: 19498)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46345779299736023
    2. ''agit' → logprob: -2.7134578227996826
    3. 'a' → logprob: -2.8384578227996826
    4. 'atisf' → logprob: -3.2134578227996826
    5. 'u' → logprob: -3.5884578227996826
    6. ' existe' → logprob: -3.7134578227996826
    7. '[' → logprob: -4.2134575843811035
    8. 'qrt' → logprob: -4.7134575843811035
    9. ' y' → logprob: -4.7134575843811035
    10. 'quare' → logprob: -4.8384575843811035

Token 388: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6053395867347717
    2. 't' → logprob: -1.105339527130127
    3. ' un' → logprob: -2.105339527130127
    4. 'un' → logprob: -7.355339527130127
    5. ' ' → logprob: -8.355340003967285
    6. ' une' → logprob: -8.980340003967285
    7. '	t' → logprob: -9.605340003967285
    8. ' a' → logprob: -9.730340003967285
    9. '   ' → logprob: -10.605340003967285
    10. ' des' → logprob: -11.480340003967285

Token 389: '>' (ID: 29)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.21676774322986603
    2. '>=' → logprob: -1.8417677879333496
    3. ' such' → logprob: -3.7167677879333496
    4. ' >' → logprob: -5.21676778793335
    5. ' ' → logprob: -5.96676778793335
    6. ' ≥' → logprob: -6.59176778793335
    7. '>' → logprob: -6.84176778793335
    8. '≥' → logprob: -6.96676778793335
    9. '<|end|>' → logprob: -8.841767311096191
    10. 'such' → logprob: -9.341767311096191

Token 390: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006318493280559778
    2. '0' → logprob: -5.13131856918335
    3. ' ' → logprob: -8.631318092346191
    4. '-' → logprob: -9.506318092346191
    5. ' =' → logprob: -10.131318092346191
    6. '>=' → logprob: -10.131318092346191
    7. '=-' → logprob: -11.131318092346191
    8. '=None' → logprob: -11.506318092346191
    9. '=
' → logprob: -12.631318092346191
    10. '=}' → logprob: -12.756318092346191

Token 391: ' tel' (ID: 10716)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.059602025896310806
    2. ':' → logprob: -3.9346020221710205
    3. ',' → logprob: -4.4346022605896
    4. ' ' → logprob: -5.1846022605896
    5. '<|end|>' → logprob: -5.1846022605896
    6. 'such' → logprob: -5.8096022605896
    7. ' for' → logprob: -6.0596022605896
    8. ' :' → logprob: -6.0596022605896
    9. ')' → logprob: -7.0596022605896
    10. ' telles' → logprob: -7.1846022605896

Token 392: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0018687831470742822
    2. ' que' → logprob: -6.501868724822998
    3. 'qu' → logprob: -8.501869201660156
    4. 'that' → logprob: -8.751869201660156
    5. ' that' → logprob: -13.126869201660156
    6. 'quel' → logprob: -13.626869201660156
    7. 'ques' → logprob: -14.626869201660156
    8. '   ' → logprob: -15.126869201660156
    9. 't' → logprob: -15.376869201660156
    10. '```' → logprob: -15.751869201660156

Token 393: ' P' (ID: 398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20213507115840912
    2. '(pos' → logprob: -2.5771350860595703
    3. ' pos' → logprob: -2.7021350860595703
    4. 'norm' → logprob: -4.32713508605957
    5. ' (' → logprob: -4.82713508605957
    6. 'dot' → logprob: -5.07713508605957
    7. 'math' → logprob: -5.70213508605957
    8. ' math' → logprob: -6.20213508605957
    9. ' norm' → logprob: -6.20213508605957
    10. 'dist' → logprob: -7.07713508605957

Token 394: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.17899218201637268
    2. ' +' → logprob: -2.05399227142334
    3. '+' → logprob: -4.30399227142334
    4. '+t' → logprob: -5.17899227142334
    5. '[' → logprob: -5.30399227142334
    6. 't' → logprob: -5.67899227142334
    7. ' (' → logprob: -6.42899227142334
    8. '(' → logprob: -6.55399227142334
    9. 'x' → logprob: -6.92899227142334
    10. ' ' → logprob: -7.05399227142334

Token 395: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: '=(' (ID: 9893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13060979545116425
    2. '==' → logprob: -3.1306097507476807
    3. ' ==' → logprob: -3.2556097507476807
    4. '+' → logprob: -4.13060998916626
    5. ' +' → logprob: -4.13060998916626
    6. 'import' → logprob: -6.00560998916626
    7. '=' → logprob: -6.88060998916626
    8. ')' → logprob: -6.88060998916626
    9. ')==' → logprob: -6.88060998916626
    10. ' =' → logprob: -8.255609512329102

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.000123977661133
    4. ')' → logprob: -15.125123977661133
    5. '```' → logprob: -17.125123977661133
    6. ' (' → logprob: -17.375123977661133
    7. '۰' → logprob: -17.875123977661133
    8. ',' → logprob: -18.000123977661133
    9. '   ' → logprob: -18.375123977661133
    10. '00' → logprob: -18.750123977661133

Token 398: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6972997188568115
    2. ',' → logprob: -0.8222997188568115
    3. '[' → logprob: -3.3222997188568115
    4. ' -' → logprob: -4.572299957275391
    5. 'x' → logprob: -5.197299957275391
    6. '-' → logprob: -6.322299957275391
    7. ' ,' → logprob: -6.447299957275391
    8. '+' → logprob: -6.447299957275391
    9. '0' → logprob: -6.697299957275391
    10. ' )' → logprob: -6.822299957275391

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -13.875123977661133
    4. ',' → logprob: -17.000123977661133
    5. '<|end|>' → logprob: -18.125123977661133
    6. '   ' → logprob: -18.750123977661133
    7. '  ' → logprob: -18.875123977661133
    8. ' ' → logprob: -19.000123977661133
    9. '
' → logprob: -19.250123977661133
    10. '۰' → logprob: -19.375123977661133

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030624382197856903
    2. '),' → logprob: -7.0030622482299805
    3. '):' → logprob: -7.1280622482299805
    4. ' -' → logprob: -8.00306224822998
    5. ' )' → logprob: -8.12806224822998
    6. ' +' → logprob: -8.62806224822998
    7. ')
' → logprob: -9.25306224822998
    8. '+' → logprob: -9.37806224822998
    9. '-' → logprob: -9.75306224822998
    10. '):
' → logprob: -10.00306224822998

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00808683317154646
    2. '<|end|>' → logprob: -5.258086681365967
    3. ',' → logprob: -6.633086681365967
    4. ')' → logprob: -8.383087158203125
    5. ' if' → logprob: -8.633087158203125
    6. '
' → logprob: -9.008087158203125
    7. '        
' → logprob: -9.008087158203125
    8. '<|end|>' → logprob: -9.008087158203125
    9. ' ' → logprob: -9.133087158203125
    10. ' (' → logprob: -9.633087158203125

Token 402: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07510419934988022
    2. ' t' → logprob: -3.575104236602783
    3. ' if' → logprob: -4.325104236602783
    4. ' 
' → logprob: -5.200104236602783
    5. ')' → logprob: -5.825104236602783
    6. ':' → logprob: -5.825104236602783
    7. '        ' → logprob: -5.950104236602783
    8. ',' → logprob: -6.200104236602783
    9. ' \' → logprob: -6.200104236602783
    10. 't' → logprob: -6.450104236602783

Token 403: ' P' (ID: 398)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9184937477111816
    2. 't' → logprob: -1.1684937477111816
    3. 'a' → logprob: -1.7934937477111816
    4. '#' → logprob: -3.4184937477111816
    5. ' A' → logprob: -4.043493747711182
    6. 'if' → logprob: -4.043493747711182
    7. ' t' → logprob: -4.168493747711182
    8. ' a' → logprob: -4.418493747711182
    9. 'delta' → logprob: -4.918493747711182
    10. '   ' → logprob: -5.043493747711182

Token 404: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.8539142608642578
    2. 't' → logprob: -1.3539142608642578
    3. '[' → logprob: -2.478914260864258
    4. '0' → logprob: -2.603914260864258
    5. 'os' → logprob: -2.978914260864258
    6. ' =' → logprob: -3.353914260864258
    7. '(' → logprob: -3.603914260864258
    8. '=' → logprob: -4.728914260864258
    9. '_t' → logprob: -4.728914260864258
    10. '[t' → logprob: -4.728914260864258

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20186761021614075
    2. '[' → logprob: -2.5768675804138184
    3. ' +' → logprob: -3.8268675804138184
    4. ' -' → logprob: -4.201867580413818
    5. ')[' → logprob: -4.451867580413818
    6. ' )' → logprob: -4.701867580413818
    7. ' =' → logprob: -4.701867580413818
    8. '=' → logprob: -4.826867580413818
    9. ' ==' → logprob: -4.826867580413818
    10. '+' → logprob: -4.951867580413818

Token 406: '=(' (ID: 9893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3798084855079651
    2. ' =' → logprob: -2.1298084259033203
    3. '=' → logprob: -2.6298084259033203
    4. ' +' → logprob: -2.7548084259033203
    5. '+' → logprob: -4.00480842590332
    6. '==' → logprob: -4.37980842590332
    7. ' -' → logprob: -4.87980842590332
    8. ' ==' → logprob: -5.00480842590332
    9. '-' → logprob: -5.12980842590332
    10. 'x' → logprob: -5.25480842590332

Token 407: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.013497239910066128
    2. '0' → logprob: -5.763497352600098
    3. 'px' → logprob: -5.763497352600098
    4. ' pos' → logprob: -5.888497352600098
    5. '-pos' → logprob: -5.888497352600098
    6. '(pos' → logprob: -7.388497352600098
    7. '(' → logprob: -8.013497352600098
    8. '-' → logprob: -9.013497352600098
    9. '(px' → logprob: -9.263497352600098
    10. '(-' → logprob: -9.263497352600098

Token 408: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2405204176902771
    2. ')' → logprob: -1.6155204772949219
    3. ',' → logprob: -4.990520477294922
    4. ' -' → logprob: -5.365520477294922
    5. 'x' → logprob: -6.740520477294922
    6. ')[' → logprob: -7.240520477294922
    7. '-' → logprob: -8.115520477294922
    8. '+' → logprob: -8.365520477294922
    9. ' +' → logprob: -8.615520477294922
    10. '0' → logprob: -8.615520477294922

Token 409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002338144404347986
    2. ' ' → logprob: -8.37523365020752
    3. ')' → logprob: -12.87523365020752
    4. '-' → logprob: -15.93773365020752
    5. ' -' → logprob: -16.375234603881836
    6. '<|end|>' → logprob: -16.500234603881836
    7. ',' → logprob: -16.562734603881836
    8. '   ' → logprob: -16.937734603881836
    9. '  ' → logprob: -17.062734603881836
    10. '[' → logprob: -17.437734603881836

Token 410: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5962876081466675
    2. ')' → logprob: -0.8462876081466675
    3. '-' → logprob: -4.221287727355957
    4. ' )' → logprob: -5.471287727355957
    5. '[' → logprob: -7.221287727355957
    6. '),' → logprob: -8.971287727355957
    7. ',' → logprob: -9.596287727355957
    8. ' +' → logprob: -9.846287727355957
    9. ')-' → logprob: -9.971287727355957
    10. ')-(' → logprob: -10.346287727355957

Token 411: ' =>' (ID: 871)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7914311289787292
    2. ':' → logprob: -1.166431188583374
    3. ')' → logprob: -2.416431188583374
    4. ' =' → logprob: -3.416431188583374
    5. '=' → logprob: -3.666431188583374
    6. ' +' → logprob: -3.916431188583374
    7. '-' → logprob: -4.041430950164795
    8. '       ' → logprob: -4.291430950164795
    9. ',' → logprob: -5.041430950164795
    10. '   ' → logprob: -5.541430950164795

Token 412: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1320628970861435
    2. '-pos' → logprob: -3.6320629119873047
    3. ' pos' → logprob: -3.7570629119873047
    4. '(' → logprob: -4.132062911987305
    5. '(-' → logprob: -4.257062911987305
    6. '0' → logprob: -4.257062911987305
    7. ' (' → logprob: -4.882062911987305
    8. 't' → logprob: -5.132062911987305
    9. ' -' → logprob: -5.257062911987305
    10. 'px' → logprob: -6.132062911987305

Token 413: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030570924282073975
    2. ' +' → logprob: -6.00305700302124
    3. '+' → logprob: -8.128057479858398
    4. ' -' → logprob: -8.628057479858398
    5. '-' → logprob: -10.378057479858398
    6. ')' → logprob: -10.378057479858398
    7. 'x' → logprob: -11.253057479858398
    8. ' [' → logprob: -11.628057479858398
    9. ' ' → logprob: -12.378057479858398
    10. ' plus' → logprob: -12.378057479858398

Token 414: ' vel' (ID: 7326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7290209531784058
    2. '(t' → logprob: -1.4790209531784058
    3. '(v' → logprob: -1.9790209531784058
    4. '(-' → logprob: -2.7290210723876953
    5. 'vel' → logprob: -3.1040210723876953
    6. ' (' → logprob: -3.9790210723876953
    7. '(x' → logprob: -5.229021072387695
    8. 'tuple' → logprob: -5.229021072387695
    9. 'vx' → logprob: -5.354021072387695
    10. 't' → logprob: -5.979021072387695

Token 415: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.008915906772017479
    2. '*' → logprob: -4.758915901184082
    3. ' *' → logprob: -8.258915901184082
    4. '*(-' → logprob: -10.758915901184082
    5. '*(' → logprob: -11.383915901184082
    6. '*time' → logprob: -13.258915901184082
    7. '*-' → logprob: -13.508915901184082
    8. 't' → logprob: -13.633915901184082
    9. '*=' → logprob: -14.383915901184082
    10. '*object' → logprob: -14.508915901184082

Token 416: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4440408945083618
    2. '==' → logprob: -1.4440408945083618
    3. ' =' → logprob: -1.4440408945083618
    4. '[' → logprob: -1.9440408945083618
    5. ' ==' → logprob: -2.0690407752990723
    6. ')' → logprob: -4.319040775299072
    7. ')==' → logprob: -5.569040775299072
    8. '=(-' → logprob: -6.694040775299072
    9. '<|end|>' → logprob: -7.444040775299072
    10. 't' → logprob: -7.819040775299072

Token 417: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023119196703191847
    2. ' (' → logprob: -8.37523078918457
    3. '0' → logprob: -14.62523078918457
    4. ' ' → logprob: -16.62523078918457
    5. '(-' → logprob: -17.12523078918457
    6. '[' → logprob: -17.75023078918457
    7. '(False' → logprob: -18.25023078918457
    8. '(None' → logprob: -18.75023078918457
    9. '(
' → logprob: -20.00023078918457
    10. '(True' → logprob: -20.37523078918457

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01822216808795929
    2. '(' → logprob: -4.018222332000732
    3. ' ' → logprob: -9.768221855163574
    4. ' (' → logprob: -11.393221855163574
    5. '-' → logprob: -13.393221855163574
    6. '(-' → logprob: -14.018221855163574
    7. '[' → logprob: -15.018221855163574
    8. '   ' → logprob: -15.455721855163574
    9. ')' → logprob: -15.518221855163574
    10. '```' → logprob: -16.01822280883789

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6280954480171204
    2. ' -' → logprob: -2.0030953884124756
    3. ')' → logprob: -2.1280953884124756
    4. '-' → logprob: -2.2530953884124756
    5. '[' → logprob: -2.2530953884124756
    6. ')-' → logprob: -7.878095626831055
    7. ' ,' → logprob: -8.378095626831055
    8. ' )' → logprob: -8.628095626831055
    9. ')[' → logprob: -8.753095626831055
    10. '0' → logprob: -8.878095626831055

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002993544621858746
    2. ' ' → logprob: -8.125299453735352
    3. ')' → logprob: -12.750299453735352
    4. ',' → logprob: -15.625299453735352
    5. ' -' → logprob: -16.50029945373535
    6. '  ' → logprob: -17.37529945373535
    7. '۰' → logprob: -17.93779945373535
    8. '-' → logprob: -18.06279945373535
    9. ' ' → logprob: -18.18779945373535
    10. '<|end|>' → logprob: -18.50029945373535

Token 421: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011248565278947353
    2. ' )' → logprob: -7.251124858856201
    3. ')t' → logprob: -9.251124382019043
    4. ')
' → logprob: -9.376124382019043
    5. '),' → logprob: -9.751124382019043
    6. ' -' → logprob: -10.126124382019043
    7. '<|end|>' → logprob: -10.501124382019043
    8. '   ' → logprob: -10.751124382019043
    9. ')return' → logprob: -11.251124382019043
    10. ',' → logprob: -11.501124382019043

Token 422: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09533681720495224
    2. '
' → logprob: -2.5953369140625
    3. ' if' → logprob: -5.4703369140625
    4. '   ' → logprob: -5.9703369140625
    5. ')' → logprob: -6.3453369140625
    6. '<|end|>' → logprob: -6.3453369140625
    7. '        
' → logprob: -6.7203369140625
    8. ',' → logprob: -6.7203369140625
    9. '<|end|>' → logprob: -7.3453369140625
    10. '\n' → logprob: -7.5953369140625

Token 423: ' t' (ID: 260)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5226306915283203
    2. ' -' → logprob: -2.0226306915283203
    3. 't' → logprob: -2.1476306915283203
    4. ' t' → logprob: -2.5226306915283203
    5. ' (-' → logprob: -3.2726306915283203
    6. '-t' → logprob: -4.39763069152832
    7. '-' → logprob: -4.39763069152832
    8. '(' → logprob: -4.89763069152832
    9. '-v' → logprob: -6.02263069152832
    10. ' (' → logprob: -6.02263069152832

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2822979688644409
    2. ' =' → logprob: -1.407297968864441
    3. '*' → logprob: -7.1572980880737305
    4. 's' → logprob: -9.53229808807373
    5. '*=' → logprob: -9.53229808807373
    6. '==' → logprob: -10.03229808807373
    7. ' ==' → logprob: -10.28229808807373
    8. '=(-' → logprob: -10.40729808807373
    9. '[' → logprob: -10.65729808807373
    10. '=-' → logprob: -10.65729808807373

Token 425: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.013120577670633793
    2. '-' → logprob: -5.013120651245117
    3. ' (-' → logprob: -5.638120651245117
    4. ' -' → logprob: -6.263120651245117
    5. '(' → logprob: -8.388120651245117
    6. '-m' → logprob: -8.388120651245117
    7. '-t' → logprob: -9.263120651245117
    8. '-n' → logprob: -9.638120651245117
    9. '-s' → logprob: -10.138120651245117
    10. 'None' → logprob: -10.638120651245117

Token 426: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008754019625484943
    2. '(pos' → logprob: -4.758754253387451
    3. ' pos' → logprob: -9.508753776550293
    4. '(' → logprob: -10.258753776550293
    5. ' (' → logprob: -11.258753776550293
    6. 'px' → logprob: -12.133753776550293
    7. '(
' → logprob: -12.258753776550293
    8. '(px' → logprob: -12.258753776550293
    9. '[pos' → logprob: -13.758753776550293
    10. '	pos' → logprob: -15.008753776550293

Token 427: '/' (ID: 14)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6060808522743173e-05
    2. '0' → logprob: -10.625025749206543
    3. ' [' → logprob: -14.250025749206543
    4. ' /' → logprob: -14.875025749206543
    5. ' ' → logprob: -15.875025749206543
    6. '(' → logprob: -15.875025749206543
    7. '/' → logprob: -15.875025749206543
    8. 'x' → logprob: -16.37502670288086
    9. '   ' → logprob: -16.37502670288086
    10. '[
' → logprob: -16.87502670288086

Token 428: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.007534698583185673
    2. '(' → logprob: -5.257534503936768
    3. ' vel' → logprob: -6.257534503936768
    4. ' (' → logprob: -9.007534980773926
    5. 'vx' → logprob: -9.507534980773926
    6. '(
' → logprob: -10.007534980773926
    7. 'velocity' → logprob: -10.757534980773926
    8. 'pos' → logprob: -11.257534980773926
    9. 'velo' → logprob: -11.257534980773926
    10. '   ' → logprob: -11.257534980773926

Token 429: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011825896799564362
    2. '       ' → logprob: -5.136826038360596
    3. ' if' → logprob: -5.261826038360596
    4. '
' → logprob: -8.386825561523438
    5. ',' → logprob: -8.886825561523438
    6. '   ' → logprob: -9.386825561523438
    7. 'if' → logprob: -10.011825561523438
    8. '<|end|>' → logprob: -10.261825561523438
    9. '        
' → logprob: -10.511825561523438
    10. ')' → logprob: -10.636825561523438

Token 430: 'com' (ID: 639)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14259080588817596
    2. ')' → logprob: -2.6425907611846924
    3. '0' → logprob: -3.2675907611846924
    4. 'if' → logprob: -5.0175909996032715
    5. '(' → logprob: -5.1425909996032715
    6. 't' → logprob: -5.6425909996032715
    7. ' if' → logprob: -5.8925909996032715
    8. 'x' → logprob: -6.2675909996032715
    9. ' (' → logprob: -7.2675909996032715
    10. 'v' → logprob: -7.7675909996032715

Token 431: 'pos' (ID: 1103)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46329206228256226
    2. 'p' → logprob: -1.213292121887207
    3. 'ponent' → logprob: -2.713292121887207
    4. '/' → logprob: -5.713292121887207
    5. 'plex' → logprob: -6.838292121887207
    6. 'ponents' → logprob: -6.838292121887207
    7. '(' → logprob: -7.713292121887207
    8. ')' → logprob: -8.213292121887207
    9. '/(' → logprob: -8.463292121887207
    10. 'px' → logprob: -8.588292121887207

Token 432: 'antes' (ID: 5193)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02169928327202797
    2. 'ant' → logprob: -4.27169942855835
    3. 'ent' → logprob: -5.52169942855835
    4. '0' → logprob: -7.27169942855835
    5. 'ante' → logprob: -7.52169942855835
    6. 'nt' → logprob: -7.89669942855835
    7. '[-' → logprob: -8.021698951721191
    8. 's' → logprob: -8.271698951721191
    9. 'ents' → logprob: -8.771698951721191
    10. 't' → logprob: -8.896698951721191

Token 433: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04557082802057266
    2. ')' → logprob: -3.6705708503723145
    3. 'x' → logprob: -4.4205708503723145
    4. '0' → logprob: -5.2955708503723145
    5. ' if' → logprob: -7.4205708503723145
    6. ',' → logprob: -8.045570373535156
    7. ' )' → logprob: -8.295570373535156
    8. ' x' → logprob: -9.295570373535156
    9. 'if' → logprob: -9.420570373535156
    10. ' ' → logprob: -9.670570373535156

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05483928695321083
    2. '[' → logprob: -3.5548393726348877
    3. ' if' → logprob: -4.304839134216309
    4. '
' → logprob: -5.554839134216309
    5. '        
' → logprob: -6.054839134216309
    6. 'if' → logprob: -7.304839134216309
    7. ':' → logprob: -7.429839134216309
    8. '        ' → logprob: -7.429839134216309
    9. '   ' → logprob: -7.554839134216309
    10. ' ' → logprob: -8.179839134216309

Token 435: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.094472736120224
    2. ' if' → logprob: -3.219472646713257
    3. '   ' → logprob: -4.094472885131836
    4. '[' → logprob: -4.219472885131836
    5. 'if' → logprob: -4.844472885131836
    6. '0' → logprob: -6.344472885131836
    7. '
' → logprob: -6.594472885131836
    8. ' ' → logprob: -7.219472885131836
    9. '        
' → logprob: -7.219472885131836
    10. ')' → logprob: -7.344472885131836

Token 436: ' mais' (ID: 2899)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9643346667289734
    2. 't' → logprob: -1.3393347263336182
    3. ' t' → logprob: -1.8393347263336182
    4. 'if' → logprob: -2.214334726333618
    5. '       ' → logprob: -2.464334726333618
    6. '   ' → logprob: -6.589334487915039
    7. 'x' → logprob: -7.589334487915039
    8. '        ' → logprob: -7.714334487915039
    9. '    ' → logprob: -8.464334487915039
    10. ' ' → logprob: -8.964334487915039

Token 437: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.175400733947754
    2. 'vel' → logprob: -1.175400733947754
    3. ' vel' → logprob: -1.425400733947754
    4. 'if' → logprob: -2.675400733947754
    5. ' il' → logprob: -4.050400733947754
    6. ' on' → logprob: -4.300400733947754
    7. ' si' → logprob: -4.675400733947754
    8. ' t' → logprob: -5.425400733947754
    9. 'pos' → logprob: -5.675400733947754
    10. ' pos' → logprob: -5.925400733947754

Token 438: ' veut' (ID: 41653)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.44073137640953064
    2. 'ne' → logprob: -2.0657312870025635
    3. ' doit' → logprob: -2.4407312870025635
    4. 'continue' → logprob: -2.9407312870025635
    5. 'cherche' → logprob: -3.0657312870025635
    6. 'n' → logprob: -4.440731525421143
    7. 'pe' → logprob: -4.815731525421143
    8. ' ne' → logprob: -5.440731525421143
    9. ' continue' → logprob: -6.065731525421143
    10. 've' → logprob: -6.190731525421143

Token 439: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5773614645004272
    2. 't' → logprob: -2.077361583709717
    3. ' abs' → logprob: -2.577361583709717
    4. 'abs' → logprob: -3.452361583709717
    5. 'vel' → logprob: -3.452361583709717
    6. ' vel' → logprob: -3.702361583709717
    7. ' une' → logprob: -3.952361583709717
    8. ' vx' → logprob: -3.952361583709717
    9. ' (' → logprob: -4.077361583709717
    10. ' un' → logprob: -4.202361583709717

Token 440: ' unique' (ID: 5746)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15224187076091766
    2. ' >' → logprob: -2.5272419452667236
    3. '=' → logprob: -3.6522419452667236
    4. '>=' → logprob: -4.2772417068481445
    5. ' >=' → logprob: -4.9022417068481445
    6. '[' → logprob: -5.6522417068481445
    7. ':' → logprob: -5.6522417068481445
    8. ' =' → logprob: -6.2772417068481445
    9. ')' → logprob: -6.6522417068481445
    10. ')>' → logprob: -6.9022417068481445

Token 441: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24024313688278198
    2. ' if' → logprob: -2.2402431964874268
    3. ' or' → logprob: -3.4902431964874268
    4. ',' → logprob: -4.240242958068848
    5. ':
' → logprob: -4.240242958068848
    6. 'if' → logprob: -4.740242958068848
    7. '[' → logprob: -5.115242958068848
    8. ' and' → logprob: -5.115242958068848
    9. '       ' → logprob: -5.365242958068848
    10. '   ' → logprob: -5.740242958068848

Token 442: ' pos' (ID: 1253)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6503602266311646
    2. ' ' → logprob: -1.5253602266311646
    3. ' if' → logprob: -2.150360107421875
    4. ' not' → logprob: -2.400360107421875
    5. ' None' → logprob: -4.650360107421875
    6. ' and' → logprob: -5.150360107421875
    7. '    ' → logprob: -5.275360107421875
    8. ' or' → logprob: -5.650360107421875
    9. ' s' → logprob: -5.900360107421875
    10. 't' → logprob: -5.900360107421875

Token 443: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022464115172624588
    2. 'x' → logprob: -4.647464275360107
    3. ' +' → logprob: -5.772464275360107
    4. ' !=' → logprob: -6.147464275360107
    5. ' /' → logprob: -6.397464275360107
    6. '+' → logprob: -7.147464275360107
    7. '!=' → logprob: -7.272464275360107
    8. ' ==' → logprob: -7.272464275360107
    9. '==' → logprob: -7.397464275360107
    10. ',' → logprob: -7.397464275360107

Token 444: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.22554734349250793
    2. ' vel' → logprob: -1.6005473136901855
    3. 'v' → logprob: -10.975547790527344
    4. 'velocity' → logprob: -10.975547790527344
    5. 'vy' → logprob: -10.975547790527344
    6. '.vel' → logprob: -11.225547790527344
    7. ' ' → logprob: -11.475547790527344
    8. 'velo' → logprob: -11.600547790527344
    9. ' velocity' → logprob: -11.850547790527344
    10. '[' → logprob: -12.350547790527344

Token 445: ' sont' (ID: 5242)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013265167362987995
    2. '!=' → logprob: -5.513265132904053
    3. ' !=' → logprob: -6.763265132904053
    4. ',' → logprob: -6.763265132904053
    5. '<|end|>' → logprob: -7.013265132904053
    6. '==' → logprob: -7.013265132904053
    7. ')' → logprob: -7.388265132904053
    8. 'x' → logprob: -7.638265132904053
    9. '=' → logprob: -7.763265132904053
    10. ' is' → logprob: -8.263265609741211

Token 446: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06357021629810333
    2. ' (' → logprob: -3.938570261001587
    3. '[' → logprob: -5.438570022583008
    4. ' vectors' → logprob: -5.438570022583008
    5. 'orth' → logprob: -5.563570022583008
    6. 't' → logprob: -5.938570022583008
    7. 'not' → logprob: -6.063570022583008
    8. 'vectors' → logprob: -6.063570022583008
    9. 'multip' → logprob: -6.188570022583008
    10. 'vect' → logprob: -6.188570022583008

Token 447: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052072808146476746
    2. 'not' → logprob: -4.802073001861572
    3. 'vect' → logprob: -5.052073001861572
    4. 't' → logprob: -5.302073001861572
    5. 'vectors' → logprob: -5.302073001861572
    6. 'multip' → logprob: -5.427073001861572
    7. 'com' → logprob: -5.677073001861572
    8. ' (' → logprob: -5.927073001861572
    9. 'col' → logprob: -6.177073001861572
    10. 'non' → logprob: -6.302073001861572

Token 448: 'D' (ID: 35)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3554894030094147
    2. 'components' → logprob: -2.605489492416382
    3. ')' → logprob: -2.730489492416382
    4. 'vectors' → logprob: -3.355489492416382
    5. ']' → logprob: -3.730489492416382
    6. ' components' → logprob: -3.730489492416382
    7. ' vectors' → logprob: -3.730489492416382
    8. '   ' → logprob: -5.105489253997803
    9. '[
' → logprob: -5.230489253997803
    10. '*' → logprob: -5.480489253997803

Token 449: '...' (ID: 1008)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4739169478416443
    2. '       ' → logprob: -1.598917007446289
    3. ':' → logprob: -2.973917007446289
    4. '[' → logprob: -3.473917007446289
    5. '   ' → logprob: -3.723917007446289
    6. ',' → logprob: -3.848917007446289
    7. ':
' → logprob: -4.348917007446289
    8. ' if' → logprob: -4.598917007446289
    9. ')' → logprob: -5.473917007446289
    10. '\n' → logprob: -5.723917007446289

Token 450: ' sauf' (ID: 87919)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8135199546813965
    2. ' if' → logprob: -1.5635199546813965
    3. '   ' → logprob: -2.4385199546813965
    4. '
' → logprob: -3.0635199546813965
    5. ')' → logprob: -3.4385199546813965
    6. '       ' → logprob: -3.5635199546813965
    7. ' ' → logprob: -3.5635199546813965
    8. ',' → logprob: -3.8135199546813965
    9. '<|end|>' → logprob: -4.0635199546813965
    10. ':' → logprob: -4.3135199546813965

Token 451: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8605749011039734
    2. ' que' → logprob: -1.4855749607086182
    3. ' if' → logprob: -1.6105749607086182
    4. ' si' → logprob: -2.235574960708618
    5. ' qu' → logprob: -4.985574722290039
    6. ':' → logprob: -5.110574722290039
    7. 'for' → logprob: -5.235574722290039
    8. 'que' → logprob: -5.360574722290039
    9. 'si' → logprob: -5.735574722290039
    10. 'qu' → logprob: -5.985574722290039

Token 452: ' vel' (ID: 7326)
  Prédit: ' vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vel' → logprob: -0.07996015250682831
    2. 'vel' → logprob: -2.5799601078033447
    3. ' pos' → logprob: -7.829960346221924
    4. ' abs' → logprob: -7.954960346221924
    5. 'pos' → logprob: -9.204959869384766
    6. '(' → logprob: -9.829959869384766
    7. ' vx' → logprob: -10.079959869384766
    8. ' (' → logprob: -10.579959869384766
    9. 'abs' → logprob: -10.954959869384766
    10. 'v' → logprob: -11.329959869384766

Token 453: ' nul' (ID: 64435)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025929821655154228
    2. '==' → logprob: -3.7759299278259277
    3. ' ==' → logprob: -6.025929927825928
    4. '==(' → logprob: -8.77592945098877
    5. '=' → logprob: -10.52592945098877
    6. 'x' → logprob: -10.90092945098877
    7. ']==' → logprob: -11.40092945098877
    8. '(' → logprob: -11.40092945098877
    9. '```' → logprob: -11.77592945098877
    10. '0' → logprob: -12.15092945098877

Token 454: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7487457990646362
    2. ')' → logprob: -2.123745918273926
    3. '[' → logprob: -2.373745918273926
    4. '<|end|>' → logprob: -2.623745918273926
    5. ' if' → logprob: -2.748745918273926
    6. '
' → logprob: -3.248745918273926
    7. ',' → logprob: -3.623745918273926
    8. ':' → logprob: -3.873745918273926
    9. '   ' → logprob: -3.873745918273926
    10. 's' → logprob: -4.748745918273926

Token 455: ' non' (ID: 2893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5055915713310242
    2. '       ' → logprob: -2.505591630935669
    3. '<|end|>' → logprob: -2.630591630935669
    4. '
' → logprob: -2.755591630935669
    5. '   ' → logprob: -2.755591630935669
    6. ' ' → logprob: -3.130591630935669
    7. 'if' → logprob: -3.380591630935669
    8. ')' → logprob: -5.13059139251709
    9. ' 
' → logprob: -5.13059139251709
    10. ',' → logprob: -5.38059139251709

Token 456: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3522459268569946
    2. ',' → logprob: -1.6022459268569946
    3. ':' → logprob: -1.7272459268569946
    4. '   ' → logprob: -1.9772459268569946
    5. ' if' → logprob: -2.852245807647705
    6. '       ' → logprob: -2.852245807647705
    7. '[' → logprob: -2.852245807647705
    8. '<|end|>' → logprob: -4.602245807647705
    9. ')' → logprob: -4.727245807647705
    10. ' or' → logprob: -5.227245807647705

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4121461510658264
    2. ' ' → logprob: -1.9121460914611816
    3. ' if' → logprob: -2.2871460914611816
    4. '   ' → logprob: -3.5371460914611816
    5. '0' → logprob: -4.662146091461182
    6. 'if' → logprob: -4.787146091461182
    7. '    ' → logprob: -5.162146091461182
    8. '        ' → logprob: -5.162146091461182
    9. '<|end|>' → logprob: -5.162146091461182
    10. ')' → logprob: -5.537146091461182

Token 458: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2092090845108032
    2. 't' → logprob: -1.3342090845108032
    3. ' if' → logprob: -1.4592090845108032
    4. '       ' → logprob: -2.3342089653015137
    5. ' t' → logprob: -3.2092089653015137
    6. 'x' → logprob: -4.334208965301514
    7. 'vx' → logprob: -4.459208965301514
    8. ' vx' → logprob: -4.834208965301514
    9. '#' (adapté à ' #') → logprob: -4.959208965301514
    10. 'tx' → logprob: -5.084208965301514

Token 459: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19471444189548492
    2. 'A' → logprob: -2.8197145462036133
    3. 'if' → logprob: -2.9447145462036133
    4. '#' → logprob: -3.8197145462036133
    5. 'delta' → logprob: -4.819714546203613
    6. 'dx' → logprob: -5.069714546203613
    7. 'vx' → logprob: -5.194714546203613
    8. 't' → logprob: -5.319714546203613
    9. '   ' → logprob: -5.694714546203613
    10. 'det' → logprob: -6.069714546203613

Token 460: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1750015020370483
    2. 'a' → logprob: -2.175001621246338
    3. ' continue' → logprob: -2.175001621246338
    4. '#' → logprob: -2.425001621246338
    5. 'dx' → logprob: -2.675001621246338
    6. ' a' → logprob: -3.300001621246338
    7. 'coeff' → logprob: -3.300001621246338
    8. 'import' → logprob: -3.425001621246338
    9. 'if' → logprob: -3.550001621246338
    10. 'for' → logprob: -3.675001621246338

Token 461: ' intersection' (ID: 42002)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7417688369750977
    2. 't' → logprob: -0.9917688369750977
    3. 'A' → logprob: -2.4917688369750977
    4. ' a' → logprob: -3.1167688369750977
    5. ' t' → logprob: -4.741768836975098
    6. 'les' → logprob: -5.366768836975098
    7. ' A' → logprob: -5.616768836975098
    8. ' ' → logprob: -6.616768836975098
    9. ' les' → logprob: -6.741768836975098
    10. '   ' → logprob: -6.741768836975098

Token 462: ' param' (ID: 3802)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4938420057296753
    2. ' avec' → logprob: -1.4938420057296753
    3. 'avec' → logprob: -2.243842124938965
    4. 's' → logprob: -2.368842124938965
    5. ' with' → logprob: -2.618842124938965
    6. '       ' → logprob: -2.618842124938965
    7. 'with' → logprob: -2.743842124938965
    8. 'a' → logprob: -3.493842124938965
    9. 'A' → logprob: -3.743842124938965
    10. 't' → logprob: -4.243842124938965

Token 463: 'étr' (ID: 35025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4702852964401245
    2. 'etric' → logprob: -1.5952852964401245
    3. '=' → logprob: -1.7202852964401245
    4. 'ètres' → logprob: -2.220285415649414
    5. 'étr' → logprob: -2.220285415649414
    6. 'ètre' → logprob: -2.470285415649414
    7. 'etri' → logprob: -3.970285415649414
    8. 'et' → logprob: -4.095285415649414
    9. ' =' → logprob: -4.095285415649414
    10. 'etr' → logprob: -4.845285415649414

Token 464: 'ique' (ID: 2222)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6254864931106567
    2. 're' → logprob: -1.6254864931106567
    3. 'es' → logprob: -2.750486373901367
    4. 'ètre' → logprob: -2.750486373901367
    5. 'tre' → logprob: -3.000486373901367
    6. 'é' → logprob: -4.375486373901367
    7. '=' → logprob: -4.500486373901367
    8. 'res' → logprob: -4.625486373901367
    9. 'ique' → logprob: -5.000486373901367
    10. 'ée' → logprob: -5.250486373901367

Token 465: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.299921452999115
    2. ' t' → logprob: -2.4249215126037598
    3. ' with' → logprob: -3.2999215126037598
    4. '=' → logprob: -3.6749215126037598
    5. 't' → logprob: -3.7999215126037598
    6. '   ' → logprob: -3.7999215126037598
    7. ' avec' → logprob: -4.29992151260376
    8. ' :' → logprob: -4.79992151260376
    9. ' a' → logprob: -5.04992151260376
    10. ',' → logprob: -5.04992151260376

Token 466: ' point' (ID: 2438)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7852267026901245
    2. 'car' → logprob: -1.4102267026901245
    3. 'x' → logprob: -2.785226821899414
    4. 't' → logprob: -3.035226821899414
    5. 'temps' → logprob: -3.410226821899414
    6. 'vx' → logprob: -3.660226821899414
    7. 'sol' → logprob: -4.410226821899414
    8. 'param' → logprob: -4.410226821899414
    9. 'plus' → logprob: -4.535226821899414
    10. '   ' → logprob: -4.535226821899414

Token 467: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.393127202987671
    2. 't' → logprob: -1.768127202987671
    3. ' t' → logprob: -2.393127202987671
    4. '   ' → logprob: -2.393127202987671
    5. '0' → logprob: -2.643127202987671
    6. 'c' → logprob: -2.893127202987671
    7. ' =' → logprob: -3.143127202987671
    8. 'd' → logprob: -3.143127202987671
    9. '_c' → logprob: -3.643127202987671
    10. 'inter' → logprob: -3.768127202987671

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005328385625034571
    2. '(' → logprob: -5.255328178405762
    3. ' ' → logprob: -9.880328178405762
    4. ' (' → logprob: -10.755328178405762
    5. ')' → logprob: -11.505328178405762
    6. ',' → logprob: -12.130328178405762
    7. '```' → logprob: -14.067828178405762
    8. '
' → logprob: -14.130328178405762
    9. '[' → logprob: -14.567828178405762
    10. '   ' → logprob: -14.630328178405762

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018348705023527145
    2. ')' → logprob: -4.018348693847656
    3. '0' → logprob: -9.893348693847656
    4. '.' → logprob: -10.268348693847656
    5. ' -' → logprob: -10.518348693847656
    6. ' ,' → logprob: -10.768348693847656
    7. ',)' → logprob: -10.893348693847656
    8. '):' → logprob: -11.768348693847656
    9. ')t' → logprob: -11.893348693847656
    10. 't' → logprob: -12.393348693847656

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. ')' → logprob: -13.750381469726562
    4. ',' → logprob: -14.750381469726562
    5. '
' → logprob: -18.625381469726562
    6. ' ' → logprob: -18.875381469726562
    7. '   ' → logprob: -18.875381469726562
    8. '  ' → logprob: -19.250381469726562
    9. '),' → logprob: -19.250381469726562
    10. '

' → logprob: -20.250381469726562

Token 471: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00775119848549366
    2. '):' → logprob: -5.757750988006592
    3. '       ' → logprob: -6.257750988006592
    4. ')
' → logprob: -6.507750988006592
    5. ' )' → logprob: -7.257750988006592
    6. '):
' → logprob: -8.88275146484375
    7. '   ' → logprob: -9.50775146484375
    8. '),' → logprob: -9.88275146484375
    9. ')
' → logprob: -10.25775146484375
    10. ').' → logprob: -10.63275146484375

Token 472: ' Car' (ID: 4004)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2680381536483765
    2. ' t' → logprob: -1.3930381536483765
    3. '       ' → logprob: -1.3930381536483765
    4. 't' → logprob: -2.393038272857666
    5. 'if' → logprob: -2.768038272857666
    6. 'x' → logprob: -4.143038272857666
    7. 'v' → logprob: -4.518038272857666
    8. ' x' → logprob: -5.268038272857666
    9. '   ' → logprob: -5.643038272857666
    10. 'None' → logprob: -5.768038272857666

Token 473: ' la' (ID: 557)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.26388728618621826
    2. ' vel' → logprob: -1.6388872861862183
    3. 'pos' → logprob: -4.263887405395508
    4. ' pos' → logprob: -5.388887405395508
    5. ' la' → logprob: -5.763887405395508
    6. 'le' → logprob: -6.013887405395508
    7. ' il' → logprob: -6.513887405395508
    8. 'la' → logprob: -6.763887405395508
    9. ' le' → logprob: -6.888887405395508
    10. ' on' → logprob: -7.138887405395508

Token 474: ' cible' (ID: 136857)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -1.5160244703292847
    2. 'distance' → logprob: -1.7660244703292847
    3. ' vitesse' → logprob: -2.266024589538574
    4. ' distance' → logprob: -2.516024589538574
    5. ' norme' → logprob: -2.766024589538574
    6. 'import' → logprob: -3.141024589538574
    7. 'pos' → logprob: -3.266024589538574
    8. 'vel' → logprob: -3.516024589538574
    9. 'position' → logprob: -3.641024589538574
    10. 'vx' → logprob: -3.766024589538574

Token 475: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8611546158790588
    2. ' n' → logprob: -1.361154556274414
    3. 'est' → logprob: -1.611154556274414
    4. 'n' → logprob: -3.111154556274414
    5. '=' → logprob: -3.611154556274414
    6. 't' → logprob: -4.486154556274414
    7. ' =' → logprob: -4.486154556274414
    8. '   ' → logprob: -5.236154556274414
    9. '       ' → logprob: -5.486154556274414
    10. ':' → logprob: -5.611154556274414

Token 476: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6119498014450073
    2. 'un' → logprob: -1.8619498014450073
    3. ' (' → logprob: -1.8619498014450073
    4. '(pos' → logprob: -2.361949920654297
    5. ' au' → logprob: -2.486949920654297
    6. ' un' → logprob: -2.486949920654297
    7. 'exact' → logprob: -3.111949920654297
    8. 'au' → logprob: -3.236949920654297
    9. 'pos' → logprob: -3.361949920654297
    10. 'une' → logprob: -3.611949920654297

Token 477: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4342956840991974
    2. ' point' → logprob: -1.059295654296875
    3. 'c' → logprob: -6.059295654296875
    4. ' cercle' → logprob: -6.059295654296875
    5. 'circle' → logprob: -8.184295654296875
    6. 'pt' → logprob: -9.309295654296875
    7. 'cer' → logprob: -9.809295654296875
    8. ' circle' → logprob: -9.809295654296875
    9. ' c' → logprob: -10.059295654296875
    10. ' ' → logprob: -10.309295654296875

Token 478: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05746440216898918
    2. '.' → logprob: -3.307464361190796
    3. ':' → logprob: -5.182464599609375
    4. ',' → logprob: -5.182464599609375
    5. ' if' → logprob: -6.557464599609375
    6. 't' → logprob: -6.932464599609375
    7. '...' → logprob: -7.307464599609375
    8. '   ' → logprob: -7.807464599609375
    9. ' s' → logprob: -7.932464599609375
    10. 's' → logprob: -7.932464599609375

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043697673827409744
    2. ' t' → logprob: -4.418697834014893
    3. '#' → logprob: -4.543697834014893
    4. '        ' → logprob: -5.043697834014893
    5. ' #' → logprob: -6.043697834014893
    6. ' ' → logprob: -6.168697834014893
    7. ')' → logprob: -6.543697834014893
    8. 't' → logprob: -6.793697834014893
    9. ' pas' → logprob: -7.293697834014893
    10. '0' → logprob: -7.418697834014893

Token 480: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5926296710968018
    2. '       ' → logprob: -0.8426296710968018
    3. 't' → logprob: -5.592629432678223
    4. ' il' → logprob: -5.717629432678223
    5. ' #' → logprob: -5.717629432678223
    6. ' t' → logprob: -6.717629432678223
    7. 'et' → logprob: -7.092629432678223
    8. ' pas' → logprob: -7.217629432678223
    9. 'pas' → logprob: -7.467629432678223
    10. ' donc' → logprob: -7.592629432678223

Token 481: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36787769198417664
    2. 'if' → logprob: -2.492877721786499
    3. 't' → logprob: -2.992877721786499
    4. '       ' → logprob: -3.242877721786499
    5. ' on' → logprob: -4.11787748336792
    6. 'il' → logprob: -4.36787748336792
    7. 'si' → logprob: -4.36787748336792
    8. ' if' → logprob: -4.49287748336792
    9. 'on' → logprob: -4.49287748336792
    10. ' si' → logprob: -4.61787748336792

Token 482: ' rés' (ID: 13282)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -1.134321928024292
    2. 'continue' → logprob: -1.384321928024292
    3. ' continue' → logprob: -2.134321928024292
    4. 'ne' → logprob: -2.259321928024292
    5. ' cherche' → logprob: -3.009321928024292
    6. ' doit' → logprob: -3.259321928024292
    7. 'do' → logprob: -3.759321928024292
    8. ' ne' → logprob: -3.884321928024292
    9. ' peut' → logprob: -4.134322166442871
    10. 'pe' → logprob: -4.509322166442871

Token 483: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.15423928201198578
    2. 'oud' → logprob: -2.0292391777038574
    3. 'oudre' → logprob: -4.904239177703857
    4. 'ous' → logprob: -7.029239177703857
    5. 'ol' → logprob: -7.279239177703857
    6. 'e' → logprob: -8.279239654541016
    7. '{' → logprob: -8.529239654541016
    8. '#' → logprob: -8.654239654541016
    9. 'olution' → logprob: -8.779239654541016
    10. 'oit' → logprob: -9.154239654541016

Token 484: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8702219724655151
    2. 'for' → logprob: -1.4952219724655151
    3. ' a' → logprob: -2.6202220916748047
    4. ' for' → logprob: -2.8702220916748047
    5. 't' → logprob: -3.1202220916748047
    6. 'import' → logprob: -3.3702220916748047
    7. 'A' → logprob: -3.7452220916748047
    8. ' quadratic' → logprob: -3.7452220916748047
    9. 'quadr' → logprob: -3.9952220916748047
    10. 'coeff' → logprob: -4.745222091674805

Token 485: ''équ' (ID: 170507)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0003476209531072527
    2. 'at' → logprob: -9.500348091125488
    3. 'a' → logprob: -9.625348091125488
    4. 'ati' → logprob: -10.000348091125488
    5. 'atio' → logprob: -10.500348091125488
    6. 'acion' → logprob: -11.375348091125488
    7. 'aution' → logprob: -11.375348091125488
    8. '=' → logprob: -11.500348091125488
    9. 'uation' → logprob: -11.500348091125488
    10. '{' → logprob: -11.750348091125488

Token 487: ' vector' (ID: 9727)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.400803804397583
    2. 'quadr' → logprob: -1.900803804397583
    3. '   ' → logprob: -2.025803804397583
    4. ' de' → logprob: -2.400803804397583
    5. ' du' → logprob: -2.900803804397583
    6. ' suivante' → logprob: -3.150803804397583
    7. ' quadr' → logprob: -3.150803804397583
    8. '(s' → logprob: -3.775803804397583
    9. ' quadratic' → logprob: -3.900803804397583
    10. 'de' → logprob: -4.150803565979004

Token 488: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.03431884944438934
    2. 'e' → logprob: -4.159318923950195
    3. '       ' → logprob: -5.534318923950195
    4. 'iale' → logprob: -6.159318923950195
    5. '(t' → logprob: -6.659318923950195
    6. '   ' → logprob: -6.784318923950195
    7. 'iel' → logprob: -7.034318923950195
    8. ' t' → logprob: -7.159318923950195
    9. '(' → logprob: -7.409318923950195
    10. 't' → logprob: -7.534318923950195

Token 489: ' pos' (ID: 1253)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7403495907783508
    2. '   ' → logprob: -1.365349531173706
    3. ' t' → logprob: -2.240349531173706
    4. '       ' → logprob: -2.615349531173706
    5. 't' → logprob: -3.615349531173706
    6. ' for' → logprob: -4.490349769592285
    7. ' if' → logprob: -4.615349769592285
    8. ',' → logprob: -4.865349769592285
    9. 'u' → logprob: -5.365349769592285
    10. ' :' → logprob: -5.615349769592285

Token 490: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2618689239025116
    2. '+' → logprob: -1.886868953704834
    3. ' -' → logprob: -3.136868953704834
    4. '[' → logprob: -3.511868953704834
    5. '-' → logprob: -5.636868953704834
    6. '   ' → logprob: -7.511868953704834
    7. 'x' → logprob: -8.011868476867676
    8. ' ' → logprob: -8.011868476867676
    9. '==' → logprob: -9.136868476867676
    10. '=' → logprob: -9.136868476867676

Token 491: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.08113236725330353
    2. '(' → logprob: -3.206132411956787
    3. ' vel' → logprob: -3.581132411956787
    4. 't' → logprob: -5.956132411956787
    5. ' (' → logprob: -5.956132411956787
    6. '(t' → logprob: -6.581132411956787
    7. '(-' → logprob: -7.081132411956787
    8. 'tuple' → logprob: -7.331132411956787
    9. ' t' → logprob: -7.706132411956787
    10. '   ' → logprob: -8.206131935119629

Token 492: ' t' (ID: 260)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.00960874930024147
    2. '*' → logprob: -4.759608745574951
    3. ' *' → logprob: -7.009608745574951
    4. '*time' → logprob: -10.75960922241211
    5. '*u' → logprob: -11.38460922241211
    6. '*(' → logprob: -11.38460922241211
    7. 't' → logprob: -11.63460922241211
    8. '[' → logprob: -12.13460922241211
    9. '*T' → logprob: -12.38460922241211
    10. ''*' → logprob: -12.75960922241211

Token 493: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7813414335250854
    2. ' =' → logprob: -1.4063414335250854
    3. '==' → logprob: -1.7813414335250854
    4. '=' → logprob: -2.281341552734375
    5. '[' → logprob: -4.156341552734375
    6. 't' → logprob: -6.531341552734375
    7. ' -' → logprob: -6.781341552734375
    8. '   ' → logprob: -6.781341552734375
    9. ',' → logprob: -6.906341552734375
    10. ' t' → logprob: -7.031341552734375

Token 494: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.240481914370321e-05
    2. '0' → logprob: -10.250052452087402
    3. ' (' → logprob: -11.000052452087402
    4. '[' → logprob: -15.250052452087402
    5. ' ' → logprob: -17.625051498413086
    6. '```' → logprob: -17.750051498413086
    7. '(False' → logprob: -18.250051498413086
    8. '(None' → logprob: -18.500051498413086
    9. 'tuple' → logprob: -19.125051498413086
    10. '()' → logprob: -19.125051498413086

Token 495: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003604105906561017
    2. ',' → logprob: -6.503603935241699
    3. ':' → logprob: -7.128603935241699
    4. '
' → logprob: -8.3786039352417
    5. '.' → logprob: -8.8786039352417
    6. ')' → logprob: -9.0036039352417
    7. '   ' → logprob: -9.0036039352417
    8. ' if' → logprob: -9.0036039352417
    9. '        
' → logprob: -9.2536039352417
    10. '\n' → logprob: -9.8786039352417

Token 496: ' on' (ID: 402)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8179177045822144
    2. '(-' → logprob: -1.5679177045822144
    3. 'if' → logprob: -2.692917823791504
    4. '(' → logprob: -2.692917823791504
    5. 'pos' → logprob: -2.692917823791504
    6. ' t' → logprob: -2.817917823791504
    7. 'None' → logprob: -3.942917823791504
    8. '(None' → logprob: -4.317917823791504
    9. ' (' → logprob: -4.442917823791504
    10. ' if' → logprob: -4.692917823791504

Token 497: ' cherche' (ID: 52345)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5374363660812378
    2. ':' → logprob: -1.2874363660812378
    3. '=' → logprob: -3.1624364852905273
    4. 'if' → logprob: -3.6624364852905273
    5. ' =' → logprob: -4.287436485290527
    6. '   ' → logprob: -4.287436485290527
    7. 't' → logprob: -5.037436485290527
    8. ']' → logprob: -5.162436485290527
    9. ' if' → logprob: -5.662436485290527
    10. '       ' → logprob: -5.662436485290527

Token 498: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09306736290454865
    2. ' t' → logprob: -2.4680674076080322
    3. ' (' → logprob: -6.593067169189453
    4. ' if' → logprob: -7.468067169189453
    5. ' None' → logprob: -7.843067169189453
    6. 'None' → logprob: -7.843067169189453
    7. '(' → logprob: -7.968067169189453
    8. 'if' → logprob: -8.093067169189453
    9. '   ' → logprob: -8.718067169189453
    10. '(None' → logprob: -9.093067169189453

Token 499: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1016819179058075
    2. ' t' → logprob: -2.35168194770813
    3. 'u' → logprob: -7.851681709289551
    4. '(' → logprob: -7.851681709289551
    5. ' (' → logprob: -9.35168170928955
    6. '   ' → logprob: -9.35168170928955
    7. ' ' → logprob: -9.47668170928955
    8. 's' → logprob: -9.72668170928955
    9. 'if' → logprob: -9.72668170928955
    10. 'tuple' → logprob: -9.85168170928955

Token 500: ' ≥' (ID: 99731)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013386933133006096
    2. ' ' → logprob: -6.626338481903076
    3. '1' → logprob: -11.876338958740234
    4. '   ' → logprob: -12.751338958740234
    5. '-' → logprob: -13.751338958740234
    6. 'EPS' → logprob: -15.126338958740234
    7. '  ' → logprob: -15.251338958740234
    8. '    ' → logprob: -15.376338958740234
    9. '       ' → logprob: -15.376338958740234
    10. ')' → logprob: -16.001338958740234

Token 502: ' tel' (ID: 10716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010148782283067703
    2. ' if' → logprob: -5.260149002075195
    3. '
' → logprob: -6.635149002075195
    4. ',' → logprob: -7.010149002075195
    5. '   ' → logprob: -7.135149002075195
    6. ':' → logprob: -7.260149002075195
    7. 'if' → logprob: -8.010149002075195
    8. '[' → logprob: -9.385149002075195
    9. '        ' → logprob: -9.510149002075195
    10. ' qui' → logprob: -9.510149002075195

Token 503: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0006911090458743274
    2. ' que' → logprob: -7.500690937042236
    3. 'quel' → logprob: -9.625691413879395
    4. 'qu' → logprob: -10.250691413879395
    5. '   ' → logprob: -10.875691413879395
    6. 'qui' → logprob: -12.000691413879395
    7. 'that' → logprob: -12.250691413879395
    8. '       ' → logprob: -13.125691413879395
    9. 'u' → logprob: -14.125691413879395
    10. ' ' → logprob: -14.500691413879395

Token 504: ' les' (ID: 1341)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.287914901971817
    2. 'vel' → logprob: -1.9129148721694946
    3. ' pos' → logprob: -3.412914991378784
    4. '(pos' → logprob: -3.537914991378784
    5. 'abs' → logprob: -4.787914752960205
    6. ' (' → logprob: -4.787914752960205
    7. ' vel' → logprob: -5.037914752960205
    8. ' abs' → logprob: -5.037914752960205
    9. '(' → logprob: -5.162914752960205
    10. '(abs' → logprob: -6.412914752960205

Token 505: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7424427270889282
    2. 'pos' → logprob: -1.8674427270889282
    3. 'de' → logprob: -1.9924427270889282
    4. ' deux' → logprob: -2.6174426078796387
    5. 'vel' → logprob: -2.9924426078796387
    6. 'x' → logprob: -3.6174426078796387
    7. 'v' → logprob: -4.367442607879639
    8. ' ' → logprob: -4.367442607879639
    9. '   ' → logprob: -4.492442607879639
    10. ' pos' → logprob: -4.492442607879639

Token 506: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11558055877685547
    2. ' compos' → logprob: -2.2405805587768555
    3. 'coord' → logprob: -7.2405805587768555
    4. ' composants' → logprob: -7.6155805587768555
    5. 'components' → logprob: -7.8655805587768555
    6. 'x' → logprob: -8.240580558776855
    7. 't' → logprob: -8.490580558776855
    8. 'comp' → logprob: -8.740580558776855
    9. ' coordonnées' → logprob: -8.865580558776855
    10. 'co' → logprob: -9.615580558776855

Token 507: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.0019242330454289913
    2. 'ants' → logprob: -6.37692403793335
    3. 'an' → logprob: -10.126924514770508
    4. 'ante' → logprob: -10.376924514770508
    5. '[' → logprob: -10.501924514770508
    6. 'a' → logprob: -10.876924514770508
    7. '{' → logprob: -11.001924514770508
    8. '   ' → logprob: -11.251924514770508
    9. '(' → logprob: -11.251924514770508
    10. 't' → logprob: -11.376924514770508

Token 508: ' null' (ID: 1256)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3062846660614014
    2. '[' → logprob: -1.6812846660614014
    3. ' t' → logprob: -1.9312846660614014
    4. ',' → logprob: -2.5562846660614014
    5. ' soient' → logprob: -3.1812846660614014
    6. 'u' → logprob: -3.3062846660614014
    7. 'v' → logprob: -3.4312846660614014
    8. '<|end|>' → logprob: -3.6812846660614014
    9. 's' → logprob: -3.8062846660614014
    10. '=' → logprob: -3.9312846660614014

Token 509: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04039246216416359
    2. 'ent' → logprob: -3.2903923988342285
    3. '=' → logprob: -6.2903923988342285
    4. 'e' → logprob: -8.790392875671387
    5. '==' → logprob: -9.165392875671387
    6. 's' → logprob: -9.415392875671387
    7. ' =' → logprob: -10.540392875671387
    8. 'ées' → logprob: -10.540392875671387
    9. '0' → logprob: -10.665392875671387
    10. 'ents' → logprob: -10.790392875671387

Token 510: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17171256244182587
    2. ',' → logprob: -2.546712636947632
    3. ':' → logprob: -3.421712636947632
    4. ' if' → logprob: -3.546712636947632
    5. '   ' → logprob: -5.046712398529053
    6. '.' → logprob: -5.921712398529053
    7. 'if' → logprob: -6.546712398529053
    8. ' :' → logprob: -6.796712398529053
    9. '        
' → logprob: -7.296712398529053
    10. ' (' → logprob: -7.546712398529053

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016099588247016072
    2. '   ' → logprob: -7.751609802246094
    3. ' if' → logprob: -7.876609802246094
    4. ',' → logprob: -8.001609802246094
    5. '	' → logprob: -8.751609802246094
    6. '        
' → logprob: -9.751609802246094
    7. ':' → logprob: -10.001609802246094
    8. '
' → logprob: -10.376609802246094
    9. ')' → logprob: -10.876609802246094
    10. 'if' → logprob: -11.376609802246094

Token 512: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047952502965927124
    2. ' if' → logprob: -3.17295241355896
    3. 'if' → logprob: -5.547952651977539
    4. ',' → logprob: -8.172952651977539
    5. ' t' → logprob: -8.297952651977539
    6. '   ' → logprob: -8.797952651977539
    7. ':' → logprob: -9.797952651977539
    8. '        
' → logprob: -9.797952651977539
    9. ')' → logprob: -10.297952651977539
    10. 't' → logprob: -10.547952651977539

Token 513: ' ce' (ID: 2357)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4952402412891388
    2. '       ' → logprob: -1.4952402114868164
    3. 'if' → logprob: -2.2452402114868164
    4. 't' → logprob: -3.3702402114868164
    5. ' t' → logprob: -4.245240211486816
    6. 'x' → logprob: -5.245240211486816
    7. '   ' → logprob: -5.370240211486816
    8. 'v' → logprob: -7.120240211486816
    9. ' vx' → logprob: -8.495240211486816
    10. ' x' → logprob: -8.745240211486816

Token 514: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2065855264663696
    2. ' n' → logprob: -1.2065855264663696
    3. '=' → logprob: -2.08158540725708
    4. ' =' → logprob: -2.20658540725708
    5. '#' → logprob: -3.08158540725708
    6. 's' → logprob: -3.45658540725708
    7. 't' → logprob: -3.70658540725708
    8. 'if' → logprob: -3.70658540725708
    9. ':' → logprob: -4.70658540725708
    10. '[' → logprob: -5.83158540725708

Token 515: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.8033073544502258
    2. 'est' → logprob: -1.178307294845581
    3. ''' → logprob: -1.803307294845581
    4. '=' → logprob: -2.803307294845581
    5. ' =' → logprob: -4.67830753326416
    6. 'e' → logprob: -6.17830753326416
    7. 'n' → logprob: -6.42830753326416
    8. ' n' → logprob: -6.92830753326416
    9. 'es' → logprob: -7.17830753326416
    10. ''=' → logprob: -7.30330753326416

Token 516: ' possible' (ID: 4149)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06998645514249802
    2. 'pas' → logprob: -2.694986343383789
    3. '_pas' → logprob: -11.069986343383789
    4. ' possible' → logprob: -11.569986343383789
    5. ' donc' → logprob: -11.819986343383789
    6. ' jamais' → logprob: -11.819986343383789
    7. 't' → logprob: -13.069986343383789
    8. ' malheureusement' → logprob: -13.569986343383789
    9. 'possible' → logprob: -13.819986343383789
    10. ' ' → logprob: -13.819986343383789

Token 517: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.0499387979507446
    2. ' uniquement' → logprob: -1.5499387979507446
    3. ' seulement' → logprob: -1.5499387979507446
    4. ' only' → logprob: -1.7999387979507446
    5. '   ' → logprob: -3.924938678741455
    6. 'only' → logprob: -4.549938678741455
    7. '       ' → logprob: -4.799938678741455
    8. 'que' → logprob: -5.049938678741455
    9. ' if' → logprob: -5.174938678741455
    10. ' ' → logprob: -6.174938678741455

Token 518: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6309471130371094
    2. 'si' → logprob: -1.1309471130371094
    3. ' si' → logprob: -2.5059471130371094
    4. ' if' → logprob: -2.7559471130371094
    5. 's' → logprob: -11.13094711303711
    6. '```' → logprob: -12.38094711303711
    7. 'que' → logprob: -12.50594711303711
    8. 't' → logprob: -12.63094711303711
    9. '_si' → logprob: -13.13094711303711
    10. 'dans' → logprob: -13.75594711303711

Token 519: ' pos' (ID: 1253)
  Prédit: ' vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vel' → logprob: -0.6090089082717896
    2. 'vel' → logprob: -0.8590089082717896
    3. 'pos' → logprob: -4.9840087890625
    4. '(' → logprob: -5.1090087890625
    5. ' vx' → logprob: -5.1090087890625
    6. ' pos' → logprob: -5.3590087890625
    7. 'vx' → logprob: -5.9840087890625
    8. ' (' → logprob: -6.1090087890625
    9. ' abs' → logprob: -6.2340087890625
    10. 'abs' → logprob: -6.9840087890625

Token 520: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007742508896626532
    2. '==' → logprob: -7.500774383544922
    3. '+' → logprob: -9.125774383544922
    4. ' ==' → logprob: -9.375774383544922
    5. ' +' → logprob: -11.625774383544922
    6. 'x' → logprob: -12.000774383544922
    7. '+[' → logprob: -12.750774383544922
    8. '=' → logprob: -13.500774383544922
    9. '[
' → logprob: -13.625774383544922
    10. '0' → logprob: -13.625774383544922

Token 521: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.11288704723119736
    2. ' vel' → logprob: -2.237887144088745
    3. 'v' → logprob: -11.487887382507324
    4. 'velo' → logprob: -11.487887382507324
    5. '(' → logprob: -11.737887382507324
    6. 'velocity' → logprob: -11.862887382507324
    7. ' velocity' → logprob: -12.362887382507324
    8. '-' → logprob: -12.612887382507324
    9. ' velo' → logprob: -12.737887382507324
    10. ' ' → logprob: -12.737887382507324

Token 522: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.947077214717865
    2. ' are' → logprob: -1.1970772743225098
    3. '[' → logprob: -1.5720772743225098
    4. 'are' → logprob: -3.0720772743225098
    5. '=' → logprob: -4.07207727432251
    6. ' =' → logprob: -4.82207727432251
    7. 's' → logprob: -4.94707727432251
    8. 'ont' → logprob: -4.94707727432251
    9. 'x' → logprob: -5.69707727432251
    10. ' ' → logprob: -5.94707727432251

Token 523: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.003509676083922386
    2. 'lin' → logprob: -6.378509521484375
    3. ' ' → logprob: -7.753509521484375
    4. 'pro' → logprob: -7.753509521484375
    5. 'cop' → logprob: -8.253509521484375
    6. 'align' → logprob: -8.628509521484375
    7. 'li' → logprob: -9.128509521484375
    8. '[' → logprob: -9.753509521484375
    9. ' col' → logprob: -9.878509521484375
    10. 'co' → logprob: -10.003509521484375

Token 524: 'iné' (ID: 59815)
  Prédit: 'iné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iné' → logprob: -0.07012549787759781
    2. 'in' → logprob: -3.3201255798339844
    3. 'ine' → logprob: -3.5701255798339844
    4. 'inear' → logprob: -6.070125579833984
    5. '   ' → logprob: -8.445125579833984
    6. '{' → logprob: -8.820125579833984
    7. 'line' → logprob: -9.070125579833984
    8. 'inea' → logprob: -9.195125579833984
    9. '```' → logprob: -9.320125579833984
    10. '
' → logprob: -9.570125579833984

Token 525: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0006218921043910086
    2. 'airs' → logprob: -8.250621795654297
    3. 'aire' → logprob: -9.000621795654297
    4. 'naires' → logprob: -9.375621795654297
    5. 'ares' → logprob: -9.625621795654297
    6. 'a' → logprob: -10.875621795654297
    7. 'aux' → logprob: -10.875621795654297
    8. 'al' → logprob: -11.125621795654297
    9. '{' → logprob: -12.125621795654297
    10. 'air' → logprob: -12.375621795654297

Token 526: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.089809775352478
    2. ' et' → logprob: -1.464809775352478
    3. ' and' → logprob: -1.589809775352478
    4. ',' → logprob: -1.839809775352478
    5. '   ' → logprob: -3.7148098945617676
    6. ':' → logprob: -4.339809894561768
    7. ' or' → logprob: -4.964809894561768
    8. ' ' → logprob: -5.714809894561768
    9. '.' → logprob: -5.839809894561768
    10. ' (' → logprob: -5.839809894561768

Token 527: ' de' (ID: 334)
  Prédit: ' oppos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oppos' → logprob: -0.6451740264892578
    2. 'vel' → logprob: -1.2701740264892578
    3. 'pos' → logprob: -3.145174026489258
    4. 't' → logprob: -3.520174026489258
    5. 'pro' → logprob: -4.395174026489258
    6. 'op' → logprob: -4.395174026489258
    7. 'multip' → logprob: -4.520174026489258
    8. 'le' → logprob: -4.645174026489258
    9. 'v' → logprob: -4.645174026489258
    10. 'if' → logprob: -5.020174026489258

Token 528: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.08400595188140869
    2. 'dire' → logprob: -3.459005832672119
    3. 'sign' → logprob: -3.834005832672119
    4. 'direction' → logprob: -4.334005832672119
    5. ' sens' → logprob: -5.334005832672119
    6. 'op' → logprob: -5.709005832672119
    7. 's' → logprob: -5.834005832672119
    8. ' signes' → logprob: -7.459005832672119
    9. 'm' → logprob: -7.834005832672119
    10. 'sense' → logprob: -7.834005832672119

Token 529: ' oppos' (ID: 20679)
  Prédit: ' oppos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oppos' → logprob: -0.3483617305755615
    2. 'op' → logprob: -1.3483617305755615
    3. 'inverse' → logprob: -4.598361968994141
    4. 'contr' → logprob: -5.098361968994141
    5. ' contraire' → logprob: -5.223361968994141
    6. ' opp' → logprob: -5.348361968994141
    7. 'opp' → logprob: -5.723361968994141
    8. ' inverse' → logprob: -6.348361968994141
    9. ' op' → logprob: -7.223361968994141
    10. ' contrario' → logprob: -7.473361968994141

Token 530: 'é' (ID: 377)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7020092606544495
    2. 'e' → logprob: -1.4520092010498047
    3. 'é' → logprob: -3.0770092010498047
    4. ',' → logprob: -3.3270092010498047
    5. 'és' → logprob: -3.3270092010498047
    6. ')' → logprob: -3.7020092010498047
    7. 'i' → logprob: -3.9520092010498047
    8. ':' → logprob: -4.077009201049805
    9. 'u' → logprob: -4.702009201049805
    10. '=' → logprob: -5.077009201049805

Token 531: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8585643172264099
    2. '       ' → logprob: -1.2335643768310547
    3. ',' → logprob: -1.6085643768310547
    4. '.' → logprob: -2.8585643768310547
    5. '   ' → logprob: -4.483564376831055
    6. ' :' → logprob: -5.608564376831055
    7. ' and' → logprob: -5.733564376831055
    8. ' et' → logprob: -5.858564376831055
    9. ' or' → logprob: -6.358564376831055
    10. ' (' → logprob: -7.233564376831055

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005348432343453169
    2. ' ' → logprob: -6.755348205566406
    3. ' if' → logprob: -6.755348205566406
    4. '<|end|>' → logprob: -7.380348205566406
    5. ',' → logprob: -7.755348205566406
    6. ')' → logprob: -8.005348205566406
    7. '        
' → logprob: -8.130348205566406
    8. '   ' → logprob: -8.380348205566406
    9. ' t' → logprob: -9.005348205566406
    10. '  
' → logprob: -9.130348205566406

Token 533: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02846883423626423
    2. ' if' → logprob: -4.278468608856201
    3. '
' → logprob: -4.903468608856201
    4. '        
' → logprob: -5.903468608856201
    5. 'if' → logprob: -6.028468608856201
    6. ' 
' → logprob: -7.653468608856201
    7. '  
' → logprob: -8.65346908569336
    8. ',' → logprob: -9.40346908569336
    9. '\n' → logprob: -9.52846908569336
    10. '[' → logprob: -9.65346908569336

Token 534: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7692994475364685
    2. ' if' → logprob: -1.2692995071411133
    3. '       ' → logprob: -1.5192995071411133
    4. 't' → logprob: -4.144299507141113
    5. ' t' → logprob: -4.769299507141113
    6. '#' → logprob: -5.394299507141113
    7. '
' → logprob: -6.394299507141113
    8. '   ' → logprob: -6.644299507141113
    9. 'v' → logprob: -7.019299507141113
    10. 'x' → logprob: -7.019299507141113

Token 535: ' peut' (ID: 9216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25652840733528137
    2. 'continue' → logprob: -2.631528377532959
    3. ' if' → logprob: -2.881528377532959
    4. '       ' → logprob: -3.381528377532959
    5. '   ' → logprob: -4.006528377532959
    6. ' continue' → logprob: -4.506528377532959
    7. '#' → logprob: -4.631528377532959
    8. 'cherche' → logprob: -5.256528377532959
    9. 'import' → logprob: -6.006528377532959
    10. ' #' → logprob: -6.256528377532959

Token 536: ' vérifier' (ID: 93671)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -1.9127756357192993
    2. ' essayer' → logprob: -2.0377755165100098
    3. 'contin' → logprob: -2.2877755165100098
    4. ' calcul' → logprob: -2.4127755165100098
    5. 'calcul' → logprob: -2.7877755165100098
    6. ' tester' → logprob: -2.7877755165100098
    7. ' continuer' → logprob: -3.0377755165100098
    8. 'tester' → logprob: -3.0377755165100098
    9. 'é' → logprob: -3.2877755165100098
    10. ' vérifier' → logprob: -3.4127755165100098

Token 537: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8145605325698853
    2. '       ' → logprob: -1.0645605325698853
    3. ' if' → logprob: -1.5645605325698853
    4. 't' → logprob: -6.314560413360596
    5. 'u' → logprob: -7.939560413360596
    6. 'vel' → logprob: -9.064560890197754
    7. '   ' → logprob: -9.439560890197754
    8. 'v' → logprob: -9.689560890197754
    9. '        ' → logprob: -9.689560890197754
    10. ' t' → logprob: -9.689560890197754

Token 538: ' le' (ID: 505)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7468603849411011
    2. 'pos' → logprob: -1.496860384941101
    3. 'vel' → logprob: -2.2468605041503906
    4. ' abs' → logprob: -2.4968605041503906
    5. '(pos' → logprob: -3.4968605041503906
    6. ' pos' → logprob: -3.9968605041503906
    7. 'norm' → logprob: -4.621860504150391
    8. '(abs' → logprob: -4.621860504150391
    9. ' (' → logprob: -4.996860504150391
    10. ' vel' → logprob: -4.996860504150391

Token 539: ' mouvement' (ID: 62236)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5836244225502014
    2. 'pos' → logprob: -1.4586243629455566
    3. 'vel' → logprob: -2.0836243629455566
    4. 'dot' → logprob: -2.7086243629455566
    5. 'norm' → logprob: -5.708624362945557
    6. ' abs' → logprob: -5.833624362945557
    7. '(' → logprob: -6.333624362945557
    8. 'math' → logprob: -6.333624362945557
    9. ' dot' → logprob: -6.333624362945557
    10. ' pos' → logprob: -6.458624362945557

Token 540: ' passe' (ID: 22210)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5819076299667358
    2. 'est' → logprob: -0.8319076299667358
    3. 'continue' → logprob: -6.206907749176025
    4. ' continue' → logprob: -6.581907749176025
    5. ' is' → logprob: -6.831907749176025
    6. 'et' → logprob: -8.206907272338867
    7. 'v' → logprob: -8.331907272338867
    8. '[' → logprob: -8.331907272338867
    9. ' et' → logprob: -8.706907272338867
    10. 's' → logprob: -9.081907272338867

Token 541: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3220100402832031
    2. ' par' → logprob: -1.9470100402832031
    3. '_' → logprob: -3.072010040283203
    4. '#' → logprob: -3.447010040283203
    5. '_par' → logprob: -4.322010040283203
    6. 'through' → logprob: -4.322010040283203
    7. ')' → logprob: -4.572010040283203
    8. ' ' → logprob: -5.572010040283203
    9. 'à' → logprob: -5.822010040283203
    10. ' through' → logprob: -6.572010040283203

Token 542: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22450056672096252
    2. '0' → logprob: -2.5995006561279297
    3. 'pos' → logprob: -2.7245006561279297
    4. ' (' → logprob: -3.4745006561279297
    5. 'le' → logprob: -4.22450065612793
    6. 'l' → logprob: -5.22450065612793
    7. 'origin' → logprob: -5.97450065612793
    8. 'origine' → logprob: -6.59950065612793
    9. ' la' → logprob: -7.09950065612793
    10. ' le' → logprob: -7.22450065612793

Token 543: ''origine' (ID: 89355)
  Prédit: ''origine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''origine' → logprob: -0.3170087933540344
    2. 'origine' → logprob: -1.3170087337493896
    3. 'origin' → logprob: -6.442008972167969
    4. '0' → logprob: -7.317008972167969
    5. 'orig' → logprob: -7.317008972167969
    6. ' origine' → logprob: -8.192008972167969
    7. ''' → logprob: -8.817008972167969
    8. '[' → logprob: -9.192008972167969
    9. '_orig' → logprob: -9.942008972167969
    10. ''instant' → logprob: -10.317008972167969

Token 544: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021165965590626
    2. '
' → logprob: -7.252116680145264
    3. '        
' → logprob: -7.252116680145264
    4. ',' → logprob: -8.002116203308105
    5. ' if' → logprob: -9.002116203308105
    6. ':' → logprob: -9.502116203308105
    7. '<|end|>' → logprob: -10.002116203308105
    8. '.' → logprob: -10.752116203308105
    9. ' (' → logprob: -11.127116203308105
    10. '  
' → logprob: -11.627116203308105

Token 545: ' recher' (ID: 19259)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5077224373817444
    2. 'dot' → logprob: -2.6327223777770996
    3. ':' → logprob: -2.7577223777770996
    4. '(
' → logprob: -3.3827223777770996
    5. '(abs' → logprob: -3.6327223777770996
    6. '(' → logprob: -3.7577223777770996
    7. 'math' → logprob: -3.7577223777770996
    8. ' abs' → logprob: -4.0077223777771
    9. '   ' → logprob: -4.0077223777771
    10. ' (' → logprob: -4.2577223777771

Token 546: 'chant' (ID: 15311)
  Prédit: 'chant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chant' → logprob: -0.007449733559042215
    2. 'ch' → logprob: -5.882449626922607
    3. '=' → logprob: -7.382449626922607
    4. '   ' → logprob: -7.382449626922607
    5. '}' → logprob: -7.382449626922607
    6. 'che' → logprob: -7.507449626922607
    7. '#' → logprob: -7.757449626922607
    8. '>' → logprob: -8.257450103759766
    9. 'chent' → logprob: -8.382450103759766
    10. 'çant' → logprob: -8.382450103759766

Token 547: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14074231684207916
    2. ' t' → logprob: -3.015742301940918
    3. 'if' → logprob: -3.140742301940918
    4. ' if' → logprob: -3.890742301940918
    5. '   ' → logprob: -5.265742301940918
    6. 'abs' → logprob: -5.640742301940918
    7. ' a' → logprob: -5.890742301940918
    8. 'u' → logprob: -6.515742301940918
    9. 'a' → logprob: -6.765742301940918
    10. 'un' → logprob: -7.390742301940918

Token 548: ':

' (ID: 1402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7938069701194763
    2. ' =' → logprob: -0.7938069701194763
    3. ':' → logprob: -3.793807029724121
    4. '       ' → logprob: -4.168807029724121
    5. ')' → logprob: -4.668807029724121
    6. ' ' → logprob: -4.668807029724121
    7. ' if' → logprob: -4.918807029724121
    8. 'if' → logprob: -5.543807029724121
    9. '_' → logprob: -5.793807029724121
    10. 's' → logprob: -5.918807029724121

Token 549: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9592632055282593
    2. '       ' → logprob: -1.0842632055282593
    3. 'if' → logprob: -2.584263324737549
    4. 't' → logprob: -2.709263324737549
    5. ' t' → logprob: -3.084263324737549
    6. '0' → logprob: -3.084263324737549
    7. '   ' → logprob: -4.834263324737549
    8. 'v' → logprob: -4.959263324737549
    9. '1' → logprob: -5.709263324737549
    10. 'None' → logprob: -5.959263324737549

Token 550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5688328146934509
    2. ' if' → logprob: -1.5688328742980957
    3. 'if' → logprob: -1.9438328742980957
    4. '   ' → logprob: -3.4438328742980957
    5. 't' → logprob: -4.068832874298096
    6. '0' → logprob: -4.318832874298096
    7. ' t' → logprob: -4.818832874298096
    8. 'v' → logprob: -5.943832874298096
    9. '    ' → logprob: -6.943832874298096
    10. '        ' → logprob: -7.068832874298096

Token 551: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8953956365585327
    2. 't' → logprob: -1.2703956365585327
    3. 'if' → logprob: -1.7703956365585327
    4. 'v' → logprob: -2.6453957557678223
    5. ' t' → logprob: -3.2703957557678223
    6. '       ' → logprob: -4.270395755767822
    7. 'x' → logprob: -5.020395755767822
    8. 'u' → logprob: -5.895395755767822
    9. ' v' → logprob: -6.270395755767822
    10. 'vx' → logprob: -6.645395755767822

Token 552: ' +' (ID: 659)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33491823077201843
    2. '0' → logprob: -1.7099182605743408
    3. '[' → logprob: -3.084918260574341
    4. '_x' → logprob: -3.334918260574341
    5. '=' → logprob: -4.584918022155762
    6. ' =' → logprob: -5.209918022155762
    7. 'norm' → logprob: -6.959918022155762
    8. 'if' → logprob: -7.084918022155762
    9. 'dot' → logprob: -7.209918022155762
    10. 'vec' → logprob: -7.834918022155762

Token 553: ' vel' (ID: 7326)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6008774638175964
    2. 'vel' → logprob: -1.3508775234222412
    3. '(' → logprob: -1.9758775234222412
    4. 'tuple' → logprob: -3.600877523422241
    5. '(t' → logprob: -5.225877285003662
    6. 't' → logprob: -5.350877285003662
    7. 'vx' → logprob: -5.725877285003662
    8. '   ' → logprob: -6.100877285003662
    9. '(v' → logprob: -6.225877285003662
    10. '(x' → logprob: -6.725877285003662

Token 554: '*t' (ID: 45600)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05608143284916878
    2. '==' → logprob: -4.056081295013428
    3. '*t' → logprob: -4.306081295013428
    4. '*' → logprob: -4.556081295013428
    5. 't' → logprob: -5.306081295013428
    6. '=' → logprob: -5.806081295013428
    7. ' ==' → logprob: -6.306081295013428
    8. ' t' → logprob: -6.556081295013428
    9. ' =' → logprob: -7.056081295013428
    10. ' *' → logprob: -7.931081295013428

Token 555: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6148852109909058
    2. '=' → logprob: -0.9898852109909058
    3. '==' → logprob: -2.6148853302001953
    4. ' =' → logprob: -4.864885330200195
    5. ' ==' → logprob: -5.864885330200195
    6. '=(' → logprob: -6.489885330200195
    7. '==(' → logprob: -7.489885330200195
    8. '=(-' → logprob: -8.114885330200195
    9. '(' → logprob: -8.239885330200195
    10. '=[' → logprob: -8.239885330200195

Token 556: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3438327843905427e-05
    2. ' (' → logprob: -11.00002384185791
    3. '0' → logprob: -12.00002384185791
    4. '(-' → logprob: -15.75002384185791
    5. '[' → logprob: -16.625022888183594
    6. ' ' → logprob: -16.750022888183594
    7. '(None' → logprob: -17.125022888183594
    8. '(False' → logprob: -17.250022888183594
    9. '(
' → logprob: -17.375022888183594
    10. '((' → logprob: -18.500022888183594

Token 557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062053389847278595
    2. '(' → logprob: -2.8120534420013428
    3. ' ' → logprob: -9.812053680419922
    4. ' (' → logprob: -11.062053680419922
    5. '[' → logprob: -12.562053680419922
    6. '(-' → logprob: -12.812053680419922
    7. '-' → logprob: -12.812053680419922
    8. '   ' → logprob: -13.187053680419922
    9. ')' → logprob: -13.874553680419922
    10. '```' → logprob: -14.312053680419922

Token 558: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7499607801437378
    2. '[' → logprob: -0.9999607801437378
    3. ',' → logprob: -1.8749607801437378
    4. ')[' → logprob: -5.499960899353027
    5. '-' → logprob: -7.124960899353027
    6. ' -' → logprob: -7.499960899353027
    7. '0' → logprob: -8.249960899353027
    8. ')-' → logprob: -9.249960899353027
    9. 'x' → logprob: -9.374960899353027
    10. ',
' → logprob: -9.749960899353027

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. ')' → logprob: -13.500025749206543
    4. ',' → logprob: -15.250025749206543
    5. '   ' → logprob: -17.37502670288086
    6. '  ' → logprob: -17.62502670288086
    7. '

' → logprob: -17.81252670288086
    8. ' ' → logprob: -18.37502670288086
    9. '۰' → logprob: -18.62502670288086
    10. '    ' → logprob: -19.00002670288086

Token 560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032688570208847523
    2. ')
' → logprob: -6.003268718719482
    3. '       ' → logprob: -7.253268718719482
    4. ')
' → logprob: -10.50326919555664
    5. '   ' → logprob: -11.37826919555664
    6. ')`' → logprob: -11.37826919555664
    7. ')t' → logprob: -11.62826919555664
    8. ')

' → logprob: -12.37826919555664
    9. ' )' → logprob: -12.37826919555664
    10. ')\' → logprob: -13.25326919555664

Token 561: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031054340302944183
    2. '
' → logprob: -3.6560542583465576
    3. ':' → logprob: -6.656054496765137
    4. ' if' → logprob: -7.031054496765137
    5. '\n' → logprob: -7.406054496765137
    6. '        
' → logprob: -7.656054496765137
    7. ',' → logprob: -7.906054496765137
    8. 'if' → logprob: -8.281054496765137
    9. '<|end|>' → logprob: -8.281054496765137
    10. '   ' → logprob: -9.281054496765137

Token 562: ' deux' (ID: 10301)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6564515233039856
    2. 'None' → logprob: -1.5314514636993408
    3. 't' → logprob: -2.281451463699341
    4. '(None' → logprob: -3.031451463699341
    5. '(' → logprob: -3.531451463699341
    6. 'pos' → logprob: -4.03145170211792
    7. ' None' → logprob: -4.15645170211792
    8. '-' → logprob: -4.53145170211792
    9. '   ' → logprob: -4.78145170211792
    10. ' t' → logprob: -4.78145170211792

Token 563: ' équ' (ID: 18899)
  Prédit: 'équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'équ' → logprob: -0.9031997919082642
    2. ' équ' → logprob: -1.2781997919082642
    3. 't' → logprob: -2.4031996726989746
    4. ' t' → logprob: -2.9031996726989746
    5. '*' → logprob: -3.6531996726989746
    6. ' equations' → logprob: -3.7781996726989746
    7. 'x' → logprob: -4.278199672698975
    8. 'equ' → logprob: -4.278199672698975
    9. 'if' → logprob: -4.778199672698975
    10. '   ' → logprob: -4.778199672698975

Token 564: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.000672639871481806
    2. 'a' → logprob: -8.000672340393066
    3. 'acions' → logprob: -9.500672340393066
    4. '[' → logprob: -9.750672340393066
    5. 'equ' → logprob: -10.375672340393066
    6. '{' → logprob: -10.625672340393066
    7. '(' → logprob: -10.750672340393066
    8. 'ações' → logprob: -11.375672340393066
    9. '=' → logprob: -11.625672340393066
    10. 'é' → logprob: -11.625672340393066

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16312432289123535
    2. '       ' → logprob: -2.1631243228912354
    3. '   ' → logprob: -4.663124084472656
    4. ' :' → logprob: -4.788124084472656
    5. ' =' → logprob: -5.038124084472656
    6. ',' → logprob: -5.538124084472656
    7. ' for' → logprob: -6.788124084472656
    8. ' (' → logprob: -7.288124084472656
    9. ' if' → logprob: -7.538124084472656
    10. ' t' → logprob: -7.663124084472656

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10074421763420105
    2. '   ' → logprob: -2.6007442474365234
    3. ' if' → logprob: -4.225744247436523
    4. '    ' → logprob: -6.850744247436523
    5. '        
' → logprob: -6.850744247436523
    6. '\n' → logprob: -7.100744247436523
    7. 'if' → logprob: -7.225744247436523
    8. ' ' → logprob: -7.350744247436523
    9. '    
' → logprob: -7.350744247436523
    10. '  
' → logprob: -7.600744247436523

Token 567: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3718191981315613
    2. '   ' → logprob: -1.871819257736206
    3. ' if' → logprob: -2.496819257736206
    4. 'if' → logprob: -2.746819257736206
    5. '    ' → logprob: -6.121819019317627
    6. ' t' → logprob: -6.246819019317627
    7. 't' → logprob: -6.496819019317627
    8. 'pos' → logprob: -6.871819019317627
    9. '           ' → logprob: -7.121819019317627
    10. '        ' → logprob: -7.371819019317627

Token 568: ' px' (ID: 27003)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7141544222831726
    2. ' if' → logprob: -0.7141544222831726
    3. '   ' → logprob: -3.9641544818878174
    4. 't' → logprob: -7.714154243469238
    5. 'pos' → logprob: -8.089154243469238
    6. '    ' → logprob: -8.839154243469238
    7. ' t' → logprob: -9.089154243469238
    8. '       ' → logprob: -9.214154243469238
    9. 'vel' → logprob: -9.339154243469238
    10. '```' → logprob: -9.339154243469238

Token 569: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2333817481994629
    2. '+' → logprob: -2.608381748199463
    3. '*' → logprob: -3.108381748199463
    4. ' *' → logprob: -3.358381748199463
    5. ' ==' → logprob: -3.733381748199463
    6. '==' → logprob: -4.733381748199463
    7. ' -' → logprob: -4.858381748199463
    8. '*t' → logprob: -5.483381748199463
    9. ',' → logprob: -6.108381748199463
    10. '==-' → logprob: -6.608381748199463

Token 570: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.09096681326627731
    2. ' vx' → logprob: -2.4659667015075684
    3. 'vel' → logprob: -6.340966701507568
    4. 'vy' → logprob: -9.340967178344727
    5. 't' → logprob: -9.590967178344727
    6. ' vel' → logprob: -10.215967178344727
    7. ' t' → logprob: -10.840967178344727
    8. 'v' → logprob: -11.590967178344727
    9. ' vy' → logprob: -11.715967178344727
    10. '   ' → logprob: -11.715967178344727

Token 571: ' *' (ID: 425)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.1970398724079132
    2. '*' → logprob: -1.9470398426055908
    3. ' *' → logprob: -3.322039842605591
    4. 't' → logprob: -10.447039604187012
    5. ' t' → logprob: -11.447039604187012
    6. ' +' → logprob: -11.697039604187012
    7. '+' → logprob: -12.322039604187012
    8. '   ' → logprob: -13.197039604187012
    9. '
' → logprob: -13.197039604187012
    10. '+t' → logprob: -13.197039604187012

Token 572: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004079112783074379
    2. ' t' → logprob: -5.504079341888428
    3. ' ' → logprob: -15.25407886505127
    4. '
' → logprob: -16.004079818725586
    5. '   ' → logprob: -16.629079818725586
    6. '	t' → logprob: -16.879079818725586
    7. '`t' → logprob: -16.879079818725586
    8. '(t' → logprob: -17.004079818725586
    9. ')t' → logprob: -17.004079818725586
    10. '*t' → logprob: -17.379079818725586

Token 573: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5296183824539185
    2. '=' → logprob: -1.1546183824539185
    3. ' ==' → logprob: -2.404618263244629
    4. ' =' → logprob: -5.279618263244629
    5. '>=' → logprob: -9.279618263244629
    6. '===' → logprob: -9.404618263244629
    7. '<=' → logprob: -9.654618263244629
    8. '   ' → logprob: -9.779618263244629
    9. ')' → logprob: -9.904618263244629
    10. '*' → logprob: -10.154618263244629

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '-' → logprob: -18.000158309936523
    4. '=' → logprob: -19.125158309936523
    5. '۰' → logprob: -19.500158309936523
    6. '   ' → logprob: -20.625158309936523
    7. '  ' → logprob: -20.875158309936523
    8. '00' → logprob: -20.875158309936523
    9. ' ' → logprob: -21.125158309936523
    10. '.' → logprob: -21.250158309936523

Token 575: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07692967355251312
    2. ' and' → logprob: -2.8269295692443848
    3. '
' → logprob: -5.451929569244385
    4. ' or' → logprob: -5.451929569244385
    5. '<|end|>' → logprob: -5.826929569244385
    6. '<|end|>' → logprob: -6.326929569244385
    7. 'and' → logprob: -7.826929569244385
    8. ',' → logprob: -7.951929569244385
    9. '\n' → logprob: -8.451930046081543
    10. ')' → logprob: -9.076930046081543

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00826916005462408
    2. ' or' → logprob: -5.258269309997559
    3. ' and' → logprob: -6.383269309997559
    4. '   ' → logprob: -7.133269309997559
    5. ' if' → logprob: -8.758269309997559
    6. 'and' → logprob: -9.508269309997559
    7. ')' → logprob: -9.883269309997559
    8. ',' → logprob: -9.883269309997559
    9. 'if' → logprob: -10.133269309997559
    10. '           ' → logprob: -10.258269309997559

Token 577: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5221598148345947
    2. ' and' → logprob: -1.1471598148345947
    3. 'and' → logprob: -2.6471598148345947
    4. ' or' → logprob: -4.272159576416016
    5. 'if' → logprob: -6.397159576416016
    6. ' if' → logprob: -6.647159576416016
    7. 'or' → logprob: -7.397159576416016
    8. '   ' → logprob: -7.522159576416016
    9. 'px' → logprob: -9.897159576416016
    10. '#' (adapté à ' #') → logprob: -10.272159576416016

Token 578: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.517145574092865
    2. ' py' → logprob: -1.0171456336975098
    3. '       ' → logprob: -3.3921456336975098
    4. ' if' → logprob: -5.51714563369751
    5. 'if' → logprob: -6.01714563369751
    6. ' t' → logprob: -7.14214563369751
    7. '   ' → logprob: -7.89214563369751
    8. 't' → logprob: -8.142145156860352
    9. '(py' → logprob: -9.142145156860352
    10. ' px' → logprob: -9.642145156860352

Token 579: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023260269314050674
    2. '+' → logprob: -3.7732603549957275
    3. ' *' → logprob: -12.023260116577148
    4. ' -' → logprob: -12.773260116577148
    5. ' ' → logprob: -13.023260116577148
    6. '*' → logprob: -13.523260116577148
    7. ' ' → logprob: -13.773260116577148
    8. '-' → logprob: -14.648260116577148
    9. '<|end|>' → logprob: -15.148260116577148
    10. ')' → logprob: -15.523260116577148

Token 580: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.14269055426120758
    2. ' vy' → logprob: -2.017690658569336
    3. ' ' → logprob: -11.642690658569336
    4. '   ' → logprob: -14.017690658569336
    5. 'wy' → logprob: -14.017690658569336
    6. 'uy' → logprob: -14.392690658569336
    7. 'Vy' → logprob: -14.392690658569336
    8. '  ' → logprob: -14.517690658569336
    9. '    ' → logprob: -14.642690658569336
    10. 'vyk' → logprob: -14.892690658569336

Token 581: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889397442340851
    2. '*' → logprob: -2.5788938999176025
    3. '*t' → logprob: -12.453893661499023
    4. ' ' → logprob: -16.453893661499023
    5. ' ' → logprob: -16.578893661499023
    6. '*object' → logprob: -16.953893661499023
    7. '```' → logprob: -17.703893661499023
    8. ' t' → logprob: -17.953893661499023
    9. '*np' → logprob: -18.328893661499023
    10. '**' → logprob: -18.328893661499023

Token 582: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07888989895582199
    2. ' t' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.578889846801758
    4. '	t' → logprob: -18.203889846801758
    5. '_t' → logprob: -18.328889846801758
    6. '`t' → logprob: -18.453889846801758
    7. '   ' → logprob: -19.078889846801758
    8. ')t' → logprob: -19.828889846801758
    9. ' ' → logprob: -20.078889846801758
    10. '*t' → logprob: -20.078889846801758

Token 583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759477615356445
    2. ' =' → logprob: -0.8259477615356445
    3. ' ==' → logprob: -12.325947761535645
    4. '==' → logprob: -12.950947761535645
    5. ' ' → logprob: -14.325947761535645
    6. ' t' → logprob: -16.200946807861328
    7. '*=' → logprob: -16.325946807861328
    8. '=t' → logprob: -16.450946807861328
    9. '```' → logprob: -16.450946807861328
    10. ')' → logprob: -16.575946807861328

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -20.3750057220459
    4. '=' → logprob: -21.0000057220459
    5. '   ' → logprob: -21.2500057220459
    6. '
' → logprob: -21.6250057220459
    7. '  ' → logprob: -21.8750057220459
    8. ' ' → logprob: -21.8750057220459
    9. 't' → logprob: -22.6250057220459
    10. '

' → logprob: -22.7500057220459

Token 585: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016807749634608626
    2. '<|end|>' → logprob: -6.876680850982666
    3. ' if' → logprob: -8.626680374145508
    4. '   ' → logprob: -9.251680374145508
    5. 'if' → logprob: -9.876680374145508
    6. ')' → logprob: -10.126680374145508
    7. '        
' → logprob: -10.126680374145508
    8. ',' → logprob: -10.251680374145508
    9. '\n' → logprob: -10.626680374145508
    10. '\' → logprob: -10.751680374145508

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.602024900028482e-05
    2. '        
' → logprob: -10.500085830688477
    3. '<|end|>' → logprob: -10.500085830688477
    4. '	' → logprob: -11.375085830688477
    5. '   ' → logprob: -12.750085830688477
    6. '\' → logprob: -13.000085830688477
    7. '
' → logprob: -13.125085830688477
    8. ',' → logprob: -13.625085830688477
    9. '	   ' → logprob: -13.750085830688477
    10. '\n' → logprob: -13.750085830688477

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001354824344161898
    2. '        
' → logprob: -9.50013542175293
    3. '   ' → logprob: -10.50013542175293
    4. '
' → logprob: -11.00013542175293
    5. ' if' → logprob: -11.75013542175293
    6. '  
' → logprob: -12.75013542175293
    7. '    
' → logprob: -13.50013542175293
    8. 'if' → logprob: -13.62513542175293
    9. '           ' → logprob: -14.62513542175293
    10. '       
' → logprob: -14.62513542175293

Token 588: ' Ces' (ID: 35720)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026765360962599516
    2. ' if' → logprob: -8.87526798248291
    3. '        
' → logprob: -9.87526798248291
    4. 'if' → logprob: -10.00026798248291
    5. '   ' → logprob: -11.50026798248291
    6. ' t' → logprob: -11.75026798248291
    7. '
' → logprob: -12.50026798248291
    8. '```' → logprob: -12.87526798248291
    9. 't' → logprob: -13.75026798248291
    10. '	' → logprob: -13.87526798248291

Token 589: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.28044968843460083
    2. ':' → logprob: -3.155449628829956
    3. 'if' → logprob: -3.155449628829956
    4. ' two' → logprob: -3.155449628829956
    5. ' lignes' → logprob: -3.905449628829956
    6. ' lines' → logprob: -4.030449867248535
    7. 'de' → logprob: -4.155449867248535
    8. 't' → logprob: -4.405449867248535
    9. ' t' → logprob: -4.655449867248535
    10. ' ' → logprob: -4.780449867248535

Token 590: ' équ' (ID: 18899)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7613847851753235
    2. ':' → logprob: -0.8863847851753235
    3. ' lines' → logprob: -3.6363847255706787
    4. 'and' → logprob: -3.7613847255706787
    5. ' ==' → logprob: -4.011384963989258
    6. ' are' → logprob: -4.261384963989258
    7. '==' → logprob: -5.386384963989258
    8. ' t' → logprob: -5.386384963989258
    9. ' must' → logprob: -5.511384963989258
    10. ' lignes' → logprob: -5.511384963989258

Token 591: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -7.016616291366518e-05
    2. 'a' → logprob: -10.500070571899414
    3. 'acions' → logprob: -11.625070571899414
    4. 'autions' → logprob: -12.375070571899414
    5. 'é' → logprob: -12.875070571899414
    6. 'ections' → logprob: -13.000070571899414
    7. 'actions' → logprob: -13.250070571899414
    8. 'ales' → logprob: -13.250070571899414
    9. 'lations' → logprob: -13.250070571899414
    10. 'ais' → logprob: -13.375070571899414

Token 592: ' doivent' (ID: 44722)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.8665893077850342
    2. ' if' → logprob: -1.4915893077850342
    3. ' and' → logprob: -2.116589307785034
    4. ' doivent' → logprob: -2.741589307785034
    5. ' are' → logprob: -3.741589307785034
    6. 'if' → logprob: -3.866589307785034
    7. 'must' → logprob: -3.991589307785034
    8. ':' → logprob: -3.991589307785034
    9. '<|end|>' → logprob: -3.991589307785034
    10. 'and' → logprob: -4.116589546203613

Token 593: ' être' (ID: 9104)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5213114023208618
    2. ' avoir' → logprob: -1.2713114023208618
    3. 'have' → logprob: -2.6463112831115723
    4. 'avoir' → logprob: -4.021311283111572
    5. ' être' → logprob: -5.146311283111572
    6. '<|end|>' → logprob: -5.396311283111572
    7. '_have' → logprob: -5.396311283111572
    8. ' be' → logprob: -5.771311283111572
    9. ''avoir' → logprob: -5.771311283111572
    10. ' t' → logprob: -6.021311283111572

Token 594: ' coh' (ID: 85287)
  Prédit: 'compat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compat' → logprob: -0.5386447906494141
    2. 's' → logprob: -2.163644790649414
    3. 'cons' → logprob: -2.788644790649414
    4. 'co' → logprob: -2.788644790649414
    5. 'v' → logprob: -2.913644790649414
    6. 'compatible' → logprob: -3.413644790649414
    7. 'sim' → logprob: -3.413644790649414
    8. 'consistent' → logprob: -3.913644790649414
    9. 'sol' → logprob: -4.413644790649414
    10. ' compatibles' → logprob: -4.538644790649414

Token 595: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.2701912820339203
    2. 'érents' → logprob: -1.5201913118362427
    3. 'r' → logprob: -4.520191192626953
    4. 'er' → logprob: -5.645191192626953
    5. '�r' → logprob: -6.395191192626953
    6. 'érent' → logprob: -6.645191192626953
    7. 'é' → logprob: -8.395191192626953
    8. 'érences' → logprob: -9.270191192626953
    9. '{' → logprob: -9.645191192626953
    10. ' ér' → logprob: -10.270191192626953

Token 596: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0014572588261216879
    2. 'ent' → logprob: -7.251457214355469
    3. 'ente' → logprob: -7.501457214355469
    4. 'ents' → logprob: -9.376457214355469
    5. 'es' → logprob: -9.501457214355469
    6. '
' → logprob: -12.251457214355469
    7. 'enti' → logprob: -12.251457214355469
    8. 'e' → logprob: -12.626457214355469
    9. 'ENTES' → logprob: -12.626457214355469
    10. 'antes' → logprob: -13.001457214355469

Token 597: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6167197227478027
    2. ',' → logprob: -1.2417197227478027
    3. ':' → logprob: -2.7417197227478027
    4. ' et' → logprob: -3.1167197227478027
    5. ' (' → logprob: -3.7417197227478027
    6. '.' → logprob: -5.241719722747803
    7. '   ' → logprob: -5.241719722747803
    8. ' and' → logprob: -5.241719722747803
    9. '<|end|>' → logprob: -5.241719722747803
    10. ' pour' → logprob: -5.491719722747803

Token 598: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.699529230594635
    2. ' t' → logprob: -0.699529230594635
    3. ' avoir' → logprob: -6.57452917098999
    4. ' que' → logprob: -6.82452917098999
    5. 'le' → logprob: -7.19952917098999
    6. ' un' → logprob: -7.44952917098999
    7. ' le' → logprob: -7.44952917098999
    8. ' ex' → logprob: -8.074529647827148
    9. ' les' → logprob: -8.199529647827148
    10. 'un' → logprob: -8.574529647827148

Token 599: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.05081037059426308
    2. ' même' → logprob: -3.3008103370666504
    3. 't' → logprob: -4.42581033706665
    4. ' ' → logprob: -8.425810813903809
    5. ' even' → logprob: -8.550810813903809
    6. 'e' → logprob: -9.050810813903809
    7. 'm' → logprob: -10.300810813903809
    8. ' same' → logprob: -10.800810813903809
    9. ' unique' → logprob: -10.925810813903809
    10. ' mesmo' → logprob: -11.050810813903809

Token 600: ' unique' (ID: 5746)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7663742899894714
    2. '>=' → logprob: -0.7663742899894714
    3. '>' → logprob: -3.141374349594116
    4. '≥' → logprob: -4.391374111175537
    5. ' >' → logprob: -5.141374111175537
    6. ':' → logprob: -6.141374111175537
    7. ' ≥' → logprob: -6.391374111175537
    8. '=' → logprob: -7.141374111175537
    9. ',' → logprob: -7.266374111175537
    10. ' ' → logprob: -7.766374111175537

Token 601: ' ≥' (ID: 99731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027786748483777046
    2. ',' → logprob: -4.652786731719971
    3. ':' → logprob: -4.652786731719971
    4. ' if' → logprob: -6.152786731719971
    5. '   ' → logprob: -6.277786731719971
    6. '<|end|>' → logprob: -7.027786731719971
    7. '=' → logprob: -7.277786731719971
    8. '.' → logprob: -7.902786731719971
    9. ' =' → logprob: -7.902786731719971
    10. ' and' → logprob: -8.152787208557129

Token 602: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005235190503299236
    2. ' ' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.755234718322754
    4. '1' → logprob: -15.130234718322754
    5. '    ' → logprob: -15.380234718322754
    6. '+' → logprob: -15.505234718322754
    7. '  ' → logprob: -16.38023567199707
    8. ' +' → logprob: -17.38023567199707
    9. '```' → logprob: -17.50523567199707
    10. '=' → logprob: -17.63023567199707

Token 603: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005888947052881122
    2. ',' → logprob: -8.375589370727539
    3. '        
' → logprob: -9.375589370727539
    4. '   ' → logprob: -9.500589370727539
    5. ':' → logprob: -9.625589370727539
    6. ' if' → logprob: -10.000589370727539
    7. '
' → logprob: -11.000589370727539
    8. 'if' → logprob: -11.250589370727539
    9. '<|end|>' → logprob: -11.875589370727539
    10. ')' → logprob: -12.000589370727539

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005347720813006163
    2. '   ' → logprob: -5.255347728729248
    3. '        
' → logprob: -10.25534725189209
    4. ' if' → logprob: -10.38034725189209
    5. ' t' → logprob: -11.13034725189209
    6. '```' → logprob: -11.63034725189209
    7. 't' → logprob: -12.38034725189209
    8. 'if' → logprob: -12.63034725189209
    9. '    
' → logprob: -12.75534725189209
    10. '           ' → logprob: -13.00534725189209

Token 605: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021590324118733406
    2. ' if' → logprob: -4.396590232849121
    3. 'if' → logprob: -4.771590232849121
    4. '   ' → logprob: -8.146590232849121
    5. 't' (adapté à ' t') → logprob: -9.021590232849121
    6. '        
' → logprob: -9.646590232849121
    7. '```' → logprob: -10.646590232849121
    8. 'try' → logprob: -11.146590232849121
    9. ' t' → logprob: -11.396590232849121
    10. '           ' → logprob: -11.896590232849121

Token 606: '1' (ID: 16)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2044970989227295
    2. ' =' → logprob: -1.3294970989227295
    3. '_' → logprob: -1.5794970989227295
    4. '_px' → logprob: -2.0794970989227295
    5. '1' → logprob: -3.2044970989227295
    6. 'x' → logprob: -3.5794970989227295
    7. '=' → logprob: -4.079497337341309
    8. '_pos' → logprob: -5.454497337341309
    9. ' _' → logprob: -5.704497337341309
    10. '0' → logprob: -5.954497337341309

Token 607: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22567500174045563
    2. ' -' → logprob: -2.475675106048584
    3. 'None' → logprob: -2.475675106048584
    4. '(-' → logprob: -5.225675106048584
    5. '-none' → logprob: -5.350675106048584
    6. '-f' → logprob: -5.600675106048584
    7. '-(' → logprob: -5.600675106048584
    8. '-p' → logprob: -5.725675106048584
    9. ' None' → logprob: -6.350675106048584
    10. '-time' → logprob: -6.600675106048584

Token 609: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32115089893341064
    2. '<|end|>' → logprob: -1.9461508989334106
    3. '       ' → logprob: -2.321150779724121
    4. '<|end|>' → logprob: -4.446150779724121
    5. 'if' → logprob: -4.571150779724121
    6. ' if' → logprob: -4.821150779724121
    7. ',' → logprob: -6.571150779724121
    8. '        
' → logprob: -7.696150779724121
    9. '        ' → logprob: -7.821150779724121
    10. 't' → logprob: -8.571150779724121

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1306612491607666
    2. ' if' → logprob: -2.8806612491607666
    3. '
' → logprob: -3.0056612491607666
    4. 'if' → logprob: -4.5056610107421875
    5. '<|end|>' → logprob: -6.1306610107421875
    6. '        
' → logprob: -7.0056610107421875
    7. '        ' → logprob: -7.7556610107421875
    8. 't' → logprob: -8.255661010742188
    9. ',' → logprob: -8.630661010742188
    10. '   ' → logprob: -8.755661010742188

Token 611: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18555617332458496
    2. 't' → logprob: -1.810556173324585
    3. 'None' → logprob: -5.560556411743164
    4. ' if' → logprob: -6.935556411743164
    5. 'sys' → logprob: -8.060556411743164
    6. ' t' → logprob: -8.560556411743164
    7. 'float' → logprob: -9.185556411743164
    8. '       ' → logprob: -9.310556411743164
    9. '   ' → logprob: -9.435556411743164
    10. 'try' → logprob: -10.060556411743164

Token 612: ' abs' (ID: 8443)
  Prédit: ' vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.0711558535695076
    2. ' abs' → logprob: -2.9461557865142822
    3. 'vx' → logprob: -4.196156024932861
    4. 'abs' → logprob: -7.571156024932861
    5. '   ' → logprob: -7.696156024932861
    6. ' vel' → logprob: -9.696155548095703
    7. ' ' → logprob: -11.321155548095703
    8. 'vel' → logprob: -11.446155548095703
    9. '  ' → logprob: -11.696155548095703
    10. '    ' → logprob: -11.821155548095703

Token 613: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.06219734624028206
    2. '(px' → logprob: -2.93719744682312
    3. '(pos' → logprob: -5.562197208404541
    4. '(' → logprob: -5.687197208404541
    5. '(py' → logprob: -10.1871976852417
    6. 'vel' → logprob: -12.4371976852417
    7. '(dx' → logprob: -12.6871976852417
    8. '(p' → logprob: -12.9371976852417
    9. '(sys' → logprob: -13.1871976852417
    10. ' vx' → logprob: -13.3121976852417

Token 614: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. 'el' → logprob: -14.250020027160645
    4. '_x' → logprob: -15.875020027160645
    5. 'xel' → logprob: -17.000019073486328
    6. '[x' → logprob: -17.625019073486328
    7. '1' → logprob: -17.625019073486328
    8. ' x' → logprob: -18.000019073486328
    9. 'ex' → logprob: -18.375019073486328
    10. '	x' → logprob: -18.500019073486328

Token 615: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00288261822424829
    2. ')>' → logprob: -5.877882480621338
    3. ' )' → logprob: -9.502882957458496
    4. '[' → logprob: -14.002882957458496
    5. ' ' → logprob: -14.377882957458496
    6. '   ' → logprob: -14.502882957458496
    7. ')>=' → logprob: -15.502882957458496
    8. '  ' → logprob: -16.00288200378418
    9. ')">' → logprob: -16.00288200378418
    10. ')
' → logprob: -16.00288200378418

Token 616: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10027556121349335
    2. ' >' → logprob: -2.3502755165100098
    3. ')>' → logprob: -10.100275993347168
    4. '">' → logprob: -11.475275993347168
    5. ')' → logprob: -12.225275993347168
    6. '()>' → logprob: -12.350275993347168
    7. ' ' → logprob: -12.725275993347168
    8. '>=' → logprob: -13.725275993347168
    9. '[' → logprob: -13.725275993347168
    10. '```' → logprob: -14.475275993347168

Token 617: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.08924620598554611
    2. '1' → logprob: -2.7142462730407715
    3. '0' → logprob: -3.9642462730407715
    4. ' EPS' → logprob: -8.964245796203613
    5. ' ' → logprob: -11.589245796203613
    6. 'EP' → logprob: -12.714245796203613
    7. 'eps' → logprob: -14.089245796203613
    8. '   ' → logprob: -15.089245796203613
    9. 'E' → logprob: -15.214245796203613
    10. 'ESP' → logprob: -15.714245796203613

Token 618: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03854401409626007
    2. ':
' → logprob: -3.663543939590454
    3. ' and' → logprob: -4.538544178009033
    4. 'and' → logprob: -6.538544178009033
    5. ' :' → logprob: -11.413543701171875
    6. ':
' → logprob: -11.788543701171875
    7. '):
' → logprob: -12.288543701171875
    8. ':

' → logprob: -12.538543701171875
    9. '=' → logprob: -12.663543701171875
    10. ' :
' → logprob: -13.538543701171875

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7928726077079773
    2. ' t' → logprob: -1.167872667312622
    3. ' (' → logprob: -2.417872667312622
    4. '        ' → logprob: -2.917872667312622
    5. ' px' → logprob: -3.792872667312622
    6. 't' → logprob: -4.167872428894043
    7. '            ' → logprob: -4.792872428894043
    8. '       ' → logprob: -4.917872428894043
    9. ' =' → logprob: -4.917872428894043
    10. ' ' → logprob: -5.042872428894043

Token 620: ' t' (ID: 260)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15060169994831085
    2. '-p' → logprob: -2.775601625442505
    3. '-' → logprob: -3.650601625442505
    4. 't' (adapté à ' t') → logprob: -3.900601625442505
    5. '-t' → logprob: -4.275601863861084
    6. ' t' → logprob: -4.400601863861084
    7. ' px' → logprob: -5.775601863861084
    8. '   ' → logprob: -7.275601863861084
    9. ' ' → logprob: -8.150601387023926
    10. 'px' → logprob: -8.275601387023926

Token 621: '_x' (ID: 7054)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15119154751300812
    2. '=' → logprob: -2.026191473007202
    3. ' =' → logprob: -4.776191711425781
    4. ' ' → logprob: -11.151191711425781
    5. '_' → logprob: -11.651191711425781
    6. '=-' → logprob: -12.276191711425781
    7. '```' → logprob: -12.526191711425781
    8. 'x' → logprob: -12.651191711425781
    9. '_=' → logprob: -12.776191711425781
    10. 't' → logprob: -12.901191711425781

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. '=-' → logprob: -16.163042068481445
    4. '=int' → logprob: -16.538042068481445
    5. '1' → logprob: -16.663042068481445
    6. '=t' → logprob: -16.913042068481445
    7. '=(-' → logprob: -17.038042068481445
    8. '＝' → logprob: -17.163042068481445
    9. ' ' → logprob: -17.288042068481445
    10. '=float' → logprob: -18.038042068481445

Token 623: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.30507954955101013
    2. ' -' → logprob: -2.055079460144043
    3. '-p' → logprob: -2.055079460144043
    4. '-pos' → logprob: -5.430079460144043
    5. '-position' → logprob: -7.805079460144043
    6. '-t' → logprob: -8.180079460144043
    7. '-ip' → logprob: -9.055079460144043
    8. '-x' → logprob: -9.055079460144043
    9. '-time' → logprob: -9.305079460144043
    10. '-value' → logprob: -9.430079460144043

Token 624: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0004486653197091073
    2. 'pos' → logprob: -7.750448703765869
    3. ' px' → logprob: -11.000448226928711
    4. '(px' → logprob: -13.750448226928711
    5. '   ' → logprob: -15.625448226928711
    6. 'py' → logprob: -17.87544822692871
    7. '(' → logprob: -18.37544822692871
    8. '```' → logprob: -18.62544822692871
    9. '_px' → logprob: -18.62544822692871
    10. 'float' → logprob: -18.75044822692871

Token 625: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.7640206217765808
    2. '/' → logprob: -1.0140206813812256
    3. '/v' → logprob: -1.7640206813812256
    4. '/t' → logprob: -9.639020919799805
    5. '/x' → logprob: -10.639020919799805
    6. '/tmp' → logprob: -13.639020919799805
    7. '/pi' → logprob: -13.764020919799805
    8. '/
' → logprob: -13.889020919799805
    9. '/vue' → logprob: -14.139020919799805
    10. '/V' → logprob: -14.264020919799805

Token 626: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00012356207298580557
    2. ' vx' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.375123977661133
    4. 'vy' → logprob: -17.750123977661133
    5. 'vw' → logprob: -19.500123977661133
    6. 'float' → logprob: -19.500123977661133
    7. ' ' → logprob: -19.625123977661133
    8. 'vel' → logprob: -19.750123977661133
    9. 'vz' → logprob: -20.000123977661133
    10. 'ux' → logprob: -20.375123977661133

Token 627: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5684509873390198
    2. '       ' → logprob: -0.9434509873390198
    3. '           ' → logprob: -3.318450927734375
    4. '<|end|>' → logprob: -5.318450927734375
    5. '            
' → logprob: -7.443450927734375
    6. 'else' → logprob: -7.443450927734375
    7. '<|end|>' → logprob: -7.568450927734375
    8. '        
' → logprob: -8.318450927734375
    9. '  
' → logprob: -8.693450927734375
    10. '    
' → logprob: -8.818450927734375

Token 628: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7041823863983154
    2. '       ' → logprob: -0.7041823863983154
    3. '           ' → logprob: -4.9541826248168945
    4. '<|end|>' → logprob: -6.2041826248168945
    5. '    
' → logprob: -8.329182624816895
    6. '\n' → logprob: -8.454182624816895
    7. '<|end|>' → logprob: -8.704182624816895
    8. '        
' → logprob: -8.704182624816895
    9. 'else' → logprob: -8.954182624816895
    10. 'if' → logprob: -9.204182624816895

Token 629: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2266237437725067
    2. '       ' → logprob: -1.726623773574829
    3. 'else' (adapté à ' else') → logprob: -3.851623773574829
    4. ' else' → logprob: -6.10162353515625
    5. '        
' → logprob: -7.97662353515625
    6. ' 
' → logprob: -8.22662353515625
    7. '    
' → logprob: -8.35162353515625
    8. '  
' → logprob: -8.72662353515625
    9. '\n' → logprob: -9.22662353515625
    10. '   ' → logprob: -9.35162353515625

Token 630: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055842120200395584
    2. ':
' → logprob: -2.930842161178589
    3. '           ' → logprob: -7.43084192276001
    4. ' :' → logprob: -8.680842399597168
    5. '=' → logprob: -9.680842399597168
    6. '       ' → logprob: -9.930842399597168
    7. '   ' → logprob: -10.430842399597168
    8. ' :
' → logprob: -10.430842399597168
    9. ' =' → logprob: -12.180842399597168
    10. '        ' → logprob: -12.680842399597168

Token 631: '           ' (ID: 352)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7298189401626587
    2. ' None' → logprob: -1.6048189401626587
    3. '           ' → logprob: -1.8548189401626587
    4. 'None' → logprob: -2.354818820953369
    5. 't' → logprob: -2.729818820953369
    6. '   ' → logprob: -8.354819297790527
    7. '       ' → logprob: -9.854819297790527
    8. '            ' → logprob: -9.854819297790527
    9. '            
' → logprob: -10.854819297790527
    10. ' ' → logprob: -10.854819297790527

Token 632: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.01087225042283535
    2. ' t' → logprob: -4.6358723640441895
    3. 'None' → logprob: -6.8858723640441895
    4. ' None' → logprob: -9.760871887207031
    5. '   ' → logprob: -10.385871887207031
    6. '           ' → logprob: -12.885871887207031
    7. '       ' → logprob: -14.010871887207031
    8. ' ' → logprob: -14.635871887207031
    9. '	t' → logprob: -14.760871887207031
    10. 'if' → logprob: -15.260871887207031

Token 633: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004108084831386805
    2. '_' → logprob: -6.00410795211792
    3. '_y' → logprob: -6.87910795211792
    4. 'x' → logprob: -7.62910795211792
    5. '1' → logprob: -9.629108428955078
    6. '=' → logprob: -11.254108428955078
    7. '_=' → logprob: -11.254108428955078
    8. 'None' → logprob: -11.754108428955078
    9. '=None' → logprob: -12.379108428955078
    10. '_t' → logprob: -12.379108428955078

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002478985348716378
    2. ' =' → logprob: -6.002479076385498
    3. '=None' → logprob: -12.62747859954834
    4. 'None' → logprob: -18.002479553222656
    5. '=}' → logprob: -18.752479553222656
    6. ' ' → logprob: -18.877479553222656
    7. ' None' → logprob: -19.627479553222656
    8. ',' → logprob: -19.752479553222656
    9. ')' → logprob: -20.127479553222656
    10. '=
' → logprob: -20.252479553222656

Token 635: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001860174525063485
    2. ' None' → logprob: -8.7501859664917
    3. 'float' → logprob: -10.5001859664917
    4. 'sys' → logprob: -17.500186920166016
    5. 'math' → logprob: -18.000186920166016
    6. '   ' → logprob: -18.250186920166016
    7. ' ' → logprob: -19.000186920166016
    8. ' float' → logprob: -19.250186920166016
    9. 'none' → logprob: -19.375186920166016
    10. '  ' → logprob: -19.625186920166016

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5335469245910645
    2. '
' → logprob: -1.2835469245910645
    3. '<|end|>' → logprob: -2.0335469245910645
    4. '<|end|>' → logprob: -6.4085469245910645
    5. ' if' → logprob: -6.6585469245910645
    6. 'if' → logprob: -6.7835469245910645
    7. '        
' → logprob: -7.2835469245910645
    8. '   ' → logprob: -8.283546447753906
    9. '\
' → logprob: -9.033546447753906
    10. '  
' → logprob: -9.283546447753906

Token 637: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9575636386871338
    2. '       ' → logprob: -1.2075636386871338
    3. '<|end|>' → logprob: -1.2075636386871338
    4. '<|end|>' → logprob: -5.082563400268555
    5. '        
' → logprob: -5.207563400268555
    6. '  
' → logprob: -6.332563400268555
    7. ' if' → logprob: -6.707563400268555
    8. '\n' → logprob: -6.957563400268555
    9. '\
' → logprob: -7.082563400268555
    10. '    
' → logprob: -8.332563400268555

Token 638: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015653511509299278
    2. ' if' → logprob: -4.765653610229492
    3. 'if' (adapté à ' if') → logprob: -5.265653610229492
    4. '        
' → logprob: -6.765653610229492
    5. '
' → logprob: -7.765653610229492
    6. '   ' → logprob: -9.765653610229492
    7. '<|end|>' → logprob: -9.765653610229492
    8. '  
' → logprob: -10.140653610229492
    9. ' 
' → logprob: -10.640653610229492
    10. '        ' → logprob: -11.265653610229492

Token 639: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4740840196609497
    2. ' abs' → logprob: -0.9740840196609497
    3. '(abs' → logprob: -11.97408390045166
    4. 'py' → logprob: -15.59908390045166
    5. ' ' → logprob: -15.84908390045166
    6. ' py' → logprob: -16.599084854125977
    7. ' ' → logprob: -16.849084854125977
    8. '.abs' → logprob: -16.974084854125977
    9. '   ' → logprob: -16.974084854125977
    10. 'Abs' → logprob: -17.724084854125977

Token 640: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.62500286102295
    3. 'vy' → logprob: -14.62500286102295
    4. ' (' → logprob: -14.87500286102295
    5. '(py' → logprob: -15.37500286102295
    6. ' vy' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '(
' → logprob: -17.625001907348633
    9. '0' → logprob: -17.625001907348633
    10. '2' → logprob: -18.125001907348633

Token 641: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.935296834039036e-06
    2. 'vy' → logprob: -13.87500286102295
    3. ' y' → logprob: -14.62500286102295
    4. 'x' → logprob: -14.75000286102295
    5. 'py' → logprob: -15.37500286102295
    6. ')' → logprob: -15.37500286102295
    7. '
' → logprob: -15.87500286102295
    8. '_y' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.375003814697266
    10. ')
' → logprob: -17.000003814697266

Token 642: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.943783253314905e-05
    2. ')>' → logprob: -9.750059127807617
    3. ' )' → logprob: -14.375059127807617
    4. '>' → logprob: -15.125059127807617
    5. ' >' → logprob: -16.125059127807617
    6. '）' → logprob: -16.375059127807617
    7. ')
' → logprob: -17.875059127807617
    8. '[' → logprob: -18.000059127807617
    9. ']' → logprob: -18.375059127807617
    10. '),' → logprob: -18.875059127807617

Token 643: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931514739990234
    2. ' >' → logprob: -0.6931514739990234
    3. ' ' → logprob: -13.193151473999023
    4. ')>' → logprob: -13.818151473999023
    5. '()>' → logprob: -14.443151473999023
    6. ' ' → logprob: -15.068151473999023
    7. ')' → logprob: -15.943151473999023
    8. '">' → logprob: -16.318151473999023
    9. '＞' → logprob: -16.568151473999023
    10. '(">' → logprob: -16.943151473999023

Token 644: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0004311460361350328
    2. ' EPS' → logprob: -7.750431060791016
    3. 'ESP' → logprob: -14.875431060791016
    4. 'EOS' → logprob: -17.375431060791016
    5. '0' → logprob: -17.500431060791016
    6. ' ' → logprob: -17.625431060791016
    7. 'EP' → logprob: -17.625431060791016
    8. 'ES' → logprob: -19.250431060791016
    9. 'eps' → logprob: -19.750431060791016
    10. 'EPT' → logprob: -20.250431060791016

Token 645: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009800361469388008
    2. ':
' → logprob: -4.634800434112549
    3. ' :' → logprob: -11.00979995727539
    4. '=' → logprob: -11.25979995727539
    5. '           ' → logprob: -12.00979995727539
    6. ':

' → logprob: -13.38479995727539
    7. '       ' → logprob: -13.38479995727539
    8. '):
' → logprob: -13.50979995727539
    9. '):' → logprob: -13.50979995727539
    10. ' :
' → logprob: -14.00979995727539

Token 646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003532198315951973
    2. '       ' → logprob: -9.12535285949707
    3. ':' → logprob: -10.12535285949707
    4. 't' → logprob: -10.25035285949707
    5. '               ' → logprob: -10.50035285949707
    6. 'None' → logprob: -10.75035285949707
    7. '   ' → logprob: -11.00035285949707
    8. '         ' → logprob: -11.12535285949707
    9. '          ' → logprob: -11.25035285949707
    10. ' t' → logprob: -11.50035285949707

Token 647: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.3869718909263611
    2. ' t' → logprob: -1.1369719505310059
    3. '       ' → logprob: -10.261971473693848
    4. '   ' → logprob: -10.386971473693848
    5. '           ' → logprob: -11.261971473693848
    6. '	t' → logprob: -11.386971473693848
    7. '_t' → logprob: -12.761971473693848
    8. ' ' → logprob: -12.761971473693848
    9. '`t' → logprob: -13.261971473693848
    10. ' ' → logprob: -14.011971473693848

Token 648: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -9.088346359931165e-07
    2. 'y' → logprob: -14.375000953674316
    3. '_x' → logprob: -15.375000953674316
    4. '_' → logprob: -16.5
    5. '_py' → logprob: -17.25
    6. ' _' → logprob: -17.75
    7. '   ' → logprob: -18.125
    8. '=' → logprob: -18.75
    9. '=_' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.386871337890625
    4. '＝' → logprob: -18.136871337890625
    5. '=None' → logprob: -18.261871337890625
    6. ')' → logprob: -19.261871337890625
    7. ' =
' → logprob: -19.636871337890625
    8. '=-' → logprob: -19.761871337890625
    9. ' ' → logprob: -19.886871337890625
    10. '=
' → logprob: -20.011871337890625

Token 650: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5550063848495483
    2. '-p' → logprob: -1.0550063848495483
    3. '-' → logprob: -2.555006504058838
    4. '-P' → logprob: -10.68000602722168
    5. '-pe' → logprob: -11.43000602722168
    6. '-python' → logprob: -11.80500602722168
    7. '-y' → logprob: -13.05500602722168
    8. '-п' → logprob: -14.05500602722168
    9. '-pos' → logprob: -14.18000602722168
    10. '-t' → logprob: -14.43000602722168

Token 651: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -3.03521392197581e-05
    2. ' py' → logprob: -10.500030517578125
    3. '(py' → logprob: -12.875030517578125
    4. '_py' → logprob: -15.500030517578125
    5. '.py' → logprob: -17.625030517578125
    6. ' ' → logprob: -20.125030517578125
    7. 'Py' → logprob: -20.125030517578125
    8. 'ply' → logprob: -21.000030517578125
    9. '   ' → logprob: -21.125030517578125
    10. 'px' → logprob: -21.250030517578125

Token 652: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.018287483602762222
    2. ' /' → logprob: -4.018287658691406
    3. '/v' → logprob: -8.893287658691406
    4. '/y' → logprob: -15.393287658691406
    5. '/
' → logprob: -17.393287658691406
    6. '/usr' → logprob: -17.393287658691406
    7. '/V' → logprob: -17.768287658691406
    8. ' ' → logprob: -18.268287658691406
    9. '/vue' → logprob: -18.393287658691406
    10. '[' → logprob: -18.893287658691406

Token 653: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0006268949946388602
    2. ' vy' → logprob: -7.375627040863037
    3. 'yv' → logprob: -15.875626564025879
    4. 'v' → logprob: -16.625627517700195
    5. '   ' → logprob: -17.000627517700195
    6. ' ' → logprob: -17.875627517700195
    7. 'vyk' → logprob: -18.125627517700195
    8. 'wy' → logprob: -18.375627517700195
    9. 'vey' → logprob: -18.500627517700195
    10. 'vel' → logprob: -18.750627517700195

Token 654: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03563239797949791
    2. 'else' → logprob: -4.410632610321045
    3. '<|end|>' → logprob: -4.410632610321045
    4. ' else' → logprob: -4.910632610321045
    5. ':' → logprob: -7.160632610321045
    6. '<|end|>' → logprob: -7.285632610321045
    7. '
' → logprob: -7.910632610321045
    8. ':
' → logprob: -8.035632133483887
    9. ')' → logprob: -8.035632133483887
    10. '=None' → logprob: -9.160632133483887

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06479229032993317
    2. '<|end|>' → logprob: -3.4397923946380615
    3. ':' → logprob: -4.314792156219482
    4. '   ' → logprob: -5.814792156219482
    5. ')' → logprob: -5.939792156219482
    6. '
' → logprob: -6.189792156219482
    7. '<|end|>' → logprob: -6.189792156219482
    8. '[' → logprob: -6.689792156219482
    9. '        
' → logprob: -7.064792156219482
    10. '=' → logprob: -7.189792156219482

Token 656: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03872431069612503
    2. 'else' (adapté à ' else') → logprob: -4.038724422454834
    3. ' else' → logprob: -4.538724422454834
    4. '
' → logprob: -6.163724422454834
    5. '   ' → logprob: -6.163724422454834
    6. '<|end|>' → logprob: -6.413724422454834
    7. '        
' → logprob: -6.538724422454834
    8. ':' → logprob: -8.038723945617676
    9. '  
' → logprob: -8.288723945617676
    10. '=' → logprob: -8.413723945617676

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010041504167020321
    2. ':
' → logprob: -4.6350417137146
    3. '=None' → logprob: -9.010041236877441
    4. '=' → logprob: -9.260041236877441
    5. '           ' → logprob: -10.510041236877441
    6. 'None' → logprob: -10.510041236877441
    7. ' None' → logprob: -12.260041236877441
    8. '(None' → logprob: -12.635041236877441
    9. ' =' → logprob: -14.010041236877441
    10. '       ' → logprob: -14.010041236877441

Token 658: '           ' (ID: 352)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1394384801387787
    2. ' None' → logprob: -2.1394383907318115
    3. '           ' → logprob: -4.389438629150391
    4. '(None' → logprob: -11.26443862915039
    5. '=None' → logprob: -11.88943862915039
    6. '   ' → logprob: -13.26443862915039
    7. '_None' → logprob: -13.38943862915039
    8. ',None' → logprob: -13.76443862915039
    9. '            ' → logprob: -15.63943862915039
    10. '0' → logprob: -15.88943862915039

Token 659: ' t' (ID: 260)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011352162109687924
    2. ' None' → logprob: -7.376135349273682
    3. 't' (adapté à ' t') → logprob: -7.751135349273682
    4. '           ' → logprob: -9.501134872436523
    5. '   ' → logprob: -12.876134872436523
    6. ' t' → logprob: -14.501134872436523
    7. 'N' → logprob: -16.501134872436523
    8. '=None' → logprob: -16.876134872436523
    9. 'No' → logprob: -17.001134872436523
    10. '(None' → logprob: -17.126134872436523

Token 660: '_y' (ID: 9410)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30206701159477234
    2. '_' → logprob: -1.6770670413970947
    3. '=None' → logprob: -3.5520670413970947
    4. '_=' → logprob: -3.8020670413970947
    5. '_y' → logprob: -4.052066802978516
    6. '_x' → logprob: -5.427066802978516
    7. 'None' → logprob: -7.302066802978516
    8. '_None' → logprob: -8.802066802978516
    9. ' =' → logprob: -9.552066802978516
    10. '=_' → logprob: -10.052066802978516

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011060673743486404
    2. ' =' → logprob: -4.51106071472168
    3. '=None' → logprob: -11.26106071472168
    4. '=

' → logprob: -19.63606071472168
    5. '=
' → logprob: -19.76106071472168
    6. 'None' → logprob: -19.88606071472168
    7. ' None' → logprob: -20.01106071472168
    8. ':' → logprob: -22.01106071472168
    9. '＝' → logprob: -22.13606071472168
    10. '=}' → logprob: -22.26106071472168

Token 662: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '_None' → logprob: -19.75002098083496
    4. 'none' → logprob: -20.12502098083496
    5. '=None' → logprob: -20.25002098083496
    6. '(None' → logprob: -20.37502098083496
    7. ' ' → logprob: -21.87502098083496
    8. '0' → logprob: -21.87502098083496
    9. '   ' → logprob: -21.87502098083496
    10. 'No' → logprob: -22.00002098083496

Token 663: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07862381637096405
    2. '<|end|>' → logprob: -2.7036237716674805
    3. '        
' → logprob: -5.4536237716674805
    4. '<|end|>' → logprob: -6.3286237716674805
    5. '   ' → logprob: -7.0786237716674805
    6. '
' → logprob: -7.4536237716674805
    7. 'if' → logprob: -8.45362377166748
    8. '```' → logprob: -8.70362377166748
    9. '		
' → logprob: -9.07862377166748
    10. '    
' → logprob: -9.07862377166748

Token 664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1290823370218277
    2. '
' → logprob: -2.254082441329956
    3. '        
' → logprob: -4.504082202911377
    4. 'if' → logprob: -6.754082202911377
    5. '   ' → logprob: -6.879082202911377
    6. '<|end|>' → logprob: -6.879082202911377
    7. '    
' → logprob: -7.254082202911377
    8. ' if' → logprob: -8.254082679748535
    9. '```' → logprob: -9.129082679748535
    10. '  
' → logprob: -9.129082679748535

Token 665: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7219847440719604
    2. 'if' → logprob: -0.7219847440719604
    3. ' if' → logprob: -3.59698486328125
    4. '   ' → logprob: -7.84698486328125
    5. '        
' → logprob: -8.22198486328125
    6. '
' → logprob: -9.22198486328125
    7. '	if' → logprob: -9.59698486328125
    8. '```' → logprob: -9.72198486328125
    9. 't' (adapté à ' t') → logprob: -10.47198486328125
    10. '\t' → logprob: -11.09698486328125

Token 666: '_hit' (ID: 91390)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01819700375199318
    2. ' =' → logprob: -4.143197059631348
    3. '_' → logprob: -6.768197059631348
    4. '_next' → logprob: -7.768197059631348
    5. '_=' → logprob: -8.268197059631348
    6. '_candidate' → logprob: -9.518197059631348
    7. '=None' → logprob: -10.393197059631348
    8. '_candidates' → logprob: -10.393197059631348
    9. 'if' → logprob: -10.518197059631348
    10. ':' → logprob: -10.768197059631348

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869642913341522
    2. ' =' → logprob: -1.1369643211364746
    3. ' ' → logprob: -10.511963844299316
    4. '=None' → logprob: -10.886963844299316
    5. '<|end|>' → logprob: -11.011963844299316
    6. 's' → logprob: -11.636963844299316
    7. ',' → logprob: -11.636963844299316
    8. '_' → logprob: -13.011963844299316
    9. ')' → logprob: -13.636963844299316
    10. 'if' → logprob: -13.761963844299316

Token 668: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0012711855815723538
    2. ' None' → logprob: -7.0012712478637695
    3. 't' → logprob: -8.12627124786377
    4. '0' → logprob: -10.00127124786377
    5. '   ' → logprob: -11.37627124786377
    6. '-' → logprob: -12.50127124786377
    7. ' ' → logprob: -13.87627124786377
    8. '  ' → logprob: -14.37627124786377
    9. 'float' → logprob: -15.00127124786377
    10. '(None' → logprob: -15.12627124786377

Token 669: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16609777510166168
    2. '<|end|>' → logprob: -2.16609787940979
    3. '
' → logprob: -4.416097640991211
    4. '        ' → logprob: -5.291097640991211
    5. ' if' → logprob: -5.666097640991211
    6. '        
' → logprob: -5.916097640991211
    7. ' 
' → logprob: -6.041097640991211
    8. ' ' → logprob: -6.291097640991211
    9. '<|end|>' → logprob: -6.666097640991211
    10. ')' → logprob: -6.666097640991211

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019233614206314087
    2. '<|end|>' → logprob: -4.894233703613281
    3. '        ' → logprob: -6.019233703613281
    4. '        
' → logprob: -6.394233703613281
    5. '   ' → logprob: -6.519233703613281
    6. '
' → logprob: -6.769233703613281
    7. '    ' → logprob: -7.144233703613281
    8. ' 
' → logprob: -7.394233703613281
    9. '	' → logprob: -7.769233703613281
    10. ' if' → logprob: -8.144233703613281

Token 671: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06495775282382965
    2. '       ' → logprob: -2.814957857131958
    3. ' if' → logprob: -5.814957618713379
    4. '	if' → logprob: -13.814957618713379
    5. '```' → logprob: -14.189957618713379
    6. '   ' → logprob: -14.814957618713379
    7. '#' → logprob: -15.064957618713379
    8. '        
' → logprob: -15.189957618713379
    9. 'for' → logprob: -16.814958572387695
    10. '
' → logprob: -16.814958572387695

Token 672: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006948141381144524
    2. ' t' → logprob: -5.006947994232178
    3. '(t' → logprob: -8.881948471069336
    4. '   ' → logprob: -9.506948471069336
    5. '       ' → logprob: -11.756948471069336
    6. ' (' → logprob: -11.881948471069336
    7. ' ' → logprob: -13.381948471069336
    8. '     ' → logprob: -13.756948471069336
    9. '(' → logprob: -14.256948471069336
    10. '    ' → logprob: -14.631948471069336

Token 673: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0027608913369476795
    2. '_' → logprob: -6.127760887145996
    3. ' _' → logprob: -7.502760887145996
    4. ')_' → logprob: -11.877760887145996
    5. '=_' → logprob: -12.502760887145996
    6. '_y' → logprob: -12.502760887145996
    7. 'x' → logprob: -13.127760887145996
    8. '1' → logprob: -13.502760887145996
    9. ')' → logprob: -13.752760887145996
    10. ',_' → logprob: -14.502760887145996

Token 674: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.313269704580307
    2. 'is' → logprob: -1.3132697343826294
    3. '!=' → logprob: -12.43826961517334
    4. ' ' → logprob: -13.06326961517334
    5. '==' → logprob: -14.06326961517334
    6. ')' → logprob: -15.68826961517334
    7. '

' → logprob: -15.81326961517334
    8. '   ' → logprob: -15.81326961517334
    9. '	is' → logprob: -15.81326961517334
    10. 'i' → logprob: -16.438270568847656

Token 675: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.001332382787950337
    2. ' not' → logprob: -6.6263322830200195
    3. 'Not' → logprob: -12.87633228302002
    4. 'None' → logprob: -13.37633228302002
    5. '	not' → logprob: -14.87633228302002
    6. '```' → logprob: -14.87633228302002
    7. '0' → logprob: -15.00133228302002
    8. '!=' → logprob: -15.37633228302002
    9. 'n' → logprob: -15.50133228302002
    10. '``' → logprob: -15.87633228302002

Token 676: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0005206239875406027
    2. 'None' → logprob: -8.000520706176758
    3. ' not' → logprob: -8.625520706176758
    4. 'Not' → logprob: -12.375520706176758
    5. '0' → logprob: -14.125520706176758
    6. '```' → logprob: -15.125520706176758
    7. 'none' → logprob: -16.500520706176758
    8. '	not' → logprob: -17.000520706176758
    9. 't' → logprob: -17.250520706176758
    10. '...' → logprob: -17.250520706176758

Token 677: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12696297466754913
    2. 'and' → logprob: -2.126962900161743
    3. '           ' → logprob: -11.376962661743164
    4. '        ' → logprob: -11.876962661743164
    5. '==' → logprob: -12.376962661743164
    6. '       ' → logprob: -12.751962661743164
    7. '	and' → logprob: -13.251962661743164
    8. '=' → logprob: -13.501962661743164
    9. ' ==' → logprob: -13.626962661743164
    10. ' ' → logprob: -13.626962661743164

Token 678: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019807375501841307
    2. ' t' → logprob: -6.251980781555176
    3. 'abs' → logprob: -10.251980781555176
    4. '0' → logprob: -11.876980781555176
    5. '   ' → logprob: -12.251980781555176
    6. ' abs' → logprob: -13.251980781555176
    7. '(t' → logprob: -13.501980781555176
    8. ' ' → logprob: -14.001980781555176
    9. '(abs' → logprob: -15.251980781555176
    10. '	t' → logprob: -15.501980781555176

Token 679: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.638206958770752
    2. '_y' → logprob: -0.763206958770752
    3. '_' → logprob: -5.263206958770752
    4. ' _' → logprob: -8.638206481933594
    5. '==' → logprob: -9.388206481933594
    6. '```' → logprob: -10.263206481933594
    7. 'y' → logprob: -10.888206481933594
    8. ' ==' → logprob: -11.263206481933594
    9. '=_' → logprob: -11.513206481933594
    10. 'x' → logprob: -11.638206481933594

Token 680: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014164801687002182
    2. 'is' → logprob: -4.264164924621582
    3. '!=' → logprob: -14.639164924621582
    4. '	is' → logprob: -15.389164924621582
    5. '==' → logprob: -15.514164924621582
    6. ' ' → logprob: -15.639164924621582
    7. 'not' → logprob: -15.764164924621582
    8. ')' → logprob: -16.639163970947266
    9. '!==' → logprob: -16.639163970947266
    10. ' not' → logprob: -17.389163970947266

Token 681: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38687264919281006
    2. ' not' → logprob: -1.13687264919281
    3. '	not' → logprob: -14.136872291564941
    4. 'None' → logprob: -15.136872291564941
    5. '0' → logprob: -15.636872291564941
    6. ' ' → logprob: -16.011873245239258
    7. '```' → logprob: -16.636873245239258
    8. ' ' → logprob: -16.761873245239258
    9. ',' → logprob: -16.761873245239258
    10. ' None' → logprob: -17.261873245239258

Token 682: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004055282333865762
    2. 'not' → logprob: -8.000405311584473
    3. ' None' → logprob: -9.625405311584473
    4. 'none' → logprob: -13.500405311584473
    5. '0' → logprob: -13.875405311584473
    6. '   ' → logprob: -14.500405311584473
    7. 'Not' → logprob: -14.750405311584473
    8. '=None' → logprob: -15.375405311584473
    9. '_None' → logprob: -15.375405311584473
    10. '(None' → logprob: -15.875405311584473

Token 683: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05071710795164108
    2. 'and' → logprob: -3.1757171154022217
    3. ':' → logprob: -4.925716876983643
    4. '       ' → logprob: -8.9257173538208
    5. ':
' → logprob: -8.9257173538208
    6. '           ' → logprob: -9.6757173538208
    7. '=' → logprob: -10.0507173538208
    8. '	and' → logprob: -10.3007173538208
    9. '   ' → logprob: -12.1757173538208
    10. '<|end|>' → logprob: -12.4257173538208

Token 684: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18306998908519745
    2. '           ' → logprob: -2.308069944381714
    3. ':' → logprob: -3.308069944381714
    4. 'and' → logprob: -4.058070182800293
    5. '       ' → logprob: -4.683070182800293
    6. ':
' → logprob: -5.433070182800293
    7. '<|end|>' → logprob: -9.808070182800293
    8. '   ' → logprob: -10.183070182800293
    9. ' :' → logprob: -10.183070182800293
    10. '	       ' → logprob: -10.433070182800293

Token 685: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48042774200439453
    2. 'if' → logprob: -0.9804277420043945
    3. '           ' → logprob: -5.6054277420043945
    4. '       ' → logprob: -6.1054277420043945
    5. '   ' → logprob: -7.9804277420043945
    6. ' ' → logprob: -9.980427742004395
    7. '	if' → logprob: -11.230427742004395
    8. '               ' → logprob: -12.980427742004395
    9. '[' → logprob: -13.105427742004395
    10. ' t' → logprob: -13.230427742004395

Token 686: ' les' (ID: 1341)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.517272024415433e-05
    2. '           ' → logprob: -9.875075340270996
    3. ' if' → logprob: -11.375075340270996
    4. 't' → logprob: -11.500075340270996
    5. 'import' → logprob: -14.375075340270996
    6. '   ' → logprob: -14.625075340270996
    7. '       ' → logprob: -14.750075340270996
    8. 'abs' → logprob: -15.500075340270996
    9. '#' → logprob: -16.00007438659668
    10. 'epsilon' → logprob: -16.62507438659668

Token 687: ' deux' (ID: 10301)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.13272994756698608
    2. 'if' → logprob: -2.132730007171631
    3. 'math' → logprob: -5.632730007171631
    4. 't' → logprob: -7.007730007171631
    5. '#' → logprob: -7.757730007171631
    6. 'diff' → logprob: -8.382729530334473
    7. 'val' → logprob: -8.507729530334473
    8. ' abs' → logprob: -8.632729530334473
    9. '(abs' → logprob: -9.132729530334473
    10. 'import' → logprob: -10.132729530334473

Token 688: ' existent' (ID: 111807)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7309495806694031
    2. 'abs' → logprob: -0.7309495806694031
    3. ' abs' → logprob: -4.105949401855469
    4. 'temps' → logprob: -4.855949401855469
    5. ' are' → logprob: -5.355949401855469
    6. ' t' → logprob: -5.980949401855469
    7. '!=' → logprob: -6.980949401855469
    8. 'are' → logprob: -6.980949401855469
    9. ':' → logprob: -7.355949401855469
    10. '>=' → logprob: -7.605949401855469

Token 689: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07996653765439987
    2. 'and' → logprob: -2.5799665451049805
    3. '           ' → logprob: -6.9549665451049805
    4. ':' → logprob: -10.07996654510498
    5. '       ' → logprob: -10.32996654510498
    6. ',' → logprob: -11.57996654510498
    7. '<|end|>' → logprob: -12.07996654510498
    8. '   ' → logprob: -12.20496654510498
    9. '	and' → logprob: -12.45496654510498
    10. '<|end|>' → logprob: -12.45496654510498

Token 690: ' vérifier' (ID: 93671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22711323201656342
    2. 'if' → logprob: -1.6021132469177246
    3. '           ' → logprob: -6.477113246917725
    4. ' and' → logprob: -9.602112770080566
    5. 'import' → logprob: -9.977112770080566
    6. '       ' → logprob: -10.602112770080566
    7. '   ' → logprob: -12.727112770080566
    8. '               ' → logprob: -12.852112770080566
    9. 'and' → logprob: -13.102112770080566
    10. 's' → logprob: -13.227112770080566

Token 691: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14415466785430908
    2. ' if' → logprob: -2.1441545486450195
    3. 'abs' → logprob: -4.1441545486450195
    4. ' abs' → logprob: -6.7691545486450195
    5. '   ' → logprob: -10.39415454864502
    6. '(abs' → logprob: -11.14415454864502
    7. 't' → logprob: -11.76915454864502
    8. ' ' → logprob: -12.01915454864502
    9. ' t' → logprob: -12.39415454864502
    10. 'math' → logprob: -12.89415454864502

Token 692: ''ils' (ID: 41108)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.19712795317173004
    2. 't' → logprob: -2.5721280574798584
    3. 'math' → logprob: -3.0721280574798584
    4. '(abs' → logprob: -4.197127819061279
    5. ' abs' → logprob: -4.322127819061279
    6. '_math' → logprob: -4.447127819061279
    7. '_abs' → logprob: -4.572127819061279
    8. '   ' → logprob: -6.572127819061279
    9. '(math' → logprob: -6.697127819061279
    10. ''ils' → logprob: -6.822127819061279

Token 693: ' sont' (ID: 5242)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.10013747215271
    2. 'are' → logprob: -1.47513747215271
    3. 'ont' → logprob: -1.60013747215271
    4. ' are' → logprob: -1.85013747215271
    5. 's' → logprob: -3.47513747215271
    6. ' sont' → logprob: -4.475137710571289
    7. '==' → logprob: -4.600137710571289
    8. ' abs' → logprob: -5.100137710571289
    9. 't' → logprob: -5.725137710571289
    10. '>=' → logprob: -6.100137710571289

Token 694: ' approx' (ID: 33956)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02102631889283657
    2. ' abs' → logprob: -4.271026134490967
    3. ' proches' → logprob: -6.021026134490967
    4. 'close' → logprob: -7.146026134490967
    5. '>=' → logprob: -7.646026134490967
    6. '   ' → logprob: -7.646026134490967
    7. '==' → logprob: -8.146026611328125
    8. 'pro' → logprob: -8.146026611328125
    9. 'math' → logprob: -8.146026611328125
    10. 'égal' → logprob: -8.771026611328125

Token 695: ' ég' (ID: 33150)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.029135629534721375
    2. 'imately' → logprob: -4.279135704040527
    3. 'égal' → logprob: -5.529135704040527
    4. 'imal' → logprob: -6.029135704040527
    5. 'ég' → logprob: -6.404135704040527
    6. ' ég' → logprob: -6.529135704040527
    7. 'ativement' → logprob: -6.904135704040527
    8. ' égal' → logprob: -7.029135704040527
    9. '=' → logprob: -7.404135704040527
    10. '   ' → logprob: -7.779135704040527

Token 696: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.00025526012177579105
    2. 'al' → logprob: -8.375255584716797
    3. 'als' → logprob: -11.250255584716797
    4. 'a' → logprob: -12.250255584716797
    5. 'ales' → logprob: -13.125255584716797
    6. '```' → logprob: -13.625255584716797
    7. 'Aux' → logprob: -13.875255584716797
    8. 'ale' → logprob: -14.250255584716797
    9. '   ' → logprob: -15.000255584716797
    10. '_aux' → logprob: -15.000255584716797

Token 697: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03177494928240776
    2. '           ' → logprob: -3.6567749977111816
    3. 'and' → logprob: -5.281774997711182
    4. '       ' → logprob: -8.156774520874023
    5. ',' → logprob: -10.406774520874023
    6. ' if' → logprob: -10.906774520874023
    7. ':' → logprob: -11.781774520874023
    8. '	       ' → logprob: -12.031774520874023
    9. ' =' → logprob: -12.406774520874023
    10. ':
' → logprob: -12.531774520874023

Token 698: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1042572259902954
    2. '           ' → logprob: -1.1042572259902954
    3. ' and' → logprob: -1.1042572259902954
    4. 'and' → logprob: -5.354257106781006
    5. ':' → logprob: -8.229257583618164
    6. '   ' → logprob: -8.854257583618164
    7. ',' → logprob: -9.479257583618164
    8. ' if' → logprob: -9.729257583618164
    9. '[' → logprob: -9.854257583618164
    10. '	       ' → logprob: -9.854257583618164

Token 699: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16792896389961243
    2. ' if' → logprob: -1.91792893409729
    3. '           ' → logprob: -5.417929172515869
    4. '       ' → logprob: -5.917929172515869
    5. 'abs' → logprob: -7.542929172515869
    6. 'import' → logprob: -11.667928695678711
    7. ' abs' → logprob: -11.917928695678711
    8. '	if' → logprob: -14.292928695678711
    9. '               ' → logprob: -14.292928695678711
    10. '   ' → logprob: -14.667928695678711

Token 700: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -3.845798710244708e-05
    2. 'math' → logprob: -10.250038146972656
    3. ' abs' → logprob: -12.750038146972656
    4. '(abs' → logprob: -16.875038146972656
    5. '   ' → logprob: -17.125038146972656
    6. 'fabs' → logprob: -19.375038146972656
    7. 'Abs' → logprob: -21.125038146972656
    8. '```' → logprob: -21.625038146972656
    9. 'Math' → logprob: -21.875038146972656
    10. '  ' → logprob: -22.375038146972656

Token 701: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. 't' → logprob: -17.25
    4. '((' → logprob: -19.625
    5. '(
' → logprob: -20.875
    6. ' (' → logprob: -21.0
    7. '	t' → logprob: -22.75
    8. '(tt' → logprob: -22.875
    9. '   ' → logprob: -23.75
    10. '(T' → logprob: -24.125

Token 702: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.961759259458631e-06
    2. 'x' → logprob: -12.625004768371582
    3. '_y' → logprob: -14.000004768371582
    4. '_' → logprob: -14.625004768371582
    5. '_t' → logprob: -15.375004768371582
    6. '1' → logprob: -16.7500057220459
    7. 't' → logprob: -18.3750057220459
    8. '   ' → logprob: -19.3750057220459
    9. '[' → logprob: -20.0000057220459
    10. ' _' → logprob: -20.2500057220459

Token 703: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931991577148438
    2. ' -' → logprob: -0.6931991577148438
    3. '-t' → logprob: -9.943199157714844
    4. ' ' → logprob: -13.068199157714844
    5. '-
' → logprob: -13.568199157714844
    6. ' -
' → logprob: -15.568199157714844
    7. '[' → logprob: -16.943199157714844
    8. '-T' → logprob: -17.193199157714844
    9. '-

' → logprob: -17.193199157714844
    10. '-
' → logprob: -17.443199157714844

Token 704: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00023059594968799502
    2. ' t' → logprob: -8.37523078918457
    3. '`t' → logprob: -18.75023078918457
    4. '	t' → logprob: -18.87523078918457
    5. ')t' → logprob: -19.62523078918457
    6. ' ' → logprob: -20.12523078918457
    7. '_t' → logprob: -20.75023078918457
    8. '   ' → logprob: -21.37523078918457
    9. ')' → logprob: -21.37523078918457
    10. 'т' → logprob: -21.50023078918457

Token 705: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000241085872403346
    2. 'y' → logprob: -8.62524127960205
    3. '_x' → logprob: -9.75024127960205
    4. '_' → logprob: -13.87524127960205
    5. ' y' → logprob: -14.00024127960205
    6. ')' → logprob: -15.00024127960205
    7. '_t' → logprob: -15.62524127960205
    8. ' ' → logprob: -15.75024127960205
    9. '1' → logprob: -16.000240325927734
    10. 't' → logprob: -16.500240325927734

Token 706: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2392348349094391
    2. ' <=' → logprob: -1.7392348051071167
    3. '<' → logprob: -3.3642349243164062
    4. ' <' → logprob: -6.114234924316406
    5. ')<=' → logprob: -8.239234924316406
    6. ')' → logprob: -10.364234924316406
    7. '[' → logprob: -11.864234924316406
    8. ']<=' → logprob: -12.114234924316406
    9. '≤' → logprob: -12.739234924316406
    10. ' ' → logprob: -13.864234924316406

Token 708: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0015031944494694471
    2. '1' → logprob: -6.501502990722656
    3. ' EPS' → logprob: -14.251502990722656
    4. 'E' → logprob: -16.126502990722656
    5. 'EP' → logprob: -17.376502990722656
    6. 'eps' → logprob: -17.876502990722656
    7. '10' → logprob: -18.626502990722656
    8. '=' → logprob: -18.626502990722656
    9. 'ES' → logprob: -18.751502990722656
    10. '100' → logprob: -18.876502990722656

Token 709: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.014166445471346378
    2. '1' → logprob: -4.264166355133057
    3. ' EPS' → logprob: -13.014166831970215
    4. '10' → logprob: -15.514166831970215
    5. 'EP' → logprob: -15.764166831970215
    6. 'eps' → logprob: -15.889166831970215
    7. '100' → logprob: -16.1391658782959
    8. 'E' → logprob: -16.2641658782959
    9. 'ES' → logprob: -17.0141658782959
    10. '   ' → logprob: -17.6391658782959

Token 710: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003608386032283306
    2. '-' → logprob: -5.628608226776123
    3. '*' → logprob: -12.128608703613281
    4. '```' → logprob: -14.378608703613281
    5. 'E' → logprob: -14.503608703613281
    6. '0' → logprob: -14.503608703613281
    7. '-e' → logprob: -15.128608703613281
    8. '.' → logprob: -15.503608703613281
    9. '1' → logprob: -15.753608703613281
    10. '-E' → logprob: -15.878608703613281

Token 711: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014072739577386528
    2. '12' → logprob: -9.625141143798828
    3. '10' → logprob: -10.375141143798828
    4. '9' → logprob: -10.875141143798828
    5. '8' → logprob: -11.250141143798828
    6. '7' → logprob: -12.125141143798828
    7. '14' → logprob: -13.250141143798828
    8. '13' → logprob: -13.625141143798828
    9. '6' → logprob: -13.750141143798828
    10. '11' → logprob: -13.750141143798828

Token 712: '14' (ID: 1265)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.37747254967689514
    2. '10' → logprob: -1.3774725198745728
    3. '9' → logprob: -3.3774726390838623
    4. '8' → logprob: -4.002472400665283
    5. '14' → logprob: -5.377472400665283
    6. '13' → logprob: -5.502472400665283
    7. '11' → logprob: -7.502472400665283
    8. '7' → logprob: -7.627472400665283
    9. '15' → logprob: -10.127472877502441
    10. '6' → logprob: -11.627472877502441

Token 713: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03812296688556671
    2. 'and' → logprob: -3.2881228923797607
    3. ':' → logprob: -9.53812313079834
    4. '	and' → logprob: -12.16312313079834
    5. ':
' → logprob: -13.53812313079834
    6. '<|end|>' → logprob: -14.03812313079834
    7. '           ' → logprob: -14.53812313079834
    8. ' ' → logprob: -15.16312313079834
    9. '       ' → logprob: -15.28812313079834
    10. ' or' → logprob: -15.53812313079834

Token 714: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.518582762917504e-05
    2. ' t' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.12508487701416
    4. 'min' → logprob: -17.375085830688477
    5. '`t' → logprob: -18.875085830688477
    6. ' ' → logprob: -19.000085830688477
    7. '	t' → logprob: -19.250085830688477
    8. '0' → logprob: -19.250085830688477
    9. '(t' → logprob: -19.625085830688477
    10. '  ' → logprob: -20.750085830688477

Token 715: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00015038289711810648
    2. 'x' → logprob: -9.125150680541992
    3. '_y' → logprob: -11.000150680541992
    4. '1' → logprob: -11.500150680541992
    5. '>=' → logprob: -12.000150680541992
    6. '_' → logprob: -12.875150680541992
    7. '_hit' → logprob: -14.125150680541992
    8. '```' → logprob: -14.125150680541992
    9. 't' → logprob: -14.375150680541992
    10. '>' → logprob: -14.375150680541992

Token 716: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.011635733768343925
    2. ' >=' → logprob: -4.511635780334473
    3. '>' → logprob: -7.511635780334473
    4. ')>=' → logprob: -10.636635780334473
    5. ']>=' → logprob: -12.136635780334473
    6. ' >' → logprob: -12.386635780334473
    7. '≥' → logprob: -12.761635780334473
    8. '<|end|>' → logprob: -13.511635780334473
    9. '[' → logprob: -14.011635780334473
    10. ' ' → logprob: -14.386635780334473

Token 717: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6970053315162659
    2. '0' → logprob: -0.6970053315162659
    3. '-E' → logprob: -5.572005271911621
    4. ' -' → logprob: -10.322005271911621
    5. ' ' → logprob: -11.447005271911621
    6. '-V' → logprob: -14.072005271911621
    7. '-M' → logprob: -14.572005271911621
    8. '-\' → logprob: -14.822005271911621
    9. '-C' → logprob: -14.947005271911621
    10. '-e' → logprob: -15.197005271911621

Token 718: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0002682496269699186
    2. '1' → logprob: -8.25026798248291
    3. ' EPS' → logprob: -12.12526798248291
    4. 'EP' → logprob: -14.25026798248291
    5. '   ' → logprob: -14.50026798248291
    6. ' ' → logprob: -16.000268936157227
    7. '0' → logprob: -16.000268936157227
    8. 'ES' → logprob: -16.875268936157227
    9. 'E' → logprob: -17.000268936157227
    10. 'eps' → logprob: -17.375268936157227

Token 719: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5755265951156616
    2. ' and' → logprob: -1.0755265951156616
    3. ':
' → logprob: -2.450526714324951
    4. '           ' → logprob: -5.700526714324951
    5. 'and' → logprob: -6.075526714324951
    6. '       ' → logprob: -6.075526714324951
    7. ' :' → logprob: -6.325526714324951
    8. ' :
' → logprob: -8.075526237487793
    9. '   ' → logprob: -10.325526237487793
    10. ':

' → logprob: -10.950526237487793

Token 720: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2815724015235901
    2. '               ' → logprob: -1.4065723419189453
    3. ':
' → logprob: -8.781572341918945
    4. '	       ' → logprob: -9.531572341918945
    5. '
' → logprob: -9.906572341918945
    6. ':' → logprob: -10.281572341918945
    7. '       ' → logprob: -10.406572341918945
    8. '		' → logprob: -11.031572341918945
    9. 't' → logprob: -11.031572341918945
    10. '                   ' → logprob: -11.781572341918945

Token 721: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.04646778851747513
    2. ' t' → logprob: -3.9214677810668945
    3. '               ' → logprob: -4.0464677810668945
    4. '           ' → logprob: -4.9214677810668945
    5. '                   ' → logprob: -7.1714677810668945
    6. '   ' → logprob: -10.296467781066895
    7. '       ' → logprob: -11.921467781066895
    8. '	t' → logprob: -12.046467781066895
    9. '
' → logprob: -13.296467781066895
    10. '                       ' → logprob: -14.046467781066895

Token 722: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.006080360617488623
    2. '_' → logprob: -5.631080150604248
    3. '_x' → logprob: -6.381080150604248
    4. '=' → logprob: -7.756080150604248
    5. ' =' → logprob: -8.256080627441406
    6. '_h' → logprob: -10.506080627441406
    7. '_=' → logprob: -11.256080627441406
    8. '_t' → logprob: -11.256080627441406
    9. 'hit' → logprob: -11.631080627441406
    10. 't' → logprob: -12.381080627441406

Token 723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889077812433243
    2. ' =' → logprob: -2.578890800476074
    3. '=t' → logprob: -14.703890800476074
    4. ',' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '=
' → logprob: -16.578889846801758
    7. '＝' → logprob: -16.703889846801758
    8. '=

' → logprob: -17.078889846801758
    9. '=int' → logprob: -17.328889846801758
    10. '=}' → logprob: -17.578889846801758

Token 724: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000553151941858232
    2. ' t' → logprob: -7.500553131103516
    3. 'max' → logprob: -15.875553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '	t' → logprob: -18.750553131103516
    6. ' max' → logprob: -19.250553131103516
    7. '0' → logprob: -19.250553131103516
    8. ' ' → logprob: -19.750553131103516
    9. '`t' → logprob: -21.375553131103516
    10. '(t' → logprob: -21.500553131103516

Token 725: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003384422743692994
    2. 'x' → logprob: -8.000338554382324
    3. '[' → logprob: -14.375338554382324
    4. '[x' → logprob: -14.750338554382324
    5. '_' → logprob: -14.875338554382324
    6. '_y' → logprob: -14.875338554382324
    7. '	x' → logprob: -15.875338554382324
    8. '1' → logprob: -15.875338554382324
    9. '```' → logprob: -15.875338554382324
    10. 'else' → logprob: -16.500337600708008

Token 726: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004608726128935814
    2. 'elif' → logprob: -5.504608631134033
    3. '<|end|>' → logprob: -8.754609107971191
    4. '
' → logprob: -9.004609107971191
    5. 'else' → logprob: -9.379609107971191
    6. ' elif' → logprob: -10.004609107971191
    7. '           ' → logprob: -10.004609107971191
    8. '        
' → logprob: -11.129609107971191
    9. ')' → logprob: -11.629609107971191
    10. '	elif' → logprob: -11.879609107971191

Token 728: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5298264026641846
    2. 'elif' (adapté à ' elif') → logprob: -0.9048264026641846
    3. ' elif' → logprob: -5.5298261642456055
    4. 'else' → logprob: -6.1548261642456055
    5. '	elif' → logprob: -8.154826164245605
    6. '<|end|>' → logprob: -8.779826164245605
    7. 'if' → logprob: -10.029826164245605
    8. ' else' → logprob: -10.404826164245605
    9. '        
' → logprob: -10.654826164245605
    10. '   ' → logprob: -11.404826164245605

Token 729: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0923994779586792
    2. ' t' → logprob: -2.4673995971679688
    3. '(t' → logprob: -6.092399597167969
    4. ' (' → logprob: -7.092399597167969
    5. '   ' → logprob: -8.092399597167969
    6. '(' → logprob: -10.967399597167969
    7. ' ' → logprob: -11.217399597167969
    8. 'abs' → logprob: -12.217399597167969
    9. '(v' → logprob: -12.342399597167969
    10. 'None' → logprob: -12.592399597167969

Token 730: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0008233297849074006
    2. '_y' → logprob: -7.125823497772217
    3. 'x' → logprob: -11.000823020935059
    4. '_' → logprob: -13.125823020935059
    5. 'y' → logprob: -16.500823974609375
    6. '__' → logprob: -17.125823974609375
    7. '_z' → logprob: -17.250823974609375
    8. ' _' → logprob: -17.500823974609375
    9. '1' → logprob: -17.625823974609375
    10. '_xy' → logprob: -18.000823974609375

Token 731: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04859395697712898
    2. 'is' → logprob: -3.0485939979553223
    3. ' ' → logprob: -12.673593521118164
    4. '	is' → logprob: -13.173593521118164
    5. '<|end|>' → logprob: -13.673593521118164
    6. '<|end|>' → logprob: -16.673593521118164
    7. 'not' → logprob: -16.673593521118164
    8. ')' → logprob: -16.798593521118164
    9. 'and' → logprob: -17.048593521118164
    10. 'if' → logprob: -17.798593521118164

Token 732: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.017729945480823517
    2. ' not' → logprob: -4.392729759216309
    3. 'None' → logprob: -5.267729759216309
    4. ' None' → logprob: -10.142729759216309
    5. 'Not' → logprob: -11.517729759216309
    6. '0' → logprob: -14.517729759216309
    7. '	not' → logprob: -14.892729759216309
    8. '   ' → logprob: -15.267729759216309
    9. 'none' → logprob: -15.392729759216309
    10. ' ' → logprob: -15.392729759216309

Token 733: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.037835580878891e-05
    2. ' None' → logprob: -10.00005054473877
    3. 'not' → logprob: -12.62505054473877
    4. '0' → logprob: -14.62505054473877
    5. 'none' → logprob: -14.62505054473877
    6. '_None' → logprob: -15.37505054473877
    7. '(None' → logprob: -15.62505054473877
    8. 'Not' → logprob: -16.000049591064453
    9. '=None' → logprob: -16.375049591064453
    10. '```' → logprob: -17.250049591064453

Token 734: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18364059925079346
    2. 'and' → logprob: -1.8086405992507935
    3. ':' → logprob: -5.683640480041504
    4. '       ' → logprob: -8.433640480041504
    5. ':
' → logprob: -9.308640480041504
    6. '           ' → logprob: -9.433640480041504
    7. '<|end|>' → logprob: -10.058640480041504
    8. '	and' → logprob: -11.433640480041504
    9. '        ' → logprob: -11.808640480041504
    10. '=' → logprob: -11.933640480041504

Token 735: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10650885105133057
    2. 'and' → logprob: -2.731508731842041
    3. '       ' → logprob: -3.731508731842041
    4. '           ' → logprob: -4.481508731842041
    5. ':' → logprob: -8.4815092086792
    6. 'if' → logprob: -8.4815092086792
    7. ' if' → logprob: -8.8565092086792
    8. ' or' → logprob: -9.9815092086792
    9. ':
' → logprob: -11.9815092086792
    10. '   ' → logprob: -12.1065092086792

Token 736: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003227979177609086
    2. ' if' → logprob: -5.753228187561035
    3. '           ' → logprob: -10.128228187561035
    4. '       ' → logprob: -11.753228187561035
    5. 't' → logprob: -13.003228187561035
    6. '
' → logprob: -16.37822723388672
    7. '```' → logprob: -16.75322723388672
    8. '   ' → logprob: -17.12822723388672
    9. '               ' → logprob: -17.25322723388672
    10. 'If' → logprob: -17.37822723388672

Token 737: ' vy' (ID: 14190)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0065865241922438145
    2. ' if' → logprob: -5.75658655166626
    3. 't' → logprob: -6.13158655166626
    4. 'abs' → logprob: -7.25658655166626
    5. 'py' → logprob: -8.256586074829102
    6. ' t' → logprob: -9.006586074829102
    7. '0' → logprob: -10.131586074829102
    8. 'px' → logprob: -10.381586074829102
    9. '#' → logprob: -10.631586074829102
    10. 'import' → logprob: -11.131586074829102

Token 738: ' nul' (ID: 64435)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45476096868515015
    2. '==' → logprob: -1.079761028289795
    3. ' is' → logprob: -3.704761028289795
    4. ' ' → logprob: -7.954761028289795
    5. ' >=' → logprob: -8.704760551452637
    6. ' !=' → logprob: -9.204760551452637
    7. '=' → logprob: -9.204760551452637
    8. '!=' → logprob: -9.204760551452637
    9. '>=' → logprob: -9.454760551452637
    10. '<|end|>' → logprob: -10.079760551452637

Token 739: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06103997677564621
    2. 'and' → logprob: -3.061039924621582
    3. '           ' → logprob: -4.811039924621582
    4. '       ' → logprob: -6.186039924621582
    5. ',' → logprob: -6.561039924621582
    6. ' if' → logprob: -8.061039924621582
    7. ':' → logprob: -9.311039924621582
    8. ':
' → logprob: -9.436039924621582
    9. 'if' → logprob: -9.686039924621582
    10. '   ' → logprob: -10.186039924621582

Token 740: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39062437415122986
    2. ' if' → logprob: -1.1406244039535522
    3. '           ' → logprob: -5.640624523162842
    4. '       ' → logprob: -9.140624046325684
    5. 't' → logprob: -9.890624046325684
    6. ' t' → logprob: -10.515624046325684
    7. '               ' → logprob: -12.390624046325684
    8. '   ' → logprob: -13.890624046325684
    9. '            ' → logprob: -13.890624046325684
    10. ' ' → logprob: -14.140624046325684

Token 741: ' py' (ID: 13104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14349371194839478
    2. 'abs' → logprob: -2.39349365234375
    3. ' if' → logprob: -3.64349365234375
    4. ' abs' → logprob: -4.51849365234375
    5. 'py' → logprob: -5.64349365234375
    6. '#' → logprob: -7.26849365234375
    7. 't' → logprob: -7.89349365234375
    8. 'px' → logprob: -8.26849365234375
    9. ' t' → logprob: -9.14349365234375
    10. ' py' → logprob: -9.14349365234375

Token 742: ' doit' (ID: 21822)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22762160003185272
    2. ' ==' → logprob: -1.6026215553283691
    3. '>=' → logprob: -7.227621555328369
    4. 'abs' → logprob: -7.977621555328369
    5. '<=' → logprob: -8.227622032165527
    6. ' >=' → logprob: -8.227622032165527
    7. '*' → logprob: -8.602622032165527
    8. ' <=' → logprob: -9.227622032165527
    9. '+' → logprob: -9.602622032165527
    10. ' abs' → logprob: -9.602622032165527

Token 743: ' être' (ID: 9104)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5087446570396423
    2. '>=' → logprob: -1.383744716644287
    3. '==' → logprob: -2.383744716644287
    4. ' abs' → logprob: -4.008744716644287
    5. '<=' → logprob: -4.008744716644287
    6. ' be' → logprob: -4.883744716644287
    7. '=' → logprob: -5.383744716644287
    8. ' >=' → logprob: -6.258744716644287
    9. ' ==' → logprob: -7.008744716644287
    10. '0' → logprob: -7.008744716644287

Token 744: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006448837229982018
    2. 'abs' → logprob: -7.875644683837891
    3. ' ' → logprob: -8.37564468383789
    4. ' abs' → logprob: -11.00064468383789
    5. '<' → logprob: -12.75064468383789
    6. 'close' → logprob: -12.75064468383789
    7. '-' → logprob: -12.75064468383789
    8. '<=' → logprob: -12.87564468383789
    9. 'approximately' → logprob: -13.62564468383789
    10. 'also' → logprob: -13.75064468383789

Token 745: ' aussi' (ID: 9894)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030211493372917175
    2. ' and' → logprob: -3.9052114486694336
    3. 'and' → logprob: -4.780211448669434
    4. ' if' → logprob: -7.780211448669434
    5. '       ' → logprob: -8.155211448669434
    6. ',' → logprob: -8.155211448669434
    7. 'if' → logprob: -9.155211448669434
    8. ' or' → logprob: -9.780211448669434
    9. '	       ' → logprob: -11.405211448669434
    10. ' for' → logprob: -11.780211448669434

Token 746: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00724548427388072
    2. ' and' → logprob: -5.2572455406188965
    3. 'and' → logprob: -6.5072455406188965
    4. ' if' → logprob: -8.257245063781738
    5. ',' → logprob: -9.132245063781738
    6. 'if' → logprob: -10.507245063781738
    7. '       ' → logprob: -10.507245063781738
    8. '	       ' → logprob: -10.507245063781738
    9. ' ' → logprob: -10.632245063781738
    10. '		' → logprob: -11.757245063781738

Token 747: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2874321937561035
    2. '       ' → logprob: -2.0374321937561035
    3. ' and' → logprob: -2.2874321937561035
    4. 'and' → logprob: -5.1624321937561035
    5. ',' → logprob: -5.2874321937561035
    6. ' if' → logprob: -5.6624321937561035
    7. '   ' → logprob: -6.7874321937561035
    8. '<|end|>' → logprob: -7.1624321937561035
    9. ' or' → logprob: -7.6624321937561035
    10. '	       ' → logprob: -8.037431716918945

Token 748: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 749: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.098748053773306e-05
    2. ' abs' → logprob: -9.75006103515625
    3. 'py' → logprob: -12.87506103515625
    4. '(abs' → logprob: -18.00006103515625
    5. '   ' → logprob: -18.75006103515625
    6. ' ' → logprob: -20.37506103515625
    7. 'px' → logprob: -20.75006103515625
    8. '  ' → logprob: -21.37506103515625
    9. ' ' → logprob: -21.75006103515625
    10. 'fabs' → logprob: -22.00006103515625

Token 750: '(py' (ID: 139986)
  Prédit: '(py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -3.8889261304575484e-06
    2. 'py' → logprob: -12.500003814697266
    3. '(Py' → logprob: -16.500003814697266
    4. '(' → logprob: -16.750003814697266
    5. '_py' → logprob: -18.500003814697266
    6. '(p' → logprob: -18.875003814697266
    7. '(px' → logprob: -19.500003814697266
    8. ' py' → logprob: -19.625003814697266
    9. 'Py' → logprob: -20.625003814697266
    10. '(poly' → logprob: -21.125003814697266

Token 751: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009449340868741274
    2. ')<' → logprob: -7.250945091247559
    3. ')<=' → logprob: -8.625945091247559
    4. ' )' → logprob: -10.125945091247559
    5. ')==' → logprob: -11.250945091247559
    6. '[' → logprob: -14.250945091247559
    7. ')>' → logprob: -14.375945091247559
    8. '')' → logprob: -15.375945091247559
    9. '<|end|>' → logprob: -15.750945091247559
    10. '）' → logprob: -15.875945091247559

Token 752: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11304356902837753
    2. ' <' → logprob: -2.2380435466766357
    3. '<=' → logprob: -9.113043785095215
    4. ')<' → logprob: -10.238043785095215
    5. ')' → logprob: -10.488043785095215
    6. '()<' → logprob: -10.488043785095215
    7. ' <=' → logprob: -11.238043785095215
    8. ' ' → logprob: -12.738043785095215
    9. ')<=' → logprob: -13.488043785095215
    10. '<|end|>' → logprob: -15.113043785095215

Token 753: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0001589618914294988
    2. ' EPS' → logprob: -9.00015926361084
    3. '1' → logprob: -10.25015926361084
    4. ' ' → logprob: -15.87515926361084
    5. 'EP' → logprob: -17.375158309936523
    6. 'ESP' → logprob: -18.125158309936523
    7. 'EPT' → logprob: -18.625158309936523
    8. 'EOS' → logprob: -19.125158309936523
    9. 'eps' → logprob: -19.875158309936523
    10. 'E' → logprob: -19.875158309936523

Token 754: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0001749351795297116
    2. ' EPS' → logprob: -9.000174522399902
    3. '1' → logprob: -9.875174522399902
    4. ' ' → logprob: -16.62517547607422
    5. 'ESP' → logprob: -17.62517547607422
    6. 'eps' → logprob: -18.12517547607422
    7. '   ' → logprob: -18.87517547607422
    8. 'EP' → logprob: -18.87517547607422
    9. 'EOS' → logprob: -19.12517547607422
    10. 'EPT' → logprob: -19.37517547607422

Token 755: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029915479943156242
    2. 'e' → logprob: -3.5299155712127686
    3. '-e' → logprob: -9.779915809631348
    4. '-E' → logprob: -9.779915809631348
    5. '4' → logprob: -10.154915809631348
    6. ' -' → logprob: -12.904915809631348
    7. '1' → logprob: -13.154915809631348
    8. '2' → logprob: -13.404915809631348
    9. '-P' → logprob: -13.779915809631348
    10. '3' → logprob: -13.779915809631348

Token 756: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1054253011243418e-05
    2. '14' → logprob: -10.875020980834961
    3. '12' → logprob: -14.375020980834961
    4. '```' → logprob: -14.500020980834961
    5. ' -' → logprob: -15.562520980834961
    6. '13' → logprob: -15.812520980834961
    7. '15' → logprob: -16.25002098083496
    8. '10' → logprob: -16.37502098083496
    9. '(-' → logprob: -16.50002098083496
    10. '``' → logprob: -16.87502098083496

Token 757: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.0013763030292466283
    2. '12' → logprob: -6.751376152038574
    3. '10' → logprob: -9.376376152038574
    4. '13' → logprob: -9.876376152038574
    5. '15' → logprob: -10.126376152038574
    6. '9' → logprob: -11.126376152038574
    7. '8' → logprob: -11.376376152038574
    8. '7' → logprob: -12.876376152038574
    9. '11' → logprob: -14.501376152038574
    10. '6' → logprob: -15.688876152038574

Token 758: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04861200228333473
    2. 'and' → logprob: -3.048612117767334
    3. '           ' → logprob: -10.923611640930176
    4. '	and' → logprob: -13.548611640930176
    5. ':' → logprob: -13.798611640930176
    6. '               ' → logprob: -13.923611640930176
    7. '            ' → logprob: -14.173611640930176
    8. ' ' → logprob: -14.298611640930176
    9. '       ' → logprob: -14.423611640930176
    10. '          ' → logprob: -14.548611640930176

Token 759: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0052354102954268456
    2. ' t' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.50523567199707
    4. '`t' → logprob: -16.38023567199707
    5. 'px' → logprob: -16.50523567199707
    6. '(t' → logprob: -17.00523567199707
    7. ' ' → logprob: -17.00523567199707
    8. '	t' → logprob: -17.25523567199707
    9. '  ' → logprob: -18.00523567199707
    10. 'tx' → logprob: -18.88023567199707

Token 760: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00012475410767365247
    2. 'x' → logprob: -9.12512493133545
    3. '_hit' → logprob: -11.50012493133545
    4. '>=' → logprob: -12.50012493133545
    5. 'hit' → logprob: -14.37512493133545
    6. '_' → logprob: -14.50012493133545
    7. '   ' → logprob: -15.75012493133545
    8. ' >=' → logprob: -15.87512493133545
    9. 't' → logprob: -15.87512493133545
    10. '```' → logprob: -16.250123977661133

Token 761: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004090508911758661
    2. ' >=' → logprob: -5.504090309143066
    3. '>' → logprob: -11.379090309143066
    4. ']>=' → logprob: -15.379090309143066
    5. ')>=' → logprob: -15.379090309143066
    6. ' ' → logprob: -16.004091262817383
    7. '≥' → logprob: -16.129091262817383
    8. ' >' → logprob: -16.379091262817383
    9. '[' → logprob: -18.879091262817383
    10. ' ' → logprob: -19.254091262817383

Token 762: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.0625697448849678
    2. '-' → logprob: -2.8125698566436768
    3. ' -' → logprob: -7.437569618225098
    4. '0' → logprob: -11.562569618225098
    5. '-P' → logprob: -13.562569618225098
    6. ' ' → logprob: -13.812569618225098
    7. '   ' → logprob: -14.937569618225098
    8. '-Q' → logprob: -15.687569618225098
    9. '-\' → logprob: -16.437570571899414
    10. '-INF' → logprob: -16.437570571899414

Token 763: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -3.8889261304575484e-06
    2. ' EPS' → logprob: -12.500003814697266
    3. '0' → logprob: -16.500003814697266
    4. '1' → logprob: -18.750003814697266
    5. 'EP' → logprob: -18.875003814697266
    6. ' ' → logprob: -19.000003814697266
    7. '   ' → logprob: -19.250003814697266
    8. 'EEP' → logprob: -19.375003814697266
    9. 'EPT' → logprob: -19.500003814697266
    10. 'eps' → logprob: -19.625003814697266

Token 764: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12898699939250946
    2. ':
' → logprob: -2.3789870738983154
    3. '           ' → logprob: -3.6289870738983154
    4. ' and' → logprob: -6.503986835479736
    5. 'and' → logprob: -9.128987312316895
    6. '       ' → logprob: -9.503987312316895
    7. '               ' → logprob: -9.878987312316895
    8. ' :' → logprob: -10.878987312316895
    9. ':

' → logprob: -11.378987312316895
    10. '):
' → logprob: -11.628987312316895

Token 765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12698900699615479
    2. '           ' → logprob: -2.1269888877868652
    3. '	       ' → logprob: -10.751989364624023
    4. '       ' → logprob: -11.876989364624023
    5. '              ' → logprob: -12.376989364624023
    6. '                   ' → logprob: -12.376989364624023
    7. '	           ' → logprob: -12.376989364624023
    8. 't' → logprob: -12.751989364624023
    9. ' ' → logprob: -13.251989364624023
    10. '   ' → logprob: -13.251989364624023

Token 766: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.20234981179237366
    2. '               ' → logprob: -2.327349901199341
    3. '           ' → logprob: -3.077349901199341
    4. ' t' → logprob: -3.327349901199341
    5. '                   ' → logprob: -5.702349662780762
    6. '   ' → logprob: -8.702349662780762
    7. '       ' → logprob: -9.077349662780762
    8. '	t' → logprob: -10.327349662780762
    9. '                ' → logprob: -12.327349662780762
    10. '                       ' → logprob: -13.327349662780762

Token 767: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -6.682846287731081e-05
    2. 'hit' → logprob: -9.750066757202148
    3. '_h' → logprob: -12.500066757202148
    4. '_' → logprob: -13.125066757202148
    5. '=' → logprob: -13.375066757202148
    6. '_hits' → logprob: -15.000066757202148
    7. '_x' → logprob: -15.875066757202148
    8. '(hit' → logprob: -16.12506675720215
    9. '_hot' → logprob: -16.62506675720215
    10. '_hi' → logprob: -16.62506675720215

Token 768: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052342405542731285
    2. ' =' → logprob: -5.255234241485596
    3. '=
' → logprob: -15.505233764648438
    4. '=t' → logprob: -15.630233764648438
    5. '=

' → logprob: -16.255233764648438
    6. ' ' → logprob: -17.380233764648438
    7. '   ' → logprob: -18.630233764648438
    8. '+=' → logprob: -18.630233764648438
    9. '＝' → logprob: -18.880233764648438
    10. ')' → logprob: -19.505233764648438

Token 769: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01814994215965271
    2. ' t' → logprob: -4.0181498527526855
    3. '	t' → logprob: -19.018150329589844
    4. '               ' → logprob: -19.393150329589844
    5. '`t' → logprob: -20.393150329589844
    6. '           ' → logprob: -22.143150329589844
    7. '_t' → logprob: -22.393150329589844
    8. '   ' → logprob: -22.393150329589844
    9. '(t' → logprob: -22.643150329589844
    10. '                   ' → logprob: -22.893150329589844

Token 770: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.096126576769166e-05
    2. 'x' → logprob: -10.125041007995605
    3. '_' → logprob: -14.750041007995605
    4. ' _' → logprob: -14.875041007995605
    5. '[' → logprob: -17.25004005432129
    6. '```' → logprob: -18.25004005432129
    7. ' x' → logprob: -18.62504005432129
    8. ' ' → logprob: -18.75004005432129
    9. '_t' → logprob: -18.75004005432129
    10. '_
' → logprob: -19.00004005432129

Token 771: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038416340947151184
    2. 'elif' → logprob: -3.2884163856506348
    3. '<|end|>' → logprob: -8.663415908813477
    4. ' elif' → logprob: -8.788415908813477
    5. '	elif' → logprob: -11.163415908813477
    6. ')' → logprob: -11.788415908813477
    7. '<|end|>' → logprob: -11.788415908813477
    8. 'else' → logprob: -11.913415908813477
    9. '.' → logprob: -12.538415908813477
    10. ',' → logprob: -13.163415908813477

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047865803353488445
    2. 'elif' → logprob: -5.879786491394043
    3. '<|end|>' → logprob: -6.504786491394043
    4. ' elif' → logprob: -8.754786491394043
    5. 'else' → logprob: -9.629786491394043
    6. ')' → logprob: -9.879786491394043
    7. '	elif' → logprob: -10.379786491394043
    8. '<|end|>' → logprob: -10.379786491394043
    9. '	' → logprob: -10.629786491394043
    10. '```' → logprob: -10.879786491394043

Token 773: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.004568019416183233
    2. '       ' → logprob: -5.504568099975586
    3. ' elif' → logprob: -7.754568099975586
    4. 'else' → logprob: -9.754568099975586
    5. '	elif' → logprob: -13.379568099975586
    6. '   ' → logprob: -14.504568099975586
    7. 'el' → logprob: -14.754568099975586
    8. ' ' → logprob: -17.504568099975586
    9. 'elseif' → logprob: -17.504568099975586
    10. '#elif' → logprob: -17.504568099975586

Token 774: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07891567796468735
    2. ' t' → logprob: -2.578915596008301
    3. 'None' → logprob: -11.8289155960083
    4. '   ' → logprob: -11.9539155960083
    5. 'True' → logprob: -13.4539155960083
    6. '	t' → logprob: -13.5789155960083
    7. ' ' → logprob: -13.5789155960083
    8. '(t' → logprob: -13.5789155960083
    9. 'False' → logprob: -13.7039155960083
    10. '#' → logprob: -14.2664155960083

Token 775: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0232921801507473
    2. 'y' → logprob: -3.773292064666748
    3. '_x' → logprob: -10.023292541503906
    4. ' y' → logprob: -14.648292541503906
    5. 'x' → logprob: -14.648292541503906
    6. '
' → logprob: -14.898292541503906
    7. '_' → logprob: -15.898292541503906
    8. '_t' → logprob: -15.898292541503906
    9. 'vy' → logprob: -16.273292541503906
    10. 'None' → logprob: -16.273292541503906

Token 776: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0067156096920371056
    2. 'is' → logprob: -5.006715774536133
    3. '	is' → logprob: -16.381715774536133
    4. ' ' → logprob: -16.506715774536133
    5. ' ' → logprob: -17.381715774536133
    6. '[' → logprob: -18.006715774536133
    7. '<|end|>' → logprob: -18.381715774536133
    8. ' not' → logprob: -18.506715774536133
    9. 'not' → logprob: -19.006715774536133
    10. '
' → logprob: -20.756715774536133

Token 777: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38687729835510254
    2. 'not' → logprob: -1.1368772983551025
    3. 'None' → logprob: -12.386877059936523
    4. 'Not' → logprob: -14.136877059936523
    5. ' ' → logprob: -14.386877059936523
    6. '	not' → logprob: -15.136877059936523
    7. '_not' → logprob: -15.886877059936523
    8. ' None' → logprob: -16.386877059936523
    9. ' ' → logprob: -16.761877059936523
    10. 'n' → logprob: -17.386877059936523

Token 778: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.1424973713001236e-05
    2. ' None' → logprob: -10.375031471252441
    3. '_None' → logprob: -15.625031471252441
    4. '(None' → logprob: -16.875030517578125
    5. 'not' → logprob: -17.125030517578125
    6. 'none' → logprob: -18.125030517578125
    7. '=None' → logprob: -18.375030517578125
    8. 'Not' → logprob: -18.875030517578125
    9. '
' → logprob: -19.500030517578125
    10. '   ' → logprob: -19.625030517578125

Token 779: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034654809860512614
    2. ':
' → logprob: -8.375346183776855
    3. '           ' → logprob: -10.000346183776855
    4. '       ' → logprob: -10.750346183776855
    5. 'and' → logprob: -11.125346183776855
    6. ' and' → logprob: -11.250346183776855
    7. '```' → logprob: -12.250346183776855
    8. '==' → logprob: -12.375346183776855
    9. '=' → logprob: -12.500346183776855
    10. '{' → logprob: -13.750346183776855

Token 780: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058933645486831665
    2. '#' → logprob: -5.505893230438232
    3. 'if' → logprob: -6.630893230438232
    4. '       ' → logprob: -7.755893230438232
    5. ' if' → logprob: -10.13089370727539
    6. '```' → logprob: -12.00589370727539
    7. ' ' → logprob: -12.13089370727539
    8. '               ' → logprob: -12.38089370727539
    9. '   ' → logprob: -13.00589370727539
    10. ' #' → logprob: -13.25589370727539

Token 781: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2063436210155487
    2. '       ' → logprob: -1.706343650817871
    3. 'if' → logprob: -5.456343650817871
    4. '           ' → logprob: -8.081343650817871
    5. ' #' → logprob: -8.331343650817871
    6. ' if' → logprob: -9.956343650817871
    7. '        ' → logprob: -11.206343650817871
    8. '```' → logprob: -11.331343650817871
    9. ' ' → logprob: -11.456343650817871
    10. '   ' → logprob: -11.706343650817871

Token 782: ' vx' (ID: 93588)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02480127662420273
    2. 'if' → logprob: -3.774801254272461
    3. ' abs' → logprob: -6.524801254272461
    4. ' if' → logprob: -10.149801254272461
    5. '#' → logprob: -10.399801254272461
    6. '   ' → logprob: -11.899801254272461
    7. '(abs' → logprob: -12.024801254272461
    8. ' ' → logprob: -13.399801254272461
    9. '           ' → logprob: -13.774801254272461
    10. '
' → logprob: -14.399801254272461

Token 783: ' nul' (ID: 64435)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0622134804725647
    2. 'is' → logprob: -2.81221342086792
    3. ' est' → logprob: -9.562213897705078
    4. 'None' → logprob: -9.687213897705078
    5. '==' → logprob: -9.812213897705078
    6. 'é' → logprob: -11.312213897705078
    7. '  ' → logprob: -11.562213897705078
    8. ' None' → logprob: -12.187213897705078
    9. ' ' → logprob: -12.312213897705078
    10. '=None' → logprob: -12.437213897705078

Token 784: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3663940727710724
    2. '           ' → logprob: -1.36639404296875
    3. '       ' → logprob: -4.11639404296875
    4. ' and' → logprob: -4.11639404296875
    5. ',' → logprob: -4.74139404296875
    6. 'and' → logprob: -5.24139404296875
    7. ':
' → logprob: -5.99139404296875
    8. ' if' → logprob: -7.24139404296875
    9. 'if' → logprob: -7.99139404296875
    10. '=' → logprob: -8.36639404296875

Token 785: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16359126567840576
    2. '           ' → logprob: -2.4135913848876953
    3. ' if' → logprob: -2.9135913848876953
    4. '               ' → logprob: -5.288591384887695
    5. '#' → logprob: -6.538591384887695
    6. ' ' → logprob: -8.413591384887695
    7. '   ' → logprob: -8.788591384887695
    8. '       ' → logprob: -9.913591384887695
    9. '  ' → logprob: -10.163591384887695
    10. '          ' → logprob: -10.163591384887695

Token 786: ' px' (ID: 27003)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.004080420359969139
    2. ' abs' → logprob: -5.504080295562744
    3. '(abs' → logprob: -13.129080772399902
    4. '.abs' → logprob: -16.754079818725586
    5. 'if' → logprob: -18.129079818725586
    6. '_abs' → logprob: -19.754079818725586
    7. 'Abs' → logprob: -20.129079818725586
    8. 'fabs' → logprob: -20.504079818725586
    9. '   ' → logprob: -20.629079818725586
    10. '```' → logprob: -21.754079818725586

Token 787: ' doit' (ID: 21822)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.5365164279937744
    2. ' must' → logprob: -1.1615164279937744
    3. '==' → logprob: -2.6615164279937744
    4. 'abs' → logprob: -3.9115164279937744
    5. ' ==' → logprob: -5.161516189575195
    6. ' abs' → logprob: -6.411516189575195
    7. ')' → logprob: -6.661516189575195
    8. ' is' → logprob: -7.036516189575195
    9. ' doit' → logprob: -7.286516189575195
    10. 'is' → logprob: -7.286516189575195

Token 788: ' être' (ID: 9104)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22863979637622833
    2. ' être' → logprob: -2.853639841079712
    3. 'être' → logprob: -3.103639841079712
    4. ' be' → logprob: -3.228639841079712
    5. ' abs' → logprob: -3.728639841079712
    6. 'is' → logprob: -3.978639841079712
    7. ')' → logprob: -5.853639602661133
    8. '=' → logprob: -5.978639602661133
    9. ' is' → logprob: -6.103639602661133
    10. '<|end|>' → logprob: -6.103639602661133

Token 789: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29028505086898804
    2. 'abs' → logprob: -1.4152851104736328
    3. 'None' → logprob: -4.915285110473633
    4. ' abs' → logprob: -7.165285110473633
    5. '<' → logprob: -7.665285110473633
    6. ' ' → logprob: -8.665285110473633
    7. '<|end|>' → logprob: -9.415285110473633
    8. 'less' → logprob: -9.915285110473633
    9. '1' → logprob: -10.040285110473633
    10. 'fabs' → logprob: -10.915285110473633

Token 790: ' aussi' (ID: 9894)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012921017594635487
    2. ' and' → logprob: -5.13792085647583
    3. ':' → logprob: -5.63792085647583
    4. 'and' → logprob: -6.01292085647583
    5. '       ' → logprob: -7.76292085647583
    6. ':
' → logprob: -9.012921333312988
    7. ' if' → logprob: -9.262921333312988
    8. 'if' → logprob: -9.637921333312988
    9. ',' → logprob: -9.887921333312988
    10. '```' → logprob: -10.012921333312988

Token 791: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008615575497969985
    2. ':' → logprob: -8.000861167907715
    3. ' and' → logprob: -8.125861167907715
    4. 'and' → logprob: -8.875861167907715
    5. ' if' → logprob: -10.375861167907715
    6. 'if' → logprob: -10.875861167907715
    7. '	       ' → logprob: -11.875861167907715
    8. ':
' → logprob: -12.125861167907715
    9. '               ' → logprob: -12.125861167907715
    10. '       ' → logprob: -12.125861167907715

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005714519880712032
    2. ':' → logprob: -5.880714416503906
    3. '       ' → logprob: -6.755714416503906
    4. ' if' → logprob: -6.880714416503906
    5. '```' → logprob: -8.380714416503906
    6. 'if' → logprob: -8.630714416503906
    7. '               ' → logprob: -9.005714416503906
    8. '          ' → logprob: -10.255714416503906
    9. '<|end|>' → logprob: -10.380714416503906
    10. '            ' → logprob: -11.255714416503906

Token 793: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07077442854642868
    2. '           ' → logprob: -3.0707743167877197
    3. ' if' → logprob: -3.8207743167877197
    4. '       ' → logprob: -10.69577407836914
    5. '               ' → logprob: -12.69577407836914
    6. ' ' → logprob: -13.82077407836914
    7. '```' → logprob: -13.82077407836914
    8. 'If' → logprob: -14.07077407836914
    9. '(' → logprob: -14.57077407836914
    10. '	if' → logprob: -14.69577407836914

Token 794: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.000553151941858232
    2. ' abs' → logprob: -7.500553131103516
    3. '(abs' → logprob: -16.625553131103516
    4. 'Abs' → logprob: -20.875553131103516
    5. '.abs' → logprob: -21.375553131103516
    6. '_abs' → logprob: -21.625553131103516
    7. '0' → logprob: -23.125553131103516
    8. ' ' → logprob: -23.250553131103516
    9. '   ' → logprob: -23.500553131103516
    10. 'fabs' → logprob: -23.625553131103516

Token 795: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.875000953674316
    3. '(py' → logprob: -15.000000953674316
    4. ':px' → logprob: -15.250000953674316
    5. 'px' → logprob: -16.125001907348633
    6. '(
' → logprob: -18.375001907348633
    7. '(x' → logprob: -18.500001907348633
    8. '(cx' → logprob: -18.625001907348633
    9. '(nx' → logprob: -18.750001907348633
    10. '(p' → logprob: -19.125001907348633

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002811059355735779
    2. ')<' → logprob: -5.877810955047607
    3. '<' → logprob: -12.752811431884766
    4. '[' → logprob: -13.252811431884766
    5. ' <' → logprob: -14.502811431884766
    6. ' )' → logprob: -14.502811431884766
    7. ']' → logprob: -15.502811431884766
    8. ')<=' → logprob: -16.002811431884766
    9. ']<' → logprob: -16.502811431884766
    10. ' ' → logprob: -17.252811431884766

Token 797: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023251881822943687
    2. ' <' → logprob: -3.77325177192688
    3. ')<' → logprob: -12.5232515335083
    4. '()<' → logprob: -14.2732515335083
    5. ')' → logprob: -14.3982515335083
    6. ' ' → logprob: -14.5232515335083
    7. '[' → logprob: -15.1482515335083
    8. ']<' → logprob: -15.6482515335083
    9. '<=' → logprob: -16.273252487182617
    10. '<class' → logprob: -16.648252487182617

Token 798: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. 'EPS' → logprob: -14.75192928314209
    4. '   ' → logprob: -16.251928329467773
    5. ' EPS' → logprob: -17.751928329467773
    6. '```' → logprob: -18.126928329467773
    7. '0' → logprob: -18.689428329467773
    8. '  ' → logprob: -19.064428329467773
    9. '(' → logprob: -19.189428329467773
    10. ' ' → logprob: -19.814428329467773

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'EPS' → logprob: -18.000051498413086
    4. '   ' → logprob: -18.625051498413086
    5. '```' → logprob: -20.000051498413086
    6. '(' → logprob: -20.000051498413086
    7. '14' → logprob: -20.125051498413086
    8. '{' → logprob: -21.250051498413086
    9. '0' → logprob: -21.250051498413086
    10. '[' → logprob: -21.562551498413086

Token 800: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7081501483917236
    2. 'e' → logprob: -0.7081501483917236
    3. '1' → logprob: -4.4581499099731445
    4. '14' → logprob: -5.8331499099731445
    5. '```' → logprob: -9.083149909973145
    6. '4' → logprob: -9.083149909973145
    7. ' -' → logprob: -10.458149909973145
    8. '   ' → logprob: -10.833149909973145
    9. ' ' → logprob: -11.208149909973145
    10. '**' → logprob: -11.208149909973145

Token 801: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. '14' → logprob: -14.625000953674316
    3. 'e' → logprob: -16.0
    4. ' -' → logprob: -16.125
    5. '```' → logprob: -17.0
    6. '
' → logprob: -18.0
    7. '-
' → logprob: -18.125
    8. '   ' → logprob: -18.625
    9. '1' → logprob: -19.0
    10. '**' → logprob: -19.0

Token 802: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.625000953674316
    3. '13' → logprob: -16.5625
    4. '```' → logprob: -16.9375
    5. '15' → logprob: -17.0
    6. '-' → logprob: -17.1875
    7. '12' → logprob: -17.375
    8. '   ' → logprob: -17.5
    9. '
' → logprob: -17.5
    10. '014' → logprob: -17.6875

Token 803: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141421258449554
    2. 'and' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.951414108276367
    4. '           ' → logprob: -15.701414108276367
    5. ')' → logprob: -16.326414108276367
    6. '```' → logprob: -16.701414108276367
    7. '	and' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.701414108276367
    9. '            ' → logprob: -17.951414108276367
    10. '
' → logprob: -18.451414108276367

Token 804: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014165511354804039
    2. ' t' → logprob: -4.26416540145874
    3. '   ' → logprob: -13.389165878295898
    4. '`t' → logprob: -15.639165878295898
    5. ' ' → logprob: -16.2641658782959
    6. '	t' → logprob: -16.7641658782959
    7. '  ' → logprob: -17.0141658782959
    8. '(t' → logprob: -17.2641658782959
    9. '       ' → logprob: -17.7641658782959
    10. '    ' → logprob: -17.7641658782959

Token 805: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -8.77627644513268e-06
    2. 'y' → logprob: -11.750008583068848
    3. '_x' → logprob: -14.250008583068848
    4. '_' → logprob: -16.000009536743164
    5. '_hit' → logprob: -18.000009536743164
    6. '>=' → logprob: -18.500009536743164
    7. '	y' → logprob: -18.500009536743164
    8. '[' → logprob: -19.500009536743164
    9. ' y' → logprob: -19.625009536743164
    10. '\' → logprob: -19.625009536743164

Token 806: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5759466886520386
    2. ' >=' → logprob: -0.8259466886520386
    3. ' ' → logprob: -11.950946807861328
    4. ' ' → logprob: -15.325946807861328
    5. '>' → logprob: -15.450946807861328
    6. ']>=' → logprob: -15.950946807861328
    7. '≥' → logprob: -16.075946807861328
    8. ')>=' → logprob: -16.325946807861328
    9. ' >' → logprob: -16.825946807861328
    10. '   ' → logprob: -17.700946807861328

Token 807: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.009917695075273514
    2. ' -' → logprob: -4.634917736053467
    3. '-' → logprob: -8.759917259216309
    4. ' ' → logprob: -12.509917259216309
    5. '   ' → logprob: -15.009917259216309
    6. '0' → logprob: -15.134917259216309
    7. '  ' → logprob: -15.634917259216309
    8. '-P' → logprob: -16.134918212890625
    9. '(-' → logprob: -16.634918212890625
    10. '	' → logprob: -17.134918212890625

Token 808: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.125000953674316
    3. ' EPS' → logprob: -14.375000953674316
    4. 'ESP' → logprob: -18.125001907348633
    5. ' ' → logprob: -19.125001907348633
    6. 'eps' → logprob: -19.750001907348633
    7. 'EP' → logprob: -19.750001907348633
    8. '1' → logprob: -20.000001907348633
    9. 'EOS' → logprob: -20.125001907348633
    10. '-E' → logprob: -20.375001907348633

Token 809: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039501674473285675
    2. ':
' → logprob: -5.628950119018555
    3. '               ' → logprob: -8.753950119018555
    4. '           ' → logprob: -9.253950119018555
    5. '=' → logprob: -10.628950119018555
    6. '==' → logprob: -11.003950119018555
    7. '):' → logprob: -11.003950119018555
    8. 'and' → logprob: -11.503950119018555
    9. '[' → logprob: -12.128950119018555
    10. '{' → logprob: -13.003950119018555

Token 810: '               ' (ID: 506)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26780790090560913
    2. '               ' → logprob: -1.517807960510254
    3. '           ' → logprob: -4.267807960510254
    4. ' t' → logprob: -6.392807960510254
    5. '   ' → logprob: -10.892807960510254
    6. '                   ' → logprob: -11.142807960510254
    7. '	t' → logprob: -11.392807960510254
    8. '       ' → logprob: -12.517807960510254
    9. '              ' → logprob: -12.517807960510254
    10. '	       ' → logprob: -13.267807960510254

Token 811: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00012130453251302242
    2. ' t' → logprob: -9.750121116638184
    3. '               ' → logprob: -9.875121116638184
    4. '           ' → logprob: -11.500121116638184
    5. '	t' → logprob: -14.375121116638184
    6. '                   ' → logprob: -15.125121116638184
    7. '`t' → logprob: -15.250121116638184
    8. '   ' → logprob: -15.375121116638184
    9. '       ' → logprob: -17.6251220703125
    10. '              ' → logprob: -19.0001220703125

Token 812: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0006709783338010311
    2. '_y' → logprob: -7.875670909881592
    3. 'hit' → logprob: -8.25067138671875
    4. '_' → logprob: -11.25067138671875
    5. '_h' → logprob: -11.62567138671875
    6. 'y' → logprob: -13.12567138671875
    7. '_t' → logprob: -13.25067138671875
    8. 'Hit' → logprob: -13.87567138671875
    9. 't' → logprob: -14.37567138671875
    10. '_hits' → logprob: -14.37567138671875

Token 813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=t' → logprob: -16.625911712646484
    4. '   ' → logprob: -19.625911712646484
    5. ' ' → logprob: -19.625911712646484
    6. '＝' → logprob: -19.875911712646484
    7. '=

' → logprob: -20.375911712646484
    8. '=
' → logprob: -20.500911712646484
    9. '=}' → logprob: -21.125911712646484
    10. 't' → logprob: -21.500911712646484

Token 814: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007101670489646494
    2. ' t' → logprob: -7.2507100105285645
    3. '	t' → logprob: -16.625709533691406
    4. '`t' → logprob: -18.500709533691406
    5. '   ' → logprob: -18.750709533691406
    6. '_t' → logprob: -20.500709533691406
    7. ' ' → logprob: -21.250709533691406
    8. ' т' → logprob: -21.500709533691406
    9. '  ' → logprob: -21.750709533691406
    10. '0' → logprob: -21.875709533691406

Token 815: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0004882152716163546
    2. 'y' → logprob: -7.62548828125
    3. '_x' → logprob: -16.00048828125
    4. '_' → logprob: -16.12548828125
    5. ' y' → logprob: -18.12548828125
    6. '[' → logprob: -18.75048828125
    7. '	y' → logprob: -19.00048828125
    8. 'Y' → logprob: -19.12548828125
    9. '_t' → logprob: -19.25048828125
    10. 't' → logprob: -20.25048828125

Token 816: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12293118983507156
    2. '<|end|>' → logprob: -2.2479312419891357
    3. '<|end|>' → logprob: -5.622931003570557
    4. '        
' → logprob: -5.747931003570557
    5. '
' → logprob: -6.122931003570557
    6. 'else' → logprob: -8.497931480407715
    7. '#' → logprob: -9.122931480407715
    8. 'elif' → logprob: -9.247931480407715
    9. 'if' → logprob: -9.622931480407715
    10. '        

' → logprob: -9.622931480407715

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010890062898397446
    2. '<|end|>' → logprob: -4.635890007019043
    3. '<|end|>' → logprob: -8.010890007019043
    4. ')' → logprob: -8.510890007019043
    5. 'if' → logprob: -9.010890007019043
    6. '        
' → logprob: -9.510890007019043
    7. ' if' → logprob: -9.635890007019043
    8. '	' → logprob: -9.885890007019043
    9. 'else' → logprob: -10.010890007019043
    10. '```' → logprob: -10.260890007019043

Token 818: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036382899270392954
    2. 'if' → logprob: -8.375364303588867
    3. '        
' → logprob: -9.625364303588867
    4. '
' → logprob: -9.875364303588867
    5. ' if' → logprob: -12.000364303588867
    6. '<|end|>' → logprob: -12.750364303588867
    7. '   ' → logprob: -13.875364303588867
    8. 'import' → logprob: -14.250364303588867
    9. '           ' → logprob: -14.500364303588867
    10. ' ' → logprob: -14.750364303588867

Token 819: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6437608599662781
    2. '           ' → logprob: -1.1437609195709229
    3. ':' → logprob: -2.268760919570923
    4. ':
' → logprob: -3.018760919570923
    5. '#' → logprob: -6.143760681152344
    6. '	       ' → logprob: -8.393760681152344
    7. 'return' → logprob: -8.518760681152344
    8. ':return' → logprob: -9.268760681152344
    9. '<|end|>' → logprob: -9.393760681152344
    10. '{' → logprob: -9.518760681152344

Token 820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012544618919491768
    2. '       ' → logprob: -4.387544631958008
    3. '	       ' → logprob: -11.387544631958008
    4. '```' → logprob: -12.012544631958008
    5. '#' → logprob: -12.262544631958008
    6. '               ' → logprob: -12.637544631958008
    7. '   ' → logprob: -12.762544631958008
    8. '		' → logprob: -13.512544631958008
    9. 'return' → logprob: -14.012544631958008
    10. '<|end|>' → logprob: -14.262544631958008

Token 821: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.017029015347361565
    2. '#' (adapté à ' #') → logprob: -4.26702880859375
    3. 'pass' → logprob: -6.39202880859375
    4. 'if' → logprob: -7.26702880859375
    5. 't' → logprob: -8.01702880859375
    6. 'return' → logprob: -9.39202880859375
    7. '   ' → logprob: -10.14202880859375
    8. ' break' → logprob: -10.76702880859375
    9. '       ' → logprob: -11.26702880859375
    10. 'Break' → logprob: -14.64202880859375

Token 822: ' vx' (ID: 93588)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.008585494942963123
    2. '#' → logprob: -4.883585453033447
    3. 'if' → logprob: -7.133585453033447
    4. 't' → logprob: -9.383585929870605
    5. ' break' → logprob: -9.883585929870605
    6. 'pass' → logprob: -10.633585929870605
    7. 'return' → logprob: -11.508585929870605
    8. '   ' → logprob: -12.258585929870605
    9. 'Break' → logprob: -12.883585929870605
    10. '       ' → logprob: -13.008585929870605

Token 823: ' et' (ID: 859)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01646246947348118
    2. ' ==' → logprob: -4.141462326049805
    3. ',' → logprob: -8.516462326049805
    4. '=' → logprob: -9.641462326049805
    5. ')==' → logprob: -10.266462326049805
    6. '<|end|>' → logprob: -10.641462326049805
    7. 'is' → logprob: -11.141462326049805
    8. '[' → logprob: -11.141462326049805
    9. ']==' → logprob: -11.391462326049805
    10. '===' → logprob: -11.641462326049805

Token 824: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -2.7610454708337784e-05
    2. ' vy' → logprob: -10.500027656555176
    3. 'vel' → logprob: -16.87502670288086
    4. 'v' → logprob: -18.37502670288086
    5. 'Vy' → logprob: -19.37502670288086
    6. 'vx' → logprob: -20.00002670288086
    7. 'vi' → logprob: -20.62502670288086
    8. ' ' → logprob: -20.75002670288086
    9. 'vw' → logprob: -20.87502670288086
    10. 'ving' → logprob: -21.12502670288086

Token 825: ' n' (ID: 297)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02761676348745823
    2. ' ==' → logprob: -3.6526167392730713
    3. '=' → logprob: -7.52761697769165
    4. 'None' → logprob: -8.277616500854492
    5. 'abs' → logprob: -8.777616500854492
    6. '==
' → logprob: -9.902616500854492
    7. ')==' → logprob: -9.902616500854492
    8. '#' → logprob: -10.402616500854492
    9. '=None' → logprob: -10.777616500854492
    10. 'continue' → logprob: -10.777616500854492

Token 826: 'uls' (ID: 13433)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.1504015028476715
    2. 'uls' → logprob: -2.5254015922546387
    3. 'ul' → logprob: -3.1504015922546387
    4. 'ulle' → logprob: -5.400401592254639
    5. 'one' → logprob: -5.400401592254639
    6. 'é' → logprob: -6.025401592254639
    7. 'ulls' → logprob: -7.150401592254639
    8. 'ulla' → logprob: -7.275401592254639
    9. '=' → logprob: -7.650401592254639
    10. '```' → logprob: -7.775401592254639

Token 827: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40828046202659607
    2. '       ' → logprob: -1.1582804918289185
    3. ':' → logprob: -4.658280372619629
    4. '<|end|>' → logprob: -5.408280372619629
    5. '<|end|>' → logprob: -6.533280372619629
    6. ':
' → logprob: -6.783280372619629
    7. '[' → logprob: -7.533280372619629
    8. ',' → logprob: -7.658280372619629
    9. '   ' → logprob: -7.908280372619629
    10. ':return' → logprob: -8.158280372619629

Token 828: ' vitesse' (ID: 71752)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.010344416834414005
    2. 'return' → logprob: -4.760344505310059
    3. ' break' → logprob: -6.760344505310059
    4. '       ' → logprob: -8.010344505310059
    5. 'if' → logprob: -9.010344505310059
    6. '#' → logprob: -9.260344505310059
    7. ' return' → logprob: -11.260344505310059
    8. '   ' → logprob: -13.135344505310059
    9. '           ' → logprob: -13.260344505310059
    10. ' if' → logprob: -13.385344505310059

Token 829: ' n' (ID: 297)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0988638773560524
    2. ' ==' → logprob: -2.4738638401031494
    3. '=' → logprob: -4.7238640785217285
    4. '0' → logprob: -8.47386360168457
    5. '[' → logprob: -8.47386360168457
    6. 'abs' → logprob: -9.72386360168457
    7. ']==' → logprob: -9.97386360168457
    8. 'is' → logprob: -9.97386360168457
    9. '```' → logprob: -9.97386360168457
    10. ' ' → logprob: -10.22386360168457

Token 830: 'ulle' (ID: 14644)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.2959619462490082
    2. 'ot' → logprob: -2.420961856842041
    3. 'ulle' → logprob: -2.795961856842041
    4. 'e' → logprob: -3.545961856842041
    5. 'ul' → logprob: -4.295961856842041
    6. 'u' → logprob: -4.420961856842041
    7. ''est' → logprob: -4.545961856842041
    8. 'one' → logprob: -4.545961856842041
    9. 'é' → logprob: -4.920961856842041
    10. 'o' → logprob: -5.170961856842041

Token 831: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5959832668304443
    2. '           ' → logprob: -0.8459832668304443
    3. 'return' → logprob: -4.470983505249023
    4. ' if' → logprob: -5.470983505249023
    5. 'if' → logprob: -6.345983505249023
    6. ' return' → logprob: -6.345983505249023
    7. '        
' → logprob: -8.970983505249023
    8. ',' → logprob: -9.220983505249023
    9. 'break' → logprob: -9.220983505249023
    10. '               ' → logprob: -9.595983505249023

Token 832: ' pas' (ID: 2173)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07987474650144577
    2. 'return' → logprob: -2.5798747539520264
    3. 'if' → logprob: -7.079874515533447
    4. ' break' → logprob: -9.829874992370605
    5. '#' → logprob: -9.954874992370605
    6. '       ' → logprob: -11.329874992370605
    7. 'None' → logprob: -11.454874992370605
    8. '   ' → logprob: -11.579874992370605
    9. ' return' → logprob: -12.329874992370605
    10. '           ' → logprob: -12.704874992370605

Token 833: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.189667820930481
    2. 'de' → logprob: -1.564667820930481
    3. ' de' → logprob: -1.689667820930481
    4. 't' → logprob: -2.3146677017211914
    5. ' d' → logprob: -2.3146677017211914
    6. ' t' → logprob: -3.3146677017211914
    7. 'possible' → logprob: -3.4396677017211914
    8. ' possible' → logprob: -4.189667701721191
    9. '1' → logprob: -4.689667701721191
    10. '   ' → logprob: -5.439667701721191

Token 834: ' mouvement' (ID: 62236)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7661962509155273
    2. 'dé' → logprob: -0.8911962509155273
    3. 'movement' → logprob: -3.2661962509155273
    4. ' mouvement' → logprob: -3.3911962509155273
    5. 'd' → logprob: -4.016196250915527
    6. ' déplacement' → logprob: -4.516196250915527
    7. 'solution' → logprob: -5.516196250915527
    8. 'progress' → logprob: -5.766196250915527
    9. '
' → logprob: -5.891196250915527
    10. 'de' → logprob: -5.891196250915527

Token 835: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03422301262617111
    2. '       ' → logprob: -3.4092230796813965
    3. 'return' → logprob: -9.034222602844238
    4. '               ' → logprob: -9.284222602844238
    5. '        
' → logprob: -9.284222602844238
    6. ' return' → logprob: -9.534222602844238
    7. '
' → logprob: -10.034222602844238
    8. '            
' → logprob: -10.284222602844238
    9. '   ' → logprob: -10.659222602844238
    10. ',' → logprob: -10.659222602844238

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023284615948796272
    2. '       ' → logprob: -3.773284673690796
    3. 'return' → logprob: -10.898284912109375
    4. '               ' → logprob: -11.648284912109375
    5. ' return' → logprob: -12.398284912109375
    6. '   ' → logprob: -13.523284912109375
    7. '		' → logprob: -13.898284912109375
    8. 'break' → logprob: -14.023284912109375
    9. '          ' → logprob: -14.148284912109375
    10. '        
' → logprob: -14.148284912109375

Token 837: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.532065212726593
    2. 'break' → logprob: -1.1570651531219482
    3. '       ' → logprob: -2.4070651531219482
    4. ' break' → logprob: -5.657065391540527
    5. '           ' → logprob: -6.157065391540527
    6. ' return' → logprob: -6.282065391540527
    7. '   ' → logprob: -7.532065391540527
    8. '        
' → logprob: -10.907065391540527
    9. '```' → logprob: -11.032065391540527
    10. 'raise' → logprob: -11.032065391540527

Token 838: ' si' (ID: 1784)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4787652790546417
    2. 'break' → logprob: -0.9787652492523193
    3. 'if' → logprob: -5.978765487670898
    4. 'print' → logprob: -6.728765487670898
    5. '       ' → logprob: -7.103765487670898
    6. '           ' → logprob: -9.478765487670898
    7. '   ' → logprob: -10.853765487670898
    8. ' return' → logprob: -11.603765487670898
    9. ' break' → logprob: -11.728765487670898
    10. '#' → logprob: -12.478765487670898

Token 839: ' position' (ID: 4010)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.16964097321033478
    2. 'abs' → logprob: -2.6696410179138184
    3. 'math' → logprob: -3.1696410179138184
    4. ' norm' → logprob: -3.7946410179138184
    5. ' math' → logprob: -5.044641017913818
    6. ' abs' → logprob: -5.044641017913818
    7. 'pos' → logprob: -5.794641017913818
    8. 'dist' → logprob: -5.794641017913818
    9. '(norm' → logprob: -6.294641017913818
    10. '(math' → logprob: -7.794641017913818

Token 840: ' différente' (ID: 140707)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3610796332359314
    2. ' ==' → logprob: -1.2360796928405762
    3. '[' → logprob: -4.861079692840576
    4. '==(' → logprob: -5.361079692840576
    5. '==
' → logprob: -10.236079216003418
    6. ')==' → logprob: -10.736079216003418
    7. '()==' → logprob: -10.861079216003418
    8. ' ' → logprob: -11.486079216003418
    9. ']==' → logprob: -11.986079216003418
    10. '```' → logprob: -12.736079216003418

Token 841: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5506882667541504
    2. 'from' → logprob: -1.4256882667541504
    3. ' from' → logprob: -1.8006882667541504
    4. 'de' → logprob: -5.17568826675415
    5. ' (' → logprob: -5.92568826675415
    6. ' ' → logprob: -6.05068826675415
    7. '(' → logprob: -6.30068826675415
    8. '```' → logprob: -6.67568826675415
    9. ' du' → logprob: -6.92568826675415
    10. ' d' → logprob: -7.17568826675415

Token 842: ' zéro' (ID: 182040)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004624855937436223
    2. ' (' → logprob: -8.250462532043457
    3. '0' → logprob: -8.750462532043457
    4. 'pos' → logprob: -10.250462532043457
    5. '(pos' → logprob: -11.875462532043457
    6. ' ' → logprob: -15.125462532043457
    7. 'position' → logprob: -16.62546157836914
    8. '[' → logprob: -16.75046157836914
    9. '   ' → logprob: -17.00046157836914
    10. '```' → logprob: -17.00046157836914

Token 843: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.65857994556427
    2. ':' → logprob: -0.90857994556427
    3. 'and' → logprob: -3.7835798263549805
    4. ',' → logprob: -4.2835798263549805
    5. '           ' → logprob: -4.4085798263549805
    6. ' if' → logprob: -4.5335798263549805
    7. '       ' → logprob: -4.9085798263549805
    8. ':
' → logprob: -5.6585798263549805
    9. '   ' → logprob: -5.9085798263549805
    10. ' or' → logprob: -6.1585798263549805

Token 844: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07042451947927475
    2. ' return' → logprob: -2.8204245567321777
    3. 'break' → logprob: -5.070424556732178
    4. '       ' → logprob: -6.820424556732178
    5. ' break' → logprob: -7.695424556732178
    6. '           ' → logprob: -8.19542407989502
    7. '   ' → logprob: -8.19542407989502
    8. 'if' → logprob: -10.82042407989502
    9. ' if' → logprob: -12.32042407989502
    10. '
' → logprob: -12.32042407989502

Token 845: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.2083607017993927
    2. ' de' → logprob: -2.7083606719970703
    3. 'possible' → logprob: -2.7083606719970703
    4. ' ' → logprob: -3.2083606719970703
    5. ' d' → logprob: -5.58336067199707
    6. '   ' → logprob: -6.33336067199707
    7. ' impossible' → logprob: -6.58336067199707
    8. ' poss' → logprob: -6.83336067199707
    9. ' toucher' → logprob: -6.95836067199707
    10. '_possible' → logprob: -6.95836067199707

Token 846: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5567795038223267
    2. '           ' → logprob: -0.9317795038223267
    3. ' return' → logprob: -4.681779384613037
    4. '
' → logprob: -4.931779384613037
    5. 'return' → logprob: -5.306779384613037
    6. '        
' → logprob: -5.306779384613037
    7. ',' → logprob: -6.056779384613037
    8. '               ' → logprob: -6.931779384613037
    9. '   ' → logprob: -7.431779384613037
    10. '\n' → logprob: -7.681779384613037

Token 847: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3151788115501404
    2. ''aller' → logprob: -1.5651788711547852
    3. 'atte' → logprob: -4.315178871154785
    4. 'é' → logprob: -4.440178871154785
    5. ''arr' → logprob: -4.690178871154785
    6. 'arr' → logprob: -4.940178871154785
    7. ''' → logprob: -5.690178871154785
    8. 'éc' → logprob: -5.815178871154785
    9. 'aller' → logprob: -5.940178871154785
    10. 'return' → logprob: -6.190178871154785

Token 848: 'atte' (ID: 23975)
  Prédit: 'atte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.002862415974959731
    2. 'aller' → logprob: -6.502862453460693
    3. 'arr' → logprob: -7.502862453460693
    4. ''' → logprob: -8.752861976623535
    5. ' atteindre' → logprob: -9.252861976623535
    6. 'atta' → logprob: -9.502861976623535
    7. 'avance' → logprob: -9.502861976623535
    8. 'atter' → logprob: -9.502861976623535
    9. 'return' → logprob: -10.002861976623535
    10. 'av' → logprob: -10.127861976623535

Token 849: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.0005763856461271644
    2. 'inder' → logprob: -8.25057601928711
    3. 'e' → logprob: -9.12557601928711
    4. 'endre' → logprob: -9.37557601928711
    5. 'a' → logprob: -9.75057601928711
    6. 'ind' → logprob: -10.12557601928711
    7. 'ing' → logprob: -12.25057601928711
    8. 'i' → logprob: -12.87557601928711
    9. 'inde' → logprob: -12.87557601928711
    10. 'oudre' → logprob: -13.37557601928711

Token 850: ' origine' (ID: 67665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2169075757265091
    2. '"' → logprob: -2.841907501220703
    3. '0' → logprob: -2.966907501220703
    4. ' return' → logprob: -3.216907501220703
    5. 'pos' → logprob: -3.841907501220703
    6. '   ' → logprob: -4.841907501220703
    7. '       ' → logprob: -5.591907501220703
    8. ''' → logprob: -6.091907501220703
    9. ' ' → logprob: -6.216907501220703
    10. '(' → logprob: -6.466907501220703

Token 851: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08272658288478851
    2. '       ' → logprob: -2.58272647857666
    3. 'return' → logprob: -6.20772647857666
    4. ' return' → logprob: -7.20772647857666
    5. '               ' → logprob: -8.08272647857666
    6. '            ' → logprob: -8.95772647857666
    7. '<|end|>' → logprob: -9.20772647857666
    8. '        
' → logprob: -9.45772647857666
    9. '   ' → logprob: -9.70772647857666
    10. '        ' → logprob: -9.70772647857666

Token 852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6572107672691345
    2. '       ' → logprob: -0.7822107672691345
    3. ':' → logprob: -3.9072108268737793
    4. '               ' → logprob: -7.032210826873779
    5. '   ' → logprob: -7.282210826873779
    6. '
' → logprob: -7.782210826873779
    7. '\' → logprob: -7.907210826873779
    8. '```' → logprob: -8.157210350036621
    9. 'return' → logprob: -8.657210350036621
    10. '\n' → logprob: -8.782210350036621

Token 853: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.846936047077179
    2. 'return' → logprob: -0.971936047077179
    3. '       ' → logprob: -2.221935987472534
    4. ' if' → logprob: -2.971935987472534
    5. '           ' → logprob: -4.096936225891113
    6. ' return' → logprob: -4.346936225891113
    7. 'break' → logprob: -5.721936225891113
    8. ' break' → logprob: -8.596936225891113
    9. '   ' → logprob: -8.596936225891113
    10. 'raise' → logprob: -10.596936225891113

Token 854: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.4063544273376465
    2. '_' → logprob: -1.4063544273376465
    3. '=' → logprob: -3.4063544273376465
    4. ' =' → logprob: -3.7813544273376465
    5. 'return' → logprob: -4.1563544273376465
    6. '_return' → logprob: -4.4063544273376465
    7. ' ' → logprob: -6.9063544273376465
    8. '_break' → logprob: -7.2813544273376465
    9. '_=' → logprob: -7.4063544273376465
    10. ' return' → logprob: -7.6563544273376465

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1130429282784462
    2. ' =' → logprob: -2.2380428314208984
    3. ' is' → logprob: -9.238042831420898
    4. '=None' → logprob: -9.613042831420898
    5. ' ' → logprob: -9.988042831420898
    6. '==' → logprob: -12.363042831420898
    7. ' ==' → logprob: -13.488042831420898
    8. '<|end|>' → logprob: -13.488042831420898
    9. ',' → logprob: -14.363042831420898
    10. 'if' → logprob: -14.738042831420898

Token 856: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00890763197094202
    2. 'float' → logprob: -4.883907794952393
    3. '0' → logprob: -7.133907794952393
    4. 'math' → logprob: -7.758907794952393
    5. '-' → logprob: -10.008907318115234
    6. ' None' → logprob: -11.008907318115234
    7. 'sys' → logprob: -11.633907318115234
    8. '   ' → logprob: -13.008907318115234
    9. 'False' → logprob: -14.758907318115234
    10. ' float' → logprob: -15.008907318115234

Token 857: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10992707312107086
    2. '<|end|>' → logprob: -2.484927177429199
    3. '
' → logprob: -4.359927177429199
    4. 'if' → logprob: -5.359927177429199
    5. '        
' → logprob: -6.484927177429199
    6. '<|end|>' → logprob: -6.984927177429199
    7. ' if' → logprob: -7.984927177429199
    8. ' ' → logprob: -9.7349271774292
    9. ')' → logprob: -9.8599271774292
    10. '#' → logprob: -9.9849271774292

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012388858944177628
    2. '
' → logprob: -5.262388706207275
    3. '<|end|>' → logprob: -5.262388706207275
    4. 'if' → logprob: -7.012388706207275
    5. ' if' → logprob: -7.887388706207275
    6. '   ' → logprob: -8.512389183044434
    7. '        
' → logprob: -8.512389183044434
    8. '<|end|>' → logprob: -9.262389183044434
    9. '  
' → logprob: -10.512389183044434
    10. ')' → logprob: -10.887389183044434

Token 859: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15035104751586914
    2. 'if' (adapté à ' if') → logprob: -2.025351047515869
    3. ' if' → logprob: -4.900351047515869
    4. '   ' → logprob: -9.025350570678711
    5. ' ' → logprob: -10.525350570678711
    6. '	if' → logprob: -10.775350570678711
    7. '        
' → logprob: -11.900350570678711
    8. '<|end|>' → logprob: -11.900350570678711
    9. 'If' → logprob: -12.775350570678711
    10. '	' → logprob: -12.900350570678711

Token 860: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005949064157903194
    2. ' t' → logprob: -5.130949020385742
    3. '(t' → logprob: -10.880949020385742
    4. '0' → logprob: -13.505949020385742
    5. '	t' → logprob: -15.880949020385742
    6. '(' → logprob: -16.380949020385742
    7. '   ' → logprob: -16.505949020385742
    8. ' ' → logprob: -16.755949020385742
    9. ' (' → logprob: -16.880949020385742
    10. ' ' → logprob: -18.505949020385742

Token 861: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -1.9623810658231378e-05
    2. '_h' → logprob: -11.875020027160645
    3. '_' → logprob: -12.125020027160645
    4. 'hit' → logprob: -12.875020027160645
    5. '_hits' → logprob: -12.875020027160645
    6. '(hit' → logprob: -14.875020027160645
    7. '_hint' → logprob: -15.125020027160645
    8. 'Hit' → logprob: -15.625020027160645
    9. '_cut' → logprob: -16.375019073486328
    10. ' _' → logprob: -16.375019073486328

Token 862: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.001332263695076108
    2. 'is' → logprob: -6.6263322830200195
    3. ' ' → logprob: -12.62633228302002
    4. '>' → logprob: -13.37633228302002
    5. '>=' → logprob: -14.62633228302002
    6. '!=' → logprob: -15.50133228302002
    7. '	is' → logprob: -15.50133228302002
    8. '!==' → logprob: -16.001331329345703
    9. ')' → logprob: -16.376331329345703
    10. ' >' → logprob: -17.126331329345703

Token 863: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02515380084514618
    2. ' not' → logprob: -3.775153875350952
    3. 'None' → logprob: -6.275153636932373
    4. ' None' → logprob: -10.775154113769531
    5. 'Not' → logprob: -13.275154113769531
    6. '	not' → logprob: -14.400154113769531
    7. '```' → logprob: -15.400154113769531
    8. ' ' → logprob: -15.525154113769531
    9. '   ' → logprob: -16.15015411376953
    10. ' ' → logprob: -17.27515411376953

Token 864: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.1782583391759545e-05
    2. ' None' → logprob: -10.375031471252441
    3. '=None' → logprob: -15.625031471252441
    4. '(None' → logprob: -16.000032424926758
    5. '_None' → logprob: -16.375032424926758
    6. '```' → logprob: -16.500032424926758
    7. 'none' → logprob: -17.250032424926758
    8. 'No' → logprob: -17.250032424926758
    9. '   ' → logprob: -17.375032424926758
    10. 'N' → logprob: -18.500032424926758

Token 865: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012329868040978909
    2. 'and' → logprob: -5.137330055236816
    3. ':' → logprob: -5.262330055236816
    4. '           ' → logprob: -7.762330055236816
    5. '       ' → logprob: -7.887330055236816
    6. ' <=' → logprob: -8.262330055236816
    7. ':
' → logprob: -10.137330055236816
    8. '<=' → logprob: -10.887330055236816
    9. ',' → logprob: -11.387330055236816
    10. '<|end|>' → logprob: -11.637330055236816

Token 866: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17981724441051483
    2. ' t' → logprob: -1.8048171997070312
    3. ' dist' → logprob: -10.304817199707031
    4. 'dist' → logprob: -11.179817199707031
    5. '   ' → logprob: -11.929817199707031
    6. ' ' → logprob: -11.929817199707031
    7. '0' → logprob: -12.429817199707031
    8. '(t' → logprob: -12.929817199707031
    9. ' -' → logprob: -13.304817199707031
    10. '-' → logprob: -13.304817199707031

Token 867: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0046866838820278645
    2. '>=' → logprob: -5.5046868324279785
    3. ' >=' → logprob: -8.62968635559082
    4. '_' → logprob: -8.87968635559082
    5. '>' → logprob: -9.12968635559082
    6. '+' → logprob: -9.62968635559082
    7. 'hit' → logprob: -10.00468635559082
    8. '>-' → logprob: -11.50468635559082
    9. '_h' → logprob: -11.62968635559082
    10. '_hits' → logprob: -11.87968635559082

Token 868: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.20237191021442413
    2. ' >=' → logprob: -1.7023719549179077
    3. '>' → logprob: -7.077372074127197
    4. ' >' → logprob: -9.452371597290039
    5. ' ' → logprob: -10.952371597290039
    6. '+' → logprob: -12.327371597290039
    7. ')>=' → logprob: -12.577371597290039
    8. ']>=' → logprob: -12.952371597290039
    9. ' ' → logprob: -13.327371597290039
    10. '   ' → logprob: -13.327371597290039

Token 869: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0027101305313408375
    2. '-E' → logprob: -6.377710342407227
    3. '-' → logprob: -7.252710342407227
    4. ' EPS' → logprob: -8.252710342407227
    5. '   ' → logprob: -11.502710342407227
    6. ' ' → logprob: -11.502710342407227
    7. '0' → logprob: -11.627710342407227
    8. ' -' → logprob: -12.502710342407227
    9. 'ESP' → logprob: -13.252710342407227
    10. '  ' → logprob: -14.002710342407227

Token 870: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06122847646474838
    2. ' and' → logprob: -3.0612285137176514
    3. ':
' → logprob: -4.811228275299072
    4. '       ' → logprob: -6.186228275299072
    5. 'and' → logprob: -7.186228275299072
    6. ':return' → logprob: -7.186228275299072
    7. '           ' → logprob: -7.311228275299072
    8. ' :' → logprob: -9.31122875213623
    9. '):' → logprob: -10.93622875213623
    10. '   ' → logprob: -10.93622875213623

Token 871: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010044663213193417
    2. '       ' → logprob: -7.751004695892334
    3. ' and' → logprob: -8.126004219055176
    4. ':' → logprob: -9.126004219055176
    5. ' if' → logprob: -10.001004219055176
    6. ':
' → logprob: -10.376004219055176
    7. '
' → logprob: -10.626004219055176
    8. '               ' → logprob: -11.126004219055176
    9. ',' → logprob: -11.501004219055176
    10. 'return' → logprob: -11.876004219055176

Token 872: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7593401074409485
    2. 'if' → logprob: -1.2593400478363037
    3. '           ' → logprob: -2.1343400478363037
    4. 'distance' → logprob: -2.7593400478363037
    5. 'return' → logprob: -3.3843400478363037
    6. '       ' → logprob: -4.009340286254883
    7. ' if' → logprob: -4.759340286254883
    8. 'd' → logprob: -6.009340286254883
    9. ' dist' → logprob: -6.759340286254883
    10. '               ' → logprob: -7.759340286254883

Token 873: ' La' (ID: 3038)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5279303789138794
    2. 'if' → logprob: -1.0279303789138794
    3. 'return' → logprob: -3.90293025970459
    4. 'distance' → logprob: -4.02793025970459
    5. '#' → logprob: -5.77793025970459
    6. 'd' → logprob: -6.02793025970459
    7. '   ' → logprob: -6.02793025970459
    8. 'next' → logprob: -6.40293025970459
    9. 'new' → logprob: -7.27793025970459
    10. 'segment' → logprob: -7.52793025970459

Token 874: ' distance' (ID: 9324)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2733405828475952
    2. 'dist' → logprob: -2.1483407020568848
    3. 'distance' → logprob: -2.5233407020568848
    4. ' if' → logprob: -3.5233407020568848
    5. ' dist' → logprob: -5.023340702056885
    6. 'return' → logprob: -6.273340702056885
    7. 'pos' → logprob: -6.898340702056885
    8. 'd' → logprob: -7.398340702056885
    9. 't' → logprob: -7.398340702056885
    10. ' distance' → logprob: -7.523340702056885

Token 875: ' parcour' (ID: 130642)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8871471285820007
    2. '+=' → logprob: -0.8871471285820007
    3. ' =' → logprob: -3.1371471881866455
    4. ' +=' → logprob: -3.8871471881866455
    5. 'segment' → logprob: -4.137146949768066
    6. 'tr' → logprob: -4.137146949768066
    7. '_tr' → logprob: -4.387146949768066
    8. 'traj' → logprob: -4.387146949768066
    9. 'avance' → logprob: -4.887146949768066
    10. 'to' → logprob: -5.262146949768066

Token 876: 'ue' (ID: 466)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02615281753242016
    2. 'ue' → logprob: -3.7761528491973877
    3. 'uée' → logprob: -7.151152610778809
    4. 'ee' → logprob: -7.401152610778809
    5. 'é' → logprob: -7.776152610778809
    6. 'rée' → logprob: -8.026152610778809
    7. 'u' → logprob: -8.276152610778809
    8. 'cée' → logprob: -9.151152610778809
    9. '=' → logprob: -9.651152610778809
    10. 'urée' → logprob: -9.776152610778809

Token 877: ' jusqu' (ID: 21961)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9609628915786743
    2. '+=' → logprob: -1.0859628915786743
    3. ' =' → logprob: -1.8359628915786743
    4. '=' → logprob: -2.2109627723693848
    5. '+' → logprob: -5.085962772369385
    6. 'next' → logprob: -6.710962772369385
    7. ' +' → logprob: -7.460962772369385
    8. '           ' → logprob: -7.710962772369385
    9. '       ' → logprob: -7.960962772369385
    10. 'distance' → logprob: -8.210963249206543

Token 878: ''au' (ID: 63689)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.10016504675149918
    2. 'à' → logprob: -2.8501651287078857
    3. ''au' → logprob: -3.8501651287078857
    4. 'au' → logprob: -4.225164890289307
    5. '’à' → logprob: -6.600164890289307
    6. '=' → logprob: -9.850165367126465
    7. 'a' → logprob: -9.850165367126465
    8. '   ' → logprob: -10.350165367126465
    9. '’au' → logprob: -10.725165367126465
    10. ''a' → logprob: -11.100165367126465

Token 879: ' hit' (ID: 7103)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012290303595364094
    2. 'dist' → logprob: -4.5122904777526855
    3. ' t' → logprob: -6.7622904777526855
    4. ' dist' → logprob: -9.512290000915527
    5. 'pos' → logprob: -12.637290000915527
    6. '(t' → logprob: -13.012290000915527
    7. '(dist' → logprob: -13.137290000915527
    8. 'vel' → logprob: -13.887290000915527
    9. '   ' → logprob: -14.637290000915527
    10. 'distance' → logprob: -15.137290000915527

Token 880: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4952678084373474
    2. ' +=' → logprob: -1.4952678680419922
    3. '=' → logprob: -2.245267868041992
    4. '+=' → logprob: -3.495267868041992
    5. '           ' → logprob: -4.120267868041992
    6. '+' → logprob: -5.745267868041992
    7. ' is' → logprob: -5.870267868041992
    8. 'distance' → logprob: -6.245267868041992
    9. '               ' → logprob: -6.620267868041992
    10. ' +' → logprob: -6.620267868041992

Token 881: ' |' (ID: 1022)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0035742921754717827
    2. ' dist' → logprob: -5.878574371337891
    3. 't' → logprob: -7.878574371337891
    4. 'math' → logprob: -8.50357437133789
    5. 'vel' → logprob: -9.00357437133789
    6. ' math' → logprob: -10.25357437133789
    7. '(dist' → logprob: -12.00357437133789
    8. '   ' → logprob: -12.25357437133789
    9. '	dist' → logprob: -12.37857437133789
    10. 'norm' → logprob: -12.37857437133789

Token 882: 'vel' (ID: 1002)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.43993404507637024
    2. 'vel' → logprob: -1.0649340152740479
    3. 'dist' → logprob: -4.939934253692627
    4. ' t' → logprob: -6.314934253692627
    5. ' vel' → logprob: -6.564934253692627
    6. 'v' → logprob: -7.939934253692627
    7. 'vx' → logprob: -8.814933776855469
    8. ' dist' → logprob: -9.189933776855469
    9. '   ' → logprob: -10.752433776855469
    10. 'Vel' → logprob: -10.877433776855469

Token 883: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00017708084487821907
    2. '[' → logprob: -9.250177383422852
    3. '```' → logprob: -11.125177383422852
    4. ']' → logprob: -11.250177383422852
    5. ' |' → logprob: -11.500177383422852
    6. ']*' → logprob: -11.500177383422852
    7. '|\' → logprob: -11.625177383422852
    8. ']|' → logprob: -11.875177383422852
    9. 't' → logprob: -12.625177383422852
    10. ')|' → logprob: -13.000177383422852

Token 884: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023486899212002754
    2. '*' → logprob: -3.773486852645874
    3. '   ' → logprob: -9.148487091064453
    4. ' +' → logprob: -10.398487091064453
    5. '()*' → logprob: -10.523487091064453
    6. '()' → logprob: -11.023487091064453
    7. ')' → logprob: -11.523487091064453
    8. ' ' → logprob: -11.898487091064453
    9. '(norm' → logprob: -12.023487091064453
    10. 'norm' → logprob: -12.023487091064453

Token 885: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06196846812963486
    2. ' t' → logprob: -2.8119685649871826
    3. '(t' → logprob: -14.061968803405762
    4. '	t' → logprob: -16.936967849731445
    5. '`t' → logprob: -17.186967849731445
    6. ' math' → logprob: -18.186967849731445
    7. '_t' → logprob: -18.436967849731445
    8. '(' → logprob: -18.561967849731445
    9. ' ' → logprob: -18.936967849731445
    10. ' (' → logprob: -19.311967849731445

Token 886: '_hit' (ID: 91390)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04123853147029877
    2. '*' → logprob: -3.29123854637146
    3. ' +' → logprob: -6.416238307952881
    4. ')' → logprob: -7.791238307952881
    5. '       ' → logprob: -8.291238784790039
    6. '   ' → logprob: -8.791238784790039
    7. ',' → logprob: -8.916238784790039
    8. ' ' → logprob: -9.041238784790039
    9. ':' → logprob: -9.041238784790039
    10. '+' → logprob: -9.541238784790039

Token 887: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4431621730327606
    2. '           ' → logprob: -1.568162202835083
    3. ' *' → logprob: -2.443162202835083
    4. ')' → logprob: -3.693162202835083
    5. '*' → logprob: -4.068161964416504
    6. ',' → logprob: -5.443161964416504
    7. '               ' → logprob: -5.693161964416504
    8. '
' → logprob: -6.318161964416504
    9. '   ' → logprob: -6.568161964416504
    10. '.' → logprob: -6.693161964416504

Token 888: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12900575995445251
    2. '           ' → logprob: -2.3790056705474854
    3. ':' → logprob: -4.0040059089660645
    4. ',' → logprob: -5.6290059089660645
    5. ')' → logprob: -6.2540059089660645
    6. '               ' → logprob: -6.7540059089660645
    7. '):' → logprob: -7.7540059089660645
    8. '.' → logprob: -7.8790059089660645
    9. ' :' → logprob: -8.129005432128906
    10. '+' → logprob: -8.379005432128906

Token 889: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06187524273991585
    2. ' dist' → logprob: -3.686875343322754
    3. 'return' → logprob: -4.311875343322754
    4. 'if' → logprob: -4.561875343322754
    5. 'distance' → logprob: -5.186875343322754
    6. ' if' → logprob: -6.186875343322754
    7. '           ' → logprob: -6.186875343322754
    8. ' return' → logprob: -6.936875343322754
    9. 'd' → logprob: -8.561875343322754
    10. ' distance' → logprob: -9.686875343322754

Token 890: '_to' (ID: 5089)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.08213390409946442
    2. '_' → logprob: -2.7071340084075928
    3. '_norm' → logprob: -4.957133769989014
    4. '<|end|>' → logprob: -6.707133769989014
    5. 'Total' → logprob: -7.582133769989014
    6. '_len' → logprob: -7.707133769989014
    7. ' _' → logprob: -7.957133769989014
    8. ')' → logprob: -8.207134246826172
    9. '_vec' → logprob: -8.707134246826172
    10. '_length' → logprob: -8.707134246826172

Token 891: '_hit' (ID: 91390)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.026685383170843124
    2. '_hit' → logprob: -3.6516854763031006
    3. 'add' → logprob: -9.15168571472168
    4. 'go' → logprob: -9.65168571472168
    5. 'reach' → logprob: -9.77668571472168
    6. '(hit' → logprob: -10.40168571472168
    7. ' hit' → logprob: -11.02668571472168
    8. 'travel' → logprob: -11.02668571472168
    9. 'cover' → logprob: -11.27668571472168
    10. 'point' → logprob: -11.65168571472168

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11999231576919556
    2. '=' → logprob: -2.244992256164551
    3. ' +=' → logprob: -4.994992256164551
    4. '+=' → logprob: -8.24499225616455
    5. ',' → logprob: -10.61999225616455
    6. ' ' → logprob: -10.86999225616455
    7. ')' → logprob: -11.49499225616455
    8. '<|end|>' → logprob: -11.49499225616455
    9. '   ' → logprob: -11.61999225616455
    10. 's' → logprob: -11.74499225616455

Token 893: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.018165161833167076
    2. ' norm' → logprob: -4.018165111541748
    3. '(norm' → logprob: -11.893165588378906
    4. 't' → logprob: -12.518165588378906
    5. 'dist' → logprob: -13.143165588378906
    6. 'math' → logprob: -13.268165588378906
    7. '   ' → logprob: -15.018165588378906
    8. ' math' → logprob: -15.643165588378906
    9. ' ' → logprob: -15.893165588378906
    10. 'n' → logprob: -15.893165588378906

Token 894: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011312354356050491
    2. 'vel' → logprob: -5.011312484741211
    3. '((' → logprob: -5.386312484741211
    4. '(v' → logprob: -12.136312484741211
    5. ' vel' → logprob: -13.886312484741211
    6. ' (' → logprob: -14.636312484741211
    7. '_vel' → logprob: -15.636312484741211
    8. 'velo' → logprob: -15.886312484741211
    9. 'Vel' → logprob: -16.13631248474121
    10. '.vel' → logprob: -16.63631248474121

Token 895: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.474242627620697
    2. '(' → logprob: -0.974242627620697
    3. ' vel' → logprob: -9.349242210388184
    4. '(v' → logprob: -10.599242210388184
    5. 'velo' → logprob: -10.974242210388184
    6. ' (' → logprob: -11.349242210388184
    7. '((' → logprob: -11.474242210388184
    8. '(
' → logprob: -12.724242210388184
    9. 'velocity' → logprob: -13.099242210388184
    10. ')' → logprob: -13.099242210388184

Token 896: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11586777865886688
    2. ')*' → logprob: -2.240867853164673
    3. ')*(' → logprob: -5.990867614746094
    4. ')v' → logprob: -8.115867614746094
    5. '(v' → logprob: -8.740867614746094
    6. ' )' → logprob: -10.615867614746094
    7. ')(' → logprob: -10.615867614746094
    8. '(' → logprob: -10.990867614746094
    9. '   ' → logprob: -12.115867614746094
    10. ')`' → logprob: -13.740867614746094

Token 897: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00015860427811276168
    2. ' t' → logprob: -8.750158309936523
    3. '(t' → logprob: -17.500158309936523
    4. '`t' → logprob: -18.625158309936523
    5. '	t' → logprob: -19.625158309936523
    6. '*t' → logprob: -20.625158309936523
    7. '_t' → logprob: -20.875158309936523
    8. ')t' → logprob: -21.500158309936523
    9. '(' → logprob: -22.000158309936523
    10. '
' → logprob: -22.125158309936523

Token 898: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0009376663947477937
    2. 'hit' → logprob: -7.000937461853027
    3. 'it' → logprob: -10.875937461853027
    4. '_' → logprob: -13.500937461853027
    5. '_h' → logprob: -13.500937461853027
    6. '_it' → logprob: -13.625937461853027
    7. 'Hit' → logprob: -14.250937461853027
    8. '_hits' → logprob: -14.625937461853027
    9. '(hit' → logprob: -15.000937461853027
    10. '[' → logprob: -15.500937461853027

Token 899: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006159266456961632
    2. '
' → logprob: -5.38115930557251
    3. '<|end|>' → logprob: -7.50615930557251
    4. '       ' → logprob: -8.131158828735352
    5. ' if' → logprob: -8.631158828735352
    6. '               ' → logprob: -9.256158828735352
    7. 'if' → logprob: -9.381158828735352
    8. '		' → logprob: -9.881158828735352
    9. '            
' → logprob: -9.881158828735352
    10. '<|end|>' → logprob: -9.881158828735352

Token 900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08239664882421494
    2. '
' → logprob: -2.8323967456817627
    3. '       ' → logprob: -3.9573967456817627
    4. '<|end|>' → logprob: -8.082396507263184
    5. '               ' → logprob: -8.832396507263184
    6. 'if' → logprob: -9.082396507263184
    7. ' if' → logprob: -9.082396507263184
    8. '            
' → logprob: -9.332396507263184
    9. 'return' → logprob: -9.707396507263184
    10. '<|end|>' → logprob: -10.082396507263184

Token 901: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0047218031249940395
    2. '           ' → logprob: -5.504721641540527
    3. '       ' → logprob: -7.879721641540527
    4. ' if' → logprob: -8.254721641540527
    5. 'return' → logprob: -12.754721641540527
    6. '               ' → logprob: -13.879721641540527
    7. '	if' → logprob: -14.879721641540527
    8. '   ' → logprob: -15.254721641540527
    9. 'If' → logprob: -15.879721641540527
    10. '#' → logprob: -16.879722595214844

Token 902: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04859623312950134
    2. ' dist' → logprob: -3.048596143722534
    3. '   ' → logprob: -12.173596382141113
    4. '(dist' → logprob: -12.923596382141113
    5. '	dist' → logprob: -13.923596382141113
    6. ' ' → logprob: -16.798595428466797
    7. 'distance' → logprob: -16.923595428466797
    8. '           ' → logprob: -17.048595428466797
    9. '  ' → logprob: -17.048595428466797
    10. 'Dist' → logprob: -17.048595428466797

Token 903: '_total' (ID: 23814)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0067240106873214245
    2. '_total' → logprob: -5.006723880767822
    3. 'to' → logprob: -12.50672435760498
    4. 'total' → logprob: -13.00672435760498
    5. '   ' → logprob: -14.38172435760498
    6. '_tot' → logprob: -14.75672435760498
    7. '+' → logprob: -14.88172435760498
    8. '_' → logprob: -15.25672435760498
    9. 'To' → logprob: -15.63172435760498
    10. '```' → logprob: -16.006723403930664

Token 904: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575941801071167
    2. '+' → logprob: -0.825941801071167
    3. ' plus' → logprob: -14.450942039489746
    4. '＋' → logprob: -15.200942039489746
    5. ' +
' → logprob: -15.450942039489746
    6. '+
' → logprob: -15.450942039489746
    7. '+r' → logprob: -15.450942039489746
    8. '   ' → logprob: -15.450942039489746
    9. ' ' → logprob: -15.700942039489746
    10. '+D' → logprob: -15.950942039489746

Token 905: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00033558503491804004
    2. ' dist' → logprob: -8.000335693359375
    3. '	dist' → logprob: -16.500335693359375
    4. '(dist' → logprob: -17.250335693359375
    5. '_dist' → logprob: -18.750335693359375
    6. '.dist' → logprob: -19.500335693359375
    7. 'Dist' → logprob: -20.875335693359375
    8. 'diff' → logprob: -21.000335693359375
    9. '   ' → logprob: -21.125335693359375
    10. ' ' → logprob: -21.125335693359375

Token 906: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. 'to' → logprob: -14.500000953674316
    3. '_' → logprob: -15.875000953674316
    4. 'To' → logprob: -16.125
    5. '   ' → logprob: -16.875
    6. '```' → logprob: -17.0
    7. ' to' → logprob: -17.75
    8. '_TO' → logprob: -18.125
    9. '[' → logprob: -18.875
    10. '...' → logprob: -19.5

Token 907: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.035648271441459656
    2. 'hit' → logprob: -3.4106483459472656
    3. '_to' → logprob: -6.285648345947266
    4. '_h' → logprob: -10.160648345947266
    5. 'to' → logprob: -11.035648345947266
    6. '(hit' → logprob: -11.035648345947266
    7. '_' → logprob: -11.160648345947266
    8. '_t' → logprob: -11.285648345947266
    9. 'Hit' → logprob: -12.285648345947266
    10. ' hit' → logprob: -12.660648345947266

Token 908: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05505853891372681
    2. '<=' → logprob: -2.930058479309082
    3. ' <' → logprob: -8.930058479309082
    4. ' ' → logprob: -10.430058479309082
    5. '<' → logprob: -11.305058479309082
    6. '-' → logprob: -15.180058479309082
    7. ' ' → logprob: -15.305058479309082
    8. '   ' → logprob: -15.305058479309082
    9. 'le' → logprob: -15.430058479309082
    10. ' >=' → logprob: -15.555058479309082

Token 909: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00014001218369230628
    2. ' D' → logprob: -8.875140190124512
    3. '	D' → logprob: -17.125139236450195
    4. '   ' → logprob: -18.000139236450195
    5. '>D' → logprob: -18.500139236450195
    6. ' ' → logprob: -20.250139236450195
    7. '+D' → logprob: -21.125139236450195
    8. '<D' → logprob: -21.500139236450195
    9. '=D' → logprob: -21.875139236450195
    10. '```' → logprob: -22.000139236450195

Token 910: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.706066906452179
    2. ' +' → logprob: -0.831066906452179
    3. ':
' → logprob: -2.831066846847534
    4. ':' → logprob: -4.456067085266113
    5. '   ' → logprob: -8.706067085266113
    6. ' :
' → logprob: -9.831067085266113
    7. ':return' → logprob: -11.331067085266113
    8. '+:' → logprob: -11.581067085266113
    9. ' :' → logprob: -11.956067085266113
    10. '```' → logprob: -12.706067085266113

Token 911: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0619756355881691
    2. ' EPS' → logprob: -2.8119757175445557
    3. ' ' → logprob: -12.311975479125977
    4. '   ' → logprob: -14.186975479125977
    5. 'EOS' → logprob: -14.186975479125977
    6. 'ESP' → logprob: -14.311975479125977
    7. '0' → logprob: -15.186975479125977
    8. 'eps' → logprob: -15.186975479125977
    9. 'EP' → logprob: -15.186975479125977
    10. '1' → logprob: -15.311975479125977

Token 912: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6951504349708557
    2. ':
' → logprob: -0.6951504349708557
    3. ':return' → logprob: -6.445150375366211
    4. ' :
' → logprob: -9.070150375366211
    5. '       ' → logprob: -9.320150375366211
    6. '           ' → logprob: -9.320150375366211
    7. ' :' → logprob: -10.070150375366211
    8. ':
' → logprob: -10.445150375366211
    9. ' and' → logprob: -10.695150375366211
    10. '   ' → logprob: -11.945150375366211

Token 913: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010030358098447323
    2. '           ' → logprob: -7.126003265380859
    3. ' return' → logprob: -8.75100326538086
    4. 'return' → logprob: -11.00100326538086
    5. '                   ' → logprob: -11.87600326538086
    6. '       ' → logprob: -12.00100326538086
    7. '              ' → logprob: -12.75100326538086
    8. '                       ' → logprob: -13.00100326538086
    9. '                ' → logprob: -13.50100326538086
    10. '            ' → logprob: -13.50100326538086

Token 914: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00014776040916331112
    2. '               ' → logprob: -9.250147819519043
    3. 'print' → logprob: -10.875147819519043
    4. ' return' → logprob: -11.375147819519043
    5. '
' → logprob: -11.500147819519043
    6. '                   ' → logprob: -11.625147819519043
    7. 'dist' → logprob: -13.625147819519043
    8. '   ' → logprob: -14.250147819519043
    9. '```' → logprob: -16.375146865844727
    10. '	return' → logprob: -16.500146865844727

Token 915: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00023774817236699164
    2. 'dist' → logprob: -8.750237464904785
    3. '#' → logprob: -10.750237464904785
    4. 'pos' → logprob: -11.000237464904785
    5. '               ' → logprob: -11.375237464904785
    6. ' return' → logprob: -11.500237464904785
    7. '   ' → logprob: -12.125237464904785
    8. '           ' → logprob: -12.375237464904785
    9. 'distance' → logprob: -12.375237464904785
    10. '       ' → logprob: -12.875237464904785

Token 916: ' touche' (ID: 77303)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0457250252366066
    2. ' return' → logprob: -3.295725107192993
    3. 'ret' → logprob: -5.295724868774414
    4. '               ' → logprob: -6.545724868774414
    5. ' retourne' → logprob: -7.420724868774414
    6. '
' → logprob: -8.920724868774414
    7. '           ' → logprob: -8.920724868774414
    8. '   ' → logprob: -9.170724868774414
    9. 'r' → logprob: -9.920724868774414
    10. 'rend' → logprob: -10.295724868774414

Token 917: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6130329370498657
    2. '               ' → logprob: -1.2380329370498657
    3. ' return' → logprob: -2.488032817840576
    4. '                   ' → logprob: -3.363032817840576
    5. 'le' → logprob: -4.613032817840576
    6. '           ' → logprob: -4.863032817840576
    7. ' la' → logprob: -4.863032817840576
    8. ' le' → logprob: -4.988032817840576
    9. 'origine' → logprob: -5.613032817840576
    10. 'la' → logprob: -5.988032817840576

Token 918: ' cible' (ID: 136857)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14153112471103668
    2. 'print' → logprob: -2.266531229019165
    3. 'origine' → logprob: -4.266530990600586
    4. 'origin' → logprob: -5.266530990600586
    5. 'center' → logprob: -5.766530990600586
    6. 'distance' → logprob: -6.266530990600586
    7. 'centre' → logprob: -6.891530990600586
    8. ' return' → logprob: -7.391530990600586
    9. 'position' → logprob: -7.641530990600586
    10. 'orig' → logprob: -7.891530990600586

Token 919: ' avant' (ID: 13339)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4488413631916046
    2. '                   ' → logprob: -1.1988413333892822
    3. 'return' → logprob: -2.9488413333892822
    4. ' return' → logprob: -5.198841571807861
    5. '
' → logprob: -7.448841571807861
    6. '                       ' → logprob: -7.573841571807861
    7. ',' → logprob: -7.948841571807861
    8. '.' → logprob: -9.073841094970703
    9. '   ' → logprob: -9.448841094970703
    10. ':return' → logprob: -9.448841094970703

Token 920: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23096197843551636
    2. '               ' → logprob: -1.9809620380401611
    3. 'le' → logprob: -3.105962038040161
    4. 'de' → logprob: -4.480961799621582
    5. 'ret' → logprob: -4.980961799621582
    6. 'la' → logprob: -5.605961799621582
    7. '                   ' → logprob: -7.480961799621582
    8. '   ' → logprob: -8.105961799621582
    9. '           ' → logprob: -8.230961799621582
    10. ' de' → logprob: -8.980961799621582

Token 921: ''ép' (ID: 131699)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9197938442230225
    2. 'origine' → logprob: -1.1697938442230225
    3. ''origine' → logprob: -2.5447938442230225
    4. 'distance' → logprob: -2.9197938442230225
    5. 'arr' → logprob: -3.4197938442230225
    6. ''arrivée' → logprob: -3.9197938442230225
    7. 'origin' → logprob: -4.044794082641602
    8. 'ap' → logprob: -4.419794082641602
    9. 'mur' → logprob: -5.044794082641602
    10. 'D' → logprob: -5.169794082641602

Token 922: 'uis' (ID: 4560)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03783364221453667
    2. 'os' → logprob: -4.6628336906433105
    3. 'oque' → logprob: -5.1628336906433105
    4. '```' → logprob: -5.2878336906433105
    5. 'aisseur' → logprob: -6.0378336906433105
    6. 'sin' → logprob: -6.0378336906433105
    7. '
' → logprob: -7.0378336906433105
    8. '#' → logprob: -7.2878336906433105
    9. 'is' → logprob: -7.2878336906433105
    10. '``' → logprob: -7.6628336906433105

Token 923: 'ement' (ID: 962)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.06174435093998909
    2. 'ure' → logprob: -3.811744451522827
    3. 'e' → logprob: -4.811744213104248
    4. 'age' → logprob: -5.061744213104248
    5. 'ement' → logprob: -5.061744213104248
    6. 'ution' → logprob: -5.186744213104248
    7. 'ation' → logprob: -5.811744213104248
    8. 'ision' → logprob: -6.311744213104248
    9. 'tion' → logprob: -6.436744213104248
    10. 'ion' → logprob: -7.186744213104248

Token 924: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4519638121128082
    2. 'return' → logprob: -1.2019637823104858
    3. '                   ' → logprob: -3.4519639015197754
    4. ' return' → logprob: -4.201963901519775
    5. ' de' → logprob: -5.201963901519775
    6. 'de' → logprob: -5.451963901519775
    7. ' du' → logprob: -5.951963901519775
    8. 'du' → logprob: -6.076963901519775
    9. ' des' → logprob: -8.326963424682617
    10. '   ' → logprob: -8.576963424682617

Token 925: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5102785229682922
    2. 'D' → logprob: -1.0102784633636475
    3. 'distance' → logprob: -3.6352784633636475
    4. 'le' → logprob: -5.260278701782227
    5. 'l' → logprob: -6.510278701782227
    6. 'dist' → logprob: -6.635278701782227
    7. ' la' → logprob: -7.635278701782227
    8. 'd' → logprob: -9.010278701782227
    9. ' D' → logprob: -9.135278701782227
    10. 'Distance' → logprob: -9.885278701782227

Token 926: ' portée' (ID: 106795)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0007316163973882794
    2. 'dist' → logprob: -7.625731468200684
    3. 'D' → logprob: -9.500731468200684
    4. ' distance' → logprob: -9.750731468200684
    5. 'car' → logprob: -10.125731468200684
    6. 'd' → logprob: -10.625731468200684
    7. 'budget' → logprob: -10.875731468200684
    8. 'ress' → logprob: -11.625731468200684
    9. 'Distance' → logprob: -12.250731468200684
    10. 'temps' → logprob: -12.500731468200684

Token 927: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0090121915563941
    2. '                   ' → logprob: -4.759012222290039
    3. ',' → logprob: -8.759012222290039
    4. '           ' → logprob: -9.384012222290039
    5. 'return' → logprob: -9.384012222290039
    6. ' return' → logprob: -10.384012222290039
    7. '.' → logprob: -11.009012222290039
    8. '                       ' → logprob: -11.884012222290039
    9. '
' → logprob: -12.634012222290039
    10. ':' → logprob: -12.884012222290039

Token 928: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000616293225903064
    2. ' return' → logprob: -8.500616073608398
    3. '                   ' → logprob: -8.625616073608398
    4. 'return' → logprob: -8.750616073608398
    5. '           ' → logprob: -9.875616073608398
    6. '       ' → logprob: -11.125616073608398
    7. '
' → logprob: -11.875616073608398
    8. '                ' → logprob: -14.125616073608398
    9. '              ' → logprob: -15.250616073608398
    10. '   ' → logprob: -15.375616073608398

Token 929: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.652451464906335e-05
    2. '               ' → logprob: -11.500016212463379
    3. ' return' → logprob: -12.500016212463379
    4. '                   ' → logprob: -13.000016212463379
    5. 'print' → logprob: -16.000017166137695
    6. '
' → logprob: -16.500017166137695
    7. '   ' → logprob: -16.875017166137695
    8. '	return' → logprob: -19.250017166137695
    9. '           ' → logprob: -19.625017166137695
    10. '       ' → logprob: -19.625017166137695

Token 930: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009342094417661428
    2. ' dist' → logprob: -7.00093412399292
    3. 'round' → logprob: -11.250934600830078
    4. '(dist' → logprob: -11.750934600830078
    5. '"' → logprob: -14.375934600830078
    6. '   ' → logprob: -15.000934600830078
    7. 'True' → logprob: -15.375934600830078
    8. 'str' → logprob: -15.625934600830078
    9. 'float' → logprob: -15.750934600830078
    10. 'int' → logprob: -15.875934600830078

Token 931: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.029764845967292786
    2. '_to' → logprob: -3.5297648906707764
    3. 'total' → logprob: -12.154765129089355
    4. '_tot' → logprob: -12.154765129089355
    5. 'Total' → logprob: -13.529765129089355
    6. 'to' → logprob: -14.029765129089355
    7. 'To' → logprob: -14.529765129089355
    8. 'tot' → logprob: -15.279765129089355
    9. '+' → logprob: -15.529765129089355
    10. '_' → logprob: -16.27976417541504

Token 932: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602267622947693
    2. '+' → logprob: -1.910226821899414
    3. ' +
' → logprob: -14.035226821899414
    4. '   ' → logprob: -14.910226821899414
    5. '+
' → logprob: -15.035226821899414
    6. ' plus' → logprob: -15.785226821899414
    7. ' ' → logprob: -15.910226821899414
    8. ' ' → logprob: -15.910226821899414
    9. '＋' → logprob: -16.285226821899414
    10. 'import' → logprob: -16.785226821899414

Token 933: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.704273118884885e-07
    2. ' dist' → logprob: -14.250000953674316
    3. '(dist' → logprob: -20.0
    4. '	dist' → logprob: -21.0
    5. '_dist' → logprob: -21.875
    6. 'dest' → logprob: -22.625
    7. 'd' → logprob: -22.875
    8. '.dist' → logprob: -23.125
    9. 'dis' → logprob: -23.625
    10. 'diff' → logprob: -23.75

Token 934: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.125000953674316
    3. '_t' → logprob: -15.375000953674316
    4. ' _' → logprob: -16.125001907348633
    5. '\' → logprob: -16.625001907348633
    6. '_hit' → logprob: -17.750001907348633
    7. 'to' → logprob: -18.125001907348633
    8. '__' → logprob: -18.375001907348633
    9. '._' → logprob: -18.625001907348633
    10. '_dist' → logprob: -18.875001907348633

Token 935: '_hit' (ID: 91390)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.3871473968029022
    2. '_hit' → logprob: -1.1371474266052246
    3. 'ist' → logprob: -9.387146949768066
    4. 'hat' → logprob: -9.637146949768066
    5. 'h' → logprob: -11.012146949768066
    6. '_h' → logprob: -11.262146949768066
    7. 'Hit' → logprob: -11.387146949768066
    8. 'hi' → logprob: -11.762146949768066
    9. 'ha' → logprob: -12.012146949768066
    10. 'dist' → logprob: -12.137146949768066

Token 936: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013687161728739738
    2. '        
' → logprob: -5.1386871337890625
    3. '\n' → logprob: -5.7636871337890625
    4. '
' → logprob: -6.8886871337890625
    5. '<|end|>' → logprob: -7.0136871337890625
    6. ')' → logprob: -7.3886871337890625
    7. '        ' → logprob: -8.013687133789062
    8. '' → logprob: -8.638687133789062
    9. '.' → logprob: -8.638687133789062
    10. '   ' → logprob: -8.763687133789062

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005687614902853966
    2. '        
' → logprob: -5.755687713623047
    3. '#' → logprob: -6.755687713623047
    4. '
' → logprob: -7.130687713623047
    5. '```' → logprob: -9.255687713623047
    6. 'else' → logprob: -9.380687713623047
    7. '' → logprob: -9.630687713623047
    8. '   ' → logprob: -9.880687713623047
    9. '\n' → logprob: -10.130687713623047
    10. 'v' → logprob: -10.505687713623047

Token 938: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11781968176364899
    2. 'a' → logprob: -2.7428197860717773
    3. '       ' → logprob: -3.4928197860717773
    4. '   ' → logprob: -4.242819786071777
    5. 'A' → logprob: -6.492819786071777
    6. '#a' → logprob: -8.867819786071777
    7. '```' → logprob: -9.367819786071777
    8. 'delta' → logprob: -9.867819786071777
    9. 'r' → logprob: -10.367819786071777
    10. 't' → logprob: -10.492819786071777

Token 939: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48279869556427
    2. 'a' → logprob: -0.98279869556427
    3. 'A' → logprob: -5.1077985763549805
    4. 'delta' → logprob: -6.7327985763549805
    5. '   ' → logprob: -7.2327985763549805
    6. 'dx' → logprob: -7.9827985763549805
    7. 'import' → logprob: -10.10779857635498
    8. 'disc' → logprob: -10.10779857635498
    9. 'r' → logprob: -10.23279857635498
    10. '#a' → logprob: -10.35779857635498

Token 940: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5404848456382751
    2. 'a' → logprob: -0.9154848456382751
    3. 'A' → logprob: -4.16548490524292
    4. 'dx' → logprob: -6.91548490524292
    5. 'delta' → logprob: -7.79048490524292
    6. '#a' → logprob: -9.665484428405762
    7. 'ax' → logprob: -9.790484428405762
    8. 'vx' → logprob: -10.040484428405762
    9. '   ' → logprob: -10.915484428405762
    10. 'c' → logprob: -12.040484428405762

Token 941: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006268949946388602
    2. '#' → logprob: -7.750627040863037
    3. '   ' → logprob: -8.875626564025879
    4. ')#' → logprob: -11.000626564025879
    5. '       ' → logprob: -11.375626564025879
    6. ')
' → logprob: -11.750626564025879
    7. ' )' → logprob: -11.750626564025879
    8. ' #' → logprob: -12.375626564025879
    9. ':' → logprob: -13.500626564025879
    10. '    ' → logprob: -13.750626564025879

Token 942: ' Sinon' (ID: 154924)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04485908895730972
    2. 'a' → logprob: -3.1698591709136963
    3. 'A' → logprob: -7.044858932495117
    4. 'On' → logprob: -7.919858932495117
    5. 'vx' → logprob: -8.544858932495117
    6. ' #' → logprob: -8.919858932495117
    7. '#a' → logprob: -9.669858932495117
    8. 'dx' → logprob: -9.794858932495117
    9. '   ' → logprob: -10.419858932495117
    10. 'ax' → logprob: -10.669858932495117

Token 943: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0775579884648323
    2. '       ' → logprob: -3.7025580406188965
    3. '   ' → logprob: -3.7025580406188965
    4. 'a' → logprob: -4.0775580406188965
    5. 'A' → logprob: -4.9525580406188965
    6. ' #' → logprob: -8.327557563781738
    7. '
' → logprob: -8.452557563781738
    8. '#a' → logprob: -8.577557563781738
    9. 'dx' → logprob: -8.827557563781738
    10. ' a' → logprob: -9.452557563781738

Token 944: ' chercher' (ID: 79602)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.021606190130114555
    2. 'a' → logprob: -4.021605968475342
    3. 'A' → logprob: -6.021605968475342
    4. '   ' → logprob: -7.521605968475342
    5. ' #' → logprob: -8.6466064453125
    6. '#a' → logprob: -9.1466064453125
    7. 'On' → logprob: -9.6466064453125
    8. '       ' → logprob: -10.6466064453125
    9. 'vx' → logprob: -11.2716064453125
    10. 'dx' → logprob: -11.3966064453125

Token 945: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14520300924777985
    2. 'les' → logprob: -2.520203113555908
    3. 'a' → logprob: -3.395203113555908
    4. '#' → logprob: -4.645203113555908
    5. 'le' → logprob: -5.145203113555908
    6. 't' → logprob: -6.395203113555908
    7. 'la' → logprob: -6.770203113555908
    8. 'inter' → logprob: -7.145203113555908
    9. 'A' → logprob: -7.645203113555908
    10. ' l' → logprob: -7.770203113555908

Token 946: ' temps' (ID: 11160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15269878506660461
    2. '#' → logprob: -2.0276987552642822
    3. 'b' → logprob: -5.902698993682861
    4. 'A' → logprob: -6.027698993682861
    5. 't' → logprob: -6.027698993682861
    6. 'delta' → logprob: -7.527698993682861
    7. 'c' → logprob: -8.402698516845703
    8. 'coeff' → logprob: -8.402698516845703
    9. 'dx' → logprob: -8.902698516845703
    10. 'abc' → logprob: -8.902698516845703

Token 947: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5409336686134338
    2. 'a' → logprob: -1.040933609008789
    3. 'd' → logprob: -3.665933609008789
    4. '_a' → logprob: -4.540933609008789
    5. 'au' → logprob: -5.040933609008789
    6. 'quadr' → logprob: -5.040933609008789
    7. '   ' → logprob: -5.165933609008789
    8. 'dis' → logprob: -6.165933609008789
    9. ' t' → logprob: -6.915933609008789
    10. 'de' → logprob: -6.915933609008789

Token 948: '_inter' (ID: 16818)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17207826673984528
    2. '=' → logprob: -2.9220783710479736
    3. '_a' → logprob: -3.1720783710479736
    4. ' =' → logprob: -4.1720781326293945
    5. '#' → logprob: -4.5470781326293945
    6. 's' → logprob: -4.7970781326293945
    7. 'A' → logprob: -5.0470781326293945
    8. 'c' → logprob: -5.0470781326293945
    9. 'coeff' → logprob: -5.7970781326293945
    10. 'quadr' → logprob: -6.6720781326293945

Token 949: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.28090229630470276
    2. 'section' → logprob: -2.15590238571167
    3. 't' → logprob: -3.03090238571167
    4. 'val' → logprob: -3.65590238571167
    5. '_' → logprob: -3.78090238571167
    6. '_val' → logprob: -4.65590238571167
    7. '_inter' → logprob: -5.28090238571167
    8. 's' → logprob: -5.40590238571167
    9. 'sec' → logprob: -5.65590238571167
    10. '_t' → logprob: -6.65590238571167

Token 950: ' où' (ID: 15113)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.745124340057373
    2. '=' → logprob: -1.120124340057373
    3. ' =' → logprob: -2.370124340057373
    4. '_squared' → logprob: -3.995124340057373
    5. 's' → logprob: -4.370124340057373
    6. '   ' → logprob: -4.995124340057373
    7. 'coeff' → logprob: -5.120124340057373
    8. 'a' → logprob: -5.120124340057373
    9. '_a' → logprob: -5.245124340057373
    10. '#' → logprob: -5.370124340057373

Token 951: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.521061897277832
    2. '(pos' → logprob: -1.521061897277832
    3. 'vel' → logprob: -3.021061897277832
    4. '#' → logprob: -3.146061897277832
    5. 'on' → logprob: -3.396061897277832
    6. 'le' → logprob: -4.021061897277832
    7. 'la' → logprob: -4.271061897277832
    8. 'l' → logprob: -4.521061897277832
    9. '(' → logprob: -5.271061897277832
    10. '(v' → logprob: -6.771061897277832

Token 952: ' traject' (ID: 81313)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06201719865202904
    2. 'a' → logprob: -3.4370172023773193
    3. 'pos' → logprob: -4.06201696395874
    4. 'ax' → logprob: -6.06201696395874
    5. 'vel' → logprob: -6.31201696395874
    6. 'vx' → logprob: -6.43701696395874
    7. 'px' → logprob: -6.56201696395874
    8. '#a' → logprob: -7.56201696395874
    9. 'b' → logprob: -7.93701696395874
    10. 'c' → logprob: -8.187017440795898

Token 953: 'oire' (ID: 31141)
  Prédit: 'oire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.6932406425476074
    2. 'orie' → logprob: -1.5682406425476074
    3. 'ée' → logprob: -2.8182406425476074
    4. 'ect' → logprob: -3.0682406425476074
    5. 'o' → logprob: -3.4432406425476074
    6. 'ory' → logprob: -3.8182406425476074
    7. 'atoire' → logprob: -3.9432406425476074
    8. 'or' → logprob: -3.9432406425476074
    9. 'ject' → logprob: -4.318240642547607
    10. '##' → logprob: -4.443240642547607

Token 954: ' touche' (ID: 77303)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.008577339351177216
    2. ' intersects' → logprob: -5.383577346801758
    3. ' intersect' → logprob: -6.883577346801758
    4. 'entre' → logprob: -7.383577346801758
    5. '#' → logprob: -8.258577346801758
    6. 't' → logprob: -8.383577346801758
    7. 'hits' → logprob: -8.633577346801758
    8. 'continue' → logprob: -9.008577346801758
    9. 'intersection' → logprob: -9.133577346801758
    10. 'va' → logprob: -9.258577346801758

Token 955: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03236430138349533
    2. ' le' → logprob: -3.7823643684387207
    3. 'l' → logprob: -5.657364368438721
    4. 'la' → logprob: -6.157364368438721
    5. 'the' → logprob: -6.532364368438721
    6. '   ' → logprob: -6.907364368438721
    7. '#' → logprob: -8.032363891601562
    8. 'un' → logprob: -8.782363891601562
    9. 'les' → logprob: -9.407363891601562
    10. 'a' → logprob: -9.532363891601562

Token 956: ' cercle' (ID: 172399)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.008075481280684471
    2. 'c' → logprob: -5.008075714111328
    3. ' mur' → logprob: -7.008075714111328
    4. 'm' → logprob: -8.883075714111328
    5. 'circle' → logprob: -8.883075714111328
    6. ' cercle' → logprob: -9.883075714111328
    7. 'R' → logprob: -10.008075714111328
    8. 'cer' → logprob: -10.633075714111328
    9. 'wall' → logprob: -11.133075714111328
    10. 'circ' → logprob: -12.258075714111328

Token 957: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19099000096321106
    2. '       ' → logprob: -2.3159899711608887
    3. 'A' → logprob: -3.1909899711608887
    4. '=' → logprob: -3.6909899711608887
    5. '#' → logprob: -6.315989971160889
    6. 'import' → logprob: -6.440989971160889
    7. ' a' → logprob: -6.690989971160889
    8. ' =' → logprob: -7.065989971160889
    9. '_a' → logprob: -7.440989971160889
    10. '   ' → logprob: -7.815989971160889

Token 958: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.07085994631052017
    2. 'radius' → logprob: -2.695859909057617
    3. 'centre' → logprob: -7.945859909057617
    4. 'R' → logprob: -8.695859909057617
    5. 'r' → logprob: -9.445859909057617
    6. 'ra' → logprob: -9.820859909057617
    7. 'center' → logprob: -9.945859909057617
    8. 'Ray' → logprob: -10.070859909057617
    9. '```' → logprob: -10.570859909057617
    10. 'pos' → logprob: -10.695859909057617

Token 959: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08196708559989929
    2. '1' → logprob: -2.5819671154022217
    3. ' R' → logprob: -5.831966876983643
    4. ' ' → logprob: -8.9569673538208
    5. '   ' → logprob: -12.0819673538208
    6. '```' → logprob: -13.5819673538208
    7. '	R' → logprob: -13.7069673538208
    8. 'r' → logprob: -13.9569673538208
    9. '=' → logprob: -14.0819673538208
    10. '0' → logprob: -15.2069673538208

Token 960: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053537286818027496
    2. 'import' → logprob: -3.178537368774414
    3. 'a' → logprob: -5.553537368774414
    4. '=' → logprob: -6.803537368774414
    5. 'A' → logprob: -6.803537368774414
    6. ':' → logprob: -7.053537368774414
    7. 'v' → logprob: -7.303537368774414
    8. '(' → logprob: -7.428537368774414
    9. '#' → logprob: -7.678537368774414
    10. '   ' → logprob: -7.803537368774414

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020780686289072037
    2. 'R' → logprob: -3.8957808017730713
    3. ' ' → logprob: -8.895780563354492
    4. ' R' → logprob: -9.270780563354492
    5. '```' → logprob: -13.020780563354492
    6. 'r' → logprob: -13.145780563354492
    7. '   ' → logprob: -13.395780563354492
    8. '0' → logprob: -15.083280563354492
    9. '  ' → logprob: -15.333280563354492
    10. '`' → logprob: -15.645780563354492

Token 962: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2505881190299988
    2. 'a' → logprob: -1.8755881786346436
    3. 'A' → logprob: -3.0005881786346436
    4. 'import' → logprob: -5.5005879402160645
    5. '#' → logprob: -5.8755879402160645
    6. 'v' → logprob: -6.1255879402160645
    7. '=' → logprob: -6.1255879402160645
    8. '```' → logprob: -6.2505879402160645
    9. '   ' → logprob: -6.5005879402160645
    10. ':' → logprob: -7.5005879402160645

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005457649822346866
    2. 'A' → logprob: -9.125545501708984
    3. 'import' → logprob: -9.875545501708984
    4. '#' → logprob: -9.875545501708984
    5. '
' → logprob: -10.000545501708984
    6. '```' → logprob: -10.000545501708984
    7. '   ' → logprob: -10.375545501708984
    8. '        
' → logprob: -10.625545501708984
    9. 'a' → logprob: -10.750545501708984
    10. ',' → logprob: -11.000545501708984

Token 964: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01891607604920864
    2. 'A' → logprob: -4.143916130065918
    3. '#' (adapté à ' #') → logprob: -6.393916130065918
    4. '   ' → logprob: -6.768916130065918
    5. ' a' → logprob: -10.768916130065918
    6. 'ax' → logprob: -11.393916130065918
    7. 'delta' → logprob: -12.143916130065918
    8. 'vx' → logprob: -12.643916130065918
    9. 'px' → logprob: -12.768916130065918
    10. '#a' → logprob: -12.893916130065918

Token 965: ' pos' (ID: 1253)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016481801867485046
    2. 'A' → logprob: -4.266481876373291
    3. '#' → logprob: -6.141481876373291
    4. 'delta' → logprob: -9.641481399536133
    5. '   ' → logprob: -10.141481399536133
    6. ' a' → logprob: -10.641481399536133
    7. 'vx' → logprob: -11.391481399536133
    8. 'v' → logprob: -12.391481399536133
    9. '#a' → logprob: -12.766481399536133
    10. 'dx' → logprob: -13.016481399536133

Token 966: '=(' (ID: 9893)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6018630862236023
    2. '_x' → logprob: -0.8518630862236023
    3. ' =' → logprob: -4.976862907409668
    4. '=' → logprob: -5.851862907409668
    5. '_rel' → logprob: -6.351862907409668
    6. '_to' → logprob: -6.351862907409668
    7. '2' → logprob: -6.726862907409668
    8. '_offset' → logprob: -6.851862907409668
    9. '_vec' → logprob: -6.976862907409668
    10. '0' → logprob: -6.976862907409668

Token 967: 'px' (ID: 3207)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6337514519691467
    2. 'px' → logprob: -0.7587514519691467
    3. '(px' → logprob: -7.133751392364502
    4. ' px' → logprob: -8.88375186920166
    5. '(pos' → logprob: -9.25875186920166
    6. ' pos' → logprob: -10.38375186920166
    7. '0' → logprob: -10.50875186920166
    8. '(' → logprob: -10.63375186920166
    9. '   ' → logprob: -11.38375186920166
    10. 'py' → logprob: -12.50875186920166

Token 968: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004857266612816602
    2. '0' → logprob: -8.00048542022705
    3. '[' → logprob: -9.37548542022705
    4. ' ,' → logprob: -10.00048542022705
    5. ',pos' → logprob: -11.62548542022705
    6. '```' → logprob: -12.25048542022705
    7. 'pos' → logprob: -13.50048542022705
    8. ',v' → logprob: -13.50048542022705
    9. '),' → logprob: -14.25048542022705
    10. '+' → logprob: -14.37548542022705

Token 969: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.3542110025882721
    2. 'pos' → logprob: -1.6042109727859497
    3. 'px' → logprob: -2.3542110919952393
    4. '0' → logprob: -7.35421085357666
    5. ' py' → logprob: -7.85421085357666
    6. 'vel' → logprob: -7.97921085357666
    7. 'vy' → logprob: -8.10421085357666
    8. 'vx' → logprob: -8.10421085357666
    9. ' px' → logprob: -9.22921085357666
    10. ' pos' → logprob: -9.35421085357666

Token 970: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2619583010673523
    2. ')' → logprob: -2.386958360671997
    3. '   ' → logprob: -3.011958360671997
    4. '
' → logprob: -3.011958360671997
    5. 'x' → logprob: -3.761958360671997
    6. '),' → logprob: -5.261958122253418
    7. ',' → logprob: -5.511958122253418
    8. '       ' → logprob: -5.886958122253418
    9. '[' → logprob: -7.136958122253418
    10. 't' → logprob: -7.136958122253418

Token 971: ' vel' (ID: 7326)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.48550164699554443
    2. 'vel' → logprob: -1.1105016469955444
    3. '#' → logprob: -3.860501766204834
    4. 'a' → logprob: -3.985501766204834
    5. 'A' → logprob: -4.485501766204834
    6. '   ' → logprob: -6.860501766204834
    7. 'v' → logprob: -6.985501766204834
    8. ' vx' → logprob: -7.485501766204834
    9. 'dx' → logprob: -7.735501766204834
    10. 'px' → logprob: -7.985501766204834

Token 972: '=(' (ID: 9893)
  Prédit: '=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.7292400598526001
    2. '=' → logprob: -0.9792400598526001
    3. ' =' → logprob: -2.1042399406433105
    4. 'x' → logprob: -4.3542399406433105
    5. '[' → logprob: -5.4792399406433105
    6. '_x' → logprob: -6.9792399406433105
    7. '=[' → logprob: -7.4792399406433105
    8. 't' → logprob: -8.104240417480469
    9. '(' → logprob: -8.229240417480469
    10. 'v' → logprob: -8.479240417480469

Token 973: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00012570773833431304
    2. ' vx' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.500125885009766
    4. '(v' → logprob: -15.125125885009766
    5. '0' → logprob: -15.750125885009766
    6. ' ' → logprob: -16.500125885009766
    7. '
' → logprob: -17.000125885009766
    8. '(' → logprob: -17.125125885009766
    9. '```' → logprob: -17.125125885009766
    10. '    
' → logprob: -17.375125885009766

Token 974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.4192871175473556e-05
    2. ' ,' → logprob: -10.375054359436035
    3. ',v' → logprob: -11.125054359436035
    4. '```' → logprob: -12.750054359436035
    5. '[' → logprob: -13.625054359436035
    6. 'vy' → logprob: -13.875054359436035
    7. ',
' → logprob: -14.000054359436035
    8. 'v' → logprob: -14.500054359436035
    9. '_,' → logprob: -14.875054359436035
    10. '),' → logprob: -15.125054359436035

Token 975: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00011117222311440855
    2. ' vy' → logprob: -9.12511157989502
    3. 'wy' → logprob: -13.25011157989502
    4. 'py' → logprob: -15.87511157989502
    5. ',' → logprob: -16.500110626220703
    6. '   ' → logprob: -17.750110626220703
    7. '```' → logprob: -17.750110626220703
    8. '
' → logprob: -17.875110626220703
    9. 'Vy' → logprob: -17.875110626220703
    10. ' ' → logprob: -17.875110626220703

Token 976: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3376169502735138
    2. ')' → logprob: -1.3376169204711914
    3. '   ' → logprob: -4.212616920471191
    4. ')

' → logprob: -5.212616920471191
    5. 't' → logprob: -6.962616920471191
    6. ')
' → logprob: -7.212616920471191
    7. '),' → logprob: -7.587616920471191
    8. '#' → logprob: -7.962616920471191
    9. '       ' → logprob: -8.212616920471191
    10. '
' → logprob: -8.337616920471191

Token 977: ' R' (ID: 460)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7356085181236267
    2. 'a' → logprob: -0.7356085181236267
    3. 'A' → logprob: -3.2356085777282715
    4. '   ' → logprob: -6.9856085777282715
    5. '#a' → logprob: -7.7356085777282715
    6. '
' → logprob: -8.985608100891113
    7. 'On' → logprob: -8.985608100891113
    8. 't' → logprob: -9.110608100891113
    9. 'ax' → logprob: -9.485608100891113
    10. ' a' → logprob: -9.860608100891113

Token 978: '=' (ID: 28)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5239383578300476
    2. '=' → logprob: -1.5239384174346924
    3. ' =' → logprob: -2.3989384174346924
    4. '_squared' → logprob: -2.8989384174346924
    5. '**' → logprob: -3.7739384174346924
    6. '[' → logprob: -5.023938179016113
    7. 'x' → logprob: -5.898938179016113
    8. '_sq' → logprob: -6.148938179016113
    9. 'coeff' → logprob: -6.523938179016113
    10. '=(' → logprob: -6.648938179016113

Token 979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018175341188907623
    2. 'R' → logprob: -4.01817512512207
    3. ' ' → logprob: -10.89317512512207
    4. ' R' → logprob: -12.14317512512207
    5. '```' → logprob: -14.26817512512207
    6. '   ' → logprob: -14.89317512512207
    7. '(' → logprob: -16.76817512512207
    8. '	R' → logprob: -17.01817512512207
    9. '
' → logprob: -17.08067512512207
    10. '``' → logprob: -17.14317512512207

Token 980: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23172879219055176
    2. 'A' → logprob: -2.2317287921905518
    3. '
' → logprob: -2.8567287921905518
    4. 'a' → logprob: -3.3567287921905518
    5. 'import' → logprob: -5.606728553771973
    6. '#' → logprob: -6.981728553771973
    7. '    
' → logprob: -7.481728553771973
    8. '       ' → logprob: -7.731728553771973
    9. ' A' → logprob: -8.231728553771973
    10. ' a' → logprob: -8.231728553771973

Token 981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5590141415596008
    2. 'a' → logprob: -1.559014081954956
    3. '   ' → logprob: -1.934014081954956
    4. 'A' → logprob: -2.934014081954956
    5. '#' → logprob: -5.309014320373535
    6. 'import' → logprob: -5.434014320373535
    7. '```' → logprob: -5.684014320373535
    8. '
' → logprob: -5.809014320373535
    9. ' a' → logprob: -6.809014320373535
    10. ' discrimin' → logprob: -8.184014320373535

Token 982: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07010727375745773
    2. 'A' → logprob: -2.8201072216033936
    3. '   ' → logprob: -5.445107460021973
    4. '       ' → logprob: -6.070107460021973
    5. '#' (adapté à ' #') → logprob: -6.945107460021973
    6. ' a' → logprob: -7.820107460021973
    7. '
' → logprob: -9.820107460021973
    8. ' A' → logprob: -10.820107460021973
    9. 'ax' → logprob: -12.070107460021973
    10. '#a' → logprob: -12.070107460021973

Token 983: ' ||' (ID: 2398)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005589583422988653
    2. 'A' → logprob: -5.630589485168457
    3. '#' → logprob: -6.255589485168457
    4. '   ' → logprob: -9.880589485168457
    5. ' a' → logprob: -11.755589485168457
    6. '#a' → logprob: -13.255589485168457
    7. '	a' → logprob: -13.630589485168457
    8. 'ax' → logprob: -13.755589485168457
    9. '
' → logprob: -14.005589485168457
    10. 'delta' → logprob: -14.130589485168457

Token 984: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6228680610656738
    2. 'px' → logprob: -0.9978680610656738
    3. '(px' → logprob: -2.872868061065674
    4. '(pos' → logprob: -4.122868061065674
    5. 'vel' → logprob: -4.372868061065674
    6. 'vx' → logprob: -4.872868061065674
    7. ' pos' → logprob: -7.497868061065674
    8. ' px' → logprob: -7.497868061065674
    9. '(' → logprob: -8.497867584228516
    10. '(v' → logprob: -9.372867584228516

Token 985: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869442045688629
    2. ' +' → logprob: -1.1369441747665405
    3. '```' → logprob: -11.761943817138672
    4. '
' → logprob: -11.886943817138672
    5. '+t' → logprob: -12.011943817138672
    6. '**' → logprob: -12.011943817138672
    7. '+
' → logprob: -12.136943817138672
    8. '[' → logprob: -12.136943817138672
    9. '+(' → logprob: -12.511943817138672
    10. 'plus' → logprob: -12.511943817138672

Token 986: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.05900189280509949
    2. '(' → logprob: -2.934001922607422
    3. '(t' → logprob: -6.059001922607422
    4. 't' → logprob: -7.059001922607422
    5. ' (' → logprob: -8.184001922607422
    6. '(v' → logprob: -8.559001922607422
    7. ' vel' → logprob: -9.184001922607422
    8. 'tuple' → logprob: -9.684001922607422
    9. 'vx' → logprob: -10.059001922607422
    10. 'v' → logprob: -10.434001922607422

Token 987: ' t' (ID: 260)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7275688648223877
    2. '*t' → logprob: -0.8525688648223877
    3. 't' → logprob: -2.7275688648223877
    4. '*' → logprob: -3.8525688648223877
    5. ' *' → logprob: -6.727568626403809
    6. '*(' → logprob: -7.727568626403809
    7. '   ' → logprob: -7.727568626403809
    8. '```' → logprob: -7.852568626403809
    9. '||' → logprob: -7.977568626403809
    10. '
' → logprob: -8.477568626403809

Token 988: '||' (ID: 12439)
  Prédit: '||'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '||' → logprob: -0.003347159130498767
    2. '[' → logprob: -6.128347396850586
    3. '*' → logprob: -7.628347396850586
    4. '**' → logprob: -7.878347396850586
    5. ' ||' → logprob: -9.003347396850586
    6. '2' → logprob: -10.253347396850586
    7. ')**' → logprob: -10.753347396850586
    8. '||(' → logprob: -11.003347396850586
    9. ')||' → logprob: -11.128347396850586
    10. '```' → logprob: -11.253347396850586

Token 989: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0037067276425659657
    2. '*' → logprob: -5.628706932067871
    3. '*t' → logprob: -9.628706932067871
    4. '2' → logprob: -10.628706932067871
    5. '*v' → logprob: -11.878706932067871
    6. 't' → logprob: -12.628706932067871
    7. '```' → logprob: -12.628706932067871
    8. '[' → logprob: -14.128706932067871
    9. '***' → logprob: -14.753706932067871
    10. ')**' → logprob: -15.003706932067871

Token 990: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -11.125020027160645
    3. '**' → logprob: -13.250020027160645
    4. '²' → logprob: -13.625020027160645
    5. '
' → logprob: -14.125020027160645
    6. '(' → logprob: -14.250020027160645
    7. '```' → logprob: -14.875020027160645
    8. ')' → logprob: -15.125020027160645
    9. '=' → logprob: -16.25002098083496
    10. '^' → logprob: -16.25002098083496

Token 991: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5258893966674805
    2. '=' → logprob: -0.9008893966674805
    3. ' ==' → logprob: -6.9008893966674805
    4. ' -' → logprob: -7.7758893966674805
    5. ' >=' → logprob: -8.02588939666748
    6. ' <=' → logprob: -8.02588939666748
    7. '==' → logprob: -9.02588939666748
    8. '>=' → logprob: -9.02588939666748
    9. '0' → logprob: -9.52588939666748
    10. '-' → logprob: -9.52588939666748

Token 992: ' R' (ID: 460)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.2073286920785904
    2. '1' → logprob: -1.8323286771774292
    3. 'R' → logprob: -4.332328796386719
    4. '(pos' → logprob: -4.582328796386719
    5. 'px' → logprob: -6.582328796386719
    6. ' (' → logprob: -6.582328796386719
    7. 'pos' → logprob: -7.457328796386719
    8. ' ' → logprob: -8.957328796386719
    9. '(x' → logprob: -9.207328796386719
    10. '(' → logprob: -9.457328796386719

Token 993: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0534106120467186
    2. '**' → logprob: -3.178410530090332
    3. ' ' → logprob: -5.428410530090332
    4. '=' → logprob: -6.178410530090332
    5. '(' → logprob: -7.178410530090332
    6. '²' → logprob: -7.428410530090332
    7. '
' → logprob: -7.553410530090332
    8. ' =' → logprob: -7.928410530090332
    9. '[' → logprob: -8.053410530090332
    10. '^' → logprob: -8.428410530090332

Token 994: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.500008583068848
    3. '²' → logprob: -13.000008583068848
    4. '**' → logprob: -14.250008583068848
    5. '```' → logprob: -14.750008583068848
    6. '(' → logprob: -15.000008583068848
    7. '=' → logprob: -15.125008583068848
    8. '^' → logprob: -15.125008583068848
    9. '{' → logprob: -16.375009536743164
    10. '1' → logprob: -16.500009536743164

Token 995: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7719484567642212
    2. '       ' → logprob: -1.2719484567642212
    3. '   ' → logprob: -1.3969484567642212
    4. '\n' → logprob: -5.771948337554932
    5. '
' → logprob: -6.396948337554932
    6. '    
' → logprob: -7.021948337554932
    7. '        
' → logprob: -7.146948337554932
    8. '=' → logprob: -7.396948337554932
    9. '  
' → logprob: -7.896948337554932
    10. '\' → logprob: -8.02194881439209

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8844549655914307
    2. '
' → logprob: -1.5094549655914307
    3. '   ' → logprob: -1.7594549655914307
    4. '\n' → logprob: -1.8844549655914307
    5. '\' → logprob: -5.134454727172852
    6. '        
' → logprob: -5.634454727172852
    7. 'A' → logprob: -5.759454727172852
    8. '    
' → logprob: -5.759454727172852
    9. 't' → logprob: -5.884454727172852
    10. ',
' → logprob: -6.134454727172852

Token 997: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4852007031440735
    2. 'A' → logprob: -1.6102006435394287
    3. 'a' → logprob: -2.3602006435394287
    4. '   ' → logprob: -2.7352006435394287
    5. ' a' → logprob: -4.610200881958008
    6. ' A' → logprob: -4.735200881958008
    7. '
' → logprob: -6.110200881958008
    8. '_a' → logprob: -6.735200881958008
    9. '#' (adapté à ' #') → logprob: -7.610200881958008
    10. '=' → logprob: -7.735200881958008

Token 998: ' Equation' (ID: 180687)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0113572608679533
    2. 'A' → logprob: -4.511357307434082
    3. '   ' → logprob: -8.636357307434082
    4. '#' → logprob: -9.261357307434082
    5. ' a' → logprob: -10.761357307434082
    6. 'import' → logprob: -11.886357307434082
    7. 'ax' → logprob: -13.136357307434082
    8. 'vx' → logprob: -13.886357307434082
    9. '
' → logprob: -14.136357307434082
    10. '       ' → logprob: -14.261357307434082

Token 999: ' quadr' (ID: 39966)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2737474739551544
    2. 'A' → logprob: -2.523747444152832
    3. ' =' → logprob: -3.273747444152832
    4. '_a' → logprob: -3.273747444152832
    5. '=' → logprob: -3.398747444152832
    6. ' a' → logprob: -3.898747444152832
    7. ':' → logprob: -4.148747444152832
    8. '   ' → logprob: -5.773747444152832
    9. 'coeff' → logprob: -6.148747444152832
    10. 't' → logprob: -6.273747444152832

Token 1000: 'atique' (ID: 20798)
  Prédit: 'atique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atique' → logprob: -0.009831411764025688
    2. 'atic' → logprob: -4.634831428527832
    3. '(t' → logprob: -10.759831428527832
    4. 'atiques' → logprob: -10.884831428527832
    5. 'at' → logprob: -11.509831428527832
    6. '   ' → logprob: -12.259831428527832
    7. '=' → logprob: -13.134831428527832
    8. 'ática' → logprob: -13.384831428527832
    9. 'à' → logprob: -13.384831428527832
    10. 'ati' → logprob: -13.509831428527832

Token 1001: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7828367948532104
    2. 'a' → logprob: -1.5328367948532104
    3. ' =' → logprob: -1.7828367948532104
    4. ' a' → logprob: -2.6578369140625
    5. '   ' → logprob: -3.6578369140625
    6. '=' → logprob: -3.9078369140625
    7. ' :' → logprob: -4.0328369140625
    8. ',' → logprob: -4.9078369140625
    9. '       ' → logprob: -5.7828369140625
    10. ' t' → logprob: -6.0328369140625

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4924600422382355
    2. 'A' → logprob: -1.617460012435913
    3. ' A' → logprob: -2.492460012435913
    4. 'a' → logprob: -2.867460012435913
    5. ' a' → logprob: -3.617460012435913
    6. '   ' → logprob: -3.867460012435913
    7. '
' → logprob: -7.242460250854492
    8. 'import' → logprob: -8.242460250854492
    9. '        
' → logprob: -8.617460250854492
    10. '\' → logprob: -8.867460250854492

Token 1003: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009486420080065727
    2. 'A' → logprob: -4.884486198425293
    3. '   ' → logprob: -6.759486198425293
    4. ' a' → logprob: -7.259486198425293
    5. '       ' → logprob: -12.259486198425293
    6. ' A' → logprob: -12.259486198425293
    7. '	a' → logprob: -13.384486198425293
    8. 'ax' → logprob: -14.009486198425293
    9. '_a' → logprob: -14.759486198425293
    10. 'vx' → logprob: -14.884486198425293

Token 1004: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19908294081687927
    2. 'A' → logprob: -2.074082851409912
    3. 'vx' → logprob: -3.074082851409912
    4. 'vel' → logprob: -5.699082851409912
    5. '(v' → logprob: -6.699082851409912
    6. 'v' → logprob: -6.699082851409912
    7. ' a' → logprob: -7.449082851409912
    8. ' vx' → logprob: -7.824082851409912
    9. '(a' → logprob: -7.949082851409912
    10. '   ' → logprob: -8.07408332824707

Token 1005: 'px' (ID: 3207)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.012788857333362103
    2. 'vel' → logprob: -4.387788772583008
    3. ' vx' → logprob: -8.387788772583008
    4. '   ' → logprob: -11.137788772583008
    5. '(v' → logprob: -11.387788772583008
    6. 'v' → logprob: -11.637788772583008
    7. 'vy' → logprob: -11.762788772583008
    8. ' vel' → logprob: -12.762788772583008
    9. 'velocity' → logprob: -13.887788772583008
    10. '```' → logprob: -14.012788772583008

Token 1006: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07089781761169434
    2. '**' → logprob: -2.6958978176116943
    3. ')**' → logprob: -7.695898056030273
    4. '*v' → logprob: -7.820898056030273
    5. '[' → logprob: -10.695898056030273
    6. '*p' → logprob: -10.945898056030273
    7. ')*' → logprob: -10.945898056030273
    8. '```' → logprob: -11.570898056030273
    9. '*x' → logprob: -11.695898056030273
    10. ')' → logprob: -11.945898056030273

Token 1007: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.0061810677871108055
    2. '2' → logprob: -5.131181240081787
    3. ' vx' → logprob: -9.131180763244629
    4. 'vel' → logprob: -9.631180763244629
    5. 'vy' → logprob: -10.006180763244629
    6. '   ' → logprob: -11.506180763244629
    7. '
' → logprob: -12.506180763244629
    8. 't' → logprob: -12.756180763244629
    9. 'v' → logprob: -13.006180763244629
    10. '(' → logprob: -13.131180763244629

Token 1008: ' t' (ID: 260)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9403323531150818
    2. ')**' → logprob: -0.9403323531150818
    3. '*t' → logprob: -1.5653324127197266
    4. '**' → logprob: -5.815332412719727
    5. ')' → logprob: -6.065332412719727
    6. ')*' → logprob: -6.190332412719727
    7. 't' → logprob: -7.065332412719727
    8. '```' → logprob: -7.440332412719727
    9. '*v' → logprob: -7.815332412719727
    10. '*u' → logprob: -8.190332412719727

Token 1009: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0025044360663741827
    2. ')' → logprob: -6.002504348754883
    3. ')*(' → logprob: -11.252504348754883
    4. ')*' → logprob: -12.127504348754883
    5. ')^' → logprob: -12.377504348754883
    6. '**' → logprob: -12.627504348754883
    7. ' )' → logprob: -13.627504348754883
    8. '*' → logprob: -14.377504348754883
    9. '[' → logprob: -14.627504348754883
    10. '*)' → logprob: -15.252504348754883

Token 1010: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.750006675720215
    3. '```' → logprob: -13.625006675720215
    4. '20' → logprob: -14.250006675720215
    5. '
' → logprob: -14.875006675720215
    6. '**' → logprob: -14.875006675720215
    7. '۲' → logprob: -14.875006675720215
    8. '(' → logprob: -15.250006675720215
    9. '²' → logprob: -15.875006675720215
    10. '[' → logprob: -16.12500762939453

Token 1011: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38689208030700684
    2. '+' → logprob: -1.1368920803070068
    3. '<|end|>' → logprob: -12.136892318725586
    4. ' +
' → logprob: -12.261892318725586
    5. ')' → logprob: -12.636892318725586
    6. '   ' → logprob: -13.511892318725586
    7. '+
' → logprob: -13.761892318725586
    8. '=' → logprob: -14.386892318725586
    9. ',' → logprob: -14.386892318725586
    10. '<|end|>' → logprob: -14.636892318725586

Token 1012: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.20166710019111633
    2. '(py' → logprob: -1.701667070388794
    3. '(' → logprob: -8.451666831970215
    4. ' (' → logprob: -11.076666831970215
    5. '(Py' → logprob: -11.826666831970215
    6. '(px' → logprob: -12.451666831970215
    7. '2' → logprob: -12.451666831970215
    8. '(p' → logprob: -13.076666831970215
    9. '(vc' → logprob: -13.326666831970215
    10. 'vy' → logprob: -13.326666831970215

Token 1013: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00862426683306694
    2. '(py' → logprob: -4.758624076843262
    3. ' py' → logprob: -11.758624076843262
    4. '_py' → logprob: -13.633624076843262
    5. '.py' → logprob: -14.258624076843262
    6. 'vy' → logprob: -16.883625030517578
    7. '(' → logprob: -17.883625030517578
    8. 'Py' → logprob: -18.258625030517578
    9. 'px' → logprob: -19.383625030517578
    10. '
' → logprob: -19.508625030517578

Token 1014: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03708358481526375
    2. '+' → logprob: -3.912083625793457
    3. '*' → logprob: -4.287083625793457
    4. ' *' → logprob: -6.662083625793457
    5. '[' → logprob: -7.162083625793457
    6. '**' → logprob: -8.162083625793457
    7. ')' → logprob: -8.662083625793457
    8. '2' → logprob: -9.662083625793457
    9. '```' → logprob: -11.037083625793457
    10. ' ' → logprob: -11.287083625793457

Token 1015: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.004102977458387613
    2. ' vy' → logprob: -5.504103183746338
    3. '2' → logprob: -11.87910270690918
    4. '(' → logprob: -12.25410270690918
    5. 'wy' → logprob: -12.75410270690918
    6. ' ' → logprob: -12.87910270690918
    7. ' (' → logprob: -13.50410270690918
    8. '(v' → logprob: -13.62910270690918
    9. '   ' → logprob: -13.75410270690918
    10. 'v' → logprob: -13.87910270690918

Token 1016: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18099796772003174
    2. ' t' → logprob: -1.9309979677200317
    3. '*' → logprob: -4.430997848510742
    4. '2' → logprob: -5.055997848510742
    5. ' *' → logprob: -6.805997848510742
    6. '*t' → logprob: -7.180997848510742
    7. ')' → logprob: -8.430997848510742
    8. ' ' → logprob: -9.055997848510742
    9. '**' → logprob: -9.930997848510742
    10. '```' → logprob: -11.680997848510742

Token 1017: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.09213598072528839
    2. ')' → logprob: -2.4671359062194824
    3. ')^' → logprob: -5.967135906219482
    4. '**' → logprob: -8.21713638305664
    5. ')*' → logprob: -8.71713638305664
    6. ' )' → logprob: -9.84213638305664
    7. '*' → logprob: -9.84213638305664
    8. '```' → logprob: -10.46713638305664
    9. '*)' → logprob: -10.59213638305664
    10. '2' → logprob: -10.84213638305664

Token 1018: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.171581091824919e-05
    2. ' ' → logprob: -9.87507152557373
    3. '1' → logprob: -12.00007152557373
    4. '```' → logprob: -12.50007152557373
    5. '(' → logprob: -12.75007152557373
    6. '²' → logprob: -13.87507152557373
    7. '   ' → logprob: -14.25007152557373
    8. '{' → logprob: -14.37507152557373
    9. '[' → logprob: -14.50007152557373
    10. '۲' → logprob: -14.62507152557373

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7573108077049255
    2. ' =' → logprob: -0.7573108077049255
    3. 't' → logprob: -4.00731086730957
    4. ')' → logprob: -4.13231086730957
    5. ' t' → logprob: -5.00731086730957
    6. ' -' → logprob: -5.25731086730957
    7. '-' → logprob: -5.38231086730957
    8. '   ' → logprob: -5.63231086730957
    9. '#' → logprob: -6.25731086730957
    10. '<|end|>' → logprob: -7.00731086730957

Token 1020: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.329167369287461e-05
    2. 'R' → logprob: -9.375093460083008
    3. ' ' → logprob: -11.750093460083008
    4. '```' → logprob: -15.500093460083008
    5. '0' → logprob: -16.000093460083008
    6. '(' → logprob: -16.250093460083008
    7. '`' → logprob: -16.750093460083008
    8. ' R' → logprob: -16.875093460083008
    9. '   ' → logprob: -17.875093460083008
    10. '(R' → logprob: -18.875093460083008

Token 1021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0336519218981266
    2. 'R' → logprob: -3.408651828765869
    3. ' R' → logprob: -12.783652305603027
    4. '(' → logprob: -13.533652305603027
    5. ' ' → logprob: -13.533652305603027
    6. '(R' → logprob: -14.658652305603027
    7. '```' → logprob: -15.658652305603027
    8. '`' → logprob: -16.53365135192871
    9. '   ' → logprob: -17.40865135192871
    10. '``' → logprob: -17.90865135192871

Token 1022: '^' (ID: 61)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7518509030342102
    2. '       ' → logprob: -1.2518508434295654
    3. '\n' → logprob: -1.8768508434295654
    4. '   ' → logprob: -3.2518508434295654
    5. '<|end|>' → logprob: -4.0018510818481445
    6. '=' → logprob: -4.8768510818481445
    7. ')' → logprob: -5.0018510818481445
    8. '\' → logprob: -5.6268510818481445
    9. '<|end|>' → logprob: -6.5018510818481445
    10. '\
' → logprob: -6.7518510818481445

Token 1023: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.500012397766113
    3. '**' → logprob: -14.625012397766113
    4. '²' → logprob: -14.875012397766113
    5. '=' → logprob: -15.375012397766113
    6. '```' → logprob: -15.500012397766113
    7. '0' → logprob: -16.375011444091797
    8. '*' → logprob: -16.812511444091797
    9. '<|end|>' → logprob: -16.875011444091797
    10. '==' → logprob: -17.375011444091797

Token 1024: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7138227820396423
    2. '   ' → logprob: -1.213822841644287
    3. '
' → logprob: -2.213822841644287
    4. '\n' → logprob: -2.588822841644287
    5. 't' → logprob: -5.338822841644287
    6. '\' → logprob: -5.463822841644287
    7. '        
' → logprob: -5.713822841644287
    8. '    
' → logprob: -6.088822841644287
    9. '  
' → logprob: -6.463822841644287
    10. ' =' → logprob: -6.588822841644287

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005609492771327496
    2. '   ' → logprob: -6.005609512329102
    3. '
' → logprob: -6.880609512329102
    4. '\n' → logprob: -7.505609512329102
    5. '        
' → logprob: -7.755609512329102
    6. 'import' → logprob: -8.005609512329102
    7. '#' → logprob: -8.880609512329102
    8. 't' → logprob: -9.630609512329102
    9. '\' → logprob: -9.755609512329102
    10. 'A' → logprob: -10.005609512329102

Token 1026: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6579770445823669
    2. 'A' → logprob: -1.1579771041870117
    3. '       ' → logprob: -1.9079771041870117
    4. '   ' → logprob: -4.657977104187012
    5. ' a' → logprob: -5.157977104187012
    6. ' A' → logprob: -6.407977104187012
    7. 'import' → logprob: -6.657977104187012
    8. '#' (adapté à ' #') → logprob: -8.032977104187012
    9. '_a' → logprob: -8.282977104187012
    10. '
' → logprob: -8.407977104187012

Token 1027: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09272907674312592
    2. 'A' → logprob: -2.592729091644287
    3. '   ' → logprob: -4.342729091644287
    4. '       ' → logprob: -7.842729091644287
    5. ' a' → logprob: -8.217728614807129
    6. '
' → logprob: -10.217728614807129
    7. ' A' → logprob: -10.967728614807129
    8. '#' → logprob: -11.842728614807129
    9. '	a' → logprob: -11.967728614807129
    10. ' ' → logprob: -12.967728614807129

Token 1028: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00029744720086455345
    2. ' vx' → logprob: -8.625297546386719
    3. 'v' → logprob: -9.250297546386719
    4. '(v' → logprob: -11.500297546386719
    5. '2' → logprob: -12.375297546386719
    6. 'vel' → logprob: -12.750297546386719
    7. ')' → logprob: -13.625297546386719
    8. 'vy' → logprob: -14.000297546386719
    9. ')v' → logprob: -14.250297546386719
    10. '   ' → logprob: -14.625297546386719

Token 1029: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.22240696847438812
    2. '*' → logprob: -1.7224069833755493
    3. '*v' → logprob: -4.09740686416626
    4. ')**' → logprob: -6.09740686416626
    5. ' *' → logprob: -6.97240686416626
    6. '[' → logprob: -7.84740686416626
    7. '*t' → logprob: -8.347407341003418
    8. ')' → logprob: -9.222407341003418
    9. ' **' → logprob: -9.222407341003418
    10. '2' → logprob: -10.472407341003418

Token 1030: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.500018119812012
    3. '*' → logprob: -13.125018119812012
    4. '
' → logprob: -13.500018119812012
    5. 'v' → logprob: -13.625018119812012
    6. '```' → logprob: -13.625018119812012
    7. '[' → logprob: -14.375018119812012
    8. '0' → logprob: -14.875018119812012
    9. 'vx' → logprob: -15.500018119812012
    10. '**' → logprob: -15.500018119812012

Token 1031: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13955648243427277
    2. '+' → logprob: -2.889556407928467
    3. ' *' → logprob: -3.639556407928467
    4. ')' → logprob: -4.014556407928467
    5. '*' → logprob: -4.139556407928467
    6. ')*' → logprob: -4.514556407928467
    7. '*v' → logprob: -6.889556407928467
    8. ' )' → logprob: -7.514556407928467
    9. ')*(' → logprob: -7.764556407928467
    10. '*t' → logprob: -7.889556407928467

Token 1032: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -1.676292231422849e-05
    2. ' vy' → logprob: -11.000017166137695
    3. 'Vy' → logprob: -17.750017166137695
    4. '
' → logprob: -18.250017166137695
    5. 'wy' → logprob: -18.750017166137695
    6. 'v' → logprob: -18.875017166137695
    7. '   ' → logprob: -19.000017166137695
    8. 'vx' → logprob: -19.875017166137695
    9. '2' → logprob: -20.000017166137695
    10. ')' → logprob: -20.375017166137695

Token 1033: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05240590125322342
    2. '**' → logprob: -3.677405834197998
    3. '*' → logprob: -4.302405834197998
    4. ')' → logprob: -5.052405834197998
    5. ' ' → logprob: -5.427405834197998
    6. '```' → logprob: -7.552405834197998
    7. '²' → logprob: -7.802405834197998
    8. '^' → logprob: -8.427406311035156
    9. '[' → logprob: -9.177406311035156
    10. ' *' → logprob: -10.552406311035156

Token 1034: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.12500762939453
    4. ')' → logprob: -18.87500762939453
    5. '[' → logprob: -19.00000762939453
    6. '*' → logprob: -19.12500762939453
    7. '(' → logprob: -19.12500762939453
    8. '۲' → logprob: -19.62500762939453
    9. '²' → logprob: -19.87500762939453
    10. '<|end|>' → logprob: -20.00000762939453

Token 1035: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16088810563087463
    2. ')*' → logprob: -1.9108880758285522
    3. ')t' → logprob: -7.410888195037842
    4. ' )' → logprob: -10.660887718200684
    5. ')
' → logprob: -11.035887718200684
    6. '*)' → logprob: -11.660887718200684
    7. '*' → logprob: -12.785887718200684
    8. ')\' → logprob: -13.160887718200684
    9. '   ' → logprob: -13.785887718200684
    10. ')*(' → logprob: -14.410887718200684

Token 1036: ' t' (ID: 260)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.12342527508735657
    2. '*' → logprob: -2.373425245285034
    3. ' *' → logprob: -4.623425483703613
    4. 't' → logprob: -4.748425483703613
    5. ' t' → logprob: -5.998425483703613
    6. ')' → logprob: -6.998425483703613
    7. ')t' → logprob: -7.123425483703613
    8. ')*' → logprob: -8.623425483703613
    9. ',' → logprob: -10.373425483703613
    10. '```' → logprob: -10.748425483703613

Token 1037: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0591222420334816
    2. '2' → logprob: -3.309122323989868
    3. '*' → logprob: -4.309122085571289
    4. ')' → logprob: -5.684122085571289
    5. '^' → logprob: -6.434122085571289
    6. '²' → logprob: -6.684122085571289
    7. ' *' → logprob: -7.809122085571289
    8. ' ' → logprob: -8.934122085571289
    9. ' **' → logprob: -8.934122085571289
    10. '=' → logprob: -9.559122085571289

Token 1038: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '²' → logprob: -14.875007629394531
    4. '   ' → logprob: -17.12500762939453
    5. '```' → logprob: -17.31250762939453
    6. '۲' → logprob: -17.37500762939453
    7. '**' → logprob: -17.50000762939453
    8. '^' → logprob: -17.68750762939453
    9. '{' → logprob: -17.81250762939453
    10. '[' → logprob: -17.81250762939453

Token 1039: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20864742994308472
    2. '+' → logprob: -2.3336474895477295
    3. ' +' → logprob: -2.7086474895477295
    4. '-' → logprob: -3.7086474895477295
    5. ')' → logprob: -8.958647727966309
    6. '*' → logprob: -11.083647727966309
    7. '<|end|>' → logprob: -11.333647727966309
    8. ',' → logprob: -11.458647727966309
    9. '   ' → logprob: -11.458647727966309
    10. ' ' → logprob: -11.458647727966309

Token 1040: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002016071230173111
    2. '(' → logprob: -6.252016067504883
    3. ' ' → logprob: -9.377016067504883
    4. ' (' → logprob: -13.752016067504883
    5. '   ' → logprob: -14.127016067504883
    6. '+' → logprob: -14.627016067504883
    7. '  ' → logprob: -16.627016067504883
    8. '```' → logprob: -16.752016067504883
    9. '       ' → logprob: -17.002016067504883
    10. '     ' → logprob: -17.252016067504883

Token 1041: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028128400444984436
    2. '(' → logprob: -5.87781286239624
    3. ' ' → logprob: -11.877812385559082
    4. ' (' → logprob: -14.877812385559082
    5. '+' → logprob: -15.002812385559082
    6. '   ' → logprob: -15.877812385559082
    7. '```' → logprob: -17.6278133392334
    8. '`' → logprob: -17.9403133392334
    9. '  ' → logprob: -18.2528133392334
    10. '[' → logprob: -18.4403133392334

Token 1042: '(px' (ID: 195026)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.029822584241628647
    2. '*' → logprob: -3.779822587966919
    3. ' *' → logprob: -5.02982234954834
    4. ' *(' → logprob: -11.65482234954834
    5. '(px' → logprob: -12.27982234954834
    6. '*((' → logprob: -13.40482234954834
    7. '*[' → logprob: -14.90482234954834
    8. '**' → logprob: -16.154823303222656
    9. '*(-' → logprob: -16.904823303222656
    10. '.*' → logprob: -17.279823303222656

Token 1043: ' vx' (ID: 93588)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00041267683263868093
    2. '*(' → logprob: -8.000412940979004
    3. '*v' → logprob: -9.750412940979004
    4. ' *' → logprob: -11.375412940979004
    5. '**' → logprob: -12.125412940979004
    6. 'vx' → logprob: -13.875412940979004
    7. '```' → logprob: -14.625412940979004
    8. '*x' → logprob: -15.000412940979004
    9. '*[' → logprob: -15.875412940979004
    10. '*t' → logprob: -16.500411987304688

Token 1044: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3386622965335846
    2. ' t' → logprob: -1.9636622667312622
    3. ' *' → logprob: -2.7136623859405518
    4. 't' → logprob: -3.2136623859405518
    5. '*t' → logprob: -3.2136623859405518
    6. ')' → logprob: -9.338662147521973
    7. '+' → logprob: -9.963662147521973
    8. ' ' → logprob: -10.713662147521973
    9. '```' → logprob: -11.088662147521973
    10. ' +' → logprob: -11.088662147521973

Token 1045: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0015446186298504472
    2. ' py' → logprob: -7.37654447555542
    3. '(py' → logprob: -7.37654447555542
    4. 'px' → logprob: -8.376544952392578
    5. 'vy' → logprob: -9.751544952392578
    6. '_py' → logprob: -13.376544952392578
    7. 't' → logprob: -14.626544952392578
    8. 'pv' → logprob: -14.751544952392578
    9. 'Py' → logprob: -15.001544952392578
    10. 'p' → logprob: -15.751544952392578

Token 1046: ' vy' (ID: 14190)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3341277837753296
    2. 'v' → logprob: -1.3341277837753296
    3. '*v' → logprob: -1.5841277837753296
    4. 'vx' → logprob: -1.8341277837753296
    5. 'vy' → logprob: -2.834127902984619
    6. 't' → logprob: -3.834127902984619
    7. ')' → logprob: -4.209127902984619
    8. ' vy' → logprob: -5.834127902984619
    9. 'vt' → logprob: -6.209127902984619
    10. ' t' → logprob: -6.209127902984619

Token 1047: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011849920265376568
    2. ')t' → logprob: -7.501184940338135
    3. ' )' → logprob: -8.376185417175293
    4. 't' → logprob: -8.626185417175293
    5. ' t' → logprob: -9.001185417175293
    6. ')*' → logprob: -9.876185417175293
    7. '*' → logprob: -10.126185417175293
    8. '*)' → logprob: -13.001185417175293
    9. '```' → logprob: -13.751185417175293
    10. '   ' → logprob: -14.251185417175293

Token 1048: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.43938273191452026
    2. '*' → logprob: -1.189382791519165
    3. ' *' → logprob: -3.314382791519165
    4. 't' → logprob: -4.689382553100586
    5. '*t' → logprob: -5.189382553100586
    6. '	t' → logprob: -11.814382553100586
    7. ' ' → logprob: -11.939382553100586
    8. ' ' → logprob: -12.439382553100586
    9. ')' → logprob: -12.439382553100586
    10. '```' → logprob: -12.689382553100586

Token 1049: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5769408345222473
    2. ' +' → logprob: -0.8269408345222473
    3. ' t' → logprob: -7.576941013336182
    4. '*' → logprob: -7.826941013336182
    5. ' *' → logprob: -10.201940536499023
    6. 't' → logprob: -10.826940536499023
    7. ')' → logprob: -11.826940536499023
    8. ' ' → logprob: -12.201940536499023
    9. '```' → logprob: -12.451940536499023
    10. '   ' → logprob: -12.826940536499023

Token 1050: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.00020735491125378758
    2. 'px' → logprob: -9.25020694732666
    3. '(' → logprob: -9.87520694732666
    4. '(py' → logprob: -10.62520694732666
    5. ' (' → logprob: -11.25020694732666
    6. '(pos' → logprob: -11.25020694732666
    7. '(pc' → logprob: -12.87520694732666
    8. '(p' → logprob: -13.87520694732666
    9. '   ' → logprob: -14.00020694732666
    10. '(ps' → logprob: -14.50020694732666

Token 1051: 'px' (ID: 3207)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.3133760392665863
    2. 'px' → logprob: -1.3133760690689087
    3. 'pos' → logprob: -10.063376426696777
    4. ' px' → logprob: -10.188376426696777
    5. '(py' → logprob: -11.688376426696777
    6. ' (' → logprob: -11.813376426696777
    7. '_px' → logprob: -12.688376426696777
    8. ':px' → logprob: -12.688376426696777
    9. '(pos' → logprob: -13.063376426696777
    10. '(' → logprob: -13.063376426696777

Token 1052: '^' (ID: 61)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00804177951067686
    2. '**' → logprob: -4.883041858673096
    3. '2' → logprob: -8.633041381835938
    4. 'px' → logprob: -9.133041381835938
    5. '[' → logprob: -9.633041381835938
    6. ' *' → logprob: -10.258041381835938
    7. '(px' → logprob: -11.258041381835938
    8. '```' → logprob: -11.508041381835938
    9. '_px' → logprob: -12.008041381835938
    10. ' px' → logprob: -12.633041381835938

Token 1053: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.125007629394531
    3. '
' → logprob: -13.625007629394531
    4. '```' → logprob: -15.000007629394531
    5. '۲' → logprob: -16.56250762939453
    6. '²' → logprob: -16.56250762939453
    7. 'py' → logprob: -17.12500762939453
    8. '(' → logprob: -17.62500762939453
    9. '​' → logprob: -17.81250762939453
    10. '**' → logprob: -17.87500762939453

Token 1054: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692894041538239
    2. '+' → logprob: -2.1269290447235107
    3. ')' → logprob: -14.75192928314209
    4. ' +
' → logprob: -16.126928329467773
    5. ' ' → logprob: -16.626928329467773
    6. '>' → logprob: -16.751928329467773
    7. '[' → logprob: -17.126928329467773
    8. ',' → logprob: -17.376928329467773
    9. '<|end|>' → logprob: -17.501928329467773
    10. '   ' → logprob: -17.626928329467773

Token 1055: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.023342261090874672
    2. ' py' → logprob: -3.7733423709869385
    3. '(py' → logprob: -9.27334213256836
    4. '_py' → logprob: -13.27334213256836
    5. '.py' → logprob: -14.52334213256836
    6. 'px' → logprob: -14.64834213256836
    7. ' ' → logprob: -16.89834213256836
    8. 'ply' → logprob: -17.02334213256836
    9. ' (' → logprob: -18.14834213256836
    10. 'pty' → logprob: -18.39834213256836

Token 1056: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -11.375021934509277
    3. '[' → logprob: -11.625021934509277
    4. '```' → logprob: -14.625021934509277
    5. '**' → logprob: -15.125021934509277
    6. '(' → logprob: -16.00002098083496
    7. '
' → logprob: -16.12502098083496
    8. '²' → logprob: -16.50002098083496
    9. '<|end|>' → logprob: -17.62502098083496
    10. ')' → logprob: -17.87502098083496

Token 1057: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۲' → logprob: -17.875001907348633
    4. '[' → logprob: -18.125001907348633
    5. '1' → logprob: -18.750001907348633
    6. '222' → logprob: -19.250001907348633
    7. '```' → logprob: -19.375001907348633
    8. '²' → logprob: -19.375001907348633
    9. '22' → logprob: -19.500001907348633
    10. '٢' → logprob: -20.000001907348633

Token 1058: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20777563750743866
    2. ')' → logprob: -1.707775592803955
    3. '-' → logprob: -5.082775592803955
    4. ' )' → logprob: -9.332776069641113
    5. ' ' → logprob: -10.832776069641113
    6. '   ' → logprob: -11.332776069641113
    7. '```' → logprob: -12.832776069641113
    8. '>' → logprob: -12.957776069641113
    9. ')-' → logprob: -13.207776069641113
    10. '[' → logprob: -13.332776069641113

Token 1059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022881142795085907
    2. 'R' → logprob: -6.377288341522217
    3. ' ' → logprob: -7.502288341522217
    4. ' R' → logprob: -10.377287864685059
    5. ')' → logprob: -13.627287864685059
    6. '   ' → logprob: -14.002287864685059
    7. '```' → logprob: -15.252287864685059
    8. '(' → logprob: -16.127288818359375
    9. 'r' → logprob: -16.502288818359375
    10. '  ' → logprob: -16.752288818359375

Token 1060: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011173023842275143
    2. ')=' → logprob: -4.511173248291016
    3. ')
' → logprob: -9.261173248291016
    4. ')==' → logprob: -11.136173248291016
    5. '=' → logprob: -12.136173248291016
    6. ' )' → logprob: -12.136173248291016
    7. ')

' → logprob: -14.261173248291016
    8. ')
' → logprob: -14.261173248291016
    9. '))' → logprob: -14.636173248291016
    10. ')="' → logprob: -14.886173248291016

Token 1061: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8283741474151611
    2. ' =' → logprob: -1.0783741474151611
    3. '   ' → logprob: -2.453374147415161
    4. 'coeff' → logprob: -3.453374147415161
    5. 't' → logprob: -3.578374147415161
    6. ')' → logprob: -3.953374147415161
    7. '
' → logprob: -4.078373908996582
    8. 'import' → logprob: -4.578373908996582
    9. '       ' → logprob: -5.203373908996582
    10. 'A' → logprob: -5.328373908996582

Token 1062: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -18.3750057220459
    4. 'zero' → logprob: -18.5000057220459
    5. '<|end|>' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. '```' → logprob: -19.1250057220459
    8. 'return' → logprob: -19.6250057220459
    9. 'import' → logprob: -19.7500057220459
    10. '<|end|>' → logprob: -19.7500057220459

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'zero' → logprob: -19.750001907348633
    4. '=' → logprob: -19.750001907348633
    5. '```' → logprob: -19.875001907348633
    6. '۰' → logprob: -20.000001907348633
    7. '00' → logprob: -20.375001907348633
    8. '1' → logprob: -20.875001907348633
    9. '   ' → logprob: -21.187501907348633
    10. '[' → logprob: -21.187501907348633

Token 1064: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49690547585487366
    2. '
' → logprob: -1.3719054460525513
    3. '   ' → logprob: -2.746905565261841
    4. 'a' → logprob: -3.871905565261841
    5. 'import' → logprob: -3.996905565261841
    6. '        
' → logprob: -4.246905326843262
    7. 'A' → logprob: -5.371905326843262
    8. '    
' → logprob: -5.371905326843262
    9. '\n' → logprob: -5.621905326843262
    10. '  
' → logprob: -6.871905326843262

Token 1065: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7802385687828064
    2. '       ' → logprob: -1.2802386283874512
    3. '\n' → logprob: -2.030238628387451
    4. 't' → logprob: -3.405238628387451
    5. 'A' → logprob: -3.530238628387451
    6. '```' → logprob: -4.280238628387451
    7. '
' → logprob: -4.780238628387451
    8. '<|end|>' → logprob: -5.030238628387451
    9. '\' → logprob: -5.155238628387451
    10. '  
' → logprob: -5.530238628387451

Token 1066: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5642098188400269
    2. 'A' → logprob: -1.3142098188400269
    3. '   ' → logprob: -1.9392098188400269
    4. ' a' → logprob: -4.439209938049316
    5. ' A' → logprob: -6.189209938049316
    6. 'import' → logprob: -6.189209938049316
    7. '       ' → logprob: -6.939209938049316
    8. '
' → logprob: -7.064209938049316
    9. '```' → logprob: -7.689209938049316
    10. 'b' → logprob: -9.314209938049316

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490973114967346
    2. ' =' → logprob: -1.2240972518920898
    3. ')' → logprob: -8.22409725189209
    4. '<|end|>' → logprob: -8.34909725189209
    5. ',' → logprob: -9.47409725189209
    6. ' =
' → logprob: -10.47409725189209
    7. '=
' → logprob: -10.84909725189209
    8. '<|end|>' → logprob: -12.59909725189209
    9. ')=' → logprob: -12.97409725189209
    10. '=}' → logprob: -12.97409725189209

Token 1068: ' vel' (ID: 7326)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.0008334511076100171
    2. 'vel' → logprob: -7.250833511352539
    3. ' vx' → logprob: -9.000833511352539
    4. 'velocity' → logprob: -16.50083351135254
    5. 'vy' → logprob: -17.00083351135254
    6. '   ' → logprob: -17.12583351135254
    7. '(' → logprob: -18.25083351135254
    8. 'v' → logprob: -18.37583351135254
    9. '(v' → logprob: -18.37583351135254
    10. 'vz' → logprob: -18.37583351135254

Token 1069: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '=' → logprob: -12.500008583068848
    3. '0' → logprob: -12.625008583068848
    4. 'x' → logprob: -14.750008583068848
    5. '=(' → logprob: -15.500008583068848
    6. '(' → logprob: -15.625008583068848
    7. '```' → logprob: -15.625008583068848
    8. 'norm' → logprob: -16.000009536743164
    9. ' =' → logprob: -16.250009536743164
    10. 'a' → logprob: -16.250009536743164

Token 1070: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '
' → logprob: -15.625000953674316
    5. ' ' → logprob: -15.750000953674316
    6. '1' → logprob: -16.500001907348633
    7. '```' → logprob: -16.750001907348633
    8. '۰' → logprob: -17.500001907348633
    9. '(' → logprob: -17.750001907348633
    10. 'index' → logprob: -17.875001907348633

Token 1071: ']*' (ID: 18579)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0208989381790161
    2. ']' → logprob: -1.3958989381790161
    3. ']*' → logprob: -1.5208989381790161
    4. '*' → logprob: -1.7708989381790161
    5. '[' → logprob: -5.770898818969727
    6. '```' → logprob: -8.520898818969727
    7. '   ' → logprob: -10.895898818969727
    8. '***' → logprob: -10.895898818969727
    9. ')**' → logprob: -11.145898818969727
    10. '*a' → logprob: -11.270898818969727

Token 1072: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: 0.0
    2. '2' → logprob: -17.375
    3. 'vx' → logprob: -17.875
    4. ' vel' → logprob: -18.375
    5. 'a' → logprob: -18.75
    6. 'Vel' → logprob: -20.0
    7. 'val' → logprob: -20.25
    8. '0' → logprob: -20.25
    9. 'v' → logprob: -20.625
    10. 'velo' → logprob: -20.625

Token 1073: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004119242075830698
    2. '0' → logprob: -5.504119396209717
    3. '```' → logprob: -11.004118919372559
    4. '1' → logprob: -11.754118919372559
    5. '   ' → logprob: -12.629118919372559
    6. '.' → logprob: -12.879118919372559
    7. '[
' → logprob: -13.004118919372559
    8. '2' → logprob: -13.129118919372559
    9. '(' → logprob: -13.504118919372559
    10. ' ' → logprob: -13.629118919372559

Token 1074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '
' → logprob: -15.625000953674316
    5. '[' → logprob: -16.375
    6. '   ' → logprob: -17.375
    7. '۰' → logprob: -17.625
    8. '```' → logprob: -17.75
    9. 'vel' → logprob: -18.0
    10. '

' → logprob: -18.375

Token 1075: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931493282318115
    2. ' +' → logprob: -0.6931493282318115
    3. ' +
' → logprob: -14.19314956665039
    4. '+
' → logprob: -14.56814956665039
    5. '<|end|>' → logprob: -15.06814956665039
    6. '+)' → logprob: -15.31814956665039
    7. ')' → logprob: -15.69314956665039
    8. ')+' → logprob: -16.31814956665039
    9. '[' → logprob: -16.44314956665039
    10. '+a' → logprob: -16.81814956665039

Token 1076: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10026081651449203
    2. ' +' → logprob: -2.3502607345581055
    3. '+
' → logprob: -10.350260734558105
    4. '+b' → logprob: -11.475260734558105
    5. '+a' → logprob: -12.225260734558105
    6. ' +
' → logprob: -12.850260734558105
    7. '<|end|>' → logprob: -12.975260734558105
    8. '+)' → logprob: -15.600260734558105
    9. '+B' → logprob: -15.600260734558105
    10. '+

' → logprob: -15.600260734558105

Token 1077: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.9361264946837764e-07
    2. ' vel' → logprob: -15.875
    3. 'velo' → logprob: -18.625
    4. 'velop' → logprob: -19.125
    5. 'veli' → logprob: -19.125
    6. 'velt' → logprob: -19.375
    7. 'vy' → logprob: -20.375
    8. 'vell' → logprob: -20.5
    9. 'velocity' → logprob: -20.75
    10. 've' → logprob: -21.75

Token 1078: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.065608562901616e-05
    2. '1' → logprob: -9.500081062316895
    3. '0' → logprob: -13.500081062316895
    4. '[
' → logprob: -13.625081062316895
    5. '```' → logprob: -14.000081062316895
    6. '2' → logprob: -14.125081062316895
    7. '(' → logprob: -14.250081062316895
    8. ' [' → logprob: -15.500081062316895
    9. ' ' → logprob: -16.125080108642578
    10. 'import' → logprob: -16.375080108642578

Token 1079: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6940513253211975
    2. '1' → logprob: -0.6940513253211975
    3. 'vel' → logprob: -7.194051265716553
    4. '[' → logprob: -8.944051742553711
    5. '```' → logprob: -11.694051742553711
    6. ' ' → logprob: -12.194051742553711
    7. 'vy' → logprob: -13.069051742553711
    8. 'v' → logprob: -13.694051742553711
    9. '   ' → logprob: -13.819051742553711
    10. '(' → logprob: -13.944051742553711

Token 1080: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16030851006507874
    2. ']*' → logprob: -1.9103084802627563
    3. ']' → logprob: -9.660308837890625
    4. '[' → logprob: -11.785308837890625
    5. '```' → logprob: -12.285308837890625
    6. ')*' → logprob: -13.535308837890625
    7. '**' → logprob: -13.535308837890625
    8. 'vel' → logprob: -14.160308837890625
    9. '*
' → logprob: -14.160308837890625
    10. '*[' → logprob: -14.285308837890625

Token 1081: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -5.512236498361744e-07
    2. ' vel' → logprob: -15.375000953674316
    3. 'vy' → logprob: -16.5
    4. '(' → logprob: -16.875
    5. 'velo' → logprob: -17.75
    6. 'velt' → logprob: -18.25
    7. '0' → logprob: -18.5
    8. '[' → logprob: -18.625
    9. 'vell' → logprob: -19.25
    10. '2' → logprob: -19.375

Token 1082: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630552463233471
    2. '[' → logprob: -3.6513054370880127
    3. '   ' → logprob: -13.026305198669434
    4. '
' → logprob: -13.651305198669434
    5. '```' → logprob: -14.401305198669434
    6. '**' → logprob: -14.526305198669434
    7. ' ' → logprob: -15.276305198669434
    8. '(' → logprob: -15.651305198669434
    9. '*' → logprob: -15.901305198669434
    10. '[
' → logprob: -17.02630615234375

Token 1083: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '
' → logprob: -16.75
    4. '0' → logprob: -17.0
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.5
    7. '[' → logprob: -19.0
    8. ']' → logprob: -19.25
    9. '2' → logprob: -19.75
    10. '１' → logprob: -20.25

Token 1084: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04873407259583473
    2. ']' → logprob: -3.798734188079834
    3. '<|end|>' → logprob: -3.798734188079834
    4. '<|end|>' → logprob: -6.548734188079834
    5. '}' → logprob: -7.423734188079834
    6. '   ' → logprob: -7.798734188079834
    7. ')
' → logprob: -9.673733711242676
    8. ' )' → logprob: -10.173733711242676
    9. '```' → logprob: -10.173733711242676
    10. '>' → logprob: -10.298733711242676

Token 1085: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8502985835075378
    2. '   ' → logprob: -1.2252986431121826
    3. '
' → logprob: -2.3502986431121826
    4. ' 
' → logprob: -2.7252986431121826
    5. '*' → logprob: -3.6002986431121826
    6. '  
' → logprob: -3.8502986431121826
    7. ' b' → logprob: -4.1002984046936035
    8. '       ' → logprob: -4.4752984046936035
    9. ' ' → logprob: -5.3502984046936035
    10. '[' → logprob: -5.3502984046936035

Token 1086: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.06196869537234306
    2. ' b' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.811968803405762
    4. '   ' → logprob: -15.311968803405762
    5. '```' → logprob: -16.311967849731445
    6. ' 
' → logprob: -16.436967849731445
    7. '	b' → logprob: -16.561967849731445
    8. ' space' → logprob: -16.686967849731445
    9. 'space' → logprob: -17.311967849731445
    10. '4' → logprob: -17.436967849731445

Token 1087: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193464756011963
    2. '=' → logprob: -1.5019346475601196
    3. ',' → logprob: -12.876935005187988
    4. ')' → logprob: -13.876935005187988
    5. ' =
' → logprob: -14.001935005187988
    6. ' ' → logprob: -15.251935005187988
    7. '    ' → logprob: -15.501935005187988
    8. '   ' → logprob: -15.876935005187988
    9. 's' → logprob: -16.251934051513672
    10. 'c' → logprob: -16.251934051513672

Token 1088: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '   ' → logprob: -12.500114440917969
    4. '(' → logprob: -14.750114440917969
    5. '  ' → logprob: -15.312614440917969
    6. 'pos' → logprob: -15.500114440917969
    7. '1' → logprob: -15.812614440917969
    8. 'float' → logprob: -16.37511444091797
    9. '    ' → logprob: -16.50011444091797
    10. '```' → logprob: -16.62511444091797

Token 1089: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.250041007995605
    3. '   ' → logprob: -12.500041007995605
    4. '(' → logprob: -14.500041007995605
    5. '  ' → logprob: -15.687541007995605
    6. '       ' → logprob: -16.125041961669922
    7. '     ' → logprob: -16.125041961669922
    8. '           ' → logprob: -16.250041961669922
    9. '
' → logprob: -16.312541961669922
    10. '    ' → logprob: -16.437541961669922

Token 1090: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.16135983169078827
    2. '*' → logprob: -1.9113597869873047
    3. ' *' → logprob: -6.786359786987305
    4. '   ' → logprob: -13.161359786987305
    5. '*((' → logprob: -13.286359786987305
    6. '.' → logprob: -14.036359786987305
    7. '(pos' → logprob: -14.911359786987305
    8. '(' → logprob: -15.161359786987305
    9. '*(-' → logprob: -15.161359786987305
    10. '(*' → logprob: -15.286359786987305

Token 1091: 'pos' (ID: 1103)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.1859763264656067
    2. '(px' → logprob: -1.935976266860962
    3. 'pos' → logprob: -3.685976266860962
    4. 'px' → logprob: -8.560976028442383
    5. '(dot' → logprob: -9.185976028442383
    6. 'dot' → logprob: -10.560976028442383
    7. '(py' → logprob: -11.185976028442383
    8. ' (' → logprob: -11.685976028442383
    9. '(' → logprob: -12.685976028442383
    10. '[pos' → logprob: -13.560976028442383

Token 1092: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -14.875001907348633
    3. 'import' → logprob: -15.250001907348633
    4. '[
' → logprob: -15.250001907348633
    5. '<|end|>' → logprob: -15.250001907348633
    6. ' [' → logprob: -15.375001907348633
    7. '   ' → logprob: -15.750001907348633
    8. '.' → logprob: -15.875001907348633
    9. '(' → logprob: -16.250001907348633
    10. '<|end|>' → logprob: -17.000001907348633

Token 1093: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0100624169572257e-05
    2. '[' → logprob: -10.875020027160645
    3. '
' → logprob: -15.250020027160645
    4. ' ' → logprob: -15.250020027160645
    5. '(' → logprob: -15.750020027160645
    6. '   ' → logprob: -15.875020027160645
    7. '```' → logprob: -16.00002098083496
    8. '۰' → logprob: -16.31252098083496
    9. '][' → logprob: -16.37502098083496
    10. ']' → logprob: -17.68752098083496

Token 1094: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -6.749814019713085e-06
    2. ' *' → logprob: -12.500006675720215
    3. '**' → logprob: -13.500006675720215
    4. ')*' → logprob: -15.125006675720215
    5. '*
' → logprob: -15.125006675720215
    6. '*v' → logprob: -15.375006675720215
    7. '*(' → logprob: -15.500006675720215
    8. '*[' → logprob: -16.00000762939453
    9. '*pi' → logprob: -16.12500762939453
    10. '*)' → logprob: -16.25000762939453

Token 1095: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.6240566083070007e-06
    2. 'pos' → logprob: -13.750001907348633
    3. ' vel' → logprob: -14.750001907348633
    4. 'v' → logprob: -16.500001907348633
    5. '[' → logprob: -18.250001907348633
    6. 'vx' → logprob: -18.625001907348633
    7. 'velo' → logprob: -19.250001907348633
    8. '```' → logprob: -19.250001907348633
    9. 'val' → logprob: -19.375001907348633
    10. 'velocity' → logprob: -19.500001907348633

Token 1096: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022739621344953775
    2. '0' → logprob: -6.127274036407471
    3. '1' → logprob: -10.002273559570312
    4. '[
' → logprob: -10.252273559570312
    5. '(' → logprob: -12.877273559570312
    6. '```' → logprob: -13.377273559570312
    7. ' [' → logprob: -13.752273559570312
    8. ' ' → logprob: -14.002273559570312
    9. '   ' → logprob: -14.127273559570312
    10. '][' → logprob: -14.252273559570312

Token 1097: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. '1' → logprob: -16.250001907348633
    4. '
' → logprob: -17.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. ' ' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.187501907348633
    8. '۰' → logprob: -18.375001907348633
    9. '(' → logprob: -19.187501907348633
    10. '０' → logprob: -19.500001907348633

Token 1098: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47415420413017273
    2. '+' → logprob: -0.9741542339324951
    3. ')' → logprob: -9.724154472351074
    4. '+
' → logprob: -12.224154472351074
    5. ')+' → logprob: -12.224154472351074
    6. '+b' → logprob: -12.474154472351074
    7. '+)' → logprob: -13.849154472351074
    8. ' +
' → logprob: -13.974154472351074
    9. '[' → logprob: -14.849154472351074
    10. ']' → logprob: -15.099154472351074

Token 1099: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759488344192505
    2. '+' → logprob: -0.8259488344192505
    3. '+
' → logprob: -12.575948715209961
    4. '+b' → logprob: -12.950948715209961
    5. ')' → logprob: -13.200948715209961
    6. ' +
' → logprob: -13.700948715209961
    7. '+)' → logprob: -14.950948715209961
    8. '[' → logprob: -16.57594871520996
    9. ')+' → logprob: -16.70094871520996
    10. ' ' → logprob: -17.57594871520996

Token 1100: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. 'vel' → logprob: -17.125036239624023
    4. '   ' → logprob: -18.250036239624023
    5. '	pos' → logprob: -19.125036239624023
    6. '(pos' → logprob: -20.625036239624023
    7. '[pos' → logprob: -21.125036239624023
    8. '_pos' → logprob: -21.750036239624023
    9. '       ' → logprob: -21.875036239624023
    10. ' ' → logprob: -21.875036239624023

Token 1101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.522638169466518e-05
    2. '1' → logprob: -10.625024795532227
    3. '[
' → logprob: -14.375024795532227
    4. '0' → logprob: -16.500024795532227
    5. '
' → logprob: -16.750024795532227
    6. '```' → logprob: -16.875024795532227
    7. '(' → logprob: -17.000024795532227
    8. ' [' → logprob: -17.125024795532227
    9. '   ' → logprob: -17.125024795532227
    10. '2' → logprob: -17.375024795532227

Token 1102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '[' → logprob: -11.625011444091797
    3. 'pos' → logprob: -14.125011444091797
    4. '0' → logprob: -14.500011444091797
    5. '```' → logprob: -14.500011444091797
    6. 'vel' → logprob: -16.750011444091797
    7. '   ' → logprob: -16.750011444091797
    8. ' ' → logprob: -16.875011444091797
    9. '
' → logprob: -17.000011444091797
    10. ']' → logprob: -18.125011444091797

Token 1103: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016118124127388
    2. '*' → logprob: -4.141118049621582
    3. ']*' → logprob: -10.391118049621582
    4. '*[' → logprob: -11.141118049621582
    5. '][' → logprob: -11.266118049621582
    6. ']' → logprob: -11.516118049621582
    7. '
' → logprob: -12.516118049621582
    8. 'def' → logprob: -12.891118049621582
    9. '```' → logprob: -13.141118049621582
    10. '[
' → logprob: -13.391118049621582

Token 1104: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -6.392202976712724e-06
    2. 'pos' → logprob: -12.875006675720215
    3. ' vel' → logprob: -13.125006675720215
    4. 'velt' → logprob: -14.500006675720215
    5. 'velop' → logprob: -14.625006675720215
    6. 'veli' → logprob: -14.875006675720215
    7. 'velo' → logprob: -15.625006675720215
    8. 'velocity' → logprob: -16.5000057220459
    9. 'vy' → logprob: -16.7500057220459
    10. 'v' → logprob: -17.2500057220459

Token 1105: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022111982107162
    2. '[' → logprob: -2.3502211570739746
    3. '   ' → logprob: -12.350220680236816
    4. '(' → logprob: -13.100220680236816
    5. '
' → logprob: -13.350220680236816
    6. '```' → logprob: -13.350220680236816
    7. '[
' → logprob: -13.725220680236816
    8. ' ' → logprob: -13.725220680236816
    9. '-' → logprob: -15.037720680236816
    10. '0' → logprob: -15.100220680236816

Token 1106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. 'vel' → logprob: -9.7500638961792
    3. '[' → logprob: -12.8750638961792
    4. 'veli' → logprob: -14.2500638961792
    5. '0' → logprob: -14.7500638961792
    6. '
' → logprob: -14.9375638961792
    7. '```' → logprob: -15.0625638961792
    8. 'v' → logprob: -15.1250638961792
    9. '   ' → logprob: -15.3125638961792
    10. ' ' → logprob: -15.4375638961792

Token 1107: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026729601086117327
    2. ')
' → logprob: -8.250267028808594
    3. ' )' → logprob: -12.875267028808594
    4. '   ' → logprob: -14.375267028808594
    5. '       ' → logprob: -14.375267028808594
    6. ']' → logprob: -15.250267028808594
    7. ')#' → logprob: -15.250267028808594
    8. '))' → logprob: -15.375267028808594
    9. ')b' → logprob: -15.750267028808594
    10. ')

' → logprob: -16.000267028808594

Token 1108: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1500030755996704
    2. ' c' → logprob: -2.025002956390381
    3. '       ' → logprob: -5.400002956390381
    4. '   ' → logprob: -5.900002956390381
    5. '	c' → logprob: -11.150003433227539
    6. '
' → logprob: -11.400003433227539
    7. '```' → logprob: -11.900003433227539
    8. '        
' → logprob: -12.525003433227539
    9. '    ' → logprob: -13.525003433227539
    10. ')c' → logprob: -13.900003433227539

Token 1109: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -6.034592388459714e-06
    2. ' c' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.750005722045898
    4. 'import' → logprob: -15.875005722045898
    5. '	c' → logprob: -19.0000057220459
    6. '```' → logprob: -19.0000057220459
    7. '       ' → logprob: -19.1250057220459
    8. 'from' → logprob: -21.0000057220459
    9. 'cc' → logprob: -21.7500057220459
    10. ' ' → logprob: -22.0000057220459

Token 1110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386880099773407
    2. '=' → logprob: -1.1368801593780518
    3. '=
' → logprob: -12.636879920959473
    4. ' =
' → logprob: -13.136879920959473
    5. '   ' → logprob: -13.261879920959473
    6. ')' → logprob: -14.136879920959473
    7. '<|end|>' → logprob: -15.636879920959473
    8. '```' → logprob: -16.01188087463379
    9. ':' → logprob: -16.13688087463379
    10. ' =)' → logprob: -16.26188087463379

Token 1111: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.015869181603193283
    2. ' pos' → logprob: -4.265869140625
    3. '(pos' → logprob: -6.765869140625
    4. '   ' → logprob: -7.640869140625
    5. ' (' → logprob: -9.765869140625
    6. 'px' → logprob: -11.890869140625
    7. '       ' → logprob: -13.265869140625
    8. '	pos' → logprob: -13.265869140625
    9. '[pos' → logprob: -13.765869140625
    10. '(' → logprob: -14.515869140625

Token 1112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '0' → logprob: -16.125001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. '\[' → logprob: -17.375001907348633
    7. '(' → logprob: -17.500001907348633
    8. '<|end|>' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.250001907348633

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00523719098418951
    2. '[' → logprob: -5.255237102508545
    3. '(' → logprob: -13.380237579345703
    4. '```' → logprob: -14.130237579345703
    5. '1' → logprob: -14.755237579345703
    6. ' ' → logprob: -15.505237579345703
    7. '2' → logprob: -16.130237579345703
    8. '   ' → logprob: -16.380237579345703
    9. '#' → logprob: -16.630237579345703
    10. '[
' → logprob: -17.005237579345703

Token 1114: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002015717327594757
    2. '[' → logprob: -6.502015590667725
    3. ']*' → logprob: -8.252016067504883
    4. '[pos' → logprob: -9.252016067504883
    5. 'pos' → logprob: -9.377016067504883
    6. '**' → logprob: -10.002016067504883
    7. ']' → logprob: -12.002016067504883
    8. '
' → logprob: -12.127016067504883
    9. '```' → logprob: -12.127016067504883
    10. ')*' → logprob: -12.377016067504883

Token 1115: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.7697225252486533e-06
    2. ' pos' → logprob: -13.250003814697266
    3. '0' → logprob: -13.375003814697266
    4. '	pos' → logprob: -15.875003814697266
    5. '[' → logprob: -16.000003814697266
    6. '[pos' → logprob: -16.375003814697266
    7. '2' → logprob: -17.750003814697266
    8. '(pos' → logprob: -17.750003814697266
    9. '
' → logprob: -18.000003814697266
    10. '_pos' → logprob: -18.625003814697266

Token 1116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036071976646780968
    2. '0' → logprob: -5.628607273101807
    3. '(' → logprob: -12.878606796264648
    4. '
' → logprob: -13.878606796264648
    5. '```' → logprob: -13.878606796264648
    6. '[
' → logprob: -14.003606796264648
    7. '*' → logprob: -15.128606796264648
    8. '**' → logprob: -15.378606796264648
    9. '2' → logprob: -15.378606796264648
    10. '#' → logprob: -15.503606796264648

Token 1117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. '1' → logprob: -16.625
    4. ' ' → logprob: -17.25
    5. '
' → logprob: -17.25
    6. '۰' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '```' → logprob: -18.75
    9. '<|end|>' → logprob: -19.75
    10. '০' → logprob: -20.25

Token 1118: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12725156545639038
    2. '+' → logprob: -2.127251625061035
    3. ' -' → logprob: -8.377251625061035
    4. ')' → logprob: -10.502251625061035
    5. '[' → logprob: -11.002251625061035
    6. '-' → logprob: -11.127251625061035
    7. ' +
' → logprob: -11.502251625061035
    8. ' ' → logprob: -12.252251625061035
    9. '>' → logprob: -12.627251625061035
    10. '<|end|>' → logprob: -12.627251625061035

Token 1119: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06198561564087868
    2. '+' → logprob: -2.811985731124878
    3. ' -' → logprob: -11.561985969543457
    4. ' +
' → logprob: -12.561985969543457
    5. '-' → logprob: -13.561985969543457
    6. '+
' → logprob: -13.811985969543457
    7. '+c' → logprob: -14.186985969543457
    8. ' ' → logprob: -14.561985969543457
    9. '[' → logprob: -14.811985969543457
    10. '   ' → logprob: -14.936985969543457

Token 1120: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005530327325686812
    2. ' pos' → logprob: -7.500553131103516
    3. '(pos' → logprob: -17.625553131103516
    4. '	pos' → logprob: -17.625553131103516
    5. '0' → logprob: -18.125553131103516
    6. '[pos' → logprob: -19.125553131103516
    7. '_pos' → logprob: -19.125553131103516
    8. 'position' → logprob: -20.750553131103516
    9. '1' → logprob: -20.875553131103516
    10. '.pos' → logprob: -21.000553131103516

Token 1121: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. '1' → logprob: -11.625011444091797
    3. '[
' → logprob: -13.250011444091797
    4. '   ' → logprob: -14.750011444091797
    5. '```' → logprob: -15.750011444091797
    6. '
' → logprob: -15.875011444091797
    7. 'import' → logprob: -16.625011444091797
    8. 'def' → logprob: -17.000011444091797
    9. 'es' → logprob: -17.375011444091797
    10. '(' → logprob: -17.500011444091797

Token 1122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.190178904333152e-05
    2. '[' → logprob: -10.375031471252441
    3. '0' → logprob: -15.375031471252441
    4. ' ' → logprob: -15.875031471252441
    5. '```' → logprob: -15.875031471252441
    6. 'pos' → logprob: -16.125032424926758
    7. 'y' → logprob: -17.000032424926758
    8. '   ' → logprob: -18.125032424926758
    9. '(' → logprob: -18.125032424926758
    10. '-' → logprob: -18.250032424926758

Token 1123: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.62500286102295
    3. '```' → logprob: -13.75000286102295
    4. '[
' → logprob: -16.750001907348633
    5. '1' → logprob: -16.875001907348633
    6. '][' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '2' → logprob: -18.125001907348633
    9. '()[' → logprob: -18.125001907348633
    10. '(' → logprob: -18.750001907348633

Token 1124: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.531315314830863e-06
    2. ' pos' → logprob: -12.750003814697266
    3. '(pos' → logprob: -15.500003814697266
    4. '[pos' → logprob: -16.000003814697266
    5. '	pos' → logprob: -16.125003814697266
    6. '0' → logprob: -16.375003814697266
    7. '[' → logprob: -17.250003814697266
    8. '1' → logprob: -17.375003814697266
    9. '.pos' → logprob: -19.250003814697266
    10. '_pos' → logprob: -19.375003814697266

Token 1125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033939589047804475
    2. '1' → logprob: -8.25033950805664
    3. '0' → logprob: -10.25033950805664
    4. '```' → logprob: -10.62533950805664
    5. '   ' → logprob: -12.50033950805664
    6. '[
' → logprob: -12.50033950805664
    7. '-' → logprob: -13.12533950805664
    8. '*' → logprob: -13.37533950805664
    9. '**' → logprob: -13.50033950805664
    10. '(' → logprob: -13.50033950805664

Token 1126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.875001907348633
    3. '[' → logprob: -15.125001907348633
    4. ' ' → logprob: -15.500001907348633
    5. '```' → logprob: -16.875001907348633
    6. '-' → logprob: -17.125001907348633
    7. '
' → logprob: -17.375001907348633
    8. '(' → logprob: -17.750001907348633
    9. '   ' → logprob: -17.875001907348633
    10. ']' → logprob: -17.875001907348633

Token 1127: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009249396622180939
    2. '-' → logprob: -4.759249210357666
    3. ' ' → logprob: -7.884249210357666
    4. ')' → logprob: -8.509249687194824
    5. '>' → logprob: -11.009249687194824
    6. '<|end|>' → logprob: -11.509249687194824
    7. '```' → logprob: -12.259249687194824
    8. ']' → logprob: -12.259249687194824
    9. '   ' → logprob: -12.759249687194824
    10. ' >' → logprob: -13.134249687194824

Token 1128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0032200184650719166
    2. '-' → logprob: -5.753220081329346
    3. ' ' → logprob: -10.378219604492188
    4. ' -
' → logprob: -12.503219604492188
    5. '```' → logprob: -13.253219604492188
    6. '<|end|>' → logprob: -13.753219604492188
    7. '`' → logprob: -13.753219604492188
    8. 'b' → logprob: -14.378219604492188
    9. '>' → logprob: -14.378219604492188
    10. ')' → logprob: -14.378219604492188

Token 1129: ' R' (ID: 460)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022143693640828133
    2. 'R' → logprob: -6.127214431762695
    3. ' ' → logprob: -10.627214431762695
    4. '(' → logprob: -13.002214431762695
    5. ' R' → logprob: -13.377214431762695
    6. '(R' → logprob: -13.752214431762695
    7. '```' → logprob: -17.502214431762695
    8. '   ' → logprob: -17.752214431762695
    9. ' (' → logprob: -17.752214431762695
    10. '	R' → logprob: -18.627214431762695

Token 1130: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6534347534179688
    2. '**' → logprob: -0.7784347534179688
    3. '<|end|>' → logprob: -4.403434753417969
    4. '1' → logprob: -6.153434753417969
    5. '2' → logprob: -6.153434753417969
    6. '(' → logprob: -7.153434753417969
    7. ')' → logprob: -7.403434753417969
    8. '[' → logprob: -7.653434753417969
    9. '   ' → logprob: -8.028434753417969
    10. ' ' → logprob: -8.153434753417969

Token 1131: 'R' (ID: 49)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26836928725242615
    2. 'R' → logprob: -2.143369197845459
    3. '2' → logprob: -2.143369197845459
    4. '*' → logprob: -7.143369197845459
    5. '**' → logprob: -10.143369674682617
    6. '```' → logprob: -11.393369674682617
    7. '	R' → logprob: -12.393369674682617
    8. '
' → logprob: -12.393369674682617
    9. ' ' → logprob: -12.768369674682617
    10. ' R' → logprob: -13.393369674682617

Token 1132: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08940330147743225
    2. '   ' → logprob: -3.3394033908843994
    3. '<|end|>' → logprob: -3.4644033908843994
    4. '<|end|>' → logprob: -5.08940315246582
    5. '

' → logprob: -5.33940315246582
    6. '       ' → logprob: -5.96440315246582
    7. 'import' → logprob: -6.71440315246582
    8. ')' → logprob: -7.08940315246582
    9. '```' → logprob: -7.21440315246582
    10. '
' → logprob: -7.46440315246582

Token 1133: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056541845202445984
    2. '```' → logprob: -3.931541919708252
    3. '       ' → logprob: -4.556541919708252
    4. 'import' → logprob: -4.556541919708252
    5. '	dis' → logprob: -5.681541919708252
    6. 'delta' → logprob: -5.806541919708252
    7. 'dis' → logprob: -5.806541919708252
    8. 'd' → logprob: -6.431541919708252
    9. ' discrimin' → logprob: -7.056541919708252
    10. 't' → logprob: -7.931541919708252

Token 1134: ' discrimin' (ID: 50254)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.06614041328430176
    2. 'dis' → logprob: -2.8161404132843018
    3. 'disc' → logprob: -5.566140174865723
    4. 'Delta' → logprob: -8.316140174865723
    5. 'det' → logprob: -9.816140174865723
    6. 'd' → logprob: -10.566140174865723
    7. 'D' → logprob: -12.191140174865723
    8. '   ' → logprob: -12.316140174865723
    9. ' delta' → logprob: -13.441140174865723
    10. 'import' → logprob: -13.941140174865723

Token 1135: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00011892046313732862
    2. 'a' → logprob: -9.12511920928955
    3. '=' → logprob: -12.87511920928955
    4. '_' → logprob: -13.25011920928955
    5. '_ant' → logprob: -13.50011920928955
    6. '   ' → logprob: -14.12511920928955
    7. 'an' → logprob: -14.25011920928955
    8. ' ant' → logprob: -14.37511920928955
    9. '[' → logprob: -14.50011920928955
    10. '.ant' → logprob: -15.25011920928955

Token 1136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889242470264435
    2. '=' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.953892707824707
    4. ' =
' → logprob: -14.203892707824707
    5. ')' → logprob: -15.578892707824707
    6. ',' → logprob: -15.703892707824707
    7. '>' → logprob: -15.703892707824707
    8. '_' → logprob: -15.953892707824707
    9. ' =
' → logprob: -16.20389175415039
    10. 's' → logprob: -16.20389175415039

Token 1137: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.505351095460355e-05
    2. ' b' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '	b' → logprob: -20.12507438659668
    5. ' ' → logprob: -21.00007438659668
    6. '(b' → logprob: -22.62507438659668
    7. '  ' → logprob: -23.25007438659668
    8. '     ' → logprob: -23.62507438659668
    9. '       ' → logprob: -24.12507438659668
    10. '    ' → logprob: -24.25007438659668

Token 1138: '*b' (ID: 72162)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.40986984968185425
    2. '*b' → logprob: -1.159869909286499
    3. '*' → logprob: -3.784869909286499
    4. '***' → logprob: -12.534870147705078
    5. '```' → logprob: -12.534870147705078
    6. ' *' → logprob: -12.784870147705078
    7. '*c' → logprob: -12.909870147705078
    8. '*d' → logprob: -13.034870147705078
    9. '*object' → logprob: -13.159870147705078
    10. 'b' → logprob: -13.284870147705078

Token 1139: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34847119450569153
    2. '-' → logprob: -1.2234711647033691
    3. '<|end|>' → logprob: -10.723471641540527
    4. '   ' → logprob: -13.598471641540527
    5. ')' → logprob: -13.973471641540527
    6. '```' → logprob: -14.973471641540527
    7. '<|end|>' → logprob: -14.973471641540527
    8. ' ' → logprob: -15.348471641540527
    9. 'import' → logprob: -15.348471641540527
    10. '+' → logprob: -15.973471641540527

Token 1140: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '(' → logprob: -15.500001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '
' → logprob: -19.250001907348633
    7. '۴' → logprob: -19.625001907348633
    8. '<|end|>' → logprob: -20.250001907348633
    9. '' → logprob: -20.375001907348633
    10. '-' → logprob: -20.375001907348633

Token 1141: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '(' → logprob: -16.75
    4. '۴' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. '   ' → logprob: -21.0
    7. '٤' → logprob: -21.5
    8. '' → logprob: -21.875
    9. '４' → logprob: -22.0
    10. '44' → logprob: -22.625

Token 1142: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.5799271464347839
    2. '*' → logprob: -0.8299271464347839
    3. 'a' → logprob: -6.20492696762085
    4. ' *' → logprob: -6.32992696762085
    5. '*c' → logprob: -9.454927444458008
    6. ' a' → logprob: -10.454927444458008
    7. '<|end|>' → logprob: -10.579927444458008
    8. '**' → logprob: -10.704927444458008
    9. '*object' → logprob: -11.954927444458008
    10. '*
' → logprob: -12.579927444458008

Token 1143: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.25215932726860046
    2. '*' → logprob: -1.5021593570709229
    3. ' *' → logprob: -8.502159118652344
    4. '**' → logprob: -11.252159118652344
    5. 'c' → logprob: -13.002159118652344
    6. '*object' → logprob: -13.377159118652344
    7. '*a' → logprob: -13.377159118652344
    8. '*C' → logprob: -13.377159118652344
    9. '*b' → logprob: -13.752159118652344
    10. '*q' → logprob: -13.752159118652344

Token 1144: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.561902642250061
    2. '   ' → logprob: -1.186902642250061
    3. '\n' → logprob: -2.9369025230407715
    4. ':' → logprob: -4.9369025230407715
    5. '=' → logprob: -4.9369025230407715
    6. '```' → logprob: -5.0619025230407715
    7. ')' → logprob: -5.1869025230407715
    8. '\' → logprob: -5.1869025230407715
    9. '<|end|>' → logprob: -5.1869025230407715
    10. ',' → logprob: -5.3119025230407715

Token 1146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005429289303719997
    2. '       ' → logprob: -5.380429267883301
    3. ' if' → logprob: -7.130429267883301
    4. '   ' → logprob: -12.1304292678833
    5. '	if' → logprob: -13.3804292678833
    6. ';if' → logprob: -14.2554292678833
    7. '```' → logprob: -15.3804292678833
    8. 'If' → logprob: -15.5054292678833
    9. ' ' → logprob: -16.005430221557617
    10. 'i' → logprob: -16.005430221557617

Token 1147: ' discrimin' (ID: 50254)
  Prédit: ' discrimin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' discrimin' → logprob: -0.12694816291332245
    2. 'dis' → logprob: -2.126948118209839
    3. '(dis' → logprob: -11.376948356628418
    4. ' discr' → logprob: -12.126948356628418
    5. ' ' → logprob: -13.876948356628418
    6. ' dis' → logprob: -14.001948356628418
    7. '	dis' → logprob: -14.001948356628418
    8. ' discriminate' → logprob: -16.1269474029541
    9. '_dis' → logprob: -16.2519474029541
    10. ' discriminator' → logprob: -16.8769474029541

Token 1148: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.5094070477061905e-05
    2. 'a' → logprob: -11.250015258789062
    3. '>' → logprob: -13.750015258789062
    4. 'an' → logprob: -15.000015258789062
    5. 'in' → logprob: -15.125015258789062
    6. '_ant' → logprob: -16.500015258789062
    7. 'ант' → logprob: -16.750015258789062
    8. 'tant' → logprob: -16.875015258789062
    9. 'iant' → logprob: -16.875015258789062
    10. ' ant' → logprob: -17.000015258789062

Token 1149: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.043302662670612335
    2. '<' → logprob: -3.1683027744293213
    3. ' >=' → logprob: -8.793302536010742
    4. ' >' → logprob: -9.793302536010742
    5. '>' → logprob: -9.918302536010742
    6. '[' → logprob: -10.543302536010742
    7. '>=' → logprob: -11.418302536010742
    8. '=' → logprob: -13.293302536010742
    9. ' <=' → logprob: -13.293302536010742
    10. ' <
' → logprob: -13.293302536010742

Token 1150: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0298537015914917
    2. '-' → logprob: -3.5298538208007812
    3. ' ' → logprob: -9.779853820800781
    4. ' -' → logprob: -10.404853820800781
    5. '-E' → logprob: -11.029853820800781
    6. 'EPS' → logprob: -16.52985382080078
    7. '(' → logprob: -18.52985382080078
    8. '-s' → logprob: -18.52985382080078
    9. '```' → logprob: -19.02985382080078
    10. '1' → logprob: -19.02985382080078

Token 1151: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0005476722144521773
    2. '1' → logprob: -7.625547885894775
    3. ' EPS' → logprob: -9.875547409057617
    4. 'EP' → logprob: -12.500547409057617
    5. ' ' → logprob: -12.750547409057617
    6. 'E' → logprob: -14.125547409057617
    7. '0' → logprob: -14.750547409057617
    8. 'EPT' → logprob: -15.125547409057617
    9. 'ESP' → logprob: -16.500547409057617
    10. 'ES' → logprob: -16.750547409057617

Token 1152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004284011200070381
    2. ':
' → logprob: -5.629283905029297
    3. ' or' → logprob: -8.129283905029297
    4. '       ' → logprob: -8.504283905029297
    5. ':return' → logprob: -9.254283905029297
    6. '           ' → logprob: -10.504283905029297
    7. ')' → logprob: -10.879283905029297
    8. ',' → logprob: -11.254283905029297
    9. ' :' → logprob: -11.504283905029297
    10. '   ' → logprob: -12.379283905029297

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008916140533983707
    2. 'continue' → logprob: -5.63391637802124
    3. '       ' → logprob: -6.00891637802124
    4. ' continue' → logprob: -6.13391637802124
    5. 'return' → logprob: -8.508915901184082
    6. '
' → logprob: -9.133915901184082
    7. '0' → logprob: -9.883915901184082
    8. ' return' → logprob: -9.883915901184082
    9. '```' → logprob: -10.258915901184082
    10. '               ' → logprob: -10.383915901184082

Token 1154: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01332211121916771
    2. 'return' → logprob: -4.888321876525879
    3. '       ' → logprob: -5.638321876525879
    4. 'break' → logprob: -6.888321876525879
    5. ' return' → logprob: -7.263321876525879
    6. 'continue' → logprob: -9.263321876525879
    7. ' break' → logprob: -9.638321876525879
    8. '               ' → logprob: -10.013321876525879
    9. '            
' → logprob: -10.138321876525879
    10. '```' → logprob: -10.388321876525879

Token 1155: ' Pas' (ID: 18323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16101627051830292
    2. 'break' → logprob: -1.9110162258148193
    3. '       ' → logprob: -7.411016464233398
    4. '#' → logprob: -9.536016464233398
    5. ' return' → logprob: -9.786016464233398
    6. ' break' → logprob: -10.911016464233398
    7. 'raise' → logprob: -11.161016464233398
    8. '   ' → logprob: -11.286016464233398
    9. '           ' → logprob: -12.036016464233398
    10. '```' → logprob: -12.286016464233398

Token 1156: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4011150300502777
    2. ' possible' → logprob: -1.1511150598526
    3. 'possible' → logprob: -4.7761149406433105
    4. ' d' → logprob: -5.4011149406433105
    5. '_possible' → logprob: -7.9011149406433105
    6. ' ' → logprob: -8.776115417480469
    7. 'de' → logprob: -9.151115417480469
    8. ' ' → logprob: -9.526115417480469
    9. ' poss' → logprob: -9.651115417480469
    10. ' valid' → logprob: -9.901115417480469

Token 1157: ''inter' (ID: 55731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07038029283285141
    2. 'e' → logprob: -3.820380210876465
    3. ' intersection' → logprob: -4.320380210876465
    4. 'intersection' → logprob: -4.320380210876465
    5. 'i' → logprob: -5.070380210876465
    6. ''' → logprob: -5.945380210876465
    7. ' i' → logprob: -6.570380210876465
    8. 'u' → logprob: -6.695380210876465
    9. ' 
' → logprob: -7.195380210876465
    10. 'é' → logprob: -7.320380210876465

Token 1158: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.001200827769935131
    2. 'sect' → logprob: -6.7512006759643555
    3. 'sec' → logprob: -11.876200675964355
    4. 'ection' → logprob: -12.001200675964355
    5. 'ception' → logprob: -12.501200675964355
    6. '```' → logprob: -12.501200675964355
    7. 'action' → logprob: -13.251200675964355
    8. 'se' → logprob: -13.251200675964355
    9. 's' → logprob: -14.001200675964355
    10. '
' → logprob: -14.251200675964355

Token 1159: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0346474647521973
    2. '       ' → logprob: -1.1596474647521973
    3. '\n' → logprob: -2.0346474647521973
    4. '           ' → logprob: -2.9096474647521973
    5. ':
' → logprob: -2.9096474647521973
    6. '
' → logprob: -3.5346474647521973
    7. ' continue' → logprob: -3.9096474647521973
    8. 'continue' → logprob: -4.159647464752197
    9. '   ' → logprob: -5.534647464752197
    10. ',' → logprob: -5.534647464752197

Token 1160: ' traject' (ID: 81313)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8628851175308228
    2. ' return' → logprob: -0.9878851175308228
    3. ' break' → logprob: -2.487884998321533
    4. 'return' → logprob: -2.987884998321533
    5. '           ' → logprob: -3.112884998321533
    6. 'break' → logprob: -4.612884998321533
    7. '        
' → logprob: -4.737884998321533
    8. ' ' → logprob: -5.737884998321533
    9. ' 
' → logprob: -6.737884998321533
    10. '            
' → logprob: -6.987884998321533

Token 1161: 'oire' (ID: 31141)
  Prédit: 'oire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.27751660346984863
    2. 'o' → logprob: -1.5275166034698486
    3. 'ect' → logprob: -4.6525163650512695
    4. ')' → logprob: -6.0275163650512695
    5. 'jectory' → logprob: -6.0275163650512695
    6. 'e' → logprob: -6.1525163650512695
    7. 'ector' → logprob: -6.6525163650512695
    8. 'oir' → logprob: -6.9025163650512695
    9. 'or' → logprob: -7.1525163650512695
    10. 'ject' → logprob: -7.4025163650512695

Token 1162: ' ne' (ID: 453)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7101548910140991
    2. ' break' → logprob: -1.4601548910140991
    3. '       ' → logprob: -2.0851550102233887
    4. ' ' → logprob: -3.0851550102233887
    5. ' s' → logprob: -4.210155010223389
    6. 'return' → logprob: -4.585155010223389
    7. ')' → logprob: -4.710155010223389
    8. ' continue' → logprob: -4.710155010223389
    9. ' ' → logprob: -4.835155010223389
    10. 'break' → logprob: -4.960155010223389

Token 1163: ' touche' (ID: 77303)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.035879135131836
    2. 'return' → logprob: -1.035879135131836
    3. ' return' → logprob: -1.785879135131836
    4. 'cess' → logprob: -3.035879135131836
    5. ' s' → logprob: -4.410879135131836
    6. 'pas' → logprob: -4.535879135131836
    7. 'continue' → logprob: -4.785879135131836
    8. ' continue' → logprob: -5.285879135131836
    9. ' ' → logprob: -5.910879135131836
    10. 'quit' → logprob: -6.035879135131836

Token 1164: ' plus' (ID: 2932)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3281663954257965
    2. ' pas' → logprob: -1.7031663656234741
    3. 'r' → logprob: -3.8281664848327637
    4. ' rien' → logprob: -4.078166484832764
    5. ' le' → logprob: -4.703166484832764
    6. ' aucun' → logprob: -5.203166484832764
    7. ' jamais' → logprob: -5.328166484832764
    8. ' aucune' → logprob: -5.328166484832764
    9. 'point' → logprob: -5.453166484832764
    10. ' ' → logprob: -5.578166484832764

Token 1165: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.693798542022705
    2. ' return' → logprob: -1.943798542022705
    3. '\n' → logprob: -2.193798542022705
    4. ',' → logprob: -2.568798542022705
    5. '```' → logprob: -2.693798542022705
    6. ' le' → logprob: -2.943798542022705
    7. ' rien' → logprob: -3.068798542022705
    8. '.' → logprob: -3.068798542022705
    9. ' possible' → logprob: -3.193798542022705
    10. ' ' → logprob: -3.318798542022705

Token 1166: ' cercle' (ID: 172399)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.016451556235551834
    2. 'c' → logprob: -4.141451358795166
    3. 'm' → logprob: -8.641451835632324
    4. 'circle' → logprob: -9.766451835632324
    5. ' mur' → logprob: -9.891451835632324
    6. '```' → logprob: -10.016451835632324
    7. 'cer' → logprob: -10.391451835632324
    8. ' cercle' → logprob: -10.641451835632324
    9. 'mu' → logprob: -11.391451835632324
    10. 'wall' → logprob: -12.391451835632324

Token 1167: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24319252371788025
    2. '
' → logprob: -2.493192434310913
    3. '\n' → logprob: -2.618192434310913
    4. '           ' → logprob: -3.493192434310913
    5. '```' → logprob: -4.868192672729492
    6. '.' → logprob: -5.368192672729492
    7. ',' → logprob: -5.368192672729492
    8. '        
' → logprob: -5.743192672729492
    9. '   ' → logprob: -6.618192672729492
    10. '.
' → logprob: -6.743192672729492

Token 1168: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16795575618743896
    2. '           ' → logprob: -1.917955756187439
    3. ':
' → logprob: -6.1679558753967285
    4. '
' → logprob: -6.5429558753967285
    5. '\n' → logprob: -6.9179558753967285
    6. ':' → logprob: -7.5429558753967285
    7. ',' → logprob: -7.6679558753967285
    8. ' continue' → logprob: -7.7929558753967285
    9. '               ' → logprob: -7.9179558753967285
    10. '        
' → logprob: -8.04295539855957

Token 1169: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.387874573469162
    2. 'break' → logprob: -1.1378746032714844
    3. '       ' → logprob: -7.012874603271484
    4. '           ' → logprob: -9.512874603271484
    5. ' return' → logprob: -11.387874603271484
    6. ' break' → logprob: -11.887874603271484
    7. '   ' → logprob: -12.012874603271484
    8. '	break' → logprob: -13.387874603271484
    9. '```' → logprob: -14.012874603271484
    10. '               ' → logprob: -14.387874603271484

Token 1170: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3220672607421875
    2. 'break' → logprob: -1.3220672607421875
    3. '       ' → logprob: -5.1970672607421875
    4. '           ' → logprob: -6.0720672607421875
    5. ' return' → logprob: -7.4470672607421875
    6. ' break' → logprob: -8.072067260742188
    7. '   ' → logprob: -11.322067260742188
    8. '```' → logprob: -11.697067260742188
    9. '	break' → logprob: -12.947067260742188
    10. 'raise' → logprob: -13.197067260742188

Token 1171: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4147742986679077
    2. 'return' → logprob: -1.4147742986679077
    3. 'break' → logprob: -1.6647742986679077
    4. ' break' → logprob: -1.7897742986679077
    5. '       ' → logprob: -2.4147744178771973
    6. '   ' → logprob: -3.9147744178771973
    7. ' 
' → logprob: -4.164774417877197
    8. '
' → logprob: -4.539774417877197
    9. '    ' → logprob: -5.414774417877197
    10. ' ' → logprob: -5.414774417877197

Token 1172: ''' (ID: 6)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7882310152053833
    2. 'eturn' → logprob: -1.5382310152053833
    3. 'r' → logprob: -2.1632308959960938
    4. '   ' → logprob: -2.6632308959960938
    5. 'e' → logprob: -3.0382308959960938
    6. 'return' → logprob: -3.4132308959960938
    7. ' ' → logprob: -4.163230895996094
    8. ' r' → logprob: -4.288230895996094
    9. '       ' → logprob: -4.663230895996094
    10. ' e' → logprob: -5.663230895996094

Token 1173: 'atte' (ID: 23975)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7227098941802979
    2. 'return' → logprob: -1.0977098941802979
    3. 'e' → logprob: -1.8477098941802979
    4. ' return' → logprob: -4.722709655761719
    5. 'eturn' → logprob: -5.222709655761719
    6. 'break' → logprob: -5.347709655761719
    7. 'ret' → logprob: -6.222709655761719
    8. ' r' → logprob: -7.472709655761719
    9. '
' → logprob: -7.722709655761719
    10. ' break' → logprob: -8.347709655761719

Token 1174: 'int' (ID: 491)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.6056042313575745
    2. 'indra' → logprob: -1.2306041717529297
    3. 'int' → logprob: -2.4806041717529297
    4. 'i' → logprob: -3.2306041717529297
    5. 'nd' → logprob: -4.23060417175293
    6. 't' → logprob: -4.85560417175293
    7. 'inte' → logprob: -5.35560417175293
    8. 'n' → logprob: -5.48060417175293
    9. 'indt' → logprob: -6.73060417175293
    10. '
' → logprob: -6.85560417175293

Token 1175: ' donc' (ID: 14206)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.015969736501574516
    2. ' pas' → logprob: -4.640969753265381
    3. 's' → logprob: -5.640969753265381
    4. ' ' → logprob: -7.140969753265381
    5. 'pas' → logprob: -7.515969753265381
    6. ' rien' → logprob: -7.765969753265381
    7. 'r' → logprob: -8.390969276428223
    8. 'ent' → logprob: -9.515969276428223
    9. 'ront' → logprob: -9.640969276428223
    10. '   ' → logprob: -9.765969276428223

Token 1176: ' pas' (ID: 2173)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2983000874519348
    2. 'pas' → logprob: -1.67330002784729
    3. ' rien' → logprob: -3.42330002784729
    4. 'ra' → logprob: -4.798300266265869
    5. ' pas' → logprob: -4.923300266265869
    6. 'plus' → logprob: -4.923300266265869
    7. 'return' → logprob: -5.048300266265869
    8. ' jamais' → logprob: -5.798300266265869
    9. 'im' → logprob: -6.548300266265869
    10. ' plus' → logprob: -6.798300266265869

Token 1177: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2552210092544556
    2. 'return' → logprob: -1.3802210092544556
    3. ' return' → logprob: -1.7552210092544556
    4. ' None' → logprob: -2.255220890045166
    5. '```' → logprob: -3.505220890045166
    6. ' le' → logprob: -3.755220890045166
    7. 'inue' → logprob: -4.005220890045166
    8. ''' → logprob: -4.130220890045166
    9. ' break' → logprob: -4.380220890045166
    10. ' the' → logprob: -4.880220890045166

Token 1178: ' cible' (ID: 136857)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.05295350030064583
    2. 'c' → logprob: -3.6779534816741943
    3. 'distance' → logprob: -3.9279534816741943
    4. 'origine' → logprob: -7.052953720092773
    5. 'destination' → logprob: -7.177953720092773
    6. 'return' → logprob: -7.177953720092773
    7. 'target' → logprob: -7.302953720092773
    8. 'dist' → logprob: -7.302953720092773
    9. 'd' → logprob: -7.302953720092773
    10. 'fin' → logprob: -7.427953720092773

Token 1179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06223733723163605
    2. '           ' → logprob: -3.68723726272583
    3. '
' → logprob: -4.18723726272583
    4. '\n' → logprob: -4.56223726272583
    5. '        
' → logprob: -5.56223726272583
    6. '   ' → logprob: -6.56223726272583
    7. ',' → logprob: -7.31223726272583
    8. '.' → logprob: -7.31223726272583
    9. '               ' → logprob: -7.43723726272583
    10. '```' → logprob: -8.062237739562988

Token 1180: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2892681062221527
    2. '           ' → logprob: -2.0392680168151855
    3. '
' → logprob: -2.2892680168151855
    4. '\n' → logprob: -4.4142680168151855
    5. '        
' → logprob: -6.1642680168151855
    6. '    
' → logprob: -6.9142680168151855
    7. '   ' → logprob: -6.9142680168151855
    8. ' 
' → logprob: -7.2892680168151855
    9. '               ' → logprob: -7.4142680168151855
    10. '```' → logprob: -7.6642680168151855

Token 1181: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.031007660552859306
    2. 'break' (adapté à ' break') → logprob: -3.531007766723633
    3. '       ' → logprob: -6.906007766723633
    4. ' return' → logprob: -8.906007766723633
    5. '```' → logprob: -9.656007766723633
    6. '           ' → logprob: -10.281007766723633
    7. '   ' → logprob: -11.656007766723633
    8. ' break' → logprob: -12.156007766723633
    9. '
' → logprob: -12.781007766723633
    10. '        
' → logprob: -13.906007766723633

Token 1182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06266872584819794
    2. '
' → logprob: -3.687668800354004
    3. '   ' → logprob: -4.187668800354004
    4. '        
' → logprob: -4.562668800354004
    5. '    
' → logprob: -5.937668800354004
    6. '\n' → logprob: -6.062668800354004
    7. '  
' → logprob: -6.187668800354004
    8. '<|end|>' → logprob: -7.062668800354004
    9. '```' → logprob: -7.562668800354004
    10. 'if' → logprob: -8.687668800354004

Token 1183: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6974121928215027
    2. '       ' → logprob: -0.6974121928215027
    3. '\n' → logprob: -6.947412014007568
    4. '        
' → logprob: -6.947412014007568
    5. '
' → logprob: -7.072412014007568
    6. '```' → logprob: -8.072412490844727
    7. '\
' → logprob: -8.447412490844727
    8. '' → logprob: -8.822412490844727
    9. ' 
' → logprob: -9.322412490844727
    10. '\' → logprob: -9.322412490844727

Token 1184: ' discrimin' (ID: 50254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0488399975001812
    2. 'sqrt' → logprob: -3.923840045928955
    3. 'dis' → logprob: -3.923840045928955
    4. 'if' → logprob: -5.048840045928955
    5. 'elif' → logprob: -7.423840045928955
    6. 'd' → logprob: -8.173839569091797
    7. ' sqrt' → logprob: -8.548839569091797
    8. 'import' → logprob: -8.798839569091797
    9. ' if' → logprob: -9.048839569091797
    10. 's' → logprob: -9.173839569091797

Token 1185: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -3.531315314830863e-06
    2. ' ant' → logprob: -13.875003814697266
    3. '
' → logprob: -15.000003814697266
    4. '=' → logprob: -15.250003814697266
    5. 'iant' → logprob: -15.250003814697266
    6. 'a' → logprob: -15.375003814697266
    7. 'ант' → logprob: -15.375003814697266
    8. '_ant' → logprob: -15.375003814697266
    9. '>' → logprob: -15.875003814697266
    10. '   ' → logprob: -16.125003814697266

Token 1186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142552256584167
    2. ' =' → logprob: -1.701425552368164
    3. 's' → logprob: -11.826425552368164
    4. '_s' → logprob: -12.826425552368164
    5. '=s' → logprob: -13.951425552368164
    6. '_=' → logprob: -14.951425552368164
    7. '=Math' → logprob: -15.201425552368164
    8. '=max' → logprob: -16.076425552368164
    9. '>' → logprob: -16.201425552368164
    10. '_' → logprob: -16.576425552368164

Token 1187: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010656666941940784
    2. ' max' → logprob: -4.760656833648682
    3. '0' → logprob: -6.510656833648682
    4. 'math' → logprob: -7.510656833648682
    5. ' math' → logprob: -12.260656356811523
    6. ' ' → logprob: -14.510656356811523
    7. '(max' → logprob: -17.010656356811523
    8. 'min' → logprob: -17.010656356811523
    9. '	max' → logprob: -17.135656356811523
    10. 'abs' → logprob: -17.135656356811523

Token 1188: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03829393535852432
    2. '(dis' → logprob: -3.2882938385009766
    3. '0' → logprob: -8.288293838500977
    4. 'dis' → logprob: -14.163293838500977
    5. '(
' → logprob: -15.663293838500977
    6. '(d' → logprob: -17.788293838500977
    7. ' (' → logprob: -17.913293838500977
    8. '```' → logprob: -18.663293838500977
    9. '	dis' → logprob: -18.788293838500977
    10. '(dist' → logprob: -19.038293838500977

Token 1189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04860122874379158
    2. 'dis' → logprob: -3.0486011505126953
    3. '(dis' → logprob: -11.548601150512695
    4. ' ' → logprob: -13.423601150512695
    5. ' discrimin' → logprob: -13.673601150512695
    6. 'disc' → logprob: -14.548601150512695
    7. '(' → logprob: -14.673601150512695
    8. '	dis' → logprob: -15.048601150512695
    9. '-dis' → logprob: -16.048601150512695
    10. 'discard' → logprob: -16.173601150512695

Token 1190: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031827057246118784
    2. '.' → logprob: -5.753182888031006
    3. ' ,' → logprob: -13.128182411193848
    4. ',
' → logprob: -13.753182411193848
    5. ',d' → logprob: -14.378182411193848
    6. '.,' → logprob: -14.878182411193848
    7. ',b' → logprob: -15.128182411193848
    8. ',float' → logprob: -15.128182411193848
    9. ',double' → logprob: -16.003183364868164
    10. '0' → logprob: -16.003183364868164

Token 1191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. ')' → logprob: -20.875
    4. '000' → logprob: -21.75
    5. ',' → logprob: -22.375
    6. '**' → logprob: -22.875
    7. ' ' → logprob: -23.0
    8. '   ' → logprob: -23.375
    9. '[' → logprob: -23.5
    10. 'dis' → logprob: -23.625

Token 1192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001987722353078425
    2. ')' → logprob: -9.625198364257812
    3. ' ,' → logprob: -9.625198364257812
    4. ',
' → logprob: -9.875198364257812
    5. '**' → logprob: -12.875198364257812
    6. ',s' → logprob: -13.125198364257812
    7. ',d' → logprob: -13.625198364257812
    8. ',float' → logprob: -13.625198364257812
    9. '<|end|>' → logprob: -13.750198364257812
    10. '),' → logprob: -13.750198364257812

Token 1193: ' discrimin' (ID: 50254)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2544718384742737
    2. 'dis' → logprob: -1.504471778869629
    3. ' math' → logprob: -6.004471778869629
    4. ' discrimin' → logprob: -9.754471778869629
    5. '(math' → logprob: -11.754471778869629
    6. '(dis' → logprob: -13.254471778869629
    7. ')' → logprob: -13.254471778869629
    8. 'sqrt' → logprob: -14.879471778869629
    9. ' ' → logprob: -15.129471778869629
    10. '-dis' → logprob: -15.129471778869629

Token 1194: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.9361264946837764e-07
    2. '-ant' → logprob: -17.375
    3. '.ant' → logprob: -17.75
    4. ' ant' → logprob: -18.0
    5. '_ant' → logprob: -18.375
    6. 'ANT' → logprob: -18.625
    7. 'nant' → logprob: -19.25
    8. '   ' → logprob: -19.375
    9. ''ant' → logprob: -19.5
    10. 'tant' → logprob: -19.75

Token 1195: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02130258083343506
    2. ')**' → logprob: -4.146302700042725
    3. ')
' → logprob: -5.896302700042725
    4. '   ' → logprob: -7.021302700042725
    5. '       ' → logprob: -7.146302700042725
    6. '**' → logprob: -7.271302700042725
    7. ' )' → logprob: -9.271302223205566
    8. ')
' → logprob: -11.396302223205566
    9. '```' → logprob: -12.271302223205566
    10. ')

' → logprob: -12.771302223205566

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1871757060289383
    2. 'sqrt' → logprob: -2.437175750732422
    3. 't' → logprob: -2.562175750732422
    4. 's' → logprob: -5.687175750732422
    5. 'd' → logprob: -6.937175750732422
    6. '```' → logprob: -7.437175750732422
    7. 'delta' → logprob: -8.187175750732422
    8. '   ' → logprob: -8.187175750732422
    9. ' sqrt' → logprob: -8.812175750732422
    10. '.sqrt' → logprob: -9.937175750732422

Token 1197: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' (adapté à ' sqrt') → logprob: -0.014445070177316666
    2. 't' → logprob: -4.3894453048706055
    3. 'sq' → logprob: -6.6394453048706055
    4. 'root' → logprob: -8.389445304870605
    5. 'dis' → logprob: -9.389445304870605
    6. '   ' → logprob: -9.514445304870605
    7. 'd' → logprob: -9.889445304870605
    8. ' sqrt' → logprob: -10.139445304870605
    9. 'sol' → logprob: -10.639445304870605
    10. 'delta' → logprob: -10.639445304870605

Token 1198: '_disc' (ID: 147927)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5452478528022766
    2. '(' → logprob: -0.9202478528022766
    3. '_disc' → logprob: -4.170248031616211
    4. '_dis' → logprob: -5.295248031616211
    5. '(dis' → logprob: -7.795248031616211
    6. '_d' → logprob: -8.045248031616211
    7. '(
' → logprob: -8.920248031616211
    8. 'd' → logprob: -8.920248031616211
    9. '_val' → logprob: -8.920248031616211
    10. 'dis' → logprob: -9.545248031616211

Token 1199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8131337761878967
    2. ' =' → logprob: -0.9381337761878967
    3. ')' → logprob: -1.813133716583252
    4. ')=' → logprob: -7.438133716583252
    5. '   ' → logprob: -7.938133716583252
    6. ',' → logprob: -8.18813419342041
    7. '_' → logprob: -8.31313419342041
    8. '*' → logprob: -9.18813419342041
    9. ' )' → logprob: -9.43813419342041
    10. '(' → logprob: -10.06313419342041

Token 1200: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0380416102707386
    2. ' math' → logprob: -3.288041591644287
    3. '(math' → logprob: -16.663042068481445
    4. 'Math' → logprob: -19.913042068481445
    5. ' ' → logprob: -21.288042068481445
    6. '.math' → logprob: -21.288042068481445
    7. '   ' → logprob: -21.538042068481445
    8. '/math' → logprob: -21.663042068481445
    9. '_math' → logprob: -22.038042068481445
    10. 'mat' → logprob: -22.413042068481445

Token 1201: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.3869076669216156
    2. '.' → logprob: -1.136907696723938
    3. '.Sqrt' → logprob: -10.636907577514648
    4. '.s' → logprob: -11.511907577514648
    5. 'sqrt' → logprob: -13.386907577514648
    6. ' .' → logprob: -15.636907577514648
    7. '.pow' → logprob: -15.886907577514648
    8. '‌.' → logprob: -15.886907577514648
    9. '.c' → logprob: -16.63690757751465
    10. '.ceil' → logprob: -16.76190757751465

Token 1202: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -7.5649528298527e-05
    2. 'dis' → logprob: -9.500075340270996
    3. '(' → logprob: -14.125075340270996
    4. '(d' → logprob: -18.875076293945312
    5. '	dis' → logprob: -19.500076293945312
    6. ' discrimin' → logprob: -20.125076293945312
    7. '/dis' → logprob: -20.375076293945312
    8. '_dis' → logprob: -20.375076293945312
    9. '(
' → logprob: -20.500076293945312
    10. 'disc' → logprob: -20.875076293945312

Token 1203: 'crimin' (ID: 67747)
  Prédit: 'crimin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crimin' → logprob: -0.00043448375072330236
    2. 'r' → logprob: -8.250434875488281
    3. 'ermin' → logprob: -9.625434875488281
    4. 'cr' → logprob: -11.000434875488281
    5. 'c' → logprob: -11.500434875488281
    6. ')' → logprob: -11.625434875488281
    7. 'min' → logprob: -11.625434875488281
    8. 'ant' → logprob: -11.750434875488281
    9. 'er' → logprob: -11.750434875488281
    10. '[' → logprob: -11.750434875488281

Token 1204: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00024037064576987177
    2. 'in' → logprob: -8.625240325927734
    3. 'nant' → logprob: -10.625240325927734
    4. ')' → logprob: -11.500240325927734
    5. 'imin' → logprob: -12.375240325927734
    6. 'ent' → logprob: -12.875240325927734
    7. 'ermin' → logprob: -12.875240325927734
    8. 'int' → logprob: -12.875240325927734
    9. 'crimin' → logprob: -12.875240325927734
    10. '
' → logprob: -13.000240325927734

Token 1205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. ' )' → logprob: -11.000020027160645
    3. ')
' → logprob: -13.000020027160645
    4. '       ' → logprob: -14.625020027160645
    5. ')return' → logprob: -16.375019073486328
    6. '   ' → logprob: -16.750019073486328
    7. ')#' → logprob: -17.375019073486328
    8. ')t' → logprob: -17.375019073486328
    9. '),' → logprob: -17.500019073486328
    10. ')}' → logprob: -17.500019073486328

Token 1206: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07378477603197098
    2. '       ' → logprob: -2.698784828186035
    3. ' t' → logprob: -5.823784828186035
    4. '```' → logprob: -7.698784828186035
    5. 'd' → logprob: -8.948784828186035
    6. '`t' → logprob: -9.448784828186035
    7. '``' → logprob: -10.198784828186035
    8. 's' → logprob: -10.698784828186035
    9. '#' → logprob: -11.073784828186035
    10. '`' → logprob: -11.323784828186035

Token 1207: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -7.896309739408025e-07
    2. ' t' → logprob: -14.875000953674316
    3. '#' → logprob: -16.0
    4. '   ' → logprob: -16.5
    5. '```' → logprob: -17.125
    6. 'root' → logprob: -17.25
    7. 'sol' → logprob: -17.5
    8. '`t' → logprob: -18.25
    9. '       ' → logprob: -18.625
    10. '(-' → logprob: -18.75

Token 1208: '_candidates' (ID: 186937)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1863739490509033
    2. 's' → logprob: -1.4363739490509033
    3. '_candidates' → logprob: -1.4363739490509033
    4. '_' → logprob: -2.0613739490509033
    5. ' =' → logprob: -3.6863739490509033
    6. '=' → logprob: -3.8113739490509033
    7. '_=' → logprob: -4.936373710632324
    8. '_tokens' → logprob: -5.186373710632324
    9. '_min' → logprob: -5.186373710632324
    10. '0' → logprob: -5.311373710632324

Token 1209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687923550605774
    2. ' =' → logprob: -1.1368792057037354
    3. '=[]' → logprob: -12.886878967285156
    4. 's' → logprob: -13.386878967285156
    5. '=[' → logprob: -13.386878967285156
    6. ' =[' → logprob: -14.136878967285156
    7. ':' → logprob: -14.511878967285156
    8. '[' → logprob: -14.761878967285156
    9. '_' → logprob: -15.511878967285156
    10. '＝' → logprob: -16.011878967285156

Token 1210: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5687985420227051
    2. '[]
' → logprob: -1.068798542022705
    3. '[' → logprob: -2.818798542022705
    4. '[t' → logprob: -3.568798542022705
    5. '[]

' → logprob: -6.943798542022705
    6. '[
' → logprob: -7.318798542022705
    7. '[x' → logprob: -8.318798065185547
    8. '[a' → logprob: -9.068798065185547
    9. '[i' → logprob: -9.318798065185547
    10. '[(' → logprob: -9.443798065185547

Token 1211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5783054232597351
    2. 'for' → logprob: -1.9533054828643799
    3. '[' → logprob: -2.20330548286438
    4. '[
' → logprob: -2.45330548286438
    5. 'if' → logprob: -2.95330548286438
    6. ' for' → logprob: -4.203305244445801
    7. 't' → logprob: -4.453305244445801
    8. ' if' → logprob: -4.703305244445801
    9. ' t' → logprob: -5.828305244445801
    10. ',' → logprob: -5.953305244445801

Token 1212: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.003611355321481824
    2. 'for' → logprob: -5.7536115646362305
    3. 'if' → logprob: -9.37861156463623
    4. ' t' → logprob: -9.50361156463623
    5. 'tx' → logprob: -9.62861156463623
    6. 'td' → logprob: -10.00361156463623
    7. 'tmp' → logprob: -11.00361156463623
    8. 'root' → logprob: -11.00361156463623
    9. ' for' → logprob: -11.25361156463623
    10. '       ' → logprob: -11.50361156463623

Token 1213: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.843555748462677
    2. '_candidates' → logprob: -0.968555748462677
    3. '1' → logprob: -2.4685556888580322
    4. 's' → logprob: -2.9685556888580322
    5. '_=' → logprob: -3.8435556888580322
    6. '=' → logprob: -4.593555927276611
    7. '_tokens' → logprob: -4.843555927276611
    8. '_c' → logprob: -5.843555927276611
    9. 't' → logprob: -5.968555927276611
    10. '0' → logprob: -6.968555927276611

Token 1214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3041311204433441
    2. '1' → logprob: -1.6791311502456665
    3. 'pp' → logprob: -3.554131031036377
    4. ' =' → logprob: -3.804131031036377
    5. 'ns' → logprob: -5.304131031036377
    6. '=[]' → logprob: -5.304131031036377
    7. 's' → logprob: -5.679131031036377
    8. 'p' → logprob: -6.054131031036377
    9. 'n' → logprob: -6.554131031036377
    10. '+=' → logprob: -6.679131031036377

Token 1215: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -5.080963092041202e-06
    2. '((-' → logprob: -13.000004768371582
    3. ' (-' → logprob: -13.125004768371582
    4. '(' → logprob: -14.875004768371582
    5. '   ' → logprob: -14.875004768371582
    6. '(-(' → logprob: -17.1250057220459
    7. ' ' → logprob: -17.8750057220459
    8. '=(-' → logprob: -18.2500057220459
    9. '(None' → logprob: -19.3750057220459
    10. 'None' → logprob: -19.6250057220459

Token 1216: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -15.875
    3. '   ' → logprob: -19.5
    4. '(b' → logprob: -20.25
    5. ')b' → logprob: -20.375
    6. '	b' → logprob: -20.75
    7. '       ' → logprob: -21.625
    8. '_b' → logprob: -21.625
    9. ' ' → logprob: -22.0
    10. 'B' → logprob: -23.0

Token 1217: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42145028710365295
    2. ' -' → logprob: -1.4214502573013306
    3. '+' → logprob: -2.42145037651062
    4. '-' → logprob: -4.296450138092041
    5. ' ' → logprob: -9.2964506149292
    6. '```' → logprob: -11.5464506149292
    7. ' plus' → logprob: -11.6714506149292
    8. '1' → logprob: -11.7964506149292
    9. ' +
' → logprob: -12.7964506149292
    10. '2' → logprob: -13.4214506149292

Token 1218: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.0005146674811840057
    2. ' sqrt' → logprob: -7.625514507293701
    3. 'math' → logprob: -10.87551498413086
    4. '2' → logprob: -12.25051498413086
    5. '<|end|>' → logprob: -13.75051498413086
    6. '.sqrt' → logprob: -14.37551498413086
    7. ' ' → logprob: -14.62551498413086
    8. 's' → logprob: -15.75051498413086
    9. 'cmath' → logprob: -15.75051498413086
    10. '1' → logprob: -15.87551498413086

Token 1219: '_disc' (ID: 147927)
  Prédit: '_disc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_disc' → logprob: -0.0017290873220190406
    2. 'disc' → logprob: -6.3767290115356445
    3. 'b' → logprob: -11.751729011535645
    4. '(' → logprob: -11.876729011535645
    5. '(b' → logprob: -13.001729011535645
    6. 'd' → logprob: -13.001729011535645
    7. 't' → logprob: -13.626729011535645
    8. '-disc' → logprob: -13.751729011535645
    9. '_dis' → logprob: -14.001729011535645
    10. 'Disc' → logprob: -14.126729011535645

Token 1220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09253130108118057
    2. ')/(' → logprob: -2.467531204223633
    3. ' /' → logprob: -6.217531204223633
    4. ' )' → logprob: -7.342531204223633
    5. '/' → logprob: -7.967531204223633
    6. ')/' → logprob: -8.217531204223633
    7. '/(' → logprob: -8.217531204223633
    8. '[' → logprob: -10.467531204223633
    9. '*' → logprob: -11.842531204223633
    10. '   ' → logprob: -12.467531204223633

Token 1221: ' /' (ID: 820)
  Prédit: '/('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/(' → logprob: -0.38579896092414856
    2. ' /' → logprob: -1.5107989311218262
    3. '/' → logprob: -2.510798931121826
    4. ')/(' → logprob: -4.135798931121826
    5. ')' → logprob: -6.385798931121826
    6. ' /(' → logprob: -8.135799407958984
    7. ')/' → logprob: -9.135799407958984
    8. '/a' → logprob: -10.010799407958984
    9. ' /
' → logprob: -11.885799407958984
    10. '/
' → logprob: -12.010799407958984

Token 1222: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -13.375001907348633
    3. '2' → logprob: -19.250001907348633
    4. '(None' → logprob: -22.125001907348633
    5. '(int' → logprob: -22.375001907348633
    6. '(two' → logprob: -22.375001907348633
    7. '(
' → logprob: -22.500001907348633
    8. '(float' → logprob: -22.500001907348633
    9. '((' → logprob: -22.750001907348633
    10. '   ' → logprob: -23.750001907348633

Token 1223: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.25
    3. '2' → logprob: -17.875
    4. '(
' → logprob: -23.25
    5. '   ' → logprob: -24.125
    6. ' ' → logprob: -24.875
    7. '（' → logprob: -25.0
    8. '[' → logprob: -25.25
    9. '{' → logprob: -25.5
    10. '(two' → logprob: -25.875

Token 1224: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.0010429323883727193
    2. '*' → logprob: -7.00104284286499
    3. 'a' → logprob: -9.001043319702148
    4. ' *' → logprob: -11.751043319702148
    5. ' a' → logprob: -16.62604331970215
    6. '*
' → logprob: -16.87604331970215
    7. '*A' → logprob: -17.12604331970215
    8. '*object' → logprob: -17.12604331970215
    9. '*u' → logprob: -17.25104331970215
    10. '.' → logprob: -17.25104331970215

Token 1225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003713976824656129
    2. ')
' → logprob: -6.003714084625244
    3. '<|end|>' → logprob: -6.753714084625244
    4. ' )' → logprob: -10.503713607788086
    5. '<|end|>' → logprob: -10.878713607788086
    6. ',' → logprob: -12.503713607788086
    7. '       ' → logprob: -12.753713607788086
    8. ')t' → logprob: -12.878713607788086
    9. 'if' → logprob: -13.128713607788086
    10. '),' → logprob: -13.128713607788086

Token 1226: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3966200053691864
    2. ',
' → logprob: -2.271620035171509
    3. '       ' → logprob: -3.396620035171509
    4. '[
' → logprob: -3.521620035171509
    5. '\n' → logprob: -3.646620035171509
    6. '\' → logprob: -3.896620035171509
    7. ',' → logprob: -3.896620035171509
    8. '<|end|>' → logprob: -4.14661979675293
    9. '[' → logprob: -4.39661979675293
    10. ' 
' → logprob: -4.64661979675293

Token 1227: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24821680784225464
    2. 't' (adapté à ' t') → logprob: -2.2482168674468994
    3. ' if' → logprob: -2.4982168674468994
    4. ' t' → logprob: -4.12321662902832
    5. ' 
' → logprob: -4.62321662902832
    6. '
' → logprob: -5.49821662902832
    7. '       ' → logprob: -7.49821662902832
    8. '  
' → logprob: -7.74821662902832
    9. '        
' → logprob: -7.87321662902832
    10. '[' → logprob: -9.62321662902832

Token 1228: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9385402993066236e-05
    2. '_a' → logprob: -11.750019073486328
    3. '_c' → logprob: -12.250019073486328
    4. '_candidates' → logprob: -12.500019073486328
    5. '_' → logprob: -13.375019073486328
    6. 'b' → logprob: -14.250019073486328
    7. '_p' → logprob: -15.750019073486328
    8. '=' → logprob: -15.875019073486328
    9. '_s' → logprob: -16.375019073486328
    10. ' _' → logprob: -16.875019073486328

Token 1229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.203889846801758
    4. ',' → logprob: -17.453889846801758
    5. ' =
' → logprob: -18.078889846801758
    6. ')' → logprob: -18.578889846801758
    7. '＝' → logprob: -19.578889846801758
    8. '	' → logprob: -20.078889846801758
    9. ' =)' → logprob: -20.328889846801758
    10. '<|end|>' → logprob: -20.578889846801758

Token 1230: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0007100477814674377
    2. ' (-' → logprob: -7.2507100105285645
    3. '(' → logprob: -16.375709533691406
    4. ' ' → logprob: -17.750709533691406
    5. '((-' → logprob: -17.875709533691406
    6. '(+' → logprob: -18.750709533691406
    7. '=(-' → logprob: -18.750709533691406
    8. '*(-' → logprob: -19.125709533691406
    9. '   ' → logprob: -19.500709533691406
    10. '  ' → logprob: -21.625709533691406

Token 1231: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.061054359131958e-06
    2. ' b' → logprob: -11.750007629394531
    3. '_b' → logprob: -16.25000762939453
    4. '-b' → logprob: -17.12500762939453
    5. 't' → logprob: -18.62500762939453
    6. ')b' → logprob: -18.62500762939453
    7. '	b' → logprob: -18.75000762939453
    8. '(b' → logprob: -19.50000762939453
    9. ')' → logprob: -20.00000762939453
    10. 'a' → logprob: -20.06250762939453

Token 1232: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17467570304870605
    2. ' +' → logprob: -1.924675703048706
    3. '+' → logprob: -4.424675941467285
    4. '-' → logprob: -6.049675941467285
    5. ' ' → logprob: -11.924675941467285
    6. ')' → logprob: -13.299675941467285
    7. ' +
' → logprob: -13.424675941467285
    8. ' )' → logprob: -15.174675941467285
    9. ' -
' → logprob: -15.799675941467285
    10. '+
' → logprob: -15.924675941467285

Token 1233: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.43063777685165405
    2. ' sqrt' → logprob: -1.1806378364562988
    3. '(' → logprob: -3.305637836456299
    4. ' (' → logprob: -5.305637836456299
    5. 'math' → logprob: -7.555637836456299
    6. '2' → logprob: -7.930637836456299
    7. ' math' → logprob: -8.30563735961914
    8. ' ' → logprob: -10.55563735961914
    9. '(s' → logprob: -11.80563735961914
    10. '(math' → logprob: -11.80563735961914

Token 1234: '_disc' (ID: 147927)
  Prédit: '_disc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_disc' → logprob: -0.0010616290383040905
    2. 'disc' → logprob: -6.87606143951416
    3. '-disc' → logprob: -10.75106143951416
    4. 'math' → logprob: -12.87606143951416
    5. 'sqrt' → logprob: -14.37606143951416
    6. '_DISC' → logprob: -14.37606143951416
    7. 'sys' → logprob: -14.62606143951416
    8. 'Disc' → logprob: -14.75106143951416
    9. '_sq' → logprob: -14.87606143951416
    10. '_math' → logprob: -15.00106143951416

Token 1235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')/' → logprob: -11.75001335144043
    3. ' )' → logprob: -13.25001335144043
    4. '[' → logprob: -13.25001335144043
    5. ')/(' → logprob: -14.12501335144043
    6. '/' → logprob: -14.25001335144043
    7. '))' → logprob: -16.00001335144043
    8. ']' → logprob: -16.50001335144043
    9. '```' → logprob: -16.75001335144043
    10. ')
' → logprob: -16.87501335144043

Token 1236: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.386995404958725
    2. '/' → logprob: -1.1369954347610474
    3. '/(' → logprob: -9.386995315551758
    4. ' /
' → logprob: -11.136995315551758
    5. ')' → logprob: -11.261995315551758
    6. '(' → logprob: -12.136995315551758
    7. ' (' → logprob: -12.886995315551758
    8. ' /(' → logprob: -13.011995315551758
    9. '/
' → logprob: -13.636995315551758
    10. '       ' → logprob: -14.886995315551758

Token 1237: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1517960956552997e-05
    2. ' (' → logprob: -11.375011444091797
    3. '(
' → logprob: -22.375011444091797
    4. '
' → logprob: -22.500011444091797
    5. '2' → logprob: -22.500011444091797
    6. '   ' → logprob: -24.000011444091797
    7. '1' → logprob: -24.125011444091797
    8. '((' → logprob: -24.250011444091797
    9. ' ' → logprob: -24.375011444091797
    10. '```' → logprob: -24.375011444091797

Token 1238: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.25
    3. '2' → logprob: -17.125
    4. '(
' → logprob: -22.0
    5. '   ' → logprob: -23.0
    6. ' ' → logprob: -23.625
    7. '```' → logprob: -24.0
    8. '`' → logprob: -24.25
    9. '0' → logprob: -24.375
    10. '1' → logprob: -24.625

Token 1239: '*a' (ID: 78448)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.250001907348633
    3. '2' → logprob: -17.750001907348633
    4. 'a' → logprob: -18.000001907348633
    5. '
' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '(
' → logprob: -19.375001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' ' → logprob: -20.625001907348633
    10. '(a' → logprob: -21.500001907348633

Token 1240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015442610019817948
    2. ')
' → logprob: -6.62654447555542
    3. '       ' → logprob: -8.501543998718262
    4. 'if' → logprob: -12.501543998718262
    5. ' if' → logprob: -12.876543998718262
    6. ')

' → logprob: -13.251543998718262
    7. '   ' → logprob: -13.376543998718262
    8. '<|end|>' → logprob: -13.876543998718262
    9. ' )' → logprob: -14.376543998718262
    10. '),' → logprob: -14.501543998718262

Token 1241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20763906836509705
    2. '
' → logprob: -1.7076390981674194
    3. '[' → logprob: -6.832639217376709
    4. '        
' → logprob: -6.832639217376709
    5. 't' → logprob: -7.582639217376709
    6. '<|end|>' → logprob: -7.582639217376709
    7. 'if' → logprob: -7.957639217376709
    8. 'newline' → logprob: -8.08263874053955
    9. ' if' → logprob: -8.33263874053955
    10. '[
' → logprob: -8.33263874053955

Token 1242: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7700597643852234
    2. 'for' → logprob: -1.2700598239898682
    3. 't' → logprob: -1.3950598239898682
    4. '       ' → logprob: -4.895059585571289
    5. ' if' → logprob: -7.770059585571289
    6. ' for' → logprob: -8.020059585571289
    7. 'valid' → logprob: -10.395059585571289
    8. ' t' → logprob: -10.770059585571289
    9. '        
' → logprob: -10.770059585571289
    10. 'c' → logprob: -10.895059585571289

Token 1243: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2537830173969269
    2. 'for' → logprob: -1.5037829875946045
    3. 't' → logprob: -6.378783226013184
    4. '       ' → logprob: -8.878783226013184
    5. ' if' → logprob: -12.003783226013184
    6. ' for' → logprob: -12.753783226013184
    7. 'c' → logprob: -12.878783226013184
    8. '        
' → logprob: -14.003783226013184
    9. 'valid' → logprob: -14.253783226013184
    10. '#' → logprob: -14.378783226013184

Token 1244: ' conserve' (ID: 72274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5789320468902588
    2. 'if' → logprob: -0.8289320468902588
    3. '
' → logprob: -6.20393180847168
    4. 't' → logprob: -7.95393180847168
    5. ' for' → logprob: -8.07893180847168
    6. ' if' → logprob: -9.57893180847168
    7. '=' → logprob: -10.45393180847168
    8. '#' → logprob: -10.45393180847168
    9. '       ' → logprob: -10.70393180847168
    10. '   ' → logprob: -10.95393180847168

Token 1245: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39762818813323975
    2. 'for' → logprob: -1.7726281881332397
    3. 'if' → logprob: -2.6476283073425293
    4. ' for' → logprob: -3.5226283073425293
    5. '[t' → logprob: -3.5226283073425293
    6. '[]' → logprob: -5.272628307342529
    7. '[i' → logprob: -5.272628307342529
    8. '       ' → logprob: -5.397628307342529
    9. 'i' → logprob: -5.522628307342529
    10. ' t' → logprob: -6.022628307342529

Token 1246: ' strict' (ID: 12035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2043343186378479
    2. ' for' → logprob: -2.204334259033203
    3. '_candidates' → logprob: -3.579334259033203
    4. 'a' → logprob: -4.204334259033203
    5. '_a' → logprob: -4.954334259033203
    6. '=' → logprob: -5.079334259033203
    7. '_c' → logprob: -5.454334259033203
    8. '.append' → logprob: -5.579334259033203
    9. 'c' → logprob: -6.204334259033203
    10. 's' → logprob: -6.579334259033203

Token 1247: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.3049459159374237
    2. '>' → logprob: -1.929945945739746
    3. 'ly' → logprob: -2.179945945739746
    4. 't' → logprob: -6.179945945739746
    5. 'if' → logprob: -7.304945945739746
    6. '[' → logprob: -7.429945945739746
    7. '0' → logprob: -8.304945945739746
    8. 'ment' → logprob: -8.429945945739746
    9. 'e' → logprob: -9.179945945739746
    10. 'ements' → logprob: -9.304945945739746

Token 1248: ' positif' (ID: 89008)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -3.214019307051785e-05
    2. ' >' → logprob: -11.125032424926758
    3. 'greater' → logprob: -12.250032424926758
    4. '+' → logprob: -12.375032424926758
    5. '>=' → logprob: -13.000032424926758
    6. '&gt' → logprob: -13.375032424926758
    7. '=' → logprob: -14.000032424926758
    8. '[' → logprob: -14.125032424926758
    9. '>
' → logprob: -14.250032424926758
    10. ')>' → logprob: -14.250032424926758

Token 1249: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0596635676920414
    2. ',' → logprob: -3.9346635341644287
    3. '<|end|>' → logprob: -4.309663772583008
    4. ' and' → logprob: -4.684663772583008
    5. ':' → logprob: -5.809663772583008
    6. ' if' → logprob: -6.059663772583008
    7. '<|end|>' → logprob: -6.934663772583008
    8. ')' → logprob: -6.934663772583008
    9. '
' → logprob: -7.059663772583008
    10. 'if' → logprob: -7.309663772583008

Token 1250: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19886243343353271
    2. ' if' → logprob: -2.5738625526428223
    3. ' t' → logprob: -3.0738625526428223
    4. 't' → logprob: -3.5738625526428223
    5. 'if' → logprob: -3.8238625526428223
    6. 'for' → logprob: -6.073862552642822
    7. '[' → logprob: -6.198862552642822
    8. ' for' → logprob: -6.323862552642822
    9. '[t' → logprob: -8.073862075805664
    10. '        
' → logprob: -8.573862075805664

Token 1251: ' cherche' (ID: 52345)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.187698632478714
    2. 'if' → logprob: -3.1876986026763916
    3. 'for' → logprob: -3.1876986026763916
    4. '+=' → logprob: -3.4376986026763916
    5. '=' → logprob: -3.8126986026763916
    6. '.extend' → logprob: -3.8126986026763916
    7. 'append' → logprob: -5.562698841094971
    8. '=[]
' → logprob: -6.687698841094971
    9. ' +=' → logprob: -6.812698841094971
    10. '_append' → logprob: -7.062698841094971

Token 1252: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20591409504413605
    2. 'le' → logprob: -2.45591402053833
    3. ' t' → logprob: -3.95591402053833
    4. 'les' → logprob: -3.95591402053833
    5. 'min' → logprob: -4.70591402053833
    6. ' le' → logprob: -4.70591402053833
    7. 'the' → logprob: -4.70591402053833
    8. 'if' → logprob: -4.95591402053833
    9. 'next' → logprob: -4.95591402053833
    10. '       ' → logprob: -5.45591402053833

Token 1253: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3611750602722168
    2. '+' → logprob: -1.6111750602722168
    3. 't' → logprob: -3.236175060272217
    4. 'min' → logprob: -3.361175060272217
    5. ' plus' → logprob: -4.361175060272217
    6. 'minimum' → logprob: -5.236175060272217
    7. 'next' → logprob: -5.861175060272217
    8. 'pro' → logprob: -7.111175060272217
    9. ' t' → logprob: -7.361175060272217
    10. 'small' → logprob: -7.611175060272217

Token 1254: ' petite' (ID: 28119)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.5432158708572388
    2. 'pet' → logprob: -1.6682158708572388
    3. 'min' → logprob: -2.668215751647949
    4. 't' → logprob: -2.793215751647949
    5. '+' → logprob: -3.168215751647949
    6. ' petite' → logprob: -4.293215751647949
    7. 'pro' → logprob: -4.543215751647949
    8. 'prox' → logprob: -4.918215751647949
    9. 'plus' → logprob: -5.543215751647949
    10. '_small' → logprob: -5.918215751647949

Token 1255: ' positive' (ID: 8841)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7043925523757935
    2. 'if' → logprob: -1.5793925523757935
    3. 'token' → logprob: -2.579392433166504
    4. ' t' → logprob: -2.704392433166504
    5. 'for' → logprob: -2.829392433166504
    6. ' if' → logprob: -3.329392433166504
    7. ' for' → logprob: -3.954392433166504
    8. '(t' → logprob: -4.579392433166504
    9. '
' → logprob: -4.704392433166504
    10. ' token' → logprob: -4.829392433166504

Token 1256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1642255187034607
    2. '
' → logprob: -2.0392255783081055
    3. '        
' → logprob: -5.2892255783081055
    4. '\n' → logprob: -5.9142255783081055
    5. 'if' → logprob: -6.1642255783081055
    6. ' if' → logprob: -6.2892255783081055
    7. 't' → logprob: -6.5392255783081055
    8. 'tokens' → logprob: -6.6642255783081055
    9. '<|end|>' → logprob: -7.1642255783081055
    10. ',' → logprob: -7.4142255783081055

Token 1257: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26058828830718994
    2. '       ' → logprob: -1.63558828830719
    3. 't' → logprob: -4.7605881690979
    4. '        
' → logprob: -4.7605881690979
    5. 'if' → logprob: -4.8855881690979
    6. '  
' → logprob: -5.8855881690979
    7. ' if' → logprob: -6.0105881690979
    8. ' 
' → logprob: -6.5105881690979
    9. '```' → logprob: -7.7605881690979
    10. 'for' → logprob: -7.8855881690979

Token 1258: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9123217463493347
    2. 't' → logprob: -1.0373218059539795
    3. 'if' → logprob: -2.0373218059539795
    4. '       ' → logprob: -2.4123218059539795
    5. ' for' → logprob: -4.5373215675354
    6. 'c' → logprob: -5.4123215675354
    7. ' if' → logprob: -5.6623215675354
    8. ' t' → logprob: -6.7873215675354
    9. 'tokens' → logprob: -6.9123215675354
    10. 'next' → logprob: -7.1623215675354

Token 1259: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.0948158382670954e-05
    2. ' t' → logprob: -11.375030517578125
    3. 'ti' → logprob: -11.375030517578125
    4. 'tt' → logprob: -12.500030517578125
    5. 'tc' → logprob: -12.500030517578125
    6. 'tp' → logprob: -15.250030517578125
    7. 'tk' → logprob: -16.125030517578125
    8. '_t' → logprob: -16.750030517578125
    9. 'tn' → logprob: -18.500030517578125
    10. '	t' → logprob: -18.625030517578125

Token 1260: '_c' (ID: 1303)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05219874903559685
    2. 'in' → logprob: -3.052198648452759
    3. '_' → logprob: -5.927198886871338
    4. '_in' → logprob: -7.427198886871338
    5. '_candidate' → logprob: -8.42719841003418
    6. '_token' → logprob: -9.80219841003418
    7. 't' → logprob: -11.17719841003418
    8. ' ' → logprob: -11.30219841003418
    9. ' _' → logprob: -11.55219841003418
    10. 'i' → logprob: -12.05219841003418

Token 1261: 'and' (ID: 427)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026565125212073326
    2. 'in' → logprob: -3.6515650749206543
    3. ' ' → logprob: -8.401565551757812
    4. 'n' → logprob: -10.651565551757812
    5. '	in' → logprob: -12.526565551757812
    6. 'i' → logprob: -12.901565551757812
    7. '_in' → logprob: -13.026565551757812
    8. '_' → logprob: -13.026565551757812
    9. ' i' → logprob: -13.276565551757812
    10. '  ' → logprob: -13.651565551757812

Token 1262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020690545439720154
    2. 'in' → logprob: -3.895690441131592
    3. ' ' → logprob: -8.89569091796875
    4. '	in' → logprob: -12.64569091796875
    5. ' i' → logprob: -13.52069091796875
    6. '  ' → logprob: -13.64569091796875
    7. 's' → logprob: -13.77069091796875
    8. 'i' → logprob: -13.89569091796875
    9. 'n' → logprob: -14.14569091796875
    10. ' ' → logprob: -14.27069091796875

Token 1263: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.03815280273556709
    2. '(t' → logprob: -3.2881526947021484
    3. '[' → logprob: -9.663152694702148
    4. '(' → logprob: -10.038152694702148
    5. 't' → logprob: -13.163152694702148
    6. ' [' → logprob: -14.163152694702148
    7. ' (' → logprob: -14.538152694702148
    8. '[(' → logprob: -14.788152694702148
    9. '([' → logprob: -15.913152694702148
    10. '[
' → logprob: -16.16315269470215

Token 1264: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.45848218582978e-06
    2. ' t' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.375001907348633
    4. '`t' → logprob: -18.125001907348633
    5. 'ta' → logprob: -18.375001907348633
    6. ' ' → logprob: -19.500001907348633
    7. '	t' → logprob: -19.500001907348633
    8. '(t' → logprob: -20.125001907348633
    9. 'tc' → logprob: -21.125001907348633
    10. '_t' → logprob: -21.375001907348633

Token 1265: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.676292231422849e-05
    2. 'a' → logprob: -11.000017166137695
    3. '_b' → logprob: -18.375017166137695
    4. '_' → logprob: -19.000017166137695
    5. '
' → logprob: -19.375017166137695
    6. '_c' → logprob: -19.750017166137695
    7. '```' → logprob: -19.750017166137695
    8. '_candidates' → logprob: -19.750017166137695
    9. '[a' → logprob: -20.000017166137695
    10. ')' → logprob: -20.250017166137695

Token 1266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008205882040783763
    2. ',t' → logprob: -7.250820636749268
    3. ',
' → logprob: -9.75082015991211
    4. ' ,' → logprob: -9.87582015991211
    5. ',b' → logprob: -16.00082015991211
    6. ',c' → logprob: -16.25082015991211
    7. ',user' → logprob: -16.25082015991211
    8. ',
' → logprob: -16.50082015991211
    9. 't' → logprob: -16.50082015991211
    10. ',T' → logprob: -16.87582015991211

Token 1267: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0052342405542731285
    2. ' t' → logprob: -5.255234241485596
    3. '   ' → logprob: -16.005233764648438
    4. ' ' → logprob: -16.005233764648438
    5. '	t' → logprob: -16.505233764648438
    6. '`t' → logprob: -16.755233764648438
    7. '_t' → logprob: -17.130233764648438
    8. 'tb' → logprob: -19.630233764648438
    9. ' ' → logprob: -20.130233764648438
    10. '  ' → logprob: -20.380233764648438

Token 1268: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.504040356958285e-05
    2. 'b' → logprob: -10.250064849853516
    3. '_c' → logprob: -10.500064849853516
    4. '_' → logprob: -13.875064849853516
    5. '_a' → logprob: -15.250064849853516
    6. '_,' → logprob: -16.000064849853516
    7. 'c' → logprob: -16.125064849853516
    8. ' _' → logprob: -16.375064849853516
    9. '
' → logprob: -16.375064849853516
    10. '```' → logprob: -16.500064849853516

Token 1269: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0900246798992157
    2. ']:' → logprob: -2.465024709701538
    3. ']' → logprob: -7.840024471282959
    4. ']:
' → logprob: -8.090024948120117
    5. '       ' → logprob: -8.840024948120117
    6. '   ' → logprob: -9.340024948120117
    7. ' ]' → logprob: -9.715024948120117
    8. ']:

' → logprob: -9.965024948120117
    9. ',' → logprob: -10.715024948120117
    10. '):
' → logprob: -12.090024948120117

Token 1270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001461427309550345
    2. '	       ' → logprob: -7.876461505889893
    3. ' if' → logprob: -8.126461029052734
    4. '       ' → logprob: -8.251461029052734
    5. 'if' → logprob: -9.376461029052734
    6. '    	' → logprob: -9.376461029052734
    7. '		' → logprob: -9.626461029052734
    8. '        ' → logprob: -9.876461029052734
    9. ' 
' → logprob: -10.251461029052734
    10. '```' → logprob: -10.251461029052734

Token 1271: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4051632583141327
    2. ' if' → logprob: -1.405163288116455
    3. 'if' (adapté à ' if') → logprob: -2.530163288116455
    4. '	       ' → logprob: -5.530163288116455
    5. '       ' → logprob: -6.030163288116455
    6. ' ' → logprob: -7.780163288116455
    7. '	if' → logprob: -8.030162811279297
    8. ' ' → logprob: -8.280162811279297
    9. '   ' → logprob: -8.655162811279297
    10. '               ' → logprob: -9.030162811279297

Token 1272: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04858771339058876
    2. ' t' → logprob: -3.0485877990722656
    3. '	t' → logprob: -15.298587799072266
    4. '   ' → logprob: -16.048587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '(t' → logprob: -18.423587799072266
    7. '`t' → logprob: -18.798587799072266
    8. '_t' → logprob: -19.548587799072266
    9. '>' → logprob: -20.298587799072266
    10. '  ' → logprob: -20.923587799072266

Token 1273: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.625
    3. '>' → logprob: -16.125
    4. 'c' → logprob: -16.875
    5. ' _' → logprob: -17.625
    6. ' >' → logprob: -19.0
    7. 't' → logprob: -19.0
    8. '[' → logprob: -19.0
    9. '   ' → logprob: -20.0
    10. '_t' → logprob: -20.0

Token 1274: 'and' (ID: 427)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16037705540657043
    2. ' >' → logprob: -1.910377025604248
    3. ' ' → logprob: -10.285377502441406
    4. '_' → logprob: -10.535377502441406
    5. ' >=' → logprob: -10.910377502441406
    6. '>=' → logprob: -11.035377502441406
    7. '[' → logprob: -11.660377502441406
    8. ')>' → logprob: -11.660377502441406
    9. '_c' → logprob: -11.785377502441406
    10. '+' → logprob: -12.035377502441406

Token 1275: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2029908150434494
    2. ' >' → logprob: -1.7029907703399658
    3. ' is' → logprob: -7.327991008758545
    4. '>=' → logprob: -7.452991008758545
    5. ' >=' → logprob: -8.077990531921387
    6. ' ' → logprob: -11.577990531921387
    7. ' and' → logprob: -12.202990531921387
    8. '&gt' → logprob: -12.577990531921387
    9. '!=' → logprob: -12.827990531921387
    10. 'is' → logprob: -13.952990531921387

Token 1276: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -7.73183855926618e-05
    2. '1' → logprob: -9.500077247619629
    3. ' EPS' → logprob: -13.125077247619629
    4. 'EP' → logprob: -15.500077247619629
    5. 'E' → logprob: -15.750077247619629
    6. ' ' → logprob: -17.625078201293945
    7. 'ESP' → logprob: -17.875078201293945
    8. 'ES' → logprob: -17.875078201293945
    9. 'EPT' → logprob: -18.000078201293945
    10. 'EOS' → logprob: -18.125078201293945

Token 1277: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015228581614792347
    2. ':' → logprob: -5.390228748321533
    3. '           ' → logprob: -5.390228748321533
    4. ':
' → logprob: -5.640228748321533
    5. 'and' → logprob: -6.265228748321533
    6. '               ' → logprob: -7.640228748321533
    7. '	and' → logprob: -10.890228271484375
    8. ',' → logprob: -11.515228271484375
    9. '		' → logprob: -12.140228271484375
    10. '<|end|>' → logprob: -12.390228271484375

Token 1278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012417788384482265
    2. '           ' → logprob: -7.126241683959961
    3. ' and' → logprob: -8.876241683959961
    4. '	           ' → logprob: -9.626241683959961
    5. ':
' → logprob: -10.251241683959961
    6. '	       ' → logprob: -10.376241683959961
    7. '		       ' → logprob: -10.376241683959961
    8. ',' → logprob: -10.626241683959961
    9. ':' → logprob: -10.626241683959961
    10. 't' → logprob: -11.376241683959961

Token 1279: ' t' (ID: 260)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5023810267448425
    2. '           ' → logprob: -1.5023810863494873
    3. 't' (adapté à ' t') → logprob: -2.2523810863494873
    4. ' t' → logprob: -2.7523810863494873
    5. '   ' → logprob: -6.252380847930908
    6. '                   ' → logprob: -7.377380847930908
    7. '       ' → logprob: -7.877380847930908
    8. '	           ' → logprob: -9.127381324768066
    9. '	       ' → logprob: -9.377381324768066
    10. '```' → logprob: -9.502381324768066

Token 1280: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.08934890478849411
    2. '_c' → logprob: -2.464348793029785
    3. '=' → logprob: -8.214348793029785
    4. '_tokens' → logprob: -10.589348793029785
    5. ' =' → logprob: -10.589348793029785
    6. 'c' → logprob: -10.839348793029785
    7. '_candidate' → logprob: -11.339348793029785
    8. 'if' → logprob: -12.089348793029785
    9. '_' → logprob: -12.089348793029785
    10. 'cand' → logprob: -12.339348793029785

Token 1281: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002506697317585349
    2. '.' → logprob: -6.002506732940674
    3. '.app' → logprob: -10.502506256103516
    4. '.ap' → logprob: -13.252506256103516
    5. ' .' → logprob: -13.752506256103516
    6. 'append' → logprob: -14.752506256103516
    7. '.Append' → logprob: -16.377506256103516
    8. '.sort' → logprob: -16.752506256103516
    9. '.insert' → logprob: -16.752506256103516
    10. '.APP' → logprob: -17.377506256103516

Token 1282: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.584861744660884e-05
    2. 't' → logprob: -10.000045776367188
    3. '(' → logprob: -14.875045776367188
    4. '(
' → logprob: -16.625045776367188
    5. '	t' → logprob: -20.125045776367188
    6. ' t' → logprob: -20.125045776367188
    7. ' (' → logprob: -20.375045776367188
    8. '((' → logprob: -22.500045776367188
    9. '[t' → logprob: -23.125045776367188
    10. 'c' → logprob: -23.250045776367188

Token 1283: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.2664456789934775e-06
    2. 'c' → logprob: -14.125000953674316
    3. 'cand' → logprob: -15.750000953674316
    4. '[c' → logprob: -16.750001907348633
    5. 't' → logprob: -17.250001907348633
    6. ')' → logprob: -17.250001907348633
    7. '_' → logprob: -17.375001907348633
    8. '[' → logprob: -17.625001907348633
    9. 'a' → logprob: -17.875001907348633
    10. '(t' → logprob: -18.125001907348633

Token 1284: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.018156616017222404
    2. '_c' → logprob: -4.0181565284729
    3. 'cand' → logprob: -12.893157005310059
    4. ')' → logprob: -13.268157005310059
    5. 'andidate' → logprob: -14.643157005310059
    6. '[' → logprob: -14.893157005310059
    7. 'ad' → logprob: -15.018157005310059
    8. 'andidates' → logprob: -15.393157005310059
    9. '_and' → logprob: -15.643157005310059
    10. '_' → logprob: -16.018156051635742

Token 1285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047964724944904447
    2. '       ' → logprob: -7.750479698181152
    3. ' )' → logprob: -10.250479698181152
    4. ')
' → logprob: -12.125479698181152
    5. ')return' → logprob: -13.250479698181152
    6. '[' → logprob: -13.875479698181152
    7. '   ' → logprob: -14.125479698181152
    8. ']' → logprob: -14.250479698181152
    9. ')

' → logprob: -14.750479698181152
    10. '<|end|>' → logprob: -14.750479698181152

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002505982294678688
    2. 'if' → logprob: -7.002505779266357
    3. ' if' → logprob: -7.877505779266357
    4. '
' → logprob: -8.627506256103516
    5. '   ' → logprob: -8.752506256103516
    6. '        
' → logprob: -8.877506256103516
    7. '```' → logprob: -8.877506256103516
    8. ')' → logprob: -9.127506256103516
    9. '.sort' → logprob: -9.252506256103516
    10. '           ' → logprob: -9.502506256103516

Token 1287: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2542054057121277
    2. 'if' (adapté à ' if') → logprob: -1.5042054653167725
    3. ' if' → logprob: -6.129205226898193
    4. '        
' → logprob: -9.754205703735352
    5. '   ' → logprob: -11.129205703735352
    6. '```' → logprob: -11.754205703735352
    7. 't' → logprob: -12.254205703735352
    8. 'next' → logprob: -13.129205703735352
    9. '	if' → logprob: -13.129205703735352
    10. ' ' → logprob: -13.254205703735352

Token 1288: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03407520800828934
    2. ' not' → logprob: -3.7840752601623535
    3. 'len' → logprob: -4.5340752601623535
    4. ' len' → logprob: -10.284074783325195
    5. '   ' → logprob: -15.909074783325195
    6. ' ' → logprob: -16.659074783325195
    7. 't' → logprob: -17.409074783325195
    8. '	not' → logprob: -17.534074783325195
    9. '(len' → logprob: -17.659074783325195
    10. '(not' → logprob: -18.034074783325195

Token 1289: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.061967913061380386
    2. ' t' → logprob: -2.8119678497314453
    3. '	t' → logprob: -15.811967849731445
    4. '(t' → logprob: -16.561967849731445
    5. ' ' → logprob: -17.186967849731445
    6. '   ' → logprob: -17.561967849731445
    7. '`t' → logprob: -17.686967849731445
    8. ' ' → logprob: -18.311967849731445
    9. ' т' → logprob: -18.311967849731445
    10. '_t' → logprob: -18.311967849731445

Token 1290: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -6.704273118884885e-07
    2. 'andidates' → logprob: -15.500000953674316
    3. '_tokens' → logprob: -16.125
    4. '_candidate' → logprob: -16.25
    5. '_' → logprob: -16.5
    6. '```' → logprob: -17.5
    7. '_c' → logprob: -17.75
    8. 'Candidates' → logprob: -17.875
    9. '
' → logprob: -17.875
    10. 's' → logprob: -18.25

Token 1291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029046086128801107
    2. ':
' → logprob: -6.002904415130615
    3. ':return' → logprob: -7.877904415130615
    4. '.' → logprob: -11.002904891967773
    5. '=' → logprob: -11.752904891967773
    6. '.append' → logprob: -12.002904891967773
    7. '<|end|>' → logprob: -12.377904891967773
    8. '[' → logprob: -12.627904891967773
    9. ' :' → logprob: -12.752904891967773
    10. '):' → logprob: -13.127904891967773

Token 1292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004601015243679285
    2. '               ' → logprob: -8.625459671020508
    3. '```' → logprob: -9.375459671020508
    4. '       ' → logprob: -9.875459671020508
    5. '0' → logprob: -10.875459671020508
    6. '
' → logprob: -11.000459671020508
    7. '            
' → logprob: -11.125459671020508
    8. ' continue' → logprob: -11.375459671020508
    9. 'continue' → logprob: -11.625459671020508
    10. '[' → logprob: -11.750459671020508

Token 1293: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5266434550285339
    2. 'break' → logprob: -1.0266435146331787
    3. ' break' → logprob: -3.4016435146331787
    4. 'return' → logprob: -4.2766432762146
    5. '       ' → logprob: -5.9016432762146
    6. '```' → logprob: -7.7766432762146
    7. '	break' → logprob: -7.9016432762146
    8. ' return' → logprob: -8.276643753051758
    9. '               ' → logprob: -9.151643753051758
    10. '        
' → logprob: -10.151643753051758

Token 1294: ' Pas' (ID: 18323)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00543059641495347
    2. '#' → logprob: -6.005430698394775
    3. 'return' → logprob: -6.005430698394775
    4. '       ' → logprob: -7.755430698394775
    5. ' break' → logprob: -10.255430221557617
    6. '           ' → logprob: -10.880430221557617
    7. '```' → logprob: -13.630430221557617
    8. '	break' → logprob: -14.130430221557617
    9. '   ' → logprob: -14.505430221557617
    10. '
' → logprob: -15.755430221557617

Token 1295: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7235347628593445
    2. 'possible' → logprob: -1.3485348224639893
    3. 'de' → logprob: -1.9735348224639893
    4. ' possible' → logprob: -2.7235348224639893
    5. 'd' → logprob: -3.9735348224639893
    6. ' d' → logprob: -4.72353458404541
    7. '_possible' → logprob: -4.72353458404541
    8. '   ' → logprob: -5.59853458404541
    9. '
' → logprob: -6.34853458404541
    10. 't' → logprob: -6.97353458404541

Token 1296: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.06749187409877777
    2. 'inter' → logprob: -2.8174917697906494
    3. ''inter' → logprob: -5.6924920082092285
    4. 'positive' → logprob: -7.6924920082092285
    5. 'solution' → logprob: -7.8174920082092285
    6. 'possible' → logprob: -7.8174920082092285
    7. ' intersection' → logprob: -8.44249153137207
    8. 'poss' → logprob: -8.94249153137207
    9. 'token' → logprob: -9.06749153137207
    10. 'points' → logprob: -9.56749153137207

Token 1297: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -4.644463479053229e-05
    2. 'sect' → logprob: -11.375046730041504
    3. 'ception' → logprob: -12.000046730041504
    4. 'sections' → logprob: -12.125046730041504
    5. 'ection' → logprob: -12.250046730041504
    6. 'action' → logprob: -12.750046730041504
    7. '
' → logprob: -12.875046730041504
    8. 'intersection' → logprob: -13.250046730041504
    9. 'se' → logprob: -13.375046730041504
    10. '#' → logprob: -13.625046730041504

Token 1298: ' future' (ID: 5277)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7303586602210999
    2. '           ' → logprob: -0.7303586602210999
    3. '   ' → logprob: -3.855358600616455
    4. '               ' → logprob: -5.605358600616455
    5. '
' → logprob: -6.230358600616455
    6. '\n' → logprob: -6.230358600616455
    7. '        
' → logprob: -6.480358600616455
    8. ',' → logprob: -7.105358600616455
    9. '    
' → logprob: -7.105358600616455
    10. ' break' → logprob: -7.230358600616455

Token 1299: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005422769580036402
    2. '       ' → logprob: -5.380422592163086
    3. '               ' → logprob: -7.755422592163086
    4. ':
' → logprob: -8.505422592163086
    5. ' break' → logprob: -10.130422592163086
    6. '\n' → logprob: -10.255422592163086
    7. '
' → logprob: -10.630422592163086
    8. '   ' → logprob: -10.630422592163086
    9. ',' → logprob: -10.880422592163086
    10. '		' → logprob: -12.255422592163086

Token 1300: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.007164296694099903
    2. 'la' → logprob: -5.132164478302002
    3. ' le' → logprob: -7.007164478302002
    4. 'c' → logprob: -8.632164001464844
    5. 'EPS' → logprob: -10.257164001464844
    6. 'the' → logprob: -10.632164001464844
    7. 'pos' → logprob: -10.757164001464844
    8. 'les' → logprob: -11.382164001464844
    9. 't' → logprob: -11.382164001464844
    10. ' la' → logprob: -11.882164001464844

Token 1301: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038272250443696976
    2. 'mur' → logprob: -3.2882721424102783
    3. 'cer' → logprob: -9.1632719039917
    4. 'm' → logprob: -9.9132719039917
    5. 'circle' → logprob: -10.5382719039917
    6. ' cercle' → logprob: -10.9132719039917
    7. '
' → logprob: -11.0382719039917
    8. 'R' → logprob: -12.9132719039917
    9. '```' → logprob: -12.9132719039917
    10. 'cour' → logprob: -13.2882719039917

Token 1302: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10495129227638245
    2. '       ' → logprob: -2.3549513816833496
    3. '
' → logprob: -6.72995138168335
    4. '               ' → logprob: -6.85495138168335
    5. ':
' → logprob: -6.97995138168335
    6. '\n' → logprob: -8.104950904846191
    7. '		' → logprob: -8.104950904846191
    8. ',' → logprob: -8.354950904846191
    9. '   ' → logprob: -8.854950904846191
    10. ':' → logprob: -8.854950904846191

Token 1303: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48015886545181274
    2. '           ' → logprob: -0.9801588654518127
    3. '
' → logprob: -6.230158805847168
    4. '        
' → logprob: -6.855158805847168
    5. '   ' → logprob: -7.230158805847168
    6. '    
' → logprob: -7.355158805847168
    7. '               ' → logprob: -7.605158805847168
    8. '	' → logprob: -7.855158805847168
    9. '		' → logprob: -7.980158805847168
    10. '            
' → logprob: -9.480158805847168

Token 1304: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19030429422855377
    2. '           ' → logprob: -1.9403042793273926
    3. '       ' → logprob: -3.6903042793273926
    4. ' break' → logprob: -5.815304279327393
    5. 'return' → logprob: -6.565304279327393
    6. '	break' → logprob: -8.69030475616455
    7. '               ' → logprob: -10.06530475616455
    8. '   ' → logprob: -10.19030475616455
    9. '```' → logprob: -11.19030475616455
    10. '		' → logprob: -11.94030475616455

Token 1305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008421075530350208
    2. '
' → logprob: -5.133420944213867
    3. '<|end|>' → logprob: -6.883420944213867
    4. 't' → logprob: -7.258420944213867
    5. '        
' → logprob: -8.383420944213867
    6. '   ' → logprob: -9.008420944213867
    7. '<|end|>' → logprob: -9.758420944213867
    8. '[' → logprob: -10.008420944213867
    9. ' t' → logprob: -10.008420944213867
    10. ',' → logprob: -10.383420944213867

Token 1306: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10617861896753311
    2. '       ' → logprob: -2.7311785221099854
    3. 'next' → logprob: -3.3561785221099854
    4. '   ' → logprob: -8.606178283691406
    5. ' t' → logprob: -8.981178283691406
    6. '#' → logprob: -9.106178283691406
    7. 'min' → logprob: -9.231178283691406
    8. 'n' → logprob: -10.231178283691406
    9. 'collision' → logprob: -10.481178283691406
    10. 'm' → logprob: -10.981178283691406

Token 1307: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0008843107498250902
    2. 'next' → logprob: -7.250884532928467
    3. '       ' → logprob: -9.250884056091309
    4. ' t' → logprob: -10.125884056091309
    5. 'dt' → logprob: -12.125884056091309
    6. 'tc' → logprob: -12.125884056091309
    7. 'min' → logprob: -12.250884056091309
    8. 'ti' → logprob: -12.250884056091309
    9. 'tn' → logprob: -12.750884056091309
    10. 'time' → logprob: -13.000884056091309

Token 1308: '_wall' (ID: 121548)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.3205331563949585
    2. '_c' → logprob: -1.8205331563949585
    3. '_min' → logprob: -3.195533275604248
    4. '=' → logprob: -3.570533275604248
    5. '_inter' → logprob: -4.320533275604248
    6. 'next' → logprob: -4.570533275604248
    7. 'c' → logprob: -5.445533275604248
    8. ' =' → logprob: -5.695533275604248
    9. '_hit' → logprob: -5.820533275604248
    10. '_candidates' → logprob: -6.070533275604248

Token 1309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602257490158081
    2. ' =' → logprob: -1.910225749015808
    3. '=min' → logprob: -13.535225868225098
    4. '=_' → logprob: -16.78522491455078
    5. '=
' → logprob: -17.03522491455078
    6. '.=' → logprob: -17.78522491455078
    7. '=

' → logprob: -17.91022491455078
    8. '=cut' → logprob: -18.03522491455078
    9. ' =
' → logprob: -18.03522491455078
    10. '=}' → logprob: -18.03522491455078

Token 1310: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804149478673935
    2. ' min' → logprob: -3.288041591644287
    3. 't' → logprob: -18.538042068481445
    4. '	min' → logprob: -18.788042068481445
    5. 'mini' → logprob: -20.038042068481445
    6. '[min' → logprob: -20.038042068481445
    7. '(min' → logprob: -20.163042068481445
    8. '=min' → logprob: -20.788042068481445
    9. 'max' → logprob: -20.913042068481445
    10. '   ' → logprob: -21.538042068481445

Token 1311: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00287619954906404
    2. '(' → logprob: -5.877876281738281
    3. '([' → logprob: -10.002876281738281
    4. 't' → logprob: -11.502876281738281
    5. '(
' → logprob: -11.752876281738281
    6. '(token' → logprob: -12.252876281738281
    7. '(x' → logprob: -13.877876281738281
    8. '(_' → logprob: -14.502876281738281
    9. '(`' → logprob: -14.752876281738281
    10. '(i' → logprob: -15.377876281738281

Token 1312: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.0018793739145621657
    2. '_c' → logprob: -6.3768792152404785
    3. '(t' → logprob: -8.751879692077637
    4. ')' → logprob: -11.876879692077637
    5. '_tokens' → logprob: -13.376879692077637
    6. '([' → logprob: -13.501879692077637
    7. 't' → logprob: -13.751879692077637
    8. '_candidate' → logprob: -13.876879692077637
    9. 'c' → logprob: -14.001879692077637
    10. '(' → logprob: -14.001879692077637

Token 1313: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.954393079970032e-05
    2. '<|end|>' → logprob: -10.625049591064453
    3. ' )' → logprob: -11.250049591064453
    4. ')
' → logprob: -11.750049591064453
    5. '}' → logprob: -13.875049591064453
    6. ')return' → logprob: -14.500049591064453
    7. '<|end|>' → logprob: -14.500049591064453
    8. '+' → logprob: -14.875049591064453
    9. '       ' → logprob: -15.125049591064453
    10. ']' → logprob: -15.375049591064453

Token 1314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015849824994802475
    2. 'pos' → logprob: -4.265849590301514
    3. 't' → logprob: -7.015849590301514
    4. '        
' → logprob: -8.015850067138672
    5. '#' → logprob: -8.515850067138672
    6. 'new' → logprob: -9.765850067138672
    7. 'dist' → logprob: -10.765850067138672
    8. '```' → logprob: -11.015850067138672
    9. ' pos' → logprob: -11.140850067138672
    10. ' t' → logprob: -11.140850067138672

Token 1315: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2541223168373108
    2. 'dist' → logprob: -1.879122257232666
    3. 'if' → logprob: -3.254122257232666
    4. '#' (adapté à ' #') → logprob: -3.629122257232666
    5. 'new' → logprob: -5.254122257232666
    6. 't' → logprob: -6.754122257232666
    7. 'next' → logprob: -10.129122734069824
    8. 'px' → logprob: -10.754122734069824
    9. 'distance' → logprob: -11.254122734069824
    10. 'position' → logprob: -11.504122734069824

Token 1316: ' ' (ID: 220)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.21671733260154724
    2. '#' → logprob: -2.71671724319458
    3. 'if' → logprob: -2.96671724319458
    4. 'dist' → logprob: -2.96671724319458
    5. 'new' → logprob: -3.84171724319458
    6. 't' → logprob: -6.46671724319458
    7. 'next' → logprob: -6.84171724319458
    8. 'px' → logprob: -7.34171724319458
    9. 'distance' → logprob: -8.091717720031738
    10. '   ' → logprob: -8.466717720031738

Token 1317: '3' (ID: 18)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.38511598110198975
    2. 'if' → logprob: -1.3851159811019897
    3. '#' → logprob: -3.5101161003112793
    4. 'dist' → logprob: -3.5101161003112793
    5. 'new' → logprob: -4.885116100311279
    6. 't' → logprob: -7.010116100311279
    7. 'px' → logprob: -7.135116100311279
    8. 'next' → logprob: -8.635115623474121
    9. 'nx' → logprob: -10.635115623474121
    10. 'distance' → logprob: -10.760115623474121

Token 1318: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010508162900805473
    2. '
' → logprob: -5.510508060455322
    3. ')' → logprob: -5.635508060455322
    4. '        
' → logprob: -7.135508060455322
    5. '   ' → logprob: -7.385508060455322
    6. ' pos' → logprob: -8.13550853729248
    7. 'pos' → logprob: -8.38550853729248
    8. '#' → logprob: -8.51050853729248
    9. ' if' → logprob: -8.51050853729248
    10. ' #' → logprob: -8.51050853729248

Token 1319: ' Vér' (ID: 159169)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49472367763519287
    2. '#' → logprob: -1.1197236776351929
    3. 'new' → logprob: -3.1197237968444824
    4. 't' → logprob: -4.869723796844482
    5. 'if' → logprob: -5.369723796844482
    6. 'p' → logprob: -6.369723796844482
    7. 'next' → logprob: -6.494723796844482
    8. 'pt' → logprob: -7.244723796844482
    9. 'px' → logprob: -7.244723796844482
    10. '   ' → logprob: -7.744723796844482

Token 1320: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.08059416711330414
    2. 'if' → logprob: -2.580594062805176
    3. 'ify' → logprob: -7.330594062805176
    4. 'ifie' → logprob: -7.330594062805176
    5. '   ' → logprob: -8.705594062805176
    6. 'ifi' → logprob: -9.580594062805176
    7. 'ifiez' → logprob: -10.080594062805176
    8. ' if' → logprob: -10.080594062805176
    9. 'ification' → logprob: -10.330594062805176
    10. 'i' → logprob: -11.455594062805176

Token 1321: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5299822092056274
    2. 'if' → logprob: -1.1549822092056274
    3. ' if' → logprob: -2.404982089996338
    4. 'dist' → logprob: -5.279982089996338
    5. 'distance' → logprob: -7.904982089996338
    6. '   ' → logprob: -9.029982566833496
    7. 'pos' → logprob: -9.029982566833496
    8. ' si' → logprob: -9.529982566833496
    9. 't' → logprob: -9.654982566833496
    10. 'si' → logprob: -10.029982566833496

Token 1322: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6577336192131042
    2. ' t' → logprob: -1.532733678817749
    3. 'dist' → logprob: -1.907733678817749
    4. ' dist' → logprob: -2.157733678817749
    5. 'pos' → logprob: -6.65773344039917
    6. ' pos' → logprob: -8.157733917236328
    7. '   ' → logprob: -8.282733917236328
    8. ' ' → logprob: -10.157733917236328
    9. ' vel' → logprob: -11.157733917236328
    10. '	t' → logprob: -11.282733917236328

Token 1323: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17208229005336761
    2. 't' → logprob: -2.0470821857452393
    3. ' dist' → logprob: -3.7970821857452393
    4. ' t' → logprob: -5.422082424163818
    5. 'pos' → logprob: -6.672082424163818
    6. '   ' → logprob: -8.17208194732666
    7. 'distance' → logprob: -8.67208194732666
    8. 'abs' → logprob: -9.54708194732666
    9. '       ' → logprob: -9.67208194732666
    10. '#' → logprob: -9.67208194732666

Token 1324: ' parcour' (ID: 130642)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.5376227498054504
    2. '_to' → logprob: -2.2876226902008057
    3. ' parcour' → logprob: -2.5376226902008057
    4. 'par' → logprob: -2.6626226902008057
    5. ' +=' → logprob: -3.4126226902008057
    6. '       ' → logprob: -3.9126226902008057
    7. '_' → logprob: -4.162622928619385
    8. '_tr' → logprob: -4.412622928619385
    9. '_plus' → logprob: -4.537622928619385
    10. ' =' → logprob: -4.787622928619385

Token 1325: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.616287350654602
    2. 'ée' → logprob: -0.866287350654602
    3. 'rée' → logprob: -3.4912872314453125
    4. 'uée' → logprob: -5.7412872314453125
    5. 'ee' → logprob: -6.6162872314453125
    6. 'urée' → logprob: -6.6162872314453125
    7. 'u' → logprob: -7.1162872314453125
    8. 'cée' → logprob: -7.3662872314453125
    9. '__' → logprob: -8.616287231445312
    10. 's' → logprob: -8.616287231445312

Token 1326: ' sur' (ID: 1512)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3263794779777527
    2. ' +' → logprob: -2.9513795375823975
    3. ' =' → logprob: -2.9513795375823975
    4. 'plus' → logprob: -2.9513795375823975
    5. '+=' → logprob: -3.0763795375823975
    6. '=' → logprob: -3.3263795375823975
    7. ' +=' → logprob: -3.7013795375823975
    8. '_plus' → logprob: -5.201379299163818
    9. 'jus' → logprob: -6.076379299163818
    10. '   ' → logprob: -6.201379299163818

Token 1327: ' ce' (ID: 2357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21874426305294037
    2. ' t' → logprob: -1.9687442779541016
    3. 'le' → logprob: -3.7187442779541016
    4. 'la' → logprob: -3.9687442779541016
    5. 'l' → logprob: -5.468744277954102
    6. ' la' → logprob: -5.468744277954102
    7. ' le' → logprob: -5.593744277954102
    8. '   ' → logprob: -8.093744277954102
    9. 'the' → logprob: -8.093744277954102
    10. ' l' → logprob: -8.343744277954102

Token 1328: ' segment' (ID: 14806)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3438725173473358
    2. 'segment' → logprob: -1.9688725471496582
    3. ' t' → logprob: -2.093872547149658
    4. ' segment' → logprob: -3.843872547149658
    5. 'traj' → logprob: -5.468872547149658
    6. ' trajet' → logprob: -6.718872547149658
    7. 'token' → logprob: -7.718872547149658
    8. 'temps' → logprob: -8.2188720703125
    9. ' ' → logprob: -8.8438720703125
    10. '   ' → logprob: -8.9688720703125

Token 1329: ' ne' (ID: 453)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33089569211006165
    2. 'plus' → logprob: -2.2058956623077393
    3. '+=' → logprob: -2.4558956623077393
    4. ' +=' → logprob: -3.4558956623077393
    5. ' +' → logprob: -3.9558956623077393
    6. '=' → logprob: -3.9558956623077393
    7. ' =' → logprob: -4.705895900726318
    8. ' plus' → logprob: -5.955895900726318
    9. '_plus' → logprob: -6.330895900726318
    10. '       ' → logprob: -7.080895900726318

Token 1330: ' dépasse' (ID: 165701)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21923181414604187
    2. 'ex' → logprob: -1.8442318439483643
    3. ' dépasse' → logprob: -3.8442318439483643
    4. ' >' → logprob: -4.719231605529785
    5. ' dépass' → logprob: -5.344231605529785
    6. 'exc' → logprob: -6.344231605529785
    7. '+' → logprob: -7.594231605529785
    8. ' exceed' → logprob: -7.594231605529785
    9. ' dépasser' → logprob: -9.219231605529785
    10. ' exced' → logprob: -9.469231605529785

Token 1331: ' pas' (ID: 2173)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.011355259455740452
    2. ' D' → logprob: -5.136355400085449
    3. '(D' → logprob: -5.761355400085449
    4. 't' → logprob: -6.136355400085449
    5. 'dist' → logprob: -10.01135540008545
    6. 'le' → logprob: -11.26135540008545
    7. ' t' → logprob: -11.88635540008545
    8. '       ' → logprob: -12.01135540008545
    9. '(' → logprob: -12.26135540008545
    10. 'la' → logprob: -12.38635540008545

Token 1332: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008728972636163235
    2. ' D' → logprob: -4.758728981018066
    3. 'dist' → logprob: -9.258728981018066
    4. ' dist' → logprob: -11.633728981018066
    5. '       ' → logprob: -11.883728981018066
    6. '   ' → logprob: -13.633728981018066
    7. '(D' → logprob: -14.883728981018066
    8. ' ' → logprob: -15.008728981018066
    9. 'd' → logprob: -15.133728981018066
    10. '
' → logprob: -15.258728981018066

Token 1333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004379328340291977
    2. ' if' → logprob: -5.8793792724609375
    3. 'if' → logprob: -6.6293792724609375
    4. '        
' → logprob: -9.254379272460938
    5. '
' → logprob: -10.504379272460938
    6. ',' → logprob: -10.629379272460938
    7. '<|end|>' → logprob: -11.004379272460938
    8. '	' → logprob: -11.129379272460938
    9. '   ' → logprob: -11.254379272460938
    10. '	if' → logprob: -11.754379272460938

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013469000114127994
    2. ' if' → logprob: -7.001347064971924
    3. 'if' → logprob: -8.001346588134766
    4. '        
' → logprob: -10.626346588134766
    5. '   ' → logprob: -11.626346588134766
    6. ')' → logprob: -11.626346588134766
    7. ',' → logprob: -11.751346588134766
    8. '<|end|>' → logprob: -11.751346588134766
    9. '```' → logprob: -11.751346588134766
    10. '        ' → logprob: -12.001346588134766

Token 1335: ' segment' (ID: 14806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5322585701942444
    2. '       ' → logprob: -1.2822585105895996
    3. 'dist' → logprob: -2.0322585105895996
    4. ' if' → logprob: -5.6572585105896
    5. 'distance' → logprob: -7.4072585105896
    6. '```' → logprob: -9.407258987426758
    7. 'd' → logprob: -10.782258987426758
    8. ' dist' → logprob: -10.782258987426758
    9. 'segment' (adapté à ' segment') → logprob: -11.407258987426758
    10. '   ' → logprob: -12.157258987426758

Token 1336: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6153222322463989
    2. '_distance' → logprob: -1.615322232246399
    3. '_dist' → logprob: -1.740322232246399
    4. '_length' → logprob: -2.7403221130371094
    5. '_len' → logprob: -4.115322113037109
    6. 'dist' → logprob: -6.490322113037109
    7. ' _' → logprob: -6.990322113037109
    8. '_time' → logprob: -7.740322113037109
    9. '_t' → logprob: -7.990322113037109
    10. '_d' → logprob: -9.24032211303711

Token 1337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28202155232429504
    2. '=' → logprob: -1.4070215225219727
    3. ' +=' → logprob: -7.407021522521973
    4. '<|end|>' → logprob: -9.032021522521973
    5. ')' → logprob: -10.282021522521973
    6. '+=' → logprob: -10.532021522521973
    7. '_' → logprob: -11.157021522521973
    8. ' <=' → logprob: -11.532021522521973
    9. '+' → logprob: -11.657021522521973
    10. ' +' → logprob: -12.157021522521973

Token 1338: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.009889130480587482
    2. ' norm' → logprob: -4.634889125823975
    3. 'math' → logprob: -9.384889602661133
    4. 'dist' → logprob: -11.009889602661133
    5. '(norm' → logprob: -11.259889602661133
    6. ' math' → logprob: -11.509889602661133
    7. 't' → logprob: -12.009889602661133
    8. 'vel' → logprob: -13.134889602661133
    9. 'abs' → logprob: -14.134889602661133
    10. ' t' → logprob: -16.009889602661133

Token 1339: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.839121826691553e-05
    2. '(
' → logprob: -10.625078201293945
    3. 'vel' → logprob: -10.750078201293945
    4. '<|end|>' → logprob: -11.375078201293945
    5. ' (' → logprob: -11.625078201293945
    6. '((' → logprob: -11.750078201293945
    7. '(v' → logprob: -12.875078201293945
    8. '(

' → logprob: -14.625078201293945
    9. ' vel' → logprob: -14.875078201293945
    10. '.vel' → logprob: -16.500078201293945

Token 1340: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.07921230047941208
    2. '(' → logprob: -2.579212188720703
    3. ' vel' → logprob: -8.454212188720703
    4. ' (' → logprob: -9.329212188720703
    5. '((' → logprob: -11.579212188720703
    6. '   ' → logprob: -12.954212188720703
    7. 'velo' → logprob: -13.204212188720703
    8. '(
' → logprob: -13.454212188720703
    9. '(v' → logprob: -13.704212188720703
    10. 'velocity' → logprob: -13.954212188720703

Token 1341: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18025930225849152
    2. ')*' → logprob: -1.805259346961975
    3. ')*(' → logprob: -7.9302592277526855
    4. ')t' → logprob: -9.930259704589844
    5. ' )' → logprob: -10.555259704589844
    6. ')
' → logprob: -10.805259704589844
    7. '())' → logprob: -11.055259704589844
    8. '()' → logprob: -11.555259704589844
    9. ')#' → logprob: -12.180259704589844
    10. ')v' → logprob: -12.305259704589844

Token 1342: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.15310683415737e-05
    2. ' t' → logprob: -10.750021934509277
    3. '`t' → logprob: -18.37502098083496
    4. '(t' → logprob: -19.00002098083496
    5. '	t' → logprob: -19.00002098083496
    6. '   ' → logprob: -21.25002098083496
    7. '(' → logprob: -21.50002098083496
    8. '_t' → logprob: -21.62502098083496
    9. '
' → logprob: -22.00002098083496
    10. '*t' → logprob: -22.25002098083496

Token 1343: '_wall' (ID: 121548)
  Prédit: '_wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wall' → logprob: -1.0683535037969705e-05
    2. 'wall' → logprob: -11.50001049041748
    3. '_' → logprob: -15.62501049041748
    4. '_w' → logprob: -15.75001049041748
    5. '```' → logprob: -17.750011444091797
    6. '_inter' → logprob: -17.875011444091797
    7. '\' → logprob: -18.125011444091797
    8. '_water' → logprob: -18.375011444091797
    9. 'Wall' → logprob: -18.375011444091797
    10. ' wall' → logprob: -18.500011444091797

Token 1344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3450932800769806
    2. '
' → logprob: -1.9700932502746582
    3. '<|end|>' → logprob: -1.9700932502746582
    4. ' if' → logprob: -5.220093250274658
    5. '        
' → logprob: -6.095093250274658
    6. '<|end|>' → logprob: -6.470093250274658
    7. 'if' → logprob: -6.720093250274658
    8. ')' → logprob: -7.720093250274658
    9. ' 
' → logprob: -7.845093250274658
    10. ' ' → logprob: -8.220093727111816

Token 1345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002293352037668228
    2. ' if' → logprob: -6.627293586730957
    3. 'if' → logprob: -7.502293586730957
    4. '<|end|>' → logprob: -8.252293586730957
    5. '
' → logprob: -10.377293586730957
    6. '   ' → logprob: -10.502293586730957
    7. '        
' → logprob: -10.752293586730957
    8. '	' → logprob: -11.627293586730957
    9. '```' → logprob: -11.877293586730957
    10. '[' → logprob: -11.877293586730957

Token 1346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005111610982567072
    2. '       ' → logprob: -5.5051116943359375
    3. ' if' → logprob: -6.8801116943359375
    4. 'dist' → logprob: -13.380111694335938
    5. '```' → logprob: -13.505111694335938
    6. '	if' → logprob: -14.130111694335938
    7. 'If' → logprob: -14.505111694335938
    8. '   ' → logprob: -15.505111694335938
    9. ';if' → logprob: -17.130111694335938
    10. '        
' → logprob: -17.380111694335938

Token 1347: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07889363914728165
    2. ' dist' → logprob: -2.5788936614990234
    3. '   ' → logprob: -12.703893661499023
    4. '	dist' → logprob: -14.578893661499023
    5. '(dist' → logprob: -15.078893661499023
    6. ' ' → logprob: -17.203893661499023
    7. '       ' → logprob: -17.953893661499023
    8. '_dist' → logprob: -18.203893661499023
    9. 'Dist' → logprob: -19.078893661499023
    10. '  ' → logprob: -19.203893661499023

Token 1348: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.250019073486328
    3. 'total' → logprob: -12.625019073486328
    4. '+' → logprob: -13.750019073486328
    5. '_to' → logprob: -14.000019073486328
    6. '_Total' → logprob: -15.250019073486328
    7. 'Total' → logprob: -15.500019073486328
    8. '_TOTAL' → logprob: -15.875019073486328
    9. ')' → logprob: -16.250019073486328
    10. '_final' → logprob: -16.500019073486328

Token 1349: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20153097808361053
    2. '+' → logprob: -1.701530933380127
    3. ' >' → logprob: -9.451531410217285
    4. '>' → logprob: -10.576531410217285
    5. ' ' → logprob: -12.201531410217285
    6. ' +
' → logprob: -12.451531410217285
    7. ' >=' → logprob: -14.076531410217285
    8. '+
' → logprob: -14.201531410217285
    9. ' plus' → logprob: -14.701531410217285
    10. '   ' → logprob: -14.701531410217285

Token 1350: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0019286326132714748
    2. ' segment' → logprob: -6.251928806304932
    3. '(segment' → logprob: -18.501928329467773
    4. '   ' → logprob: -20.376928329467773
    5. 'section' → logprob: -21.001928329467773
    6. 'seg' → logprob: -21.501928329467773
    7. '.segment' → logprob: -21.501928329467773
    8. '_segment' → logprob: -21.501928329467773
    9. 'segments' → logprob: -22.626928329467773
    10. 'Segment' → logprob: -22.751928329467773

Token 1351: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.000397422380046919
    2. '_' → logprob: -7.875397205352783
    3. 'dist' → logprob: -11.875397682189941
    4. '_segment' → logprob: -12.500397682189941
    5. '_seg' → logprob: -14.125397682189941
    6. '_distance' → logprob: -14.125397682189941
    7. ')' → logprob: -14.250397682189941
    8. '	dist' → logprob: -14.500397682189941
    9. '_cont' → logprob: -14.750397682189941
    10. 'Dist' → logprob: -14.750397682189941

Token 1352: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1269361972808838
    2. ' >' → logprob: -2.126936197280884
    3. '>=' → logprob: -12.626935958862305
    4. '>
' → logprob: -13.626935958862305
    5. ' ' → logprob: -14.001935958862305
    6. '   ' → logprob: -14.126935958862305
    7. ' >
' → logprob: -14.251935958862305
    8. ' >=' → logprob: -15.001935958862305
    9. ')>' → logprob: -15.626935958862305
    10. ' >
' → logprob: -16.001935958862305

Token 1353: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0040793512016534805
    2. ' D' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.379079818725586
    4. '	D' → logprob: -15.504079818725586
    5. ' ' → logprob: -16.629079818725586
    6. '  ' → logprob: -18.129079818725586
    7. '>D' → logprob: -19.504079818725586
    8. ' ' → logprob: -19.629079818725586
    9. '+D' → logprob: -20.504079818725586
    10. '_D' → logprob: -20.629079818725586

Token 1354: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020941808819770813
    2. '+' → logprob: -3.895941734313965
    3. ':' → logprob: -8.020941734313965
    4. '   ' → logprob: -10.895941734313965
    5. ' ' → logprob: -11.770941734313965
    6. '       ' → logprob: -11.895941734313965
    7. '<|end|>' → logprob: -12.020941734313965
    8. ' +
' → logprob: -12.145941734313965
    9. ':
' → logprob: -12.270941734313965
    10. '    ' → logprob: -12.270941734313965

Token 1355: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -9.639096970204264e-05
    2. ' EPS' → logprob: -9.250096321105957
    3. 'ESP' → logprob: -16.250097274780273
    4. 'EP' → logprob: -17.250097274780273
    5. 'EOS' → logprob: -17.500097274780273
    6. 'eps' → logprob: -17.625097274780273
    7. '0' → logprob: -18.125097274780273
    8. ' ' → logprob: -18.500097274780273
    9. '1' → logprob: -18.875097274780273
    10. 'EPT' → logprob: -19.000097274780273

Token 1356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03745591640472412
    2. ':
' → logprob: -3.4124560356140137
    3. '           ' → logprob: -5.662456035614014
    4. '       ' → logprob: -8.162455558776855
    5. ':return' → logprob: -10.412455558776855
    6. '               ' → logprob: -13.162455558776855
    7. '.' → logprob: -13.287455558776855
    8. ':
' → logprob: -13.537455558776855
    9. '   ' → logprob: -13.662455558776855
    10. '          ' → logprob: -14.037455558776855

Token 1357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13639383018016815
    2. '       ' → logprob: -2.2613937854766846
    3. ' return' → logprob: -4.511394023895264
    4. 'return' → logprob: -4.761394023895264
    5. '
' → logprob: -5.886394023895264
    6. '```' → logprob: -8.886393547058105
    7. ' break' → logprob: -9.136393547058105
    8. '   ' → logprob: -9.386393547058105
    9. '               ' → logprob: -9.511393547058105
    10. '		' → logprob: -9.636393547058105

Token 1358: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7301524877548218
    2. 'break' → logprob: -0.7301524877548218
    3. '       ' → logprob: -3.4801526069641113
    4. '           ' → logprob: -5.230152606964111
    5. '```' → logprob: -9.605152130126953
    6. ' break' → logprob: -10.230152130126953
    7. '	break' → logprob: -10.355152130126953
    8. ' return' → logprob: -10.855152130126953
    9. '   ' → logprob: -11.480152130126953
    10. '	return' → logprob: -12.855152130126953

Token 1359: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1626703441143036
    2. 'break' → logprob: -1.912670373916626
    3. '#' → logprob: -6.037670135498047
    4. '       ' → logprob: -10.537670135498047
    5. '   ' → logprob: -10.912670135498047
    6. ' return' → logprob: -12.412670135498047
    7. ' break' → logprob: -13.287670135498047
    8. 'ret' → logprob: -13.662670135498047
    9. '```' → logprob: -13.912670135498047
    10. '           ' → logprob: -14.162670135498047

Token 1360: ' dépasse' (ID: 165701)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35367465019226074
    2. '       ' → logprob: -1.6036746501922607
    3. '           ' → logprob: -2.7286746501922607
    4. 'break' → logprob: -4.22867488861084
    5. ' return' → logprob: -4.72867488861084
    6. '   ' → logprob: -6.60367488861084
    7. '_return' → logprob: -6.97867488861084
    8. 'ret' → logprob: -6.97867488861084
    9. '#' → logprob: -7.47867488861084
    10. '```' → logprob: -7.72867488861084

Token 1361: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0787498727440834
    2. '       ' → logprob: -3.328749895095825
    3. ' return' → logprob: -4.203749656677246
    4. 'return' → logprob: -4.328749656677246
    5. '               ' → logprob: -5.953749656677246
    6. '		' → logprob: -6.953749656677246
    7. ' le' → logprob: -7.078749656677246
    8. '
' → logprob: -7.078749656677246
    9. '   ' → logprob: -7.328749656677246
    10. ' ' → logprob: -7.328749656677246

Token 1362: ' limite' (ID: 48939)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7311025857925415
    2. 'return' → logprob: -0.7311025857925415
    3. 'break' → logprob: -3.356102466583252
    4. '#' → logprob: -7.356102466583252
    5. 'distance' → logprob: -7.606102466583252
    6. 'ret' → logprob: -7.856102466583252
    7. 'dist' → logprob: -8.23110294342041
    8. ' return' → logprob: -8.23110294342041
    9. '```' → logprob: -10.23110294342041
    10. 'limit' → logprob: -10.35610294342041

Token 1363: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059708815068006516
    2. '       ' → logprob: -2.934708833694458
    3. 'return' → logprob: -6.184708595275879
    4. '          ' → logprob: -7.809708595275879
    5. '   ' → logprob: -7.934708595275879
    6. ' return' → logprob: -7.934708595275879
    7. '		' → logprob: -8.184708595275879
    8. '               ' → logprob: -8.309708595275879
    9. '.' → logprob: -9.184708595275879
    10. '  ' → logprob: -9.184708595275879

Token 1364: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.06262639909982681
    2. 'dist' → logprob: -3.437626361846924
    3. 'la' → logprob: -3.937626361846924
    4. 'port' → logprob: -4.812626361846924
    5. 'd' → logprob: -7.562626361846924
    6. 'D' → logprob: -8.062626838684082
    7. 'l' → logprob: -10.062626838684082
    8. 'temps' → logprob: -10.812626838684082
    9. 'Distance' → logprob: -11.187626838684082
    10. '```' → logprob: -12.437626838684082

Token 1365: ' sans' (ID: 9828)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03937022387981415
    2. '       ' → logprob: -3.28937029838562
    3. '               ' → logprob: -8.0393705368042
    4. 'return' → logprob: -8.0393705368042
    5. '		' → logprob: -8.1643705368042
    6. 'break' → logprob: -9.2893705368042
    7. '
' → logprob: -9.7893705368042
    8. ' return' → logprob: -10.2893705368042
    9. '   ' → logprob: -10.2893705368042
    10. '```' → logprob: -10.4143705368042

Token 1366: ' toucher' (ID: 127487)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.8138745427131653
    2. 't' → logprob: -1.3138744831085205
    3. 'ren' → logprob: -2.0638744831085205
    4. 'return' → logprob: -2.1888744831085205
    5. 'atte' → logprob: -3.1888744831085205
    6. '```' → logprob: -6.3138747215271
    7. 'tou' → logprob: -6.8138747215271
    8. 're' → logprob: -6.8138747215271
    9. 'touch' → logprob: -6.9388747215271
    10. 'r' → logprob: -7.8138747215271

Token 1367: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.994055449962616
    2. '       ' → logprob: -1.2440555095672607
    3. 'return' → logprob: -2.1190555095672607
    4. ' return' → logprob: -2.2440555095672607
    5. '               ' → logprob: -3.1190555095672607
    6. '
' → logprob: -4.119055271148682
    7. '   ' → logprob: -4.369055271148682
    8. ' 
' → logprob: -4.994055271148682
    9. '```' → logprob: -5.119055271148682
    10. ' ' → logprob: -5.244055271148682

Token 1368: ' cible' (ID: 136857)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.4634065628051758
    2. 'c' → logprob: -1.0884065628051758
    3. 'm' → logprob: -3.963406562805176
    4. 'centre' → logprob: -4.463406562805176
    5. ' cible' → logprob: -7.088406562805176
    6. '```' → logprob: -7.588406562805176
    7. 'target' → logprob: -7.713406562805176
    8. '#' → logprob: -7.838406562805176
    9. 'origine' → logprob: -8.338406562805176
    10. 'center' → logprob: -8.463406562805176

Token 1369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4774964451789856
    2. '           ' → logprob: -0.9774964451789856
    3. ':' → logprob: -6.47749662399292
    4. ':
' → logprob: -6.85249662399292
    5. '               ' → logprob: -8.102496147155762
    6. 'return' → logprob: -8.727496147155762
    7. ':return' → logprob: -9.102496147155762
    8. '```' → logprob: -9.852496147155762
    9. '   ' → logprob: -9.977496147155762
    10. '		' → logprob: -10.227496147155762

Token 1370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12862764298915863
    2. '       ' → logprob: -2.1286275386810303
    3. 'return' → logprob: -7.128627777099609
    4. '               ' → logprob: -8.25362777709961
    5. ' return' → logprob: -8.87862777709961
    6. '   ' → logprob: -9.00362777709961
    7. '		' → logprob: -9.25362777709961
    8. '```' → logprob: -9.50362777709961
    9. ':
' → logprob: -10.12862777709961
    10. '	' → logprob: -10.50362777709961

Token 1371: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20148243010044098
    2. 'break' (adapté à ' break') → logprob: -1.7014824151992798
    3. '       ' → logprob: -10.451482772827148
    4. '   ' → logprob: -10.451482772827148
    5. '	break' → logprob: -12.701482772827148
    6. ' return' → logprob: -12.701482772827148
    7. ' break' → logprob: -13.076482772827148
    8. '```' → logprob: -13.451482772827148
    9. '	return' → logprob: -13.826482772827148
    10. '           ' → logprob: -14.826482772827148

Token 1372: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043355174362659454
    2. '
' → logprob: -3.2933552265167236
    3. '        
' → logprob: -5.5433549880981445
    4. 'pos' → logprob: -7.7933549880981445
    5. '
' → logprob: -7.9183549880981445
    6. '```' → logprob: -8.543354988098145
    7. '<|end|>' → logprob: -9.168354988098145
    8. '' → logprob: -9.168354988098145
    9. '\
' → logprob: -10.543354988098145
    10. '
' → logprob: -10.668354988098145

Token 1373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0749737098813057
    2. 'pos' → logprob: -2.6999738216400146
    3. '#' → logprob: -6.4499735832214355
    4. '        
' → logprob: -6.6999735832214355
    5. '```' → logprob: -6.8249735832214355
    6. '
' → logprob: -6.9499735832214355
    7. 'new' → logprob: -10.199974060058594
    8. '   ' → logprob: -10.449974060058594
    9. 'dist' → logprob: -11.074974060058594
    10. 'position' → logprob: -11.074974060058594

Token 1374: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18712648749351501
    2. '#' (adapté à ' #') → logprob: -1.9371265172958374
    3. 'px' → logprob: -4.062126636505127
    4. '       ' → logprob: -5.312126636505127
    5. 'new' → logprob: -5.562126636505127
    6. 't' → logprob: -8.062126159667969
    7. '   ' → logprob: -9.437126159667969
    8. 'nx' → logprob: -10.437126159667969
    9. 'next' → logprob: -10.687126159667969
    10. 'dist' → logprob: -11.062126159667969

Token 1375: ' ' (ID: 220)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2561403810977936
    2. '#' → logprob: -1.5061403512954712
    3. 'new' → logprob: -5.756140232086182
    4. 'px' → logprob: -7.256140232086182
    5. '   ' → logprob: -8.50614070892334
    6. '       ' → logprob: -9.88114070892334
    7. 'dist' → logprob: -11.00614070892334
    8. 'next' → logprob: -11.13114070892334
    9. 'nx' → logprob: -11.38114070892334
    10. 'position' → logprob: -11.63114070892334

Token 1376: '4' (ID: 19)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07133980095386505
    2. '#' → logprob: -2.9463398456573486
    3. 'new' → logprob: -4.8213396072387695
    4. 'px' → logprob: -4.8213396072387695
    5. 'nx' → logprob: -9.82133960723877
    6. '   ' → logprob: -10.07133960723877
    7. 'next' → logprob: -11.19633960723877
    8. 't' → logprob: -11.57133960723877
    9. 'pt' → logprob: -11.82133960723877
    10. 'hit' → logprob: -11.82133960723877

Token 1377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8428701162338257
    2. '       ' → logprob: -1.0928701162338257
    3. '   ' → logprob: -1.8428701162338257
    4. '#' → logprob: -2.8428702354431152
    5. '
' → logprob: -5.217870235443115
    6. 'pos' → logprob: -5.717870235443115
    7. ' #' → logprob: -5.717870235443115
    8. ')
' → logprob: -6.592870235443115
    9. ' )' → logprob: -6.967870235443115
    10. ' pos' → logprob: -7.592870235443115

Token 1378: ' Av' (ID: 7541)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36188840866088867
    2. 'pos' → logprob: -1.2368884086608887
    3. 'new' → logprob: -4.486888408660889
    4. '   ' → logprob: -7.236888408660889
    5. 'next' → logprob: -7.486888408660889
    6. 'px' → logprob: -8.486888885498047
    7. 'p' → logprob: -8.986888885498047
    8. '       ' → logprob: -9.236888885498047
    9. 'n' → logprob: -9.611888885498047
    10. 'nx' → logprob: -9.736888885498047

Token 1379: 'ancer' (ID: 13358)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4412088394165039
    2. 'oid' → logprob: -1.066208839416504
    3. 'o' → logprob: -5.441208839416504
    4. 'ance' → logprob: -5.816208839416504
    5. 'ancer' → logprob: -6.066208839416504
    6. 'oir' → logprob: -6.316208839416504
    7. 'ail' → logprob: -8.066208839416504
    8. 'e' → logprob: -8.941208839416504
    9. 'pos' → logprob: -9.441208839416504
    10. 'oi' → logprob: -9.691208839416504

Token 1380: ' à' (ID: 1221)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.026715563610196114
    2. '       ' → logprob: -3.7767155170440674
    3. '   ' → logprob: -6.5267157554626465
    4. '(pos' → logprob: -6.6517157554626465
    5. '
' → logprob: -8.151715278625488
    6. ' pos' → logprob: -9.026715278625488
    7. '(' → logprob: -9.401715278625488
    8. 'position' → logprob: -9.401715278625488
    9. '(
' → logprob: -10.776715278625488
    10. '=' → logprob: -10.901715278625488

Token 1381: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.611075222492218
    2. 't' → logprob: -1.7360751628875732
    3. '(pos' → logprob: -1.9860751628875732
    4. '(t' → logprob: -2.7360751628875732
    5. ' (' → logprob: -3.4860751628875732
    6. '(' → logprob: -3.8610751628875732
    7. ' t' → logprob: -4.986075401306152
    8. 'time' → logprob: -5.361075401306152
    9. '(
' → logprob: -5.361075401306152
    10. ' pos' → logprob: -5.986075401306152

Token 1382: ' naissance' (ID: 86852)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10665083676576614
    2. '(pos' → logprob: -3.4816508293151855
    3. 'point' → logprob: -3.9816508293151855
    4. '(' → logprob: -4.2316508293151855
    5. 'wall' → logprob: -4.2316508293151855
    6. '(
' → logprob: -4.4816508293151855
    7. 'position' → logprob: -5.3566508293151855
    8. '(t' → logprob: -5.7316508293151855
    9. 't' → logprob: -6.2316508293151855
    10. 'new' → logprob: -7.8566508293151855

Token 1383: ' collision' (ID: 34967)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6713055372238159
    2. 'de' → logprob: -1.796305537223816
    3. 'du' → logprob: -1.796305537223816
    4. ' de' → logprob: -2.7963056564331055
    5. 'pos' → logprob: -2.7963056564331055
    6. '   ' → logprob: -4.6713056564331055
    7. '       ' → logprob: -4.9213056564331055
    8. ')' → logprob: -5.1713056564331055
    9. 'd' → logprob: -5.6713056564331055
    10. '
' → logprob: -6.0463056564331055

Token 1384: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07607574015855789
    2. 'pos' → logprob: -3.701075792312622
    3. '   ' → logprob: -3.701075792312622
    4. ',' → logprob: -5.076075553894043
    5. '(pos' → logprob: -5.451075553894043
    6. '
' → logprob: -5.951075553894043
    7. ':' → logprob: -6.076075553894043
    8. '        
' → logprob: -6.076075553894043
    9. '.' → logprob: -7.076075553894043
    10. ' =' → logprob: -7.201075553894043

Token 1385: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.16377171874046326
    2. 'mur' → logprob: -2.538771629333496
    3. 'c' → logprob: -3.288771629333496
    4. '(' → logprob: -4.038771629333496
    5. 'la' → logprob: -4.538771629333496
    6. '(c' → logprob: -6.163771629333496
    7. 'wall' → logprob: -7.163771629333496
    8. '(t' → logprob: -7.288771629333496
    9. '(
' → logprob: -7.663771629333496
    10. '((' → logprob: -7.913771629333496

Token 1386: ' mur' (ID: 11426)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.03695778176188469
    2. 'c' → logprob: -4.161957740783691
    3. 'wall' → logprob: -4.161957740783691
    4. 'm' → logprob: -5.411957740783691
    5. 'circle' → logprob: -7.661957740783691
    6. 'cer' → logprob: -10.036957740783691
    7. ' mur' → logprob: -10.161957740783691
    8. 'point' → logprob: -10.411957740783691
    9. '#' → logprob: -10.911957740783691
    10. 'mu' → logprob: -10.911957740783691

Token 1387: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022363781463354826
    2. 'pos' → logprob: -6.377236366271973
    3. ',' → logprob: -8.627236366271973
    4. '   ' → logprob: -9.377236366271973
    5. '	' → logprob: -9.502236366271973
    6. '        
' → logprob: -9.627236366271973
    7. '
' → logprob: -10.002236366271973
    8. '	   ' → logprob: -11.127236366271973
    9. '\t' → logprob: -11.877236366271973
    10. ':' → logprob: -12.002236366271973

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010703138075768948
    2. '
' → logprob: -5.260703086853027
    3. 'pos' → logprob: -5.260703086853027
    4. '        
' → logprob: -8.760703086853027
    5. '   ' → logprob: -9.760703086853027
    6. '    
' → logprob: -11.010703086853027
    7. '	' → logprob: -12.135703086853027
    8. '	pos' → logprob: -12.385703086853027
    9. '```' → logprob: -12.760703086853027
    10. ' pos' → logprob: -12.760703086853027

Token 1389: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.010296749882400036
    2. 'px' → logprob: -4.635296821594238
    3. 'new' → logprob: -8.385296821594238
    4. '       ' → logprob: -8.385296821594238
    5. '   ' → logprob: -9.760296821594238
    6. ' pos' → logprob: -11.385296821594238
    7. 'nx' → logprob: -12.010296821594238
    8. 't' → logprob: -12.635296821594238
    9. ' px' → logprob: -13.885296821594238
    10. 'x' → logprob: -14.260296821594238

Token 1390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028275810182094574
    2. ' =' → logprob: -5.8778276443481445
    3. '[' → logprob: -10.877827644348145
    4. 'x' → logprob: -13.627827644348145
    5. '=(' → logprob: -14.252827644348145
    6. '=
' → logprob: -14.627827644348145
    7. ')' → logprob: -14.877827644348145
    8. 'new' → logprob: -15.252827644348145
    9. '_=' → logprob: -15.502827644348145
    10. '+=' → logprob: -15.752827644348145

Token 1391: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.016230257228016853
    2. '(px' → logprob: -4.26623010635376
    3. '(' → logprob: -6.76623010635376
    4. '(v' → logprob: -7.51623010635376
    5. ' (' → logprob: -8.141230583190918
    6. '(py' → logprob: -10.641230583190918
    7. '(p' → logprob: -11.266230583190918
    8. '(ref' → logprob: -11.516230583190918
    9. '((' → logprob: -11.766230583190918
    10. '(x' → logprob: -12.766230583190918

Token 1392: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.173704271830502e-06
    2. 'px' → logprob: -13.12500286102295
    3. ' pos' → logprob: -13.87500286102295
    4. '(pos' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '	pos' → logprob: -18.375003814697266
    7. 'position' → logprob: -18.875003814697266
    8. 'p' → logprob: -19.000003814697266
    9. '_pos' → logprob: -19.500003814697266
    10. 'Pos' → logprob: -19.625003814697266

Token 1393: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -12.500003814697266
    3. '[
' → logprob: -16.125003814697266
    4. '
' → logprob: -16.875003814697266
    5. ' ' → logprob: -16.875003814697266
    6. ' [' → logprob: -16.875003814697266
    7. '(' → logprob: -17.000003814697266
    8. 'x' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.750003814697266
    10. ')' → logprob: -17.750003814697266

Token 1394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. ' ' → logprob: -17.875
    4. '
' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '۰' → logprob: -19.875
    7. '   ' → logprob: -20.5
    8. '٠' → logprob: -20.9375
    9. 'pos' → logprob: -21.0
    10. 'x' → logprob: -21.25

Token 1395: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931570172309875
    2. ' +' → logprob: -0.6931570172309875
    3. '+
' → logprob: -12.568157196044922
    4. ' +
' → logprob: -13.318157196044922
    5. '+t' → logprob: -13.318157196044922
    6. ',' → logprob: -13.568157196044922
    7. ' ' → logprob: -15.318157196044922
    8. ' -' → logprob: -15.318157196044922
    9. '
' → logprob: -15.818157196044922
    10. ')' → logprob: -15.818157196044922

Token 1396: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.054901123046875
    2. ' +' → logprob: -2.929901123046875
    3. '+
' → logprob: -11.304901123046875
    4. '+t' → logprob: -13.304901123046875
    5. '-' → logprob: -13.679901123046875
    6. '
' → logprob: -13.804901123046875
    7. '   ' → logprob: -14.554901123046875
    8. ' +
' → logprob: -14.804901123046875
    9. ',' → logprob: -14.929901123046875
    10. ' ' → logprob: -15.179901123046875

Token 1397: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -7.822646693966817e-06
    2. ' vel' → logprob: -11.875007629394531
    3. 'vx' → logprob: -14.250007629394531
    4. '   ' → logprob: -16.00000762939453
    5. 'pos' → logprob: -17.37500762939453
    6. 't' → logprob: -17.50000762939453
    7. 'val' → logprob: -19.25000762939453
    8. 'velocity' → logprob: -19.75000762939453
    9. 'velo' → logprob: -19.75000762939453
    10. '```' → logprob: -19.75000762939453

Token 1398: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009502600878477097
    2. '*' → logprob: -4.759502410888672
    3. '*t' → logprob: -7.259502410888672
    4. 't' → logprob: -9.009502410888672
    5. ' *' → logprob: -10.009502410888672
    6. '```' → logprob: -12.134502410888672
    7. '0' → logprob: -12.134502410888672
    8. ' ' → logprob: -14.134502410888672
    9. '*time' → logprob: -14.259502410888672
    10. '_t' → logprob: -14.509502410888672

Token 1399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.00000286102295
    3. 't' → logprob: -14.75000286102295
    4. 'x' → logprob: -15.12500286102295
    5. '(' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.625003814697266
    7. 'vel' → logprob: -16.750003814697266
    8. '1' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '
' → logprob: -17.500003814697266

Token 1400: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0850999727845192
    2. '*t' → logprob: -2.585099935531616
    3. ' *' → logprob: -5.085100173950195
    4. '   ' → logprob: -14.335100173950195
    5. ' ' → logprob: -14.585100173950195
    6. '*s' → logprob: -14.960100173950195
    7. '*time' → logprob: -15.085100173950195
    8. '*v' → logprob: -15.710100173950195
    9. '*object' → logprob: -15.835100173950195
    10. '*u' → logprob: -15.960100173950195

Token 1401: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6240566083070007e-06
    2. ' t' → logprob: -13.375001907348633
    3. '`t' → logprob: -18.875001907348633
    4. '	t' → logprob: -21.375001907348633
    5. ')t' → logprob: -22.625001907348633
    6. '   ' → logprob: -22.750001907348633
    7. '$t' → logprob: -24.500001907348633
    8. '_t' → logprob: -24.625001907348633
    9. '(t' → logprob: -24.750001907348633
    10. '```' → logprob: -24.875001907348633

Token 1402: '_wall' (ID: 121548)
  Prédit: '_wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wall' → logprob: -1.700132997939363e-05
    2. 'wall' → logprob: -11.000017166137695
    3. '_w' → logprob: -15.625017166137695
    4. '_' → logprob: -17.625017166137695
    5. ' wall' → logprob: -17.875017166137695
    6. '_window' → logprob: -19.125017166137695
    7. 'Wall' → logprob: -19.750017166137695
    8. '_water' → logprob: -20.000017166137695
    9. '.wall' → logprob: -20.125017166137695
    10. 't' → logprob: -20.375017166137695

Token 1403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014799882774241269
    2. ',
' → logprob: -9.000147819519043
    3. ' ,' → logprob: -10.875147819519043
    4. ',pos' → logprob: -12.250147819519043
    5. '   ' → logprob: -14.875147819519043
    6. ',

' → logprob: -15.000147819519043
    7. ',
' → logprob: -16.75014877319336
    8. ',\
' → logprob: -17.25014877319336
    9. '```' → logprob: -17.25014877319336
    10. '       ' → logprob: -17.50014877319336

Token 1404: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20141343772411346
    2. ' pos' → logprob: -1.7014133930206299
    3. '	pos' → logprob: -16.826414108276367
    4. '       ' → logprob: -18.576414108276367
    5. '(pos' → logprob: -19.451414108276367
    6. '    ' → logprob: -19.576414108276367
    7. '   ' → logprob: -19.701414108276367
    8. '_pos' → logprob: -20.076414108276367
    9. ' ' → logprob: -21.076414108276367
    10. '.pos' → logprob: -21.451414108276367

Token 1405: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021343429398257285
    2. '1' → logprob: -8.500213623046875
    3. 'pos' → logprob: -12.250213623046875
    4. '
' → logprob: -13.625213623046875
    5. '```' → logprob: -13.875213623046875
    6. '(' → logprob: -14.125213623046875
    7. '0' → logprob: -14.250213623046875
    8. '   ' → logprob: -15.000213623046875
    9. '.' → logprob: -15.125213623046875
    10. '[
' → logprob: -15.375213623046875

Token 1406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. 'pos' → logprob: -15.375000953674316
    4. '
' → logprob: -17.25
    5. '0' → logprob: -18.125
    6. '   ' → logprob: -19.5
    7. ' ' → logprob: -19.625
    8. '```' → logprob: -19.875
    9. '１' → logprob: -21.25
    10. '(' → logprob: -21.25

Token 1407: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9054043292999268
    2. '[' → logprob: -1.1554043292999268
    3. '+' → logprob: -1.2804043292999268
    4. ']' → logprob: -6.655404090881348
    5. ')' → logprob: -6.655404090881348
    6. ' ' → logprob: -9.905404090881348
    7. ',' → logprob: -10.405404090881348
    8. ']+' → logprob: -11.030404090881348
    9. 'pos' → logprob: -11.030404090881348
    10. '*' → logprob: -11.155404090881348

Token 1408: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759691596031189
    2. ' +' → logprob: -0.8259691596031189
    3. '[' → logprob: -10.450968742370605
    4. ')' → logprob: -14.825968742370605
    5. ',' → logprob: -16.575969696044922
    6. ' ' → logprob: -16.950969696044922
    7. '+[' → logprob: -17.200969696044922
    8. '<|end|>' → logprob: -17.325969696044922
    9. '*' → logprob: -17.575969696044922
    10. '```' → logprob: -17.575969696044922

Token 1409: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -8.613945101387799e-05
    2. ' vel' → logprob: -9.375085830688477
    3. 'vy' → logprob: -14.500085830688477
    4. '   ' → logprob: -15.000085830688477
    5. 'pos' → logprob: -16.500085830688477
    6. 'velt' → logprob: -16.875085830688477
    7. 'velo' → logprob: -16.875085830688477
    8. 'v' → logprob: -17.125085830688477
    9. '```' → logprob: -17.125085830688477
    10. '0' → logprob: -17.375085830688477

Token 1410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007610770873725414
    2. '1' → logprob: -4.88261079788208
    3. '```' → logprob: -13.507610321044922
    4. '   ' → logprob: -13.632610321044922
    5. '
' → logprob: -14.382610321044922
    6. '[
' → logprob: -15.007610321044922
    7. '(' → logprob: -15.507610321044922
    8. '-' → logprob: -15.882610321044922
    9. '{' → logprob: -16.132610321044922
    10. 'y' → logprob: -16.132610321044922

Token 1411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.750000953674316
    5. 't' → logprob: -15.750000953674316
    6. '0' → logprob: -16.125001907348633
    7. '
' → logprob: -16.625001907348633
    8. '```' → logprob: -17.375001907348633
    9. '１' → logprob: -17.625001907348633
    10. 'wall' → logprob: -18.125001907348633

Token 1412: ']*' (ID: 18579)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -1.4974866644479334e-05
    2. '*' → logprob: -11.625015258789062
    3. ']*' → logprob: -13.500015258789062
    4. 't' → logprob: -14.250015258789062
    5. '*v' → logprob: -14.375015258789062
    6. '*time' → logprob: -14.875015258789062
    7. '*m' → logprob: -15.375015258789062
    8. '*a' → logprob: -15.375015258789062
    9. '*w' → logprob: -15.625015258789062
    10. '*object' → logprob: -15.625015258789062

Token 1413: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.4849443838757e-06
    2. ' t' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.375003814697266
    4. '```' → logprob: -16.750003814697266
    5. '`t' → logprob: -17.375003814697266
    6. ')t' → logprob: -18.250003814697266
    7. '	t' → logprob: -18.250003814697266
    8. '*t' → logprob: -19.000003814697266
    9. '[t' → logprob: -19.125003814697266
    10. '0' → logprob: -19.375003814697266

Token 1414: '_wall' (ID: 121548)
  Prédit: '_wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wall' → logprob: -0.0007157695363275707
    2. 'wall' → logprob: -7.250715732574463
    3. '_w' → logprob: -12.750716209411621
    4. '_window' → logprob: -13.875716209411621
    5. '.wall' → logprob: -14.625716209411621
    6. ')' → logprob: -14.750716209411621
    7. '```' → logprob: -15.250716209411621
    8. 'Wall' → logprob: -16.000715255737305
    9. '-wall' → logprob: -16.000715255737305
    10. '_water' → logprob: -16.250715255737305

Token 1415: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.73183855926618e-05
    2. '   ' → logprob: -10.125077247619629
    3. ')
' → logprob: -11.125077247619629
    4. ',' → logprob: -11.375077247619629
    5. '       ' → logprob: -11.875077247619629
    6. ' )' → logprob: -12.750077247619629
    7. '[' → logprob: -14.875077247619629
    8. '),' → logprob: -15.875077247619629
    9. '))' → logprob: -16.250078201293945
    10. ')`' → logprob: -16.250078201293945

Token 1416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11808063089847565
    2. '
' → logprob: -2.6180806159973145
    3. '        
' → logprob: -4.7430806159973145
    4. '   ' → logprob: -4.7430806159973145
    5. '<|end|>' → logprob: -5.2430806159973145
    6. 'n' → logprob: -5.4930806159973145
    7. '  
' → logprob: -6.1180806159973145
    8. ',' → logprob: -6.3680806159973145
    9. '    
' → logprob: -6.4930806159973145
    10. '\n' → logprob: -6.7430806159973145

Token 1417: ' dist' (ID: 3601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3632339835166931
    2. 'vel' → logprob: -1.613234043121338
    3. 'normal' → logprob: -3.113234043121338
    4. 'vn' → logprob: -3.488234043121338
    5. 'norm' → logprob: -4.363234043121338
    6. '   ' → logprob: -4.613234043121338
    7. '#' → logprob: -5.113234043121338
    8. 'v' → logprob: -7.488234043121338
    9. '       ' → logprob: -7.988234043121338
    10. 'nv' → logprob: -8.23823356628418

Token 1418: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.8889261304575484e-06
    2. 'total' → logprob: -13.000003814697266
    3. 'Total' → logprob: -13.750003814697266
    4. '_' → logprob: -15.625003814697266
    5. '_Total' → logprob: -16.250003814697266
    6. '_TOTAL' → logprob: -17.250003814697266
    7. ')_' → logprob: -17.375003814697266
    8. '	total' → logprob: -17.500003814697266
    9. '_tot' → logprob: -17.625003814697266
    10. '_to' → logprob: -17.875003814697266

Token 1419: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10022833943367004
    2. ' +=' → logprob: -2.3502283096313477
    3. '=' → logprob: -11.600228309631348
    4. '+' → logprob: -11.725228309631348
    5. '   ' → logprob: -13.100228309631348
    6. ']+=' → logprob: -13.350228309631348
    7. '+=(' → logprob: -15.350228309631348
    8. '+="' → logprob: -15.600228309631348
    9. '```' → logprob: -15.725228309631348
    10. '+='' → logprob: -15.725228309631348

Token 1420: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.001170225441455841
    2. ' segment' → logprob: -6.7511701583862305
    3. '(segment' → logprob: -17.626171112060547
    4. 'space' → logprob: -20.001171112060547
    5. 'section' → logprob: -20.751171112060547
    6. '   ' → logprob: -20.751171112060547
    7. '.segment' → logprob: -21.501171112060547
    8. '_segment' → logprob: -22.376171112060547
    9. 'segments' → logprob: -22.376171112060547
    10. 'step' → logprob: -22.626171112060547

Token 1421: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.2729995988775045e-06
    2. 'dist' → logprob: -12.000006675720215
    3. '_' → logprob: -16.8750057220459
    4. '-dist' → logprob: -17.8750057220459
    5. '	dist' → logprob: -18.3750057220459
    6. '_d' → logprob: -18.3750057220459
    7. '_distance' → logprob: -18.8750057220459
    8. 'Dist' → logprob: -18.8750057220459
    9. '_disc' → logprob: -19.1250057220459
    10. '_dest' → logprob: -19.2500057220459

Token 1422: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022142933681607246
    2. '
' → logprob: -4.3971428871154785
    3. '        
' → logprob: -5.0221428871154785
    4. '<|end|>' → logprob: -6.7721428871154785
    5. ',' → logprob: -7.2721428871154785
    6. '```' → logprob: -8.022143363952637
    7. ',
' → logprob: -9.022143363952637
    8. '   ' → logprob: -9.272143363952637
    9. 'vel' → logprob: -9.397143363952637
    10. 'n' → logprob: -9.647143363952637

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21597014367580414
    2. 'n' → logprob: -1.9659701585769653
    3. 'vel' → logprob: -4.215970039367676
    4. '        
' → logprob: -4.465970039367676
    5. '
' → logprob: -4.965970039367676
    6. 'normal' → logprob: -4.965970039367676
    7. 'v' → logprob: -5.340970039367676
    8. '```' → logprob: -5.715970039367676
    9. '#' → logprob: -6.465970039367676
    10. 'if' → logprob: -7.090970039367676

Token 1424: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2269483208656311
    2. '#' (adapté à ' #') → logprob: -2.2269482612609863
    3. 'normal' → logprob: -2.4769482612609863
    4. 'norm' → logprob: -4.726948261260986
    5. '   ' → logprob: -6.851948261260986
    6. 'vel' → logprob: -7.226948261260986
    7. 'v' → logprob: -9.351948738098145
    8. 'nv' → logprob: -9.351948738098145
    9. 'vec' → logprob: -9.726948738098145
    10. 'if' → logprob: -9.726948738098145

Token 1425: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7061904072761536
    2. 'n' → logprob: -0.9561904072761536
    3. 'norm' → logprob: -3.081190347671509
    4. 'normal' → logprob: -3.206190347671509
    5. 'vec' → logprob: -3.956190347671509
    6. '   ' → logprob: -5.831190586090088
    7. 'pos' → logprob: -5.956190586090088
    8. 'nx' → logprob: -6.206190586090088
    9. 'r' → logprob: -6.581190586090088
    10. 'vel' → logprob: -6.706190586090088

Token 1426: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2307271808385849
    2. 'normal' → logprob: -1.855727195739746
    3. '#' → logprob: -3.480727195739746
    4. 'norm' → logprob: -4.105727195739746
    5. 'vel' → logprob: -6.230727195739746
    6. 'v' → logprob: -8.730727195739746
    7. 'nv' → logprob: -9.230727195739746
    8. '   ' → logprob: -9.605727195739746
    9. 'nx' → logprob: -11.355727195739746
    10. 'vec' → logprob: -11.480727195739746

Token 1427: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5046417117118835
    2. ')' → logprob: -1.2546417713165283
    3. ' =' → logprob: -2.6296417713165283
    4. '       ' → logprob: -3.8796417713165283
    5. '=' → logprob: -4.879641532897949
    6. '#' → logprob: -5.129641532897949
    7. ':' → logprob: -6.254641532897949
    8. ',' → logprob: -7.254641532897949
    9. '    ' → logprob: -8.00464153289795
    10. '()' → logprob: -8.50464153289795

Token 1428: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6613132953643799
    2. '#' → logprob: -1.0363132953643799
    3. 'normal' → logprob: -2.41131329536438
    4. ' normal' → logprob: -4.286313056945801
    5. ' n' → logprob: -4.411313056945801
    6. ' #' → logprob: -4.661313056945801
    7. 'norm' → logprob: -6.161313056945801
    8. ' normale' → logprob: -8.1613130569458
    9. 'Normal' → logprob: -8.5363130569458
    10. '   ' → logprob: -8.5363130569458

Token 1429: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04543289542198181
    2. 'ate' → logprob: -3.6704328060150146
    3. '       ' → logprob: -4.920433044433594
    4. '   ' → logprob: -5.045433044433594
    5. 'r' → logprob: -6.670433044433594
    6. ' de' → logprob: -6.795433044433594
    7. 'n' → logprob: -7.545433044433594
    8. '#' → logprob: -7.920433044433594
    9. '
' → logprob: -7.920433044433594
    10. 'vel' → logprob: -8.045433044433594

Token 1430: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.40147319436073303
    2. 'n' → logprob: -1.2764731645584106
    3. 'normal' → logprob: -3.5264732837677
    4. 'norm' → logprob: -5.026473045349121
    5. 'new' → logprob: -5.651473045349121
    6. 'l' → logprob: -5.651473045349121
    7. ' la' → logprob: -6.026473045349121
    8. '#' → logprob: -6.401473045349121
    9. 'v' → logprob: -6.776473045349121
    10. 'the' → logprob: -7.026473045349121

Token 1431: ' normale' (ID: 57494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5424594879150391
    2. 'normal' → logprob: -1.042459487915039
    3. 'norm' → logprob: -2.792459487915039
    4. '#' → logprob: -6.292459487915039
    5. 'new' → logprob: -6.667459487915039
    6. 'pos' → logprob: -7.167459487915039
    7. ' normale' → logprob: -8.417459487915039
    8. 'vel' → logprob: -8.917459487915039
    9. 'nou' → logprob: -9.417459487915039
    10. ' normal' → logprob: -9.792459487915039

Token 1432: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.586493730545044
    2. 'n' → logprob: -1.336493730545044
    3. '=' → logprob: -2.211493730545044
    4. ' at' → logprob: -3.961493730545044
    5. '   ' → logprob: -4.086493492126465
    6. ' (' → logprob: -4.086493492126465
    7. ' n' → logprob: -4.711493492126465
    8. '       ' → logprob: -6.086493492126465
    9. '(' → logprob: -6.336493492126465
    10. '(n' → logprob: -6.461493492126465

Token 1433: ' point' (ID: 2438)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04246052727103233
    2. '(' → logprob: -3.2924604415893555
    3. 'mur' → logprob: -5.6674604415893555
    4. '(pos' → logprob: -7.2924604415893555
    5. ' pos' → logprob: -8.917460441589355
    6. ' (' → logprob: -9.792460441589355
    7. 'wall' → logprob: -10.417460441589355
    8. 'point' → logprob: -11.042460441589355
    9. '(-' → logprob: -11.042460441589355
    10. ' mur' → logprob: -12.292460441589355

Token 1434: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7948365807533264
    2. 'd' → logprob: -1.9198365211486816
    3. 'sur' → logprob: -2.5448365211486816
    4. 'collision' → logprob: -2.6698365211486816
    5. 'n' → logprob: -2.9198365211486816
    6. ' de' → logprob: -3.1698365211486816
    7. '       ' → logprob: -3.1698365211486816
    8. '   ' → logprob: -3.1698365211486816
    9. '(' → logprob: -3.9198365211486816
    10. '#' → logprob: -3.9198365211486816

Token 1435: ''' (ID: 6)
  Prédit: 'impact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.1075652614235878
    2. 'intersection' → logprob: -2.60756516456604
    3. 'collision' → logprob: -4.357565402984619
    4. ''inter' → logprob: -4.357565402984619
    5. '#' → logprob: -7.732565402984619
    6. '’impact' → logprob: -7.732565402984619
    7. 'inter' → logprob: -8.107564926147461
    8. 'pos' → logprob: -8.482564926147461
    9. ''arrivée' → logprob: -8.607564926147461
    10. ''' → logprob: -8.607564926147461

Token 1436: 'impact' (ID: 60285)
  Prédit: 'impact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.020815018564462662
    2. 'intersection' → logprob: -4.145814895629883
    3. 'collision' → logprob: -5.645814895629883
    4. 'contact' → logprob: -6.770814895629883
    5. '’impact' → logprob: -10.395814895629883
    6. ' impact' → logprob: -11.020814895629883
    7. 'interaction' → logprob: -11.520814895629883
    8. '#' → logprob: -12.020814895629883
    9. '-impact' → logprob: -12.520814895629883
    10. 'inter' → logprob: -12.645814895629883

Token 1437: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7028853893280029
    2. '       ' → logprob: -0.8278853893280029
    3. ' (' → logprob: -3.452885389328003
    4. '(n' → logprob: -4.577885627746582
    5. ' at' → logprob: -5.327885627746582
    6. 'normal' → logprob: -5.577885627746582
    7. ' n' → logprob: -5.577885627746582
    8. '(nx' → logprob: -5.952885627746582
    9. '(normal' → logprob: -6.077885627746582
    10. '(' → logprob: -6.077885627746582

Token 1438: ' le' (ID: 505)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017399517819285393
    2. '(' → logprob: -5.267399311065674
    3. 'le' → logprob: -5.267399311065674
    4. '(pos' → logprob: -5.892399311065674
    5. 'mur' → logprob: -6.392399311065674
    6. ' (' → logprob: -6.767399311065674
    7. ' pos' → logprob: -7.142399311065674
    8. 'la' → logprob: -8.142399787902832
    9. ' le' → logprob: -8.767399787902832
    10. 'c' → logprob: -10.642399787902832

Token 1439: ' cercle' (ID: 172399)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.031442783772945404
    2. 'mur' → logprob: -3.531442880630493
    3. '(' → logprob: -6.531442642211914
    4. 'wall' → logprob: -9.406442642211914
    5. '(pos' → logprob: -9.656442642211914
    6. 'm' → logprob: -10.156442642211914
    7. 'c' → logprob: -10.656442642211914
    8. 'point' → logprob: -11.906442642211914
    9. 'circle' → logprob: -12.156442642211914
    10. '(
' → logprob: -12.406442642211914

Token 1440: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.504603385925293
    2. 'n' → logprob: -1.129603385925293
    3. ' n' → logprob: -3.754603385925293
    4. 'normal' → logprob: -4.129603385925293
    5. ' (' → logprob: -4.629603385925293
    6. ' normal' → logprob: -5.129603385925293
    7. '(n' → logprob: -5.254603385925293
    8. 'norm' → logprob: -5.629603385925293
    9. '(' → logprob: -6.629603385925293
    10. '(nx' → logprob: -6.629603385925293

Token 1441: 'origine' (ID: 52218)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5881637334823608
    2. '(pos' → logprob: -0.9631637334823608
    3. '(' → logprob: -2.8381638526916504
    4. '(-' → logprob: -5.58816385269165
    5. ' (' → logprob: -8.213163375854492
    6. ' pos' → logprob: -8.338163375854492
    7. '   ' → logprob: -10.213163375854492
    8. '(n' → logprob: -10.338163375854492
    9. '(normal' → logprob: -10.338163375854492
    10. '(
' → logprob: -10.713163375854492

Token 1442: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48231837153434753
    2. ')' → logprob: -1.73231840133667
    3. '       ' → logprob: -2.23231840133667
    4. 'pos' → logprob: -3.35731840133667
    5. ')
' → logprob: -4.10731840133667
    6. ' =' → logprob: -4.85731840133667
    7. ':' → logprob: -4.85731840133667
    8. '(' → logprob: -5.35731840133667
    9. '(pos' → logprob: -5.60731840133667
    10. '[' → logprob: -5.73231840133667

Token 1443: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.173704271830502e-06
    2. ' pos' → logprob: -13.25000286102295
    3. '(pos' → logprob: -14.25000286102295
    4. '(' → logprob: -14.62500286102295
    5. '   ' → logprob: -16.250003814697266
    6. 'position' → logprob: -17.000003814697266
    7. '	pos' → logprob: -17.125003814697266
    8. 'point' → logprob: -18.875003814697266
    9. ')' → logprob: -19.750003814697266
    10. 'posé' → logprob: -20.125003814697266

Token 1444: ')
' (ID: 446)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9714935421943665
    2. ')' → logprob: -1.0964934825897217
    3. '/' → logprob: -1.7214934825897217
    4. '[' → logprob: -3.4714934825897217
    5. '       ' → logprob: -3.7214934825897217
    6. ')/' → logprob: -4.096493721008301
    7. ',' → logprob: -4.221493721008301
    8. ')
' → logprob: -4.596493721008301
    9. ' =' → logprob: -5.596493721008301
    10. '   ' → logprob: -6.721493721008301

Token 1445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35990798473358154
    2. 'n' → logprob: -1.4849079847335815
    3. ' n' → logprob: -2.984908103942871
    4. 'norm' → logprob: -4.359908103942871
    5. 'normal' → logprob: -5.359908103942871
    6. ' normal' → logprob: -5.484908103942871
    7. '   ' → logprob: -7.109908103942871
    8. ' norm' → logprob: -7.109908103942871
    9. ' (' → logprob: -7.484908103942871
    10. '        
' → logprob: -7.859908103942871

Token 1446: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.17137958109378815
    2. 'normal' → logprob: -2.546379566192627
    3. ' n' → logprob: -3.171379566192627
    4. ' normal' → logprob: -3.671379566192627
    5. '       ' → logprob: -4.796379566192627
    6. 'norm' → logprob: -6.296379566192627
    7. 'nx' → logprob: -7.046379566192627
    8. '   ' → logprob: -8.296380043029785
    9. ' nx' → logprob: -8.921380043029785
    10. '        
' → logprob: -9.171380043029785

Token 1447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196948140859604
    2. ' =' → logprob: -2.811969518661499
    3. '=(' → logprob: -13.561969757080078
    4. 'n' → logprob: -16.436969757080078
    5. ',' → logprob: -16.561969757080078
    6. '＝' → logprob: -16.686969757080078
    7. '=n' → logprob: -16.686969757080078
    8. '=((' → logprob: -16.936969757080078
    9. '=
' → logprob: -17.186969757080078
    10. ' =(' → logprob: -17.186969757080078

Token 1448: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.35027584433555603
    2. '(norm' → logprob: -1.3502758741378784
    3. '(math' → logprob: -3.850275754928589
    4. '(' → logprob: -4.725275993347168
    5. ' (' → logprob: -5.350275993347168
    6. '(normal' → logprob: -6.850275993347168
    7. '(n' → logprob: -8.475275993347168
    8. 'norm' → logprob: -9.350275993347168
    9. 'pos' → logprob: -10.600275993347168
    10. '(-' → logprob: -11.350275993347168

Token 1449: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.643152740551159e-05
    2. ' pos' → logprob: -10.250036239624023
    3. '(pos' → logprob: -14.500036239624023
    4. '-pos' → logprob: -15.250036239624023
    5. '   ' → logprob: -15.375036239624023
    6. '	pos' → logprob: -17.250036239624023
    7. '-' → logprob: -18.750036239624023
    8. '(' → logprob: -19.125036239624023
    9. '_pos' → logprob: -19.750036239624023
    10. ' ' → logprob: -19.875036239624023

Token 1450: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.375000953674316
    3. 'import' → logprob: -17.75
    4. '(' → logprob: -18.0
    5. '/' → logprob: -18.0
    6. ')' → logprob: -18.0
    7. ' /' → logprob: -18.5
    8. 'def' → logprob: -19.0
    9. '   ' → logprob: -19.0
    10. ',' → logprob: -19.125

Token 1451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. ' ' → logprob: -16.500001907348633
    4. '
' → logprob: -17.375001907348633
    5. '۰' → logprob: -17.500001907348633
    6. '(' → logprob: -17.625001907348633
    7. '-' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '```' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -19.375001907348633

Token 1452: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.354625940322876
    2. ' /' → logprob: -1.229625940322876
    3. ',' → logprob: -5.354625701904297
    4. '/math' → logprob: -6.979625701904297
    5. ',pos' → logprob: -8.229625701904297
    6. 'pos' → logprob: -8.729625701904297
    7. '   ' → logprob: -10.604625701904297
    8. ' ,' → logprob: -11.604625701904297
    9. '/(' → logprob: -11.604625701904297
    10. '/
' → logprob: -11.979625701904297

Token 1453: 'R' (ID: 49)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.025570590049028397
    2. 'R' → logprob: -4.150570392608643
    3. '1' → logprob: -4.900570392608643
    4. 'math' → logprob: -6.400570392608643
    5. ' norm' → logprob: -8.1505708694458
    6. 'abs' → logprob: -9.5255708694458
    7. '(norm' → logprob: -11.1505708694458
    8. ' R' → logprob: -12.6505708694458
    9. ' ' → logprob: -12.9005708694458
    10. '   ' → logprob: -14.1505708694458

Token 1454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ' ,' → logprob: -10.500049591064453
    3. ',pos' → logprob: -10.750049591064453
    4. ',
' → logprob: -14.625049591064453
    5. '   ' → logprob: -16.500049591064453
    6. ',p' → logprob: -18.125049591064453
    7. ',n' → logprob: -18.875049591064453
    8. 'pos' → logprob: -19.250049591064453
    9. ',\
' → logprob: -19.375049591064453
    10. ')' → logprob: -19.750049591064453

Token 1455: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0015023599844425917
    2. ' pos' → logprob: -6.501502513885498
    3. '	pos' → logprob: -17.126502990722656
    4. '   ' → logprob: -19.376502990722656
    5. '(pos' → logprob: -21.001502990722656
    6. '_pos' → logprob: -21.376502990722656
    7. '-pos' → logprob: -21.751502990722656
    8. '.pos' → logprob: -22.251502990722656
    9. '    ' → logprob: -22.376502990722656
    10. '[pos' → logprob: -23.251502990722656

Token 1456: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2246291337069124e-05
    2. '1' → logprob: -10.750021934509277
    3. '0' → logprob: -14.375021934509277
    4. '(' → logprob: -16.875022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '```' → logprob: -17.125022888183594
    7. '[
' → logprob: -17.250022888183594
    8. '
' → logprob: -17.500022888183594
    9. '.' → logprob: -17.500022888183594
    10. 'y' → logprob: -17.625022888183594

Token 1457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.375000953674316
    3. '0' → logprob: -15.625000953674316
    4. '(' → logprob: -16.0
    5. ' ' → logprob: -16.25
    6. '
' → logprob: -16.5
    7. '```' → logprob: -17.375
    8. '-' → logprob: -17.75
    9. '   ' → logprob: -17.875
    10. '

' → logprob: -18.25

Token 1458: ']/' (ID: 18500)
  Prédit: '/R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/R' → logprob: -0.00046510808169841766
    2. '/' → logprob: -8.375465393066406
    3. ' /' → logprob: -8.750465393066406
    4. ')/' → logprob: -10.375465393066406
    5. '[' → logprob: -10.625465393066406
    6. '/Re' → logprob: -12.000465393066406
    7. ')' → logprob: -12.250465393066406
    8. ']/' → logprob: -12.625465393066406
    9. '   ' → logprob: -13.375465393066406
    10. '*' → logprob: -14.375465393066406

Token 1459: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.704273118884885e-07
    2. ' R' → logprob: -14.375000953674316
    3. '1' → logprob: -17.125
    4. '   ' → logprob: -18.625
    5. ')' → logprob: -18.875
    6. ' ' → logprob: -19.375
    7. '(' → logprob: -19.75
    8. '	R' → logprob: -19.75
    9. '```' → logprob: -20.375
    10. '\
' → logprob: -20.75

Token 1460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.375001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ' )' → logprob: -14.625001907348633
    5. ')#' → logprob: -17.375001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. '       ' → logprob: -18.500001907348633
    8. ')return' → logprob: -18.500001907348633
    9. '),' → logprob: -18.875001907348633
    10. ')

' → logprob: -19.000001907348633

Token 1461: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3154290020465851
    2. '
' → logprob: -1.5654289722442627
    3. 'vel' → logprob: -3.9404289722442627
    4. '   ' → logprob: -4.065429210662842
    5. '        
' → logprob: -4.440429210662842
    6. ')' → logprob: -5.815429210662842
    7. '    
' → logprob: -6.065429210662842
    8. ',' → logprob: -6.315429210662842
    9. '<|end|>' → logprob: -6.440429210662842
    10. '  
' → logprob: -7.440429210662842

Token 1462: ' #' (ID: 1069)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.06922822445631027
    2. ')' → logprob: -3.444228172302246
    3. '   ' → logprob: -4.194228172302246
    4. '       ' → logprob: -4.194228172302246
    5. '
' → logprob: -6.944228172302246
    6. '#' → logprob: -7.319228172302246
    7. 'return' → logprob: -7.319228172302246
    8. '<|end|>' → logprob: -7.694228172302246
    9. '        
' → logprob: -7.819228172302246
    10. ',' → logprob: -7.944228172302246

Token 1463: ' vect' (ID: 106052)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.00017946491425391287
    2. 'return' → logprob: -9.125179290771484
    3. ' vel' → logprob: -10.125179290771484
    4. '   ' → logprob: -10.875179290771484
    5. 'n' → logprob: -12.750179290771484
    6. 'v' → logprob: -13.250179290771484
    7. '
' → logprob: -13.500179290771484
    8. '       ' → logprob: -14.125179290771484
    9. '```' → logprob: -14.125179290771484
    10. ')' → logprob: -14.250179290771484

Token 1464: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -7.314625690924004e-05
    2. 'e' → logprob: -10.625073432922363
    3. 'or' → logprob: -10.875073432922363
    4. '[' → logprob: -11.750073432922363
    5. 'eurs' → logprob: -12.500073432922363
    6. 'er' → logprob: -12.625073432922363
    7. 'u' → logprob: -13.000073432922363
    8. 'eu' → logprob: -13.125073432922363
    9. '=' → logprob: -13.625073432922363
    10. '(' → logprob: -13.625073432922363

Token 1465: ' un' (ID: 537)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.3460565507411957
    2. ' normal' → logprob: -1.471056580543518
    3. 'norm' → logprob: -3.2210564613342285
    4. 'n' → logprob: -3.8460564613342285
    5. '_normal' → logprob: -7.4710564613342285
    6. '(normal' → logprob: -8.221056938171387
    7. ' normale' → logprob: -8.721056938171387
    8. 'un' → logprob: -8.971056938171387
    9. ' n' → logprob: -9.596056938171387
    10. ' norm' → logprob: -9.721056938171387

Token 1466: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.10337729007005692
    2. 'it' → logprob: -2.353377342224121
    3. '(' → logprob: -6.728377342224121
    4. ' (' → logprob: -7.103377342224121
    5. '(it' → logprob: -8.353377342224121
    6. 'ité' → logprob: -8.603377342224121
    7. '(
' → logprob: -8.978377342224121
    8. 'itary' → logprob: -9.103377342224121
    9. 'i' → logprob: -9.603377342224121
    10. '(n' → logprob: -9.603377342224121

Token 1467: ' normal' (ID: 6078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2474678754806519
    2. 'vel' → logprob: -1.2474678754806519
    3. '
' → logprob: -1.8724678754806519
    4. '<|end|>' → logprob: -1.8724678754806519
    5. '   ' → logprob: -3.3724679946899414
    6. ')' → logprob: -3.6224679946899414
    7. '        
' → logprob: -3.6224679946899414
    8. '    
' → logprob: -4.997467994689941
    9. '\n' → logprob: -5.372467994689941
    10. ',' → logprob: -5.497467994689941

Token 1468: ' extérieur' (ID: 110765)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010428770445287228
    2. ')' → logprob: -5.5104289054870605
    3. '   ' → logprob: -6.2604289054870605
    4. '
' → logprob: -6.2604289054870605
    5. '<|end|>' → logprob: -6.6354289054870605
    6. ',' → logprob: -7.8854289054870605
    7. '        
' → logprob: -8.010428428649902
    8. ')
' → logprob: -9.635428428649902
    9. '[' → logprob: -9.635428428649902
    10. 'return' → logprob: -9.885428428649902

Token 1469: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04487992823123932
    2. '   ' → logprob: -3.544879913330078
    3. '
' → logprob: -5.419879913330078
    4. '        
' → logprob: -5.669879913330078
    5. 'vel' → logprob: -5.794879913330078
    6. ')' → logprob: -6.044879913330078
    7. '    
' → logprob: -7.419879913330078
    8. ',' → logprob: -7.794879913330078
    9. '<|end|>' → logprob: -8.419879913330078
    10. '  
' → logprob: -8.919879913330078

Token 1470: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.05997132882475853
    2. '       ' → logprob: -3.309971332550049
    3. '   ' → logprob: -4.434971332550049
    4. '
' → logprob: -4.809971332550049
    5. ' vel' → logprob: -7.434971332550049
    6. '```' → logprob: -8.05997085571289
    7. '        
' → logprob: -8.30997085571289
    8. '    
' → logprob: -8.93497085571289
    9. 'velocity' → logprob: -9.18497085571289
    10. 'v' → logprob: -9.80997085571289

Token 1471: ' #' (ID: 1069)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.00015550498210359365
    2. '       ' → logprob: -9.250155448913574
    3. '   ' → logprob: -10.375155448913574
    4. 'v' → logprob: -11.375155448913574
    5. ' vel' → logprob: -11.625155448913574
    6. 'velocity' → logprob: -12.375155448913574
    7. '```' → logprob: -13.875155448913574
    8. '#' (adapté à ' #') → logprob: -14.125155448913574
    9. '
' → logprob: -14.125155448913574
    10. '        
' → logprob: -15.250155448913574

Token 1472: ' ' (ID: 220)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.771655115589965e-05
    2. '   ' → logprob: -11.875018119812012
    3. 'v' → logprob: -12.125018119812012
    4. ' vel' → logprob: -13.000018119812012
    5. '#' → logprob: -13.750018119812012
    6. '       ' → logprob: -13.875018119812012
    7. 'vx' → logprob: -14.875018119812012
    8. 'new' → logprob: -15.875018119812012
    9. '```' → logprob: -16.000017166137695
    10. 'velocity' → logprob: -16.250017166137695

Token 1473: '6' (ID: 21)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.4021237802808173e-05
    2. '#' → logprob: -12.250014305114746
    3. 'v' → logprob: -12.250014305114746
    4. '   ' → logprob: -13.000014305114746
    5. ' vel' → logprob: -13.875014305114746
    6. '       ' → logprob: -14.500014305114746
    7. '```' → logprob: -15.500014305114746
    8. 'new' → logprob: -15.875014305114746
    9. 'vx' → logprob: -15.875014305114746
    10. '
' → logprob: -16.37501335144043

Token 1474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8205999135971069
    2. 'vel' → logprob: -1.320599913597107
    3. '   ' → logprob: -1.320599913597107
    4. ' vel' → logprob: -4.0706000328063965
    5. '       ' → logprob: -5.6956000328063965
    6. ' =' → logprob: -6.3206000328063965
    7. '=' → logprob: -6.5706000328063965
    8. ')
' → logprob: -7.5706000328063965
    9. '
' → logprob: -7.6956000328063965
    10. ' )' → logprob: -8.445599555969238

Token 1475: ' Ré' (ID: 27181)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0008274946012534201
    2. ' vel' → logprob: -8.12582778930664
    3. '   ' → logprob: -8.62582778930664
    4. 'v' → logprob: -8.75082778930664
    5. '       ' → logprob: -9.25082778930664
    6. '#' → logprob: -10.12582778930664
    7. '
' → logprob: -11.00082778930664
    8. 'velocity' → logprob: -11.75082778930664
    9. 'return' → logprob: -12.25082778930664
    10. 'new' → logprob: -12.37582778930664

Token 1476: 'fl' (ID: 1836)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05285422131419182
    2. 'fl' → logprob: -3.427854299545288
    3. 'flex' → logprob: -4.677854061126709
    4. 'turn' → logprob: -4.927854061126709
    5. 'fle' → logprob: -6.177854061126709
    6. 'vel' → logprob: -8.177854537963867
    7. 'v' → logprob: -9.927854537963867
    8. 't' → logprob: -10.177854537963867
    9. 'return' → logprob: -11.427854537963867
    10. '
' → logprob: -11.927854537963867

Token 1477: 'éch' (ID: 69012)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0005106182070448995
    2. 'lect' → logprob: -7.7505106925964355
    3. 'elect' → logprob: -10.625510215759277
    4. 'e' → logprob: -11.250510215759277
    5. 'é' → logprob: -11.500510215759277
    6. 'ected' → logprob: -11.625510215759277
    7. 'et' → logprob: -12.125510215759277
    8. 'ec' → logprob: -12.500510215759277
    9. '   ' → logprob: -12.500510215759277
    10. '#' → logprob: -12.625510215759277

Token 1478: 'ir' (ID: 380)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0013003537897020578
    2. 'et' → logprob: -6.75130033493042
    3. 'ech' → logprob: -10.126300811767578
    4. 'er' → logprob: -10.376300811767578
    5. 'ec' → logprob: -10.501300811767578
    6. 'e' → logprob: -11.501300811767578
    7. 'é' → logprob: -12.126300811767578
    8. 'ection' → logprob: -12.626300811767578
    9. 'ex' → logprob: -13.126300811767578
    10. '#' → logprob: -13.376300811767578

Token 1479: ' la' (ID: 557)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.003178901970386505
    2. ' vel' → logprob: -6.12817907333374
    3. '       ' → logprob: -7.75317907333374
    4. '   ' → logprob: -8.003178596496582
    5. 'v' → logprob: -9.253178596496582
    6. 'return' → logprob: -10.878178596496582
    7. 'velocity' → logprob: -10.878178596496582
    8. '_vel' → logprob: -11.128178596496582
    9. '=' → logprob: -11.378178596496582
    10. 've' → logprob: -11.378178596496582

Token 1480: ' vitesse' (ID: 71752)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0004994167247787118
    2. ' vel' → logprob: -7.875499248504639
    3. 'v' → logprob: -10.000499725341797
    4. 'velocity' → logprob: -10.500499725341797
    5. 'reflect' → logprob: -11.000499725341797
    6. 've' → logprob: -12.125499725341797
    7. 'velo' → logprob: -12.125499725341797
    8. '   ' → logprob: -12.375499725341797
    9. '(' → logprob: -13.250499725341797
    10. '
' → logprob: -13.500499725341797

Token 1481: ' selon' (ID: 27571)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.040104251354932785
    2. ' vel' → logprob: -3.9151041507720947
    3. ' =' → logprob: -4.290104389190674
    4. '=' → logprob: -5.290104389190674
    5. '   ' → logprob: -7.790104389190674
    6. '       ' → logprob: -9.665103912353516
    7. 'velocity' → logprob: -10.040103912353516
    8. '=
' → logprob: -10.790103912353516
    9. ' velocity' → logprob: -11.040103912353516
    10. ',' → logprob: -11.040103912353516

Token 1482: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02586255595088005
    2. '(n' → logprob: -4.775862693786621
    3. ' n' → logprob: -4.775862693786621
    4. '(v' → logprob: -5.900862693786621
    5. 'reflect' → logprob: -6.275862693786621
    6. 'la' → logprob: -6.900862693786621
    7. ' la' → logprob: -7.275862693786621
    8. 'v' → logprob: -7.400862693786621
    9. 'le' → logprob: -8.150862693786621
    10. 'vel' → logprob: -8.275862693786621

Token 1483: ' normale' (ID: 57494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43713855743408203
    2. 'reflect' → logprob: -1.062138557434082
    3. ' reflect' → logprob: -5.312138557434082
    4. 'normal' → logprob: -6.187138557434082
    5. ' n' → logprob: -7.062138557434082
    6. '(n' → logprob: -8.562138557434082
    7. 'norm' → logprob: -9.437138557434082
    8. ' normal' → logprob: -9.562138557434082
    9. 'v' → logprob: -10.187138557434082
    10. '
' → logprob: -10.187138557434082

Token 1484: '
' (ID: 198)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0009974405402317643
    2. ' vel' → logprob: -7.500997543334961
    3. '       ' → logprob: -8.875997543334961
    4. '
' → logprob: -8.875997543334961
    5. 'velocity' → logprob: -9.000997543334961
    6. '   ' → logprob: -10.625997543334961
    7. '```' → logprob: -12.500997543334961
    8. ' velocity' → logprob: -12.750997543334961
    9. 'velo' → logprob: -13.125997543334961
    10. '        
' → logprob: -13.250997543334961

Token 1485: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0018762783147394657
    2. ' vel' → logprob: -6.626876354217529
    3. '   ' → logprob: -7.626876354217529
    4. 'velocity' → logprob: -10.626875877380371
    5. 'return' → logprob: -10.626875877380371
    6. '       ' → logprob: -11.626875877380371
    7. '```' → logprob: -13.626875877380371
    8. 'velo' → logprob: -13.876875877380371
    9. ' return' → logprob: -14.126875877380371
    10. '
' → logprob: -14.626875877380371

Token 1486: ' v' (ID: 323)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -5.490809417096898e-05
    2. ' vel' → logprob: -9.875055313110352
    3. 'velocity' → logprob: -13.125055313110352
    4. '   ' → logprob: -14.250055313110352
    5. '       ' → logprob: -14.375055313110352
    6. '```' → logprob: -16.87505531311035
    7. 'velo' → logprob: -17.12505531311035
    8. 'v' (adapté à ' v') → logprob: -17.87505531311035
    9. 've' → logprob: -18.00005531311035
    10. 'return' → logprob: -18.25005531311035

Token 1487: '_len' (ID: 13683)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.00045140698784962296
    2. '=' → logprob: -8.37545108795166
    3. 'al' → logprob: -9.12545108795166
    4. ' =' → logprob: -9.12545108795166
    5. 'e' → logprob: -14.00045108795166
    6. 'vel' → logprob: -14.75045108795166
    7. 'els' → logprob: -15.25045108795166
    8. '   ' → logprob: -15.50045108795166
    9. 'elif' → logprob: -16.000452041625977
    10. 'ol' → logprob: -16.125452041625977

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28132688999176025
    2. ' =' → logprob: -1.4063268899917603
    3. '[' → logprob: -9.531327247619629
    4. ',' → logprob: -9.656327247619629
    5. ')' → logprob: -11.281327247619629
    6. '_' → logprob: -12.156327247619629
    7. '_norm' → logprob: -12.531327247619629
    8. '(' → logprob: -12.781327247619629
    9. '   ' → logprob: -13.156327247619629
    10. 'ector' → logprob: -13.281327247619629

Token 1489: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.0067363339476287365
    2. ' norm' → logprob: -5.0067362785339355
    3. 'math' → logprob: -11.256736755371094
    4. '(norm' → logprob: -11.756736755371094
    5. ' math' → logprob: -16.006736755371094
    6. '.norm' → logprob: -17.131736755371094
    7. 'orm' → logprob: -17.256736755371094
    8. ' ' → logprob: -17.756736755371094
    9. '_norm' → logprob: -18.006736755371094
    10. '(' → logprob: -18.381736755371094

Token 1490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.6550729419104755e-05
    2. 'vel' → logprob: -10.250036239624023
    3. ' (' → logprob: -14.625036239624023
    4. '(v' → logprob: -14.625036239624023
    5. '(
' → logprob: -16.000036239624023
    6. ' vel' → logprob: -16.375036239624023
    7. '_vel' → logprob: -18.250036239624023
    8. '((' → logprob: -18.375036239624023
    9. 'Vel' → logprob: -19.250036239624023
    10. ')' → logprob: -19.375036239624023

Token 1491: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0001625379954930395
    2. '(' → logprob: -8.750162124633789
    3. ' vel' → logprob: -12.500162124633789
    4. ')' → logprob: -15.250162124633789
    5. ' (' → logprob: -17.37516212463379
    6. 'velo' → logprob: -17.37516212463379
    7. 'v' → logprob: -17.75016212463379
    8. '(v' → logprob: -18.75016212463379
    9. 'velocity' → logprob: -19.12516212463379
    10. 'Vel' → logprob: -19.25016212463379

Token 1492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048848848789930344
    2. ')
' → logprob: -3.048848867416382
    3. '())' → logprob: -9.173849105834961
    4. '()' → logprob: -9.673849105834961
    5. ')

' → logprob: -10.423849105834961
    6. '())
' → logprob: -10.548849105834961
    7. '(' → logprob: -11.423849105834961
    8. ' )' → logprob: -12.173849105834961
    9. ')>' → logprob: -12.798849105834961
    10. ')
' → logprob: -13.048849105834961

Token 1493: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.07299231737852097
    2. '   ' → logprob: -3.4479923248291016
    3. ' vel' → logprob: -4.197992324829102
    4. '       ' → logprob: -4.697992324829102
    5. '
' → logprob: -5.447992324829102
    6. 'v' → logprob: -5.447992324829102
    7. ' =' → logprob: -6.947992324829102
    8. '    
' → logprob: -7.072992324829102
    9. '  
' → logprob: -7.197992324829102
    10. '=' → logprob: -7.322992324829102

Token 1494: ' v' (ID: 323)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.2230033427476883
    2. 'v' (adapté à ' v') → logprob: -1.7230033874511719
    3. ' vel' → logprob: -4.598003387451172
    4. '   ' → logprob: -5.473003387451172
    5. ' v' → logprob: -6.348003387451172
    6. 'return' → logprob: -6.348003387451172
    7. '(' → logprob: -6.973003387451172
    8. ' (' → logprob: -7.223003387451172
    9. '       ' → logprob: -7.598003387451172
    10. 'new' → logprob: -8.473003387451172

Token 1495: '_norm' (ID: 46119)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.762438178062439
    2. ' =' → logprob: -1.387438178062439
    3. '=' → logprob: -1.637438178062439
    4. 'el' → logprob: -3.0124382972717285
    5. '_unit' → logprob: -4.5124382972717285
    6. '_norm' → logprob: -4.6374382972717285
    7. '_x' → logprob: -5.6374382972717285
    8. '[' → logprob: -5.8874382972717285
    9. '_new' → logprob: -6.0124382972717285
    10. 'ect' → logprob: -6.1374382972717285

Token 1496: 'ed' (ID: 295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6348456740379333
    2. ' =' → logprob: -0.7598456740379333
    3. '=(' → logprob: -6.884845733642578
    4. '/' → logprob: -8.009845733642578
    5. '(' → logprob: -8.134845733642578
    6. ' /' → logprob: -9.384845733642578
    7. '_unit' → logprob: -9.634845733642578
    8. '=v' → logprob: -10.134845733642578
    9. ' =(' → logprob: -10.134845733642578
    10. '_norm' → logprob: -10.134845733642578

Token 1497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25204232335090637
    2. ' =' → logprob: -1.502042293548584
    3. '(' → logprob: -9.627042770385742
    4. ' (' → logprob: -10.377042770385742
    5. '(v' → logprob: -12.127042770385742
    6. '=(' → logprob: -12.252042770385742
    7. ',' → logprob: -13.252042770385742
    8. 'v' → logprob: -13.877042770385742
    9. ')' → logprob: -14.002042770385742
    10. ' =(' → logprob: -14.252042770385742

Token 1498: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3927401304244995
    2. '(v' → logprob: -1.1427401304244995
    3. ' (' → logprob: -5.142740249633789
    4. '   ' → logprob: -11.892740249633789
    5. '(ref' → logprob: -13.642740249633789
    6. ' ' → logprob: -14.642740249633789
    7. '(val' → logprob: -14.767740249633789
    8. '((' → logprob: -15.017740249633789
    9. '  ' → logprob: -15.267740249633789
    10. '(vo' → logprob: -15.392740249633789

Token 1499: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.625000953674316
    3. ' vel' → logprob: -15.125000953674316
    4. 'vx' → logprob: -15.250000953674316
    5. 'velocity' → logprob: -17.250001907348633
    6. 'vell' → logprob: -18.125001907348633
    7. 'velo' → logprob: -18.250001907348633
    8. '(' → logprob: -18.875001907348633
    9. '_vel' → logprob: -19.375001907348633
    10. 'veli' → logprob: -19.375001907348633

Token 1500: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9146995327901095e-05
    2. '0' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. ' /' → logprob: -17.250019073486328
    5. '/' → logprob: -17.375019073486328
    6. ' [' → logprob: -17.625019073486328
    7. '```' → logprob: -18.000019073486328
    8. 'v' → logprob: -18.375019073486328
    9. '[
' → logprob: -18.625019073486328
    10. '(' → logprob: -18.750019073486328

Token 1501: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.37501335144043
    4. '   ' → logprob: -17.00001335144043
    5. ' /' → logprob: -18.75001335144043
    6. '(' → logprob: -19.50001335144043
    7. '/' → logprob: -19.75001335144043
    8. '۰' → logprob: -19.87501335144043
    9. '```' → logprob: -20.00001335144043
    10. '1' → logprob: -20.56251335144043

Token 1502: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6957735419273376
    2. ' /' → logprob: -0.6957735419273376
    3. '/v' → logprob: -5.945773601531982
    4. '/
' → logprob: -12.320773124694824
    5. ' /
' → logprob: -14.445773124694824
    6. ',' → logprob: -15.695773124694824
    7. 'v' → logprob: -15.820773124694824
    8. '/n' → logprob: -16.44577407836914
    9. '/

' → logprob: -16.57077407836914
    10. ')' → logprob: -16.57077407836914

Token 1503: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. '	v' → logprob: -20.1250057220459
    4. ')v' → logprob: -21.1250057220459
    5. '   ' → logprob: -21.8750057220459
    6. '
' → logprob: -23.5000057220459
    7. '*v' → logprob: -23.8750057220459
    8. 'norm' → logprob: -24.2500057220459
    9. 'vq' → logprob: -25.0000057220459
    10. ')' → logprob: -25.1250057220459

Token 1504: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.583550642360933e-05
    2. 'len' → logprob: -10.250036239624023
    3. '_LEN' → logprob: -16.125036239624023
    4. 'Len' → logprob: -16.375036239624023
    5. 'l' → logprob: -17.000036239624023
    6. 'e' → logprob: -17.750036239624023
    7. '_length' → logprob: -17.875036239624023
    8. 'length' → logprob: -18.375036239624023
    9. '_l' → logprob: -18.500036239624023
    10. '_le' → logprob: -18.625036239624023

Token 1505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.875032424926758
    3. ',
' → logprob: -11.625032424926758
    4. ',v' → logprob: -12.375032424926758
    5. ',\
' → logprob: -17.375032424926758
    6. 'v' → logprob: -17.500032424926758
    7. '‌,' → logprob: -17.500032424926758
    8. '   ' → logprob: -18.000032424926758
    9. ',

' → logprob: -18.750032424926758
    10. '```' → logprob: -19.125032424926758

Token 1506: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0019289902411401272
    2. ' vel' → logprob: -6.251928806304932
    3. 'velo' → logprob: -14.75192928314209
    4. '_vel' → logprob: -17.751928329467773
    5. 'Vel' → logprob: -18.376928329467773
    6. 'v' → logprob: -18.501928329467773
    7. 'velocity' → logprob: -18.876928329467773
    8. '.vel' → logprob: -19.251928329467773
    9. 'veli' → logprob: -19.376928329467773
    10. '   ' → logprob: -19.376928329467773

Token 1507: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03387896716594696
    2. '1' → logprob: -3.408879041671753
    3. '0' → logprob: -8.408879280090332
    4. '(' → logprob: -12.533879280090332
    5. ' ' → logprob: -13.158879280090332
    6. '   ' → logprob: -13.158879280090332
    7. 'vel' → logprob: -13.408879280090332
    8. '```' → logprob: -14.283879280090332
    9. '-' → logprob: -15.533879280090332
    10. ' [' → logprob: -16.158878326416016

Token 1508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. 'v' → logprob: -10.000051498413086
    3. 'vel' → logprob: -12.500051498413086
    4. ' ' → logprob: -13.875051498413086
    5. '   ' → logprob: -14.125051498413086
    6. '0' → logprob: -15.125051498413086
    7. '
' → logprob: -16.375051498413086
    8. '```' → logprob: -16.375051498413086
    9. '[' → logprob: -17.000051498413086
    10. '(' → logprob: -17.125051498413086

Token 1509: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.07592559605836868
    2. '/v' → logprob: -2.700925588607788
    3. ' /' → logprob: -5.825925827026367
    4. ',' → logprob: -6.200925827026367
    5. ')' → logprob: -7.700925827026367
    6. '),' → logprob: -9.200925827026367
    7. ')/' → logprob: -9.575925827026367
    8. '[' → logprob: -9.700925827026367
    9. '/,' → logprob: -9.825925827026367
    10. 'v' → logprob: -9.950925827026367

Token 1510: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.250000953674316
    3. '	v' → logprob: -19.125
    4. ')v' → logprob: -21.125
    5. 'vel' → logprob: -21.25
    6. '(v' → logprob: -22.375
    7. '   ' → logprob: -22.375
    8. ',v' → logprob: -24.0
    9. '
' → logprob: -24.375
    10. '<v' → logprob: -24.5

Token 1511: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0004388942907098681
    2. 'len' → logprob: -8.500438690185547
    3. 'v' → logprob: -9.375438690185547
    4. '[' → logprob: -9.500438690185547
    5. 'Len' → logprob: -10.250438690185547
    6. '/v' → logprob: -11.125438690185547
    7. '/' → logprob: -11.500438690185547
    8. '_norm' → logprob: -11.875438690185547
    9. '_LEN' → logprob: -12.500438690185547
    10. '_length' → logprob: -13.750438690185547

Token 1512: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ',' → logprob: -11.500022888183594
    3. ' )' → logprob: -11.500022888183594
    4. ')
' → logprob: -14.000022888183594
    5. '   ' → logprob: -14.125022888183594
    6. '),' → logprob: -15.125022888183594
    7. '[' → logprob: -16.125022888183594
    8. ')

' → logprob: -16.625022888183594
    9. '       ' → logprob: -17.250022888183594
    10. ']' → logprob: -17.500022888183594

Token 1513: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.14882171154022217
    2. 'v' → logprob: -2.3988218307495117
    3. '   ' → logprob: -3.1488218307495117
    4. ' vel' → logprob: -5.773821830749512
    5. 'return' → logprob: -7.773821830749512
    6. ' v' → logprob: -7.898821830749512
    7. '       ' → logprob: -8.148821830749512
    8. '```' → logprob: -9.148821830749512
    9. ')' → logprob: -10.023821830749512
    10. ' return' → logprob: -10.398821830749512

Token 1514: ' v' (ID: 323)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.0005881795077584684
    2. 'return' → logprob: -7.875588417053223
    3. '   ' → logprob: -9.875588417053223
    4. 'v' (adapté à ' v') → logprob: -10.000588417053223
    5. ' vel' → logprob: -10.000588417053223
    6. '(' → logprob: -10.000588417053223
    7. '       ' → logprob: -11.875588417053223
    8. 'new' → logprob: -12.375588417053223
    9. '           ' → logprob: -13.750588417053223
    10. 'velo' → logprob: -13.750588417053223

Token 1515: '_ref' (ID: 17663)
  Prédit: '_norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -0.006410770583897829
    2. '_ref' → logprob: -5.881410598754883
    3. 'norm' → logprob: -6.506410598754883
    4. '=' → logprob: -6.756410598754883
    5. 'new' → logprob: -7.881410598754883
    6. ' =' → logprob: -8.381410598754883
    7. '_new' → logprob: -8.756410598754883
    8. '_' → logprob: -9.506410598754883
    9. 'ref' → logprob: -10.506410598754883
    10. 'v' → logprob: -10.756410598754883

Token 1516: 'lected' (ID: 2576)
  Prédit: 'lect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lect' → logprob: -0.25252267718315125
    2. 'lected' → logprob: -1.5025227069854736
    3. '(' → logprob: -8.002522468566895
    4. '=' → logprob: -9.502522468566895
    5. 'l' → logprob: -9.752522468566895
    6. '_' → logprob: -9.877522468566895
    7. ' =' → logprob: -11.002522468566895
    8. 'ected' → logprob: -11.127522468566895
    9. 'lec' → logprob: -11.752522468566895
    10. 'le' → logprob: -12.377522468566895

Token 1517: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603936105966568
    2. ' =' → logprob: -1.9103935956954956
    3. ')' → logprob: -9.285393714904785
    4. ',' → logprob: -9.660393714904785
    5. ')=' → logprob: -11.785393714904785
    6. '(' → logprob: -13.035393714904785
    7. '=v' → logprob: -13.285393714904785
    8. '),' → logprob: -15.285393714904785
    9. '<|end|>' → logprob: -15.535393714904785
    10. ' ' → logprob: -15.535393714904785

Token 1518: ' reflect' (ID: 12140)
  Prédit: 'reflect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflect' → logprob: -0.011047814972698689
    2. ' reflect' → logprob: -4.511047840118408
    3. '.reflect' → logprob: -17.63604736328125
    4. 'Reflect' → logprob: -18.13604736328125
    5. 'ref' → logprob: -18.26104736328125
    6. '   ' → logprob: -18.63604736328125
    7. '(' → logprob: -19.88604736328125
    8. ' ' → logprob: -20.01104736328125
    9. '(ref' → logprob: -21.88604736328125
    10. ' reflet' → logprob: -22.13604736328125

Token 1519: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.005285461433231831
    2. '(' → logprob: -5.255285263061523
    3. ' (' → logprob: -10.505285263061523
    4. '(
' → logprob: -10.630285263061523
    5. 'v' → logprob: -16.630285263061523
    6. '(

' → logprob: -17.380285263061523
    7. ' ' → logprob: -18.505285263061523
    8. ' (
' → logprob: -18.505285263061523
    9. '(var' → logprob: -18.880285263061523
    10. ' v' → logprob: -19.005285263061523

Token 1520: '_norm' (ID: 46119)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.024609951302409172
    2. ',' → logprob: -4.5246100425720215
    3. ',v' → logprob: -4.8996100425720215
    4. 'v' → logprob: -5.3996100425720215
    5. '(' → logprob: -7.7746100425720215
    6. ' v' → logprob: -8.274609565734863
    7. ' (' → logprob: -8.399609565734863
    8. '[v' → logprob: -8.774609565734863
    9. '_norm' → logprob: -9.149609565734863
    10. ' ,' → logprob: -9.399609565734863

Token 1521: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00017147827020380646
    2. '(v' → logprob: -8.750171661376953
    3. 'ected' → logprob: -11.875171661376953
    4. '(' → logprob: -13.500171661376953
    5. 'ored' → logprob: -13.750171661376953
    6. '[' → logprob: -14.000171661376953
    7. 'ied' → logprob: -14.125171661376953
    8. 'ized' → logprob: -14.500171661376953
    9. '{' → logprob: -14.875171661376953
    10. ')' → logprob: -15.375171661376953

Token 1522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022928470571059734
    2. ',n' → logprob: -8.750228881835938
    3. ' ,' → logprob: -10.500228881835938
    4. '(' → logprob: -11.000228881835938
    5. '(n' → logprob: -11.375228881835938
    6. ',
' → logprob: -12.000228881835938
    7. ',v' → logprob: -12.125228881835938
    8. 'v' → logprob: -13.375228881835938
    9. 'n' → logprob: -13.875228881835938
    10. ')' → logprob: -15.125228881835938

Token 1523: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.500158309936523
    4. '	n' → logprob: -17.500158309936523
    5. ')n' → logprob: -17.625158309936523
    6. ')' → logprob: -19.250158309936523
    7. '       ' → logprob: -19.750158309936523
    8. ' н' → logprob: -19.875158309936523
    9. '
' → logprob: -20.375158309936523
    10. '(n' → logprob: -20.500158309936523

Token 1524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00745589192956686
    2. ' *' → logprob: -6.257455825805664
    3. ')
' → logprob: -6.507455825805664
    4. ')*' → logprob: -6.757455825805664
    5. '*' → logprob: -7.507455825805664
    6. '       ' → logprob: -7.632455825805664
    7. '*v' → logprob: -7.757455825805664
    8. '   ' → logprob: -7.882455825805664
    9. '[' → logprob: -8.507455825805664
    10. 'v' → logprob: -8.757455825805664

Token 1525: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.5475215315818787
    2. '       ' → logprob: -1.0475215911865234
    3. '   ' → logprob: -4.047521591186523
    4. 'v' → logprob: -4.047521591186523
    5. ' vel' → logprob: -4.297521591186523
    6. '        
' → logprob: -5.547521591186523
    7. 'velocity' → logprob: -5.547521591186523
    8. 'return' → logprob: -6.047521591186523
    9. '```' → logprob: -6.297521591186523
    10. ' 
' → logprob: -6.422521591186523

Token 1526: ' #' (ID: 1069)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.004195455927401781
    2. '       ' → logprob: -6.254195690155029
    3. ' vel' → logprob: -7.129195690155029
    4. 'v' → logprob: -7.129195690155029
    5. 'return' → logprob: -8.129195213317871
    6. 'velocity' → logprob: -9.379195213317871
    7. '        
' → logprob: -9.379195213317871
    8. '   ' → logprob: -9.504195213317871
    9. 'vx' → logprob: -10.754195213317871
    10. '```' → logprob: -10.754195213317871

Token 1527: ' Gard' (ID: 28681)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.00018506382184568793
    2. '       ' → logprob: -9.125185012817383
    3. 'v' → logprob: -10.000185012817383
    4. 'vx' → logprob: -11.750185012817383
    5. '   ' → logprob: -11.875185012817383
    6. ' vel' → logprob: -12.000185012817383
    7. 'return' → logprob: -12.625185012817383
    8. '#' → logprob: -12.750185012817383
    9. 'velocity' → logprob: -13.500185012817383
    10. 'velo' → logprob: -14.250185012817383

Token 1528: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -11.375040054321289
    3. 'erv' → logprob: -11.625040054321289
    4. 'e' → logprob: -11.875040054321289
    5. '[' → logprob: -12.875040054321289
    6. '=' → logprob: -13.250040054321289
    7. '       ' → logprob: -13.375040054321289
    8. '   ' → logprob: -13.625040054321289
    9. '#' → logprob: -13.875040054321289
    10. '
' → logprob: -14.000040054321289

Token 1529: ' la' (ID: 557)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.013407032005488873
    2. '(' → logprob: -4.763407230377197
    3. ' (' → logprob: -5.513407230377197
    4. 'v' → logprob: -7.388407230377197
    5. 'vel' → logprob: -9.638406753540039
    6. ' v' → logprob: -10.638406753540039
    7. '(
' → logprob: -11.013406753540039
    8. '(norm' → logprob: -11.388406753540039
    9. '   ' → logprob: -12.888406753540039
    10. '(n' → logprob: -13.013406753540039

Token 1530: ' même' (ID: 9679)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5922107100486755
    2. '(v' → logprob: -1.3422107696533203
    3. '(' → logprob: -1.8422107696533203
    4. 'vel' → logprob: -3.7172107696533203
    5. ' v' → logprob: -6.84221076965332
    6. ' (' → logprob: -7.09221076965332
    7. 'velocity' → logprob: -7.34221076965332
    8. '(
' → logprob: -8.84221076965332
    9. ' vel' → logprob: -10.34221076965332
    10. '(norm' → logprob: -10.96721076965332

Token 1531: ' norme' (ID: 117592)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0657961368560791
    2. 'vel' → logprob: -3.940796136856079
    3. ' v' → logprob: -4.1907958984375
    4. ' vitesse' → logprob: -4.1907958984375
    5. 'length' → logprob: -5.4407958984375
    6. '
' → logprob: -5.9407958984375
    7. ' length' → logprob: -6.8157958984375
    8. ' longueur' → logprob: -6.9407958984375
    9. 'vit' → logprob: -7.5657958984375
    10. 'velocity' → logprob: -7.6907958984375

Token 1532: ' de' (ID: 334)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.46982717514038086
    2. ' vel' → logprob: -1.3448271751403809
    3. '       ' → logprob: -2.719827175140381
    4. '
' → logprob: -4.219827175140381
    5. '        
' → logprob: -4.469827175140381
    6. '    
' → logprob: -5.594827175140381
    7. '   ' → logprob: -5.594827175140381
    8. ',' → logprob: -5.844827175140381
    9. '```' → logprob: -6.219827175140381
    10. ' velocity' → logprob: -6.844827175140381

Token 1533: ' vitesse' (ID: 71752)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.1287587732076645
    2. 'v' → logprob: -2.128758668899536
    3. '(v' → logprob: -7.003758907318115
    4. '(' → logprob: -7.628758907318115
    5. 'velocity' → logprob: -8.878758430480957
    6. ' vel' → logprob: -9.253758430480957
    7. ' v' → logprob: -10.253758430480957
    8. 'vell' → logprob: -10.378758430480957
    9. 'vect' → logprob: -10.628758430480957
    10. 'velo' → logprob: -10.753758430480957

Token 1534: '
' (ID: 198)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.11143556982278824
    2. '
' → logprob: -2.986435651779175
    3. '       ' → logprob: -3.736435651779175
    4. ' vel' → logprob: -4.111435413360596
    5. '(' → logprob: -5.361435413360596
    6. '```' → logprob: -6.111435413360596
    7. '   ' → logprob: -6.611435413360596
    8. ',' → logprob: -6.861435413360596
    9. '        
' → logprob: -6.861435413360596
    10. '    
' → logprob: -7.611435413360596

Token 1535: '       ' (ID: 309)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.026157349348068237
    2. '       ' → logprob: -4.401157379150391
    3. ' vel' → logprob: -4.401157379150391
    4. '
' → logprob: -7.651157379150391
    5. 'velocity' → logprob: -8.40115737915039
    6. '        
' → logprob: -8.65115737915039
    7. '   ' → logprob: -9.27615737915039
    8. '```' → logprob: -9.65115737915039
    9. 'return' → logprob: -10.15115737915039
    10. '_vel' → logprob: -10.65115737915039

Token 1536: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' (adapté à ' vel') → logprob: -0.00043734462815336883
    2. ' vel' → logprob: -7.750437259674072
    3. '       ' → logprob: -12.12543773651123
    4. 'velocity' → logprob: -14.12543773651123
    5. '   ' → logprob: -15.62543773651123
    6. 'velo' → logprob: -16.375436782836914
    7. 'v' → logprob: -17.000436782836914
    8. '_vel' → logprob: -17.250436782836914
    9. 'vell' → logprob: -17.500436782836914
    10. 'return' → logprob: -17.500436782836914

Token 1537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00407923199236393
    2. ' =' → logprob: -5.504079341888428
    3. '=(' → logprob: -14.50407886505127
    4. '(' → logprob: -15.50407886505127
    5. '=v' → logprob: -17.254079818725586
    6. ')' → logprob: -18.004079818725586
    7. ')=' → logprob: -18.129079818725586
    8. '=
' → logprob: -18.254079818725586
    9. 'v' → logprob: -18.754079818725586
    10. ' =(' → logprob: -18.754079818725586

Token 1538: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -11.000033378601074
    3. ' (' → logprob: -11.000033378601074
    4. '   ' → logprob: -16.50003433227539
    5. '((' → logprob: -17.12503433227539
    6. ' ' → logprob: -19.62503433227539
    7. 'v' → logprob: -20.00003433227539
    8. '(
' → logprob: -20.37503433227539
    9. '(V' → logprob: -20.50003433227539
    10. '(float' → logprob: -20.75003433227539

Token 1539: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0683535037969705e-05
    2. 'vel' → logprob: -11.87501049041748
    3. ' v' → logprob: -12.62501049041748
    4. '   ' → logprob: -15.62501049041748
    5. ')v' → logprob: -16.500011444091797
    6. '	v' → logprob: -17.000011444091797
    7. '(v' → logprob: -19.250011444091797
    8. 'vx' → logprob: -19.625011444091797
    9. '?v' → logprob: -19.750011444091797
    10. 've' → logprob: -19.875011444091797

Token 1540: '_ref' (ID: 17663)
  Prédit: '_ref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ref' → logprob: -6.289473822107539e-05
    2. '[' → logprob: -10.000062942504883
    3. 'ref' → logprob: -11.125062942504883
    4. '_len' → logprob: -13.875062942504883
    5. 'el' → logprob: -14.375062942504883
    6. 'eref' → logprob: -15.250062942504883
    7. '_vel' → logprob: -15.250062942504883
    8. '_rel' → logprob: -16.000062942504883
    9. 'Ref' → logprob: -16.625062942504883
    10. '	ref' → logprob: -16.625062942504883

Token 1541: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.026684686541557312
    2. 'ected' → logprob: -4.276684761047363
    3. 'lect' → logprob: -4.401684761047363
    4. '(' → logprob: -9.401684761047363
    5. 'l' → logprob: -11.026684761047363
    6. 'leted' → logprob: -11.151684761047363
    7. '[' → logprob: -11.276684761047363
    8. 'tected' → logprob: -11.401684761047363
    9. 'el' → logprob: -11.651684761047363
    10. 'le' → logprob: -11.651684761047363

Token 1542: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ' ' → logprob: -17.500001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '
' → logprob: -18.000001907348633
    7. 'v' → logprob: -18.125001907348633
    8. ',' → logprob: -18.375001907348633
    9. ')' → logprob: -18.500001907348633
    10. '[
' → logprob: -18.875001907348633

Token 1543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '
' → logprob: -18.5625
    4. '۰' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -19.3125
    7. ' ' → logprob: -19.375
    8. '1' → logprob: -19.5625
    9. '٠' → logprob: -20.1875
    10. ']' → logprob: -20.375

Token 1544: ']*' (ID: 18579)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.5788967609405518
    2. '*' → logprob: -0.8288967609405518
    3. ' *' → logprob: -5.828896522521973
    4. '*object' → logprob: -12.453896522521973
    5. '*u' → logprob: -13.203896522521973
    6. '*w' → logprob: -13.703896522521973
    7. '*
' → logprob: -14.203896522521973
    8. ')*' → logprob: -14.578896522521973
    9. '*f' → logprob: -14.703896522521973
    10. '*b' → logprob: -14.953896522521973

Token 1545: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.320199877838604e-07
    2. ' v' → logprob: -15.0
    3. '	v' → logprob: -21.5
    4. ')v' → logprob: -23.625
    5. '
' → logprob: -24.125
    6. 'norm' → logprob: -24.125
    7. '*v' → logprob: -24.25
    8. '(v' → logprob: -24.25
    9. '$v' → logprob: -24.375
    10. 'vel' → logprob: -24.75

Token 1546: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.7697225252486533e-06
    2. 'len' → logprob: -12.500003814697266
    3. '_LEN' → logprob: -18.000003814697266
    4. '_' → logprob: -18.375003814697266
    5. '_l' → logprob: -18.625003814697266
    6. 'el' → logprob: -18.875003814697266
    7. '_length' → logprob: -19.000003814697266
    8. 'l' → logprob: -19.750003814697266
    9. 'Len' → logprob: -19.875003814697266
    10. '[len' → logprob: -19.875003814697266

Token 1547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.750004768371582
    3. ',
' → logprob: -13.375004768371582
    4. 'vel' → logprob: -17.250003814697266
    5. ',\
' → logprob: -17.375003814697266
    6. ',v' → logprob: -17.500003814697266
    7. ' vel' → logprob: -18.125003814697266
    8. ',

' → logprob: -19.375003814697266
    9. '‌,' → logprob: -19.625003814697266
    10. ',
' → logprob: -20.875003814697266

Token 1548: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009114635176956654
    2. ' v' → logprob: -7.000911235809326
    3. '	v' → logprob: -19.875911712646484
    4. 'vel' → logprob: -23.250911712646484
    5. ')v' → logprob: -24.000911712646484
    6. '   ' → logprob: -24.250911712646484
    7. '    ' → logprob: -24.250911712646484
    8. '_v' → logprob: -25.000911712646484
    9. 'vi' → logprob: -25.375911712646484
    10. '(v' → logprob: -25.750911712646484

Token 1549: '_ref' (ID: 17663)
  Prédit: '_ref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ref' → logprob: -0.0011722482740879059
    2. 'ref' → logprob: -6.751172065734863
    3. '[' → logprob: -13.251172065734863
    4. '	ref' → logprob: -16.75117301940918
    5. '-ref' → logprob: -16.87617301940918
    6. 'Ref' → logprob: -17.25117301940918
    7. '   ' → logprob: -17.25117301940918
    8. '
' → logprob: -18.00117301940918
    9. '_f' → logprob: -18.87617301940918
    10. '_REF' → logprob: -19.00117301940918

Token 1550: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.07529869675636292
    2. 'ected' → logprob: -2.82529878616333
    3. '[' → logprob: -4.45029878616333
    4. 'lect' → logprob: -7.07529878616333
    5. 'el' → logprob: -8.450298309326172
    6. 'acted' → logprob: -8.950298309326172
    7. 'eled' → logprob: -9.075298309326172
    8. 'ect' → logprob: -9.325298309326172
    9. '(' → logprob: -10.075298309326172
    10. 'led' → logprob: -10.950298309326172

Token 1551: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '*' → logprob: -14.375001907348633
    3. '-' → logprob: -15.250001907348633
    4. 'v' → logprob: -15.375001907348633
    5. 'vel' → logprob: -15.500001907348633
    6. ')' → logprob: -16.375001907348633
    7. ' [' → logprob: -16.500001907348633
    8. '(' → logprob: -16.625001907348633
    9. '[
' → logprob: -16.625001907348633
    10. '```' → logprob: -16.625001907348633

Token 1552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.376848902320489e-05
    2. 'v' → logprob: -9.625093460083008
    3. '[' → logprob: -11.125093460083008
    4. 'vel' → logprob: -11.375093460083008
    5. 'len' → logprob: -14.375093460083008
    6. ' ' → logprob: -15.500093460083008
    7. '   ' → logprob: -16.000093460083008
    8. '
' → logprob: -16.125093460083008
    9. '-' → logprob: -16.375093460083008
    10. '```' → logprob: -16.625093460083008

Token 1553: ']*' (ID: 18579)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*v' → logprob: -6.718606891809031e-05
    2. '*' → logprob: -9.625066757202148
    3. '*u' → logprob: -14.625066757202148
    4. ')*' → logprob: -15.125066757202148
    5. '*object' → logprob: -16.62506675720215
    6. '*l' → logprob: -16.75006675720215
    7. '*z' → logprob: -17.25006675720215
    8. '()*' → logprob: -17.37506675720215
    9. '*y' → logprob: -17.62506675720215
    10. 'v' → logprob: -17.87506675720215

Token 1554: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.107425062713446e-06
    2. ' v' → logprob: -11.875006675720215
    3. '	v' → logprob: -16.62500762939453
    4. '
' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.75000762939453
    6. '*v' → logprob: -19.12500762939453
    7. 'vel' → logprob: -19.37500762939453
    8. ')v' → logprob: -19.37500762939453
    9. '```' → logprob: -19.50000762939453
    10. '_v' → logprob: -20.25000762939453

Token 1555: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.810037742368877e-05
    2. 'len' → logprob: -10.375038146972656
    3. 'Len' → logprob: -12.375038146972656
    4. '_LEN' → logprob: -13.625038146972656
    5. '[len' → logprob: -14.375038146972656
    6. '	len' → logprob: -15.000038146972656
    7. '[' → logprob: -15.625038146972656
    8. 'ength' → logprob: -16.625038146972656
    9. ' len' → logprob: -16.875038146972656
    10. '_l' → logprob: -17.250038146972656

Token 1556: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -13.500003814697266
    3. ')return' → logprob: -13.750003814697266
    4. ' )' → logprob: -14.625003814697266
    5. '   ' → logprob: -14.750003814697266
    6. '<|end|>' → logprob: -16.250003814697266
    7. ')

' → logprob: -16.875003814697266
    8. ')#' → logprob: -17.375003814697266
    9. '       ' → logprob: -17.500003814697266
    10. '}' → logprob: -17.750003814697266

Token 1557: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48482081294059753
    2. '   ' → logprob: -1.48482084274292
    3. '<|end|>' → logprob: -2.10982084274292
    4. 'return' → logprob: -3.98482084274292
    5. '    
' → logprob: -4.73482084274292
    6. '```' → logprob: -5.35982084274292
    7. '\n' → logprob: -6.73482084274292
    8. '	return' → logprob: -7.10982084274292
    9. ' return' → logprob: -7.60982084274292
    10. '  
' → logprob: -8.234820365905762

Token 1558: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1559: ' Petite' (ID: 129719)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7567570805549622
    2. '       ' → logprob: -1.0067570209503174
    3. '#' → logprob: -2.7567570209503174
    4. '<|end|>' → logprob: -3.3817570209503174
    5. '
' → logprob: -3.7567570209503174
    6. '   ' → logprob: -4.0067572593688965
    7. ' continue' → logprob: -4.1317572593688965
    8. '        
' → logprob: -6.1317572593688965
    9. '	continue' → logprob: -6.7567572593688965
    10. 'pass' → logprob: -7.0067572593688965

Token 1560: ' protection' (ID: 11137)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1073358058929443
    2. ' correction' → logprob: -1.8573358058929443
    3. ' indentation' → logprob: -2.1073358058929443
    4. 'pause' → logprob: -2.3573358058929443
    5. ' continue' → logprob: -2.7323358058929443
    6. ' pause' → logprob: -3.1073358058929443
    7. 'cor' → logprob: -3.2323358058929443
    8. ' modification' → logprob: -3.8573358058929443
    9. 'indent' → logprob: -4.357336044311523
    10. ' ' → logprob: -4.357336044311523

Token 1561: ' anti' (ID: 10329)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009614416398108006
    2. ' if' → logprob: -5.88461446762085
    3. ' against' → logprob: -6.13461446762085
    4. '   ' → logprob: -6.13461446762085
    5. 'if' → logprob: -6.50961446762085
    6. '<|end|>' → logprob: -8.134613990783691
    7. '           ' → logprob: -8.884613990783691
    8. '```' → logprob: -8.884613990783691
    9. 'against' → logprob: -9.134613990783691
    10. '
' → logprob: -9.634613990783691

Token 1562: '-b' (ID: 2118)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.21146266162395477
    2. 'b' → logprob: -2.5864627361297607
    3. 'inf' → logprob: -2.9614627361297607
    4. 'bounce' → logprob: -3.2114627361297607
    5. 'bug' → logprob: -4.086462497711182
    6. 'loop' → logprob: -5.836462497711182
    7. 'in' → logprob: -7.461462497711182
    8. ' boucle' → logprob: -7.586462497711182
    9. 'collision' → logprob: -7.836462497711182
    10. 'cycle' → logprob: -8.33646297454834

Token 1563: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.57212233543396
    2. 'oug' → logprob: -1.07212233543396
    3. 'ug' → logprob: -2.57212233543396
    4. 'ouc' → logprob: -4.697122573852539
    5. 'ounce' → logprob: -5.947122573852539
    6. 'loc' → logprob: -6.447122573852539
    7. 'og' → logprob: -6.697122573852539
    8. 'r' → logprob: -6.947122573852539
    9. 'ogue' → logprob: -7.822122573852539
    10. 'oung' → logprob: -8.072122573852539

Token 1564: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0019476758316159248
    2. 'c' → logprob: -6.37694787979126
    3. 'cl' → logprob: -8.626947402954102
    4. 'ch' → logprob: -11.376947402954102
    5. '
' → logprob: -11.626947402954102
    6. 'cles' → logprob: -11.751947402954102
    7. '   ' → logprob: -11.876947402954102
    8. '

' → logprob: -13.001947402954102
    9. '```' → logprob: -13.001947402954102
    10. 'e' → logprob: -13.001947402954102

Token 1565: ' infin' (ID: 93237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18602076172828674
    2. ' if' → logprob: -2.061020851135254
    3. 'if' → logprob: -3.186020851135254
    4. '   ' → logprob: -7.061020851135254
    5. '```' → logprob: -9.561020851135254
    6. '        
' → logprob: -10.311020851135254
    7. '
' → logprob: -10.936020851135254
    8. '           ' → logprob: -11.186020851135254
    9. '    ' → logprob: -11.186020851135254
    10. '<|end|>' → logprob: -11.186020851135254

Token 1566: 'ie' (ID: 396)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.4799473285675049
    2. 'it' → logprob: -1.9799473285675049
    3. 'ou' → logprob: -1.9799473285675049
    4. 'le' → logprob: -2.729947328567505
    5. 'e' → logprob: -4.354947090148926
    6. 'uite' → logprob: -4.979947090148926
    7. 'ue' → logprob: -5.104947090148926
    8. 'uit' → logprob: -5.854947090148926
    9. 'lée' → logprob: -5.854947090148926
    10. 'ite' → logprob: -6.354947090148926

Token 1567: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018354563042521477
    2. '
' → logprob: -4.768354415893555
    3. 'if' → logprob: -5.393354415893555
    4. '   ' → logprob: -5.768354415893555
    5. ' if' → logprob: -6.893354415893555
    6. '        
' → logprob: -7.393354415893555
    7. '<|end|>' → logprob: -8.518354415893555
    8. '```' → logprob: -10.393354415893555
    9. '    ' → logprob: -10.518354415893555
    10. ',' → logprob: -11.018354415893555

Token 1568: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19116508960723877
    2. ' if' → logprob: -2.191164970397949
    3. '   ' → logprob: -3.316164970397949
    4. '       ' → logprob: -4.691164970397949
    5. 'dist' → logprob: -5.441164970397949
    6. 'D' → logprob: -6.066164970397949
    7. 'for' → logprob: -6.066164970397949
    8. 'break' → logprob: -6.566164970397949
    9. 'continue' → logprob: -6.691164970397949
    10. 'EPS' → logprob: -6.691164970397949

Token 1569: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.188046395778656
    2. 'segment' → logprob: -2.438046455383301
    3. 't' → logprob: -2.813046455383301
    4. 'abs' → logprob: -4.313046455383301
    5. ' dist' → logprob: -5.313046455383301
    6. 'pos' → logprob: -6.188046455383301
    7. ' segment' → logprob: -6.438046455383301
    8. 'norm' → logprob: -7.313046455383301
    9. ' t' → logprob: -7.813046455383301
    10. 'len' → logprob: -8.0630464553833

Token 1570: ' vitesse' (ID: 71752)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3976571559906006
    2. 'segment' → logprob: -1.3976571559906006
    3. 'pos' → logprob: -3.5226571559906006
    4. 'norm' → logprob: -3.6476571559906006
    5. 'distance' → logprob: -4.39765739440918
    6. 'abs' → logprob: -5.14765739440918
    7. ' segment' → logprob: -6.14765739440918
    8. 'vel' → logprob: -6.27265739440918
    9. 'position' → logprob: -6.64765739440918
    10. 't' → logprob: -7.14765739440918

Token 1571: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1217745542526245
    2. '[' → logprob: -1.6217745542526245
    3. '   ' → logprob: -1.6217745542526245
    4. ' est' → logprob: -2.996774673461914
    5. 'est' → logprob: -3.246774673461914
    6. '<|end|>' → logprob: -3.496774673461914
    7. ' ==' → logprob: -3.621774673461914
    8. 'is' → logprob: -3.871774673461914
    9. ' ' → logprob: -3.871774673461914
    10. '       ' → logprob: -4.371774673461914

Token 1572: ' trop' (ID: 14765)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2446456402540207
    2. 't' → logprob: -1.869645595550537
    3. 'tr' → logprob: -2.869645595550537
    4. ' trop' → logprob: -6.244645595550537
    5. 'nul' → logprob: -6.869645595550537
    6. '(t' → logprob: -7.244645595550537
    7. 'very' → logprob: -7.619645595550537
    8. ' (' → logprob: -8.869646072387695
    9. '<tr' → logprob: -8.869646072387695
    10. 'too' → logprob: -8.869646072387695

Token 1573: ' faible' (ID: 75786)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.028028694912791252
    2. 'fa' → logprob: -5.15302848815918
    3. 'pro' → logprob: -5.40302848815918
    4. 'close' → logprob: -5.77802848815918
    5. 'small' → logprob: -6.02802848815918
    6. 'pres' → logprob: -6.15302848815918
    7. 'n' → logprob: -6.40302848815918
    8. '```' → logprob: -6.40302848815918
    9. 'près' → logprob: -6.90302848815918
    10. ' faible' → logprob: -7.02802848815918

Token 1574: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5842710733413696
    2. 'and' → logprob: -1.0842710733413696
    3. 'or' → logprob: -3.08427095413208
    4. ' or' → logprob: -3.45927095413208
    5. ' and' → logprob: -3.83427095413208
    6. '           ' → logprob: -5.83427095413208
    7. ',' → logprob: -6.70927095413208
    8. 'et' → logprob: -7.70927095413208
    9. ':' → logprob: -8.209271430969238
    10. '   ' → logprob: -8.334271430969238

Token 1575: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03324011713266373
    2. 'break' → logprob: -3.6582400798797607
    3. ' break' → logprob: -5.53324031829834
    4. '       ' → logprob: -6.15824031829834
    5. ' ' → logprob: -8.15824031829834
    6. 'return' → logprob: -9.03324031829834
    7. '	       ' → logprob: -9.15824031829834
    8. '```' → logprob: -9.40824031829834
    9. ' if' → logprob: -9.90824031829834
    10. '               ' → logprob: -10.40824031829834

Token 1576: ' quitte' (ID: 167254)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5090804100036621
    2. '           ' → logprob: -1.759080410003662
    3. '       ' → logprob: -2.259080410003662
    4. 'return' → logprob: -2.884080410003662
    5. '   ' → logprob: -3.259080410003662
    6. ' break' → logprob: -4.134080410003662
    7. '	break' → logprob: -5.134080410003662
    8. ' return' → logprob: -6.009080410003662
    9. '	       ' → logprob: -7.009080410003662
    10. '	   ' → logprob: -7.259080410003662

Token 1577: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005217039957642555
    2. '
' → logprob: -5.3802170753479
    3. '        
' → logprob: -8.380216598510742
    4. '           ' → logprob: -9.130216598510742
    5. '   ' → logprob: -9.255216598510742
    6. '```' → logprob: -9.505216598510742
    7. ' if' → logprob: -10.130216598510742
    8. '    
' → logprob: -11.505216598510742
    9. '        ' → logprob: -11.755216598510742
    10. 'if' → logprob: -11.755216598510742

Token 1578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. 'if' → logprob: -8.375662803649902
    3. ' if' → logprob: -8.625662803649902
    4. '   ' → logprob: -9.375662803649902
    5. '```' → logprob: -9.375662803649902
    6. '        
' → logprob: -10.500662803649902
    7. '
' → logprob: -10.750662803649902
    8. '           ' → logprob: -11.875662803649902
    9. '<|end|>' → logprob: -12.125662803649902
    10. '``' → logprob: -12.375662803649902

Token 1579: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09580984711647034
    2. 'if' (adapté à ' if') → logprob: -2.9708099365234375
    3. ' if' → logprob: -3.2208099365234375
    4. '<|end|>' → logprob: -9.345809936523438
    5. '   ' → logprob: -9.845809936523438
    6. '```' → logprob: -11.095809936523438
    7. '        
' → logprob: -11.595809936523438
    8. '
' → logprob: -12.220809936523438
    9. '	if' → logprob: -13.220809936523438
    10. ' ' → logprob: -13.595809936523438

Token 1580: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.26549801230430603
    2. 'v' → logprob: -1.5154980421066284
    3. ' norm' → logprob: -4.515498161315918
    4. ' v' → logprob: -6.015498161315918
    5. '(norm' → logprob: -10.140498161315918
    6. 'dist' → logprob: -10.765498161315918
    7. 'abs' → logprob: -10.890498161315918
    8. '   ' → logprob: -11.890498161315918
    9. 'vel' → logprob: -12.015498161315918
    10. ' abs' → logprob: -13.515498161315918

Token 1581: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -13.750000953674316
    3. 'vel' → logprob: -15.250000953674316
    4. '(
' → logprob: -17.875001907348633
    5. '(v' → logprob: -18.125001907348633
    6. '((' → logprob: -18.625001907348633
    7. 'Vel' → logprob: -18.875001907348633
    8. ' vel' → logprob: -19.375001907348633
    9. '
' → logprob: -20.375001907348633
    10. '```' → logprob: -21.000001907348633

Token 1582: 'vel' (ID: 1002)
  Prédit: 'vel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -0.008617881685495377
    2. '(' → logprob: -4.758617877960205
    3. ' vel' → logprob: -12.633618354797363
    4. ' (' → logprob: -17.758617401123047
    5. ')' → logprob: -17.758617401123047
    6. 'velo' → logprob: -18.383617401123047
    7. 'Vel' → logprob: -19.133617401123047
    8. '.vel' → logprob: -19.133617401123047
    9. '_vel' → logprob: -19.883617401123047
    10. 'v' → logprob: -20.133617401123047

Token 1583: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03250151127576828
    2. ')' → logprob: -3.782501459121704
    3. '()<' → logprob: -4.782501697540283
    4. ' ()' → logprob: -7.657501697540283
    5. ' <' → logprob: -8.282501220703125
    6. '())' → logprob: -9.782501220703125
    7. ' )' → logprob: -10.407501220703125
    8. '   ' → logprob: -11.532501220703125
    9. ' <=' → logprob: -12.657501220703125
    10. '<' → logprob: -12.782501220703125

Token 1584: ' <' (ID: 464)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6186726689338684
    2. ' <' → logprob: -1.3686726093292236
    3. '()<' → logprob: -1.6186726093292236
    4. '<' → logprob: -4.743672847747803
    5. ' ()' → logprob: -11.118672370910645
    6. ' <=' → logprob: -12.868672370910645
    7. '```' → logprob: -12.868672370910645
    8. ' ' → logprob: -13.243672370910645
    9. '*' → logprob: -13.368672370910645
    10. '   ' → logprob: -13.743672370910645

Token 1585: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.07890311628580093
    2. '1' → logprob: -2.5789031982421875
    3. ' EPS' → logprob: -11.453903198242188
    4. 'EP' → logprob: -14.203903198242188
    5. '   ' → logprob: -14.328903198242188
    6. 'eps' → logprob: -14.453903198242188
    7. 'E' → logprob: -14.703903198242188
    8. ' ' → logprob: -15.078903198242188
    9. 'EPT' → logprob: -16.703903198242188
    10. 'ESP' → logprob: -17.078903198242188

Token 1586: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1587: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06218121945858002
    2. '-' → logprob: -2.812181234359741
    3. '4' → logprob: -8.68718147277832
    4. '1' → logprob: -11.18718147277832
    5. '3' → logprob: -11.43718147277832
    6. '-e' → logprob: -11.81218147277832
    7. '2' → logprob: -12.56218147277832
    8. '0' → logprob: -12.56218147277832
    9. '
' → logprob: -13.31218147277832
    10. '```' → logprob: -13.43718147277832

Token 1588: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -18.75
    3. '14' → logprob: -18.75
    4. '```' → logprob: -19.375
    5. '15' → logprob: -20.5
    6. '-
' → logprob: -21.25
    7. '12' → logprob: -21.5
    8. ' ' → logprob: -21.625
    9. '{-' → logprob: -21.875
    10. '   ' → logprob: -22.0

Token 1589: '12' (ID: 899)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.8648540377616882
    2. '14' → logprob: -0.9898540377616882
    3. '12' → logprob: -1.864854097366333
    4. '10' → logprob: -3.114854097366333
    5. '8' → logprob: -5.739853858947754
    6. '16' → logprob: -5.864853858947754
    7. '9' → logprob: -6.739853858947754
    8. '13' → logprob: -7.739853858947754
    9. '20' → logprob: -8.864853858947754
    10. '11' → logprob: -10.239853858947754

Token 1590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04227004945278168
    2. ':
' → logprob: -3.2922699451446533
    3. '           ' → logprob: -5.542270183563232
    4. '       ' → logprob: -8.667269706726074
    5. ':return' → logprob: -9.167269706726074
    6. ' or' → logprob: -11.292269706726074
    7. '   ' → logprob: -12.792269706726074
    8. '.' → logprob: -13.167269706726074
    9. ':
' → logprob: -13.167269706726074
    10. '          ' → logprob: -14.042269706726074

Token 1591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008908696472644806
    2. '       ' → logprob: -4.758908748626709
    3. '```' → logprob: -9.25890827178955
    4. 'break' → logprob: -10.38390827178955
    5. '		' → logprob: -10.50890827178955
    6. '               ' → logprob: -10.63390827178955
    7. 'return' → logprob: -11.00890827178955
    8. '   ' → logprob: -11.13390827178955
    9. '	       ' → logprob: -11.13390827178955
    10. '
' → logprob: -11.25890827178955

Token 1592: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1712452918291092
    2. '           ' → logprob: -1.9212453365325928
    3. 'return' → logprob: -4.671245098114014
    4. ' break' → logprob: -6.671245098114014
    5. '       ' → logprob: -8.421245574951172
    6. '	break' → logprob: -9.796245574951172
    7. '		' → logprob: -10.171245574951172
    8. '```' → logprob: -11.796245574951172
    9. ' return' → logprob: -12.421245574951172
    10. '   ' → logprob: -12.796245574951172

Token 1593: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6579123139381409
    2. '<|end|>' → logprob: -0.9079123139381409
    3. '
' → logprob: -2.782912254333496
    4. '    
' → logprob: -5.282912254333496
    5. 'return' → logprob: -5.657912254333496
    6. '```' → logprob: -6.032912254333496
    7. '	return' → logprob: -6.532912254333496
    8. '\n' → logprob: -6.907912254333496
    9. '  
' → logprob: -7.782912254333496
    10. '<|end|>' → logprob: -7.782912254333496

Token 1594: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7910522222518921
    2. 'return' → logprob: -1.291052222251892
    3. '   ' → logprob: -1.416052222251892
    4. '<|end|>' → logprob: -4.416052341461182
    5. '```' → logprob: -4.791052341461182
    6. '    
' → logprob: -5.791052341461182
    7. ' return' → logprob: -6.166052341461182
    8. '	return' → logprob: -7.416052341461182
    9. ' ' → logprob: -7.416052341461182
    10. '  
' → logprob: -7.416052341461182

Token 1595: ' px' (ID: 27003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1596: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40764936804771423
    2. ',' → logprob: -1.4076493978500366
    3. ' =' → logprob: -2.407649278640747
    4. ',pos' → logprob: -10.907649040222168
    5. ' ,' → logprob: -11.282649040222168
    6. '=
' → logprob: -13.282649040222168
    7. '   ' → logprob: -13.282649040222168
    8. ',p' → logprob: -13.282649040222168
    9. '```' → logprob: -13.782649040222168
    10. 'pos' → logprob: -13.907649040222168

Token 1597: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -5.88418151892256e-05
    2. ' py' → logprob: -9.750059127807617
    3. '(py' → logprob: -15.250059127807617
    4. 'pos' → logprob: -16.125059127807617
    5. '_py' → logprob: -16.250059127807617
    6. 'px' → logprob: -17.750059127807617
    7. '.py' → logprob: -17.875059127807617
    8. 'p' → logprob: -18.750059127807617
    9. 'ppy' → logprob: -18.750059127807617
    10. 'ply' → logprob: -19.875059127807617

Token 1598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036515104584395885
    2. ' =' → logprob: -5.6286516189575195
    3. ',' → logprob: -9.87865161895752
    4. '=
' → logprob: -17.128650665283203
    5. ')=' → logprob: -17.628650665283203
    6. '=v' → logprob: -18.003650665283203
    7. '＝' → logprob: -18.878650665283203
    8. ')' → logprob: -19.003650665283203
    9. '```' → logprob: -19.003650665283203
    10. '=user' → logprob: -19.128650665283203

Token 1599: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.8624639324116288e-06
    2. ' pos' → logprob: -13.250001907348633
    3. '	pos' → logprob: -21.750001907348633
    4. 'position' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.750001907348633
    6. 'p' → logprob: -23.250001907348633
    7. '(pos' → logprob: -23.750001907348633
    8. '_pos' → logprob: -24.125001907348633
    9. 'Pos' → logprob: -24.375001907348633
    10. 'pose' → logprob: -25.125001907348633

Token 1600: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000632139970548451
    2. '[' → logprob: -8.625632286071777
    3. '<|end|>' → logprob: -8.750632286071777
    4. ' ,' → logprob: -8.875632286071777
    5. ',
' → logprob: -10.000632286071777
    6. ',p' → logprob: -11.000632286071777
    7. '   ' → logprob: -11.375632286071777
    8. '=' → logprob: -11.500632286071777
    9. ' =' → logprob: -11.750632286071777
    10. ',v' → logprob: -12.000632286071777

Token 1601: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00570065388455987
    2. ',v' → logprob: -5.255700588226318
    3. '<|end|>' → logprob: -8.630701065063477
    4. ',
' → logprob: -9.505701065063477
    5. '=' → logprob: -9.880701065063477
    6. ' ,' → logprob: -10.005701065063477
    7. '
' → logprob: -10.505701065063477
    8. '    
' → logprob: -11.630701065063477
    9. '<|end|>' → logprob: -11.755701065063477
    10. 'vel' → logprob: -12.005701065063477

Token 1602: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' (adapté à ' vx') → logprob: -7.398067828034982e-05
    2. 'vel' → logprob: -9.75007438659668
    3. ' vx' → logprob: -11.12507438659668
    4. '   ' → logprob: -14.37507438659668
    5. '```' → logprob: -15.25007438659668
    6. 'vy' → logprob: -16.75007438659668
    7. '    
' → logprob: -17.00007438659668
    8. '       ' → logprob: -18.25007438659668
    9. 'x' → logprob: -18.37507438659668
    10. ' ' → logprob: -18.87507438659668

Token 1603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023226479243021458
    2. ',v' → logprob: -8.375232696533203
    3. '=' → logprob: -13.625232696533203
    4. ',y' → logprob: -14.875232696533203
    5. ' ,' → logprob: -16.125232696533203
    6. ',
' → logprob: -17.625232696533203
    7. ',val' → logprob: -18.125232696533203
    8. ',V' → logprob: -18.375232696533203
    9. 'v' → logprob: -18.625232696533203
    10. ',w' → logprob: -19.125232696533203

Token 1604: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0007129086880013347
    2. ' vy' → logprob: -7.250712871551514
    3. 'vel' → logprob: -12.750713348388672
    4. 'Vy' → logprob: -18.500713348388672
    5. 'yv' → logprob: -18.750713348388672
    6. 'wy' → logprob: -19.750713348388672
    7. 'vey' → logprob: -20.375713348388672
    8. ' ' → logprob: -20.625713348388672
    9. 'py' → logprob: -20.625713348388672
    10. 'uy' → logprob: -21.000713348388672

Token 1605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005533903022296727
    2. ' =' → logprob: -7.500553607940674
    3. ',' → logprob: -15.000553131103516
    4. '=v' → logprob: -16.750553131103516
    5. '.=' → logprob: -18.500553131103516
    6. '=
' → logprob: -18.625553131103516
    7. ')=' → logprob: -18.625553131103516
    8. ')' → logprob: -18.625553131103516
    9. '=}' → logprob: -18.875553131103516
    10. '＝' → logprob: -19.000553131103516

Token 1606: ' vel' (ID: 7326)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vel' → logprob: -3.128163257315464e-07
    2. ' vel' → logprob: -15.25
    3. 've' → logprob: -20.5
    4. '   ' → logprob: -20.5
    5. 'velo' → logprob: -21.875
    6. 'velocity' → logprob: -22.0
    7. 'val' → logprob: -22.375
    8. 'velop' → logprob: -22.75
    9. 'v' → logprob: -22.75
    10. 'Vel' → logprob: -23.125

Token 1607: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1608: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1609: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18518944084644318
    2. 'None' → logprob: -1.9351894855499268
    3. '   ' → logprob: -4.685189247131348
    4. '```' → logprob: -4.810189247131348
    5. 'i' → logprob: -6.060189247131348
    6. 'im' → logprob: -6.185189247131348
    7. '    
' → logprob: -7.060189247131348
    8. 'r' → logprob: -7.560189247131348
    9. '
' → logprob: -7.560189247131348
    10. 'raise' → logprob: -7.935189247131348

Token 1610: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002736997092142701
    2. ' None' → logprob: -6.627737045288086
    3. 'float' → logprob: -6.627737045288086
    4. '"' → logprob: -10.002737045288086
    5. 'im' → logprob: -11.002737045288086
    6. '   ' → logprob: -11.377737045288086
    7. '(None' → logprob: -11.877737045288086
    8. 'Impossible' → logprob: -13.127737045288086
    9. ' float' → logprob: -13.877737045288086
    10. 'math' → logprob: -14.002737045288086

Token 1611: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1612: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1613: ' impossible' (ID: 19786)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1614: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1615: ' toucher' (ID: 127487)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.00023059594968799502
    2. ' atteindre' → logprob: -9.50023078918457
    3. 'att' → logprob: -10.25023078918457
    4. 'touch' → logprob: -10.50023078918457
    5. 'atta' → logprob: -10.62523078918457
    6. 't' → logprob: -11.12523078918457
    7. 'return' → logprob: -11.25023078918457
    8. 'arr' → logprob: -11.75023078918457
    9. 'reach' → logprob: -12.25023078918457
    10. 're' → logprob: -12.50023078918457

Token 1616: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1617: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1618: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01416798122227192
    2. ' main' → logprob: -4.264167785644531
    3. 'run' → logprob: -13.139167785644531
    4. 'parse' → logprob: -13.264167785644531
    5. 'simulate' → logprob: -15.264167785644531
    6. 'distance' → logprob: -15.889167785644531
    7. 'read' → logprob: -16.38916778564453
    8. '```' → logprob: -16.76416778564453
    9. '	main' → logprob: -16.88916778564453
    10. 'test' → logprob: -17.01416778564453

Token 1619: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015633940347470343
    2. '():
' → logprob: -8.87515640258789
    3. ' ():' → logprob: -11.50015640258789
    4. '()' → logprob: -13.00015640258789
    5. '()>' → logprob: -13.25015640258789
    6. '():
' → logprob: -13.62515640258789
    7. '(' → logprob: -15.12515640258789
    8. '():

' → logprob: -15.37515640258789
    9. '()">' → logprob: -15.50015640258789
    10. '().' → logprob: -16.87515640258789

Token 1620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008173158392310143
    2. 'import' → logprob: -4.883172988891602
    3. ' import' → logprob: -7.633172988891602
    4. '```' → logprob: -10.758172988891602
    5. 'input' → logprob: -11.258172988891602
    6. '	import' → logprob: -11.383172988891602
    7. 'n' → logprob: -11.508172988891602
    8. 'try' → logprob: -11.633172988891602
    9. 't' → logprob: -11.883172988891602
    10. 'T' → logprob: -12.383172988891602

Token 1621: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.714136004447937
    2. ' n' → logprob: -1.089136004447937
    3. 'import' → logprob: -3.0891361236572266
    4. ' import' → logprob: -3.0891361236572266
    5. 't' → logprob: -3.9641361236572266
    6. '   ' → logprob: -4.089136123657227
    7. 'T' → logprob: -4.214136123657227
    8. ' t' → logprob: -4.339136123657227
    9. ' T' → logprob: -4.589136123657227
    10. ' input' → logprob: -5.214136123657227

Token 1622: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07888438552618027
    2. '_line' → logprob: -2.8288843631744385
    3. '_' → logprob: -4.953884601593018
    4. 's' → logprob: -5.328884601593018
    5. '_data' → logprob: -5.828884601593018
    6. '_lines' → logprob: -7.203884601593018
    7. 'line' → logprob: -8.45388412475586
    8. '_str' → logprob: -9.07888412475586
    9. '_l' → logprob: -9.20388412475586
    10. 'data' → logprob: -9.20388412475586

Token 1623: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1602315455675125
    2. ' sys' → logprob: -1.910231590270996
    3. '=sys' → logprob: -12.785231590270996
    4. '	sys' → logprob: -13.035231590270996
    5. 'input' → logprob: -13.285231590270996
    6. '(sys' → logprob: -14.285231590270996
    7. ' input' → logprob: -17.16023063659668
    8. 'lambda' → logprob: -17.28523063659668
    9. '```' → logprob: -17.91023063659668
    10. ' ' → logprob: -17.91023063659668

Token 1624: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.009286127984523773
    2. '.' → logprob: -5.134285926818848
    3. '.readline' → logprob: -5.884285926818848
    4. '.stdout' → logprob: -7.759285926818848
    5. '.argv' → logprob: -10.009285926818848
    6. '().' → logprob: -10.384285926818848
    7. '(stdin' → logprob: -10.634285926818848
    8. '.std' → logprob: -11.259285926818848
    9. ' .' → logprob: -12.009285926818848
    10. 'stdin' → logprob: -12.134285926818848

Token 1625: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01768450066447258
    2. 'read' → logprob: -4.142684459686279
    3. '=' → logprob: -7.392684459686279
    4. '.' → logprob: -7.517684459686279
    5. '<|end|>' → logprob: -9.017684936523438
    6. 'rea' → logprob: -9.642684936523438
    7. '.readlines' → logprob: -9.767684936523438
    8. ' readline' → logprob: -9.892684936523438
    9. ' =' → logprob: -10.392684936523438
    10. '_read' → logprob: -10.392684936523438

Token 1626: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023307785391807556
    2. '()' → logprob: -3.7733078002929688
    3. '()
' → logprob: -9.773307800292969
    4. '()\' → logprob: -13.648307800292969
    5. '()

' → logprob: -14.023307800292969
    6. 'lines' → logprob: -14.023307800292969
    7. 'line' → logprob: -14.023307800292969
    8. 'split' → logprob: -15.273307800292969
    9. '.split' → logprob: -15.398307800292969
    10. '(' → logprob: -15.398307800292969

Token 1627: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011048054322600365
    2. 'split' → logprob: -4.511047840118408
    3. 'rstrip' → logprob: -15.261048316955566
    4. ' strip' → logprob: -17.38604736328125
    5. 'decode' → logprob: -18.88604736328125
    6. ' split' → logprob: -19.76104736328125
    7. '(strip' → logprob: -21.88604736328125
    8. '(split' → logprob: -22.63604736328125
    9. 'plit' → logprob: -22.63604736328125
    10. '.strip' → logprob: -22.63604736328125

Token 1628: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4741767942905426
    2. '()' → logprob: -0.9741767644882202
    3. '(' → logprob: -9.599176406860352
    4. '()
' → logprob: -11.599176406860352
    5. '()`' → logprob: -12.099176406860352
    6. '('' → logprob: -12.599176406860352
    7. '()\' → logprob: -12.849176406860352
    8. '().'' → logprob: -13.349176406860352
    9. ' ()' → logprob: -13.474176406860352
    10. '()+' → logprob: -14.099176406860352

Token 1629: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.375
    3. '(split' → logprob: -17.0
    4. 'strip' → logprob: -18.75
    5. 'spl' → logprob: -20.125
    6. 'decode' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. 'rstrip' → logprob: -21.125
    9. 'replace' → logprob: -22.125
    10. '.split' → logprob: -22.875

Token 1630: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3541443943977356
    2. '('' → logprob: -1.6041443347930908
    3. '(' → logprob: -2.354144334793091
    4. '("("' → logprob: -6.60414457321167
    5. '('\' → logprob: -7.22914457321167
    6. '("' → logprob: -10.229144096374512
    7. '('.')' → logprob: -10.979144096374512
    8. '()
' → logprob: -11.229144096374512
    9. '(',' → logprob: -11.729144096374512
    10. '("\' → logprob: -11.854144096374512

Token 1631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8940764665603638
    2. 'for' → logprob: -1.5190764665603638
    3. 'D' → logprob: -1.7690764665603638
    4. 'n' → logprob: -2.144076347351074
    5. 'i' → logprob: -2.894076347351074
    6. ' for' → logprob: -4.144076347351074
    7. 't' → logprob: -5.019076347351074
    8. 'd' → logprob: -6.394076347351074
    9. 'N' → logprob: -6.519076347351074
    10. ' D' → logprob: -7.144076347351074

Token 1632: ' idx' (ID: 14016)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.003973204642534256
    2. 'T' → logprob: -6.253973007202148
    3. 't' → logprob: -6.753973007202148
    4. 'n' → logprob: -7.253973007202148
    5. 'for' → logprob: -9.628973007202148
    6. 'i' → logprob: -9.878973007202148
    7. 'Q' → logprob: -11.003973007202148
    8. ' D' → logprob: -11.003973007202148
    9. 'N' → logprob: -12.378973007202148
    10. 'if' → logprob: -13.003973007202148

Token 1633: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11611807346343994
    2. ' =' → logprob: -2.2411179542541504
    3. '+=' → logprob: -6.74111795425415
    4. ' +=' → logprob: -6.74111795425415
    5. '[' → logprob: -7.74111795425415
    6. '(' → logprob: -8.741118431091309
    7. '_' → logprob: -9.741118431091309
    8. '0' → logprob: -9.741118431091309
    9. ' ' → logprob: -9.866118431091309
    10. 's' → logprob: -10.366118431091309

Token 1634: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.125
    4. '۰' → logprob: -21.375
    5. '[' → logprob: -21.625
    6. '`' → logprob: -22.75
    7. '   ' → logprob: -23.125
    8. '=' → logprob: -23.375
    9. '(' → logprob: -23.375
    10. '
' → logprob: -23.75

Token 1635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '=' → logprob: -20.125001907348633
    4. '1' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '```' → logprob: -21.125001907348633
    7. '[' → logprob: -21.250001907348633
    8. '۰' → logprob: -21.875001907348633
    9. '  ' → logprob: -22.250001907348633
    10. '০' → logprob: -23.562501907348633

Token 1636: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.819499135017395
    2. 'while' → logprob: -0.819499135017395
    3. 't' → logprob: -3.0694990158081055
    4. 'T' → logprob: -3.8194990158081055
    5. 'D' → logprob: -3.9444990158081055
    6. '   ' → logprob: -4.3194990158081055
    7. 'num' → logprob: -5.4444990158081055
    8. 'N' → logprob: -5.8194990158081055
    9. 'for' → logprob: -6.0694990158081055
    10. ' while' → logprob: -6.0694990158081055

Token 1637: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4442386329174042
    2. '   ' → logprob: -2.0692386627197266
    3. 'T' → logprob: -2.1942386627197266
    4. 't' → logprob: -2.5692386627197266
    5. 'D' → logprob: -3.8192386627197266
    6. 'while' → logprob: -4.069238662719727
    7. 'N' → logprob: -6.694238662719727
    8. 'for' → logprob: -6.944238662719727
    9. 'num' → logprob: -6.944238662719727
    10. ' n' → logprob: -7.194238662719727

Token 1638: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6957970857620239
    2. 'T' → logprob: -1.445797085762024
    3. 'n' → logprob: -1.445797085762024
    4. 'while' (adapté à ' while') → logprob: -3.5707969665527344
    5. '   ' → logprob: -7.445796966552734
    6. 'Q' → logprob: -7.445796966552734
    7. 'q' → logprob: -8.445796966552734
    8. 'num' → logprob: -8.820796966552734
    9. 'N' → logprob: -8.945796966552734
    10. ' t' → logprob: -8.945796966552734

Token 1639: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.10020893067121506
    2. 'idx' → logprob: -2.3502089977264404
    3. '	idx' → logprob: -13.47520923614502
    4. '(idx' → logprob: -14.47520923614502
    5. ' len' → logprob: -15.60020923614502
    6. 'len' → logprob: -16.725208282470703
    7. ' True' → logprob: -17.350208282470703
    8. ' ' → logprob: -17.850208282470703
    9. '_idx' → logprob: -18.975208282470703
    10. '   ' → logprob: -19.725208282470703

Token 1640: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2747122645378113
    2. '   ' → logprob: -1.774712324142456
    3. '       ' → logprob: -3.024712324142456
    4. ':
' → logprob: -4.149712085723877
    5. '[' → logprob: -5.899712085723877
    6. ' and' → logprob: -7.149712085723877
    7. '{' → logprob: -7.774712085723877
    8. ' if' → logprob: -7.774712085723877
    9. ',' → logprob: -8.024712562561035
    10. 'if' → logprob: -8.149712562561035

Token 1641: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10011790692806244
    2. ' if' → logprob: -2.4751179218292236
    3. 'if' → logprob: -4.7251176834106445
    4. '       ' → logprob: -6.6001176834106445
    5. ' ' → logprob: -8.225117683410645
    6. 'i' → logprob: -8.350117683410645
    7. 't' → logprob: -9.600117683410645
    8. '	if' → logprob: -9.975117683410645
    9. '```' → logprob: -10.225117683410645
    10. 'n' → logprob: -10.350117683410645

Token 1642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1226368099451065
    2. ' if' → logprob: -2.6226367950439453
    3. 'D' → logprob: -3.3726367950439453
    4. '   ' → logprob: -5.622636795043945
    5. 'i' → logprob: -5.997636795043945
    6. 'n' → logprob: -6.247636795043945
    7. 'I' → logprob: -9.497636795043945
    8. ' D' → logprob: -9.622636795043945
    9. 'len' → logprob: -9.622636795043945
    10. ' ' → logprob: -9.747636795043945

Token 1643: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0052398028783500195
    2. ' idx' → logprob: -5.255239963531494
    3. '	idx' → logprob: -12.255239486694336
    4. ' ' → logprob: -15.005239486694336
    5. '(idx' → logprob: -15.005239486694336
    6. '   ' → logprob: -15.630239486694336
    7. '  ' → logprob: -15.880239486694336
    8. '_idx' → logprob: -16.630239486694336
    9. 'len' → logprob: -16.880239486694336
    10. '[idx' → logprob: -16.880239486694336

Token 1644: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08932710438966751
    2. ' >=' → logprob: -2.464327096939087
    3. ']>=' → logprob: -8.339326858520508
    4. ')>=' → logprob: -9.464326858520508
    5. '==' → logprob: -9.839326858520508
    6. '[' → logprob: -12.089326858520508
    7. ' ' → logprob: -12.464326858520508
    8. '≥' → logprob: -12.589326858520508
    9. ' ==' → logprob: -13.839326858520508
    10. '>' → logprob: -14.214326858520508

Token 1645: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.7697225252486533e-06
    2. ' len' → logprob: -12.500003814697266
    3. '(len' → logprob: -18.000003814697266
    4. '=len' → logprob: -19.250003814697266
    5. '	len' → logprob: -19.625003814697266
    6. '<len' → logprob: -19.875003814697266
    7. '[len' → logprob: -20.375003814697266
    8. ',len' → logprob: -20.625003814697266
    9. 'input' → logprob: -21.000003814697266
    10. 'import' → logprob: -21.125003814697266

Token 1646: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1004183366894722
    2. 'input' → logprob: -2.3504183292388916
    3. ' input' → logprob: -8.475418090820312
    4. '<input' → logprob: -13.600418090820312
    5. '=input' → logprob: -14.350418090820312
    6. ' (' → logprob: -15.225418090820312
    7. '[input' → logprob: -15.225418090820312
    8. ',input' → logprob: -15.350418090820312
    9. ' ' → logprob: -15.475418090820312
    10. '(' → logprob: -15.600418090820312

Token 1647: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08689957112073898
    2. ':' → logprob: -2.836899518966675
    3. 'or' → logprob: -4.086899757385254
    4. ':
' → logprob: -4.961899757385254
    5. '   ' → logprob: -8.711899757385254
    6. ')' → logprob: -8.836899757385254
    7. '       ' → logprob: -9.461899757385254
    8. '):
' → logprob: -9.586899757385254
    9. '	or' → logprob: -9.711899757385254
    10. '):' → logprob: -9.711899757385254

Token 1648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15406619012355804
    2. '       ' → logprob: -2.0290660858154297
    3. '   ' → logprob: -4.52906608581543
    4. ' ' → logprob: -8.52906608581543
    5. ' break' → logprob: -9.15406608581543
    6. 'break' → logprob: -9.52906608581543
    7. '
' → logprob: -10.65406608581543
    8. '```' → logprob: -10.77906608581543
    9. '		' → logprob: -10.90406608581543
    10. '	' → logprob: -11.27906608581543

Token 1649: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07199271023273468
    2. 'return' → logprob: -3.3219926357269287
    3. '           ' → logprob: -3.4469926357269287
    4. ' break' → logprob: -7.321992874145508
    5. '       ' → logprob: -7.446992874145508
    6. '	break' → logprob: -8.446992874145508
    7. '		' → logprob: -11.071992874145508
    8. ' return' → logprob: -11.321992874145508
    9. '```' → logprob: -11.321992874145508
    10. '
' → logprob: -11.571992874145508

Token 1650: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03786829486489296
    2. '   ' → logprob: -4.537868499755859
    3. '        
' → logprob: -4.537868499755859
    4. '
' → logprob: -5.037868499755859
    5. '  
' → logprob: -5.912868499755859
    6. '    
' → logprob: -5.912868499755859
    7. '<|end|>' → logprob: -7.162868499755859
    8. '```' → logprob: -7.412868499755859
    9. ' 
' → logprob: -7.662868499755859
    10. ' ' → logprob: -7.787868499755859

Token 1651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39097678661346436
    2. '   ' → logprob: -1.6409767866134644
    3. '```' → logprob: -2.265976905822754
    4. '        
' → logprob: -5.140976905822754
    5. '    
' → logprob: -5.140976905822754
    6. '  
' → logprob: -5.515976905822754
    7. ' ' → logprob: -5.765976905822754
    8. '``' → logprob: -6.015976905822754
    9. ' 
' → logprob: -7.140976905822754
    10. '
' → logprob: -7.390976905822754

Token 1652: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.001173321157693863
    2. 'L' → logprob: -7.001173496246338
    3. '   ' → logprob: -9.25117301940918
    4. 'N' → logprob: -9.75117301940918
    5. 'n' → logprob: -10.12617301940918
    6. ' D' → logprob: -11.00117301940918
    7. 'd' → logprob: -11.25117301940918
    8. 'try' → logprob: -11.25117301940918
    9. 'T' → logprob: -12.00117301940918
    10. '
' → logprob: -12.50117301940918

Token 1653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24201907217502594
    2. ' =' → logprob: -1.6170190572738647
    3. ',' → logprob: -4.117019176483154
    4. ')' → logprob: -9.867018699645996
    5. '=int' → logprob: -10.867018699645996
    6. '.' → logprob: -10.867018699645996
    7. ' ,' → logprob: -10.992018699645996
    8. '   ' → logprob: -10.992018699645996
    9. ' ' → logprob: -11.242018699645996
    10. '<|end|>' → logprob: -12.117018699645996

Token 1654: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0019287518225610256
    2. ' float' → logprob: -6.251928806304932
    3. '(float' → logprob: -17.001928329467773
    4. 'int' → logprob: -17.501928329467773
    5. '	float' → logprob: -17.876928329467773
    6. '=float' → logprob: -18.001928329467773
    7. 'flo' → logprob: -20.626928329467773
    8. '<float' → logprob: -20.751928329467773
    9. ',float' → logprob: -21.251928329467773
    10. 'Float' → logprob: -22.501928329467773

Token 1655: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001173321157693863
    2. '(' → logprob: -6.751173496246338
    3. 'input' → logprob: -13.12617301940918
    4. ' (' → logprob: -14.50117301940918
    5. '(
' → logprob: -14.75117301940918
    6. ',input' → logprob: -16.87617301940918
    7. '(in' → logprob: -17.12617301940918
    8. '=input' → logprob: -17.25117301940918
    9. '(

' → logprob: -17.37617301940918
    10. '(inputs' → logprob: -17.87617301940918

Token 1656: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.070975071750581e-05
    2. '[' → logprob: -10.625030517578125
    3. ')[' → logprob: -12.250030517578125
    4. ')' → logprob: -14.375030517578125
    5. '   ' → logprob: -15.125030517578125
    6. ' [' → logprob: -15.375030517578125
    7. '[
' → logprob: -16.000030517578125
    8. '[id' → logprob: -16.625030517578125
    9. '[index' → logprob: -16.750030517578125
    10. '```' → logprob: -16.750030517578125

Token 1657: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.15534530580043793
    2. '])
' → logprob: -2.0303452014923096
    3. ')' → logprob: -5.030345439910889
    4. ']);' → logprob: -5.405345439910889
    5. ')
' → logprob: -6.530345439910889
    6. ']' → logprob: -10.28034496307373
    7. ')]' → logprob: -10.90534496307373
    8. '])
' → logprob: -11.53034496307373
    9. ');' → logprob: -11.65534496307373
    10. '[idx' → logprob: -11.65534496307373

Token 1658: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1659: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.1755465269088745
    2. '\n' → logprob: -2.800546646118164
    3. ' idx' → logprob: -3.300546646118164
    4. '```' → logprob: -4.050546646118164
    5. '[idx' → logprob: -4.175546646118164
    6. '\' → logprob: -4.925546646118164
    7. '
' → logprob: -5.300546646118164
    8. '	idx' → logprob: -5.425546646118164
    9. '<|end|>' → logprob: -5.550546646118164
    10. '(idx' → logprob: -6.175546646118164

Token 1660: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003959992900490761
    2. ' +=' → logprob: -7.875395774841309
    3. '+' → logprob: -11.250395774841309
    4. '=' → logprob: -13.000395774841309
    5. ']+=' → logprob: -14.750395774841309
    6. '+="' → logprob: -16.000396728515625
    7. '+='' → logprob: -16.250396728515625
    8. '```' → logprob: -17.625396728515625
    9. '++' → logprob: -17.750396728515625
    10. '+=(' → logprob: -18.500396728515625

Token 1661: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -23.125
    4. '１' → logprob: -24.0
    5. '۱' → logprob: -25.125
    6. '
' → logprob: -25.125
    7. '   ' → logprob: -25.5
    8. '0' → logprob: -25.625
    9. '+' → logprob: -25.875
    10. '`' → logprob: -26.0

Token 1662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '0' → logprob: -23.0
    4. '
' → logprob: -23.125
    5. '   ' → logprob: -24.625
    6. '１' → logprob: -25.0
    7. '

' → logprob: -25.375
    8. '```' → logprob: -25.375
    9. '' → logprob: -26.0
    10. '-' → logprob: -26.375

Token 1663: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12531769275665283
    2. 'if' → logprob: -2.3753175735473633
    3. ' if' → logprob: -4.000317573547363
    4. '<|end|>' → logprob: -5.750317573547363
    5. 'v' → logprob: -6.250317573547363
    6. '   ' → logprob: -7.625317573547363
    7. '	if' → logprob: -8.500317573547363
    8. ' ' → logprob: -8.625317573547363
    9. '        
' → logprob: -8.875317573547363
    10. '```' → logprob: -9.625317573547363

Token 1664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07899840176105499
    2. ' if' → logprob: -3.203998327255249
    3. 'if' → logprob: -3.453998327255249
    4. 'px' → logprob: -6.453998565673828
    5. 'v' → logprob: -7.453998565673828
    6. '   ' → logprob: -7.953998565673828
    7. ' px' → logprob: -7.953998565673828
    8. '        
' → logprob: -7.953998565673828
    9. '<|end|>' → logprob: -8.953998565673828
    10. ' ' → logprob: -9.203998565673828

Token 1665: ' if' (ID: 538)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.00991356372833252
    2. 'if' (adapté à ' if') → logprob: -4.634913444519043
    3. '   ' → logprob: -9.634913444519043
    4. 'py' → logprob: -10.134913444519043
    5. ' px' → logprob: -11.509913444519043
    6. 'R' → logprob: -12.009913444519043
    7. 'PX' → logprob: -12.134913444519043
    8. ' if' → logprob: -12.384913444519043
    9. 'N' → logprob: -12.384913444519043
    10. 'n' → logprob: -12.884913444519043

Token 1666: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00028934504371136427
    2. 'abs' → logprob: -8.500288963317871
    3. ' D' → logprob: -9.375288963317871
    4. ' abs' → logprob: -14.000288963317871
    5. '	D' → logprob: -15.875288963317871
    6. ' ' → logprob: -16.750289916992188
    7. 'fabs' → logprob: -17.250289916992188
    8. 'math' → logprob: -17.500289916992188
    9. 'not' → logprob: -17.875289916992188
    10. '   ' → logprob: -17.875289916992188

Token 1667: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5749467015266418
    2. '==' → logprob: -1.199946641921997
    3. ' <=' → logprob: -2.699946641921997
    4. '<=' → logprob: -2.699946641921997
    5. '=' → logprob: -6.699946880340576
    6. ' <' → logprob: -9.199946403503418
    7. '<|end|>' → logprob: -9.824946403503418
    8. '<' → logprob: -10.074946403503418
    9. ' =' → logprob: -10.324946403503418
    10. ')<=' → logprob: -10.574946403503418

Token 1668: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023691373644396663
    2. ' ' → logprob: -8.375236511230469
    3. '-' → logprob: -12.000236511230469
    4. ' -' → logprob: -16.25023651123047
    5. '<|end|>' → logprob: -18.87523651123047
    6. '=' → logprob: -20.37523651123047
    7. '  ' → logprob: -20.62523651123047
    8. '
' → logprob: -20.87523651123047
    9. '```' → logprob: -21.00023651123047
    10. 's' → logprob: -21.00023651123047

Token 1669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040882546454668045
    2. '-' → logprob: -5.504088401794434
    3. ' ' → logprob: -11.879088401794434
    4. ' -' → logprob: -12.879088401794434
    5. '```' → logprob: -16.629087448120117
    6. '   ' → logprob: -16.941587448120117
    7. '
' → logprob: -16.941587448120117
    8. '=' → logprob: -17.066587448120117
    9. '999' → logprob: -17.879087448120117
    10. '1' → logprob: -18.004087448120117

Token 1670: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018366605509072542
    2. ':
' → logprob: -6.376836776733398
    3. ':return' → logprob: -9.126836776733398
    4. '.' → logprob: -11.376836776733398
    5. ' :' → logprob: -11.876836776733398
    6. '<|end|>' → logprob: -12.626836776733398
    7. '():' → logprob: -14.376836776733398
    8. '):' → logprob: -14.626836776733398
    9. '<|end|>' → logprob: -14.626836776733398
    10. '():
' → logprob: -14.751836776733398

Token 1671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02172868512570858
    2. '   ' → logprob: -4.771728515625
    3. '       ' → logprob: -5.146728515625
    4. ':
' → logprob: -6.021728515625
    5. '
' → logprob: -6.396728515625
    6. '		' → logprob: -6.771728515625
    7. ':' → logprob: -7.646728515625
    8. '	       ' → logprob: -8.396728515625
    9. '               ' → logprob: -8.646728515625
    10. ':return' → logprob: -8.771728515625

Token 1672: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4755043685436249
    2. 'return' → logprob: -0.9755043983459473
    3. ' break' → logprob: -7.225504398345947
    4. '           ' → logprob: -8.225503921508789
    5. '       ' → logprob: -8.475503921508789
    6. ' return' → logprob: -8.725503921508789
    7. '	break' → logprob: -9.850503921508789
    8. '   ' → logprob: -12.850503921508789
    9. '	return' → logprob: -13.225503921508789
    10. '               ' → logprob: -13.225503921508789

Token 1673: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004286980722099543
    2. '        
' → logprob: -6.129286766052246
    3. '   ' → logprob: -6.754286766052246
    4. '<|end|>' → logprob: -8.629286766052246
    5. ' ' → logprob: -8.754286766052246
    6. 'v' → logprob: -8.879286766052246
    7. '    
' → logprob: -9.254286766052246
    8. '
' → logprob: -9.629286766052246
    9. '  
' → logprob: -9.629286766052246
    10. '```' → logprob: -10.379286766052246

Token 1674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003977800370194018
    2. '   ' → logprob: -8.625397682189941
    3. '        
' → logprob: -9.250397682189941
    4. '```' → logprob: -10.125397682189941
    5. ' ' → logprob: -11.250397682189941
    6. '<|end|>' → logprob: -11.375397682189941
    7. 'v' → logprob: -11.500397682189941
    8. '​' → logprob: -11.625397682189941
    9. '	   ' → logprob: -12.250397682189941
    10. ',' → logprob: -12.375397682189941

Token 1675: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.0007649566978216171
    2. ' px' → logprob: -7.375764846801758
    3. '       ' → logprob: -9.875764846801758
    4. '(px' → logprob: -10.750764846801758
    5. 'vx' → logprob: -11.000764846801758
    6. 'py' → logprob: -11.000764846801758
    7. '   ' → logprob: -11.750764846801758
    8. 'Px' → logprob: -11.875764846801758
    9. 'x' → logprob: -12.375764846801758
    10. 'PX' → logprob: -12.875764846801758

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05506044998764992
    2. ' =' → logprob: -2.930060386657715
    3. ',' → logprob: -8.680060386657715
    4. '=float' → logprob: -11.930060386657715
    5. ',p' → logprob: -15.180060386657715
    6. ' ' → logprob: -15.555060386657715
    7. '=input' → logprob: -15.555060386657715
    8. '<|end|>' → logprob: -15.930060386657715
    9. '=p' → logprob: -16.05506134033203
    10. ')' → logprob: -16.05506134033203

Token 1677: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.018151111900806427
    2. ' float' → logprob: -4.01815128326416
    3. '=float' → logprob: -14.39315128326416
    4. '	float' → logprob: -15.51815128326416
    5. '<float' → logprob: -15.76815128326416
    6. '(float' → logprob: -16.018150329589844
    7. ',float' → logprob: -16.393150329589844
    8. '_float' → logprob: -18.393150329589844
    9. 'flo' → logprob: -18.393150329589844
    10. '.float' → logprob: -19.143150329589844

Token 1678: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001507601235061884
    2. 'input' → logprob: -6.501507759094238
    3. '[input' → logprob: -13.126507759094238
    4. ',input' → logprob: -13.501507759094238
    5. ' input' → logprob: -13.751507759094238
    6. '=input' → logprob: -14.751507759094238
    7. '(' → logprob: -14.876507759094238
    8. ' (' → logprob: -16.626506805419922
    9. '<input' → logprob: -17.376506805419922
    10. ')' → logprob: -17.501506805419922

Token 1679: '[idx' (ID: 25582)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.10023686289787292
    2. '[idx' → logprob: -2.3502368927001953
    3. '(input' → logprob: -11.225236892700195
    4. 'input' → logprob: -12.225236892700195
    5. '[' → logprob: -12.475236892700195
    6. '[index' → logprob: -13.100236892700195
    7. '[
' → logprob: -13.225236892700195
    8. 'idx' → logprob: -13.975236892700195
    9. '[user' → logprob: -14.475236892700195
    10. ' input' → logprob: -14.975236892700195

Token 1680: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03812296688556671
    2. ')
' → logprob: -3.2881228923797607
    3. '])' → logprob: -9.78812313079834
    4. ' )' → logprob: -12.16312313079834
    5. '[idx' → logprob: -12.53812313079834
    6. '   ' → logprob: -12.78812313079834
    7. '<|end|>' → logprob: -12.78812313079834
    8. ')
' → logprob: -12.91312313079834
    9. ']' → logprob: -13.03812313079834
    10. '])
' → logprob: -13.66312313079834

Token 1681: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1682: ' py' (ID: 13104)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008154470473527908
    2. ' idx' → logprob: -5.383154392242432
    3. '[idx' → logprob: -6.383154392242432
    4. '<|end|>' → logprob: -7.383154392242432
    5. '```' → logprob: -8.00815486907959
    6. '	idx' → logprob: -8.25815486907959
    7. '(idx' → logprob: -9.13315486907959
    8. 'x' → logprob: -9.38315486907959
    9. '_idx' → logprob: -9.38315486907959
    10. ' ' → logprob: -9.88315486907959

Token 1683: ' =' (ID: 314)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.4176192879676819
    2. ' =' → logprob: -1.292619228363037
    3. '=' → logprob: -2.792619228363037
    4. '<|end|>' → logprob: -5.917619228363037
    5. '[' → logprob: -7.542619228363037
    6. '=float' → logprob: -7.792619228363037
    7. '[index' → logprob: -8.042619705200195
    8. '[
' → logprob: -8.167619705200195
    9. '[token' → logprob: -8.542619705200195
    10. '[int' → logprob: -8.792619705200195

Token 1684: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0110511165112257
    2. ' float' → logprob: -4.511051177978516
    3. '=float' → logprob: -12.886051177978516
    4. '(float' → logprob: -14.511051177978516
    5. '	float' → logprob: -16.261051177978516
    6. '<float' → logprob: -16.886051177978516
    7. '_float' → logprob: -17.386051177978516
    8. ',float' → logprob: -17.886051177978516
    9. '.float' → logprob: -19.386051177978516
    10. 'Float' → logprob: -19.886051177978516

Token 1685: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004334814380854368
    2. 'float' → logprob: -6.254334926605225
    3. 'input' → logprob: -6.629334926605225
    4. '[input' → logprob: -7.004334926605225
    5. '(float' → logprob: -9.004334449768066
    6. ' input' → logprob: -10.754334449768066
    7. '=input' → logprob: -11.004334449768066
    8. ' float' → logprob: -12.129334449768066
    9. ' (' → logprob: -12.754334449768066
    10. '<float' → logprob: -13.379334449768066

Token 1686: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.91732100979425e-05
    2. 'idx' → logprob: -10.250039100646973
    3. ']' → logprob: -13.375039100646973
    4. '(idx' → logprob: -14.000039100646973
    5. ')' → logprob: -14.375039100646973
    6. ' idx' → logprob: -14.625039100646973
    7. '	idx' → logprob: -15.500039100646973
    8. '])' → logprob: -17.37504005432129
    9. '][' → logprob: -17.75004005432129
    10. '```' → logprob: -17.87504005432129

Token 1687: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040083532221615314
    2. '])' → logprob: -6.0040082931518555
    3. ' +' → logprob: -6.5040082931518555
    4. ')' → logprob: -11.254008293151855
    5. '])
' → logprob: -11.754008293151855
    6. '+
' → logprob: -12.254008293151855
    7. ']' → logprob: -12.629008293151855
    8. ']);' → logprob: -13.129008293151855
    9. '+)' → logprob: -13.629008293151855
    10. '   ' → logprob: -14.504008293151855

Token 1688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '0' → logprob: -18.25
    4. '2' → logprob: -18.375
    5. '```' → logprob: -20.0
    6. '
' → logprob: -21.875
    7. '   ' → logprob: -22.5
    8. '１' → logprob: -23.0
    9. '3' → logprob: -23.25
    10. '``' → logprob: -24.0

Token 1689: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006845495663583279
    2. ')
' → logprob: -5.006845474243164
    3. ']' → logprob: -10.256845474243164
    4. '<|end|>' → logprob: -10.506845474243164
    5. '       ' → logprob: -11.006845474243164
    6. '   ' → logprob: -11.006845474243164
    7. '```' → logprob: -12.256845474243164
    8. '[' → logprob: -12.881845474243164
    9. '`)' → logprob: -12.881845474243164
    10. ')v' → logprob: -12.881845474243164

Token 1690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.113322138786316
    2. ' idx' → logprob: -1.613322138786316
    3. ' ' → logprob: -2.3633222579956055
    4. '```' → logprob: -2.4883222579956055
    5. '<|end|>' → logprob: -2.8633222579956055
    6. 'idx' → logprob: -2.8633222579956055
    7. ' vx' → logprob: -2.9883222579956055
    8. ' px' → logprob: -3.2383222579956055
    9. ' ' → logprob: -3.3633222579956055
    10. '	idx' → logprob: -4.1133222579956055

Token 1691: ' vx' (ID: 93588)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05699911713600159
    2. ' idx' → logprob: -3.0569992065429688
    3. 'vx' (adapté à ' vx') → logprob: -5.181999206542969
    4. 'px' → logprob: -6.681999206542969
    5. ' vx' → logprob: -6.931999206542969
    6. ' px' → logprob: -8.431999206542969
    7. '```' → logprob: -8.931999206542969
    8. '	idx' → logprob: -9.056999206542969
    9. '   ' → logprob: -11.556999206542969
    10. ' 
' → logprob: -11.681999206542969

Token 1692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5385609269142151
    2. ' =' → logprob: -0.9135609269142151
    3. '<|end|>' → logprob: -4.41356086730957
    4. ' ' → logprob: -7.03856086730957
    5. ',' → logprob: -7.28856086730957
    6. '[' → logprob: -7.78856086730957
    7. ')' → logprob: -7.78856086730957
    8. '=float' → logprob: -8.03856086730957
    9. '<|end|>' → logprob: -9.28856086730957
    10. '[idx' → logprob: -9.91356086730957

Token 1693: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04859418421983719
    2. ' float' → logprob: -3.0485942363739014
    3. '=float' → logprob: -12.29859447479248
    4. '<float' → logprob: -14.04859447479248
    5. '(float' → logprob: -14.17359447479248
    6. '	float' → logprob: -15.17359447479248
    7. ',float' → logprob: -15.17359447479248
    8. '_float' → logprob: -15.29859447479248
    9. '.float' → logprob: -17.548593521118164
    10. 'flo' → logprob: -18.173593521118164

Token 1694: '(input' (ID: 10054)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.011030025780200958
    2. 'input' → logprob: -5.011030197143555
    3. '(input' → logprob: -5.761030197143555
    4. '(float' → logprob: -7.136030197143555
    5. ' float' → logprob: -8.011030197143555
    6. '=float' → logprob: -11.511030197143555
    7. ' input' → logprob: -11.886030197143555
    8. '[input' → logprob: -12.136030197143555
    9. '=input' → logprob: -12.761030197143555
    10. '_float' → logprob: -13.136030197143555

Token 1695: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0005538671393878758
    2. '[input' → logprob: -7.500554084777832
    3. 'idx' → logprob: -14.375554084777832
    4. '(idx' → logprob: -16.500553131103516
    5. '[' → logprob: -17.500553131103516
    6. ' idx' → logprob: -18.125553131103516
    7. '	idx' → logprob: -18.250553131103516
    8. '[index' → logprob: -18.375553131103516
    9. '(input' → logprob: -18.625553131103516
    10. '[ix' → logprob: -18.750553131103516

Token 1696: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00030507624614983797
    2. '[idx' → logprob: -8.12530517578125
    3. 'idx' → logprob: -12.00030517578125
    4. ' +' → logprob: -13.25030517578125
    5. '(idx' → logprob: -15.00030517578125
    6. '	idx' → logprob: -15.87530517578125
    7. ']' → logprob: -16.00030517578125
    8. ' idx' → logprob: -16.00030517578125
    9. '[' → logprob: -16.25030517578125
    10. '2' → logprob: -16.37530517578125

Token 1697: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.250015258789062
    3. '3' → logprob: -13.250015258789062
    4. '1' → logprob: -14.125015258789062
    5. '+' → logprob: -16.875015258789062
    6. '   ' → logprob: -17.375015258789062
    7. '```' → logprob: -17.687515258789062
    8. '0' → logprob: -17.812515258789062
    9. '２' → logprob: -17.812515258789062
    10. '۲' → logprob: -18.000015258789062

Token 1698: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14282293617725372
    2. ')
' → logprob: -2.0178229808807373
    3. ']' → logprob: -9.892823219299316
    4. '])' → logprob: -10.142823219299316
    5. '])
' → logprob: -11.642823219299316
    6. ')
' → logprob: -11.642823219299316
    7. ',' → logprob: -11.892823219299316
    8. ')v' → logprob: -12.267823219299316
    9. '<|end|>' → logprob: -12.392823219299316
    10. ']
' → logprob: -12.642823219299316

Token 1699: '       ' (ID: 309)
  Prédit: ' vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.5671048164367676
    2. '       ' → logprob: -1.5671048164367676
    3. ' 
' → logprob: -2.8171048164367676
    4. ' ' → logprob: -3.3171048164367676
    5. '<|end|>' → logprob: -3.3171048164367676
    6. ' v' → logprob: -3.9421048164367676
    7. ' ' → logprob: -3.9421048164367676
    8. 'vx' → logprob: -4.692104816436768
    9. 'v' → logprob: -4.817104816436768
    10. '```' → logprob: -4.942104816436768

Token 1700: ' vy' (ID: 14190)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4855419993400574
    2. ' input' → logprob: -1.1105420589447021
    3. 'float' → logprob: -3.235542058944702
    4. ' float' → logprob: -4.235541820526123
    5. 'v' → logprob: -7.360541820526123
    6. '=input' → logprob: -8.360542297363281
    7. 'vx' → logprob: -8.485542297363281
    8. ' vx' → logprob: -9.360542297363281
    9. '(input' → logprob: -9.735542297363281
    10. 'vy' (adapté à ' vy') → logprob: -10.110542297363281

Token 1701: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11634497344493866
    2. '=float' → logprob: -2.741344928741455
    3. '=' → logprob: -3.241344928741455
    4. '<|end|>' → logprob: -5.491344928741455
    5. '=input' → logprob: -6.741344928741455
    6. ')' → logprob: -8.241345405578613
    7. '[' → logprob: -8.741345405578613
    8. '<float' → logprob: -8.991345405578613
    9. '<|end|>' → logprob: -9.241345405578613
    10. '```' → logprob: -10.366345405578613

Token 1702: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02975141443312168
    2. ' float' → logprob: -3.5297513008117676
    3. '=float' → logprob: -14.654751777648926
    4. '(float' → logprob: -15.029751777648926
    5. '	float' → logprob: -16.15475082397461
    6. '<float' → logprob: -16.90475082397461
    7. '_float' → logprob: -17.77975082397461
    8. '.float' → logprob: -19.15475082397461
    9. ',float' → logprob: -19.15475082397461
    10. '```' → logprob: -19.40475082397461

Token 1703: '(input' (ID: 10054)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.616723895072937
    2. '(input' → logprob: -0.866723895072937
    3. '(float' → logprob: -3.2417240142822266
    4. 'input' → logprob: -7.741724014282227
    5. ' float' → logprob: -8.491724014282227
    6. '[input' → logprob: -8.866724014282227
    7. '=float' → logprob: -10.366724014282227
    8. '<float' → logprob: -10.991724014282227
    9. '=input' → logprob: -11.616724014282227
    10. '.float' → logprob: -12.241724014282227

Token 1704: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.910643762443215e-05
    2. 'idx' → logprob: -9.500079154968262
    3. '(idx' → logprob: -13.750079154968262
    4. '	idx' → logprob: -13.750079154968262
    5. ']' → logprob: -14.125079154968262
    6. ' idx' → logprob: -14.625079154968262
    7. '+' → logprob: -15.000079154968262
    8. ']+' → logprob: -15.750079154968262
    9. '```' → logprob: -15.875079154968262
    10. '][' → logprob: -16.000078201293945

Token 1705: '+' (ID: 10)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.29710787534713745
    2. '+' → logprob: -1.4221079349517822
    3. 'idx' → logprob: -4.172107696533203
    4. '2' → logprob: -9.047107696533203
    5. ']' → logprob: -9.172107696533203
    6. ' idx' → logprob: -9.797107696533203
    7. '_idx' → logprob: -9.922107696533203
    8. '[' → logprob: -10.922107696533203
    9. '	idx' → logprob: -10.922107696533203
    10. '(idx' → logprob: -11.297107696533203

Token 1706: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006266565760597587
    2. '2' → logprob: -7.375626564025879
    3. ' ' → logprob: -17.250627517700195
    4. '
' → logprob: -17.625627517700195
    5. '1' → logprob: -17.875627517700195
    6. '```' → logprob: -18.250627517700195
    7. '   ' → logprob: -18.750627517700195
    8. '0' → logprob: -20.000627517700195
    9. '

' → logprob: -21.063127517700195
    10. '３' → logprob: -21.125627517700195

Token 1707: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869188129901886
    2. ')' → logprob: -1.1369187831878662
    3. ')
' → logprob: -10.136919021606445
    4. '   ' → logprob: -13.136919021606445
    5. ']' → logprob: -13.636919021606445
    6. ']
' → logprob: -13.761919021606445
    7. '<|end|>' → logprob: -14.261919021606445
    8. ')

' → logprob: -14.511919021606445
    9. '       ' → logprob: -15.011919021606445
    10. '):
' → logprob: -15.136919021606445

Token 1708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05455316975712776
    2. '   ' → logprob: -3.554553270339966
    3. 'idx' → logprob: -4.179553031921387
    4. '<|end|>' → logprob: -6.054553031921387
    5. '	idx' → logprob: -6.179553031921387
    6. '
' → logprob: -6.554553031921387
    7. '[idx' → logprob: -7.179553031921387
    8. ' idx' → logprob: -7.179553031921387
    9. '```' → logprob: -7.179553031921387
    10. '           ' → logprob: -8.429553031921387

Token 1709: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0004901225329376757
    2. ' idx' → logprob: -8.000490188598633
    3. '
' → logprob: -9.125490188598633
    4. '	idx' → logprob: -10.625490188598633
    5. '   ' → logprob: -11.375490188598633
    6. '       ' → logprob: -12.250490188598633
    7. '_idx' → logprob: -12.750490188598633
    8. '[idx' → logprob: -13.625490188598633
    9. '(idx' → logprob: -14.750490188598633
    10. '```' → logprob: -14.875490188598633

Token 1710: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005623269826173782
    2. ' +=' → logprob: -7.5005621910095215
    3. '+' → logprob: -11.75056266784668
    4. '=' → logprob: -13.75056266784668
    5. '+="' → logprob: -16.12556266784668
    6. ']+=' → logprob: -16.25056266784668
    7. '+='' → logprob: -16.50056266784668
    8. '   ' → logprob: -17.00056266784668
    9. '+=(' → logprob: -17.12556266784668
    10. '	' → logprob: -17.87556266784668

Token 1711: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '5' → logprob: -20.875
    4. '۴' → logprob: -21.25
    5. '４' → logprob: -22.125
    6. '' → logprob: -22.125
    7. '   ' → logprob: -22.375
    8. '٤' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. '৪' → logprob: -23.5

Token 1712: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '5' → logprob: -19.375
    3. ' ' → logprob: -21.625
    4. '۴' → logprob: -22.375
    5. '４' → logprob: -23.125
    6. '' → logprob: -23.125
    7. '৪' → logprob: -23.5
    8. '٤' → logprob: -23.625
    9. '   ' → logprob: -24.5
    10. '४' → logprob: -25.0

Token 1713: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17210988700389862
    2. '       ' → logprob: -2.297109842300415
    3. '<|end|>' → logprob: -2.922109842300415
    4. '        
' → logprob: -6.672110080718994
    5. '   ' → logprob: -7.297110080718994
    6. '    
' → logprob: -7.672110080718994
    7. '  
' → logprob: -8.047109603881836
    8. '```' → logprob: -8.422109603881836
    9. '<|end|>' → logprob: -8.547109603881836
    10. '
' → logprob: -8.797109603881836

Token 1714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2596259117126465
    2. 'result' → logprob: -1.5096259117126465
    3. '   ' → logprob: -5.6346259117126465
    4. 'if' → logprob: -7.0096259117126465
    5. '
' → logprob: -7.0096259117126465
    6. ' result' → logprob: -7.5096259117126465
    7. '        
' → logprob: -7.8846259117126465
    8. '```' → logprob: -7.8846259117126465
    9. 'distance' → logprob: -8.634626388549805
    10. 'solution' → logprob: -9.009626388549805

Token 1715: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.4745429754257202
    2. 'result' → logprob: -0.9745429754257202
    3. 'r' → logprob: -7.72454309463501
    4. 'ret' → logprob: -11.849542617797852
    5. 'answer' → logprob: -12.224542617797852
    6. 'dist' → logprob: -12.724542617797852
    7. ' res' → logprob: -12.974542617797852
    8. 'rés' → logprob: -13.099542617797852
    9. 'ans' → logprob: -13.474542617797852
    10. ' result' → logprob: -13.599542617797852

Token 1716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6529548764228821
    2. '=' → logprob: -0.7779548764228821
    3. 'ult' → logprob: -4.152955055236816
    4. 'ults' → logprob: -5.527955055236816
    5. 'ultat' → logprob: -8.777955055236816
    6. 'u' → logprob: -8.777955055236816
    7. 'ULT' → logprob: -9.902955055236816
    8. 'ul' → logprob: -10.902955055236816
    9. 'ulta' → logprob: -11.027955055236816
    10. 'uls' → logprob: -11.027955055236816

Token 1717: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0031777136027812958
    2. ' solve' → logprob: -5.753177642822266
    3. '.solve' → logprob: -17.378177642822266
    4. '   ' → logprob: -18.878177642822266
    5. 'sol' → logprob: -19.628177642822266
    6. 'solver' → logprob: -19.878177642822266
    7. '(s' → logprob: -20.003177642822266
    8. '	s' → logprob: -20.628177642822266
    9. '```' → logprob: -20.628177642822266
    10. 'save' → logprob: -21.003177642822266

Token 1718: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00978595856577158
    2. '(' → logprob: -4.634786128997803
    3. '((' → logprob: -11.509785652160645
    4. '(
' → logprob: -11.634785652160645
    5. '(res' → logprob: -12.134785652160645
    6. ' (' → logprob: -12.759785652160645
    7. '(d' → logprob: -14.259785652160645
    8. '(None' → logprob: -15.009785652160645
    9. '(`' → logprob: -15.259785652160645
    10. '(True' → logprob: -15.509785652160645

Token 1719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ',
' → logprob: -12.500008583068848
    3. ' ,' → logprob: -13.375008583068848
    4. ',p' → logprob: -13.500008583068848
    5. '(px' → logprob: -13.625008583068848
    6. '(' → logprob: -15.000008583068848
    7. ')' → logprob: -16.62500762939453
    8. '   ' → logprob: -17.37500762939453
    9. '
' → logprob: -17.62500762939453
    10. ',(' → logprob: -17.87500762939453

Token 1720: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -3.173704271830502e-06
    2. ' px' → logprob: -12.87500286102295
    3. 'py' → logprob: -14.62500286102295
    4. '(px' → logprob: -16.875003814697266
    5. '_px' → logprob: -18.375003814697266
    6. '```' → logprob: -19.750003814697266
    7. 'pc' → logprob: -19.875003814697266
    8. 'p' → logprob: -19.875003814697266
    9. 'pm' → logprob: -20.000003814697266
    10. 'pos' → logprob: -20.250003814697266

Token 1721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',
' → logprob: -13.625006675720215
    4. 'py' → logprob: -16.25000762939453
    5. ',p' → logprob: -16.75000762939453
    6. '(py' → logprob: -17.37500762939453
    7. '_py' → logprob: -17.50000762939453
    8. ',y' → logprob: -17.50000762939453
    9. ',

' → logprob: -17.87500762939453
    10. '   ' → logprob: -18.00000762939453

Token 1722: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -9.615255839889869e-05
    2. ' py' → logprob: -9.250096321105957
    3. '_py' → logprob: -17.00009536743164
    4. '(py' → logprob: -17.37509536743164
    5. 'Py' → logprob: -19.25009536743164
    6. '.py' → logprob: -19.50009536743164
    7. 'ply' → logprob: -20.50009536743164
    8. 'px' → logprob: -20.62509536743164
    9. 'ppy' → logprob: -20.75009536743164
    10. 'p' → logprob: -21.12509536743164

Token 1723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.375006675720215
    3. ',v' → logprob: -12.875006675720215
    4. ',
' → logprob: -18.25000762939453
    5. '_,' → logprob: -19.37500762939453
    6. 'v' → logprob: -20.00000762939453
    7. '```' → logprob: -21.37500762939453
    8. '   ' → logprob: -21.50000762939453
    9. 'vy' → logprob: -22.25000762939453
    10. 'vx' → logprob: -22.50000762939453

Token 1724: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.000712074339389801
    2. 'px' → logprob: -7.500711917877197
    3. ' vx' → logprob: -9.000712394714355
    4. 'vy' → logprob: -11.000712394714355
    5. 'py' → logprob: -11.000712394714355
    6. 'pv' → logprob: -13.000712394714355
    7. ' ' → logprob: -18.62571144104004
    8. '   ' → logprob: -18.62571144104004
    9. ' px' → logprob: -18.87571144104004
    10. 'vp' → logprob: -19.25071144104004

Token 1725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',
' → logprob: -14.250004768371582
    4. ',v' → logprob: -15.500004768371582
    5. ',y' → logprob: -16.250003814697266
    6. 'vy' → logprob: -18.375003814697266
    7. ',\
' → logprob: -19.250003814697266
    8. ',
' → logprob: -19.750003814697266
    9. '[' → logprob: -19.875003814697266
    10. '   ' → logprob: -20.000003814697266

Token 1726: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00034261439577676356
    2. ' vy' → logprob: -8.00034236907959
    3. 'py' → logprob: -11.87534236907959
    4. 'wy' → logprob: -16.625343322753906
    5. 'Vy' → logprob: -17.875343322753906
    6. 'v' → logprob: -18.000343322753906
    7. ' ' → logprob: -18.250343322753906
    8. 'y' → logprob: -18.500343322753906
    9. ' ' → logprob: -18.500343322753906
    10. 'uy' → logprob: -18.625343322753906

Token 1727: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023260852321982384
    2. ')
' → logprob: -3.7732608318328857
    3. '       ' → logprob: -11.398261070251465
    4. '   ' → logprob: -12.773261070251465
    5. ' )' → logprob: -14.398261070251465
    6. ')
' → logprob: -15.273261070251465
    7. ')

' → logprob: -15.523261070251465
    8. ' )
' → logprob: -16.64826011657715
    9. 'if' → logprob: -17.02326011657715
    10. '[' → logprob: -17.02326011657715

Token 1728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007193523459136486
    2. '```' → logprob: -5.507193565368652
    3. 'if' → logprob: -6.257193565368652
    4. '<|end|>' → logprob: -7.132193565368652
    5. ' if' → logprob: -8.382193565368652
    6. '   ' → logprob: -9.507193565368652
    7. '``' → logprob: -10.132193565368652
    8. '
' → logprob: -11.632193565368652
    9. '	if' → logprob: -11.757193565368652
    10. '        
' → logprob: -11.882193565368652

Token 1729: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012564864940941334
    2. '       ' → logprob: -4.512564659118652
    3. ' if' → logprob: -6.512564659118652
    4. '```' → logprob: -10.637564659118652
    5. '	if' → logprob: -12.887564659118652
    6. '<|end|>' → logprob: -13.137564659118652
    7. 'print' → logprob: -14.137564659118652
    8. '   ' → logprob: -14.262564659118652
    9. '        
' → logprob: -14.887564659118652
    10. '``' → logprob: -15.262564659118652

Token 1730: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07888989895582199
    2. ' res' → logprob: -2.578889846801758
    3. '(res' → logprob: -16.078889846801758
    4. '   ' → logprob: -16.953889846801758
    5. '	res' → logprob: -18.578889846801758
    6. ' ' → logprob: -19.578889846801758
    7. '_res' → logprob: -19.953889846801758
    8. 'is' → logprob: -19.953889846801758
    9. '    ' → logprob: -20.328889846801758
    10. 'abs' → logprob: -20.328889846801758

Token 1731: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0016518525080755353
    2. 'is' → logprob: -6.501651763916016
    3. '==' → logprob: -9.501651763916016
    4. ' ==' → logprob: -9.876651763916016
    5. ')' → logprob: -12.251651763916016
    6. '	is' → logprob: -12.251651763916016
    7. ')is' → logprob: -12.376651763916016
    8. '===' → logprob: -13.376651763916016
    9. '=' → logprob: -13.626651763916016
    10. '<|end|>' → logprob: -13.876651763916016

Token 1732: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5683702826499939
    2. ' None' → logprob: -1.0683703422546387
    3. ' not' → logprob: -2.5683703422546387
    4. 'not' → logprob: -4.318370342254639
    5. 'Not' → logprob: -14.06836986541748
    6. '	not' → logprob: -14.56836986541748
    7. ' ' → logprob: -14.69336986541748
    8. '_None' → logprob: -15.44336986541748
    9. '(None' → logprob: -16.693370819091797
    10. '=None' → logprob: -16.693370819091797

Token 1733: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021100908517837524
    2. ':
' → logprob: -5.021100997924805
    3. 'print' → logprob: -5.146100997924805
    4. '           ' → logprob: -5.146100997924805
    5. ' or' → logprob: -7.146100997924805
    6. '       ' → logprob: -7.771100997924805
    7. '<|end|>' → logprob: -8.271100997924805
    8. '.' → logprob: -8.396100997924805
    9. ' print' → logprob: -9.271100997924805
    10. '=' → logprob: -9.396100997924805

Token 1734: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6866512298583984
    2. '           ' → logprob: -0.8116512298583984
    3. 'print' → logprob: -3.0616512298583984
    4. ' print' → logprob: -5.186651229858398
    5. '```' → logprob: -8.936651229858398
    6. '	       ' → logprob: -10.436651229858398
    7. '               ' → logprob: -10.561651229858398
    8. '	print' → logprob: -12.311651229858398
    9. '   ' → logprob: -12.311651229858398
    10. '<|end|>' → logprob: -12.686651229858398

Token 1735: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01532132551074028
    2. '       ' → logprob: -4.265321254730225
    3. ' print' → logprob: -6.765321254730225
    4. '	print' → logprob: -13.015321731567383
    5. '```' → logprob: -14.015321731567383
    6. '           ' → logprob: -14.515321731567383
    7. '   ' → logprob: -15.515321731567383
    8. 'pr' → logprob: -15.640321731567383
    9. '        
' → logprob: -16.265321731567383
    10. '.print' → logprob: -17.640321731567383

Token 1736: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002021901309490204
    2. '(im' → logprob: -6.877021789550781
    3. '('' → logprob: -7.002021789550781
    4. 'Impossible' → logprob: -9.877021789550781
    5. 'im' → logprob: -11.002021789550781
    6. '(' → logprob: -12.127021789550781
    7. '(-' → logprob: -13.127021789550781
    8. ''im' → logprob: -14.127021789550781
    9. '(Im' → logprob: -14.502021789550781
    10. ' ("' → logprob: -14.627021789550781

Token 1737: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.10071910172700882
    2. 'Impossible' → logprob: -2.3507192134857178
    3. 'IMP' → logprob: -8.350719451904297
    4. ' impossible' → logprob: -8.850719451904297
    5. '"' → logprob: -9.100719451904297
    6. 'Im' → logprob: -11.725719451904297
    7. ''im' → logprob: -12.350719451904297
    8. '-' → logprob: -13.725719451904297
    9. 'No' → logprob: -13.850719451904297
    10. 'un' → logprob: -14.475719451904297

Token 1738: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.580929347255733e-05
    2. 'poss' → logprob: -12.000016212463379
    3. 'p' → logprob: -12.125016212463379
    4. 'pos' → logprob: -13.250016212463379
    5. '_possible' → logprob: -13.375016212463379
    6. 'Possible' → logprob: -14.625016212463379
    7. 'posable' → logprob: -15.500016212463379
    8. ' possible' → logprob: -16.250015258789062
    9. '-' → logprob: -16.625015258789062
    10. 'po' → logprob: -17.875015258789062

Token 1739: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0011708177626132965
    2. '")
' → logprob: -6.751170635223389
    3. ')' → logprob: -15.001171112060547
    4. '")
' → logprob: -16.751171112060547
    5. '");' → logprob: -17.126171112060547
    6. '"' → logprob: -17.501171112060547
    7. ')")' → logprob: -17.626171112060547
    8. '')' → logprob: -18.126171112060547
    9. '")

' → logprob: -18.376171112060547
    10. ' ")' → logprob: -19.251171112060547

Token 1740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010735770774772391
    2. '```' → logprob: -10.000107765197754
    3. '<|end|>' → logprob: -10.125107765197754
    4. 'else' → logprob: -11.125107765197754
    5. ' else' → logprob: -13.250107765197754
    6. '   ' → logprob: -13.500107765197754
    7. '           ' → logprob: -13.750107765197754
    8. '	' → logprob: -14.250107765197754
    9. '<|end|>' → logprob: -14.625107765197754
    10. '``' → logprob: -15.375107765197754

Token 1741: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016806911677122116
    2. 'else' (adapté à ' else') → logprob: -4.1418070793151855
    3. ' else' → logprob: -7.3918070793151855
    4. '```' → logprob: -9.141806602478027
    5. '   ' → logprob: -10.516806602478027
    6. '	' → logprob: -11.641806602478027
    7. 'elif' → logprob: -12.391806602478027
    8. '           ' → logprob: -12.766806602478027
    9. '	else' → logprob: -13.016806602478027
    10. '<|end|>' → logprob: -13.516806602478027

Token 1742: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12893754243850708
    2. '           ' → logprob: -2.3789374828338623
    3. '(
' → logprob: -4.378937721252441
    4. '       ' → logprob: -5.253937721252441
    5. '(f' → logprob: -5.378937721252441
    6. ':' → logprob: -6.753937721252441
    7. '("' → logprob: -7.128937721252441
    8. 'print' → logprob: -7.128937721252441
    9. ' (' → logprob: -7.628937721252441
    10. ' print' → logprob: -8.003937721252441

Token 1743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007698441040702164
    2. 'print' → logprob: -7.50076961517334
    3. ' print' → logprob: -8.62576961517334
    4. '       ' → logprob: -10.75076961517334
    5. '```' → logprob: -11.62576961517334
    6. '               ' → logprob: -12.50076961517334
    7. '		' → logprob: -13.62576961517334
    8. '	       ' → logprob: -14.00076961517334
    9. '         ' → logprob: -14.50076961517334
    10. '   ' → logprob: -15.25076961517334

Token 1744: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011217609280720353
    2. ' print' → logprob: -7.001121997833252
    3. '           ' → logprob: -8.501121520996094
    4. '       ' → logprob: -12.626121520996094
    5. '{' → logprob: -13.001121520996094
    6. 'printf' → logprob: -14.376121520996094
    7. '```' → logprob: -14.376121520996094
    8. '	print' → logprob: -16.751121520996094
    9. '   ' → logprob: -16.876121520996094
    10. '#print' → logprob: -17.001121520996094

Token 1745: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03100592829287052
    2. '("{' → logprob: -3.781005859375
    3. '("' → logprob: -5.781005859375
    4. '(' → logprob: -5.781005859375
    5. '("%.' → logprob: -7.156005859375
    6. '(res' → logprob: -7.781005859375
    7. '(round' → logprob: -8.156005859375
    8. '(int' → logprob: -10.031005859375
    9. '(format' → logprob: -11.156005859375
    10. '('{' → logprob: -11.281005859375

Token 1746: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0046794419176876545
    2. '{' → logprob: -5.7546796798706055
    3. '("{' → logprob: -6.5046796798706055
    4. '("%.' → logprob: -13.254679679870605
    5. ''{' → logprob: -13.879679679870605
    6. '(f' → logprob: -13.879679679870605
    7. '{"' → logprob: -15.254679679870605
    8. 'res' → logprob: -15.629679679870605
    9. 'f' → logprob: -16.12967872619629
    10. '(res' → logprob: -17.62967872619629

Token 1747: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -15.875
    3. '{' → logprob: -20.5
    4. '(res' → logprob: -20.75
    5. '$res' → logprob: -21.5
    6. '	res' → logprob: -22.0
    7. '.res' → logprob: -23.0
    8. 'round' → logprob: -23.125
    9. '   ' → logprob: -23.5
    10. '0' → logprob: -24.25

Token 1748: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.250005722045898
    3. ' :.' → logprob: -14.750005722045898
    4. ':' → logprob: -15.500005722045898
    5. '}' → logprob: -18.5000057220459
    6. ' .' → logprob: -18.8750057220459
    7. '{' → logprob: -19.1250057220459
    8. '   ' → logprob: -20.2500057220459
    9. '(.' → logprob: -20.5000057220459
    10. ':f' → logprob: -20.8750057220459

Token 1749: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.807018518447876
    2. '15' → logprob: -1.807018518447876
    3. '7' → logprob: -2.307018518447876
    4. '9' → logprob: -2.432018518447876
    5. '10' → logprob: -2.557018518447876
    6. '8' → logprob: -2.932018518447876
    7. '12' → logprob: -3.182018518447876
    8. '14' → logprob: -3.807018518447876
    9. '13' → logprob: -5.682018280029297
    10. '11' → logprob: -6.057018280029297

Token 1750: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.5776860184123507e-06
    2. 'g' → logprob: -12.87500286102295
    3. 'e' → logprob: -19.625001907348633
    4. 'lf' → logprob: -21.500001907348633
    5. ' f' → logprob: -21.500001907348633
    6. '```' → logprob: -21.750001907348633
    7. '6' → logprob: -22.125001907348633
    8. '}' → logprob: -22.125001907348633
    9. '
' → logprob: -22.625001907348633
    10. 's' → logprob: -23.125001907348633

Token 1751: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -1.652451464906335e-05
    2. '")' → logprob: -11.250016212463379
    3. '}")
' → logprob: -13.125016212463379
    4. ' }' → logprob: -14.375016212463379
    5. '}' → logprob: -14.750016212463379
    6. ')")' → logprob: -15.000016212463379
    7. '}"' → logprob: -16.250017166137695
    8. '}")

' → logprob: -16.500017166137695
    9. '}")
' → logprob: -17.875017166137695
    10. 'f' → logprob: -18.375017166137695

Token 1752: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1753: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5763488411903381
    2. ' __' → logprob: -0.8263488411903381
    3. '_name' → logprob: -8.326349258422852
    4. '_' → logprob: -9.451349258422852
    5. 'name' → logprob: -10.076349258422852
    6. '___' → logprob: -10.326349258422852
    7. 'if' → logprob: -12.951349258422852
    8. '____' → logprob: -13.326349258422852
    9. ' name' → logprob: -13.826349258422852
    10. ' _' → logprob: -13.826349258422852

Token 1754: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017175428802147508
    2. '==' → logprob: -7.376717567443848
    3. ' ==' → logprob: -7.876717567443848
    4. ' __' → logprob: -8.751717567443848
    5. '_' → logprob: -9.001717567443848
    6. '[' → logprob: -9.501717567443848
    7. '.__' → logprob: -9.751717567443848
    8. '__.__' → logprob: -10.001717567443848
    9. '___' → logprob: -10.001717567443848
    10. '<|end|>' → logprob: -10.376717567443848

Token 1755: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003707204246893525
    2. '__.__' → logprob: -5.628707408905029
    3. '__["' → logprob: -9.878706932067871
    4. '__.' → logprob: -10.628706932067871
    5. '==' → logprob: -11.628706932067871
    6. '=="' → logprob: -11.878706932067871
    7. '__[' → logprob: -12.128706932067871
    8. '__("' → logprob: -13.003706932067871
    9. '__('' → logprob: -13.378706932067871
    10. '__":
' → logprob: -13.503706932067871

Token 1756: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015757715329527855
    2. '=="' → logprob: -4.7657575607299805
    3. '==' → logprob: -5.0157575607299805
    4. ' ==' → logprob: -8.01575756072998
    5. '=='' → logprob: -9.39075756072998
    6. '__["' → logprob: -10.51575756072998
    7. '___' → logprob: -11.39075756072998
    8. '__.__' → logprob: -11.64075756072998
    9. '__("' → logprob: -11.89075756072998
    10. '==="' → logprob: -12.64075756072998

Token 1757: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014169743284583092
    2. ''' → logprob: -4.264169692993164
    3. ' "__' → logprob: -12.389169692993164
    4. '__' → logprob: -13.764169692993164
    5. '"user' → logprob: -14.264169692993164
    6. '"name' → logprob: -15.764169692993164
    7. ''"' → logprob: -15.889169692993164
    8. ' '__' → logprob: -17.264169692993164
    9. '("__' → logprob: -17.764169692993164
    10. '"is' → logprob: -18.014169692993164

Token 1758: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3174467980861664
    2. 'main' → logprob: -1.3174468278884888
    3. '"' → logprob: -5.567446708679199
    4. ''' → logprob: -8.9424467086792
    5. '___' → logprob: -9.4424467086792
    6. '____' → logprob: -10.3174467086792
    7. '__":
' → logprob: -10.4424467086792
    8. '__
' → logprob: -10.8174467086792
    9. 'name' → logprob: -11.1924467086792
    10. '_main' → logprob: -11.4424467086792

Token 1759: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.39163777232170105
    2. '__' → logprob: -1.1416378021240234
    3. '__':
' → logprob: -5.891637802124023
    4. '.' → logprob: -7.641637802124023
    5. '__.' → logprob: -7.891637802124023
    6. '__["' → logprob: -8.141637802124023
    7. '__.__' → logprob: -9.141637802124023
    8. '.__' → logprob: -9.266637802124023
    9. ':' → logprob: -9.641637802124023
    10. '__:' → logprob: -9.766637802124023

Token 1760: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.11174806952476501
    2. '   ' → logprob: -2.986747980117798
    3. ' main' → logprob: -3.611747980117798
    4. '__' → logprob: -4.486748218536377
    5. '	main' → logprob: -4.986748218536377
    6. 'run' → logprob: -5.486748218536377
    7. '_main' → logprob: -6.111748218536377
    8. '<|end|>' → logprob: -6.611748218536377
    9. '    
' → logprob: -7.611748218536377
    10. '```' → logprob: -8.236747741699219

Token 1761: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -21.875
    5. '_main' → logprob: -22.625
    6. '(main' → logprob: -24.625
    7. '.main' → logprob: -25.125
    8. 'mainwindow' → logprob: -25.375
    9. 'Main' → logprob: -25.625
    10. '```' → logprob: -25.625

Token 1762: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1760
Tokens correctement prédits (1ère position, stricte): 583
Tokens correctement prédits (1ère position, avec adaptation): 630
Tokens correctement prédits (top 10): 1269
Précision stricte (1ère position): 33.12%
Précision adaptée (1ère position): 35.80%
Précision (top 10): 72.10%
================================================================================
