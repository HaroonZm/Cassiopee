================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

sys.setrecursionlimit(10**7)

def find(parent, x):
    if parent[x] != x:
        parent[x] = find(parent, parent[x])
    return parent[x]

def union(parent, rank, x, y):
    xroot = find(parent, x)
    yroot = find(parent, y)
    if xroot == yroot:
        return False
    if rank[xroot] < rank[yroot]:
        parent[xroot] = yroot
    else:
        parent[yroot] = xroot
        if rank[xroot] == rank[yroot]:
            rank[xroot] += 1
    return True

def main():
    input = sys.stdin.readline
    while True:
        n, m = map(int, input().split())
        if n == 0 and m == 0:
            break
        edges = []
        for _ in range(m):
            a, b, cost = map(int, input().split())
            edges.append((cost, a, b))
        edges.sort()
        parent = [i for i in range(n)]
        rank = [0]*n
        total_cost = 0
        for cost, a, b in edges:
            if union(parent, rank, a, b):
                total_cost += cost
        print(total_cost)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.723973582556937e-05
    2. ' .' → logprob: -12.625017166137695
    3. '.readline' → logprob: -13.000017166137695
    4. '.`' → logprob: -13.125017166137695
    5. '."""' → logprob: -13.750017166137695
    6. '.stdout' → logprob: -14.000017166137695
    7. '.import' → logprob: -14.000017166137695
    8. '.user' → logprob: -14.125017166137695
    9. '.​' → logprob: -14.625017166137695
    10. '.exit' → logprob: -14.750017166137695

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04026559367775917
    2. 'sys' → logprob: -5.4152655601501465
    3. '_sys' → logprob: -5.6652655601501465
    4. ' _' → logprob: -5.6652655601501465
    5. 'attr' → logprob: -5.9152655601501465
    6. 'xt' → logprob: -5.9152655601501465
    7. '_trace' → logprob: -6.0402655601501465
    8. 's' → logprob: -6.1652655601501465
    9. '_xt' → logprob: -6.4152655601501465
    10. '_limit' → logprob: -6.5402655601501465

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.06576120108366013
    2. 'limit' → logprob: -4.440761089324951
    3. 't' → logprob: -4.565761089324951
    4. 'ursive' → logprob: -4.940761089324951
    5. 'sys' → logprob: -5.315761089324951
    6. '_' → logprob: -5.315761089324951
    7. '_sys' → logprob: -5.565761089324951
    8. 'ut' → logprob: -6.440761089324951
    9. '_limit' → logprob: -6.565761089324951
    10. 'up' → logprob: -6.690761089324951

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11447080969810486
    2. '_limit' → logprob: -2.2394707202911377
    3. '_depth' → logprob: -6.989470958709717
    4. '_' → logprob: -8.114470481872559
    5. 'depth' → logprob: -8.989470481872559
    6. 'lim' → logprob: -9.114470481872559
    7. 'error' → logprob: -10.239470481872559
    8. 'al' → logprob: -10.239470481872559
    9. ' limit' → logprob: -10.739470481872559
    10. 'r' → logprob: -11.364470481872559

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.292907877039397e-06
    2. '(
' → logprob: -13.37500286102295
    3. ' (' → logprob: -14.00000286102295
    4. '(

' → logprob: -14.75000286102295
    5. '("("' → logprob: -15.50000286102295
    6. '('' → logprob: -16.375003814697266
    7. '((' → logprob: -16.625003814697266
    8. '()' → logprob: -16.750003814697266
    9. '(`' → logprob: -17.625003814697266
    10. '(
' → logprob: -18.000003814697266

Token 9: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47430211305618286
    2. '10' → logprob: -0.9743021130561829
    3. ' ' → logprob: -8.599302291870117
    4. '500' → logprob: -10.974302291870117
    5. '1' → logprob: -11.099302291870117
    6. '300' → logprob: -12.224302291870117
    7. '999' → logprob: -12.974302291870117
    8. '400' → logprob: -14.724302291870117
    9. '(' → logprob: -14.974302291870117
    10. '  ' → logprob: -15.474302291870117

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02113441564142704
    2. '000' → logprob: -4.521134376525879
    3. '00' → logprob: -4.646134376525879
    4. '4' → logprob: -7.896134376525879
    5. '6' → logprob: -10.021134376525879
    6. '2' → logprob: -11.771134376525879
    7. '3' → logprob: -12.271134376525879
    8. ')' → logprob: -12.646134376525879
    9. '5' → logprob: -13.521134376525879
    10. '**' → logprob: -13.896134376525879

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0005170515505596995
    2. '8' → logprob: -8.000516891479492
    3. '6' → logprob: -9.000516891479492
    4. '9' → logprob: -9.750516891479492
    5. ' ' → logprob: -17.750516891479492
    6. ')' → logprob: -19.125516891479492
    7. '```' → logprob: -19.375516891479492
    8. '}' → logprob: -20.375516891479492
    9. '**' → logprob: -21.250516891479492
    10. '(' → logprob: -22.750516891479492

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.500001907348633
    4. ')
' → logprob: -15.875001907348633
    5. ')

' → logprob: -17.500001907348633
    6. ')`' → logprob: -18.125001907348633
    7. '`)' → logprob: -18.125001907348633
    8. ')))' → logprob: -18.250001907348633
    9. '）' → logprob: -18.875001907348633
    10. '),' → logprob: -19.000001907348633

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011362685821950436
    2. '\' → logprob: -5.886362552642822
    3. '
' → logprob: -6.136362552642822
    4. '```' → logprob: -6.386362552642822
    5. '
' → logprob: -6.761362552642822
    6. ')' → logprob: -7.136362552642822
    7. '

' → logprob: -7.261362552642822
    8. '' → logprob: -7.761362552642822
    9. '#' → logprob: -8.01136302947998
    10. 'import' → logprob: -8.13636302947998

Token 14: ' find' (ID: 1646)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.42140525579452515
    2. ' dfs' → logprob: -1.42140531539917
    3. ' factor' → logprob: -4.29640531539917
    4. ' ' → logprob: -4.29640531539917
    5. ' space' → logprob: -4.42140531539917
    6. ' main' → logprob: -4.54640531539917
    7. ' fibonacci' → logprob: -4.67140531539917
    8. ' my' → logprob: -5.04640531539917
    9. ' process' → logprob: -5.29640531539917
    10. ' foo' → logprob: -5.42140531539917

Token 15: '(parent' (ID: 24729)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013384556397795677
    2. '_max' → logprob: -4.7633843421936035
    3. ' _' → logprob: -6.1383843421936035
    4. '(' → logprob: -7.8883843421936035
    5. '_depth' → logprob: -7.8883843421936035
    6. '(_' → logprob: -8.638384819030762
    7. '_parent' → logprob: -9.138384819030762
    8. '_le' → logprob: -9.263384819030762
    9. '_div' → logprob: -9.263384819030762
    10. '_min' → logprob: -9.263384819030762

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3199920178740285e-05
    2. ',node' → logprob: -11.875022888183594
    3. ' ,' → logprob: -12.000022888183594
    4. '):' → logprob: -12.750022888183594
    5. ')' → logprob: -13.375022888183594
    6. '[' → logprob: -13.625022888183594
    7. '[node' → logprob: -13.875022888183594
    8. ',n' → logprob: -14.250022888183594
    9. '```' → logprob: -14.625022888183594
    10. 's' → logprob: -14.875022888183594

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4741116464138031
    2. 'x' → logprob: -0.9741116762161255
    3. ' node' → logprob: -10.724111557006836
    4. 'a' → logprob: -11.974111557006836
    5. 'node' → logprob: -12.599111557006836
    6. ' a' → logprob: -13.349111557006836
    7. 'i' → logprob: -15.099111557006836
    8. ' i' → logprob: -15.474111557006836
    9. ' ' → logprob: -15.474111557006836
    10. ' u' → logprob: -15.974111557006836

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019579214858822525
    2. ')' → logprob: -8.625195503234863
    3. '):
' → logprob: -11.750195503234863
    4. ' ):' → logprob: -12.125195503234863
    5. ':' → logprob: -12.875195503234863
    6. '):
' → logprob: -16.50019645690918
    7. ''):' → logprob: -16.50019645690918
    8. '   ' → logprob: -16.87519645690918
    9. ' ' → logprob: -17.37519645690918
    10. ')：' → logprob: -17.75019645690918

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14529547095298767
    2. '):' → logprob: -2.0202953815460205
    3. ' :' → logprob: -6.8952956199646
    4. '   ' → logprob: -6.8952956199646
    5. ':**' → logprob: -9.145295143127441
    6. ' ):' → logprob: -9.270295143127441
    7. ':
' → logprob: -9.520295143127441
    8. ')' → logprob: -9.645295143127441
    9. '':' → logprob: -9.895295143127441
    10. ' ' → logprob: -10.020295143127441

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4961993098258972
    2. ' if' → logprob: -1.246199369430542
    3. 'if' (adapté à ' if') → logprob: -2.496199369430542
    4. '    ' → logprob: -4.121199131011963
    5. ' ' → logprob: -6.371199131011963
    6. ' :' → logprob: -6.621199131011963
    7. ':' → logprob: -7.246199131011963
    8. ' while' → logprob: -8.246199607849121
    9. '```' → logprob: -8.496199607849121
    10. '  ' → logprob: -9.371199607849121

Token 21: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.0059335362166166306
    2. 'parent' → logprob: -5.13093376159668
    3. '	parent' → logprob: -13.13093376159668
    4. ' x' → logprob: -13.50593376159668
    5. ' ' → logprob: -14.50593376159668
    6. '(parent' → logprob: -15.13093376159668
    7. ' ' → logprob: -15.25593376159668
    8. '_parent' → logprob: -16.00593376159668
    9. ',parent' → logprob: -16.13093376159668
    10. 'x' → logprob: -16.25593376159668

Token 22: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. 'x' → logprob: -16.375003814697266
    4. '[parent' → logprob: -16.625003814697266
    5. '[i' → logprob: -18.125003814697266
    6. '[int' → logprob: -18.250003814697266
    7. '[node' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '[root' → logprob: -19.000003814697266
    10. '[id' → logprob: -19.125003814697266

Token 23: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0357949323952198
    2. ']!=' → logprob: -3.410794973373413
    3. ']==' → logprob: -6.160794734954834
    4. '!=' → logprob: -10.660795211791992
    5. '[' → logprob: -11.910795211791992
    6. ')!=' → logprob: -12.910795211791992
    7. ')' → logprob: -14.035795211791992
    8. '==' → logprob: -14.035795211791992
    9. ']<' → logprob: -14.035795211791992
    10. 'is' → logprob: -15.410795211791992

Token 24: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06656557321548462
    2. ']!=' → logprob: -3.44156551361084
    3. '==' → logprob: -3.81656551361084
    4. '[' → logprob: -5.81656551361084
    5. ']==' → logprob: -6.06656551361084
    6. ' !=' → logprob: -6.19156551361084
    7. ']' → logprob: -6.69156551361084
    8. ')!=' → logprob: -7.06656551361084
    9. '<' → logprob: -8.69156551361084
    10. '==-' → logprob: -8.94156551361084

Token 25: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196824833750725
    2. ' x' → logprob: -2.8119683265686035
    3. '	x' → logprob: -14.436967849731445
    4. ' ' → logprob: -17.061967849731445
    5. ')x' → logprob: -17.561967849731445
    6. '   ' → logprob: -19.311967849731445
    7. ' ' → logprob: -19.686967849731445
    8. '>x' → logprob: -19.686967849731445
    9. '(x' → logprob: -19.811967849731445
    10. 'parent' → logprob: -19.936967849731445

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002921018283814192
    2. ':
' → logprob: -5.877921104431152
    3. '):' → logprob: -9.627921104431152
    4. ':return' → logprob: -10.002921104431152
    5. '):
' → logprob: -13.377921104431152
    6. '   ' → logprob: -13.502921104431152
    7. ' :' → logprob: -14.127921104431152
    8. ':
' → logprob: -14.752921104431152
    9. ')' → logprob: -15.252921104431152
    10. ':def' → logprob: -15.627921104431152

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014110850170254707
    2. ':' → logprob: -5.014111042022705
    3. ':
' → logprob: -6.014111042022705
    4. '   ' → logprob: -6.264111042022705
    5. '\n' → logprob: -6.514111042022705
    6. '
' → logprob: -7.639111042022705
    7. ':return' → logprob: -8.264110565185547
    8. ' return' → logprob: -8.389110565185547
    9. '):
' → logprob: -9.389110565185547
    10. '```' → logprob: -9.639110565185547

Token 28: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.23733662068843842
    2. 'parent' (adapté à ' parent') → logprob: -1.6123366355895996
    3. '
' → logprob: -4.8623366355896
    4. '       ' → logprob: -6.6123366355896
    5. '           ' → logprob: -6.6123366355896
    6. '(parent' → logprob: -7.7373366355896
    7. '.parent' → logprob: -8.362336158752441
    8. '_parent' → logprob: -8.487336158752441
    9. '[parent' → logprob: -8.987336158752441
    10. '	parent' → logprob: -9.237336158752441

Token 29: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -15.000017166137695
    4. 'x' → logprob: -15.500017166137695
    5. ' [' → logprob: -15.875017166137695
    6. '```' → logprob: -16.375017166137695
    7. '[parent' → logprob: -17.375017166137695
    8. '(x' → logprob: -18.000017166137695
    9. '	x' → logprob: -18.250017166137695
    10. ' ' → logprob: -18.625017166137695

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05981122702360153
    2. '=' → logprob: -3.3098111152648926
    3. ')' → logprob: -3.9348111152648926
    4. ' =' → logprob: -6.309811115264893
    5. ']=' → logprob: -8.80981159210205
    6. ')=' → logprob: -11.93481159210205
    7. ' ]' → logprob: -12.05981159210205
    8. ' ' → logprob: -13.68481159210205
    9. '[' → logprob: -13.80981159210205
    10. '   ' → logprob: -13.93481159210205

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. '＝' → logprob: -13.563263893127441
    4. '[' → logprob: -15.313263893127441
    5. '=find' → logprob: -15.313263893127441
    6. '=sys' → logprob: -16.188264846801758
    7. ']' → logprob: -16.188264846801758
    8. ')' → logprob: -16.563264846801758
    9. ']=' → logprob: -17.563264846801758
    10. ' ' → logprob: -17.688264846801758

Token 32: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.16022443771362305
    2. ' find' → logprob: -1.910224437713623
    3. '	find' → logprob: -15.785224914550781
    4. '(find' → logprob: -16.78522491455078
    5. '=find' → logprob: -17.66022491455078
    6. '   ' → logprob: -17.78522491455078
    7. ' ' → logprob: -18.28522491455078
    8. ')find' → logprob: -19.78522491455078
    9. ' ' → logprob: -20.03522491455078
    10. 'f' → logprob: -21.03522491455078

Token 33: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0028710884507745504
    2. '(' → logprob: -5.877871036529541
    3. 'parent' → logprob: -9.7528715133667
    4. '(paren' → logprob: -12.3778715133667
    5. ' parent' → logprob: -13.3778715133667
    6. '(
' → logprob: -14.1278715133667
    7. ',parent' → logprob: -14.2528715133667
    8. '[parent' → logprob: -15.2528715133667
    9. '	parent' → logprob: -15.8778715133667
    10. '```' → logprob: -16.127870559692383

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08469150960445404
    2. '[parent' → logprob: -2.7096915245056152
    3. ',parent' → logprob: -4.334691524505615
    4. '(parent' → logprob: -7.209691524505615
    5. '[' → logprob: -8.209691047668457
    6. ' ,' → logprob: -8.584691047668457
    7. 'parent' → logprob: -9.209691047668457
    8. '[x' → logprob: -9.459691047668457
    9. '```' → logprob: -9.709691047668457
    10. ',x' → logprob: -10.209691047668457

Token 35: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004082078114151955
    2. ' parent' → logprob: -5.504082202911377
    3. '(parent' → logprob: -12.629081726074219
    4. '[parent' → logprob: -16.25408172607422
    5. ',parent' → logprob: -16.50408172607422
    6. ')' → logprob: -16.50408172607422
    7. '   ' → logprob: -16.62908172607422
    8. '	parent' → logprob: -16.62908172607422
    9. '_parent' → logprob: -17.75408172607422
    10. '.parent' → logprob: -17.87908172607422

Token 36: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.6405310816480778e-05
    2. 'x' → logprob: -11.750016212463379
    3. '[' → logprob: -12.000016212463379
    4. '[parent' → logprob: -13.125016212463379
    5. '[
' → logprob: -15.875016212463379
    6. '```' → logprob: -16.375017166137695
    7. ')x' → logprob: -16.875017166137695
    8. ' x' → logprob: -17.125017166137695
    9. '(x' → logprob: -17.625017166137695
    10. ' [' → logprob: -17.750017166137695

Token 37: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ')
' → logprob: -11.000028610229492
    3. '))' → logprob: -12.000028610229492
    4. ' )' → logprob: -12.500028610229492
    5. '])' → logprob: -14.125028610229492
    6. ')

' → logprob: -14.500028610229492
    7. ')
' → logprob: -14.875028610229492
    8. '）' → logprob: -16.625028610229492
    9. ')x' → logprob: -17.250028610229492
    10. ')`' → logprob: -17.500028610229492

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051750924438238144
    2. ')' → logprob: -3.801750898361206
    3. 'return' → logprob: -4.176751136779785
    4. '\n' → logprob: -5.551751136779785
    5. ' return' → logprob: -5.801751136779785
    6. '    
' → logprob: -6.176751136779785
    7. ')
' → logprob: -6.426751136779785
    8. '
' → logprob: -7.301751136779785
    9. '       ' → logprob: -8.176751136779785
    10. '  
' → logprob: -8.551751136779785

Token 39: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07321924716234207
    2. '   ' → logprob: -2.8232192993164062
    3. ' return' → logprob: -4.573219299316406
    4. ')' → logprob: -7.448219299316406
    5. '	return' → logprob: -9.073219299316406
    6. '\n' → logprob: -10.323219299316406
    7. '    
' → logprob: -10.448219299316406
    8. 'parent' → logprob: -10.823219299316406
    9. ' ' → logprob: -10.948219299316406
    10. ':return' → logprob: -11.198219299316406

Token 40: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3868783116340637
    2. 'parent' → logprob: -1.136878252029419
    3. 'x' → logprob: -13.01187801361084
    4. ' x' → logprob: -13.13687801361084
    5. '(parent' → logprob: -13.13687801361084
    6. '	parent' → logprob: -14.63687801361084
    7. '[parent' → logprob: -15.38687801361084
    8. ',parent' → logprob: -16.011878967285156
    9. 'paren' → logprob: -16.136878967285156
    10. ' ' → logprob: -16.511878967285156

Token 41: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.2855416066013277e-05
    2. '[' → logprob: -11.000032424926758
    3. '[parent' → logprob: -11.250032424926758
    4. 'x' → logprob: -13.125032424926758
    5. '```' → logprob: -13.875032424926758
    6. '(x' → logprob: -16.500032424926758
    7. '[
' → logprob: -17.125032424926758
    8. 'parent' → logprob: -17.875032424926758
    9. ' [' → logprob: -18.625032424926758
    10. '[root' → logprob: -18.625032424926758

Token 42: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.12500286102295
    3. ']' → logprob: -15.25000286102295
    4. '）' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.500001907348633
    6. '}' → logprob: -16.750001907348633
    7. ')}' → logprob: -18.125001907348633
    8. ')

' → logprob: -18.250001907348633
    9. ')return' → logprob: -18.875001907348633
    10. '<|end|>' → logprob: -18.875001907348633

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014856696128845215
    2. '

' → logprob: -4.639856815338135
    3. '
' → logprob: -5.639856815338135
    4. '```' → logprob: -6.514856815338135
    5. ' def' → logprob: -10.889856338500977
    6. '<|end|>' → logprob: -11.389856338500977
    7. '``' → logprob: -11.889856338500977
    8. '
' → logprob: -12.639856338500977
    9. '    
' → logprob: -13.139856338500977
    10. '\' → logprob: -13.389856338500977

Token 44: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.014425328932702541
    2. 'union' → logprob: -4.264425277709961
    3. ' unite' → logprob: -8.514425277709961
    4. '_union' → logprob: -10.014425277709961
    5. ' find' → logprob: -12.139425277709961
    6. ' merge' → logprob: -12.389425277709961
    7. 'un' → logprob: -13.014425277709961
    8. ' un' → logprob: -13.764425277709961
    9. ' unify' → logprob: -14.014425277709961
    10. ' unions' → logprob: -14.389425277709961

Token 45: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.00865404587239027
    2. '(' → logprob: -4.7586541175842285
    3. '_parent' → logprob: -10.75865364074707
    4. 'parent' → logprob: -12.00865364074707
    5. ',parent' → logprob: -12.25865364074707
    6. '(paren' → logprob: -12.75865364074707
    7. '[parent' → logprob: -13.25865364074707
    8. ' parent' → logprob: -14.25865364074707
    9. '(user' → logprob: -14.75865364074707
    10. ' (' → logprob: -14.88365364074707

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ',parent' → logprob: -11.62501049041748
    3. ' ,' → logprob: -13.75001049041748
    4. ',p' → logprob: -16.250011444091797
    5. '```' → logprob: -16.375011444091797
    6. '‌,' → logprob: -16.375011444091797
    7. ',
' → logprob: -16.500011444091797
    8. '   ' → logprob: -16.625011444091797
    9. ',u' → logprob: -16.750011444091797
    10. '`,' → logprob: -16.875011444091797

Token 47: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.16727425158023834
    2. ' rank' → logprob: -2.167274236679077
    3. 'x' → logprob: -4.042274475097656
    4. ' x' → logprob: -5.042274475097656
    5. 'size' → logprob: -5.167274475097656
    6. ' size' → logprob: -5.792274475097656
    7. 'a' → logprob: -5.917274475097656
    8. 'y' → logprob: -6.417274475097656
    9. 'b' → logprob: -7.542274475097656
    10. ' y' → logprob: -7.667274475097656

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ' ,' → logprob: -10.625042915344238
    3. ',parent' → logprob: -11.000042915344238
    4. '   ' → logprob: -13.625042915344238
    5. '‌,' → logprob: -15.750042915344238
    6. 'parent' → logprob: -16.125043869018555
    7. '):' → logprob: -16.250043869018555
    8. ')' → logprob: -16.250043869018555
    9. '```' → logprob: -16.375043869018555
    10. '`,' → logprob: -16.500043869018555

Token 49: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1645365059375763
    2. ' x' → logprob: -1.914536476135254
    3. 'a' → logprob: -5.539536476135254
    4. ' a' → logprob: -7.914536476135254
    5. 'u' → logprob: -12.914536476135254
    6. ')x' → logprob: -13.164536476135254
    7. ' ' → logprob: -13.289536476135254
    8. '	x' → logprob: -13.664536476135254
    9. '   ' → logprob: -14.164536476135254
    10. ' u' → logprob: -14.289536476135254

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. ' ,' → logprob: -9.7500581741333
    3. '‌,' → logprob: -17.000059127807617
    4. ',y' → logprob: -18.125059127807617
    5. '_,' → logprob: -18.125059127807617
    6. '):' → logprob: -18.625059127807617
    7. ',x' → logprob: -19.000059127807617
    8. ',
' → logprob: -19.375059127807617
    9. ',int' → logprob: -19.500059127807617
    10. '1' → logprob: -19.750059127807617

Token 51: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38687223196029663
    2. ' y' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.511872291564941
    4. '   ' → logprob: -14.511872291564941
    5. '	y' → logprob: -16.261871337890625
    6. '  ' → logprob: -16.511871337890625
    7. ')' → logprob: -17.011871337890625
    8. '    ' → logprob: -17.761871337890625
    9. ')y' → logprob: -17.761871337890625
    10. '```' → logprob: -18.511871337890625

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.598092684522271e-05
    2. ')' → logprob: -10.375056266784668
    3. '):
' → logprob: -10.875056266784668
    4. ' ):' → logprob: -12.500056266784668
    5. ',' → logprob: -14.000056266784668
    6. ':' → logprob: -14.125056266784668
    7. '   ' → logprob: -15.375056266784668
    8. '):
' → logprob: -15.750056266784668
    9. ')：' → logprob: -16.87505531311035
    10. '():' → logprob: -17.87505531311035

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010511236265301704
    2. ':' → logprob: -5.01051139831543
    3. '<|end|>' → logprob: -6.63551139831543
    4. '):' → logprob: -7.51051139831543
    5. ')' → logprob: -7.88551139831543
    6. ':
' → logprob: -7.88551139831543
    7. ' if' → logprob: -8.26051139831543
    8. '):
' → logprob: -8.63551139831543
    9. ',' → logprob: -8.63551139831543
    10. '       ' → logprob: -8.88551139831543

Token 54: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5541964173316956
    2. 'if' → logprob: -1.1791963577270508
    3. '   ' → logprob: -2.179196357727051
    4. 'root' → logprob: -6.429196357727051
    5. ' root' → logprob: -6.429196357727051
    6. '    ' → logprob: -7.429196357727051
    7. ' x' → logprob: -7.929196357727051
    8. '```' → logprob: -8.92919635772705
    9. 'x' (adapté à ' x') → logprob: -9.30419635772705
    10. '    
' → logprob: -9.55419635772705

Token 55: 'root' (ID: 5488)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.155648872256279
    2. '_parent' → logprob: -2.155648946762085
    3. 'root' → logprob: -3.655648946762085
    4. ' =' → logprob: -6.905648708343506
    5. '=' → logprob: -7.155648708343506
    6. 'parent' → logprob: -8.280649185180664
    7. '_' → logprob: -8.530649185180664
    8. 'Root' → logprob: -9.655649185180664
    9. '_p' → logprob: -10.655649185180664
    10. '=root' → logprob: -10.655649185180664

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055108729749917984
    2. '=' → logprob: -2.9301087856292725
    3. ' ' → logprob: -8.555109024047852
    4. ')' → logprob: -10.805109024047852
    5. ',' → logprob: -11.680109024047852
    6. ' ,' → logprob: -13.680109024047852
    7. '   ' → logprob: -13.930109024047852
    8. ' )' → logprob: -14.055109024047852
    9. ']' → logprob: -14.680109024047852
    10. ' =
' → logprob: -14.680109024047852

Token 57: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20141908526420593
    2. 'find' → logprob: -1.7014191150665283
    3. '	find' → logprob: -12.45141887664795
    4. '(find' → logprob: -13.95141887664795
    5. '=find' → logprob: -14.32641887664795
    6. ')find' → logprob: -15.32641887664795
    7. ' ' → logprob: -16.826419830322266
    8. ' ' → logprob: -16.951419830322266
    9. '.find' → logprob: -18.076419830322266
    10. '_find' → logprob: -18.076419830322266

Token 58: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0002111694193445146
    2. 'parent' → logprob: -9.375210762023926
    3. ' parent' → logprob: -9.750210762023926
    4. '(' → logprob: -9.750210762023926
    5. ',parent' → logprob: -11.750210762023926
    6. '(paren' → logprob: -14.750210762023926
    7. '[parent' → logprob: -14.750210762023926
    8. '	parent' → logprob: -14.875210762023926
    9. ')' → logprob: -15.250210762023926
    10. '```' → logprob: -15.625210762023926

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.64970643306151e-05
    2. ',parent' → logprob: -9.375086784362793
    3. ' ,' → logprob: -13.750086784362793
    4. '(parent' → logprob: -15.375086784362793
    5. 'parent' → logprob: -15.750086784362793
    6. ',x' → logprob: -16.875085830688477
    7. '   ' → logprob: -17.125085830688477
    8. ',
' → logprob: -17.500085830688477
    9. ')' → logprob: -18.250085830688477
    10. ',y' → logprob: -18.500085830688477

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2255278378725052
    2. ' x' → logprob: -1.6005278825759888
    3. 'parent' → logprob: -9.7255277633667
    4. ' parent' → logprob: -10.2255277633667
    5. '   ' → logprob: -12.1005277633667
    6. ')' → logprob: -12.2255277633667
    7. ' ' → logprob: -12.6005277633667
    8. ')x' → logprob: -13.1005277633667
    9. '	x' → logprob: -13.9755277633667
    10. '(x' → logprob: -14.3505277633667

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018172185868024826
    2. ')
' → logprob: -4.018172264099121
    3. ')
' → logprob: -11.018172264099121
    4. ')

' → logprob: -12.643172264099121
    5. ' )' → logprob: -13.268172264099121
    6. ' )
' → logprob: -15.143172264099121
    7. '   ' → logprob: -15.268172264099121
    8. ')y' → logprob: -16.018171310424805
    9. '),' → logprob: -16.393171310424805
    10. ')x' → logprob: -16.643171310424805

Token 62: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000952075351960957
    2. ' y' → logprob: -7.125952243804932
    3. '   ' → logprob: -8.875951766967773
    4. '
' → logprob: -12.500951766967773
    5. '    
' → logprob: -13.250951766967773
    6. '	y' → logprob: -14.250951766967773
    7. ',y' → logprob: -14.750951766967773
    8. ''y' → logprob: -14.750951766967773
    9. '  
' → logprob: -15.750951766967773
    10. ',' → logprob: -15.875951766967773

Token 63: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00018029935017693788
    2. ' y' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.6251802444458
    4. '	y' → logprob: -15.8751802444458
    5. '    
' → logprob: -16.375181198120117
    6. ' ' → logprob: -16.750181198120117
    7. 'yleft' → logprob: -18.375181198120117
    8. 'yl' → logprob: -19.125181198120117
    9. '    ' → logprob: -19.125181198120117
    10. '  
' → logprob: -19.250181198120117

Token 64: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.8889261304575484e-06
    2. '_root' → logprob: -13.125003814697266
    3. 'rank' → logprob: -14.375003814697266
    4. ' root' → logprob: -14.625003814697266
    5. 'r' → logprob: -15.625003814697266
    6. ')' → logprob: -15.750003814697266
    7. '[root' → logprob: -16.625003814697266
    8. 'oot' → logprob: -17.125003814697266
    9. 'roo' → logprob: -17.500003814697266
    10. 'ro' → logprob: -17.500003814697266

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07965966314077377
    2. '=' → logprob: -2.5796597003936768
    3. ')' → logprob: -7.204659461975098
    4. ')=' → logprob: -11.579659461975098
    5. ' ' → logprob: -11.954659461975098
    6. ' =
' → logprob: -12.579659461975098
    7. '   ' → logprob: -12.829659461975098
    8. ' )' → logprob: -13.329659461975098
    9. '<|end|>' → logprob: -13.829659461975098
    10. ' =)' → logprob: -14.704659461975098

Token 66: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1273266077041626
    2. ' find' → logprob: -2.127326488494873
    3. 'parent' → logprob: -8.002326965332031
    4. ' parent' → logprob: -10.502326965332031
    5. '(find' → logprob: -10.627326965332031
    6. 'y' → logprob: -12.752326965332031
    7. ' y' → logprob: -13.252326965332031
    8. ' ' → logprob: -13.627326965332031
    9. '(parent' → logprob: -13.627326965332031
    10. '	find' → logprob: -13.627326965332031

Token 67: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0007742508896626532
    2. 'parent' → logprob: -7.250774383544922
    3. '[parent' → logprob: -10.500774383544922
    4. ',parent' → logprob: -11.125774383544922
    5. ')' → logprob: -11.625774383544922
    6. ' parent' → logprob: -12.000774383544922
    7. '(root' → logprob: -12.875774383544922
    8. '(' → logprob: -13.000774383544922
    9. ' (' → logprob: -13.875774383544922
    10. '.parent' → logprob: -15.000774383544922

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003886086633428931
    2. ')' → logprob: -8.000388145446777
    3. '[y' → logprob: -11.125388145446777
    4. ' ,' → logprob: -11.375388145446777
    5. '[parent' → logprob: -12.125388145446777
    6. '[x' → logprob: -12.375388145446777
    7. ',y' → logprob: -12.625388145446777
    8. ',parent' → logprob: -12.750388145446777
    9. '```' → logprob: -12.875388145446777
    10. '   ' → logprob: -13.000388145446777

Token 69: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006952992174774408
    2. ' y' → logprob: -5.00695276260376
    3. 'parent' → logprob: -8.381953239440918
    4. ' parent' → logprob: -12.506953239440918
    5. '   ' → logprob: -13.631953239440918
    6. 'x' → logprob: -13.631953239440918
    7. ' ' → logprob: -13.756953239440918
    8. ')y' → logprob: -14.881953239440918
    9. ')' → logprob: -15.381953239440918
    10. '  ' → logprob: -15.506953239440918

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013442812487483025
    2. ')
' → logprob: -6.626344203948975
    3. ')

' → logprob: -12.001344680786133
    4. ')
' → logprob: -12.126344680786133
    5. '   ' → logprob: -12.501344680786133
    6. ' )' → logprob: -13.001344680786133
    7. '))' → logprob: -15.126344680786133
    8. ')return' → logprob: -16.501344680786133
    9. '):' → logprob: -16.626344680786133
    10. ')

' → logprob: -16.626344680786133

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03448447957634926
    2. '
' → logprob: -4.159484386444092
    3. '<|end|>' → logprob: -5.034484386444092
    4. ' if' → logprob: -5.284484386444092
    5. 'if' → logprob: -5.534484386444092
    6. '    
' → logprob: -6.784484386444092
    7. ' ' → logprob: -7.784484386444092
    8. ')' → logprob: -8.28448486328125
    9. '	if' → logprob: -8.78448486328125
    10. '  ' → logprob: -8.90948486328125

Token 72: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6266579627990723
    2. '   ' → logprob: -1.3766579627990723
    3. '<|end|>' → logprob: -2.5016579627990723
    4. ' if' → logprob: -2.7516579627990723
    5. '    
' → logprob: -4.126657962799072
    6. 'if' (adapté à ' if') → logprob: -4.376657962799072
    7. ' 
' → logprob: -4.751657962799072
    8. '    ' → logprob: -5.251657962799072
    9. ':
' → logprob: -5.626657962799072
    10. ' ' → logprob: -5.751657962799072

Token 73: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16351211071014404
    2. ' rank' → logprob: -1.913512110710144
    3. 'rank' → logprob: -5.913512229919434
    4. 'x' → logprob: -7.663512229919434
    5. ' ' → logprob: -9.538512229919434
    6. '(rank' → logprob: -11.038512229919434
    7. '	x' → logprob: -11.288512229919434
    8. ' ranks' → logprob: -12.413512229919434
    9. '_rank' → logprob: -13.163512229919434
    10. ' ' → logprob: -13.663512229919434

Token 74: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0004386558721307665
    2. 'rank' → logprob: -7.750438690185547
    3. '_root' → logprob: -11.875438690185547
    4. ' root' → logprob: -14.875438690185547
    5. '_rank' → logprob: -14.875438690185547
    6. '[root' → logprob: -16.125438690185547
    7. 'r' → logprob: -16.875438690185547
    8. 'roots' → logprob: -17.250438690185547
    9. '```' → logprob: -17.500438690185547
    10. '-root' → logprob: -17.625438690185547

Token 75: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.49798259139060974
    2. ' ==' → logprob: -1.7479826211929321
    3. '!=' → logprob: -1.9979826211929321
    4. '==' → logprob: -2.4979825019836426
    5. ' ' → logprob: -8.6229829788208
    6. '=' → logprob: -11.2479829788208
    7. ' ' → logprob: -11.6229829788208
    8. ']!=' → logprob: -11.9979829788208
    9. ']==' → logprob: -12.2479829788208
    10. '_rank' → logprob: -12.2479829788208

Token 76: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759599208831787
    2. ' y' → logprob: -0.8259599208831787
    3. '	y' → logprob: -11.075960159301758
    4. ' ' → logprob: -12.575960159301758
    5. '   ' → logprob: -14.700960159301758
    6. '  ' → logprob: -15.325960159301758
    7. 'yor' → logprob: -15.950960159301758
    8. '    ' → logprob: -16.075960159301758
    9. ''y' → logprob: -16.075960159301758
    10. '‘y' → logprob: -16.575960159301758

Token 77: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.2524021157296374e-05
    2. 'oot' → logprob: -10.000052452087402
    3. ' root' → logprob: -12.500052452087402
    4. 'out' → logprob: -13.500052452087402
    5. 'ot' → logprob: -14.375052452087402
    6. '   ' → logprob: -14.875052452087402
    7. '```' → logprob: -15.500052452087402
    8. '[root' → logprob: -15.500052452087402
    9. '(root' → logprob: -16.00005340576172
    10. 'rot' → logprob: -16.50005340576172

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002421202603727579
    2. ':
' → logprob: -6.3774213790893555
    3. ':return' → logprob: -7.2524213790893555
    4. '):' → logprob: -12.627421379089355
    5. '   ' → logprob: -12.752421379089355
    6. ' :' → logprob: -12.752421379089355
    7. '       ' → logprob: -15.502421379089355
    8. '):
' → logprob: -15.877421379089355
    9. ':**' → logprob: -16.00242042541504
    10. ' return' → logprob: -16.25242042541504

Token 79: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8413061499595642
    2. '       ' → logprob: -0.8413061499595642
    3. ':return' → logprob: -2.216306209564209
    4. '   ' → logprob: -3.966306209564209
    5. ' return' → logprob: -5.091306209564209
    6. ':
' → logprob: -6.091306209564209
    7. 'return' → logprob: -7.466306209564209
    8. '	return' → logprob: -8.46630573272705
    9. '    ' → logprob: -8.84130573272705
    10. '<|end|>' → logprob: -9.21630573272705

Token 80: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.026225289329886436
    2. 'return' (adapté à ' return') → logprob: -4.0262250900268555
    3. '   ' → logprob: -5.5262250900268555
    4. '       ' → logprob: -5.5262250900268555
    5. '    ' → logprob: -10.526225090026855
    6. ':return' → logprob: -10.526225090026855
    7. '	return' → logprob: -11.026225090026855
    8. '
' → logprob: -12.276225090026855
    9. ' ' → logprob: -13.526225090026855
    10. ' 
' → logprob: -13.651225090026855

Token 81: ' False' (ID: 7983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.047754548490047455
    2. '   ' → logprob: -3.1727545261383057
    3. '    
' → logprob: -5.672754764556885
    4. '  
' → logprob: -7.672754764556885
    5. ' 
' → logprob: -8.047754287719727
    6. '   
' → logprob: -8.297754287719727
    7. '
' → logprob: -8.672754287719727
    8. '```' → logprob: -10.172754287719727
    9. '  ' → logprob: -11.047754287719727
    10. ' None' → logprob: -12.172754287719727

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45749467611312866
    2. '
' → logprob: -1.0824947357177734
    3. '    
' → logprob: -3.5824947357177734
    4. '  
' → logprob: -8.207494735717773
    5. '   
' → logprob: -9.332494735717773
    6. '<|end|>' → logprob: -10.082494735717773
    7. '
' → logprob: -10.207494735717773
    8. '```' → logprob: -10.457494735717773
    9. '\n' → logprob: -10.582494735717773
    10. ' 
' → logprob: -10.582494735717773

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6744217276573181
    2. '
' → logprob: -0.7994217276573181
    3. '    
' → logprob: -4.049421787261963
    4. '<|end|>' → logprob: -4.049421787261963
    5. '  
' → logprob: -5.549421787261963
    6. '   
' → logprob: -7.049421787261963
    7. '  ' → logprob: -7.799421787261963
    8. '```' → logprob: -8.049421310424805
    9. ' 
' → logprob: -8.799421310424805
    10. '<|end|>' → logprob: -9.299421310424805

Token 84: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11434727162122726
    2. '<|end|>' → logprob: -2.614347219467163
    3. '   ' → logprob: -4.239347457885742
    4. ' 
' → logprob: -4.989347457885742
    5. '  
' → logprob: -5.114347457885742
    6. '    
' → logprob: -5.364347457885742
    7. '   
' → logprob: -6.739347457885742
    8. ' ' → logprob: -7.489347457885742
    9. '<|end|>' → logprob: -7.739347457885742
    10. '```' → logprob: -8.114347457885742

Token 85: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.014168326742947102
    2. 'rank' → logprob: -4.2641682624816895
    3. '(rank' → logprob: -12.264168739318848
    4. ' ranks' → logprob: -16.51416778564453
    5. '.rank' → logprob: -17.01416778564453
    6. '_rank' → logprob: -17.88916778564453
    7. ' ' → logprob: -17.88916778564453
    8. '   ' → logprob: -18.13916778564453
    9. 'Rank' → logprob: -18.38916778564453
    10. 'r' → logprob: -18.76416778564453

Token 86: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.250096321105957
    3. ' [' → logprob: -15.375096321105957
    4. 'x' → logprob: -17.125097274780273
    5. '[
' → logprob: -17.875097274780273
    6. '[root' → logprob: -18.375097274780273
    7. '[y' → logprob: -18.500097274780273
    8. '[s' → logprob: -19.750097274780273
    9. '(x' → logprob: -20.125097274780273
    10. '[a' → logprob: -20.250097274780273

Token 87: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.009822909720242023
    2. '[root' → logprob: -5.134822845458984
    3. '[x' → logprob: -5.634822845458984
    4. '][' → logprob: -8.884822845458984
    5. 'x' → logprob: -9.134822845458984
    6. ']' → logprob: -9.759822845458984
    7. 'rank' → logprob: -12.759822845458984
    8. '[' → logprob: -12.884822845458984
    9. '_root' → logprob: -13.384822845458984
    10. ' root' → logprob: -14.134822845458984

Token 88: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9318945407867432
    2. ' <' → logprob: -1.0568945407867432
    3. ']' → logprob: -1.4318945407867432
    4. ']<' → logprob: -4.056894302368164
    5. '>' → logprob: -6.556894302368164
    6. '[' → logprob: -7.556894302368164
    7. '<x' → logprob: -8.806894302368164
    8. ' ' → logprob: -9.556894302368164
    9. ' ]' → logprob: -9.931894302368164
    10. '}' → logprob: -9.931894302368164

Token 89: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.313292533159256
    2. '<' → logprob: -1.3132925033569336
    3. '<x' → logprob: -11.438292503356934
    4. '>' → logprob: -12.188292503356934
    5. '[' → logprob: -12.313292503356934
    6. '<size' → logprob: -13.188292503356934
    7. '<int' → logprob: -13.438292503356934
    8. '<class' → logprob: -13.563292503356934
    9. ' >' → logprob: -14.063292503356934
    10. ' ' → logprob: -14.438292503356934

Token 90: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.6931743621826172
    2. 'rank' → logprob: -0.6931743621826172
    3. '(rank' → logprob: -10.693174362182617
    4. ' ' → logprob: -13.193174362182617
    5. '.rank' → logprob: -13.318174362182617
    6. '<|end|>' → logprob: -15.693174362182617
    7. '_rank' → logprob: -15.693174362182617
    8. '
' → logprob: -15.818174362182617
    9. '   ' → logprob: -16.068174362182617
    10. 'r' → logprob: -16.443174362182617

Token 91: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.003389568068087101
    2. '[y' → logprob: -5.753389358520508
    3. '[' → logprob: -8.503389358520508
    4. 'x' → logprob: -11.753389358520508
    5. '][' → logprob: -15.253389358520508
    6. ' [' → logprob: -15.753389358520508
    7. '```' → logprob: -15.753389358520508
    8. 'y' → logprob: -16.003389358520508
    9. '[root' → logprob: -16.003389358520508
    10. ' x' → logprob: -16.128389358520508

Token 92: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.9361264946837764e-07
    2. '[root' → logprob: -15.75
    3. '_root' → logprob: -17.125
    4. ' root' → logprob: -17.625
    5. 'roo' → logprob: -17.75
    6. ']' → logprob: -18.0
    7. 'x' → logprob: -18.875
    8. 'ro' → logprob: -19.0
    9. 'out' → logprob: -19.25
    10. '	root' → logprob: -19.375

Token 93: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.516743004322052
    2. ':' → logprob: -1.1417429447174072
    3. ']:' → logprob: -2.6417429447174072
    4. '):
' → logprob: -4.766743183135986
    5. '}:' → logprob: -6.641743183135986
    6. '>:' → logprob: -7.016743183135986
    7. '   ' → logprob: -7.141743183135986
    8. ':
' → logprob: -7.266743183135986
    9. '       ' → logprob: -7.891743183135986
    10. ']:
' → logprob: -8.766742706298828

Token 94: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6462435126304626
    2. '       ' → logprob: -1.5212435722351074
    3. ':' → logprob: -1.6462435722351074
    4. ' parent' → logprob: -4.271243572235107
    5. '[parent' → logprob: -4.521243572235107
    6. '<|end|>' → logprob: -4.771243572235107
    7. ')' → logprob: -4.896243572235107
    8. '(parent' → logprob: -5.646243572235107
    9. '[' → logprob: -5.771243572235107
    10. '	parent' → logprob: -6.146243572235107

Token 95: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.1273675262928009
    2. 'parent' (adapté à ' parent') → logprob: -2.1273674964904785
    3. '	parent' → logprob: -8.752367973327637
    4. ',parent' → logprob: -9.252367973327637
    5. '(parent' → logprob: -9.377367973327637
    6. '[parent' → logprob: -10.252367973327637
    7. '_parent' → logprob: -10.627367973327637
    8. '.parent' → logprob: -10.752367973327637
    9. '   ' → logprob: -11.752367973327637
    10. '       ' → logprob: -12.252367973327637

Token 96: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0002622894535306841
    2. '[' → logprob: -8.250262260437012
    3. '[y' → logprob: -13.875262260437012
    4. 'x' → logprob: -18.250263214111328
    5. ' [' → logprob: -18.500263214111328
    6. '```' → logprob: -18.750263214111328
    7. '[root' → logprob: -19.625263214111328
    8. '[u' → logprob: -20.000263214111328
    9. '[s' → logprob: -20.375263214111328
    10. '\[' → logprob: -20.500263214111328

Token 97: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -2.2603901015827432e-05
    2. '[root' → logprob: -11.375022888183594
    3. '[x' → logprob: -12.375022888183594
    4. 'x' → logprob: -12.750022888183594
    5. ']' → logprob: -13.000022888183594
    6. '_root' → logprob: -14.375022888183594
    7. ' root' → logprob: -14.875022888183594
    8. '][' → logprob: -15.125022888183594
    9. '```' → logprob: -15.375022888183594
    10. '[' → logprob: -16.125022888183594

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018422940047457814
    2. ']=' → logprob: -9.375184059143066
    3. ' ]' → logprob: -9.375184059143066
    4. ' =' → logprob: -11.625184059143066
    5. '=' → logprob: -12.625184059143066
    6. ')' → logprob: -13.625184059143066
    7. '[' → logprob: -13.875184059143066
    8. '[x' → logprob: -16.250185012817383
    9. ' ' → logprob: -17.375185012817383
    10. '[y' → logprob: -17.750185012817383

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196993216872215
    2. '=' → logprob: -2.8119699954986572
    3. ' ' → logprob: -14.561969757080078
    4. '[' → logprob: -14.561969757080078
    5. '=y' → logprob: -14.811969757080078
    6. '=x' → logprob: -15.686969757080078
    7. ']' → logprob: -15.936969757080078
    8. ')' → logprob: -15.936969757080078
    9. ' =
' → logprob: -16.061969757080078
    10. '=s' → logprob: -16.311969757080078

Token 100: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1269282102584839
    2. 'y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -16.251928329467773
    4. ' ' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.626928329467773
    6. ''y' → logprob: -17.876928329467773
    7. '(y' → logprob: -18.751928329467773
    8. '[y' → logprob: -18.876928329467773
    9. 'space' → logprob: -19.626928329467773
    10. 'yb' → logprob: -20.001928329467773

Token 101: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.128163257315464e-07
    2. 'ro' → logprob: -15.5
    3. ' root' → logprob: -17.625
    4. 'roo' → logprob: -18.125
    5. '_root' → logprob: -19.5
    6. '[root' → logprob: -19.625
    7. 'roat' → logprob: -20.375
    8. 'rod' → logprob: -20.375
    9. 'rot' → logprob: -20.875
    10. 'r' → logprob: -21.375

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2982048988342285
    2. '
' → logprob: -2.1732048988342285
    3. 'else' → logprob: -2.1732048988342285
    4. ' else' → logprob: -3.6732048988342285
    5. '<|end|>' → logprob: -6.0482048988342285
    6. 'elif' → logprob: -6.7982048988342285
    7. '    
' → logprob: -7.1732048988342285
    8. '	else' → logprob: -8.42320442199707
    9. '```' → logprob: -9.42320442199707
    10. ' elif' → logprob: -9.92320442199707

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07917959243059158
    2. 'else' → logprob: -3.079179525375366
    3. '
' → logprob: -3.954179525375366
    4. '    
' → logprob: -4.954179763793945
    5. ' else' → logprob: -5.829179763793945
    6. '  
' → logprob: -8.079179763793945
    7. '```' → logprob: -8.329179763793945
    8. '\n' → logprob: -9.204179763793945
    9. 'elif' → logprob: -9.454179763793945
    10. '   
' → logprob: -9.704179763793945

Token 104: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03821878135204315
    2. ' else' → logprob: -3.5382187366485596
    3. '   ' → logprob: -4.788218975067139
    4. 'elif' → logprob: -9.41321849822998
    5. '	else' → logprob: -10.91321849822998
    6. '
' → logprob: -12.78821849822998
    7. ' elif' → logprob: -14.41321849822998
    8. '<|end|>' → logprob: -15.03821849822998
    9. '_else' → logprob: -15.03821849822998
    10. '    
' → logprob: -15.16321849822998

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14354205131530762
    2. ':
' → logprob: -2.0185420513153076
    3. '   ' → logprob: -7.643542289733887
    4. '       ' → logprob: -8.643542289733887
    5. '{' → logprob: -9.143542289733887
    6. ':
' → logprob: -10.518542289733887
    7. '{
' → logprob: -11.143542289733887
    8. '```' → logprob: -11.643542289733887
    9. ':

' → logprob: -11.768542289733887
    10. ' if' → logprob: -11.768542289733887

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004765222780406475
    2. '   ' → logprob: -6.629765033721924
    3. ':
' → logprob: -6.879765033721924
    4. '{
' → logprob: -7.629765033721924
    5. ':' → logprob: -8.004765510559082
    6. ' parent' → logprob: -8.129765510559082
    7. '{' → logprob: -8.129765510559082
    8. '```' → logprob: -8.129765510559082
    9. 'parent' → logprob: -8.629765510559082
    10. '[parent' → logprob: -8.879765510559082

Token 107: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.029434893280267715
    2. ' parent' → logprob: -3.6544349193573
    3. '       ' → logprob: -6.029434680938721
    4. '[parent' → logprob: -8.529435157775879
    5. '	parent' → logprob: -8.779435157775879
    6. '           ' → logprob: -8.779435157775879
    7. '(parent' → logprob: -9.529435157775879
    8. ',parent' → logprob: -9.654435157775879
    9. '.parent' → logprob: -10.279435157775879
    10. '   ' → logprob: -11.154435157775879

Token 108: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.03813685104250908
    2. '[y' → logprob: -3.2881369590759277
    3. '[' → logprob: -9.28813648223877
    4. '[root' → logprob: -13.66313648223877
    5. '[parent' → logprob: -13.78813648223877
    6. '```' → logprob: -15.28813648223877
    7. '   ' → logprob: -16.038137435913086
    8. '[
' → logprob: -16.663137435913086
    9. '[user' → logprob: -16.913137435913086
    10. 'x' → logprob: -16.913137435913086

Token 109: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -7.896309739408025e-07
    2. '[root' → logprob: -14.250000953674316
    3. 'out' → logprob: -16.0
    4. '_root' → logprob: -17.125
    5. 'x' → logprob: -17.5
    6. ' root' → logprob: -18.875
    7. 'rod' → logprob: -19.125
    8. 'Root' → logprob: -19.5
    9. '	root' → logprob: -19.625
    10. 'roo' → logprob: -19.75

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37398236989974976
    2. '=' → logprob: -1.4989824295043945
    3. ' =' → logprob: -2.6239824295043945
    4. ')' → logprob: -4.8739824295043945
    5. ']=' → logprob: -4.8739824295043945
    6. ' ]' → logprob: -7.2489824295043945
    7. ')=' → logprob: -9.623982429504395
    8. '   ' → logprob: -10.498982429504395
    9. ' )' → logprob: -10.998982429504395
    10. ' ' → logprob: -11.498982429504395

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326475739479065
    2. ' =' → logprob: -1.3132647275924683
    3. '=x' → logprob: -13.563264846801758
    4. '=s' → logprob: -14.063264846801758
    5. '=user' → logprob: -15.313264846801758
    6. '＝' → logprob: -15.563264846801758
    7. '=y' → logprob: -15.813264846801758
    8. '=root' → logprob: -16.063264846801758
    9. ')' → logprob: -17.063264846801758
    10. '=head' → logprob: -17.188264846801758

Token 112: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692831456661224
    2. ' x' → logprob: -2.1269283294677734
    3. '	x' → logprob: -15.876928329467773
    4. ' ' → logprob: -18.626928329467773
    5. '(x' → logprob: -18.751928329467773
    6. '[x' → logprob: -18.876928329467773
    7. 'xref' → logprob: -18.876928329467773
    8. '<|end|>' → logprob: -19.251928329467773
    9. ')x' → logprob: -19.501928329467773
    10. '$x' → logprob: -19.626928329467773

Token 113: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.9361264946837764e-07
    2. ' root' → logprob: -16.0
    3. 'x' → logprob: -17.25
    4. 'ro' → logprob: -18.625
    5. '_root' → logprob: -18.875
    6. 'roo' → logprob: -19.0
    7. '```' → logprob: -19.625
    8. '[root' → logprob: -19.625
    9. 'r' → logprob: -19.75
    10. '	root' → logprob: -20.625

Token 114: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27586498856544495
    2. '   ' → logprob: -2.400865077972412
    3. '
' → logprob: -2.525865077972412
    4. '<|end|>' → logprob: -3.025865077972412
    5. '```' → logprob: -4.275865077972412
    6. '        
' → logprob: -6.025865077972412
    7. '  
' → logprob: -6.275865077972412
    8. '    
' → logprob: -6.650865077972412
    9. ' if' → logprob: -7.900865077972412
    10. '<|end|>' → logprob: -8.400864601135254

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4319476783275604
    2. '       ' → logprob: -1.1819477081298828
    3. '```' → logprob: -3.931947708129883
    4. '<|end|>' → logprob: -4.056947708129883
    5. ' if' → logprob: -6.181947708129883
    6. '
' → logprob: -6.806947708129883
    7. '    
' → logprob: -7.056947708129883
    8. '  
' → logprob: -7.431947708129883
    9. '        
' → logprob: -7.431947708129883
    10. 'if' → logprob: -7.556947708129883

Token 116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00018804390856530517
    2. '       ' → logprob: -9.125187873840332
    3. '   ' → logprob: -10.000187873840332
    4. ' if' → logprob: -10.375187873840332
    5. '```' → logprob: -13.500187873840332
    6. '           ' → logprob: -14.875187873840332
    7. '	if' → logprob: -15.250187873840332
    8. '        
' → logprob: -15.750187873840332
    9. '    ' → logprob: -15.875187873840332
    10. 'If' → logprob: -16.00018882751465

Token 117: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.03804917633533478
    2. ' rank' → logprob: -3.2880492210388184
    3. '(rank' → logprob: -11.78804874420166
    4. 'ank' → logprob: -17.163049697875977
    5. '_rank' → logprob: -17.288049697875977
    6. '.rank' → logprob: -17.788049697875977
    7. 'Rank' → logprob: -18.663049697875977
    8. '
' → logprob: -19.788049697875977
    9. '   ' → logprob: -20.788049697875977
    10. 'r' → logprob: -20.913049697875977

Token 118: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.37500286102295
    3. 'x' → logprob: -13.62500286102295
    4. '[root' → logprob: -17.625001907348633
    5. '[s' → logprob: -19.375001907348633
    6. '[y' → logprob: -19.875001907348633
    7. '[parent' → logprob: -19.875001907348633
    8. '```' → logprob: -20.375001907348633
    9. ' x' → logprob: -20.750001907348633
    10. '(x' → logprob: -20.750001907348633

Token 119: 'root' (ID: 5488)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.643152740551159e-05
    2. '[root' → logprob: -10.875036239624023
    3. 'x' → logprob: -11.125036239624023
    4. '[' → logprob: -13.375036239624023
    5. 'root' → logprob: -14.000036239624023
    6. '```' → logprob: -16.250036239624023
    7. '[
' → logprob: -16.875036239624023
    8. '[user' → logprob: -18.250036239624023
    9. '[u' → logprob: -18.500036239624023
    10. '[top' → logprob: -18.625036239624023

Token 120: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014278093352913857
    2. ' ==' → logprob: -4.264277935028076
    3. ']==' → logprob: -9.264278411865234
    4. '[' → logprob: -11.764278411865234
    5. ']' → logprob: -11.889278411865234
    6. '===' → logprob: -13.264278411865234
    7. '==
' → logprob: -13.389278411865234
    8. ')==' → logprob: -14.514278411865234
    9. '[]' → logprob: -14.639278411865234
    10. '=' → logprob: -14.639278411865234

Token 121: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00022427814838010818
    2. ' ==' → logprob: -9.000224113464355
    3. '=' → logprob: -9.750224113464355
    4. '==
' → logprob: -10.500224113464355
    5. ']==' → logprob: -11.875224113464355
    6. '===' → logprob: -12.000224113464355
    7. '[' → logprob: -13.625224113464355
    8. '()==' → logprob: -15.375224113464355
    9. '```' → logprob: -15.875224113464355
    10. ')==' → logprob: -16.375225067138672

Token 122: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.10021939873695374
    2. ' rank' → logprob: -2.350219488143921
    3. '(rank' → logprob: -11.3502197265625
    4. ' ' → logprob: -14.7252197265625
    5. '.rank' → logprob: -14.9752197265625
    6. '_rank' → logprob: -15.8502197265625
    7. '   ' → logprob: -17.2252197265625
    8. '
' → logprob: -17.8502197265625
    9. 'rang' → logprob: -18.1002197265625
    10. 'Rank' → logprob: -18.1002197265625

Token 123: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.16077858209609985
    2. '[y' → logprob: -1.910778522491455
    3. '[' → logprob: -7.535778522491455
    4. 'x' → logprob: -10.910778999328613
    5. 'y' → logprob: -14.410778999328613
    6. '[root' → logprob: -14.535778999328613
    7. '```' → logprob: -14.910778999328613
    8. '[
' → logprob: -14.910778999328613
    9. ' [' → logprob: -15.035778999328613
    10. '   ' → logprob: -16.910778045654297

Token 124: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.2855416066013277e-05
    2. '[root' → logprob: -10.625032424926758
    3. 'x' → logprob: -12.000032424926758
    4. '[x' → logprob: -13.875032424926758
    5. '_root' → logprob: -14.625032424926758
    6. '```' → logprob: -14.750032424926758
    7. ' root' → logprob: -15.125032424926758
    8. ']' → logprob: -16.500032424926758
    9. 'out' → logprob: -17.000032424926758
    10. 'Root' → logprob: -17.000032424926758

Token 125: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3875051736831665
    2. ':
' → logprob: -1.1375051736831665
    3. '):
' → logprob: -7.762505054473877
    4. '):' → logprob: -9.637505531311035
    5. ']:' → logprob: -10.262505531311035
    6. '<|end|>' → logprob: -10.262505531311035
    7. ']:
' → logprob: -10.637505531311035
    8. '():
' → logprob: -11.137505531311035
    9. ' :
' → logprob: -11.762505531311035
    10. '```' → logprob: -12.512505531311035

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010837108828127384
    2. ' rank' → logprob: -4.760837078094482
    3. 'rank' → logprob: -6.135837078094482
    4. '       ' → logprob: -11.13583755493164
    5. '(rank' → logprob: -11.13583755493164
    6. '   ' → logprob: -11.38583755493164
    7. '
' → logprob: -12.38583755493164
    8. '_rank' → logprob: -12.63583755493164
    9. '.rank' → logprob: -13.01083755493164
    10. '```' → logprob: -13.26083755493164

Token 127: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.4740819036960602
    2. ' rank' → logprob: -0.9740818738937378
    3. '(rank' → logprob: -12.849081993103027
    4. '   ' → logprob: -13.349081993103027
    5. '           ' → logprob: -14.724081993103027
    6. '.rank' → logprob: -15.849081993103027
    7. '_rank' → logprob: -16.72408103942871
    8. '       ' → logprob: -16.97408103942871
    9. '
' → logprob: -17.47408103942871
    10. '               ' → logprob: -17.84908103942871

Token 128: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. 'x' → logprob: -18.0
    4. '```' → logprob: -20.75
    5. '[root' → logprob: -21.125
    6. ' [' → logprob: -21.5
    7. ' x' → logprob: -21.5
    8. '(x' → logprob: -21.625
    9. '[
' → logprob: -22.125
    10. '	x' → logprob: -23.375

Token 129: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -8.280175097752362e-05
    2. '[root' → logprob: -9.500082969665527
    3. '[x' → logprob: -12.375082969665527
    4. '_root' → logprob: -13.500082969665527
    5. ' root' → logprob: -13.875082969665527
    6. 'x' → logprob: -14.000082969665527
    7. 'out' → logprob: -15.750082969665527
    8. '```' → logprob: -16.50008201599121
    9. '	root' → logprob: -16.75008201599121
    10. 'Root' → logprob: -17.00008201599121

Token 130: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4994131326675415
    2. ' +=' → logprob: -1.4994131326675415
    3. ']+=' → logprob: -1.8744131326675415
    4. ']' → logprob: -4.124413013458252
    5. '[' → logprob: -8.49941349029541
    6. ' ]' → logprob: -11.12441349029541
    7. '```' → logprob: -12.12441349029541
    8. '+' → logprob: -12.49941349029541
    9. '   ' → logprob: -12.62441349029541
    10. '}' → logprob: -14.24941349029541

Token 131: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006134976167231798
    2. ' +=' → logprob: -5.131134986877441
    3. ']+=' → logprob: -8.506134986877441
    4. '[' → logprob: -13.006134986877441
    5. '+' → logprob: -13.631134986877441
    6. '+='' → logprob: -15.506134986877441
    7. '<|end|>' → logprob: -15.756134986877441
    8. '+="' → logprob: -15.756134986877441
    9. '   ' → logprob: -16.881134033203125
    10. '```' → logprob: -17.381134033203125

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. '
' → logprob: -18.375051498413086
    5. '```' → logprob: -19.250051498413086
    6. '  ' → logprob: -19.750051498413086
    7. '１' → logprob: -20.750051498413086
    8. ' ' → logprob: -20.875051498413086
    9. '[' → logprob: -21.000051498413086
    10. '<|end|>' → logprob: -21.250051498413086

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -19.375001907348633
    5. '
' → logprob: -20.000001907348633
    6. '１' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.625001907348633
    8. '  ' → logprob: -20.937501907348633
    9. '`' → logprob: -21.437501907348633
    10. '

' → logprob: -21.562501907348633

Token 134: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3860751688480377
    2. '<|end|>' → logprob: -1.5110751390457153
    3. '\n' → logprob: -2.886075258255005
    4. '   ' → logprob: -3.761075258255005
    5. 'newline' → logprob: -5.011075019836426
    6. 'return' → logprob: -6.011075019836426
    7. '    
' → logprob: -6.136075019836426
    8. '```' → logprob: -6.136075019836426
    9. ' return' → logprob: -6.386075019836426
    10. ' 
' → logprob: -6.511075019836426

Token 135: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3915958106517792
    2. 'return' (adapté à ' return') → logprob: -1.3915958404541016
    3. ' return' → logprob: -2.6415958404541016
    4. '
' → logprob: -6.141595840454102
    5. 'True' → logprob: -6.766595840454102
    6. ' True' → logprob: -7.391595840454102
    7. '	return' → logprob: -9.516595840454102
    8. '       ' → logprob: -10.016595840454102
    9. 'true' → logprob: -10.766595840454102
    10. '    
' → logprob: -11.141595840454102

Token 137: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -18.876502990722656
    4. 'None' → logprob: -20.626502990722656
    5. '=True' → logprob: -21.751502990722656
    6. 'False' → logprob: -22.001502990722656
    7. 'Tr' → logprob: -22.126502990722656
    8. 'true' → logprob: -22.376502990722656
    9. 'TRUE' → logprob: -23.251502990722656
    10. ' ' → logprob: -23.626502990722656

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14273127913475037
    2. '<|end|>' → logprob: -2.892731189727783
    3. 'def' → logprob: -3.142731189727783
    4. '

' → logprob: -3.392731189727783
    5. '```' → logprob: -7.767731189727783
    6. '
' → logprob: -9.267731666564941
    7. '  
' → logprob: -9.267731666564941
    8. '#' → logprob: -10.267731666564941
    9. '<|end|>' → logprob: -10.392731666564941
    10. 'n' → logprob: -10.642731666564941

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008473208174109459
    2. 'n' → logprob: -5.1334733963012695
    3. 'N' → logprob: -6.0084733963012695
    4. 'class' → logprob: -9.88347339630127
    5. 'from' → logprob: -11.75847339630127
    6. '#' → logprob: -12.00847339630127
    7. '```' → logprob: -12.25847339630127
    8. 'import' → logprob: -12.38347339630127
    9. 'ndef' → logprob: -13.13347339630127
    10. '(n' → logprob: -13.38347339630127

Token 140: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25930845737457275
    2. ' kr' → logprob: -1.5093084573745728
    3. 'kr' → logprob: -5.509308338165283
    4. ' solve' → logprob: -6.634308338165283
    5. 'main' → logprob: -6.759308338165283
    6. ' minimum' → logprob: -8.509308815002441
    7. ' connected' → logprob: -8.759308815002441
    8. ' count' → logprob: -9.009308815002441
    9. ' mst' → logprob: -9.009308815002441
    10. '
' → logprob: -10.259308815002441

Token 141: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.500086784362793
    3. ' ():' → logprob: -12.250086784362793
    4. '()' → logprob: -12.375086784362793
    5. ':' → logprob: -13.875086784362793
    6. '():
' → logprob: -14.125086784362793
    7. '(:' → logprob: -14.375086784362793
    8. '(":' → logprob: -15.375086784362793
    9. '):' → logprob: -18.000085830688477
    10. '()>' → logprob: -18.500085830688477

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45024168491363525
    2. ' n' → logprob: -1.0752416849136353
    3. 'n' → logprob: -3.9502415657043457
    4. '    ' → logprob: -7.325241565704346
    5. ' input' → logprob: -7.325241565704346
    6. ' import' → logprob: -7.700241565704346
    7. '	n' → logprob: -9.700242042541504
    8. ' ' → logprob: -9.825242042541504
    9. 'import' → logprob: -10.200242042541504
    10. ' N' → logprob: -10.200242042541504

Token 143: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31514793634414673
    2. 'n' → logprob: -1.315147876739502
    3. ' input' → logprob: -6.565147876739502
    4. ' N' → logprob: -8.56514835357666
    5. 'input' (adapté à ' input') → logprob: -8.81514835357666
    6. 'N' → logprob: -10.19014835357666
    7. '   ' → logprob: -10.19014835357666
    8. ' import' → logprob: -10.31514835357666
    9. 'import' → logprob: -11.06514835357666
    10. ' ' → logprob: -12.19014835357666

Token 144: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013471721671521664
    2. '_data' → logprob: -4.513471603393555
    3. '_line' → logprob: -6.513471603393555
    4. '().' → logprob: -8.263471603393555
    5. '_' → logprob: -8.888471603393555
    6. ' =' → logprob: -9.263471603393555
    7. '(' → logprob: -9.388471603393555
    8. '_str' → logprob: -9.388471603393555
    9. '_lines' → logprob: -9.388471603393555
    10. 'data' → logprob: -10.138471603393555

Token 145: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47462061047554016
    2. 'sys' → logprob: -0.9746205806732178
    3. 'input' → logprob: -7.849620819091797
    4. ' input' → logprob: -8.974620819091797
    5. '=sys' → logprob: -11.224620819091797
    6. '	sys' → logprob: -11.974620819091797
    7. 'lambda' → logprob: -13.349620819091797
    8. '(sys' → logprob: -13.349620819091797
    9. 'raw' → logprob: -13.474620819091797
    10. 'stdin' → logprob: -14.349620819091797

Token 146: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16059038043022156
    2. '.' → logprob: -1.910590410232544
    3. '.readline' → logprob: -8.410590171813965
    4. '.stdout' → logprob: -9.785590171813965
    5. '.argv' → logprob: -9.910590171813965
    6. '.std' → logprob: -10.660590171813965
    7. '.​' → logprob: -12.660590171813965
    8. '.input' → logprob: -12.785590171813965
    9. ' .' → logprob: -13.660590171813965
    10. 'stdin' → logprob: -13.910590171813965

Token 147: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025647184811532497
    2. '.read' → logprob: -6.252564907073975
    3. '.' → logprob: -7.377564907073975
    4. 'read' → logprob: -11.877564430236816
    5. '.readlines' → logprob: -12.877564430236816
    6. ' readline' → logprob: -14.502564430236816
    7. '.buffer' → logprob: -14.877564430236816
    8. '.Read' → logprob: -15.252564430236816
    9. '.stdin' → logprob: -16.377565383911133
    10. '_read' → logprob: -16.877565383911133

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0873991996049881
    2. '()' → logprob: -2.8373992443084717
    3. '
' → logprob: -5.212399005889893
    4. '    
' → logprob: -5.462399005889893
    5. '(n' → logprob: -5.587399005889893
    6. '()
' → logprob: -5.962399005889893
    7. '  ' → logprob: -6.087399005889893
    8. '().' → logprob: -6.337399005889893
    9. ' ' → logprob: -6.712399005889893
    10. '(' → logprob: -6.962399005889893

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011748610995709896
    2. 'n' → logprob: -4.511748790740967
    3. ' n' → logprob: -8.011748313903809
    4. '    
' → logprob: -8.761748313903809
    5. '    ' → logprob: -9.261748313903809
    6. '  ' → logprob: -10.636748313903809
    7. 'N' → logprob: -10.636748313903809
    8. '	n' → logprob: -11.261748313903809
    9. '(n' → logprob: -11.386748313903809
    10. '
' → logprob: -11.636748313903809

Token 150: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20740996301174164
    2. 'N' → logprob: -2.3324098587036133
    3. '   ' → logprob: -2.7074098587036133
    4. ' n' → logprob: -3.9574098587036133
    5. ' N' → logprob: -5.582409858703613
    6. 't' → logprob: -9.082409858703613
    7. 'Q' → logprob: -9.082409858703613
    8. ' ' → logprob: -9.332409858703613
    9. '    ' → logprob: -9.582409858703613
    10. '    
' → logprob: -9.707409858703613

Token 151: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.038124337792396545
    2. 'True' → logprob: -3.2881243228912354
    3. '(True' → logprob: -9.413124084472656
    4. ' ' → logprob: -14.538124084472656
    5. '1' → logprob: -14.663124084472656
    6. '=True' → logprob: -15.038124084472656
    7. ' Tru' → logprob: -17.163124084472656
    8. '  ' → logprob: -17.663124084472656
    9. ' ' → logprob: -17.788124084472656
    10. '   ' → logprob: -17.913124084472656

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08996758610010147
    2. '():' → logprob: -2.4649674892425537
    3. ',' → logprob: -7.839967727661133
    4. '(' → logprob: -7.964967727661133
    5. '):' → logprob: -9.464967727661133
    6. ':
' → logprob: -9.964967727661133
    7. ' :' → logprob: -10.214967727661133
    8. '   ' → logprob: -10.339967727661133
    9. ':**' → logprob: -10.464967727661133
    10. '():
' → logprob: -10.714967727661133

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013796406565234065
    2. '   ' → logprob: -6.876379489898682
    3. '    ' → logprob: -8.87637996673584
    4. '      ' → logprob: -10.25137996673584
    5. ' ' → logprob: -10.37637996673584
    6. '        
' → logprob: -10.75137996673584
    7. '<|end|>' → logprob: -10.75137996673584
    8. '  ' → logprob: -10.87637996673584
    9. ' try' → logprob: -10.87637996673584
    10. '     ' → logprob: -11.37637996673584

Token 154: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4258669912815094
    2. ' n' → logprob: -1.300866961479187
    3. ' line' → logprob: -3.3008670806884766
    4. 'N' → logprob: -3.8008670806884766
    5. ' N' → logprob: -5.175867080688477
    6. '   ' → logprob: -5.550867080688477
    7. 'line' → logprob: -6.800867080688477
    8. 'w' → logprob: -6.800867080688477
    9. ' w' → logprob: -7.300867080688477
    10. 's' → logprob: -7.675867080688477

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3701769709587097
    2. '=' → logprob: -1.8701770305633545
    3. ' =' → logprob: -1.8701770305633545
    4. ',m' → logprob: -7.495176792144775
    5. ',n' → logprob: -8.620177268981934
    6. ' ,' → logprob: -8.620177268981934
    7. '=int' → logprob: -9.870177268981934
    8. '=input' → logprob: -10.120177268981934
    9. ',k' → logprob: -10.745177268981934
    10. ',b' → logprob: -10.870177268981934

Token 156: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01814771629869938
    2. 'k' → logprob: -4.518147945404053
    3. 'q' → logprob: -5.768147945404053
    4. 'w' → logprob: -6.268147945404053
    5. ' m' → logprob: -6.893147945404053
    6. 'd' → logprob: -8.143147468566895
    7. 'c' → logprob: -8.643147468566895
    8. 'e' → logprob: -9.518147468566895
    9. 't' → logprob: -9.643147468566895
    10. 'r' → logprob: -9.768147468566895

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868717551231384
    2. ' =' → logprob: -1.1368718147277832
    3. '＝' → logprob: -15.386871337890625
    4. ' ' → logprob: -15.386871337890625
    5. ',' → logprob: -15.636871337890625
    6. ')' → logprob: -16.636871337890625
    7. '    ' → logprob: -18.011871337890625
    8. ' ' → logprob: -18.011871337890625
    9. '=input' → logprob: -18.011871337890625
    10. '=line' → logprob: -18.511871337890625

Token 158: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05551818013191223
    2. 'map' → logprob: -2.93051815032959
    3. ' input' → logprob: -7.93051815032959
    4. ' list' → logprob: -8.93051815032959
    5. 'input' → logprob: -9.30551815032959
    6. ' ' → logprob: -10.43051815032959
    7. 'list' → logprob: -11.80551815032959
    8. ' sys' → logprob: -12.18051815032959
    9. '	map' → logprob: -12.80551815032959
    10. ' tuple' → logprob: -13.05551815032959

Token 159: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20388923585414886
    2. '(' → logprob: -1.70388925075531
    3. '(int' → logprob: -6.3288893699646
    4. '(str' → logprob: -7.5788893699646
    5. '(list' → logprob: -8.828888893127441
    6. '(sys' → logprob: -11.203888893127441
    7. '(
' → logprob: -12.203888893127441
    8. ' (' → logprob: -12.703888893127441
    9. '(in' → logprob: -13.328888893127441
    10. 'input' → logprob: -13.578888893127441

Token 160: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014003770425915718
    2. ',input' → logprob: -4.889003753662109
    3. ',' → logprob: -5.764003753662109
    4. '(' → logprob: -5.889003753662109
    5. 'input' → logprob: -8.01400375366211
    6. ')' → logprob: -9.63900375366211
    7. '(sys' → logprob: -10.76400375366211
    8. ' (' → logprob: -11.13900375366211
    9. '=input' → logprob: -11.26400375366211
    10. ' input' → logprob: -11.63900375366211

Token 161: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975129522383213
    2. ' input' → logprob: -3.5297513008117676
    3. 'str' → logprob: -15.40475082397461
    4. 'int' → logprob: -15.52975082397461
    5. ')' → logprob: -16.02975082397461
    6. ',input' → logprob: -16.52975082397461
    7. ' ' → logprob: -17.27975082397461
    8. 'sys' → logprob: -17.40475082397461
    9. '=input' → logprob: -17.40475082397461
    10. '<input' → logprob: -17.52975082397461

Token 162: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.180879816180095e-05
    2. '()' → logprob: -9.875051498413086
    3. '()
' → logprob: -15.875051498413086
    4. ' ().' → logprob: -16.250051498413086
    5. '(' → logprob: -18.250051498413086
    6. '.readline' → logprob: -19.125051498413086
    7. '())' → logprob: -19.500051498413086
    8. '.strip' → logprob: -19.625051498413086
    9. '()[' → logprob: -19.875051498413086
    10. '()

' → logprob: -19.875051498413086

Token 163: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10157079249620438
    2. 'strip' → logprob: -2.3515708446502686
    3. 'rstrip' → logprob: -6.6015706062316895
    4. 'read' → logprob: -13.351571083068848
    5. '().' → logprob: -13.351571083068848
    6. '(split' → logprob: -13.976571083068848
    7. ')' → logprob: -14.851571083068848
    8. ' split' → logprob: -15.476571083068848
    9. '()' → logprob: -15.851571083068848
    10. ' strip' → logprob: -16.35157012939453

Token 164: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1786082684993744
    2. ')' → logprob: -1.9286082983016968
    3. '())
' → logprob: -4.678608417510986
    4. '()' → logprob: -4.803608417510986
    5. ')
' → logprob: -7.553608417510986
    6. '(' → logprob: -9.428607940673828
    7. '))' → logprob: -9.553607940673828
    8. '()
' → logprob: -10.803607940673828
    9. '()))' → logprob: -11.553607940673828
    10. '())
' → logprob: -12.178607940673828

Token 165: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.275574266910553
    2. '<|end|>' → logprob: -1.5255742073059082
    3. ' 
' → logprob: -5.275574207305908
    4. ' if' → logprob: -5.400574207305908
    5. '       ' → logprob: -5.650574207305908
    6. ' ' → logprob: -5.775574207305908
    7. '\n' → logprob: -6.150574207305908
    8. 'if' → logprob: -6.775574207305908
    9. '  
' → logprob: -7.025574207305908
    10. '   ' → logprob: -7.150574207305908

Token 166: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2784101068973541
    2. 'if' (adapté à ' if') → logprob: -1.5284100770950317
    3. '       ' → logprob: -3.6534101963043213
    4. '   ' → logprob: -8.778409957885742
    5. '	if' → logprob: -10.278409957885742
    6. ' ' → logprob: -11.403409957885742
    7. '    ' → logprob: -11.528409957885742
    8. ' 
' → logprob: -12.153409957885742
    9. '        
' → logprob: -12.403409957885742
    10. '      ' → logprob: -13.153409957885742

Token 167: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20141568779945374
    2. 'n' → logprob: -1.7014156579971313
    3. '(n' → logprob: -13.951416015625
    4. ' (' → logprob: -14.701416015625
    5. ' not' → logprob: -14.701416015625
    6. '(' → logprob: -15.076416015625
    7. '	n' → logprob: -15.076416015625
    8. ' ' → logprob: -16.576416015625
    9. 'not' → logprob: -17.326416015625
    10. ' ' → logprob: -17.826416015625

Token 168: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20147298276424408
    2. ' ==' → logprob: -1.7014729976654053
    3. '=' → logprob: -9.951473236083984
    4. '0' → logprob: -12.326473236083984
    5. ')==' → logprob: -13.326473236083984
    6. ' ' → logprob: -13.451473236083984
    7. ' =' → logprob: -13.951473236083984
    8. ')' → logprob: -14.076473236083984
    9. '==
' → logprob: -14.201473236083984
    10. '()==' → logprob: -14.451473236083984

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '０' → logprob: -16.750261306762695
    4. '۰' → logprob: -17.250261306762695
    5. 'm' → logprob: -18.125261306762695
    6. ' ' → logprob: -18.375261306762695
    7. '```' → logprob: -19.062761306762695
    8. '​' → logprob: -19.125261306762695
    9. '  ' → logprob: -20.187761306762695
    10. '   ' → logprob: -20.250261306762695

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'm' → logprob: -15.000031471252441
    4. '０' → logprob: -16.875032424926758
    5. '```' → logprob: -17.312532424926758
    6. '۰' → logprob: -17.437532424926758
    7. 'and' → logprob: -17.875032424926758
    8. ' ' → logprob: -18.250032424926758
    9. '​' → logprob: -18.875032424926758
    10. '  ' → logprob: -18.937532424926758

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193288922309875
    2. 'and' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.501933097839355
    4. '	and' → logprob: -13.751933097839355
    5. '   ' → logprob: -14.251933097839355
    6. ' or' → logprob: -14.751933097839355
    7. ' ' → logprob: -16.50193214416504
    8. '    ' → logprob: -16.75193214416504
    9. '       ' → logprob: -17.00193214416504
    10. '<|end|>' → logprob: -17.50193214416504

Token 172: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.38687169551849365
    2. 'm' → logprob: -1.1368716955184937
    3. '	m' → logprob: -14.636871337890625
    4. '   ' → logprob: -15.886871337890625
    5. ' ' → logprob: -16.386871337890625
    6. ' ' → logprob: -17.386871337890625
    7. '    ' → logprob: -18.261871337890625
    8. '  ' → logprob: -19.261871337890625
    9. '<|end|>' → logprob: -19.386871337890625
    10. '0' → logprob: -19.636871337890625

Token 173: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0791204497218132
    2. '==' → logprob: -2.579120397567749
    3. ' ' → logprob: -9.079120635986328
    4. '0' → logprob: -9.329120635986328
    5. '=' → logprob: -11.329120635986328
    6. ' =' → logprob: -11.704120635986328
    7. ')==' → logprob: -12.954120635986328
    8. ' ' → logprob: -13.579120635986328
    9. '<|end|>' → logprob: -13.954120635986328
    10. '[' → logprob: -14.204120635986328

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '<|end|>' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '   ' → logprob: -16.643150329589844
    6. '  ' → logprob: -17.143150329589844
    7. '۰' → logprob: -19.080650329589844
    8. '```' → logprob: -19.268150329589844
    9. '
' → logprob: -19.830650329589844
    10. '       ' → logprob: -20.080650329589844

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -15.625051498413086
    4. '۰' → logprob: -17.375051498413086
    5. '```' → logprob: -18.187551498413086
    6. ')' → logprob: -19.062551498413086
    7. '<|end|>' → logprob: -19.375051498413086
    8. '০' → logprob: -19.625051498413086
    9. ' ' → logprob: -19.875051498413086
    10. '０' → logprob: -19.875051498413086

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040525950491428375
    2. ':
' → logprob: -3.4155259132385254
    3. '           ' → logprob: -5.165525913238525
    4. '       ' → logprob: -6.790525913238525
    5. ':return' → logprob: -12.040526390075684
    6. ',' → logprob: -12.290526390075684
    7. '   ' → logprob: -12.415526390075684
    8. ':
' → logprob: -13.665526390075684
    9. '<|end|>' → logprob: -14.040526390075684
    10. ' :' → logprob: -14.165526390075684

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004100723657757044
    2. '       ' → logprob: -5.504100799560547
    3. '		' → logprob: -12.254100799560547
    4. '          ' → logprob: -12.254100799560547
    5. ' break' → logprob: -12.879100799560547
    6. '   ' → logprob: -12.879100799560547
    7. '	       ' → logprob: -13.129100799560547
    8. ':' → logprob: -14.129100799560547
    9. '               ' → logprob: -14.129100799560547
    10. 'break' → logprob: -14.254100799560547

Token 178: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6435843706130981
    2. 'break' (adapté à ' break') → logprob: -0.8935843706130981
    3. '           ' → logprob: -2.8935842514038086
    4. '       ' → logprob: -5.268584251403809
    5. 'return' → logprob: -5.518584251403809
    6. ' return' → logprob: -7.518584251403809
    7. '               ' → logprob: -8.643584251403809
    8. '	break' → logprob: -9.143584251403809
    9. '   ' → logprob: -10.643584251403809
    10. '
' → logprob: -11.268584251403809

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22642727196216583
    2. '
' → logprob: -2.7264273166656494
    3. '        
' → logprob: -2.9764273166656494
    4. '    
' → logprob: -3.1014273166656494
    5. '   ' → logprob: -3.4764273166656494
    6. 'parent' → logprob: -5.72642707824707
    7. ' parent' → logprob: -6.60142707824707
    8. '    ' → logprob: -6.97642707824707
    9. '	parent' → logprob: -7.47642707824707
    10. '' → logprob: -7.72642707824707

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29926106333732605
    2. '   ' → logprob: -1.6742610931396484
    3. '    
' → logprob: -4.049261093139648
    4. ' edges' → logprob: -4.299261093139648
    5. 'edges' → logprob: -4.424261093139648
    6. '        
' → logprob: -4.549261093139648
    7. '
' → logprob: -5.424261093139648
    8. 'graph' → logprob: -5.924261093139648
    9. ' graph' → logprob: -6.424261093139648
    10. 'total' → logprob: -6.549261093139648

Token 181: ' edges' (ID: 22569)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1745100021362305
    2. ' parent' → logprob: -1.2995100021362305
    3. ' edges' → logprob: -1.4245100021362305
    4. 'edges' (adapté à ' edges') → logprob: -1.9245100021362305
    5. '   ' → logprob: -4.0495100021362305
    6. '       ' → logprob: -4.6745100021362305
    7. ' parents' → logprob: -6.5495100021362305
    8. 'parents' → logprob: -6.6745100021362305
    9. 'graph' → logprob: -8.04951000213623
    10. 'total' → logprob: -8.29951000213623

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056081034243107
    2. '=' → logprob: -3.8955607414245605
    3. '=[]' → logprob: -11.520561218261719
    4. ',' → logprob: -12.520561218261719
    5. ')' → logprob: -13.395561218261719
    6. ' ' → logprob: -14.520561218261719
    7. '[]' → logprob: -14.520561218261719
    8. 's' → logprob: -15.020561218261719
    9. '<|end|>' → logprob: -15.145561218261719
    10. '_' → logprob: -15.270561218261719

Token 183: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0033068740740418434
    2. ' []' → logprob: -5.753306865692139
    3. '[' → logprob: -9.253307342529297
    4. '[]
' → logprob: -10.378307342529297
    5. '[]}' → logprob: -14.253307342529297
    6. ' [' → logprob: -14.503307342529297
    7. '[]

' → logprob: -15.003307342529297
    8. '[],' → logprob: -15.003307342529297
    9. '[]>' → logprob: -16.503307342529297
    10. ' []
' → logprob: -16.628307342529297

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012211874127388
    2. '<|end|>' → logprob: -5.262211799621582
    3. ' for' → logprob: -5.387211799621582
    4. '
' → logprob: -6.512211799621582
    5. 'for' → logprob: -7.887211799621582
    6. '   ' → logprob: -8.137211799621582
    7. '	' → logprob: -9.512211799621582
    8. ' ' → logprob: -10.262211799621582
    9. '	for' → logprob: -10.387211799621582
    10. '        
' → logprob: -11.012211799621582

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4802584946155548
    2. 'total' → logprob: -1.1052584648132324
    3. ' for' → logprob: -3.3552584648132324
    4. ' total' → logprob: -5.105258464813232
    5. 'weight' → logprob: -6.105258464813232
    6. 'cost' → logprob: -6.230258464813232
    7. 'sum' → logprob: -6.355258464813232
    8. 'max' → logprob: -7.355258464813232
    9. 'red' → logprob: -7.730258464813232
    10. 'black' → logprob: -8.23025894165039

Token 186: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019443416967988014
    2. ' _' → logprob: -6.251944541931152
    3. '_i' → logprob: -11.501944541931152
    4. ' i' → logprob: -12.126944541931152
    5. ' ' → logprob: -16.876943588256836
    6. 'i' → logprob: -16.876943588256836
    7. '_range' → logprob: -18.126943588256836
    8. ' in' → logprob: -19.251943588256836
    9. '_j' → logprob: -19.626943588256836
    10. '   ' → logprob: -19.876943588256836

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02329043485224247
    2. 'in' → logprob: -3.7732903957366943
    3. 'range' → logprob: -10.398290634155273
    4. ' ' → logprob: -11.273290634155273
    5. ' range' → logprob: -13.648290634155273
    6. '  ' → logprob: -15.148290634155273
    7. '```' → logprob: -16.523290634155273
    8. 'import' → logprob: -16.648290634155273
    9. 'm' → logprob: -16.898290634155273
    10. '	in' → logprob: -17.523290634155273

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '	range' → logprob: -15.381715774536133
    4. '(range' → logprob: -15.881715774536133
    5. 'rang' → logprob: -16.756715774536133
    6. 'r' → logprob: -16.881715774536133
    7. 'ange' → logprob: -17.881715774536133
    8. ' ' → logprob: -17.881715774536133
    9. 'ran' → logprob: -18.006715774536133
    10. '.range' → logprob: -19.381715774536133

Token 189: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00010115911572938785
    2. 'm' → logprob: -9.750101089477539
    3. ' m' → logprob: -10.625101089477539
    4. '(' → logprob: -11.000101089477539
    5. ' (' → logprob: -13.875101089477539
    6. '	m' → logprob: -14.250101089477539
    7. '   ' → logprob: -15.750101089477539
    8. ',m' → logprob: -17.00010108947754
    9. '(M' → logprob: -17.12510108947754
    10. ',' → logprob: -18.75010108947754

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20148135721683502
    2. '):
' → logprob: -1.7014813423156738
    3. '):
' → logprob: -10.451481819152832
    4. ')' → logprob: -11.201481819152832
    5. ' ):' → logprob: -11.576481819152832
    6. ':' → logprob: -11.576481819152832
    7. '   ' → logprob: -13.326481819152832
    8. ':
' → logprob: -13.576481819152832
    9. ' ):
' → logprob: -13.576481819152832
    10. '       ' → logprob: -13.951481819152832

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05284766107797623
    2. '   ' → logprob: -3.4278476238250732
    3. '       ' → logprob: -4.552847862243652
    4. '    ' → logprob: -6.052847862243652
    5. ' x' → logprob: -6.927847862243652
    6. ' ' → logprob: -7.302847862243652
    7. ' s' → logprob: -7.552847862243652
    8. ',' → logprob: -7.677847862243652
    9. ' u' → logprob: -7.677847862243652
    10. '	       ' → logprob: -7.927847862243652

Token 192: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5012667179107666
    2. 'a' (adapté à ' a') → logprob: -1.0012667179107666
    3. ' u' → logprob: -3.8762667179107666
    4. ' a' → logprob: -5.1262664794921875
    5. 'x' → logprob: -9.501266479492188
    6. 's' → logprob: -9.876266479492188
    7. '   ' → logprob: -11.126266479492188
    8. 'A' → logprob: -13.126266479492188
    9. ' s' → logprob: -13.626266479492188
    10. '           ' → logprob: -13.626266479492188

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006454797694459558
    2. ',b' → logprob: -7.875645637512207
    3. ' ,' → logprob: -8.250645637512207
    4. 'b' → logprob: -12.500645637512207
    5. ',n' → logprob: -15.625645637512207
    6. ' b' → logprob: -17.00064468383789
    7. '‌,' → logprob: -17.12564468383789
    8. '_,' → logprob: -17.37564468383789
    9. ',
' → logprob: -17.37564468383789
    10. ',int' → logprob: -17.37564468383789

Token 194: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692810595035553
    2. ' b' → logprob: -2.1269280910491943
    3. ' ' → logprob: -16.876928329467773
    4. ',b' → logprob: -18.876928329467773
    5. '	b' → logprob: -19.251928329467773
    6. ' ' → logprob: -20.751928329467773
    7. '_b' → logprob: -21.501928329467773
    8. 's' → logprob: -21.626928329467773
    9. '   ' → logprob: -21.751928329467773
    10. 't' → logprob: -21.751928329467773

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7212623953819275
    2. '=' → logprob: -0.8462623953819275
    3. ' =' → logprob: -2.4712624549865723
    4. ' ,' → logprob: -7.971262454986572
    5. ' ' → logprob: -11.971261978149414
    6. ',c' → logprob: -12.346261978149414
    7. 'c' → logprob: -13.221261978149414
    8. '<|end|>' → logprob: -13.221261978149414
    9. '    ' → logprob: -13.846261978149414
    10. ')' → logprob: -14.408761978149414

Token 196: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02850707434117794
    2. 'w' → logprob: -3.9035069942474365
    3. ' c' → logprob: -5.528507232666016
    4. 'cost' → logprob: -5.653507232666016
    5. ' w' → logprob: -8.153507232666016
    6. 'weight' → logprob: -9.278507232666016
    7. ' cost' → logprob: -10.403507232666016
    8. '   ' → logprob: -11.278507232666016
    9. 'd' → logprob: -11.653507232666016
    10. 't' → logprob: -12.278507232666016

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. ' ' → logprob: -15.386871337890625
    4. ',' → logprob: -15.886871337890625
    5. '   ' → logprob: -16.511871337890625
    6. '=line' → logprob: -17.011871337890625
    7. '    ' → logprob: -17.136871337890625
    8. ')' → logprob: -17.136871337890625
    9. '＝' → logprob: -17.261871337890625
    10. '=input' → logprob: -17.886871337890625

Token 198: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10021055489778519
    2. 'map' → logprob: -2.350210666656494
    3. '    ' → logprob: -12.725210189819336
    4. '	map' → logprob: -14.350210189819336
    5. '   ' → logprob: -15.725210189819336
    6. '           ' → logprob: -16.350210189819336
    7. ' ' → logprob: -16.850210189819336
    8. 'm' → logprob: -17.225210189819336
    9. '        ' → logprob: -17.725210189819336
    10. '            ' → logprob: -18.350210189819336

Token 199: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -12.125008583068848
    3. '(' → logprob: -13.875008583068848
    4. ',int' → logprob: -13.875008583068848
    5. '[int' → logprob: -14.750008583068848
    6. '(input' → logprob: -15.625008583068848
    7. '=int' → logprob: -15.875008583068848
    8. '<int' → logprob: -16.12500762939453
    9. '(str' → logprob: -16.87500762939453
    10. ' int' → logprob: -17.12500762939453

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16026455163955688
    2. ',input' → logprob: -1.910264492034912
    3. 'input' → logprob: -10.53526496887207
    4. '(input' → logprob: -11.66026496887207
    5. ' ,' → logprob: -13.03526496887207
    6. '(' → logprob: -13.53526496887207
    7. ',
' → logprob: -15.03526496887207
    8. ',int' → logprob: -15.41026496887207
    9. ',(' → logprob: -15.41026496887207
    10. '   ' → logprob: -15.53526496887207

Token 201: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.251930296421051
    2. ' input' → logprob: -1.5019302368164062
    3. '	input' → logprob: -15.126930236816406
    4. '_input' → logprob: -15.376930236816406
    5. ',input' → logprob: -15.751930236816406
    6. '=input' → logprob: -15.876930236816406
    7. ')' → logprob: -15.876930236816406
    8. '(input' → logprob: -16.501930236816406
    9. 'sys' → logprob: -16.876930236816406
    10. '<input' → logprob: -17.126930236816406

Token 202: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -16.125001907348633
    4. '(' → logprob: -17.500001907348633
    5. ')' → logprob: -18.625001907348633
    6. '()
' → logprob: -20.125001907348633
    7. '.' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '.split' → logprob: -20.375001907348633
    10. '	' → logprob: -21.500001907348633

Token 203: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. 'strip' → logprob: -13.750000953674316
    3. ' split' → logprob: -17.125001907348633
    4. 'rstrip' → logprob: -18.000001907348633
    5. '.split' → logprob: -18.875001907348633
    6. 'spl' → logprob: -20.250001907348633
    7. '(split' → logprob: -20.375001907348633
    8. '().' → logprob: -21.750001907348633
    9. 'read' → logprob: -23.125001907348633
    10. '```' → logprob: -23.875001907348633

Token 204: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000597116129938513
    2. ')
' → logprob: -7.50059700012207
    3. '()' → logprob: -10.62559700012207
    4. '())' → logprob: -11.12559700012207
    5. ' )' → logprob: -13.12559700012207
    6. '))' → logprob: -13.75059700012207
    7. ')`' → logprob: -14.37559700012207
    8. ')
' → logprob: -14.75059700012207
    9. '(' → logprob: -15.25059700012207
    10. '())
' → logprob: -15.87559700012207

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005999424960464239
    2. '       ' → logprob: -6.130999565124512
    3. '<|end|>' → logprob: -6.255999565124512
    4. ' edges' → logprob: -7.255999565124512
    5. ')' → logprob: -7.755999565124512
    6. ',' → logprob: -8.380999565124512
    7. 'edges' → logprob: -8.505999565124512
    8. '<|end|>' → logprob: -9.130999565124512
    9. '   ' → logprob: -9.630999565124512
    10. '               ' → logprob: -10.505999565124512

Token 206: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.5895945429801941
    2. ' edges' → logprob: -0.8395945429801941
    3. '           ' → logprob: -4.33959436416626
    4. '       ' → logprob: -8.089594841003418
    5. '   ' → logprob: -8.714594841003418
    6. '.edges' → logprob: -11.589594841003418
    7. '(edges' → logprob: -11.839594841003418
    8. '               ' → logprob: -12.464594841003418
    9. 'edge' → logprob: -12.714594841003418
    10. '          ' → logprob: -12.714594841003418

Token 207: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007188651943579316
    2. '.' → logprob: -7.25071907043457
    3. '.ap' → logprob: -12.12571907043457
    4. '.app' → logprob: -13.37571907043457
    5. ' .' → logprob: -13.50071907043457
    6. ').' → logprob: -15.37571907043457
    7. '.push' → logprob: -16.25071907043457
    8. '.Append' → logprob: -16.37571907043457
    9. 'append' → logprob: -16.62571907043457
    10. '.setdefault' → logprob: -16.75071907043457

Token 208: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00021629150433000177
    2. '(' → logprob: -8.625216484069824
    3. '(a' → logprob: -10.250216484069824
    4. ' ((' → logprob: -14.500216484069824
    5. ' (' → logprob: -14.875216484069824
    6. '   ' → logprob: -15.250216484069824
    7. '([' → logprob: -16.375215530395508
    8. '(((' → logprob: -17.875215530395508
    9. '```' → logprob: -18.250215530395508
    10. '(
' → logprob: -19.000215530395508

Token 209: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0012373719364404678
    2. ' cost' → logprob: -6.751237392425537
    3. '-cost' → logprob: -9.626236915588379
    4. '(cost' → logprob: -14.626236915588379
    5. ')' → logprob: -15.376236915588379
    6. '_cost' → logprob: -16.126237869262695
    7. '-' → logprob: -16.501237869262695
    8. '.cost' → logprob: -16.626237869262695
    9. 'Cost' → logprob: -16.751237869262695
    10. '-c' → logprob: -17.001237869262695

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010890735575230792
    2. ' ,' → logprob: -9.50010871887207
    3. ',a' → logprob: -11.12510871887207
    4. ',
' → logprob: -11.75010871887207
    5. ')' → logprob: -12.12510871887207
    6. ',)' → logprob: -13.12510871887207
    7. '<|end|>' → logprob: -13.37510871887207
    8. '   ' → logprob: -14.62510871887207
    9. ' ' → logprob: -15.75010871887207
    10. '))' → logprob: -15.75010871887207

Token 211: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00038014890742488205
    2. ' a' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.12537956237793
    4. '<|end|>' → logprob: -18.00037956237793
    5. ')a' → logprob: -18.12537956237793
    6. '	a' → logprob: -18.37537956237793
    7. '           ' → logprob: -18.62537956237793
    8. ')' → logprob: -18.62537956237793
    9. ' ' → logprob: -19.62537956237793
    10. '  ' → logprob: -20.87537956237793

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017150469357147813
    2. ' ,' → logprob: -6.501715183258057
    3. ',b' → logprob: -8.501714706420898
    4. ',
' → logprob: -12.126714706420898
    5. '<|end|>' → logprob: -12.876714706420898
    6. 'b' → logprob: -14.126714706420898
    7. ')' → logprob: -15.626714706420898
    8. '   ' → logprob: -15.876714706420898
    9. ' ' → logprob: -16.2517147064209
    10. ',\
' → logprob: -16.7517147064209

Token 213: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0076065086759626865
    2. ' b' → logprob: -4.882606506347656
    3. '   ' → logprob: -16.132606506347656
    4. '           ' → logprob: -16.632606506347656
    5. ')b' → logprob: -16.632606506347656
    6. '    ' → logprob: -16.757606506347656
    7. '<|end|>' → logprob: -16.882606506347656
    8. ' ' → logprob: -17.382606506347656
    9. '       ' → logprob: -17.757606506347656
    10. '	b' → logprob: -17.882606506347656

Token 214: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002787359117064625
    2. '))
' → logprob: -8.62527847290039
    3. ')' → logprob: -9.25027847290039
    4. ' ))' → logprob: -13.37527847290039
    5. ')))' → logprob: -14.25027847290039
    6. '       ' → logprob: -14.87527847290039
    7. '   ' → logprob: -15.62527847290039
    8. ')
' → logprob: -16.37527847290039
    9. '))

' → logprob: -16.50027847290039
    10. ',' → logprob: -17.00027847290039

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01826232671737671
    2. '
' → logprob: -5.0182623863220215
    3. ' edges' → logprob: -5.2682623863220215
    4. '   ' → logprob: -5.6432623863220215
    5. '<|end|>' → logprob: -6.6432623863220215
    6. 'edges' → logprob: -7.2682623863220215
    7. '        
' → logprob: -8.143261909484863
    8. '    
' → logprob: -8.643261909484863
    9. '  
' → logprob: -9.768261909484863
    10. ' 
' → logprob: -9.893261909484863

Token 216: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.18349018692970276
    2. 'parent' → logprob: -2.05849027633667
    3. ' edges' → logprob: -3.43349027633667
    4. 'total' → logprob: -6.18349027633667
    5. ' parent' → logprob: -6.18349027633667
    6. '       ' → logprob: -6.30849027633667
    7. '   ' → logprob: -7.05849027633667
    8. 'parents' → logprob: -7.18349027633667
    9. ' total' → logprob: -10.183489799499512
    10. '```' → logprob: -10.308489799499512

Token 217: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0003362966235727072
    2. '.' → logprob: -8.000336647033691
    3. ' .' → logprob: -14.625336647033691
    4. 'sort' → logprob: -15.375336647033691
    5. '=' → logprob: -16.000335693359375
    6. ' =' → logprob: -17.750335693359375
    7. ' sort' → logprob: -18.000335693359375
    8. '.sorted' → logprob: -18.125335693359375
    9. '.edges' → logprob: -18.250335693359375
    10. '.s' → logprob: -18.250335693359375

Token 218: '()
' (ID: 1234)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.2536884844303131
    2. '()' → logprob: -1.5036884546279907
    3. 'reverse' → logprob: -6.753688335418701
    4. '(key' → logprob: -7.878688335418701
    5. '()
' → logprob: -8.75368881225586
    6. '(' → logprob: -10.12868881225586
    7. '.reverse' → logprob: -12.00368881225586
    8. ' reverse' → logprob: -13.37868881225586
    9. '(),' → logprob: -13.37868881225586
    10. '_reverse' → logprob: -13.62868881225586

Token 219: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3474348485469818
    2. '       ' → logprob: -1.7224348783493042
    3. 'mst' → logprob: -2.4724347591400146
    4. ' total' → logprob: -4.722434997558594
    5. '   ' → logprob: -4.847434997558594
    6. 'used' → logprob: -5.472434997558594
    7. '```' → logprob: -5.972434997558594
    8. 'result' → logprob: -6.722434997558594
    9. ' mst' → logprob: -6.972434997558594
    10. 'weight' → logprob: -6.972434997558594

Token 220: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0033050968777388334
    2. 'total' → logprob: -5.753304958343506
    3. ' parent' → logprob: -9.753305435180664
    4. '   ' → logprob: -10.253305435180664
    5. 'answer' → logprob: -11.878305435180664
    6. '       ' → logprob: -12.128305435180664
    7. 'mst' → logprob: -12.253305435180664
    8. 'result' → logprob: -12.628305435180664
    9. 'cost' → logprob: -12.628305435180664
    10. '        
' → logprob: -13.128305435180664

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197597458958626
    2. ' =' → logprob: -2.8119759559631348
    3. '=[' → logprob: -11.936976432800293
    4. '＝' → logprob: -14.311976432800293
    5. ',' → logprob: -14.811976432800293
    6. '[' → logprob: -15.436976432800293
    7. ')' → logprob: -16.186975479125977
    8. '=[]' → logprob: -16.311975479125977
    9. '=list' → logprob: -16.311975479125977
    10. ' =[' → logprob: -16.561975479125977

Token 222: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.38775399327278137
    2. 'list' → logprob: -1.137753963470459
    3. ' list' → logprob: -7.637753963470459
    4. ' [' → logprob: -8.137754440307617
    5. '[' → logprob: -9.887754440307617
    6. '[i' → logprob: -10.387754440307617
    7. '[parent' → logprob: -11.762754440307617
    8. '[node' → logprob: -11.887754440307617
    9. '[List' → logprob: -12.512754440307617
    10. '[n' → logprob: -12.762754440307617

Token 223: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.935296834039036e-06
    2. ' i' → logprob: -12.75000286102295
    3. '_' → logprob: -17.750003814697266
    4. '_i' → logprob: -18.625003814697266
    5. '[i' → logprob: -19.125003814697266
    6. '(i' → logprob: -19.625003814697266
    7. '	i' → logprob: -20.250003814697266
    8. '*i' → logprob: -20.375003814697266
    9. '
' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.375003814697266

Token 224: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759427547454834
    2. 'for' → logprob: -0.8259427547454834
    3. '	for' → logprob: -13.450942993164062
    4. '
' → logprob: -14.200942993164062
    5. '   ' → logprob: -14.450942993164062
    6. ' ' → logprob: -15.200942993164062
    7. ')' → logprob: -15.825942993164062
    8. 'in' → logprob: -16.825942993164062
    9. ']' → logprob: -17.075942993164062
    10. 'or' → logprob: -17.200942993164062

Token 225: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17486567795276642
    2. ' i' → logprob: -2.04986572265625
    3. 'range' → logprob: -3.67486572265625
    4. 'i' → logprob: -5.42486572265625
    5. ' in' → logprob: -6.29986572265625
    6. 'in' → logprob: -10.17486572265625
    7. ' ' → logprob: -10.79986572265625
    8. '(range' → logprob: -11.67486572265625
    9. '(i' → logprob: -12.04986572265625
    10. '_range' → logprob: -12.79986572265625

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16049839556217194
    2. 'in' → logprob: -1.9104983806610107
    3. 'range' → logprob: -8.78549861907959
    4. ' range' → logprob: -9.16049861907959
    5. ' ' → logprob: -11.16049861907959
    6. '  ' → logprob: -14.78549861907959
    7. 'n' → logprob: -14.91049861907959
    8. '   ' → logprob: -14.91049861907959
    9. ',' → logprob: -15.16049861907959
    10. '(range' → logprob: -15.41049861907959

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -17.40475082397461
    4. '	range' → logprob: -17.65475082397461
    5. ' ' → logprob: -19.52975082397461
    6. '   ' → logprob: -20.90475082397461
    7. '
' → logprob: -21.02975082397461
    8. '  ' → logprob: -21.65475082397461
    9. '_range' → logprob: -21.90475082397461
    10. ' xrange' → logprob: -22.40475082397461

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.37501335144043
    3. 'n' → logprob: -13.62501335144043
    4. ' (' → logprob: -13.87501335144043
    5. ' n' → logprob: -18.50001335144043
    6. '((' → logprob: -19.25001335144043
    7. '(N' → logprob: -19.62501335144043
    8. '(
' → logprob: -20.12501335144043
    9. '   ' → logprob: -20.75001335144043
    10. '	n' → logprob: -21.12501335144043

Token 229: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003716854262165725
    2. ')]
' → logprob: -8.000371932983398
    3. '+' → logprob: -10.875371932983398
    4. ' )' → logprob: -11.500371932983398
    5. ')]

' → logprob: -12.625371932983398
    6. ')' → logprob: -13.000371932983398
    7. ')]
' → logprob: -14.000371932983398
    8. ']' → logprob: -15.125371932983398
    9. ' +' → logprob: -16.5003719329834
    10. '   ' → logprob: -16.6253719329834

Token 230: '       ' (ID: 309)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.3428618907928467
    2. '   ' → logprob: -1.4678618907928467
    3. ' rank' → logprob: -3.3428618907928467
    4. '       ' → logprob: -3.7178618907928467
    5. '
' → logprob: -9.092862129211426
    6. '    ' → logprob: -10.592862129211426
    7. '(rank' → logprob: -10.717862129211426
    8. ' ' → logprob: -10.842862129211426
    9. '  ' → logprob: -11.217862129211426
    10. '    
' → logprob: -11.967862129211426

Token 231: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -1.700132997939363e-05
    2. ' rank' → logprob: -11.000017166137695
    3. '(rank' → logprob: -16.250017166137695
    4. '   ' → logprob: -16.750017166137695
    5. '
' → logprob: -17.250017166137695
    6. '       ' → logprob: -17.500017166137695
    7. '```' → logprob: -18.875017166137695
    8. '.rank' → logprob: -18.875017166137695
    9. '        
' → logprob: -19.375017166137695
    10. 'ranking' → logprob: -19.500017166137695

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049113236367702
    2. '=' → logprob: -4.511049270629883
    3. ' =[' → logprob: -14.386049270629883
    4. '[' → logprob: -15.011049270629883
    5. '=[' → logprob: -15.511049270629883
    6. ' ' → logprob: -15.511049270629883
    7. '   ' → logprob: -17.136049270629883
    8. 's' → logprob: -17.261049270629883
    9. '=[]' → logprob: -17.636049270629883
    10. '[:]' → logprob: -17.636049270629883

Token 233: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061992332339286804
    2. ' [' → logprob: -2.8119924068450928
    3. '[n' → logprob: -10.811992645263672
    4. '[i' → logprob: -12.311992645263672
    5. ' ' → logprob: -17.436992645263672
    6. '[a' → logprob: -18.186992645263672
    7. '[m' → logprob: -18.436992645263672
    8. '[N' → logprob: -18.686992645263672
    9. '[I' → logprob: -18.686992645263672
    10. '[num' → logprob: -19.061992645263672

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '０' → logprob: -22.375
    4. '   ' → logprob: -22.75
    5. '۰' → logprob: -23.375
    6. '```' → logprob: -24.25
    7. '1' → logprob: -24.75
    8. '000' → logprob: -25.25
    9. '
' → logprob: -25.375
    10. '00' → logprob: -25.5

Token 235: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6380234956741333
    2. ']' → logprob: -0.8880234956741333
    3. 'for' → logprob: -3.5130233764648438
    4. ']*' → logprob: -3.5130233764648438
    5. ' ]' → logprob: -7.763023376464844
    6. ']*(' → logprob: -9.263023376464844
    7. '	for' → logprob: -10.013023376464844
    8. '   ' → logprob: -11.763023376464844
    9. ' ' → logprob: -12.013023376464844
    10. ')' → logprob: -13.263023376464844

Token 236: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.4121114822482923e-06
    2. ' n' → logprob: -13.000003814697266
    3. '(n' → logprob: -13.750003814697266
    4. '	n' → logprob: -18.875003814697266
    5. '   ' → logprob: -20.125003814697266
    6. '(' → logprob: -20.375003814697266
    7. ' (' → logprob: -21.500003814697266
    8. ' ' → logprob: -22.250003814697266
    9. ')n' → logprob: -22.500003814697266
    10. 'import' → logprob: -22.625003814697266

Token 237: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5113916993141174
    2. '       ' → logprob: -1.3863916397094727
    3. ' total' → logprob: -2.6363916397094727
    4. '
' → logprob: -3.5113916397094727
    5. 'mst' → logprob: -4.136391639709473
    6. '   ' → logprob: -4.386391639709473
    7. 'saved' → logprob: -5.511391639709473
    8. '        
' → logprob: -5.636391639709473
    9. '    
' → logprob: -6.136391639709473
    10. ' mst' → logprob: -6.386391639709473

Token 238: '       ' (ID: 309)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6865314245223999
    2. 'total' → logprob: -1.3115314245224
    3. '       ' → logprob: -1.6865314245224
    4. 'mst' → logprob: -3.9365315437316895
    5. ' mst' → logprob: -5.1865315437316895
    6. '   ' → logprob: -5.5615315437316895
    7. 'result' → logprob: -6.0615315437316895
    8. ' used' → logprob: -6.6865315437316895
    9. 'used' → logprob: -6.8115315437316895
    10. 'sum' → logprob: -6.9365315437316895

Token 239: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.09772158414125443
    2. 'ans' → logprob: -3.097721576690674
    3. 'res' → logprob: -4.097721576690674
    4. 'answer' → logprob: -4.472721576690674
    5. 'result' → logprob: -4.597721576690674
    6. 'mst' → logprob: -4.972721576690674
    7. 'cost' → logprob: -6.222721576690674
    8. 'removed' → logprob: -8.347722053527832
    9. 'rem' → logprob: -8.597722053527832
    10. 'saved' → logprob: -9.097722053527832

Token 240: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00506641436368227
    2. '_' → logprob: -5.755066394805908
    3. '_weight' → logprob: -6.630066394805908
    4. ' =' → logprob: -8.755066871643066
    5. '_loss' → logprob: -9.005066871643066
    6. 'cost' → logprob: -9.005066871643066
    7. '=' → logprob: -10.130066871643066
    8. '_sum' → logprob: -11.130066871643066
    9. '_saved' → logprob: -11.130066871643066
    10. '_edges' → logprob: -11.380066871643066

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ',' → logprob: -15.326414108276367
    4. '=sum' → logprob: -15.701414108276367
    5. ' ' → logprob: -15.826414108276367
    6. ' +=' → logprob: -17.951414108276367
    7. ' ' → logprob: -18.076414108276367
    8. ' ,' → logprob: -18.701414108276367
    9. '   ' → logprob: -18.826414108276367
    10. 'sum' → logprob: -19.326414108276367

Token 242: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00175062648486346
    2. 'sum' → logprob: -6.751750469207764
    3. ' ' → logprob: -7.501750469207764
    4. ' sum' → logprob: -10.501750946044922
    5. '   ' → logprob: -14.626750946044922
    6. 'edges' → logprob: -17.314250946044922
    7. '  ' → logprob: -17.564250946044922
    8. '	sum' → logprob: -17.689250946044922
    9. '```' → logprob: -18.126750946044922
    10. ' ' → logprob: -18.126750946044922

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889672368764877
    2. 'sum' → logprob: -2.5788967609405518
    3. ' sum' → logprob: -12.078896522521973
    4. ' ' → logprob: -13.703896522521973
    5. '(sum' → logprob: -17.07889747619629
    6. '   ' → logprob: -17.32889747619629
    7. 'edges' → logprob: -17.45389747619629
    8. '	sum' → logprob: -17.57889747619629
    9. '=sum' → logprob: -17.57889747619629
    10. 'Sum' → logprob: -17.82889747619629

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1965213268995285
    2. '
' → logprob: -2.196521282196045
    3. ' for' → logprob: -3.446521282196045
    4. '        
' → logprob: -4.321521282196045
    5. 'for' → logprob: -4.571521282196045
    6. ',' → logprob: -5.821521282196045
    7. '<|end|>' → logprob: -5.821521282196045
    8. ' edges' → logprob: -6.821521282196045
    9. '        ' → logprob: -7.321521282196045
    10. '
' → logprob: -7.696521282196045

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8788620233535767
    2. ' for' → logprob: -1.6288620233535767
    3. ' saved' → logprob: -1.6288620233535767
    4. ' used' → logprob: -3.003861904144287
    5. 'saved' → logprob: -3.003861904144287
    6. 'for' → logprob: -3.628861904144287
    7. 'removed' → logprob: -4.003861904144287
    8. 'used' → logprob: -4.253861904144287
    9. '   ' → logprob: -4.753861904144287
    10. ' removed' → logprob: -5.128861904144287

Token 246: ' for' (ID: 395)
  Prédit: 'saved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'saved' → logprob: -0.880306601524353
    2. 'for' (adapté à ' for') → logprob: -1.630306601524353
    3. 'removed' → logprob: -1.755306601524353
    4. 's' → logprob: -2.6303067207336426
    5. 'mst' → logprob: -3.0053067207336426
    6. 'used' → logprob: -3.7553067207336426
    7. 'unused' → logprob: -4.005306720733643
    8. 'result' → logprob: -4.255306720733643
    9. 'answer' → logprob: -4.880306720733643
    10. 'redu' → logprob: -5.130306720733643

Token 247: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16024871170520782
    2. ' cost' → logprob: -1.9102487564086914
    3. '(cost' → logprob: -10.785248756408691
    4. 'c' → logprob: -13.785248756408691
    5. '_cost' → logprob: -14.035248756408691
    6. '```' → logprob: -14.410248756408691
    7. '   ' → logprob: -15.160248756408691
    8. ',' → logprob: -15.160248756408691
    9. 'edge' → logprob: -15.410248756408691
    10. ' ' → logprob: -15.535248756408691

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011236425780225545
    2. ' ,' → logprob: -9.875112533569336
    3. ',(' → logprob: -11.375112533569336
    4. ',parent' → logprob: -12.000112533569336
    5. ',user' → logprob: -12.125112533569336
    6. ',
' → logprob: -12.125112533569336
    7. ',node' → logprob: -12.375112533569336
    8. ' in' → logprob: -12.500112533569336
    9. ',c' → logprob: -13.000112533569336
    10. ',input' → logprob: -13.250112533569336

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00015753143816255033
    2. 'u' → logprob: -9.250157356262207
    3. ' a' → logprob: -10.000157356262207
    4. '_a' → logprob: -11.250157356262207
    5. '_,' → logprob: -13.125157356262207
    6. '_' → logprob: -15.000157356262207
    7. 'x' → logprob: -15.750157356262207
    8. ',a' → logprob: -15.875157356262207
    9. '   ' → logprob: -16.250158309936523
    10. '	a' → logprob: -16.625158309936523

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018517737044021487
    2. ',b' → logprob: -6.376851558685303
    3. ' ,' → logprob: -8.876852035522461
    4. 'b' → logprob: -11.751852035522461
    5. '_,' → logprob: -14.001852035522461
    6. ',a' → logprob: -15.751852035522461
    7. ',user' → logprob: -16.00185203552246
    8. '```' → logprob: -16.00185203552246
    9. ',i' → logprob: -16.50185203552246
    10. ',parent' → logprob: -16.50185203552246

Token 251: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. ' ' → logprob: -18.750709533691406
    4. '   ' → logprob: -19.375709533691406
    5. '	b' → logprob: -20.500709533691406
    6. '<|end|>' → logprob: -20.500709533691406
    7. '    ' → logprob: -20.875709533691406
    8. '
' → logprob: -20.875709533691406
    9. ',' → logprob: -21.000709533691406
    10. '       ' → logprob: -21.125709533691406

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036450917832553387
    2. 'in' → logprob: -5.628644943237305
    3. ',' → logprob: -10.753644943237305
    4. '   ' → logprob: -11.253644943237305
    5. '	in' → logprob: -12.628644943237305
    6. ':' → logprob: -12.753644943237305
    7. '       ' → logprob: -13.503644943237305
    8. '  ' → logprob: -14.753644943237305
    9. ' ' → logprob: -14.753644943237305
    10. ' ,' → logprob: -15.003644943237305

Token 253: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0548895038664341
    2. ' edges' → logprob: -2.929889440536499
    3. '(edges' → logprob: -12.554889678955078
    4. '.edges' → logprob: -13.554889678955078
    5. '   ' → logprob: -13.804889678955078
    6. '_edges' → logprob: -15.304889678955078
    7. '```' → logprob: -15.304889678955078
    8. ' ' → logprob: -15.304889678955078
    9. 'ed' → logprob: -15.554889678955078
    10. '
' → logprob: -15.554889678955078

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04311862960457802
    2. ':
' → logprob: -3.168118715286255
    3. '       ' → logprob: -9.793118476867676
    4. '   ' → logprob: -10.418118476867676
    5. ',' → logprob: -10.918118476867676
    6. ':
' → logprob: -12.543118476867676
    7. '):
' → logprob: -12.793118476867676
    8. '):' → logprob: -13.168118476867676
    9. '=' → logprob: -13.293118476867676
    10. '           ' → logprob: -13.418118476867676

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03782801330089569
    2. ' if' → logprob: -3.662827968597412
    3. '       ' → logprob: -4.537827968597412
    4. 'if' → logprob: -7.287827968597412
    5. '   ' → logprob: -10.78782844543457
    6. ',' → logprob: -11.53782844543457
    7. '<|end|>' → logprob: -11.53782844543457
    8. '	       ' → logprob: -11.66282844543457
    9. '            
' → logprob: -12.03782844543457
    10. '               ' → logprob: -12.03782844543457

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.201017364859581
    2. ' if' → logprob: -1.8260173797607422
    3. '           ' → logprob: -3.951017379760742
    4. 'union' → logprob: -6.826017379760742
    5. '       ' → logprob: -7.576017379760742
    6. ' union' → logprob: -8.701017379760742
    7. '   ' → logprob: -10.326017379760742
    8. '               ' → logprob: -12.201017379760742
    9. '	if' → logprob: -12.451017379760742
    10. 'un' → logprob: -14.076017379760742

Token 257: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.10032528638839722
    2. 'union' → logprob: -2.350325345993042
    3. ' not' → logprob: -9.225325584411621
    4. '	union' → logprob: -11.725325584411621
    5. 'not' → logprob: -11.850325584411621
    6. '.union' → logprob: -13.225325584411621
    7. '_union' → logprob: -13.725325584411621
    8. '   ' → logprob: -14.475325584411621
    9. ' ' → logprob: -14.600325584411621
    10. 'un' → logprob: -15.100325584411621

Token 258: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -1.3425219549390022e-05
    2. ' (' → logprob: -11.87501335144043
    3. 'parent' → logprob: -12.75001335144043
    4. ',parent' → logprob: -13.87501335144043
    5. '(paren' → logprob: -14.12501335144043
    6. '(' → logprob: -14.12501335144043
    7. ' parent' → logprob: -14.25001335144043
    8. '[parent' → logprob: -14.75001335144043
    9. '_parent' → logprob: -17.75001335144043
    10. '(
' → logprob: -18.00001335144043

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. '(rank' → logprob: -10.125055313110352
    3. ',r' → logprob: -12.125055313110352
    4. ' ,' → logprob: -12.250055313110352
    5. ',parent' → logprob: -12.375055313110352
    6. ',
' → logprob: -14.250055313110352
    7. 'rank' → logprob: -16.12505531311035
    8. ',

' → logprob: -16.25005531311035
    9. ',n' → logprob: -17.25005531311035
    10. '(' → logprob: -17.87505531311035

Token 260: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.011048054322600365
    2. ' rank' → logprob: -4.511047840118408
    3. '(rank' → logprob: -15.386048316955566
    4. ' ' → logprob: -20.51104736328125
    5. '.rank' → logprob: -20.63604736328125
    6. 'range' → logprob: -21.38604736328125
    7. '_rank' → logprob: -21.63604736328125
    8. '
' → logprob: -21.88604736328125
    9. '   ' → logprob: -22.01104736328125
    10. 'rate' → logprob: -22.51104736328125

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033658118918538094
    2. ' ,' → logprob: -5.878365993499756
    3. '(a' → logprob: -7.878365993499756
    4. ',a' → logprob: -8.878365516662598
    5. 'a' → logprob: -10.878365516662598
    6. 'parent' → logprob: -12.128365516662598
    7. '(parent' → logprob: -12.128365516662598
    8. ',parent' → logprob: -12.253365516662598
    9. ' (' → logprob: -12.878365516662598
    10. '(' → logprob: -13.753365516662598

Token 262: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007106438861228526
    2. ' a' → logprob: -7.250710487365723
    3. '	a' → logprob: -15.500710487365723
    4. '   ' → logprob: -15.500710487365723
    5. ')a' → logprob: -16.00071144104004
    6. ')' → logprob: -16.37571144104004
    7. '    ' → logprob: -17.75071144104004
    8. ' ' → logprob: -17.75071144104004
    9. '(a' → logprob: -18.00071144104004
    10. '
' → logprob: -18.00071144104004

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005660186288878322
    2. ',b' → logprob: -8.125566482543945
    3. ' ,' → logprob: -8.250566482543945
    4. 'b' → logprob: -11.750566482543945
    5. ',
' → logprob: -14.500566482543945
    6. ' b' → logprob: -16.250566482543945
    7. '```' → logprob: -16.250566482543945
    8. '),' → logprob: -16.375566482543945
    9. '   ' → logprob: -16.500566482543945
    10. '           ' → logprob: -17.125566482543945

Token 264: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007607816252857447
    2. ' b' → logprob: -4.882607936859131
    3. '   ' → logprob: -14.132607460021973
    4. ' ' → logprob: -15.257607460021973
    5. '       ' → logprob: -15.507607460021973
    6. '           ' → logprob: -16.00760841369629
    7. '    ' → logprob: -16.13260841369629
    8. ')b' → logprob: -16.50760841369629
    9. '	b' → logprob: -16.75760841369629
    10. '  ' → logprob: -17.50760841369629

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005277988035231829
    2. '):
' → logprob: -5.25527811050415
    3. ' ):' → logprob: -10.130277633666992
    4. ')' → logprob: -12.630277633666992
    5. '):
' → logprob: -14.630277633666992
    6. ':' → logprob: -15.380277633666992
    7. ' ):
' → logprob: -16.005277633666992
    8. '   ' → logprob: -16.255277633666992
    9. '       ' → logprob: -16.755277633666992
    10. '):

' → logprob: -17.005277633666992

Token 266: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22843831777572632
    2. '           ' → logprob: -1.853438377380371
    3. ' total' → logprob: -3.478438377380371
    4. 'total' → logprob: -4.103438377380371
    5. '
' → logprob: -10.353438377380371
    6. '(total' → logprob: -10.478438377380371
    7. '```' → logprob: -10.603438377380371
    8. '       ' → logprob: -10.728438377380371
    9. ',total' → logprob: -11.103438377380371
    10. '   ' → logprob: -11.478438377380371

Token 267: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.029291579499840736
    2. ' total' → logprob: -3.6542916297912598
    3. '               ' → logprob: -6.02929162979126
    4. '           ' → logprob: -8.279291152954102
    5. '                   ' → logprob: -8.654291152954102
    6. '   ' → logprob: -9.029291152954102
    7. '
' → logprob: -11.154291152954102
    8. '	total' → logprob: -11.779291152954102
    9. 'continue' → logprob: -12.404291152954102
    10. ' ' → logprob: -13.529291152954102

Token 268: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.5776860184123507e-06
    2. 'cost' → logprob: -13.12500286102295
    3. '_' → logprob: -14.87500286102295
    4. '_code' → logprob: -16.250001907348633
    5. 'Cost' → logprob: -18.375001907348633
    6. '_c' → logprob: -18.500001907348633
    7. ' cost' → logprob: -19.000001907348633
    8. '_COST' → logprob: -19.000001907348633
    9. '_total' → logprob: -20.250001907348633
    10. '_
' → logprob: -20.375001907348633

Token 269: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694668769836426
    2. ' +=' → logprob: -2.1269466876983643
    3. '+' → logprob: -11.501946449279785
    4. '=' → logprob: -12.376946449279785
    5. ']+=' → logprob: -13.001946449279785
    6. '-=' → logprob: -14.126946449279785
    7. ' -=' → logprob: -14.501946449279785
    8. '```' → logprob: -15.501946449279785
    9. '   ' → logprob: -15.626946449279785
    10. '+=(' → logprob: -15.751946449279785

Token 270: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0019293478690087795
    2. ' cost' → logprob: -6.25192928314209
    3. '(cost' → logprob: -14.62692928314209
    4. 'code' → logprob: -16.751930236816406
    5. '_cost' → logprob: -17.501930236816406
    6. 'Cost' → logprob: -17.626930236816406
    7. '0' → logprob: -17.876930236816406
    8. '```' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.126930236816406
    10. '   ' → logprob: -18.251930236816406

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21945983171463013
    2. '
' → logprob: -1.8444597721099854
    3. '<|end|>' → logprob: -3.3444597721099854
    4. '        
' → logprob: -5.8444600105285645
    5. 'print' → logprob: -8.844459533691406
    6. '  
' → logprob: -8.969459533691406
    7. '<|end|>' → logprob: -9.469459533691406
    8. '
' → logprob: -9.844459533691406
    9. '   ' → logprob: -9.844459533691406
    10. '    
' → logprob: -10.094459533691406

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013584143482148647
    2. '
' → logprob: -5.138584136962891
    3. 'print' → logprob: -5.638584136962891
    4. '        
' → logprob: -6.388584136962891
    5. '   ' → logprob: -6.763584136962891
    6. '<|end|>' → logprob: -7.513584136962891
    7. ' print' → logprob: -7.888584136962891
    8. '    
' → logprob: -8.51358413696289
    9. '        ' → logprob: -10.76358413696289
    10. '    ' → logprob: -11.13858413696289

Token 273: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0040830280631780624
    2. ' print' → logprob: -5.629083156585693
    3. 'unused' → logprob: -8.504082679748535
    4. '       ' → logprob: -8.629082679748535
    5. 'used' → logprob: -10.004082679748535
    6. '   ' → logprob: -10.879082679748535
    7. 'saved' → logprob: -11.129082679748535
    8. 'removed' → logprob: -11.879082679748535
    9. 'lost' → logprob: -13.379082679748535
    10. '        
' → logprob: -13.504082679748535

Token 274: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.03459859639406204
    2. '(' → logprob: -3.4095985889434814
    3. 'total' → logprob: -7.9095988273620605
    4. '('' → logprob: -7.9095988273620605
    5. '("' → logprob: -8.909598350524902
    6. '()' → logprob: -10.159598350524902
    7. ' (' → logprob: -10.909598350524902
    8. '(sum' → logprob: -11.659598350524902
    9. ' total' → logprob: -12.409598350524902
    10. '(T' → logprob: -13.034598350524902

Token 275: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2352385965641588e-05
    2. '_' → logprob: -11.375012397766113
    3. 'cost' → logprob: -15.250012397766113
    4. ' _' → logprob: -15.500012397766113
    5. '_total' → logprob: -15.500012397766113
    6. '_code' → logprob: -16.375011444091797
    7. '_COST' → logprob: -16.875011444091797
    8. '_c' → logprob: -17.750011444091797
    9. 'Cost' → logprob: -17.875011444091797
    10. ')' → logprob: -18.000011444091797

Token 276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.375006675720215
    3. '```' → logprob: -13.875006675720215
    4. ')
' → logprob: -14.875006675720215
    5. '*' → logprob: -15.125006675720215
    6. '<|end|>' → logprob: -15.250006675720215
    7. '())' → logprob: -16.00000762939453
    8. ')`' → logprob: -16.25000762939453
    9. '
' → logprob: -16.50000762939453
    10. '`)' → logprob: -16.50000762939453

Token 277: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0058088707737624645
    2. '<|end|>' → logprob: -6.1308088302612305
    3. '
' → logprob: -6.3808088302612305
    4. ' if' → logprob: -7.3808088302612305
    5. '```' → logprob: -7.3808088302612305
    6. '\n' → logprob: -8.00580883026123
    7. 'main' → logprob: -8.50580883026123
    8. '\' → logprob: -10.25580883026123
    9. '#' → logprob: -10.38080883026123
    10. '  
' → logprob: -11.50580883026123

Token 278: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2814370095729828
    2. '__' → logprob: -1.4064370393753052
    3. '_' → logprob: -8.531436920166016
    4. '_name' → logprob: -9.781436920166016
    5. ' ' → logprob: -11.031436920166016
    6. '___' → logprob: -11.656436920166016
    7. 'name' → logprob: -12.406436920166016
    8. 'Name' → logprob: -14.281436920166016
    9. ' ' → logprob: -14.406436920166016
    10. ' ' → logprob: -14.656436920166016

Token 279: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007052560802549124
    2. '==' → logprob: -5.132052421569824
    3. ' ==' → logprob: -7.132052421569824
    4. '__.__' → logprob: -9.007052421569824
    5. '__.' → logprob: -9.507052421569824
    6. '.__' → logprob: -9.632052421569824
    7. ' __' → logprob: -11.132052421569824
    8. '=="' → logprob: -11.757052421569824
    9. '[' → logprob: -12.007052421569824
    10. '___' → logprob: -12.132052421569824

Token 280: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010545044642640278
    2. '__.__' → logprob: -9.500105857849121
    3. '==' → logprob: -10.500105857849121
    4. '__.' → logprob: -13.625105857849121
    5. ' ==' → logprob: -14.500105857849121
    6. '_' → logprob: -14.750105857849121
    7. '__
' → logprob: -15.000105857849121
    8. '__["' → logprob: -15.625105857849121
    9. '___' → logprob: -16.250104904174805
    10. '=="' → logprob: -16.500104904174805

Token 281: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9313057065010071
    2. ' ==' → logprob: -0.9313057065010071
    3. '==' → logprob: -1.5563056468963623
    4. '=="' → logprob: -7.056305885314941
    5. '=='' → logprob: -10.056305885314941
    6. '_' → logprob: -10.181305885314941
    7. '=' → logprob: -10.931305885314941
    8. '.__' → logprob: -11.056305885314941
    9. '===' → logprob: -11.931305885314941
    10. '[' → logprob: -12.181305885314941

Token 282: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132711350917816
    2. ''' → logprob: -1.313271164894104
    3. '__' → logprob: -11.688271522521973
    4. ' "__' → logprob: -14.188271522521973
    5. ' '__' → logprob: -16.438270568847656
    6. '`' → logprob: -16.813270568847656
    7. ' "' → logprob: -17.063270568847656
    8. '"user' → logprob: -17.188270568847656
    9. ''"' → logprob: -17.563270568847656
    10. ''s' → logprob: -18.063270568847656

Token 283: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005256053060293198
    2. '__' → logprob: -5.255256175994873
    3. 'name' → logprob: -11.255255699157715
    4. '"' → logprob: -12.255255699157715
    5. '_main' → logprob: -13.005255699157715
    6. ' main' → logprob: -14.380255699157715
    7. ''' → logprob: -14.880255699157715
    8. '___' → logprob: -15.255255699157715
    9. '   ' → logprob: -15.380255699157715
    10. '```' → logprob: -15.380255699157715

Token 284: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04894409328699112
    2. '__' → logprob: -3.0489439964294434
    3. '__':
' → logprob: -8.048944473266602
    4. '__.' → logprob: -10.548944473266602
    5. '__.__' → logprob: -12.673944473266602
    6. '__["' → logprob: -12.673944473266602
    7. '__:' → logprob: -12.923944473266602
    8. '.' → logprob: -14.423944473266602
    9. '__("' → logprob: -14.798944473266602
    10. '("__' → logprob: -15.298944473266602

Token 285: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.008998727425932884
    2. 'main' → logprob: -4.758998870849609
    3. '	main' → logprob: -8.13399887084961
    4. '   ' → logprob: -9.38399887084961
    5. ' ' → logprob: -12.63399887084961
    6. '_main' → logprob: -13.25899887084961
    7. '(main' → logprob: -14.50899887084961
    8. '   ' → logprob: -15.00899887084961
    9. ' ' → logprob: -15.63399887084961
    10. ' ' → logprob: -16.38399887084961

Token 286: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.7610454708337784e-05
    2. ' main' → logprob: -10.500027656555176
    3. '	main' → logprob: -19.00002670288086
    4. 'ma' → logprob: -22.50002670288086
    5. '   ' → logprob: -22.62502670288086
    6. 'mai' → logprob: -22.62502670288086
    7. '(main' → logprob: -23.62502670288086
    8. '.main' → logprob: -23.75002670288086
    9. 'm' → logprob: -24.50002670288086
    10. '_main' → logprob: -25.25002670288086

Token 287: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0914890244603157
    2. '<|end|>' → logprob: -2.71648907661438
    3. '(' → logprob: -4.341488838195801
    4. '
' → logprob: -5.216488838195801
    5. '()
' → logprob: -7.216488838195801
    6. ')' → logprob: -7.341488838195801
    7. '```' → logprob: -7.341488838195801
    8. '#' → logprob: -8.9664888381958
    9. '();' → logprob: -8.9664888381958
    10. '\n' → logprob: -8.9664888381958


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 285
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 272
Précision stricte (1ère position): 49.47%
Précision adaptée (1ère position): 55.44%
Précision (top 10): 95.44%
================================================================================
