================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def sum_proper_divisors(n):
    if n == 1:
        return 0
    total = 1
    limit = int(math.isqrt(n))
    for i in range(2, limit + 1):
        if n % i == 0:
            total += i
            d = n // i
            if d != i:
                total += d
    return total

for line in sys.stdin:
    N = int(line)
    if N == 0:
        break
    S = sum_proper_divisors(N)
    if N == S:
        print("perfect number")
    elif N > S:
        print("deficient number")
    else:
        print("abundant number")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003968097735196352
    2. ' calculate' → logprob: -5.878968238830566
    3. ' space' → logprob: -7.628968238830566
    4. '_' → logprob: -8.253968238830566
    5. ' factorial' → logprob: -9.003968238830566
    6. ' compute' → logprob: -9.628968238830566
    7. ' add' → logprob: -10.753968238830566
    8. ' math' → logprob: -10.753968238830566
    9. ' ```' → logprob: -11.003968238830566
    10. ' my' → logprob: -11.003968238830566

Token 8: '_pro' (ID: 4617)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3156638741493225
    2. '(' → logprob: -1.4406638145446777
    3. '(a' → logprob: -4.565663814544678
    4. ' (' → logprob: -5.065663814544678
    5. '_numbers' → logprob: -5.065663814544678
    6. '(numbers' → logprob: -6.440663814544678
    7. '_total' → logprob: -6.815663814544678
    8. ')' → logprob: -6.815663814544678
    9. '_of' → logprob: -6.940663814544678
    10. '_sum' → logprob: -7.065663814544678

Token 9: 'per' (ID: 543)
  Prédit: 'duct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duct' → logprob: -0.027076462283730507
    2. 'm' → logprob: -5.152076244354248
    3. 'cess' → logprob: -5.152076244354248
    4. 'd' → logprob: -5.277076244354248
    5. '```' → logprob: -5.652076244354248
    6. '``' → logprob: -6.402076244354248
    7. 'per' → logprob: -7.027076244354248
    8. 'port' → logprob: -7.152076244354248
    9. '_digits' → logprob: -8.152076721191406
    10. 'mise' → logprob: -8.402076721191406

Token 10: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.06374381482601166
    2. '_' → logprob: -2.813743829727173
    3. '_t' → logprob: -7.188743591308594
    4. 'ly' → logprob: -7.313743591308594
    5. '_f' → logprob: -9.938743591308594
    6. '_factor' → logprob: -10.063743591308594
    7. '_ty' → logprob: -10.438743591308594
    8. 'div' → logprob: -11.063743591308594
    9. '_sub' → logprob: -11.313743591308594
    10. '_tx' → logprob: -11.438743591308594

Token 11: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.8802491215174086e-05
    2. 's' → logprob: -11.250028610229492
    3. '```' → logprob: -12.250028610229492
    4. 'idors' → logprob: -12.375028610229492
    5. 'iders' → logprob: -13.375028610229492
    6. 'isor' → logprob: -13.625028610229492
    7. '``' → logprob: -14.250028610229492
    8. '_is' → logprob: -14.500028610229492
    9. '_' → logprob: -15.125028610229492
    10. 'iors' → logprob: -15.250028610229492

Token 12: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -2.47495681833243e-05
    2. 'or' → logprob: -10.875024795532227
    3. '```' → logprob: -12.625024795532227
    4. 'iors' → logprob: -14.250024795532227
    5. 's' → logprob: -15.625024795532227
    6. '0' → logprob: -15.625024795532227
    7. 'orsu' → logprob: -15.750024795532227
    8. '   ' → logprob: -16.000024795532227
    9. '[' → logprob: -16.125024795532227
    10. 'orsi' → logprob: -16.500024795532227

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7729658540920354e-05
    2. '_' → logprob: -11.875027656555176
    3. ' (' → logprob: -12.250027656555176
    4. '(n' → logprob: -12.750027656555176
    5. 's' → logprob: -12.875027656555176
    6. '(x' → logprob: -13.625027656555176
    7. '("("' → logprob: -13.625027656555176
    8. '(user' → logprob: -14.000027656555176
    9. '```' → logprob: -14.000027656555176
    10. '(
' → logprob: -14.250027656555176

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003192566568031907
    2. ')' → logprob: -5.75319242477417
    3. ':' → logprob: -11.753192901611328
    4. ' ):' → logprob: -12.503192901611328
    5. '):
' → logprob: -13.253192901611328
    6. ')：' → logprob: -15.378192901611328
    7. '*' → logprob: -15.503192901611328
    8. '   ' → logprob: -15.878192901611328
    9. ''):' → logprob: -16.128192901611328
    10. '}:' → logprob: -16.128192901611328

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05607590451836586
    2. '   ' → logprob: -3.4310758113861084
    3. ' :' → logprob: -4.0560760498046875
    4. ' ' → logprob: -5.6810760498046875
    5. '):' → logprob: -8.056076049804688
    6. ':
' → logprob: -8.181076049804688
    7. '    ' → logprob: -8.556076049804688
    8. '():' → logprob: -8.806076049804688
    9. '  ' → logprob: -9.931076049804688
    10. '```' → logprob: -9.931076049804688

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35091444849967957
    2. ' ' → logprob: -1.975914478302002
    3. ' s' → logprob: -2.725914478302002
    4. ' total' → logprob: -3.475914478302002
    5. '    ' → logprob: -3.600914478302002
    6. ' sum' → logprob: -4.100914478302002
    7. ' if' → logprob: -5.475914478302002
    8. ' result' → logprob: -6.475914478302002
    9. ' return' → logprob: -6.725914478302002
    10. '  ' → logprob: -6.850914478302002

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00012713817704934627
    2. 'n' → logprob: -9.000126838684082
    3. ' ' → logprob: -12.750126838684082
    4. ' ' → logprob: -14.500126838684082
    5. '	n' → logprob: -15.125126838684082
    6. '1' → logprob: -19.1251277923584
    7. ' not' → logprob: -19.6251277923584
    8. ' \(' → logprob: -20.0001277923584
    9. ' isinstance' → logprob: -20.1251277923584
    10. '  ' → logprob: -20.1251277923584

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11263123899698257
    2. ' <=' → logprob: -2.612631320953369
    3. ' ' → logprob: -4.112631320953369
    4. '==' → logprob: -4.237631320953369
    5. ' <' → logprob: -6.487631320953369
    6. '<=' → logprob: -7.737631320953369
    7. '=' → logprob: -8.862630844116211
    8. ' >' → logprob: -9.362630844116211
    9. ' =' → logprob: -9.987630844116211
    10. '<' → logprob: -10.862630844116211

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048592709004879
    2. '1' → logprob: -3.0485928058624268
    3. '0' → logprob: -12.673592567443848
    4. ' ' → logprob: -13.673592567443848
    5. '2' → logprob: -14.048592567443848
    6. '   ' → logprob: -15.548592567443848
    7. '	' → logprob: -17.173593521118164
    8. '```' → logprob: -17.298593521118164
    9. '  ' → logprob: -17.798593521118164
    10. '' → logprob: -18.236093521118164

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005151443183422089
    2. ' ' → logprob: -8.00051498413086
    3. '0' → logprob: -8.62551498413086
    4. '2' → logprob: -16.00051498413086
    5. '```' → logprob: -16.25051498413086
    6. '   ' → logprob: -18.37551498413086
    7. '<' → logprob: -19.37551498413086
    8. '' → logprob: -19.50051498413086
    9. '１' → logprob: -19.50051498413086
    10. '  ' → logprob: -19.68801498413086

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007021840428933501
    2. ':return' → logprob: -7.750702381134033
    3. ':
' → logprob: -8.250701904296875
    4. ' :' → logprob: -11.625701904296875
    5. '):' → logprob: -14.250701904296875
    6. ':

' → logprob: -15.500701904296875
    7. '0' → logprob: -15.875701904296875
    8. '   ' → logprob: -16.375701904296875
    9. ':**' → logprob: -16.375701904296875
    10. ' :
' → logprob: -16.500701904296875

Token 22: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5996031165122986
    2. ' ' → logprob: -0.8496031165122986
    3. '       ' → logprob: -4.474603176116943
    4. '    ' → logprob: -4.724603176116943
    5. ' return' → logprob: -6.349603176116943
    6. '   ' → logprob: -6.724603176116943
    7. '1' → logprob: -9.724602699279785
    8. 'return' → logprob: -10.599602699279785
    9. '     ' → logprob: -10.724602699279785
    10. ':return' → logprob: -11.474602699279785

Token 23: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.013227402232587337
    2. '0' → logprob: -5.013227462768555
    3. 'return' (adapté à ' return') → logprob: -5.388227462768555
    4. '    ' → logprob: -6.763227462768555
    5. ' ' → logprob: -7.388227462768555
    6. '   ' → logprob: -9.513227462768555
    7. '       ' → logprob: -10.263227462768555
    8. '1' → logprob: -11.013227462768555
    9. ':return' → logprob: -11.388227462768555
    10. '	return' → logprob: -12.513227462768555

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06197183206677437
    2. '0' → logprob: -2.81197190284729
    3. '1' → logprob: -12.436971664428711
    4. ' ' → logprob: -15.686971664428711
    5. '    ' → logprob: -16.68697166442871
    6. '  ' → logprob: -16.81197166442871
    7. '   ' → logprob: -17.56197166442871
    8. '```' → logprob: -18.74947166442871
    9. ' []' → logprob: -18.81197166442871
    10. ' `' → logprob: -19.24947166442871

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015060516307130456
    2. ' ' → logprob: -6.5015058517456055
    3. '1' → logprob: -12.501505851745605
    4. '   ' → logprob: -19.626506805419922
    5. '[]' → logprob: -20.001506805419922
    6. '```' → logprob: -20.251506805419922
    7. '000' → logprob: -20.751506805419922
    8. '`' → logprob: -21.001506805419922
    9. '۰' → logprob: -21.126506805419922
    10. '00' → logprob: -21.626506805419922

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057350605726242065
    2. '
' → logprob: -2.9323506355285645
    3. '    
' → logprob: -6.0573506355285645
    4. '\n' → logprob: -10.432350158691406
    5. '  
' → logprob: -10.682350158691406
    6. '   
' → logprob: -11.307350158691406
    7. 'return' → logprob: -11.557350158691406
    8. '4' → logprob: -11.682350158691406
    9. ' 
' → logprob: -11.932350158691406
    10. '```' → logprob: -12.182350158691406

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21325790882110596
    2. '
' → logprob: -1.713257908821106
    3. '    
' → logprob: -4.588257789611816
    4. '  
' → logprob: -7.838257789611816
    5. '   
' → logprob: -7.963257789611816
    6. ' 
' → logprob: -8.838257789611816
    7. 'n' → logprob: -9.338257789611816
    8. '1' → logprob: -9.588257789611816
    9. '\n' → logprob: -9.963257789611816
    10. '4' → logprob: -9.963257789611816

Token 28: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9466671943664551
    2. 'total' (adapté à ' total') → logprob: -1.696667194366455
    3. 'sum' → logprob: -2.321667194366455
    4. ' result' → logprob: -2.446667194366455
    5. ' sum' → logprob: -2.571667194366455
    6. ' s' → logprob: -3.321667194366455
    7. '   ' → logprob: -3.321667194366455
    8. 'result' → logprob: -3.571667194366455
    9. 's' → logprob: -3.696667194366455
    10. ' divisor' → logprob: -3.946667194366455

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028763549402356148
    2. '=' → logprob: -3.65376353263855
    3. ' +=' → logprob: -6.153763771057129
    4. ' ' → logprob: -8.028763771057129
    5. ' -=' → logprob: -12.903763771057129
    6. '_' → logprob: -13.653763771057129
    7. ' =)' → logprob: -14.153763771057129
    8. '+=' → logprob: -14.278763771057129
    9. ' |=' → logprob: -14.528763771057129
    10. ' .=' → logprob: -14.778763771057129

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519410252571106
    2. ' ' → logprob: -1.5019409656524658
    3. ' sum' → logprob: -11.751940727233887
    4. '0' → logprob: -12.751940727233887
    5. 'sum' → logprob: -13.751940727233887
    6. ' ' → logprob: -16.501941680908203
    7. '  ' → logprob: -17.251941680908203
    8. '    ' → logprob: -17.689441680908203
    9. '   ' → logprob: -17.751941680908203
    10. '```' → logprob: -18.001941680908203

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '0' → logprob: -15.250075340270996
    4. 'sum' → logprob: -19.00007438659668
    5. '１' → logprob: -19.37507438659668
    6. '```' → logprob: -20.25007438659668
    7. ' sum' → logprob: -20.87507438659668
    8. ' ' → logprob: -21.62507438659668
    9. '۱' → logprob: -21.62507438659668
    10. '' → logprob: -21.75007438659668

Token 32: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9876052141189575
    2. ' for' → logprob: -1.2376052141189575
    3. '
' → logprob: -1.8626052141189575
    4. '   ' → logprob: -2.612605094909668
    5. '<|end|>' → logprob: -3.362605094909668
    6. '    
' → logprob: -3.612605094909668
    7. ' ' → logprob: -4.737605094909668
    8. '  
' → logprob: -5.112605094909668
    9. '+' → logprob: -5.362605094909668
    10. '   
' → logprob: -5.362605094909668

Token 33: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6839508414268494
    2. 'for' → logprob: -1.6839509010314941
    3. ' for' → logprob: -2.183950901031494
    4. '   ' → logprob: -2.558950901031494
    5. '    
' → logprob: -2.683950901031494
    6. ' 
' → logprob: -4.558950901031494
    7. '  
' → logprob: -4.808950901031494
    8. '   
' → logprob: -4.808950901031494
    9. 'def' → logprob: -5.683950901031494
    10. '\n' → logprob: -5.683950901031494

Token 34: ' limit' (ID: 5967)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16364358365535736
    2. 'for' → logprob: -1.9136435985565186
    3. ' ' → logprob: -6.0386433601379395
    4. ' i' → logprob: -7.7886433601379395
    5. '   ' → logprob: -8.038643836975098
    6. '    
' → logprob: -10.163643836975098
    7. '
' → logprob: -10.288643836975098
    8. '    ' → logprob: -10.288643836975098
    9. '```' → logprob: -10.913643836975098
    10. '     
' → logprob: -11.038643836975098

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067167943343520164
    2. '=' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.00671672821045
    4. '=int' → logprob: -14.38171672821045
    5. ' ' → logprob: -17.756717681884766
    6. '＝' → logprob: -18.381717681884766
    7. ' =
' → logprob: -18.631717681884766
    8. ' ==' → logprob: -19.256717681884766
    9. ' =)' → logprob: -19.256717681884766
    10. ' =
' → logprob: -19.381717681884766

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38717252016067505
    2. 'int' → logprob: -1.1371724605560303
    3. ' math' → logprob: -8.38717269897461
    4. 'math' → logprob: -10.26217269897461
    5. ' n' → logprob: -11.01217269897461
    6. 'n' → logprob: -11.13717269897461
    7. '	int' → logprob: -12.76217269897461
    8. '   ' → logprob: -13.26217269897461
    9. '(int' → logprob: -13.63717269897461
    10. ' ' → logprob: -14.01217269897461

Token 37: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.4789815843105316
    2. '(n' → logprob: -0.978981614112854
    3. '(' → logprob: -5.3539814949035645
    4. '(s' → logprob: -9.103981971740723
    5. 'math' → logprob: -9.978981971740723
    6. ' math' → logprob: -13.728981971740723
    7. ' (' → logprob: -13.728981971740723
    8. '(pow' → logprob: -14.228981971740723
    9. '```' → logprob: -14.478981971740723
    10. 'n' → logprob: -14.603981971740723

Token 38: '.is' (ID: 3109)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0014097588136792183
    2. '.' → logprob: -6.626409530639648
    3. 'sqrt' → logprob: -9.626409530639648
    4. '.is' → logprob: -12.001409530639648
    5. '.s' → logprob: -12.126409530639648
    6. '.Sqrt' → logprob: -12.626409530639648
    7. ' .' → logprob: -14.001409530639648
    8. '```' → logprob: -14.251409530639648
    9. '.floor' → logprob: -15.001409530639648
    10. '.ceil' → logprob: -15.251409530639648

Token 39: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -2.339278580620885e-06
    2. 'q' → logprob: -13.000001907348633
    3. 'qr' → logprob: -17.375001907348633
    4. 'sqrt' → logprob: -17.875001907348633
    5. 'quare' → logprob: -18.875001907348633
    6. 'qt' → logprob: -20.750001907348633
    7. '```' → logprob: -21.625001907348633
    8. 'r' → logprob: -21.875001907348633
    9. 'qu' → logprob: -23.000001907348633
    10. '_' → logprob: -23.250001907348633

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004354373668320477
    2. '(' → logprob: -7.7504353523254395
    3. ' (' → logprob: -12.500435829162598
    4. 'n' → logprob: -14.875435829162598
    5. ')' → logprob: -14.875435829162598
    6. ')(' → logprob: -15.125435829162598
    7. ')n' → logprob: -16.87543487548828
    8. '(
' → logprob: -17.12543487548828
    9. ' ' → logprob: -18.00043487548828
    10. '```' → logprob: -19.25043487548828

Token 41: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15727487206459045
    2. ')' → logprob: -2.6572749614715576
    3. '(n' → logprob: -2.6572749614715576
    4. '(' → logprob: -5.2822747230529785
    5. '))+' → logprob: -9.032275199890137
    6. ' ))' → logprob: -11.532275199890137
    7. ')+' → logprob: -11.782275199890137
    8. 'n' → logprob: -12.282275199890137
    9. ')n' → logprob: -12.282275199890137
    10. ')))' → logprob: -12.407275199890137

Token 42: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28556743264198303
    2. ' +' → logprob: -1.5355674028396606
    3. '+
' → logprob: -4.535567283630371
    4. 'for' → logprob: -5.285567283630371
    5. '   ' → logprob: -5.535567283630371
    6. ' ' → logprob: -5.660567283630371
    7. ' +
' → logprob: -5.785567283630371
    8. '
' → logprob: -6.035567283630371
    9. ' for' → logprob: -6.035567283630371
    10. ')' → logprob: -7.535567283630371

Token 43: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09263496845960617
    2. ' for' → logprob: -3.717634916305542
    3. '
' → logprob: -3.842634916305542
    4. ' +' → logprob: -4.217635154724121
    5. ')' → logprob: -4.717635154724121
    6. 'for' (adapté à ' for') → logprob: -4.842635154724121
    7. ' ' → logprob: -5.842635154724121
    8. '+
' → logprob: -5.967635154724121
    9. '*' → logprob: -6.467635154724121
    10. '<|end|>' → logprob: -6.842635154724121

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -3.6312321753939614e-05
    2. 'i' → logprob: -10.250036239624023
    3. '	i' → logprob: -14.875036239624023
    4. '(i' → logprob: -16.000036239624023
    5. ' divisor' → logprob: -16.125036239624023
    6. ' ' → logprob: -16.125036239624023
    7. ' d' → logprob: -16.375036239624023
    8. ' x' → logprob: -17.750036239624023
    9. ' ' → logprob: -18.750036239624023
    10. ' factor' → logprob: -19.375036239624023

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008792777545750141
    2. 'in' → logprob: -4.883792877197266
    3. ' ' → logprob: -6.758792877197266
    4. '  ' → logprob: -11.758792877197266
    5. ' i' → logprob: -12.883792877197266
    6. '1' → logprob: -13.008792877197266
    7. 'range' → logprob: -13.508792877197266
    8. '	in' → logprob: -13.883792877197266
    9. 's' → logprob: -14.008792877197266
    10. 'n' → logprob: -14.133792877197266

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00018244501552544534
    2. 'range' → logprob: -8.625182151794434
    3. ' ' → logprob: -13.250182151794434
    4. '	range' → logprob: -14.250182151794434
    5. ' xrange' → logprob: -15.000182151794434
    6. '(range' → logprob: -16.00018310546875
    7. '.range' → logprob: -19.37518310546875
    8. '_range' → logprob: -19.62518310546875
    9. ' space' → logprob: -20.25018310546875
    10. ' rango' → logprob: -20.37518310546875

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.9875325708417222e-05
    2. '2' → logprob: -11.125029563903809
    3. ' (' → logprob: -11.125029563903809
    4. ' ' → logprob: -15.500029563903809
    5. '1' → logprob: -16.625030517578125
    6. '(
' → logprob: -17.875030517578125
    7. '<|end|>' → logprob: -17.875030517578125
    8. ')' → logprob: -19.000030517578125
    9. '```' → logprob: -19.125030517578125
    10. '\(' → logprob: -19.375030517578125

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.12502670288086
    4. '۲' → logprob: -18.25002670288086
    5. '２' → logprob: -18.37502670288086
    6. ')' → logprob: -18.62502670288086
    7. '(' → logprob: -18.75002670288086
    8. '  ' → logprob: -19.87502670288086
    9. '٢' → logprob: -19.87502670288086
    10. '```' → logprob: -19.87502670288086

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14328539371490479
    2. ' ,' → logprob: -2.0182852745056152
    3. ',n' → logprob: -8.143285751342773
    4. ' ' → logprob: -8.518285751342773
    5. ' )' → logprob: -9.893285751342773
    6. ')' → logprob: -10.643285751342773
    7. ' n' → logprob: -11.393285751342773
    8. ',i' → logprob: -12.268285751342773
    9. ',len' → logprob: -12.393285751342773
    10. ' ,
' → logprob: -12.768285751342773

Token 50: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.31326377391815186
    2. 'limit' → logprob: -1.3132637739181519
    3. '(limit' → logprob: -13.313263893127441
    4. 'lim' → logprob: -16.063262939453125
    5. '_limit' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.313262939453125
    7. '-limit' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.063262939453125
    9. '.limit' → logprob: -18.313262939453125
    10. '```' → logprob: -18.688262939453125

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408637404441833
    2. ' +' → logprob: -0.9740864038467407
    3. ')' → logprob: -12.34908676147461
    4. ' ' → logprob: -12.59908676147461
    5. ')+' → logprob: -14.34908676147461
    6. '+)' → logprob: -14.84908676147461
    7. '()+' → logprob: -15.22408676147461
    8. ' )' → logprob: -15.34908676147461
    9. ' ' → logprob: -16.59908676147461
    10. ' plus' → logprob: -16.72408676147461

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. '2' → logprob: -18.163042068481445
    4. ')' → logprob: -18.788042068481445
    5. '```' → logprob: -18.913042068481445
    6. '  ' → logprob: -19.413042068481445
    7. '(' → logprob: -19.788042068481445
    8. ' ' → logprob: -19.788042068481445
    9. '   ' → logprob: -20.163042068481445
    10. '۱' → logprob: -21.038042068481445

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -20.000019073486328
    4. '```' → logprob: -20.375019073486328
    5. '2' → logprob: -21.000019073486328
    6. '۱' → logprob: -21.125019073486328
    7. '   ' → logprob: -21.250019073486328
    8. '  ' → logprob: -21.875019073486328
    9. '１' → logprob: -21.875019073486328
    10. '(' → logprob: -22.437519073486328

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035484686493873596
    2. ':' → logprob: -3.410484790802002
    3. '):
' → logprob: -6.410484790802002
    4. ')' → logprob: -9.035484313964844
    5. ' ):' → logprob: -9.785484313964844
    6. '   ' → logprob: -12.535484313964844
    7. ' :' → logprob: -12.660484313964844
    8. '):
' → logprob: -13.035484313964844
    9. ',' → logprob: -13.160484313964844
    10. ':
' → logprob: -13.285484313964844

Token 55: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010579182766377926
    2. '       ' → logprob: -4.7605791091918945
    3. '):' → logprob: -6.7605791091918945
    4. ':
' → logprob: -7.6355791091918945
    5. '   ' → logprob: -8.760579109191895
    6. ' :' → logprob: -9.760579109191895
    7. ' if' → logprob: -10.635579109191895
    8. '    ' → logprob: -10.885579109191895
    9. 'if' → logprob: -11.385579109191895
    10. ':**' → logprob: -11.510579109191895

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3103875517845154
    2. ' ' → logprob: -2.06038761138916
    3. 'if' (adapté à ' if') → logprob: -2.18538761138916
    4. '       ' → logprob: -4.18538761138916
    5. '    ' → logprob: -5.68538761138916
    6. '   ' → logprob: -5.81038761138916
    7. ':' → logprob: -6.18538761138916
    8. '<|end|>' → logprob: -6.31038761138916
    9. '  ' → logprob: -7.43538761138916
    10. ' :' → logprob: -8.18538761138916

Token 57: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0015040287980809808
    2. 'n' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.626503944396973
    4. '	n' → logprob: -14.626503944396973
    5. ' ' → logprob: -15.001503944396973
    6. ' (' → logprob: -15.251503944396973
    7. '(n' → logprob: -15.876503944396973
    8. ')n' → logprob: -17.75150489807129
    9. ' н' → logprob: -18.12650489807129
    10. '(' → logprob: -18.25150489807129

Token 58: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2541545629501343
    2. '%' → logprob: -1.5041545629501343
    3. '%i' → logprob: -6.129154682159424
    4. ' ' → logprob: -10.129154205322266
    5. ' ' → logprob: -13.004154205322266
    6. '%e' → logprob: -14.254154205322266
    7. '%x' → logprob: -14.629154205322266
    8. '%s' → logprob: -15.254154205322266
    9. '%d' → logprob: -15.629154205322266
    10. '％' → logprob: -15.754154205322266

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31328898668289185
    2. 'i' → logprob: -1.313288927078247
    3. '	i' → logprob: -11.188288688659668
    4. ' ' → logprob: -11.438288688659668
    5. '<|end|>' → logprob: -13.688288688659668
    6. ' ' → logprob: -14.688288688659668
    7. '  ' → logprob: -15.063288688659668
    8. '2' → logprob: -16.313289642333984
    9. '(i' → logprob: -16.563289642333984
    10. '_i' → logprob: -16.688289642333984

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03811068832874298
    2. '==' → logprob: -3.2881107330322266
    3. ' ' → logprob: -10.413110733032227
    4. '=' → logprob: -10.538110733032227
    5. ' =' → logprob: -11.913110733032227
    6. ')==' → logprob: -13.163110733032227
    7. '===' → logprob: -13.788110733032227
    8. ')' → logprob: -13.913110733032227
    9. '0' → logprob: -14.038110733032227
    10. ' ===' → logprob: -14.663110733032227

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '  ' → logprob: -17.379619598388672
    4. '   ' → logprob: -18.004619598388672
    5. '۰' → logprob: -18.254619598388672
    6. ' ' → logprob: -18.879619598388672
    7. '=' → logprob: -19.379619598388672
    8. '    ' → logprob: -19.504619598388672
    9. '٠' → logprob: -20.004619598388672
    10. '<|end|>' → logprob: -20.129619598388672

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -20.250059127807617
    4. '```' → logprob: -20.875059127807617
    5. '   ' → logprob: -21.000059127807617
    6. '  ' → logprob: -21.250059127807617
    7. '٠' → logprob: -21.750059127807617
    8. '00' → logprob: -21.750059127807617
    9. '०' → logprob: -22.750059127807617
    10. '=' → logprob: -23.000059127807617

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001587462262250483
    2. ':
' → logprob: -6.751587390899658
    3. '):' → logprob: -8.501587867736816
    4. ' :' → logprob: -8.751587867736816
    5. '           ' → logprob: -10.501587867736816
    6. '       ' → logprob: -11.001587867736816
    7. '):
' → logprob: -13.001587867736816
    8. ' and' → logprob: -13.001587867736816
    9. ',' → logprob: -13.376587867736816
    10. ':**' → logprob: -13.876587867736816

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6593687534332275
    2. ' ' → logprob: -1.4093687534332275
    3. 'total' → logprob: -2.0343687534332275
    4. ' total' → logprob: -2.6593687534332275
    5. '       ' → logprob: -3.9093687534332275
    6. '<|end|>' → logprob: -5.409368515014648
    7. '   ' → logprob: -6.034368515014648
    8. ' 
' → logprob: -6.034368515014648
    9. '(total' → logprob: -6.534368515014648
    10. '            ' → logprob: -6.784368515014648

Token 65: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2777097821235657
    2. 'total' (adapté à ' total') → logprob: -1.527709722518921
    3. '           ' → logprob: -3.777709722518921
    4. '               ' → logprob: -6.4027099609375
    5. ' 
' → logprob: -7.7777099609375
    6. '	total' → logprob: -9.2777099609375
    7. '
' → logprob: -9.6527099609375
    8. 'Total' → logprob: -10.0277099609375
    9. '            
' → logprob: -10.1527099609375
    10. ' ' → logprob: -10.1527099609375

Token 66: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0005533903022296727
    2. '+=' → logprob: -7.500553607940674
    3. ' +' → logprob: -15.375553131103516
    4. ' ' → logprob: -16.375553131103516
    5. ' *=' → logprob: -17.250553131103516
    6. '+=(' → logprob: -17.250553131103516
    7. '+' → logprob: -17.625553131103516
    8. ']+=' → logprob: -18.375553131103516
    9. ' -=' → logprob: -18.750553131103516
    10. '+='' → logprob: -19.125553131103516

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141392946243286
    2. 'i' → logprob: -1.701413869857788
    3. '	i' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '(i' → logprob: -16.701414108276367
    7. '```' → logprob: -17.076414108276367
    8. ' (' → logprob: -17.451414108276367
    9. '   ' → logprob: -18.201414108276367
    10. 'I' → logprob: -19.451414108276367

Token 68: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.702949047088623
    2. ' +' → logprob: -1.577949047088623
    3. '<|end|>' → logprob: -1.577949047088623
    4. '+' → logprob: -3.327949047088623
    5. ' if' → logprob: -3.702949047088623
    6. ' and' → logprob: -3.952949047088623
    7. ' 
' → logprob: -5.452949047088623
    8. '           ' → logprob: -5.827949047088623
    9. ' +
' → logprob: -6.577949047088623
    10. 'if' → logprob: -7.202949047088623

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020765632390975952
    2. 'total' → logprob: -4.770765781402588
    3. ' if' → logprob: -5.270765781402588
    4. ' ' → logprob: -6.520765781402588
    5. ' 
' → logprob: -7.020765781402588
    6. 'if' → logprob: -7.020765781402588
    7. '            
' → logprob: -7.270765781402588
    8. '+' → logprob: -7.395765781402588
    9. ' and' → logprob: -7.770765781402588
    10. ' +' → logprob: -7.770765781402588

Token 70: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9450646042823792
    2. ' total' → logprob: -1.0700645446777344
    3. 'total' → logprob: -1.5700645446777344
    4. 'if' → logprob: -2.8200645446777344
    5. '           ' → logprob: -7.320064544677734
    6. '            
' → logprob: -10.945064544677734
    7. ',' → logprob: -11.820064544677734
    8. 'other' → logprob: -12.070064544677734
    9. ' other' → logprob: -12.445064544677734
    10. 'n' → logprob: -12.445064544677734

Token 71: ' =' (ID: 314)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.015957411378622055
    2. 'ivi' → logprob: -4.890957355499268
    3. ' iv' → logprob: -5.890957355499268
    4. 'ivs' → logprob: -6.265957355499268
    5. 'ef' → logprob: -6.640957355499268
    6. 'ivid' → logprob: -7.015957355499268
    7. ' //' → logprob: -8.140957832336426
    8. '//' → logprob: -8.140957832336426
    9. 'e' → logprob: -8.765957832336426
    10. '=' → logprob: -9.015957832336426

Token 72: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004654641728848219
    2. 'n' → logprob: -5.379654407501221
    3. ' ' → logprob: -11.004654884338379
    4. '	n' → logprob: -11.004654884338379
    5. ' ' → logprob: -14.879654884338379
    6. '(n' → logprob: -15.254654884338379
    7. ' н' → logprob: -15.629654884338379
    8. '_n' → logprob: -15.629654884338379
    9. 'int' → logprob: -16.379653930664062
    10. '=n' → logprob: -17.379653930664062

Token 73: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2811812162399292
    2. ' //' → logprob: -1.4061812162399292
    3. ' ' → logprob: -11.281181335449219
    4. ' ' → logprob: -12.031181335449219
    5. '//=' → logprob: -12.656181335449219
    6. ' /' → logprob: -13.156181335449219
    7. '```' → logprob: -13.156181335449219
    8. '/i' → logprob: -13.406181335449219
    9. '/' → logprob: -14.031181335449219
    10. '\/\/' → logprob: -14.656181335449219

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. ' ' → logprob: -17.375059127807617
    4. '   ' → logprob: -18.875059127807617
    5. '	i' → logprob: -19.625059127807617
    6. '  ' → logprob: -19.750059127807617
    7. '<|end|>' → logprob: -20.125059127807617
    8. '(i' → logprob: -22.250059127807617
    9. '    ' → logprob: -22.375059127807617
    10. '           ' → logprob: -22.500059127807617

Token 75: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026093823835253716
    2. 'if' → logprob: -4.15109395980835
    3. ' if' → logprob: -4.65109395980835
    4. '<|end|>' → logprob: -8.276093482971191
    5. '            
' → logprob: -9.776093482971191
    6. '
' → logprob: -10.401093482971191
    7. '```' → logprob: -10.526093482971191
    8. '<|end|>' → logprob: -10.651093482971191
    9. '		' → logprob: -11.401093482971191
    10. 'If' → logprob: -11.776093482971191

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06761053204536438
    2. ' if' → logprob: -3.192610502243042
    3. '            
' → logprob: -4.942610740661621
    4. '<|end|>' → logprob: -5.317610740661621
    5. 'if' → logprob: -5.567610740661621
    6. '
' → logprob: -5.817610740661621
    7. ' ' → logprob: -6.067610740661621
    8. ' 
' → logprob: -6.692610740661621
    9. '            ' → logprob: -7.442610740661621
    10. '<|end|>' → logprob: -8.192610740661621

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6103659272193909
    2. ' if' → logprob: -0.9853659272193909
    3. '           ' → logprob: -2.485365867614746
    4. '<|end|>' → logprob: -9.360365867614746
    5. '            
' → logprob: -9.735365867614746
    6. '            ' → logprob: -10.110365867614746
    7. '```' → logprob: -10.985365867614746
    8. ' ' → logprob: -11.235365867614746
    9. '               ' → logprob: -11.610365867614746
    10. '          ' → logprob: -12.360365867614746

Token 78: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0019735998939722776
    2. 'd' → logprob: -6.251973628997803
    3. ' ' → logprob: -10.251973152160645
    4. ' i' → logprob: -11.626973152160645
    5. ' ' → logprob: -14.751973152160645
    6. 'i' → logprob: -16.12697410583496
    7. '    ' → logprob: -16.62697410583496
    8. '	d' → logprob: -16.62697410583496
    9. '  ' → logprob: -17.50197410583496
    10. '```' → logprob: -18.25197410583496

Token 79: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06198292225599289
    2. '!=' → logprob: -2.8119828701019287
    3. ' ' → logprob: -11.311983108520508
    4. '!==' → logprob: -14.311983108520508
    5. ' and' → logprob: -14.936983108520508
    6. ' !==' → logprob: -15.061983108520508
    7. '()!=' → logprob: -15.061983108520508
    8. ')!=' → logprob: -15.186983108520508
    9. 'and' → logprob: -15.436983108520508
    10. '!=(' → logprob: -15.811983108520508

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040818434208631516
    2. ' i' → logprob: -5.504081726074219
    3. ' ' → logprob: -13.004081726074219
    4. '	i' → logprob: -14.629081726074219
    5. '   ' → logprob: -15.129081726074219
    6. '1' → logprob: -15.379081726074219
    7. '```' → logprob: -16.37908172607422
    8. '  ' → logprob: -16.50408172607422
    9. ' ' → logprob: -17.25408172607422
    10. '    ' → logprob: -17.75408172607422

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17319028079509735
    2. ':
' → logprob: -1.9231902360916138
    3. ' and' → logprob: -4.673190116882324
    4. '               ' → logprob: -5.798190116882324
    5. '           ' → logprob: -7.923190116882324
    6. ':
' → logprob: -10.048190116882324
    7. '):
' → logprob: -11.048190116882324
    8. 'and' → logprob: -11.048190116882324
    9. ',' → logprob: -11.173190116882324
    10. ' :' → logprob: -11.423190116882324

Token 82: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017927512526512146
    2. ' total' → logprob: -6.501792907714844
    3. 'total' → logprob: -8.501792907714844
    4. '           ' → logprob: -10.751792907714844
    5. '(total' → logprob: -10.751792907714844
    6. '<|end|>' → logprob: -11.251792907714844
    7. '                   ' → logprob: -12.001792907714844
    8. ' ' → logprob: -12.376792907714844
    9. '              ' → logprob: -12.626792907714844
    10. ',total' → logprob: -12.876792907714844

Token 83: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0013408389640972018
    2. 'total' (adapté à ' total') → logprob: -6.626340866088867
    3. '                   ' → logprob: -11.626340866088867
    4. '               ' → logprob: -13.126340866088867
    5. '(total' → logprob: -13.376340866088867
    6. '	total' → logprob: -14.126340866088867
    7. '                ' → logprob: -14.876340866088867
    8. '_total' → logprob: -15.001340866088867
    9. ',total' → logprob: -15.501340866088867
    10. ' 
' → logprob: -15.626340866088867

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07890454679727554
    2. '+=' → logprob: -2.578904628753662
    3. '+' → logprob: -12.078904151916504
    4. ' +' → logprob: -12.703904151916504
    5. '            ' → logprob: -13.453904151916504
    6. ']+=' → logprob: -13.828904151916504
    7. '                ' → logprob: -14.203904151916504
    8. ' ' → logprob: -14.203904151916504
    9. '           ' → logprob: -14.453904151916504
    10. '               ' → logprob: -14.703904151916504

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0380416102707386
    2. 'd' → logprob: -3.288041591644287
    3. ' ' → logprob: -15.663042068481445
    4. '	d' → logprob: -16.913042068481445
    5. ' ' → logprob: -17.538042068481445
    6. '_d' → logprob: -19.163042068481445
    7. ')d' → logprob: -19.413042068481445
    8. '(d' → logprob: -19.538042068481445
    9. '    ' → logprob: -21.038042068481445
    10. ')' → logprob: -21.163042068481445

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004345021676272154
    2. 'return' → logprob: -5.629344940185547
    3. '
' → logprob: -7.879344940185547
    4. ' return' → logprob: -8.129344940185547
    5. '    
' → logprob: -9.754344940185547
    6. '```' → logprob: -12.004344940185547
    7. '	return' → logprob: -12.879344940185547
    8. ':return' → logprob: -13.129344940185547
    9. ' ' → logprob: -14.004344940185547
    10. '       ' → logprob: -14.629344940185547

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036003058776259422
    2. '
' → logprob: -6.378600120544434
    3. 'return' → logprob: -6.378600120544434
    4. ' return' → logprob: -8.878600120544434
    5. '    
' → logprob: -9.878600120544434
    6. '	return' → logprob: -12.753600120544434
    7. '       ' → logprob: -13.128600120544434
    8. '```' → logprob: -13.628600120544434
    9. ':return' → logprob: -14.503600120544434
    10. ' ' → logprob: -14.878600120544434

Token 88: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5929213166236877
    2. 'return' (adapté à ' return') → logprob: -0.8429213166236877
    3. ' return' → logprob: -4.092921257019043
    4. '    
' → logprob: -9.842921257019043
    5. '
' → logprob: -9.967921257019043
    6. ' ' → logprob: -10.467921257019043
    7. '```' → logprob: -11.717921257019043
    8. '	return' → logprob: -12.467921257019043
    9. ':return' → logprob: -12.592921257019043
    10. '       ' → logprob: -13.592921257019043

Token 89: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.07889000326395035
    2. 'total' → logprob: -2.578890085220337
    3. '(total' → logprob: -16.203889846801758
    4. ' ' → logprob: -16.578889846801758
    5. '	total' → logprob: -17.203889846801758
    6. ' tot' → logprob: -17.703889846801758
    7. ' tota' → logprob: -17.953889846801758
    8. ' ' → logprob: -18.203889846801758
    9. 'tot' → logprob: -19.203889846801758
    10. 'to' → logprob: -19.578889846801758

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07548275589942932
    2. '<|end|>' → logprob: -3.0754828453063965
    3. '

' → logprob: -4.3254828453063965
    4. 'def' → logprob: -4.5754828453063965
    5. '\n' → logprob: -6.7004828453063965
    6. '```' → logprob: -7.2004828453063965
    7. '\' → logprob: -8.325482368469238
    8. '  
' → logprob: -8.450482368469238
    9. '<|end|>' → logprob: -8.700482368469238
    10. 'n' → logprob: -8.950482368469238

Token 91: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06487518548965454
    2. '
' → logprob: -2.9398751258850098
    3. '

' → logprob: -4.93987512588501
    4. '<|end|>' → logprob: -6.43987512588501
    5. '```' → logprob: -7.43987512588501
    6. '  
' → logprob: -8.814875602722168
    7. '\' → logprob: -9.189875602722168
    8. '    
' → logprob: -9.189875602722168
    9. '<|end|>' → logprob: -9.814875602722168
    10. '
' → logprob: -10.189875602722168

Token 92: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9898637533187866
    2. ' num' → logprob: -0.9898637533187866
    3. ' i' → logprob: -1.4898637533187866
    4. ' number' → logprob: -3.614863872528076
    5. ' ' → logprob: -6.739863872528076
    6. 'n' → logprob: -6.864863872528076
    7. 'num' → logprob: -6.864863872528076
    8. ' x' → logprob: -7.739863872528076
    9. 'i' → logprob: -7.989863872528076
    10. ' _' → logprob: -8.989863395690918

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005296723451465368
    2. 'in' → logprob: -5.25529670715332
    3. ' ' → logprob: -9.75529670715332
    4. '  ' → logprob: -13.75529670715332
    5. '	in' → logprob: -13.88029670715332
    6. '   ' → logprob: -14.88029670715332
    7. '[line' → logprob: -15.25529670715332
    8. ',' → logprob: -15.25529670715332
    9. '```' → logprob: -15.38029670715332
    10. ' i' → logprob: -15.50529670715332

Token 94: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31326571106910706
    2. ' sys' → logprob: -1.3132656812667847
    3. '=sys' → logprob: -13.063265800476074
    4. '	sys' → logprob: -13.438265800476074
    5. '(sys' → logprob: -15.688265800476074
    6. 'stdin' → logprob: -16.188264846801758
    7. ' ' → logprob: -17.813264846801758
    8. 's' → logprob: -18.688264846801758
    9. 'system' → logprob: -19.063264846801758
    10. '```' → logprob: -19.063264846801758

Token 95: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006065295310690999
    2. 'stdin' → logprob: -7.500606536865234
    3. '.' → logprob: -10.750606536865234
    4. '.readline' → logprob: -11.375606536865234
    5. '.stdout' → logprob: -12.000606536865234
    6. '(stdin' → logprob: -12.625606536865234
    7. '.readlines' → logprob: -12.750606536865234
    8. ' stdin' → logprob: -12.750606536865234
    9. 'in' → logprob: -13.750606536865234
    10. 'input' → logprob: -13.875606536865234

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004229766316711903
    2. '.readline' → logprob: -5.754229545593262
    3. '.strip' → logprob: -7.629229545593262
    4. ':
' → logprob: -8.254229545593262
    5. '.readlines' → logprob: -8.379229545593262
    6. '.rstrip' → logprob: -10.254229545593262
    7. 'rstrip' → logprob: -12.129229545593262
    8. '):' → logprob: -12.379229545593262
    9. '<|end|>' → logprob: -12.504229545593262
    10. '.' → logprob: -12.504229545593262

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004551023303065449
    2. '    
' → logprob: -8.000454902648926
    3. 'n' → logprob: -10.125454902648926
    4. ' n' → logprob: -10.625454902648926
    5. '```' → logprob: -11.375454902648926
    6. ' if' → logprob: -12.000454902648926
    7. ',' → logprob: -12.250454902648926
    8. '<|end|>' → logprob: -12.500454902648926
    9. '.strip' → logprob: -12.875454902648926
    10. ':' → logprob: -12.875454902648926

Token 98: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1328287124633789
    2. 'n' → logprob: -2.132828712463379
    3. '   ' → logprob: -5.382828712463379
    4. ' num' → logprob: -7.632828712463379
    5. ' number' → logprob: -7.632828712463379
    6. 'num' → logprob: -8.132828712463379
    7. 'number' → logprob: -11.132828712463379
    8. ' value' → logprob: -12.382828712463379
    9. '    ' → logprob: -13.257828712463379
    10. 'value' → logprob: -13.507828712463379

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009759512729942799
    2. '=' → logprob: -4.634759426116943
    3. '=int' → logprob: -13.259759902954102
    4. ' ' → logprob: -13.384759902954102
    5. ' =
' → logprob: -16.2597599029541
    6. ')' → logprob: -16.7597599029541
    7. '   ' → logprob: -17.0097599029541
    8. ',' → logprob: -17.3847599029541
    9. ' =)' → logprob: -17.7597599029541
    10. '  ' → logprob: -18.2597599029541

Token 100: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2014193832874298
    2. ' int' → logprob: -1.7014193534851074
    3. 'line' → logprob: -13.201419830322266
    4. ' line' → logprob: -13.576419830322266
    5. '   ' → logprob: -13.826419830322266
    6. '=int' → logprob: -13.951419830322266
    7. ' ' → logprob: -14.701419830322266
    8. '(int' → logprob: -15.326419830322266
    9. '<int' → logprob: -16.076419830322266
    10. '    ' → logprob: -16.076419830322266

Token 101: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011705794604495168
    2. '(' → logprob: -6.751170635223389
    3. '=line' → logprob: -16.751171112060547
    4. ' line' → logprob: -16.876171112060547
    5. ' (' → logprob: -17.126171112060547
    6. 'line' → logprob: -17.126171112060547
    7. '[line' → logprob: -17.376171112060547
    8. '(
' → logprob: -17.751171112060547
    9. '(Line' → logprob: -18.001171112060547
    10. '	line' → logprob: -18.376171112060547

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4810976982116699
    2. '.strip' → logprob: -0.9810976982116699
    3. '.rstrip' → logprob: -4.98109769821167
    4. ')
' → logprob: -9.856098175048828
    5. 'rstrip' → logprob: -10.231098175048828
    6. '.readline' → logprob: -11.356098175048828
    7. 'strip' → logprob: -11.856098175048828
    8. ' )' → logprob: -12.356098175048828
    9. ')\' → logprob: -12.606098175048828
    10. '[:-' → logprob: -13.356098175048828

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016453108983114362
    2. '    
' → logprob: -6.876645088195801
    3. ' if' → logprob: -7.876645088195801
    4. 'if' → logprob: -8.8766450881958
    5. '
' → logprob: -10.0016450881958
    6. 'result' → logprob: -11.5016450881958
    7. '<|end|>' → logprob: -12.3766450881958
    8. 'total' → logprob: -12.5016450881958
    9. '```' → logprob: -12.7516450881958
    10. '   
' → logprob: -13.0016450881958

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8466042876243591
    2. 'if' (adapté à ' if') → logprob: -1.346604347229004
    3. '   ' → logprob: -1.846604347229004
    4. ' result' → logprob: -2.721604347229004
    5. 'result' → logprob: -4.096604347229004
    6. ' answer' → logprob: -4.221604347229004
    7. ' s' → logprob: -4.721604347229004
    8. ' count' → logprob: -4.971604347229004
    9. 'answer' → logprob: -4.971604347229004
    10. 's' → logprob: -5.346604347229004

Token 105: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.04258778691291809
    2. 'N' → logprob: -3.5425877571105957
    3. ' sum' → logprob: -4.417587757110596
    4. ' ' → logprob: -7.917587757110596
    5. 'sum' → logprob: -8.167588233947754
    6. ' ' → logprob: -11.542588233947754
    7. '  ' → logprob: -11.667588233947754
    8. ' not' → logprob: -11.667588233947754
    9. ' is' → logprob: -12.792588233947754
    10. ' n' → logprob: -13.292588233947754

Token 106: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2670980989933014
    2. ' >' → logprob: -2.0170981884002686
    3. ' <=' → logprob: -2.7670981884002686
    4. '==' → logprob: -3.8920981884002686
    5. ' <' → logprob: -4.7670979499816895
    6. ' ' → logprob: -5.7670979499816895
    7. ' %' → logprob: -5.8920979499816895
    8. '>' → logprob: -6.0170979499816895
    9. '%' → logprob: -7.5170979499816895
    10. '<=' → logprob: -7.6420979499816895

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020937025547028
    2. ' ' → logprob: -2.3502094745635986
    3. '   ' → logprob: -13.35020923614502
    4. '  ' → logprob: -14.47520923614502
    5. '```' → logprob: -16.350210189819336
    6. ' ' → logprob: -16.475210189819336
    7. '    ' → logprob: -16.662710189819336
    8. '=' → logprob: -17.100210189819336
    9. '۰' → logprob: -17.412710189819336
    10. 's' → logprob: -17.537710189819336

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031790214125066996
    2. ' ' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.753178596496582
    4. '```' → logprob: -15.253178596496582
    5. '  ' → logprob: -15.628178596496582
    6. '-' → logprob: -16.1281795501709
    7. '    ' → logprob: -17.0031795501709
    8. '1' → logprob: -17.1281795501709
    9. ' -' → logprob: -17.5031795501709
    10. '"' → logprob: -17.6281795501709

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018523188307881355
    2. ':
' → logprob: -4.018523216247559
    3. '   ' → logprob: -8.018523216247559
    4. '       ' → logprob: -10.143523216247559
    5. ' :' → logprob: -12.893523216247559
    6. ':
' → logprob: -14.393523216247559
    7. ' :
' → logprob: -14.768523216247559
    8. '    ' → logprob: -15.393523216247559
    9. '.' → logprob: -15.393523216247559
    10. ':

' → logprob: -15.518523216247559

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001979378139367327
    2. '   ' → logprob: -8.625198364257812
    3. ' break' → logprob: -12.000198364257812
    4. '      ' → logprob: -12.500198364257812
    5. '     ' → logprob: -12.625198364257812
    6. '	break' → logprob: -13.500198364257812
    7. '           ' → logprob: -14.000198364257812
    8. ':' → logprob: -14.000198364257812
    9. 'break' → logprob: -14.375198364257812
    10. '    ' → logprob: -14.375198364257812

Token 111: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4426913857460022
    2. 'break' (adapté à ' break') → logprob: -1.1926913261413574
    3. '   ' → logprob: -2.9426913261413574
    4. '       ' → logprob: -6.942691326141357
    5. '	break' → logprob: -7.442691326141357
    6. 'b' → logprob: -12.442691802978516
    7. '    
' → logprob: -12.692691802978516
    8. '```' → logprob: -12.817691802978516
    9. '
' → logprob: -13.567691802978516
    10. 'br' → logprob: -13.817691802978516

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05090973526239395
    2. '    
' → logprob: -3.0509097576141357
    3. '
' → logprob: -6.425909519195557
    4. '<|end|>' → logprob: -8.175909996032715
    5. '```' → logprob: -9.175909996032715
    6. '    ' → logprob: -9.550909996032715
    7. '  
' → logprob: -9.550909996032715
    8. '   
' → logprob: -9.925909996032715
    9. ' 
' → logprob: -10.175909996032715
    10. '     
' → logprob: -11.175909996032715

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021353701129555702
    2. '    
' → logprob: -3.8963537216186523
    3. '
' → logprob: -7.771353721618652
    4. '   
' → logprob: -9.271353721618652
    5. '  
' → logprob: -9.646353721618652
    6. '<|end|>' → logprob: -10.146353721618652
    7. '        
' → logprob: -10.271353721618652
    8. '```' → logprob: -10.396353721618652
    9. '     
' → logprob: -10.521353721618652
    10. ' if' → logprob: -11.021353721618652

Token 114: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4483449459075928
    2. ' if' → logprob: -1.6983449459075928
    3. 'if' → logprob: -2.9483449459075928
    4. ' s' → logprob: -3.0733449459075928
    5. 's' → logprob: -3.8233449459075928
    6. 'sum' → logprob: -4.323345184326172
    7. 'result' → logprob: -4.823345184326172
    8. ' result' → logprob: -5.073345184326172
    9. ' div' → logprob: -5.323345184326172
    10. ' sum' → logprob: -5.323345184326172

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4132594168186188
    2. 'um' → logprob: -1.1632593870162964
    3. '=' → logprob: -3.663259506225586
    4. '_' → logprob: -8.413259506225586
    5. '   ' → logprob: -9.913259506225586
    6. '_sum' → logprob: -10.288259506225586
    7. ' ' → logprob: -10.913259506225586
    8. '=sum' → logprob: -11.413259506225586
    9. '_um' → logprob: -11.788259506225586
    10. 'UM' → logprob: -11.913259506225586

Token 116: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2519323229789734
    2. ' sum' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.876932144165039
    4. '   ' → logprob: -14.251932144165039
    5. '(sum' → logprob: -14.376932144165039
    6. '  ' → logprob: -15.251932144165039
    7. 's' → logprob: -15.501932144165039
    8. '	sum' → logprob: -15.876932144165039
    9. '    ' → logprob: -16.00193214416504
    10. '0' → logprob: -16.12693214416504

Token 117: '_pro' (ID: 4617)
  Prédit: '_pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pro' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.000000953674316
    3. 'proper' → logprob: -15.375000953674316
    4. 'Proper' → logprob: -17.0
    5. '_prof' → logprob: -18.5
    6. '_PRO' → logprob: -19.5
    7. '_per' → logprob: -19.75
    8. '_possible' → logprob: -20.125
    9. '_correct' → logprob: -20.375
    10. 'pro' → logprob: -21.375

Token 118: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0037487715017050505
    2. 'r' → logprob: -6.003748893737793
    3. 'pers' → logprob: -7.003748893737793
    4. 'div' → logprob: -9.753748893737793
    5. '_per' → logprob: -9.753748893737793
    6. 'pr' → logprob: -10.128748893737793
    7. 'rs' → logprob: -10.628748893737793
    8. '   ' → logprob: -10.878748893737793
    9. 'rt' → logprob: -11.003748893737793
    10. 'perl' → logprob: -11.253748893737793

Token 119: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -8.304016228066757e-05
    2. '_' → logprob: -9.750082969665527
    3. 'div' → logprob: -10.750082969665527
    4. '_def' → logprob: -13.625082969665527
    5. '_pro' → logprob: -14.500082969665527
    6. ' _' → logprob: -14.625082969665527
    7. '_DIV' → logprob: -15.250082969665527
    8. ' divis' → logprob: -15.375082969665527
    9. '_del' → logprob: -16.750083923339844
    10. '_dist' → logprob: -17.375083923339844

Token 120: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.006019568536430597
    2. 's' → logprob: -5.381019592285156
    3. 'ors' → logprob: -6.756019592285156
    4. 'itors' → logprob: -9.381019592285156
    5. 'istors' → logprob: -10.256019592285156
    6. 'iors' → logprob: -10.631019592285156
    7. 'ectors' → logprob: -10.881019592285156
    8. 'isor' → logprob: -11.756019592285156
    9. ' divis' → logprob: -11.756019592285156
    10. 'div' → logprob: -11.881019592285156

Token 121: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.62500286102295
    3. 'tors' → logprob: -13.87500286102295
    4. 'or' → logprob: -16.250001907348633
    5. 'vors' → logprob: -17.125001907348633
    6. 'orsa' → logprob: -17.500001907348633
    7. 'rors' → logprob: -17.875001907348633
    8. 'o' → logprob: -18.625001907348633
    9. 'ators' → logprob: -18.750001907348633
    10. '[' → logprob: -18.750001907348633

Token 122: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0068171969614923
    2. '(' → logprob: -5.00681734085083
    3. '(S' → logprob: -9.256816864013672
    4. '(
' → logprob: -12.631816864013672
    5. '(n' → logprob: -13.256816864013672
    6. ' (' → logprob: -13.631816864013672
    7. '(

' → logprob: -17.381816864013672
    8. ' ' → logprob: -17.631816864013672
    9. '(M' → logprob: -17.881816864013672
    10. '((' → logprob: -18.006816864013672

Token 123: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2040718048810959
    2. ')' → logprob: -1.7040717601776123
    3. '   ' → logprob: -6.079071998596191
    4. '()
' → logprob: -9.079071998596191
    5. ')
' → logprob: -9.204071998596191
    6. '()' → logprob: -9.704071998596191
    7. 'if' → logprob: -10.079071998596191
    8. 'print' → logprob: -11.204071998596191
    9. ' if' → logprob: -11.579071998596191
    10. '
' → logprob: -11.954071998596191

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008802578668110073
    2. '
' → logprob: -7.500880241394043
    3. ' if' → logprob: -8.875880241394043
    4. '    
' → logprob: -9.375880241394043
    5. 'if' → logprob: -9.750880241394043
    6. '<|end|>' → logprob: -11.000880241394043
    7. 'print' → logprob: -11.750880241394043
    8. '  
' → logprob: -12.500880241394043
    9. '```' → logprob: -12.625880241394043
    10. '	if' → logprob: -12.875880241394043

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16363124549388885
    2. 'print' → logprob: -1.9136312007904053
    3. '   ' → logprob: -6.413631439208984
    4. ' if' → logprob: -6.413631439208984
    5. ' print' → logprob: -9.538631439208984
    6. 'result' → logprob: -10.913631439208984
    7. 'output' → logprob: -11.413631439208984
    8. '    
' → logprob: -11.788631439208984
    9. ' ' → logprob: -12.538631439208984
    10. 'for' → logprob: -13.413631439208984

Token 126: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.004198663402348757
    2. 'S' → logprob: -5.5041985511779785
    3. ' ' → logprob: -9.254199028015137
    4. ' N' → logprob: -10.879199028015137
    5. ' ' → logprob: -12.379199028015137
    6. '    ' → logprob: -14.129199028015137
    7. 'N' → logprob: -15.879199028015137
    8. ' s' → logprob: -15.879199028015137
    9. '  ' → logprob: -16.12919807434082
    10. '_S' → logprob: -16.50419807434082

Token 127: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4288943111896515
    2. '==' → logprob: -1.053894281387329
    3. '>' → logprob: -9.80389404296875
    4. ' <' → logprob: -10.17889404296875
    5. ' >' → logprob: -10.67889404296875
    6. '=' → logprob: -10.92889404296875
    7. '<' → logprob: -11.05389404296875
    8. ' !=' → logprob: -11.05389404296875
    9. '!=' → logprob: -11.30389404296875
    10. ' ' → logprob: -11.92889404296875

Token 128: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.029814716428518295
    2. ' S' → logprob: -3.5298147201538086
    3. ' ' → logprob: -9.904814720153809
    4. '1' → logprob: -11.904814720153809
    5. 's' → logprob: -12.904814720153809
    6. '   ' → logprob: -13.154814720153809
    7. '  ' → logprob: -13.529814720153809
    8. '	S' → logprob: -15.029814720153809
    9. '    ' → logprob: -15.154814720153809
    10. '0' → logprob: -15.279814720153809

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02397049404680729
    2. ' and' → logprob: -3.773970603942871
    3. ' :' → logprob: -8.023970603942871
    4. ':
' → logprob: -8.398970603942871
    5. 'and' → logprob: -8.773970603942871
    6. '   ' → logprob: -11.148970603942871
    7. ',' → logprob: -14.273970603942871
    8. '.' → logprob: -14.898970603942871
    9. ' :
' → logprob: -15.023970603942871
    10. ' ' → logprob: -15.648970603942871

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08142515271902084
    2. ':' → logprob: -3.081425189971924
    3. '   ' → logprob: -3.581425189971924
    4. ':
' → logprob: -5.706425189971924
    5. ' and' → logprob: -7.331425189971924
    6. ' :' → logprob: -8.831424713134766
    7. '    ' → logprob: -9.956424713134766
    8. ' :
' → logprob: -10.206424713134766
    9. 'print' → logprob: -10.456424713134766
    10. '        
' → logprob: -10.581424713134766

Token 131: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7719084024429321
    2. '   ' → logprob: -1.1469084024429321
    3. 'print' (adapté à ' print') → logprob: -1.5219084024429321
    4. '       ' → logprob: -6.271908283233643
    5. ' ' → logprob: -11.0219087600708
    6. '	print' → logprob: -11.0219087600708
    7. '  ' → logprob: -11.6469087600708
    8. '
' → logprob: -11.6469087600708
    9. '    ' → logprob: -12.0219087600708
    10. '```' → logprob: -12.8969087600708

Token 132: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10819357633590698
    2. '(f' → logprob: -2.3581936359405518
    3. '(' → logprob: -5.358193397521973
    4. '(N' → logprob: -5.858193397521973
    5. '('' → logprob: -7.983193397521973
    6. '"' → logprob: -11.483193397521973
    7. '"N' → logprob: -11.608193397521973
    8. '(F' → logprob: -11.983193397521973
    9. '()' → logprob: -12.233193397521973
    10. 'f' → logprob: -12.733193397521973

Token 133: 'perfect' (ID: 97534)
  Prédit: 'PER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PER' → logprob: -0.7482852339744568
    2. 'perfect' → logprob: -1.9982852935791016
    3. '{}' → logprob: -2.2482852935791016
    4. '"' → logprob: -2.2482852935791016
    5. '   ' → logprob: -2.4982852935791016
    6. '{' → logprob: -3.4982852935791016
    7. 'Perfect' → logprob: -3.6232852935791016
    8. ' ' → logprob: -4.748285293579102
    9. 'per' → logprob: -4.998285293579102
    10. 'True' → logprob: -5.248285293579102

Token 134: ' number' (ID: 2086)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000365855434210971
    2. ' number' → logprob: -8.2503662109375
    3. '")
' → logprob: -9.2503662109375
    4. ' ")' → logprob: -12.8753662109375
    5. 'number' → logprob: -12.8753662109375
    6. '"' → logprob: -13.7503662109375
    7. ')' → logprob: -14.1253662109375
    8. '")
' → logprob: -14.6253662109375
    9. '\n' → logprob: -15.1253662109375
    10. '')' → logprob: -15.6253662109375

Token 135: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005372133571654558
    2. ')' → logprob: -5.380372047424316
    3. '"' → logprob: -7.505372047424316
    4. 's' → logprob: -9.255372047424316
    5. '")
' → logprob: -9.755372047424316
    6. '!")' → logprob: -10.880372047424316
    7. ')")' → logprob: -11.755372047424316
    8. ':' → logprob: -12.380372047424316
    9. '!' → logprob: -12.880372047424316
    10. '.")' → logprob: -12.880372047424316

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043472214019857347
    2. 'elif' → logprob: -8.000434875488281
    3. ' elif' → logprob: -9.500434875488281
    4. '<|end|>' → logprob: -11.500434875488281
    5. 'else' → logprob: -12.250434875488281
    6. ' else' → logprob: -12.500434875488281
    7. '    
' → logprob: -12.875434875488281
    8. ',' → logprob: -14.125434875488281
    9. '	elif' → logprob: -14.125434875488281
    10. '
' → logprob: -14.375434875488281

Token 137: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2616965174674988
    2. 'elif' (adapté à ' elif') → logprob: -1.5116965770721436
    3. ' elif' → logprob: -4.6366963386535645
    4. 'else' → logprob: -11.011696815490723
    5. '	elif' → logprob: -11.761696815490723
    6. ',' → logprob: -13.261696815490723
    7. ' else' → logprob: -13.511696815490723
    8. '.' → logprob: -14.261696815490723
    9. '  ' → logprob: -14.511696815490723
    10. ')' → logprob: -14.636696815490723

Token 138: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.0055352449417114
    2. ' S' → logprob: -1.2555352449417114
    3. 'N' → logprob: -1.6305352449417114
    4. 'S' → logprob: -1.8805352449417114
    5. ' ' → logprob: -7.255535125732422
    6. ' abs' → logprob: -9.755535125732422
    7. 'abs' → logprob: -9.880535125732422
    8. '   ' → logprob: -10.380535125732422
    9. '  ' → logprob: -11.005535125732422
    10. 's' → logprob: -12.443035125732422

Token 139: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11420882493257523
    2. ' >' → logprob: -2.489208936691284
    3. '<' → logprob: -3.989208936691284
    4. '>' → logprob: -5.114208698272705
    5. ' ' → logprob: -7.989208698272705
    6. '%' → logprob: -10.864209175109863
    7. ' %' → logprob: -11.114209175109863
    8. 'and' → logprob: -11.864209175109863
    9. ' ==' → logprob: -11.989209175109863
    10. 's' → logprob: -12.114209175109863

Token 140: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0059424289502203465
    2. ' S' → logprob: -5.130942344665527
    3. 's' → logprob: -11.630942344665527
    4. '0' → logprob: -13.255942344665527
    5. ' ' → logprob: -13.255942344665527
    6. '   ' → logprob: -14.630942344665527
    7. '	S' → logprob: -15.255942344665527
    8. '>S' → logprob: -15.505942344665527
    9. '_S' → logprob: -16.005943298339844
    10. '  ' → logprob: -16.130943298339844

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19346658885478973
    2. ':
' → logprob: -2.0684666633605957
    3. ' and' → logprob: -3.3184666633605957
    4. '       ' → logprob: -4.693466663360596
    5. 'and' → logprob: -6.193466663360596
    6. '   ' → logprob: -6.193466663360596
    7. '=' → logprob: -11.193466186523438
    8. 'print' → logprob: -11.568466186523438
    9. ' :' → logprob: -11.568466186523438
    10. ':
' → logprob: -11.693466186523438

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037221689708530903
    2. ':
' → logprob: -6.378722190856934
    3. '   ' → logprob: -6.878722190856934
    4. ':' → logprob: -7.003722190856934
    5. 'print' → logprob: -9.878722190856934
    6. ' print' → logprob: -12.128722190856934
    7. '     ' → logprob: -12.628722190856934
    8. ',' → logprob: -12.753722190856934
    9. '      ' → logprob: -13.003722190856934
    10. '):
' → logprob: -13.128722190856934

Token 143: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.28401947021484375
    2. 'print' (adapté à ' print') → logprob: -1.4090194702148438
    3. '       ' → logprob: -6.409019470214844
    4. '   ' → logprob: -6.784019470214844
    5. ' ' → logprob: -10.409019470214844
    6. '	print' → logprob: -10.784019470214844
    7. '    ' → logprob: -11.909019470214844
    8. '  ' → logprob: -12.034019470214844
    9. '"' → logprob: -12.159019470214844
    10. '.print' → logprob: -12.534019470214844

Token 144: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00014048899174667895
    2. '(' → logprob: -8.875140190124512
    3. '"' → logprob: -16.000141143798828
    4. ' ("' → logprob: -16.000141143798828
    5. '('' → logprob: -16.125141143798828
    6. '("("' → logprob: -16.125141143798828
    7. '("(' → logprob: -16.250141143798828
    8. '("")' → logprob: -18.625141143798828
    9. '(":' → logprob: -19.375141143798828
    10. '(
' → logprob: -19.625141143798828

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2520729601383209
    2. '"' → logprob: -1.5020729303359985
    3. 'ab' → logprob: -9.627073287963867
    4. 'not' → logprob: -10.127073287963867
    5. ' deficient' → logprob: -11.252073287963867
    6. '   ' → logprob: -12.252073287963867
    7. 'perfect' → logprob: -12.502073287963867
    8. '"d' → logprob: -13.252073287963867
    9. '“' → logprob: -13.252073287963867
    10. ''' → logprob: -13.377073287963867

Token 146: 'icient' (ID: 6995)
  Prédit: 'icient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icient' → logprob: -0.00012582694762386382
    2. 'ic' → logprob: -9.625125885009766
    3. 'iciency' → logprob: -9.875125885009766
    4. '```' → logprob: -13.125125885009766
    5. 'iciente' → logprob: -13.250125885009766
    6. 'icit' → logprob: -13.375125885009766
    7. 'icent' → logprob: -13.875125885009766
    8. 'icients' → logprob: -14.125125885009766
    9. 'ective' → logprob: -14.750125885009766
    10. 'ici' → logprob: -15.375125885009766

Token 147: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.002174647059291601
    2. 'number' → logprob: -6.2521748542785645
    3. ' ' → logprob: -8.377174377441406
    4. '_number' → logprob: -12.127174377441406
    5. ')' → logprob: -12.502174377441406
    6. ' ' → logprob: -13.377174377441406
    7. '	number' → logprob: -13.627174377441406
    8. 'umber' → logprob: -14.002174377441406
    9. ' amount' → logprob: -14.252174377441406
    10. '  ' → logprob: -14.502174377441406

Token 148: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000351670227246359
    2. '")
' → logprob: -8.000351905822754
    3. ' ")' → logprob: -11.625351905822754
    4. ')' → logprob: -12.750351905822754
    5. '"' → logprob: -12.875351905822754
    6. 's' → logprob: -14.625351905822754
    7. '")
' → logprob: -15.250351905822754
    8. '')' → logprob: -15.250351905822754
    9. 'else' → logprob: -15.625351905822754
    10. '()' → logprob: -15.625351905822754

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034103665966540575
    2. 'else' → logprob: -5.753410339355469
    3. ' else' → logprob: -8.503410339355469
    4. 'elif' → logprob: -10.503410339355469
    5. '	else' → logprob: -13.878410339355469
    6. ' elif' → logprob: -14.378410339355469
    7. '    
' → logprob: -14.628410339355469
    8. '   ' → logprob: -16.00341033935547
    9. '```' → logprob: -16.12841033935547
    10. '	elif' → logprob: -16.25341033935547

Token 150: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10400699079036713
    2. 'else' (adapté à ' else') → logprob: -2.3540070056915283
    3. ' else' → logprob: -5.604006767272949
    4. 'elif' → logprob: -9.22900676727295
    5. '	else' → logprob: -11.72900676727295
    6. ' elif' → logprob: -13.35400676727295
    7. '  ' → logprob: -14.47900676727295
    8. '    
' → logprob: -14.97900676727295
    9. '_else' → logprob: -15.10400676727295
    10. '<|end|>' → logprob: -15.47900676727295

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16307491064071655
    2. ':
' → logprob: -1.9130749702453613
    3. '       ' → logprob: -6.163074970245361
    4. '   ' → logprob: -7.288074970245361
    5. 'print' → logprob: -10.663074493408203
    6. ':
' → logprob: -11.663074493408203
    7. ' :' → logprob: -12.038074493408203
    8. ' :
' → logprob: -12.288074493408203
    9. '    ' → logprob: -12.663074493408203
    10. '{' → logprob: -13.038074493408203

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008773869834840298
    2. '   ' → logprob: -4.8837738037109375
    3. 'print' → logprob: -6.8837738037109375
    4. ' print' → logprob: -8.883773803710938
    5. '      ' → logprob: -14.133773803710938
    6. '           ' → logprob: -14.133773803710938
    7. '     ' → logprob: -14.133773803710938
    8. '	print' → logprob: -14.633773803710938
    9. '    ' → logprob: -14.758773803710938
    10. '```' → logprob: -15.258773803710938

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023649787530303
    2. ' print' → logprob: -4.1486496925354
    3. '       ' → logprob: -4.8986496925354
    4. '   ' → logprob: -9.023650169372559
    5. '	print' → logprob: -12.148650169372559
    6. ' ' → logprob: -13.398650169372559
    7. '```' → logprob: -14.648650169372559
    8. '        ' → logprob: -14.898650169372559
    9. '           ' → logprob: -15.023650169372559
    10. '      ' → logprob: -15.273650169372559

Token 154: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. '("("' → logprob: -16.001171112060547
    4. '"' → logprob: -16.126171112060547
    5. '(
' → logprob: -17.126171112060547
    6. '('' → logprob: -17.876171112060547
    7. '(""' → logprob: -19.126171112060547
    8. '("(' → logprob: -19.376171112060547
    9. '("")' → logprob: -20.126171112060547
    10. ' ("' → logprob: -20.126171112060547

Token 155: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0015900811413303018
    2. '"' → logprob: -6.501590251922607
    3. ' abundant' → logprob: -9.75158977508545
    4. ''ab' → logprob: -10.87658977508545
    5. '   ' → logprob: -12.12658977508545
    6. 'amic' → logprob: -12.62658977508545
    7. '(ab' → logprob: -15.00158977508545
    8. ' ' → logprob: -15.00158977508545
    9. 'Ab' → logprob: -15.50158977508545
    10. 'ex' → logprob: -15.62658977508545

Token 156: 'undant' (ID: 170136)
  Prédit: 'undant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'undant' → logprob: -0.0011945136357098818
    2. 'und' → logprob: -6.751194477081299
    3. 'undance' → logprob: -10.751194953918457
    4. 'un' → logprob: -13.501194953918457
    5. 'ud' → logprob: -14.626194953918457
    6. 'undan' → logprob: -15.001194953918457
    7. '[' → logprob: -15.876194953918457
    8. '   ' → logprob: -16.50119400024414
    9. '(' → logprob: -16.50119400024414
    10. 'normal' → logprob: -16.62619400024414

Token 157: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.005243479739874601
    2. 'number' → logprob: -5.255243301391602
    3. ' ' → logprob: -12.130243301391602
    4. ' ' → logprob: -13.005243301391602
    5. '	number' → logprob: -14.130243301391602
    6. ')' → logprob: -14.630243301391602
    7. '_number' → logprob: -14.755243301391602
    8. 'umber' → logprob: -15.255243301391602
    9. '(number' → logprob: -16.5052433013916
    10. '_' → logprob: -17.1302433013916

Token 158: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16042102873325348
    2. ')' → logprob: -1.9104210138320923
    3. ')")' → logprob: -8.785421371459961
    4. '")
' → logprob: -10.660421371459961
    5. '')' → logprob: -11.535421371459961
    6. ')
' → logprob: -11.785421371459961
    7. '"' → logprob: -13.910421371459961
    8. '`)' → logprob: -14.660421371459961
    9. '```' → logprob: -14.660421371459961
    10. '()' → logprob: -14.785421371459961


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 156
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 145
Précision stricte (1ère position): 57.05%
Précision adaptée (1ère position): 58.97%
Précision (top 10): 92.95%
================================================================================
