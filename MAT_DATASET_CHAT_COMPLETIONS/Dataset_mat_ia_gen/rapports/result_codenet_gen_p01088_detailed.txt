================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Problème détaillé : Collecter le maximum de pièces de 500-yen en achetant au plus un souvenir dans chaque magasin,
# dans l'ordre, avec la contrainte d'utiliser des billets de 1000-yen en nombre illimité, et les pièces reçues comme monnaie.
# On veut maximiser le nombre de pièces de 500-yen obtenues, puis minimiser la dépense totale pour ce maximum.

# Approche proposée :
# On utilise une approche de programmation dynamique (DP).
# États DP : à l'étape i (magasin i),
# on mémorise pour chaque nombre de pièces 500-yen en sa possession et les pièces (1,5,10,50,100) détenues,
# la dépense minimale pour arriver à cet état.
#
# Difficulté : 
# Les pièces 1,5,10,50,100 peuvent être en quantité variable, mais neutrement gérables car les montants max = 5000,
# donc les pièces max sont limitées.
#
# Simplification :
# Pour gérer efficacement l'état, on soupçonne que pour éviter explosion d'états,
# on ne mémorise que la quantité de pièces 500-yen possédées + la "configuration" des pièces (1,5,10,50,100).
# Seulement 500-yen et pièces faciales inférieures.
#
# Comme on ne peut pas avoir plus de 10 pièces de chaque sorte (car montant max 5000 yen),
# on limite les nombres max de pièces dans l'état.
#
# Implémentation principale :
# - Pour chaque magasin,
#   on tente 2 options :
#     - ne pas acheter (état inchangé, despense inchangée)
#     - acheter une pièce :
#       - On essaie tous les montants à verser possibles, concoctant la monnaie versée (bill+pièces)
#         telle que montant donné - prix = monnaie rendue contenant une ou plusieurs pièces 500-yen.
#       - On simule la transaction de pièces (enlever les pièces données, ajouter celles reçues).
#       - On met à jour le DP avec le nombre de pièces 500-yen total et la dépense.
#
# Optimisations possibles :
# - On "compresse" l'état des pièces en un tuple, on évite doublons.
# - On réduit la recherche des montants donnés en utilisant la nature des pièces et billets.
# - On limite la taille des états gardés pour éviter explosion.

import sys
import collections

# Pièces en circulation (autres que 500, 1000)
COIN_TYPES = [1, 5, 10, 50, 100]
MAX_COINS = [4, 4, 4, 4, 10]  # max pièces estimées raisonnables par type pour limiter les états

def make_change_min_coins(amount):
    # Retourne la distribution pour rendre le montant donné (change) avec le moins de pièces/billets
    # possible, en utilisant les pièces/billets : 1000, 500, 100, 50, 10, 5, 1
    # Sera utilisée pour calculer la monnaie rendue avec la devise japonaise
    res = {1000:0, 500:0, 100:0, 50:0, 10:0, 5:0, 1:0}
    for coin in [1000, 500, 100, 50, 10, 5, 1]:
        res[coin], amount = divmod(amount, coin)
    return res

def coins_to_list(coins_dict):
    # Retourne une liste du nombre de pièces dans l'ordre de COIN_TYPES
    return [coins_dict.get(c,0) for c in COIN_TYPES]

def list_to_coins(lst):
    # Transforme une liste [n1,n5,n10,n50,n100] en dictionnaire {valeur: nombre}
    return {c:n for c,n in zip(COIN_TYPES,lst)}

def coins_add(a, b):
    # Additionne 2 listes de pièces
    return [x+y for x,y in zip(a,b)]

def coins_sub(a,b):
    # Soustrait b de a pour des listes de pièces, renvoie None si b> a en quelconque pièce
    res = []
    for x,y in zip(a,b):
        if y > x:
            return None
        res.append(x-y)
    return res

def coins_count_500(coins_dict):
    # Nombre de pièces 500 dans un dictionnaire, sinon 0
    return coins_dict.get(500,0)

def coins_dict_to_tuple(coins_dict):
    # Retourne un tuple (c1,c5,c10,c50,c100) pour état
    return tuple(coins_to_list(coins_dict))

def coins_tuple_to_dict(tpl):
    return {c:n for c,n in zip(COIN_TYPES,tpl)}

def add_coins_dict(a,b):
    # addition deux dict de pièces
    res = a.copy()
    for k,v in b.items():
        res[k] = res.get(k,0)+v
    return res

def sub_coins_dict(a,b):
    # soustrait b de a dict, None si impossible
    res = a.copy()
    for k,v in b.items():
        if res.get(k,0) < v:
            return None
        res[k] = res.get(k,0) - v
    # Nettoyage clés à 0
    keys_to_del = [k for k,v in res.items() if v==0]
    for k in keys_to_del:
        del res[k]
    return res

def coins_tuple_is_valid(tpl):
    # Vérifie que les pièces dans tpl ne dépassent pas le max raisonnable pour éviter explosion d'états
    for i, n in enumerate(tpl):
        if n > MAX_COINS[i]:
            return False
    return True

def num_500_in_coins(coins_dict):
    return coins_dict.get(500, 0)

def dp_solution(prices):
    n = len(prices)

    # Etat DP : dictionnaire {(nombre pieces 500, pieces tuple (c1,c5,c10,c50,c100)) : dépense minimale}
    # Initial : 0 pieces 500, pas de pièces, dépense 0
    from collections import defaultdict
    dp = defaultdict(lambda: float('inf'))
    dp[(0, (0,0,0,0,0))] = 0

    for idx, price in enumerate(prices, start=1):
        ndp = defaultdict(lambda: float('inf'))
        # Pour chaque état actuel
        for (num_500, coins_tpl), expense in dp.items():
            # Option 1 : ne pas acheter dans ce magasin -> état inchangé
            if ndp[(num_500, coins_tpl)] > expense:
                ndp[(num_500, coins_tpl)] = expense

            # Option 2 : acheter à ce magasin
            # On doit envisager tous sommes à payer >= prix
            # montant donné = x, x >= price
            # x - price = change à recevoir
            #
            # Pour réduire l'espace de recherche :
            # Il doit y avoir au moins 1 pièce 500 dans la monnaie rendue (change),
            # sinon pas intérêt d'acheter dans ce magasin.
            # De plus, on essaie plusieurs montants donnés x, en minimisant le paiement total par magasin
            #
            # On utilise les pièces disponibles (coins_tpl) + billets illimités (1000 yens)
            # pour composer le montant donné.

            # Convert coin tuple en dict
            coins_dict = coins_tuple_to_dict(coins_tpl)

            # max montant donné considéré : price + 1000 (paiement par 1 billet 1000 + pas trop énorme)
            # On peut aller jusqu'à price + 1000 (car changer plus n'a aucun sens)
            # Par ailleurs, on peut tester les montants donnés avec 1000 yens multiples:
            # On testera x = price ... price + 1000

            for pay in range(price, price + 1001):
                change = pay - price
                # Obtenir le rendu minimal de monnaie pour change
                change_coins = make_change_min_coins(change)
                # Si pas de pièces 500 retournées -> pas intéressant
                if change_coins[500] == 0:
                    continue

                # On veut retirer les pièces données pour payer pay
                # montants payés peuvent utiliser:
                # - autant de billets 1000 qu'on veut
                # - et les pièces (1,5,10,50,100) en possession

                # Montant à payer : pay
                # Calcul nombre billets 1000 nécessaires :
                num_1000_needed = pay // 1000
                rest_pay = pay % 1000

                # Pour payer rest_pay, on doit utiliser des pièces en main
                # On doit trouver si on peut composer rest_pay avec les pièces en main

                # Problème : on peut utiliser un nombre quelconque de pièces qu'on détient
                # On doit vérifier si l'on peut composer rest_pay avec pièces en main
                # On essaye de prendre pièces pour la partie rest_pay

                # Solution pour vérifier composition :
                # On fait un recherche de pièces possible pour rest_pay
                # Double contrainte sur nombre de pièces max : denotes qu'on utilise pas trop pièces
                # mais ici on cherche juste composabilité.

                # On fait un simple backtrack / DP pour vérifier si rest_pay peut être payé avec les pièces en main

                # Convert coins_dict à simple liste (index coef)
                avail_coins = []
                for c in COIN_TYPES:
                    avail_coins.append(coins_dict.get(c, 0))

                # DP pour composabilité rest_pay en utilisant les pièces disponibles
                # pièce unité et quantités limitées

                can_pay = False
                def can_make_money(i, amount):
                    # i : pièce index dans COIN_TYPES
                    # amount : montant à réaliser

                    # DP mémorisation (on la fera iterative)
                    memo = {}
                    stack = [(i, amount)]
                    while stack:
                        i, amount = stack.pop()
                        key = (i, amount)
                        if key in memo:
                            continue
                        if amount == 0:
                            memo[key] = True
                            continue
                        if i == len(COIN_TYPES):
                            memo[key] = False
                            continue
                        max_use = min(avail_coins[i], amount // COIN_TYPES[i])
                        # On essaiera d'utiliser 0..max_use pièces
                        possible = False
                        for use in range(max_use+1):
                            next_key = (i+1, amount - COIN_TYPES[i]*use)
                            if next_key in memo:
                                if memo[next_key]:
                                    possible = True
                                    break
                            else:
                                stack.append(next_key)
                        memo[key] = possible
                    return memo.get((0, rest_pay), False)

                # Pour éviter coût important, on utilise un simple DP bottom-up :

                dp_can = [False]*(rest_pay+1)
                dp_can[0] = True
                for ci, cval in enumerate(COIN_TYPES):
                    maxcount = avail_coins[ci]
                    for _ in range(maxcount):
                        for v in range(rest_pay - cval, -1, -1):
                            if dp_can[v]:
                                dp_can[v+cval] = True
                can_pay = dp_can[rest_pay]

                if not can_pay:
                    continue

                # Si on peut payer pay :
                # On enlève les pièces utilisées pour payer rest_pay (exact)
                # On ajoute les pièces de la monnaie rendue (change_coins)

                # Pour enlever pièces utilisées :
                # On doit trouver une combinaison d'utilisation des pièces pour rest_pay.
                # On récupère une combination avec technique DP arrière.

                # On refait DP avec trace :

                dp_track = [None]*(rest_pay+1)
                dp_track[0] = [0]*len(COIN_TYPES)
                for ci, cval in enumerate(COIN_TYPES):
                    maxcount = avail_coins[ci]
                    for _ in range(maxcount):
                        for v in range(rest_pay - cval, -1, -1):
                            if dp_track[v] is not None:
                                if dp_track[v + cval] is None:
                                    dp_track[v + cval] = dp_track[v][:]  # copie
                                    dp_track[v + cval][ci] +=1

                used_coins = dp_track[rest_pay]
                if used_coins is None:
                    continue  # impossible mais déjà testé

                # On calcule les nouvelles pièces après paiement et rendu monnaie
                new_coins_list = []
                # Pieces en main - utilisés + rendu monnaie (sauf pièces 500 yen rendues! Car 500 yen revient en pièce importante)
                # Ici, la monnaie rendue contient pièces 500 yen, qu'on doit ajouter à notre compte.

                for i,count in enumerate(avail_coins):
                    new_coins_list.append(count - used_coins[i])
                # Ajout pièces rendues (1,5,10,50,100) + pièces 500 yen (nombre)
                # moedas rendue en dict change_coins

                for i, c in enumerate(COIN_TYPES):
                    new_coins_list[i] += change_coins.get(c, 0)
                new_500_count = num_500 + change_coins.get(500, 0)

                # On vérifie validité de l'état (pas trop de pièces pour empêcher explosion)
                new_coins_tpl = tuple(new_coins_list)
                if not coins_tuple_is_valid(new_coins_tpl):
                    continue

                # Calcul de la dépense totale = expense + pay
                new_expense = expense + pay

                key = (new_500_count, new_coins_tpl)
                if ndp[key] > new_expense:
                    ndp[key] = new_expense

        # Nouvel état
        dp = ndp

    # Après tous magasins
    # Trouver max nombre pièces 500, puis la dépense minimale associée
    max_500 = max(k[0] for k in dp.keys())
    min_expense = min(v for (c500, _), v in dp.items() if c500 == max_500)
    return max_500, min_expense

def main():
    input = sys.stdin.readline
    while True:
        n = int(input())
        if n == 0:
            break
        prices = []
        for _ in range(n):
            prices.append(int(input()))
        c, s = dp_solution(prices)
        print(c, s)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pro' (ID: 1258)
  → Token d'amorce (pas de prédiction)

Token 2: 'bl' (ID: 1751)
  → Token d'amorce (pas de prédiction)

Token 3: 'ème' (ID: 9767)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'em' → logprob: -2.3319124011322856e-05
    2. 'e' → logprob: -11.375022888183594
    3. 'ем' → logprob: -11.625022888183594
    4. '#' → logprob: -13.625022888183594
    5. '```' → logprob: -14.625022888183594
    6. 'ema' → logprob: -15.000022888183594
    7. 'eem' → logprob: -15.375022888183594
    8. 'ems' → logprob: -15.625022888183594
    9. 'eam' → logprob: -16.750022888183594
    10. 'lem' → logprob: -17.250022888183594

Token 4: ' déta' (ID: 99673)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4344061613082886
    2. ' :' → logprob: -1.1844061613082886
    3. ' ' → logprob: -3.559406280517578
    4. '```' → logprob: -4.934406280517578
    5. ' de' → logprob: -5.934406280517578
    6. 's' → logprob: -6.434406280517578
    7. '_' → logprob: -6.809406280517578
    8. '`' → logprob: -7.184406280517578
    9. '#' → logprob: -7.434406280517578
    10. ' ' → logprob: -7.934406280517578

Token 5: 'illé' (ID: 49623)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006629993673413992
    2. 'me' → logprob: -5.881629943847656
    3. '`' → logprob: -6.506629943847656
    4. '#' → logprob: -6.756629943847656
    5. '```' → logprob: -7.756629943847656
    6. 'м' → logprob: -8.756629943847656
    7. '̀' → logprob: -9.006629943847656
    8. 'ème' → logprob: -9.631629943847656
    9. 'u' → logprob: -9.756629943847656
    10. 'è' → logprob: -9.881629943847656

Token 6: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2879382371902466
    2. ' :' → logprob: -1.6629382371902466
    3. '\n' → logprob: -3.787938117980957
    4. '#' → logprob: -3.912938117980957
    5. '```' → logprob: -4.662938117980957
    6. '\' → logprob: -5.537938117980957
    7. 's' → logprob: -6.787938117980957
    8. '<|end|>' → logprob: -7.537938117980957
    9. ' ' → logprob: -8.037938117980957
    10. '
' → logprob: -8.037938117980957

Token 7: ' Collect' (ID: 30483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3861123025417328
    2. ' ' → logprob: -1.5111123323440552
    3. '\n' → logprob: -3.7611122131347656
    4. ' #' → logprob: -3.8861122131347656
    5. ' :' → logprob: -4.636112213134766
    6. ':' → logprob: -4.886112213134766
    7. ' 
' → logprob: -5.011112213134766
    8. '\' → logprob: -5.011112213134766
    9. '```' → logprob: -5.011112213134766
    10. '  
' → logprob: -5.136112213134766

Token 8: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03434718772768974
    2. 'er' → logprob: -3.4093472957611084
    3. 'ion' → logprob: -7.409347057342529
    4. '_' → logprob: -10.909347534179688
    5. '#' → logprob: -11.159347534179688
    6. 'é' → logprob: -11.284347534179688
    7. 'ing' → logprob: -11.534347534179688
    8. ' e' → logprob: -11.784347534179688
    9. 'ions' → logprob: -11.909347534179688
    10. 'es' → logprob: -12.034347534179688

Token 9: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5154858231544495
    2. '_' → logprob: -1.0154857635498047
    3. ' des' → logprob: -3.5154857635498047
    4. ' _' → logprob: -5.765485763549805
    5. 's' → logprob: -5.890485763549805
    6. 'des' → logprob: -6.640485763549805
    7. ' de' → logprob: -7.265485763549805
    8. '_des' → logprob: -7.515485763549805
    9. ' d' → logprob: -7.640485763549805
    10. '```' → logprob: -8.265485763549805

Token 10: ' maximum' (ID: 10562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45348846912384033
    2. ' s' → logprob: -1.0784884691238403
    3. '_' → logprob: -5.203488349914551
    4. ' ' → logprob: -5.453488349914551
    5. ' code' → logprob: -5.453488349914551
    6. ' nom' → logprob: -6.078488349914551
    7. ' données' → logprob: -6.578488349914551
    8. ' maximum' → logprob: -6.953488349914551
    9. ' texte' → logprob: -7.328488349914551
    10. ' d' → logprob: -7.953488349914551

Token 11: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7914053201675415
    2. ' de' → logprob: -1.1664053201675415
    3. ' ' → logprob: -1.5414053201675415
    4. ' d' → logprob: -4.416405200958252
    5. 's' → logprob: -5.916405200958252
    6. 'de' → logprob: -6.541405200958252
    7. '  ' → logprob: -7.166405200958252
    8. ' _' → logprob: -7.291405200958252
    9. 'e' → logprob: -7.541405200958252
    10. '<|end|>' → logprob: -7.666405200958252

Token 12: ' pièces' (ID: 49165)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.8899941444396973
    2. ' données' → logprob: -1.5149941444396973
    3. 'points' → logprob: -1.8899941444396973
    4. 'd' → logprob: -2.2649941444396973
    5. ' fruits' → logprob: -4.139994144439697
    6. ' pièces' → logprob: -4.514994144439697
    7. ' ' → logprob: -4.764994144439697
    8. '_points' → logprob: -4.764994144439697
    9. 's' → logprob: -5.264994144439697
    10. ' pi' → logprob: -5.389994144439697

Token 13: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9790441393852234
    2. '#' → logprob: -1.3540441989898682
    3. ':' → logprob: -2.229044198989868
    4. '\' → logprob: -2.479044198989868
    5. 's' → logprob: -2.604044198989868
    6. '```' → logprob: -3.729044198989868
    7. ',' → logprob: -4.104043960571289
    8. '_' → logprob: -4.104043960571289
    9. ' ' → logprob: -4.229043960571289
    10. '\n' → logprob: -4.729043960571289

Token 14: ' ' (ID: 220)
  Prédit: ' monnaie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -0.28762829303741455
    2. '```' → logprob: -2.287628173828125
    3. 'jeu' → logprob: -3.037628173828125
    4. ' ' → logprob: -3.912628173828125
    5. 'mon' → logprob: -4.037628173828125
    6. 'or' → logprob: -4.662628173828125
    7. ' or' → logprob: -4.662628173828125
    8. ' jeu' → logprob: -4.912628173828125
    9. ' pièces' → logprob: -5.162628173828125
    10. ' monna' → logprob: -5.787628173828125

Token 15: '500' (ID: 3234)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.7264333367347717
    2. ' monnaie' → logprob: -1.351433277130127
    3. 'jeu' → logprob: -1.726433277130127
    4. 'or' → logprob: -3.726433277130127
    5. '```' → logprob: -4.476433277130127
    6. 'code' → logprob: -4.976433277130127
    7. ' ' → logprob: -4.976433277130127
    8. 'pi' → logprob: -5.601433277130127
    9. 'la' → logprob: -5.851433277130127
    10. 'coin' → logprob: -6.101433277130127

Token 16: '-y' (ID: 18102)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.19191575050354
    2. ' ' → logprob: -1.44191575050354
    3. '.' → logprob: -1.56691575050354
    4. ',' → logprob: -2.44191575050354
    5. '0' → logprob: -2.44191575050354
    6. '_' → logprob: -3.56691575050354
    7. ' ,' → logprob: -3.69191575050354
    8. ' .' → logprob: -5.316915512084961
    9. ')' → logprob: -6.441915512084961
    10. 'def' → logprob: -6.566915512084961

Token 17: 'en' (ID: 262)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1864563375711441
    2. 's' → logprob: -3.3114564418792725
    3. '_' → logprob: -3.8114564418792725
    4. '0' → logprob: -3.9364564418792725
    5. ' )' → logprob: -4.186456203460693
    6. ',' → logprob: -4.311456203460693
    7. ')' → logprob: -4.561456203460693
    8. 'space' → logprob: -4.936456203460693
    9. '-' → logprob: -5.061456203460693
    10. 'u' → logprob: -5.436456203460693

Token 18: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3175175189971924
    2. ',' → logprob: -1.6925175189971924
    3. 's' → logprob: -1.6925175189971924
    4. ':' → logprob: -2.4425175189971924
    5. '.' → logprob: -2.4425175189971924
    6. '_' → logprob: -2.8175175189971924
    7. 'def' → logprob: -2.8175175189971924
    8. ' :' → logprob: -3.8175175189971924
    9. '```' → logprob: -4.692517280578613
    10. ' ,' → logprob: -4.942517280578613

Token 19: ' ache' (ID: 27427)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7999824285507202
    2. ' ' → logprob: -1.4249824285507202
    3. ' un' → logprob: -3.1749825477600098
    4. 'une' → logprob: -3.5499825477600098
    5. ' chaque' → logprob: -3.9874825477600098
    6. ' courant' → logprob: -4.17498254776001
    7. ' python' → logprob: -4.23748254776001
    8. ' Japon' → logprob: -4.73748254776001
    9. ' japon' → logprob: -4.92498254776001
    10. ' japonais' → logprob: -5.11248254776001

Token 20: 'tant' (ID: 26712)
  Prédit: 'tant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tant' → logprob: -0.11512219905853271
    2. 't' → logprob: -2.6151223182678223
    3. 'ter' → logprob: -3.3651223182678223
    4. 'teur' → logprob: -8.365121841430664
    5. 'tent' → logprob: -9.115121841430664
    6. 'te' → logprob: -9.365121841430664
    7. 'т' → logprob: -9.865121841430664
    8. '`' → logprob: -9.990121841430664
    9. 'té' → logprob: -10.240121841430664
    10. '#' → logprob: -10.240121841430664

Token 21: ' au' (ID: 2791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19903595745563507
    2. 's' → logprob: -1.9490360021591187
    3. '_' → logprob: -3.949035882949829
    4. ' s' → logprob: -4.949036121368408
    5. ' des' → logprob: -6.324036121368408
    6. '<|end|>' → logprob: -6.449036121368408
    7. '```' → logprob: -6.574036121368408
    8. '_s' → logprob: -6.699036121368408
    9. ' _' → logprob: -6.949036121368408
    10. '.' → logprob: -7.449036121368408

Token 22: ' plus' (ID: 2932)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'super' → logprob: -1.3551383018493652
    2. 'moins' → logprob: -1.3551383018493652
    3. ' moins' → logprob: -1.9801383018493652
    4. 'près' → logprob: -2.2301383018493652
    5. ' super' → logprob: -2.6051383018493652
    6. '```' → logprob: -3.1051383018493652
    7. ' ' → logprob: -3.3551383018493652
    8. ' magasin' → logprob: -4.105138301849365
    9. 'prés' → logprob: -4.730138301849365
    10. 'march' → logprob: -5.480138301849365

Token 23: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18395116925239563
    2. '1' → logprob: -3.4339511394500732
    3. ' une' → logprob: -3.4339511394500732
    4. '100' → logprob: -3.5589511394500732
    5. 'près' → logprob: -3.8089511394500732
    6. '```' → logprob: -3.8089511394500732
    7. 'une' → logprob: -4.183951377868652
    8. 'un' → logprob: -5.683951377868652
    9. ' un' → logprob: -6.183951377868652
    10. ' trois' → logprob: -6.433951377868652

Token 24: ' souvenir' (ID: 85706)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1235247403383255
    2. 'e' → logprob: -2.3735246658325195
    3. 'es' → logprob: -4.6235246658325195
    4. ' espace' → logprob: -5.8735246658325195
    5. ' e' → logprob: -5.9985246658325195
    6. 's' → logprob: -7.1235246658325195
    7. 'é' → logprob: -7.3735246658325195
    8. ' article' → logprob: -7.3735246658325195
    9. 'esp' → logprob: -7.7485246658325195
    10. 'a' → logprob: -7.7485246658325195

Token 25: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3691934049129486
    2. ',' → logprob: -2.1191933155059814
    3. ':' → logprob: -2.1191933155059814
    4. 's' → logprob: -3.4941933155059814
    5. '```' → logprob: -4.3691935539245605
    6. ' :' → logprob: -5.2441935539245605
    7. ' ' → logprob: -5.3691935539245605
    8. '\' → logprob: -5.7441935539245605
    9. '#' → logprob: -5.9941935539245605
    10. 'def' → logprob: -6.2441935539245605

Token 26: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1801338791847229
    2. ' une' → logprob: -2.180133819580078
    3. ' un' → logprob: -4.180133819580078
    4. ' la' → logprob: -4.555133819580078
    5. 'une' → logprob: -4.555133819580078
    6. ' chacune' → logprob: -5.930133819580078
    7. ' le' → logprob: -6.180133819580078
    8. 'le' → logprob: -6.305133819580078
    9. ' each' → logprob: -6.305133819580078
    10. ' l' → logprob: -6.430133819580078

Token 27: ' magasin' (ID: 76229)
  Prédit: ' magasin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magasin' → logprob: -0.16261623799800873
    2. 'mag' → logprob: -2.16261625289917
    3. '```' → logprob: -4.53761625289917
    4. ' souvenir' → logprob: -5.78761625289917
    5. ' endroit' → logprob: -5.78761625289917
    6. ' ' → logprob: -5.78761625289917
    7. 'bout' → logprob: -6.41261625289917
    8. ' mag' → logprob: -6.53761625289917
    9. ' magasins' → logprob: -6.91261625289917
    10. '`' → logprob: -7.22511625289917

Token 28: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9142672419548035
    2. ',' → logprob: -1.9142673015594482
    3. '#' → logprob: -2.0392673015594482
    4. ' ' → logprob: -2.6642673015594482
    5. '\' → logprob: -3.0392673015594482
    6. '```' → logprob: -3.5392673015594482
    7. '.' → logprob: -3.7892673015594482
    8. ')' → logprob: -3.7892673015594482
    9. '_' → logprob: -3.9142673015594482
    10. 'def' → logprob: -4.039267063140869

Token 29: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5222799181938171
    2. '.' → logprob: -1.272279977798462
    3. ',' → logprob: -2.772279977798462
    4. ' ,' → logprob: -3.772279977798462
    5. 's' → logprob: -4.147279739379883
    6. ' ' → logprob: -4.897279739379883
    7. '```' → logprob: -5.647279739379883
    8. ' en' → logprob: -5.647279739379883
    9. ' .' → logprob: -6.022279739379883
    10. ' et' → logprob: -6.272279739379883

Token 30: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14173786342144012
    2. ' en' → logprob: -2.891737937927246
    3. ' et' → logprob: -3.641737937927246
    4. ' ' → logprob: -4.516737937927246
    5. 's' → logprob: -4.891737937927246
    6. 'et' → logprob: -5.391737937927246
    7. ' tout' → logprob: -5.766737937927246
    8. ' ,' → logprob: -5.766737937927246
    9. ',' → logprob: -6.016737937927246
    10. ' sans' → logprob: -6.141737937927246

Token 31: ' l' (ID: 305)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4081055819988251
    2. 'l' → logprob: -2.4081056118011475
    3. ' une' → logprob: -2.9081056118011475
    4. ' la' → logprob: -3.2831056118011475
    5. 'le' → logprob: -3.6581056118011475
    6. 'la' → logprob: -3.7831056118011475
    7. ' l' → logprob: -3.7831056118011475
    8. 'une' → logprob: -3.9081056118011475
    9. 'cha' → logprob: -4.658105373382568
    10. ' un' → logprob: -4.783105373382568

Token 32: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08062990754842758
    2. ''ensemble' → logprob: -3.580629825592041
    3. ''' → logprob: -3.830629825592041
    4. 'es' → logprob: -4.205629825592041
    5. ''ordre' → logprob: -5.830629825592041
    6. 'e' → logprob: -5.955629825592041
    7. 'iste' → logprob: -7.080629825592041
    8. 'imité' → logprob: -7.205629825592041
    9. 'imiter' → logprob: -7.330629825592041
    10. ''espace' → logprob: -7.580629825592041

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8904335498809814
    2. ' ' → logprob: -0.8904335498809814
    3. '.' → logprob: -2.5154335498809814
    4. ':' → logprob: -3.3904335498809814
    5. 'def' → logprob: -4.515433311462402
    6. '#' → logprob: -4.890433311462402
    7. '_' → logprob: -4.890433311462402
    8. 'd' → logprob: -5.140433311462402
    9. ')' → logprob: -5.515433311462402
    10. ' ,' → logprob: -5.515433311462402

Token 34: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03269200772047043
    2. ' ' → logprob: -4.407691955566406
    3. ' en' → logprob: -4.532691955566406
    4. ' c' → logprob: -6.657691955566406
    5. '.' → logprob: -7.032691955566406
    6. ' ,' → logprob: -7.157691955566406
    7. 's' → logprob: -7.282691955566406
    8. ' à' → logprob: -7.282691955566406
    9. ' et' → logprob: -7.532691955566406
    10. ',' → logprob: -7.532691955566406

Token 35: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9802591800689697
    2. ' une' → logprob: -2.3552591800689697
    3. ' la' → logprob: -2.7302591800689697
    4. ' un' → logprob: -2.9802591800689697
    5. 'un' → logprob: -2.9802591800689697
    6. 'au' → logprob: -3.1052591800689697
    7. 'le' → logprob: -3.1052591800689697
    8. 'des' → logprob: -3.1052591800689697
    9. 'la' → logprob: -3.2302591800689697
    10. ' au' → logprob: -3.3552591800689697

Token 36: ' contr' (ID: 6030)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.3634861707687378
    2. ' contr' → logprob: -2.1134862899780273
    3. ' condition' → logprob: -2.4884862899780273
    4. ' somme' → logprob: -3.8634862899780273
    5. ' possibilité' → logprob: -4.238486289978027
    6. ' monnaie' → logprob: -4.363486289978027
    7. 'condition' → logprob: -4.613486289978027
    8. ' limite' → logprob: -4.988486289978027
    9. ' pièce' → logprob: -5.113486289978027
    10. 's' → logprob: -5.863486289978027

Token 37: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0013876126613467932
    2. 'a' → logprob: -6.876387596130371
    3. '#' → logprob: -8.126387596130371
    4. 'aint' → logprob: -11.251387596130371
    5. 'ain' → logprob: -11.376387596130371
    6. '```' → logprob: -11.751387596130371
    7. 'aine' → logprob: -12.501387596130371
    8. 'aiste' → logprob: -12.751387596130371
    9. '\' → logprob: -13.126387596130371
    10. '``' → logprob: -13.376387596130371

Token 38: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6503966450691223
    2. ' de' → logprob: -1.2753965854644775
    3. ' ' → logprob: -2.2753965854644775
    4. 'd' → logprob: -3.5253965854644775
    5. ' ' → logprob: -3.7753965854644775
    6. '<|end|>' → logprob: -4.650396823883057
    7. 'de' → logprob: -5.025396823883057
    8. 's' → logprob: -5.275396823883057
    9. ' that' → logprob: -5.275396823883057
    10. ' que' → logprob: -5.400396823883057

Token 39: ''utiliser' (ID: 133355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25146251916885376
    2. ''' → logprob: -1.751462459564209
    3. 'u' → logprob: -4.126462459564209
    4. ''une' → logprob: -4.126462459564209
    5. 'a' → logprob: -6.001462459564209
    6. ''un' → logprob: -6.501462459564209
    7. ''espace' → logprob: -6.501462459564209
    8. ''avoir' → logprob: -6.876462459564209
    9. '’' → logprob: -7.001462459564209
    10. ''u' → logprob: -7.126462459564209

Token 40: ' des' (ID: 731)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.9348941445350647
    2. 'au' → logprob: -1.68489408493042
    3. ' exactement' → logprob: -2.43489408493042
    4. 'exact' → logprob: -2.55989408493042
    5. ' chaque' → logprob: -2.80989408493042
    6. 'une' → logprob: -3.68489408493042
    7. ' une' → logprob: -3.68489408493042
    8. 'le' → logprob: -3.93489408493042
    9. '```' → logprob: -4.55989408493042
    10. ' les' → logprob: -4.68489408493042

Token 41: ' billets' (ID: 146301)
  Prédit: ' pièces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -1.2167789936065674
    2. '500' → logprob: -1.7167789936065674
    3. ' ' → logprob: -1.8417789936065674
    4. 'pi' → logprob: -2.0917789936065674
    5. ' pi' → logprob: -2.4667789936065674
    6. ' espaces' → logprob: -2.9667789936065674
    7. ' pieces' → logprob: -3.7167789936065674
    8. 'sou' → logprob: -4.466778755187988
    9. '100' → logprob: -4.716778755187988
    10. 'esp' → logprob: -5.029278755187988

Token 42: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2660342752933502
    2. '_' → logprob: -1.5160342454910278
    3. ',' → logprob: -5.766034126281738
    4. '```' → logprob: -7.016034126281738
    5. 's' → logprob: -7.266034126281738
    6. '.' → logprob: -7.391034126281738
    7. 'import' → logprob: -7.516034126281738
    8. 'def' → logprob: -7.516034126281738
    9. ' ' → logprob: -7.516034126281738
    10. ' ```' → logprob: -7.641034126281738

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8272027969360352
    2. '100' → logprob: -0.8272027969360352
    3. '500' → logprob: -2.577202796936035
    4. '10' → logprob: -3.827202796936035
    5. '1' → logprob: -4.077202796936035
    6. '50' → logprob: -5.827202796936035
    7. '5' → logprob: -5.827202796936035
    8. '  ' → logprob: -7.077202796936035
    9. '```' → logprob: -7.202202796936035
    10. ' banque' → logprob: -7.327202796936035

Token 44: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8128169775009155
    2. ' ' → logprob: -0.9378169775009155
    3. '500' → logprob: -2.187817096710205
    4. '1' → logprob: -3.437817096710205
    5. '10' → logprob: -4.437817096710205
    6. '5' → logprob: -5.062817096710205
    7. '50' → logprob: -7.687817096710205
    8. '  ' → logprob: -7.687817096710205
    9. '200' → logprob: -7.812817096710205
    10. '```' → logprob: -8.312816619873047

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5939879417419434
    2. ' ' → logprob: -0.8439879417419434
    3. '-' → logprob: -5.343987941741943
    4. ',' → logprob: -5.968987941741943
    5. '00' → logprob: -6.343987941741943
    6. ' ' → logprob: -6.593987941741943
    7. ' )' → logprob: -6.843987941741943
    8. ' ,' → logprob: -7.218987941741943
    9. ' #' → logprob: -7.343987941741943
    10. '_' → logprob: -7.468987941741943

Token 46: '-y' (ID: 18102)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06854788959026337
    2. '_' → logprob: -3.0685479640960693
    3. '-' → logprob: -4.69354772567749
    4. '0' → logprob: -5.69354772567749
    5. ',' → logprob: -6.56854772567749
    6. '<|end|>' → logprob: -6.94354772567749
    7. ' ,' → logprob: -7.31854772567749
    8. '#' → logprob: -7.56854772567749
    9. ' ' → logprob: -7.56854772567749
    10. ' )' → logprob: -7.69354772567749

Token 47: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00019460011390037835
    2. 'ens' → logprob: -9.375194549560547
    3. 'e' → logprob: -10.000194549560547
    4. '```' → logprob: -11.125194549560547
    5. '\' → logprob: -11.750194549560547
    6. '-en' → logprob: -12.125194549560547
    7. '
' → logprob: -12.500194549560547
    8. 'ен' → logprob: -12.500194549560547
    9. '#' → logprob: -13.125194549560547
    10. '

' → logprob: -13.250194549560547

Token 48: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2986255884170532
    2. '_' → logprob: -1.5486255884170532
    3. ':' → logprob: -1.6736255884170532
    4. ',' → logprob: -2.2986254692077637
    5. '#' → logprob: -2.6736254692077637
    6. 'def' → logprob: -3.0486254692077637
    7. 'n' → logprob: -3.7986254692077637
    8. '
' → logprob: -4.048625469207764
    9. '```' → logprob: -4.298625469207764
    10. ')' → logprob: -4.423625469207764

Token 49: ' nombre' (ID: 9733)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -1.3925479650497437
    2. '100' → logprob: -1.8925479650497437
    3. '```' → logprob: -2.642548084259033
    4. 'une' → logprob: -2.767548084259033
    5. 'pai' → logprob: -3.142548084259033
    6. 'ch' → logprob: -3.267548084259033
    7. ' chaque' → logprob: -3.267548084259033
    8. ' ' → logprob: -3.267548084259033
    9. ' une' → logprob: -3.517548084259033
    10. 'plus' → logprob: -3.642548084259033

Token 50: ' ill' (ID: 6486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18104839324951172
    2. 's' → logprob: -2.3060483932495117
    3. '_' → logprob: -2.8060483932495117
    4. ' s' → logprob: -6.806048393249512
    5. ')' → logprob: -7.681048393249512
    6. '=' → logprob: -7.931048393249512
    7. '#' → logprob: -8.056048393249512
    8. ',' → logprob: -8.181048393249512
    9. ' _' → logprob: -8.181048393249512
    10. ' #' → logprob: -8.306048393249512

Token 51: 'imité' (ID: 195455)
  Prédit: 'imité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imité' → logprob: -0.002800602465867996
    2. 'imit' → logprob: -6.002800464630127
    3. 'im' → logprob: -8.377800941467285
    4. 'é' → logprob: -9.877800941467285
    5. 'imited' → logprob: -11.252800941467285
    6. 'imi' → logprob: -12.002800941467285
    7. 'i' → logprob: -12.127800941467285
    8. 'ité' → logprob: -12.877800941467285
    9. 'imiter' → logprob: -12.877800941467285
    10. 'égal' → logprob: -13.002800941467285

Token 52: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7533773183822632
    2. ':' → logprob: -1.1283773183822632
    3. '#' → logprob: -2.2533774375915527
    4. 'def' → logprob: -3.6283774375915527
    5. ',' → logprob: -4.128377437591553
    6. '.' → logprob: -4.378377437591553
    7. '_' → logprob: -4.503377437591553
    8. 'n' → logprob: -4.753377437591553
    9. 'i' → logprob: -4.753377437591553
    10. '```' → logprob: -5.003377437591553

Token 53: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4862947165966034
    2. ',' → logprob: -1.8612947463989258
    3. ':' → logprob: -3.111294746398926
    4. '.' → logprob: -3.111294746398926
    5. 'def' → logprob: -3.111294746398926
    6. '#' → logprob: -3.861294746398926
    7. ' :' → logprob: -4.236294746398926
    8. ' ' → logprob: -4.361294746398926
    9. ' ,' → logprob: -4.736294746398926
    10. ' def' → logprob: -4.986294746398926

Token 54: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1322487592697144
    2. 'sans' → logprob: -1.6322487592697144
    3. 'en' → logprob: -2.382248878479004
    4. ' #' → logprob: -2.507248878479004
    5. ' en' → logprob: -3.007248878479004
    6. 'une' → logprob: -3.132248878479004
    7. ' une' → logprob: -3.632248878479004
    8. 'un' → logprob: -3.882248878479004
    9. ' un' → logprob: -4.007248878479004
    10. ' ' → logprob: -4.382248878479004

Token 55: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -1.1521776914596558
    2. '#' → logprob: -1.9021776914596558
    3. ' ' → logprob: -2.2771778106689453
    4. ' rest' → logprob: -3.0271778106689453
    5. ' pieces' → logprob: -3.1521778106689453
    6. ' espaces' → logprob: -3.1521778106689453
    7. 'pi' → logprob: -3.2771778106689453
    8. ' #' → logprob: -3.6521778106689453
    9. 'pai' → logprob: -3.6521778106689453
    10. ' rendre' → logprob: -3.6521778106689453

Token 56: ' reç' (ID: 132883)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6616193056106567
    2. ' de' → logprob: -0.7866193056106567
    3. ',' → logprob: -4.536619186401367
    4. ' d' → logprob: -5.536619186401367
    5. ' ,' → logprob: -5.661619186401367
    6. '.' → logprob: -5.786619186401367
    7. '_' → logprob: -6.036619186401367
    8. 'de' → logprob: -6.411619186401367
    9. ' #' → logprob: -7.911619186401367
    10. ' ' → logprob: -8.036619186401367

Token 57: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.07102683931589127
    2. 'us' → logprob: -3.6960268020629883
    3. 'ant' → logprob: -3.8210268020629883
    4. 'u' → logprob: -4.321026802062988
    5. 'es' → logprob: -4.946026802062988
    6. 'ue' → logprob: -7.446026802062988
    7. 'ev' → logprob: -8.571026802062988
    8. 'vant' → logprob: -8.946026802062988
    9. '```' → logprob: -9.071026802062988
    10. 'ent' → logprob: -9.071026802062988

Token 58: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09281697124242783
    2. ',' → logprob: -3.3428170680999756
    3. '.' → logprob: -3.9678170680999756
    4. 's' → logprob: -4.5928168296813965
    5. ' ,' → logprob: -5.0928168296813965
    6. ' en' → logprob: -5.5928168296813965
    7. ')' → logprob: -6.7178168296813965
    8. '```' → logprob: -6.8428168296813965
    9. '<|end|>' → logprob: -6.9678168296813965
    10. ' de' → logprob: -7.0303168296813965

Token 59: ' monnaie' (ID: 168963)
  Prédit: ' rendu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rendu' → logprob: -0.055023327469825745
    2. 'r' → logprob: -3.930023431777954
    3. ' monnaie' → logprob: -4.180023193359375
    4. ' rend' → logprob: -5.305023193359375
    5. ' r' → logprob: -5.305023193359375
    6. ' rendre' → logprob: -5.680023193359375
    7. ' remboursement' → logprob: -7.180023193359375
    8. ' des' → logprob: -7.805023193359375
    9. '#' → logprob: -8.055023193359375
    10. ' renda' → logprob: -8.180023193359375

Token 60: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5675222277641296
    2. '#' → logprob: -2.0675222873687744
    3. 'd' → logprob: -2.4425222873687744
    4. '_' → logprob: -3.0675222873687744
    5. ',' → logprob: -3.5675222873687744
    6. 'n' → logprob: -3.6925222873687744
    7. 'def' → logprob: -3.6925222873687744
    8. 'i' → logprob: -3.8175222873687744
    9. ' ' → logprob: -4.067522048950195
    10. '```' → logprob: -4.442522048950195

Token 61: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17642459273338318
    2. ':' → logprob: -2.801424503326416
    3. 'def' → logprob: -3.551424503326416
    4. 'i' → logprob: -4.051424503326416
    5. '_' → logprob: -4.301424503326416
    6. '#' → logprob: -4.426424503326416
    7. ',' → logprob: -4.926424503326416
    8. 'n' → logprob: -5.051424503326416
    9. ' ' → logprob: -5.051424503326416
    10. ' d' → logprob: -6.676424503326416

Token 62: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10504617542028427
    2. 'i' → logprob: -3.355046272277832
    3. '#' → logprob: -3.855046272277832
    4. 'def' → logprob: -4.480046272277832
    5. ' ' → logprob: -4.855046272277832
    6. ':' → logprob: -4.980046272277832
    7. '_' → logprob: -5.605046272277832
    8. 'n' → logprob: -5.855046272277832
    9. ' 
' → logprob: -6.105046272277832
    10. 'import' → logprob: -6.105046272277832

Token 63: ' veut' (ID: 41653)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2796030044555664
    2. '#' → logprob: -1.6546030044555664
    3. ' ' → logprob: -2.2796030044555664
    4. 'n' → logprob: -2.5296030044555664
    5. 'def' → logprob: -2.5296030044555664
    6. ' #' → logprob: -3.2796030044555664
    7. ' peut' → logprob: -3.2796030044555664
    8. ' a' → logprob: -3.5296030044555664
    9. ' n' → logprob: -3.5296030044555664
    10. ' ' → logprob: -4.029603004455566

Token 64: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0828425884246826
    2. ' maxim' → logprob: -1.0828425884246826
    3. ' calcul' → logprob: -2.4578425884246826
    4. ' déterminer' → logprob: -2.5828425884246826
    5. ' max' → logprob: -3.0828425884246826
    6. ' connaître' → logprob: -3.8328425884246826
    7. ' trouver' → logprob: -3.9578425884246826
    8. ' savoir' → logprob: -4.207842826843262
    9. 'calcul' → logprob: -4.832842826843262
    10. ' utiliser' → logprob: -5.082842826843262

Token 65: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.08620164543390274
    2. 'um' → logprob: -3.3362016677856445
    3. 'u' → logprob: -4.2112016677856445
    4. '#' → logprob: -4.2112016677856445
    5. 'is' → logprob: -5.4612016677856445
    6. '```' → logprob: -5.9612016677856445
    7. 'al' → logprob: -6.2112016677856445
    8. 'er' → logprob: -6.7112016677856445
    9. 'a' → logprob: -6.8362016677856445
    10. 'i' → logprob: -7.0862016677856445

Token 66: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0716000571846962
    2. 'le' → logprob: -3.0715999603271484
    3. ' la' → logprob: -4.821599960327148
    4. ' ' → logprob: -5.321599960327148
    5. '_le' → logprob: -5.446599960327148
    6. ' l' → logprob: -5.821599960327148
    7. ' ' → logprob: -7.071599960327148
    8. 'l' → logprob: -7.696599960327148
    9. '_' → logprob: -8.446599960327148
    10. ' les' → logprob: -8.571599960327148

Token 67: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.06516574323177338
    2. 'nombre' → logprob: -2.8151657581329346
    3. ' nombres' → logprob: -6.6901655197143555
    4. ' montant' → logprob: -7.4401655197143555
    5. ' ' → logprob: -8.065165519714355
    6. ' #' → logprob: -8.065165519714355
    7. ' n' → logprob: -9.565165519714355
    8. ' ' → logprob: -9.565165519714355
    9. ' number' → logprob: -9.815165519714355
    10. 'n' → logprob: -9.815165519714355

Token 68: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2759541869163513
    2. ' ' → logprob: -1.775954246520996
    3. ' d' → logprob: -3.025954246520996
    4. 'de' → logprob: -4.275954246520996
    5. '_' → logprob: -5.525954246520996
    6. '<|end|>' → logprob: -6.525954246520996
    7. 'd' → logprob: -6.650954246520996
    8. ' total' → logprob: -7.400954246520996
    9. '_de' → logprob: -7.525954246520996
    10. ' maximal' → logprob: -7.900954246520996

Token 69: ' pièces' (ID: 49165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7317233681678772
    2. ' pièces' → logprob: -0.7317233681678772
    3. ' pieces' → logprob: -4.106723308563232
    4. ' pi' → logprob: -4.231723308563232
    5. 'pi' → logprob: -5.981723308563232
    6. '500' → logprob: -6.981723308563232
    7. ' ' → logprob: -7.106723308563232
    8. 'pieces' → logprob: -7.231723308563232
    9. ' coins' → logprob: -8.10672378540039
    10. ' monna' → logprob: -8.23172378540039

Token 70: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1650862693786621
    2. '_' → logprob: -2.415086269378662
    3. ':' → logprob: -4.040086269378662
    4. ',' → logprob: -4.665086269378662
    5. 'def' → logprob: -5.040086269378662
    6. '#' → logprob: -5.290086269378662
    7. '[' → logprob: -5.540086269378662
    8. ' :' → logprob: -5.665086269378662
    9. '```' → logprob: -5.790086269378662
    10. 'n' → logprob: -6.165086269378662

Token 71: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.4344899356365204
    2. ' ' → logprob: -1.1844899654388428
    3. '5' → logprob: -3.8094899654388428
    4. ' cinq' → logprob: -4.934489727020264
    5. ' five' → logprob: -5.184489727020264
    6. ' monnaie' → logprob: -5.184489727020264
    7. '５' → logprob: -6.559489727020264
    8. ' pieces' → logprob: -6.934489727020264
    9. ' pièces' → logprob: -7.434489727020264
    10. ' pi' → logprob: -7.559489727020264

Token 72: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.005529238376766443
    2. ' ' → logprob: -5.380529403686523
    3. '5' → logprob: -7.255529403686523
    4. '５' → logprob: -9.505529403686523
    5. ' cinq' → logprob: -10.255529403686523
    6. 'pi' → logprob: -10.755529403686523
    7. ' five' → logprob: -10.880529403686523
    8. '```' → logprob: -11.630529403686523
    9. ' monnaie' → logprob: -11.755529403686523
    10. '50' → logprob: -12.005529403686523

Token 73: '-y' (ID: 18102)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022467022761702538
    2. ',' → logprob: -4.772467136383057
    3. '_' → logprob: -5.772467136383057
    4. '.' → logprob: -6.397467136383057
    5. ':' → logprob: -6.522467136383057
    6. '#' → logprob: -6.647467136383057
    7. 's' → logprob: -6.897467136383057
    8. ' =' → logprob: -6.897467136383057
    9. 'def' → logprob: -7.397467136383057
    10. ' ,' → logprob: -7.897467136383057

Token 74: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.1834125965833664
    2. 'e' → logprob: -1.8084125518798828
    3. 'ens' → logprob: -6.558412551879883
    4. '-' → logprob: -7.433412551879883
    5. '```' → logprob: -7.558412551879883
    6. '-en' → logprob: -8.808412551879883
    7. '-e' → logprob: -8.933412551879883
    8. 'n' → logprob: -9.183412551879883
    9. 'o' → logprob: -9.370912551879883
    10. '``' → logprob: -9.933412551879883

Token 75: ' obten' (ID: 28150)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44337013363838196
    2. ' ' → logprob: -1.6933701038360596
    3. 'def' → logprob: -2.5683701038360596
    4. ':' → logprob: -2.9433701038360596
    5. '#' → logprob: -3.9433701038360596
    6. 'i' → logprob: -5.443370342254639
    7. '_' → logprob: -5.693370342254639
    8. 'n' → logprob: -5.693370342254639
    9. ' d' → logprob: -5.943370342254639
    10. ',' → logprob: -6.193370342254639

Token 76: 'ues' (ID: 1406)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.24350549280643463
    2. 'ues' → logprob: -1.7435054779052734
    3. 'es' → logprob: -3.7435054779052734
    4. 'n' → logprob: -4.368505477905273
    5. 's' → logprob: -6.118505477905273
    6. 't' → logprob: -7.118505477905273
    7. 'e' → logprob: -7.243505477905273
    8. 'tes' → logprob: -8.118505477905273
    9. 'r' → logprob: -8.243505477905273
    10. 'i' → logprob: -9.618505477905273

Token 77: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6184166073799133
    2. ':' → logprob: -1.7434165477752686
    3. 'def' → logprob: -1.7434165477752686
    4. '#' → logprob: -2.6184165477752686
    5. 'n' → logprob: -4.618416786193848
    6. 'i' → logprob: -5.118416786193848
    7. ',' → logprob: -5.618416786193848
    8. 'import' → logprob: -5.743416786193848
    9. '_' → logprob: -5.743416786193848
    10. '```' → logprob: -5.993416786193848

Token 78: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09404757618904114
    2. ',' → logprob: -3.4690475463867188
    3. '.' → logprob: -3.8440475463867188
    4. ':' → logprob: -4.094047546386719
    5. ' :' → logprob: -5.719047546386719
    6. 'n' → logprob: -5.969047546386719
    7. '_' → logprob: -6.094047546386719
    8. 'def' → logprob: -6.219047546386719
    9. ' ,' → logprob: -6.594047546386719
    10. '\' → logprob: -6.594047546386719

Token 79: ' minim' (ID: 23874)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1895382404327393
    2. ' les' → logprob: -2.0645382404327393
    3. 'le' → logprob: -2.3145382404327393
    4. ' la' → logprob: -2.4395382404327393
    5. ' l' → logprob: -2.6895382404327393
    6. ' maxim' → logprob: -2.8145382404327393
    7. ' ensuite' → logprob: -3.4395382404327393
    8. ' optimiser' → logprob: -3.5645382404327393
    9. ' minim' → logprob: -3.9395382404327393
    10. 'max' → logprob: -3.9395382404327393

Token 80: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.0007354161934927106
    2. 's' → logprob: -7.375735282897949
    3. '#' → logprob: -10.87573528289795
    4. '```' → logprob: -11.00073528289795
    5. 'se' → logprob: -11.25073528289795
    6. 'iser' → logprob: -11.25073528289795
    7. 'm' → logprob: -11.75073528289795
    8. ' ser' → logprob: -11.87573528289795
    9. '``' → logprob: -12.50073528289795
    10. 'sement' → logprob: -12.87573528289795

Token 81: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6325287818908691
    2. 'le' → logprob: -1.1325287818908691
    3. ' la' → logprob: -2.507528781890869
    4. ' l' → logprob: -3.257528781890869
    5. 'l' → logprob: -4.007528781890869
    6. 'la' → logprob: -5.257528781890869
    7. ' ' → logprob: -6.632528781890869
    8. ' les' → logprob: -7.382528781890869
    9. 'leur' → logprob: -8.007528305053711
    10. ' ensuite' → logprob: -8.632528305053711

Token 82: ' dép' (ID: 34015)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5899920463562012
    2. ' nombre' → logprob: -1.7149920463562012
    3. 's' → logprob: -2.339992046356201
    4. 'mont' → logprob: -3.964992046356201
    5. 'dé' → logprob: -4.464992046356201
    6. ' ' → logprob: -4.589992046356201
    7. '```' → logprob: -4.589992046356201
    8. 'co' → logprob: -4.589992046356201
    9. ' somme' → logprob: -4.714992046356201
    10. ' monnaie' → logprob: -4.839992046356201

Token 83: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.024001458659768105
    2. 'enses' → logprob: -3.899001359939575
    3. 'e' → logprob: -6.274001598358154
    4. 'ens' → logprob: -7.274001598358154
    5. 'en' → logprob: -8.399001121520996
    6. '#' → logprob: -9.024001121520996
    7. 'a' → logprob: -9.524001121520996
    8. '=' → logprob: -9.899001121520996
    9. 'n' → logprob: -10.024001121520996
    10. '```' → logprob: -10.149001121520996

Token 84: ' totale' (ID: 52898)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7996703386306763
    2. ':' → logprob: -1.7996703386306763
    3. '#' → logprob: -2.0496702194213867
    4. 'def' → logprob: -2.5496702194213867
    5. 'd' → logprob: -3.0496702194213867
    6. ',' → logprob: -3.7996702194213867
    7. 'n' → logprob: -3.7996702194213867
    8. '_' → logprob: -3.9246702194213867
    9. '```' → logprob: -4.674670219421387
    10. '[' → logprob: -4.799670219421387

Token 85: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0423723459243774
    2. ' ' → logprob: -1.0423723459243774
    3. '#' → logprob: -2.167372226715088
    4. 'd' → logprob: -3.292372226715088
    5. ',' → logprob: -3.417372226715088
    6. 'n' → logprob: -3.792372226715088
    7. 'def' → logprob: -4.167372226715088
    8. 'i' → logprob: -4.417372226715088
    9. '```' → logprob: -4.792372226715088
    10. '.' → logprob: -5.042372226715088

Token 86: ' ce' (ID: 2357)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1615866422653198
    2. 'acheter' → logprob: -1.4115866422653198
    3. ' l' → logprob: -1.6615866422653198
    4. 'ob' → logprob: -3.5365867614746094
    5. 'ach' → logprob: -3.6615867614746094
    6. ' acheter' → logprob: -3.6615867614746094
    7. 'le' → logprob: -3.6615867614746094
    8. ' obtenir' → logprob: -3.9115867614746094
    9. ' atteindre' → logprob: -3.9115867614746094
    10. 'atte' → logprob: -4.286586761474609

Token 87: ' maximum' (ID: 10562)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.1375125646591187
    2. ' ' → logprob: -1.7625125646591187
    3. ' même' → logprob: -2.262512683868408
    4. ' nombre' → logprob: -3.387512683868408
    5. ' souvenir' → logprob: -3.512512683868408
    6. ' probl' → logprob: -3.512512683868408
    7. ' code' → logprob: -3.762512683868408
    8. 'pro' → logprob: -3.887512683868408
    9. ' maximum' → logprob: -3.887512683868408
    10. '_' → logprob: -4.012512683868408

Token 88: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3195366859436035
    2. '#' → logprob: -1.9445366859436035
    3. 'def' → logprob: -3.1945366859436035
    4. 'd' → logprob: -3.4445366859436035
    5. ':' → logprob: -4.0695366859436035
    6. 'import' → logprob: -4.9445366859436035
    7. ',' → logprob: -4.9445366859436035
    8. '.' → logprob: -5.3195366859436035
    9. 'i' → logprob: -5.4445366859436035
    10. 'n' → logprob: -5.8195366859436035

Token 89: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3029240667819977
    2. '#' → logprob: -2.177924156188965
    3. ':' → logprob: -2.552924156188965
    4. 'def' → logprob: -3.802924156188965
    5. 'i' → logprob: -4.302924156188965
    6. 'n' → logprob: -4.802924156188965
    7. '```' → logprob: -5.677924156188965
    8. '
' → logprob: -5.927924156188965
    9. ',' → logprob: -5.927924156188965
    10. '.' → logprob: -5.927924156188965

Token 90: ' Appro' (ID: 24145)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5589807033538818
    2. 'def' → logprob: -1.5589807033538818
    3. '#' → logprob: -2.558980703353882
    4. ' ' → logprob: -2.933980703353882
    5. 'import' → logprob: -3.308980703353882
    6. 'n' → logprob: -4.808980941772461
    7. 'i' → logprob: -4.808980941772461
    8. 'from' → logprob: -4.808980941772461
    9. ' #' → logprob: -4.933980941772461
    10. ' d' → logprob: -5.183980941772461

Token 91: 'che' (ID: 926)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05049861595034599
    2. 'c' → logprob: -4.5504984855651855
    3. 'd' → logprob: -4.8004984855651855
    4. 'p' → logprob: -5.1754984855651855
    5. 'x' → logprob: -5.1754984855651855
    6. 'f' → logprob: -5.4254984855651855
    7. 'r' → logprob: -5.6754984855651855
    8. 'm' → logprob: -5.8004984855651855
    9. 'v' → logprob: -6.5504984855651855
    10. 'def' → logprob: -6.9254984855651855

Token 92: ' proposée' (ID: 185169)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27864769101142883
    2. '#' → logprob: -2.0286476612091064
    3. 'from' → logprob: -3.0286476612091064
    4. ' #' → logprob: -4.1536478996276855
    5. 'dp' → logprob: -4.2786478996276855
    6. ' def' → logprob: -4.4036478996276855
    7. ' from' → logprob: -4.9036478996276855
    8. 'import' → logprob: -5.7786478996276855
    9. 'de' → logprob: -6.1536478996276855
    10. 'd' → logprob: -6.1536478996276855

Token 93: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25562286376953125
    2. 'dp' → logprob: -1.7556228637695312
    3. '#' → logprob: -4.005622863769531
    4. ' dp' → logprob: -4.630622863769531
    5. 'from' → logprob: -4.755622863769531
    6. ' def' → logprob: -5.130622863769531
    7. 'd' → logprob: -5.255622863769531
    8. 'import' → logprob: -6.255622863769531
    9. ' #' → logprob: -6.880622863769531
    10. ' from' → logprob: -7.630622863769531

Token 94: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.712028980255127
    2. '#' → logprob: -1.462028980255127
    3. 'dp' → logprob: -1.962028980255127
    4. 'from' → logprob: -2.087028980255127
    5. 'import' → logprob: -4.712028980255127
    6. ' dp' → logprob: -7.212028980255127
    7. ' from' → logprob: -7.337028980255127
    8. ' #' → logprob: -7.462028980255127
    9. 'DP' → logprob: -7.712028980255127
    10. ' def' → logprob: -7.962028980255127

Token 95: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9615169167518616
    2. 'def' → logprob: -1.7115168571472168
    3. ' def' → logprob: -2.086516857147217
    4. 'from' → logprob: -2.336516857147217
    5. ' #' → logprob: -2.336516857147217
    6. ' from' → logprob: -2.711516857147217
    7. ' import' → logprob: -4.086516857147217
    8. 'On' → logprob: -4.711516857147217
    9. 'dp' → logprob: -5.086516857147217
    10. ' On' → logprob: -5.211516857147217

Token 96: ' utilise' (ID: 70283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09161389619112015
    2. '_' → logprob: -3.341614007949829
    3. ' import' → logprob: -4.84161376953125
    4. ' a' → logprob: -4.96661376953125
    5. ' _' → logprob: -5.09161376953125
    6. ' va' → logprob: -5.46661376953125
    7. ' ' → logprob: -5.59161376953125
    8. ' #' → logprob: -5.84161376953125
    9. ' peut' → logprob: -5.96661376953125
    10. ' def' → logprob: -6.21661376953125

Token 97: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3659660220146179
    2. ' la' → logprob: -1.4909660816192627
    3. 'une' → logprob: -3.1159660816192627
    4. ' un' → logprob: -4.365965843200684
    5. ' programmation' → logprob: -4.365965843200684
    6. ' ' → logprob: -5.990965843200684
    7. 'l' → logprob: -6.490965843200684
    8. ' programming' → logprob: -6.865965843200684
    9. 'la' → logprob: -6.990965843200684
    10. ' le' → logprob: -7.365965843200684

Token 98: ' approche' (ID: 102373)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.042083531618118286
    2. 'program' → logprob: -4.542083740234375
    3. 'programm' → logprob: -4.542083740234375
    4. ' programm' → logprob: -5.167083740234375
    5. ' program' → logprob: -5.167083740234375
    6. ' programme' → logprob: -5.542083740234375
    7. 'programme' → logprob: -7.042083740234375
    8. ' Programm' → logprob: -7.042083740234375
    9. 'P' → logprob: -7.792083740234375
    10. 'prog' → logprob: -8.167083740234375

Token 99: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3920222222805023
    2. ' programmation' → logprob: -2.642022132873535
    3. ' dynamique' → logprob: -2.642022132873535
    4. '```' → logprob: -2.892022132873535
    5. 'd' → logprob: -3.642022132873535
    6. ' program' → logprob: -3.892022132873535
    7. ' ' → logprob: -4.142022132873535
    8. 'de' → logprob: -4.267022132873535
    9. ' par' → logprob: -4.517022132873535
    10. ' ' → logprob: -5.017022132873535

Token 100: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.019945630803704262
    2. 'programm' → logprob: -4.1449456214904785
    3. 'program' → logprob: -6.2699456214904785
    4. ' programme' → logprob: -7.3949456214904785
    5. 'prog' → logprob: -7.6449456214904785
    6. 'programme' → logprob: -8.519946098327637
    7. ' program' → logprob: -8.894946098327637
    8. '```' → logprob: -9.019946098327637
    9. ' programm' → logprob: -9.269946098327637
    10. 'd' → logprob: -9.394946098327637

Token 101: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.1600838601589203
    2. 'd' → logprob: -2.285083770751953
    3. ' dynamic' → logprob: -3.285083770751953
    4. ' dynam' → logprob: -5.535083770751953
    5. 'dynamic' → logprob: -5.785083770751953
    6. '_dynamic' → logprob: -6.910083770751953
    7. ' ' → logprob: -9.160083770751953
    8. '_' → logprob: -9.410083770751953
    9. 'dyn' → logprob: -9.535083770751953
    10. '_d' → logprob: -9.535083770751953

Token 102: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9771294593811035
    2. ':' → logprob: -1.8521294593811035
    3. '#' → logprob: -2.1021294593811035
    4. 'import' → logprob: -2.2271294593811035
    5. 'def' → logprob: -2.6021294593811035
    6. '
' → logprob: -3.2271294593811035
    7. ' :' → logprob: -3.3521294593811035
    8. 'n' → logprob: -3.8521294593811035
    9. '_' → logprob: -4.4771294593811035
    10. ',' → logprob: -4.6021294593811035

Token 103: 'DP' (ID: 16851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4422030746936798
    2. ' )' → logprob: -1.1922030448913574
    3. 'd' → logprob: -4.567203044891357
    4. 'dp' → logprob: -5.192203044891357
    5. ' d' → logprob: -5.317203044891357
    6. ' dynamic' → logprob: -5.442203044891357
    7. ' dynamique' → logprob: -5.442203044891357
    8. ' à' → logprob: -5.692203044891357
    9. ' pour' → logprob: -5.942203044891357
    10. ' dp' → logprob: -5.942203044891357

Token 104: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25690123438835144
    2. ' )' → logprob: -1.6319012641906738
    3. '.' → logprob: -4.506901264190674
    4. '_' → logprob: -4.631901264190674
    5. ',' → logprob: -5.631901264190674
    6. ' ' → logprob: -5.881901264190674
    7. '#' → logprob: -6.506901264190674
    8. ' ,' → logprob: -8.381900787353516
    9. ']' → logprob: -8.631900787353516
    10. ':' → logprob: -8.756900787353516

Token 105: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7740849256515503
    2. 'import' → logprob: -1.7740849256515503
    3. 'from' → logprob: -2.14908504486084
    4. 'd' → logprob: -2.27408504486084
    5. 'n' → logprob: -2.77408504486084
    6. 'dp' → logprob: -3.02408504486084
    7. '#' → logprob: -4.02408504486084
    8. ' import' → logprob: -5.64908504486084
    9. '
' → logprob: -6.02408504486084
    10. ' from' → logprob: -6.02408504486084

Token 106: ' États' (ID: 70197)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9574099779129028
    2. 'from' → logprob: -1.3324099779129028
    3. 'import' → logprob: -1.4574099779129028
    4. 'n' → logprob: -3.0824098587036133
    5. 'dp' → logprob: -3.5824098587036133
    6. '#' → logprob: -3.9574098587036133
    7. 'd' → logprob: -5.207409858703613
    8. ' from' → logprob: -5.207409858703613
    9. ' import' → logprob: -5.582409858703613
    10. '
' → logprob: -5.582409858703613

Token 107: ' DP' (ID: 51992)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5849452018737793
    2. ':' → logprob: -1.5849452018737793
    3. ' :' → logprob: -1.7099452018737793
    4. '=' → logprob: -3.3349452018737793
    5. 'dp' → logprob: -4.584945201873779
    6. ',' → logprob: -5.834945201873779
    7. ' dp' → logprob: -6.209945201873779
    8. ' (' → logprob: -6.959945201873779
    9. '[' → logprob: -7.334945201873779
    10. 's' → logprob: -7.709945201873779

Token 108: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02012382075190544
    2. '[' → logprob: -4.8951239585876465
    3. ' :' → logprob: -5.6451239585876465
    4. ':' → logprob: -5.8951239585876465
    5. '[i' → logprob: -6.1451239585876465
    6. '=' → logprob: -6.5201239585876465
    7. 'dp' → logprob: -7.2701239585876465
    8. ',' → logprob: -7.7701239585876465
    9. '[
' → logprob: -8.145123481750488
    10. ' dp' → logprob: -8.770123481750488

Token 109: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16110922396183014
    2. ' dp' → logprob: -2.286109209060669
    3. '#' → logprob: -3.661109209060669
    4. ' (' → logprob: -5.036109447479248
    5. ' #' → logprob: -5.661109447479248
    6. 'i' → logprob: -6.161109447479248
    7. '(dp' → logprob: -6.161109447479248
    8. '(i' → logprob: -6.536109447479248
    9. ' i' → logprob: -6.661109447479248
    10. 'f' → logprob: -7.411109447479248

Token 110: ' l' (ID: 305)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5338999629020691
    2. 'i' → logprob: -1.6589000225067139
    3. ' i' → logprob: -2.658900022506714
    4. 'l' → logprob: -3.158900022506714
    5. ' l' → logprob: -3.533900022506714
    6. ' ' → logprob: -4.533899784088135
    7. '_' → logprob: -4.533899784088135
    8. '[i' → logprob: -4.783899784088135
    9. '[' → logprob: -5.408899784088135
    10. ' quel' → logprob: -5.533899784088135

Token 111: ''ét' (ID: 23771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6564136743545532
    2. ''état' → logprob: -1.4064136743545532
    3. ''intérieur' → logprob: -2.9064135551452637
    4. ''instant' → logprob: -3.4064135551452637
    5. ''entrée' → logprob: -3.6564135551452637
    6. 'entrée' → logprob: -4.031413555145264
    7. ''aide' → logprob: -4.406413555145264
    8. ''' → logprob: -4.531413555145264
    9. ''é' → logprob: -4.781413555145264
    10. 'i' → logprob: -4.906413555145264

Token 112: 'ape' (ID: 2480)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0661759078502655
    2. 'ape' → logprob: -2.816175937652588
    3. 'tat' → logprob: -6.566175937652588
    4. '#' → logprob: -7.066175937652588
    5. 'a' → logprob: -7.441175937652588
    6. 'ap' → logprob: -8.56617546081543
    7. 'ant' → logprob: -9.06617546081543
    8. '`' → logprob: -9.31617546081543
    9. 'ât' → logprob: -9.81617546081543
    10. '=' → logprob: -9.81617546081543

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0794023796916008
    2. 'i' → logprob: -2.579402446746826
    3. '[i' → logprob: -9.204401969909668
    4. ' suivante' → logprob: -9.329401969909668
    5. '_i' → logprob: -9.704401969909668
    6. ' ' → logprob: -9.954401969909668
    7. ' suivant' → logprob: -10.704401969909668
    8. ' ,' → logprob: -11.079401969909668
    9. ',' → logprob: -11.079401969909668
    10. ' =' → logprob: -11.204401969909668

Token 114: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2118654102087021
    2. ' (' → logprob: -1.9618654251098633
    3. ' ,' → logprob: -3.7118654251098633
    4. '(' → logprob: -5.336865425109863
    5. ' et' → logprob: -5.461865425109863
    6. '(i' → logprob: -5.586865425109863
    7. ' on' → logprob: -5.961865425109863
    8. 'et' → logprob: -6.461865425109863
    9. '#' → logprob: -7.086865425109863
    10. ' =' → logprob: -7.461865425109863

Token 115: 'mag' (ID: 19135)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9555785059928894
    2. 'i' → logprob: -1.0805785655975342
    3. ' magasin' → logprob: -2.705578565597534
    4. ',' → logprob: -3.080578565597534
    5. ' magasins' → logprob: -3.080578565597534
    6. ')' → logprob: -4.205578327178955
    7. 'le' → logprob: -4.455578327178955
    8. 'l' → logprob: -4.705578327178955
    9. 'achat' → logprob: -4.705578327178955
    10. ' stores' → logprob: -4.830578327178955

Token 116: 'asin' (ID: 30118)
  Prédit: 'asin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asin' → logprob: -0.06081901863217354
    2. 'as' → logprob: -3.060818910598755
    3. 'a' → logprob: -4.560819149017334
    4. '#' → logprob: -6.435819149017334
    5. 'azin' → logprob: -10.560818672180176
    6. ')' → logprob: -10.935818672180176
    7. 'i' → logprob: -12.060818672180176
    8. '```' → logprob: -12.060818672180176
    9. 'asie' → logprob: -12.060818672180176
    10. '>' → logprob: -12.560818672180176

Token 117: ' i' (ID: 575)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1697792112827301
    2. ' ),' → logprob: -2.9197793006896973
    3. ',' → logprob: -3.0447793006896973
    4. ')' → logprob: -3.0447793006896973
    5. ' )' → logprob: -6.544779300689697
    6. ' ,' → logprob: -6.544779300689697
    7. 's' → logprob: -6.544779300689697
    8. ' =' → logprob: -7.294779300689697
    9. '=' → logprob: -8.294778823852539
    10. 'e' → logprob: -8.794778823852539

Token 118: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0709209069609642
    2. ',' → logprob: -3.695920944213867
    3. ' ),' → logprob: -3.695920944213867
    4. ')' → logprob: -4.195920944213867
    5. '#' → logprob: -6.320920944213867
    6. ' ,' → logprob: -7.445920944213867
    7. ' )' → logprob: -8.320920944213867
    8. '),
' → logprob: -8.695920944213867
    9. 'e' → logprob: -9.070920944213867
    10. ' =' → logprob: -9.195920944213867

Token 119: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5173780918121338
    2. ' on' → logprob: -1.0173780918121338
    3. 'on' → logprob: -4.017377853393555
    4. ' #' → logprob: -4.392377853393555
    5. ' l' → logprob: -6.392377853393555
    6. ' le' → logprob: -7.142377853393555
    7. ' il' → logprob: -7.142377853393555
    8. ' j' → logprob: -7.267377853393555
    9. 'l' → logprob: -7.392377853393555
    10. 'j' → logprob: -7.392377853393555

Token 120: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.06615514308214188
    2. ' pour' → logprob: -4.941154956817627
    3. ' #' → logprob: -4.941154956817627
    4. 'on' → logprob: -5.066154956817627
    5. ' l' → logprob: -5.191154956817627
    6. ' le' → logprob: -5.191154956817627
    7. ' ' → logprob: -5.441154956817627
    8. '#' → logprob: -5.441154956817627
    9. ' il' → logprob: -5.566154956817627
    10. ' utiliser' → logprob: -6.441154956817627

Token 121: ' mém' (ID: 136981)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1601665019989014
    2. ' considère' → logprob: -1.7851665019989014
    3. ' peut' → logprob: -2.1601665019989014
    4. 'pe' → logprob: -2.2851665019989014
    5. ' stock' → logprob: -2.7851665019989014
    6. 'a' → logprob: -3.2851665019989014
    7. 'g' → logprob: -3.6601665019989014
    8. 'stock' → logprob: -3.6601665019989014
    9. 's' → logprob: -3.7851665019989014
    10. 'dp' → logprob: -3.9101665019989014

Token 122: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00046808819752186537
    2. 'o' → logprob: -9.125468254089355
    3. 'oire' → logprob: -9.125468254089355
    4. 'ory' → logprob: -9.250468254089355
    5. '#' → logprob: -9.875468254089355
    6. 'oris' → logprob: -10.125468254089355
    7. 'orie' → logprob: -11.250468254089355
    8. 'oi' → logprob: -12.000468254089355
    9. 'oir' → logprob: -12.125468254089355
    10. 'orique' → logprob: -12.375468254089355

Token 123: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.005478367675095797
    2. 'iser' → logprob: -5.380478382110596
    3. 'is' → logprob: -7.380478382110596
    4. 'isent' → logprob: -9.380477905273438
    5. '#' → logprob: -10.380477905273438
    6. 'ize' → logprob: -10.505477905273438
    7. 'e' → logprob: -11.005477905273438
    8. 'isé' → logprob: -11.380477905273438
    9. 'ie' → logprob: -11.755477905273438
    10. 'er' → logprob: -12.005477905273438

Token 124: ' pour' (ID: 1930)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9533010721206665
    2. ',' → logprob: -1.3283010721206665
    3. 'le' → logprob: -2.203300952911377
    4. ' la' → logprob: -2.578300952911377
    5. ' pour' → logprob: -2.828300952911377
    6. ' deux' → logprob: -3.578300952911377
    7. ' ' → logprob: -3.953300952911377
    8. ' for' → logprob: -4.953300952911377
    9. 'pour' → logprob: -4.953300952911377
    10. ' (' → logprob: -5.078300952911377

Token 125: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.015416761860251427
    2. 'cha' → logprob: -4.640416622161865
    3. 'ch' → logprob: -6.640416622161865
    4. 'tout' → logprob: -7.015416622161865
    5. 'each' → logprob: -7.515416622161865
    6. 't' → logprob: -7.515416622161865
    7. 'ach' → logprob: -7.765416622161865
    8. ' each' → logprob: -8.015417098999023
    9. 'Chaque' → logprob: -8.640417098999023
    10. '#' → logprob: -8.640417098999023

Token 126: ' nombre' (ID: 9733)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.538992166519165
    2. ' montant' → logprob: -1.788992166519165
    3. ' nombre' → logprob: -3.038992166519165
    4. 'nombre' → logprob: -3.413992166519165
    5. '(' → logprob: -3.538992166519165
    6. ' état' → logprob: -4.288991928100586
    7. 'mont' → logprob: -4.288991928100586
    8. 'budget' → logprob: -4.413991928100586
    9. ' budget' → logprob: -4.538991928100586
    10. 'argent' → logprob: -5.038991928100586

Token 127: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9645706415176392
    2. ' de' → logprob: -0.9645706415176392
    3. '_' → logprob: -2.2145705223083496
    4. '_de' → logprob: -2.8395705223083496
    5. ' ' → logprob: -4.71457052230835
    6. '_possible' → logprob: -4.71457052230835
    7. '_s' → logprob: -4.96457052230835
    8. 'd' → logprob: -4.96457052230835
    9. 'de' → logprob: -4.96457052230835
    10. 'possible' → logprob: -5.08957052230835

Token 128: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.1731913685798645
    2. '500' → logprob: -2.5481913089752197
    3. 'pi' → logprob: -3.5481913089752197
    4. 'pieces' → logprob: -3.9231913089752197
    5. ' pieces' → logprob: -4.298191547393799
    6. ' ' → logprob: -4.548191547393799
    7. 'sou' → logprob: -6.423191547393799
    8. '```' → logprob: -6.423191547393799
    9. ' pi' → logprob: -6.673191547393799
    10. 'tickets' → logprob: -7.423191547393799

Token 129: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22872211039066315
    2. ' ' → logprob: -1.978722095489502
    3. ' collected' → logprob: -3.603722095489502
    4. '_' → logprob: -3.978722095489502
    5. 'de' → logprob: -4.478722095489502
    6. '500' → logprob: -5.728722095489502
    7. ' collect' → logprob: -6.603722095489502
    8. '_de' → logprob: -7.353722095489502
    9. ' possible' → logprob: -7.478722095489502
    10. ' obten' → logprob: -7.853722095489502

Token 130: '500' (ID: 3234)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2319980412721634
    2. ' ' → logprob: -1.981998085975647
    3. '_' → logprob: -2.8569979667663574
    4. '_de' → logprob: -5.231997966766357
    5. 'de' → logprob: -5.606997966766357
    6. '500' → logprob: -6.481997966766357
    7. ' _' → logprob: -7.731997966766357
    8. ' d' → logprob: -8.606998443603516
    9. ' ,' → logprob: -8.856998443603516
    10. '  ' → logprob: -9.231998443603516

Token 131: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.3493281602859497
    2. '-' → logprob: -1.3493281602859497
    3. ' ' → logprob: -4.22432804107666
    4. ' -' → logprob: -5.09932804107666
    5. '	' → logprob: -5.72432804107666
    6. ' de' → logprob: -5.84932804107666
    7. '_' → logprob: -6.59932804107666
    8. '   ' → logprob: -6.97432804107666
    9. ',' → logprob: -7.09932804107666
    10. 'de' → logprob: -7.22432804107666

Token 132: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.018562864512205124
    2. '-en' → logprob: -4.0185627937316895
    3. '-' → logprob: -8.393563270568848
    4. '_' → logprob: -9.643563270568848
    5. '_en' → logprob: -9.768563270568848
    6. 'e' → logprob: -11.643563270568848
    7. '	en' → logprob: -11.768563270568848
    8. '=en' → logprob: -11.893563270568848
    9. '```' → logprob: -12.268563270568848
    10. '\-' → logprob: -12.393563270568848

Token 133: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4323461055755615
    2. ',' → logprob: -1.5573461055755615
    3. ' ,' → logprob: -1.5573461055755615
    4. '_' → logprob: -2.8073461055755615
    5. ' possible' → logprob: -3.0573461055755615
    6. ' et' → logprob: -3.3073461055755615
    7. ' collect' → logprob: -3.6823461055755615
    8. ' obten' → logprob: -3.9323461055755615
    9. ' collected' → logprob: -4.057346343994141
    10. ' reç' → logprob: -4.307346343994141

Token 134: ' sa' (ID: 880)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10475227981805801
    2. 'poss' → logprob: -3.1047523021698
    3. ' possession' → logprob: -3.2297523021698
    4. ' poss' → logprob: -4.354752063751221
    5. ' pos' → logprob: -7.604752063751221
    6. '_pos' → logprob: -8.229752540588379
    7. 'vente' → logprob: -8.854752540588379
    8. '_' → logprob: -8.854752540588379
    9. 'main' → logprob: -8.979752540588379
    10. 'po' → logprob: -9.479752540588379

Token 135: ' possession' (ID: 37597)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -1.6696964502334595
    2. 'uv' → logprob: -1.7946964502334595
    3. 'rv' → logprob: -2.66969633102417
    4. 'u' → logprob: -2.79469633102417
    5. 'ng' → logprob: -2.91969633102417
    6. 'voir' → logprob: -2.91969633102417
    7. 'r' → logprob: -3.04469633102417
    8. 'dis' → logprob: -3.29469633102417
    9. 's' → logprob: -3.54469633102417
    10. 'c' → logprob: -3.66969633102417

Token 136: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49534812569618225
    2. ' ,' → logprob: -1.1203480958938599
    3. ' possible' → logprob: -3.6203482151031494
    4. ' ' → logprob: -4.62034797668457
    5. ' et' → logprob: -4.62034797668457
    6. 'possible' → logprob: -4.62034797668457
    7. ' le' → logprob: -6.99534797668457
    8. 'et' → logprob: -7.24534797668457
    9. ' (' → logprob: -7.24534797668457
    10. ' la' → logprob: -7.37034797668457

Token 137: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.4599699974060059
    2. 'pour' → logprob: -1.7099699974060059
    3. 'l' → logprob: -2.084969997406006
    4. ' chaque' → logprob: -2.334969997406006
    5. ' le' → logprob: -2.459969997406006
    6. ' pour' → logprob: -2.709969997406006
    7. ' la' → logprob: -3.084969997406006
    8. 'la' → logprob: -3.084969997406006
    9. ' l' → logprob: -3.459969997406006
    10. ' une' → logprob: -4.459969997406006

Token 138: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -1.595738410949707
    2. 'd' → logprob: -1.845738410949707
    3. 'mont' → logprob: -2.095738410949707
    4. ' billets' → logprob: -2.470738410949707
    5. ' dépenses' → logprob: -2.970738410949707
    6. ' rest' → logprob: -3.095738410949707
    7. 'rest' → logprob: -3.345738410949707
    8. 'bil' → logprob: -3.470738410949707
    9. 'diff' → logprob: -3.970738410949707
    10. '0' → logprob: -3.970738410949707

Token 139: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26261910796165466
    2. ' ' → logprob: -1.762619137763977
    3. '_' → logprob: -3.7626190185546875
    4. 'de' → logprob: -4.3876190185546875
    5. ' d' → logprob: -4.6376190185546875
    6. ' rest' → logprob: -5.5126190185546875
    7. ' restantes' → logprob: -5.5126190185546875
    8. '500' → logprob: -6.3876190185546875
    9. 'd' → logprob: -7.0126190185546875
    10. ' #' → logprob: -7.1376190185546875

Token 140: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3448498547077179
    2. ' de' → logprob: -1.4698498249053955
    3. ' )' → logprob: -3.2198498249053955
    4. 'de' → logprob: -4.969850063323975
    5. '_' → logprob: -5.719850063323975
    6. ')' → logprob: -5.719850063323975
    7. ' d' → logprob: -5.969850063323975
    8. ' ),' → logprob: -6.844850063323975
    9. ' ,' → logprob: -7.094850063323975
    10. '  ' → logprob: -7.094850063323975

Token 141: ',' (ID: 11)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.06054282560944557
    2. ',' → logprob: -3.1855428218841553
    3. '0' → logprob: -5.560543060302734
    4. ' et' → logprob: -5.810543060302734
    5. ')' → logprob: -6.060543060302734
    6. '000' → logprob: -6.310543060302734
    7. 'et' → logprob: -6.935543060302734
    8. ' and' → logprob: -7.060543060302734
    9. 'e' → logprob: -7.310543060302734
    10. ' ' → logprob: -7.435543060302734

Token 142: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.42126429080963135
    2. ' ' → logprob: -1.5462642908096313
    3. '500' → logprob: -2.546264171600342
    4. '2' → logprob: -3.421264171600342
    5. '0' → logprob: -4.421264171600342
    6. '50' → logprob: -5.296264171600342
    7. '10' → logprob: -6.921264171600342
    8. '100' → logprob: -7.671264171600342
    9. ')' → logprob: -7.921264171600342
    10. '3' → logprob: -8.5462646484375

Token 143: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28387758135795593
    2. '00' → logprob: -1.4088776111602783
    3. ' ' → logprob: -6.283877372741699
    4. ',' → logprob: -8.2838773727417
    5. '-' → logprob: -8.5338773727417
    6. ' -' → logprob: -9.0338773727417
    7. '000' → logprob: -9.1588773727417
    8. ')' → logprob: -9.4088773727417
    9. ' ,' → logprob: -11.6588773727417
    10. ' )' → logprob: -11.9088773727417

Token 144: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04812554642558098
    2. '0' → logprob: -3.1731255054473877
    3. ' ' → logprob: -5.923125743865967
    4. '100' → logprob: -6.798125743865967
    5. '50' → logprob: -7.673125743865967
    6. '20' → logprob: -8.298125267028809
    7. ')' → logprob: -8.798125267028809
    8. '500' → logprob: -8.923125267028809
    9. '00' → logprob: -9.548125267028809
    10. '25' → logprob: -9.548125267028809

Token 145: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.617405354976654
    2. ' )' → logprob: -2.242405414581299
    3. ',' → logprob: -2.492405414581299
    4. '-y' → logprob: -2.742405414581299
    5. ')-' → logprob: -3.242405414581299
    6. ' ,' → logprob: -3.367405414581299
    7. '-' → logprob: -3.492405414581299
    8. '),' → logprob: -3.867405414581299
    9. ' ' → logprob: -3.992405414581299
    10. '0' → logprob: -4.117405414581299

Token 146: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.018029121682047844
    2. '100' → logprob: -4.76802921295166
    3. '20' → logprob: -5.39302921295166
    4. ' ' → logprob: -5.76802921295166
    5. '25' → logprob: -7.14302921295166
    6. ')' → logprob: -7.76802921295166
    7. '500' → logprob: -8.01802921295166
    8. '0' → logprob: -10.39302921295166
    9. 'and' → logprob: -11.14302921295166
    10. '```' → logprob: -11.14302921295166

Token 147: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.502956211566925
    2. ',' → logprob: -1.2529561519622803
    3. ' )' → logprob: -2.6279561519622803
    4. ' ,' → logprob: -3.6279561519622803
    5. '),' → logprob: -5.752956390380859
    6. ' ' → logprob: -6.252956390380859
    7. '0' → logprob: -6.877956390380859
    8. ',y' → logprob: -7.127956390380859
    9. ')-' → logprob: -7.127956390380859
    10. ' ),' → logprob: -7.877956390380859

Token 148: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0015559245366603136
    2. '500' → logprob: -6.501555919647217
    3. ' ' → logprob: -10.126556396484375
    4. '0' → logprob: -11.626556396484375
    5. ')' → logprob: -13.501556396484375
    6. '50' → logprob: -14.501556396484375
    7. '```' → logprob: -14.876556396484375
    8. '   ' → logprob: -15.251556396484375
    9. '#' → logprob: -15.501556396484375
    10. '200' → logprob: -15.501556396484375

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5931532382965088
    2. ',' → logprob: -0.8431532382965088
    3. ' )' → logprob: -5.59315299987793
    4. ',)' → logprob: -5.59315299987793
    5. '0' → logprob: -5.96815299987793
    6. ',y' → logprob: -6.46815299987793
    7. '),' → logprob: -6.71815299987793
    8. ' ,' → logprob: -6.84315299987793
    9. ',#' → logprob: -7.71815299987793
    10. ')#' → logprob: -7.96815299987793

Token 150: ' déten' (ID: 196943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4374808073043823
    2. ')' → logprob: -1.8124808073043823
    3. '_' → logprob: -2.187480926513672
    4. ' ,' → logprob: -3.437480926513672
    5. ' ' → logprob: -4.312480926513672
    6. ' )' → logprob: -4.812480926513672
    7. 's' → logprob: -5.062480926513672
    8. ' _' → logprob: -5.437480926513672
    9. '_s' → logprob: -5.812480926513672
    10. '<|end|>' → logprob: -6.687480926513672

Token 151: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.19416247308254242
    2. 'u' → logprob: -1.8191624879837036
    3. 'us' → logprob: -4.819162368774414
    4. 'es' → logprob: -5.319162368774414
    5. 'ue' → logprob: -7.194162368774414
    6. 'ant' → logprob: -8.819162368774414
    7. '   ' → logprob: -9.444162368774414
    8. 's' → logprob: -10.194162368774414
    9. '

' → logprob: -10.444162368774414
    10. '#' → logprob: -10.444162368774414

Token 152: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07831323891878128
    2. ' ' → logprob: -3.7033133506774902
    3. ' ,' → logprob: -4.20331335067749
    4. 's' → logprob: -4.57831335067749
    5. ')' → logprob: -5.32831335067749
    6. 'es' → logprob: -5.57831335067749
    7. ':' → logprob: -5.82831335067749
    8. ',
' → logprob: -6.07831335067749
    9. '[' → logprob: -6.32831335067749
    10. '.' → logprob: -6.57831335067749

Token 153: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9385263323783875
    2. ':' → logprob: -1.5635263919830322
    3. ' ' → logprob: -1.5635263919830322
    4. ')' → logprob: -2.8135263919830322
    5. ' ,' → logprob: -3.6885263919830322
    6. ' :' → logprob: -3.6885263919830322
    7. '_' → logprob: -3.8135263919830322
    8. '[' → logprob: -4.563526153564453
    9. '<|end|>' → logprob: -4.813526153564453
    10. 's' → logprob: -5.063526153564453

Token 154: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8930279016494751
    2. ')' → logprob: -1.393027901649475
    3. ' ' → logprob: -1.768027901649475
    4. '#' → logprob: -3.3930277824401855
    5. ' ,' → logprob: -3.7680277824401855
    6. ' en' → logprob: -4.0180277824401855
    7. '   ' → logprob: -4.2680277824401855
    8. ' )' → logprob: -4.2680277824401855
    9. ':' → logprob: -4.6430277824401855
    10. ' et' → logprob: -4.7680277824401855

Token 155: ' dép' (ID: 34015)
  Prédit: ' meilleure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleure' → logprob: -0.8981660604476929
    2. ' quantité' → logprob: -0.8981660604476929
    3. ' valeur' → logprob: -3.7731661796569824
    4. 'me' → logprob: -3.8981661796569824
    5. ' meilleur' → logprob: -4.023166179656982
    6. ' somme' → logprob: -4.273166179656982
    7. ' possibilité' → logprob: -4.273166179656982
    8. ' dép' → logprob: -4.773166179656982
    9. ' ' → logprob: -5.023166179656982
    10. 'quant' → logprob: -5.023166179656982

Token 156: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -1.4163234233856201
    2. 'endent' → logprob: -1.6663234233856201
    3. 'fin' → logprob: -3.29132342338562
    4. 'end' → logprob: -3.29132342338562
    5. 'artement' → logprob: -3.29132342338562
    6. 'endant' → logprob: -3.54132342338562
    7. 'f' → logprob: -3.54132342338562
    8. '=' → logprob: -3.54132342338562
    9. 'inition' → logprob: -3.66632342338562
    10. 'artment' → logprob: -3.79132342338562

Token 157: ' minimale' (ID: 143217)
  Prédit: ' totale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.07612711936235428
    2. ' minimale' → logprob: -3.076127052307129
    3. ' total' → logprob: -4.826127052307129
    4. ' ' → logprob: -5.076127052307129
    5. '_total' → logprob: -5.576127052307129
    6. '_' → logprob: -5.951127052307129
    7. '_tot' → logprob: -6.701127052307129
    8. ' maximale' → logprob: -6.826127052307129
    9. 'total' → logprob: -7.076127052307129
    10. ' effectu' → logprob: -7.201127052307129

Token 158: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5291264057159424
    2. ',' → logprob: -2.0291264057159424
    3. ' ,' → logprob: -2.0291264057159424
    4. ' possible' → logprob: -2.0291264057159424
    5. ' =' → logprob: -2.1541264057159424
    6. ' )' → logprob: -2.2791264057159424
    7. 'possible' → logprob: -2.7791264057159424
    8. ')' → logprob: -4.029126167297363
    9. '_possible' → logprob: -4.029126167297363
    10. '.' → logprob: -4.529126167297363

Token 159: ' arriver' (ID: 78302)
  Prédit: 'acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -1.041331171989441
    2. ' acheter' → logprob: -1.916331171989441
    3. 'ach' → logprob: -2.4163312911987305
    4. ' continuer' → logprob: -2.5413312911987305
    5. ' effectuer' → logprob: -2.5413312911987305
    6. ' atteindre' → logprob: -2.5413312911987305
    7. ' pouvoir' → logprob: -3.6663312911987305
    8. ' l' → logprob: -4.0413312911987305
    9. ' ce' → logprob: -4.4163312911987305
    10. ' parvenir' → logprob: -4.5413312911987305

Token 160: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.017314225435256958
    2. ' ' → logprob: -4.267314434051514
    3. ' au' → logprob: -6.517314434051514
    4. 'à' → logprob: -6.892314434051514
    5. 'au' → logprob: -8.892313957214355
    6. '_' → logprob: -8.892313957214355
    7. ' là' → logprob: -9.017313957214355
    8. ' jusqu' → logprob: -9.517313957214355
    9. ' jusque' → logprob: -9.517313957214355
    10. ' a' → logprob: -10.267313957214355

Token 161: ' cet' (ID: 19505)
  Prédit: ' cet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cet' → logprob: -0.9456773996353149
    2. ' ce' → logprob: -1.320677399635315
    3. 'cet' → logprob: -1.570677399635315
    4. 'c' → logprob: -2.4456772804260254
    5. 'ce' → logprob: -3.6956772804260254
    6. ' cette' → logprob: -3.8206772804260254
    7. 'i' → logprob: -7.070677280426025
    8. ' i' → logprob: -7.445677280426025
    9. ' ' → logprob: -7.820677280426025
    10. ' c' → logprob: -7.945677280426025

Token 162: ' état' (ID: 59181)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.2535623013973236
    2. ' état' → logprob: -1.503562331199646
    3. ''état' → logprob: -7.7535624504089355
    4. 'éta' → logprob: -8.628561973571777
    5. 'etat' → logprob: -8.878561973571777
    6. ' états' → logprob: -9.003561973571777
    7. 'é' → logprob: -9.128561973571777
    8. ' ' → logprob: -9.253561973571777
    9. '’état' → logprob: -9.753561973571777
    10. '_' → logprob: -9.878561973571777

Token 163: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35239163041114807
    2. ',' → logprob: -2.1023917198181152
    3. '_' → logprob: -3.1023917198181152
    4. '[' → logprob: -3.2273917198181152
    5. ':' → logprob: -4.227391719818115
    6. ' =' → logprob: -4.352391719818115
    7. 's' → logprob: -4.727391719818115
    8. 'import' → logprob: -4.852391719818115
    9. '#' → logprob: -4.977391719818115
    10. ' ,' → logprob: -5.352391719818115

Token 164: '#
' (ID: 11240)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2198456972837448
    2. '[' → logprob: -2.969845771789551
    3. ':' → logprob: -3.344845771789551
    4. '#' → logprob: -3.469845771789551
    5. ',' → logprob: -3.594845771789551
    6. '_' → logprob: -3.719845771789551
    7. 'def' → logprob: -5.469845771789551
    8. ')' → logprob: -5.469845771789551
    9. 'import' → logprob: -5.594845771789551
    10. '.' → logprob: -5.719845771789551

Token 165: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.987088143825531
    2. ' ' → logprob: -1.2370882034301758
    3. '#' → logprob: -1.6120882034301758
    4. ',' → logprob: -3.362088203430176
    5. 'import' → logprob: -4.362088203430176
    6. 'd' → logprob: -4.487088203430176
    7. ')' → logprob: -4.612088203430176
    8. ':' → logprob: -4.612088203430176
    9. '.' → logprob: -4.987088203430176
    10. '_' → logprob: -5.112088203430176

Token 166: ' Difficult' (ID: 184239)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07907286286354065
    2. 'd' → logprob: -3.454072952270508
    3. '#' → logprob: -4.329072952270508
    4. '[' → logprob: -4.579072952270508
    5. 'def' → logprob: -5.079072952270508
    6. 'import' → logprob: -5.079072952270508
    7. ' ]' → logprob: -6.829072952270508
    8. 'from' → logprob: -6.954072952270508
    9. 'n' → logprob: -7.079072952270508
    10. ':' → logprob: -7.204072952270508

Token 167: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -6.742448022123426e-05
    2. 'és' → logprob: -10.125067710876465
    3. 'e' → logprob: -10.875067710876465
    4. 'ié' → logprob: -12.750067710876465
    5. '#' → logprob: -13.000067710876465
    6. 'u' → logprob: -14.375067710876465
    7. ',' → logprob: -14.875067710876465
    8. 'É' → logprob: -15.250067710876465
    9. '_' → logprob: -15.500067710876465
    10. 'ité' → logprob: -15.625067710876465

Token 168: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44979286193847656
    2. ' :' → logprob: -1.8247928619384766
    3. ',' → logprob: -2.6997928619384766
    4. '.' → logprob: -2.9497928619384766
    5. ' ' → logprob: -3.5747928619384766
    6. '#' → logprob: -3.9497928619384766
    7. 's' → logprob: -4.074792861938477
    8. ' ' → logprob: -5.074792861938477
    9. ' de' → logprob: -6.574792861938477
    10. ' =' → logprob: -6.699792861938477

Token 169: ' 
' (ID: 793)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3213894367218018
    2. ' gérer' → logprob: -1.6963894367218018
    3. 'la' → logprob: -1.9463894367218018
    4. ' le' → logprob: -1.9463894367218018
    5. ' la' → logprob: -2.0713894367218018
    6. 'l' → logprob: -3.3213894367218018
    7. 'g' → logprob: -3.9463894367218018
    8. 'les' → logprob: -4.321389198303223
    9. ' rendre' → logprob: -4.446389198303223
    10. 'r' → logprob: -4.821389198303223

Token 170: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08591475337743759
    2. '#' → logprob: -2.9609148502349854
    3. ' #' → logprob: -4.335914611816406
    4. ' ' → logprob: -5.085914611816406
    5. ' (' → logprob: -6.585914611816406
    6. '   ' → logprob: -6.710914611816406
    7. '    ' → logprob: -6.835914611816406
    8. '<|end|>' → logprob: -7.210914611816406
    9. '  ' → logprob: -7.460914611816406
    10. ',' → logprob: -7.460914611816406

Token 171: ' Les' (ID: 7029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8992475271224976
    2. ' la' → logprob: -1.7742475271224976
    3. ' La' → logprob: -2.774247646331787
    4. ' Le' → logprob: -2.899247646331787
    5. 'Le' → logprob: -2.899247646331787
    6. 'La' → logprob: -3.024247646331787
    7. ' le' → logprob: -3.024247646331787
    8. ' #' → logprob: -3.524247646331787
    9. ' gérer' → logprob: -3.649247646331787
    10. ' l' → logprob: -4.399247646331787

Token 172: ' pièces' (ID: 49165)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.10355056822299957
    2. ' pièces' → logprob: -2.853550672531128
    3. ' États' → logprob: -4.228550434112549
    4. ' ' → logprob: -5.353550434112549
    5. ' espaces' → logprob: -5.478550434112549
    6. 'pi' → logprob: -6.353550434112549
    7. ' nombres' → logprob: -6.603550434112549
    8. ' states' → logprob: -6.728550434112549
    9. ' #' → logprob: -6.978550434112549
    10. ' Etats' → logprob: -7.041050434112549

Token 173: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8527676463127136
    2. ' de' → logprob: -1.3527677059173584
    3. ',' → logprob: -2.3527677059173584
    4. ' ,' → logprob: -3.1027677059173584
    5. ' sont' → logprob: -3.3527677059173584
    6. 's' → logprob: -3.3527677059173584
    7. ' restantes' → logprob: -3.7277677059173584
    8. '500' → logprob: -3.9777677059173584
    9. ' s' → logprob: -4.352767467498779
    10. 'de' → logprob: -4.727767467498779

Token 174: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8639033436775208
    2. ' de' → logprob: -1.113903284072876
    3. 's' → logprob: -2.363903284072876
    4. ' sont' → logprob: -3.238903284072876
    5. ',' → logprob: -3.363903284072876
    6. 'de' → logprob: -3.738903284072876
    7. '500' → logprob: -3.863903284072876
    8. ' s' → logprob: -4.863903522491455
    9. '.' → logprob: -5.363903522491455
    10. '_' → logprob: -5.738903522491455

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0780494287610054
    2. '0' → logprob: -2.953049421310425
    3. '<|end|>' → logprob: -4.953049659729004
    4. '00' → logprob: -5.328049659729004
    5. ')' → logprob: -5.953049659729004
    6. '-' → logprob: -6.078049659729004
    7. 's' → logprob: -6.953049659729004
    8. ' ,' → logprob: -7.078049659729004
    9. '-,' → logprob: -7.328049659729004
    10. ',
' → logprob: -7.453049659729004

Token 176: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0014542824355885386
    2. ' ' → logprob: -6.7514543533325195
    3. '10' → logprob: -8.50145435333252
    4. '50' → logprob: -9.62645435333252
    5. '500' → logprob: -11.87645435333252
    6. '0' → logprob: -13.50145435333252
    7. '2' → logprob: -13.87645435333252
    8. '  ' → logprob: -14.25145435333252
    9. '#' → logprob: -14.37645435333252
    10. ',' → logprob: -14.43895435333252

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11956074088811874
    2. '0' → logprob: -2.244560718536377
    3. '-' → logprob: -6.119560718536377
    4. ',-' → logprob: -6.744560718536377
    5. '-,' → logprob: -6.869560718536377
    6. ' ,' → logprob: -7.494560718536377
    7. '00' → logprob: -7.744560718536377
    8. ',#' → logprob: -7.869560718536377
    9. '<|end|>' → logprob: -8.494561195373535
    10. ' et' → logprob: -8.494561195373535

Token 178: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00017278951418120414
    2. 'et' → logprob: -8.87517261505127
    3. '100' → logprob: -11.25017261505127
    4. ' ' → logprob: -11.37517261505127
    5. ',' → logprob: -12.37517261505127
    6. ' et' → logprob: -13.12517261505127
    7. '50' → logprob: -14.00017261505127
    8. '#' → logprob: -14.25017261505127
    9. '0' → logprob: -15.75017261505127
    10. 'and' → logprob: -16.000173568725586

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013896391028538346
    2. ',-' → logprob: -8.626389503479004
    3. '50' → logprob: -8.751389503479004
    4. '0' → logprob: -8.751389503479004
    5. ',#' → logprob: -8.751389503479004
    6. ' et' → logprob: -8.876389503479004
    7. ' ,' → logprob: -9.126389503479004
    8. '-,' → logprob: -9.126389503479004
    9. '-' → logprob: -9.251389503479004
    10. '<|end|>' → logprob: -9.376389503479004

Token 180: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.00041065402911044657
    2. 'et' → logprob: -7.875410556793213
    3. ' ' → logprob: -11.500411033630371
    4. '100' → logprob: -11.750411033630371
    5. '20' → logprob: -12.500411033630371
    6. ' et' → logprob: -12.750411033630371
    7. '#' → logprob: -13.125411033630371
    8. '25' → logprob: -13.625411033630371
    9. 'and' → logprob: -13.625411033630371
    10. ' and' → logprob: -13.875411033630371

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005859701428562403
    2. '<|end|>' → logprob: -5.630859851837158
    3. ',#' → logprob: -7.005859851837158
    4. ')' → logprob: -8.005859375
    5. '-' → logprob: -8.755859375
    6. ' et' → logprob: -8.880859375
    7. ' ,' → logprob: -9.255859375
    8. ',
' → logprob: -9.505859375
    9. '0' → logprob: -9.505859375
    10. ',-' → logprob: -9.755859375

Token 182: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00030197695014066994
    2. ' ' → logprob: -8.3753023147583
    3. 'et' → logprob: -10.1253023147583
    4. '0' → logprob: -12.0003023147583
    5. ' et' → logprob: -12.0003023147583
    6. 'and' → logprob: -12.2503023147583
    7. '20' → logprob: -12.2503023147583
    8. ' and' → logprob: -12.5003023147583
    9. '50' → logprob: -13.8753023147583
    10. '#' → logprob: -13.8753023147583

Token 183: ' peuvent' (ID: 21321)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30594220757484436
    2. ' ' → logprob: -2.8059422969818115
    3. 's' → logprob: -2.8059422969818115
    4. '<|end|>' → logprob: -3.0559422969818115
    5. ')' → logprob: -3.1809422969818115
    6. ' ,' → logprob: -3.4309422969818115
    7. '_' → logprob: -4.555942058563232
    8. '.' → logprob: -6.430942058563232
    9. '}' → logprob: -6.868442058563232
    10. ' )' → logprob: -6.868442058563232

Token 184: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6205877661705017
    2. ' être' → logprob: -1.1205878257751465
    3. ' varier' → logprob: -3.2455878257751465
    4. 's' → logprob: -4.1205878257751465
    5. ' s' → logprob: -4.8705878257751465
    6. ' ' → logprob: -4.8705878257751465
    7. ' avoir' → logprob: -5.2455878257751465
    8. 'avoir' → logprob: -5.3705878257751465
    9. 'se' → logprob: -5.8080878257751465
    10. ' changer' → logprob: -5.9330878257751465

Token 185: ' en' (ID: 469)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.2161592245101929
    2. 'com' → logprob: -1.8411592245101929
    3. ' combin' → logprob: -2.2161593437194824
    4. ' utilisées' → logprob: -2.2161593437194824
    5. 'comb' → logprob: -2.8411593437194824
    6. 'éch' → logprob: -3.3411593437194824
    7. ' nombreuses' → logprob: -3.3411593437194824
    8. 'en' → logprob: -4.091159343719482
    9. 'd' → logprob: -4.216159343719482
    10. 'don' → logprob: -4.341159343719482

Token 186: ' quantité' (ID: 89219)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -1.1819405555725098
    2. 'nombre' → logprob: -1.3069405555725098
    3. 'quant' → logprob: -2.1819405555725098
    4. ' quantité' → logprob: -2.4319405555725098
    5. ' nombre' → logprob: -3.3069405555725098
    6. 's' → logprob: -3.4319405555725098
    7. 't' → logprob: -3.5569405555725098
    8. ' grand' → logprob: -3.6819405555725098
    9. 'tr' → logprob: -3.8069405555725098
    10. ' grande' → logprob: -4.68194055557251

Token 187: ' variable' (ID: 11076)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.1740891933441162
    2. ' limitée' → logprob: -1.5490891933441162
    3. ' infin' → logprob: -1.9240891933441162
    4. 'ill' → logprob: -1.9240891933441162
    5. ' ill' → logprob: -2.549089193344116
    6. ' limité' → logprob: -4.049089431762695
    7. 'lim' → logprob: -4.299089431762695
    8. 'import' → logprob: -4.424089431762695
    9. 'inf' → logprob: -4.549089431762695
    10. ' quelcon' → logprob: -4.674089431762695

Token 188: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4146278202533722
    2. ',' → logprob: -1.5396277904510498
    3. '[' → logprob: -3.16462779045105
    4. ')' → logprob: -4.039628028869629
    5. '.' → logprob: -4.039628028869629
    6. '#' → logprob: -4.539628028869629
    7. ' :' → logprob: -4.914628028869629
    8. '<|end|>' → logprob: -5.164628028869629
    9. 'import' → logprob: -5.414628028869629
    10. '```' → logprob: -5.539628028869629

Token 189: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.8046035170555115
    2. '#' → logprob: -0.9296035170555115
    3. ' ' → logprob: -2.9296035766601562
    4. ' #' → logprob: -3.3046035766601562
    5. ',' → logprob: -3.9296035766601562
    6. ' et' → logprob: -4.429603576660156
    7. ' but' → logprob: -4.929603576660156
    8. '.' → logprob: -5.679603576660156
    9. ' il' → logprob: -5.929603576660156
    10. ' donc' → logprob: -6.054603576660156

Token 190: ' neut' (ID: 18541)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8302631378173828
    2. ' limité' → logprob: -1.0802631378173828
    3. 'on' → logprob: -3.080263137817383
    4. ' pour' → logprob: -3.455263137817383
    5. ' limitée' → logprob: -3.830263137817383
    6. ' limit' → logprob: -3.955263137817383
    7. 'limit' → logprob: -4.330263137817383
    8. '#' → logprob: -4.580263137817383
    9. ' leur' → logprob: -4.705263137817383
    10. ' la' → logprob: -4.705263137817383

Token 191: 'rement' (ID: 66132)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.20474345982074738
    2. 'rale' → logprob: -2.0797433853149414
    3. 'ral' → logprob: -3.0797433853149414
    4. 'res' → logprob: -5.704743385314941
    5. 'r' → logprob: -5.829743385314941
    6. 'e' → logprob: -6.579743385314941
    7. 'rée' → logprob: -6.579743385314941
    8. 'ra' → logprob: -6.579743385314941
    9. '#' → logprob: -6.704743385314941
    10. 'rès' → logprob: -7.454743385314941

Token 192: ' g' (ID: 329)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.063638687133789
    2. ',' → logprob: -1.438638687133789
    3. 'es' → logprob: -1.563638687133789
    4. ' ,' → logprob: -2.063638687133789
    5. '.' → logprob: -3.813638687133789
    6. '<|end|>' → logprob: -4.063638687133789
    7. ' ' → logprob: -4.438638687133789
    8. 's' → logprob: -4.813638687133789
    9. ' e' → logprob: -5.063638687133789
    10. '0' → logprob: -7.188638687133789

Token 193: 'ér' (ID: 2156)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.09626728296279907
    2. 'érées' → logprob: -3.2212672233581543
    3. 'érés' → logprob: -3.7212672233581543
    4. 'éré' → logprob: -4.846267223358154
    5. 'r' → logprob: -5.221267223358154
    6. 'estion' → logprob: -5.846267223358154
    7. 'érer' → logprob: -6.221267223358154
    8. 'ér' → logprob: -6.221267223358154
    9. 'rée' → logprob: -6.596267223358154
    10. 'é' → logprob: -6.846267223358154

Token 194: 'ables' (ID: 3232)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3506626784801483
    2. 'é' → logprob: -1.6006627082824707
    3. 'er' → logprob: -3.6006627082824707
    4. 'érée' → logprob: -3.7256627082824707
    5. 'ées' → logprob: -4.350662708282471
    6. 'ér' → logprob: -4.725662708282471
    7. 'érer' → logprob: -4.850662708282471
    8. 'és' → logprob: -5.600662708282471
    9. 'éré' → logprob: -6.100662708282471
    10. '#' → logprob: -6.725662708282471

Token 195: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35002705454826355
    2. '<|end|>' → logprob: -2.100027084350586
    3. 's' → logprob: -3.600027084350586
    4. ' ,' → logprob: -3.725027084350586
    5. '.' → logprob: -3.725027084350586
    6. ' ' → logprob: -3.850027084350586
    7. ':' → logprob: -4.100027084350586
    8. '#' → logprob: -4.350027084350586
    9. ')' → logprob: -4.725027084350586
    10. '[' → logprob: -4.975027084350586

Token 196: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.6889618635177612
    2. 'les' → logprob: -1.8139618635177612
    3. 'leur' → logprob: -2.188961982727051
    4. 'la' → logprob: -2.313961982727051
    5. 'lim' → logprob: -2.438961982727051
    6. 'on' → logprob: -2.938961982727051
    7. '500' → logprob: -3.063961982727051
    8. '100' → logprob: -3.063961982727051
    9. 'elles' → logprob: -3.688961982727051
    10. 'cha' → logprob: -3.938961982727051

Token 197: ' mont' (ID: 11554)
  Prédit: ' pièces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.9800049662590027
    2. ' mont' → logprob: -1.9800050258636475
    3. ' ' → logprob: -2.1050050258636475
    4. ' billets' → logprob: -3.1050050258636475
    5. ' valeurs' → logprob: -3.2300050258636475
    6. ' sommes' → logprob: -3.3550050258636475
    7. '100' → logprob: -3.9175050258636475
    8. 'mont' → logprob: -3.9800050258636475
    9. ' prix' → logprob: -4.292504787445068
    10. ' achats' → logprob: -4.355004787445068

Token 198: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.0010553185129538178
    2. 'ant' → logprob: -6.8760552406311035
    3. 'ans' → logprob: -12.001055717468262
    4. 'a' → logprob: -12.251055717468262
    5. ' ants' → logprob: -12.626055717468262
    6. 's' → logprob: -13.376055717468262
    7. 'ages' → logprob: -13.876055717468262
    8. 'ons' → logprob: -13.876055717468262
    9. 'antd' → logprob: -14.876055717468262
    10. 'an' → logprob: -14.876055717468262

Token 199: ' max' (ID: 2999)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.497993528842926
    2. '100' → logprob: -1.2479934692382812
    3. '500' → logprob: -3.1229934692382812
    4. '300' → logprob: -4.372993469238281
    5. '200' → logprob: -4.997993469238281
    6. ' #' → logprob: -5.622993469238281
    7. ' somme' → logprob: -5.622993469238281
    8. '#' → logprob: -5.872993469238281
    9. '1' → logprob: -5.997993469238281
    10. '10' → logprob: -6.060493469238281

Token 202: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.19976282119750977
    2. '500' → logprob: -2.1997628211975098
    3. ' ' → logprob: -4.07476282119751
    4. '10' → logprob: -4.44976282119751
    5. '200' → logprob: -4.44976282119751
    6. '300' → logprob: -4.82476282119751
    7. '20' → logprob: -5.19976282119751
    8. '50' → logprob: -6.19976282119751
    9. 'inf' → logprob: -6.32476282119751
    10. '250' → logprob: -6.69976282119751

Token 203: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0003992319107056
    2. ',' → logprob: -1.5003992319107056
    3. '<|end|>' → logprob: -2.000399112701416
    4. ':' → logprob: -2.875399112701416
    5. '[' → logprob: -3.250399112701416
    6. '#' → logprob: -3.500399112701416
    7. '
' → logprob: -3.875399112701416
    8. ']' → logprob: -3.875399112701416
    9. ')' → logprob: -4.000399112701416
    10. '<|end|>' → logprob: -4.250399112701416

Token 204: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4295194149017334
    2. '<|end|>' → logprob: -1.6795194149017334
    3. ':' → logprob: -1.8045194149017334
    4. ' ' → logprob: -2.5545194149017334
    5. '
' → logprob: -2.6795194149017334
    6. 'def' → logprob: -3.0545194149017334
    7. '#' → logprob: -3.1795194149017334
    8. ')' → logprob: -3.1795194149017334
    9. '[' → logprob: -3.4295194149017334
    10. '_' → logprob: -4.0545196533203125

Token 205: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27509352564811707
    2. ',' → logprob: -2.7750935554504395
    3. ' ' → logprob: -3.0250935554504395
    4. ' #' → logprob: -3.4000935554504395
    5. '.' → logprob: -4.0250935554504395
    6. '<|end|>' → logprob: -4.6500935554504395
    7. ' donc' → logprob: -4.6500935554504395
    8. '0' → logprob: -4.7750935554504395
    9. ' et' → logprob: -5.4000935554504395
    10. ')' → logprob: -5.4000935554504395

Token 206: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03479480370879173
    2. ' #' → logprob: -4.284794807434082
    3. ' donc' → logprob: -5.034794807434082
    4. ',' → logprob: -6.034794807434082
    5. ' on' → logprob: -6.659794807434082
    6. 'don' → logprob: -6.784794807434082
    7. ' et' → logprob: -6.909794807434082
    8. '...' → logprob: -7.034794807434082
    9. 'et' → logprob: -7.034794807434082
    10. ' ce' → logprob: -7.034794807434082

Token 207: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3624498248100281
    2. 'on' → logprob: -1.2374498844146729
    3. ' la' → logprob: -5.987449645996094
    4. 'les' → logprob: -6.487449645996094
    5. 'le' → logprob: -6.612449645996094
    6. 'la' → logprob: -6.612449645996094
    7. ' les' → logprob: -6.737449645996094
    8. ' le' → logprob: -6.987449645996094
    9. ' l' → logprob: -7.362449645996094
    10. 'lim' → logprob: -7.362449645996094

Token 208: ' pièces' (ID: 49165)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.44829532504081726
    2. 'quant' → logprob: -1.5732953548431396
    3. ' pièces' → logprob: -2.8232953548431396
    4. ' quant' → logprob: -4.3232951164245605
    5. ' États' → logprob: -4.3232951164245605
    6. 'pi' → logprob: -4.4482951164245605
    7. ' ' → logprob: -4.6982951164245605
    8. 'mont' → logprob: -5.1982951164245605
    9. ' pieces' → logprob: -5.3232951164245605
    10. ' pi' → logprob: -5.5732951164245605

Token 209: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6596039533615112
    2. ' peuvent' → logprob: -1.6596039533615112
    3. ' sont' → logprob: -1.9096039533615112
    4. 's' → logprob: -2.159604072570801
    5. ' restantes' → logprob: -3.034604072570801
    6. ' rest' → logprob: -3.159604072570801
    7. ' de' → logprob: -3.284604072570801
    8. ' seront' → logprob: -3.284604072570801
    9. ' utilisées' → logprob: -3.659604072570801
    10. '500' → logprob: -3.909604072570801

Token 210: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.076353669166565
    2. ' =' → logprob: -1.326353669166565
    3. ' par' → logprob: -1.951353669166565
    4. ' ' → logprob: -2.7013535499572754
    5. 'par' → logprob: -3.8263535499572754
    6. '_' → logprob: -3.9513535499572754
    7. '=' → logprob: -4.076353549957275
    8. ' peuvent' → logprob: -4.451353549957275
    9. ' sont' → logprob: -4.451353549957275
    10. '100' → logprob: -4.576353549957275

Token 211: ' limité' (ID: 135767)
  Prédit: ' limité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limité' → logprob: -0.7252388000488281
    2. ' limit' → logprob: -1.8502388000488281
    3. '100' → logprob: -1.9752388000488281
    4. ' ' → logprob: -2.225238800048828
    5. 'limit' → logprob: -3.225238800048828
    6. '10' → logprob: -3.725238800048828
    7. ' au' → logprob: -4.475238800048828
    8. '50' → logprob: -4.975238800048828
    9. '[' → logprob: -5.475238800048828
    10. ' à' → logprob: -5.725238800048828

Token 212: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.48478013277053833
    2. 's' → logprob: -0.9847801327705383
    3. 'e' → logprob: -4.984780311584473
    4. 'és' → logprob: -6.859780311584473
    5. ' es' → logprob: -7.734780311584473
    6. '}' → logprob: -7.734780311584473
    7. ')' → logprob: -7.984780311584473
    8. 'ées' → logprob: -8.109780311584473
    9. '.' → logprob: -8.359780311584473
    10. ',' → logprob: -8.609780311584473

Token 213: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.676426887512207
    2. '<|end|>' → logprob: -1.426426887512207
    3. ':' → logprob: -2.176426887512207
    4. '.' → logprob: -2.801426887512207
    5. ' :' → logprob: -4.301426887512207
    6. '<|end|>' → logprob: -4.426426887512207
    7. '#' → logprob: -4.676426887512207
    8. ' ' → logprob: -4.801426887512207
    9. ' ,' → logprob: -4.926426887512207
    10. ')' → logprob: -5.176426887512207

Token 214: '#
' (ID: 11240)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0036289691925049
    2. '<|end|>' → logprob: -1.8786289691925049
    3. '[' → logprob: -2.128628969192505
    4. '#' → logprob: -2.128628969192505
    5. ',' → logprob: -2.753628969192505
    6. 'def' → logprob: -3.378628969192505
    7. ' 
' → logprob: -3.503628969192505
    8. ')' → logprob: -3.628628969192505
    9. '
' → logprob: -3.753628969192505
    10. ']' → logprob: -4.128628730773926

Token 215: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18201693892478943
    2. '[' → logprob: -3.1820168495178223
    3. ',' → logprob: -3.4320168495178223
    4. 'd' → logprob: -3.9320168495178223
    5. 'def' → logprob: -4.682016849517822
    6. '#' → logprob: -5.057016849517822
    7. '```' → logprob: -5.182016849517822
    8. 'i' → logprob: -5.182016849517822
    9. 'n' → logprob: -5.307016849517822
    10. ' 
' → logprob: -5.307016849517822

Token 216: ' Simpl' (ID: 92258)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0220613479614258
    2. 'd' → logprob: -1.1470613479614258
    3. 'def' → logprob: -1.3970613479614258
    4. 'i' → logprob: -3.397061347961426
    5. 'import' → logprob: -4.897061347961426
    6. '#' → logprob: -5.022061347961426
    7. 'n' → logprob: -5.147061347961426
    8. ' def' → logprob: -6.272061347961426
    9. ' d' → logprob: -6.272061347961426
    10. 'a' → logprob: -6.272061347961426

Token 217: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.6760826706886292
    2. 'ifiée' → logprob: -1.1760826110839844
    3. 'ifié' → logprob: -2.1760826110839844
    4. 'if' → logprob: -3.8010826110839844
    5. 'ifier' → logprob: -4.176082611083984
    6. 'ifi' → logprob: -5.051082611083984
    7. 'e' → logprob: -5.051082611083984
    8. 'ifie' → logprob: -5.301082611083984
    9. 'ifications' → logprob: -6.051082611083984
    10. '#' → logprob: -6.051082611083984

Token 218: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5182141661643982
    2. ':' → logprob: -1.143214225769043
    3. ' =' → logprob: -2.643214225769043
    4. ',' → logprob: -5.393214225769043
    5. '#' → logprob: -6.143214225769043
    6. '<|end|>' → logprob: -6.518214225769043
    7. ' ' → logprob: -6.643214225769043
    8. '...' → logprob: -6.893214225769043
    9. ' #' → logprob: -7.393214225769043
    10. '=' → logprob: -8.018214225769043

Token 219: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13134430348873138
    2. ' #' → logprob: -2.5063443183898926
    3. 'On' → logprob: -3.5063443183898926
    4. ' On' → logprob: -4.881344318389893
    5. ' on' → logprob: -6.256344318389893
    6. 'Pour' → logprob: -7.881344318389893
    7. 'Nous' → logprob: -8.881343841552734
    8. ' 
' → logprob: -9.131343841552734
    9. 'Pass' → logprob: -9.256343841552734
    10. ' Pour' → logprob: -9.756343841552734

Token 220: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30315887928009033
    2. 'On' → logprob: -1.8031588792800903
    3. 'from' → logprob: -3.303158760070801
    4. ' #' → logprob: -3.928158760070801
    5. ' on' → logprob: -4.428158760070801
    6. ' On' → logprob: -4.428158760070801
    7. 'def' → logprob: -5.428158760070801
    8. 'on' → logprob: -6.678158760070801
    9. 'import' → logprob: -6.678158760070801
    10. ' from' → logprob: -6.803158760070801

Token 221: ' gérer' (ID: 86786)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0842581987380981
    2. ' l' → logprob: -1.0842581987380981
    3. '#' → logprob: -2.4592580795288086
    4. 'le' → logprob: -2.7092580795288086
    5. ' chaque' → logprob: -3.0842580795288086
    6. ' le' → logprob: -3.9592580795288086
    7. 'simpl' → logprob: -4.084258079528809
    8. ' simpl' → logprob: -4.459258079528809
    9. ' #' → logprob: -4.584258079528809
    10. 'les' → logprob: -5.209258079528809

Token 222: ' efficacement' (ID: 155449)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1553785800933838
    2. ' l' → logprob: -1.5303785800933838
    3. ' la' → logprob: -1.6553785800933838
    4. 'les' → logprob: -2.405378580093384
    5. ' le' → logprob: -2.905378580093384
    6. 'la' → logprob: -3.405378580093384
    7. 'l' → logprob: -3.655378580093384
    8. 'au' → logprob: -4.030378341674805
    9. ' au' → logprob: -4.405378341674805
    10. 'le' → logprob: -4.530378341674805

Token 223: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8917496204376221
    2. ' les' → logprob: -0.8917496204376221
    3. 'les' → logprob: -2.641749620437622
    4. ' la' → logprob: -3.141749620437622
    5. 'l' → logprob: -3.391749620437622
    6. ' le' → logprob: -3.766749620437622
    7. 'le' → logprob: -5.766749382019043
    8. 'la' → logprob: -6.266749382019043
    9. ' ' → logprob: -6.516749382019043
    10. ' chaque' → logprob: -7.391749382019043

Token 224: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9748976826667786
    2. 'es' → logprob: -0.9748976826667786
    3. 'e' → logprob: -1.8498976230621338
    4. ''argent' → logprob: -3.474897623062134
    5. ''' → logprob: -3.849897623062134
    6. ''ensemble' → logprob: -4.849897861480713
    7. ''état' → logprob: -4.974897861480713
    8. ''achat' → logprob: -5.099897861480713
    9. ''espace' → logprob: -5.224897861480713
    10. ''utilisation' → logprob: -6.224897861480713

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7573701739311218
    2. ' ,' → logprob: -0.7573701739311218
    3. ' des' → logprob: -4.1323699951171875
    4. '_' → logprob: -4.2573699951171875
    5. 's' → logprob: -4.2573699951171875
    6. ' de' → logprob: -5.1323699951171875
    7. ' ' → logprob: -5.3823699951171875
    8. ' d' → logprob: -6.0073699951171875
    9. ' s' → logprob: -7.2573699951171875
    10. ' ' → logprob: -7.6323699951171875

Token 226: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.0317571684718132
    2. 'on' → logprob: -3.531757116317749
    3. '#' → logprob: -7.031757354736328
    4. ' nous' → logprob: -8.031757354736328
    5. ' il' → logprob: -9.156757354736328
    6. ' utiliser' → logprob: -9.406757354736328
    7. 'nous' → logprob: -9.406757354736328
    8. ' coder' → logprob: -9.531757354736328
    9. ' représ' → logprob: -9.781757354736328
    10. ' #' → logprob: -10.281757354736328

Token 227: ' soup' (ID: 29684)
  Prédit: ' encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.9385815262794495
    2. ' va' → logprob: -1.6885814666748047
    3. ' reg' → logprob: -1.9385814666748047
    4. 'encode' → logprob: -2.1885814666748047
    5. ' limite' → logprob: -3.9385814666748047
    6. ' peut' → logprob: -4.063581466674805
    7. ' ne' → logprob: -4.438581466674805
    8. ' utilise' → logprob: -4.563581466674805
    9. ' code' → logprob: -4.813581466674805
    10. ' représente' → logprob: -4.813581466674805

Token 228: 'çon' (ID: 24751)
  Prédit: 'çon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çon' → logprob: -0.0531805045902729
    2. 'ç' → logprob: -3.803180456161499
    3. '_' → logprob: -4.053180694580078
    4. 'onde' → logprob: -5.303180694580078
    5. 'èse' → logprob: -6.803180694580078
    6. 'oudre' → logprob: -7.178180694580078
    7. 'ode' → logprob: -7.303180694580078
    8. '#' → logprob: -7.553180694580078
    9. 'çons' → logprob: -7.553180694580078
    10. 'c' → logprob: -7.678180694580078

Token 229: 'ne' (ID: 611)
  Prédit: 'onne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.0033131770323961973
    2. 'onné' → logprob: -5.878313064575195
    3. 'onn' → logprob: -8.253313064575195
    4. 'nne' → logprob: -8.753313064575195
    5. 'onna' → logprob: -10.128313064575195
    6. 'onnée' → logprob: -11.003313064575195
    7. 'on' → logprob: -11.753313064575195
    8. 'onnes' → logprob: -12.003313064575195
    9. 'onnement' → logprob: -12.378313064575195
    10. '#' → logprob: -12.503313064575195

Token 230: ' que' (ID: 661)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -1.080414891242981
    2. ' que' → logprob: -1.080414891242981
    3. ' d' → logprob: -1.830414891242981
    4. ' une' → logprob: -2.7054147720336914
    5. ' un' → logprob: -3.8304147720336914
    6. ' ' → logprob: -3.9554147720336914
    7. 'd' → logprob: -4.455414772033691
    8. ' ' → logprob: -4.455414772033691
    9. ' l' → logprob: -4.830414772033691
    10. 's' → logprob: -5.830414772033691

Token 231: ' pour' (ID: 1930)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.173475980758667
    2. ' l' → logprob: -1.798475980758667
    3. ' on' → logprob: -1.798475980758667
    4. ' la' → logprob: -2.173475980758667
    5. ' il' → logprob: -2.298475980758667
    6. ' le' → logprob: -2.548475980758667
    7. 'les' → logprob: -3.673475980758667
    8. 'on' → logprob: -4.423476219177246
    9. 'le' → logprob: -4.548476219177246
    10. 'l' → logprob: -5.173476219177246

Token 232: ' éviter' (ID: 64013)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.42025208473205566
    2. 'les' → logprob: -2.4202520847320557
    3. 'le' → logprob: -2.9202520847320557
    4. ' les' → logprob: -3.2952520847320557
    5. 'l' → logprob: -3.4202520847320557
    6. ' le' → logprob: -3.7952520847320557
    7. 'payer' → logprob: -4.045251846313477
    8. 'cha' → logprob: -4.545251846313477
    9. ' l' → logprob: -4.795251846313477
    10. '#' → logprob: -4.795251846313477

Token 233: ' explosion' (ID: 53199)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.125458836555481
    2. ' d' → logprob: -1.500458836555481
    3. ' une' → logprob: -1.875458836555481
    4. ' la' → logprob: -2.6254587173461914
    5. ' l' → logprob: -3.0004587173461914
    6. ' de' → logprob: -3.3754587173461914
    7. ' des' → logprob: -3.6254587173461914
    8. ' toute' → logprob: -3.8754587173461914
    9. ' un' → logprob: -4.000458717346191
    10. 'les' → logprob: -4.250458717346191

Token 234: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7012622952461243
    2. ' de' → logprob: -1.3262622356414795
    3. '_de' → logprob: -2.0762622356414795
    4. ' des' → logprob: -3.0762622356414795
    5. '_des' → logprob: -3.0762622356414795
    6. ' _' → logprob: -4.951262474060059
    7. 'de' → logprob: -5.576262474060059
    8. ' d' → logprob: -6.201262474060059
    9. 'des' → logprob: -6.326262474060059
    10. ' ' → logprob: -6.826262474060059

Token 235: ''ét' (ID: 23771)
  Prédit: ''état'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -1.0430554151535034
    2. ''' → logprob: -1.5430554151535034
    3. ''ét' → logprob: -2.043055534362793
    4. 'e' → logprob: -2.043055534362793
    5. ' états' → logprob: -3.043055534362793
    6. ''é' → logprob: -3.543055534362793
    7. '_' → logprob: -3.793055534362793
    8. '’ét' → logprob: -4.168055534362793
    9. '’état' → logprob: -4.418055534362793
    10. ''espace' → logprob: -4.918055534362793

Token 236: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.05386187508702278
    2. 'ats' → logprob: -3.1788618564605713
    3. '#' → logprob: -6.17886209487915
    4. 'tat' → logprob: -6.17886209487915
    5. 'a' → logprob: -6.55386209487915
    6. '```' → logprob: -7.49136209487915
    7. ' ' → logprob: -7.86636209487915
    8. '

' → logprob: -8.116361618041992
    9. '``' → logprob: -8.241361618041992
    10. '<' → logprob: -8.491361618041992

Token 237: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6691800951957703
    2. ' des' → logprob: -1.044180154800415
    3. ' ,' → logprob: -3.169180154800415
    4. 's' → logprob: -3.294180154800415
    5. ' de' → logprob: -3.794180154800415
    6. '_' → logprob: -3.919180154800415
    7. ' on' → logprob: -6.044179916381836
    8. ' du' → logprob: -6.294179916381836
    9. '_,' → logprob: -6.419179916381836
    10. ' ' → logprob: -6.794179916381836

Token 238: '#' (ID: 2)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.009092885069549084
    2. ' il' → logprob: -5.259092807769775
    3. 'on' → logprob: -6.634092807769775
    4. '#' → logprob: -7.259092807769775
    5. ' ' → logprob: -7.634092807769775
    6. ' ' → logprob: -8.259093284606934
    7. ' l' → logprob: -8.259093284606934
    8. ' les' → logprob: -8.884093284606934
    9. ' nous' → logprob: -8.884093284606934
    10. ' #' → logprob: -9.384093284606934

Token 239: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.05226459354162216
    2. 'on' → logprob: -3.30226469039917
    3. ' il' → logprob: -4.80226469039917
    4. '#' → logprob: -5.55226469039917
    5. 'il' → logprob: -7.05226469039917
    6. ' nous' → logprob: -7.92726469039917
    7. ' ' → logprob: -9.052264213562012
    8. ' #' → logprob: -9.552264213562012
    9. 'nous' → logprob: -9.802264213562012
    10. ' ' → logprob: -9.927264213562012

Token 240: ' ne' (ID: 453)
  Prédit: ' limite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limite' → logprob: -0.8312009572982788
    2. ' ignore' → logprob: -1.7062009572982788
    3. ' reg' → logprob: -1.8312009572982788
    4. ' ne' → logprob: -2.9562010765075684
    5. ' n' → logprob: -3.7062010765075684
    6. 'ignore' → logprob: -3.8312010765075684
    7. ' encode' → logprob: -3.9562010765075684
    8. 'ne' → logprob: -4.456201076507568
    9. 'reg' → logprob: -4.581201076507568
    10. 'lim' → logprob: -4.706201076507568

Token 241: ' mém' (ID: 136981)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.28766942024230957
    2. 'g' → logprob: -3.0376694202423096
    3. ' considère' → logprob: -3.0376694202423096
    4. ' garde' → logprob: -3.1626694202423096
    5. ' conserve' → logprob: -3.1626694202423096
    6. ' g' → logprob: -4.1626691818237305
    7. 'stock' → logprob: -4.2876691818237305
    8. ' gard' → logprob: -5.1626691818237305
    9. ' mém' → logprob: -5.9126691818237305
    10. '_' → logprob: -5.9126691818237305

Token 242: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00514386547729373
    2. 'orit' → logprob: -6.380143642425537
    3. 'é' → logprob: -7.130143642425537
    4. 'oris' → logprob: -7.255143642425537
    5. 'OR' → logprob: -8.255144119262695
    6. 'ém' → logprob: -8.255144119262695
    7. '_' → logprob: -8.505144119262695
    8. '-' → logprob: -9.255144119262695
    9. 'orat' → logprob: -9.380144119262695
    10. 'ore' → logprob: -9.380144119262695

Token 243: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.07973430305719376
    2. 'is' → logprob: -2.7047343254089355
    3. 'se' → logprob: -5.3297343254089355
    4. 'ize' → logprob: -6.5797343254089355
    5. 'e' → logprob: -6.7047343254089355
    6. 'isa' → logprob: -7.0797343254089355
    7. 'isse' → logprob: -8.829733848571777
    8. 'ises' → logprob: -8.954733848571777
    9. 'iser' → logprob: -8.954733848571777
    10. 'isé' → logprob: -9.204733848571777

Token 244: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0244199950248003
    2. ' pas' → logprob: -4.274419784545898
    3. ' ' → logprob: -4.774419784545898
    4. ' qu' → logprob: -7.149419784545898
    5. 'pas' → logprob: -8.024419784545898
    6. ' uniquement' → logprob: -8.774419784545898
    7. 'que' → logprob: -9.149419784545898
    8. ' les' → logprob: -9.524419784545898
    9. ' ' → logprob: -9.649419784545898
    10. ' jamais' → logprob: -10.149419784545898

Token 245: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3733222484588623
    2. 'le' → logprob: -1.6233222484588623
    3. ' le' → logprob: -1.7483222484588623
    4. 'les' → logprob: -1.8733222484588623
    5. 'l' → logprob: -2.6233222484588623
    6. ' la' → logprob: -2.7483222484588623
    7. ' l' → logprob: -2.9983222484588623
    8. 'la' → logprob: -4.123322486877441
    9. ' ' → logprob: -4.748322486877441
    10. ' que' → logprob: -6.748322486877441

Token 246: ' quantité' (ID: 89219)
  Prédit: ' montant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' montant' → logprob: -0.9100328087806702
    2. ' nombre' → logprob: -1.6600327491760254
    3. 'nombre' → logprob: -1.7850327491760254
    4. 'mont' → logprob: -2.1600327491760254
    5. ' total' → logprob: -3.6600327491760254
    6. 'total' → logprob: -3.9100327491760254
    7. 's' → logprob: -4.660032749176025
    8. 'd' → logprob: -4.785032749176025
    9. '500' → logprob: -4.910032749176025
    10. 'dé' → logprob: -5.660032749176025

Token 247: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5004898905754089
    2. ' de' → logprob: -2.1254899501800537
    3. '_max' → logprob: -2.5004899501800537
    4. ' ' → logprob: -3.1254899501800537
    5. ' maximale' → logprob: -3.2504899501800537
    6. ' des' → logprob: -3.6254899501800537
    7. '_des' → logprob: -4.250489711761475
    8. ' d' → logprob: -4.375489711761475
    9. 'max' → logprob: -4.500489711761475
    10. '_total' → logprob: -4.625489711761475

Token 248: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.6218605637550354
    2. ' pieces' → logprob: -2.2468605041503906
    3. ' monnaie' → logprob: -2.2468605041503906
    4. ' ' → logprob: -2.3718605041503906
    5. '500' → logprob: -3.1218605041503906
    6. 'pi' → logprob: -3.8718605041503906
    7. ' la' → logprob: -3.9968605041503906
    8. 'pieces' → logprob: -3.9968605041503906
    9. ' l' → logprob: -4.246860504150391
    10. ' pi' → logprob: -5.121860504150391

Token 249: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.4870707392692566
    2. ' ' → logprob: -1.2370707988739014
    3. '_' → logprob: -2.9870707988739014
    4. ' de' → logprob: -3.2370707988739014
    5. 'de' → logprob: -5.487070560455322
    6. 'd' → logprob: -8.23707103729248
    7. '_de' → logprob: -8.48707103729248
    8. ' _' → logprob: -8.98707103729248
    9. '5' → logprob: -8.98707103729248
    10. '50' → logprob: -9.36207103729248

Token 250: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2909804582595825
    2. ' ' → logprob: -1.7909804582595825
    3. ' de' → logprob: -2.915980339050293
    4. 'de' → logprob: -3.790980339050293
    5. '_' → logprob: -4.790980339050293
    6. 'd' → logprob: -8.790980339050293
    7. '_de' → logprob: -9.165980339050293
    8. '   ' → logprob: -9.665980339050293
    9. '  ' → logprob: -10.290980339050293
    10. ' ' → logprob: -10.353480339050293

Token 251: '-y' (ID: 18102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5016056299209595
    2. '-' → logprob: -1.1266056299209595
    3. '_-' → logprob: -2.87660551071167
    4. '-_' → logprob: -5.00160551071167
    5. '-y' → logprob: -5.87660551071167
    6. ' -' → logprob: -6.37660551071167
    7. '_y' → logprob: -7.75160551071167
    8. ')-' → logprob: -7.87660551071167
    9. ')' → logprob: -8.001605987548828
    10. '-)' → logprob: -8.251605987548828

Token 252: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.31382548809051514
    2. '-en' → logprob: -1.3138254880905151
    3. '-' → logprob: -7.688825607299805
    4. ''en' → logprob: -10.813825607299805
    5. '-y' → logprob: -10.813825607299805
    6. '_en' → logprob: -11.313825607299805
    7. '=en' → logprob: -12.063825607299805
    8. 'e' → logprob: -12.188825607299805
    9. '-e' → logprob: -12.188825607299805
    10. '_' → logprob: -12.313825607299805

Token 253: ' poss' (ID: 2456)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.886764407157898
    2. '_' → logprob: -1.386764407157898
    3. '.' → logprob: -1.886764407157898
    4. '
' → logprob: -3.1367645263671875
    5. ':' → logprob: -4.0117645263671875
    6. 's' → logprob: -4.0117645263671875
    7. '#' → logprob: -4.3867645263671875
    8. '```' → logprob: -4.6367645263671875
    9. '\' → logprob: -4.7617645263671875
    10. ')' → logprob: -4.8867645263671875

Token 254: 'éd' (ID: 6383)
  Prédit: 'éd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éd' → logprob: -0.3337550759315491
    2. 'ed' → logprob: -1.3337550163269043
    3. 'ess' → logprob: -5.333755016326904
    4. 'é' → logprob: -5.833755016326904
    5. 'édé' → logprob: -6.083755016326904
    6. 'ée' → logprob: -6.708755016326904
    7. 'd' → logprob: -6.708755016326904
    8. 'u' → logprob: -6.833755016326904
    9. 's' → logprob: -6.833755016326904
    10. 'en' → logprob: -6.958755016326904

Token 255: 'ées' (ID: 5161)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.03327159583568573
    2. 'ue' → logprob: -3.533271551132202
    3. 'u' → logprob: -5.783271789550781
    4. 'es' → logprob: -8.408271789550781
    5. 'us' → logprob: -9.283271789550781
    6. 'ie' → logprob: -10.408271789550781
    7. 'en' → logprob: -10.408271789550781
    8. 'e' → logprob: -10.908271789550781
    9. 'ies' → logprob: -11.533271789550781
    10. 'ées' → logprob: -11.658271789550781

Token 256: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2781093120574951
    2. '_' → logprob: -1.5281093120574951
    3. '
' → logprob: -1.6531093120574951
    4. ':' → logprob: -2.528109312057495
    5. '.' → logprob: -3.153109312057495
    6. '#' → logprob: -3.153109312057495
    7. 'import' → logprob: -4.153109550476074
    8. 'def' → logprob: -4.153109550476074
    9. ')' → logprob: -4.278109550476074
    10. '```' → logprob: -4.403109550476074

Token 257: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9754794239997864
    2. ' la' → logprob: -1.2254793643951416
    3. ' le' → logprob: -1.4754793643951416
    4. 'la' → logprob: -3.2254793643951416
    5. ' l' → logprob: -3.8504793643951416
    6. 'l' → logprob: -4.225479602813721
    7. ' les' → logprob: -5.475479602813721
    8. ' une' → logprob: -5.600479602813721
    9. 'leur' → logprob: -5.600479602813721
    10. 'les' → logprob: -5.850479602813721

Token 258: ' "' (ID: 392)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.15500283241271973
    2. ' dép' → logprob: -3.0300028324127197
    3. ' valeur' → logprob: -3.5300028324127197
    4. ' quantité' → logprob: -4.030002593994141
    5. 'd' → logprob: -4.280002593994141
    6. ' monnaie' → logprob: -5.030002593994141
    7. 's' → logprob: -5.280002593994141
    8. 'dé' → logprob: -5.405002593994141
    9. 'val' → logprob: -5.780002593994141
    10. ' ' → logprob: -6.280002593994141

Token 259: 'configuration' (ID: 44413)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.621340274810791
    2. 'val' → logprob: -1.621340274810791
    3. ' somme' → logprob: -2.246340274810791
    4. 'quant' → logprob: -3.621340274810791
    5. 'clé' → logprob: -3.621340274810791
    6. 're' → logprob: -3.996340274810791
    7. 'd' → logprob: -4.621340274810791
    8. 'man' → logprob: -4.996340274810791
    9. 'rest' → logprob: -4.996340274810791
    10. 'mont' → logprob: -5.246340274810791

Token 260: '"' (ID: 1)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08102573454380035
    2. ' de' → logprob: -3.0810258388519287
    3. ' "' → logprob: -4.83102560043335
    4. '_' → logprob: -4.95602560043335
    5. '"' → logprob: -5.45602560043335
    6. '_des' → logprob: -5.58102560043335
    7. ' d' → logprob: -6.08102560043335
    8. 'des' → logprob: -6.70602560043335
    9. ' '' → logprob: -7.08102560043335
    10. ' ' → logprob: -7.58102560043335

Token 261: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14818543195724487
    2. ' _' → logprob: -3.5231854915618896
    3. '_des' → logprob: -3.6481854915618896
    4. ' des' → logprob: -4.0231852531433105
    5. ' de' → logprob: -4.1481852531433105
    6. ',' → logprob: -5.1481852531433105
    7. 'des' → logprob: -5.5231852531433105
    8. '_de' → logprob: -5.5231852531433105
    9. '_coin' → logprob: -5.6481852531433105
    10. ')' → logprob: -5.7731852531433105

Token 262: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.196294367313385
    2. 'pi' → logprob: -2.1962943077087402
    3. ' autres' → logprob: -3.8212943077087402
    4. ' pi' → logprob: -4.07129430770874
    5. ' pieces' → logprob: -4.69629430770874
    6. ' ' → logprob: -5.19629430770874
    7. 'pieces' → logprob: -5.44629430770874
    8. '100' → logprob: -6.44629430770874
    9. ' monna' → logprob: -6.82129430770874
    10. ' billets' → logprob: -7.07129430770874

Token 263: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.337576299905777
    2. ',' → logprob: -2.337576389312744
    3. ' ' → logprob: -2.962576389312744
    4. 's' → logprob: -3.462576389312744
    5. '<|end|>' → logprob: -3.837576389312744
    6. ' _' → logprob: -4.212576389312744
    7. ')' → logprob: -4.587576389312744
    8. '_s' → logprob: -4.962576389312744
    9. '[' → logprob: -4.962576389312744
    10. ' ,' → logprob: -5.212576389312744

Token 264: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46060436964035034
    2. '500' → logprob: -1.7106044292449951
    3. ' ' → logprob: -2.710604429244995
    4. ' )' → logprob: -3.085604429244995
    5. ',' → logprob: -4.210604190826416
    6. '1' → logprob: -4.585604190826416
    7. ' tuple' → logprob: -4.585604190826416
    8. ' (' → logprob: -4.835604190826416
    9. 'fro' → logprob: -5.460604190826416
    10. ' ,' → logprob: -5.460604190826416

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013613659888505936
    2. ' ,' → logprob: -4.388613700866699
    3. '5' → logprob: -8.0136137008667
    4. '500' → logprob: -8.0136137008667
    5. '0' → logprob: -8.3886137008667
    6. ' ' → logprob: -10.0136137008667
    7. ')' → logprob: -10.5136137008667
    8. '50' → logprob: -10.6386137008667
    9. ',
' → logprob: -10.7636137008667
    10. '000' → logprob: -10.8886137008667

Token 266: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0031825865153223276
    2. ' ' → logprob: -5.753182411193848
    3. '10' → logprob: -13.128182411193848
    4. ',' → logprob: -13.253182411193848
    5. '50' → logprob: -14.628182411193848
    6. '```' → logprob: -16.003183364868164
    7. '  ' → logprob: -16.503183364868164
    8. '
' → logprob: -16.628183364868164
    9. ' cinq' → logprob: -16.753183364868164
    10. 'yen' → logprob: -17.003183364868164

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12613284587860107
    2. ',-' → logprob: -2.5011329650878906
    3. '-' → logprob: -4.001132965087891
    4. '-,' → logprob: -4.751132965087891
    5. ' ,' → logprob: -4.876132965087891
    6. '0' → logprob: -7.626132965087891
    7. ' -' → logprob: -8.12613296508789
    8. '100' → logprob: -8.25113296508789
    9. ' ' → logprob: -8.75113296508789
    10. ' ,-' → logprob: -8.75113296508789

Token 268: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016593512846156955
    2. ' ' → logprob: -6.751659393310547
    3. '100' → logprob: -7.626659393310547
    4. '50' → logprob: -13.876659393310547
    5. '0' → logprob: -15.126659393310547
    6. '1' → logprob: -15.501659393310547
    7. '```' → logprob: -15.501659393310547
    8. ',' → logprob: -15.751659393310547
    9. '   ' → logprob: -18.001659393310547
    10. 'et' → logprob: -18.251659393310547

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008696523727849126
    2. ',#' → logprob: -8.125869750976562
    3. ',-' → logprob: -8.750869750976562
    4. ' ,' → logprob: -9.250869750976562
    5. ',)' → logprob: -9.625869750976562
    6. ')' → logprob: -9.625869750976562
    7. ',
' → logprob: -10.375869750976562
    8. '-,' → logprob: -10.500869750976562
    9. '50' → logprob: -11.000869750976562
    10. '),' → logprob: -11.000869750976562

Token 270: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.01885209232568741
    2. ' ' → logprob: -4.143852233886719
    3. '100' → logprob: -5.893852233886719
    4. '```' → logprob: -10.268852233886719
    5. '20' → logprob: -11.268852233886719
    6. '500' → logprob: -13.268852233886719
    7. '25' → logprob: -13.393852233886719
    8. '   ' → logprob: -13.768852233886719
    9. ',' → logprob: -13.893852233886719
    10. '0' → logprob: -14.018852233886719

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007498288759961724
    2. ',#' → logprob: -7.8757500648498535
    3. ')' → logprob: -8.625749588012695
    4. ' ,' → logprob: -9.875749588012695
    5. ',)' → logprob: -10.125749588012695
    6. '100' → logprob: -11.125749588012695
    7. '),' → logprob: -11.250749588012695
    8. '#,' → logprob: -11.625749588012695
    9. ',
' → logprob: -11.750749588012695
    10. '#' → logprob: -11.750749588012695

Token 272: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00027111053350381553
    2. ' ' → logprob: -8.25027084350586
    3. '0' → logprob: -12.75027084350586
    4. '```' → logprob: -13.00027084350586
    5. ',' → logprob: -14.00027084350586
    6. '1' → logprob: -14.56277084350586
    7. 'et' → logprob: -14.81277084350586
    8. ')' → logprob: -14.87527084350586
    9. '
' → logprob: -14.87527084350586
    10. '10' → logprob: -15.06277084350586

Token 273: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020381413400173187
    2. ',' → logprob: -4.770381450653076
    3. ')-' → logprob: -5.520381450653076
    4. '),' → logprob: -5.645381450653076
    5. 's' → logprob: -6.645381450653076
    6. ')#' → logprob: -7.395381450653076
    7. ')_' → logprob: -7.520381450653076
    8. ')s' → logprob: -7.770381450653076
    9. ')"' → logprob: -8.395380973815918
    10. ',)' → logprob: -8.645380973815918

Token 274: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4109289050102234
    2. '[' → logprob: -1.4109289646148682
    3. ',' → logprob: -4.035928726196289
    4. '[
' → logprob: -4.160928726196289
    5. ')' → logprob: -4.410928726196289
    6. '```' → logprob: -4.785928726196289
    7. 'def' → logprob: -5.160928726196289
    8. '
' → logprob: -5.160928726196289
    9. 'import' → logprob: -5.410928726196289
    10. ':' → logprob: -5.660928726196289

Token 275: ' Seu' (ID: 75860)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.606024444103241
    2. ',' → logprob: -2.2310245037078857
    3. '[
' → logprob: -2.7310245037078857
    4. '#' → logprob: -2.9810245037078857
    5. '_' → logprob: -2.9810245037078857
    6. 'from' → logprob: -3.3560245037078857
    7. 'def' → logprob: -3.4810245037078857
    8. 'import' → logprob: -3.6060245037078857
    9. '```' → logprob: -3.9810245037078857
    10. ')' → logprob: -4.106024265289307

Token 276: 'lement' (ID: 1254)
  Prédit: 'lement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -1.1451168060302734
    2. 'r' → logprob: -1.5201168060302734
    3. 'rie' → logprob: -2.1451168060302734
    4. 'rement' → logprob: -2.7701168060302734
    5. 'j' → logprob: -3.2701168060302734
    6. '```' → logprob: -3.3951168060302734
    7. 'per' → logprob: -3.7701168060302734
    8. 'p' → logprob: -3.8951168060302734
    9. 'plement' → logprob: -4.020116806030273
    10. 'l' → logprob: -4.895116806030273

Token 277: ' ' (ID: 220)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.086334228515625
    2. 'le' → logprob: -2.336334228515625
    3. ' celles' → logprob: -2.586334228515625
    4. 'les' → logprob: -2.586334228515625
    5. ',' → logprob: -2.711334228515625
    6. ' ' → logprob: -3.211334228515625
    7. ' la' → logprob: -3.211334228515625
    8. 'la' → logprob: -3.711334228515625
    9. '...' → logprob: -3.836334228515625
    10. 'def' → logprob: -4.336334228515625

Token 278: '500' (ID: 3234)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7383064031600952
    2. 'le' → logprob: -1.4883064031600952
    3. 'la' → logprob: -2.4883065223693848
    4. 'une' → logprob: -3.1133065223693848
    5. 'c' → logprob: -3.8633065223693848
    6. 'l' → logprob: -3.9883065223693848
    7. 'pour' → logprob: -3.9883065223693848
    8. '500' → logprob: -4.363306522369385
    9. 'celle' → logprob: -4.488306522369385
    10. 'à' → logprob: -4.488306522369385

Token 279: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7334861159324646
    2. '0' → logprob: -1.6084861755371094
    3. '_' → logprob: -1.8584861755371094
    4. ')' → logprob: -2.6084861755371094
    5. ',' → logprob: -3.4834861755371094
    6. '-y' → logprob: -4.608486175537109
    7. ' -' → logprob: -5.108486175537109
    8. '000' → logprob: -5.358486175537109
    9. '#' → logprob: -5.733486175537109
    10. '00' → logprob: -5.858486175537109

Token 280: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.019106609746813774
    2. 'n' → logprob: -5.144106388092041
    3. '-n' → logprob: -5.269106388092041
    4. '-en' → logprob: -5.769106388092041
    5. 'yen' → logprob: -5.894106388092041
    6. '-' → logprob: -7.269106388092041
    7. '-y' → logprob: -7.644106388092041
    8. 'an' → logprob: -8.7691068649292
    9. '-token' → logprob: -9.7691068649292
    10. 'ens' → logprob: -9.7691068649292

Token 281: ' et' (ID: 859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25139760971069336
    2. '_' → logprob: -2.0013976097106934
    3. ',' → logprob: -4.126397609710693
    4. ')' → logprob: -4.376397609710693
    5. '-p' → logprob: -4.751397609710693
    6. 's' → logprob: -4.876397609710693
    7. '-y' → logprob: -4.876397609710693
    8. '<|end|>' → logprob: -5.126397609710693
    9. '-s' → logprob: -5.251397609710693
    10. '_s' → logprob: -6.126397609710693

Token 282: ' pièces' (ID: 49165)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1519644260406494
    2. '100' → logprob: -1.6519644260406494
    3. ' l' → logprob: -2.5269644260406494
    4. ' le' → logprob: -2.5269644260406494
    5. ' la' → logprob: -2.7769644260406494
    6. 'les' → logprob: -2.7769644260406494
    7. 'le' → logprob: -3.0269644260406494
    8. ' leur' → logprob: -3.6519644260406494
    9. 'leur' → logprob: -3.9019644260406494
    10. ' ' → logprob: -4.02696418762207

Token 283: ' fac' (ID: 3513)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39651840925216675
    2. 's' → logprob: -1.8965184688568115
    3. ',' → logprob: -2.8965184688568115
    4. ')' → logprob: -4.021518230438232
    5. '_tokens' → logprob: -4.146518230438232
    6. '_s' → logprob: -4.396518230438232
    7. '<|end|>' → logprob: -4.396518230438232
    8. ' ' → logprob: -4.896518230438232
    9. '```' → logprob: -4.896518230438232
    10. '-' → logprob: -5.521518230438232

Token 284: 'iales' (ID: 25133)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.729246973991394
    2. 'es' → logprob: -0.854246973991394
    3. 'e' → logprob: -3.2292470932006836
    4. 'iles' → logprob: -3.9792470932006836
    5. 'ile' → logprob: -4.229247093200684
    6. 'tes' → logprob: -5.479247093200684
    7. 'ales' → logprob: -5.854247093200684
    8. 'et' → logprob: -5.979247093200684
    9. 'tion' → logprob: -6.104247093200684
    10. 'tu' → logprob: -6.854247093200684

Token 285: ' inf' (ID: 5603)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5477570295333862
    2. ',' → logprob: -2.172757148742676
    3. ')' → logprob: -2.547757148742676
    4. '[' → logprob: -3.172757148742676
    5. ':' → logprob: -3.422757148742676
    6. 's' → logprob: -3.547757148742676
    7. ']' → logprob: -4.047757148742676
    8. '<|end|>' → logprob: -4.047757148742676
    9. '[
' → logprob: -4.172757148742676
    10. ' ' → logprob: -4.422757148742676

Token 286: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.02662293240427971
    2. 'érieure' → logprob: -4.276622772216797
    3. 'érie' → logprob: -6.026622772216797
    4. 'érieurs' → logprob: -6.526622772216797
    5. '#' → logprob: -6.776622772216797
    6. '1' → logprob: -7.151622772216797
    7. '0' → logprob: -7.276622772216797
    8. 'érieur' → logprob: -7.276622772216797
    9. '</' → logprob: -7.526622772216797
    10. '```' → logprob: -7.526622772216797

Token 287: '.
' (ID: 558)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4177951216697693
    2. '_' → logprob: -1.542795181274414
    3. '_-' → logprob: -3.292795181274414
    4. '```' → logprob: -4.167795181274414
    5. ')' → logprob: -4.292795181274414
    6. '-_' → logprob: -4.542795181274414
    7. '[-' → logprob: -5.042795181274414
    8. 's' → logprob: -5.167795181274414
    9. ',' → logprob: -5.167795181274414
    10. '-y' → logprob: -6.042795181274414

Token 288: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2103725671768188
    2. ',' → logprob: -1.5853725671768188
    3. '[' → logprob: -2.3353724479675293
    4. '#' → logprob: -2.7103724479675293
    5. 'def' → logprob: -2.7103724479675293
    6. '```' → logprob: -3.2103724479675293
    7. 'import' → logprob: -3.3353724479675293
    8. ' ' → logprob: -3.4603724479675293
    9. 'from' → logprob: -3.4603724479675293
    10. ')' → logprob: -3.5853724479675293

Token 289: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9941985011100769
    2. '#' → logprob: -2.2441985607147217
    3. ',' → logprob: -2.2441985607147217
    4. 'import' → logprob: -2.4941985607147217
    5. 'd' → logprob: -2.4941985607147217
    6. 'from' → logprob: -3.1191985607147217
    7. '[' → logprob: -3.4941985607147217
    8. ' ' → logprob: -3.7441985607147217
    9. 'dp' → logprob: -3.9941985607147217
    10. '
' → logprob: -3.9941985607147217

Token 290: ' Comme' (ID: 53252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3989046812057495
    2. 'from' → logprob: -1.2739046812057495
    3. 'import' → logprob: -3.273904800415039
    4. '#' → logprob: -5.523904800415039
    5. 'dp' → logprob: -6.148904800415039
    6. 'd' → logprob: -6.273904800415039
    7. 'de' → logprob: -7.648904800415039
    8. '.' → logprob: -8.023904800415039
    9. ')' → logprob: -8.023904800415039
    10. 'n' → logprob: -8.148904800415039

Token 291: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.2218239307403564
    2. 'les' → logprob: -1.2218239307403564
    3. ' on' → logprob: -1.9718239307403564
    4. 'le' → logprob: -2.3468239307403564
    5. 'la' → logprob: -2.8468239307403564
    6. ' les' → logprob: -3.0968239307403564
    7. 'l' → logprob: -4.221823692321777
    8. ' la' → logprob: -4.471823692321777
    9. ' l' → logprob: -4.971823692321777
    10. ' le' → logprob: -4.971823692321777

Token 292: ' ne' (ID: 453)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8719789981842041
    2. 'a' → logprob: -1.246978998184204
    3. ' peut' → logprob: -2.996978998184204
    4. 'g' → logprob: -3.121978998184204
    5. '#' → logprob: -3.496978998184204
    6. ' utilise' → logprob: -3.871978998184204
    7. 'n' → logprob: -3.996978998184204
    8. 'ne' → logprob: -4.121978759765625
    9. 's' → logprob: -4.496978759765625
    10. 'util' → logprob: -4.621978759765625

Token 293: ' peut' (ID: 9216)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9784325361251831
    2. 'pe' → logprob: -0.9784325361251831
    3. 'stock' → logprob: -2.2284326553344727
    4. ' peut' → logprob: -3.2284326553344727
    5. ' stock' → logprob: -3.6034326553344727
    6. ' g' → logprob: -4.228432655334473
    7. 's' → logprob: -4.978432655334473
    8. 'poss' → logprob: -5.228432655334473
    9. ' considère' → logprob: -5.603432655334473
    10. 'va' → logprob: -5.728432655334473

Token 294: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.15136238932609558
    2. ' acheter' → logprob: -3.026362419128418
    3. 'acheter' → logprob: -3.526362419128418
    4. 'pas' → logprob: -3.526362419128418
    5. ' plus' → logprob: -4.401362419128418
    6. ' stock' → logprob: -5.651362419128418
    7. ' utiliser' → logprob: -5.651362419128418
    8. 'plus' → logprob: -6.401362419128418
    9. ' jamais' → logprob: -6.526362419128418
    10. ' peut' → logprob: -6.526362419128418

Token 295: ' avoir' (ID: 16595)
  Prédit: 'acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -0.17845988273620605
    2. 'payer' → logprob: -2.053459882736206
    3. ' acheter' → logprob: -4.053460121154785
    4. ' payer' → logprob: -5.178460121154785
    5. 'util' → logprob: -5.678460121154785
    6. 'faire' → logprob: -6.803460121154785
    7. 'prendre' → logprob: -6.803460121154785
    8. 'pass' → logprob: -7.303460121154785
    9. ' utiliser' → logprob: -7.428460121154785
    10. 'avoir' → logprob: -7.678460121154785

Token 296: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.42159733176231384
    2. 'plus' → logprob: -1.1715973615646362
    3. 'de' → logprob: -4.671597480773926
    4. ' de' → logprob: -5.046597480773926
    5. ' ' → logprob: -6.046597480773926
    6. ' une' → logprob: -6.171597480773926
    7. 'une' → logprob: -6.296597480773926
    8. ' des' → logprob: -6.296597480773926
    9. 'un' → logprob: -6.546597480773926
    10. ' deux' → logprob: -6.796597480773926

Token 297: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1472264528274536
    2. 'de' → logprob: -2.147226333618164
    3. ' que' → logprob: -4.897226333618164
    4. ' d' → logprob: -5.147226333618164
    5. '#' → logprob: -5.772226333618164
    6. 'd' → logprob: -6.897226333618164
    7. ' ' → logprob: -7.022226333618164
    8. 'que' → logprob: -7.397226333618164
    9. 'ieurs' → logprob: -8.272226333618164
    10. '   ' → logprob: -8.897226333618164

Token 298: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2240656316280365
    2. ' ' → logprob: -1.8490656614303589
    3. '100' → logprob: -3.7240655422210693
    4. '10' → logprob: -4.849065780639648
    5. '1' → logprob: -5.349065780639648
    6. '5' → logprob: -6.224065780639648
    7. ' de' → logprob: -6.474065780639648
    8. 'de' → logprob: -7.849065780639648
    9. 'd' → logprob: -7.974065780639648
    10. '50' → logprob: -8.099065780639648

Token 299: '10' (ID: 702)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07105793058872223
    2. '100' → logprob: -2.9460580348968506
    3. '10' → logprob: -5.3210577964782715
    4. '5' → logprob: -6.0710577964782715
    5. '1' → logprob: -6.3210577964782715
    6. ' ' → logprob: -6.4460577964782715
    7. '600' → logprob: -6.8210577964782715
    8. 'un' → logprob: -7.4460577964782715
    9. '6' → logprob: -7.6960577964782715
    10. '50' → logprob: -7.8210577964782715

Token 300: ' pièces' (ID: 49165)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3234560489654541
    2. ' pièces' → logprob: -1.698456048965454
    3. ' ' → logprob: -2.948456048965454
    4. ' pieces' → logprob: -4.448455810546875
    5. '000' → logprob: -5.073455810546875
    6. '00' → logprob: -5.073455810546875
    7. 'pieces' → logprob: -5.448455810546875
    8. '_' → logprob: -5.698455810546875
    9. '-' → logprob: -5.823455810546875
    10. ' ' → logprob: -6.948455810546875

Token 301: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3659512996673584
    2. ' ' → logprob: -2.3659512996673584
    3. '500' → logprob: -2.4909512996673584
    4. '-' → logprob: -2.8659512996673584
    5. '_' → logprob: -2.9909512996673584
    6. ',' → logprob: -4.7409515380859375
    7. 's' → logprob: -4.8659515380859375
    8. 'de' → logprob: -6.3659515380859375
    9. 'es' → logprob: -7.7409515380859375
    10. 'def' → logprob: -7.8659515380859375

Token 302: ' chaque' (ID: 21194)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.03998696804046631
    2. ' ' → logprob: -3.289987087249756
    3. '100' → logprob: -7.164987087249756
    4. ' chaque' → logprob: -7.914987087249756
    5. '50' → logprob: -8.789986610412598
    6. 'ch' → logprob: -8.789986610412598
    7. ' chacune' → logprob: -9.164986610412598
    8. '```' → logprob: -9.164986610412598
    9. 'cha' → logprob: -9.789986610412598
    10. '1' → logprob: -10.039986610412598

Token 303: ' sorte' (ID: 37800)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38848236203193665
    2. '-' → logprob: -1.7634823322296143
    3. 'type' → logprob: -3.2634823322296143
    4. 'face' → logprob: -4.013482570648193
    5. '_face' → logprob: -4.013482570648193
    6. '```' → logprob: -4.138482570648193
    7. '100' → logprob: -4.888482570648193
    8. '-face' → logprob: -4.888482570648193
    9. 'fac' → logprob: -5.263482570648193
    10. 'val' → logprob: -5.763482570648193

Token 304: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08990384638309479
    2. 's' → logprob: -3.5899038314819336
    3. '_' → logprob: -4.089903831481934
    4. '<|end|>' → logprob: -4.714903831481934
    5. '0' → logprob: -4.839903831481934
    6. '.' → logprob: -5.339903831481934
    7. '-' → logprob: -5.714903831481934
    8. ':' → logprob: -5.839903831481934
    9. '```' → logprob: -5.839903831481934
    10. ',
' → logprob: -5.839903831481934

Token 305: 'car' (ID: 6830)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12288660556077957
    2. ')' → logprob: -2.2478866577148438
    3. ',' → logprob: -5.372886657714844
    4. '),
' → logprob: -5.997886657714844
    5. ' ),' → logprob: -6.247886657714844
    6. ' )' → logprob: -8.122886657714844
    7. 's' → logprob: -9.247886657714844
    8. ').' → logprob: -9.747886657714844
    9. ' ' → logprob: -9.997886657714844
    10. '0' → logprob: -10.122886657714844

Token 306: ' montant' (ID: 72364)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.664747953414917
    2. ' le' → logprob: -1.664747953414917
    3. ' montant' → logprob: -1.664747953414917
    4. 'le' → logprob: -1.914747953414917
    5. ' la' → logprob: -2.664747953414917
    6. 'on' → logprob: -3.414747953414917
    7. 'la' → logprob: -3.414747953414917
    8. 'les' → logprob: -3.664747953414917
    9. 'mont' → logprob: -3.664747953414917
    10. ' les' → logprob: -3.914747953414917

Token 307: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9466123580932617
    2. ' maximal' → logprob: -1.5716123580932617
    3. ' maximum' → logprob: -1.6966123580932617
    4. 'max' → logprob: -2.1966123580932617
    5. '_max' → logprob: -3.1966123580932617
    6. ' total' → logprob: -4.446612358093262
    7. '_' → logprob: -4.821612358093262
    8. ' de' → logprob: -4.821612358093262
    9. ' maximale' → logprob: -5.196612358093262
    10. ' <=' → logprob: -5.321612358093262

Token 308: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45773884654045105
    2. ' est' → logprob: -1.8327388763427734
    3. ' de' → logprob: -2.5827388763427734
    4. '=' → logprob: -2.7077388763427734
    5. '100' → logprob: -3.9577388763427734
    6. '_' → logprob: -4.707738876342773
    7. '500' → logprob: -5.207738876342773
    8. ' d' → logprob: -5.332738876342773
    9. '),' → logprob: -5.332738876342773
    10. ' possible' → logprob: -5.582738876342773

Token 309: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2795413732528687
    2. ' =' → logprob: -1.5295413732528687
    3. '500' → logprob: -1.6545413732528687
    4. '=' → logprob: -2.279541492462158
    5. ' ' → logprob: -3.154541492462158
    6. ' de' → logprob: -3.154541492462158
    7. ' est' → logprob: -3.279541492462158
    8. '_' → logprob: -3.654541492462158
    9. 'de' → logprob: -3.779541492462158
    10. ' par' → logprob: -4.904541492462158

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4797036945819855
    2. '-' → logprob: -1.354703664779663
    3. '-y' → logprob: -2.229703664779663
    4. ' -' → logprob: -5.354703903198242
    5. ')' → logprob: -5.729703903198242
    6. '),' → logprob: -6.729703903198242
    7. '-)' → logprob: -7.229703903198242
    8. '-\' → logprob: -7.229703903198242
    9. '00' → logprob: -7.729703903198242
    10. '\-' → logprob: -7.729703903198242

Token 311: ' yen' (ID: 34890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7033281326293945
    2. '),' → logprob: -0.8283281326293945
    3. ' )' → logprob: -3.7033281326293945
    4. ' ),' → logprob: -3.7033281326293945
    5. '0' → logprob: -4.8283281326293945
    6. '-' → logprob: -5.4533281326293945
    7. '_' → logprob: -7.2033281326293945
    8. '-)' → logprob: -7.2033281326293945
    9. '-y' → logprob: -7.2033281326293945
    10. ',' → logprob: -7.3283281326293945

Token 312: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08007261902093887
    2. ')' → logprob: -2.7050726413726807
    3. ' ),' → logprob: -5.080072402954102
    4. ',' → logprob: -5.955072402954102
    5. ' )' → logprob: -7.830072402954102
    6. '),
' → logprob: -7.955072402954102
    7. ').' → logprob: -8.705072402954102
    8. '0' → logprob: -9.080072402954102
    9. '.' → logprob: -10.205072402954102
    10. ',),' → logprob: -10.330072402954102

Token 313: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6438524127006531
    2. '#' → logprob: -1.0188524723052979
    3. ' #' → logprob: -3.643852472305298
    4. ' ' → logprob: -3.768852472305298
    5. ')' → logprob: -3.893852472305298
    6. ' ,' → logprob: -4.393852233886719
    7. ' on' → logprob: -4.643852233886719
    8. 's' → logprob: -5.393852233886719
    9. '0' → logprob: -6.143852233886719
    10. ' ' → logprob: -6.268852233886719

Token 314: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4215438961982727
    2. '#' → logprob: -1.296543836593628
    3. 'on' → logprob: -2.921543836593628
    4. ' #' → logprob: -4.546544075012207
    5. 'max' → logprob: -6.046544075012207
    6. ' max' → logprob: -7.421544075012207
    7. ' ' → logprob: -7.546544075012207
    8. ' chaque' → logprob: -7.671544075012207
    9. ' il' → logprob: -7.796544075012207
    10. ' les' → logprob: -8.171544075012207

Token 315: ' limite' (ID: 48939)
  Prédit: ' limite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limite' → logprob: -0.21075786650180817
    2. 'lim' → logprob: -2.3357579708099365
    3. ' peut' → logprob: -3.3357579708099365
    4. ' suppose' → logprob: -4.335757732391357
    5. ' limit' → logprob: -4.710757732391357
    6. ' considère' → logprob: -4.835757732391357
    7. ' va' → logprob: -5.210757732391357
    8. 'limit' → logprob: -5.210757732391357
    9. 'pe' → logprob: -5.460757732391357
    10. ' stock' → logprob: -5.585757732391357

Token 316: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0897151231765747
    2. ' les' → logprob: -1.2147151231765747
    3. ' le' → logprob: -2.464715003967285
    4. ' chaque' → logprob: -2.464715003967285
    5. '_' → logprob: -2.589715003967285
    6. ' l' → logprob: -3.214715003967285
    7. ' donc' → logprob: -3.964715003967285
    8. 'les' → logprob: -4.464715003967285
    9. ' ' → logprob: -4.714715003967285
    10. 'le' → logprob: -4.964715003967285

Token 317: ' nombres' (ID: 76205)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.344913512468338
    2. ' quant' → logprob: -1.9699134826660156
    3. ' pièces' → logprob: -3.4699134826660156
    4. 'nombre' → logprob: -3.7199134826660156
    5. ' nombres' → logprob: -3.8449134826660156
    6. ' nombre' → logprob: -4.344913482666016
    7. ' pieces' → logprob: -4.594913482666016
    8. 'pieces' → logprob: -4.719913482666016
    9. ' max' → logprob: -4.844913482666016
    10. ' nb' → logprob: -4.969913482666016

Token 318: ' max' (ID: 2999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07330787926912308
    2. ' de' → logprob: -3.698307991027832
    3. '_de' → logprob: -4.448307991027832
    4. ' _' → logprob: -4.823307991027832
    5. '_max' → logprob: -4.948307991027832
    6. ' d' → logprob: -4.948307991027832
    7. ' ' → logprob: -5.448307991027832
    8. '_d' → logprob: -6.198307991027832
    9. 'd' → logprob: -6.823307991027832
    10. ' des' → logprob: -6.823307991027832

Token 319: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.045070942491292953
    2. '_des' → logprob: -4.045071125030518
    3. '_de' → logprob: -4.670071125030518
    4. ' _' → logprob: -5.170071125030518
    5. '_par' → logprob: -5.420071125030518
    6. '_p' → logprob: -5.795071125030518
    7. ' de' → logprob: -6.670071125030518
    8. 's' → logprob: -7.170071125030518
    9. '_d' → logprob: -7.795071125030518
    10. ' des' → logprob: -8.54507064819336

Token 320: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.6030093431472778
    2. ' chaque' → logprob: -1.9780093431472778
    3. 'pi' → logprob: -2.7280092239379883
    4. ' ' → logprob: -2.8530092239379883
    5. 'pieces' → logprob: -3.1030092239379883
    6. 'ch' → logprob: -3.3530092239379883
    7. 'cha' → logprob: -3.3530092239379883
    8. '1' → logprob: -4.103009223937988
    9. '```' → logprob: -4.228009223937988
    10. ' pieces' → logprob: -4.478009223937988

Token 321: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14679023623466492
    2. '_par' → logprob: -3.0217902660369873
    3. ' de' → logprob: -3.5217902660369873
    4. '_de' → logprob: -3.8967902660369873
    5. 'de' → logprob: -5.021790027618408
    6. ' par' → logprob: -5.146790027618408
    7. 'par' → logprob: -5.646790027618408
    8. '[' → logprob: -5.646790027618408
    9. ' ' → logprob: -6.021790027618408
    10. ' =' → logprob: -6.146790027618408

Token 322: ' l' (ID: 305)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9416989684104919
    2. 'ch' → logprob: -2.0666990280151367
    3. 'les' → logprob: -2.4416990280151367
    4. 'state' → logprob: -2.6916990280151367
    5. 'un' → logprob: -2.6916990280151367
    6. 'le' → logprob: -2.6916990280151367
    7. 'l' → logprob: -3.0666990280151367
    8. 'each' → logprob: -3.6916990280151367
    9. '{' → logprob: -4.066699028015137
    10. 'cha' → logprob: -4.316699028015137

Token 323: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.00972539372742176
    2. '’état' → logprob: -6.259725570678711
    3. 'a' → logprob: -6.509725570678711
    4. ''é' → logprob: -6.509725570678711
    5. 'ét' → logprob: -7.259725570678711
    6. ''' → logprob: -7.384725570678711
    7. 'e' → logprob: -7.384725570678711
    8. 'es' → logprob: -7.634725570678711
    9. ' état' → logprob: -7.884725570678711
    10. ''État' → logprob: -7.884725570678711

Token 324: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1650536060333252
    2. '_' → logprob: -1.1650536060333252
    3. ':' → logprob: -2.415053606033325
    4. '_max' → logprob: -2.790053606033325
    5. 's' → logprob: -3.415053606033325
    6. '_MAX' → logprob: -3.665053606033325
    7. 'max' → logprob: -3.790053606033325
    8. '
' → logprob: -3.915053606033325
    9. ' ' → logprob: -3.915053606033325
    10. ',
' → logprob: -4.290053367614746

Token 325: '#
' (ID: 11240)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8106531500816345
    2. '#' → logprob: -2.6856532096862793
    3. '[' → logprob: -2.6856532096862793
    4. ']' → logprob: -2.6856532096862793
    5. '
' → logprob: -2.8106532096862793
    6. '_' → logprob: -2.9356532096862793
    7. ':' → logprob: -2.9356532096862793
    8. ')' → logprob: -3.4356532096862793
    9. 'def' → logprob: -3.4356532096862793
    10. '[
' → logprob: -3.4356532096862793

Token 326: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.778365969657898
    2. 'from' → logprob: -1.778365969657898
    3. '
' → logprob: -1.903365969657898
    4. 'import' → logprob: -2.0283660888671875
    5. 'd' → logprob: -2.5283660888671875
    6. ',' → logprob: -3.0283660888671875
    7. '#' → logprob: -3.2783660888671875
    8. '```' → logprob: -3.4033660888671875
    9. 'n' → logprob: -3.5283660888671875
    10. ' ' → logprob: -3.5283660888671875

Token 327: ' Impl' (ID: 144563)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6248549222946167
    2. 'def' → logprob: -0.8748549222946167
    3. 'import' → logprob: -3.3748550415039062
    4. '#' → logprob: -5.874855041503906
    5. 'dp' → logprob: -5.874855041503906
    6. 'd' → logprob: -5.874855041503906
    7. 'max' → logprob: -6.499855041503906
    8. 'n' → logprob: -7.249855041503906
    9. 'MAX' → logprob: -7.624855041503906
    10. 'class' → logprob: -7.749855041503906

Token 328: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.002576251979917288
    2. 'ement' → logprob: -6.1275763511657715
    3. 'é' → logprob: -8.502575874328613
    4. '#' → logprob: -9.377575874328613
    5. 'éments' → logprob: -10.252575874328613
    6. 'import' → logprob: -10.752575874328613
    7. 'entation' → logprob: -10.877575874328613
    8. 'ém' → logprob: -11.377575874328613
    9. 'mentation' → logprob: -11.752575874328613
    10. 'emment' → logprob: -13.502575874328613

Token 329: 'ation' (ID: 387)
  Prédit: 'mentation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mentation' → logprob: -0.29428181052207947
    2. 'entation' → logprob: -2.0442817211151123
    3. 'ment' → logprob: -2.4192817211151123
    4. 'ent' → logprob: -4.544281959533691
    5. 'def' → logprob: -4.669281959533691
    6. 't' → logprob: -4.669281959533691
    7. 'er' → logprob: -5.919281959533691
    8. 'import' → logprob: -6.294281959533691
    9. 'ter' → logprob: -7.044281959533691
    10. 'ation' → logprob: -8.044281959533691

Token 330: ' principale' (ID: 68926)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3641641438007355
    2. 'def' → logprob: -1.489164113998413
    3. 'import' → logprob: -2.614164113998413
    4. 'dp' → logprob: -5.364164352416992
    5. 'n' → logprob: -7.489164352416992
    6. '```' → logprob: -7.864164352416992
    7. 'max' → logprob: -8.114164352416992
    8. 'MAX' → logprob: -8.989164352416992
    9. '#' → logprob: -9.239164352416992
    10. ' from' → logprob: -9.739164352416992

Token 331: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49054837226867676
    2. 'd' → logprob: -1.4905483722686768
    3. 'from' → logprob: -2.8655483722686768
    4. 'import' → logprob: -3.3655483722686768
    5. 'dp' → logprob: -3.6155483722686768
    6. 'n' → logprob: -4.115548133850098
    7. '_' → logprob: -4.615548133850098
    8. 'i' → logprob: -5.365548133850098
    9. '```' → logprob: -5.615548133850098
    10. '
' → logprob: -5.990548133850098

Token 332: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7097298502922058
    2. 'dp' → logprob: -1.2097299098968506
    3. 'def' → logprob: -1.7097299098968506
    4. 'import' → logprob: -3.5847299098968506
    5. 'd' → logprob: -7.3347296714782715
    6. '```' → logprob: -7.5847296714782715
    7. 'DP' → logprob: -9.58473014831543
    8. 'n' → logprob: -10.45973014831543
    9. 'for' → logprob: -12.58473014831543
    10. 'max' → logprob: -12.83473014831543

Token 333: ' -' (ID: 533)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3127572238445282
    2. 'dp' → logprob: -1.8127572536468506
    3. 'def' → logprob: -2.3127572536468506
    4. 'import' → logprob: -5.0627570152282715
    5. '```' → logprob: -11.06275749206543
    6. 'DP' → logprob: -11.18775749206543
    7. 'd' → logprob: -11.68775749206543
    8. 'MAX' → logprob: -12.31275749206543
    9. 'max' → logprob: -12.31275749206543
    10. 'n' → logprob: -13.06275749206543

Token 334: ' Pour' (ID: 13931)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13179711997509003
    2. 'def' → logprob: -2.1317970752716064
    3. 'import' → logprob: -5.6317973136901855
    4. 'dp' → logprob: -6.7567973136901855
    5. '#' → logprob: -10.131796836853027
    6. ' from' → logprob: -10.256796836853027
    7. 'dé' → logprob: -11.756796836853027
    8. 'for' → logprob: -12.131796836853027
    9. 'd' → logprob: -12.256796836853027
    10. '```' → logprob: -12.631796836853027

Token 335: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26698657870292664
    2. ' chaque' → logprob: -1.516986608505249
    3. 'i' → logprob: -4.39198637008667
    4. ' each' → logprob: -6.14198637008667
    5. ' l' → logprob: -9.141986846923828
    6. 'each' → logprob: -9.766986846923828
    7. ' acheter' → logprob: -10.016986846923828
    8. ' ' → logprob: -10.391986846923828
    9. ' ' → logprob: -10.891986846923828
    10. ' la' → logprob: -11.141986846923828

Token 336: ' magasin' (ID: 76229)
  Prédit: ' magasin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magasin' → logprob: -0.09624812752008438
    2. 'mag' → logprob: -2.471248149871826
    3. ' mag' → logprob: -5.721248149871826
    4. ' i' → logprob: -6.471248149871826
    5. 'i' → logprob: -6.846248149871826
    6. 'm' → logprob: -7.596248149871826
    7. ' ' → logprob: -8.346247673034668
    8. ' magasins' → logprob: -8.971247673034668
    9. ' magaz' → logprob: -9.096247673034668
    10. ' ' → logprob: -10.096247673034668

Token 337: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6798874735832214
    2. ' i' → logprob: -1.6798875331878662
    3. ':' → logprob: -1.9298875331878662
    4. ' :' → logprob: -2.304887533187866
    5. 'i' → logprob: -3.554887533187866
    6. ' ,' → logprob: -3.929887533187866
    7. ' in' → logprob: -5.554887294769287
    8. '_i' → logprob: -5.679887294769287
    9. ' ' → logprob: -6.179887294769287
    10. ',i' → logprob: -6.554887294769287

Token 338: '#' (ID: 2)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.42876318097114563
    2. ' for' → logprob: -1.4287631511688232
    3. 'for' → logprob: -3.5537631511688232
    4. ' #' → logprob: -3.8037631511688232
    5. ' pour' → logprob: -4.053763389587402
    6. '#' → logprob: -4.053763389587402
    7. ' ' → logprob: -4.428763389587402
    8. '   ' → logprob: -5.678763389587402
    9. 'on' → logprob: -5.803763389587402
    10. ' parcour' → logprob: -6.178763389587402

Token 339: '  ' (ID: 256)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6132790446281433
    2. ' for' → logprob: -1.488279104232788
    3. ' ' → logprob: -2.488279104232788
    4. ' parcour' → logprob: -3.238279104232788
    5. ' pour' → logprob: -3.363279104232788
    6. 'for' → logprob: -3.988279104232788
    7. ' #' → logprob: -4.238278865814209
    8. ' ' → logprob: -4.863278865814209
    9. '#' → logprob: -4.988278865814209
    10. '    ' → logprob: -5.113278865814209

Token 340: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5528127551078796
    2. ' for' → logprob: -1.8028128147125244
    3. ' pour' → logprob: -2.0528128147125244
    4. ' ' → logprob: -3.3028128147125244
    5. ' parcour' → logprob: -3.4278128147125244
    6. 'for' → logprob: -3.9278128147125244
    7. 'on' (adapté à ' on') → logprob: -4.052812576293945
    8. '   ' → logprob: -4.552812576293945
    9. 'pour' → logprob: -5.302812576293945
    10. '#' → logprob: -6.177812576293945

Token 341: ' tente' (ID: 75234)
  Prédit: ' explore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' explore' → logprob: -1.4211478233337402
    2. ' parcours' → logprob: -1.7961478233337402
    3. ' parc' → logprob: -1.7961478233337402
    4. ' ' → logprob: -1.9211478233337402
    5. ' boucle' → logprob: -2.2961478233337402
    6. 'expl' → logprob: -3.5461478233337402
    7. ' considère' → logprob: -3.7961478233337402
    8. '   ' → logprob: -4.42114782333374
    9. ' parcour' → logprob: -4.42114782333374
    10. ' calc' → logprob: -4.42114782333374

Token 342: ' ' (ID: 220)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.15743795037269592
    2. ' ' → logprob: -2.282438039779663
    3. 'd' → logprob: -4.657437801361084
    4. ' toutes' → logprob: -4.782437801361084
    5. ' de' → logprob: -5.032437801361084
    6. '   ' → logprob: -5.407437801361084
    7. ' l' → logprob: -5.657437801361084
    8. '  ' → logprob: -6.032437801361084
    9. 's' → logprob: -6.407437801361084
    10. '    ' → logprob: -6.657437801361084

Token 343: '2' (ID: 17)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1288071721792221
    2. 'd' → logprob: -2.1288070678710938
    3. ' ' → logprob: -6.503807067871094
    4. '   ' → logprob: -8.878807067871094
    5. ' de' → logprob: -9.628807067871094
    6. 'de' → logprob: -9.753807067871094
    7. '    ' → logprob: -10.753807067871094
    8. '  ' → logprob: -11.003807067871094
    9. 'tout' → logprob: -11.128807067871094
    10. ' l' → logprob: -11.628807067871094

Token 344: ' options' (ID: 3880)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13230469822883606
    2. ' possibilités' → logprob: -2.3823046684265137
    3. ' options' → logprob: -5.007304668426514
    4. ' choix' → logprob: -5.132304668426514
    5. ' cas' → logprob: -5.382304668426514
    6. ' ' → logprob: -5.882304668426514
    7. '  ' → logprob: -6.257304668426514
    8. 'poss' → logprob: -6.632304668426514
    9. 'options' → logprob: -7.132304668426514
    10. '_' → logprob: -7.257304668426514

Token 345: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05516603961586952
    2. ' :' → logprob: -2.930166006088257
    3. ' ' → logprob: -9.430166244506836
    4. ' ' → logprob: -9.555166244506836
    5. ' (' → logprob: -10.180166244506836
    6. ':
' → logprob: -10.555166244506836
    7. ' :
' → logprob: -11.180166244506836
    8. ',' → logprob: -11.680166244506836
    9. '   ' → logprob: -11.805166244506836
    10. '.' → logprob: -12.180166244506836

Token 346: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13491536676883698
    2. ' (' → logprob: -3.259915351867676
    3. ' ' → logprob: -3.509915351867676
    4. '   ' → logprob: -4.259915351867676
    5. ' #' → logprob: -4.634915351867676
    6. '    ' → logprob: -4.884915351867676
    7. '1' → logprob: -5.634915351867676
    8. '\' → logprob: -5.759915351867676
    9. '  ' → logprob: -5.884915351867676
    10. '#' → logprob: -6.009915351867676

Token 347: '    ' (ID: 257)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.080066442489624
    2. '#' → logprob: -1.205066442489624
    3. ' ' → logprob: -1.580066442489624
    4. '1' → logprob: -3.330066442489624
    5. '   ' → logprob: -3.455066442489624
    6. '-' → logprob: -3.455066442489624
    7. ' -' → logprob: -3.705066442489624
    8. '    ' → logprob: -4.455066680908203
    9. '  ' → logprob: -5.205066680908203
    10. ' acheter' → logprob: -6.080066680908203

Token 348: ' -' (ID: 533)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.4314049780368805
    2. ' acheter' → logprob: -1.306404948234558
    3. 'acheter' → logprob: -2.9314050674438477
    4. ' ' → logprob: -4.556405067443848
    5. 'ne' → logprob: -4.931405067443848
    6. ' Acheter' → logprob: -6.056405067443848
    7. '1' → logprob: -6.681405067443848
    8. ' "' → logprob: -7.556405067443848
    9. '-' (adapté à ' -') → logprob: -7.681405067443848
    10. ' achat' → logprob: -7.681405067443848

Token 349: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.3649832606315613
    2. 'ne' → logprob: -1.364983320236206
    3. ' acheter' → logprob: -3.864983320236206
    4. 'acheter' → logprob: -3.864983320236206
    5. 'n' → logprob: -5.739983081817627
    6. ' n' → logprob: -5.989983081817627
    7. ' Ne' → logprob: -7.489983081817627
    8. 'Ne' → logprob: -7.739983081817627
    9. ' continuer' → logprob: -7.864983081817627
    10. ' Acheter' → logprob: -8.239983558654785

Token 350: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.04079824313521385
    2. 'pas' → logprob: -3.2907981872558594
    3. ' rien' → logprob: -6.790798187255859
    4. ' ' → logprob: -7.540798187255859
    5. 'r' → logprob: -8.29079818725586
    6. ' ach' → logprob: -8.41579818725586
    7. ' prends' → logprob: -8.66579818725586
    8. ' ' → logprob: -9.04079818725586
    9. '_pas' → logprob: -9.16579818725586
    10. ' plus' → logprob: -9.41579818725586

Token 351: ' acheter' (ID: 60712)
  Prédit: 'acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -0.22692039608955383
    2. ' acheter' → logprob: -1.6019203662872314
    3. ' ' → logprob: -7.3519206047058105
    4. 'prendre' → logprob: -7.7269206047058105
    5. ' prendre' → logprob: -8.851920127868652
    6. ' Acheter' → logprob: -9.351920127868652
    7. 'achat' → logprob: -10.476920127868652
    8. 'ach' → logprob: -10.726920127868652
    9. 'buy' → logprob: -11.226920127868652
    10. 'payer' → logprob: -11.226920127868652

Token 352: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11709227412939072
    2. '_' → logprob: -2.7420923709869385
    3. ' ' → logprob: -3.8670923709869385
    4. ',
' → logprob: -4.742092132568359
    5. ' (' → logprob: -5.992092132568359
    6. ' ,' → logprob: -5.992092132568359
    7. '  
' → logprob: -6.117092132568359
    8. ';' → logprob: -6.367092132568359
    9. ')' → logprob: -6.492092132568359
    10. '
' → logprob: -6.492092132568359

Token 353: 'ét' (ID: 3913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14625266194343567
    2. ' )' → logprob: -2.2712526321411133
    3. '),' → logprob: -4.396252632141113
    4. ' )
' → logprob: -5.021252632141113
    5. ')
' → logprob: -5.146252632141113
    6. ' ),' → logprob: -5.521252632141113
    7. ' ' → logprob: -6.896252632141113
    8. '),
' → logprob: -6.896252632141113
    9. '\n' → logprob: -7.646252632141113
    10. ' ),
' → logprob: -7.896252632141113

Token 354: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.02194853685796261
    2. 'ape' → logprob: -3.8969485759735107
    3. '#' → logprob: -8.14694881439209
    4. ')' → logprob: -8.14694881439209
    5. '   ' → logprob: -8.77194881439209
    6. 'ats' → logprob: -9.39694881439209
    7. ' ' → logprob: -9.77194881439209
    8. 'a' → logprob: -9.89694881439209
    9. 'tat' → logprob: -9.89694881439209
    10. '  ' → logprob: -10.27194881439209

Token 355: ' inch' (ID: 23594)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7448574304580688
    2. ' )' → logprob: -0.9948574304580688
    3. ' ),' → logprob: -2.8698573112487793
    4. '_' → logprob: -2.9948573112487793
    5. '),' → logprob: -4.369857311248779
    6. ' ' → logprob: -5.244857311248779
    7. '   ' → logprob: -5.244857311248779
    8. ' ),
' → logprob: -5.369857311248779
    9. ' =' → logprob: -5.744857311248779
    10. ',' → logprob: -5.869857311248779

Token 356: 'angé' (ID: 119992)
  Prédit: 'angé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angé' → logprob: -0.0010423363419249654
    2. 'ang' → logprob: -6.876042366027832
    3. 'anger' → logprob: -12.001042366027832
    4. 'anged' → logprob: -14.126042366027832
    5. 'ange' → logprob: -14.626042366027832
    6. '   ' → logprob: -15.376042366027832
    7. 'and' → logprob: -15.376042366027832
    8. 'ANG' → logprob: -15.376042366027832
    9. 'anging' → logprob: -15.626042366027832
    10. 'a' → logprob: -15.626042366027832

Token 357: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029128335416316986
    2. ')' → logprob: -3.779128313064575
    3. '),
' → logprob: -5.529128551483154
    4. ')
' → logprob: -7.279128551483154
    5. ' )
' → logprob: -7.404128551483154
    6. '),' → logprob: -8.154128074645996
    7. ')

' → logprob: -8.654128074645996
    8. '   ' → logprob: -10.154128074645996
    9. '#' → logprob: -11.029128074645996
    10. ' ' → logprob: -11.154128074645996

Token 358: ' desp' (ID: 36350)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5978487730026245
    2. ' continue' → logprob: -1.8478487730026245
    3. ')' → logprob: -2.097848892211914
    4. ' continuer' → logprob: -2.722848892211914
    5. ' donc' → logprob: -3.597848892211914
    6. ' )' → logprob: -3.972848892211914
    7. '  
' → logprob: -4.847848892211914
    8. ' 
' → logprob: -5.347848892211914
    9. 'continue' → logprob: -5.347848892211914
    10. '\' → logprob: -5.472848892211914

Token 359: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.3669397532939911
    2. 'end' → logprob: -1.3669397830963135
    3. 'ende' → logprob: -3.4919397830963135
    4. 'e' → logprob: -4.491939544677734
    5. 'ens' → logprob: -6.741939544677734
    6. 'en' → logprob: -6.741939544677734
    7. 'ence' → logprob: -6.991939544677734
    8. '   ' → logprob: -7.116939544677734
    9. 'ent' → logprob: -7.241939544677734
    10. 'aise' → logprob: -7.616939544677734

Token 360: ' inch' (ID: 23594)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.8246603608131409
    2. ' minimale' → logprob: -1.449660301208496
    3. ' +=' → logprob: -2.324660301208496
    4. ' +' → logprob: -2.824660301208496
    5. ')' → logprob: -3.574660301208496
    6. '_' → logprob: -3.699660301208496
    7. ' =' → logprob: -3.824660301208496
    8. '   ' → logprob: -4.199660301208496
    9. 'min' → logprob: -4.449660301208496
    10. '_total' → logprob: -4.699660301208496

Token 361: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.2024962455034256
    2. 'angé' → logprob: -1.7024962902069092
    3. '#' → logprob: -8.452496528625488
    4. 'a' → logprob: -8.952496528625488
    5. 'anged' → logprob: -9.327496528625488
    6. 'an' → logprob: -9.827496528625488
    7. 'érée' → logprob: -9.952496528625488
    8. 'ac' → logprob: -9.952496528625488
    9. ' ang' → logprob: -10.077496528625488
    10. 'ér' → logprob: -10.202496528625488

Token 362: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.37567138671875
    2. 'é' → logprob: -1.37567138671875
    3. 'e' → logprob: -3.87567138671875
    4. 'ère' → logprob: -4.00067138671875
    5. 'ér' → logprob: -5.12567138671875
    6. 'érée' → logprob: -5.62567138671875
    7. 'ière' → logprob: -6.25067138671875
    8. 'i' → logprob: -6.50067138671875
    9. '#' → logprob: -6.62567138671875
    10. 'er' → logprob: -6.75067138671875

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6385930776596069
    2. ')
' → logprob: -0.7635930776596069
    3. ')
' → logprob: -5.8885931968688965
    4. ' )
' → logprob: -6.3885931968688965
    5. ' )' → logprob: -7.7635931968688965
    6. '),' → logprob: -7.7635931968688965
    7. '),
' → logprob: -8.013592720031738
    8. ')

' → logprob: -9.138592720031738
    9. ' ' → logprob: -9.638592720031738
    10. '   ' → logprob: -9.888592720031738

Token 364: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6024866104125977
    2. '-' → logprob: -1.7274866104125977
    3. '  
' → logprob: -2.7274866104125977
    4. '\n' → logprob: -3.2274866104125977
    5. ',' → logprob: -3.3524866104125977
    6. '   ' → logprob: -3.4774866104125977
    7. ' ' → logprob: -3.6024866104125977
    8. ',
' → logprob: -3.7274866104125977
    9. '
' → logprob: -4.102486610412598
    10. '\' → logprob: -4.227486610412598

Token 365: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725504398345947
    2. '#' → logprob: -1.4225504398345947
    3. '-' → logprob: -2.5475504398345947
    4. ' ' → logprob: -3.0475504398345947
    5. '\n' → logprob: -3.5475504398345947
    6. ',' → logprob: -3.9225504398345947
    7. '\' → logprob: -4.047550201416016
    8. '
' → logprob: -4.297550201416016
    9. ',
' → logprob: -4.297550201416016
    10. '  
' → logprob: -4.797550201416016

Token 366: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' (adapté à ' -') → logprob: -0.013573338277637959
    2. '#' → logprob: -4.638573169708252
    3. '   ' → logprob: -6.888573169708252
    4. ' ' → logprob: -7.263573169708252
    5. '-
' → logprob: -7.263573169708252
    6. ' -' → logprob: -8.26357364654541
    7. '\n' → logprob: -8.88857364654541
    8. '+' → logprob: -9.01357364654541
    9. ',' → logprob: -9.01357364654541
    10. ')' → logprob: -9.13857364654541

Token 367: ' acheter' (ID: 60712)
  Prédit: ' acheter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acheter' → logprob: -0.14313705265522003
    2. 'acheter' → logprob: -2.018136978149414
    3. ' ' → logprob: -8.143136978149414
    4. '   ' → logprob: -10.018136978149414
    5. ' ache' → logprob: -10.143136978149414
    6. '  ' → logprob: -11.018136978149414
    7. ' Acheter' → logprob: -11.143136978149414
    8. '    ' → logprob: -11.268136978149414
    9. ' achat' → logprob: -11.768136978149414
    10. 'ach' → logprob: -12.393136978149414

Token 368: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5724407434463501
    2. ' (' → logprob: -0.9474407434463501
    3. ')' → logprob: -4.0724406242370605
    4. '(' → logprob: -4.4474406242370605
    5. ' ' → logprob: -5.0724406242370605
    6. ' _' → logprob: -5.1974406242370605
    7. ' )' → logprob: -6.3224406242370605
    8. '<|end|>' → logprob: -6.5724406242370605
    9. ' (
' → logprob: -7.6974406242370605
    10. ',' → logprob: -7.6974406242370605

Token 369: ' pièce' (ID: 56132)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21327652037143707
    2. 'sou' → logprob: -2.3382766246795654
    3. ' pièce' → logprob: -2.8382766246795654
    4. ' souvenir' → logprob: -3.7132766246795654
    5. '_' → logprob: -5.588276386260986
    6. 'pi' → logprob: -5.838276386260986
    7. 'piece' → logprob: -6.588276386260986
    8. '  ' → logprob: -7.713276386260986
    9. '```' → logprob: -7.713276386260986
    10. '   ' → logprob: -7.963276386260986

Token 370: ' :
' (ID: 10039)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05956092104315758
    2. ')' → logprob: -3.934561014175415
    3. 's' → logprob: -3.934561014175415
    4. ' ' → logprob: -5.309560775756836
    5. '<|end|>' → logprob: -5.434560775756836
    6. ' _' → logprob: -6.434560775756836
    7. ' de' → logprob: -6.684560775756836
    8. ',' → logprob: -6.684560775756836
    9. '_s' → logprob: -7.184560775756836
    10. '\' → logprob: -7.434560775756836

Token 371: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5779508352279663
    2. ' (' → logprob: -1.5779508352279663
    3. '   ' → logprob: -2.952950954437256
    4. ' #' → logprob: -3.077950954437256
    5. ' =' → logprob: -4.077950954437256
    6. ',' → logprob: -4.077950954437256
    7. '[' → logprob: -4.327950954437256
    8. '(s' → logprob: -4.827950954437256
    9. '    ' → logprob: -5.077950954437256
    10. '#' → logprob: -5.327950954437256

Token 372: '      ' (ID: 1699)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1936005800962448
    2. ' ' → logprob: -3.818600654602051
    3. ' (' → logprob: -3.943600654602051
    4. '[' → logprob: -4.068600654602051
    5. '    ' → logprob: -4.193600654602051
    6. ' for' → logprob: -4.693600654602051
    7. ' \' → logprob: -4.693600654602051
    8. ' {' → logprob: -4.693600654602051
    9. 'for' → logprob: -5.068600654602051
    10. '_' → logprob: -5.193600654602051

Token 373: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.0126869678497314
    2. ' on' → logprob: -2.0126869678497314
    3. ' ' → logprob: -2.2626869678497314
    4. ' (' → logprob: -2.6376869678497314
    5. ' #' → logprob: -2.6376869678497314
    6. ' pour' → logprob: -2.8876869678497314
    7. ' montant' → logprob: -3.1376869678497314
    8. '   ' → logprob: -3.5126869678497314
    9. ' si' → logprob: -3.8876869678497314
    10. ' for' → logprob: -4.012686729431152

Token 374: ' On' (ID: 2160)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -1.2074006795883179
    2. ' calcul' → logprob: -1.3324006795883179
    3. ' on' → logprob: -1.5824006795883179
    4. '#' → logprob: -3.2074007987976074
    5. 'on' → logprob: -3.4574007987976074
    6. ' for' → logprob: -3.7074007987976074
    7. ' pour' → logprob: -3.8324007987976074
    8. ' ' → logprob: -4.207400798797607
    9. 'for' → logprob: -4.457400798797607
    10. ' #' → logprob: -4.457400798797607

Token 375: ' essa' (ID: 19417)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.3564469516277313
    2. ' calc' → logprob: -1.3564469814300537
    3. ' ach' → logprob: -4.856446743011475
    4. ' essa' → logprob: -4.981446743011475
    5. 'v' → logprob: -5.231446743011475
    6. ' tente' → logprob: -5.606446743011475
    7. ' continue' → logprob: -5.856446743011475
    8. 'ach' → logprob: -6.356446743011475
    9. ' teste' → logprob: -6.481446743011475
    10. ' v' → logprob: -6.731446743011475

Token 376: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.019329266622662544
    2. 'y' → logprob: -4.394329071044922
    3. 'ye' → logprob: -5.019329071044922
    4. 'i' → logprob: -10.019329071044922
    5. 'yer' → logprob: -10.394329071044922
    6. '\' → logprob: -11.144329071044922
    7. 'uie' → logprob: -11.144329071044922
    8. 'aye' → logprob: -11.394329071044922
    9. '
' → logprob: -11.769329071044922
    10. '

' → logprob: -12.144329071044922

Token 377: ' tous' (ID: 10688)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13984186947345734
    2. ' de' → logprob: -2.6398417949676514
    3. ' toutes' → logprob: -3.2648417949676514
    4. 'd' → logprob: -4.8898420333862305
    5. ' ' → logprob: -5.3898420333862305
    6. ' tous' → logprob: -5.7648420333862305
    7. '    ' → logprob: -6.3898420333862305
    8. 'de' → logprob: -7.5148420333862305
    9. '        ' → logprob: -7.6398420333862305
    10. 't' → logprob: -7.7648420333862305

Token 378: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.007038947660475969
    2. 'les' → logprob: -5.0070390701293945
    3. 's' → logprob: -8.632039070129395
    4. ' ' → logprob: -10.132039070129395
    5. ' possible' → logprob: -10.132039070129395
    6. ' s' → logprob: -11.382039070129395
    7. ' possibles' → logprob: -11.382039070129395
    8. 'es' → logprob: -12.007039070129395
    9. '   ' → logprob: -12.382039070129395
    10. '_' → logprob: -12.507039070129395

Token 379: ' mont' (ID: 11554)
  Prédit: 'prix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prix' → logprob: -1.3002655506134033
    2. ' prix' → logprob: -1.8002655506134033
    3. 'mont' → logprob: -2.3002655506134033
    4. ' mont' → logprob: -2.3002655506134033
    5. ' ' → logprob: -2.9252655506134033
    6. ' achats' → logprob: -3.1752655506134033
    7. '   ' → logprob: -3.8002655506134033
    8. 'pai' → logprob: -3.8002655506134033
    9. ' nombres' → logprob: -3.9252655506134033
    10. 'quant' → logprob: -4.300265312194824

Token 380: 'ants' (ID: 2027)
  Prédit: 'ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -1.3842570781707764
    2. 'ant' → logprob: -1.7592570781707764
    3. 'ier' → logprob: -1.8842570781707764
    4. 'age' → logprob: -2.2592570781707764
    5. 'i' → logprob: -3.6342570781707764
    6. 's' → logprob: -4.0092573165893555
    7. 'és' → logprob: -4.0092573165893555
    8. 'ager' → logprob: -4.0092573165893555
    9. 'ants' → logprob: -4.5092573165893555
    10. 'agers' → logprob: -4.5092573165893555

Token 381: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14186705648899078
    2. ' ' → logprob: -3.391867160797119
    3. ' possibles' → logprob: -3.516867160797119
    4. '_possible' → logprob: -4.016867160797119
    5. ' possible' → logprob: -4.141867160797119
    6. ' _' → logprob: -4.516867160797119
    7. 's' → logprob: -4.766867160797119
    8. 'possible' → logprob: -5.766867160797119
    9. ')' → logprob: -6.141867160797119
    10. '-' → logprob: -6.391867160797119

Token 382: ' vers' (ID: 3640)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.005402369424700737
    2. 'p' → logprob: -6.755402565002441
    3. 'dé' → logprob: -6.755402565002441
    4. 'pay' → logprob: -7.130402565002441
    5. ' payer' → logprob: -7.255402565002441
    6. '```' → logprob: -7.380402565002441
    7. 'acheter' → logprob: -8.755402565002441
    8. 'part' → logprob: -8.880402565002441
    9. 'util' → logprob: -9.130402565002441
    10. '   ' → logprob: -9.380402565002441

Token 383: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.5649528298527e-05
    2. 'ers' → logprob: -10.500075340270996
    3. 'ser' → logprob: -11.000075340270996
    4. 'e' → logprob: -11.125075340270996
    5. 'r' → logprob: -12.125075340270996
    6. 'p' → logprob: -13.500075340270996
    7. '   ' → logprob: -13.875075340270996
    8. 'é' → logprob: -14.000075340270996
    9. 'de' → logprob: -14.250075340270996
    10. 'a' → logprob: -14.500075340270996

Token 384: ' possibles' (ID: 97753)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6124559044837952
    2. '_' → logprob: -1.2374558448791504
    3. ',' → logprob: -3.1124558448791504
    4. '<|end|>' → logprob: -3.2374558448791504
    5. ')' → logprob: -3.8624558448791504
    6. 's' → logprob: -3.9874558448791504
    7. ' =' → logprob: -4.98745584487915
    8. ' ,' → logprob: -5.48745584487915
    9. '=' → logprob: -5.61245584487915
    10. ' _' → logprob: -5.73745584487915

Token 385: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3726676404476166
    2. ',' → logprob: -2.1226675510406494
    3. ' ' → logprob: -2.3726675510406494
    4. ')' → logprob: -3.7476675510406494
    5. ' ,' → logprob: -4.7476677894592285
    6. '[' → logprob: -4.8726677894592285
    7. ' =' → logprob: -4.9976677894592285
    8. ':' → logprob: -5.1226677894592285
    9. '<|end|>' → logprob: -5.1226677894592285
    10. ' _' → logprob: -5.2476677894592285

Token 386: ' conco' (ID: 129238)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.326208233833313
    2. ' ' → logprob: -1.451208233833313
    3. '#' → logprob: -1.576208233833313
    4. ',' → logprob: -3.4512081146240234
    5. '       ' → logprob: -3.4512081146240234
    6. '  
' → logprob: -3.4512081146240234
    7. '         ' → logprob: -3.8262081146240234
    8. ' en' → logprob: -4.076208114624023
    9. ''' → logprob: -4.326208114624023
    10. ' =' → logprob: -4.576208114624023

Token 387: 'ct' (ID: 308)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.9661599397659302
    2. 'm' → logprob: -1.9661599397659302
    3. 'nt' → logprob: -1.9661599397659302
    4. 'n' → logprob: -2.3411598205566406
    5. 'rt' → logprob: -2.8411598205566406
    6. 'ct' → logprob: -3.0911598205566406
    7. 'ir' → logprob: -3.4661598205566406
    8. 'rn' → logprob: -3.4661598205566406
    9. 'nn' → logprob: -4.466159820556641
    10. 'mp' → logprob: -4.841159820556641

Token 388: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.17641639709472656
    2. 'tant' → logprob: -2.5514163970947266
    3. 'er' → logprob: -3.6764163970947266
    4. 't' → logprob: -3.9264163970947266
    5. 'ter' → logprob: -4.676416397094727
    6. 'ting' → logprob: -5.801416397094727
    7. 'ted' → logprob: -5.801416397094727
    8. 'és' → logprob: -6.301416397094727
    9. 'ur' → logprob: -6.426416397094727
    10. 'r' → logprob: -6.551416397094727

Token 389: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8819385766983032
    2. ' un' → logprob: -1.3819385766983032
    3. ' des' → logprob: -1.6319385766983032
    4. ' une' → logprob: -2.8819384574890137
    5. '_' → logprob: -3.8819384574890137
    6. 's' → logprob: -4.131938457489014
    7. 'r' → logprob: -4.631938457489014
    8. ' _' → logprob: -4.881938457489014
    9. ' l' → logprob: -5.131938457489014
    10. ' la' → logprob: -5.381938457489014

Token 390: ' monnaie' (ID: 168963)
  Prédit: ' monnaie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -0.3883562684059143
    2. '_' → logprob: -1.8883562088012695
    3. ' somme' → logprob: -2.5133562088012695
    4. ' solution' → logprob: -4.0133562088012695
    5. ' ' → logprob: -4.0133562088012695
    6. 's' → logprob: -5.0133562088012695
    7. '   ' → logprob: -5.1383562088012695
    8. ' pièce' → logprob: -5.2633562088012695
    9. '```' → logprob: -5.5133562088012695
    10. ' _' → logprob: -5.5133562088012695

Token 391: ' vers' (ID: 3640)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2268627882003784
    2. '_' → logprob: -1.6018627882003784
    3. ' rend' → logprob: -1.6018627882003784
    4. ' rendu' → logprob: -2.476862907409668
    5. 'r' → logprob: -3.226862907409668
    6. '   ' → logprob: -3.476862907409668
    7. ' reç' → logprob: -3.601862907409668
    8. '.' → logprob: -3.726862907409668
    9. 's' → logprob: -4.351862907409668
    10. '       ' → logprob: -4.726862907409668

Token 392: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.08525542169809341
    2. 'é' → logprob: -3.0852553844451904
    3. 'er' → logprob: -3.4602553844451904
    4. 'e' → logprob: -6.4602556228637695
    5. 'ant' → logprob: -6.5852556228637695
    6. 'r' → logprob: -7.4602556228637695
    7. 'ante' → logprob: -8.21025562286377
    8. '#' → logprob: -8.33525562286377
    9. 'ee' → logprob: -9.08525562286377
    10. 'rée' → logprob: -9.21025562286377

Token 393: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06321341544389725
    2. ' ' → logprob: -3.813213348388672
    3. ',' → logprob: -3.938213348388672
    4. ')' → logprob: -5.438213348388672
    5. '}' → logprob: -5.813213348388672
    6. ' _' → logprob: -6.188213348388672
    7. '.' → logprob: -6.438213348388672
    8. '   ' → logprob: -6.813213348388672
    9. ' ,' → logprob: -7.438213348388672
    10. '<|end|>' → logprob: -7.438213348388672

Token 394: 'bill' (ID: 51424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.737845242023468
    2. ' )' → logprob: -0.737845242023468
    3. ' ' → logprob: -4.112845420837402
    4. ',' → logprob: -4.737845420837402
    5. ' ),' → logprob: -5.487845420837402
    6. ' ,' → logprob: -5.487845420837402
    7. '),' → logprob: -6.612845420837402
    8. '[' → logprob: -7.112845420837402
    9. ' {' → logprob: -7.612845420837402
    10. '```' → logprob: -7.737845420837402

Token 395: '+' (ID: 10)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06278046220541
    2. ')' → logprob: -3.3127803802490234
    3. 's' → logprob: -4.062780380249023
    4. 'es' → logprob: -5.687780380249023
    5. ' ' → logprob: -6.937780380249023
    6. '_' → logprob: -6.937780380249023
    7. ' e' → logprob: -8.437780380249023
    8. '   ' → logprob: -8.562780380249023
    9. ' )' → logprob: -8.687780380249023
    10. '  ' → logprob: -9.062780380249023

Token 396: 'pi' (ID: 3455)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -1.1455928087234497
    2. ' coins' → logprob: -1.1455928087234497
    3. ' pieces' → logprob: -1.7705928087234497
    4. 'coins' → logprob: -2.77059268951416
    5. ' pièces' → logprob: -3.27059268951416
    6. 'coin' → logprob: -3.27059268951416
    7. 'pieces' → logprob: -3.89559268951416
    8. ' ' → logprob: -5.27059268951416
    9. ' monnaie' → logprob: -5.27059268951416
    10. ' piece' → logprob: -5.39559268951416

Token 397: 'èces' (ID: 100354)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -1.00070059299469
    2. 'ec' → logprob: -1.00070059299469
    3. 'ece' → logprob: -2.2507004737854004
    4. 'e' → logprob: -2.7507004737854004
    5. 'èce' → logprob: -3.2507004737854004
    6. 'èces' → logprob: -3.3757004737854004
    7. 'ces' → logprob: -4.5007004737854
    8. 'è' → logprob: -6.2507004737854
    9. '#' → logprob: -6.3757004737854
    10. ')' → logprob: -6.7507004737854

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6096914410591125
    2. 's' → logprob: -0.8596914410591125
    3. ' )' → logprob: -4.234691619873047
    4. ' s' → logprob: -5.234691619873047
    5. '),' → logprob: -5.234691619873047
    6. '_' → logprob: -5.609691619873047
    7. ' ' → logprob: -6.859691619873047
    8. 'es' → logprob: -7.484691619873047
    9. '(s' → logprob: -7.734691619873047
    10. ' ),' → logprob: -7.859691619873047

Token 399: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3102937638759613
    2. '[' → logprob: -2.185293674468994
    3. '_' → logprob: -2.560293674468994
    4. ')' → logprob: -4.435293674468994
    5. '<|end|>' → logprob: -4.435293674468994
    6. ' =' → logprob: -4.810293674468994
    7. ',' → logprob: -4.935293674468994
    8. '#' → logprob: -5.435293674468994
    9. '[
' → logprob: -5.435293674468994
    10. '
' → logprob: -5.810293674468994

Token 400: '        ' (ID: 269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.367901474237442
    2. ')' → logprob: -2.242901563644409
    3. ',' → logprob: -2.867901563644409
    4. ' ' → logprob: -3.492901563644409
    5. '<|end|>' → logprob: -3.742901563644409
    6. '#' → logprob: -4.11790132522583
    7. '[' → logprob: -4.24290132522583
    8. ' _' → logprob: -4.99290132522583
    9. 's' → logprob: -5.24290132522583
    10. ' =' → logprob: -5.36790132522583

Token 401: ' telle' (ID: 70904)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7355943918228149
    2. '_' → logprob: -1.735594391822815
    3. ',' → logprob: -1.985594391822815
    4. ' ' → logprob: -2.7355942726135254
    5. '#' → logprob: -3.7355942726135254
    6. '=' → logprob: -3.8605942726135254
    7. '.' → logprob: -3.9855942726135254
    8. '[' → logprob: -4.610594272613525
    9. '   ' → logprob: -4.610594272613525
    10. '<|end|>' → logprob: -4.735594272613525

Token 402: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.044072218239307404
    2. ' ' → logprob: -3.294072151184082
    3. 'que' → logprob: -5.794072151184082
    4. ' qu' → logprob: -6.294072151184082
    5. 's' → logprob: -7.669072151184082
    6. '_' → logprob: -8.669072151184082
    7. 'qu' → logprob: -9.419072151184082
    8. ')' → logprob: -9.544072151184082
    9. ',' → logprob: -9.794072151184082
    10. ' ' → logprob: -10.169072151184082

Token 403: ' montant' (ID: 72364)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9440378546714783
    2. ' la' → logprob: -0.9440378546714783
    3. ' on' → logprob: -1.944037914276123
    4. 'le' → logprob: -4.069037914276123
    5. 'la' → logprob: -4.069037914276123
    6. 'on' → logprob: -4.944037914276123
    7. ' l' → logprob: -5.069037914276123
    8. ' ' → logprob: -5.694037914276123
    9. ' (' → logprob: -5.819037914276123
    10. '         ' → logprob: -6.319037914276123

Token 404: ' donné' (ID: 52079)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3361615836620331
    2. ' ' → logprob: -1.7111616134643555
    3. ')' → logprob: -3.2111616134643555
    4. 's' → logprob: -4.2111616134643555
    5. '+' → logprob: -4.2111616134643555
    6. '>' → logprob: -5.3361616134643555
    7. ' >' → logprob: -5.5861616134643555
    8. '=' → logprob: -5.5861616134643555
    9. ' )' → logprob: -5.8361616134643555
    10. ' +' → logprob: -5.9611616134643555

Token 405: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47047552466392517
    2. ')' → logprob: -1.9704755544662476
    3. ' ' → logprob: -2.095475435256958
    4. '}' → logprob: -3.220475435256958
    5. ',' → logprob: -3.845475435256958
    6. 's' → logprob: -4.095475673675537
    7. '=' → logprob: -4.720475673675537
    8. '+' → logprob: -5.345475673675537
    9. ' }' → logprob: -5.345475673675537
    10. ' )' → logprob: -5.470475673675537

Token 406: ' prix' (ID: 18771)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.7823113203048706
    2. ' la' → logprob: -1.9073113203048706
    3. ' montant' → logprob: -2.15731143951416
    4. ' rendu' → logprob: -2.28231143951416
    5. ' ' → logprob: -2.40731143951416
    6. ' reçu' → logprob: -2.53231143951416
    7. 'le' → logprob: -3.40731143951416
    8. '1' → logprob: -3.40731143951416
    9. ' prix' → logprob: -3.65731143951416
    10. ' acheté' → logprob: -3.78231143951416

Token 407: ' =' (ID: 314)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5825455188751221
    2. '_' → logprob: -1.832545518875122
    3. '>=' → logprob: -3.082545518875122
    4. ')' → logprob: -3.332545518875122
    5. '>' → logprob: -3.332545518875122
    6. ' <=' → logprob: -3.332545518875122
    7. '}' → logprob: -3.457545518875122
    8. ' >' → logprob: -4.082545280456543
    9. ' ' → logprob: -4.332545280456543
    10. '   ' → logprob: -4.457545280456543

Token 408: ' monnaie' (ID: 168963)
  Prédit: ' monnaie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -1.2273387908935547
    2. ' rendu' → logprob: -1.6023387908935547
    3. ' pièces' → logprob: -1.8523387908935547
    4. ' pieces' → logprob: -2.2273387908935547
    5. ' ' → logprob: -2.9773387908935547
    6. '0' → logprob: -3.3523387908935547
    7. 'mon' → logprob: -3.7273387908935547
    8. ' montant' → logprob: -3.7273387908935547
    9. ' change' → logprob: -4.227338790893555
    10. '500' → logprob: -4.352338790893555

Token 409: ' rend' (ID: 15016)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.050185300409793854
    2. ')' → logprob: -4.425185203552246
    3. '[' → logprob: -5.050185203552246
    4. ',' → logprob: -5.175185203552246
    5. ' ' → logprob: -5.175185203552246
    6. ':' → logprob: -5.925185203552246
    7. 's' → logprob: -6.050185203552246
    8. '#' → logprob: -6.175185203552246
    9. '<|end|>' → logprob: -6.175185203552246
    10. '
' → logprob: -6.425185203552246

Token 410: 'ue' (ID: 466)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: ' contenant' (ID: 131049)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9926232099533081
    2. ' ' → logprob: -2.2426233291625977
    3. '<|end|>' → logprob: -2.4926233291625977
    4. ')' → logprob: -2.6176233291625977
    5. '
' → logprob: -2.6176233291625977
    6. ',' → logprob: -2.6176233291625977
    7. '[' → logprob: -2.7426233291625977
    8. ' =' → logprob: -3.3676233291625977
    9. ':' → logprob: -3.9926233291625977
    10. '#' → logprob: -4.242623329162598

Token 412: ' une' (ID: 2463)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5964843034744263
    2. ' ' → logprob: -1.5964843034744263
    3. ' des' → logprob: -1.8464843034744263
    4. '500' → logprob: -3.3464841842651367
    5. 'au' → logprob: -4.346484184265137
    6. ' une' → logprob: -4.471484184265137
    7. '_' → logprob: -4.971484184265137
    8. '<|end|>' → logprob: -5.471484184265137
    9. ' uniquement' → logprob: -5.596484184265137
    10. 'des' → logprob: -5.596484184265137

Token 413: ' ou' (ID: 2031)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10850486159324646
    2. '500' → logprob: -2.3585047721862793
    3. '_' → logprob: -6.483504772186279
    4. 'piece' → logprob: -6.858504772186279
    5. ' piece' → logprob: -7.233504772186279
    6. '```' → logprob: -7.483504772186279
    7. ' pièce' → logprob: -7.608504772186279
    8. '5' → logprob: -7.733504772186279
    9. 'pi' → logprob: -7.983504772186279
    10. ' pi' → logprob: -8.108505249023438

Token 414: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.11696957796812057
    2. '```' → logprob: -3.616969585418701
    3. 'moins' → logprob: -3.991969585418701
    4. ' plus' → logprob: -4.241969585418701
    5. ' ' → logprob: -4.366969585418701
    6. '+' → logprob: -4.616969585418701
    7. '0' → logprob: -5.616969585418701
    8. '500' → logprob: -5.616969585418701
    9. 'u' → logprob: -6.241969585418701
    10. '#' → logprob: -6.241969585418701

Token 415: ' pièces' (ID: 49165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18194429576396942
    2. '500' → logprob: -2.5569443702697754
    3. ' pièces' → logprob: -2.9319443702697754
    4. ' pieces' → logprob: -4.181944370269775
    5. '_' → logprob: -5.181944370269775
    6. 'pieces' → logprob: -5.681944370269775
    7. '```' → logprob: -6.056944370269775
    8. 'pi' → logprob: -6.681944370269775
    9. ' ' → logprob: -7.056944370269775
    10. ' pi' → logprob: -7.181944370269775

Token 416: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05693821236491203
    2. ' ' → logprob: -4.306938171386719
    3. '<|end|>' → logprob: -4.431938171386719
    4. ')' → logprob: -4.681938171386719
    5. 's' → logprob: -4.806938171386719
    6. '[' → logprob: -5.681938171386719
    7. ' _' → logprob: -5.931938171386719
    8. 'def' → logprob: -6.681938171386719
    9. ' )' → logprob: -7.431938171386719
    10. '
' → logprob: -7.806938171386719

Token 417: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09346894174814224
    2. '<|end|>' → logprob: -3.7184689044952393
    3. ')' → logprob: -4.093469142913818
    4. 's' → logprob: -4.218469142913818
    5. ' ' → logprob: -4.468469142913818
    6. ',' → logprob: -5.093469142913818
    7. '#' → logprob: -5.718469142913818
    8. '[' → logprob: -6.093469142913818
    9. '
' → logprob: -6.468469142913818
    10. ' _' → logprob: -6.468469142913818

Token 418: '-y' (ID: 18102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08452095836400986
    2. ')' → logprob: -3.4595210552215576
    3. '<|end|>' → logprob: -4.2095208168029785
    4. ',' → logprob: -4.7095208168029785
    5. '#' → logprob: -5.2095208168029785
    6. ':' → logprob: -5.4595208168029785
    7. '[' → logprob: -5.7095208168029785
    8. '
' → logprob: -6.2095208168029785
    9. '.' → logprob: -6.3345208168029785
    10. '-' → logprob: -6.5845208168029785

Token 419: 'en' (ID: 262)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005495445802807808
    2. ')' → logprob: -6.255495548248291
    3. '_' → logprob: -6.630495548248291
    4. ' -' → logprob: -7.505495548248291
    5. ',' → logprob: -8.005495071411133
    6. '-)' → logprob: -8.380495071411133
    7. '0' → logprob: -8.880495071411133
    8. 's' → logprob: -8.880495071411133
    9. '-s' → logprob: -9.005495071411133
    10. '#' → logprob: -9.505495071411133

Token 420: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6834821701049805
    2. '_' → logprob: -1.3084821701049805
    3. ')' → logprob: -2.9334821701049805
    4. '[' → logprob: -3.4334821701049805
    5. '
' → logprob: -3.8084821701049805
    6. ',' → logprob: -3.8084821701049805
    7. '#' → logprob: -3.9334821701049805
    8. '<|end|>' → logprob: -4.1834821701049805
    9. 'def' → logprob: -4.3084821701049805
    10. ' =' → logprob: -4.9334821701049805

Token 421: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5357154607772827
    2. '<|end|>' → logprob: -2.1607155799865723
    3. '[' → logprob: -2.2857155799865723
    4. '
' → logprob: -3.1607155799865723
    5. ')' → logprob: -3.5357155799865723
    6. ',' → logprob: -3.7857155799865723
    7. ':' → logprob: -3.9107155799865723
    8. '#' → logprob: -3.9107155799865723
    9. '```' → logprob: -4.410715579986572
    10. ' ' → logprob: -4.410715579986572

Token 422: '      ' (ID: 1699)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0079110860824585
    2. '_' → logprob: -1.1329110860824585
    3. '<|end|>' → logprob: -1.8829110860824585
    4. '
' → logprob: -3.632911205291748
    5. '#' → logprob: -3.757911205291748
    6. '[
' → logprob: -4.007911205291748
    7. ' ' → logprob: -4.132911205291748
    8. 'def' → logprob: -4.382911205291748
    9. '```' → logprob: -4.382911205291748
    10. ')' → logprob: -4.507911205291748

Token 423: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44861170649528503
    2. '_' → logprob: -1.9486117362976074
    3. '[' → logprob: -2.6986117362976074
    4. '#' → logprob: -3.3236117362976074
    5. ')' → logprob: -3.3236117362976074
    6. '<|end|>' → logprob: -3.5736117362976074
    7. '
' → logprob: -4.323611736297607
    8. ' =' → logprob: -5.198611736297607
    9. 'def' → logprob: -5.198611736297607
    10. ',' → logprob: -5.323611736297607

Token 424: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40474510192871094
    2. '        ' → logprob: -2.404745101928711
    3. ' #' → logprob: -2.404745101928711
    4. '<|end|>' → logprob: -2.779745101928711
    5. ' ' → logprob: -3.654745101928711
    6. '       ' → logprob: -3.654745101928711
    7. '         ' → logprob: -4.529745101928711
    8. ' ' → logprob: -4.654745101928711
    9. '     ' → logprob: -6.404745101928711
    10. '<|end|>' → logprob: -6.404745101928711

Token 425: ' sim' (ID: 1845)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.4362112283706665
    2. ' continue' → logprob: -1.5612112283706665
    3. 'continue' → logprob: -1.8112112283706665
    4. ' essa' → logprob: -2.436211109161377
    5. 'essa' → logprob: -2.686211109161377
    6. 'update' → logprob: -3.561211109161377
    7. ' tente' → logprob: -3.561211109161377
    8. ' explore' → logprob: -4.061211109161377
    9. ' mets' → logprob: -4.186211109161377
    10. 'cherche' → logprob: -4.561211109161377

Token 426: 'ule' (ID: 1601)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.9091953039169312
    2. 'ule' → logprob: -1.0341953039169312
    3. '#' → logprob: -2.1591954231262207
    4. 'u' → logprob: -3.5341954231262207
    5. 'm' → logprob: -4.034195423126221
    6. 'p' → logprob: -4.159195423126221
    7. 'pl' → logprob: -4.409195423126221
    8. 'e' → logprob: -4.534195423126221
    9. 'ulate' → logprob: -5.284195423126221
    10. 'plement' → logprob: -5.409195423126221

Token 427: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6304012537002563
    2. ' la' → logprob: -1.6304012537002563
    3. 'r' → logprob: -2.505401134490967
    4. ' le' → logprob: -2.880401134490967
    5. ' un' → logprob: -3.630401134490967
    6. ' les' → logprob: -3.880401134490967
    7. 's' → logprob: -4.255401134490967
    8. 'e' → logprob: -4.255401134490967
    9. ' ' → logprob: -4.380401134490967
    10. 't' → logprob: -5.005401134490967

Token 428: ' transaction' (ID: 12469)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.441358357667923
    2. 'trans' → logprob: -2.9413583278656006
    3. 'pai' → logprob: -2.9413583278656006
    4. ' remise' → logprob: -3.4413583278656006
    5. ' monnaie' → logprob: -3.4413583278656006
    6. ' ' → logprob: -4.06635856628418
    7. 'transaction' → logprob: -4.06635856628418
    8. 'rem' → logprob: -4.06635856628418
    9. 's' → logprob: -4.19135856628418
    10. ' rendu' → logprob: -4.19135856628418

Token 429: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14128804206848145
    2. '<|end|>' → logprob: -2.8912880420684814
    3. '
' → logprob: -4.266287803649902
    4. ',' → logprob: -4.391287803649902
    5. ' 
' → logprob: -5.016287803649902
    6. '_' → logprob: -5.141287803649902
    7. ')' → logprob: -5.141287803649902
    8. ' =' → logprob: -5.391287803649902
    9. ':' → logprob: -5.766287803649902
    10. '<|end|>' → logprob: -5.891287803649902

Token 430: ' pièces' (ID: 49165)
  Prédit: ' rendu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rendu' → logprob: -0.7284494042396545
    2. ' rendre' → logprob: -1.2284493446350098
    3. ' paiement' → logprob: -2.3534493446350098
    4. 'r' → logprob: -3.3534493446350098
    5. ' monnaie' → logprob: -3.4784493446350098
    6. 'payer' → logprob: -4.85344934463501
    7. 'pai' → logprob: -4.97844934463501
    8. '```' → logprob: -4.97844934463501
    9. ' l' → logprob: -5.10344934463501
    10. ' la' → logprob: -5.22844934463501

Token 431: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21516534686088562
    2. '_' → logprob: -2.715165376663208
    3. ' ' → logprob: -3.340165376663208
    4. ',' → logprob: -3.590165376663208
    5. ' s' → logprob: -3.590165376663208
    6. '<|end|>' → logprob: -4.090165138244629
    7. ')' → logprob: -5.715165138244629
    8. ' ,' → logprob: -5.965165138244629
    9. 'def' → logprob: -6.465165138244629
    10. '.' → logprob: -6.715165138244629

Token 432: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12579399347305298
    2. ' )' → logprob: -2.625793933868408
    3. ' ' → logprob: -4.500793933868408
    4. 's' → logprob: -4.625793933868408
    5. ',' → logprob: -4.875793933868408
    6. '_' → logprob: -5.375793933868408
    7. ' ,' → logprob: -6.250793933868408
    8. ' reç' → logprob: -6.250793933868408
    9. '500' → logprob: -6.375793933868408
    10. '),' → logprob: -6.625793933868408

Token 433: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.42792877554893494
    2. 'levant' → logprob: -1.9279288053512573
    3. 'lev' → logprob: -3.0529286861419678
    4. 'rem' → logprob: -3.9279286861419678
    5. 's' → logprob: -4.302928924560547
    6. 'dé' → logprob: -4.302928924560547
    7. 'sou' → logprob: -4.552928924560547
    8. 'ded' → logprob: -5.052928924560547
    9. 't' → logprob: -5.052928924560547
    10. 'ret' → logprob: -5.052928924560547

Token 434: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33186978101730347
    2. ')' → logprob: -2.8318698406219482
    3. ' ' → logprob: -2.8318698406219482
    4. ' )' → logprob: -3.4568698406219482
    5. ' _' → logprob: -3.5818698406219482
    6. ' les' → logprob: -3.7068698406219482
    7. 's' → logprob: -3.8318698406219482
    8. ' et' → logprob: -4.331869602203369
    9. ' ,' → logprob: -4.706869602203369
    10. ' des' → logprob: -4.831869602203369

Token 435: ' pièces' (ID: 49165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2452218532562256
    2. ' billets' → logprob: -2.3702218532562256
    3. 'pai' → logprob: -2.4952218532562256
    4. '_' → logprob: -2.6202218532562256
    5. ' pièces' → logprob: -2.6202218532562256
    6. ' pieces' → logprob: -2.9952218532562256
    7. 'esp' → logprob: -3.4952218532562256
    8. 'pay' → logprob: -3.7452218532562256
    9. ' )' → logprob: -3.8702218532562256
    10. ' pai' → logprob: -3.8702218532562256

Token 436: ' données' (ID: 30580)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5609971284866333
    2. '   ' → logprob: -2.0609970092773438
    3. '       ' → logprob: -2.1859970092773438
    4. ',' → logprob: -2.1859970092773438
    5. '500' → logprob: -2.3109970092773438
    6. ' rend' → logprob: -3.0609970092773438
    7. '_' → logprob: -3.3109970092773438
    8. ')' → logprob: -3.4359970092773438
    9. ' ,' → logprob: -3.5609970092773438
    10. ' utilisées' → logprob: -3.8109970092773438

Token 437: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5066169500350952
    2. ',' → logprob: -1.0066169500350952
    3. '),' → logprob: -4.506617069244385
    4. ' ,' → logprob: -5.006617069244385
    5. ' )' → logprob: -5.131617069244385
    6. ' ' → logprob: -6.006617069244385
    7. '   ' → logprob: -7.131617069244385
    8. '<|end|>' → logprob: -7.256617069244385
    9. ' et' → logprob: -7.381617069244385
    10. '+' → logprob: -7.381617069244385

Token 438: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.6255627274513245
    2. ' ajouter' → logprob: -1.0005626678466797
    3. '+' → logprob: -3.0005626678466797
    4. ' puis' → logprob: -3.8755626678466797
    5. ' raj' → logprob: -5.12556266784668
    6. ' +' → logprob: -5.25056266784668
    7. 'et' → logprob: -5.50056266784668
    8. ' et' → logprob: -5.75056266784668
    9. '#' → logprob: -6.75056266784668
    10. ' plus' → logprob: -6.87556266784668

Token 439: ' celles' (ID: 57573)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4413039982318878
    2. ' celles' → logprob: -1.3163039684295654
    3. 'les' → logprob: -2.5663039684295654
    4. ' ' → logprob: -4.9413042068481445
    5. 'celle' → logprob: -7.0663042068481445
    6. ' la' → logprob: -7.0663042068481445
    7. ' celle' → logprob: -7.1913042068481445
    8. '_' → logprob: -7.3163042068481445
    9. ' ' → logprob: -8.566304206848145
    10. '    ' → logprob: -8.816304206848145

Token 440: ' reç' (ID: 132883)
  Prédit: ' rend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rend' → logprob: -0.23828090727329254
    2. ' reç' → logprob: -2.488281011581421
    3. ' ' → logprob: -2.863281011581421
    4. 'r' → logprob: -3.863281011581421
    5. 'rend' → logprob: -4.238280773162842
    6. ' rendu' → logprob: -4.488280773162842
    7. ' r' → logprob: -4.988280773162842
    8. 're' → logprob: -5.113280773162842
    9. '   ' → logprob: -5.613280773162842
    10. ' ' → logprob: -6.738280773162842

Token 441: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.0015861510764807463
    2. 'u' → logprob: -6.501585960388184
    3. 'us' → logprob: -9.876585960388184
    4. 'es' → logprob: -11.126585960388184
    5. 'ue' → logprob: -11.876585960388184
    6. '#' → logprob: -12.751585960388184
    7. '=' → logprob: -13.626585960388184
    8. '``' → logprob: -14.001585960388184
    9. '%' → logprob: -14.376585960388184
    10. 'n' → logprob: -14.501585960388184

Token 442: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03855673968791962
    2. ',' → logprob: -3.9135568141937256
    3. ' )' → logprob: -4.9135565757751465
    4. 'es' → logprob: -5.4135565757751465
    5. 'e' → logprob: -6.2885565757751465
    6. ' ' → logprob: -6.6635565757751465
    7. '_' → logprob: -7.2885565757751465
    8. 's' → logprob: -7.2885565757751465
    9. '),' → logprob: -7.6635565757751465
    10. ',
' → logprob: -8.413557052612305

Token 443: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: '      ' (ID: 1699)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6744834184646606
    2. '_' → logprob: -1.6744834184646606
    3. ':' → logprob: -1.9244834184646606
    4. ',' → logprob: -2.174483299255371
    5. ')' → logprob: -2.299483299255371
    6. '
' → logprob: -2.674483299255371
    7. '#' → logprob: -3.174483299255371
    8. ' ' → logprob: -3.424483299255371
    9. '```' → logprob: -3.424483299255371
    10. ''' → logprob: -4.049483299255371

Token 445: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7893871665000916
    2. '#' → logprob: -1.6643872261047363
    3. ' ' → logprob: -1.6643872261047363
    4. ',' → logprob: -2.7893872261047363
    5. '_' → logprob: -3.6643872261047363
    6. '<|end|>' → logprob: -4.414387226104736
    7. '
' → logprob: -4.789387226104736
    8. '   ' → logprob: -4.914387226104736
    9. ' #' → logprob: -5.414387226104736
    10. 'def' → logprob: -5.789387226104736

Token 446: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0384952574968338
    2. '       ' → logprob: -4.538495063781738
    3. ' #' → logprob: -4.913495063781738
    4. 'On' → logprob: -4.913495063781738
    5. ' on' → logprob: -6.163495063781738
    6. ' ' → logprob: -6.288495063781738
    7. 'for' → logprob: -6.663495063781738
    8. 'contin' → logprob: -7.038495063781738
    9. '   ' → logprob: -7.288495063781738
    10. '        ' → logprob: -7.413495063781738

Token 447: ' met' (ID: 1421)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.46487531065940857
    2. ' continue' → logprob: -1.964875340461731
    3. ' met' → logprob: -2.9648752212524414
    4. 'met' → logprob: -3.0898752212524414
    5. ' stock' → logprob: -3.7148752212524414
    6. 'expl' → logprob: -3.9648752212524414
    7. 'en' → logprob: -3.9648752212524414
    8. ' en' → logprob: -4.839875221252441
    9. 'stock' → logprob: -4.839875221252441
    10. 'update' → logprob: -4.964875221252441

Token 448: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.005801755469292402
    2. 'à' → logprob: -5.380801677703857
    3. '-à' → logprob: -7.380801677703857
    4. '_' → logprob: -8.380802154541016
    5. ' ' → logprob: -9.880802154541016
    6. ''à' → logprob: -10.005802154541016
    7. 'À' → logprob: -10.255802154541016
    8. ' en' → logprob: -10.380802154541016
    9. '```' → logprob: -10.380802154541016
    10. '   ' → logprob: -10.880802154541016

Token 449: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0008891870966181159
    2. ' jour' → logprob: -7.125889301300049
    3. 'jou' → logprob: -10.00088882446289
    4. '```' → logprob: -11.37588882446289
    5. '_j' → logprob: -11.62588882446289
    6. ' ' → logprob: -12.00088882446289
    7. 'jours' → logprob: -12.12588882446289
    8. 'Jour' → logprob: -13.25088882446289
    9. 'journ' → logprob: -13.75088882446289
    10. 'j' → logprob: -13.87588882446289

Token 450: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3523936867713928
    2. 'dp' → logprob: -1.477393627166748
    3. ' l' → logprob: -3.477393627166748
    4. ' le' → logprob: -3.602393627166748
    5. ' la' → logprob: -5.227393627166748
    6. ' DP' → logprob: -6.977393627166748
    7. '_dp' → logprob: -6.977393627166748
    8. 'DP' → logprob: -7.352393627166748
    9. '(dp' → logprob: -7.477393627166748
    10. 'le' → logprob: -7.477393627166748

Token 451: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3156615197658539
    2. ' dp' → logprob: -1.5656615495681763
    3. 'DP' → logprob: -3.1906614303588867
    4. ' DP' → logprob: -4.440661430358887
    5. ' diction' → logprob: -5.690661430358887
    6. 'd' → logprob: -6.065661430358887
    7. 'dict' → logprob: -7.065661430358887
    8. ' d' → logprob: -7.565661430358887
    9. '_dp' → logprob: -7.940661430358887
    10. ' dict' → logprob: -8.315661430358887

Token 452: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0708016157150269
    2. ':' → logprob: -1.3208016157150269
    3. '[' → logprob: -1.6958016157150269
    4. ',' → logprob: -2.8208017349243164
    5. ' ' → logprob: -3.5708017349243164
    6. ')' → logprob: -3.6958017349243164
    7. 'def' → logprob: -4.070801734924316
    8. '[
' → logprob: -4.070801734924316
    9. '
' → logprob: -4.445801734924316
    10. ']' → logprob: -4.570801734924316

Token 453: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3741934299468994
    2. ' l' → logprob: -2.2491934299468994
    3. ' le' → logprob: -2.3741934299468994
    4. 'le' → logprob: -3.2491934299468994
    5. 'l' → logprob: -3.3741934299468994
    6. 'la' → logprob: -3.7491934299468994
    7. ' the' → logprob: -5.62419319152832
    8. ' les' → logprob: -5.87419319152832
    9. 'min' → logprob: -6.12419319152832
    10. 'the' → logprob: -6.62419319152832

Token 454: ' nombre' (ID: 9733)
  Prédit: ' nouvel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nouvel' → logprob: -0.44188764691352844
    2. ' nouveau' → logprob: -1.691887617111206
    3. ' minimum' → logprob: -2.691887617111206
    4. ' new' → logprob: -3.441887617111206
    5. ' meilleur' → logprob: -3.816887617111206
    6. 'nou' → logprob: -4.441887855529785
    7. ' coût' → logprob: -4.441887855529785
    8. 'minimum' → logprob: -5.441887855529785
    9. ' montant' → logprob: -5.566887855529785
    10. ' minimal' → logprob: -5.691887855529785

Token 455: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10916347056627274
    2. ' _' → logprob: -2.609163522720337
    3. '_max' → logprob: -4.609163284301758
    4. ' de' → logprob: -4.609163284301758
    5. 'max' → logprob: -6.484163284301758
    6. ' des' → logprob: -6.734163284301758
    7. '    ' → logprob: -6.984163284301758
    8. '_des' → logprob: -7.109163284301758
    9. ' d' → logprob: -7.234163284301758
    10. '_de' → logprob: -7.484163284301758

Token 456: ' pièces' (ID: 49165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5582191944122314
    2. '500' → logprob: -1.4332191944122314
    3. ' pièces' → logprob: -2.5582191944122314
    4. ' ' → logprob: -2.9332191944122314
    5. ' pieces' → logprob: -4.058218955993652
    6. 'pieces' → logprob: -4.183218955993652
    7. 'pi' → logprob: -4.558218955993652
    8. ' _' → logprob: -5.433218955993652
    9. ' pi' → logprob: -5.558218955993652
    10. '_pi' → logprob: -6.058218955993652

Token 457: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006292195059359074
    2. '_s' → logprob: -6.506292343139648
    3. ' _' → logprob: -6.756292343139648
    4. '500' → logprob: -7.131292343139648
    5. '<|end|>' → logprob: -7.631292343139648
    6. 's' → logprob: -8.131292343139648
    7. ' de' → logprob: -8.131292343139648
    8. '[' → logprob: -8.256292343139648
    9. ')' → logprob: -8.256292343139648
    10. ' ' → logprob: -8.506292343139648

Token 458: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08106454461812973
    2. '500' → logprob: -3.331064462661743
    3. ' ' → logprob: -3.956064462661743
    4. ' de' → logprob: -4.456064701080322
    5. ' _' → logprob: -4.956064701080322
    6. '_s' → logprob: -6.956064701080322
    7. '_de' → logprob: -7.081064701080322
    8. 's' → logprob: -7.706064701080322
    9. ' ' → logprob: -8.081064224243164
    10. 'de' → logprob: -8.331064224243164

Token 459: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.6124482750892639
    2. '-' → logprob: -0.8624482750892639
    3. '-h' → logprob: -4.112448215484619
    4. ' -' → logprob: -4.987448215484619
    5. '[-' → logprob: -5.737448215484619
    6. '500' → logprob: -6.987448215484619
    7. '-b' → logprob: -6.987448215484619
    8. '-p' → logprob: -7.112448215484619
    9. '-j' → logprob: -7.112448215484619
    10. '-e' → logprob: -7.362448215484619

Token 460: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4778905212879181
    2. '-en' → logprob: -0.9778904914855957
    3. '-' → logprob: -5.727890491485596
    4. '-
' → logprob: -8.227890968322754
    5. '-e' → logprob: -9.102890968322754
    6. 'enan' → logprob: -10.852890968322754
    7. '-y' → logprob: -11.102890968322754
    8. '-an' → logprob: -11.477890968322754
    9. 'e' → logprob: -11.727890968322754
    10. '-on' → logprob: -11.852890968322754

Token 461: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005755049642175436
    2. ')' → logprob: -6.6307549476623535
    3. '_
' → logprob: -7.0057549476623535
    4. '<|end|>' → logprob: -7.0057549476623535
    5. '-' → logprob: -7.3807549476623535
    6. '[' → logprob: -7.5057549476623535
    7. '
' → logprob: -8.130755424499512
    8. ',' → logprob: -8.255755424499512
    9. 's' → logprob: -8.380755424499512
    10. '_s' → logprob: -9.380755424499512

Token 462: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2899104356765747
    2. '<|end|>' → logprob: -2.289910316467285
    3. ':' → logprob: -3.164910316467285
    4. ')' → logprob: -3.164910316467285
    5. '[' → logprob: -3.789910316467285
    6. ',' → logprob: -4.289910316467285
    7. '
' → logprob: -4.914910316467285
    8. '=' → logprob: -5.539910316467285
    9. '<|end|>' → logprob: -5.664910316467285
    10. '#' → logprob: -6.289910316467285

Token 463: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19815094769001007
    2. 'la' → logprob: -1.8231509923934937
    3. 'le' → logprob: -5.073151111602783
    4. ' le' → logprob: -6.198151111602783
    5. 'd' → logprob: -6.323151111602783
    6. ' ' → logprob: -6.448151111602783
    7. 'dep' → logprob: -6.823151111602783
    8. 'l' → logprob: -7.073151111602783
    9. ' dép' → logprob: -7.073151111602783
    10. 'leur' → logprob: -7.573151111602783

Token 464: ' dép' (ID: 34015)
  Prédit: ' dép'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dép' → logprob: -0.3732593059539795
    2. 'd' → logprob: -1.2482593059539795
    3. 'dep' → logprob: -5.123259544372559
    4. 'dé' → logprob: -5.248259544372559
    5. ' dep' → logprob: -5.623259544372559
    6. ' dépenses' → logprob: -6.373259544372559
    7. ' ' → logprob: -6.873259544372559
    8. '_d' → logprob: -7.373259544372559
    9. ' dé' → logprob: -7.498259544372559
    10. ' desp' → logprob: -7.498259544372559

Token 465: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.001742531661875546
    2. 'èse' → logprob: -7.626742362976074
    3. 'enses' → logprob: -8.751742362976074
    4. '
' → logprob: -8.876742362976074
    5. '</' → logprob: -9.251742362976074
    6. '}' → logprob: -9.751742362976074
    7. 'e' → logprob: -9.876742362976074
    8. 'ence' → logprob: -10.064242362976074
    9. '_' → logprob: -10.314242362976074
    10. '   ' → logprob: -10.376742362976074

Token 466: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03401275351643562
    2. ')' → logprob: -4.534012794494629
    3. '[' → logprob: -4.909012794494629
    4. 's' → logprob: -5.034012794494629
    5. '<|end|>' → logprob: -5.284012794494629
    6. ' ' → logprob: -6.909012794494629
    7. '
' → logprob: -7.534012794494629
    8. '<|end|>' → logprob: -8.034012794494629
    9. ']' → logprob: -8.284012794494629
    10. '[
' → logprob: -8.784012794494629

Token 467: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.150237798690796
    2. ',' → logprob: -1.900237798690796
    3. '
' → logprob: -1.900237798690796
    4. ')' → logprob: -2.025237798690796
    5. '[' → logprob: -2.275237798690796
    6. ' ' → logprob: -3.025237798690796
    7. '_' → logprob: -3.775237798690796
    8. '<|end|>' → logprob: -4.275238037109375
    9. '#' → logprob: -4.650238037109375
    10. ']' → logprob: -4.650238037109375

Token 468: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2201764583587646
    2. ')' → logprob: -1.5951764583587646
    3. ' ' → logprob: -2.0951764583587646
    4. '
' → logprob: -2.3451764583587646
    5. ',' → logprob: -2.5951764583587646
    6. '[' → logprob: -2.9701764583587646
    7. '<|end|>' → logprob: -3.0951764583587646
    8. '#' → logprob: -3.4701764583587646
    9. 'def' → logprob: -4.095176696777344
    10. ' 
' → logprob: -4.345176696777344

Token 469: ' Optim' (ID: 38267)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7893733978271484
    2. 'd' → logprob: -2.1643733978271484
    3. '#' → logprob: -2.6643733978271484
    4. 'def' → logprob: -2.9143733978271484
    5. 'i' → logprob: -2.9143733978271484
    6. 'import' → logprob: -3.1643733978271484
    7. ',' → logprob: -3.1643733978271484
    8. '
' → logprob: -3.1643733978271484
    9. ' 
' → logprob: -3.2893733978271484
    10. '[' → logprob: -3.9143733978271484

Token 470: 'isations' (ID: 59651)
  Prédit: 'isation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.13491588830947876
    2. 'ation' → logprob: -2.884915828704834
    3. 'al' → logprob: -3.509915828704834
    4. '#' → logprob: -4.634915828704834
    5. 'ization' → logprob: -4.759915828704834
    6. 'is' → logprob: -5.259915828704834
    7. '```' → logprob: -5.634915828704834
    8. 'e' → logprob: -5.884915828704834
    9. 'alité' → logprob: -6.509915828704834
    10. 'um' → logprob: -6.634915828704834

Token 471: ' possibles' (ID: 97753)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' :
' (ID: 10039)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6091723442077637
    2. 'def' → logprob: -1.6091723442077637
    3. '_' → logprob: -1.7341723442077637
    4. '
' → logprob: -2.4841723442077637
    5. 'import' → logprob: -2.7341723442077637
    6. '```' → logprob: -2.8591723442077637
    7. '[
' → logprob: -3.3591723442077637
    8. '<|end|>' → logprob: -3.4841723442077637
    9. ':' → logprob: -3.6091723442077637
    10. ' =' → logprob: -3.7341723442077637

Token 473: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009639333933591843
    2. 'def' → logprob: -5.634639263153076
    3. 'from' → logprob: -6.384639263153076
    4. 'import' → logprob: -7.009639263153076
    5. '<|end|>' → logprob: -7.134639263153076
    6. ' #' → logprob: -7.384639263153076
    7. '```' → logprob: -7.384639263153076
    8. ' ' → logprob: -8.509639739990234
    9. '...' → logprob: -8.884639739990234
    10. '[' → logprob: -8.884639739990234

Token 474: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004441631957888603
    2. 'from' → logprob: -5.754441738128662
    3. 'import' → logprob: -7.629441738128662
    4. 'Pass' → logprob: -8.629441261291504
    5. ' #' → logprob: -8.879441261291504
    6. 'def' → logprob: -10.004441261291504
    7. 'Pour' → logprob: -10.004441261291504
    8. '
' → logprob: -10.129441261291504
    9. '-' → logprob: -10.254441261291504
    10. 'Util' → logprob: -10.504441261291504

Token 475: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1572369784116745
    2. '#' → logprob: -2.5322370529174805
    3. 'import' → logprob: -3.2822370529174805
    4. 'for' → logprob: -5.5322370529174805
    5. ' from' → logprob: -5.6572370529174805
    6. ' utiliser' → logprob: -6.1572370529174805
    7. '```' → logprob: -6.6572370529174805
    8. ' #' → logprob: -6.6572370529174805
    9. 'Pour' → logprob: -6.9072370529174805
    10. 'memo' → logprob: -7.0322370529174805

Token 476: ' "' (ID: 392)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.4000808000564575
    2. ' continue' → logprob: -2.275080680847168
    3. 's' → logprob: -2.400080680847168
    4. ' peut' → logprob: -2.775080680847168
    5. 'continue' → logprob: -3.400080680847168
    6. 'max' → logprob: -3.525080680847168
    7. 'n' → logprob: -3.525080680847168
    8. '_limit' → logprob: -3.650080680847168
    9. '_' → logprob: -3.775080680847168
    10. ' limite' → logprob: -3.775080680847168

Token 477: 'comp' (ID: 3697)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.8005777597427368
    2. ' limite' → logprob: -2.4255776405334473
    3. ' utilise' → logprob: -2.4255776405334473
    4. 'cache' → logprob: -2.5505776405334473
    5. ' mém' → logprob: -2.6755776405334473
    6. 'limit' → logprob: -2.6755776405334473
    7. 'memo' → logprob: -2.9255776405334473
    8. 'lim' → logprob: -3.0505776405334473
    9. ' stock' → logprob: -3.3005776405334473
    10. 'pr' → logprob: -3.5505776405334473

Token 478: 'resse' (ID: 15994)
  Prédit: 'lete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lete' → logprob: -0.3169418275356293
    2. 'let' → logprob: -2.191941738128662
    3. 'le' → logprob: -2.691941738128662
    4. 'l' → logprob: -3.191941738128662
    5. '#' → logprob: -4.316941738128662
    6. 'lite' → logprob: -5.441941738128662
    7. 'r' → logprob: -6.066941738128662
    8. 'lé' → logprob: -6.066941738128662
    9. 'plet' → logprob: -6.191941738128662
    10. 'ute' → logprob: -6.316941738128662

Token 479: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44771355390548706
    2. 'er' → logprob: -2.072713613510132
    3. 'e' → logprob: -2.697713613510132
    4. 'é' → logprob: -2.822713613510132
    5. 'r' → logprob: -3.697713613510132
    6. 'd' → logprob: -3.822713613510132
    7. 'ed' → logprob: -4.072713375091553
    8. '"' → logprob: -4.572713375091553
    9. '#' → logprob: -4.947713375091553
    10. ' ' → logprob: -5.947713375091553

Token 480: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04956754669547081
    2. 'd' → logprob: -3.674567461013794
    3. '_state' → logprob: -5.049567699432373
    4. '_states' → logprob: -5.299567699432373
    5. '<|end|>' → logprob: -6.299567699432373
    6. 'r' → logprob: -6.799567699432373
    7. '#' → logprob: -7.424567699432373
    8. ')' → logprob: -7.549567699432373
    9. ' d' → logprob: -7.549567699432373
    10. 's' → logprob: -7.674567699432373

Token 481: ''état' (ID: 116357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4070320129394531
    2. 'é' → logprob: -1.6570320129394531
    3. 'e' → logprob: -2.532032012939453
    4. 'ét' → logprob: -4.282032012939453
    5. 'és' → logprob: -4.782032012939453
    6. '_state' → logprob: -5.407032012939453
    7. ' _' → logprob: -5.907032012939453
    8. ''état' → logprob: -5.907032012939453
    9. 't' → logprob: -6.282032012939453
    10. '#' → logprob: -6.282032012939453

Token 482: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3901004195213318
    2. '[' → logprob: -1.3901004791259766
    3. ' ' → logprob: -4.265100479125977
    4. '<|end|>' → logprob: -4.265100479125977
    5. '[
' → logprob: -4.390100479125977
    6. ',' → logprob: -4.890100479125977
    7. ')' → logprob: -5.140100479125977
    8. '#' → logprob: -5.140100479125977
    9. ':' → logprob: -6.265100479125977
    10. 's' → logprob: -6.765100479125977

Token 483: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.4750571846961975
    2. 'pi' → logprob: -1.3500571250915527
    3. ' pi' → logprob: -2.6000571250915527
    4. 'pieces' → logprob: -4.100057125091553
    5. ' ' → logprob: -5.225057125091553
    6. ' pieces' → logprob: -5.350057125091553
    7. ' états' → logprob: -5.350057125091553
    8. 'ét' → logprob: -5.850057125091553
    9. '_' → logprob: -6.600057125091553
    10. 'p' → logprob: -6.850057125091553

Token 484: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2405700832605362
    2. '[' → logprob: -1.865570068359375
    3. ')' → logprob: -3.615570068359375
    4. ',' → logprob: -4.865570068359375
    5. 's' → logprob: -5.115570068359375
    6. '<|end|>' → logprob: -5.865570068359375
    7. ''' → logprob: -5.990570068359375
    8. '[
' → logprob: -6.115570068359375
    9. ']' → logprob: -6.240570068359375
    10. ':' → logprob: -6.365570068359375

Token 485: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.09293484687805176
    2. 'une' → logprob: -3.4679348468780518
    3. 'tuple' → logprob: -3.8429348468780518
    4. 'tu' → logprob: -4.217934608459473
    5. ' un' → logprob: -4.592934608459473
    6. 'int' → logprob: -5.717934608459473
    7. 'ent' → logprob: -6.467934608459473
    8. ' ' → logprob: -7.092934608459473
    9. 'nombre' → logprob: -7.342934608459473
    10. 'cod' → logprob: -7.967934608459473

Token 486: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.26056137681007385
    2. 'ent' → logprob: -1.5105613470077515
    3. 'tu' → logprob: -5.385561466217041
    4. 'int' → logprob: -6.385561466217041
    5. 'unique' → logprob: -7.010561466217041
    6. 't' → logprob: -7.760561466217041
    7. ' tuple' → logprob: -8.885560989379883
    8. 'code' → logprob: -9.260560989379883
    9. 'nombre' → logprob: -9.260560989379883
    10. 'se' → logprob: -9.260560989379883

Token 487: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8701991438865662
    2. ',' → logprob: -1.245199203491211
    3. '(' → logprob: -1.745199203491211
    4. ')' → logprob: -3.495199203491211
    5. ' (' → logprob: -3.495199203491211
    6. ':' → logprob: -3.745199203491211
    7. '<|end|>' → logprob: -4.495199203491211
    8. '(
' → logprob: -4.620199203491211
    9. 's' → logprob: -6.245199203491211
    10. '#' → logprob: -6.370199203491211

Token 488: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3196145296096802
    2. '(' → logprob: -1.4446145296096802
    3. '#' → logprob: -1.5696145296096802
    4. ' (' → logprob: -2.1946144104003906
    5. ',' → logprob: -3.5696144104003906
    6. '(
' → logprob: -3.6946144104003906
    7. ' ' → logprob: -4.069614410400391
    8. ' #' → logprob: -4.319614410400391
    9. 'state' → logprob: -4.319614410400391
    10. '()' → logprob: -5.069614410400391

Token 489: ' év' (ID: 23692)
  Prédit: '_encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_encode' → logprob: -0.702052891254425
    2. '_' → logprob: -1.4520528316497803
    3. 'encode' → logprob: -1.9520528316497803
    4. 's' → logprob: -3.7020528316497803
    5. 'serialize' → logprob: -3.7020528316497803
    6. '#' → logprob: -4.452053070068359
    7. 'continue' → logprob: -4.577053070068359
    8. ' encode' → logprob: -5.202053070068359
    9. 'compress' → logprob: -5.202053070068359
    10. ')' → logprob: -5.452053070068359

Token 490: 'ite' (ID: 651)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1821221560239792
    2. 'al' → logprob: -3.557122230529785
    3. 'alue' → logprob: -3.557122230529785
    4. 'nt' → logprob: -4.057122230529785
    5. 'f' → logprob: -4.432122230529785
    6. 'r' → logprob: -4.557122230529785
    7. 'code' → logprob: -4.682122230529785
    8. 'num' → logprob: -5.307122230529785
    9. 'ite' → logprob: -5.307122230529785
    10. 'conde' → logprob: -5.557122230529785

Token 491: ' doubl' (ID: 127992)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1628471314907074
    2. 'd' → logprob: -3.5378470420837402
    3. 'de' → logprob: -3.5378470420837402
    4. ' de' → logprob: -3.6628470420837402
    5. 's' → logprob: -4.28784704208374
    6. ' d' → logprob: -4.41284704208374
    7. ' _' → logprob: -5.28784704208374
    8. 'les' → logprob: -5.41284704208374
    9. '_de' → logprob: -6.03784704208374
    10. '_d' → logprob: -6.03784704208374

Token 492: 'ons' (ID: 1808)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.954581081867218
    2. 'e' → logprob: -1.3295810222625732
    3. 'on' → logprob: -2.2045810222625732
    4. 'ons' → logprob: -2.3295810222625732
    5. 'es' → logprob: -2.5795810222625732
    6. 'és' → logprob: -3.0795810222625732
    7. 'onné' → logprob: -5.954581260681152
    8. 'ections' → logprob: -5.954581260681152
    9. 'ier' → logprob: -6.079581260681152
    10. 'ée' → logprob: -6.329581260681152

Token 493: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2109261751174927
    2. '_' → logprob: -1.3359261751174927
    3. ':' → logprob: -1.9609261751174927
    4. ')' → logprob: -2.460926055908203
    5. ',' → logprob: -2.835926055908203
    6. ' ' → logprob: -3.585926055908203
    7. '
' → logprob: -3.960926055908203
    8. '```' → logprob: -4.085926055908203
    9. '[
' → logprob: -4.085926055908203
    10. 'def' → logprob: -4.210926055908203

Token 494: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47681108117103577
    2. ')' → logprob: -2.226811170578003
    3. ',' → logprob: -2.351811170578003
    4. '#' → logprob: -3.351811170578003
    5. ' ' → logprob: -3.476811170578003
    6. ':' → logprob: -3.726811170578003
    7. '_' → logprob: -4.101810932159424
    8. '
' → logprob: -4.101810932159424
    9. 'def' → logprob: -4.351810932159424
    10. ']' → logprob: -4.476810932159424

Token 495: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9814438819885254
    2. ':' → logprob: -1.8564438819885254
    3. 'def' → logprob: -2.3564438819885254
    4. ')' → logprob: -2.4814438819885254
    5. ',' → logprob: -2.8564438819885254
    6. '
' → logprob: -2.9814438819885254
    7. '#' → logprob: -3.1064438819885254
    8. 'import' → logprob: -3.3564438819885254
    9. '[' → logprob: -3.6064438819885254
    10. ' 
' → logprob: -4.481443881988525

Token 496: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3877872824668884
    2. '#' → logprob: -1.3877873420715332
    3. 'def' → logprob: -3.387787342071533
    4. 'import' → logprob: -3.637787342071533
    5. '[
' → logprob: -6.012787342071533
    6. 'for' → logprob: -6.262787342071533
    7. '(
' → logprob: -7.137787342071533
    8. 'max' → logprob: -7.512787342071533
    9. '
' → logprob: -7.637787342071533
    10. '(' → logprob: -7.762787342071533

Token 497: ' réduit' (ID: 120775)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7005441188812256
    2. ' continue' → logprob: -1.0755441188812256
    3. 'update' → logprob: -3.7005441188812256
    4. ' utilise' → logprob: -3.8255441188812256
    5. 'util' → logprob: -4.200544357299805
    6. ' stock' → logprob: -4.325544357299805
    7. 'contin' → logprob: -4.575544357299805
    8. 'clear' → logprob: -4.825544357299805
    9. 'serialize' → logprob: -5.075544357299805
    10. 'from' → logprob: -5.200544357299805

Token 498: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9159517288208008
    2. ' l' → logprob: -1.4159517288208008
    3. ' ' → logprob: -2.665951728820801
    4. '_le' → logprob: -2.665951728820801
    5. '_l' → logprob: -3.290951728820801
    6. ' les' → logprob: -3.415951728820801
    7. 'l' → logprob: -3.790951728820801
    8. ' _' → logprob: -3.915951728820801
    9. 'le' → logprob: -4.165951728820801
    10. ' la' → logprob: -4.290951728820801

Token 499: ' recherche' (ID: 24975)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.818548321723938
    2. ' nombre' → logprob: -0.943548321723938
    3. 'es' → logprob: -2.9435482025146484
    4. 'ét' → logprob: -3.8185482025146484
    5. 'tail' → logprob: -4.193548202514648
    6. 'e' → logprob: -4.193548202514648
    7. 'state' → logprob: -4.318548202514648
    8. '#' → logprob: -5.318548202514648
    9. ' #' → logprob: -5.443548202514648
    10. ' espace' → logprob: -5.693548202514648

Token 500: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.716616153717041
    2. ' ' → logprob: -1.091616153717041
    3. '<|end|>' → logprob: -2.091616153717041
    4. ')' → logprob: -3.591616153717041
    5. '[' → logprob: -4.591616153717041
    6. '<|end|>' → logprob: -5.591616153717041
    7. ',' → logprob: -6.466616153717041
    8. '[
' → logprob: -6.716616153717041
    9. ' 
' → logprob: -6.716616153717041
    10. 's' → logprob: -6.841616153717041

Token 501: ' mont' (ID: 11554)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.7113361954689026
    2. 'esp' → logprob: -2.086336135864258
    3. 'mont' → logprob: -2.336336135864258
    4. ' ' → logprob: -3.586336135864258
    5. ' mont' → logprob: -3.711336135864258
    6. 'ét' → logprob: -3.711336135864258
    7. ' espaces' → logprob: -3.711336135864258
    8. ' États' → logprob: -4.211336135864258
    9. '_' → logprob: -4.461336135864258
    10. 'poss' → logprob: -4.461336135864258

Token 502: 'ants' (ID: 2027)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.088165044784546
    2. '#' → logprob: -2.213165044784546
    3. 's' → logprob: -2.338165044784546
    4. 'um' → logprob: -2.338165044784546
    5. '_' → logprob: -2.588165044784546
    6. 'def' → logprob: -2.588165044784546
    7. 'u' → logprob: -2.713165044784546
    8. 'és' → logprob: -2.963165044784546
    9. ',' → logprob: -3.588165044784546
    10. 'é' → logprob: -3.713165044784546

Token 503: ' donn' (ID: 20414)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15462522208690643
    2. '<|end|>' → logprob: -2.529625177383423
    3. ')' → logprob: -4.029625415802002
    4. '[' → logprob: -4.279625415802002
    5. ':' → logprob: -4.779625415802002
    6. ' ' → logprob: -5.279625415802002
    7. ',' → logprob: -5.404625415802002
    8. '=' → logprob: -5.779625415802002
    9. '
' → logprob: -5.779625415802002
    10. '<|end|>' → logprob: -6.404625415802002

Token 504: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4852758049964905
    2. 'é' → logprob: -1.7352757453918457
    3. 'u' → logprob: -2.9852757453918457
    4. ')' → logprob: -3.6102757453918457
    5. ''' → logprob: -3.6102757453918457
    6. ' =' → logprob: -3.8602757453918457
    7. 'és' → logprob: -4.485275745391846
    8. 's' → logprob: -4.610275745391846
    9. '_' → logprob: -4.610275745391846
    10. '<|end|>' → logprob: -4.860275745391846

Token 505: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3847978115081787
    2. '[' → logprob: -1.3847978115081787
    3. ')' → logprob: -2.2597978115081787
    4. '_' → logprob: -2.2597978115081787
    5. ':' → logprob: -2.5097978115081787
    6. ' ' → logprob: -3.2597978115081787
    7. '[
' → logprob: -3.3847978115081787
    8. '<|end|>' → logprob: -3.6347978115081787
    9. ']' → logprob: -3.7597978115081787
    10. '
' → logprob: -3.7597978115081787

Token 506: ' utilisant' (ID: 92474)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.6896337866783142
    2. ' limit' → logprob: -1.814633846282959
    3. 'pr' → logprob: -2.689633846282959
    4. ' montant' → logprob: -3.564633846282959
    5. 'lim' → logprob: -3.814633846282959
    6. 'expl' → logprob: -3.814633846282959
    7. '```' → logprob: -4.064633846282959
    8. 'é' → logprob: -4.314633846282959
    9. 'enumer' → logprob: -4.314633846282959
    10. 'b' → logprob: -4.564633846282959

Token 507: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7190596461296082
    2. 'une' → logprob: -1.844059705734253
    3. 'un' → logprob: -2.344059705734253
    4. ' une' → logprob: -2.344059705734253
    5. 'des' → logprob: -2.469059705734253
    6. ' un' → logprob: -3.094059705734253
    7. ' la' → logprob: -4.719059467315674
    8. ' l' → logprob: -4.969059467315674
    9. 'la' → logprob: -5.094059467315674
    10. 'l' → logprob: -5.219059467315674

Token 508: ' nature' (ID: 7867)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.135619640350342
    2. 'c' → logprob: -2.260619640350342
    3. 'bounded' → logprob: -2.510619640350342
    4. ' range' → logprob: -3.260619640350342
    5. '```' → logprob: -3.385619640350342
    6. 'cache' → logprob: -3.385619640350342
    7. 'max' → logprob: -3.510619640350342
    8. ' somme' → logprob: -3.510619640350342
    9. 'memo' → logprob: -3.760619640350342
    10. 'change' → logprob: -4.010619640350342

Token 509: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3367157578468323
    2. '<|end|>' → logprob: -1.5867156982421875
    3. ' des' → logprob: -3.8367156982421875
    4. ' de' → logprob: -3.9617156982421875
    5. ')' → logprob: -5.2117156982421875
    6. ' d' → logprob: -5.4617156982421875
    7. ' ' → logprob: -5.7117156982421875
    8. 'de' → logprob: -5.8367156982421875
    9. '<|end|>' → logprob: -5.9617156982421875
    10. ' du' → logprob: -5.9617156982421875

Token 510: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.8167535066604614
    2. 'pi' → logprob: -0.9417535066604614
    3. ' pi' → logprob: -3.191753387451172
    4. 'bil' → logprob: -3.691753387451172
    5. ' billets' → logprob: -4.066753387451172
    6. '```' → logprob: -4.066753387451172
    7. ' ' → logprob: -4.816753387451172
    8. ' monna' → logprob: -5.191753387451172
    9. 'pai' → logprob: -5.441753387451172
    10. ' pieces' → logprob: -5.691753387451172

Token 511: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5663042664527893
    2. '[' → logprob: -1.8163042068481445
    3. '<|end|>' → logprob: -2.3163042068481445
    4. ':' → logprob: -2.8163042068481445
    5. ' ' → logprob: -3.6913042068481445
    6. ',' → logprob: -3.9413042068481445
    7. ')' → logprob: -4.0663042068481445
    8. '
' → logprob: -4.5663042068481445
    9. ' =' → logprob: -5.1913042068481445
    10. '[
' → logprob: -5.3163042068481445

Token 512: ' billets' (ID: 146301)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -1.5155048370361328
    2. '#' → logprob: -2.265504837036133
    3. ' leur' → logprob: -2.265504837036133
    4. ' la' → logprob: -2.265504837036133
    5. 'leurs' → logprob: -2.390504837036133
    6. 'leur' → logprob: -2.515504837036133
    7. 'la' → logprob: -2.765504837036133
    8. ' des' → logprob: -2.890504837036133
    9. ' l' → logprob: -2.890504837036133
    10. 'l' → logprob: -3.015504837036133

Token 513: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5545356273651123
    2. '_' → logprob: -1.5545356273651123
    3. ' ' → logprob: -2.1795356273651123
    4. ':' → logprob: -2.3045356273651123
    5. '
' → logprob: -2.4295356273651123
    6. 'def' → logprob: -2.6795356273651123
    7. ',' → logprob: -3.1795356273651123
    8. ' =' → logprob: -3.3045356273651123
    9. '=' → logprob: -3.5545356273651123
    10. '[
' → logprob: -3.8045356273651123

Token 514: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0560009479522705
    2. '_' → logprob: -1.8060009479522705
    3. ')' → logprob: -2.1810009479522705
    4. ',' → logprob: -2.3060009479522705
    5. ' ' → logprob: -2.6810009479522705
    6. '[' → logprob: -2.8060009479522705
    7. 'def' → logprob: -3.3060009479522705
    8. ' 
' → logprob: -4.056000709533691
    9. '
' → logprob: -4.056000709533691
    10. '#' → logprob: -4.181000709533691

Token 515: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.997759997844696
    2. '
' → logprob: -1.8727600574493408
    3. '[' → logprob: -2.122760057449341
    4. ')' → logprob: -2.247760057449341
    5. ',' → logprob: -2.622760057449341
    6. '_' → logprob: -2.997760057449341
    7. '<|end|>' → logprob: -3.497760057449341
    8. ' ' → logprob: -3.872760057449341
    9. 'def' → logprob: -4.247759819030762
    10. '#' → logprob: -4.247759819030762

Token 516: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' limite' (ID: 48939)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.3137598037719727
    2. 'optim' → logprob: -2.0637598037719727
    3. '#' → logprob: -3.1887598037719727
    4. 'max' → logprob: -3.1887598037719727
    5. 'continue' → logprob: -3.1887598037719727
    6. 'lim' → logprob: -3.4387598037719727
    7. 'simpl' → logprob: -3.4387598037719727
    8. 'util' → logprob: -3.5637598037719727
    9. ' limite' → logprob: -3.5637598037719727
    10. 'expl' → logprob: -3.6887598037719727

Token 518: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' taille' (ID: 41644)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.07783660292625427
    2. 'nombre' → logprob: -2.827836513519287
    3. ' nombres' → logprob: -5.077836513519287
    4. ' max' → logprob: -6.577836513519287
    5. ' total' → logprob: -6.577836513519287
    6. ' search' → logprob: -6.952836513519287
    7. ' quantité' → logprob: -7.327836513519287
    8. ' taille' → logprob: -7.452836513519287
    9. ' #' → logprob: -7.452836513519287
    10. ' number' → logprob: -7.702836513519287

Token 520: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19482766091823578
    2. ')' → logprob: -2.0698275566101074
    3. '<|end|>' → logprob: -3.9448275566101074
    4. '[' → logprob: -4.944827556610107
    5. ' ' → logprob: -5.444827556610107
    6. ',' → logprob: -5.569827556610107
    7. '#' → logprob: -6.069827556610107
    8. '=' → logprob: -6.444827556610107
    9. ' _' → logprob: -6.694827556610107
    10. ' of' → logprob: -6.694827556610107

Token 521: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.07087893784046173
    2. ' states' → logprob: -4.320878982543945
    3. 'dp' → logprob: -4.820878982543945
    4. 'states' → logprob: -4.820878982543945
    5. ' estados' → logprob: -4.945878982543945
    6. 'state' → logprob: -5.570878982543945
    7. '_' → logprob: -6.195878982543945
    8. ' États' → logprob: -6.195878982543945
    9. '_states' → logprob: -6.195878982543945
    10. 's' → logprob: -6.320878982543945

Token 522: ' gard' (ID: 18283)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3628544807434082
    2. '[' → logprob: -1.4878544807434082
    3. ' ' → logprob: -1.7378544807434082
    4. ',' → logprob: -2.987854480743408
    5. ''' → logprob: -3.112854480743408
    6. '```' → logprob: -3.362854480743408
    7. ':' → logprob: -3.487854480743408
    8. '
' → logprob: -3.487854480743408
    9. '[
' → logprob: -3.737854480743408
    10. ')' → logprob: -3.862854480743408

Token 523: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.021181216463446617
    2. 'és' → logprob: -4.146181106567383
    3. 'e' → logprob: -6.021181106567383
    4. 'é' → logprob: -6.271181106567383
    5. 'ées' → logprob: -7.896181106567383
    6. 'ee' → logprob: -8.021181106567383
    7. '#' → logprob: -10.646181106567383
    8. '```' → logprob: -10.771181106567383
    9. 'er' → logprob: -10.896181106567383
    10. 'rée' → logprob: -11.146181106567383

Token 524: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7695720195770264
    2. '_' → logprob: -1.3945720195770264
    3. ' ' → logprob: -3.2695720195770264
    4. ',' → logprob: -3.2695720195770264
    5. 'def' → logprob: -3.5195720195770264
    6. ')' → logprob: -3.6445720195770264
    7. ':' → logprob: -3.6445720195770264
    8. '<|end|>' → logprob: -3.7695720195770264
    9. '[
' → logprob: -3.8945720195770264
    10. '#' → logprob: -4.2695722579956055

Token 525: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.4599113166332245
    2. 'év' → logprob: -1.0849113464355469
    3. 'ev' → logprob: -4.459911346435547
    4. '_' → logprob: -5.459911346435547
    5. ' ' → logprob: -5.584911346435547
    6. ' chaque' → logprob: -5.959911346435547
    7. 'é' → logprob: -6.459911346435547
    8. ' ne' → logprob: -7.084911346435547
    9. 'une' → logprob: -7.084911346435547
    10. '’éviter' → logprob: -7.334911346435547

Token 526: ' explosion' (ID: 53199)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7237244844436646
    2. 'une' → logprob: -1.4737244844436646
    3. 'd' → logprob: -2.348724365234375
    4. ' l' → logprob: -3.223724365234375
    5. ' une' → logprob: -3.223724365234375
    6. 'expl' → logprob: -3.223724365234375
    7. 'la' → logprob: -3.723724365234375
    8. 'overflow' → logprob: -4.848724365234375
    9. ' d' → logprob: -5.098724365234375
    10. ' overflow' → logprob: -5.473724365234375

Token 527: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: 'import' (ID: 561)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4685455560684204
    2. '[' → logprob: -1.4685455560684204
    3. '#' → logprob: -2.593545436859131
    4. '
' → logprob: -2.593545436859131
    5. 'def' → logprob: -2.593545436859131
    6. ')' → logprob: -2.718545436859131
    7. '```' → logprob: -2.843545436859131
    8. ',' → logprob: -2.843545436859131
    9. 'import' → logprob: -3.093545436859131
    10. ' ' → logprob: -4.093545436859131

Token 529: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02523970790207386
    2. 'collections' → logprob: -3.7752397060394287
    3. ' sys' → logprob: -6.775239944458008
    4. 'heap' → logprob: -7.525239944458008
    5. 'math' → logprob: -8.275239944458008
    6. 'copy' → logprob: -10.025239944458008
    7. ' collections' → logprob: -11.525239944458008
    8. ' itertools' → logprob: -13.775239944458008
    9. 'bis' → logprob: -14.650239944458008
    10. ' heap' → logprob: -15.025239944458008

Token 530: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2758887708187103
    2. 'import' → logprob: -1.5258888006210327
    3. 'input' → logprob: -4.400888919830322
    4. 'sys' → logprob: -5.400888919830322
    5. '

' → logprob: -5.525888919830322
    6. 'from' → logprob: -6.775888919830322
    7. ',' → logprob: -6.900888919830322
    8. 'stdin' → logprob: -8.525888442993164
    9. ' import' → logprob: -9.650888442993164
    10. '
' → logprob: -9.900888442993164

Token 531: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2989620864391327
    2. '
' → logprob: -1.673962116241455
    3. 'from' → logprob: -2.798962116241455
    4. 'input' → logprob: -5.423962116241455
    5. 'sys' → logprob: -5.923962116241455
    6. '```' → logprob: -6.673962116241455
    7. 'def' → logprob: -7.048962116241455
    8. '

' → logprob: -7.923962116241455
    9. ' 
' → logprob: -9.423961639404297
    10. ' import' → logprob: -9.673961639404297

Token 532: ' collections' (ID: 22690)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4151744842529297
    2. 'heap' → logprob: -1.6651744842529297
    3. 'collections' → logprob: -2.1651744842529297
    4. 'thread' → logprob: -3.4151744842529297
    5. 'bis' → logprob: -6.16517448425293
    6. 'copy' → logprob: -7.91517448425293
    7. 'it' → logprob: -8.04017448425293
    8. ' threading' → logprob: -9.16517448425293
    9. ' itertools' → logprob: -10.29017448425293
    10. 'typing' → logprob: -10.79017448425293

Token 533: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42727240920066833
    2. 'import' → logprob: -1.1772724390029907
    3. '

' → logprob: -4.177272319793701
    4. ',' → logprob: -4.302272319793701
    5. 'from' → logprob: -5.552272319793701
    6. ',
' → logprob: -6.052272319793701
    7. '```' → logprob: -6.552272319793701
    8. 'def' → logprob: -7.052272319793701
    9. '<|end|>' → logprob: -7.302272319793701
    10. ' 
' → logprob: -7.677272319793701

Token 534: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09667807817459106
    2. 'input' → logprob: -3.3466780185699463
    3. 'sys' → logprob: -3.7216780185699463
    4. 'MAX' → logprob: -4.721678256988525
    5. 'import' → logprob: -4.846678256988525
    6. 'from' → logprob: -4.971678256988525
    7. '#' → logprob: -5.221678256988525
    8. 'INF' → logprob: -6.596678256988525
    9. 'max' → logprob: -6.721678256988525
    10. 'class' → logprob: -7.721678256988525

Token 535: ' Pi' (ID: 26867)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1755206286907196
    2. 'MAX' → logprob: -2.050520658493042
    3. 'sys' → logprob: -4.550520420074463
    4. 'input' → logprob: -5.175520420074463
    5. 'max' → logprob: -5.300520420074463
    6. 'class' → logprob: -6.050520420074463
    7. 'import' → logprob: -6.425520420074463
    8. '#' → logprob: -6.425520420074463
    9. 'from' → logprob: -6.425520420074463
    10. 'INF' → logprob: -6.550520420074463

Token 536: 'èces' (ID: 100354)
  Prédit: 'èces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èces' → logprob: -0.08030696213245392
    2. 'ec' → logprob: -2.9553070068359375
    3. 'e' → logprob: -4.9553070068359375
    4. 'ces' → logprob: -5.3303070068359375
    5. 'èce' → logprob: -5.7053070068359375
    6. '#' → logprob: -6.2053070068359375
    7. 'è' → logprob: -6.3303070068359375
    8. '_' → logprob: -6.8303070068359375
    9. 'ecs' → logprob: -6.9553070068359375
    10. 'é' → logprob: -7.4553070068359375

Token 537: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.650459349155426
    2. '_' → logprob: -1.1504592895507812
    3. '=' → logprob: -2.9004592895507812
    4. '500' → logprob: -2.9004592895507812
    5. '1' → logprob: -3.6504592895507812
    6. 'den' → logprob: -4.525459289550781
    7. 'de' → logprob: -5.650459289550781
    8. '_values' → logprob: -6.900459289550781
    9. '_counts' → logprob: -7.025459289550781
    10. ':' → logprob: -7.275459289550781

Token 538: ' circulation' (ID: 41920)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yen' → logprob: -1.0926207304000854
    2. '[' → logprob: -1.4676207304000854
    3. 'face' → logprob: -2.467620849609375
    4. 'fac' → logprob: -2.967620849609375
    5. '#' → logprob: -3.217620849609375
    6. '{' → logprob: -3.467620849609375
    7. 'nom' → logprob: -3.467620849609375
    8. 'j' → logprob: -3.592620849609375
    9. '1' → logprob: -3.967620849609375
    10. '500' → logprob: -4.217620849609375

Token 539: ' (' (ID: 350)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.729441225528717
    2. 'den' → logprob: -1.6044411659240723
    3. 'pieces' → logprob: -2.4794411659240723
    4. 'PI' → logprob: -2.7294411659240723
    5. 'DEN' → logprob: -2.9794411659240723
    6. 'coin' → logprob: -3.6044411659240723
    7. ' =' → logprob: -3.6044411659240723
    8. '=' → logprob: -4.854441165924072
    9. 'CO' → logprob: -4.979441165924072
    10. 'piece' → logprob: -5.479441165924072

Token 540: 'aut' (ID: 1828)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4833914041519165
    2. 'coins' → logprob: -1.4833914041519165
    3. '1' → logprob: -3.483391284942627
    4. 'den' → logprob: -3.733391284942627
    5. 'pieces' → logprob: -3.858391284942627
    6. 'face' → logprob: -4.108391284942627
    7. 'values' → logprob: -4.358391284942627
    8. 'coin' → logprob: -4.483391284942627
    9. '500' → logprob: -5.108391284942627
    10. '(' → logprob: -5.358391284942627

Token 541: 'res' (ID: 430)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.540448009967804
    2. 'oris' → logprob: -1.2904479503631592
    3. 'res' → logprob: -2.290447950363159
    4. 'our' → logprob: -4.415448188781738
    5. 're' → logprob: -4.790448188781738
    6. 'ant' → logprob: -5.040448188781738
    7. '```' → logprob: -6.165448188781738
    8. '#' → logprob: -6.540448188781738
    9. '1' → logprob: -6.665448188781738
    10. '   ' → logprob: -6.790448188781738

Token 542: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.1862255185842514
    2. ' que' → logprob: -1.8112255334854126
    3. 'qu' → logprob: -6.311225414276123
    4. '```' → logprob: -6.686225414276123
    5. ':' → logprob: -7.561225414276123
    6. '   ' → logprob: -7.686225414276123
    7. ')' → logprob: -7.686225414276123
    8. '=' → logprob: -7.936225414276123
    9. 'than' → logprob: -8.311225891113281
    10. 'ques' → logprob: -8.811225891113281

Token 543: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.013727491721510887
    2. 'les' → logprob: -4.63872766494751
    3. 'le' → logprob: -6.63872766494751
    4. '100' → logprob: -6.76372766494751
    5. 'la' → logprob: -7.76372766494751
    6. '#' → logprob: -8.263727188110352
    7. ' les' → logprob: -9.013727188110352
    8. '```' → logprob: -9.013727188110352
    9. ' ' → logprob: -9.263727188110352
    10. 'l' → logprob: -9.263727188110352

Token 544: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0022815766278654337
    2. '100' → logprob: -6.877281665802002
    3. '1' → logprob: -7.752281665802002
    4. '
' → logprob: -8.752281188964844
    5. '```' → logprob: -8.877281188964844
    6. '#' → logprob: -9.002281188964844
    7. 'coins' → logprob: -10.377281188964844
    8. '5' → logprob: -10.502281188964844
    9. '[' → logprob: -10.502281188964844
    10. '{' → logprob: -10.502281188964844

Token 545: ',' (ID: 11)
  Prédit: '-y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.32037249207496643
    2. ')' → logprob: -1.445372462272644
    3. ',' → logprob: -4.320372581481934
    4. 'yen' → logprob: -4.570372581481934
    5. '):' → logprob: -5.570372581481934
    6. '円' → logprob: -5.945372581481934
    7. '-)' → logprob: -6.195372581481934
    8. '-' → logprob: -6.320372581481934
    9. '¥' → logprob: -7.070372581481934
    10. '),' → logprob: -7.195372581481934

Token 546: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5308282375335693
    2. '100' → logprob: -1.6558282375335693
    3. ' ' → logprob: -2.1558282375335693
    4. 'yen' → logprob: -2.2808282375335693
    5. ' yen' → logprob: -6.905828475952148
    6. ')' → logprob: -7.530828475952148
    7. 'y' → logprob: -8.280828475952148
    8. '#' → logprob: -8.530828475952148
    9. '50' → logprob: -9.030828475952148
    10. ')
' → logprob: -9.280828475952148

Token 547: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.38611435890197754
    2. 'yen' → logprob: -1.2611143589019775
    3. '1' → logprob: -3.3861143589019775
    4. ' ' → logprob: -7.261114120483398
    5. '#' → logprob: -7.261114120483398
    6. '50' → logprob: -7.636114120483398
    7. ')' → logprob: -8.636114120483398
    8. ' yen' → logprob: -8.886114120483398
    9. '10' → logprob: -9.011114120483398
    10. ')
' → logprob: -9.136114120483398

Token 548: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006775169633328915
    2. ' ,' → logprob: -6.131775379180908
    3. ')' → logprob: -6.381775379180908
    4. 'yen' → logprob: -6.881775379180908
    5. ',
' → logprob: -7.256775379180908
    6. ',y' → logprob: -8.25677490234375
    7. '),' → logprob: -8.38177490234375
    8. '-y' → logprob: -9.38177490234375
    9. '円' → logprob: -9.63177490234375
    10. '¥' → logprob: -10.00677490234375

Token 549: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24193063378334045
    2. ')' → logprob: -1.741930603981018
    3. '-y' → logprob: -3.9919307231903076
    4. 'yen' → logprob: -4.6169304847717285
    5. ',y' → logprob: -6.1169304847717285
    6. ' ,' → logprob: -6.6169304847717285
    7. ',
' → logprob: -6.8669304847717285
    8. ' yen' → logprob: -7.2419304847717285
    9. ',)' → logprob: -7.2419304847717285
    10. ' )' → logprob: -7.4919304847717285

Token 550: 'CO' (ID: 8310)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.10471223294734955
    2. 'CO' → logprob: -3.1047122478485107
    3. 'den' → logprob: -3.7297122478485107
    4. 'coin' → logprob: -4.479712009429932
    5. 'DEN' → logprob: -4.604712009429932
    6. 'pieces' → logprob: -5.729712009429932
    7. 'PI' → logprob: -5.854712009429932
    8. '#' → logprob: -7.854712009429932
    9. 'face' → logprob: -7.854712009429932
    10. 'FACE' → logprob: -7.979712009429932

Token 551: 'IN' (ID: 965)
  Prédit: 'INS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INS' → logprob: -0.11832381039857864
    2. 'IN' → logprob: -2.243323802947998
    3. 'INT' → logprob: -5.618323802947998
    4. 'UN' → logprob: -7.118323802947998
    5. 'UNT' → logprob: -8.743324279785156
    6. 'I' → logprob: -8.868324279785156
    7. 'INST' → logprob: -8.868324279785156
    8. 'PI' → logprob: -9.618324279785156
    9. 'U' → logprob: -10.368324279785156
    10. 'NS' → logprob: -10.493324279785156

Token 552: '_TYPES' (ID: 57519)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008425802923738956
    2. '_DEN' → logprob: -5.758425712585449
    3. '_VALUES' → logprob: -5.758425712585449
    4. '_TYPES' → logprob: -7.008425712585449
    5. '_S' → logprob: -7.508425712585449
    6. 'DEN' → logprob: -8.75842571258545
    7. 'VALUES' → logprob: -9.00842571258545
    8. ' denominations' → logprob: -9.63342571258545
    9. 's' → logprob: -9.88342571258545
    10. '=' → logprob: -10.38342571258545

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868856430053711
    2. ' =' → logprob: -1.136885643005371
    3. '=[' → logprob: -11.386885643005371
    4. ' ' → logprob: -14.386885643005371
    5. ' =[' → logprob: -14.386885643005371
    6. ',' → logprob: -14.511885643005371
    7. '   ' → logprob: -14.636885643005371
    8. '＝' → logprob: -14.761885643005371
    9. ':' → logprob: -15.386885643005371
    10. '[' → logprob: -15.761885643005371

Token 554: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5760931968688965
    2. '(' → logprob: -0.8260931968688965
    3. ' (' → logprob: -9.076093673706055
    4. ' [' → logprob: -10.201093673706055
    5. '   ' → logprob: -13.576093673706055
    6. '[(' → logprob: -14.326093673706055
    7. '1' → logprob: -15.201093673706055
    8. ' ' → logprob: -16.326093673706055
    9. '{' → logprob: -17.576093673706055
    10. '  ' → logprob: -17.826093673706055

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004082699597347528
    2. '(' → logprob: -7.875408172607422
    3. ' ' → logprob: -10.750408172607422
    4. '   ' → logprob: -12.625408172607422
    5. ' (' → logprob: -13.125408172607422
    6. '100' → logprob: -14.875408172607422
    7. '0' → logprob: -14.875408172607422
    8. '[' → logprob: -14.875408172607422
    9. '500' → logprob: -15.875408172607422
    10. '50' → logprob: -16.625408172607422

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006067678914405406
    2. ' ,' → logprob: -7.500606536865234
    3. ',
' → logprob: -10.500606536865234
    4. '5' → logprob: -10.625606536865234
    5. '   ' → logprob: -13.875606536865234
    6. '0' → logprob: -15.125606536865234
    7. '500' → logprob: -15.250606536865234
    8. ' ' → logprob: -15.875606536865234
    9. '50' → logprob: -16.500606536865234
    10. '6' → logprob: -17.000606536865234

Token 557: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002989968634210527
    2. ' ' → logprob: -8.125299453735352
    3. '   ' → logprob: -13.375299453735352
    4. '  ' → logprob: -14.125299453735352
    5. '
' → logprob: -16.00029945373535
    6. '```' → logprob: -16.00029945373535
    7. '1' → logprob: -16.50029945373535
    8. '    ' → logprob: -16.87529945373535
    9. '3' → logprob: -17.00029945373535
    10. '	' → logprob: -17.00029945373535

Token 558: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.56233171664644e-05
    2. ' ' → logprob: -9.875055313110352
    3. '   ' → logprob: -13.125055313110352
    4. '
' → logprob: -14.625055313110352
    5. '  ' → logprob: -14.750055313110352
    6. '1' → logprob: -15.250055313110352
    7. '3' → logprob: -15.625055313110352
    8. '```' → logprob: -15.750055313110352
    9. '2' → logprob: -16.56255531311035
    10. '	' → logprob: -16.56255531311035

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001180704333819449
    2. ' ,' → logprob: -6.751180648803711
    3. ',
' → logprob: -11.876180648803711
    4. '   ' → logprob: -12.876180648803711
    5. '0' → logprob: -14.751180648803711
    6. ' ' → logprob: -15.126180648803711
    7. '10' → logprob: -16.25118064880371
    8. '100' → logprob: -16.87618064880371
    9. '1' → logprob: -17.25118064880371
    10. '5' → logprob: -17.37618064880371

Token 560: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.62500762939453
    4. '50' → logprob: -19.25000762939453
    5. '  ' → logprob: -19.87500762939453
    6. '１０' → logprob: -20.00000762939453
    7. '	' → logprob: -20.62500762939453
    8. '100' → logprob: -20.87500762939453
    9. '十' → logprob: -22.00000762939453
    10. '۱۰' → logprob: -22.12500762939453

Token 561: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -18.0
    4. '100' → logprob: -18.25
    5. '50' → logprob: -18.375
    6. '	' → logprob: -20.875
    7. '  ' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. ']' → logprob: -21.25

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003455944824963808
    2. ' ,' → logprob: -8.000345230102539
    3. ',
' → logprob: -11.875345230102539
    4. '   ' → logprob: -13.000345230102539
    5. '50' → logprob: -15.375345230102539
    6. ' ' → logprob: -15.875345230102539
    7. '0' → logprob: -16.00034523010254
    8. '	' → logprob: -16.50034523010254
    9. '500' → logprob: -16.75034523010254
    10. '100' → logprob: -17.00034523010254

Token 563: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0024832691997289658
    2. ' ' → logprob: -6.002483367919922
    3. '   ' → logprob: -11.877483367919922
    4. '  ' → logprob: -15.252483367919922
    5. '	' → logprob: -16.002483367919922
    6. '
' → logprob: -16.502483367919922
    7. '30' → logprob: -16.752483367919922
    8. '    ' → logprob: -16.752483367919922
    9. '25' → logprob: -17.002483367919922
    10. '     ' → logprob: -17.127483367919922

Token 564: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: 0.0
    2. ' ' → logprob: -20.0
    3. '   ' → logprob: -20.625
    4. '５０' → logprob: -21.0
    5. '25' → logprob: -22.625
    6. '
' → logprob: -22.625
    7. '0' → logprob: -22.75
    8. '```' → logprob: -23.25
    9. '	' → logprob: -23.375
    10. '{' → logprob: -23.625

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5014188799541444e-05
    2. ' ,' → logprob: -10.125044822692871
    3. '100' → logprob: -12.750044822692871
    4. ',
' → logprob: -13.625044822692871
    5. '0' → logprob: -14.750044822692871
    6. '   ' → logprob: -15.500044822692871
    7. '1' → logprob: -17.375045776367188
    8. ' ' → logprob: -17.375045776367188
    9. '500' → logprob: -17.750045776367188
    10. '```' → logprob: -18.000045776367188

Token 566: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.62504005432129
    4. '  ' → logprob: -19.25004005432129
    5. '１００' → logprob: -19.62504005432129
    6. '0' → logprob: -22.62504005432129
    7. '#' → logprob: -22.62504005432129
    8. '    ' → logprob: -22.75004005432129
    9. '1' → logprob: -22.75004005432129
    10. '50' → logprob: -22.87504005432129

Token 567: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '１００' → logprob: -20.125
    4. ' hundred' → logprob: -22.25
    5. 'hund' → logprob: -22.625
    6. '   ' → logprob: -22.625
    7. '0' → logprob: -22.875
    8. '1' → logprob: -23.0
    9. '  ' → logprob: -23.25
    10. '#' → logprob: -23.5

Token 568: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2812701165676117
    2. ']' → logprob: -1.406270146369934
    3. ' ,' → logprob: -9.781270027160645
    4. ' ]' → logprob: -10.156270027160645
    5. ']
' → logprob: -11.156270027160645
    6. ']

' → logprob: -12.656270027160645
    7. ']
' → logprob: -13.406270027160645
    8. '0' → logprob: -13.656270027160645
    9. '   ' → logprob: -14.531270027160645
    10. ')' → logprob: -14.531270027160645

Token 569: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.02749256230890751
    2. 'CO' → logprob: -4.402492523193359
    3. 'def' → logprob: -4.777492523193359
    4. 'class' → logprob: -6.027492523193359
    5. '#' → logprob: -6.152492523193359
    6. 'N' → logprob: -8.02749252319336
    7. 'max' → logprob: -8.15249252319336
    8. ']' → logprob: -8.52749252319336
    9. 'coin' → logprob: -8.65249252319336
    10. '
' → logprob: -8.77749252319336

Token 570: '_CO' (ID: 49321)
  Prédit: '_CO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CO' → logprob: -0.26514288783073425
    2. '_P' → logprob: -1.8901429176330566
    3. '_COUN' → logprob: -2.8901429176330566
    4. '_COUNT' → logprob: -3.8901429176330566
    5. '_QU' → logprob: -5.515142917633057
    6. '_NUM' → logprob: -7.015142917633057
    7. '_Q' → logprob: -8.765142440795898
    8. '_C' → logprob: -8.890142440795898
    9. '_N' → logprob: -9.015142440795898
    10. '_AMOUNT' → logprob: -9.390142440795898

Token 571: 'INS' (ID: 17264)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.533109188079834
    2. 'INS' → logprob: -0.908109188079834
    3. 'UNT' → logprob: -5.033109188079834
    4. 'UN' → logprob: -6.033109188079834
    5. 'INT' → logprob: -7.033109188079834
    6. 'I' → logprob: -10.158109664916992
    7. 'UNIT' → logprob: -10.908109664916992
    8. 'INST' → logprob: -11.158109664916992
    9. 'İN' → logprob: -11.908109664916992
    10. 'U' → logprob: -12.158109664916992

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027490932494401932
    2. '=' → logprob: -4.402491092681885
    3. 'S' → logprob: -4.402491092681885
    4. '_COUN' → logprob: -6.527491092681885
    5. '_COUNT' → logprob: -6.902491092681885
    6. '_PER' → logprob: -9.402490615844727
    7. '_counts' → logprob: -10.527490615844727
    8. '_NUM' → logprob: -11.402490615844727
    9. '_CNT' → logprob: -11.527490615844727
    10. '=[' → logprob: -12.277490615844727

Token 573: ' [' (ID: 723)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0138374213129282
    2. '11' → logprob: -4.3888373374938965
    3. '[' → logprob: -6.6388373374938965
    4. '(' → logprob: -11.763837814331055
    5. ' ' → logprob: -12.013837814331055
    6. '{' → logprob: -13.388837814331055
    7. '20' → logprob: -14.263837814331055
    8. ' [' → logprob: -14.388837814331055
    9. '12' → logprob: -14.388837814331055
    10. '15' → logprob: -14.513837814331055

Token 574: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -2.641841820150148e-05
    2. '[' → logprob: -10.87502670288086
    3. ' ' → logprob: -12.37502670288086
    4. '   ' → logprob: -13.50002670288086
    5. '(' → logprob: -14.00002670288086
    6. '11' → logprob: -15.00002670288086
    7. '20' → logprob: -15.75002670288086
    8. '0' → logprob: -16.12502670288086
    9. '100' → logprob: -16.50002670288086
    10. ' [' → logprob: -16.62502670288086

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007895251736044884
    2. '0' → logprob: -4.882895469665527
    3. ' ,' → logprob: -8.257895469665527
    4. ']' → logprob: -11.757895469665527
    5. '00' → logprob: -11.757895469665527
    6. ' ' → logprob: -12.757895469665527
    7. '[' → logprob: -12.882895469665527
    8. '8' → logprob: -13.257895469665527
    9. '3' → logprob: -13.382895469665527
    10. '   ' → logprob: -13.507895469665527

Token 576: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01386928278952837
    2. '9' → logprob: -4.388869285583496
    3. '4' → logprob: -7.888869285583496
    4. '5' → logprob: -8.138869285583496
    5. '11' → logprob: -9.013869285583496
    6. '6' → logprob: -9.013869285583496
    7. '[' → logprob: -9.138869285583496
    8. '8' → logprob: -9.138869285583496
    9. '7' → logprob: -9.638869285583496
    10. '20' → logprob: -10.263869285583496

Token 577: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16437986493110657
    2. '9' → logprob: -2.164379835128784
    3. '4' → logprob: -3.539379835128784
    4. '5' → logprob: -5.539380073547363
    5. '6' → logprob: -6.789380073547363
    6. '8' → logprob: -6.914380073547363
    7. '7' → logprob: -7.039380073547363
    8. '20' → logprob: -8.164380073547363
    9. '11' → logprob: -8.914380073547363
    10. '14' → logprob: -9.414380073547363

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009577934979461133
    2. ' ,' → logprob: -7.00095796585083
    3. '0' → logprob: -11.250957489013672
    4. '4' → logprob: -12.000957489013672
    5. '7' → logprob: -12.000957489013672
    6. '5' → logprob: -12.000957489013672
    7. '6' → logprob: -12.250957489013672
    8. '3' → logprob: -12.500957489013672
    9. '9' → logprob: -13.500957489013672
    10. '2' → logprob: -13.750957489013672

Token 579: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.26351210474967957
    2. '4' → logprob: -1.513512134552002
    3. '9' → logprob: -5.263512134552002
    4. '5' → logprob: -5.513512134552002
    5. '2' → logprob: -7.263512134552002
    6. '6' → logprob: -7.513512134552002
    7. '8' → logprob: -7.638512134552002
    8. '3' → logprob: -8.513511657714844
    9. '7' → logprob: -8.888511657714844
    10. '20' → logprob: -9.763511657714844

Token 580: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5984259843826294
    2. '10' → logprob: -0.9734259843826294
    3. '9' → logprob: -2.97342586517334
    4. '5' → logprob: -4.59842586517334
    5. '20' → logprob: -5.47342586517334
    6. '8' → logprob: -6.09842586517334
    7. '2' → logprob: -6.22342586517334
    8. '6' → logprob: -7.09842586517334
    9. '3' → logprob: -7.47342586517334
    10. '7' → logprob: -7.72342586517334

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021903318702243268
    2. ' ,' → logprob: -8.500219345092773
    3. '4' → logprob: -11.625219345092773
    4. '0' → logprob: -13.125219345092773
    5. '5' → logprob: -14.000219345092773
    6. '6' → logprob: -14.125219345092773
    7. ']' → logprob: -14.125219345092773
    8. '7' → logprob: -14.375219345092773
    9. '3' → logprob: -14.375219345092773
    10. '8' → logprob: -15.250219345092773

Token 582: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11655601859092712
    2. '10' → logprob: -2.61655592918396
    3. '2' → logprob: -4.491556167602539
    4. '5' → logprob: -4.741556167602539
    5. '3' → logprob: -5.116556167602539
    6. '9' → logprob: -5.616556167602539
    7. '6' → logprob: -5.866556167602539
    8. '8' → logprob: -6.241556167602539
    9. '1' → logprob: -6.866556167602539
    10. '7' → logprob: -7.116556167602539

Token 583: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0655219629406929
    2. '10' → logprob: -3.9405219554901123
    3. '9' → logprob: -4.315522193908691
    4. '3' → logprob: -4.815522193908691
    5. '5' → logprob: -4.815522193908691
    6. '2' → logprob: -5.190522193908691
    7. '8' → logprob: -5.940522193908691
    8. '6' → logprob: -6.315522193908691
    9. '1' → logprob: -6.815522193908691
    10. '20' → logprob: -6.940522193908691

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ' ,' → logprob: -10.125042915344238
    3. '4' → logprob: -13.000042915344238
    4. '6' → logprob: -15.375042915344238
    5. '0' → logprob: -15.625042915344238
    6. '5' → logprob: -15.875042915344238
    7. '7' → logprob: -16.625043869018555
    8. ',
' → logprob: -16.875043869018555
    9. '3' → logprob: -16.875043869018555
    10. ' ' → logprob: -17.000043869018555

Token 585: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.019580628722906113
    2. '10' → logprob: -4.144580841064453
    3. '9' → logprob: -6.519580841064453
    4. '5' → logprob: -6.769580841064453
    5. '2' → logprob: -8.144580841064453
    6. '8' → logprob: -8.644580841064453
    7. '3' → logprob: -8.769580841064453
    8. '6' → logprob: -9.644580841064453
    9. '20' → logprob: -9.644580841064453
    10. '1' → logprob: -9.894580841064453

Token 586: '10' (ID: 702)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01935112476348877
    2. '10' → logprob: -4.394351005554199
    3. '9' → logprob: -5.644351005554199
    4. '5' → logprob: -6.769351005554199
    5. '2' → logprob: -7.269351005554199
    6. '8' → logprob: -7.894351005554199
    7. '3' → logprob: -8.0193510055542
    8. '1' → logprob: -8.5193510055542
    9. '20' → logprob: -8.6443510055542
    10. '6' → logprob: -9.1443510055542

Token 587: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014099973486736417
    2. ',' → logprob: -6.626410007476807
    3. ' ]' → logprob: -10.001409530639648
    4. ']
' → logprob: -10.501409530639648
    5. ']

' → logprob: -11.626409530639648
    6. '0' → logprob: -14.376409530639648
    7. '6' → logprob: -15.001409530639648
    8. '7' → logprob: -15.126409530639648
    9. ']
' → logprob: -15.626409530639648
    10. '1' → logprob: -15.876409530639648

Token 588: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7943921089172363
    2. ',' → logprob: -1.5443921089172363
    3. ']' → logprob: -2.0443921089172363
    4. '#' → logprob: -2.9193921089172363
    5. 'MAX' → logprob: -3.4193921089172363
    6. 'def' → logprob: -3.7943921089172363
    7. '```' → logprob: -4.169392108917236
    8. ':' → logprob: -4.294392108917236
    9. ',
' → logprob: -4.294392108917236
    10. ')' → logprob: -4.294392108917236

Token 589: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3016902804374695
    2. '
' → logprob: -2.3016903400421143
    3. ',' → logprob: -2.6766903400421143
    4. '#' → logprob: -3.1766903400421143
    5. ')' → logprob: -3.3016903400421143
    6. ',
' → logprob: -5.301690101623535
    7. 'MAX' → logprob: -5.926690101623535
    8. 'CO' → logprob: -6.676690101623535
    9. 'def' → logprob: -7.926690101623535
    10. ' ]' → logprob: -8.051690101623535

Token 590: ' max' (ID: 2999)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00909938383847475
    2. ' [' → logprob: -5.38409948348999
    3. '#' → logprob: -5.88409948348999
    4. '4' → logprob: -6.63409948348999
    5. '10' → logprob: -9.259099006652832
    6. ']' → logprob: -9.509099006652832
    7. '1' → logprob: -10.009099006652832
    8. ' ' → logprob: -10.384099006652832
    9. '...' → logprob: -10.509099006652832
    10. 'max' → logprob: -11.009099006652832

Token 591: ' pièces' (ID: 49165)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.5826617479324341
    2. '_quant' → logprob: -1.957661747932434
    3. '_co' → logprob: -2.0826616287231445
    4. '_coin' → logprob: -3.2076616287231445
    5. '_tokens' → logprob: -3.4576616287231445
    6. ',' → logprob: -4.2076616287231445
    7. '_quantity' → logprob: -4.7076616287231445
    8. '_piece' → logprob: -4.7076616287231445
    9. '_amount' → logprob: -4.9576616287231445
    10. '_' → logprob: -5.2076616287231445

Token 592: ' estim' (ID: 11039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5488362908363342
    2. 'par' → logprob: -1.2988362312316895
    3. '_par' → logprob: -2.5488362312316895
    4. '=' → logprob: -3.9238362312316895
    5. 's' → logprob: -4.9238362312316895
    6. ')' → logprob: -4.9238362312316895
    7. ' par' → logprob: -5.1738362312316895
    8. '_possible' → logprob: -5.4238362312316895
    9. 'possible' → logprob: -5.5488362312316895
    10. '_counts' → logprob: -5.9238362312316895

Token 593: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.021567106246948242
    2. '[' → logprob: -4.271567344665527
    3. 'és' → logprob: -5.771567344665527
    4. 'ée' → logprob: -6.521567344665527
    5. ']' → logprob: -7.771567344665527
    6. '#' → logprob: -7.896567344665527
    7. '=' → logprob: -7.896567344665527
    8. '{' → logprob: -8.146567344665527
    9. 'ees' → logprob: -9.021567344665527
    10. '```' → logprob: -9.021567344665527

Token 594: ' raisonn' (ID: 144705)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5974331498146057
    2. ':' → logprob: -2.222433090209961
    3. ',' → logprob: -2.347433090209961
    4. ')' → logprob: -2.972433090209961
    5. '
' → logprob: -2.972433090209961
    6. 'CO' → logprob: -2.972433090209961
    7. ',
' → logprob: -3.722433090209961
    8. 'def' → logprob: -4.347433090209961
    9. ']:' → logprob: -4.597433090209961
    10. '_CO' → logprob: -4.597433090209961

Token 595: 'ables' (ID: 3232)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.3732929527759552
    2. 'es' → logprob: -1.7482929229736328
    3. 'nées' → logprob: -3.248292922973633
    4. '=' → logprob: -4.123292922973633
    5. 'és' → logprob: -4.248292922973633
    6. 'ables' → logprob: -4.623292922973633
    7. 'ée' → logprob: -4.748292922973633
    8. '0' → logprob: -4.998292922973633
    9. 'e' → logprob: -5.373292922973633
    10. '[' → logprob: -5.373292922973633

Token 596: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0317951440811157
    2. ']' → logprob: -1.1567951440811157
    3. ',' → logprob: -2.031795024871826
    4. ':' → logprob: -2.656795024871826
    5. '
' → logprob: -2.906795024871826
    6. 'def' → logprob: -3.656795024871826
    7. ',
' → logprob: -4.906795024871826
    8. '):' → logprob: -5.531795024871826
    9. 'CO' → logprob: -5.531795024871826
    10. '[' → logprob: -5.656795024871826

Token 597: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.00413088034838438
    2. 'index' → logprob: -6.629130840301514
    3. 'coin' → logprob: -6.754130840301514
    4. 'indice' → logprob: -7.004130840301514
    5. 'den' → logprob: -8.754131317138672
    6. 'pi' → logprob: -9.379131317138672
    7. ' type' → logprob: -9.504131317138672
    8. 'idx' → logprob: -9.504131317138672
    9. '```' → logprob: -9.754131317138672
    10. 'c' → logprob: -10.129131317138672

Token 598: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6900501847267151
    2. ',' → logprob: -1.8150501251220703
    3. ')' → logprob: -2.3150501251220703
    4. ':' → logprob: -2.4400501251220703
    5. 'def' → logprob: -2.6900501251220703
    6. '
' → logprob: -4.19005012512207
    7. ',
' → logprob: -5.06505012512207
    8. '=' → logprob: -5.06505012512207
    9. ' =' → logprob: -5.31505012512207
    10. ']:' → logprob: -5.44005012512207

Token 599: ' limiter' (ID: 110159)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'type' → logprob: -1.716696858406067
    2. 'c' → logprob: -1.966696858406067
    3. 'coin' → logprob: -2.0916967391967773
    4. 'ch' → logprob: -2.2166967391967773
    5. 'payer' → logprob: -2.7166967391967773
    6. 'faire' → logprob: -2.9666967391967773
    7. 'changer' → logprob: -3.0916967391967773
    8. 'cha' → logprob: -3.0916967391967773
    9. 'acheter' → logprob: -3.4666967391967773
    10. 'év' → logprob: -3.8416967391967773

Token 600: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016110263764858246
    2. 'la' → logprob: -5.641110420227051
    3. 'les' → logprob: -6.141110420227051
    4. '#' → logprob: -6.266110420227051
    5. 'len' → logprob: -6.516110420227051
    6. 'state' → logprob: -6.516110420227051
    7. 'ét' → logprob: -6.891110420227051
    8. ' l' → logprob: -7.266110420227051
    9. 'states' → logprob: -7.266110420227051
    10. 'le' → logprob: -7.766110420227051

Token 601: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.5431463718414307
    2. 'ét' → logprob: -1.2931463718414307
    3. 'quant' → logprob: -2.6681463718414307
    4. 'states' → logprob: -3.2931463718414307
    5. ' et' → logprob: -4.543146133422852
    6. 'etat' → logprob: -4.793146133422852
    7. 'et' → logprob: -5.918146133422852
    8. 'nombre' → logprob: -6.043146133422852
    9. 'state' → logprob: -6.168146133422852
    10. 'coins' → logprob: -6.418146133422852

Token 602: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5820285081863403
    2. '
' → logprob: -2.082028388977051
    3. 'def' → logprob: -2.707028388977051
    4. ')' → logprob: -2.832028388977051
    5. ',' → logprob: -2.832028388977051
    6. ',
' → logprob: -3.207028388977051
    7. ' =' → logprob: -3.957028388977051
    8. 'CO' → logprob: -4.457028388977051
    9. ':' → logprob: -4.832028388977051
    10. 'MAX' → logprob: -4.957028388977051

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01192790549248457
    2. 'class' → logprob: -5.511928081512451
    3. '#' → logprob: -6.011928081512451
    4. 'MAX' → logprob: -6.261928081512451
    5. 'from' → logprob: -7.011928081512451
    6. ')' → logprob: -7.386928081512451
    7. 'dp' → logprob: -7.511928081512451
    8. 'DP' → logprob: -7.636928081512451
    9. ']' → logprob: -8.636927604675293
    10. 'N' → logprob: -8.761927604675293

Token 604: ' make' (ID: 1520)
  Prédit: ' encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encode' → logprob: -1.5513536930084229
    2. 'encode' → logprob: -1.8013536930084229
    3. 'coin' → logprob: -2.051353693008423
    4. 'tuple' → logprob: -2.426353693008423
    5. 'solve' → logprob: -3.051353693008423
    6. 'main' → logprob: -3.051353693008423
    7. 'dp' → logprob: -3.176353693008423
    8. ' main' → logprob: -3.301353693008423
    9. 'compress' → logprob: -3.301353693008423
    10. 'serialize' → logprob: -3.426353693008423

Token 605: '_change' (ID: 36082)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.008491414599120617
    2. '_coin' → logprob: -5.258491516113281
    3. '_states' → logprob: -6.883491516113281
    4. '_key' → logprob: -7.008491516113281
    5. '_co' → logprob: -8.008491516113281
    6. '_' → logprob: -8.133491516113281
    7. '_tuple' → logprob: -8.383491516113281
    8. '_dp' → logprob: -8.758491516113281
    9. '_hash' → logprob: -9.008491516113281
    10. '_change' → logprob: -10.258491516113281

Token 606: '_min' (ID: 15950)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.017769886180758476
    2. '(' → logprob: -5.142769813537598
    3. '(change' → logprob: -5.142769813537598
    4. '(co' → logprob: -5.767769813537598
    5. '(m' → logprob: -6.142769813537598
    6. '(price' → logprob: -9.017769813537598
    7. '(p' → logprob: -9.142769813537598
    8. '(count' → logprob: -9.642769813537598
    9. '(pay' → logprob: -9.892769813537598
    10. '(value' → logprob: -10.017769813537598

Token 607: '_co' (ID: 21102)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -1.7581124305725098
    2. 'coins' → logprob: -1.7581124305725098
    3. 'imal' → logprob: -1.8831124305725098
    4. 'imum' → logprob: -2.1331124305725098
    5. '_co' → logprob: -2.3831124305725098
    6. 'im' → logprob: -2.5081124305725098
    7. '_payment' → logprob: -2.8831124305725098
    8. '_change' → logprob: -3.0081124305725098
    9. '_pay' → logprob: -3.8831124305725098
    10. 'imize' → logprob: -4.25811243057251

Token 608: 'ins' (ID: 1564)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.5540521740913391
    2. 'st' → logprob: -0.9290521740913391
    3. 'unts' → logprob: -4.179052352905273
    4. 'ins' → logprob: -4.929052352905273
    5. 'ut' → logprob: -6.179052352905273
    6. 'unter' → logprob: -6.304052352905273
    7. 'mp' → logprob: -6.804052352905273
    8. 'sts' → logprob: -7.179052352905273
    9. 'int' → logprob: -7.429052352905273
    10. 'de' → logprob: -7.804052352905273

Token 609: '(amount' (ID: 60193)
  Prédit: '(amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.011874904856085777
    2. '(price' → logprob: -5.136874675750732
    3. '(m' → logprob: -5.636874675750732
    4. '(change' → logprob: -6.511874675750732
    5. '(pay' → logprob: -8.26187515258789
    6. '(payment' → logprob: -9.01187515258789
    7. '(p' → logprob: -9.26187515258789
    8. '(' → logprob: -9.26187515258789
    9. '(target' → logprob: -9.51187515258789
    10. '(co' → logprob: -9.76187515258789

Token 610: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028719231486320496
    2. '):' → logprob: -5.877871990203857
    3. ':' → logprob: -10.1278715133667
    4. ' ,' → logprob: -11.0028715133667
    5. '(amount' → logprob: -13.0028715133667
    6. ')' → logprob: -13.6278715133667
    7. ' ):' → logprob: -13.7528715133667
    8. ',
' → logprob: -13.8778715133667
    9. '):
' → logprob: -14.0028715133667
    10. 'amount' → logprob: -14.5028715133667

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007648374885320663
    2. ':' → logprob: -7.250764846801758
    3. '   ' → logprob: -11.250764846801758
    4. '    
' → logprob: -11.750764846801758
    5. '):' → logprob: -11.875764846801758
    6. '#' → logprob: -12.000764846801758
    7. 'def' → logprob: -12.125764846801758
    8. ':
' → logprob: -13.125764846801758
    9. ')' → logprob: -13.250764846801758
    10. '{' → logprob: -13.625764846801758

Token 612: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4125615656375885
    2. 'coins' → logprob: -1.5375615358352661
    3. ' coins' → logprob: -2.1625616550445557
    4. 'dp' → logprob: -5.287561416625977
    5. ' dp' → logprob: -6.162561416625977
    6. '    ' → logprob: -8.662561416625977
    7. 'coin' → logprob: -8.662561416625977
    8. ' #' → logprob: -9.287561416625977
    9. 'def' → logprob: -9.537561416625977
    10. ' coin' → logprob: -9.787561416625977

Token 613: ' Retour' (ID: 146830)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5292864441871643
    2. 'dp' → logprob: -1.0292863845825195
    3. 'def' → logprob: -3.4042863845825195
    4. '   ' → logprob: -4.6542863845825195
    5. ' coins' → logprob: -5.5292863845825195
    6. 'change' → logprob: -6.0292863845825195
    7. 'coin' → logprob: -6.5292863845825195
    8. ' dp' → logprob: -7.0292863845825195
    9. 'amount' → logprob: -7.9042863845825195
    10. 'pieces' → logprob: -8.02928638458252

Token 614: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13665172457695007
    2. 'ne' → logprob: -2.3866517543792725
    3. 'def' → logprob: -4.386651515960693
    4. '   ' → logprob: -4.636651515960693
    5. 'ner' → logprob: -4.761651515960693
    6. 'ns' → logprob: -6.136651515960693
    7. ' ' → logprob: -7.636651515960693
    8. 'nne' → logprob: -7.636651515960693
    9. ' def' → logprob: -7.761651515960693
    10. 'ndef' → logprob: -7.886651515960693

Token 615: ' la' (ID: 557)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.439314067363739
    2. 'None' → logprob: -1.3143141269683838
    3. '[' → logprob: -3.314314126968384
    4. '[]' → logprob: -4.064313888549805
    5. ' [' → logprob: -4.064313888549805
    6. 'coins' → logprob: -5.689313888549805
    7. '(None' → logprob: -6.314313888549805
    8. ' []' → logprob: -6.439313888549805
    9. ' coins' → logprob: -6.814313888549805
    10. 'dp' → logprob: -6.939313888549805

Token 616: ' distribution' (ID: 12545)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9984819889068604
    2. 'dict' → logprob: -1.1234819889068604
    3. 'collections' → logprob: -2.6234819889068604
    4. 'coins' → logprob: -2.9984819889068604
    5. ' dict' → logprob: -3.3734819889068604
    6. 'list' → logprob: -3.4984819889068604
    7. ' dp' → logprob: -3.7484819889068604
    8. 'tokens' → logprob: -3.8734819889068604
    9. 'count' → logprob: -4.123481750488281
    10. 'result' → logprob: -4.623481750488281

Token 617: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09971758723258972
    2. 'def' → logprob: -3.099717617034912
    3. '{' → logprob: -3.349717617034912
    4. ' of' → logprob: -5.849717617034912
    5. 'tokens' → logprob: -5.849717617034912
    6. '  ' → logprob: -6.349717617034912
    7. 'of' → logprob: -6.474717617034912
    8. 'de' → logprob: -6.849717617034912
    9. '    ' → logprob: -7.474717617034912
    10. '
' → logprob: -7.474717617034912

Token 618: ' rendre' (ID: 44629)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9414590001106262
    2. 'amount' → logprob: -1.5664589405059814
    3. 'None' → logprob: -1.5664589405059814
    4. 'coins' → logprob: -2.1914589405059814
    5. '[]' → logprob: -3.5664589405059814
    6. '{' → logprob: -3.8164589405059814
    7. ' None' → logprob: -4.9414591789245605
    8. '{}' → logprob: -5.0664591789245605
    9. ' [' → logprob: -5.1914591789245605
    10. 'coin' → logprob: -6.1914591789245605

Token 619: ' le' (ID: 505)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7171732783317566
    2. 'change' → logprob: -1.5921733379364014
    3. '{' → logprob: -1.8421733379364014
    4. 'amount' → logprob: -2.5921733379364014
    5. ' coins' → logprob: -3.8421733379364014
    6. '   ' → logprob: -4.342173099517822
    7. ' change' → logprob: -4.342173099517822
    8. 'coin' → logprob: -4.967173099517822
    9. 'def' → logprob: -5.342173099517822
    10. ' {' → logprob: -5.342173099517822

Token 620: ' montant' (ID: 72364)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' change' → logprob: -1.4536494016647339
    2. ' monnaie' → logprob: -1.4536494016647339
    3. ' coins' → logprob: -1.7036494016647339
    4. 'change' → logprob: -2.0786495208740234
    5. '{' → logprob: -2.8286495208740234
    6. '{}' → logprob: -3.3286495208740234
    7. 'coins' → logprob: -3.4536495208740234
    8. ' coin' → logprob: -3.9536495208740234
    9. ' {' → logprob: -4.078649520874023
    10. ' {}' → logprob: -4.578649520874023

Token 621: ' donné' (ID: 52079)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1483486890792847
    2. '   ' → logprob: -1.5233486890792847
    3. 'def' → logprob: -1.6483486890792847
    4. 'en' → logprob: -1.8983486890792847
    5. 'change' → logprob: -3.398348808288574
    6. ' change' → logprob: -4.023348808288574
    7. 'coins' → logprob: -4.148348808288574
    8. ':' → logprob: -4.398348808288574
    9. ' coins' → logprob: -4.523348808288574
    10. ' =' → logprob: -5.523348808288574

Token 622: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5741333365440369
    2. '(amount' → logprob: -1.1991333961486816
    3. '(co' → logprob: -2.8241333961486816
    4. 'def' → logprob: -3.3241333961486816
    5. ':' → logprob: -4.199133396148682
    6. '(' → logprob: -4.574133396148682
    7. ' (' → logprob: -5.574133396148682
    8. 'amount' → logprob: -6.574133396148682
    9. 'coins' → logprob: -6.574133396148682
    10. ' :' → logprob: -6.824133396148682

Token 623: 'change' (ID: 4939)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.2495750188827515
    2. 'coins' → logprob: -1.3745750188827515
    3. ' coins' → logprob: -1.6245750188827515
    4. ')' → logprob: -1.9995750188827515
    5. ' amount' → logprob: -2.624575138092041
    6. 'def' → logprob: -4.374575138092041
    7. ' )' → logprob: -5.124575138092041
    8. 'None' → logprob: -5.374575138092041
    9. '):
' → logprob: -5.374575138092041
    10. '   ' → logprob: -5.624575138092041

Token 624: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4936571419239044
    2. '):
' → logprob: -1.118657112121582
    3. '   ' → logprob: -3.868657112121582
    4. ' =' → logprob: -3.993657112121582
    5. ')' → logprob: -4.618657112121582
    6. ',' → logprob: -6.243657112121582
    7. ' ):' → logprob: -6.368657112121582
    8. '_amount' → logprob: -6.368657112121582
    9. '):
' → logprob: -6.618657112121582
    10. ' ' → logprob: -6.743657112121582

Token 625: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1666375994682312
    2. ':' → logprob: -2.041637659072876
    3. '(co' → logprob: -4.166637420654297
    4. '(amount' → logprob: -5.541637420654297
    5. ' :' → logprob: -7.416637420654297
    6. 'def' → logprob: -7.416637420654297
    7. '(' → logprob: -7.416637420654297
    8. 'coins' → logprob: -7.541637420654297
    9. '(change' → logprob: -8.041637420654297
    10. ' coins' → logprob: -8.291637420654297

Token 626: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6183869242668152
    2. 'coins' → logprob: -1.11838698387146
    3. '[]' → logprob: -2.49338698387146
    4. '{}' → logprob: -3.99338698387146
    5. '{' → logprob: -4.243386745452881
    6. 'None' → logprob: -5.118386745452881
    7. 'CO' → logprob: -5.868386745452881
    8. 'coin' → logprob: -6.118386745452881
    9. 'tokens' → logprob: -6.243386745452881
    10. 'def' → logprob: -6.368386745452881

Token 627: ' moins' (ID: 15924)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5358347296714783
    2. '[]' → logprob: -1.535834789276123
    3. '[' → logprob: -2.285834789276123
    4. 'pieces' → logprob: -3.285834789276123
    5. 'tokens' → logprob: -4.285834789276123
    6. 'None' → logprob: -4.535834789276123
    7. 'coin' → logprob: -4.535834789276123
    8. 'CO' → logprob: -4.910834789276123
    9. 'collections' → logprob: -5.160834789276123
    10. 'sys' → logprob: -6.410834789276123

Token 628: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8114452958106995
    2. ' de' → logprob: -0.8114452958106995
    3. ' possible' → logprob: -2.6864452362060547
    4. 'possible' → logprob: -3.9364452362060547
    5. 'de' → logprob: -4.436445236206055
    6. '    ' → logprob: -5.311445236206055
    7. ' ' → logprob: -5.561445236206055
    8. '  ' → logprob: -7.186445236206055
    9. '_possible' → logprob: -7.436445236206055
    10. ' =' → logprob: -7.561445236206055

Token 629: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.39737871289253235
    2. 'pieces' → logprob: -1.64737868309021
    3. 'pi' → logprob: -2.14737868309021
    4. ' pièces' → logprob: -4.272378921508789
    5. '```' → logprob: -6.022378921508789
    6. 'CO' → logprob: -6.897378921508789
    7. 'co' → logprob: -7.772378921508789
    8. ' pieces' → logprob: -9.022378921508789
    9. ' coins' → logprob: -9.397378921508789
    10. '#' → logprob: -9.522378921508789

Token 630: '/b' (ID: 7611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23391824960708618
    2. '(co' → logprob: -2.4839181900024414
    3. ':' → logprob: -2.9839181900024414
    4. '(amount' → logprob: -3.6089181900024414
    5. 'def' → logprob: -3.8589181900024414
    6. '(' → logprob: -5.358918190002441
    7. 'coins' → logprob: -5.358918190002441
    8. ' :' → logprob: -5.483918190002441
    9. ' (' → logprob: -5.858918190002441
    10. '500' → logprob: -6.608918190002441

Token 631: 'il' (ID: 311)
  Prédit: 'ills'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ills' → logprob: -0.7249667644500732
    2. 'il' → logprob: -1.8499667644500732
    3. 'ill' → logprob: -1.8499667644500732
    4. 'illes' → logprob: -1.9749667644500732
    5. 'coins' → logprob: -4.349967002868652
    6. '```' → logprob: -4.599967002868652
    7. 'illet' → logprob: -5.349967002868652
    8. 'ils' → logprob: -5.724967002868652
    9. '#' → logprob: -5.724967002868652
    10. 'pieces' → logprob: -5.724967002868652

Token 632: 'lets' (ID: 12222)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03022121451795101
    2. 'les' → logprob: -4.155220985412598
    3. 'lets' → logprob: -4.905220985412598
    4. 'ets' → logprob: -5.905220985412598
    5. 's' → logprob: -6.155220985412598
    6. 'tes' → logprob: -8.030220985412598
    7. 'let' → logprob: -8.405220985412598
    8. '```' → logprob: -8.405220985412598
    9. 'e' → logprob: -8.655220985412598
    10. 'coins' → logprob: -8.905220985412598

Token 633: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25408947467803955
    2. '   ' → logprob: -2.00408935546875
    3. ' :' → logprob: -2.75408935546875
    4. 'def' → logprob: -4.37908935546875
    5. ',' → logprob: -5.62908935546875
    6. '():' → logprob: -6.12908935546875
    7. '):' → logprob: -6.62908935546875
    8. ' (' → logprob: -6.87908935546875
    9. '(co' → logprob: -7.12908935546875
    10. '500' → logprob: -7.25408935546875

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3396674394607544
    2. '(co' → logprob: -2.089667320251465
    3. 'def' → logprob: -2.464667320251465
    4. '(amount' → logprob: -2.964667320251465
    5. ':' → logprob: -4.089667320251465
    6. '(' → logprob: -5.089667320251465
    7. 'coins' → logprob: -6.589667320251465
    8. 'amount' → logprob: -7.964667320251465
    9. '(piece' → logprob: -7.964667320251465
    10. ' :' → logprob: -8.214667320251465

Token 635: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2862733006477356
    2. 'coins' → logprob: -2.036273241043091
    3. ' coins' → logprob: -2.286273241043091
    4. ' denominations' → logprob: -5.03627347946167
    5. 'dp' → logprob: -5.16127347946167
    6. ' dp' → logprob: -6.03627347946167
    7. 'def' → logprob: -6.78627347946167
    8. 'coin' → logprob: -7.91127347946167
    9. ' coin' → logprob: -8.161273002624512
    10. ' DP' → logprob: -9.786273002624512

Token 636: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5127497911453247
    2. ' coins' → logprob: -1.8877497911453247
    3. 'coins' → logprob: -2.137749671936035
    4. 'def' → logprob: -2.262749671936035
    5. 'dp' → logprob: -3.762749671936035
    6. ' dp' → logprob: -6.637749671936035
    7. ' def' → logprob: -7.137749671936035
    8. 'coin' → logprob: -7.512749671936035
    9. ' denominations' → logprob: -7.512749671936035
    10. ' coin' → logprob: -8.012749671936035

Token 637: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17171557247638702
    2. ':' → logprob: -1.9217156171798706
    3. 'def' → logprob: -4.54671573638916
    4. ' :' → logprob: -8.79671573638916
    5. 'coins' → logprob: -8.79671573638916
    6. ',' → logprob: -9.04671573638916
    7. '():' → logprob: -9.79671573638916
    8. '):' → logprob: -10.17171573638916
    9. ':
' → logprob: -10.17171573638916
    10. '{' → logprob: -10.29671573638916

Token 638: ' en' (ID: 469)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.65240079164505
    2. '   ' → logprob: -1.0274007320404053
    3. 'coins' → logprob: -2.9024007320404053
    4. 'def' → logprob: -3.4024007320404053
    5. ' def' → logprob: -4.027400970458984
    6. ' amount' → logprob: -5.152400970458984
    7. ' coin' → logprob: -5.277400970458984
    8. '    ' → logprob: -7.152400970458984
    9. 'amount' → logprob: -7.277400970458984
    10. ' amounts' → logprob: -7.402400970458984

Token 639: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.24803103506565094
    2. 'def' → logprob: -1.9980310201644897
    3. 'util' → logprob: -3.7480311393737793
    4. ' respect' → logprob: -4.998031139373779
    5. ' coins' → logprob: -5.123031139373779
    6. ' suivant' → logprob: -5.498031139373779
    7. 'coins' → logprob: -5.623031139373779
    8. 'using' → logprob: -5.873031139373779
    9. 'CO' → logprob: -6.248031139373779
    10. 'g' → logprob: -6.248031139373779

Token 640: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11970838904380798
    2. 'CO' → logprob: -3.119708299636841
    3. ' CO' → logprob: -3.494708299636841
    4. ' [' → logprob: -4.36970853805542
    5. '   ' → logprob: -5.11970853805542
    6. '[]' → logprob: -5.36970853805542
    7. 'coins' → logprob: -5.61970853805542
    8. '[
' → logprob: -5.86970853805542
    9. ' ' → logprob: -5.99470853805542
    10. ')' → logprob: -6.36970853805542

Token 641: ' pièces' (ID: 49165)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23531658947467804
    2. 'CO' → logprob: -2.110316514968872
    3. 'coins' → logprob: -3.235316514968872
    4. ' [' → logprob: -3.985316514968872
    5. ' CO' → logprob: -3.985316514968872
    6. ' coins' → logprob: -5.485316753387451
    7. 'b' → logprob: -5.985316753387451
    8. 'pieces' → logprob: -6.360316753387451
    9. '[]' → logprob: -7.110316753387451
    10. '[C' → logprob: -8.110316276550293

Token 642: '/b' (ID: 7611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07560843974351883
    2. 'et' → logprob: -3.700608491897583
    3. ' et' → logprob: -4.325608253479004
    4. 'def' → logprob: -4.450608253479004
    5. ' and' → logprob: -4.950608253479004
    6. 'and' → logprob: -5.325608253479004
    7. '[' → logprob: -5.575608253479004
    8. ',' → logprob: -6.450608253479004
    9. '    ' → logprob: -6.575608253479004
    10. ' ' → logprob: -6.700608253479004

Token 643: 'il' (ID: 311)
  Prédit: 'ills'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ills' → logprob: -0.9053014516830444
    2. 'il' → logprob: -1.2803014516830444
    3. '100' → logprob: -1.7803014516830444
    4. 'ill' → logprob: -2.780301570892334
    5. 'illes' → logprob: -3.405301570892334
    6. 'illet' → logprob: -4.530301570892334
    7. '500' → logprob: -4.655301570892334
    8. 'ils' → logprob: -5.155301570892334
    9. '[' → logprob: -5.530301570892334
    10. '=' → logprob: -5.530301570892334

Token 644: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.40214553475379944
    2. 'let' → logprob: -1.277145504951477
    3. 'ets' → logprob: -3.5271456241607666
    4. 'l' → logprob: -4.6521453857421875
    5. 'et' → logprob: -5.6521453857421875
    6. 'les' → logprob: -5.6521453857421875
    7. 'le' → logprob: -6.6521453857421875
    8. 'es' → logprob: -7.0271453857421875
    9. 't' → logprob: -7.1521453857421875
    10. '#' → logprob: -7.1521453857421875

Token 645: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18698596954345703
    2. 'def' → logprob: -1.936985969543457
    3. ' =' → logprob: -5.061985969543457
    4. 'coins' → logprob: -5.186985969543457
    5. '=' → logprob: -5.936985969543457
    6. 'available' → logprob: -6.561985969543457
    7. '500' → logprob: -6.686985969543457
    8. ':' → logprob: -6.811985969543457
    9. '[' → logprob: -7.186985969543457
    10. ',' → logprob: -7.311985969543457

Token 646: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31476590037345886
    2. 'coins' → logprob: -1.6897659301757812
    3. '   ' → logprob: -2.5647659301757812
    4. 'CO' → logprob: -5.814765930175781
    5. 'b' → logprob: -6.564765930175781
    6. ' coins' → logprob: -7.064765930175781
    7. 'def' → logprob: -7.189765930175781
    8. ' [' → logprob: -7.439765930175781
    9. 'coin' → logprob: -7.814765930175781
    10. '500' → logprob: -8.189765930175781

Token 647: '100' (ID: 1353)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.042679063975811005
    2. 'coins' → logprob: -3.2926790714263916
    3. '   ' → logprob: -6.4176788330078125
    4. 'CO' → logprob: -7.2926788330078125
    5. 'def' → logprob: -7.4176788330078125
    6. 'result' → logprob: -7.9176788330078125
    7. 'b' → logprob: -8.042678833007812
    8. 'coin' → logprob: -8.292678833007812
    9. '500' → logprob: -9.167678833007812
    10. '{' → logprob: -9.417678833007812

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.046692393720149994
    2. ',' → logprob: -3.171692371368408
    3. '000' → logprob: -5.921692371368408
    4. ' ,' → logprob: -7.421692371368408
    5. '00' → logprob: -8.796692848205566
    6. '   ' → logprob: -9.421692848205566
    7. ' ' → logprob: -9.671692848205566
    8. ')' → logprob: -9.921692848205566
    9. '[' → logprob: -11.296692848205566
    10. '<|end|>' → logprob: -11.796692848205566

Token 649: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2386232614517212
    2. '   ' → logprob: -1.2386232614517212
    3. 'def' → logprob: -1.6136232614517212
    4. ',' → logprob: -2.1136231422424316
    5. '):' → logprob: -3.7386231422424316
    6. 'coins' → logprob: -4.113623142242432
    7. '_' → logprob: -4.863623142242432
    8. '0' → logprob: -4.863623142242432
    9. '(' → logprob: -5.488623142242432
    10. '):
' → logprob: -5.613623142242432

Token 650: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07033363729715347
    2. ' ' → logprob: -2.69533371925354
    3. '100' → logprob: -7.945333480834961
    4. '   ' → logprob: -10.695333480834961
    5. '  ' → logprob: -11.445333480834961
    6. '
' → logprob: -13.570333480834961
    7. '    ' → logprob: -13.570333480834961
    8. '	' → logprob: -13.695333480834961
    9. '```' → logprob: -13.820333480834961
    10. '50' → logprob: -13.820333480834961

Token 651: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0020182132720947266
    2. ' ' → logprob: -6.252017974853516
    3. '100' → logprob: -9.502017974853516
    4. '   ' → logprob: -12.252017974853516
    5. '  ' → logprob: -13.002017974853516
    6. '```' → logprob: -13.752017974853516
    7. 'import' → logprob: -13.877017974853516
    8. '[' → logprob: -14.127017974853516
    9. '50' → logprob: -14.127017974853516
    10. '
' → logprob: -14.252017974853516

Token 652: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.650965690612793
    2. 'def' → logprob: -1.150965690612793
    3. 'coins' → logprob: -2.400965690612793
    4. ':' → logprob: -3.650965690612793
    5. '(co' → logprob: -4.150965690612793
    6. ' coins' → logprob: -4.775965690612793
    7. '(' → logprob: -5.275965690612793
    8. '(amount' → logprob: -5.650965690612793
    9. ',' → logprob: -6.150965690612793
    10. ' denominations' → logprob: -6.400965690612793

Token 653: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.012631252408027649
    2. ' ' → logprob: -4.387631416320801
    3. '50' → logprob: -10.0126314163208
    4. '1' → logprob: -10.3876314163208
    5. '500' → logprob: -10.5126314163208
    6. '   ' → logprob: -11.8876314163208
    7. '250' → logprob: -12.0126314163208
    8. '200' → logprob: -12.7626314163208
    9. '```' → logprob: -14.5126314163208
    10. '    ' → logprob: -14.6376314163208

Token 654: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '500' → logprob: -15.000008583068848
    4. '1' → logprob: -15.250008583068848
    5. '50' → logprob: -16.000009536743164
    6. '   ' → logprob: -17.250009536743164
    7. '```' → logprob: -17.625009536743164
    8. '
' → logprob: -18.000009536743164
    9. '１００' → logprob: -18.250009536743164
    10. '5' → logprob: -18.875009536743164

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05175171419978142
    2. '   ' → logprob: -3.8017516136169434
    3. 'def' → logprob: -3.9267516136169434
    4. '0' → logprob: -6.301751613616943
    5. ',
' → logprob: -6.801751613616943
    6. ' ,' → logprob: -6.926751613616943
    7. ')' → logprob: -7.301751613616943
    8. ' ' → logprob: -7.426751613616943
    9. ']' → logprob: -7.676751613616943
    10. 'coins' → logprob: -7.676751613616943

Token 656: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.3869021236896515
    2. ' ' → logprob: -1.136902093887329
    3. ' ' → logprob: -11.01190185546875
    4. '500' → logprob: -12.26190185546875
    5. '  ' → logprob: -12.63690185546875
    6. '5' → logprob: -13.38690185546875
    7. '	' → logprob: -13.51190185546875
    8. '1' → logprob: -13.51190185546875
    9. '10' → logprob: -14.26190185546875
    10. '```' → logprob: -14.38690185546875

Token 657: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.011050296947360039
    2. ' ' → logprob: -4.511050224304199
    3. '   ' → logprob: -14.1360502243042
    4. '  ' → logprob: -14.7610502243042
    5. '10' → logprob: -14.8860502243042
    6. '500' → logprob: -15.2610502243042
    7. '5' → logprob: -15.3860502243042
    8. ' ' → logprob: -15.8860502243042
    9. '    ' → logprob: -16.511051177978516
    10. '	' → logprob: -16.636051177978516

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018343955744057894
    2. ' ,' → logprob: -7.001834392547607
    3. 'def' → logprob: -7.751834392547607
    4. '   ' → logprob: -9.001834869384766
    5. '10' → logprob: -9.626834869384766
    6. ' ' → logprob: -9.751834869384766
    7. '1' → logprob: -9.876834869384766
    8. '20' → logprob: -10.001834869384766
    9. '```' → logprob: -10.251834869384766
    10. '100' → logprob: -10.751834869384766

Token 659: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.375158309936523
    4. '1' → logprob: -19.375158309936523
    5. '20' → logprob: -19.500158309936523
    6. '  ' → logprob: -20.625158309936523
    7. '5' → logprob: -20.750158309936523
    8. '100' → logprob: -21.875158309936523
    9. '```' → logprob: -21.875158309936523
    10. '25' → logprob: -22.125158309936523

Token 660: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -18.25
    4. '20' → logprob: -20.25
    5. '5' → logprob: -20.75
    6. '0' → logprob: -21.0
    7. '100' → logprob: -21.5
    8. '25' → logprob: -21.75
    9. '   ' → logprob: -22.875
    10. '１０' → logprob: -23.125

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.734809160232544
    2. '   ' → logprob: -0.859809160232544
    3. 'def' → logprob: -2.859809160232544
    4. '):
' → logprob: -4.859808921813965
    5. '[' → logprob: -4.984808921813965
    6. '
' → logprob: -5.234808921813965
    7. '(' → logprob: -5.484808921813965
    8. ' =' → logprob: -5.734808921813965
    9. ' ,' → logprob: -6.359808921813965
    10. ')' → logprob: -6.609808921813965

Token 662: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00417444109916687
    2. ' ' → logprob: -5.50417423248291
    3. '1' → logprob: -9.25417423248291
    4. '500' → logprob: -16.504175186157227
    5. '20' → logprob: -16.879175186157227
    6. '50' → logprob: -17.004175186157227
    7. '  ' → logprob: -17.129175186157227
    8. '```' → logprob: -17.129175186157227
    9. '25' → logprob: -17.379175186157227
    10. '   ' → logprob: -17.629175186157227

Token 663: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.62503719329834
    3. '1' → logprob: -11.25003719329834
    4. '500' → logprob: -16.750038146972656
    5. '20' → logprob: -18.000038146972656
    6. '0' → logprob: -18.000038146972656
    7. '25' → logprob: -18.375038146972656
    8. '５' → logprob: -18.375038146972656
    9. '```' → logprob: -18.500038146972656
    10. '
' → logprob: -18.750038146972656

Token 664: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2690935730934143
    2. ',' → logprob: -1.5190935134887695
    3. 'def' → logprob: -4.7690935134887695
    4. '[' → logprob: -6.3940935134887695
    5. '(' → logprob: -6.5190935134887695
    6. ' =' → logprob: -6.7690935134887695
    7. '):
' → logprob: -7.3940935134887695
    8. '
' → logprob: -7.7690935134887695
    9. '```' → logprob: -7.8940935134887695
    10. ' ,' → logprob: -8.01909351348877

Token 665: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '100' → logprob: -17.625625610351562
    4. '```' → logprob: -18.125625610351562
    5. '１' → logprob: -18.500625610351562
    6. ' ' → logprob: -20.375625610351562
    7. '2' → logprob: -20.375625610351562
    8. '
' → logprob: -20.500625610351562
    9. '   ' → logprob: -20.625625610351562
    10. '0' → logprob: -20.625625610351562

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '100' → logprob: -17.0000057220459
    4. '0' → logprob: -19.1250057220459
    5. '```' → logprob: -19.1250057220459
    6. '2' → logprob: -20.2500057220459
    7. '１' → logprob: -20.3750057220459
    8. '500' → logprob: -21.7500057220459
    9. 'coin' → logprob: -22.1250057220459
    10. '01' → logprob: -22.6250057220459

Token 667: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022845786064863205
    2. 'coins' → logprob: -4.52284574508667
    3. 'def' → logprob: -5.02284574508667
    4. ':' → logprob: -5.52284574508667
    5. ' coins' → logprob: -7.77284574508667
    6. 'change' → logprob: -8.647846221923828
    7. ':
' → logprob: -9.022846221923828
    8. '```' → logprob: -9.772846221923828
    9. ' denominations' → logprob: -9.897846221923828
    10. 'pieces' → logprob: -10.147846221923828

Token 668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011608166620135307
    2. 'def' → logprob: -4.761608123779297
    3. 'coins' → logprob: -5.886608123779297
    4. '```' → logprob: -9.886608123779297
    5. 'pieces' → logprob: -10.511608123779297
    6. 'coin' → logprob: -10.636608123779297
    7. ' coins' → logprob: -10.636608123779297
    8. 'amount' → logprob: -11.136608123779297
    9. 'change' → logprob: -11.386608123779297
    10. 'den' → logprob: -11.761608123779297

Token 669: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09216958284378052
    2. 'coins' → logprob: -2.8421695232391357
    3. ' coins' → logprob: -3.8421695232391357
    4. 'def' → logprob: -5.092169761657715
    5. ' denominations' → logprob: -7.092169761657715
    6. '```' → logprob: -7.967169761657715
    7. 'dp' → logprob: -8.342169761657715
    8. 'tokens' → logprob: -8.467169761657715
    9. 'coin' → logprob: -8.592169761657715
    10. ' def' → logprob: -9.717169761657715

Token 670: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5362152457237244
    2. 'def' → logprob: -1.1612153053283691
    3. 'coins' → logprob: -2.536215305328369
    4. ' coins' → logprob: -4.286215305328369
    5. ' def' → logprob: -5.286215305328369
    6. 'change' → logprob: -7.036215305328369
    7. ' denominations' → logprob: -7.036215305328369
    8. 'coin' → logprob: -7.286215305328369
    9. 'dp' → logprob: -8.286214828491211
    10. 'den' → logprob: -8.286214828491211

Token 671: 'era' (ID: 2060)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08946521580219269
    2. 'te' → logprob: -3.3394651412963867
    3. 'def' → logprob: -5.089465141296387
    4. 'stack' → logprob: -5.339465141296387
    5. '   ' → logprob: -5.464465141296387
    6. 'ystem' → logprob: -5.589465141296387
    7. 'olutions' → logprob: -5.589465141296387
    8. 'table' → logprob: -5.839465141296387
    9. 'td' → logprob: -6.089465141296387
    10. 'uccess' → logprob: -6.339465141296387

Token 672: ' utilisée' (ID: 106548)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rv' → logprob: -1.383251667022705
    2. '   ' → logprob: -1.758251667022705
    3. 'def' → logprob: -2.008251667022705
    4. 'r' → logprob: -2.008251667022705
    5. 't' → logprob: -2.383251667022705
    6. ' ' → logprob: -3.633251667022705
    7. 'impl' → logprob: -4.133251667022705
    8. 'nt' → logprob: -4.133251667022705
    9. 'rc' → logprob: -4.633251667022705
    10. 'use' → logprob: -4.633251667022705

Token 673: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5925019979476929
    2. 'def' → logprob: -0.8425019979476929
    3. ' ' → logprob: -5.467502117156982
    4. ':' → logprob: -5.592502117156982
    5. ' =' → logprob: -5.592502117156982
    6. '(' → logprob: -6.592502117156982
    7. '100' → logprob: -6.842502117156982
    8. ' :' → logprob: -7.592502117156982
    9. ' def' → logprob: -7.967502117156982
    10. '  ' → logprob: -8.342501640319824

Token 674: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.32743990421295166
    2. 'r' → logprob: -2.327439785003662
    3. 'don' → logprob: -3.202439785003662
    4. 'le' → logprob: -3.327439785003662
    5. ' rendre' → logprob: -3.577439785003662
    6. 'cal' → logprob: -4.327439785003662
    7. 'faire' → logprob: -4.452439785003662
    8. 'la' → logprob: -4.702439785003662
    9. 'l' → logprob: -5.202439785003662
    10. 'sim' → logprob: -5.327439785003662

Token 675: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.15921056270599365
    2. 'r' → logprob: -2.659210681915283
    3. 'ation' → logprob: -3.284210681915283
    4. 'ate' → logprob: -4.784210681915283
    5. 'def' → logprob: -4.784210681915283
    6. 'ration' → logprob: -4.784210681915283
    7. 'on' → logprob: -5.534210681915283
    8. 'te' → logprob: -5.784210681915283
    9. 'tion' → logprob: -6.784210681915283
    10. 'f' → logprob: -6.909210681915283

Token 676: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2319560050964355
    2. ' la' → logprob: -1.3569560050964355
    3. ' le' → logprob: -1.6069560050964355
    4. 'la' → logprob: -2.4819560050964355
    5. 'def' → logprob: -3.1069560050964355
    6. ' les' → logprob: -3.6069560050964355
    7. 'change' → logprob: -3.6069560050964355
    8. 'les' → logprob: -4.1069560050964355
    9. 'amount' → logprob: -4.9819560050964355
    10. ' ' → logprob: -5.3569560050964355

Token 677: ' monnaie' (ID: 168963)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.09728287905454636
    2. 'def' → logprob: -3.097282886505127
    3. ' change' → logprob: -4.222282886505127
    4. 'distribution' → logprob: -4.597282886505127
    5. 'mon' → logprob: -5.472282886505127
    6. 'r' → logprob: -5.722282886505127
    7. 'mont' → logprob: -5.972282886505127
    8. 'payment' → logprob: -6.222282886505127
    9. ' monnaie' → logprob: -6.597282886505127
    10. 'amount' → logprob: -6.972282886505127

Token 678: ' rend' (ID: 15016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12169068306684494
    2. '(co' → logprob: -2.7466907501220703
    3. '   ' → logprob: -3.9966907501220703
    4. '(amount' → logprob: -4.37169075012207
    5. '(' → logprob: -4.87169075012207
    6. 'coins' → logprob: -5.49669075012207
    7. 'change' → logprob: -6.37169075012207
    8. '(b' → logprob: -6.49669075012207
    9. ':' → logprob: -6.49669075012207
    10. '(change' → logprob: -7.12169075012207

Token 679: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.008099019527435303
    2. 'u' → logprob: -5.13309907913208
    3. 'ie' → logprob: -7.63309907913208
    4. 'er' → logprob: -8.258098602294922
    5. 'e' → logprob: -8.633098602294922
    6. 're' → logprob: -9.133098602294922
    7. '
' → logprob: -9.133098602294922
    8. 'r' → logprob: -9.633098602294922
    9. 'uer' → logprob: -9.633098602294922
    10. 'rée' → logprob: -9.633098602294922

Token 680: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.586456835269928
    2. 'def' → logprob: -0.961456835269928
    3. 'coins' → logprob: -2.961456775665283
    4. 'change' → logprob: -4.961456775665283
    5. 'den' → logprob: -6.961456775665283
    6. 'coin' → logprob: -7.336456775665283
    7. '```' → logprob: -8.336457252502441
    8. ' coins' → logprob: -9.086457252502441
    9. 'pieces' → logprob: -9.461457252502441
    10. ':
' → logprob: -9.586457252502441

Token 681: ' la' (ID: 557)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8735727667808533
    2. 'les' → logprob: -1.498572826385498
    3. 'le' → logprob: -2.373572826385498
    4. 'la' → logprob: -2.873572826385498
    5. 'un' → logprob: -3.498572826385498
    6. 'une' → logprob: -3.748572826385498
    7. ' les' → logprob: -3.873572826385498
    8. 'exact' → logprob: -3.873572826385498
    9. 'def' → logprob: -4.373572826385498
    10. 'l' → logprob: -4.373572826385498

Token 682: ' devise' (ID: 102648)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17729780077934265
    2. '```' → logprob: -3.302297830581665
    3. 'plus' → logprob: -3.677297830581665
    4. '100' → logprob: -3.802297830581665
    5. '500' → logprob: -4.802297592163086
    6. 'piece' → logprob: -5.177297592163086
    7. 'pi' → logprob: -5.302297592163086
    8. 'moins' → logprob: -5.677297592163086
    9. 'best' → logprob: -5.802297592163086
    10. 'dé' → logprob: -6.052297592163086

Token 683: ' jap' (ID: 59677)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5281210541725159
    2. ':' → logprob: -1.403120994567871
    3. 'def' → logprob: -2.278120994567871
    4. 'coins' → logprob: -3.903120994567871
    5. ':
' → logprob: -4.528120994567871
    6. ' :' → logprob: -5.403120994567871
    7. ' =' → logprob: -5.653120994567871
    8. ',' → logprob: -5.778120994567871
    9. ' ' → logprob: -6.153120994567871
    10. ' denominations' → logprob: -6.403120994567871

Token 684: 'onaise' (ID: 172855)
  Prédit: 'onaise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onaise' → logprob: -0.31680402159690857
    2. 'p' → logprob: -1.941804051399231
    3. 'ap' → logprob: -2.9418039321899414
    4. '```' → logprob: -3.6918039321899414
    5. 'ana' → logprob: -3.8168039321899414
    6. 'aise' → logprob: -5.066803932189941
    7. 'onnaise' → logprob: -5.441803932189941
    8. '#' → logprob: -5.941803932189941
    9. 'on' → logprob: -6.191803932189941
    10. ''''' → logprob: -7.191803932189941

Token 685: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5096707344055176
    2. 'coins' → logprob: -1.2596707344055176
    3. 'def' → logprob: -2.3846707344055176
    4. 'den' → logprob: -4.384670734405518
    5. 'coin' → logprob: -5.509670734405518
    6. 'CO' → logprob: -6.884670734405518
    7. 'dp' → logprob: -7.134670734405518
    8. ':' → logprob: -7.384670734405518
    9. ':
' → logprob: -7.634670734405518
    10. ' coins' → logprob: -7.634670734405518

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006143034435808659
    2. 'def' → logprob: -5.506143093109131
    3. 'coins' → logprob: -6.256143093109131
    4. ' coins' → logprob: -9.631142616271973
    5. 'change' → logprob: -10.756142616271973
    6. '   ' → logprob: -11.381142616271973
    7. 'coin' → logprob: -11.631142616271973
    8. ' def' → logprob: -12.131142616271973
    9. 'pieces' → logprob: -12.256142616271973
    10. '	def' → logprob: -12.381142616271973

Token 687: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004295045975595713
    2. 'def' → logprob: -6.2542948722839355
    3. 'coins' → logprob: -6.3792948722839355
    4. ' coins' → logprob: -7.6292948722839355
    5. ' denominations' → logprob: -9.379295349121094
    6. 'coin' → logprob: -10.379295349121094
    7. '   ' → logprob: -11.129295349121094
    8. ' def' → logprob: -11.254295349121094
    9. 'tokens' → logprob: -11.629295349121094
    10. '```' → logprob: -12.129295349121094

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2868289053440094
    2. '=' → logprob: -1.411828875541687
    3. 'ult' → logprob: -5.661828994750977
    4. 't' → logprob: -6.536828994750977
    5. 's' → logprob: -7.286828994750977
    6. 'ults' → logprob: -10.786828994750977
    7. '=[]' → logprob: -11.786828994750977
    8. 'ts' → logprob: -11.911828994750977
    9. '=[]
' → logprob: -12.161828994750977
    10. 'ULT' → logprob: -13.286828994750977

Token 689: ' {' (ID: 354)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47838446497917175
    2. '{}' → logprob: -0.9783844947814941
    3. 'collections' → logprob: -5.478384494781494
    4. '[' → logprob: -9.478384017944336
    5. '[]
' → logprob: -10.853384017944336
    6. '{' → logprob: -11.353384017944336
    7. '{}
' → logprob: -11.853384017944336
    8. '[]}' → logprob: -12.978384017944336
    9. ' []' → logprob: -13.353384017944336
    10. 'dict' → logprob: -14.228384017944336

Token 690: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0004778592265211046
    2. '1' → logprob: -7.7504777908325195
    3. '   ' → logprob: -10.50047779083252
    4. ' ' → logprob: -11.87547779083252
    5. '500' → logprob: -12.12547779083252
    6. 'k' → logprob: -12.75047779083252
    7. '}' → logprob: -13.62547779083252
    8. '  ' → logprob: -13.87547779083252
    9. '       ' → logprob: -15.37547779083252
    10. '    ' → logprob: -15.50047779083252

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012614254374057055
    2. ':' → logprob: -6.751261234283447
    3. ',' → logprob: -10.001261711120605
    4. '000' → logprob: -11.126261711120605
    5. '   ' → logprob: -11.626261711120605
    6. ' :' → logprob: -12.001261711120605
    7. '00' → logprob: -12.126261711120605
    8. ' ' → logprob: -12.751261711120605
    9. '```' → logprob: -13.501261711120605
    10. '
' → logprob: -13.876261711120605

Token 692: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9981420336989686e-05
    2. ' :' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.875020027160645
    4. ':
' → logprob: -16.000019073486328
    5. ':return' → logprob: -16.250019073486328
    6. ':-' → logprob: -16.375019073486328
    7. '=' → logprob: -16.625019073486328
    8. ':[' → logprob: -17.500019073486328
    9. '```' → logprob: -17.625019073486328
    10. ':int' → logprob: -17.625019073486328

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2835996747016907
    2. 'amount' → logprob: -1.408599615097046
    3. ' amount' → logprob: -7.533599853515625
    4. ' ' → logprob: -7.783599853515625
    5. '(amount' → logprob: -7.783599853515625
    6. '(' → logprob: -8.283599853515625
    7. 'float' → logprob: -8.908599853515625
    8. 'int' → logprob: -8.908599853515625
    9. '100' → logprob: -9.158599853515625
    10. '1' → logprob: -9.283599853515625

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003942112671211362
    2. ',
' → logprob: -8.500393867492676
    3. '}' → logprob: -9.000393867492676
    4. ' ,' → logprob: -10.000393867492676
    5. '   ' → logprob: -11.000393867492676
    6. '100' → logprob: -13.000393867492676
    7. '    ' → logprob: -14.625393867492676
    8. ' ' → logprob: -14.750393867492676
    9. ')' → logprob: -15.000393867492676
    10. ',
' → logprob: -15.000393867492676

Token 695: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0019316127290949225
    2. ' ' → logprob: -6.251931667327881
    3. '  ' → logprob: -13.626931190490723
    4. '5' → logprob: -14.126931190490723
    5. '   ' → logprob: -14.876931190490723
    6. '
' → logprob: -15.251931190490723
    7. '	' → logprob: -15.376931190490723
    8. '    ' → logprob: -16.25193214416504
    9. '50' → logprob: -16.50193214416504
    10. '     ' → logprob: -17.62693214416504

Token 696: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0009145628428086638
    2. ' ' → logprob: -7.000914573669434
    3. '  ' → logprob: -13.750914573669434
    4. '5' → logprob: -13.750914573669434
    5. '   ' → logprob: -15.250914573669434
    6. '	' → logprob: -15.500914573669434
    7. '
' → logprob: -15.625914573669434
    8. '50' → logprob: -16.125913619995117
    9. '    ' → logprob: -16.500913619995117
    10. '  
' → logprob: -17.563413619995117

Token 697: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262408584356308
    2. ',' → logprob: -1.601240873336792
    3. ':,' → logprob: -7.476240634918213
    4. '100' → logprob: -9.226241111755371
    5. ' ,' → logprob: -9.726241111755371
    6. ' :' → logprob: -10.476241111755371
    7. ',
' → logprob: -10.851241111755371
    8. '   ' → logprob: -11.101241111755371
    9. '1' → logprob: -11.351241111755371
    10. ' ' → logprob: -11.726241111755371

Token 698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001984146365430206
    2. '1' → logprob: -8.875198364257812
    3. ' ' → logprob: -9.750198364257812
    4. '100' → logprob: -16.375198364257812
    5. '}' → logprob: -16.750198364257812
    6. '   ' → logprob: -17.125198364257812
    7. '  ' → logprob: -17.625198364257812
    8. '

' → logprob: -18.125198364257812
    9. '2' → logprob: -18.125198364257812
    10. '```' → logprob: -18.250198364257812

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001217813478433527
    2. ' ,' → logprob: -9.8751220703125
    3. ',
' → logprob: -10.0001220703125
    4. '   ' → logprob: -10.7501220703125
    5. '}' → logprob: -13.6251220703125
    6. '100' → logprob: -14.0001220703125
    7. ',
' → logprob: -15.1251220703125
    8. '    ' → logprob: -15.3751220703125
    9. ' ' → logprob: -15.5001220703125
    10. '```' → logprob: -15.6251220703125

Token 700: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0055678896605968475
    2. ' ' → logprob: -5.255568027496338
    3. '50' → logprob: -8.00556755065918
    4. '   ' → logprob: -15.13056755065918
    5. '    ' → logprob: -16.00556755065918
    6. '  ' → logprob: -17.38056755065918
    7. '1' → logprob: -17.50556755065918
    8. '150' → logprob: -18.38056755065918
    9. '250' → logprob: -18.75556755065918
    10. '	' → logprob: -18.88056755065918

Token 701: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -11.375021934509277
    3. '50' → logprob: -11.500021934509277
    4. '   ' → logprob: -15.625021934509277
    5. '	' → logprob: -17.750022888183594
    6. '1' → logprob: -18.375022888183594
    7. '  ' → logprob: -18.375022888183594
    8. '    ' → logprob: -18.500022888183594
    9. '150' → logprob: -19.250022888183594
    10. '10' → logprob: -19.500022888183594

Token 702: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011613350361585617
    2. ':' → logprob: -4.511613368988037
    3. '   ' → logprob: -8.386612892150879
    4. ' ,' → logprob: -8.636612892150879
    5. ',
' → logprob: -9.511612892150879
    6. ':,' → logprob: -10.136612892150879
    7. ',:' → logprob: -11.636612892150879
    8. '100' → logprob: -11.886612892150879
    9. ' ' → logprob: -12.136612892150879
    10. '0' → logprob: -12.261612892150879

Token 703: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '1' → logprob: -13.625016212463379
    4. '50' → logprob: -17.375015258789062
    5. '   ' → logprob: -19.000015258789062
    6. '}' → logprob: -19.375015258789062
    7. '
' → logprob: -20.250015258789062
    8. '  ' → logprob: -20.500015258789062
    9. '=' → logprob: -20.625015258789062
    10. '100' → logprob: -21.000015258789062

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011808603449026123
    2. ',
' → logprob: -9.500118255615234
    3. ' ,' → logprob: -10.500118255615234
    4. '50' → logprob: -11.750118255615234
    5. '   ' → logprob: -12.125118255615234
    6. '500' → logprob: -13.875118255615234
    7. ' ' → logprob: -15.125118255615234
    8. '100' → logprob: -15.375118255615234
    9. '	' → logprob: -15.500118255615234
    10. '```' → logprob: -15.500118255615234

Token 705: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0619712732732296
    2. ' ' → logprob: -2.8119711875915527
    3. '    ' → logprob: -13.436971664428711
    4. '   ' → logprob: -14.061971664428711
    5. ' ' → logprob: -14.686971664428711
    6. '5' → logprob: -15.061971664428711
    7. '  ' → logprob: -15.061971664428711
    8. '	' → logprob: -15.436971664428711
    9. '        ' → logprob: -17.31197166442871
    10. '     ' → logprob: -17.56197166442871

Token 706: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0005538671393878758
    2. ' ' → logprob: -7.500554084777832
    3. '5' → logprob: -14.625554084777832
    4. '   ' → logprob: -14.875554084777832
    5. '	' → logprob: -17.000553131103516
    6. '10' → logprob: -17.125553131103516
    7. '  ' → logprob: -17.500553131103516
    8. '    ' → logprob: -17.625553131103516
    9. '1' → logprob: -17.875553131103516
    10. '20' → logprob: -18.125553131103516

Token 707: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.491498531133402e-06
    2. ' :' → logprob: -11.875009536743164
    3. '0' → logprob: -14.000009536743164
    4. '   ' → logprob: -14.875009536743164
    5. '=' → logprob: -15.125009536743164
    6. ',' → logprob: -15.500009536743164
    7. ':,' → logprob: -16.250009536743164
    8. ':return' → logprob: -16.250009536743164
    9. '}:' → logprob: -16.375009536743164
    10. '```' → logprob: -16.625009536743164

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '50' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '=' → logprob: -18.500001907348633
    6. '  ' → logprob: -19.375001907348633
    7. '     ' → logprob: -20.000001907348633
    8. '00' → logprob: -20.625001907348633
    9. '    ' → logprob: -20.625001907348633
    10. '
' → logprob: -20.625001907348633

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.08944896562025e-05
    2. ' ,' → logprob: -10.125081062316895
    3. ':' → logprob: -10.500081062316895
    4. ',
' → logprob: -11.625081062316895
    5. '   ' → logprob: -13.000081062316895
    6. '0' → logprob: -14.750081062316895
    7. ' ' → logprob: -15.000081062316895
    8. ':,' → logprob: -15.375081062316895
    9. '```' → logprob: -15.625081062316895
    10. '	' → logprob: -15.625081062316895

Token 710: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.000085830688477
    4. '20' → logprob: -17.250085830688477
    5. '1' → logprob: -17.812585830688477
    6. '```' → logprob: -18.125085830688477
    7. '۱۰' → logprob: -18.937585830688477
    8. '１０' → logprob: -19.062585830688477
    9. '100' → logprob: -19.250085830688477
    10. '  ' → logprob: -19.312585830688477

Token 711: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '20' → logprob: -18.625
    4. '   ' → logprob: -18.75
    5. '100' → logprob: -19.375
    6. '۱۰' → logprob: -20.0
    7. '```' → logprob: -20.3125
    8. '１０' → logprob: -20.4375
    9. '1' → logprob: -20.5
    10. '5' → logprob: -20.5625

Token 712: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3856492842023727e-06
    2. ' :' → logprob: -14.125000953674316
    3. '0' → logprob: -15.250000953674316
    4. '=' → logprob: -15.875000953674316
    5. ':return' → logprob: -16.125001907348633
    6. ',' → logprob: -17.125001907348633
    7. '}:' → logprob: -17.250001907348633
    8. '```' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '1' → logprob: -17.750001907348633

Token 713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.62500762939453
    4. '  ' → logprob: -16.87500762939453
    5. '=' → logprob: -17.25000762939453
    6. '```' → logprob: -18.12500762939453
    7. '    ' → logprob: -18.37500762939453
    8. '     ' → logprob: -18.37500762939453
    9. '
' → logprob: -19.43750762939453
    10. '       ' → logprob: -19.50000762939453

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003544118662830442
    2. ':' → logprob: -8.625354766845703
    3. ' ,' → logprob: -8.875354766845703
    4. ',
' → logprob: -10.875354766845703
    5. '   ' → logprob: -11.625354766845703
    6. '       ' → logprob: -13.250354766845703
    7. '500' → logprob: -13.875354766845703
    8. '=' → logprob: -14.625354766845703
    9. '```' → logprob: -14.625354766845703
    10. '	' → logprob: -14.750354766845703

Token 715: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '1' → logprob: -16.75023078918457
    4. '   ' → logprob: -17.00023078918457
    5. '    ' → logprob: -18.37523078918457
    6. '```' → logprob: -18.37523078918457
    7. '  ' → logprob: -19.12523078918457
    8. '	' → logprob: -19.62523078918457
    9. ' ' → logprob: -19.75023078918457
    10. '۵' → logprob: -20.25023078918457

Token 716: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '1' → logprob: -18.125
    4. '   ' → logprob: -19.875
    5. '```' → logprob: -20.5
    6. '  ' → logprob: -21.25
    7. '５' → logprob: -21.25
    8. '50' → logprob: -21.375
    9. '05' → logprob: -21.5
    10. '۵' → logprob: -21.625

Token 717: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.723352049040841e-06
    2. ' :' → logprob: -12.500004768371582
    3. '=' → logprob: -14.625004768371582
    4. '1' → logprob: -15.750004768371582
    5. ':return' → logprob: -16.375003814697266
    6. '0' → logprob: -16.875003814697266
    7. ':
' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. '}:' → logprob: -18.000003814697266

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '1' → logprob: -19.0
    4. '=' → logprob: -20.75
    5. '   ' → logprob: -21.125
    6. '۰' → logprob: -21.125
    7. '```' → logprob: -21.625
    8. '  ' → logprob: -21.625
    9. '00' → logprob: -22.0
    10. '０' → logprob: -22.5625

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000520981615409255
    2. ':' → logprob: -7.750521183013916
    3. ' ,' → logprob: -9.625520706176758
    4. '   ' → logprob: -11.500520706176758
    5. ',
' → logprob: -11.625520706176758
    6. '1' → logprob: -14.000520706176758
    7. ' ' → logprob: -14.625520706176758
    8. '```' → logprob: -14.875520706176758
    9. '    ' → logprob: -15.000520706176758
    10. ':,' → logprob: -15.000520706176758

Token 720: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -19.12510871887207
    4. '   ' → logprob: -19.37510871887207
    5. '100' → logprob: -20.62510871887207
    6. '１' → logprob: -20.75010871887207
    7. '0' → logprob: -21.62510871887207
    8. '{' → logprob: -22.18760871887207
    9. '	' → logprob: -22.25010871887207
    10. '2' → logprob: -22.31260871887207

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '１' → logprob: -22.375
    4. '```' → logprob: -22.875
    5. '   ' → logprob: -23.375
    6. '100' → logprob: -24.375
    7. '۱' → logprob: -24.875
    8. '0' → logprob: -25.375
    9. '4' → logprob: -25.5
    10. '	' → logprob: -25.625

Token 722: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018293576315045357
    2. '}' → logprob: -4.018293380737305
    3. '}:' → logprob: -9.018293380737305
    4. '}=' → logprob: -12.018293380737305
    5. '}
' → logprob: -12.393293380737305
    6. ' :' → logprob: -12.768293380737305
    7. ' }' → logprob: -13.018293380737305
    8. ':return' → logprob: -13.393293380737305
    9. '=' → logprob: -13.643293380737305
    10. ':
' → logprob: -14.143293380737305

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '}' → logprob: -15.125007629394531
    4. '=' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.50000762939453
    6. '1' → logprob: -18.18750762939453
    7. '۰' → logprob: -18.18750762939453
    8. '```' → logprob: -18.68750762939453
    9. '  ' → logprob: -18.93750762939453
    10. ')' → logprob: -19.12500762939453

Token 724: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.014613552019000053
    2. '   ' → logprob: -4.389613628387451
    3. '}
' → logprob: -6.514613628387451
    4. ',' → logprob: -7.514613628387451
    5. ' }' → logprob: -9.889613151550293
    6. ')' → logprob: -11.764613151550293
    7. ',
' → logprob: -12.389613151550293
    8. '}
' → logprob: -12.639613151550293
    9. '	' → logprob: -12.889613151550293
    10. '       ' → logprob: -13.389613151550293

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012011817889288068
    2. 'amount' → logprob: -7.376201152801514
    3. 'for' → logprob: -8.126201629638672
    4. ' for' → logprob: -9.001201629638672
    5. ' amount' → logprob: -9.376201629638672
    6. 'amt' → logprob: -10.251201629638672
    7. '   ' → logprob: -11.376201629638672
    8. 'coins' → logprob: -12.501201629638672
    9. 'coin' → logprob: -13.001201629638672
    10. 'remaining' → logprob: -13.126201629638672

Token 726: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006465844344347715
    2. 'remaining' → logprob: -5.256465911865234
    3. 'remain' → logprob: -7.381465911865234
    4. 'coins' → logprob: -7.881465911865234
    5. 'rest' → logprob: -9.756465911865234
    6. 'rem' → logprob: -9.881465911865234
    7. '   ' → logprob: -10.131465911865234
    8. 'coin' → logprob: -10.256465911865234
    9. ' for' → logprob: -11.006465911865234
    10. 'amount' → logprob: -11.756465911865234

Token 727: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.14092664420604706
    2. 'c' → logprob: -2.6409265995025635
    3. ' coin' → logprob: -2.8909265995025635
    4. ' c' → logprob: -6.515926837921143
    5. ' denom' → logprob: -7.140926837921143
    6. 'd' → logprob: -7.265926837921143
    7. 'den' → logprob: -7.640926837921143
    8. 'v' → logprob: -7.890926837921143
    9. 'val' → logprob: -8.265926361083984
    10. 'value' → logprob: -8.390926361083984

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14299312233924866
    2. 'in' → logprob: -2.017993211746216
    3. ' ' → logprob: -8.267992973327637
    4. ',' → logprob: -10.142992973327637
    5. '	in' → logprob: -12.767992973327637
    6. ' i' → logprob: -13.017992973327637
    7. '  ' → logprob: -13.017992973327637
    8. ' ,' → logprob: -13.017992973327637
    9. 'i' → logprob: -13.642992973327637
    10. 'inth' → logprob: -14.142992973327637

Token 729: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.652451464906335e-05
    2. 'sorted' → logprob: -11.750016212463379
    3. ' [' → logprob: -12.000016212463379
    4. '(' → logprob: -13.750016212463379
    5. '100' → logprob: -14.375016212463379
    6. '   ' → logprob: -14.625016212463379
    7. 're' → logprob: -15.750016212463379
    8. '([' → logprob: -16.375017166137695
    9. ' ' → logprob: -17.375017166137695
    10. '[::-' → logprob: -17.500017166137695

Token 730: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. '10' → logprob: -18.625
    4. '#' → logprob: -18.875
    5. '[' → logprob: -19.375
    6. '500' → logprob: -19.5
    7. 'coin' → logprob: -19.75
    8. ']' → logprob: -19.75
    9. '
' → logprob: -19.75
    10. '１００' → logprob: -20.125

Token 731: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.00000286102295
    3. '000' → logprob: -14.50000286102295
    4. ' ' → logprob: -16.250003814697266
    5. '00' → logprob: -17.625003814697266
    6. ' ,' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '۰' → logprob: -18.875003814697266
    9. '০' → logprob: -19.562503814697266
    10. '  ' → logprob: -19.562503814697266

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001984146365430206
    2. ' ,' → logprob: -8.875198364257812
    3. ',
' → logprob: -9.875198364257812
    4. '100' → logprob: -13.000198364257812
    5. '   ' → logprob: -13.125198364257812
    6. ' ' → logprob: -13.875198364257812
    7. ']' → logprob: -14.250198364257812
    8. '0' → logprob: -15.125198364257812
    9. ',

' → logprob: -15.500198364257812
    10. '  ' → logprob: -15.875198364257812

Token 733: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0002659847668837756
    2. ' ' → logprob: -8.250266075134277
    3. '   ' → logprob: -13.000266075134277
    4. '  ' → logprob: -13.125266075134277
    5. '5' → logprob: -15.625266075134277
    6. '    ' → logprob: -16.37526512145996
    7. '
' → logprob: -16.62526512145996
    8. '	' → logprob: -16.87526512145996
    9. '50' → logprob: -17.50026512145996
    10. '     ' → logprob: -18.06276512145996

Token 734: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -16.500001907348633
    4. '  ' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '5' → logprob: -17.625001907348633
    7. '50' → logprob: -17.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '100' → logprob: -19.250001907348633
    10. '{' → logprob: -19.312501907348633

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022224606946110725
    2. ' ,' → logprob: -6.127222537994385
    3. '100' → logprob: -11.252222061157227
    4. '   ' → logprob: -11.377222061157227
    5. ',
' → logprob: -11.502222061157227
    6. ' ' → logprob: -14.127222061157227
    7. '  ' → logprob: -14.502222061157227
    8. '    ' → logprob: -15.002222061157227
    9. ']' → logprob: -15.252222061157227
    10. '	' → logprob: -15.502222061157227

Token 736: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.500009536743164
    4. '50' → logprob: -20.125009536743164
    5. '	' → logprob: -20.500009536743164
    6. '500' → logprob: -20.875009536743164
    7. '  ' → logprob: -20.875009536743164
    8. '１００' → logprob: -21.125009536743164
    9. '```' → logprob: -21.500009536743164
    10. '1' → logprob: -21.625009536743164

Token 737: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.250009536743164
    4. '  ' → logprob: -19.125009536743164
    5. '	' → logprob: -19.250009536743164
    6. '50' → logprob: -19.375009536743164
    7. '１００' → logprob: -20.500009536743164
    8. '10' → logprob: -20.625009536743164
    9. '1' → logprob: -21.000009536743164
    10. '    ' → logprob: -21.250009536743164

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000340945553034544
    2. ' ,' → logprob: -8.125341415405273
    3. '50' → logprob: -10.125341415405273
    4. ',
' → logprob: -12.875341415405273
    5. '   ' → logprob: -13.500341415405273
    6. ' ' → logprob: -14.500341415405273
    7. '  ' → logprob: -16.250341415405273
    8. '‌,' → logprob: -16.500341415405273
    9. ']' → logprob: -16.625341415405273
    10. '	' → logprob: -16.875341415405273

Token 739: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.012605718336999416
    2. ' ' → logprob: -4.387605667114258
    3. '   ' → logprob: -9.512605667114258
    4. '    ' → logprob: -11.262605667114258
    5. '  ' → logprob: -12.012605667114258
    6. '	' → logprob: -13.637605667114258
    7. '5' → logprob: -13.762605667114258
    8. '        ' → logprob: -15.262605667114258
    9. '     ' → logprob: -15.762605667114258
    10. ',' → logprob: -16.012605667114258

Token 740: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -18.25
    5. '５０' → logprob: -19.5
    6. '	' → logprob: -20.25
    7. '500' → logprob: -20.5
    8. '5' → logprob: -20.875
    9. '  ' → logprob: -21.125
    10. '10' → logprob: -21.25

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002149802603526041
    2. ' ,' → logprob: -8.500214576721191
    3. '10' → logprob: -11.750214576721191
    4. '   ' → logprob: -12.875214576721191
    5. ' ' → logprob: -15.375214576721191
    6. ',
' → logprob: -15.750214576721191
    7. '  ' → logprob: -16.250215530395508
    8. '5' → logprob: -16.250215530395508
    9. '7' → logprob: -16.375215530395508
    10. '6' → logprob: -16.375215530395508

Token 742: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.125123977661133
    4. '5' → logprob: -17.750123977661133
    5. '1' → logprob: -18.500123977661133
    6. '  ' → logprob: -20.000123977661133
    7. '```' → logprob: -20.875123977661133
    8. '    ' → logprob: -21.250123977661133
    9. '１０' → logprob: -21.250123977661133
    10. '	' → logprob: -21.375123977661133

Token 743: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -18.25
    4. '１０' → logprob: -20.375
    5. '۱۰' → logprob: -20.875
    6. '  ' → logprob: -21.25
    7. '```' → logprob: -21.625
    8. '1' → logprob: -21.75
    9. '5' → logprob: -21.75
    10. '十' → logprob: -22.25

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010622250847518444
    2. ' ,' → logprob: -6.876062393188477
    3. '5' → logprob: -10.626062393188477
    4. ',
' → logprob: -12.876062393188477
    5. '   ' → logprob: -13.501062393188477
    6. ' ' → logprob: -14.501062393188477
    7. '6' → logprob: -16.751062393188477
    8. '1' → logprob: -16.876062393188477
    9. '7' → logprob: -16.876062393188477
    10. '  ' → logprob: -16.876062393188477

Token 745: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007115975022315979
    2. ' ' → logprob: -7.250711441040039
    3. '1' → logprob: -13.500711441040039
    4. '   ' → logprob: -15.375711441040039
    5. '    ' → logprob: -17.37571144104004
    6. '  ' → logprob: -17.62571144104004
    7. '```' → logprob: -17.62571144104004
    8. ' five' → logprob: -20.00071144104004
    9. '	' → logprob: -20.12571144104004
    10. '2' → logprob: -20.31321144104004

Token 746: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '1' → logprob: -18.125
    4. '```' → logprob: -19.5
    5. '   ' → logprob: -20.875
    6. '  ' → logprob: -21.875
    7. '۵' → logprob: -21.875
    8. '
' → logprob: -22.5
    9. '５' → logprob: -22.625
    10. '٥' → logprob: -23.0

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.217951886355877e-05
    2. ' ,' → logprob: -9.750061988830566
    3. '1' → logprob: -12.625061988830566
    4. '   ' → logprob: -15.750061988830566
    5. ',
' → logprob: -15.750061988830566
    6. '4' → logprob: -16.375062942504883
    7. '```' → logprob: -17.375062942504883
    8. ' ' → logprob: -17.500062942504883
    9. '5' → logprob: -17.875062942504883
    10. ']' → logprob: -18.187562942504883

Token 748: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.875139236450195
    4. '```' → logprob: -19.750139236450195
    5. '１' → logprob: -20.875139236450195
    6. ',' → logprob: -21.125139236450195
    7. ' ' → logprob: -21.750139236450195
    8. '  ' → logprob: -22.000139236450195
    9. '۱' → logprob: -23.000139236450195
    10. '
' → logprob: -23.062639236450195

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -19.375
    4. '１' → logprob: -21.0
    5. '   ' → logprob: -22.375
    6. '100' → logprob: -23.125
    7. '१' → logprob: -23.125
    8. '۱' → logprob: -23.375
    9. '১' → logprob: -23.625
    10. '0' → logprob: -23.625

Token 750: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02713145688176155
    2. ']:
' → logprob: -3.6521315574645996
    3. ']' → logprob: -7.7771315574646
    4. ']:
' → logprob: -8.152131080627441
    5. ' ]' → logprob: -9.777131080627441
    6. '   ' → logprob: -9.777131080627441
    7. ']:

' → logprob: -13.027131080627441
    8. ':' → logprob: -13.027131080627441
    9. ']:


' → logprob: -13.777131080627441
    10. '       ' → logprob: -13.902131080627441

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050761304795742035
    2. '   ' → logprob: -3.0507612228393555
    3. ':' → logprob: -7.1757612228393555
    4. '    ' → logprob: -7.6757612228393555
    5. 'amount' → logprob: -7.8007612228393555
    6. ' amount' → logprob: -8.300761222839355
    7. '	' → logprob: -9.675761222839355
    8. ' =' → logprob: -10.425761222839355
    9. '	   ' → logprob: -10.425761222839355
    10. ' if' → logprob: -10.675761222839355

Token 752: ' res' (ID: 694)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6527513861656189
    2. 'res' (adapté à ' res') → logprob: -1.9027514457702637
    3. 'while' → logprob: -2.0277514457702637
    4. 'cnt' → logprob: -2.2777514457702637
    5. 'num' → logprob: -3.0277514457702637
    6. '   ' → logprob: -3.2777514457702637
    7. 'n' → logprob: -5.777751445770264
    8. 'q' → logprob: -5.777751445770264
    9. 'qty' → logprob: -6.777751445770264
    10. '       ' → logprob: -7.902751445770264

Token 753: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000902884581591934
    2. 'amount' → logprob: -8.000903129577637
    3. '_amount' → logprob: -8.625903129577637
    4. 'coin' → logprob: -9.125903129577637
    5. '   ' → logprob: -9.875903129577637
    6. '_coin' → logprob: -9.875903129577637
    7. '_amt' → logprob: -10.500903129577637
    8. '[count' → logprob: -10.875903129577637
    9. 'res' → logprob: -11.000903129577637
    10. 'coins' → logprob: -11.250903129577637

Token 754: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -5.080963092041202e-06
    2. 'amount' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.125004768371582
    4. ' coin' → logprob: -15.125004768371582
    5. 'c' → logprob: -16.0000057220459
    6. 'coins' → logprob: -16.1250057220459
    7. '
' → logprob: -16.3750057220459
    8. ' ' → logprob: -16.3750057220459
    9. '100' → logprob: -16.7500057220459
    10. ']' → logprob: -17.0000057220459

Token 755: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0050680795684456825
    2. ']+=' → logprob: -5.505068302154541
    3. ']=' → logprob: -7.005068302154541
    4. '=' → logprob: -9.755067825317383
    5. ' ]' → logprob: -11.505067825317383
    6. ' =' → logprob: -11.630067825317383
    7. ' +=' → logprob: -13.380067825317383
    8. '   ' → logprob: -14.005067825317383
    9. ']=(' → logprob: -14.505067825317383
    10. '+=' → logprob: -14.880067825317383

Token 756: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.10309883952140808
    2. 'amount' → logprob: -2.3530988693237305
    3. ' remainder' → logprob: -6.1030988693237305
    4. 'div' → logprob: -7.9780988693237305
    5. ' div' → logprob: -8.60309886932373
    6. ' rest' → logprob: -9.72809886932373
    7. ' rem' → logprob: -11.10309886932373
    8. 'rem' → logprob: -11.60309886932373
    9. '=' → logprob: -11.60309886932373
    10. '(amount' → logprob: -11.72809886932373

Token 757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619756355881691
    2. ' =' → logprob: -2.8119757175445557
    3. '//=' → logprob: -12.686975479125977
    4. '.=' → logprob: -12.936975479125977
    5. '＝' → logprob: -15.061975479125977
    6. ',' → logprob: -15.061975479125977
    7. '%=' → logprob: -15.186975479125977
    8. '=int' → logprob: -15.311975479125977
    9. 'div' → logprob: -15.436975479125977
    10. '<|end|>' → logprob: -15.561975479125977

Token 758: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.009371870197355747
    2. ' div' → logprob: -4.884371757507324
    3. 'amount' → logprob: -6.384371757507324
    4. ' amount' → logprob: -9.509371757507324
    5. '	div' → logprob: -13.759371757507324
    6. '   ' → logprob: -14.634371757507324
    7. '<div' → logprob: -15.509371757507324
    8. '
' → logprob: -16.13437271118164
    9. '(div' → logprob: -16.38437271118164
    10. 'division' → logprob: -16.38437271118164

Token 759: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5740180611610413
    2. 'amount' → logprob: -0.9490180611610413
    3. ' amount' → logprob: -3.0740180015563965
    4. '(amount' → logprob: -5.9490180015563965
    5. ',' → logprob: -8.699018478393555
    6. 'ision' → logprob: -9.199018478393555
    7. 'amt' → logprob: -9.324018478393555
    8. 'idend' → logprob: -9.449018478393555
    9. '_amount' → logprob: -9.574018478393555
    10. '```' → logprob: -9.824018478393555

Token 760: '(amount' (ID: 60193)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.02650185115635395
    2. '(amount' → logprob: -4.276501655578613
    3. ' amount' → logprob: -4.401501655578613
    4. '   ' → logprob: -13.276501655578613
    5. '(' → logprob: -13.651501655578613
    6. '_amount' → logprob: -15.526501655578613
    7. ' (' → logprob: -16.02650260925293
    8. 'Amount' → logprob: -16.27650260925293
    9. 'am' → logprob: -16.27650260925293
    10. '.amount' → logprob: -17.02650260925293

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3905114531517029
    2. 'amount' → logprob: -1.1405115127563477
    3. '(amount' → logprob: -6.390511512756348
    4. ' amount' → logprob: -6.890511512756348
    5. ' ,' → logprob: -7.515511512756348
    6. 'coin' → logprob: -8.390511512756348
    7. ')' → logprob: -9.015511512756348
    8. '[' → logprob: -11.265511512756348
    9. ' coin' → logprob: -12.140511512756348
    10. ',int' → logprob: -12.265511512756348

Token 762: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.000804745068307966
    2. ' coin' → logprob: -7.125804901123047
    3. 'coins' → logprob: -16.750804901123047
    4. '   ' → logprob: -17.250804901123047
    5. 'co' → logprob: -17.250804901123047
    6. ' ' → logprob: -17.500804901123047
    7. '_coin' → logprob: -17.875804901123047
    8. '.coin' → logprob: -18.375804901123047
    9. 'Coin' → logprob: -19.375804901123047
    10. '    ' → logprob: -19.625804901123047

Token 763: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ')
' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.125014305114746
    4. ' )' → logprob: -14.750014305114746
    5. '       ' → logprob: -16.000015258789062
    6. ')return' → logprob: -17.000015258789062
    7. '[' → logprob: -17.125015258789062
    8. ');' → logprob: -17.125015258789062
    9. '<|end|>' → logprob: -17.500015258789062
    10. '),' → logprob: -17.750015258789062

Token 764: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46841174364089966
    2. '   ' → logprob: -1.3434116840362549
    3. '<|end|>' → logprob: -2.718411684036255
    4. '    ' → logprob: -4.468411922454834
    5. ' return' → logprob: -4.843411922454834
    6. '        
' → logprob: -4.843411922454834
    7. 'return' → logprob: -5.343411922454834
    8. '    
' → logprob: -5.593411922454834
    9. ' 
' → logprob: -5.718411922454834
    10. '  
' → logprob: -5.968411922454834

Token 765: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021915994584560394
    2. 'return' (adapté à ' return') → logprob: -4.146915912628174
    3. ' return' → logprob: -5.146915912628174
    4. '	return' → logprob: -11.271916389465332
    5. '<|end|>' → logprob: -11.771916389465332
    6. '
' → logprob: -12.146916389465332
    7. ':return' → logprob: -12.146916389465332
    8. '       ' → logprob: -12.396916389465332
    9. '    
' → logprob: -12.771916389465332
    10. ' if' → logprob: -13.396916389465332

Token 766: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.4121114822482923e-06
    2. '{' → logprob: -13.125003814697266
    3. ' res' → logprob: -13.875003814697266
    4. '(res' → logprob: -15.000003814697266
    5. 'dict' → logprob: -17.125003814697266
    6. 'tuple' → logprob: -17.125003814697266
    7. 'collections' → logprob: -18.125003814697266
    8. '	res' → logprob: -20.375003814697266
    9. '[' → logprob: -20.875003814697266
    10. '$res' → logprob: -21.500003814697266

Token 767: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3112276494503021
    2. '
' → logprob: -1.4362276792526245
    3. '```' → logprob: -4.561227798461914
    4. '<|end|>' → logprob: -4.686227798461914
    5. ')' → logprob: -5.936227798461914
    6. 'class' → logprob: -6.186227798461914
    7. '#' → logprob: -6.436227798461914
    8. 'CO' → logprob: -6.811227798461914
    9. '    
' → logprob: -7.686227798461914
    10. '

' → logprob: -7.686227798461914

Token 768: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4785875678062439
    2. '
' → logprob: -0.9785875678062439
    3. '<|end|>' → logprob: -6.603587627410889
    4. '#' → logprob: -6.978587627410889
    5. '

' → logprob: -7.103587627410889
    6. '```' → logprob: -7.978587627410889
    7. 'class' → logprob: -8.22858715057373
    8. ')' → logprob: -8.97858715057373
    9. '    
' → logprob: -9.22858715057373
    10. '<|end|>' → logprob: -9.22858715057373

Token 769: ' coins' (ID: 28969)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.7572393417358398
    2. 'can' → logprob: -1.7572393417358398
    3. 'coin' → logprob: -2.00723934173584
    4. 'add' → logprob: -2.38223934173584
    5. 'encode' → logprob: -2.63223934173584
    6. 'dp' → logprob: -2.75723934173584
    7. 'compress' → logprob: -2.88223934173584
    8. 'coins' → logprob: -3.13223934173584
    9. 'possible' → logprob: -3.25723934173584
    10. 'update' → logprob: -3.38223934173584

Token 770: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.8535760641098022
    2. '_count' → logprob: -0.9785760641098022
    3. '_state' → logprob: -2.103576183319092
    4. '_counts' → logprob: -3.228576183319092
    5. '_counter' → logprob: -5.228576183319092
    6. '_tuple' → logprob: -5.353576183319092
    7. '_in' → logprob: -5.478576183319092
    8. '_repr' → logprob: -5.603576183319092
    9. '_states' → logprob: -5.853576183319092
    10. '_pos' → logprob: -6.103576183319092

Token 771: '_list' (ID: 4162)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.017927607521414757
    2. '_tuple' → logprob: -4.392927646636963
    3. 'count' → logprob: -6.267927646636963
    4. 'give' → logprob: -6.767927646636963
    5. 'dict' → logprob: -6.892927646636963
    6. 'counts' → logprob: -7.392927646636963
    7. 'coins' → logprob: -8.892927169799805
    8. 'vector' → logprob: -9.142927169799805
    9. 'key' → logprob: -9.517927169799805
    10. '_counts' → logprob: -9.642927169799805

Token 772: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.0019231601618230343
    2. '(' → logprob: -6.876923084259033
    3. '(count' → logprob: -7.376923084259033
    4. '(c' → logprob: -9.126923561096191
    5. '(amount' → logprob: -10.251923561096191
    6. '(state' → logprob: -10.251923561096191
    7. '(cnt' → logprob: -10.501923561096191
    8. '(piece' → logprob: -11.501923561096191
    9. '(coords' → logprob: -11.501923561096191
    10. '(p' → logprob: -12.001923561096191

Token 773: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.08367796242237091
    2. 'in' → logprob: -2.7086780071258545
    3. 'unts' → logprob: -5.208677768707275
    4. 'unt' → logprob: -6.583677768707275
    5. ')' → logprob: -6.583677768707275
    6. '(' → logprob: -7.208677768707275
    7. '{' → logprob: -7.583677768707275
    8. 'ints' → logprob: -7.583677768707275
    9. 'def' → logprob: -7.833677768707275
    10. '[' → logprob: -7.833677768707275

Token 774: '_dict' (ID: 11295)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.7046434283256531
    2. '):
' → logprob: -1.3296434879302979
    3. '):' → logprob: -1.4546434879302979
    4. '(' → logprob: -5.454643249511719
    5. ')' → logprob: -5.954643249511719
    6. ',' → logprob: -8.204643249511719
    7. '   ' → logprob: -9.079643249511719
    8. '):
' → logprob: -9.579643249511719
    9. '):

' → logprob: -10.329643249511719
    10. '(
' → logprob: -10.329643249511719

Token 775: '):
' (ID: 1883)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.07054027915000916
    2. '):' → logprob: -2.945540189743042
    3. ',' → logprob: -4.945540428161621
    4. '):
' → logprob: -5.570540428161621
    5. '(' → logprob: -5.570540428161621
    6. ')' → logprob: -7.695540428161621
    7. 'coins' → logprob: -9.445540428161621
    8. '(c' → logprob: -9.445540428161621
    9. ' coins' → logprob: -9.945540428161621
    10. ' ):' → logprob: -10.570540428161621

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020719386637210846
    2. 'coins' → logprob: -4.020719528198242
    3. 'res' → logprob: -7.520719528198242
    4. 'lst' → logprob: -7.520719528198242
    5. 'co' → logprob: -8.020719528198242
    6. 'def' → logprob: -8.270719528198242
    7. 'result' → logprob: -8.270719528198242
    8. '[' → logprob: -8.270719528198242
    9. 'return' → logprob: -9.145719528198242
    10. ' coins' → logprob: -9.270719528198242

Token 777: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05200184881687164
    2. 'return' → logprob: -4.052001953125
    3. 'coins' → logprob: -4.052001953125
    4. '[
' → logprob: -4.427001953125
    5. 'result' → logprob: -6.552001953125
    6. '   ' → logprob: -6.677001953125
    7. 'res' → logprob: -8.302001953125
    8. '[(' → logprob: -8.677001953125
    9. 'coin' → logprob: -8.927001953125
    10. '[count' → logprob: -9.052001953125

Token 778: ' Retour' (ID: 146830)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.1450334787368774
    2. 'res' → logprob: -1.2700334787368774
    3. 'lst' → logprob: -1.2700334787368774
    4. 'result' → logprob: -2.770033359527588
    5. 'return' → logprob: -3.020033359527588
    6. 'ret' → logprob: -5.770033359527588
    7. 'pieces' → logprob: -6.395033359527588
    8. '   ' → logprob: -7.145033359527588
    9. 'l' → logprob: -7.270033359527588
    10. 'co' → logprob: -7.520033359527588

Token 779: 'ne' (ID: 611)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.331681728363037
    2. ' tuple' → logprob: -1.331681728363037
    3. 'sum' → logprob: -2.081681728363037
    4. '[' → logprob: -2.331681728363037
    5. ' list' → logprob: -2.581681728363037
    6. ' sum' → logprob: -2.706681728363037
    7. 'tuple' → logprob: -4.206681728363037
    8. 'list' → logprob: -4.456681728363037
    9. ' [(' → logprob: -4.581681728363037
    10. ' ' → logprob: -4.706681728363037

Token 780: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009726574644446373
    2. '[
' → logprob: -5.384726524353027
    3. '[(' → logprob: -5.509726524353027
    4. '[count' → logprob: -7.509726524353027
    5. '[c' → logprob: -9.009726524353027
    6. 'sum' → logprob: -9.509726524353027
    7. '[]' → logprob: -9.634726524353027
    8. '[col' → logprob: -10.134726524353027
    9. 'coins' → logprob: -10.509726524353027
    10. '[s' → logprob: -10.884726524353027

Token 781: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038587480783462524
    2. '[
' → logprob: -3.5385875701904297
    3. 'tuple' → logprob: -5.53858757019043
    4. 'list' → logprob: -5.78858757019043
    5. '[]' → logprob: -6.53858757019043
    6. '[(' → logprob: -8.41358757019043
    7. '[count' → logprob: -10.78858757019043
    8. 'def' → logprob: -10.91358757019043
    9. '[token' → logprob: -10.91358757019043
    10. '[]
' → logprob: -11.03858757019043

Token 782: ' du' (ID: 1462)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5918984413146973
    2. '[' → logprob: -1.2168984413146973
    3. '(' → logprob: -2.9668984413146973
    4. '   ' → logprob: -4.091898441314697
    5. '(co' → logprob: -4.091898441314697
    6. '[
' → logprob: -4.216898441314697
    7. '[]' → logprob: -4.341898441314697
    8. '([
' → logprob: -4.466898441314697
    9. 'def' → logprob: -4.591898441314697
    10. '(
' → logprob: -4.591898441314697

Token 783: ' nombre' (ID: 9733)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10716074705123901
    2. 'tuple' → logprob: -3.732160806655884
    3. 'nombre' → logprob: -4.482160568237305
    4. 'coin' → logprob: -4.732160568237305
    5. 'co' → logprob: -5.107160568237305
    6. '[]' → logprob: -5.107160568237305
    7. 'len' → logprob: -5.482160568237305
    8. 'sum' → logprob: -5.482160568237305
    9. '```' → logprob: -5.482160568237305
    10. 'count' → logprob: -5.732160568237305

Token 784: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28137919306755066
    2. '[
' → logprob: -2.031379222869873
    3. '(' → logprob: -3.031379222869873
    4. ',' → logprob: -3.906379222869873
    5. '(
' → logprob: -4.281379222869873
    6. '   ' → logprob: -4.906379222869873
    7. '(co' → logprob: -5.031379222869873
    8. 'de' → logprob: -5.156379222869873
    9. '([' → logprob: -6.281379222869873
    10. ']' → logprob: -6.531379222869873

Token 785: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.25477179884910583
    2. 'pi' → logprob: -1.5047718286514282
    3. 'pieces' → logprob: -6.504771709442139
    4. 'co' → logprob: -7.129771709442139
    5. ' pièces' → logprob: -8.504772186279297
    6. '[' → logprob: -8.754772186279297
    7. '```' → logprob: -9.129772186279297
    8. 'cha' → logprob: -10.879772186279297
    9. '0' → logprob: -11.879772186279297
    10. '   ' → logprob: -12.004772186279297

Token 786: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13729228079319
    2. '[
' → logprob: -2.1372923851013184
    3. '(co' → logprob: -5.887292385101318
    4. '[c' → logprob: -6.012292385101318
    5. '(' → logprob: -6.137292385101318
    6. '   ' → logprob: -6.512292385101318
    7. '([' → logprob: -7.887292385101318
    8. '(
' → logprob: -7.887292385101318
    9. '[count' → logprob: -9.13729190826416
    10. '([
' → logprob: -9.51229190826416

Token 787: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0584527850151062
    2. 'l' → logprob: -3.058452844619751
    3. 'coins' → logprob: -5.308452606201172
    4. '[l' → logprob: -6.683452606201172
    5. 'le' → logprob: -6.933452606201172
    6. 'ordre' → logprob: -7.058452606201172
    7. 'order' → logprob: -7.683452606201172
    8. 'coin' → logprob: -7.683452606201172
    9. '[c' → logprob: -8.808452606201172
    10. 'co' → logprob: -8.933452606201172

Token 788: ''ordre' (ID: 124753)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014564243610948324
    2. 'CO' → logprob: -7.126456260681152
    3. ''ordre' → logprob: -8.126456260681152
    4. 'ordre' → logprob: -9.126456260681152
    5. 'coin' → logprob: -9.376456260681152
    6. 'order' → logprob: -9.751456260681152
    7. '[C' → logprob: -10.376456260681152
    8. '[
' → logprob: -11.251456260681152
    9. '500' → logprob: -11.626456260681152
    10. '100' → logprob: -11.876456260681152

Token 789: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15697424113750458
    2. 'for' → logprob: -3.0319743156433105
    3. 'CO' → logprob: -3.9069743156433105
    4. '   ' → logprob: -4.1569743156433105
    5. '([' → logprob: -4.5319743156433105
    6. '(C' → logprob: -4.6569743156433105
    7. '=' → logprob: -4.6569743156433105
    8. ' =' → logprob: -4.6569743156433105
    9. 'def' → logprob: -5.1569743156433105
    10. '=[' → logprob: -5.4069743156433105

Token 790: ' CO' (ID: 10271)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -4.632542913896032e-05
    2. '[' → logprob: -10.000046730041504
    3. ' CO' → logprob: -14.500046730041504
    4. '1' → logprob: -15.625046730041504
    5. 'coin' → logprob: -16.250045776367188
    6. 'Coin' → logprob: -16.375045776367188
    7. '500' → logprob: -17.375045776367188
    8. 'coins' → logprob: -18.375045776367188
    9. '100' → logprob: -18.625045776367188
    10. 'Coins' → logprob: -19.625045776367188

Token 791: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -7.541112427134067e-05
    2. 'INS' → logprob: -9.500075340270996
    3. 'INT' → logprob: -15.250075340270996
    4. 'in' → logprob: -16.250076293945312
    5. 'N' → logprob: -16.500076293945312
    6. '_IN' → logprob: -17.000076293945312
    7. 'OIN' → logprob: -17.250076293945312
    8. 'İN' → logprob: -17.875076293945312
    9. 'I' → logprob: -18.125076293945312
    10. 'INC' → logprob: -18.750076293945312

Token 792: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -1.8670179997570813e-05
    2. 'S' → logprob: -11.250019073486328
    3. 'T' → logprob: -12.250019073486328
    4. '_types' → logprob: -15.250019073486328
    5. '_T' → logprob: -15.375019073486328
    6. 'Types' → logprob: -15.625019073486328
    7. '_' → logprob: -16.250019073486328
    8. ' TYPES' → logprob: -17.000019073486328
    9. '_TYPE' → logprob: -17.750019073486328
    10. 'YPES' → logprob: -17.875019073486328

Token 793: '
' (ID: 198)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.39033475518226624
    2. '([' → logprob: -1.7653347253799438
    3. '(' → logprob: -3.1403348445892334
    4. '[' → logprob: -3.5153348445892334
    5. 'return' → logprob: -3.6403348445892334
    6. 'def' → logprob: -3.8903348445892334
    7. '(
' → logprob: -4.390334606170654
    8. '   ' → logprob: -4.765334606170654
    9. '=' → logprob: -5.765334606170654
    10. ':' → logprob: -6.015334606170654

Token 794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25412997603416443
    2. 'def' → logprob: -2.3791298866271973
    3. 'return' → logprob: -2.6291298866271973
    4. '[' → logprob: -3.5041298866271973
    5. '(co' → logprob: -3.6291298866271973
    6. '([' → logprob: -7.004129886627197
    7. '(' → logprob: -7.629129886627197
    8. ' return' → logprob: -8.254130363464355
    9. '```' → logprob: -8.254130363464355
    10. 'coins' → logprob: -8.504130363464355

Token 795: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024825116619467735
    2. '   ' → logprob: -4.024825096130371
    3. '[' → logprob: -5.024825096130371
    4. ' return' → logprob: -9.524825096130371
    5. '[
' → logprob: -12.899825096130371
    6. 'result' → logprob: -13.524825096130371
    7. '[count' → logprob: -13.899825096130371
    8. '	return' → logprob: -14.149825096130371
    9. '[c' → logprob: -14.524825096130371
    10. 'def' → logprob: -15.149825096130371

Token 796: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018065694894175977
    2. '[
' → logprob: -9.0001802444458
    3. '[c' → logprob: -10.2501802444458
    4. '[col' → logprob: -11.7501802444458
    5. '[count' → logprob: -11.7501802444458
    6. ' [' → logprob: -13.2501802444458
    7. '[int' → logprob: -13.7501802444458
    8. '[len' → logprob: -14.2501802444458
    9. '[cnt' → logprob: -14.2501802444458
    10. '   ' → logprob: -14.6251802444458

Token 797: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -5.796184723294573e-06
    2. 'co' → logprob: -12.250005722045898
    3. ' coins' → logprob: -14.000005722045898
    4. '   ' → logprob: -16.3750057220459
    5. '(co' → logprob: -18.1250057220459
    6. 'coin' → logprob: -18.8750057220459
    7. '[' → logprob: -19.0000057220459
    8. 'Coins' → logprob: -20.2500057220459
    9. 'coal' → logprob: -20.2500057220459
    10. '	' → logprob: -20.5000057220459

Token 798: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.002993035828694701
    2. 's' → logprob: -7.002993106842041
    3. 'dict' → logprob: -7.002993106842041
    4. '[' → logprob: -7.877993106842041
    5. 'd' → logprob: -8.127992630004883
    6. 'coins' → logprob: -8.377992630004883
    7. '_co' → logprob: -9.252992630004883
    8. 'coin' → logprob: -9.877992630004883
    9. '_DICT' → logprob: -10.752992630004883
    10. '_coin' → logprob: -10.752992630004883

Token 799: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08039188385009766
    2. '.get' → logprob: -2.8303918838500977
    3. '[c' → logprob: -4.080391883850098
    4. 'get' → logprob: -7.205391883850098
    5. 'coin' → logprob: -7.830391883850098
    6. 'c' → logprob: -9.580391883850098
    7. '   ' → logprob: -10.080391883850098
    8. '(' → logprob: -10.830391883850098
    9. '[get' → logprob: -10.830391883850098
    10. '[i' → logprob: -11.080391883850098

Token 800: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7002394199371338
    2. '(c' → logprob: -0.7002394199371338
    3. '(ct' → logprob: -5.075239181518555
    4. '(x' → logprob: -7.450239181518555
    5. 'c' → logprob: -9.450239181518555
    6. '(i' → logprob: -9.825239181518555
    7. 'coin' → logprob: -9.950239181518555
    8. '(k' → logprob: -11.325239181518555
    9. '(_)' → logprob: -11.575239181518555
    10. '(co' → logprob: -11.700239181518555

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28603971004486084
    2. '(c' → logprob: -1.4110397100448608
    3. ',c' → logprob: -5.53603982925415
    4. '(' → logprob: -8.161039352416992
    5. 'c' → logprob: -8.286039352416992
    6. ' ,' → logprob: -8.536039352416992
    7. '(co' → logprob: -8.661039352416992
    8. ' (' → logprob: -11.036039352416992
    9. ')' → logprob: -12.661039352416992
    10. ',(' → logprob: -13.411039352416992

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -21.0
    4. '۰' → logprob: -21.125
    5. ')' → logprob: -21.375
    6. '(' → logprob: -22.75
    7. '00' → logprob: -22.9375
    8. '1' → logprob: -23.1875
    9. '０' → logprob: -23.375
    10. '[' → logprob: -23.5

Token 803: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025649568997323513
    2. ')]' → logprob: -6.377564907073975
    3. ' )' → logprob: -7.252564907073975
    4. '),' → logprob: -8.877565383911133
    5. '())' → logprob: -13.127565383911133
    6. ')c' → logprob: -13.252565383911133
    7. ')}' → logprob: -13.377565383911133
    8. '   ' → logprob: -13.502565383911133
    9. ')])' → logprob: -13.502565383911133
    10. '))' → logprob: -13.752565383911133

Token 804: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10064483433961868
    2. 'for' → logprob: -2.350644826889038
    3. ']' → logprob: -8.600645065307617
    4. ' or' → logprob: -9.350645065307617
    5. ')' → logprob: -9.975645065307617
    6. '   ' → logprob: -10.600645065307617
    7. ' ' → logprob: -10.725645065307617
    8. '(c' → logprob: -10.725645065307617
    9. '(co' → logprob: -11.225645065307617
    10. '	for' → logprob: -11.350645065307617

Token 805: ' c' (ID: 274)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.005234594456851482
    2. ' CO' → logprob: -5.255234718322754
    3. 'Coin' → logprob: -14.755234718322754
    4. 'coin' → logprob: -15.505234718322754
    5. 'c' → logprob: -15.880234718322754
    6. '_CO' → logprob: -17.005233764648438
    7. '   ' → logprob: -17.380233764648438
    8. ' ' → logprob: -17.880233764648438
    9. ' coin' → logprob: -17.880233764648438
    10. 'C' → logprob: -18.880233764648438

Token 806: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4796724021434784
    2. ' in' → logprob: -0.9796724319458008
    3. 'CO' → logprob: -5.229672431945801
    4. ' CO' → logprob: -8.4796724319458
    5. '_CO' → logprob: -11.7296724319458
    6. ' ' → logprob: -12.9796724319458
    7. ']' → logprob: -14.1046724319458
    8. '   ' → logprob: -14.1046724319458
    9. 'c' → logprob: -14.2296724319458
    10. '  ' → logprob: -14.4796724319458

Token 807: ' CO' (ID: 10271)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -2.935296834039036e-06
    2. ' CO' → logprob: -12.75000286102295
    3. 'Coin' → logprob: -18.750003814697266
    4. 'coin' → logprob: -19.750003814697266
    5. '[' → logprob: -21.625003814697266
    6. '   ' → logprob: -21.875003814697266
    7. '_CO' → logprob: -22.750003814697266
    8. ' ' → logprob: -23.000003814697266
    9. ']' → logprob: -23.625003814697266
    10. 'C' → logprob: -23.625003814697266

Token 808: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -5.2166411478538066e-05
    2. 'INS' → logprob: -10.375052452087402
    3. 'INT' → logprob: -10.875052452087402
    4. 'N' → logprob: -13.250052452087402
    5. 'OIN' → logprob: -17.000051498413086
    6. 'CO' → logprob: -17.375051498413086
    7. 'in' → logprob: -17.875051498413086
    8. 'T' → logprob: -17.875051498413086
    9. 'I' → logprob: -18.000051498413086
    10. '[' → logprob: -18.000051498413086

Token 809: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -7.3458322731312364e-06
    2. 'YPES' → logprob: -12.500007629394531
    3. 'T' → logprob: -12.875007629394531
    4. 'Types' → logprob: -14.750007629394531
    5. '_types' → logprob: -14.875007629394531
    6. 'ypes' → logprob: -16.25000762939453
    7. ' TYPES' → logprob: -16.75000762939453
    8. '_TYPE' → logprob: -17.87500762939453
    9. '_T' → logprob: -18.50000762939453
    10. 'types' → logprob: -18.50000762939453

Token 810: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3557529857498594e-05
    2. ' ]' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.87502384185791
    4. '()]' → logprob: -14.12502384185791
    5. ')]' → logprob: -15.37502384185791
    6. ')' → logprob: -16.500022888183594
    7. ']
' → logprob: -18.250022888183594
    8. '`]' → logprob: -18.625022888183594
    9. '])' → logprob: -18.875022888183594
    10. '+]' → logprob: -19.000022888183594

Token 811: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003416607796680182
    2. 'class' → logprob: -8.375341415405273
    3. 'CO' → logprob: -9.875341415405273
    4. ')' → logprob: -11.000341415405273
    5. '#' → logprob: -11.375341415405273
    6. '(' → logprob: -11.750341415405273
    7. '```' → logprob: -11.750341415405273
    8. 'MAX' → logprob: -12.125341415405273
    9. ':' → logprob: -12.875341415405273
    10. ' def' → logprob: -13.500341415405273

Token 812: ' list' (ID: 1562)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.6488708853721619
    2. 'tuple' → logprob: -1.5238709449768066
    3. 'add' → logprob: -2.5238709449768066
    4. 'coins' → logprob: -2.6488709449768066
    5. 'update' → logprob: -3.1488709449768066
    6. 'serialize' → logprob: -4.273870944976807
    7. 'compress' → logprob: -4.523870944976807
    8. 'encode' → logprob: -4.773870944976807
    9. 'dp' → logprob: -4.898870944976807
    10. 'pack' → logprob: -5.523870944976807

Token 813: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.005589106120169163
    2. '_append' → logprob: -5.880589008331299
    3. 'to' → logprob: -7.505589008331299
    4. '_add' → logprob: -7.880589008331299
    5. '_repr' → logprob: -7.880589008331299
    6. 'To' → logprob: -8.255589485168457
    7. '_' → logprob: -8.505589485168457
    8. '_counts' → logprob: -8.755589485168457
    9. '_count' → logprob: -8.880589485168457
    10. '_copy' → logprob: -9.255589485168457

Token 814: '_co' (ID: 21102)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.03805205225944519
    2. '_tuple' → logprob: -3.2880520820617676
    3. 'list' → logprob: -12.28805160522461
    4. '_co' → logprob: -12.53805160522461
    5. 'coins' → logprob: -14.16305160522461
    6. ' tuple' → logprob: -14.41305160522461
    7. 'tu' → logprob: -14.78805160522461
    8. '_list' → logprob: -14.78805160522461
    9. 'co' → logprob: -16.53805160522461
    10. 'Tuple' → logprob: -16.78805160522461

Token 815: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0013586864806711674
    2. 'in' → logprob: -6.626358509063721
    3. 'unt' → logprob: -11.001358985900879
    4. 'unts' → logprob: -12.251358985900879
    5. 'ints' → logprob: -13.126358985900879
    6. 'int' → logprob: -13.126358985900879
    7. 'uns' → logprob: -13.876358985900879
    8. 'INS' → logprob: -14.126358985900879
    9. 'inst' → logprob: -14.251358985900879
    10. 'coins' → logprob: -14.876358985900879

Token 816: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.20200584828853607
    2. '(count' → logprob: -2.3270058631896973
    3. '(co' → logprob: -3.0770058631896973
    4. '(l' → logprob: -3.4520058631896973
    5. '(ls' → logprob: -5.702005863189697
    6. '(cnt' → logprob: -6.827005863189697
    7. '(' → logprob: -7.077005863189697
    8. '(list' → logprob: -7.452005863189697
    9. '(nums' → logprob: -7.827005863189697
    10. '(li' → logprob: -8.577005386352539

Token 817: '):
' (ID: 1883)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0006109290407039225
    2. '):' → logprob: -8.375611305236816
    3. '(co' → logprob: -8.500611305236816
    4. '(ls' → logprob: -9.375611305236816
    5. '(l' → logprob: -10.000611305236816
    6. '(' → logprob: -10.875611305236816
    7. '_lst' → logprob: -11.375611305236816
    8. '):
' → logprob: -12.750611305236816
    9. ')' → logprob: -13.125611305236816
    10. ')(' → logprob: -13.750611305236816

Token 818: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07280736416578293
    2. '   ' → logprob: -3.6978073120117188
    3. ':
' → logprob: -3.6978073120117188
    4. '(co' → logprob: -4.447807312011719
    5. '{' → logprob: -5.947807312011719
    6. 'dict' → logprob: -6.947807312011719
    7. 'return' → logprob: -7.072807312011719
    8. '#' → logprob: -7.197807312011719
    9. ':' → logprob: -7.322807312011719
    10. '(dict' → logprob: -7.447807312011719

Token 819: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0057780505158007145
    2. 'return' → logprob: -5.380777835845947
    3. 'dict' → logprob: -7.255777835845947
    4. '{return' → logprob: -8.255778312683105
    5. '   ' → logprob: -9.755778312683105
    6. '{' → logprob: -10.130778312683105
    7. '{
' → logprob: -10.380778312683105
    8. 'coins' → logprob: -10.880778312683105
    9. 'lambda' → logprob: -11.255778312683105
    10. '
' → logprob: -11.630778312683105

Token 820: ' Transform' (ID: 27287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12695088982582092
    2. 'return' → logprob: -2.126950979232788
    3. '{return' → logprob: -11.501951217651367
    4. 'dict' → logprob: -11.626951217651367
    5. ' return' → logprob: -13.001951217651367
    6. '   ' → logprob: -14.626951217651367
    7. '#' → logprob: -15.251951217651367
    8. '
' → logprob: -15.376951217651367
    9. 'd' → logprob: -15.626951217651367
    10. 'returns' → logprob: -16.001951217651367

Token 821: 'e' (ID: 68)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6801538467407227
    2. 'lst' → logprob: -1.6801538467407227
    3. 'er' → logprob: -2.0551538467407227
    4. 'e' → logprob: -2.1801538467407227
    5. 'ation' → logprob: -3.5551538467407227
    6. '(lst' → logprob: -4.680153846740723
    7. 'ée' → logprob: -4.805153846740723
    8. ' lst' → logprob: -5.055153846740723
    9. '   ' → logprob: -5.180153846740723
    10. '_lst' → logprob: -5.930153846740723

Token 822: ' une' (ID: 2463)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0012323728296905756
    2. 'dict' → logprob: -7.376232147216797
    3. '
' → logprob: -8.751232147216797
    4. 'list' → logprob: -9.626232147216797
    5. 'lambda' → logprob: -9.626232147216797
    6. 'def' → logprob: -9.751232147216797
    7. '{' → logprob: -10.001232147216797
    8. '(lst' → logprob: -10.001232147216797
    9. 'liste' → logprob: -10.126232147216797
    10. 'la' → logprob: -10.626232147216797

Token 823: ' liste' (ID: 31719)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.39163118600845337
    2. 'dict' → logprob: -1.1416311264038086
    3. '{' → logprob: -5.391631126403809
    4. ' tuple' → logprob: -10.016631126403809
    5. 'lst' → logprob: -10.016631126403809
    6. '{
' → logprob: -10.141631126403809
    7. 'list' → logprob: -11.141631126403809
    8. 'counter' → logprob: -11.766631126403809
    9. 'def' → logprob: -11.891631126403809
    10. ' dict' → logprob: -12.016631126403809

Token 824: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.02947620302438736
    2. '[count' → logprob: -4.654476165771484
    3. 'def' → logprob: -5.654476165771484
    4. 'de' → logprob: -5.779476165771484
    5. '[' → logprob: -5.904476165771484
    6. '```' → logprob: -6.279476165771484
    7. ',' → logprob: -6.529476165771484
    8. 'en' → logprob: -7.029476165771484
    9. '(lst' → logprob: -7.154476165771484
    10. 'count' → logprob: -7.654476165771484

Token 825: 'n' (ID: 77)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.027356857433915138
    2. 'coins' → logprob: -4.6523566246032715
    3. 'c' → logprob: -5.4023566246032715
    4. '(lst' → logprob: -5.6523566246032715
    5. 'x' → logprob: -6.0273566246032715
    6. 'cnt' → logprob: -6.9023566246032715
    7. 'coin' → logprob: -7.0273566246032715
    8. 'count' → logprob: -7.1523566246032715
    9. 'num' → logprob: -7.4023566246032715
    10. ']' → logprob: -7.7773566246032715

Token 826: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7109183073043823
    2. '_' → logprob: -0.9609183073043823
    3. ']' → logprob: -2.835918426513672
    4. '   ' → logprob: -4.460918426513672
    5. ' ,' → logprob: -4.710918426513672
    6. '_c' → logprob: -5.085918426513672
    7. ' ' → logprob: -5.460918426513672
    8. ' for' → logprob: -5.585918426513672
    9. '```' → logprob: -5.585918426513672
    10. '[' → logprob: -5.710918426513672

Token 827: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027995310723781586
    2. ',n' → logprob: -4.2779951095581055
    3. ' ,' → logprob: -4.4029951095581055
    4. '1' → logprob: -8.402995109558105
    5. '   ' → logprob: -8.652995109558105
    6. ']' → logprob: -8.777995109558105
    7. 'n' → logprob: -8.902995109558105
    8. ',c' → logprob: -9.027995109558105
    9. '[' → logprob: -9.152995109558105
    10. '_' → logprob: -9.152995109558105

Token 828: '5' (ID: 20)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20979663729667664
    2. '500' → logprob: -2.459796667098999
    3. '_' → logprob: -3.209796667098999
    4. ',n' → logprob: -4.08479642868042
    5. '0' → logprob: -4.70979642868042
    6. 'n' → logprob: -4.95979642868042
    7. 'b' → logprob: -5.08479642868042
    8. 'ones' → logprob: -5.33479642868042
    9. '1' → logprob: -5.58479642868042
    10. ']' → logprob: -5.70979642868042

Token 829: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5767226815223694
    2. ',' → logprob: -0.8267226815223694
    3. ' ,' → logprob: -7.201722621917725
    4. ',num' → logprob: -11.451723098754883
    5. 'n' → logprob: -11.951723098754883
    6. '100' → logprob: -12.201723098754883
    7. '1' → logprob: -12.201723098754883
    8. '_,' → logprob: -13.326723098754883
    9. ',c' → logprob: -13.451723098754883
    10. ',...' → logprob: -13.826723098754883

Token 830: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001649220648687333
    2. ',' → logprob: -9.375164985656738
    3. 'n' → logprob: -10.625164985656738
    4. '00' → logprob: -10.750164985656738
    5. '10' → logprob: -11.000164985656738
    6. '000' → logprob: -12.000164985656738
    7. '50' → logprob: -12.625164985656738
    8. ',n' → logprob: -12.875164985656738
    9. '1' → logprob: -13.375164985656738
    10. '```' → logprob: -13.875164985656738

Token 831: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0036403348203748465
    2. ',' → logprob: -5.628640174865723
    3. 'n' → logprob: -10.378640174865723
    4. ' ,' → logprob: -12.128640174865723
    5. ',num' → logprob: -13.628640174865723
    6. ',...' → logprob: -14.378640174865723
    7. ']' → logprob: -14.503640174865723
    8. ',
' → logprob: -15.128640174865723
    9. ',len' → logprob: -15.878640174865723
    10. '```' → logprob: -16.12864112854004

Token 832: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -15.125000953674316
    3. '100' → logprob: -16.0
    4. '25' → logprob: -16.375
    5. ' ' → logprob: -16.375
    6. ',' → logprob: -16.5
    7. '500' → logprob: -16.75
    8. '5' → logprob: -17.25
    9. '20' → logprob: -17.625
    10. 'n' → logprob: -18.125

Token 833: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.006771022453904152
    2. ',' → logprob: -5.006771087646484
    3. 'n' → logprob: -10.006771087646484
    4. ' ,' → logprob: -11.631771087646484
    5. ',num' → logprob: -13.881771087646484
    6. '_,' → logprob: -16.006771087646484
    7. '```' → logprob: -16.131771087646484
    8. ',
' → logprob: -16.381771087646484
    9. ',,' → logprob: -16.506771087646484
    10. ',len' → logprob: -16.881771087646484

Token 834: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -12.000008583068848
    3. '00' → logprob: -13.625008583068848
    4. '1' → logprob: -14.375008583068848
    5. ',' → logprob: -14.750008583068848
    6. '```' → logprob: -17.00000762939453
    7. 'n' → logprob: -17.12500762939453
    8. '
' → logprob: -18.12500762939453
    9. ' ' → logprob: -18.37500762939453
    10. '=' → logprob: -18.50000762939453

Token 835: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036382899270392954
    2. ']:
' → logprob: -8.875364303588867
    3. ']
' → logprob: -9.125364303588867
    4. ']:' → logprob: -9.750364303588867
    5. ',' → logprob: -10.750364303588867
    6. ' ]' → logprob: -11.125364303588867
    7. ']=' → logprob: -11.125364303588867
    8. '])' → logprob: -13.250364303588867
    9. ',n' → logprob: -13.250364303588867
    10. '],' → logprob: -14.750364303588867

Token 836: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3626846671104431
    2. '=' → logprob: -1.237684726715088
    3. ' =' → logprob: -4.612684726715088
    4. 'return' → logprob: -6.737684726715088
    5. 'into' → logprob: -6.862684726715088
    6. ' into' → logprob: -7.362684726715088
    7. '=lambda' → logprob: -7.987684726715088
    8. ' def' → logprob: -8.61268424987793
    9. ',' → logprob: -8.98768424987793
    10. '=>' → logprob: -9.48768424987793

Token 837: ' diction' (ID: 155259)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011935215443372726
    2. 'dict' → logprob: -4.511935234069824
    3. '{
' → logprob: -7.261935234069824
    4. 'collections' → logprob: -9.136935234069824
    5. '{return' → logprob: -10.261935234069824
    6. '{s' → logprob: -11.136935234069824
    7. '{k' → logprob: -11.261935234069824
    8. '{i' → logprob: -12.136935234069824
    9. ' {' → logprob: -12.261935234069824
    10. '{x' → logprob: -13.386935234069824

Token 838: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.00500283669680357
    2. '{' → logprob: -5.755002975463867
    3. 'naires' → logprob: -6.755002975463867
    4. 'dict' → logprob: -8.005002975463867
    5. 'ary' → logprob: -9.005002975463867
    6. '   ' → logprob: -9.880002975463867
    7. 'aire' → logprob: -10.130002975463867
    8. '{
' → logprob: -10.630002975463867
    9. 'iaire' → logprob: -10.755002975463867
    10. 'n' → logprob: -11.005002975463867

Token 839: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7791760563850403
    2. 'def' → logprob: -0.7791760563850403
    3. 'return' → logprob: -2.7791759967803955
    4. '{return' → logprob: -4.529176235198975
    5. '{
' → logprob: -5.279176235198975
    6. 'dict' → logprob: -5.904176235198975
    7. '   ' → logprob: -7.779176235198975
    8. '=' → logprob: -8.029175758361816
    9. '(dict' → logprob: -8.279175758361816
    10. ' =' → logprob: -9.029175758361816

Token 840: 'val' (ID: 1105)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4365468919277191
    2. 'c' → logprob: -1.4365469217300415
    3. 'CO' → logprob: -3.186546802520752
    4. 'k' → logprob: -3.311546802520752
    5. 'coin' → logprob: -3.311546802520752
    6. '{
' → logprob: -7.561546802520752
    7. 'v' → logprob: -8.31154727935791
    8. '{' → logprob: -8.31154727935791
    9. '
' → logprob: -8.43654727935791
    10. '   ' → logprob: -9.18654727935791

Token 841: 'eur' (ID: 8671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01202060841023922
    2. '   ' → logprob: -4.512020587921143
    3. '1' → logprob: -7.637020587921143
    4. '{' → logprob: -8.8870210647583
    5. ' :' → logprob: -9.8870210647583
    6. 'CO' → logprob: -9.8870210647583
    7. '100' → logprob: -10.2620210647583
    8. '       ' → logprob: -10.2620210647583
    9. '{
' → logprob: -10.7620210647583
    10. 'n' → logprob: -11.1370210647583

Token 842: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013285996101330966
    2. ':c' → logprob: -9.37513256072998
    3. ' :' → logprob: -10.75013256072998
    4. ':l' → logprob: -11.87513256072998
    5. 'CO' → logprob: -12.37513256072998
    6. ':value' → logprob: -12.75013256072998
    7. ':n' → logprob: -12.75013256072998
    8. ':list' → logprob: -13.25013256072998
    9. ':C' → logprob: -13.62513256072998
    10. '=' → logprob: -13.75013256072998

Token 843: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6602466702461243
    2. 'count' → logprob: -1.4102466106414795
    3. 'quant' → logprob: -2.5352466106414795
    4. 'nb' → logprob: -3.0352466106414795
    5. 'n' → logprob: -3.5352466106414795
    6. 'CO' → logprob: -3.9102466106414795
    7. 'lst' → logprob: -4.035246849060059
    8. 'nbr' → logprob: -4.285246849060059
    9. 'val' → logprob: -4.410246849060059
    10. 'qty' → logprob: -4.910246849060059

Token 844: '}
' (ID: 739)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5634011030197144
    2. ',' → logprob: -1.1884011030197144
    3. '}' → logprob: -2.563401222229004
    4. '}
' → logprob: -4.063401222229004
    5. ',c' → logprob: -4.688401222229004
    6. ',n' → logprob: -5.563401222229004
    7. ':' → logprob: -5.938401222229004
    8. 'n' → logprob: -6.188401222229004
    9. '}:' → logprob: -6.188401222229004
    10. 'c' → logprob: -6.313401222229004

Token 845: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9291186928749084
    2. '{' → logprob: -1.5541186332702637
    3. '```' → logprob: -2.0541186332702637
    4. '   ' → logprob: -2.1791186332702637
    5. ':
' → logprob: -3.3041186332702637
    6. ':' → logprob: -3.4291186332702637
    7. 'return' → logprob: -3.6791186332702637
    8. '{return' → logprob: -3.8041186332702637
    9. '(co' → logprob: -4.054118633270264
    10. 'coins' → logprob: -4.929118633270264

Token 846: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005410673096776009
    2. '   ' → logprob: -5.255410671234131
    3. ' return' → logprob: -9.380411148071289
    4. 'def' → logprob: -9.880411148071289
    5. '{return' → logprob: -10.505411148071289
    6. '	return' → logprob: -11.630411148071289
    7. 'dict' → logprob: -13.505411148071289
    8. '{' → logprob: -13.755411148071289
    9. 'd' → logprob: -14.005411148071289
    10. 'coins' → logprob: -14.505411148071289

Token 847: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02976888418197632
    2. 'dict' → logprob: -3.529768943786621
    3. '{
' → logprob: -11.029768943786621
    4. '{return' → logprob: -14.029768943786621
    5. '{i' → logprob: -14.904768943786621
    6. '{x' → logprob: -15.154768943786621
    7. '{k' → logprob: -15.404768943786621
    8. ' {' → logprob: -15.529768943786621
    9. ' dict' → logprob: -15.654768943786621
    10. '{id' → logprob: -16.029767990112305

Token 848: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.303128719329834
    2. 'CO' → logprob: -2.053128719329834
    3. 'v' → logprob: -2.803128719329834
    4. '1' → logprob: -2.928128719329834
    5. 'coin' → logprob: -4.553128719329834
    6. 'k' → logprob: -5.303128719329834
    7. 'val' → logprob: -5.928128719329834
    8. 'ct' → logprob: -7.803128719329834
    9. '100' → logprob: -8.678129196166992
    10. 'd' → logprob: -9.928129196166992

Token 849: ':n' (ID: 20109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16840051114559174
    2. ':c' → logprob: -1.918400526046753
    3. 'CO' → logprob: -5.168400287628174
    4. 'c' → logprob: -6.793400287628174
    5. ':i' → logprob: -7.293400287628174
    6. ':k' → logprob: -8.043400764465332
    7. ':v' → logprob: -8.793400764465332
    8. ':l' → logprob: -9.543400764465332
    9. ':t' → logprob: -10.668400764465332
    10. 'k' → logprob: -10.668400764465332

Token 850: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6818197965621948
    2. ' for' → logprob: -1.1818197965621948
    3. 'c' → logprob: -2.1818199157714844
    4. 't' → logprob: -2.8068199157714844
    5. 'st' → logprob: -5.681819915771484
    6. 'CO' → logprob: -5.931819915771484
    7. 's' → logprob: -6.431819915771484
    8. 'lst' → logprob: -6.556819915771484
    9. 'z' → logprob: -6.931819915771484
    10. ':' → logprob: -7.306819915771484

Token 851: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.008129963040119e-06
    2. '(c' → logprob: -13.000003814697266
    3. ' c' → logprob: -13.375003814697266
    4. ',c' → logprob: -16.125003814697266
    5. ',' → logprob: -17.125003814697266
    6. '	c' → logprob: -17.625003814697266
    7. ')c' → logprob: -18.875003814697266
    8. ' ' → logprob: -19.875003814697266
    9. '
' → logprob: -20.375003814697266
    10. '(' → logprob: -20.500003814697266

Token 852: ',n' (ID: 18103)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0028115289751440287
    2. ',c' → logprob: -6.002811431884766
    3. ',' → logprob: -8.002811431884766
    4. 'n' → logprob: -14.877811431884766
    5. '(c' → logprob: -14.877811431884766
    6. ' c' → logprob: -15.502811431884766
    7. 'in' → logprob: -15.877811431884766
    8. ')c' → logprob: -16.377811431884766
    9. ',
' → logprob: -17.002811431884766
    10. '
' → logprob: -17.127811431884766

Token 853: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.054892104119062424
    2. ' in' → logprob: -2.929892063140869
    3. ',' → logprob: -12.929892539978027
    4. 'zip' → logprob: -13.054892539978027
    5. ',c' → logprob: -13.304892539978027
    6. 'enumer' → logprob: -13.554892539978027
    7. ' zip' → logprob: -14.054892539978027
    8. 'c' → logprob: -14.804892539978027
    9. ' ' → logprob: -15.554892539978027
    10. '(zip' → logprob: -15.804892539978027

Token 854: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -2.1008713702030946e-06
    2. ' zip' → logprob: -13.250001907348633
    3. '(zip' → logprob: -15.000001907348633
    4. 'enumer' → logprob: -19.625001907348633
    5. '.zip' → logprob: -20.750001907348633
    6. 'z' → logprob: -21.750001907348633
    7. 'ZIP' → logprob: -22.000001907348633
    8. 'Zip' → logprob: -22.250001907348633
    9. '_zip' → logprob: -22.750001907348633
    10. '```' → logprob: -22.875001907348633

Token 855: '(C' (ID: 5559)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -9.372294698550832e-06
    2. '(C' → logprob: -11.750009536743164
    3. ' CO' → logprob: -13.500009536743164
    4. '   ' → logprob: -17.500009536743164
    5. '[' → logprob: -17.875009536743164
    6. 'Coin' → logprob: -18.875009536743164
    7. '_CO' → logprob: -19.000009536743164
    8. '(' → logprob: -20.625009536743164
    9. '.CO' → logprob: -21.125009536743164
    10. ' ' → logprob: -21.125009536743164

Token 856: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.00015872348740231246
    2. 'O' → logprob: -8.750158309936523
    3. 'CO' → logprob: -16.250158309936523
    4. 'oin' → logprob: -16.375158309936523
    5. '[' → logprob: -19.000158309936523
    6. 'ON' → logprob: -19.375158309936523
    7. 'OI' → logprob: -19.375158309936523
    8. 'IN' → logprob: -19.625158309936523
    9. 'OY' → logprob: -19.625158309936523
    10. 'OID' → logprob: -20.875158309936523

Token 857: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -2.3080716346157715e-05
    2. 'T' → logprob: -10.750022888183594
    3. 'YPES' → logprob: -14.125022888183594
    4. 'Types' → logprob: -15.000022888183594
    5. '_types' → logprob: -15.125022888183594
    6. 'CO' → logprob: -15.750022888183594
    7. ' TYPES' → logprob: -16.625022888183594
    8. '[T' → logprob: -17.125022888183594
    9. '_CO' → logprob: -18.000022888183594
    10. 'types' → logprob: -18.250022888183594

Token 858: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4576305150985718
    2. ',c' → logprob: -1.0826305150985718
    3. 'CO' → logprob: -4.207630634307861
    4. '[' → logprob: -4.582630634307861
    5. ',[' → logprob: -6.832630634307861
    6. '   ' → logprob: -7.457630634307861
    7. '[::-' → logprob: -8.082630157470703
    8. ',n' → logprob: -8.457630157470703
    9. '[c' → logprob: -8.707630157470703
    10. ' CO' → logprob: -8.707630157470703

Token 859: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0011477179359644651
    2. 'ST' → logprob: -6.876147747039795
    3. 'ist' → logprob: -9.751147270202637
    4. 'CO' → logprob: -10.001147270202637
    5. '[' → logprob: -12.251147270202637
    6. 'IST' → logprob: -12.251147270202637
    7. 'lst' → logprob: -14.251147270202637
    8. ' CO' → logprob: -15.126147270202637
    9. 't' → logprob: -15.376147270202637
    10. 's' → logprob: -16.126148223876953

Token 860: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00026991849881596863
    2. ')' → logprob: -8.250269889831543
    3. ');}' → logprob: -12.500269889831543
    4. '}' → logprob: -13.500269889831543
    5. ' )' → logprob: -14.125269889831543
    6. ')}}' → logprob: -14.250269889831543
    7. ')}
' → logprob: -14.625269889831543
    8. '   ' → logprob: -14.750269889831543
    9. '[' → logprob: -15.125269889831543
    10. '())' → logprob: -15.625269889831543

Token 861: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005744783557020128
    2. 'class' → logprob: -7.875574588775635
    3. '#' → logprob: -9.125574111938477
    4. 'MAX' → logprob: -9.875574111938477
    5. 'INF' → logprob: -11.625574111938477
    6. 'from' → logprob: -11.875574111938477
    7. ')' → logprob: -12.625574111938477
    8. 'dp' → logprob: -12.750574111938477
    9. 'import' → logprob: -13.000574111938477
    10. '
' → logprob: -13.250574111938477

Token 862: ' coins' (ID: 28969)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.4513052701950073
    2. 'can' → logprob: -1.8263052701950073
    3. 'state' → logprob: -2.326305389404297
    4. 'update' → logprob: -3.451305389404297
    5. 'possible' → logprob: -3.826305389404297
    6. 'encode' → logprob: -4.076305389404297
    7. 'combine' → logprob: -4.951305389404297
    8. 'dp' → logprob: -5.701305389404297
    9. 'merge' → logprob: -5.826305389404297
    10. 'coin' → logprob: -6.076305389404297

Token 863: '_add' (ID: 8390)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.013225635513663292
    2. '_count' → logprob: -4.763225555419922
    3. '_available' → logprob: -6.888225555419922
    4. '_add' → logprob: -7.263225555419922
    5. '_counts' → logprob: -7.263225555419922
    6. '_possible' → logprob: -7.763225555419922
    7. '_repr' → logprob: -8.138225555419922
    8. '_in' → logprob: -8.513225555419922
    9. '_max' → logprob: -9.263225555419922
    10. '_equals' → logprob: -9.263225555419922

Token 864: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05976159870624542
    2. '(co' → logprob: -2.9347615242004395
    3. '(lst' → logprob: -6.4347615242004395
    4. '(' → logprob: -6.8097615242004395
    5. '(c' → logprob: -7.1847615242004395
    6. '(l' → logprob: -7.4347615242004395
    7. '(lhs' → logprob: -7.9347615242004395
    8. '(left' → logprob: -8.934762001037598
    9. '(old' → logprob: -9.684762001037598
    10. ' (' → logprob: -9.809762001037598

Token 865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2996152937412262
    2. ',a' → logprob: -2.0496153831481934
    3. '(a' → logprob: -2.0496153831481934
    4. 'a' → logprob: -7.924615383148193
    5. ' ,' → logprob: -8.049614906311035
    6. ',_' → logprob: -8.674614906311035
    7. '_a' → logprob: -9.299614906311035
    8. '):' → logprob: -9.674614906311035
    9. ',(' → logprob: -10.049614906311035
    10. '_,' → logprob: -10.174614906311035

Token 866: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009128939709626138
    2. ' b' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.5009126663208
    4. ')' → logprob: -15.6259126663208
    5. ')b' → logprob: -15.8759126663208
    6. 'a' → logprob: -16.375913619995117
    7. '    ' → logprob: -16.625913619995117
    8. '       ' → logprob: -16.875913619995117
    9. 'coins' → logprob: -16.875913619995117
    10. ',b' → logprob: -17.000913619995117

Token 867: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12700307369232178
    2. '):' → logprob: -2.1270031929016113
    3. '):
' → logprob: -10.377002716064453
    4. ',' → logprob: -11.002002716064453
    5. '   ' → logprob: -11.377002716064453
    6. '):

' → logprob: -11.627002716064453
    7. ')' → logprob: -12.252002716064453
    8. ':' → logprob: -14.877002716064453
    9. ' ):
' → logprob: -15.252002716064453
    10. ':
' → logprob: -15.377002716064453

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6053657531738281
    2. '[a' → logprob: -0.9803657531738281
    3. 'a' → logprob: -3.605365753173828
    4. '[' → logprob: -3.605365753173828
    5. 'def' → logprob: -4.480365753173828
    6. '(a' → logprob: -5.480365753173828
    7. '{' → logprob: -6.230365753173828
    8. '[i' → logprob: -6.230365753173828
    9. '[n' → logprob: -7.105365753173828
    10. '[c' → logprob: -7.355365753173828

Token 869: ' #' (ID: 1069)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.13431718945503235
    2. '[c' → logprob: -2.88431715965271
    3. '[n' → logprob: -3.13431715965271
    4. '[' → logprob: -4.259317398071289
    5. 'return' → logprob: -4.759317398071289
    6. '[i' → logprob: -6.634317398071289
    7. 'a' → logprob: -6.884317398071289
    8. '[len' → logprob: -7.509317398071289
    9. 'tuple' → logprob: -8.509317398071289
    10. '[l' → logprob: -8.884317398071289

Token 870: ' Addition' (ID: 129345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007401107344776392
    2. 'lst' → logprob: -6.132400989532471
    3. 'c' → logprob: -6.257400989532471
    4. 'res' → logprob: -7.132400989532471
    5. 'result' → logprob: -7.632400989532471
    6. '[c' → logprob: -7.882400989532471
    7. 'def' → logprob: -7.882400989532471
    8. '[n' → logprob: -7.882400989532471
    9. 'a' → logprob: -8.382401466369629
    10. ' return' → logprob: -8.507401466369629

Token 871: 'ne' (ID: 611)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.40186840295791626
    2. 'def' → logprob: -1.1518683433532715
    3. ' =' → logprob: -5.0268683433532715
    4. ' (' → logprob: -5.7768683433532715
    5. '_' → logprob: -6.6518683433532715
    6. '(' → logprob: -7.0268683433532715
    7. '(
' → logprob: -7.4018683433532715
    8. '   ' → logprob: -7.5268683433532715
    9. ' def' → logprob: -7.9018683433532715
    10. '=' → logprob: -7.9018683433532715

Token 872: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6519867181777954
    2. '[a' → logprob: -1.4019867181777954
    3. '{' → logprob: -2.276986598968506
    4. '{
' → logprob: -3.026986598968506
    5. '(a' → logprob: -3.651986598968506
    6. 'def' → logprob: -3.776986598968506
    7. '[
' → logprob: -4.401986598968506
    8. 'dict' → logprob: -4.901986598968506
    9. '(
' → logprob: -5.276986598968506
    10. '[' → logprob: -5.276986598968506

Token 873: '2' (ID: 17)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.4650197923183441
    2. 'a' → logprob: -1.8400198221206665
    3. '{' → logprob: -2.090019702911377
    4. '[c' → logprob: -2.590019702911377
    5. '[' → logprob: -4.715019702911377
    6. '[n' → logprob: -6.715019702911377
    7. 'collections' → logprob: -7.090019702911377
    8. '(a' → logprob: -7.715019702911377
    9. '{k' → logprob: -7.840019702911377
    10. '[i' → logprob: -7.965019702911377

Token 874: ' listes' (ID: 179198)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.47941505908966064
    2. 'lists' → logprob: -1.9794150590896606
    3. 'Counter' → logprob: -2.229414939880371
    4. 'lst' → logprob: -2.729414939880371
    5. 'a' → logprob: -3.354414939880371
    6. '[a' → logprob: -4.979414939880371
    7. 'list' → logprob: -5.104414939880371
    8. 'd' → logprob: -5.104414939880371
    9. 'def' → logprob: -5.854414939880371
    10. ' Counter' → logprob: -5.979414939880371

Token 875: ' de' (ID: 334)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004865361377596855
    2. '([' → logprob: -5.8798651695251465
    3. 'def' → logprob: -6.3798651695251465
    4. '[a' → logprob: -8.504865646362305
    5. 'a' → logprob: -9.254865646362305
    6. '(
' → logprob: -10.754865646362305
    7. '(' → logprob: -11.379865646362305
    8. '   ' → logprob: -11.629865646362305
    9. '(lambda' → logprob: -12.129865646362305
    10. ' (' → logprob: -12.629865646362305

Token 876: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.22049133479595184
    2. 'int' → logprob: -2.345491409301758
    3. '[' → logprob: -3.345491409301758
    4. 'counts' → logprob: -3.970491409301758
    5. 'nombre' → logprob: -4.595491409301758
    6. 'pieces' → logprob: -4.720491409301758
    7. 'pi' → logprob: -4.845491409301758
    8. '[int' → logprob: -4.845491409301758
    9. 'coin' → logprob: -5.345491409301758
    10. 'quant' → logprob: -5.845491409301758

Token 877: '
' (ID: 198)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.21690449118614197
    2. '[n' → logprob: -2.091904401779175
    3. '   ' → logprob: -3.591904401779175
    4. '[i' → logprob: -4.091904640197754
    5. 'def' → logprob: -4.841904640197754
    6. '(a' → logprob: -5.466904640197754
    7. '[' → logprob: -5.716904640197754
    8. 'a' → logprob: -5.841904640197754
    9. '([' → logprob: -6.341904640197754
    10. '[c' → logprob: -6.466904640197754

Token 878: '   ' (ID: 271)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.08289787918329239
    2. '(a' → logprob: -2.832897901535034
    3. 'def' → logprob: -4.457897663116455
    4. '   ' → logprob: -5.832897663116455
    5. '([' → logprob: -5.957897663116455
    6. '[' → logprob: -6.957897663116455
    7. '[i' → logprob: -7.707897663116455
    8. 'a' → logprob: -7.707897663116455
    9. '[n' → logprob: -8.332898139953613
    10. '[l' → logprob: -8.332898139953613

Token 879: ' return' (ID: 622)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.9391953349113464
    2. '[a' → logprob: -0.9391953349113464
    3. 'return' (adapté à ' return') → logprob: -1.6891953945159912
    4. '[c' → logprob: -4.064195156097412
    5. '[l' → logprob: -4.939195156097412
    6. '[i' → logprob: -5.564195156097412
    7. '[' → logprob: -5.814195156097412
    8. '[len' → logprob: -6.939195156097412
    9. '   ' → logprob: -7.564195156097412
    10. ' return' → logprob: -8.18919563293457

Token 880: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.06222490593791008
    2. '[n' → logprob: -2.812224864959717
    3. '[c' → logprob: -8.562225341796875
    4. '[i' → logprob: -10.312225341796875
    5. '[' → logprob: -10.562225341796875
    6. 'a' → logprob: -13.187225341796875
    7. '[len' → logprob: -13.562225341796875
    8. '[x' → logprob: -13.812225341796875
    9. '[k' → logprob: -13.937225341796875
    10. '[l' → logprob: -14.812225341796875

Token 881: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.066919301403686e-05
    2. 'a' → logprob: -9.500090599060059
    3. 'ai' → logprob: -11.625090599060059
    4. ' x' → logprob: -12.500090599060059
    5. '(x' → logprob: -13.000090599060059
    6. 'xa' → logprob: -15.125090599060059
    7. 'max' → logprob: -15.250090599060059
    8. 'aa' → logprob: -15.625090599060059
    9. 'i' → logprob: -15.875090599060059
    10. 'ax' → logprob: -17.625091552734375

Token 882: '+y' (ID: 102753)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026406990364193916
    2. '+x' → logprob: -6.752640724182129
    3. ' +' → logprob: -7.252640724182129
    4. '+a' → logprob: -7.627640724182129
    5. '+y' → logprob: -8.252640724182129
    6. '+b' → logprob: -11.752640724182129
    7. '+
' → logprob: -13.252640724182129
    8. 'a' → logprob: -13.752640724182129
    9. '+n' → logprob: -13.877640724182129
    10. '+c' → logprob: -14.127640724182129

Token 883: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3743482530117035
    2. 'for' → logprob: -1.6243482828140259
    3. ',' → logprob: -2.8743481636047363
    4. 'x' → logprob: -3.6243481636047363
    5. ',x' → logprob: -3.8743481636047363
    6. ' x' → logprob: -4.624348163604736
    7. '(x' → logprob: -6.749348163604736
    8. ' ' → logprob: -8.874348640441895
    9. '[x' → logprob: -10.249348640441895
    10. ' ,' → logprob: -10.249348640441895

Token 884: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.7697225252486533e-06
    2. ' x' → logprob: -12.500003814697266
    3. '(x' → logprob: -16.750003814697266
    4. '	x' → logprob: -22.125003814697266
    5. ',x' → logprob: -23.250003814697266
    6. '[x' → logprob: -24.625003814697266
    7. '_x' → logprob: -24.625003814697266
    8. '"x' → logprob: -24.625003814697266
    9. '$x' → logprob: -24.875003814697266
    10. ''x' → logprob: -25.125003814697266

Token 885: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3134574294090271
    2. ',x' → logprob: -1.3134574890136719
    3. 'x' → logprob: -9.063457489013672
    4. ' ,' → logprob: -10.188457489013672
    5. ',y' → logprob: -10.563457489013672
    6. ',z' → logprob: -11.563457489013672
    7. ',b' → logprob: -13.188457489013672
    8. ',
' → logprob: -13.563457489013672
    9. '(x' → logprob: -13.813457489013672
    10. ',j' → logprob: -14.438457489013672

Token 886: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12692968547344208
    2. 'in' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.25192928314209
    4. '
' → logprob: -15.12692928314209
    5. 'x' → logprob: -15.87692928314209
    6. '   ' → logprob: -16.001930236816406
    7. '	in' → logprob: -16.251930236816406
    8. ',' → logprob: -16.751930236816406
    9. 'import' → logprob: -17.126930236816406
    10. 'n' → logprob: -17.251930236816406

Token 887: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -1.306760805164231e-05
    2. ' zip' → logprob: -11.25001335144043
    3. '(zip' → logprob: -19.00001335144043
    4. '.zip' → logprob: -19.62501335144043
    5. 'z' → logprob: -20.25001335144043
    6. '_zip' → logprob: -21.50001335144043
    7. '
' → logprob: -21.62501335144043
    8. 'x' → logprob: -22.00001335144043
    9. '```' → logprob: -23.25001335144043
    10. 'a' → logprob: -23.37501335144043

Token 888: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.723352049040841e-06
    2. ' a' → logprob: -12.750004768371582
    3. '(a' → logprob: -13.250004768371582
    4. '	a' → logprob: -20.875003814697266
    5. ',a' → logprob: -22.250003814697266
    6. '#a' → logprob: -22.250003814697266
    7. '_a' → logprob: -22.500003814697266
    8. ')a' → logprob: -23.125003814697266
    9. 'а' → logprob: -23.250003814697266
    10. '   ' → logprob: -23.750003814697266

Token 889: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2633146047592163
    2. ',a' → logprob: -1.5133146047592163
    3. ',b' → logprob: -4.888314723968506
    4. 'a' → logprob: -6.138314723968506
    5. ',x' → logprob: -6.638314723968506
    6. ' ,' → logprob: -9.013314247131348
    7. '(a' → logprob: -9.138314247131348
    8. ' a' → logprob: -10.263314247131348
    9. ',y' → logprob: -10.888314247131348
    10. 'b' → logprob: -11.513314247131348

Token 890: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.981667537620524e-06
    2. ',' → logprob: -14.000001907348633
    3. ')' → logprob: -15.125001907348633
    4. ')]
' → logprob: -15.750001907348633
    5. ' )' → logprob: -15.750001907348633
    6. ',x' → logprob: -15.750001907348633
    7. ')]

' → logprob: -16.250001907348633
    8. ']' → logprob: -16.375001907348633
    9. ')],' → logprob: -16.375001907348633
    10. '   ' → logprob: -17.250001907348633

Token 891: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.625
    3. ' def' → logprob: -17.0
    4. '
' → logprob: -17.375
    5. '<|end|>' → logprob: -17.875
    6. '  
' → logprob: -19.625
    7. '    
' → logprob: -19.75
    8. '

' → logprob: -19.75
    9. 'from' → logprob: -19.875
    10. 'de' → logprob: -20.125

Token 892: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -7.941850526549388e-06
    2. 'list' → logprob: -13.250007629394531
    3. 'coin' → logprob: -13.250007629394531
    4. ' coins' → logprob: -13.625007629394531
    5. 'tuple' → logprob: -13.625007629394531
    6. 'co' → logprob: -14.250007629394531
    7. 'subtract' → logprob: -14.875007629394531
    8. 'def' → logprob: -15.125007629394531
    9. 'sub' → logprob: -15.750007629394531
    10. '
' → logprob: -16.25000762939453

Token 893: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00012880703434348106
    2. '_remove' → logprob: -9.125128746032715
    3. '_diff' → logprob: -11.500128746032715
    4. 'sub' → logprob: -12.000128746032715
    5. '_minus' → logprob: -13.500128746032715
    6. '_less' → logprob: -13.875128746032715
    7. 'subtract' → logprob: -14.125128746032715
    8. '_add' → logprob: -16.00012969970703
    9. '_compare' → logprob: -16.62512969970703
    10. '_to' → logprob: -16.87512969970703

Token 894: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006291598547250032
    2. 'stract' → logprob: -7.75062894821167
    3. 'tract' → logprob: -9.250629425048828
    4. 'traction' → logprob: -10.625629425048828
    5. '(' → logprob: -10.750629425048828
    6. 'straction' → logprob: -11.125629425048828
    7. '(
' → logprob: -11.625629425048828
    8. '((' → logprob: -12.250629425048828
    9. 'tracted' → logprob: -12.500629425048828
    10. '(co' → logprob: -13.500629425048828

Token 895: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008412327617406845
    2. ',b' → logprob: -5.2584123611450195
    3. ',a' → logprob: -5.7584123611450195
    4. ' ,' → logprob: -11.88341236114502
    5. ',[' → logprob: -12.25841236114502
    6. 'a' → logprob: -13.50841236114502
    7. ',n' → logprob: -14.13341236114502
    8. 'b' → logprob: -14.88341236114502
    9. ',x' → logprob: -14.88341236114502
    10. ',c' → logprob: -14.88341236114502

Token 896: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06997700780630112
    2. '):' → logprob: -2.694977045059204
    3. '   ' → logprob: -11.069976806640625
    4. '):
' → logprob: -11.444976806640625
    5. ',' → logprob: -12.444976806640625
    6. ')' → logprob: -12.694976806640625
    7. '):

' → logprob: -13.444976806640625
    8. ',a' → logprob: -13.444976806640625
    9. '[' → logprob: -13.819976806640625
    10. 'a' → logprob: -14.194976806640625

Token 897: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4305238723754883
    2. '[' → logprob: -1.0555238723754883
    3. '[a' → logprob: -7.055523872375488
    4. ' [' → logprob: -7.930523872375488
    5. '[x' → logprob: -7.930523872375488
    6. '[n' → logprob: -10.180523872375488
    7. 'def' → logprob: -10.305523872375488
    8. '```' → logprob: -10.805523872375488
    9. '[i' → logprob: -10.930523872375488
    10. '[
' → logprob: -11.055523872375488

Token 898: ' #' (ID: 1069)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.009176041930913925
    2. '   ' → logprob: -5.509176254272461
    3. '#' (adapté à ' #') → logprob: -5.759176254272461
    4. '[' → logprob: -6.759176254272461
    5. 'return' → logprob: -7.259176254272461
    6. '[a' → logprob: -10.884176254272461
    7. ' return' → logprob: -11.384176254272461
    8. '[n' → logprob: -11.509176254272461
    9. '[y' → logprob: -11.884176254272461
    10. ' [' → logprob: -12.509176254272461

Token 899: ' Sou' (ID: 17228)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00011808603449026123
    2. '[' → logprob: -9.250118255615234
    3. '[len' → logprob: -11.375118255615234
    4. 'coins' → logprob: -12.750118255615234
    5. 'def' → logprob: -13.125118255615234
    6. '[(' → logprob: -13.625118255615234
    7. '#' → logprob: -14.000118255615234
    8. ' [' → logprob: -14.375118255615234
    9. '[z' → logprob: -14.375118255615234
    10. '[
' → logprob: -14.875118255615234

Token 900: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.5453493595123291
    2. 'b' → logprob: -1.045349359512329
    3. 'st' → logprob: -3.295349359512329
    4. 'bs' → logprob: -4.42034912109375
    5. 'straction' → logprob: -4.67034912109375
    6. 'bst' → logprob: -5.42034912109375
    7. 'stract' → logprob: -6.54534912109375
    8. 'str' → logprob: -6.54534912109375
    9. 'bm' → logprob: -6.79534912109375
    10. 'stens' → logprob: -7.04534912109375

Token 901: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.43183568120002747
    2. 'it' → logprob: -1.306835651397705
    3. 'a' → logprob: -3.431835651397705
    4. '[a' → logprob: -3.431835651397705
    5. '[' → logprob: -5.056835651397705
    6. '(a' → logprob: -5.431835651397705
    7. 'ct' → logprob: -5.681835651397705
    8. 'itre' → logprob: -8.681836128234863
    9. 'is' → logprob: -8.806836128234863
    10. 'b' → logprob: -9.181836128234863

Token 902: ' b' (ID: 287)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5799031257629395
    2. '[x' → logprob: -1.0799031257629395
    3. 'a' → logprob: -2.3299031257629395
    4. '[' → logprob: -5.8299031257629395
    5. ' [' → logprob: -8.704902648925781
    6. ' a' → logprob: -12.329902648925781
    7. '[i' → logprob: -13.329902648925781
    8. '(x' → logprob: -14.079902648925781
    9. '[b' → logprob: -14.079902648925781
    10. '[
' → logprob: -14.579902648925781

Token 903: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.34498217701911926
    2. '(a' → logprob: -1.3449821472167969
    3. '([' → logprob: -4.969982147216797
    4. 'a' → logprob: -4.969982147216797
    5. '[i' → logprob: -5.094982147216797
    6. '```' → logprob: -5.969982147216797
    7. 'for' → logprob: -6.344982147216797
    8. '[' → logprob: -6.469982147216797
    9. '(x' → logprob: -6.969982147216797
    10. '   ' → logprob: -7.094982147216797

Token 904: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.250000953674316
    3. '[' → logprob: -20.25
    4. '[a' → logprob: -20.5
    5. '	a' → logprob: -21.125
    6. '(a' → logprob: -24.0
    7. 'а' → logprob: -24.5
    8. '   ' → logprob: -25.0
    9. '```' → logprob: -25.0
    10. '>a' → logprob: -25.125

Token 905: ' pour' (ID: 1930)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.07272998243570328
    2. '(a' → logprob: -3.32273006439209
    3. '[' → logprob: -4.19773006439209
    4. 'def' → logprob: -4.57273006439209
    5. 'a' → logprob: -5.69773006439209
    6. ':' → logprob: -6.32273006439209
    7. '```' → logprob: -7.07273006439209
    8. '   ' → logprob: -7.07273006439209
    9. ' =' → logprob: -8.07273006439209
    10. ' [' → logprob: -8.32273006439209

Token 906: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012736949138343334
    2. 'x' → logprob: -5.387736797332764
    3. '[x' → logprob: -5.512736797332764
    4. ' a' → logprob: -5.762736797332764
    5. '[a' → logprob: -8.012737274169922
    6. ' x' → logprob: -8.137737274169922
    7. '[i' → logprob: -8.887737274169922
    8. '[' → logprob: -9.387737274169922
    9. ' [' → logprob: -10.137737274169922
    10. 'i' → logprob: -11.887737274169922

Token 907: ' listes' (ID: 179198)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.31369370222091675
    2. '[' → logprob: -2.5636937618255615
    3. 'x' → logprob: -2.6886937618255615
    4. ' x' → logprob: -3.1886937618255615
    5. 'a' → logprob: -3.3136937618255615
    6. 'i' → logprob: -3.9386937618255615
    7. '[i' → logprob: -4.813693523406982
    8. ' i' → logprob: -4.938693523406982
    9. ' [' → logprob: -5.438693523406982
    10. ' a' → logprob: -6.063693523406982

Token 908: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.31672585010528564
    2. 'a' → logprob: -2.066725730895996
    3. '[' → logprob: -2.316725730895996
    4. '(a' → logprob: -3.316725730895996
    5. '[x' → logprob: -5.941725730895996
    6. ' a' → logprob: -6.816725730895996
    7. '[...,' → logprob: -6.941725730895996
    8. '([' → logprob: -6.941725730895996
    9. '(x' → logprob: -7.316725730895996
    10. '```' → logprob: -7.441725730895996

Token 909: ' pièces' (ID: 49165)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15073171257972717
    2. 'ent' → logprob: -2.9007318019866943
    3. 'coins' → logprob: -3.1507318019866943
    4. 'pi' → logprob: -3.9007318019866943
    5. 'pieces' → logprob: -4.775731563568115
    6. 'ints' → logprob: -5.525731563568115
    7. '[' → logprob: -5.525731563568115
    8. 'nombre' → logprob: -6.150731563568115
    9. 'a' → logprob: -6.650731563568115
    10. '[int' → logprob: -7.900731563568115

Token 910: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.392771452665329
    2. '   ' → logprob: -1.2677714824676514
    3. '[' → logprob: -4.142771244049072
    4. '```' → logprob: -4.767771244049072
    5. ':' → logprob: -5.267771244049072
    6. '    
' → logprob: -6.142771244049072
    7. ':
' → logprob: -6.267771244049072
    8. '[a' → logprob: -6.267771244049072
    9. '(co' → logprob: -6.267771244049072
    10. '[
' → logprob: -6.517771244049072

Token 911: ' ren' (ID: 5427)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4141896665096283
    2. 'return' → logprob: -1.6641896963119507
    3. 'def' → logprob: -2.164189577102661
    4. ' def' → logprob: -4.91418981552124
    5. ' [' → logprob: -5.41418981552124
    6. '   ' → logprob: -5.41418981552124
    7. '[i' → logprob: -5.66418981552124
    8. '[' → logprob: -5.78918981552124
    9. '[len' → logprob: -5.91418981552124
    10. ' retour' → logprob: -6.03918981552124

Token 912: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0065351310186088085
    2. 'voy' → logprob: -5.381535053253174
    3. 'voit' → logprob: -6.881535053253174
    4. 'v' → logprob: -7.256535053253174
    5. 'd' → logprob: -9.881535530090332
    6. 'du' → logprob: -10.131535530090332
    7. 'voi' → logprob: -10.381535530090332
    8. 'vo' → logprob: -10.631535530090332
    9. 't' → logprob: -10.881535530090332
    10. '[' → logprob: -11.881535530090332

Token 913: ' None' (ID: 4662)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.4426586925983429
    2. 'None' → logprob: -1.6926586627960205
    3. '[a' → logprob: -1.9426586627960205
    4. '[' → logprob: -4.0676589012146
    5. 'a' → logprob: -4.5676589012146
    6. ' [' → logprob: -6.4426589012146
    7. ' None' → logprob: -7.4426589012146
    8. 'x' → logprob: -8.942658424377441
    9. '(None' → logprob: -9.317658424377441
    10. '
' → logprob: -9.817658424377441

Token 914: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.035883378237485886
    2. ' if' → logprob: -3.5358834266662598
    3. '```' → logprob: -5.78588342666626
    4. 'a' → logprob: -6.53588342666626
    5. '[a' → logprob: -7.41088342666626
    6. '   ' → logprob: -7.91088342666626
    7. '[' → logprob: -8.785882949829102
    8. ' ' → logprob: -9.035882949829102
    9. 'si' → logprob: -9.785882949829102
    10. '[
' → logprob: -10.035882949829102

Token 915: ' b' (ID: 287)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0008149892091751099
    2. 'auc' → logprob: -8.500815391540527
    3. 'tout' → logprob: -8.750815391540527
    4. ' any' → logprob: -9.000815391540527
    5. 'None' → logprob: -9.125815391540527
    6. 'une' → logprob: -9.500815391540527
    7. 'min' → logprob: -10.000815391540527
    8. 'Any' → logprob: -11.125815391540527
    9. 'a' → logprob: -11.125815391540527
    10. 'result' → logprob: -11.250815391540527

Token 916: '>' (ID: 29)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8486849665641785
    2. '[i' → logprob: -0.8486849665641785
    3. '>' → logprob: -2.4736850261688232
    4. '[x' → logprob: -5.223684787750244
    5. '>x' → logprob: -5.473684787750244
    6. '[a' → logprob: -5.598684787750244
    7. 'not' → logprob: -5.598684787750244
    8. ')' → logprob: -5.723684787750244
    9. 'any' → logprob: -5.723684787750244
    10. 'a' → logprob: -5.848684787750244

Token 917: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.375
    3. '[a' → logprob: -18.625
    4. '>a' → logprob: -19.875
    5. '```' → logprob: -20.0
    6. ''a' → logprob: -20.25
    7. '	a' → logprob: -20.75
    8. '(a' → logprob: -21.875
    9. ')a' → logprob: -21.875
    10. 'b' → logprob: -22.0

Token 918: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00807962380349636
    2. '   ' → logprob: -5.133079528808594
    3. ':
' → logprob: -6.758079528808594
    4. ' def' → logprob: -8.133079528808594
    5. '[' → logprob: -8.383079528808594
    6. ':' → logprob: -8.883079528808594
    7. '```' → logprob: -8.883079528808594
    8. '[
' → logprob: -10.133079528808594
    9. 'for' → logprob: -10.633079528808594
    10. '
' → logprob: -10.883079528808594

Token 919: ' quelcon' (ID: 199130)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.5265396237373352
    2. 'quel' → logprob: -1.2765395641326904
    3. 'any' → logprob: -2.4015395641326904
    4. 'auc' → logprob: -4.2765398025512695
    5. 'n' → logprob: -4.7765398025512695
    6. 'une' → logprob: -4.7765398025512695
    7. 'un' → logprob: -6.6515398025512695
    8. 'cert' → logprob: -6.7765398025512695
    9. 'qual' → logprob: -6.7765398025512695
    10. 'certain' → logprob: -6.7765398025512695

Token 920: 'que' (ID: 1126)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.03169145807623863
    2. 'que' → logprob: -3.656691551208496
    3. 'té' → logprob: -5.906691551208496
    4. 'alité' → logprob: -7.781691551208496
    5. 'ques' → logprob: -8.031691551208496
    6. 'ite' → logprob: -8.156691551208496
    7. 'itié' → logprob: -8.281691551208496
    8. 'quant' → logprob: -8.531691551208496
    9. 't' → logprob: -8.656691551208496
    10. 'une' → logprob: -8.906691551208496

Token 921: ' pièce' (ID: 56132)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.060713529586792
    2. 'def' → logprob: -1.310713529586792
    3. '[x' → logprob: -2.310713529586792
    4. '[' → logprob: -2.435713529586792
    5. '[idx' → logprob: -2.935713529586792
    6. 'element' → logprob: -4.060713768005371
    7. 'elem' → logprob: -4.185713768005371
    8. '[n' → logprob: -4.185713768005371
    9. 'for' → logprob: -4.310713768005371
    10. 'x' → logprob: -4.435713768005371

Token 922: '
' (ID: 198)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3574741780757904
    2. '[a' → logprob: -1.7324742078781128
    3. 'def' → logprob: -2.2324740886688232
    4. 'a' → logprob: -4.857474327087402
    5. '[' → logprob: -5.482474327087402
    6. ':' → logprob: -6.857474327087402
    7. '```' → logprob: -6.982474327087402
    8. ':
' → logprob: -7.607474327087402
    9. '   ' → logprob: -7.732474327087402
    10. '(' → logprob: -7.982474327087402

Token 923: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7088239192962646
    2. 'def' → logprob: -1.3338239192962646
    3. '[a' → logprob: -1.4588239192962646
    4. '(co' → logprob: -5.458824157714844
    5. '[' → logprob: -5.708824157714844
    6. 'a' → logprob: -6.083824157714844
    7. '```' → logprob: -7.333824157714844
    8. '   ' → logprob: -8.333824157714844
    9. ' def' → logprob: -9.083824157714844
    10. '([' → logprob: -9.083824157714844

Token 924: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01163868885487318
    2. ' for' → logprob: -4.511638641357422
    3. 'def' → logprob: -7.886638641357422
    4. '   ' → logprob: -8.761638641357422
    5. 'result' → logprob: -11.011638641357422
    6. '```' → logprob: -11.136638641357422
    7. '
' → logprob: -11.511638641357422
    8. 'n' → logprob: -12.136638641357422
    9. '[' → logprob: -12.761638641357422
    10. '	for' → logprob: -13.011638641357422

Token 925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07819836586713791
    2. '=[]' → logprob: -2.9531984329223633
    3. ' =' → logprob: -4.203198432922363
    4. '=[' → logprob: -5.328198432922363
    5. '=[]
' → logprob: -5.828198432922363
    6. '=None' → logprob: -8.953198432922363
    7. 'def' → logprob: -9.703198432922363
    8. '=[
' → logprob: -10.203198432922363
    9. '=list' → logprob: -10.828198432922363
    10. '=[]
' → logprob: -10.828198432922363

Token 926: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.17745861411094666
    2. '[]' → logprob: -2.1774585247039795
    3. '[x' → logprob: -3.1774585247039795
    4. '[a' → logprob: -4.927458763122559
    5. '[' → logprob: -8.177458763122559
    6. 'a' → logprob: -10.177458763122559
    7. '[]

' → logprob: -12.052458763122559
    8. ' []
' → logprob: -12.302458763122559
    9. '[y' → logprob: -12.552458763122559
    10. '[len' → logprob: -13.552458763122559

Token 927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4460063576698303
    2. 'for' → logprob: -1.5710062980651855
    3. ' for' → logprob: -2.3210062980651855
    4. '[' → logprob: -3.1960062980651855
    5. '```' → logprob: -5.3210062980651855
    6. '[]
' → logprob: -5.6960062980651855
    7. '[]' → logprob: -6.1960062980651855
    8. '[
' → logprob: -7.1960062980651855
    9. '	for' → logprob: -7.5710062980651855
    10. ' ' → logprob: -7.5710062980651855

Token 928: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2246291337069124e-05
    2. '   ' → logprob: -11.250021934509277
    3. ' for' → logprob: -11.625021934509277
    4. '	for' → logprob: -15.125021934509277
    5. '
' → logprob: -17.250022888183594
    6. '```' → logprob: -17.500022888183594
    7. '       ' → logprob: -19.000022888183594
    8. ' ' → logprob: -19.125022888183594
    9. '  ' → logprob: -20.875022888183594
    10. '``' → logprob: -21.000022888183594

Token 929: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.12258882028982e-05
    2. 'xa' → logprob: -10.00006103515625
    3. 'aa' → logprob: -12.12506103515625
    4. 'ai' → logprob: -12.12506103515625
    5. '(x' → logprob: -12.50006103515625
    6. 'i' → logprob: -14.25006103515625
    7. 'ax' → logprob: -15.37506103515625
    8. 'a' → logprob: -16.00006103515625
    9. ' x' → logprob: -16.37506103515625
    10. 'xx' → logprob: -17.37506103515625

Token 930: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.17245355248451233
    2. ',' → logprob: -2.0474536418914795
    3. 'x' → logprob: -3.9224536418914795
    4. ',a' → logprob: -5.2974534034729
    5. 'in' → logprob: -6.0474534034729
    6. 'a' → logprob: -6.6724534034729
    7. ',n' → logprob: -7.7974534034729
    8. ',b' → logprob: -8.672453880310059
    9. ',i' → logprob: -9.547453880310059
    10. ' in' → logprob: -9.922453880310059

Token 931: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5767586827278137
    2. 'in' → logprob: -0.8267586827278137
    3. ',' → logprob: -7.701758861541748
    4. '   ' → logprob: -8.82675838470459
    5. ',x' → logprob: -9.07675838470459
    6. 'x' → logprob: -11.20175838470459
    7. ',in' → logprob: -11.57675838470459
    8. 'import' → logprob: -11.82675838470459
    9. '  ' → logprob: -11.95175838470459
    10. ' ' → logprob: -12.32675838470459

Token 932: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0001305950863752514
    2. ' zip' → logprob: -9.500130653381348
    3. 'a' → logprob: -9.875130653381348
    4. '(zip' → logprob: -13.000130653381348
    5. 'range' → logprob: -13.375130653381348
    6. 'x' → logprob: -16.00012969970703
    7. 'res' → logprob: -16.50012969970703
    8. 'enumer' → logprob: -16.87512969970703
    9. '   ' → logprob: -17.00012969970703
    10. ' ' → logprob: -17.12512969970703

Token 933: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008737008087337017
    2. '(a' → logprob: -4.758737087249756
    3. ' a' → logprob: -9.008736610412598
    4. '	a' → logprob: -17.133737564086914
    5. ' (' → logprob: -17.133737564086914
    6. '   ' → logprob: -17.508737564086914
    7. '(' → logprob: -17.508737564086914
    8. '[a' → logprob: -17.633737564086914
    9. ',a' → logprob: -17.633737564086914
    10. '#a' → logprob: -18.133737564086914

Token 934: ',b' (ID: 17568)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.025771018117666245
    2. ',' → logprob: -4.525771141052246
    3. ',x' → logprob: -4.900771141052246
    4. ',b' → logprob: -5.150771141052246
    5. ',y' → logprob: -6.900771141052246
    6. 'a' → logprob: -8.150771141052246
    7. ' ,' → logprob: -9.775771141052246
    8. ' a' → logprob: -12.275771141052246
    9. ',v' → logprob: -12.650771141052246
    10. ',p' → logprob: -12.775771141052246

Token 935: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007834688760340214
    2. '):' → logprob: -4.8828349113464355
    3. '   ' → logprob: -9.007834434509277
    4. ')' → logprob: -10.007834434509277
    5. '):
' → logprob: -10.132834434509277
    6. ':
' → logprob: -11.507834434509277
    7. ' ):
' → logprob: -12.632834434509277
    8. ':' → logprob: -13.132834434509277
    9. ',' → logprob: -13.507834434509277
    10. '       ' → logprob: -13.882834434509277

Token 936: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008435378782451153
    2. 'res' → logprob: -5.758435249328613
    3. 'if' → logprob: -5.758435249328613
    4. ' if' → logprob: -6.633435249328613
    5. '   ' → logprob: -8.008435249328613
    6. ' res' → logprob: -8.133435249328613
    7. '```' → logprob: -9.133435249328613
    8. '	res' → logprob: -12.258435249328613
    9. ',res' → logprob: -12.383435249328613
    10. '           ' → logprob: -12.508435249328613

Token 937: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018869919003918767
    2. 'res' → logprob: -6.62688684463501
    3. '       ' → logprob: -7.75188684463501
    4. '   ' → logprob: -9.376887321472168
    5. ' if' → logprob: -10.126887321472168
    6. '```' → logprob: -12.876887321472168
    7. '	if' → logprob: -13.626887321472168
    8. 'If' → logprob: -13.626887321472168
    9. '           ' → logprob: -14.626887321472168
    10. 'r' → logprob: -15.376887321472168

Token 938: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031818747520446777
    2. 'y' → logprob: -5.7531819343566895
    3. ' x' → logprob: -12.503181457519531
    4. ' y' → logprob: -15.378181457519531
    5. '   ' → logprob: -15.503181457519531
    6. '	x' → logprob: -17.50318145751953
    7. '(x' → logprob: -18.50318145751953
    8. '"x' → logprob: -19.87818145751953
    9. '>x' → logprob: -20.00318145751953
    10. ' ' → logprob: -20.12818145751953

Token 939: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04257648065686226
    2. '>x' → logprob: -3.417576551437378
    3. 'x' → logprob: -4.792576313018799
    4. ' >' → logprob: -7.542576313018799
    5. ' x' → logprob: -10.042576789855957
    6. '```' → logprob: -11.667576789855957
    7. '>
' → logprob: -12.667576789855957
    8. '>)' → logprob: -13.542576789855957
    9. ')>' → logprob: -13.667576789855957
    10. '>#' → logprob: -13.667576789855957

Token 940: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. '	x' → logprob: -21.250009536743164
    4. ')x' → logprob: -21.750009536743164
    5. '   ' → logprob: -23.125009536743164
    6. '>x' → logprob: -23.750009536743164
    7. '"x' → logprob: -25.375009536743164
    8. '(x' → logprob: -25.375009536743164
    9. '$x' → logprob: -25.750009536743164
    10. ' ' → logprob: -26.375009536743164

Token 941: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9518786668777466
    2. '       ' → logprob: -1.0768786668777466
    3. '           ' → logprob: -1.7018786668777466
    4. ':
' → logprob: -2.701878547668457
    5. 'res' → logprob: -4.951878547668457
    6. '):
' → logprob: -5.076878547668457
    7. ':return' → logprob: -5.576878547668457
    8. ')' → logprob: -6.326878547668457
    9. 'return' → logprob: -6.826878547668457
    10. '):' → logprob: -7.076878547668457

Token 942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01237179059535265
    2. 'return' → logprob: -4.512372016906738
    3. ' return' → logprob: -6.637372016906738
    4. ':return' → logprob: -12.637372016906738
    5. '		' → logprob: -13.262372016906738
    6. '               ' → logprob: -13.387372016906738
    7. '       ' → logprob: -13.762372016906738
    8. '          ' → logprob: -14.012372016906738
    9. '{return' → logprob: -14.137372016906738
    10. '	return' → logprob: -14.262372016906738

Token 943: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000555416801944375
    2. '           ' → logprob: -7.500555515289307
    3. ' return' → logprob: -13.125555038452148
    4. 'None' → logprob: -15.625555038452148
    5. '       ' → logprob: -15.750555038452148
    6. '	return' → logprob: -17.00055503845215
    7. '   ' → logprob: -17.25055503845215
    8. ':return' → logprob: -17.62555503845215
    9. '```' → logprob: -17.87555503845215
    10. '{return' → logprob: -18.00055503845215

Token 944: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1472419600977446e-06
    2. ' None' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '(None' → logprob: -18.875001907348633
    5. '_None' → logprob: -18.875001907348633
    6. 'none' → logprob: -20.375001907348633
    7. '=None' → logprob: -21.000001907348633
    8. ',None' → logprob: -21.125001907348633
    9. '
' → logprob: -21.625001907348633
    10. '```' → logprob: -21.750001907348633

Token 945: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4974866644479334e-05
    2. '   ' → logprob: -11.750015258789062
    3. 'res' → logprob: -12.625015258789062
    4. '	' → logprob: -13.375015258789062
    5. '           ' → logprob: -14.375015258789062
    6. '
' → logprob: -14.875015258789062
    7. ',' → logprob: -15.000015258789062
    8. ' res' → logprob: -15.375015258789062
    9. '```' → logprob: -15.625015258789062
    10. ')' → logprob: -16.250015258789062

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.624555291840807e-05
    2. 'res' → logprob: -9.625076293945312
    3. '   ' → logprob: -11.750076293945312
    4. ' res' → logprob: -13.375076293945312
    5. '	' → logprob: -15.125076293945312
    6. '           ' → logprob: -15.250076293945312
    7. '```' → logprob: -16.625076293945312
    8. 'return' → logprob: -17.375076293945312
    9. '	res' → logprob: -17.625076293945312
    10. '      ' → logprob: -17.750076293945312

Token 947: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01456843689084053
    2. '       ' → logprob: -4.264568328857422
    3. '   ' → logprob: -7.889568328857422
    4. ' res' → logprob: -10.639568328857422
    5. '	res' → logprob: -12.139568328857422
    6. 'ress' → logprob: -14.764568328857422
    7. '	' → logprob: -16.139568328857422
    8. '     ' → logprob: -16.389568328857422
    9. '$res' → logprob: -16.764568328857422
    10. '```' → logprob: -16.889568328857422

Token 948: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003234262694604695
    2. '.' → logprob: -8.125323295593262
    3. ' .' → logprob: -11.125323295593262
    4. '=' → logprob: -12.375323295593262
    5. '.extend' → logprob: -12.875323295593262
    6. '   ' → logprob: -13.250323295593262
    7. '.ap' → logprob: -13.750323295593262
    8. '.app' → logprob: -14.250323295593262
    9. 'append' → logprob: -14.375323295593262
    10. ' =' → logprob: -14.500323295593262

Token 949: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.860340752406046e-05
    2. ' x' → logprob: -10.0000581741333
    3. '(x' → logprob: -11.2500581741333
    4. '   ' → logprob: -16.375059127807617
    5. '	x' → logprob: -17.250059127807617
    6. '{x' → logprob: -20.750059127807617
    7. ',x' → logprob: -20.750059127807617
    8. ')x' → logprob: -21.000059127807617
    9. '[x' → logprob: -21.125059127807617
    10. '       ' → logprob: -21.250059127807617

Token 950: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030693212524056435
    2. '-' → logprob: -3.780693292617798
    3. '-y' → logprob: -4.905693054199219
    4. '-x' → logprob: -11.155693054199219
    5. '   ' → logprob: -13.905693054199219
    6. ' ' → logprob: -15.155693054199219
    7. '−' → logprob: -16.40569305419922
    8. '	' → logprob: -17.03069305419922
    9. ',y' → logprob: -17.40569305419922
    10. '–' → logprob: -17.90569305419922

Token 951: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018387436866760254
    2. ')
' → logprob: -4.018387317657471
    3. '   ' → logprob: -8.518387794494629
    4. ')return' → logprob: -10.393387794494629
    5. ')
' → logprob: -12.268387794494629
    6. ' )' → logprob: -13.393387794494629
    7. ')`
' → logprob: -16.018386840820312
    8. ' ' → logprob: -16.393386840820312
    9. ' )
' → logprob: -16.393386840820312
    10. '```' → logprob: -16.393386840820312

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006604921072721481
    2. 'return' → logprob: -7.375660419464111
    3. ' return' → logprob: -11.00066089630127
    4. '
' → logprob: -11.62566089630127
    5. '```' → logprob: -12.25066089630127
    6. '	return' → logprob: -13.75066089630127
    7. '[' → logprob: -14.37566089630127
    8. '    
' → logprob: -14.62566089630127
    9. ')' → logprob: -15.00066089630127
    10. ')return' → logprob: -15.50066089630127

Token 953: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20165804028511047
    2. 'return' (adapté à ' return') → logprob: -1.701658010482788
    3. ' return' → logprob: -8.326658248901367
    4. '	return' → logprob: -13.201658248901367
    5. '
' → logprob: -14.826658248901367
    6. '  ' → logprob: -15.326658248901367
    7. ' ' → logprob: -16.076658248901367
    8. '```' → logprob: -16.201658248901367
    9. ':return' → logprob: -16.701658248901367
    10. '    
' → logprob: -17.951658248901367

Token 954: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.320199877838604e-07
    2. ' res' → logprob: -14.875
    3. 'tuple' → logprob: -17.625
    4. 'list' → logprob: -20.75
    5. '(res' → logprob: -21.625
    6. '	res' → logprob: -22.125
    7. '[' → logprob: -22.25
    8. '   ' → logprob: -23.25
    9. '$res' → logprob: -23.75
    10. 'result' → logprob: -23.75

Token 955: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008119238540530205
    2. '
' → logprob: -4.883119106292725
    3. '```' → logprob: -7.758119106292725
    4. '#' → logprob: -10.508119583129883
    5. '    
' → logprob: -11.008119583129883
    6. 'return' → logprob: -12.133119583129883
    7. '``' → logprob: -12.133119583129883
    8. '        
' → logprob: -12.258119583129883
    9. '

' → logprob: -12.383119583129883
    10. ')' → logprob: -13.008119583129883

Token 956: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015635426389053464
    2. 'MAX' → logprob: -7.626563549041748
    3. '#' → logprob: -7.876563549041748
    4. 'class' → logprob: -8.50156307220459
    5. 'DP' → logprob: -8.75156307220459
    6. 'dp' → logprob: -8.87656307220459
    7. 'CO' → logprob: -10.25156307220459
    8. ')' → logprob: -10.37656307220459
    9. 'INF' → logprob: -10.75156307220459
    10. '500' → logprob: -11.12656307220459

Token 957: ' coins' (ID: 28969)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5305485725402832
    2. 'possible' → logprob: -2.030548572540283
    3. 'dp' → logprob: -2.155548572540283
    4. 'valid' → logprob: -3.030548572540283
    5. 'state' → logprob: -3.405548572540283
    6. 'main' → logprob: -4.155548572540283
    7. 'parse' → logprob: -4.655548572540283
    8. 'is' → logprob: -4.655548572540283
    9. 'encode' → logprob: -5.155548572540283
    10. 'update' → logprob: -5.155548572540283

Token 958: '_count' (ID: 7536)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.425401896238327
    2. '_total' → logprob: -2.6754019260406494
    3. '_count' → logprob: -2.8004019260406494
    4. '_can' → logprob: -3.0504019260406494
    5. '_sum' → logprob: -3.0504019260406494
    6. '_equal' → logprob: -3.4254019260406494
    7. '_value' → logprob: -3.8004019260406494
    8. '_max' → logprob: -4.42540168762207
    9. '_add' → logprob: -4.80040168762207
    10. '_equals' → logprob: -5.30040168762207

Token 959: '_' (ID: 62)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011537227779626846
    2. '(co' → logprob: -4.511537075042725
    3. '(' → logprob: -8.136537551879883
    4. '(tokens' → logprob: -9.761537551879883
    5. '(lst' → logprob: -10.261537551879883
    6. '(c' → logprob: -10.386537551879883
    7. '(coeff' → logprob: -11.261537551879883
    8. '(arr' → logprob: -11.511537551879883
    9. '(count' → logprob: -12.261537551879883
    10. 's' → logprob: -12.511537551879883

Token 960: '500' (ID: 3234)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.48431769013404846
    2. 'total' → logprob: -1.484317660331726
    3. 'sum' → logprob: -2.2343177795410156
    4. 'pieces' → logprob: -4.359317779541016
    5. '(co' → logprob: -4.859317779541016
    6. 'all' → logprob: -5.109317779541016
    7. 'lst' → logprob: -5.109317779541016
    8. 'a' → logprob: -5.234317779541016
    9. '500' → logprob: -5.859317779541016
    10. '(a' → logprob: -5.859317779541016

Token 961: '(co' (ID: 41772)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2841343283653259
    2. '(co' → logprob: -1.4091343879699707
    3. '(lst' → logprob: -6.159134387969971
    4. '(' → logprob: -8.034133911132812
    5. '(c' → logprob: -8.034133911132812
    6. '(l' → logprob: -9.659133911132812
    7. '(arr' → logprob: -10.159133911132812
    8. '(count' → logprob: -10.534133911132812
    9. 'a' → logprob: -11.284133911132812
    10. '(ls' → logprob: -11.409133911132812

Token 962: 'ins' (ID: 1564)
  Prédit: 'unts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unts' → logprob: -0.39197707176208496
    2. 'unt' → logprob: -1.141977071762085
    3. 'ins' → logprob: -6.141977310180664
    4. '[' → logprob: -6.266977310180664
    5. 'ints' → logprob: -8.391977310180664
    6. 'a' → logprob: -8.641977310180664
    7. '(a' → logprob: -9.016977310180664
    8. 'uts' → logprob: -9.391977310180664
    9. '[a' → logprob: -9.391977310180664
    10. 'def' → logprob: -9.641977310180664

Token 963: '_dict' (ID: 11295)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -1.3430583477020264
    2. 'a' → logprob: -1.8430583477020264
    3. 'coins' → logprob: -2.2180583477020264
    4. '500' → logprob: -2.4680583477020264
    5. '):' → logprob: -2.4680583477020264
    6. '):
' → logprob: -2.5930583477020264
    7. '(lst' → logprob: -2.7180583477020264
    8. 'count' → logprob: -3.5930583477020264
    9. '_co' → logprob: -3.5930583477020264
    10. ',' → logprob: -4.0930585861206055

Token 964: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3676500916481018
    2. '):
' → logprob: -1.617650032043457
    3. '(co' → logprob: -2.742650032043457
    4. ',' → logprob: -3.367650032043457
    5. 'coins' → logprob: -5.367650032043457
    6. ')' → logprob: -5.617650032043457
    7. '(' → logprob: -7.492650032043457
    8. '):
' → logprob: -8.117650032043457
    9. ' coins' → logprob: -8.242650032043457
    10. 'co' → logprob: -8.492650032043457

Token 965: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2524402439594269
    2. '   ' → logprob: -1.5024402141571045
    3. ' return' → logprob: -7.627440452575684
    4. 'def' → logprob: -11.377440452575684
    5. '	return' → logprob: -11.502440452575684
    6. '
' → logprob: -14.377440452575684
    7. '#' → logprob: -15.127440452575684
    8. '```' → logprob: -15.127440452575684
    9. ' ' → logprob: -15.502440452575684
    10. '{return' → logprob: -15.627440452575684

Token 966: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.751746746478602e-05
    2. '   ' → logprob: -10.25004768371582
    3. ' return' → logprob: -11.37504768371582
    4. 'coins' → logprob: -14.37504768371582
    5. 'def' → logprob: -17.00004768371582
    6. '	return' → logprob: -17.62504768371582
    7. 'co' → logprob: -18.50004768371582
    8. '
' → logprob: -19.00004768371582
    9. '#' (adapté à ' #') → logprob: -19.25004768371582
    10. '```' → logprob: -19.87504768371582

Token 967: ' Nombre' (ID: 70208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.038150619715452194
    2. 'def' → logprob: -3.2881505489349365
    3. ' return' → logprob: -9.913150787353516
    4. '   ' → logprob: -9.913150787353516
    5. 'coins' → logprob: -12.538150787353516
    6. '#' → logprob: -12.538150787353516
    7. 'count' → logprob: -13.413150787353516
    8. '	return' → logprob: -14.788150787353516
    9. 'returns' → logprob: -15.288150787353516
    10. 'Return' → logprob: -15.413150787353516

Token 968: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18203571438789368
    2. ' =' → logprob: -2.5570356845855713
    3. 'def' → logprob: -2.8070356845855713
    4. 'coins' → logprob: -4.30703592300415
    5. 'de' → logprob: -5.18203592300415
    6. '500' → logprob: -5.43203592300415
    7. 'return' → logprob: -6.93203592300415
    8. 'co' → logprob: -7.18203592300415
    9. '   ' → logprob: -7.30703592300415
    10. 'of' → logprob: -7.43203592300415

Token 969: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0001669485354796052
    2. ' coins' → logprob: -8.875166893005371
    3. '500' → logprob: -11.125166893005371
    4. 'co' → logprob: -11.875166893005371
    5. 'pieces' → logprob: -12.625166893005371
    6. '   ' → logprob: -14.000166893005371
    7. ' ' → logprob: -14.500166893005371
    8. 'coin' → logprob: -15.125166893005371
    9. 'coeff' → logprob: -16.625167846679688
    10. '0' → logprob: -16.875167846679688

Token 970: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4039655029773712
    2. 'def' → logprob: -1.9039654731750488
    3. 'coins' → logprob: -2.028965473175049
    4. '=' → logprob: -4.153965473175049
    5. '500' → logprob: -4.528965473175049
    6. 'co' → logprob: -4.653965473175049
    7. '(co' → logprob: -5.028965473175049
    8. ' =' → logprob: -5.278965473175049
    9. '   ' → logprob: -6.528965473175049
    10. ' return' → logprob: -6.528965473175049

Token 971: '500' (ID: 3234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.719790518283844
    2. 'coins' → logprob: -1.2197904586791992
    3. '500' → logprob: -2.094790458679199
    4. '=' → logprob: -3.594790458679199
    5. 'return' → logprob: -3.969790458679199
    6. 'res' → logprob: -4.344790458679199
    7. ' =' → logprob: -4.719790458679199
    8. 'co' → logprob: -5.344790458679199
    9. 'in' → logprob: -5.844790458679199
    10. '(co' → logprob: -5.969790458679199

Token 972: ' dans' (ID: 2671)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7488524317741394
    2. 'def' → logprob: -1.8738524913787842
    3. 'coins' → logprob: -1.8738524913787842
    4. '(co' → logprob: -1.9988524913787842
    5. '=' → logprob: -2.748852491378784
    6. ' return' → logprob: -5.498852252960205
    7. ' =' → logprob: -5.623852252960205
    8. '   ' → logprob: -5.748852252960205
    9. 'co' → logprob: -5.873852252960205
    10. '```' → logprob: -6.498852252960205

Token 973: ' un' (ID: 537)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -6.587483221665025e-05
    2. 'co' → logprob: -10.125065803527832
    3. ' coins' → logprob: -10.875065803527832
    4. '   ' → logprob: -12.375065803527832
    5. 'coin' → logprob: -14.875065803527832
    6. '
' → logprob: -14.875065803527832
    7. 'pieces' → logprob: -15.000065803527832
    8. '```' → logprob: -15.125065803527832
    9. 'def' → logprob: -15.500065803527832
    10. 'the' → logprob: -16.00006675720215

Token 974: ' diction' (ID: 155259)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.006294683553278446
    2. 'dict' → logprob: -5.7562947273254395
    3. 'co' → logprob: -6.0062947273254395
    4. 'def' → logprob: -7.6312947273254395
    5. '{' → logprob: -10.131294250488281
    6. 'int' → logprob: -10.756294250488281
    7. ' coins' → logprob: -10.756294250488281
    8. '
' → logprob: -11.131294250488281
    9. 'coin' → logprob: -11.381294250488281
    10. '   ' → logprob: -11.381294250488281

Token 975: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.29538723826408386
    2. 'ary' → logprob: -1.6703872680664062
    3. 'aire' → logprob: -3.1703872680664062
    4. '{' → logprob: -3.7953872680664062
    5. '{"' → logprob: -6.420387268066406
    6. '{
' → logprob: -7.295387268066406
    7. '{}' → logprob: -7.920387268066406
    8. '```' → logprob: -8.045387268066406
    9. '{'' → logprob: -10.045387268066406
    10. 'n' → logprob: -11.045387268066406

Token 976: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42098844051361084
    2. 'def' → logprob: -1.2959884405136108
    3. '(co' → logprob: -3.0459885597229004
    4. 'coins' → logprob: -4.0459885597229
    5. 'co' → logprob: -6.0459885597229
    6. '```' → logprob: -7.0459885597229
    7. ' return' → logprob: -7.1709885597229
    8. '   ' → logprob: -7.7959885597229
    9. '
' → logprob: -9.545988082885742
    10. '{return' → logprob: -9.670988082885742

Token 977: ' sinon' (ID: 52915)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025980819016695023
    2. 'coins' → logprob: -4.2759809494018555
    3. ' return' → logprob: -4.9009809494018555
    4. '   ' → logprob: -5.9009809494018555
    5. 'def' → logprob: -6.5259809494018555
    6. ' coins' → logprob: -9.275980949401855
    7. 'lambda' → logprob: -12.400980949401855
    8. '0' → logprob: -13.150980949401855
    9. '       ' → logprob: -13.900980949401855
    10. '```' → logprob: -14.025980949401855

Token 978: ' ' (ID: 220)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.23291154205799103
    2. 'return' → logprob: -1.6079115867614746
    3. '0' → logprob: -4.982911586761475
    4. 'def' → logprob: -8.107911109924316
    5. '   ' → logprob: -8.982911109924316
    6. ' return' → logprob: -9.982911109924316
    7. 'co' → logprob: -10.107911109924316
    8. 'returns' → logprob: -10.232911109924316
    9. ' coins' → logprob: -10.857911109924316
    10. 'lambda' → logprob: -11.982911109924316

Token 979: '0' (ID: 15)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6336933970451355
    2. 'return' → logprob: -0.7586933970451355
    3. '0' → logprob: -7.383693218231201
    4. 'def' → logprob: -8.75869369506836
    5. ' return' → logprob: -8.88369369506836
    6. 'co' → logprob: -9.88369369506836
    7. 'returns' → logprob: -10.25869369506836
    8. ' coins' → logprob: -10.38369369506836
    9. '   ' → logprob: -10.88369369506836
    10. 'ret' → logprob: -11.13369369506836

Token 980: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2304755598306656
    2. 'def' → logprob: -2.105475664138794
    3. '   ' → logprob: -2.855475664138794
    4. '(co' → logprob: -4.605475425720215
    5. 'coins' → logprob: -4.980475425720215
    6. ' return' → logprob: -5.855475425720215
    7. '```' → logprob: -6.230475425720215
    8. '
' → logprob: -6.605475425720215
    9. ':
' → logprob: -7.480475425720215
    10. ')' → logprob: -7.480475425720215

Token 981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03804745525121689
    2. 'return' → logprob: -3.5380475521087646
    3. 'def' → logprob: -4.9130473136901855
    4. ' return' → logprob: -7.0380473136901855
    5. '	return' → logprob: -11.038047790527344
    6. 'coins' → logprob: -11.788047790527344
    7. '
' → logprob: -12.788047790527344
    8. ' ' → logprob: -13.038047790527344
    9. '  ' → logprob: -13.413047790527344
    10. ')' → logprob: -13.538047790527344

Token 982: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020070301834493876
    2. '   ' → logprob: -6.252007007598877
    3. 'def' → logprob: -9.502007484436035
    4. ' return' → logprob: -12.502007484436035
    5. '	return' → logprob: -17.62700653076172
    6. '```' → logprob: -18.25200653076172
    7. '
' → logprob: -18.37700653076172
    8. '{return' → logprob: -19.12700653076172
    9. 'coins' → logprob: -19.37700653076172
    10. '`' → logprob: -20.12700653076172

Token 983: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00038169484469108284
    2. ' coins' → logprob: -7.8753814697265625
    3. 'co' → logprob: -14.000381469726562
    4. '0' → logprob: -14.250381469726562
    5. 'coin' → logprob: -17.250381469726562
    6. '   ' → logprob: -17.750381469726562
    7. '	' → logprob: -18.000381469726562
    8. ' ' → logprob: -18.375381469726562
    9. 'c' → logprob: -18.875381469726562
    10. ' ' → logprob: -18.875381469726562

Token 984: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.003247108543291688
    2. 'dict' → logprob: -6.378247261047363
    3. '.get' → logprob: -6.878247261047363
    4. '500' → logprob: -7.628247261047363
    5. 'get' → logprob: -11.003247261047363
    6. '._' → logprob: -13.628247261047363
    7. '[' → logprob: -13.753247261047363
    8. '.dict' → logprob: -14.253247261047363
    9. 'd' → logprob: -14.378247261047363
    10. '_' → logprob: -14.628247261047363

Token 985: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00036953974631614983
    2. '.' → logprob: -8.12536907196045
    3. '500' → logprob: -10.00036907196045
    4. 'get' → logprob: -10.87536907196045
    5. '[' → logprob: -11.75036907196045
    6. 'def' → logprob: -14.75036907196045
    7. '   ' → logprob: -15.50036907196045
    8. ' .' → logprob: -15.62536907196045
    9. '0' → logprob: -16.250370025634766
    10. '{' → logprob: -16.375370025634766

Token 986: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003802680876106024
    2. '500' → logprob: -7.875380039215088
    3. '   ' → logprob: -15.875380516052246
    4. ' ' → logprob: -16.87537956237793
    5. '(
' → logprob: -18.25037956237793
    6. '```' → logprob: -19.00037956237793
    7. '  ' → logprob: -19.25037956237793
    8. ' (' → logprob: -19.25037956237793
    9. '((' → logprob: -19.62537956237793
    10. '    ' → logprob: -20.25037956237793

Token 987: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.87500286102295
    5. '5' → logprob: -14.87500286102295
    6. '{' → logprob: -15.25000286102295
    7. ')' → logprob: -16.250001907348633
    8. '
' → logprob: -16.875001907348633
    9. '```' → logprob: -17.250001907348633
    10. '[' → logprob: -17.500001907348633

Token 988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ')' → logprob: -12.500027656555176
    4. '0' → logprob: -13.375027656555176
    5. '   ' → logprob: -15.125027656555176
    6. '(),' → logprob: -15.750027656555176
    7. ',)' → logprob: -16.12502670288086
    8. ',
' → logprob: -17.37502670288086
    9. '),' → logprob: -17.75002670288086
    10. '    ' → logprob: -17.87502670288086

Token 989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -18.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '1' → logprob: -20.500001907348633
    6. 'default' → logprob: -21.500001907348633
    7. '00' → logprob: -21.625001907348633
    8. '```' → logprob: -21.625001907348633
    9. '۰' → logprob: -22.000001907348633
    10. 'return' → logprob: -22.125001907348633

Token 990: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.750006675720215
    3. ' )' → logprob: -13.375006675720215
    4. ')return' → logprob: -14.250006675720215
    5. ')+' → logprob: -15.125006675720215
    6. '())' → logprob: -15.250006675720215
    7. '   ' → logprob: -15.625006675720215
    8. 'def' → logprob: -15.625006675720215
    9. ' or' → logprob: -15.875006675720215
    10. ')#' → logprob: -16.0000057220459

Token 991: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012673276476562023
    2. '#' → logprob: -5.637673377990723
    3. '500' → logprob: -5.637673377990723
    4. 'CO' → logprob: -6.262673377990723
    5. 'class' → logprob: -7.262673377990723
    6. 'coins' → logprob: -7.262673377990723
    7. 'import' → logprob: -8.012673377990723
    8. 'dp' → logprob: -8.012673377990723
    9. 'prices' → logprob: -8.137673377990723
    10. 'DP' → logprob: -8.262673377990723

Token 992: ' coins' (ID: 28969)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8408157229423523
    2. 'dp' → logprob: -1.090815782546997
    3. 'coins' → logprob: -2.215815782546997
    4. 'def' → logprob: -3.090815782546997
    5. 'parse' → logprob: -3.465815782546997
    6. 'read' → logprob: -3.965815782546997
    7. 'solve' → logprob: -4.715815544128418
    8. 'make' → logprob: -5.215815544128418
    9. 'max' → logprob: -5.590815544128418
    10. 'possible' → logprob: -6.215815544128418

Token 993: '_dict' (ID: 11295)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.45637956261634827
    2. '_add' → logprob: -1.3313795328140259
    3. '_count' → logprob: -2.9563796520233154
    4. '_sub' → logprob: -3.8313796520233154
    5. 'to' → logprob: -4.706379413604736
    6. 'def' → logprob: -4.956379413604736
    7. 'add' → logprob: -5.331379413604736
    8. '_types' → logprob: -6.081379413604736
    9. 'sub' → logprob: -6.706379413604736
    10. '_available' → logprob: -6.956379413604736

Token 994: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6256501078605652
    2. '_add' → logprob: -1.12565016746521
    3. '_sub' → logprob: -3.12565016746521
    4. '_co' → logprob: -3.37565016746521
    5. 'def' → logprob: -4.125649929046631
    6. '_get' → logprob: -4.625649929046631
    7. '_keys' → logprob: -5.000649929046631
    8. '_merge' → logprob: -5.000649929046631
    9. '_update' → logprob: -5.250649929046631
    10. '_from' → logprob: -6.000649929046631

Token 995: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0001295222609769553
    2. '_tuple' → logprob: -9.125129699707031
    3. 'key' → logprob: -11.500129699707031
    4. ' tuple' → logprob: -12.500129699707031
    5. 'tu' → logprob: -13.250129699707031
    6. '```' → logprob: -13.500129699707031
    7. 'list' → logprob: -13.625129699707031
    8. 'token' → logprob: -14.375129699707031
    9. 'fro' → logprob: -14.750129699707031
    10. 'keys' → logprob: -15.250129699707031

Token 996: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.0003017385315615684
    2. 'def' → logprob: -9.000301361083984
    3. '(d' → logprob: -9.625301361083984
    4. '(c' → logprob: -10.000301361083984
    5. '(def' → logprob: -10.625301361083984
    6. ' =' → logprob: -11.500301361083984
    7. 'coins' → logprob: -11.875301361083984
    8. '(cd' → logprob: -12.000301361083984
    9. '(' → logprob: -12.125301361083984
    10. '=' → logprob: -12.750301361083984

Token 997: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.012303723022341728
    2. 'in' → logprob: -4.637303829193115
    3. '{' → logprob: -6.762303829193115
    4. 'def' → logprob: -8.012303352355957
    5. '(ins' → logprob: -8.637303352355957
    6. '_dict' → logprob: -9.012303352355957
    7. '(' → logprob: -9.137303352355957
    8. '{'' → logprob: -9.512303352355957
    9. '```' → logprob: -9.637303352355957
    10. '{
' → logprob: -9.637303352355957

Token 998: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.032959986478090286
    2. '_co' → logprob: -4.532959938049316
    3. 'dict' → logprob: -4.532959938049316
    4. 'def' → logprob: -5.282959938049316
    5. '(co' → logprob: -6.657959938049316
    6. '_list' → logprob: -6.782959938049316
    7. ',' → logprob: -7.407959938049316
    8. 'coins' → logprob: -7.532959938049316
    9. '):
' → logprob: -7.657959938049316
    10. ')' → logprob: -7.782959938049316

Token 999: '):
' (ID: 1883)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.35881808400154114
    2. '):
' → logprob: -1.8588180541992188
    3. '):' → logprob: -1.9838180541992188
    4. ')' → logprob: -5.108818054199219
    5. ',' → logprob: -6.983818054199219
    6. '):

' → logprob: -8.358818054199219
    7. 'coins' → logprob: -8.358818054199219
    8. 'def' → logprob: -8.983818054199219
    9. '(lst' → logprob: -8.983818054199219
    10. '(' → logprob: -9.358818054199219

Token 1000: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6157028675079346
    2. '(co' → logprob: -1.3657028675079346
    3. '(lambda' → logprob: -2.6157028675079346
    4. 'lambda' → logprob: -2.6157028675079346
    5. 'coins' → logprob: -3.8657028675079346
    6. 'return' → logprob: -4.1157026290893555
    7. 'co' → logprob: -4.9907026290893555
    8. 'tuple' → logprob: -5.4907026290893555
    9. 'coin' → logprob: -5.6157026290893555
    10. '=lambda' → logprob: -6.2407026290893555

Token 1001: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.4147891402244568
    2. 'return' → logprob: -1.6647891998291016
    3. 'lambda' → logprob: -2.1647891998291016
    4. 'def' → logprob: -3.5397891998291016
    5. '(lambda' → logprob: -5.289789199829102
    6. 'tuple' → logprob: -7.414789199829102
    7. 'co' → logprob: -7.664789199829102
    8. '(co' → logprob: -8.164789199829102
    9. ' coins' → logprob: -10.539789199829102
    10. ' lambda' → logprob: -10.789789199829102

Token 1002: ' Retour' (ID: 146830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4745722711086273
    2. 'return' → logprob: -0.9745723009109497
    3. 'coins' → logprob: -7.97457218170166
    4. 'tuple' → logprob: -9.47457218170166
    5. 'lambda' → logprob: -9.84957218170166
    6. ' return' → logprob: -11.22457218170166
    7. 'co' → logprob: -12.59957218170166
    8. ' def' → logprob: -13.22457218170166
    9. '```' → logprob: -14.47457218170166
    10. 'tokens' → logprob: -14.59957218170166

Token 1003: 'ne' (ID: 611)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6400766968727112
    2. 'tuple' → logprob: -1.3900766372680664
    3. '(co' → logprob: -2.1400766372680664
    4. '[' → logprob: -3.0150766372680664
    5. '(' → logprob: -4.515076637268066
    6. '_tuple' → logprob: -4.765076637268066
    7. '_co' → logprob: -4.890076637268066
    8. 'def' → logprob: -5.265076637268066
    9. '(tuple' → logprob: -5.765076637268066
    10. 'co' → logprob: -6.015076637268066

Token 1004: ' un' (ID: 537)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.020147543400526047
    2. 'coins' → logprob: -4.395147323608398
    3. '(co' → logprob: -5.520147323608398
    4. '(tuple' → logprob: -5.770147323608398
    5. ' tuple' → logprob: -8.145147323608398
    6. 'co' → logprob: -9.145147323608398
    7. '(
' → logprob: -9.895147323608398
    8. '(' → logprob: -11.020147323608398
    9. 'tu' → logprob: -11.770147323608398
    10. ' coins' → logprob: -12.645147323608398

Token 1005: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0010044663213193417
    2. '(tuple' → logprob: -7.876004695892334
    3. '(co' → logprob: -8.251004219055176
    4. '(
' → logprob: -8.501004219055176
    5. '(' → logprob: -9.126004219055176
    6. ' tuple' → logprob: -10.126004219055176
    7. 'co' → logprob: -12.126004219055176
    8. 'coins' → logprob: -12.876004219055176
    9. '(c' → logprob: -14.251004219055176
    10. 'tu' → logprob: -14.251004219055176

Token 1006: ' (' (ID: 350)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.10738668590784073
    2. '(tuple' → logprob: -2.982386589050293
    3. '([' → logprob: -3.107386589050293
    4. '(' → logprob: -5.607386589050293
    5. 'tuple' → logprob: -6.607386589050293
    6. '(sorted' → logprob: -7.357386589050293
    7. 'coins' → logprob: -7.982386589050293
    8. '(
' → logprob: -8.107386589050293
    9. 'co' → logprob: -10.482386589050293
    10. '([
' → logprob: -10.607386589050293

Token 1007: 'c' (ID: 66)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6844999194145203
    2. '(co' → logprob: -1.059499979019165
    3. 'tuple' → logprob: -2.309499979019165
    4. '(
' → logprob: -3.559499979019165
    5. '(tuple' → logprob: -4.684499740600586
    6. '(' → logprob: -5.434499740600586
    7. '[' → logprob: -5.809499740600586
    8. 'co' → logprob: -6.184499740600586
    9. '(c' → logprob: -7.434499740600586
    10. ' coins' → logprob: -7.934499740600586

Token 1008: '1' (ID: 16)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.05607271194458
    2. '1' → logprob: -1.55607271194458
    3. '100' → logprob: -2.43107271194458
    4. '0' → logprob: -2.68107271194458
    5. 'oin' → logprob: -2.68107271194458
    6. '500' → logprob: -2.93107271194458
    7. '_' → logprob: -3.18107271194458
    8. '[' → logprob: -3.80607271194458
    9. '_types' → logprob: -3.80607271194458
    10. 'oints' → logprob: -4.55607271194458

Token 1009: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09044467657804489
    2. ',
' → logprob: -4.090444564819336
    3. '(co' → logprob: -4.090444564819336
    4. ',c' → logprob: -4.215444564819336
    5. ')' → logprob: -4.840444564819336
    6. '[' → logprob: -5.090444564819336
    7. 'def' → logprob: -5.715444564819336
    8. '   ' → logprob: -6.090444564819336
    9. '_CO' → logprob: -6.090444564819336
    10. '),' → logprob: -6.340444564819336

Token 1010: '5' (ID: 20)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.5291287899017334
    2. '1' → logprob: -1.2791287899017334
    3. 'oin' → logprob: -3.1541287899017334
    4. 'O' → logprob: -3.7791287899017334
    5. 'oints' → logprob: -4.1541290283203125
    6. '0' → logprob: -4.2791290283203125
    7. 'OIN' → logprob: -4.5291290283203125
    8. '100' → logprob: -5.1541290283203125
    9. ',' → logprob: -5.6541290283203125
    10. 'CO' → logprob: -5.7791290283203125

Token 1011: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.22585725784301758
    2. ',' → logprob: -1.6008572578430176
    3. 'c' → logprob: -7.850857257843018
    4. ',
' → logprob: -10.47585678100586
    5. ' ,' → logprob: -11.97585678100586
    6. '100' → logprob: -12.35085678100586
    7. '),' → logprob: -12.47585678100586
    8. '_,' → logprob: -12.97585678100586
    9. '```' → logprob: -12.97585678100586
    10. '1' → logprob: -13.72585678100586

Token 1012: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5698425769805908
    2. '0' → logprob: -0.9448425769805908
    3. '100' → logprob: -3.569842576980591
    4. '1' → logprob: -4.319842338562012
    5. 'c' → logprob: -5.694842338562012
    6. '00' → logprob: -7.944842338562012
    7. ',' → logprob: -8.444842338562012
    8. 'o' → logprob: -9.069842338562012
    9. 'oin' → logprob: -10.319842338562012
    10. 'om' → logprob: -10.444842338562012

Token 1013: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.10039041191339493
    2. ',' → logprob: -2.3503904342651367
    3. 'c' → logprob: -8.725390434265137
    4. ',
' → logprob: -11.725390434265137
    5. ' ,' → logprob: -12.350390434265137
    6. '),' → logprob: -12.350390434265137
    7. ')' → logprob: -14.350390434265137
    8. '```' → logprob: -14.600390434265137
    9. ',C' → logprob: -14.975390434265137
    10. ',b' → logprob: -15.350390434265137

Token 1014: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.16218990087509155
    2. '100' → logprob: -1.9121899604797363
    3. '0' → logprob: -6.662189960479736
    4. '1' → logprob: -7.912189960479736
    5. ',' → logprob: -8.287189483642578
    6. 'c' → logprob: -10.162189483642578
    7. ',c' → logprob: -10.912189483642578
    8. '500' → logprob: -12.912189483642578
    9. '00' → logprob: -13.162189483642578
    10. 'oin' → logprob: -13.537189483642578

Token 1015: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.006762025412172079
    2. ',' → logprob: -5.0067620277404785
    3. 'c' → logprob: -10.13176155090332
    4. '```' → logprob: -13.38176155090332
    5. ',
' → logprob: -13.50676155090332
    6. ' ,' → logprob: -13.63176155090332
    7. ',n' → logprob: -14.00676155090332
    8. '100' → logprob: -14.50676155090332
    9. ',user' → logprob: -15.75676155090332
    10. '
' → logprob: -15.88176155090332

Token 1016: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00014072739577386528
    2. '0' → logprob: -8.875141143798828
    3. '00' → logprob: -15.250141143798828
    4. '```' → logprob: -15.250141143798828
    5. '1' → logprob: -15.375141143798828
    6. ',' → logprob: -17.250141143798828
    7. '
' → logprob: -17.500141143798828
    8. '_' → logprob: -18.250141143798828
    9. ')' → logprob: -18.625141143798828
    10. '10' → logprob: -18.875141143798828

Token 1017: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12156412750482559
    2. ',' → logprob: -2.6215641498565674
    3. '):
' → logprob: -3.8715641498565674
    4. '(co' → logprob: -4.746563911437988
    5. ')=' → logprob: -5.496563911437988
    6. ')
' → logprob: -5.621563911437988
    7. '):' → logprob: -5.871563911437988
    8. '),' → logprob: -7.371563911437988
    9. 'def' → logprob: -8.371563911437988
    10. ',c' → logprob: -8.871563911437988

Token 1018: ' pour' (ID: 1930)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.3921695351600647
    2. '([' → logprob: -1.39216947555542
    3. 'return' → logprob: -4.01716947555542
    4. 'def' → logprob: -4.26716947555542
    5. '=' → logprob: -4.39216947555542
    6. '(tuple' → logprob: -4.51716947555542
    7. '(
' → logprob: -4.64216947555542
    8. ' =' → logprob: -5.26716947555542
    9. '(' → logprob: -5.76716947555542
    10. '(c' → logprob: -7.14216947555542

Token 1019: ' état' (ID: 59181)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.12892958521842957
    2. 'CO' → logprob: -2.253929615020752
    3. 'tuple' → logprob: -4.878929615020752
    4. ' coins' → logprob: -5.628929615020752
    5. 'coin' → logprob: -6.378929615020752
    6. 'c' → logprob: -7.003929615020752
    7. '[' → logprob: -7.253929615020752
    8. 'co' → logprob: -8.003929138183594
    9. ' CO' → logprob: -8.253929138183594
    10. 'key' → logprob: -9.253929138183594

Token 1020: '
' (ID: 198)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.7643181085586548
    2. 'def' → logprob: -1.0143181085586548
    3. '(
' → logprob: -3.0143179893493652
    4. '([' → logprob: -3.0143179893493652
    5. 'return' → logprob: -3.5143179893493652
    6. 'tuple' → logprob: -4.389317989349365
    7. '(tuple' → logprob: -4.514317989349365
    8. '(' → logprob: -4.639317989349365
    9. '[' → logprob: -5.639317989349365
    10. '(lambda' → logprob: -6.514317989349365

Token 1021: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41551464796066284
    2. '(co' → logprob: -1.1655147075653076
    3. 'return' → logprob: -4.6655144691467285
    4. '   ' → logprob: -5.5405144691467285
    5. '```' → logprob: -5.7905144691467285
    6. '(' → logprob: -6.4155144691467285
    7. '([' → logprob: -6.5405144691467285
    8. '(
' → logprob: -6.6655144691467285
    9. '(lst' → logprob: -6.6655144691467285
    10. ' =' → logprob: -6.7905144691467285

Token 1022: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005583931924775243
    2. 'tuple' → logprob: -7.625558376312256
    3. 'def' → logprob: -10.125558853149414
    4. ' return' → logprob: -10.750558853149414
    5. '(co' → logprob: -12.375558853149414
    6. 'coins' → logprob: -13.750558853149414
    7. 'co' → logprob: -13.750558853149414
    8. '```' → logprob: -14.000558853149414
    9. '   ' → logprob: -14.125558853149414
    10. '(tuple' → logprob: -14.375558853149414

Token 1023: ' tuple' (ID: 31311)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -1.0420864820480347
    2. '(tuple' → logprob: -1.0420864820480347
    3. 'tuple' → logprob: -1.6670864820480347
    4. '(
' → logprob: -2.417086601257324
    5. '(' → logprob: -4.167086601257324
    6. 'coins' → logprob: -7.167086601257324
    7. '(c' → logprob: -9.167086601257324
    8. ' tuple' → logprob: -9.542086601257324
    9. 'co' → logprob: -9.542086601257324
    10. '(coeff' → logprob: -11.917086601257324

Token 1024: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.011232907883822918
    2. 'coins' → logprob: -5.136232852935791
    3. '([' → logprob: -5.261232852935791
    4. '((' → logprob: -10.26123332977295
    5. '(' → logprob: -10.63623332977295
    6. '(make' → logprob: -11.76123332977295
    7. '[' → logprob: -11.76123332977295
    8. 'co' → logprob: -12.26123332977295
    9. '(list' → logprob: -12.63623332977295
    10. '(c' → logprob: -12.88623332977295

Token 1025: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0035948371514678
    2. '[' → logprob: -6.503594875335693
    3. 'in' → logprob: -6.628594875335693
    4. 'coins' → logprob: -8.378594398498535
    5. 'i' → logprob: -8.878594398498535
    6. '[(' → logprob: -9.878594398498535
    7. '[[' → logprob: -9.878594398498535
    8. '[i' → logprob: -10.253594398498535
    9. '[in' → logprob: -10.628594398498535
    10. 'ns' → logprob: -10.628594398498535

Token 1026: '_to' (ID: 5089)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.026057004928588867
    2. 'dict' → logprob: -3.776057004928589
    3. '_to' → logprob: -6.401057243347168
    4. '[' → logprob: -7.401057243347168
    5. 'get' → logprob: -9.026057243347168
    6. 'Dict' → logprob: -9.151057243347168
    7. '.get' → logprob: -9.151057243347168
    8. 'd' → logprob: -9.776057243347168
    9. 'to' → logprob: -10.276057243347168
    10. '_list' → logprob: -10.526057243347168

Token 1027: '_list' (ID: 4162)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005937820533290505
    2. '_list' → logprob: -7.500593662261963
    3. 'coins' → logprob: -10.500594139099121
    4. 'lst' → logprob: -12.000594139099121
    5. 'lists' → logprob: -12.750594139099121
    6. '[' → logprob: -13.875594139099121
    7. 'liste' → logprob: -13.875594139099121
    8. ' list' → logprob: -14.500594139099121
    9. 'List' → logprob: -15.000594139099121
    10. '```' → logprob: -15.250594139099121

Token 1028: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.014363288879394531
    2. 'coins' → logprob: -4.2643632888793945
    3. 'co' → logprob: -8.639363288879395
    4. ')' → logprob: -11.014363288879395
    5. ')(' → logprob: -13.014363288879395
    6. ' coins' → logprob: -13.514363288879395
    7. '```' → logprob: -13.514363288879395
    8. 'Coins' → logprob: -15.014363288879395
    9. '(' → logprob: -15.764363288879395
    10. '(coeff' → logprob: -16.264362335205078

Token 1029: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.005295307841151953
    2. 'in' → logprob: -5.630295276641846
    3. ')' → logprob: -7.255295276641846
    4. 'coins' → logprob: -8.005295753479004
    5. ')
' → logprob: -8.255295753479004
    6. 'ns' → logprob: -10.130295753479004
    7. 'i' → logprob: -10.505295753479004
    8. '))' → logprob: -10.630295753479004
    9. '),' → logprob: -11.130295753479004
    10. 'INS' → logprob: -11.130295753479004

Token 1030: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.008298126980662346
    2. 'dict' → logprob: -5.383297920227051
    3. '(co' → logprob: -5.633297920227051
    4. ')' → logprob: -10.50829792022705
    5. '))' → logprob: -11.25829792022705
    6. ')))' → logprob: -11.50829792022705
    7. 'd' → logprob: -11.50829792022705
    8. '_DICT' → logprob: -11.63329792022705
    9. 'coins' → logprob: -11.88329792022705
    10. 'Dict' → logprob: -12.00829792022705

Token 1031: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00869517307728529
    2. ')' → logprob: -5.258695125579834
    3. ')+' → logprob: -6.383695125579834
    4. '()))' → logprob: -6.508695125579834
    5. '))+' → logprob: -9.008695602416992
    6. '(co' → logprob: -9.758695602416992
    7. '   ' → logprob: -10.258695602416992
    8. '))
' → logprob: -10.883695602416992
    9. ')))' → logprob: -11.258695602416992
    10. '())' → logprob: -11.633695602416992

Token 1032: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01413894072175026
    2. '#' → logprob: -4.639139175415039
    3. 'DP' → logprob: -6.639139175415039
    4. 'dp' → logprob: -6.764139175415039
    5. 'class' → logprob: -7.764139175415039
    6. 'MAX' → logprob: -8.139139175415039
    7. 'CO' → logprob: -8.264139175415039
    8. ')' → logprob: -8.514139175415039
    9. '
' → logprob: -9.139139175415039
    10. 'from' → logprob: -9.264139175415039

Token 1033: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.026385290548205376
    2. 'make' → logprob: -4.651385307312012
    3. 'tuple' → logprob: -5.276385307312012
    4. 'main' → logprob: -5.776385307312012
    5. 'def' → logprob: -5.901385307312012
    6. 'list' → logprob: -6.526385307312012
    7. 'parse' → logprob: -6.901385307312012
    8. 'dp' → logprob: -7.401385307312012
    9. 'co' → logprob: -7.526385307312012
    10. 'solve' → logprob: -8.526385307312012

Token 1034: '_tuple' (ID: 53371)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.014843180775642395
    2. '_to' → logprob: -4.389842987060547
    3. 'dict' → logprob: -6.139842987060547
    4. 'def' → logprob: -9.764842987060547
    5. 'to' → logprob: -10.014842987060547
    6. '_add' → logprob: -10.514842987060547
    7. '_tuple' → logprob: -11.514842987060547
    8. '_list' → logprob: -11.764842987060547
    9. 'To' → logprob: -12.139842987060547
    10. '_def' → logprob: -12.139842987060547

Token 1035: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00025788258062675595
    2. 'to' → logprob: -8.37525749206543
    3. 'To' → logprob: -10.75025749206543
    4. '=' → logprob: -13.12525749206543
    5. '=_' → logprob: -14.00025749206543
    6. 't' → logprob: -14.37525749206543
    7. 'def' → logprob: -14.37525749206543
    8. '_TO' → logprob: -14.50025749206543
    9. 'tolist' → logprob: -15.12525749206543
    10. '```' → logprob: -15.25025749206543

Token 1036: '_dict' (ID: 11295)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00013452880375552922
    2. 'tuple' → logprob: -9.625134468078613
    3. 'coins' → logprob: -10.250134468078613
    4. 'dict' → logprob: -10.625134468078613
    5. 'lst' → logprob: -12.500134468078613
    6. '_list' → logprob: -12.625134468078613
    7. 'lists' → logprob: -14.500134468078613
    8. 'def' → logprob: -15.000134468078613
    9. '```' → logprob: -15.750134468078613
    10. 'co' → logprob: -15.875134468078613

Token 1037: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7600659728050232
    2. '(lst' → logprob: -0.7600659728050232
    3. '(co' → logprob: -2.760066032409668
    4. '(l' → logprob: -7.260066032409668
    5. '=' → logprob: -8.260066032409668
    6. '(ls' → logprob: -8.385066032409668
    7. ' =' → logprob: -9.510066032409668
    8. 'coins' → logprob: -9.635066032409668
    9. '(tuple' → logprob: -10.760066032409668
    10. '(lambda' → logprob: -10.760066032409668

Token 1038: 'pl' (ID: 528)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1441466212272644
    2. '(t' → logprob: -2.144146680831909
    3. '):' → logprob: -4.51914644241333
    4. '=(' → logprob: -6.14414644241333
    5. 'uple' → logprob: -6.51914644241333
    6. '=' → logprob: -7.01914644241333
    7. '=t' → logprob: -8.019146919250488
    8. '(tuple' → logprob: -8.269146919250488
    9. '(' → logprob: -8.394146919250488
    10. 't' → logprob: -8.519146919250488

Token 1039: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18139249086380005
    2. '):' → logprob: -1.8063924312591553
    3. '(lst' → logprob: -6.931392669677734
    4. ')' → logprob: -7.931392669677734
    5. '(t' → logprob: -8.556392669677734
    6. '):
' → logprob: -10.181392669677734
    7. '):

' → logprob: -10.556392669677734
    8. 't' → logprob: -11.681392669677734
    9. '(co' → logprob: -11.806392669677734
    10. '   ' → logprob: -11.931392669677734

Token 1040: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5964948534965515
    2. 'def' → logprob: -1.0964949131011963
    3. '{return' → logprob: -2.5964949131011963
    4. ' return' → logprob: -3.5964949131011963
    5. '   ' → logprob: -4.721494674682617
    6. '	return' → logprob: -5.846494674682617
    7. '```' → logprob: -7.596494674682617
    8. '{' → logprob: -7.721494674682617
    9. ':return' → logprob: -7.971494674682617
    10. '{
' → logprob: -9.471494674682617

Token 1041: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04871499538421631
    2. 'def' → logprob: -3.048715114593506
    3. '{return' → logprob: -9.173714637756348
    4. ' return' → logprob: -10.798714637756348
    5. '{' → logprob: -13.798714637756348
    6. '```' → logprob: -13.923714637756348
    7. '
' → logprob: -14.673714637756348
    8. '	return' → logprob: -14.798714637756348
    9. '#' → logprob: -15.298714637756348
    10. '   ' → logprob: -15.298714637756348

Token 1042: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00021045419271104038
    2. 'dict' → logprob: -8.500210762023926
    3. 'list' → logprob: -12.625210762023926
    4. '{return' → logprob: -14.000210762023926
    5. '{id' → logprob: -14.250210762023926
    6. '{k' → logprob: -14.250210762023926
    7. '{x' → logprob: -14.750210762023926
    8. '{name' → logprob: -14.750210762023926
    9. '{i' → logprob: -14.750210762023926
    10. ' {' → logprob: -15.625210762023926

Token 1043: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022194879129529
    2. 'k' → logprob: -6.1272196769714355
    3. 'CO' → logprob: -10.877219200134277
    4. 'coin' → logprob: -11.627219200134277
    5. 'v' → logprob: -12.127219200134277
    6. ' c' → logprob: -15.002219200134277
    7. 'co' → logprob: -15.627219200134277
    8. 'C' → logprob: -16.002220153808594
    9. 'ci' → logprob: -16.502220153808594
    10. 'n' → logprob: -16.627220153808594

Token 1044: ':n' (ID: 20109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008982429862953722
    2. 'tpl' → logprob: -7.125898361206055
    3. ':t' → logprob: -10.375898361206055
    4. 'c' → logprob: -10.750898361206055
    5. 'k' → logprob: -11.375898361206055
    6. ':c' → logprob: -11.750898361206055
    7. '=' → logprob: -12.500898361206055
    8. ':i' → logprob: -12.750898361206055
    9. ':key' → logprob: -13.000898361206055
    10. ':item' → logprob: -13.000898361206055

Token 1045: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00965267512947321
    2. ' for' → logprob: -4.759652614593506
    3. '(zip' → logprob: -7.259652614593506
    4. 'zip' → logprob: -8.384653091430664
    5. '(c' → logprob: -9.759653091430664
    6. '(t' → logprob: -11.134653091430664
    7. '   ' → logprob: -11.759653091430664
    8. ',' → logprob: -12.134653091430664
    9. 'tpl' → logprob: -12.259653091430664
    10. '	for' → logprob: -12.509653091430664

Token 1046: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.082895273109898e-05
    2. '(c' → logprob: -10.500030517578125
    3. ' c' → logprob: -12.875030517578125
    4. ',c' → logprob: -15.500030517578125
    5. 'CO' → logprob: -15.500030517578125
    6. ')c' → logprob: -16.375030517578125
    7. '	c' → logprob: -17.500030517578125
    8. '(' → logprob: -17.625030517578125
    9. '[c' → logprob: -18.000030517578125
    10. ' (' → logprob: -18.250030517578125

Token 1047: ',n' (ID: 18103)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.09489338099956512
    2. 'c' → logprob: -2.469893455505371
    3. ',' → logprob: -5.469893455505371
    4. 'in' → logprob: -7.094893455505371
    5. ',n' → logprob: -7.469893455505371
    6. 'n' → logprob: -8.719893455505371
    7. ' in' → logprob: -9.844893455505371
    8. ',t' → logprob: -9.844893455505371
    9. ',v' → logprob: -11.219893455505371
    10. '(c' → logprob: -11.469893455505371

Token 1048: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.381185919046402
    2. ',c' → logprob: -1.3811858892440796
    3. ',n' → logprob: -3.256186008453369
    4. ',t' → logprob: -4.256186008453369
    5. ' in' → logprob: -5.006186008453369
    6. ',' → logprob: -5.881186008453369
    7. ',in' → logprob: -6.631186008453369
    8. ',z' → logprob: -7.131186008453369
    9. ',v' → logprob: -7.381186008453369
    10. ',l' → logprob: -8.131185531616211

Token 1049: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0002668192028068006
    2. ' zip' → logprob: -8.250267028808594
    3. 'c' → logprob: -12.500267028808594
    4. '(zip' → logprob: -13.500267028808594
    5. 'enumer' → logprob: -15.000267028808594
    6. 'z' → logprob: -16.000267028808594
    7. ',c' → logprob: -18.750267028808594
    8. '.zip' → logprob: -18.750267028808594
    9. '```' → logprob: -19.000267028808594
    10. ',' → logprob: -19.000267028808594

Token 1050: '(C' (ID: 5559)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -3.7697225252486533e-06
    2. ' CO' → logprob: -12.875003814697266
    3. '(C' → logprob: -14.125003814697266
    4. '[' → logprob: -14.750003814697266
    5. 'Coin' → logprob: -16.125003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '(' → logprob: -17.250003814697266
    8. '_CO' → logprob: -17.500003814697266
    9. 'coin' → logprob: -19.500003814697266
    10. '.CO' → logprob: -20.500003814697266

Token 1051: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.0001732663222355768
    2. 'O' → logprob: -8.750173568725586
    3. 'IN' → logprob: -11.250173568725586
    4. 'oin' → logprob: -13.625173568725586
    5. 'CO' → logprob: -15.000173568725586
    6. 'ON' → logprob: -15.750173568725586
    7. 'OY' → logprob: -17.000173568725586
    8. 'OT' → logprob: -17.375173568725586
    9. '[' → logprob: -18.875173568725586
    10. 'ION' → logprob: -18.875173568725586

Token 1052: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -2.176947600673884e-05
    2. 'T' → logprob: -11.000021934509277
    3. 'YPES' → logprob: -12.875021934509277
    4. '_types' → logprob: -13.750021934509277
    5. 'Types' → logprob: -13.750021934509277
    6. 'types' → logprob: -16.62502098083496
    7. ' TYPES' → logprob: -17.00002098083496
    8. 'CO' → logprob: -17.25002098083496
    9. 'ypes' → logprob: -17.25002098083496
    10. '.Types' → logprob: -18.12502098083496

Token 1053: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.7336786985397339
    2. 'tpl' → logprob: -0.7336786985397339
    3. ',' → logprob: -3.2336788177490234
    4. ' tpl' → logprob: -8.983678817749023
    5. '_tpl' → logprob: -9.608678817749023
    6. '   ' → logprob: -10.233678817749023
    7. ',l' → logprob: -10.358678817749023
    8. ',tp' → logprob: -11.108678817749023
    9. 't' → logprob: -11.983678817749023
    10. ')' → logprob: -12.233678817749023

Token 1054: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.00014454191841650754
    2. '(pl' → logprob: -9.500144958496094
    3. 'tpl' → logprob: -9.750144958496094
    4. '(' → logprob: -12.125144958496094
    5. 'PL' → logprob: -13.250144958496094
    6. 'pls' → logprob: -13.625144958496094
    7. 'plt' → logprob: -13.750144958496094
    8. '(t' → logprob: -14.875144958496094
    9. 'emplate' → logprob: -15.000144958496094
    10. '[' → logprob: -15.000144958496094

Token 1055: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0001017551330733113
    2. '   ' → logprob: -9.750102043151855
    3. ')' → logprob: -11.375102043151855
    4. ');}' → logprob: -11.500102043151855
    5. ')}
' → logprob: -12.125102043151855
    6. '}' → logprob: -12.125102043151855
    7. '):' → logprob: -12.250102043151855
    8. ')}>' → logprob: -13.750102043151855
    9. '[' → logprob: -14.125102043151855
    10. ')}

' → logprob: -14.250102043151855

Token 1056: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006782424170523882
    2. '#' → logprob: -7.750678062438965
    3. 'MAX' → logprob: -9.000678062438965
    4. 'INF' → logprob: -10.500678062438965
    5. 'class' → logprob: -10.875678062438965
    6. 'import' → logprob: -11.000678062438965
    7. 'max' → logprob: -11.125678062438965
    8. 'dp' → logprob: -11.250678062438965
    9. 'from' → logprob: -11.875678062438965
    10. 'for' → logprob: -12.125678062438965

Token 1057: ' add' (ID: 1147)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33100220561027527
    2. 'possible' → logprob: -2.5810022354125977
    3. 'state' → logprob: -2.7060022354125977
    4. 'can' → logprob: -4.081002235412598
    5. 'make' → logprob: -4.456002235412598
    6. 'update' → logprob: -4.581002235412598
    7. 'compute' → logprob: -4.581002235412598
    8. 'solve' → logprob: -4.581002235412598
    9. 'simulate' → logprob: -4.831002235412598
    10. 'calc' → logprob: -5.081002235412598

Token 1058: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.14057795703411102
    2. '_coin' → logprob: -2.265578031539917
    3. '_' → logprob: -5.015577793121338
    4. '_to' → logprob: -5.515577793121338
    5. 'def' → logprob: -6.015577793121338
    6. 's' → logprob: -6.140577793121338
    7. 'Coins' → logprob: -6.140577793121338
    8. '_s' → logprob: -6.515577793121338
    9. '_piece' → logprob: -6.640577793121338
    10. 'coins' → logprob: -6.890577793121338

Token 1059: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.004993821028620005
    2. '_ins' → logprob: -5.754993915557861
    3. 'in' → logprob: -6.504993915557861
    4. '_' → logprob: -8.254993438720703
    5. '_in' → logprob: -10.629993438720703
    6. '(ins' → logprob: -11.754993438720703
    7. '_inches' → logprob: -13.004993438720703
    8. 'i' → logprob: -13.129993438720703
    9. '```' → logprob: -13.254993438720703
    10. ''ins' → logprob: -13.254993438720703

Token 1060: '_dict' (ID: 11295)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000158842682139948
    2. '(co' → logprob: -9.25015926361084
    3. '_co' → logprob: -10.75015926361084
    4. '(_' → logprob: -11.37515926361084
    5. '_(' → logprob: -11.75015926361084
    6. '(' → logprob: -12.12515926361084
    7. ' (' → logprob: -12.25015926361084
    8. '_to' → logprob: -12.87515926361084
    9. '_a' → logprob: -13.12515926361084
    10. '((' → logprob: -13.50015926361084

Token 1061: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.292907877039397e-06
    2. '(dict' → logprob: -13.37500286102295
    3. ' (' → logprob: -14.50000286102295
    4. '(d' → logprob: -15.00000286102295
    5. 'def' → logprob: -15.50000286102295
    6. 'a' → logprob: -15.50000286102295
    7. 'dict' → logprob: -16.125003814697266
    8. '(' → logprob: -16.250003814697266
    9. '(def' → logprob: -16.875003814697266
    10. '(A' → logprob: -17.250003814697266

Token 1062: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061632052063941956
    2. ',a' → logprob: -2.9366321563720703
    3. ',b' → logprob: -5.18663215637207
    4. 'a' → logprob: -7.06163215637207
    5. ',d' → logprob: -9.31163215637207
    6. '(a' → logprob: -9.81163215637207
    7. ' ,' → logprob: -9.93663215637207
    8. ',c' → logprob: -10.93663215637207
    9. 'def' → logprob: -11.56163215637207
    10. 'b' → logprob: -11.68663215637207

Token 1063: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.474468857049942
    2. '):
' → logprob: -0.9744688272476196
    3. 'a' → logprob: -8.849469184875488
    4. '):
' → logprob: -8.974469184875488
    5. '(a' → logprob: -9.224469184875488
    6. '   ' → logprob: -11.599469184875488
    7. 'def' → logprob: -12.224469184875488
    8. ')' → logprob: -12.849469184875488
    9. '):

' → logprob: -13.099469184875488
    10. ':' → logprob: -13.599469184875488

Token 1064: '   ' (ID: 271)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.36664360761642456
    2. '   ' → logprob: -1.2416436672210693
    3. 'collections' → logprob: -4.86664342880249
    4. 'def' → logprob: -5.74164342880249
    5. '{return' → logprob: -6.11664342880249
    6. '{
' → logprob: -6.24164342880249
    7. '{x' → logprob: -6.36664342880249
    8. ' collections' → logprob: -8.241643905639648
    9. 'import' → logprob: -8.366643905639648
    10. 'from' → logprob: -9.241643905639648

Token 1065: ' #' (ID: 1069)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.26962345838546753
    2. 'def' → logprob: -1.7696235179901123
    3. 'return' → logprob: -3.7696235179901123
    4. '{return' → logprob: -4.269623279571533
    5. 'collections' → logprob: -4.644623279571533
    6. 'c' → logprob: -5.144623279571533
    7. 'a' → logprob: -5.894623279571533
    8. '{
' → logprob: -6.144623279571533
    9. '   ' → logprob: -6.144623279571533
    10. 'from' → logprob: -6.769623279571533

Token 1066: ' addition' (ID: 5856)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6295399069786072
    2. 'def' → logprob: -1.129539966583252
    3. 'collections' → logprob: -2.129539966583252
    4. 'from' → logprob: -5.254539966583252
    5. 'return' → logprob: -5.379539966583252
    6. '{x' → logprob: -5.504539966583252
    7. '{return' → logprob: -5.754539966583252
    8. '   ' → logprob: -6.379539966583252
    9. 'for' → logprob: -6.379539966583252
    10. 'dict' → logprob: -6.504539966583252

Token 1067: ' deux' (ID: 10301)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03144902363419533
    2. '(a' → logprob: -4.531448841094971
    3. '   ' → logprob: -5.031448841094971
    4. 'a' → logprob: -5.281448841094971
    5. '{' → logprob: -5.656448841094971
    6. '([' → logprob: -6.656448841094971
    7. '({' → logprob: -6.906448841094971
    8. 'dict' → logprob: -7.031448841094971
    9. ' =' → logprob: -7.531448841094971
    10. '=' → logprob: -7.906448841094971

Token 1068: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.8162014484405518
    2. 'def' → logprob: -1.0662014484405518
    3. 'Counter' → logprob: -2.6912014484405518
    4. '{
' → logprob: -2.9412014484405518
    5. 'a' → logprob: -3.1912014484405518
    6. 'd' → logprob: -3.6912014484405518
    7. '{' → logprob: -3.8162014484405518
    8. 'collections' → logprob: -6.066201210021973
    9. 'lists' → logprob: -7.441201210021973
    10. 'default' → logprob: -7.441201210021973

Token 1069: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16744065284729004
    2. '{' → logprob: -2.16744065284729
    3. '   ' → logprob: -3.91744065284729
    4. '{
' → logprob: -5.042440414428711
    5. 'import' → logprob: -5.417440414428711
    6. 'from' → logprob: -5.542440414428711
    7. 'a' → logprob: -5.792440414428711
    8. 'for' → logprob: -7.792440414428711
    9. '```' → logprob: -7.792440414428711
    10. '(a' → logprob: -7.917440414428711

Token 1070: ' pièces' (ID: 49165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.173139750957489
    2. 'collections' → logprob: -1.9231398105621338
    3. 'coins' → logprob: -4.923139572143555
    4. 'def' → logprob: -6.173139572143555
    5. 'Counter' → logprob: -7.173139572143555
    6. 'co' → logprob: -7.423139572143555
    7. 'coin' → logprob: -7.548139572143555
    8. '{' → logprob: -8.423139572143555
    9. '{
' → logprob: -8.673139572143555
    10. '
' → logprob: -8.798139572143555

Token 1071: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11686766892671585
    2. 'def' → logprob: -2.241867780685425
    3. '{' → logprob: -6.366867542266846
    4. '```' → logprob: -6.991867542266846
    5. '{
' → logprob: -7.491867542266846
    6. 'from' → logprob: -8.741868019104004
    7. '{return' → logprob: -8.866868019104004
    8. 'return' → logprob: -9.116868019104004
    9. 'for' → logprob: -9.616868019104004
    10. ':' → logprob: -9.616868019104004

Token 1072: '   ' (ID: 271)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6884311437606812
    2. '   ' → logprob: -1.0634311437606812
    3. 'def' → logprob: -1.9384311437606812
    4. '{
' → logprob: -5.438431262969971
    5. ':' → logprob: -6.688431262969971
    6. '```' → logprob: -6.813431262969971
    7. 'a' → logprob: -7.938431262969971
    8. '(a' → logprob: -8.438430786132812
    9. ':
' → logprob: -8.563430786132812
    10. 'import' → logprob: -8.688430786132812

Token 1073: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9004762172698975
    2. 'c' → logprob: -1.9004762172698975
    3. 'res' (adapté à ' res') → logprob: -2.0254762172698975
    4. 'collections' → logprob: -2.5254762172698975
    5. 'return' → logprob: -2.9004762172698975
    6. '   ' → logprob: -3.0254762172698975
    7. '{' → logprob: -3.1504762172698975
    8. 'd' → logprob: -3.1504762172698975
    9. 'from' → logprob: -4.025476455688477
    10. '{
' → logprob: -4.650476455688477

Token 1074: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1301465779542923
    2. ' =' → logprob: -2.1301465034484863
    3. '={}' → logprob: -6.005146503448486
    4. '={}
' → logprob: -7.380146503448486
    5. '={' → logprob: -10.255146980285645
    6. 'import' → logprob: -10.380146980285645
    7. 'def' → logprob: -10.380146980285645
    8. '   ' → logprob: -11.505146980285645
    9. 'a' → logprob: -12.130146980285645
    10. 'dict' → logprob: -13.005146980285645

Token 1075: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39570918679237366
    2. 'collections' → logprob: -1.1457091569900513
    3. '{}
' → logprob: -5.145709037780762
    4. 'dict' → logprob: -6.520709037780762
    5. '{' → logprob: -6.645709037780762
    6. '{}' → logprob: -8.895709037780762
    7. 'default' → logprob: -9.770709037780762
    8. ' collections' → logprob: -12.770709037780762
    9. '{}

' → logprob: -13.395709037780762
    10. ' a' → logprob: -13.395709037780762

Token 1076: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -5.7292167184641585e-05
    2. 'copy' → logprob: -10.875057220458984
    3. '{' → logprob: -11.375057220458984
    4. '.deepcopy' → logprob: -11.375057220458984
    5. 'a' → logprob: -12.375057220458984
    6. '.' → logprob: -13.000057220458984
    7. '{}
' → logprob: -13.125057220458984
    8. '={}
' → logprob: -13.250057220458984
    9. 'import' → logprob: -13.375057220458984
    10. '   ' → logprob: -13.625057220458984

Token 1077: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05404078960418701
    2. '()
' → logprob: -3.6790409088134766
    3. 'def' → logprob: -3.9290409088134766
    4. '()' → logprob: -5.554040908813477
    5. '```' → logprob: -6.554040908813477
    6. '
' → logprob: -6.929040908813477
    7. '{' → logprob: -7.804040908813477
    8. 'for' → logprob: -7.804040908813477
    9. 'import' → logprob: -9.179040908813477
    10. '``' → logprob: -9.679040908813477

Token 1078: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31412211060523987
    2. 'for' → logprob: -1.3141220808029175
    3. ' for' → logprob: -7.064122200012207
    4. '	for' → logprob: -12.939122200012207
    5. '
' → logprob: -13.814122200012207
    6. '```' → logprob: -13.814122200012207
    7. '       ' → logprob: -16.06412124633789
    8. ' ' → logprob: -16.06412124633789
    9. '``' → logprob: -16.43912124633789
    10. '   ' → logprob: -18.31412124633789

Token 1079: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016027313540689647
    2. '   ' → logprob: -8.750160217285156
    3. ' for' → logprob: -13.250160217285156
    4. '	for' → logprob: -17.000160217285156
    5. '       ' → logprob: -19.625160217285156
    6. '```' → logprob: -19.750160217285156
    7. ' ' → logprob: -20.875160217285156
    8. 'from' → logprob: -21.125160217285156
    9. '  ' → logprob: -21.500160217285156
    10. '``' → logprob: -22.125160217285156

Token 1080: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03810403496026993
    2. 'key' → logprob: -3.7881040573120117
    3. 'coin' → logprob: -4.288104057312012
    4. 'c' → logprob: -6.913104057312012
    5. 'val' → logprob: -10.788104057312012
    6. 'v' → logprob: -13.663104057312012
    7. 'co' → logprob: -15.288104057312012
    8. 'den' → logprob: -15.663104057312012
    9. 'ck' → logprob: -16.038103103637695
    10. ' k' → logprob: -16.288103103637695

Token 1081: ',v' (ID: 30680)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25411656498908997
    2. ' in' → logprob: -1.5041165351867676
    3. 'b' → logprob: -6.254116535186768
    4. ',b' → logprob: -8.379117012023926
    5. '```' → logprob: -11.254117012023926
    6. 'k' → logprob: -11.379117012023926
    7. ',' → logprob: -12.754117012023926
    8. '   ' → logprob: -13.129117012023926
    9. ',k' → logprob: -14.629117012023926
    10. ',in' → logprob: -14.629117012023926

Token 1082: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14271369576454163
    2. ' in' → logprob: -2.017713785171509
    3. 'import' → logprob: -11.26771354675293
    4. '   ' → logprob: -11.76771354675293
    5. 'ine' → logprob: -13.01771354675293
    6. '	in' → logprob: -13.51771354675293
    7. ',in' → logprob: -13.64271354675293
    8. 'n' → logprob: -13.89271354675293
    9. ' ' → logprob: -14.14271354675293
    10. 'i' → logprob: -14.26771354675293

Token 1083: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.547789674485102e-05
    2. ' b' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.875036239624023
    4. 'a' → logprob: -18.125036239624023
    5. '  ' → logprob: -21.250036239624023
    6. '{' → logprob: -21.500036239624023
    7. ' ' → logprob: -21.625036239624023
    8. '	b' → logprob: -21.750036239624023
    9. '    ' → logprob: -21.875036239624023
    10. 'res' → logprob: -22.125036239624023

Token 1084: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.021551935002207756
    2. 'in' → logprob: -4.021552085876465
    3. 'items' → logprob: -5.771552085876465
    4. '.iteritems' → logprob: -9.146552085876465
    5. ' in' → logprob: -9.396552085876465
    6. '.get' → logprob: -10.771552085876465
    7. 'import' → logprob: -11.396552085876465
    8. '_items' → logprob: -11.521552085876465
    9. '.' → logprob: -11.646552085876465
    10. '   ' → logprob: -11.646552085876465

Token 1085: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.0013520221691578627
    2. '():' → logprob: -6.626351833343506
    3. '():
' → logprob: -11.126352310180664
    4. '()' → logprob: -11.751352310180664
    5. '():

' → logprob: -13.251352310180664
    6. '()):
' → logprob: -13.501352310180664
    7. '()},
' → logprob: -16.251352310180664
    8. '()>' → logprob: -16.501352310180664
    9. 'def' → logprob: -16.501352310180664
    10. '()
' → logprob: -16.876352310180664

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008758509648032486
    2. ' res' → logprob: -7.250875949859619
    3. '   ' → logprob: -9.750875473022461
    4. 'res' → logprob: -9.875875473022461
    5. '(res' → logprob: -10.875875473022461
    6. '```' → logprob: -11.250875473022461
    7. ',res' → logprob: -11.250875473022461
    8. '	res' → logprob: -13.125875473022461
    9. ' ' → logprob: -13.250875473022461
    10. '#' → logprob: -13.750875473022461

Token 1087: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -9.388769103679806e-05
    2. '   ' → logprob: -10.000093460083008
    3. ' res' → logprob: -10.000093460083008
    4. '       ' → logprob: -12.875093460083008
    5. 'if' → logprob: -15.125093460083008
    6. '	res' → logprob: -15.625093460083008
    7. '           ' → logprob: -19.250093460083008
    8. ' ' → logprob: -19.375093460083008
    9. '(res' → logprob: -19.500093460083008
    10. '  ' → logprob: -19.750093460083008

Token 1088: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.3856492842023727e-06
    2. 'k' → logprob: -14.625000953674316
    3. '       ' → logprob: -14.750000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '.setdefault' → logprob: -16.000001907348633
    6. '=k' → logprob: -17.125001907348633
    7. '=' → logprob: -17.375001907348633
    8. ' [' → logprob: -17.500001907348633
    9. '           ' → logprob: -17.875001907348633
    10. '[v' → logprob: -18.250001907348633

Token 1089: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27160435914993286
    2. '=' → logprob: -2.271604299545288
    3. ']=' → logprob: -2.396604299545288
    4. '=res' → logprob: -3.771604299545288
    5. ']+=' → logprob: -4.021604537963867
    6. '+=' → logprob: -6.646604537963867
    7. 'res' → logprob: -7.396604537963867
    8. '(res' → logprob: -8.271604537963867
    9. '       ' → logprob: -8.646604537963867
    10. '   ' → logprob: -9.271604537963867

Token 1090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03038322739303112
    2. '=res' → logprob: -3.5303831100463867
    3. ' =' → logprob: -7.905383110046387
    4. '+=' → logprob: -8.405383110046387
    5. 'res' → logprob: -10.155383110046387
    6. '(res' → logprob: -14.530383110046387
    7. ',res' → logprob: -15.155383110046387
    8. ' res' → logprob: -15.280383110046387
    9. ' +=' → logprob: -15.780383110046387
    10. '_res' → logprob: -16.280384063720703

Token 1091: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007107630372047424
    2. ' res' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.875710487365723
    4. '	res' → logprob: -15.375710487365723
    5. '(res' → logprob: -16.37571144104004
    6. 'ress' → logprob: -17.12571144104004
    7. 're' → logprob: -17.62571144104004
    8. '       ' → logprob: -17.75071144104004
    9. '$res' → logprob: -18.00071144104004
    10. 'result' → logprob: -18.25071144104004

Token 1092: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010437761375214905
    2. 'res' → logprob: -9.750103950500488
    3. 'get' → logprob: -10.000103950500488
    4. 'k' → logprob: -14.875103950500488
    5. '[k' → logprob: -16.250104904174805
    6. 'a' → logprob: -17.000104904174805
    7. '+' → logprob: -17.250104904174805
    8. '_res' → logprob: -17.375104904174805
    9. '.res' → logprob: -17.625104904174805
    10. ' res' → logprob: -18.125104904174805

Token 1093: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0280383548888494e-06
    2. '(k' → logprob: -13.875000953674316
    3. ' k' → logprob: -17.125001907348633
    4. '```' → logprob: -21.375001907348633
    5. ',k' → logprob: -21.500001907348633
    6. 'c' → logprob: -22.750001907348633
    7. '{k' → logprob: -22.750001907348633
    8. '	k' → logprob: -22.875001907348633
    9. '   ' → logprob: -22.875001907348633
    10. ' ' → logprob: -22.875001907348633

Token 1094: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008172504603862762
    2. ',k' → logprob: -7.37581729888916
    3. ',' → logprob: -8.62581729888916
    4. ')' → logprob: -12.37581729888916
    5. ' k' → logprob: -12.50081729888916
    6. '(k' → logprob: -12.87581729888916
    7. 'c' → logprob: -15.50081729888916
    8. 'None' → logprob: -15.50081729888916
    9. '{k' → logprob: -16.250816345214844
    10. ',None' → logprob: -16.875816345214844

Token 1095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '       ' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'v' → logprob: -19.750001907348633
    6. ')' → logprob: -19.875001907348633
    7. '۰' → logprob: -20.375001907348633
    8. 'k' → logprob: -20.625001907348633
    9. 'res' → logprob: -20.875001907348633
    10. 'lambda' → logprob: -21.000001907348633

Token 1096: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14527104794979095
    2. ')+' → logprob: -2.020271062850952
    3. '+' → logprob: -6.020270824432373
    4. ',' → logprob: -9.395271301269531
    5. ' +' → logprob: -10.520271301269531
    6. ']+' → logprob: -11.145271301269531
    7. ')+(' → logprob: -11.270271301269531
    8. '+)' → logprob: -11.895271301269531
    9. '0' → logprob: -12.520271301269531
    10. ' )' → logprob: -12.520271301269531

Token 1097: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -17.25
    3. '	v' → logprob: -24.75
    4. '   ' → logprob: -25.0
    5. 'vj' → logprob: -26.5
    6. 'val' → logprob: -27.75
    7. '$v' → logprob: -27.875
    8. 'vq' → logprob: -28.0
    9. ')v' → logprob: -28.25
    10. '```' → logprob: -28.5

Token 1098: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1099: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.031157969729975e-05
    2. 'return' → logprob: -9.500090599060059
    3. ' return' → logprob: -11.375090599060059
    4. '
' → logprob: -13.000090599060059
    5. '```' → logprob: -14.375090599060059
    6. 'for' → logprob: -14.750090599060059
    7. '       ' → logprob: -15.500090599060059
    8. '	return' → logprob: -15.625090599060059
    9. '<|end|>' → logprob: -17.125089645385742
    10. ':return' → logprob: -17.375089645385742

Token 1100: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22058889269828796
    2. 'return' (adapté à ' return') → logprob: -1.7205889225006104
    3. ' return' → logprob: -3.9705889225006104
    4. 'for' → logprob: -9.095588684082031
    5. '
' → logprob: -11.845588684082031
    6. ' for' → logprob: -12.095588684082031
    7. ' ' → logprob: -12.970588684082031
    8. '	return' → logprob: -13.095588684082031
    9. 'def' → logprob: -15.220588684082031
    10. '```' → logprob: -15.470588684082031

Token 1101: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.6312321753939614e-05
    2. '{' → logprob: -10.250036239624023
    3. ' res' → logprob: -14.000036239624023
    4. '(res' → logprob: -17.250036239624023
    5. 'dict' → logprob: -18.750036239624023
    6. '	res' → logprob: -20.750036239624023
    7. '{
' → logprob: -21.000036239624023
    8. ' {' → logprob: -21.250036239624023
    9. 'v' → logprob: -21.250036239624023
    10. '{k' → logprob: -21.500036239624023

Token 1102: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020566426683217287
    2. '
' → logprob: -6.75205659866333
    3. '```' → logprob: -7.87705659866333
    4. 'from' → logprob: -8.377057075500488
    5. 'import' → logprob: -9.252057075500488
    6. '#' → logprob: -10.002057075500488
    7. 'CO' → logprob: -10.252057075500488
    8. 'MAX' → logprob: -10.377057075500488
    9. 'return' → logprob: -10.877057075500488
    10. ')' → logprob: -11.502057075500488

Token 1103: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032728989608585835
    2. '```' → logprob: -6.753273010253906
    3. ')' → logprob: -7.878273010253906
    4. '#' → logprob: -7.878273010253906
    5. '
' → logprob: -8.628273010253906
    6. 'MAX' → logprob: -8.753273010253906
    7. 'import' → logprob: -9.128273010253906
    8. 'CO' → logprob: -9.128273010253906
    9. ':' → logprob: -9.253273010253906
    10. '500' → logprob: -9.253273010253906

Token 1104: ' sub' (ID: 1543)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5675817728042603
    2. 'subtract' → logprob: -1.4425817728042603
    3. 'sub' → logprob: -1.9425817728042603
    4. 'remove' → logprob: -3.1925816535949707
    5. 'can' → logprob: -5.192581653594971
    6. 'dp' → logprob: -7.067581653594971
    7. 'min' → logprob: -7.067581653594971
    8. 'def' → logprob: -7.192581653594971
    9. 'coin' → logprob: -7.442581653594971
    10. 'scale' → logprob: -7.942581653594971

Token 1105: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00010831133840838447
    2. 's' → logprob: -9.25010871887207
    3. '(a' → logprob: -12.75010871887207
    4. 'stract' → logprob: -13.62510871887207
    5. '(co' → logprob: -13.75010871887207
    6. '
' → logprob: -13.75010871887207
    7. 'tract' → logprob: -13.87510871887207
    8. '```' → logprob: -14.00010871887207
    9. 'dict' → logprob: -14.12510871887207
    10. 'a' → logprob: -14.37510871887207

Token 1106: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.2471589798224159e-05
    2. '_ins' → logprob: -12.125012397766113
    3. '_' → logprob: -13.250012397766113
    4. '(ins' → logprob: -13.250012397766113
    5. 'in' → logprob: -13.375012397766113
    6. 'i' → logprob: -14.250012397766113
    7. '[' → logprob: -15.250012397766113
    8. '#' → logprob: -15.875012397766113
    9. 'coins' → logprob: -16.12501335144043
    10. 'a' → logprob: -16.12501335144043

Token 1107: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.000500966387335211
    2. 'dict' → logprob: -8.000500679016113
    3. '(a' → logprob: -9.625500679016113
    4. 'a' → logprob: -10.375500679016113
    5. '_co' → logprob: -10.500500679016113
    6. 'def' → logprob: -11.250500679016113
    7. '_def' → logprob: -11.250500679016113
    8. '_dic' → logprob: -12.125500679016113
    9. 'd' → logprob: -12.500500679016113
    10. 's' → logprob: -13.000500679016113

Token 1108: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -15.625
    3. 'a' → logprob: -17.0
    4. ' (' → logprob: -19.375
    5. '#' → logprob: -20.625
    6. '(
' → logprob: -21.125
    7. '(b' → logprob: -21.25
    8. '(' → logprob: -21.75
    9. '(s' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 1109: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.011978328227996826
    2. ',' → logprob: -4.5119781494140625
    3. ',a' → logprob: -7.0119781494140625
    4. ' ,' → logprob: -11.761978149414062
    5. ',k' → logprob: -12.136978149414062
    6. 'b' → logprob: -12.386978149414062
    7. ',B' → logprob: -12.636978149414062
    8. '(b' → logprob: -12.886978149414062
    9. ',d' → logprob: -13.386978149414062
    10. 'a' → logprob: -14.136978149414062

Token 1110: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026500245556235313
    2. '):' → logprob: -3.6515002250671387
    3. '):
' → logprob: -9.276500701904297
    4. ',' → logprob: -10.151500701904297
    5. ',a' → logprob: -10.526500701904297
    6. 'a' → logprob: -11.026500701904297
    7. '   ' → logprob: -11.151500701904297
    8. '):

' → logprob: -12.151500701904297
    9. ')' → logprob: -12.901500701904297
    10. '```' → logprob: -14.776500701904297

Token 1111: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -13.000004768371582
    3. '```' → logprob: -13.250004768371582
    4. '   ' → logprob: -14.250004768371582
    5. ':def' → logprob: -17.3750057220459
    6. 'a' → logprob: -17.6250057220459
    7. '``' → logprob: -18.1250057220459
    8. '(a' → logprob: -18.5000057220459
    9. '#' → logprob: -18.8750057220459
    10. 'd' → logprob: -19.2500057220459

Token 1112: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03008078783750534
    2. 'def' → logprob: -3.530080795288086
    3. '   ' → logprob: -8.280080795288086
    4. ' res' → logprob: -10.030080795288086
    5. '```' → logprob: -11.530080795288086
    6. '	res' → logprob: -11.780080795288086
    7. '
' → logprob: -11.780080795288086
    8. 'result' → logprob: -12.655080795288086
    9. '#' (adapté à ' #') → logprob: -12.780080795288086
    10. '_res' → logprob: -14.905080795288086

Token 1113: ' sou' (ID: 4069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3868749439716339
    2. 'res' → logprob: -1.1368749141693115
    3. '#' → logprob: -13.51187515258789
    4. '   ' → logprob: -14.13687515258789
    5. ' res' → logprob: -14.13687515258789
    6. '
' → logprob: -14.63687515258789
    7. 'result' → logprob: -15.26187515258789
    8. '```' → logprob: -15.76187515258789
    9. ' def' → logprob: -15.88687515258789
    10. '	res' → logprob: -16.76187515258789

Token 1114: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004081724211573601
    2. 'bst' → logprob: -6.629081726074219
    3. 'stract' → logprob: -7.004081726074219
    4. 'br' → logprob: -7.504081726074219
    5. 'bs' → logprob: -7.629081726074219
    6. 'bres' → logprob: -8.629081726074219
    7. 'bc' → logprob: -9.129081726074219
    8. 'straction' → logprob: -9.504081726074219
    9. '{
' → logprob: -9.879081726074219
    10. 'bt' → logprob: -10.004081726074219

Token 1115: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.007414839696139097
    2. 'it' → logprob: -5.257414817810059
    3. 't' → logprob: -6.882414817810059
    4. '_ct' → logprob: -8.007414817810059
    5. 'c' → logprob: -8.132414817810059
    6. 'ict' → logprob: -8.632414817810059
    7. '_co' → logprob: -9.882414817810059
    8. 'cts' → logprob: -10.007414817810059
    9. 'co' → logprob: -10.257414817810059
    10. 'dict' → logprob: -10.382414817810059

Token 1116: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006135568488389254
    2. 'def' → logprob: -5.1311354637146
    3. 'dict' → logprob: -9.256135940551758
    4. '{' → logprob: -9.756135940551758
    5. '{
' → logprob: -11.006135940551758
    6. 'b' → logprob: -11.256135940551758
    7. ' a' → logprob: -11.506135940551758
    8. '(a' → logprob: -11.631135940551758
    9. '
' → logprob: -13.756135940551758
    10. '```' → logprob: -13.881135940551758

Token 1117: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40462422370910645
    2. '_dict' → logprob: -1.2796242237091064
    3. 'dict' → logprob: -3.2796242237091064
    4. '(a' → logprob: -4.279623985290527
    5. 'from' → logprob: -6.154623985290527
    6. 'Dict' → logprob: -7.904623985290527
    7. '
' → logprob: -8.279623985290527
    8. ')' → logprob: -9.529623985290527
    9. '```' → logprob: -9.529623985290527
    10. '_DICT' → logprob: -10.154623985290527

Token 1118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.127333340875339e-06
    2. ' a' → logprob: -12.750003814697266
    3. '{' → logprob: -14.625003814697266
    4. '{
' → logprob: -14.875003814697266
    5. 'def' → logprob: -15.375003814697266
    6. 'dict' → logprob: -16.375003814697266
    7. '
' → logprob: -16.875003814697266
    8. '```' → logprob: -18.625003814697266
    9. '(a' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.750003814697266

Token 1119: ' dict' (ID: 11878)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001351306913420558
    2. '   ' → logprob: -7.126351356506348
    3. ' def' → logprob: -8.126351356506348
    4. '```' → logprob: -9.126351356506348
    5. '
' → logprob: -10.251351356506348
    6. 'a' → logprob: -10.751351356506348
    7. ':
' → logprob: -11.001351356506348
    8. ':' → logprob: -11.126351356506348
    9. '<|end|>' → logprob: -11.376351356506348
    10. '#' → logprob: -11.876351356506348

Token 1120: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12707079946994781
    2. '(a' → logprob: -2.127070903778076
    3. '```' → logprob: -9.627070426940918
    4. 'a' → logprob: -10.627070426940918
    5. 'dict' → logprob: -10.627070426940918
    6. ' def' → logprob: -12.127070426940918
    7. '   ' → logprob: -12.127070426940918
    8. '{' → logprob: -12.627070426940918
    9. '[a' → logprob: -12.752070426940918
    10. '{
' → logprob: -13.002070426940918

Token 1121: ' None' (ID: 4662)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12167643755674362
    2. 'def' → logprob: -2.621676445007324
    3. '   ' → logprob: -3.371676445007324
    4. ' res' → logprob: -5.371676445007324
    5. 'for' → logprob: -5.871676445007324
    6. ' for' → logprob: -9.871676445007324
    7. '```' → logprob: -11.496676445007324
    8. ' def' → logprob: -11.621676445007324
    9. '
' → logprob: -11.621676445007324
    10. 'result' → logprob: -12.371676445007324

Token 1122: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6451393365859985
    2. ' if' → logprob: -1.3951393365859985
    3. 'def' → logprob: -1.8951393365859985
    4. '=' → logprob: -2.895139217376709
    5. '   ' → logprob: -5.020139217376709
    6. '=None' → logprob: -5.020139217376709
    7. '```' → logprob: -5.645139217376709
    8. ' =' → logprob: -6.520139217376709
    9. 'for' → logprob: -6.895139217376709
    10. 'a' → logprob: -7.270139217376709

Token 1123: ' impossible' (ID: 19786)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0036249039694666862
    2. ' any' → logprob: -5.87862491607666
    3. 'v' → logprob: -7.37862491607666
    4. 'b' → logprob: -10.00362491607666
    5. '(any' → logprob: -10.25362491607666
    6. 'k' → logprob: -10.37862491607666
    7. 'y' → logprob: -10.75362491607666
    8. 'a' → logprob: -11.12862491607666
    9. 'not' → logprob: -11.25362491607666
    10. '   ' → logprob: -11.50362491607666

Token 1124: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004378617275506258
    2. '
' → logprob: -5.629378795623779
    3. '   ' → logprob: -7.879378795623779
    4. '```' → logprob: -8.004378318786621
    5. ' def' → logprob: -10.754378318786621
    6. 'if' → logprob: -11.254378318786621
    7. '``' → logprob: -11.504378318786621
    8. 'for' → logprob: -11.879378318786621
    9. 'res' → logprob: -11.879378318786621
    10. 'a' → logprob: -13.004378318786621

Token 1125: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031551423016935587
    2. '```' → logprob: -6.37815523147583
    3. '   ' → logprob: -7.00315523147583
    4. ' def' → logprob: -8.378154754638672
    5. '
' → logprob: -9.253154754638672
    6. ':' → logprob: -9.378154754638672
    7. ':
' → logprob: -10.503154754638672
    8. '``' → logprob: -10.503154754638672
    9. ':def' → logprob: -10.503154754638672
    10. '{' → logprob: -11.378154754638672

Token 1126: ' res' (ID: 694)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020592615474015474
    2. 'for' → logprob: -6.377059459686279
    3. 'if' → logprob: -9.002058982849121
    4. '```' → logprob: -9.252058982849121
    5. '   ' → logprob: -10.002058982849121
    6. '
' → logprob: -10.002058982849121
    7. 'res' (adapté à ' res') → logprob: -10.252058982849121
    8. ' def' → logprob: -12.002058982849121
    9. '``' → logprob: -12.752058982849121
    10. ' for' → logprob: -13.252058982849121

Token 1127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048710454255342484
    2. ' =' → logprob: -3.048710346221924
    3. '=a' → logprob: -9.423710823059082
    4. '={}' → logprob: -10.423710823059082
    5. 'a' → logprob: -12.423710823059082
    6. '={}
' → logprob: -12.548710823059082
    7. '=
' → logprob: -13.548710823059082
    8. '={' → logprob: -13.923710823059082
    9. 'def' → logprob: -13.923710823059082
    10. '=None' → logprob: -14.798710823059082

Token 1128: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04481327161192894
    2. '{}
' → logprob: -3.2948131561279297
    3. '{}' → logprob: -5.04481315612793
    4. 'None' → logprob: -8.16981315612793
    5. ' {}
' → logprob: -11.79481315612793
    6. '{}

' → logprob: -12.16981315612793
    7. ' a' → logprob: -12.54481315612793
    8. '{' → logprob: -12.79481315612793
    9. '{}\' → logprob: -13.41981315612793
    10. '{};
' → logprob: -13.91981315612793

Token 1129: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.00011200665176147595
    2. 'a' → logprob: -10.37511157989502
    3. 'def' → logprob: -10.50011157989502
    4. 'copy' → logprob: -11.00011157989502
    5. ' =' → logprob: -11.25011157989502
    6. '.' → logprob: -11.75011157989502
    7. '=' → logprob: -12.12511157989502
    8. '```' → logprob: -13.37511157989502
    9. '=None' → logprob: -13.50011157989502
    10. 'import' → logprob: -13.50011157989502

Token 1130: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12752054631710052
    2. 'for' → logprob: -2.1275205612182617
    3. ' for' → logprob: -7.877520561218262
    4. 'def' → logprob: -8.627520561218262
    5. '```' → logprob: -11.002520561218262
    6. '
' → logprob: -11.252520561218262
    7. '	for' → logprob: -12.877520561218262
    8. '``' → logprob: -13.752520561218262
    9. '       ' → logprob: -16.002519607543945
    10. 'd' → logprob: -16.127519607543945

Token 1131: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04926960915327072
    2. '   ' → logprob: -3.049269676208496
    3. ' for' → logprob: -7.299269676208496
    4. '```' → logprob: -12.299269676208496
    5. 'def' → logprob: -14.299269676208496
    6. '	for' → logprob: -15.049269676208496
    7. '
' → logprob: -15.674269676208496
    8. ' ' → logprob: -15.924269676208496
    9. '``' → logprob: -16.04926872253418
    10. 'For' → logprob: -17.42426872253418

Token 1132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.822646693966817e-06
    2. '   ' → logprob: -12.000007629394531
    3. ' for' → logprob: -13.375007629394531
    4. '```' → logprob: -16.50000762939453
    5. '	for' → logprob: -18.25000762939453
    6. '``' → logprob: -19.37500762939453
    7. 'def' → logprob: -19.62500762939453
    8. '
' → logprob: -20.37500762939453
    9. 'import' → logprob: -22.75000762939453
    10. ' ' → logprob: -23.00000762939453

Token 1133: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.000000953674316
    3. ' k' → logprob: -15.125000953674316
    4. 'key' → logprob: -16.875
    5. '(k' → logprob: -17.125
    6. 'b' → logprob: -17.5
    7. '`' → logprob: -17.625
    8. '_k' → logprob: -18.125
    9. 'c' → logprob: -18.375
    10. '   ' → logprob: -18.5

Token 1134: ',v' (ID: 30680)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4049854278564453
    2. ',b' → logprob: -1.1549854278564453
    3. ',' → logprob: -4.529985427856445
    4. 'in' → logprob: -5.529985427856445
    5. 'k' → logprob: -6.654985427856445
    6. ',k' → logprob: -7.154985427856445
    7. ' in' → logprob: -7.404985427856445
    8. ' b' → logprob: -7.779985427856445
    9. '_,' → logprob: -10.654985427856445
    10. '```' → logprob: -11.279985427856445

Token 1135: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.044523369520902634
    2. ' in' → logprob: -3.1695234775543213
    3. ',res' → logprob: -7.294523239135742
    4. ',' → logprob: -7.669523239135742
    5. 'res' → logprob: -8.044523239135742
    6. ',b' → logprob: -11.044523239135742
    7. 'a' → logprob: -11.544523239135742
    8. '```' → logprob: -11.919523239135742
    9. ',in' → logprob: -12.044523239135742
    10. ',a' → logprob: -12.294523239135742

Token 1136: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015051016816869378
    2. ' b' → logprob: -6.501504898071289
    3. 'res' → logprob: -13.126504898071289
    4. 'a' → logprob: -14.751504898071289
    5. 'sub' → logprob: -15.126504898071289
    6. '(b' → logprob: -16.87650489807129
    7. '```' → logprob: -17.37650489807129
    8. 'list' → logprob: -18.12650489807129
    9. '[b' → logprob: -18.37650489807129
    10. '   ' → logprob: -18.50150489807129

Token 1137: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.023607878014445305
    2. 'in' → logprob: -4.2736077308654785
    3. ':' → logprob: -5.6486077308654785
    4. '   ' → logprob: -6.1486077308654785
    5. '.keys' → logprob: -6.6486077308654785
    6. 'items' → logprob: -7.5236077308654785
    7. ' in' → logprob: -7.7736077308654785
    8. '```' → logprob: -7.7736077308654785
    9. ':
' → logprob: -7.8986077308654785
    10. '       ' → logprob: -7.8986077308654785

Token 1138: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.07900259643793106
    2. '():' → logprob: -2.954002618789673
    3. '       ' → logprob: -3.829002618789673
    4. '   ' → logprob: -7.704002380371094
    5. ':
' → logprob: -7.829002380371094
    6. '()' → logprob: -8.204002380371094
    7. ':' → logprob: -8.329002380371094
    8. 'def' → logprob: -8.829002380371094
    9. 'res' → logprob: -8.954002380371094
    10. '():
' → logprob: -9.204002380371094

Token 1139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038682064041495323
    2. '   ' → logprob: -7.875386714935303
    3. 'if' → logprob: -13.000387191772461
    4. '```' → logprob: -13.125387191772461
    5. 'for' → logprob: -14.125387191772461
    6. '           ' → logprob: -15.000387191772461
    7. 'import' → logprob: -15.125387191772461
    8. ' if' → logprob: -15.250387191772461
    9. 'def' → logprob: -15.875387191772461
    10. '	' → logprob: -16.25038719177246

Token 1140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08104541152715683
    2. '       ' → logprob: -2.581045389175415
    3. '   ' → logprob: -6.706045627593994
    4. ' if' → logprob: -7.081045627593994
    5. '```' → logprob: -9.831045150756836
    6. 'res' → logprob: -10.706045150756836
    7. 'for' → logprob: -11.956045150756836
    8. '	if' → logprob: -12.331045150756836
    9. '``' → logprob: -14.456045150756836
    10. '           ' → logprob: -14.456045150756836

Token 1141: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0002910102193709463
    2. 'k' → logprob: -8.250290870666504
    3. '   ' → logprob: -11.000290870666504
    4. ' res' → logprob: -11.500290870666504
    5. 'v' → logprob: -14.125290870666504
    6. '	res' → logprob: -14.500290870666504
    7. '           ' → logprob: -14.750290870666504
    8. 'ress' → logprob: -15.250290870666504
    9. '       ' → logprob: -15.500290870666504
    10. '(res' → logprob: -15.750290870666504

Token 1142: '.get' (ID: 775)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005606581107713282
    2. '.get' → logprob: -7.500560760498047
    3. 'k' → logprob: -12.000560760498047
    4. 'get' → logprob: -13.500560760498047
    5. '[key' → logprob: -17.375560760498047
    6. '
' → logprob: -17.875560760498047
    7. '```' → logprob: -18.125560760498047
    8. '(k' → logprob: -18.500560760498047
    9. '[c' → logprob: -18.750560760498047
    10. '#get' → logprob: -19.375560760498047

Token 1143: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019891862757503986
    2. '(k' → logprob: -6.251989364624023
    3. ' k' → logprob: -9.751989364624023
    4. ',k' → logprob: -13.626989364624023
    5. '[k' → logprob: -14.876989364624023
    6. '{k' → logprob: -15.001989364624023
    7. '"k' → logprob: -16.126989364624023
    8. '	k' → logprob: -16.251989364624023
    9. '(' → logprob: -16.501989364624023
    10. '=k' → logprob: -16.876989364624023

Token 1144: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.17724457383155823
    2. 'k' → logprob: -1.9272445440292358
    3. ',' → logprob: -4.177244663238525
    4. '(k' → logprob: -6.927244663238525
    5. ' k' → logprob: -8.802244186401367
    6. '[k' → logprob: -9.427244186401367
    7. ',None' → logprob: -9.677244186401367
    8. ',<' → logprob: -9.927244186401367
    9. ':k' → logprob: -10.177244186401367
    10. '```' → logprob: -10.177244186401367

Token 1145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002501343551557511
    2. 'k' → logprob: -8.875249862670898
    3. 'None' → logprob: -9.125249862670898
    4. ' ' → logprob: -14.375249862670898
    5. '<' → logprob: -15.500249862670898
    6. ' k' → logprob: -15.875249862670898
    7. ' None' → logprob: -16.5002498626709
    8. ',k' → logprob: -16.5002498626709
    9. '{k' → logprob: -16.7502498626709
    10. '```' → logprob: -16.7502498626709

Token 1146: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4312526285648346
    2. ' <' → logprob: -1.0562525987625122
    3. '<v' → logprob: -6.181252479553223
    4. ')<' → logprob: -8.556252479553223
    5. '<c' → logprob: -9.931252479553223
    6. '<p' → logprob: -10.556252479553223
    7. '<s' → logprob: -10.681252479553223
    8. '<int' → logprob: -10.681252479553223
    9. '<w' → logprob: -11.181252479553223
    10. '<b' → logprob: -11.431252479553223

Token 1147: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.038379739969968796
    2. ' <' → logprob: -3.538379669189453
    3. '<v' → logprob: -4.788379669189453
    4. '<b' → logprob: -9.788379669189453
    5. '<n' → logprob: -10.163379669189453
    6. '<p' → logprob: -10.538379669189453
    7. '<t' → logprob: -10.538379669189453
    8. '<int' → logprob: -10.788379669189453
    9. '<s' → logprob: -10.913379669189453
    10. '<c' → logprob: -11.288379669189453

Token 1148: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -16.875
    3. '   ' → logprob: -17.625
    4. 'res' → logprob: -19.75
    5. '	v' → logprob: -20.25
    6. '       ' → logprob: -22.0
    7. '    ' → logprob: -22.125
    8. ')v' → logprob: -22.25
    9. '           ' → logprob: -22.5
    10. '  ' → logprob: -22.5

Token 1149: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02618696168065071
    2. ':
' → logprob: -3.901186943054199
    3. ':' → logprob: -5.401186943054199
    4. '       ' → logprob: -7.526186943054199
    5. ':return' → logprob: -8.1511869430542
    6. '```' → logprob: -9.1511869430542
    7. 'return' → logprob: -9.9011869430542
    8. '):
' → logprob: -10.4011869430542
    9. '          ' → logprob: -10.6511869430542
    10. ' or' → logprob: -11.0261869430542

Token 1150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002525184245314449
    2. 'return' → logprob: -8.875252723693848
    3. '       ' → logprob: -9.125252723693848
    4. ' return' → logprob: -12.750252723693848
    5. '```' → logprob: -15.000252723693848
    6. '               ' → logprob: -15.625252723693848
    7. '   ' → logprob: -15.625252723693848
    8. '          ' → logprob: -17.37525177001953
    9. '		' → logprob: -17.62525177001953
    10. '         ' → logprob: -17.75025177001953

Token 1151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2015082687139511
    2. '           ' → logprob: -1.7015082836151123
    3. ' return' → logprob: -9.951508522033691
    4. '       ' → logprob: -10.826508522033691
    5. '```' → logprob: -11.201508522033691
    6. '               ' → logprob: -11.576508522033691
    7. 'None' → logprob: -12.576508522033691
    8. '	return' → logprob: -14.951508522033691
    9. '{return' → logprob: -15.326508522033691
    10. '   ' → logprob: -15.951508522033691

Token 1152: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.128163257315464e-07
    2. ' None' → logprob: -15.25
    3. 'none' → logprob: -20.75
    4. '```' → logprob: -21.25
    5. '_None' → logprob: -21.75
    6. '
' → logprob: -22.25
    7. '=None' → logprob: -23.5
    8. '(None' → logprob: -23.5
    9. '   ' → logprob: -24.25
    10. '_none' → logprob: -24.75

Token 1153: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4418171455617994e-05
    2. '   ' → logprob: -10.250044822692871
    3. '
' → logprob: -12.250044822692871
    4. 'for' → logprob: -13.250044822692871
    5. '```' → logprob: -13.750044822692871
    6. '           ' → logprob: -13.875044822692871
    7. 'import' → logprob: -15.375044822692871
    8. 'return' → logprob: -16.250043869018555
    9. 'def' → logprob: -17.250043869018555
    10. ' for' → logprob: -17.750043869018555

Token 1154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.484132169745862e-05
    2. '   ' → logprob: -9.375094413757324
    3. 'for' → logprob: -12.500094413757324
    4. '```' → logprob: -12.500094413757324
    5. '           ' → logprob: -13.250094413757324
    6. '
' → logprob: -14.625094413757324
    7. 'return' → logprob: -15.250094413757324
    8. 'def' → logprob: -17.00009536743164
    9. 'res' → logprob: -17.25009536743164
    10. '               ' → logprob: -18.12509536743164

Token 1155: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2015693485736847
    2. 'res' (adapté à ' res') → logprob: -1.7015693187713623
    3. '   ' → logprob: -8.951569557189941
    4. '           ' → logprob: -11.576569557189941
    5. ' res' → logprob: -11.576569557189941
    6. 'return' → logprob: -12.451569557189941
    7. '```' → logprob: -12.826569557189941
    8. 'for' → logprob: -14.951569557189941
    9. '     ' → logprob: -15.201569557189941
    10. '	res' → logprob: -15.701569557189941

Token 1156: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.250000953674316
    3. '       ' → logprob: -16.375
    4. '           ' → logprob: -17.375
    5. '```' → logprob: -17.375
    6. '
' → logprob: -17.75
    7. '[key' → logprob: -18.375
    8. '[' → logprob: -18.5
    9. '{k' → logprob: -18.5
    10. 'k' → logprob: -18.5

Token 1157: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.7491250875755213e-05
    2. '```' → logprob: -11.750027656555176
    3. '=k' → logprob: -11.750027656555176
    4. 'k' → logprob: -12.875027656555176
    5. '       ' → logprob: -13.125027656555176
    6. '
' → logprob: -13.375027656555176
    7. ',k' → logprob: -13.625027656555176
    8. '           ' → logprob: -14.000027656555176
    9. '{k' → logprob: -14.375027656555176
    10. '=' → logprob: -14.500027656555176

Token 1158: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.640644371509552
    2. '[k' → logprob: -1.0156443119049072
    3. ' -=' → logprob: -2.6406443119049072
    4. '[' → logprob: -4.390644550323486
    5. '       ' → logprob: -4.640644550323486
    6. '=' → logprob: -5.015644550323486
    7. '           ' → logprob: -5.140644550323486
    8. '-' → logprob: -5.890644550323486
    9. '```' → logprob: -7.015644550323486
    10. 'res' → logprob: -8.015644073486328

Token 1159: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004925066023133695
    2. ' res' → logprob: -7.625492572784424
    3. '       ' → logprob: -13.000492095947266
    4. '           ' → logprob: -14.000492095947266
    5. '   ' → logprob: -14.250492095947266
    6. '     ' → logprob: -15.875492095947266
    7. '(res' → logprob: -15.875492095947266
    8. '```' → logprob: -15.875492095947266
    9. '0' → logprob: -16.500492095947266
    10. '	res' → logprob: -16.500492095947266

Token 1160: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.15058057010173798
    2. '[k' → logprob: -2.275580644607544
    3. 'res' → logprob: -3.400580644607544
    4. 'get' → logprob: -5.775580406188965
    5. ' -' → logprob: -9.025580406188965
    6. '-' → logprob: -9.275580406188965
    7. 'k' → logprob: -9.400580406188965
    8. '[v' → logprob: -9.650580406188965
    9. '-get' → logprob: -10.025580406188965
    10. '(k' → logprob: -10.150580406188965

Token 1161: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12692883610725403
    2. '(k' → logprob: -2.1269288063049316
    3. ' k' → logprob: -14.62692928314209
    4. '{k' → logprob: -15.75192928314209
    5. '[k' → logprob: -16.376928329467773
    6. ',k' → logprob: -17.376928329467773
    7. '```' → logprob: -17.376928329467773
    8. 'def' → logprob: -17.376928329467773
    9. '   ' → logprob: -17.501928329467773
    10. '	k' → logprob: -17.501928329467773

Token 1162: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.46610087156295776
    2. ',k' → logprob: -1.7161009311676025
    3. '(k' → logprob: -1.7161009311676025
    4. ')' → logprob: -4.841100692749023
    5. '-k' → logprob: -5.966100692749023
    6. ',' → logprob: -6.841100692749023
    7. ' k' → logprob: -7.841100692749023
    8. '```' → logprob: -8.341100692749023
    9. '[k' → logprob: -8.466100692749023
    10. '{k' → logprob: -8.591100692749023

Token 1163: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011065036058425903
    2. '0' → logprob: -4.5110650062561035
    3. 'c' → logprob: -12.011065483093262
    4. '(k' → logprob: -12.886065483093262
    5. '```' → logprob: -12.886065483093262
    6. ' k' → logprob: -13.261065483093262
    7. '
' → logprob: -13.761065483093262
    8. 'v' → logprob: -14.386065483093262
    9. '``' → logprob: -14.886065483093262
    10. ')' → logprob: -14.886065483093262

Token 1164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25923439860343933
    2. ')-' → logprob: -1.8842344284057617
    3. 'k' → logprob: -3.1342344284057617
    4. '0' → logprob: -3.8842344284057617
    5. '-k' → logprob: -6.134234428405762
    6. '```' → logprob: -6.134234428405762
    7. '-' → logprob: -6.259234428405762
    8. '(k' → logprob: -6.634234428405762
    9. '       ' → logprob: -7.009234428405762
    10. ' -' → logprob: -7.134234428405762

Token 1165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14086824655532837
    2. '-' → logprob: -2.3908681869506836
    3. '-v' → logprob: -3.2658681869506836
    4. 'v' → logprob: -7.390868186950684
    5. '-k' → logprob: -7.390868186950684
    6. '(v' → logprob: -8.640868186950684
    7. '```' → logprob: -8.890868186950684
    8. '()-' → logprob: -10.015868186950684
    9. '-b' → logprob: -10.640868186950684
    10. ' v' → logprob: -11.640868186950684

Token 1166: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.8087270038668066e-05
    2. ' v' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.375027656555176
    4. 'k' → logprob: -15.375027656555176
    5. '       ' → logprob: -16.750028610229492
    6. '           ' → logprob: -18.750028610229492
    7. '    ' → logprob: -20.000028610229492
    8. 'b' → logprob: -20.125028610229492
    9. '     ' → logprob: -20.500028610229492
    10. '```' → logprob: -20.500028610229492

Token 1167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008756146766245365
    2. '       ' → logprob: -4.758756160736084
    3. 'return' → logprob: -9.258755683898926
    4. 'def' → logprob: -10.258755683898926
    5. 'for' → logprob: -11.758755683898926
    6. 'import' → logprob: -14.133755683898926
    7. ' return' → logprob: -14.258755683898926
    8. '
' → logprob: -14.508755683898926
    9. 'from' → logprob: -14.633755683898926
    10. '```' → logprob: -14.883755683898926

Token 1168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02117876149713993
    2. '       ' → logprob: -4.021178722381592
    3. '```' → logprob: -6.771178722381592
    4. 'return' → logprob: -7.021178722381592
    5. 'def' → logprob: -7.646178722381592
    6. 'for' → logprob: -8.02117919921875
    7. '
' → logprob: -8.89617919921875
    8. ' return' → logprob: -11.27117919921875
    9. ' ' → logprob: -11.52117919921875
    10. 'import' → logprob: -12.14617919921875

Token 1169: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5555046796798706
    2. '   ' → logprob: -1.0555046796798706
    3. 'for' → logprob: -2.55550479888916
    4. 'if' → logprob: -7.93050479888916
    5. ' return' → logprob: -9.05550479888916
    6. ' ' → logprob: -10.93050479888916
    7. ' for' → logprob: -10.93050479888916
    8. '```' → logprob: -11.55550479888916
    9. '
' → logprob: -12.18050479888916
    10. '	return' → logprob: -12.30550479888916

Token 1170: ' Netto' (ID: 178906)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14365170896053314
    2. '   ' → logprob: -2.3936517238616943
    3. 'for' → logprob: -3.8936517238616943
    4. 'keys' → logprob: -3.8936517238616943
    5. '#' → logprob: -6.518651485443115
    6. ' return' → logprob: -8.393651962280273
    7. ' keys' → logprob: -10.518651962280273
    8. 'to' → logprob: -10.893651962280273
    9. '
' → logprob: -11.768651962280273
    10. ' for' → logprob: -12.893651962280273

Token 1171: 'yage' (ID: 61234)
  Prédit: 'yer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yer' → logprob: -0.2128777951002121
    2. 'oyer' → logprob: -2.4628777503967285
    3. 'r' → logprob: -3.4628777503967285
    4. 'or' → logprob: -4.0878777503967285
    5. 'y' → logprob: -4.3378777503967285
    6. 'for' → logprob: -4.5878777503967285
    7. 'res' → logprob: -5.3378777503967285
    8. 'orer' → logprob: -5.5878777503967285
    9. 'ror' → logprob: -5.8378777503967285
    10. 'oy' → logprob: -5.8378777503967285

Token 1172: ' clés' (ID: 96616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030140940099954605
    2. 'for' → logprob: -3.5301408767700195
    3. ' for' → logprob: -8.28014087677002
    4. 'keys' → logprob: -9.65514087677002
    5. '
' → logprob: -10.40514087677002
    6. 'res' → logprob: -11.03014087677002
    7. '```' → logprob: -11.28014087677002
    8. 'return' → logprob: -12.03014087677002
    9. ' keys' → logprob: -12.78014087677002
    10. '       ' → logprob: -13.03014087677002

Token 1173: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016407847870141268
    2. 'for' → logprob: -6.626640796661377
    3. ' for' → logprob: -8.501640319824219
    4. 'res' → logprob: -10.376640319824219
    5. '
' → logprob: -11.126640319824219
    6. ' res' → logprob: -11.251640319824219
    7. ' =' → logprob: -11.251640319824219
    8. '```' → logprob: -12.001640319824219
    9. '.keys' → logprob: -12.126640319824219
    10. '(res' → logprob: -12.126640319824219

Token 1174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005259610712528229
    2. 'zero' → logprob: -5.8802595138549805
    3. 'z' → logprob: -6.1302595138549805
    4. 'val' → logprob: -8.63025951385498
    5. ' zéro' → logprob: -9.38025951385498
    6. 'v' → logprob: -12.75525951385498
    7. 'ゼ' → logprob: -12.75525951385498
    8. '零' → logprob: -13.63025951385498
    9. '
' → logprob: -13.88025951385498
    10. '_zero' → logprob: -14.50525951385498

Token 1175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4305214583873749
    2. 'k' → logprob: -1.0555214881896973
    3. 'z' → logprob: -6.930521488189697
    4. 'zero' → logprob: -7.680521488189697
    5. 'res' → logprob: -8.430521011352539
    6. 'v' → logprob: -9.430521011352539
    7. 'val' → logprob: -10.930521011352539
    8. '[k' → logprob: -11.555521011352539
    9. ' zéro' → logprob: -11.555521011352539
    10. '```' → logprob: -11.930521011352539

Token 1176: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.961759259458631e-06
    2. '       ' → logprob: -12.250004768371582
    3. 'for' → logprob: -15.875004768371582
    4. '```' → logprob: -16.7500057220459
    5. '
' → logprob: -18.5000057220459
    6. 'keys' → logprob: -19.7500057220459
    7. '           ' → logprob: -20.0000057220459
    8. ' for' → logprob: -20.1250057220459
    9. '   ' → logprob: -20.2500057220459
    10. ' ' → logprob: -20.6250057220459

Token 1177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.619311974034645e-05
    2. 'for' → logprob: -10.250036239624023
    3. '```' → logprob: -15.000036239624023
    4. 'keys' → logprob: -15.500036239624023
    5. ' for' → logprob: -15.625036239624023
    6. '       ' → logprob: -16.000036239624023
    7. 'res' → logprob: -17.875036239624023
    8. '
' → logprob: -19.250036239624023
    9. '``' → logprob: -19.750036239624023
    10. ' keys' → logprob: -19.750036239624023

Token 1178: ' keys' (ID: 12994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03689058497548103
    2. 'for' → logprob: -3.6618905067443848
    3. 'keys' (adapté à ' keys') → logprob: -4.786890506744385
    4. 'res' → logprob: -6.411890506744385
    5. 'return' → logprob: -8.536890983581543
    6. ' for' → logprob: -8.786890983581543
    7. ' keys' → logprob: -8.911890983581543
    8. ' res' → logprob: -10.036890983581543
    9. 'to' → logprob: -11.036890983581543
    10. ' return' → logprob: -12.911890983581543

Token 1179: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24567686021327972
    2. ' =' → logprob: -1.620676875114441
    3. '_to' → logprob: -4.3706769943237305
    4. '=res' → logprob: -5.1206769943237305
    5. 'to' → logprob: -7.1206769943237305
    6. '=list' → logprob: -7.9956769943237305
    7. 'res' → logprob: -9.12067699432373
    8. '=[]' → logprob: -9.87067699432373
    9. '=[' → logprob: -9.99567699432373
    10. 'To' → logprob: -10.99567699432373

Token 1180: '_del' (ID: 39544)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.8001092672348022
    2. 'del' → logprob: -0.8001092672348022
    3. 'delete' → logprob: -2.300109386444092
    4. 'sup' → logprob: -6.925109386444092
    5. '_remove' → logprob: -8.800108909606934
    6. '_del' → logprob: -10.550108909606934
    7. '_delete' → logprob: -11.425108909606934
    8. ' del' → logprob: -12.300108909606934
    9. 'clean' → logprob: -12.550108909606934
    10. 'pop' → logprob: -13.300108909606934

Token 1181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029769469052553177
    2. ' =' → logprob: -3.5297694206237793
    3. '=[]' → logprob: -11.404769897460938
    4. '=[]
' → logprob: -13.029769897460938
    5. '=res' → logprob: -13.154769897460938
    6. 'res' → logprob: -13.404769897460938
    7. '=[' → logprob: -13.529769897460938
    8. '=list' → logprob: -15.779769897460938
    9. 'keys' → logprob: -15.779769897460938
    10. '[]' → logprob: -16.404769897460938

Token 1182: ' [' (ID: 723)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.001547479536384344
    2. '[key' → logprob: -6.501547336578369
    3. '[' → logprob: -11.001547813415527
    4. '[v' → logprob: -11.251547813415527
    5. '[]
' → logprob: -11.876547813415527
    6. '[c' → logprob: -12.251547813415527
    7. '[]' → logprob: -13.876547813415527
    8. '[x' → logprob: -14.251547813415527
    9. ' [' → logprob: -14.626547813415527
    10. '{k' → logprob: -14.876547813415527

Token 1183: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011703446507453918
    2. 'key' → logprob: -6.7511701583862305
    3. 'kk' → logprob: -16.751171112060547
    4. 'kc' → logprob: -17.001171112060547
    5. 'kx' → logprob: -17.251171112060547
    6. ' k' → logprob: -17.251171112060547
    7. '[k' → logprob: -18.126171112060547
    8. 'ki' → logprob: -18.126171112060547
    9. '(k' → logprob: -19.501171112060547
    10. '_k' → logprob: -19.501171112060547

Token 1184: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03805479779839516
    2. ' for' → logprob: -3.2880547046661377
    3. 'k' → logprob: -11.413054466247559
    4. '
' → logprob: -13.788054466247559
    5. ' ' → logprob: -14.413054466247559
    6. '   ' → logprob: -14.663054466247559
    7. '	for' → logprob: -16.038055419921875
    8. '```' → logprob: -16.788055419921875
    9. '  ' → logprob: -17.413055419921875
    10. 'd' → logprob: -18.038055419921875

Token 1185: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023095356300473213
    2. 'res' → logprob: -8.37523078918457
    3. 'keys' → logprob: -15.00023078918457
    4. ' k' → logprob: -17.62523078918457
    5. 'key' → logprob: -18.12523078918457
    6. '(res' → logprob: -18.25023078918457
    7. '(k' → logprob: -18.50023078918457
    8. '_k' → logprob: -18.62523078918457
    9. '	k' → logprob: -19.12523078918457
    10. '{k' → logprob: -19.12523078918457

Token 1186: ',v' (ID: 30680)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03306252136826515
    2. ',res' → logprob: -3.53306245803833
    3. ' in' → logprob: -6.78306245803833
    4. ',' → logprob: -6.90806245803833
    5. 'res' → logprob: -7.28306245803833
    6. ',k' → logprob: -8.533062934875488
    7. ',in' → logprob: -9.033062934875488
    8. 'k' → logprob: -9.533062934875488
    9. 'for' → logprob: -9.783062934875488
    10. ',v' → logprob: -10.283062934875488

Token 1187: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05139021947979927
    2. ',res' → logprob: -3.0513901710510254
    3. ',' → logprob: -6.426390171051025
    4. 'res' → logprob: -7.426390171051025
    5. ' in' → logprob: -7.676390171051025
    6. ',in' → logprob: -9.176390647888184
    7. ',v' → logprob: -11.176390647888184
    8. ',k' → logprob: -13.926390647888184
    9. ',val' → logprob: -14.301390647888184
    10. ' ,' → logprob: -14.926390647888184

Token 1188: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.2200749754119897e-06
    2. ' res' → logprob: -13.125001907348633
    3. '(res' → logprob: -16.875001907348633
    4. '
' → logprob: -17.125001907348633
    5. 'a' → logprob: -17.625001907348633
    6. '#' → logprob: -18.375001907348633
    7. 'list' → logprob: -18.500001907348633
    8. 'sub' → logprob: -18.625001907348633
    9. '	res' → logprob: -18.875001907348633
    10. '```' → logprob: -19.750001907348633

Token 1189: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5743784308433533
    2. '.items' → logprob: -1.324378490447998
    3. 'in' → logprob: -1.949378490447998
    4. 'items' → logprob: -3.574378490447998
    5. 'res' → logprob: -8.32437801361084
    6. ',' → logprob: -9.44937801361084
    7. ' .' → logprob: -9.57437801361084
    8. ',res' → logprob: -9.69937801361084
    9. '.iteritems' → logprob: -10.57437801361084
    10. ' ' → logprob: -10.69937801361084

Token 1190: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03781447187066078
    2. 'if' → logprob: -3.6628143787384033
    3. ' if' → logprob: -4.662814617156982
    4. '(res' → logprob: -6.537814617156982
    5. 'res' → logprob: -8.912814140319824
    6. '   ' → logprob: -9.162814140319824
    7. 'in' → logprob: -9.537814140319824
    8. '       ' → logprob: -9.787814140319824
    9. ' in' → logprob: -9.912814140319824
    10. '()==' → logprob: -10.287814140319824

Token 1191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025358961895108223
    2. 'in' → logprob: -4.525359153747559
    3. ' if' → logprob: -5.025359153747559
    4. 'res' → logprob: -6.025359153747559
    5. '()' → logprob: -6.150359153747559
    6. '(res' → logprob: -6.150359153747559
    7. '   ' → logprob: -7.900359153747559
    8. '       ' → logprob: -8.400359153747559
    9. ' in' → logprob: -9.025359153747559
    10. ' res' → logprob: -10.025359153747559

Token 1192: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.2961512513575144e-05
    2. ' v' → logprob: -10.750022888183594
    3. 'res' → logprob: -13.875022888183594
    4. '   ' → logprob: -15.375022888183594
    5. '	v' → logprob: -15.625022888183594
    6. '```' → logprob: -16.875022888183594
    7. 'vres' → logprob: -17.500022888183594
    8. '(v' → logprob: -17.750022888183594
    9. '    ' → logprob: -17.875022888183594
    10. '  ' → logprob: -18.125022888183594

Token 1193: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08927934616804123
    2. ' ==' → logprob: -2.4642794132232666
    3. ']==' → logprob: -8.464279174804688
    4. '```' → logprob: -10.089279174804688
    5. '<=' → logprob: -10.214279174804688
    6. '()==' → logprob: -11.339279174804688
    7. ')==' → logprob: -11.839279174804688
    8. 'k' → logprob: -11.964279174804688
    9. '==
' → logprob: -11.964279174804688
    10. 'if' → logprob: -12.214279174804688

Token 1194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -20.125
    4. 'k' → logprob: -22.25
    5. '۰' → logprob: -22.75
    6. 'v' → logprob: -23.375
    7. '=' → logprob: -23.5
    8. '00' → logprob: -24.0
    9. '```' → logprob: -24.375
    10. '  ' → logprob: -24.75

Token 1195: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8247352242469788
    2. '       ' → logprob: -0.8247352242469788
    3. 'for' → logprob: -2.824735164642334
    4. ']
' → logprob: -3.324735164642334
    5. ' for' → logprob: -4.199735164642334
    6. ']' → logprob: -5.824735164642334
    7. '           ' → logprob: -6.199735164642334
    8. '
' → logprob: -6.574735164642334
    9. 'del' → logprob: -6.574735164642334
    10. ' or' → logprob: -7.074735164642334

Token 1196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14289961755275726
    2. 'for' → logprob: -2.392899513244629
    3. ' for' → logprob: -3.267899513244629
    4. '
' → logprob: -5.892899513244629
    5. '```' → logprob: -7.267899513244629
    6. '       ' → logprob: -9.392899513244629
    7. 'res' → logprob: -10.142899513244629
    8. ' ' → logprob: -10.392899513244629
    9. '	for' → logprob: -11.142899513244629
    10. ',' → logprob: -11.142899513244629

Token 1197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10104338079690933
    2. '   ' → logprob: -2.351043462753296
    3. ' for' → logprob: -7.101043224334717
    4. '	for' → logprob: -11.726043701171875
    5. '
' → logprob: -12.851043701171875
    6. '       ' → logprob: -14.101043701171875
    7. ' ' → logprob: -14.851043701171875
    8. '```' → logprob: -15.101043701171875
    9. '  ' → logprob: -17.226043701171875
    10. '`' → logprob: -18.351043701171875

Token 1198: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -13.750000953674316
    3. '	k' → logprob: -18.375001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '_k' → logprob: -21.000001907348633
    6. 'key' → logprob: -21.875001907348633
    7. '  ' → logprob: -21.875001907348633
    8. '"k' → logprob: -21.875001907348633
    9. '(k' → logprob: -22.000001907348633
    10. '    ' → logprob: -22.250001907348633

Token 1199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519955337047577
    2. 'in' → logprob: -1.50199556350708
    3. 'k' → logprob: -9.751995086669922
    4. 'del' → logprob: -13.001995086669922
    5. 'import' → logprob: -13.626995086669922
    6. 'to' → logprob: -13.876995086669922
    7. 'd' → logprob: -14.251995086669922
    8. 'n' → logprob: -14.501995086669922
    9. 'for' → logprob: -14.626995086669922
    10. 'key' → logprob: -14.626995086669922

Token 1200: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -2.7610454708337784e-05
    2. ' keys' → logprob: -10.500027656555176
    3. '(keys' → logprob: -17.87502670288086
    4. '	keys' → logprob: -17.87502670288086
    5. '.keys' → logprob: -19.12502670288086
    6. '   ' → logprob: -19.75002670288086
    7. 'res' → logprob: -22.00002670288086
    8. 'key' → logprob: -22.37502670288086
    9. '
' → logprob: -22.37502670288086
    10. '_keys' → logprob: -23.00002670288086

Token 1201: '_to' (ID: 5089)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5359015464782715
    2. '_to' → logprob: -1.4109015464782715
    3. 'to' → logprob: -2.2859015464782715
    4. ' in' → logprob: -3.1609015464782715
    5. 'To' → logprob: -4.7859015464782715
    6. '.keys' → logprob: -5.2859015464782715
    7. 'keys' → logprob: -5.5359015464782715
    8. '   ' → logprob: -5.6609015464782715
    9. '(keys' → logprob: -6.2859015464782715
    10. '```' → logprob: -6.6609015464782715

Token 1202: '_del' (ID: 39544)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -1.4259644558478612e-05
    2. 'keys' → logprob: -11.250014305114746
    3. 'res' → logprob: -14.125014305114746
    4. 'list' → logprob: -15.625014305114746
    5. '_del' → logprob: -15.750014305114746
    6. '	del' → logprob: -16.87501335144043
    7. ' del' → logprob: -17.37501335144043
    8. '
' → logprob: -18.00001335144043
    9. '#' → logprob: -18.87501335144043
    10. 'Del' → logprob: -19.00001335144043

Token 1203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5963883996009827
    2. ':
' → logprob: -0.8463883996009827
    3. '   ' → logprob: -4.221388339996338
    4. ' del' → logprob: -5.971388339996338
    5. '       ' → logprob: -6.721388339996338
    6. 'del' → logprob: -6.971388339996338
    7. '):
' → logprob: -7.721388339996338
    8. 'in' → logprob: -9.471388816833496
    9. '	del' → logprob: -9.471388816833496
    10. ' in' → logprob: -9.596388816833496

Token 1204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006687552202492952
    2. ' del' → logprob: -5.131687641143799
    3. 'del' → logprob: -7.506687641143799
    4. '   ' → logprob: -8.63168716430664
    5. '           ' → logprob: -11.13168716430664
    6. '	del' → logprob: -11.38168716430664
    7. '     ' → logprob: -13.63168716430664
    8. '_del' → logprob: -14.00668716430664
    9. '	   ' → logprob: -14.13168716430664
    10. '    ' → logprob: -14.75668716430664

Token 1205: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -4.1557283111615106e-05
    2. '       ' → logprob: -10.250041961669922
    3. ' del' → logprob: -12.250041961669922
    4. '           ' → logprob: -14.000041961669922
    5. '   ' → logprob: -14.875041961669922
    6. '	del' → logprob: -16.500041961669922
    7. 'res' → logprob: -17.750041961669922
    8. '               ' → logprob: -20.125041961669922
    9. '_del' → logprob: -20.875041961669922
    10. 'Del' → logprob: -21.875041961669922

Token 1206: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.836499985889532e-05
    2. ' res' → logprob: -9.7500581741333
    3. '   ' → logprob: -20.625059127807617
    4. '(res' → logprob: -21.000059127807617
    5. 'k' → logprob: -21.250059127807617
    6. 'r' → logprob: -22.125059127807617
    7. '	res' → logprob: -22.250059127807617
    8. 'ress' → logprob: -23.000059127807617
    9. '       ' → logprob: -23.500059127807617
    10. '[' → logprob: -24.000059127807617

Token 1207: '[k' (ID: 14298)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.873571692267433e-05
    2. 'def' → logprob: -10.125068664550781
    3. 'return' → logprob: -10.500068664550781
    4. '
' → logprob: -14.625068664550781
    5. 'import' → logprob: -15.500068664550781
    6. ' return' → logprob: -15.750068664550781
    7. '       ' → logprob: -15.875068664550781
    8. '    
' → logprob: -16.25006866455078
    9. '```' → logprob: -17.75006866455078
    10. '	return' → logprob: -18.00006866455078

Token 1208: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08950336277484894
    2. 'def' → logprob: -2.589503288269043
    3. ']' → logprob: -5.214503288269043
    4. ']
' → logprob: -5.839503288269043
    5. '
' → logprob: -7.089503288269043
    6. 'return' → logprob: -7.214503288269043
    7. 'import' → logprob: -7.964503288269043
    8. ')' → logprob: -9.214503288269043
    9. ')
' → logprob: -10.089503288269043
    10. '<|end|>' → logprob: -10.714503288269043

Token 1209: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03094605728983879
    2. '
' → logprob: -3.6559460163116455
    3. '#' → logprob: -6.155946254730225
    4. 'import' → logprob: -7.155946254730225
    5. '```' → logprob: -7.280946254730225
    6. 'return' → logprob: -8.030945777893066
    7. 'from' → logprob: -8.530945777893066
    8. 'class' → logprob: -9.030945777893066
    9. ')' → logprob: -9.155945777893066
    10. '    
' → logprob: -10.155945777893066

Token 1210: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2258499264717102
    2. 'return' (adapté à ' return') → logprob: -1.7258498668670654
    3. 'def' → logprob: -3.7258498668670654
    4. ' return' → logprob: -10.600850105285645
    5. '```' → logprob: -12.100850105285645
    6. '#' → logprob: -12.350850105285645
    7. '	return' → logprob: -12.600850105285645
    8. 'import' → logprob: -12.725850105285645
    9. '
' → logprob: -13.225850105285645
    10. ' ' → logprob: -13.850850105285645

Token 1211: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.935296834039036e-06
    2. ' res' → logprob: -12.75000286102295
    3. '{' → logprob: -21.625003814697266
    4. '(res' → logprob: -21.750003814697266
    5. '   ' → logprob: -22.125003814697266
    6. 'rés' → logprob: -22.250003814697266
    7. 'dict' → logprob: -22.375003814697266
    8. 're' → logprob: -23.000003814697266
    9. '	res' → logprob: -23.375003814697266
    10. 'ress' → logprob: -23.375003814697266

Token 1212: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014132129959762096
    2. '#' → logprob: -4.639132022857666
    3. 'class' → logprob: -6.889132022857666
    4. 'import' → logprob: -7.264132022857666
    5. 'prices' → logprob: -7.514132022857666
    6. 'from' → logprob: -7.764132022857666
    7. '
' → logprob: -7.889132022857666
    8. 'MAX' → logprob: -8.389132499694824
    9. 'INF' → logprob: -8.764132499694824
    10. 'CO' → logprob: -8.889132499694824

Token 1213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002841491252183914
    2. '#' → logprob: -6.502841472625732
    3. 'class' → logprob: -7.502841472625732
    4. 'import' → logprob: -7.502841472625732
    5. 'from' → logprob: -10.12784194946289
    6. 'INF' → logprob: -10.25284194946289
    7. 'N' → logprob: -10.50284194946289
    8. 'n' → logprob: -10.62784194946289
    9. 'prices' → logprob: -10.62784194946289
    10. '```' → logprob: -10.87784194946289

Token 1214: ' coins' (ID: 28969)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9174116253852844
    2. 'main' → logprob: -1.0424115657806396
    3. 'bounded' → logprob: -2.5424115657806396
    4. 'read' → logprob: -3.0424115657806396
    5. 'possible' → logprob: -3.5424115657806396
    6. 'parse' → logprob: -3.5424115657806396
    7. 'can' → logprob: -4.542411804199219
    8. 'solve' → logprob: -4.792411804199219
    9. 'cl' → logprob: -4.917411804199219
    10. 'update' → logprob: -5.417411804199219

Token 1215: '_tuple' (ID: 53371)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.46530696749687195
    2. '_tuple' → logprob: -1.0903069972991943
    3. '_count' → logprob: -3.5903069972991943
    4. 'def' → logprob: -6.840306758880615
    5. '_max' → logprob: -7.090306758880615
    6. '_counts' → logprob: -7.090306758880615
    7. '_state' → logprob: -7.215306758880615
    8. '_limit' → logprob: -7.215306758880615
    9. '_add' → logprob: -7.465306758880615
    10. '_dict' → logprob: -7.715306758880615

Token 1216: '_is' (ID: 15224)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.717296517104842e-05
    2. '_sub' → logprob: -11.000057220458984
    3. '_tuple' → logprob: -11.500057220458984
    4. '_add' → logprob: -12.000057220458984
    5. 'to' → logprob: -12.125057220458984
    6. 'def' → logprob: -12.125057220458984
    7. '##_' → logprob: -12.875057220458984
    8. '_t' → logprob: -13.000057220458984
    9. '```' → logprob: -13.500057220458984
    10. 'To' → logprob: -13.875057220458984

Token 1217: '_valid' (ID: 23321)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.004869876429438591
    2. 'fe' → logprob: -6.3798699378967285
    3. 'le' → logprob: -7.0048699378967285
    4. 'within' → logprob: -7.5048699378967285
    5. 'subset' → logprob: -7.8798699378967285
    6. 'legal' → logprob: -8.00486946105957
    7. 'compatible' → logprob: -8.00486946105957
    8. '_valid' → logprob: -8.75486946105957
    9. 'acceptable' → logprob: -9.25486946105957
    10. 'safe' → logprob: -9.75486946105957

Token 1218: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002180953975766897
    2. '(co' → logprob: -6.252181053161621
    3. '(state' → logprob: -9.002181053161621
    4. '(lst' → logprob: -9.252181053161621
    5. '(tp' → logprob: -11.002181053161621
    6. '(tuple' → logprob: -12.627181053161621
    7. '(c' → logprob: -13.002181053161621
    8. '(ts' → logprob: -13.502181053161621
    9. '(s' → logprob: -13.627181053161621
    10. '(' → logprob: -13.627181053161621

Token 1219: 'pl' (ID: 528)
  Prédit: 'uple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uple' → logprob: -0.06263826787471771
    2. 'pl' → logprob: -3.437638282775879
    3. 'up' → logprob: -4.062638282775879
    4. '(t' → logprob: -4.937638282775879
    5. 'ple' → logprob: -5.937638282775879
    6. 'tpl' → logprob: -7.687638282775879
    7. '(tuple' → logprob: -8.562638282775879
    8. 'upl' → logprob: -8.687638282775879
    9. 'uples' → logprob: -8.812638282775879
    10. '(pl' → logprob: -8.812638282775879

Token 1220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029851848259568214
    2. '):' → logprob: -3.5298519134521484
    3. ')' → logprob: -9.404851913452148
    4. '):
' → logprob: -11.654851913452148
    5. '(co' → logprob: -12.654851913452148
    6. '):

' → logprob: -13.029851913452148
    7. ' ):
' → logprob: -13.654851913452148
    8. '   ' → logprob: -13.654851913452148
    9. '):(' → logprob: -14.029851913452148
    10. '(lst' → logprob: -15.154851913452148

Token 1221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18238860368728638
    2. 'all' → logprob: -2.1823885440826416
    3. 'def' → logprob: -3.0573885440826416
    4. ' all' → logprob: -5.307388782501221
    5. 'for' → logprob: -7.307388782501221
    6. ' ' → logprob: -7.932388782501221
    7. '  ' → logprob: -9.307388305664062
    8. '(all' → logprob: -9.307388305664062
    9. '```' → logprob: -9.307388305664062
    10. 'tpl' → logprob: -9.307388305664062

Token 1222: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09493663907051086
    2. 'all' → logprob: -3.0949366092681885
    3. 'for' → logprob: -3.3449366092681885
    4. '   ' → logprob: -4.844936847686768
    5. 'return' → logprob: -6.219936847686768
    6. '```' → logprob: -8.84493637084961
    7. ' all' → logprob: -11.09493637084961
    8. '
' → logprob: -12.96993637084961
    9. ' def' → logprob: -13.09493637084961
    10. ' for' → logprob: -13.46993637084961

Token 1223: ' Vér' (ID: 159169)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.38771337270736694
    2. 'def' → logprob: -1.1377134323120117
    3. 'return' → logprob: -7.887713432312012
    4. 'for' → logprob: -8.137713432312012
    5. '   ' → logprob: -9.512713432312012
    6. '
' → logprob: -9.887713432312012
    7. ' all' → logprob: -10.012713432312012
    8. 'len' → logprob: -12.637713432312012
    9. ' ' → logprob: -15.262713432312012
    10. 'max' → logprob: -15.387713432312012

Token 1224: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -3.666993507067673e-05
    2. 'if' → logprob: -10.500036239624023
    3. '
' → logprob: -13.000036239624023
    4. 'ifier' → logprob: -13.125036239624023
    5. 'ife' → logprob: -13.750036239624023
    6. '   ' → logprob: -14.000036239624023
    7. 'f' → logprob: -14.375036239624023
    8. 'ifiez' → logprob: -14.375036239624023
    9. 'ifies' → logprob: -14.500036239624023
    10. 'ifié' → logprob: -14.750036239624023

Token 1225: ' que' (ID: 661)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.02732066810131073
    2. 'lambda' → logprob: -4.402320861816406
    3. '   ' → logprob: -5.152320861816406
    4. 'len' → logprob: -5.402320861816406
    5. ' all' → logprob: -5.652320861816406
    6. 'def' → logprob: -7.277320861816406
    7. '(lambda' → logprob: -9.402320861816406
    8. ' ' → logprob: -10.527320861816406
    9. '(all' → logprob: -10.527320861816406
    10. ' lambda' → logprob: -10.777320861816406

Token 1226: ' les' (ID: 1341)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -6.051066520740278e-05
    2. ' all' → logprob: -10.000060081481934
    3. '   ' → logprob: -11.500060081481934
    4. 'len' → logprob: -12.875060081481934
    5. '0' → logprob: -13.500060081481934
    6. ' ' → logprob: -14.625060081481934
    7. '(all' → logprob: -15.375060081481934
    8. '	all' → logprob: -15.500060081481934
    9. 'max' → logprob: -16.87506103515625
    10. '
' → logprob: -17.12506103515625

Token 1227: ' pièces' (ID: 49165)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.09046493470668793
    2. '0' → logprob: -2.4654648303985596
    3. 'x' → logprob: -7.090465068817139
    4. 'a' → logprob: -8.21546459197998
    5. ' all' → logprob: -8.21546459197998
    6. 'tpl' → logprob: -9.34046459197998
    7. 't' → logprob: -10.71546459197998
    8. 'len' → logprob: -10.84046459197998
    9. 'sum' → logprob: -11.96546459197998
    10. ' ' → logprob: -12.09046459197998

Token 1228: ' dans' (ID: 2671)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9314318299293518
    2. 'all' → logprob: -1.306431770324707
    3. ' all' → logprob: -2.056431770324707
    4. 'count' → logprob: -3.556431770324707
    5. '[i' → logprob: -3.681431770324707
    6. '```' → logprob: -3.681431770324707
    7. '<=' → logprob: -3.931431770324707
    8. '   ' → logprob: -4.306431770324707
    9. 'def' → logprob: -4.431431770324707
    10. 't' → logprob: -4.556431770324707

Token 1229: ' tpl' (ID: 138784)
  Prédit: 'tpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tpl' → logprob: -0.00041184606379829347
    2. 'tuple' → logprob: -8.125411987304688
    3. ' tpl' → logprob: -10.250411987304688
    4. '[' → logprob: -10.625411987304688
    5. 'zip' → logprob: -11.125411987304688
    6. 'all' → logprob: -11.500411987304688
    7. 'len' → logprob: -11.625411987304688
    8. '
' → logprob: -12.750411987304688
    9. '_tpl' → logprob: -12.750411987304688
    10. '[t' → logprob: -13.000411987304688

Token 1230: ' ne' (ID: 453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8715754151344299
    2. '>=' → logprob: -1.4965753555297852
    3. 'all' → logprob: -2.121575355529785
    4. '<=' → logprob: -3.496575355529785
    5. ' all' → logprob: -3.746575355529785
    6. '[i' → logprob: -3.996575355529785
    7. 'return' → logprob: -3.996575355529785
    8. ' >=' → logprob: -4.371575355529785
    9. '[' → logprob: -4.621575355529785
    10. '=' → logprob: -4.621575355529785

Token 1231: ' dépass' (ID: 99759)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06740161031484604
    2. '>' → logprob: -2.817401647567749
    3. ' exceed' → logprob: -6.06740140914917
    4. '[' → logprob: -6.81740140914917
    5. '>[' → logprob: -7.44240140914917
    6. ' exced' → logprob: -8.442401885986328
    7. '>
' → logprob: -8.442401885986328
    8. '_ex' → logprob: -9.067401885986328
    9. '#' → logprob: -9.192401885986328
    10. 'Ex' → logprob: -9.442401885986328

Token 1232: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.005550216883420944
    2. '[' → logprob: -6.630550384521484
    3. 'pas' → logprob: -6.755550384521484
    4. 'aient' → logprob: -7.380550384521484
    5. 'e' → logprob: -7.630550384521484
    6. '   ' → logprob: -7.880550384521484
    7. '       ' → logprob: -8.755550384521484
    8. '           ' → logprob: -9.130550384521484
    9. 'nt' → logprob: -9.130550384521484
    10. 'sent' → logprob: -9.130550384521484

Token 1233: ' pas' (ID: 2173)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.5253698229789734
    2. '[MAX' → logprob: -1.6503698825836182
    3. '[' → logprob: -2.650369882583618
    4. '(' → logprob: -2.775369882583618
    5. '(MAX' → logprob: -3.150369882583618
    6. 'len' → logprob: -4.025369644165039
    7. '0' → logprob: -5.650369644165039
    8. ' (' → logprob: -5.650369644165039
    9. ' MAX' → logprob: -6.025369644165039
    10. '[len' → logprob: -6.025369644165039

Token 1234: ' le' (ID: 505)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.49477705359458923
    2. '[' → logprob: -1.6197770833969116
    3. '[MAX' → logprob: -1.8697770833969116
    4. '(MAX' → logprob: -3.994776964187622
    5. '(' → logprob: -4.994777202606201
    6. '[len' → logprob: -6.244777202606201
    7. 'max' → logprob: -6.369777202606201
    8. ' MAX' → logprob: -6.369777202606201
    9. ' [' → logprob: -6.494777202606201
    10. 'len' → logprob: -6.994777202606201

Token 1235: ' max' (ID: 2999)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.013116932474076748
    2. '[MAX' → logprob: -5.388116836547852
    3. '[' → logprob: -5.513116836547852
    4. 'max' → logprob: -6.513116836547852
    5. '(MAX' → logprob: -6.638116836547852
    6. '(' → logprob: -8.013116836547852
    7. '10' → logprob: -8.388116836547852
    8. ' MAX' → logprob: -8.513116836547852
    9. '4' → logprob: -8.888116836547852
    10. 'tuple' → logprob: -9.013116836547852

Token 1236: ' raisonn' (ID: 144705)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4507049322128296
    2. '(len' → logprob: -1.9507049322128296
    3. 'return' → logprob: -3.200705051422119
    4. '(' → logprob: -3.200705051422119
    5. '(
' → logprob: -3.450705051422119
    6. '   ' → logprob: -3.700705051422119
    7. '(c' → logprob: -4.200705051422119
    8. '(t' → logprob: -4.825705051422119
    9. 'for' → logprob: -4.950705051422119
    10. '
' → logprob: -5.075705051422119

Token 1237: 'able' (ID: 562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8731591701507568
    2. '_' → logprob: -1.6231591701507568
    3. '[
' → logprob: -2.373159170150757
    4. '```' → logprob: -3.123159170150757
    5. '_CO' → logprob: -3.498159170150757
    6. 's' → logprob: -3.748159170150757
    7. '[i' → logprob: -3.998159170150757
    8. '[]' → logprob: -4.123159408569336
    9. '['' → logprob: -4.623159408569336
    10. 'CO' → logprob: -4.748159408569336

Token 1238: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6032645106315613
    2. '   ' → logprob: -1.603264570236206
    3. '(t' → logprob: -2.478264570236206
    4. '
' → logprob: -3.728264570236206
    5. '(len' → logprob: -3.853264570236206
    6. 'for' → logprob: -4.103264331817627
    7. '(' → logprob: -4.228264331817627
    8. 'return' → logprob: -4.353264331817627
    9. '(c' → logprob: -4.603264331817627
    10. 'and' → logprob: -4.603264331817627

Token 1239: ' éviter' (ID: 64013)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.106368064880371
    2. 'c' → logprob: -1.856368064880371
    3. 'ct' → logprob: -1.981368064880371
    4. 't' → logprob: -2.231368064880371
    5. 'i' → logprob: -2.231368064880371
    6. 'a' → logprob: -2.481368064880371
    7. 'CO' → logprob: -3.731368064880371
    8. 'coins' → logprob: -4.606368064880371
    9. 'lambda' → logprob: -4.981368064880371
    10. 'tpl' → logprob: -4.981368064880371

Token 1240: ' explosion' (ID: 53199)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0880853682756424
    2. 'expl' → logprob: -2.713085412979126
    3. 'une' → logprob: -4.463085174560547
    4. ' l' → logprob: -6.213085174560547
    5. ' explosion' → logprob: -6.338085174560547
    6. 'explode' → logprob: -6.963085174560547
    7. 'la' → logprob: -7.213085174560547
    8. 'overflow' → logprob: -7.588085174560547
    9. ' une' → logprob: -8.838085174560547
    10. 'len' → logprob: -9.338085174560547

Token 1241: ' d' (ID: 272)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.26560714840888977
    2. 'def' → logprob: -1.5156071186065674
    3. '(' → logprob: -5.1406073570251465
    4. 'return' → logprob: -6.2656073570251465
    5. '(co' → logprob: -6.2656073570251465
    6. '(
' → logprob: -6.7656073570251465
    7. '```' → logprob: -7.7656073570251465
    8. '(len' → logprob: -8.015606880187988
    9. '
' → logprob: -8.140606880187988
    10. '(tuple' → logprob: -8.265606880187988

Token 1242: ''ét' (ID: 23771)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.17792648077011108
    2. ' états' → logprob: -2.302926540374756
    3. '_' → logprob: -3.802926540374756
    4. ''ét' → logprob: -4.052926540374756
    5. ''état' → logprob: -4.677926540374756
    6. '_et' → logprob: -5.427926540374756
    7. '_states' → logprob: -6.302926540374756
    8. ' États' → logprob: -6.802926540374756
    9. 'l' → logprob: -7.052926540374756
    10. 'states' → logprob: -7.177926540374756

Token 1243: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0038152725901454687
    2. 'at' → logprob: -5.628815174102783
    3. '
' → logprob: -9.753815650939941
    4. '#' → logprob: -10.003815650939941
    5. 'states' → logprob: -10.253815650939941
    6. ' états' → logprob: -11.503815650939941
    7. 'âts' → logprob: -11.503815650939941
    8. '```' → logprob: -11.753815650939941
    9. ' states' → logprob: -12.128815650939941
    10. '{' → logprob: -12.691315650939941

Token 1244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03070998005568981
    2. ' for' → logprob: -4.030709743499756
    3. 'def' → logprob: -5.155709743499756
    4. 'for' → logprob: -5.155709743499756
    5. '
' → logprob: -7.905709743499756
    6. ' return' → logprob: -8.780710220336914
    7. ' all' → logprob: -9.030710220336914
    8. '```' → logprob: -9.530710220336914
    9. 'all' → logprob: -10.280710220336914
    10. ' and' → logprob: -10.405710220336914

Token 1245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4478857219219208
    2. 'def' → logprob: -1.0728857517242432
    3. ':
' → logprob: -5.447885513305664
    4. '```' → logprob: -5.697885513305664
    5. '):
' → logprob: -6.197885513305664
    6. ':' → logprob: -6.697885513305664
    7. '
' → logprob: -6.822885513305664
    8. ' and' → logprob: -6.947885513305664
    9. '(co' → logprob: -6.947885513305664
    10. ' def' → logprob: -6.947885513305664

Token 1246: ' for' (ID: 395)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8617197871208191
    2. '   ' → logprob: -1.2367198467254639
    3. ' all' → logprob: -1.7367198467254639
    4. 'def' → logprob: -2.611719846725464
    5. 'for' (adapté à ' for') → logprob: -4.361719608306885
    6. '```' → logprob: -4.486719608306885
    7. 'return' → logprob: -4.986719608306885
    8. '
' → logprob: -5.986719608306885
    9. ' return' → logprob: -6.986719608306885
    10. ' for' → logprob: -7.236719608306885

Token 1247: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42010217905044556
    2. 'i' → logprob: -1.5451021194458008
    3. 'count' → logprob: -2.670102119445801
    4. 'cnt' → logprob: -3.670102119445801
    5. 'n' → logprob: -4.295102119445801
    6. 'v' → logprob: -4.670102119445801
    7. 'c' → logprob: -5.045102119445801
    8. 'val' → logprob: -5.670102119445801
    9. 'qty' → logprob: -7.545102119445801
    10. 't' → logprob: -7.795102119445801

Token 1248: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06596455723047256
    2. ',' → logprob: -3.440964460372925
    3. ' in' → logprob: -3.690964460372925
    4. 'range' → logprob: -5.440964698791504
    5. ',t' → logprob: -7.565964698791504
    6. ' range' → logprob: -7.940964698791504
    7. ',c' → logprob: -8.190964698791504
    8. ',value' → logprob: -8.190964698791504
    9. ',v' → logprob: -8.315964698791504
    10. ',val' → logprob: -8.690964698791504

Token 1249: ' n' (ID: 297)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9750634431838989
    2. 'n' → logprob: -1.600063443183899
    3. 'cnt' → logprob: -1.600063443183899
    4. 'x' → logprob: -1.850063443183899
    5. 'qty' → logprob: -3.8500633239746094
    6. 'v' → logprob: -4.850063323974609
    7. 'num' → logprob: -4.850063323974609
    8. 'c' → logprob: -5.100063323974609
    9. 'val' → logprob: -5.225063323974609
    10. 'nb' → logprob: -5.725063323974609

Token 1250: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34886619448661804
    2. ' in' → logprob: -1.2238662242889404
    3. 'n' → logprob: -7.973865985870361
    4. ',' → logprob: -10.97386646270752
    5. ')' → logprob: -11.47386646270752
    6. '```' → logprob: -11.47386646270752
    7. ' ' → logprob: -12.22386646270752
    8. 't' → logprob: -12.84886646270752
    9. '   ' → logprob: -12.84886646270752
    10. 'count' → logprob: -12.97386646270752

Token 1251: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -2.045823566731997e-05
    2. 'zip' → logprob: -11.500020027160645
    3. ' enumerate' → logprob: -11.500020027160645
    4. 'range' → logprob: -17.00002098083496
    5. 'enum' → logprob: -17.62502098083496
    6. 'en' → logprob: -20.00002098083496
    7. '```' → logprob: -22.12502098083496
    8. 'Enumer' → logprob: -22.75002098083496
    9. 'enqueue' → logprob: -22.75002098083496
    10. '
' → logprob: -23.37502098083496

Token 1252: '(t' (ID: 2025)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.001567949540913105
    2. '(MAX' → logprob: -6.501567840576172
    3. 'range' → logprob: -10.376567840576172
    4. ' MAX' → logprob: -10.501567840576172
    5. '[MAX' → logprob: -12.251567840576172
    6. '_MAX' → logprob: -14.501567840576172
    7. '(' → logprob: -14.751567840576172
    8. 'n' → logprob: -15.126567840576172
    9. '   ' → logprob: -15.376567840576172
    10. 'maxlength' → logprob: -16.126567840576172

Token 1253: 'pl' (ID: 528)
  Prédit: 'tpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tpl' → logprob: -0.003874062094837427
    2. 'MAX' → logprob: -5.628873825073242
    3. 'pl' → logprob: -9.503873825073242
    4. 't' → logprob: -10.128873825073242
    5. 'CO' → logprob: -10.128873825073242
    6. ' tpl' → logprob: -10.128873825073242
    7. '(MAX' → logprob: -10.878873825073242
    8. 'TPL' → logprob: -11.753873825073242
    9. 'plt' → logprob: -11.878873825073242
    10. '[MAX' → logprob: -12.128873825073242

Token 1254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6972431540489197
    2. ')' → logprob: -0.9472431540489197
    3. '):' → logprob: -2.3222432136535645
    4. ' in' → logprob: -5.5722432136535645
    5. '   ' → logprob: -6.1972432136535645
    6. 'in' → logprob: -6.4472432136535645
    7. ',' → logprob: -6.6972432136535645
    8. ')>=' → logprob: -6.6972432136535645
    9. '):(' → logprob: -7.5722432136535645
    10. ')<' → logprob: -7.6972432136535645

Token 1255: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2350546419620514
    2. '       ' → logprob: -1.610054612159729
    3. ' if' → logprob: -5.9850544929504395
    4. '    ' → logprob: -6.4850544929504395
    5. 'def' → logprob: -6.8600544929504395
    6. ';' → logprob: -6.9850544929504395
    7. 'if' → logprob: -7.1100544929504395
    8. ' ' → logprob: -7.4850544929504395
    9. '>' → logprob: -7.8600544929504395
    10. '<|end|>' → logprob: -7.9850544929504395

Token 1256: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02697274647653103
    2. ' n' → logprob: -3.651972770690918
    3. '   ' → logprob: -7.526972770690918
    4. 'if' (adapté à ' if') → logprob: -9.776972770690918
    5. '0' → logprob: -10.151972770690918
    6. ' if' → logprob: -11.401972770690918
    7. ' ' → logprob: -12.026972770690918
    8. '<|end|>' → logprob: -12.151972770690918
    9. '       ' → logprob: -12.776972770690918
    10. '    ' → logprob: -12.901972770690918

Token 1257: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11296562850475311
    2. ' n' → logprob: -2.2379655838012695
    3. '   ' → logprob: -8.98796558380127
    4. '    ' → logprob: -11.98796558380127
    5. '	n' → logprob: -12.36296558380127
    6. ' ' → logprob: -13.48796558380127
    7. ' ' → logprob: -13.61296558380127
    8. '       ' → logprob: -14.23796558380127
    9. '>' → logprob: -14.23796558380127
    10. '  ' → logprob: -14.73796558380127

Token 1258: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.026530766859650612
    2. ' >' → logprob: -3.6515307426452637
    3. '>=' → logprob: -9.276531219482422
    4. '   ' → logprob: -9.401531219482422
    5. ' >=' → logprob: -11.026531219482422
    6. '[i' → logprob: -11.776531219482422
    7. '[' → logprob: -12.151531219482422
    8. '>
' → logprob: -12.151531219482422
    9. ')' → logprob: -13.026531219482422
    10. '<|end|>' → logprob: -13.026531219482422

Token 1259: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -5.512236498361744e-07
    2. ' MAX' → logprob: -14.750000953674316
    3. '10' → logprob: -17.375
    4. '   ' → logprob: -18.25
    5. '
' → logprob: -19.0
    6. '4' → logprob: -19.125
    7. '(MAX' → logprob: -19.125
    8. '[MAX' → logprob: -19.25
    9. '_MAX' → logprob: -20.125
    10. ' ' → logprob: -20.625

Token 1260: '_CO' (ID: 49321)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.023255378007888794
    2. '_CO' → logprob: -3.7732553482055664
    3. '
' → logprob: -12.773255348205566
    4. ' CO' → logprob: -12.898255348205566
    5. '```' → logprob: -13.523255348205566
    6. '[' → logprob: -13.648255348205566
    7. '   ' → logprob: -14.398255348205566
    8. 'MAX' → logprob: -14.648255348205566
    9. '\' → logprob: -15.273255348205566
    10. '``' → logprob: -15.398255348205566

Token 1261: 'INS' (ID: 17264)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.01106373593211174
    2. '_CO' → logprob: -4.511063575744629
    3. 'INS' → logprob: -12.136063575744629
    4. 'Coins' → logprob: -12.761063575744629
    5. 'S' → logprob: -13.386063575744629
    6. 'coins' → logprob: -13.386063575744629
    7. ' CO' → logprob: -13.761063575744629
    8. '   ' → logprob: -14.511063575744629
    9. 'IONS' → logprob: -14.511063575744629
    10. '```' → logprob: -14.761063575744629

Token 1262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.000001907348633
    4. 'def' → logprob: -15.875001907348633
    5. ' [' → logprob: -16.250001907348633
    6. 'i' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. '(i' → logprob: -17.500001907348633
    9. ' or' → logprob: -17.750001907348633
    10. ',i' → logprob: -18.000001907348633

Token 1263: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.21195857226848602
    2. '):
' → logprob: -1.9619585275650024
    3. ':
' → logprob: -4.211958408355713
    4. ']' → logprob: -4.586958408355713
    5. ']:' → logprob: -4.711958408355713
    6. '[i' → logprob: -5.961958408355713
    7. '[' → logprob: -5.961958408355713
    8. ':' → logprob: -6.211958408355713
    9. ' or' → logprob: -6.336958408355713
    10. ']):
' → logprob: -6.336958408355713

Token 1264: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3872224986553192
    2. '           ' → logprob: -1.3872225284576416
    3. '   ' → logprob: -3.5122225284576416
    4. ' return' → logprob: -4.1372222900390625
    5. ':' → logprob: -4.8872222900390625
    6. '0' → logprob: -5.1372222900390625
    7. ':
' → logprob: -5.5122222900390625
    8. '10' → logprob: -6.2622222900390625
    9. ' or' → logprob: -6.2622222900390625
    10. 'return' → logprob: -7.2622222900390625

Token 1265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038483213633298874
    2. '           ' → logprob: -3.288483142852783
    3. '       ' → logprob: -8.163483619689941
    4. '   ' → logprob: -9.538483619689941
    5. ' return' → logprob: -9.913483619689941
    6. '               ' → logprob: -10.788483619689941
    7. 'True' → logprob: -11.663483619689941
    8. ':return' → logprob: -12.788483619689941
    9. '{return' → logprob: -14.163483619689941
    10. '	return' → logprob: -14.413483619689941

Token 1266: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.636475493200123e-05
    2. 'True' → logprob: -9.500076293945312
    3. ' False' → logprob: -13.500076293945312
    4. '   ' → logprob: -18.500076293945312
    5. '(False' → logprob: -19.500076293945312
    6. 'false' → logprob: -19.625076293945312
    7. '0' → logprob: -20.250076293945312
    8. '
' → logprob: -21.250076293945312
    9. '1' → logprob: -21.250076293945312
    10. '```' → logprob: -21.375076293945312

Token 1267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014314282452687621
    2. '   ' → logprob: -6.876431465148926
    3. '           ' → logprob: -7.876431465148926
    4. '	' → logprob: -12.126431465148926
    5. '```' → logprob: -12.376431465148926
    6. '               ' → logprob: -12.876431465148926
    7. '<|end|>' → logprob: -13.376431465148926
    8. ',' → logprob: -14.376431465148926
    9. 'return' → logprob: -14.501431465148926
    10. '
' → logprob: -14.876431465148926

Token 1268: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01307552307844162
    2. '           ' → logprob: -4.388075351715088
    3. '   ' → logprob: -7.638075351715088
    4. ' or' → logprob: -10.513075828552246
    5. '               ' → logprob: -11.013075828552246
    6. ':' → logprob: -11.388075828552246
    7. ',' → logprob: -11.638075828552246
    8. '```' → logprob: -12.388075828552246
    9. '     ' → logprob: -13.013075828552246
    10. '<|end|>' → logprob: -13.388075828552246

Token 1269: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0701078251004219
    2. '       ' → logprob: -2.695107936859131
    3. '           ' → logprob: -8.945107460021973
    4. ' ' → logprob: -11.195107460021973
    5. '     ' → logprob: -12.320107460021973
    6. '
' → logprob: -12.570107460021973
    7. '```' → logprob: -12.695107460021973
    8. 'return' (adapté à ' return') → logprob: -12.945107460021973
    9. 'False' → logprob: -13.070107460021973
    10. '  ' → logprob: -13.195107460021973

Token 1270: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01537039503455162
    2. ' False' → logprob: -4.7653703689575195
    3. 'True' → logprob: -5.0153703689575195
    4. ' True' → logprob: -9.39037036895752
    5. 'n' → logprob: -11.26537036895752
    6. ' n' → logprob: -13.51537036895752
    7. '   ' → logprob: -15.76537036895752
    8. '(False' → logprob: -16.640371322631836
    9. ' ' → logprob: -18.515371322631836
    10. 'F' → logprob: -18.765371322631836

Token 1271: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010108959395438433
    2. '#' → logprob: -7.126010894775391
    3. 'import' → logprob: -9.75101089477539
    4. 'class' → logprob: -10.00101089477539
    5. 'return' → logprob: -10.50101089477539
    6. 'from' → logprob: -10.62601089477539
    7. '```' → logprob: -11.50101089477539
    8. 'CO' → logprob: -11.87601089477539
    9. 'MAX' → logprob: -12.00101089477539
    10. '
' → logprob: -12.75101089477539

Token 1272: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012553330510854721
    2. '#' → logprob: -4.8875532150268555
    3. 'prices' → logprob: -6.3875532150268555
    4. 'sou' → logprob: -7.3875532150268555
    5. 'class' → logprob: -7.5125532150268555
    6. 'n' → logprob: -7.5125532150268555
    7. 'import' → logprob: -7.8875532150268555
    8. 'from' → logprob: -8.262553215026855
    9. 'coins' → logprob: -8.512553215026855
    10. 'CO' → logprob: -8.887553215026855

Token 1273: ' num' (ID: 2269)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2416893243789673
    2. 'possible' → logprob: -1.3666893243789673
    3. 'main' → logprob: -1.6166893243789673
    4. 'can' → logprob: -2.2416892051696777
    5. 'solve' → logprob: -3.2416892051696777
    6. 'try' → logprob: -3.7416892051696777
    7. 'generate' → logprob: -4.866689205169678
    8. 'parse' → logprob: -4.991689205169678
    9. 'buy' → logprob: -5.116689205169678
    10. 'update' → logprob: -5.116689205169678

Token 1274: '_' (ID: 62)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.5039733052253723
    2. '_to' → logprob: -1.2539732456207275
    3. '_states' → logprob: -2.5039732456207275
    4. 'ber' → logprob: -4.628973484039307
    5. '_co' → logprob: -4.878973484039307
    6. '_p' → logprob: -5.878973484039307
    7. '_steps' → logprob: -6.878973484039307
    8. '_items' → logprob: -6.878973484039307
    9. '_token' → logprob: -7.628973484039307
    10. '_remaining' → logprob: -7.628973484039307

Token 1275: '500' (ID: 3234)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.4248816967010498
    2. 'states' → logprob: -1.4248816967010498
    3. 'stores' → logprob: -1.9248816967010498
    4. 'p' → logprob: -2.54988169670105
    5. 'shops' → logprob: -2.67488169670105
    6. 'to' → logprob: -2.79988169670105
    7. '_states' → logprob: -3.54988169670105
    8. '500' → logprob: -3.67488169670105
    9. 'store' → logprob: -4.049881935119629
    10. 'pieces' → logprob: -4.549881935119629

Token 1276: '_in' (ID: 2267)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.6153126358985901
    2. '_tokens' → logprob: -1.6153125762939453
    3. '_p' → logprob: -1.7403125762939453
    4. '_' → logprob: -2.9903125762939453
    5. ' =' → logprob: -4.490312576293945
    6. 'def' → logprob: -4.740312576293945
    7. 's' → logprob: -5.740312576293945
    8. '```' → logprob: -6.115312576293945
    9. '_coin' → logprob: -6.365312576293945
    10. '_token' → logprob: -6.740312576293945

Token 1277: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.28312063217163086
    2. '_tuple' → logprob: -2.033120632171631
    3. 'coins' → logprob: -3.033120632171631
    4. 'state' → logprob: -3.783120632171631
    5. '_state' → logprob: -3.783120632171631
    6. 'tuple' → logprob: -5.033120632171631
    7. '_t' → logprob: -5.158120632171631
    8. '_list' → logprob: -6.033120632171631
    9. 'def' → logprob: -6.408120632171631
    10. 't' → logprob: -6.783120632171631

Token 1278: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.005558520555496216
    2. 'in' → logprob: -5.255558490753174
    3. 'ns' → logprob: -9.755558967590332
    4. '_tuple' → logprob: -10.005558967590332
    5. 'coins' → logprob: -10.380558967590332
    6. 'def' → logprob: -10.505558967590332
    7. '_ins' → logprob: -10.630558967590332
    8. 'unt' → logprob: -10.630558967590332
    9. 't' → logprob: -11.005558967590332
    10. '_t' → logprob: -11.505558967590332

Token 1279: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.008826225996017456
    2. '_dict' → logprob: -4.88382625579834
    3. '_co' → logprob: -7.75882625579834
    4. 'dict' → logprob: -8.50882625579834
    5. 'coins' → logprob: -8.75882625579834
    6. '(' → logprob: -9.00882625579834
    7. '(dict' → logprob: -9.50882625579834
    8. 'def' → logprob: -9.88382625579834
    9. '_(' → logprob: -11.00882625579834
    10. '(t' → logprob: -11.13382625579834

Token 1280: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0024723282549530268
    2. 'in' → logprob: -6.127472400665283
    3. 'insu' → logprob: -9.627471923828125
    4. 'coins' → logprob: -10.377471923828125
    5. 'ints' → logprob: -10.627471923828125
    6. '_tuple' → logprob: -10.752471923828125
    7. 'i' → logprob: -11.002471923828125
    8. 'def' → logprob: -11.002471923828125
    9. '```' → logprob: -11.127471923828125
    10. '(ins' → logprob: -11.502471923828125

Token 1281: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.10983050614595413
    2. '_tuple' → logprob: -2.359830617904663
    3. 'dict' → logprob: -5.109830379486084
    4. '_' → logprob: -7.109830379486084
    5. 'def' → logprob: -7.484830379486084
    6. '_t' → logprob: -7.609830379486084
    7. '=' → logprob: -7.984830379486084
    8. 'tuple' → logprob: -8.359830856323242
    9. ')' → logprob: -8.859830856323242
    10. 'Dict' → logprob: -9.359830856323242

Token 1282: '):
' (ID: 1883)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.21079011261463165
    2. '):' → logprob: -2.2107901573181152
    3. '):
' → logprob: -2.5857901573181152
    4. ')' → logprob: -5.710790157318115
    5. '=' → logprob: -7.585790157318115
    6. 'coins' → logprob: -8.085789680480957
    7. ' ' → logprob: -8.460789680480957
    8. '   ' → logprob: -8.585789680480957
    9. 'co' → logprob: -9.460789680480957
    10. ',' → logprob: -9.585789680480957

Token 1283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009845776949077845
    2. 'return' → logprob: -7.1259846687316895
    3. 'coins' → logprob: -9.125984191894531
    4. ' return' → logprob: -9.625984191894531
    5. ' coins' → logprob: -13.000984191894531
    6. 'def' → logprob: -13.500984191894531
    7. '   ' → logprob: -14.250984191894531
    8. 'co' → logprob: -15.000984191894531
    9. '	return' → logprob: -15.250984191894531
    10. '(co' → logprob: -16.12598419189453

Token 1284: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07918432354927063
    2. 'coins' → logprob: -2.5791842937469482
    3. 'def' → logprob: -8.704184532165527
    4. '   ' → logprob: -9.579184532165527
    5. ' return' → logprob: -10.079184532165527
    6. ' coins' → logprob: -12.079184532165527
    7. '```' → logprob: -12.204184532165527
    8. 'co' → logprob: -12.454184532165527
    9. '{return' → logprob: -13.829184532165527
    10. '
' → logprob: -13.954184532165527

Token 1285: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -3.8219583075260743e-05
    2. ' coins' → logprob: -10.250038146972656
    3. 'co' → logprob: -13.000038146972656
    4. '   ' → logprob: -14.500038146972656
    5. '```' → logprob: -18.000038146972656
    6. '0' → logprob: -18.125038146972656
    7. ' ' → logprob: -18.625038146972656
    8. 'coin' → logprob: -19.000038146972656
    9. ' ' → logprob: -19.000038146972656
    10. 'coal' → logprob: -19.500038146972656

Token 1286: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.026595428586006165
    2. 'get' → logprob: -4.651595592498779
    3. '.get' → logprob: -4.776595592498779
    4. 'dict' → logprob: -5.026595592498779
    5. '500' → logprob: -6.526595592498779
    6. '_get' → logprob: -8.651595115661621
    7. 'Dict' → logprob: -10.901595115661621
    8. '[' → logprob: -11.026595115661621
    9. '```' → logprob: -12.151595115661621
    10. '   ' → logprob: -12.276595115661621

Token 1287: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.010992640629410744
    2. 'get' → logprob: -5.385992527008057
    3. '[' → logprob: -5.760992527008057
    4. 'def' → logprob: -6.635992527008057
    5. '{' → logprob: -7.385992527008057
    6. '.' → logprob: -7.510992527008057
    7. 'coins' → logprob: -7.885992527008057
    8. '500' → logprob: -9.135993003845215
    9. '.setdefault' → logprob: -9.760993003845215
    10. '.copy' → logprob: -10.635993003845215

Token 1288: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234356038272381
    2. '500' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.755234718322754
    4. '5' → logprob: -16.505233764648438
    5. '```' → logprob: -16.880233764648438
    6. '       ' → logprob: -17.880233764648438
    7. '50' → logprob: -18.005233764648438
    8. '`' → logprob: -18.755233764648438
    9. ' ' → logprob: -18.755233764648438
    10. '(
' → logprob: -18.880233764648438

Token 1289: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -17.5
    5. '(' → logprob: -18.0
    6. '5' → logprob: -18.75
    7. '`' → logprob: -19.25
    8. '  ' → logprob: -19.25
    9. '``' → logprob: -19.5
    10. '
' → logprob: -19.625

Token 1290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. ' ,' → logprob: -10.1250581741333
    3. '500' → logprob: -11.6250581741333
    4. '0' → logprob: -12.6250581741333
    5. ')' → logprob: -12.7500581741333
    6. '(),' → logprob: -14.0000581741333
    7. '   ' → logprob: -14.3750581741333
    8. '100' → logprob: -15.1250581741333
    9. 'return' → logprob: -15.8750581741333
    10. '',' → logprob: -16.250059127807617

Token 1291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. ')' → logprob: -19.0
    4. ',' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. '=' → logprob: -20.0
    7. 'return' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. '۰' → logprob: -22.125
    10. 'default' → logprob: -22.125

Token 1292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.875001907348633
    4. ')' → logprob: -18.625001907348633
    5. 'default' → logprob: -20.000001907348633
    6. '=' → logprob: -20.250001907348633
    7. '1' → logprob: -20.500001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '
' → logprob: -22.000001907348633
    10. '#' → logprob: -22.125001907348633

Token 1293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045307583059184253
    2. ')+' → logprob: -7.750452995300293
    3. '   ' → logprob: -11.750452995300293
    4. ' )' → logprob: -12.625452995300293
    5. ')
' → logprob: -12.875452995300293
    6. ',' → logprob: -13.000452995300293
    7. '+' → logprob: -13.500452995300293
    8. 'def' → logprob: -13.625452995300293
    9. '}' → logprob: -14.250452995300293
    10. ')return' → logprob: -14.625452995300293

Token 1294: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005082668270915747
    2. 'prices' → logprob: -6.130082607269287
    3. ':' → logprob: -7.630082607269287
    4. '#' → logprob: -7.630082607269287
    5. 'for' → logprob: -8.005083084106445
    6. ')' → logprob: -8.255083084106445
    7. 'coins' → logprob: -8.380083084106445
    8. 'class' → logprob: -8.755083084106445
    9. 'n' → logprob: -9.005083084106445
    10. 'dp' → logprob: -9.130083084106445

Token 1295: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2710261642932892
    2. 'coins' → logprob: -3.146026134490967
    3. 'max' → logprob: -3.271026134490967
    4. 'solve' → logprob: -3.396026134490967
    5. 'update' → logprob: -4.021026134490967
    6. 'num' → logprob: -4.396026134490967
    7. 'best' → logprob: -4.396026134490967
    8. 'main' → logprob: -4.521026134490967
    9. 'read' → logprob: -4.771026134490967
    10. 'parse' → logprob: -5.021026134490967

Token 1296: '_solution' (ID: 127649)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013937477953732014
    2. '_states' → logprob: -5.263937473297119
    3. '=' → logprob: -5.513937473297119
    4. '_' → logprob: -6.138937473297119
    5. '_next' → logprob: -7.638937473297119
    6. ':' → logprob: -8.013937950134277
    7. '_prev' → logprob: -8.138937950134277
    8. 'def' → logprob: -8.638937950134277
    9. '={}' → logprob: -8.638937950134277
    10. '_state' → logprob: -8.763937950134277

Token 1297: '(pr' (ID: 38401)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0229521989822388
    2. '(i' → logprob: -1.2729521989822388
    3. '(states' → logprob: -2.397952079772949
    4. ':' → logprob: -3.022952079772949
    5. '(n' → logprob: -3.397952079772949
    6. '(s' → logprob: -3.397952079772949
    7. '():' → logprob: -3.522952079772949
    8. '(state' → logprob: -3.772952079772949
    9. '(' → logprob: -4.272952079772949
    10. '(m' → logprob: -4.397952079772949

Token 1298: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.09250293672084808
    2. 'ice' → logprob: -2.5925028324127197
    3. 'ob' → logprob: -5.842503070831299
    4. 'ef' → logprob: -6.092503070831299
    5. 'es' → logprob: -6.342503070831299
    6. '#' → logprob: -6.842503070831299
    7. 'e' → logprob: -7.217503070831299
    8. 'ix' → logprob: -7.717503070831299
    9. 'of' → logprob: -7.717503070831299
    10. '```' → logprob: -7.717503070831299

Token 1299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15799853205680847
    2. '):
' → logprob: -2.157998561859131
    3. ',' → logprob: -3.532998561859131
    4. ')' → logprob: -7.157998561859131
    5. '):
' → logprob: -9.032998085021973
    6. '[]):' → logprob: -9.782998085021973
    7. ':' → logprob: -9.782998085021973
    8. ',
' → logprob: -10.157998085021973
    9. '=[]' → logprob: -10.157998085021973
    10. 's' → logprob: -10.282998085021973

Token 1300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04084356129169464
    2. ':
' → logprob: -3.9158434867858887
    3. ':' → logprob: -4.040843486785889
    4. '(n' → logprob: -6.665843486785889
    5. 'def' → logprob: -8.165843963623047
    6. '(dp' → logprob: -8.790843963623047
    7. ' :' → logprob: -8.790843963623047
    8. '```' → logprob: -9.040843963623047
    9. 'n' → logprob: -9.290843963623047
    10. ' n' → logprob: -9.415843963623047

Token 1301: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6144297122955322
    2. 'n' (adapté à ' n') → logprob: -1.1144297122955322
    3. 'dp' → logprob: -2.6144297122955322
    4. 'from' → logprob: -3.4894297122955322
    5. ' n' → logprob: -3.8644297122955322
    6. ' from' → logprob: -6.364429473876953
    7. '
' → logprob: -6.864429473876953
    8. '	n' → logprob: -6.864429473876953
    9. ' dp' → logprob: -7.114429473876953
    10. 'N' → logprob: -7.364429473876953

Token 1302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20153847336769104
    2. '=' → logprob: -1.7015384435653687
    3. '=int' → logprob: -9.4515380859375
    4. ',' → logprob: -11.2015380859375
    5. ' =
' → logprob: -11.8265380859375
    6. '=
' → logprob: -12.0765380859375
    7. '=len' → logprob: -12.0765380859375
    8. '   ' → logprob: -12.4515380859375
    9. 'def' → logprob: -12.4515380859375
    10. ')' → logprob: -13.3265380859375

Token 1303: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8624639324116288e-06
    2. ' len' → logprob: -13.250001907348633
    3. '(len' → logprob: -17.750001907348633
    4. '[len' → logprob: -18.125001907348633
    5. '=len' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '	len' → logprob: -21.500001907348633
    8. ',len' → logprob: -23.125001907348633
    9. '<len' → logprob: -23.250001907348633
    10. '0' → logprob: -24.250001907348633

Token 1304: '(pr' (ID: 38401)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.20301036536693573
    2. '(pr' → logprob: -1.7030103206634521
    3. 'pr' → logprob: -6.453010559082031
    4. ' prices' → logprob: -10.953010559082031
    5. '_prices' → logprob: -14.578010559082031
    6. '   ' → logprob: -14.578010559082031
    7. 'Prices' → logprob: -14.828010559082031
    8. '	pr' → logprob: -14.828010559082031
    9. 'price' → logprob: -15.703010559082031
    10. '
' → logprob: -16.07801055908203

Token 1305: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.9173209071159363
    2. 'rices' → logprob: -0.9173209071159363
    3. 'prices' → logprob: -1.667320966720581
    4. '   ' → logprob: -5.167320728302002
    5. 'ces' → logprob: -5.792320728302002
    6. 'r' → logprob: -7.042320728302002
    7. ' ' → logprob: -7.667320728302002
    8. '```' → logprob: -7.667320728302002
    9. ')' → logprob: -8.16732120513916
    10. '`' → logprob: -8.29232120513916

Token 1306: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31975603103637695
    2. ')
' → logprob: -1.444756031036377
    3. '   ' → logprob: -3.444756031036377
    4. ')+' → logprob: -5.444756031036377
    5. '):
' → logprob: -6.819756031036377
    6. '+' → logprob: -8.819755554199219
    7. '):' → logprob: -9.194755554199219
    8. '
' → logprob: -9.319755554199219
    9. ')
' → logprob: -9.319755554199219
    10. ' +' → logprob: -10.569755554199219

Token 1307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023766204714775085
    2. 'dp' → logprob: -3.773766279220581
    3. 'DP' → logprob: -8.39876651763916
    4. '
' → logprob: -9.02376651763916
    5. '	dp' → logprob: -9.64876651763916
    6. ' dp' → logprob: -10.02376651763916
    7. '#' → logprob: -11.14876651763916
    8. 'INF' → logprob: -11.39876651763916
    9. 'def' → logprob: -11.39876651763916
    10. '```' → logprob: -11.77376651763916

Token 1308: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017042264342308044
    2. '   ' → logprob: -4.51704216003418
    3. 'from' → logprob: -5.51704216003418
    4. 'DP' → logprob: -7.01704216003418
    5. 'INF' → logprob: -7.01704216003418
    6. 'import' → logprob: -9.39204216003418
    7. '#' (adapté à ' #') → logprob: -10.01704216003418
    8. '
' → logprob: -10.39204216003418
    9. ' dp' → logprob: -12.76704216003418
    10. 'inf' → logprob: -13.76704216003418

Token 1309: ' Etat' (ID: 197339)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07008803635835648
    2. '   ' → logprob: -3.5700881481170654
    3. 'from' → logprob: -3.5700881481170654
    4. 'INF' → logprob: -4.695087909698486
    5. 'DP' → logprob: -6.695087909698486
    6. '#' → logprob: -7.195087909698486
    7. 'import' → logprob: -8.820088386535645
    8. '
' → logprob: -9.695088386535645
    9. 'inf' → logprob: -11.070088386535645
    10. 'initial' → logprob: -12.195088386535645

Token 1310: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06133151426911354
    2. '{}' → logprob: -4.061331748962402
    3. '{' → logprob: -4.311331748962402
    4. ' =' → logprob: -4.311331748962402
    5. ' dp' → logprob: -5.186331748962402
    6. '   ' → logprob: -5.936331748962402
    7. '{
' → logprob: -6.186331748962402
    8. '=' → logprob: -6.436331748962402
    9. 'DP' → logprob: -6.561331748962402
    10. '={' → logprob: -7.811331748962402

Token 1311: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7609773874282837
    2. 'dp' → logprob: -0.8859773874282837
    3. '=' → logprob: -2.510977268218994
    4. '   ' → logprob: -3.635977268218994
    5. ' dp' → logprob: -5.510977268218994
    6. '=
' → logprob: -6.135977268218994
    7. 'DP' → logprob: -6.760977268218994
    8. '
' → logprob: -6.885977268218994
    9. '_dp' → logprob: -7.510977268218994
    10. ')' → logprob: -7.635977268218994

Token 1312: ' diction' (ID: 155259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3061377704143524
    2. 'collections' → logprob: -1.8061378002166748
    3. '{}' → logprob: -2.931137800216675
    4. 'default' → logprob: -4.681137561798096
    5. '{' → logprob: -4.806137561798096
    6. '[' → logprob: -4.806137561798096
    7. '{}
' → logprob: -5.306137561798096
    8. 'from' → logprob: -5.306137561798096
    9. '   ' → logprob: -5.931137561798096
    10. 'dict' → logprob: -5.931137561798096

Token 1313: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.005659997928887606
    2. 'ary' → logprob: -6.505660057067871
    3. 'aire' → logprob: -6.505660057067871
    4. '{' → logprob: -6.630660057067871
    5. 'naires' → logprob: -7.255660057067871
    6. '{}' → logprob: -8.005660057067871
    7. '{
' → logprob: -9.505660057067871
    8. 'n' → logprob: -9.755660057067871
    9. '{"' → logprob: -10.005660057067871
    10. 'na' → logprob: -10.380660057067871

Token 1314: ' {(' (ID: 75216)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.538351833820343
    2. ' =' → logprob: -1.9133517742156982
    3. '=' → logprob: -2.2883517742156982
    4. '={' → logprob: -2.7883517742156982
    5. '   ' → logprob: -2.9133517742156982
    6. '{' → logprob: -3.6633517742156982
    7. 'current' → logprob: -5.163352012634277
    8. 'prev' → logprob: -5.788352012634277
    9. '#' → logprob: -6.163352012634277
    10. '{}' → logprob: -6.163352012634277

Token 1315: 'nombre' (ID: 28576)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4843524396419525
    2. 'num' → logprob: -1.609352469444275
    3. '500' → logprob: -2.8593523502349854
    4. 'coins' → logprob: -3.1093523502349854
    5. 'pieces' → logprob: -3.6093523502349854
    6. 'idx' → logprob: -3.9843523502349854
    7. 'nb' → logprob: -4.7343525886535645
    8. '(i' → logprob: -5.3593525886535645
    9. 'n' → logprob: -5.3593525886535645
    10. 'index' → logprob: -5.7343525886535645

Token 1316: ' pieces' (ID: 12762)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43962594866752625
    2. '_de' → logprob: -1.9396259784698486
    3. '500' → logprob: -2.5646259784698486
    4. 'de' → logprob: -2.8146259784698486
    5. '_pi' → logprob: -3.1896259784698486
    6. '_p' → logprob: -4.1896257400512695
    7. ' de' → logprob: -4.8146257400512695
    8. 'pi' → logprob: -5.4396257400512695
    9. '_des' → logprob: -6.6896257400512695
    10. '_co' → logprob: -7.1896257400512695

Token 1317: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.08022753149271011
    2. '_' → logprob: -2.5802276134490967
    3. ' ' → logprob: -7.205227375030518
    4. ',' → logprob: -8.580227851867676
    5. 'de' → logprob: -9.580227851867676
    6. '   ' → logprob: -9.705227851867676
    7. ')' → logprob: -10.080227851867676
    8. '
' → logprob: -10.955227851867676
    9. '```' → logprob: -11.142727851867676
    10. '5' → logprob: -11.267727851867676

Token 1318: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0006432149093598127
    2. ' ' → logprob: -8.125642776489258
    3. '_' → logprob: -8.375642776489258
    4. '   ' → logprob: -10.750642776489258
    5. '```' → logprob: -11.000642776489258
    6. '
' → logprob: -11.250642776489258
    7. 'def' → logprob: -11.750642776489258
    8. '5' → logprob: -12.000642776489258
    9. ',' → logprob: -12.000642776489258
    10. 'de' → logprob: -12.125642776489258

Token 1319: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43081220984458923
    2. ',' → logprob: -1.8058122396469116
    3. '),' → logprob: -2.305812120437622
    4. '500' → logprob: -3.930812120437622
    5. '_f' → logprob: -4.180812358856201
    6. ',-' → logprob: -5.055812358856201
    7. ',_' → logprob: -5.180812358856201
    8. '),(' → logprob: -5.430812358856201
    9. '_,' → logprob: -5.555812358856201
    10. ')' → logprob: -5.680812358856201

Token 1320: ' pieces' (ID: 12762)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.21057604253292084
    2. '(co' → logprob: -2.960576057434082
    3. 'tuple' → logprob: -3.085576057434082
    4. ' coins' → logprob: -3.460576057434082
    5. ' (' → logprob: -3.960576057434082
    6. ' tuple' → logprob: -4.585576057434082
    7. 'coin' → logprob: -4.585576057434082
    8. '(tuple' → logprob: -5.585576057434082
    9. '(' → logprob: -5.835576057434082
    10. 'co' → logprob: -6.085576057434082

Token 1321: ' tuple' (ID: 31311)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8595762252807617
    2. '500' → logprob: -1.3595762252807617
    3. '_tuple' → logprob: -1.4845762252807617
    4. ',' → logprob: -3.1095762252807617
    5. '1' → logprob: -4.359576225280762
    6. 'tuple' → logprob: -4.484576225280762
    7. '
' → logprob: -5.484576225280762
    8. ')' → logprob: -5.734576225280762
    9. ' ' → logprob: -5.734576225280762
    10. '_t' → logprob: -6.234576225280762

Token 1322: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2235613763332367
    2. '500' → logprob: -2.2235612869262695
    3. '):' → logprob: -3.3485612869262695
    4. '   ' → logprob: -3.9735612869262695
    5. '(co' → logprob: -4.3485612869262695
    6. ')' → logprob: -5.0985612869262695
    7. '(' → logprob: -5.7235612869262695
    8. ' ,' → logprob: -5.8485612869262695
    9. '),' → logprob: -6.4735612869262695
    10. '_co' → logprob: -6.4735612869262695

Token 1323: 'c' (ID: 66)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -1.0844882726669312
    2. '(int' → logprob: -1.4594882726669312
    3. 'c' → logprob: -1.8344882726669312
    4. 'n' → logprob: -2.4594883918762207
    5. '1' → logprob: -2.8344883918762207
    6. 'int' → logprob: -3.4594883918762207
    7. '(n' → logprob: -4.084488391876221
    8. '(' → logprob: -4.459488391876221
    9. ')' → logprob: -4.959488391876221
    10. '5' → logprob: -5.084488391876221

Token 1324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027334926649928093
    2. '5' → logprob: -4.152334690093994
    3. ',' → logprob: -5.527334690093994
    4. '100' → logprob: -5.652334690093994
    5. '   ' → logprob: -6.652334690093994
    6. '500' → logprob: -6.777334690093994
    7. ' ' → logprob: -7.777334690093994
    8. '0' → logprob: -8.902335166931152
    9. '_' → logprob: -9.527335166931152
    10. ')' → logprob: -9.652335166931152

Token 1325: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009184670634567738
    2. ' ,' → logprob: -5.134184837341309
    3. '   ' → logprob: -7.009184837341309
    4. ',n' → logprob: -7.509184837341309
    5. ',
' → logprob: -7.759184837341309
    6. ',c' → logprob: -7.884184837341309
    7. '),' → logprob: -8.134184837341309
    8. '5' → logprob: -8.259184837341309
    9. '  ' → logprob: -9.759184837341309
    10. '[' → logprob: -10.009184837341309

Token 1326: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2233183042553719e-05
    2. ',' → logprob: -12.500012397766113
    3. '1' → logprob: -12.625012397766113
    4. '0' → logprob: -13.125012397766113
    5. '```' → logprob: -13.625012397766113
    6. '500' → logprob: -14.125012397766113
    7. '
' → logprob: -14.625012397766113
    8. ' ' → logprob: -15.375012397766113
    9. '=' → logprob: -15.750012397766113
    10. '   ' → logprob: -16.125011444091797

Token 1327: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024041250348091125
    2. '),' → logprob: -4.149041175842285
    3. ',n' → logprob: -5.899041175842285
    4. '   ' → logprob: -6.524041175842285
    5. ' ,' → logprob: -6.524041175842285
    6. ',c' → logprob: -7.024041175842285
    7. '[' → logprob: -8.524041175842285
    8. ',
' → logprob: -8.649041175842285
    9. '0' → logprob: -9.399041175842285
    10. ')),' → logprob: -9.524041175842285

Token 1328: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001130571006797254
    2. '0' → logprob: -6.8761305809021
    3. '100' → logprob: -9.501130104064941
    4. ',' → logprob: -11.751130104064941
    5. 'n' → logprob: -12.376130104064941
    6. '   ' → logprob: -12.501130104064941
    7. '```' → logprob: -12.626130104064941
    8. '),' → logprob: -14.501130104064941
    9. '1' → logprob: -14.501130104064941
    10. ')' → logprob: -15.001130104064941

Token 1329: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07608414441347122
    2. ',c' → logprob: -2.8260841369628906
    3. '),' → logprob: -4.826084136962891
    4. ',n' → logprob: -6.576084136962891
    5. '   ' → logprob: -6.701084136962891
    6. '0' → logprob: -7.201084136962891
    7. '500' → logprob: -7.201084136962891
    8. '100' → logprob: -7.826084136962891
    9. ',
' → logprob: -8.20108413696289
    10. 'c' → logprob: -8.32608413696289

Token 1330: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002969261258840561
    2. '0' → logprob: -6.127969264984131
    3. '50' → logprob: -7.877969264984131
    4. '```' → logprob: -8.252968788146973
    5. '   ' → logprob: -10.002968788146973
    6. ',' → logprob: -10.252968788146973
    7. '10' → logprob: -11.752968788146973
    8. '5' → logprob: -11.877968788146973
    9. '),' → logprob: -11.877968788146973
    10. '00' → logprob: -11.877968788146973

Token 1331: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07114819437265396
    2. ',c' → logprob: -2.696148157119751
    3. ',n' → logprob: -7.57114839553833
    4. '100' → logprob: -8.321147918701172
    5. 'c' → logprob: -8.696147918701172
    6. '   ' → logprob: -9.571147918701172
    7. ' ,' → logprob: -9.946147918701172
    8. ',
' → logprob: -9.946147918701172
    9. '0' → logprob: -10.446147918701172
    10. '),' → logprob: -11.196147918701172

Token 1332: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.138441237155348e-05
    2. ',' → logprob: -10.125091552734375
    3. '0' → logprob: -10.625091552734375
    4. '```' → logprob: -10.625091552734375
    5. '   ' → logprob: -13.375091552734375
    6. '1' → logprob: -15.125091552734375
    7. '``' → logprob: -16.000091552734375
    8. 'def' → logprob: -16.000091552734375
    9. '),' → logprob: -16.500091552734375
    10. 'python' → logprob: -16.625091552734375

Token 1333: '))' (ID: 915)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6018056273460388
    2. '),' → logprob: -1.2268056869506836
    3. '))' → logprob: -2.1018056869506836
    4. ')' → logprob: -3.3518056869506836
    5. '):' → logprob: -6.976805686950684
    6. ',' → logprob: -8.101805686950684
    7. ')):
' → logprob: -8.351805686950684
    8. '   ' → logprob: -9.851805686950684
    9. ')
' → logprob: -10.351805686950684
    10. ' ))' → logprob: -10.476805686950684

Token 1334: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11557406932115555
    2. ':' → logprob: -3.3655741214752197
    3. '   ' → logprob: -3.3655741214752197
    4. ')' → logprob: -4.115573883056641
    5. '):
' → logprob: -4.740573883056641
    6. ',' → logprob: -4.865573883056641
    7. '):(' → logprob: -5.240573883056641
    8. ' :' → logprob: -7.490573883056641
    9. '}:' → logprob: -7.615573883056641
    10. ' ):' → logprob: -8.11557388305664

Token 1335: ' dép' (ID: 34015)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.6014330387115479
    2. 'd' → logprob: -1.7264330387115479
    3. 'co' → logprob: -1.8514330387115479
    4. '(float' → logprob: -2.351433038711548
    5. 'cost' → logprob: -3.226433038711548
    6. 'dep' → logprob: -3.601433038711548
    7. '(d' → logprob: -3.601433038711548
    8. '(' → logprob: -3.976433038711548
    9. '(co' → logprob: -3.976433038711548
    10. '(dep' → logprob: -3.976433038711548

Token 1336: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.003886653808876872
    2. '   ' → logprob: -6.628886699676514
    3. ')' → logprob: -7.753886699676514
    4. 'n' → logprob: -7.878886699676514
    5. '}' → logprob: -8.128886222839355
    6. 'ence' → logprob: -8.503886222839355
    7. '=' → logprob: -8.628886222839355
    8. '
' → logprob: -9.253886222839355
    9. ')
' → logprob: -9.753886222839355
    10. ',' → logprob: -9.878886222839355

Token 1337: ' minimale' (ID: 143217)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9621520638465881
    2. ' minimale' → logprob: -1.0871520042419434
    3. '_min' → logprob: -2.0871520042419434
    4. 'min' → logprob: -3.4621520042419434
    5. '   ' → logprob: -3.5871520042419434
    6. ')' → logprob: -3.7121520042419434
    7. ' =' → logprob: -4.337152004241943
    8. ')}' → logprob: -4.587152004241943
    9. '}' → logprob: -4.712152004241943
    10. 'minimal' → logprob: -4.837152004241943

Token 1338: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.28003886342048645
    2. '   ' → logprob: -1.655038833618164
    3. '}:' → logprob: -4.155038833618164
    4. ' }' → logprob: -4.655038833618164
    5. ' =' → logprob: -4.780038833618164
    6. ')' → logprob: -5.280038833618164
    7. '=' → logprob: -5.780038833618164
    8. ',' → logprob: -5.905038833618164
    9. '}
' → logprob: -6.155038833618164
    10. '):' → logprob: -6.155038833618164

Token 1339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11527550965547562
    2. 'dp' → logprob: -2.2402756214141846
    3. ' dp' → logprob: -6.7402753829956055
    4. 'DP' → logprob: -6.8652753829956055
    5. '{
' → logprob: -9.740275382995605
    6. '	dp' → logprob: -9.990275382995605
    7. '{' → logprob: -10.740275382995605
    8. ' DP' → logprob: -11.240275382995605
    9. '    
' → logprob: -11.240275382995605
    10. 'state' → logprob: -11.490275382995605

Token 1340: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006210576975718141
    2. '   ' → logprob: -7.7506208419799805
    3. 'state' → logprob: -9.75062084197998
    4. 'DP' → logprob: -10.37562084197998
    5. 'from' → logprob: -10.50062084197998
    6. 'cur' → logprob: -10.62562084197998
    7. 'import' → logprob: -11.00062084197998
    8. 'prev' → logprob: -11.12562084197998
    9. 'states' → logprob: -12.00062084197998
    10. ' dp' → logprob: -12.50062084197998

Token 1341: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11449941247701645
    2. '   ' → logprob: -2.23949933052063
    3. '{' → logprob: -7.989499568939209
    4. 'DP' → logprob: -8.11449909210205
    5. 'from' → logprob: -8.48949909210205
    6. 'state' → logprob: -8.61449909210205
    7. '{
' → logprob: -8.86449909210205
    8. 'import' → logprob: -9.23949909210205
    9. ' dp' → logprob: -9.23949909210205
    10. 'cur' → logprob: -9.36449909210205

Token 1342: ' :' (ID: 712)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.36782753467559814
    2. 'state' → logprob: -1.9928275346755981
    3. '_state' → logprob: -3.2428274154663086
    4. '{
' → logprob: -3.8678274154663086
    5. 'al' → logprob: -3.9928274154663086
    6. 'e' → logprob: -4.242827415466309
    7. 'dp' → logprob: -4.242827415466309
    8. 'ial' → logprob: -4.367827415466309
    9. '{' → logprob: -4.617827415466309
    10. '=' → logprob: -4.742827415466309

Token 1343: ' ' (ID: 220)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6091614961624146
    2. 'dp' → logprob: -0.8591614961624146
    3. '   ' → logprob: -3.609161376953125
    4. ' {(' → logprob: -6.109161376953125
    5. 'state' → logprob: -6.234161376953125
    6. ' dp' → logprob: -7.859161376953125
    7. '{{' → logprob: -8.609161376953125
    8. 'DP' → logprob: -8.859161376953125
    9. '{
' → logprob: -8.984161376953125
    10. 'cur' → logprob: -8.984161376953125

Token 1344: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0129682132974267
    2. 'dp' → logprob: -4.387968063354492
    3. ' {(' → logprob: -7.887968063354492
    4. '{{' → logprob: -10.887968063354492
    5. '   ' → logprob: -10.887968063354492
    6. 'state' → logprob: -11.262968063354492
    7. 'd' → logprob: -11.762968063354492
    8. '{
' → logprob: -12.262968063354492
    9. ' dp' → logprob: -12.637968063354492
    10. '{}' → logprob: -12.637968063354492

Token 1345: ' pieces' (ID: 12762)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8155110478401184
    2. ' =' → logprob: -0.9405110478401184
    3. 'state' → logprob: -2.9405109882354736
    4. '_dp' → logprob: -3.0655109882354736
    5. '_state' → logprob: -3.5655109882354736
    6. ',' → logprob: -4.190511226654053
    7. '
' → logprob: -5.190511226654053
    8. '=' → logprob: -5.190511226654053
    9. 'DP' → logprob: -5.815511226654053
    10. '{' → logprob: -6.815511226654053

Token 1346: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9889519214630127
    2. 'dp' → logprob: -1.4889519214630127
    3. '_dp' → logprob: -2.1139519214630127
    4. ' =' → logprob: -2.2389519214630127
    5. ',' → logprob: -2.7389519214630127
    6. '500' → logprob: -3.3639519214630127
    7. 'DP' → logprob: -4.613951683044434
    8. '{' → logprob: -4.738951683044434
    9. '_state' → logprob: -5.113951683044434
    10. 's' → logprob: -5.113951683044434

Token 1347: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.13278934359550476
    2. ',' → logprob: -2.382789373397827
    3. 'de' → logprob: -4.507789134979248
    4. '_' → logprob: -4.507789134979248
    5. '0' → logprob: -5.757789134979248
    6. '_,' → logprob: -6.132789134979248
    7. '{' → logprob: -6.632789134979248
    8. ' ,' → logprob: -7.257789134979248
    9. '(' → logprob: -7.507789134979248
    10. ' ' → logprob: -8.007789611816406

Token 1348: ',' (ID: 11)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.4385005235671997
    2. ',' → logprob: -1.5635005235671997
    3. ' =' → logprob: -1.6885005235671997
    4. '_' → logprob: -1.9385005235671997
    5. 'dp' → logprob: -2.18850040435791
    6. '_state' → logprob: -3.18850040435791
    7. '500' → logprob: -3.93850040435791
    8. 'state' → logprob: -4.56350040435791
    9. '_,' → logprob: -5.18850040435791
    10. ' ,' → logprob: -5.43850040435791

Token 1349: ' pas' (ID: 2173)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04305708408355713
    2. ' (' → logprob: -3.1680569648742676
    3. '   ' → logprob: -11.043057441711426
    4. ' ' → logprob: -11.418057441711426
    5. '0' → logprob: -11.543057441711426
    6. 'tuple' → logprob: -11.793057441711426
    7. '{' → logprob: -13.043057441711426
    8. '
' → logprob: -13.418057441711426
    9. '  ' → logprob: -13.543057441711426
    10. '#' → logprob: -13.668057441711426

Token 1350: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7695481181144714
    2. 'de' → logprob: -0.7695481181144714
    3. 'dep' → logprob: -3.519548177719116
    4. ' de' → logprob: -4.394547939300537
    5. 'dé' → logprob: -4.394547939300537
    6. ' d' → logprob: -4.644547939300537
    7. 's' → logprob: -6.269547939300537
    8. '#' → logprob: -6.644547939300537
    9. ' ' → logprob: -6.769547939300537
    10. '   ' → logprob: -7.144547939300537

Token 1351: ' pièces' (ID: 49165)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.8453074097633362
    2. 'coins' → logprob: -1.3453073501586914
    3. 'pi' → logprob: -1.4703073501586914
    4. 'd' → logprob: -3.9703073501586914
    5. 'piece' → logprob: -4.595307350158691
    6. ' ' → logprob: -4.845307350158691
    7. 'dé' → logprob: -5.095307350158691
    8. 'co' → logprob: -5.095307350158691
    9. 'dep' → logprob: -5.470307350158691
    10. 'coin' → logprob: -5.970307350158691

Token 1352: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13081009685993195
    2. '=' → logprob: -2.880810022354126
    3. ',' → logprob: -3.505810022354126
    4. '{' → logprob: -4.505810260772705
    5. 'dp' → logprob: -4.505810260772705
    6. '={' → logprob: -5.880810260772705
    7. '   ' → logprob: -6.005810260772705
    8. '_' → logprob: -6.005810260772705
    9. '
' → logprob: -7.505810260772705
    10. 'coins' → logprob: -7.630810260772705

Token 1353: ' dép' (ID: 34015)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.05251743271946907
    2. ' {(' → logprob: -3.0525174140930176
    3. ' {' → logprob: -5.802517414093018
    4. 'dp' → logprob: -8.302517890930176
    5. '0' → logprob: -8.552517890930176
    6. '   ' → logprob: -8.677517890930176
    7. ' ' → logprob: -9.552517890930176
    8. '(' → logprob: -9.552517890930176
    9. '{}' → logprob: -9.802517890930176
    10. '{
' → logprob: -10.552517890930176

Token 1354: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.04081644117832184
    2. '=' → logprob: -4.165816307067871
    3. 'ence' → logprob: -4.415816307067871
    4. '0' → logprob: -6.290816307067871
    5. '{}' → logprob: -6.415816307067871
    6. '={}' → logprob: -6.415816307067871
    7. '={' → logprob: -6.540816307067871
    8. 'enses' → logprob: -6.665816307067871
    9. '   ' → logprob: -7.165816307067871
    10. '={}
' → logprob: -7.415816307067871

Token 1355: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7061300277709961
    2. ' =' → logprob: -0.7061300277709961
    3. '0' → logprob: -5.081130027770996
    4. '{' → logprob: -5.581130027770996
    5. '={' → logprob: -7.081130027770996
    6. '500' → logprob: -7.206130027770996
    7. 'initial' → logprob: -8.206130027770996
    8. ' ' → logprob: -8.706130027770996
    9. '   ' → logprob: -8.831130027770996
    10. ',' → logprob: -8.956130027770996

Token 1356: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04367348551750183
    2. '0' → logprob: -3.668673515319824
    3. ' =' → logprob: -4.543673515319824
    4. '{' → logprob: -5.168673515319824
    5. '={' → logprob: -7.168673515319824
    6. '   ' → logprob: -9.918673515319824
    7. ' {' → logprob: -11.043673515319824
    8. ' ' → logprob: -11.168673515319824
    9. '1' → logprob: -12.543673515319824
    10. ':' → logprob: -12.543673515319824

Token 1357: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5779285430908203
    2. '   ' → logprob: -0.8279285430908203
    3. ' dp' → logprob: -6.95292854309082
    4. 'DP' → logprob: -7.45292854309082
    5. '
' → logprob: -9.07792854309082
    6. 'state' → logprob: -9.57792854309082
    7. '{' → logprob: -9.95292854309082
    8. '	dp' → logprob: -9.95292854309082
    9. '{
' → logprob: -10.07792854309082
    10. ',' → logprob: -10.82792854309082

Token 1358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47888049483299255
    2. 'dp' → logprob: -0.9788805246353149
    3. ' dp' → logprob: -5.478880405426025
    4. 'DP' → logprob: -7.603880405426025
    5. '	dp' → logprob: -9.853880882263184
    6. 'state' → logprob: -10.978880882263184
    7. ' DP' → logprob: -11.478880882263184
    8. '{
' → logprob: -11.478880882263184
    9. '_dp' → logprob: -12.353880882263184
    10. '(dp' → logprob: -12.353880882263184

Token 1359: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0044716582633554935
    2. '   ' → logprob: -5.504471778869629
    3. ' dp' → logprob: -8.254471778869629
    4. 'state' → logprob: -9.254471778869629
    5. 'DP' → logprob: -10.754471778869629
    6. 'import' → logprob: -12.254471778869629
    7. '	dp' → logprob: -12.879471778869629
    8. 'prev' → logprob: -13.629471778869629
    9. 'from' (adapté à ' from') → logprob: -13.629471778869629
    10. ' ' → logprob: -14.004471778869629

Token 1360: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00013834332639817148
    2. 'math' → logprob: -9.000138282775879
    3. ' collections' → logprob: -11.375138282775879
    4. 'copy' → logprob: -12.875138282775879
    5. 'collection' → logprob: -15.000138282775879
    6. ' ' → logprob: -15.625138282775879
    7. '
' → logprob: -16.375139236450195
    8. 'heap' → logprob: -16.500139236450195
    9. ' math' → logprob: -16.750139236450195
    10. '__' → logprob: -16.875139236450195

Token 1361: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3052228689193726
    2. '.Counter' → logprob: -1.3052228689193726
    3. '.collections' → logprob: -1.8052228689193726
    4. 'collections' → logprob: -2.055222988128662
    5. 'import' → logprob: -2.930222988128662
    6. '.deepcopy' → logprob: -3.680222988128662
    7. '.default' → logprob: -3.680222988128662
    8. 'def' → logprob: -3.805222988128662
    9. '.import' → logprob: -5.180222988128662
    10. '.def' → logprob: -5.680222988128662

Token 1362: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -2.1008713702030946e-06
    2. ' defaultdict' → logprob: -13.500001907348633
    3. 'deque' → logprob: -14.375001907348633
    4. '.default' → logprob: -17.125001907348633
    5. '
' → logprob: -18.250001907348633
    6. '"default' → logprob: -19.250001907348633
    7. '(default' → logprob: -20.250001907348633
    8. '_default' → logprob: -20.750001907348633
    9. 'def' → logprob: -20.875001907348633
    10. ''default' → logprob: -21.000001907348633

Token 1363: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12914897501468658
    2. '   ' → logprob: -2.1291489601135254
    3. 'DP' → logprob: -6.379148960113525
    4. ' dp' → logprob: -7.754148960113525
    5. 'import' → logprob: -10.879149436950684
    6. '
' → logprob: -11.004149436950684
    7. 'def' → logprob: -11.004149436950684
    8. '	dp' → logprob: -11.254149436950684
    9. 'state' → logprob: -12.129149436950684
    10. 'cur' → logprob: -12.504149436950684

Token 1364: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2528761029243469
    2. '   ' → logprob: -1.5028760433197021
    3. 'DP' → logprob: -7.127876281738281
    4. ' dp' → logprob: -9.752876281738281
    5. '
' → logprob: -10.502876281738281
    6. 'def' → logprob: -11.127876281738281
    7. 'import' → logprob: -11.502876281738281
    8. '	dp' → logprob: -11.502876281738281
    9. '    
' → logprob: -12.252876281738281
    10. 'cur' → logprob: -12.252876281738281

Token 1365: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0007780580781400204
    2. '   ' → logprob: -7.2507781982421875
    3. 'DP' → logprob: -10.375778198242188
    4. 'prev' → logprob: -11.500778198242188
    5. ' dp' → logprob: -12.000778198242188
    6. 'cur' → logprob: -12.125778198242188
    7. 'current' → logprob: -12.250778198242188
    8. 'state' → logprob: -12.375778198242188
    9. '
' → logprob: -12.750778198242188
    10. 'curr' → logprob: -14.125778198242188

Token 1366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14286324381828308
    2. '=' → logprob: -2.0178632736206055
    3. '_prev' → logprob: -9.767863273620605
    4. '={}' → logprob: -9.892863273620605
    5. '   ' → logprob: -10.642863273620605
    6. '_current' → logprob: -11.517863273620605
    7. '_' → logprob: -11.767863273620605
    8. '={}
' → logprob: -11.892863273620605
    9. '=[]' → logprob: -12.517863273620605
    10. '_next' → logprob: -13.017863273620605

Token 1367: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.08070677518844604
    2. '{' → logprob: -2.580706834793091
    3. 'collections' → logprob: -6.330706596374512
    4. '{}
' → logprob: -10.705706596374512
    5. '[{' → logprob: -11.705706596374512
    6. '{
' → logprob: -14.580706596374512
    7. ' {' → logprob: -14.580706596374512
    8. ' defaultdict' → logprob: -14.830706596374512
    9. 'dict' → logprob: -14.830706596374512
    10. '   ' → logprob: -14.955706596374512

Token 1368: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.062188830226659775
    2. 'lambda' → logprob: -2.8121888637542725
    3. 'dict' → logprob: -9.187189102172852
    4. '(dict' → logprob: -9.437189102172852
    5. '```' → logprob: -11.187189102172852
    6. 'int' → logprob: -11.687189102172852
    7. '=lambda' → logprob: -12.062189102172852
    8. '{' → logprob: -12.312189102172852
    9. '{
' → logprob: -13.437189102172852
    10. '
' → logprob: -13.687189102172852

Token 1369: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010799258947372437
    2. ' lambda' → logprob: -5.510799407958984
    3. 'float' → logprob: -5.760799407958984
    4. '(lambda' → logprob: -6.135799407958984
    5. 'int' → logprob: -6.885799407958984
    6. '=lambda' → logprob: -8.760799407958984
    7. ':' → logprob: -9.135799407958984
    8. '   ' → logprob: -9.635799407958984
    9. 'sys' → logprob: -11.760799407958984
    10. 'dict' → logprob: -11.885799407958984

Token 1370: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001857484458014369
    2. 'sys' → logprob: -6.501857280731201
    3. '10' → logprob: -8.12685775756836
    4. '1' → logprob: -9.87685775756836
    5. ' float' → logprob: -12.50185775756836
    6. 'int' → logprob: -12.75185775756836
    7. '100' → logprob: -14.12685775756836
    8. '   ' → logprob: -15.37685775756836
    9. '999' → logprob: -15.62685775756836
    10. '(float' → logprob: -15.75185775756836

Token 1371: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.25561606884002686
    2. '('' → logprob: -1.5056160688400269
    3. ''' → logprob: -6.505616188049316
    4. ''s' → logprob: -8.005616188049316
    5. ''ins' → logprob: -8.505616188049316
    6. ''op' → logprob: -8.630616188049316
    7. '"' → logprob: -8.755616188049316
    8. ''inc' → logprob: -8.755616188049316
    9. ''ex' → logprob: -9.005616188049316
    10. ''t' → logprob: -9.130616188049316

Token 1372: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00044830769184045494
    2. ''in' → logprob: -7.875448226928711
    3. ''' → logprob: -9.625448226928711
    4. '-inf' → logprob: -14.125448226928711
    5. ''s' → logprob: -14.750448226928711
    6. 'info' → logprob: -15.875448226928711
    7. ' inf' → logprob: -15.875448226928711
    8. '.inf' → logprob: -16.00044822692871
    9. 'INF' → logprob: -16.00044822692871
    10. 'in' → logprob: -16.12544822692871

Token 1373: ''))
' (ID: 15277)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.19902169704437256
    2. ')' → logprob: -2.074021816253662
    3. ')
' → logprob: -4.199021816253662
    4. ')')
' → logprob: -4.324021816253662
    5. '   ' → logprob: -4.699021816253662
    6. ''))
' → logprob: -4.824021816253662
    7. '))' → logprob: -5.449021816253662
    8. '()))
' → logprob: -6.199021816253662
    9. '())
' → logprob: -6.949021816253662
    10. '       ' → logprob: -7.699021816253662

Token 1374: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008574268780648708
    2. '   ' → logprob: -4.883574485778809
    3. ' dp' → logprob: -7.508574485778809
    4. '{' → logprob: -9.008574485778809
    5. '(dp' → logprob: -9.008574485778809
    6. ')' → logprob: -10.008574485778809
    7. '
' → logprob: -10.383574485778809
    8. '{}' → logprob: -10.883574485778809
    9. '    
' → logprob: -11.508574485778809
    10. 'state' → logprob: -11.508574485778809

Token 1375: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -7.195421494543552e-05
    2. 'state' → logprob: -10.37507152557373
    3. '   ' → logprob: -10.87507152557373
    4. 'key' → logprob: -11.12507152557373
    5. ' dp' → logprob: -12.25007152557373
    6. 'initial' → logprob: -14.00007152557373
    7. '(dp' → logprob: -14.12507152557373
    8. 'init' → logprob: -16.250072479248047
    9. '
' → logprob: -16.375072479248047
    10. '{' → logprob: -16.750072479248047

Token 1376: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.000721487682312727
    2. '[((' → logprob: -7.500721454620361
    3. '[' → logprob: -8.87572193145752
    4. '=' → logprob: -11.25072193145752
    5. ' =' → logprob: -12.12572193145752
    6. '   ' → logprob: -12.25072193145752
    7. '[
' → logprob: -13.62572193145752
    8. ' [(' → logprob: -13.87572193145752
    9. '([(' → logprob: -14.00072193145752
    10. '[{' → logprob: -14.62572193145752

Token 1377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. ' ' → logprob: -15.12500286102295
    4. '   ' → logprob: -20.500001907348633
    5. '０' → logprob: -21.500001907348633
    6. '۰' → logprob: -21.500001907348633
    7. ' (' → logprob: -22.250001907348633
    8. '000' → logprob: -22.375001907348633
    9. '00' → logprob: -22.875001907348633
    10. '
' → logprob: -22.875001907348633

Token 1378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019614404067397118
    2. ',(' → logprob: -4.019614219665527
    3. ' ,' → logprob: -7.269614219665527
    4. '(' → logprob: -7.769614219665527
    5. ',
' → logprob: -8.269614219665527
    6. ',None' → logprob: -10.394614219665527
    7. ' (' → logprob: -11.394614219665527
    8. '(),' → logprob: -11.644614219665527
    9. '   ' → logprob: -12.269614219665527
    10. '0' → logprob: -12.269614219665527

Token 1379: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.547789674485102e-05
    2. ' (' → logprob: -10.250035285949707
    3. '0' → logprob: -17.250036239624023
    4. 'tuple' → logprob: -18.500036239624023
    5. '   ' → logprob: -18.625036239624023
    6. ' ' → logprob: -19.625036239624023
    7. '  ' → logprob: -20.875036239624023
    8. '[' → logprob: -21.000036239624023
    9. '((' → logprob: -21.125036239624023
    10. ')' → logprob: -21.750036239624023

Token 1380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. '(' → logprob: -7.500553131103516
    3. '[' → logprob: -16.500553131103516
    4. ' ' → logprob: -16.750553131103516
    5. ' (' → logprob: -17.125553131103516
    6. '000' → logprob: -18.750553131103516
    7. '۰' → logprob: -19.750553131103516
    8. '０' → logprob: -20.125553131103516
    9. ')' → logprob: -20.750553131103516
    10. '))' → logprob: -20.875553131103516

Token 1381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. '0' → logprob: -11.125020027160645
    3. ' ,' → logprob: -12.250020027160645
    4. ',
' → logprob: -15.125020027160645
    5. '   ' → logprob: -15.375020027160645
    6. '    ' → logprob: -18.62502098083496
    7. '  ' → logprob: -18.75002098083496
    8. '000' → logprob: -19.12502098083496
    9. '
' → logprob: -19.25002098083496
    10. ' ' → logprob: -19.50002098083496

Token 1382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '4' → logprob: -14.750000953674316
    4. '   ' → logprob: -19.375001907348633
    5. '
' → logprob: -20.875001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '    ' → logprob: -22.625001907348633
    8. ')' → logprob: -22.750001907348633
    9. '#' → logprob: -23.375001907348633
    10. '

' → logprob: -24.000001907348633

Token 1383: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040793512016534805
    2. ',' → logprob: -5.504079341888428
    3. ' ,' → logprob: -14.629079818725586
    4. '   ' → logprob: -15.004079818725586
    5. ' ' → logprob: -16.504079818725586
    6. '000' → logprob: -17.004079818725586
    7. '  ' → logprob: -17.754079818725586
    8. ',
' → logprob: -17.879079818725586
    9. '
' → logprob: -18.254079818725586
    10. '```' → logprob: -18.629079818725586

Token 1384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '4' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -19.6875
    6. '...' → logprob: -19.875
    7. '00' → logprob: -19.875
    8. '1' → logprob: -19.9375
    9. '  ' → logprob: -20.0
    10. '۰' → logprob: -20.5

Token 1385: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804688900709152
    2. ',' → logprob: -3.2880468368530273
    3. ' ,' → logprob: -12.788046836853027
    4. ' ' → logprob: -13.288046836853027
    5. '   ' → logprob: -14.538046836853027
    6. '  ' → logprob: -15.788046836853027
    7. ',
' → logprob: -16.413047790527344
    8. '
' → logprob: -16.538047790527344
    9. '00' → logprob: -17.788047790527344
    10. '000' → logprob: -18.163047790527344

Token 1386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011720098555088043
    2. '4' → logprob: -6.751172065734863
    3. '   ' → logprob: -14.501172065734863
    4. '10' → logprob: -14.501172065734863
    5. ' ' → logprob: -14.626172065734863
    6. '
' → logprob: -16.251171112060547
    7. '  ' → logprob: -16.751171112060547
    8. '```' → logprob: -17.188671112060547
    9. '#' → logprob: -17.376171112060547
    10. '1' → logprob: -18.188671112060547

Token 1387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02980082668364048
    2. '0' → logprob: -3.5298008918762207
    3. ' ,' → logprob: -10.154800415039062
    4. '   ' → logprob: -11.779800415039062
    5. ',
' → logprob: -13.779800415039062
    6. '
' → logprob: -14.529800415039062
    7. '))' → logprob: -14.529800415039062
    8. '1' → logprob: -14.654800415039062
    9. ' ' → logprob: -15.279800415039062
    10. '  ' → logprob: -15.404800415039062

Token 1388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.500007629394531
    4. '  ' → logprob: -15.125007629394531
    5. '10' → logprob: -15.500007629394531
    6. '    ' → logprob: -17.06250762939453
    7. '4' → logprob: -17.12500762939453
    8. '     ' → logprob: -17.43750762939453
    9. '       ' → logprob: -18.06250762939453
    10. '
' → logprob: -18.06250762939453

Token 1389: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005581548321060836
    2. ')]' → logprob: -7.750558376312256
    3. '   ' → logprob: -9.375557899475098
    4. ' ))' → logprob: -10.875557899475098
    5. '))]
' → logprob: -11.125557899475098
    6. ')' → logprob: -12.625557899475098
    7. ')))' → logprob: -12.875557899475098
    8. ''))' → logprob: -14.500557899475098
    9. '    ' → logprob: -14.750557899475098
    10. ')])' → logprob: -15.375557899475098

Token 1390: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1668837070465088
    2. ']' → logprob: -2.166883707046509
    3. ')=' → logprob: -3.791883707046509
    4. ')]' → logprob: -4.66688346862793
    5. ']=' → logprob: -5.16688346862793
    6. ' )' → logprob: -6.91688346862793
    7. '])' → logprob: -9.16688346862793
    8. '   ' → logprob: -9.16688346862793
    9. ']+=' → logprob: -9.41688346862793
    10. '=' → logprob: -9.54188346862793

Token 1391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868802487850189
    2. '=' → logprob: -1.1368802785873413
    3. ')' → logprob: -12.386879920959473
    4. ']' → logprob: -12.761879920959473
    5. ']=' → logprob: -14.011879920959473
    6. '    ' → logprob: -14.636879920959473
    7. ')=' → logprob: -14.761879920959473
    8. ' ' → logprob: -16.01188087463379
    9. ',' → logprob: -16.13688087463379
    10. '   ' → logprob: -16.38688087463379

Token 1392: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.625
    4. '  ' → logprob: -22.875
    5. ' ' → logprob: -23.625
    6. '    ' → logprob: -23.75
    7. '۰' → logprob: -24.0
    8. '000' → logprob: -24.125
    9. '     ' → logprob: -24.5
    10. '00' → logprob: -24.625

Token 1393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -23.0
    4. '۰' → logprob: -25.375
    5. '00' → logprob: -25.5
    6. '000' → logprob: -25.5
    7. '  ' → logprob: -25.625
    8. '０' → logprob: -26.0
    9. ' ' → logprob: -26.375
    10. '    ' → logprob: -26.5

Token 1394: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031615000218153
    2. ' for' → logprob: -4.156614780426025
    3. 'for' → logprob: -4.531614780426025
    4. '
' → logprob: -5.531614780426025
    5. '    
' → logprob: -7.406614780426025
    6. '	for' → logprob: -9.531615257263184
    7. '	
' → logprob: -10.406615257263184
    8. ' 
' → logprob: -12.031615257263184
    9. ')' → logprob: -12.406615257263184
    10. '<|end|>' → logprob: -12.781615257263184

Token 1395: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010092071170220152
    2. ' for' → logprob: -9.250101089477539
    3. '   ' → logprob: -12.375101089477539
    4. '    
' → logprob: -15.500101089477539
    5. '	for' → logprob: -15.625101089477539
    6. '
' → logprob: -15.875101089477539
    7. 'import' → logprob: -18.62510108947754
    8. '```' → logprob: -19.25010108947754
    9. '  
' → logprob: -19.62510108947754
    10. ' 
' → logprob: -20.12510108947754

Token 1396: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.60414821645827e-06
    2. ' for' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '	for' → logprob: -17.250003814697266
    5. '    
' → logprob: -17.500003814697266
    6. '
' → logprob: -17.625003814697266
    7. 'import' → logprob: -18.375003814697266
    8. '  
' → logprob: -21.500003814697266
    9. '#' → logprob: -21.625003814697266
    10. '```' → logprob: -22.375003814697266

Token 1397: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007776983547955751
    2. ' i' → logprob: -4.882777214050293
    3. '   ' → logprob: -8.757777214050293
    4. 'idx' → logprob: -12.632777214050293
    5. 'store' → logprob: -12.632777214050293
    6. '	i' → logprob: -13.382777214050293
    7. '_i' → logprob: -13.632777214050293
    8. 'shop' → logprob: -13.757777214050293
    9. ' ' → logprob: -14.132777214050293
    10. '       ' → logprob: -14.757777214050293

Token 1398: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2366584986448288
    2. 'in' → logprob: -1.6116584539413452
    3. ',' → logprob: -5.111658573150635
    4. '+' → logprob: -5.986658573150635
    5. '   ' → logprob: -6.611658573150635
    6. '_' → logprob: -7.111658573150635
    7. ' ,' → logprob: -9.361658096313477
    8. ' +=' → logprob: -9.611658096313477
    9. ' +' → logprob: -9.861658096313477
    10. ' ' → logprob: -9.861658096313477

Token 1399: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0015268829884007573
    2. 'p' → logprob: -6.626526832580566
    3. 'prix' → logprob: -8.751526832580566
    4. ' price' → logprob: -10.251526832580566
    5. '(price' → logprob: -12.501526832580566
    6. 'pi' → logprob: -13.501526832580566
    7. '   ' → logprob: -14.376526832580566
    8. 'precio' → logprob: -15.501526832580566
    9. 'cost' → logprob: -15.501526832580566
    10. ' ' → logprob: -15.626526832580566

Token 1400: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7285656929016113
    2. 'in' → logprob: -0.9785656929016113
    3. ',' → logprob: -2.1035656929016113
    4. ')' → logprob: -5.353565692901611
    5. '):
' → logprob: -5.353565692901611
    6. '   ' → logprob: -5.478565692901611
    7. ':
' → logprob: -6.103565692901611
    8. '_' → logprob: -7.103565692901611
    9. ':' → logprob: -7.603565692901611
    10. ' ,' → logprob: -7.728565692901611

Token 1401: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.24894122779369354
    2. 'range' → logprob: -1.99894118309021
    3. ' enumerate' → logprob: -2.74894118309021
    4. 'prices' → logprob: -4.248941421508789
    5. ' range' → logprob: -5.123941421508789
    6. ' prices' → logprob: -7.373941421508789
    7. 'dp' → logprob: -10.998941421508789
    8. 'price' → logprob: -11.748941421508789
    9. '(range' → logprob: -12.373941421508789
    10. 'in' → logprob: -13.123941421508789

Token 1402: '(pr' (ID: 38401)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.007405369076877832
    2. '(pr' → logprob: -5.6324052810668945
    3. ' prices' → logprob: -6.0074052810668945
    4. 'range' → logprob: -7.3824052810668945
    5. 'enumer' → logprob: -8.382405281066895
    6. ',' → logprob: -8.382405281066895
    7. 'pr' → logprob: -8.882405281066895
    8. '   ' → logprob: -9.632405281066895
    9. 'in' → logprob: -10.882405281066895
    10. 'prix' → logprob: -11.382405281066895

Token 1403: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.003808742156252265
    2. 'ces' → logprob: -5.628808975219727
    3. '   ' → logprob: -9.753808975219727
    4. '```' → logprob: -10.003808975219727
    5. ')' → logprob: -10.753808975219727
    6. 'oces' → logprob: -11.253808975219727
    7. '#' → logprob: -11.378808975219727
    8. ' ' → logprob: -11.878808975219727
    9. 'es' → logprob: -12.003808975219727
    10. 'ic' → logprob: -12.253808975219727

Token 1404: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5988819599151611
    2. '):
' → logprob: -0.9738819599151611
    3. '):' → logprob: -2.973881959915161
    4. '   ' → logprob: -4.223881721496582
    5. ':' → logprob: -5.098881721496582
    6. ':
' → logprob: -6.973881721496582
    7. ',' → logprob: -9.973881721496582
    8. ')' → logprob: -10.223881721496582
    9. '):
' → logprob: -10.598881721496582
    10. '    ' → logprob: -10.723881721496582

Token 1405: ' start' (ID: 1604)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.01364266872406
    2. '):' → logprob: -1.38864266872406
    3. 'start' → logprob: -1.88864266872406
    4. '1' → logprob: -2.0136427879333496
    5. '   ' → logprob: -3.1386427879333496
    6. ' start' → logprob: -3.3886427879333496
    7. ' ' → logprob: -4.76364278793335
    8. ')' → logprob: -5.01364278793335
    9. '       ' → logprob: -5.63864278793335
    10. '
' → logprob: -6.26364278793335

Token 1406: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023383839055895805
    2. '1' → logprob: -3.773383855819702
    3. '(' → logprob: -9.148384094238281
    4. '):
' → logprob: -10.898384094238281
    5. '   ' → logprob: -12.148384094238281
    6. 'from' → logprob: -13.398384094238281
    7. ')' → logprob: -13.398384094238281
    8. ' =' → logprob: -13.523384094238281
    9. 'def' → logprob: -13.898384094238281
    10. ',' → logprob: -14.023384094238281

Token 1407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '0' → logprob: -11.750009536743164
    3. ' ' → logprob: -13.250009536743164
    4. '   ' → logprob: -15.250009536743164
    5. ')' → logprob: -17.625009536743164
    6. '=' → logprob: -19.125009536743164
    7. 'def' → logprob: -19.375009536743164
    8. '
' → logprob: -20.375009536743164
    9. '2' → logprob: -20.375009536743164
    10. '#' → logprob: -20.625009536743164

Token 1408: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22337359189987183
    2. '):' → logprob: -1.7233736515045166
    3. '   ' → logprob: -4.4733734130859375
    4. '       ' → logprob: -4.5983734130859375
    5. '):
' → logprob: -9.098373413085938
    6. ':' → logprob: -9.598373413085938
    7. ')' → logprob: -10.223373413085938
    8. '):

' → logprob: -11.598373413085938
    9. ':
' → logprob: -12.598373413085938
    10. '    ' → logprob: -12.598373413085938

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07350946962833405
    2. ' new' → logprob: -3.073509454727173
    3. 'new' → logprob: -4.448509693145752
    4. '   ' → logprob: -4.823509693145752
    5. '
' → logprob: -5.948509693145752
    6. ' next' → logprob: -7.073509693145752
    7. 'next' → logprob: -7.198509693145752
    8. '        
' → logprob: -7.698509693145752
    9. '     ' → logprob: -10.073509216308594
    10. '#' → logprob: -10.573509216308594

Token 1410: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18489180505275726
    2. 'nd' (adapté à ' nd') → logprob: -1.9348918199539185
    3. 'next' → logprob: -3.934891700744629
    4. 'dp' → logprob: -6.184891700744629
    5. '       ' → logprob: -6.559891700744629
    6. ' new' → logprob: -6.934891700744629
    7. ' nd' → logprob: -8.309891700744629
    8. '   ' → logprob: -9.684891700744629
    9. ' next' → logprob: -10.309891700744629
    10. 'n' → logprob: -11.184891700744629

Token 1411: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.4868770196917467e-05
    2. '=' → logprob: -11.125024795532227
    3. ' =' → logprob: -11.750024795532227
    4. '   ' → logprob: -13.500024795532227
    5. 'dp' → logprob: -15.875024795532227
    6. '={}
' → logprob: -15.875024795532227
    7. '{' → logprob: -16.250024795532227
    8. '
' → logprob: -16.250024795532227
    9. '_p' → logprob: -16.625024795532227
    10. 'P' → logprob: -17.000024795532227

Token 1412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331774592399597
    2. '=' → logprob: -1.3133177757263184
    3. '={}' → logprob: -9.81331729888916
    4. '={}
' → logprob: -14.56331729888916
    5. '={' → logprob: -15.31331729888916
    6. '    ' → logprob: -15.43831729888916
    7. '   ' → logprob: -16.063318252563477
    8. '	' → logprob: -16.563318252563477
    9. '       ' → logprob: -16.813318252563477
    10. ' ={' → logprob: -17.063318252563477

Token 1413: ' defaultdict' (ID: 107098)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.008940599858760834
    2. 'default' → logprob: -4.758940696716309
    3. '{}' → logprob: -8.633940696716309
    4. ' collections' → logprob: -9.633940696716309
    5. 'dict' → logprob: -9.883940696716309
    6. '{}
' → logprob: -11.258940696716309
    7. '       ' → logprob: -11.633940696716309
    8. '   ' → logprob: -11.883940696716309
    9. 'collection' → logprob: -13.133940696716309
    10. ' defaultdict' → logprob: -14.883940696716309

Token 1414: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0003706126008182764
    2. '(float' → logprob: -8.500370979309082
    3. 'lambda' → logprob: -8.750370979309082
    4. 'float' → logprob: -12.000370979309082
    5. '(' → logprob: -13.625370979309082
    6. ' (' → logprob: -14.500370979309082
    7. '=lambda' → logprob: -15.125370979309082
    8. '(
' → logprob: -15.625370979309082
    9. '```' → logprob: -16.125370025634766
    10. '(dict' → logprob: -16.375370025634766

Token 1415: ':' (ID: 25)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008678389713168144
    2. ' float' → logprob: -5.008678436279297
    3. ':' → logprob: -6.258678436279297
    4. '        ' → logprob: -11.383678436279297
    5. '=float' → logprob: -11.383678436279297
    6. '           ' → logprob: -12.133678436279297
    7. '       ' → logprob: -12.633678436279297
    8. '   ' → logprob: -12.633678436279297
    9. '(float' → logprob: -12.758678436279297
    10. '            ' → logprob: -12.883678436279297

Token 1416: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.5491004129871726e-05
    2. ' float' → logprob: -10.000045776367188
    3. 'lambda' → logprob: -20.125045776367188
    4. '	float' → logprob: -20.750045776367188
    5. '   ' → logprob: -21.250045776367188
    6. '(float' → logprob: -21.625045776367188
    7. '=float' → logprob: -23.000045776367188
    8. 'inf' → logprob: -23.625045776367188
    9. '       ' → logprob: -23.750045776367188
    10. 'flo' → logprob: -24.000045776367188

Token 1417: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.824403703212738
    2. 'inf' → logprob: -0.824403703212738
    3. '('' → logprob: -2.574403762817383
    4. ''' → logprob: -3.074403762817383
    5. ''ins' → logprob: -9.074403762817383
    6. ''inc' → logprob: -9.199403762817383
    7. '   ' → logprob: -9.324403762817383
    8. ''imp' → logprob: -10.074403762817383
    9. ''il' → logprob: -10.824403762817383
    10. ''s' → logprob: -10.824403762817383

Token 1418: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ' inf' → logprob: -17.0
    3. '-inf' → logprob: -19.0
    4. '   ' → logprob: -19.875
    5. '           ' → logprob: -20.875
    6. ''' → logprob: -21.5
    7. '       ' → logprob: -21.75
    8. '.inf' → logprob: -21.875
    9. '               ' → logprob: -22.25
    10. '_inf' → logprob: -22.25

Token 1419: ''))
' (ID: 15277)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.009196835570037365
    2. '))' → logprob: -5.009196758270264
    3. '       ' → logprob: -6.884196758270264
    4. ''))
' → logprob: -6.884196758270264
    5. ')' → logprob: -8.509197235107422
    6. '()))
' → logprob: -8.634197235107422
    7. '   ' → logprob: -11.509197235107422
    8. ' ))
' → logprob: -11.509197235107422
    9. '           ' → logprob: -11.884197235107422
    10. '))

' → logprob: -12.134197235107422

Token 1420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010851259343326092
    2. 'for' → logprob: -4.7608513832092285
    3. ' for' → logprob: -6.3858513832092285
    4. '	' → logprob: -7.8858513832092285
    5. '
' → logprob: -10.13585090637207
    6. '        
' → logprob: -10.26085090637207
    7. '	for' → logprob: -10.63585090637207
    8. '   ' → logprob: -10.63585090637207
    9. '```' → logprob: -10.76085090637207
    10. '	   ' → logprob: -11.01085090637207

Token 1421: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005359094589948654
    2. '       ' → logprob: -5.255359172821045
    3. ' for' → logprob: -9.005358695983887
    4. '#' (adapté à ' #') → logprob: -13.130358695983887
    5. '   ' → logprob: -14.755358695983887
    6. '           ' → logprob: -16.380359649658203
    7. '	for' → logprob: -16.755359649658203
    8. '               ' → logprob: -17.755359649658203
    9. '
' → logprob: -18.005359649658203
    10. ' ' → logprob: -18.130359649658203

Token 1422: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038457632064819336
    2. '       ' → logprob: -3.2884576320648193
    3. ' for' → logprob: -7.788457870483398
    4. '   ' → logprob: -13.788457870483398
    5. '	for' → logprob: -15.163457870483398
    6. '        
' → logprob: -15.663457870483398
    7. '#' → logprob: -16.6634578704834
    8. '           ' → logprob: -16.7884578704834
    9. 'import' → logprob: -17.0384578704834
    10. ' ' → logprob: -17.6634578704834

Token 1423: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2119559049606323
    2. 'key' → logprob: -1.3369559049606323
    3. 'state' → logprob: -2.086956024169922
    4. 'nombre' → logprob: -2.961956024169922
    5. '(p' → logprob: -3.461956024169922
    6. 'pieces' → logprob: -3.461956024169922
    7. 'coins' → logprob: -3.586956024169922
    8. 'num' → logprob: -4.336956024169922
    9. 'nbr' → logprob: -4.461956024169922
    10. 'nb' → logprob: -4.461956024169922

Token 1424: ' état' (ID: 59181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9844571948051453
    2. 'key' → logprob: -1.48445725440979
    3. '(state' → logprob: -2.10945725440979
    4. 'state' → logprob: -2.23445725440979
    5. '(key' → logprob: -2.85945725440979
    6. '(et' → logprob: -3.35945725440979
    7. 'etat' → logprob: -3.60945725440979
    8. '(nb' → logprob: -4.359457015991211
    9. ' (' → logprob: -4.734457015991211
    10. '((' → logprob: -4.734457015991211

Token 1425: ' actuel' (ID: 113646)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.1437064409255981
    2. ' (' → logprob: -1.3937064409255981
    3. 'state' → logprob: -1.6437064409255981
    4. '(state' → logprob: -2.6437063217163086
    5. ' key' → logprob: -2.6437063217163086
    6. '(key' → logprob: -3.2687063217163086
    7. '       ' → logprob: -3.5187063217163086
    8. '(' → logprob: -4.393706321716309
    9. '           ' → logprob: -5.393706321716309
    10. ' state' → logprob: -5.893706321716309

Token 1426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32988035678863525
    2. ',' → logprob: -1.8298803567886353
    3. ' (' → logprob: -3.0798802375793457
    4. ' in' → logprob: -3.7048802375793457
    5. '           ' → logprob: -4.204880237579346
    6. '(' → logprob: -5.079880237579346
    7. ' key' → logprob: -5.079880237579346
    8. ' for' → logprob: -5.329880237579346
    9. '((' → logprob: -5.704880237579346
    10. 'for' → logprob: -5.829880237579346

Token 1427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03923417255282402
    2. 'for' → logprob: -3.789234161376953
    3. 'key' → logprob: -5.914234161376953
    4. '(' → logprob: -6.039234161376953
    5. ' (' → logprob: -6.039234161376953
    6. '           ' → logprob: -6.039234161376953
    7. '(key' → logprob: -6.539234161376953
    8. ' for' → logprob: -6.664234161376953
    9. 'state' → logprob: -7.039234161376953
    10. ' key' → logprob: -7.414234161376953

Token 1428: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07981255650520325
    2. '       ' → logprob: -2.579812526702881
    3. ' for' → logprob: -7.579812526702881
    4. '(' → logprob: -9.204813003540039
    5. '((' → logprob: -9.329813003540039
    6. '(key' → logprob: -9.579813003540039
    7. 'key' → logprob: -9.704813003540039
    8. '           ' → logprob: -10.079813003540039
    9. ' (' → logprob: -10.829813003540039
    10. '(for' → logprob: -11.704813003540039

Token 1429: ' (' (ID: 350)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.07037296146154404
    2. '(key' → logprob: -3.445373058319092
    3. '(' → logprob: -3.820373058319092
    4. ' (' → logprob: -5.320373058319092
    5. 'state' → logprob: -6.320373058319092
    6. '(prev' → logprob: -6.695373058319092
    7. '(n' → logprob: -6.820373058319092
    8. '(current' → logprob: -7.070373058319092
    9. '(s' → logprob: -7.195373058319092
    10. '(num' → logprob: -7.695373058319092

Token 1430: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7415100336074829
    2. 'nb' → logprob: -0.8665100336074829
    3. 'pieces' → logprob: -3.1165099143981934
    4. 'n' → logprob: -4.116509914398193
    5. 'nbr' → logprob: -4.241509914398193
    6. 'coins' → logprob: -4.741509914398193
    7. '(nb' → logprob: -5.491509914398193
    8. 'count' → logprob: -5.741509914398193
    9. '500' → logprob: -5.866509914398193
    10. ' nb' → logprob: -6.741509914398193

Token 1431: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005383995361626148
    2. '_tokens' → logprob: -5.6303839683532715
    3. '500' → logprob: -6.7553839683532715
    4. ' _' → logprob: -8.75538444519043
    5. '_token' → logprob: -8.88038444519043
    6. ',' → logprob: -9.63038444519043
    7. '_p' → logprob: -10.00538444519043
    8. '_,' → logprob: -10.38038444519043
    9. '_pi' → logprob: -10.88038444519043
    10. '_piece' → logprob: -11.38038444519043

Token 1432: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00332802627235651
    2. '_' → logprob: -6.0033278465271
    3. 'pieces' → logprob: -8.128328323364258
    4. ' ' → logprob: -8.628328323364258
    5. '   ' → logprob: -9.753328323364258
    6. 'coins' → logprob: -9.753328323364258
    7. '```' → logprob: -9.878328323364258
    8. ',' → logprob: -9.878328323364258
    9. 'pi' → logprob: -10.753328323364258
    10. 'five' → logprob: -11.003328323364258

Token 1433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1256006509065628
    2. ',num' → logprob: -2.750600576400757
    3. ' ,' → logprob: -3.750600576400757
    4. '_co' → logprob: -5.250600814819336
    5. ',p' → logprob: -5.625600814819336
    6. '),(' → logprob: -5.625600814819336
    7. ',user' → logprob: -6.125600814819336
    8. ',current' → logprob: -6.125600814819336
    9. ',c' → logprob: -6.250600814819336
    10. '500' → logprob: -6.375600814819336

Token 1434: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.010810455307364464
    2. 'pieces' → logprob: -5.135810375213623
    3. 'coin' → logprob: -5.510810375213623
    4. 'state' → logprob: -8.260810852050781
    5. ' coins' → logprob: -8.260810852050781
    6. 'pcs' → logprob: -9.010810852050781
    7. 'piece' → logprob: -9.885810852050781
    8. 'tpl' → logprob: -10.385810852050781
    9. 'p' → logprob: -10.885810852050781
    10. 'co' → logprob: -11.260810852050781

Token 1435: '_tpl' (ID: 31613)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.49035799503326416
    2. ',' → logprob: -1.1153579950332642
    3. '_tpl' → logprob: -3.6153578758239746
    4. '_tuple' → logprob: -4.240357875823975
    5. '),(' → logprob: -4.615357875823975
    6. 'tuple' → logprob: -5.865357875823975
    7. 'tpl' → logprob: -6.365357875823975
    8. '_t' → logprob: -6.865357875823975
    9. ',t' → logprob: -7.240357875823975
    10. ',),' → logprob: -7.365357875823975

Token 1436: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0004972710739821196
    2. ' ),' → logprob: -7.875497341156006
    3. '),(' → logprob: -9.500496864318848
    4. ')' → logprob: -10.750496864318848
    5. ',' → logprob: -11.000496864318848
    6. ',),' → logprob: -13.500496864318848
    7. '   ' → logprob: -13.875496864318848
    8. '       ' → logprob: -14.000496864318848
    9. '    ' → logprob: -15.375496864318848
    10. '        ' → logprob: -15.375496864318848

Token 1437: ' expense' (ID: 29361)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05229243263602257
    2. ' cost' → logprob: -3.1772923469543457
    3. 'dep' → logprob: -5.302292346954346
    4. 'curr' → logprob: -6.302292346954346
    5. 'spent' → logprob: -7.052292346954346
    6. ' dep' → logprob: -8.177292823791504
    7. 'cur' → logprob: -8.677292823791504
    8. 'd' → logprob: -8.802292823791504
    9. 'dist' → logprob: -9.052292823791504
    10. 'current' → logprob: -9.177292823791504

Token 1438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10440783947706223
    2. 'in' → logprob: -2.354407787322998
    3. ',' → logprob: -6.104407787322998
    4. ')' → logprob: -7.354407787322998
    5. ' ' → logprob: -8.354408264160156
    6. '        ' → logprob: -8.604408264160156
    7. '_in' → logprob: -8.854408264160156
    8. '       ' → logprob: -9.229408264160156
    9. ' ,' → logprob: -9.354408264160156
    10. '=' → logprob: -9.354408264160156

Token 1439: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019532525911927223
    2. ' dp' → logprob: -6.251953125
    3. '   ' → logprob: -11.501953125
    4. '       ' → logprob: -12.001953125
    5. '(dp' → logprob: -13.001953125
    6. '           ' → logprob: -13.751953125
    7. ' ' → logprob: -13.876953125
    8. '    ' → logprob: -13.876953125
    9. '
' → logprob: -14.251953125
    10. '     ' → logprob: -14.751953125

Token 1440: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3188875913619995
    2. ' in' → logprob: -1.5688875913619995
    3. '        ' → logprob: -1.6938875913619995
    4. ',' → logprob: -2.193887710571289
    5. ':
' → logprob: -2.443887710571289
    6. '<|end|>' → logprob: -3.693887710571289
    7. ' :' → logprob: -3.818887710571289
    8. '       ' → logprob: -4.318887710571289
    9. '<|end|>' → logprob: -4.443887710571289
    10. '           ' → logprob: -4.443887710571289

Token 1441: '():
' (ID: 8595)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0205590724945068
    2. ':' → logprob: -1.1455590724945068
    3. ',' → logprob: -2.520559072494507
    4. '        ' → logprob: -2.895559072494507
    5. ':
' → logprob: -3.020559072494507
    6. '            ' → logprob: -3.395559072494507
    7. ' :' → logprob: -3.395559072494507
    8. '):
' → logprob: -4.270559310913086
    9. ' :
' → logprob: -4.645559310913086
    10. '          ' → logprob: -4.770559310913086

Token 1442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009737669490277767
    2. '	       ' → logprob: -4.884737491607666
    3. '		' → logprob: -7.509737491607666
    4. '       ' → logprob: -8.134737968444824
    5. '               ' → logprob: -8.759737968444824
    6. '        ' → logprob: -8.759737968444824
    7. '```' → logprob: -8.759737968444824
    8. ' ' → logprob: -9.134737968444824
    9. '	' → logprob: -9.259737968444824
    10. ' for' → logprob: -9.259737968444824

Token 1443: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22846195101737976
    2. '#' (adapté à ' #') → logprob: -1.6034619808197021
    3. ' #' → logprob: -6.603461742401123
    4. '               ' → logprob: -7.478461742401123
    5. 'nd' → logprob: -7.728461742401123
    6. '       ' → logprob: -7.853461742401123
    7. '   ' → logprob: -8.853462219238281
    8. '
' → logprob: -9.853462219238281
    9. '            
' → logprob: -9.978462219238281
    10. '                   ' → logprob: -11.853462219238281

Token 1444: ' Option' (ID: 17796)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23376160860061646
    2. '#' → logprob: -1.7337615489959717
    3. ' #' → logprob: -3.7337615489959717
    4. 'nd' → logprob: -5.108761787414551
    5. ' nd' → logprob: -7.233761787414551
    6. '               ' → logprob: -8.23376178741455
    7. '            
' → logprob: -8.35876178741455
    8. '
' → logprob: -8.35876178741455
    9. '   ' → logprob: -8.73376178741455
    10. '       ' → logprob: -9.60876178741455

Token 1445: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9882047176361084
    2. '               ' → logprob: -1.6132047176361084
    3. ' :' → logprob: -1.8632047176361084
    4. ' =' → logprob: -2.2382047176361084
    5. '=' → logprob: -2.7382047176361084
    6. '           ' → logprob: -2.8632047176361084
    7. '            ' → logprob: -3.4882047176361084
    8. '                ' → logprob: -5.7382049560546875
    9. '                   ' → logprob: -6.4882049560546875
    10. ' #' → logprob: -6.7382049560546875

Token 1446: '1' (ID: 16)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2778809070587158
    2. 'ne' → logprob: -1.2778809070587158
    3. '#' → logprob: -1.9028809070587158
    4. 'not' → logprob: -2.027880907058716
    5. ' #' → logprob: -3.652880907058716
    6. 'no' → logprob: -3.777880907058716
    7. '1' → logprob: -4.027880668640137
    8. '               ' → logprob: -4.152880668640137
    9. '"' → logprob: -4.277880668640137
    10. ':' → logprob: -4.402880668640137

Token 1447: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7135775685310364
    2. ' #' → logprob: -1.7135775089263916
    3. '           ' → logprob: -1.9635775089263916
    4. ':' → logprob: -2.0885775089263916
    5. ' =' → logprob: -4.338577747344971
    6. '#' → logprob: -4.338577747344971
    7. ' :' → logprob: -4.963577747344971
    8. ' (' → logprob: -4.963577747344971
    9. ':
' → logprob: -5.088577747344971
    10. '            ' → logprob: -5.213577747344971

Token 1448: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2366597205400467
    2. 'nd' → logprob: -1.8616597652435303
    3. ' #' → logprob: -3.1116597652435303
    4. ' nd' → logprob: -5.111659526824951
    5. '           ' → logprob: -5.861659526824951
    6. 'ne' → logprob: -6.986659526824951
    7. '(nd' → logprob: -7.736659526824951
    8. ' ne' → logprob: -8.11166000366211
    9. '   ' → logprob: -9.36166000366211
    10. ' ' → logprob: -10.73666000366211

Token 1449: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.28572171926498413
    2. ' pas' → logprob: -1.410721778869629
    3. 'acheter' → logprob: -5.535721778869629
    4. ' acheter' → logprob: -8.035721778869629
    5. ' rien' → logprob: -9.160721778869629
    6. 'r' → logprob: -9.535721778869629
    7. '_pas' → logprob: -9.785721778869629
    8. ' Acheter' → logprob: -11.160721778869629
    9. ' ach' → logprob: -11.535721778869629
    10. 'ach' → logprob: -12.035721778869629

Token 1450: ' acheter' (ID: 60712)
  Prédit: 'acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -0.009086388163268566
    2. ' acheter' → logprob: -4.759086608886719
    3. 'buy' → logprob: -8.009086608886719
    4. 'prendre' → logprob: -9.634086608886719
    5. 'ach' → logprob: -10.634086608886719
    6. 'ache' → logprob: -11.759086608886719
    7. ' Acheter' → logprob: -11.759086608886719
    8. 'changer' → logprob: -11.759086608886719
    9. 'achat' → logprob: -12.259086608886719
    10. '   ' → logprob: -12.384086608886719

Token 1451: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.543049156665802
    2. '           ' → logprob: -0.918049156665802
    3. '               ' → logprob: -4.043049335479736
    4. ',' → logprob: -8.293048858642578
    5. '            
' → logprob: -8.543048858642578
    6. 'nd' → logprob: -8.543048858642578
    7. '
' → logprob: -8.668048858642578
    8. '                       ' → logprob: -8.918048858642578
    9. ' nd' → logprob: -8.918048858642578
    10. '                   ' → logprob: -8.918048858642578

Token 1452: ' ce' (ID: 2357)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.4445717930793762
    2. 'idx' → logprob: -1.1945717334747314
    3. ' idx' → logprob: -3.8195717334747314
    4. ' nd' → logprob: -4.1945719718933105
    5. '   ' → logprob: -4.9445719718933105
    6. '#' → logprob: -6.4445719718933105
    7. 'le' → logprob: -6.4445719718933105
    8. 'store' → logprob: -6.6945719718933105
    9. 'la' → logprob: -6.8195719718933105
    10. ' ' → logprob: -7.0695719718933105

Token 1453: ' magasin' (ID: 76229)
  Prédit: ' magasin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magasin' → logprob: -0.030872203409671783
    2. 'mag' → logprob: -3.905872106552124
    3. ' store' → logprob: -5.155872344970703
    4. 'store' → logprob: -6.405872344970703
    5. ' mag' → logprob: -7.030872344970703
    6. ' magaz' → logprob: -7.405872344970703
    7. ' shop' → logprob: -7.780872344970703
    8. ' ' → logprob: -8.155872344970703
    9. 'shop' → logprob: -8.280872344970703
    10. '_mag' → logprob: -8.905872344970703

Token 1454: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045318298041820526
    2. '
' → logprob: -3.170318365097046
    3. '               ' → logprob: -6.670318126678467
    4. '            
' → logprob: -7.545318126678467
    5. ',' → logprob: -8.670318603515625
    6. 'nd' → logprob: -9.420318603515625
    7. ' nd' → logprob: -10.045318603515625
    8. '(nd' → logprob: -10.420318603515625
    9. ':
' → logprob: -10.795318603515625
    10. '                
' → logprob: -11.295318603515625

Token 1455: ' état' (ID: 59181)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.07189620286226273
    2. 'state' → logprob: -3.6968963146209717
    3. 'key' → logprob: -3.8218963146209717
    4. '           ' → logprob: -4.071896076202393
    5. '#' → logprob: -5.571896076202393
    6. ' nd' → logprob: -7.071896076202393
    7. '               ' → logprob: -8.32189655303955
    8. 'if' → logprob: -8.44689655303955
    9. 'new' → logprob: -8.69689655303955
    10. ' key' → logprob: -9.69689655303955

Token 1456: ' inch' (ID: 23594)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5347116589546204
    2. '           ' → logprob: -1.7847115993499756
    3. 'nd' → logprob: -2.0347115993499756
    4. ' nd' → logprob: -3.0347115993499756
    5. ',' → logprob: -4.159711837768555
    6. '               ' → logprob: -4.409711837768555
    7. '(nd' → logprob: -4.659711837768555
    8. '=' → logprob: -4.784711837768555
    9. '_nd' → logprob: -5.909711837768555
    10. '            ' → logprob: -5.909711837768555

Token 1457: 'angé' (ID: 119992)
  Prédit: 'angé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angé' → logprob: -0.00014287306112237275
    2. 'ang' → logprob: -8.875143051147461
    3. 'anged' → logprob: -13.125143051147461
    4. 'ange' → logprob: -14.875143051147461
    5. 'agé' → logprob: -15.500143051147461
    6. 'ané' → logprob: -16.50014305114746
    7. '   ' → logprob: -16.50014305114746
    8. '```' → logprob: -17.37514305114746
    9. 'aug' → logprob: -17.50014305114746
    10. '           ' → logprob: -17.62514305114746

Token 1458: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004263852315489203
    2. '
' → logprob: -8.750426292419434
    3. ',' → logprob: -9.125426292419434
    4. '               ' → logprob: -9.250426292419434
    5. '            
' → logprob: -10.375426292419434
    6. '		' → logprob: -12.000426292419434
    7. 'nd' → logprob: -12.750426292419434
    8. ';' → logprob: -12.875426292419434
    9. ' nd' → logprob: -12.875426292419434
    10. '                   ' → logprob: -13.250426292419434

Token 1459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000818561646156013
    2. '               ' → logprob: -7.500818729400635
    3. ' ' → logprob: -9.625818252563477
    4. '            
' → logprob: -9.625818252563477
    5. '		' → logprob: -10.625818252563477
    6. ' nd' → logprob: -10.875818252563477
    7. '	       ' → logprob: -10.875818252563477
    8. ',' → logprob: -11.125818252563477
    9. '```' → logprob: -11.500818252563477
    10. '
' → logprob: -11.875818252563477

Token 1460: ' if' (ID: 538)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4580874741077423
    2. 'nd' → logprob: -1.20808744430542
    3. 'state' → logprob: -3.45808744430542
    4. '           ' → logprob: -3.95808744430542
    5. 'new' → logprob: -4.58308744430542
    6. 'next' → logprob: -5.20808744430542
    7. ' key' → logprob: -7.95808744430542
    8. 'old' → logprob: -8.708087921142578
    9. 'nt' → logprob: -8.708087921142578
    10. 'k' → logprob: -8.708087921142578

Token 1461: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.9346070885658264
    2. 'expense' → logprob: -1.0596070289611816
    3. '(nd' → logprob: -2.3096070289611816
    4. 'dp' → logprob: -2.3096070289611816
    5. '(dp' → logprob: -3.9346070289611816
    6. '(exp' → logprob: -4.559607028961182
    7. '           ' → logprob: -4.934607028961182
    8. ' expense' → logprob: -5.559607028961182
    9. '   ' → logprob: -5.684607028961182
    10. ' nd' → logprob: -5.684607028961182

Token 1462: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005433200858533382
    2. '[(' → logprob: -5.380433082580566
    3. 'dp' → logprob: -7.255433082580566
    4. '_p' → logprob: -10.505433082580566
    5. 'pf' → logprob: -11.005433082580566
    6. '[' → logprob: -11.130433082580566
    7. 'pe' → logprob: -11.880433082580566
    8. '[p' → logprob: -12.005433082580566
    9. '_dp' → logprob: -12.005433082580566
    10. 'tp' → logprob: -12.380433082580566

Token 1463: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0003992104611825198
    2. '[num' → logprob: -8.375399589538574
    3. '(num' → logprob: -9.750399589538574
    4. '.setdefault' → logprob: -10.125399589538574
    5. '[' → logprob: -10.750399589538574
    6. '(' → logprob: -11.000399589538574
    7. '.get' → logprob: -11.250399589538574
    8. ' (' → logprob: -11.875399589538574
    9. '[
' → logprob: -13.125399589538574
    10. ' [(' → logprob: -13.375399589538574

Token 1464: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.088346359931165e-07
    2. ' num' → logprob: -14.250000953674316
    3. '(num' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.625
    5. ' ' → logprob: -19.5
    6. '
' → logprob: -20.625
    7. '$num' → logprob: -20.75
    8. '	num' → logprob: -20.875
    9. '0' → logprob: -20.875
    10. ',num' → logprob: -21.375

Token 1465: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.25000286102295
    3. '_,' → logprob: -15.50000286102295
    4. ' _' → logprob: -15.93750286102295
    5. '_
' → logprob: -16.437503814697266
    6. ' ' → logprob: -16.500003814697266
    7. ')' → logprob: -16.750003814697266
    8. '[' → logprob: -16.812503814697266
    9. '500' → logprob: -16.937503814697266
    10. '‌' → logprob: -17.000003814697266

Token 1466: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0009438612614758313
    2. '_' → logprob: -7.125943660736084
    3. ' ' → logprob: -9.375944137573242
    4. '5' → logprob: -10.125944137573242
    5. '50' → logprob: -12.875944137573242
    6. '   ' → logprob: -12.875944137573242
    7. ',' → logprob: -13.250944137573242
    8. 'num' → logprob: -13.375944137573242
    9. '```' → logprob: -13.688444137573242
    10. '0' → logprob: -14.188444137573242

Token 1467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011998233385384083
    2. ',(' → logprob: -4.636998176574707
    3. ' ,' → logprob: -6.136998176574707
    4. ',
' → logprob: -10.511998176574707
    5. ',t' → logprob: -10.761998176574707
    6. ',c' → logprob: -11.261998176574707
    7. '(co' → logprob: -11.761998176574707
    8. ',k' → logprob: -14.136998176574707
    9. ',col' → logprob: -14.136998176574707
    10. '           ' → logprob: -14.261998176574707

Token 1468: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.011111481115221977
    2. ' coins' → logprob: -4.511111259460449
    3. '(co' → logprob: -10.13611125946045
    4. 'co' → logprob: -11.26111125946045
    5. '(' → logprob: -12.51111125946045
    6. ' (' → logprob: -12.76111125946045
    7. 'coin' → logprob: -12.76111125946045
    8. ' ' → logprob: -14.13611125946045
    9. 'Coins' → logprob: -15.13611125946045
    10. '   ' → logprob: -15.63611125946045

Token 1469: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -5.512236498361744e-07
    2. 'tpl' → logprob: -15.125000953674316
    3. '_tbl' → logprob: -16.625
    4. '_t' → logprob: -17.0
    5. '   ' → logprob: -18.0
    6. '_' → logprob: -18.25
    7. '
' → logprob: -18.5
    8. '_tmp' → logprob: -19.125
    9. ' _' → logprob: -19.25
    10. '_tp' → logprob: -19.375

Token 1470: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20800134539604187
    2. ')]' → logprob: -2.0830013751983643
    3. ']>' → logprob: -2.9580013751983643
    4. ' ]' → logprob: -5.833001136779785
    5. '])' → logprob: -5.833001136779785
    6. ')' → logprob: -6.083001136779785
    7. ')>' → logprob: -6.458001136779785
    8. ']>=' → logprob: -7.208001136779785
    9. ' )' → logprob: -7.708001136779785
    10. ']<=' → logprob: -9.333001136779785

Token 1471: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47947508096694946
    2. ' >' → logprob: -0.9794750809669495
    3. '=' → logprob: -5.604475021362305
    4. '               ' → logprob: -7.604475021362305
    5. ' =' → logprob: -8.104475021362305
    6. '           ' → logprob: -8.604475021362305
    7. '                   ' → logprob: -8.854475021362305
    8. '>=' → logprob: -8.854475021362305
    9. '            ' → logprob: -9.229475021362305
    10. '             ' → logprob: -9.729475021362305

Token 1472: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.04858827963471413
    2. ' expense' → logprob: -3.048588275909424
    3. 'exp' → logprob: -14.423588752746582
    4. 'expenses' → logprob: -15.423588752746582
    5. '           ' → logprob: -17.048587799072266
    6. 'Expense' → logprob: -17.423587799072266
    7. 'exercise' → logprob: -17.423587799072266
    8. '               ' → logprob: -17.798587799072266
    9. '            ' → logprob: -17.798587799072266
    10. ' ' → logprob: -17.923587799072266

Token 1473: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3286390006542206
    2. ' =' → logprob: -2.078639030456543
    3. ':' → logprob: -2.453639030456543
    4. '               ' → logprob: -3.453639030456543
    5. ':
' → logprob: -4.203639030456543
    6. '):
' → logprob: -4.578639030456543
    7. '           ' → logprob: -5.203639030456543
    8. '):' → logprob: -6.328639030456543
    9. '            ' → logprob: -6.578639030456543
    10. ')' → logprob: -6.953639030456543

Token 1474: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0499625205993652
    2. '            ' → logprob: -1.5499625205993652
    3. '           ' → logprob: -2.5499625205993652
    4. '                               ' → logprob: -2.6749625205993652
    5. '                            ' → logprob: -3.4249625205993652
    6. ' ' → logprob: -3.4249625205993652
    7. ')' → logprob: -3.7999625205993652
    8. ' 
' → logprob: -3.9249625205993652
    9. '                           ' → logprob: -3.9249625205993652
    10. '             
' → logprob: -4.174962520599365

Token 1475: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.07258433103561401
    2. ' nd' → logprob: -2.947584390640259
    3. '               ' → logprob: -4.07258415222168
    4. '                   ' → logprob: -8.69758415222168
    5. '                               ' → logprob: -9.19758415222168
    6. '           ' → logprob: -9.82258415222168
    7. '(nd' → logprob: -9.82258415222168
    8. '                       ' → logprob: -10.07258415222168
    9. '_nd' → logprob: -10.44758415222168
    10. '                           ' → logprob: -10.57258415222168

Token 1476: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005536287208087742
    2. 'dp' → logprob: -7.500553607940674
    3. 'pf' → logprob: -15.500554084777832
    4. ' dp' → logprob: -16.000553131103516
    5. ' p' → logprob: -16.125553131103516
    6. 'pv' → logprob: -16.375553131103516
    7. '_p' → logprob: -16.750553131103516
    8. 'pr' → logprob: -17.125553131103516
    9. 'pd' → logprob: -17.250553131103516
    10. 'п' → logprob: -18.000553131103516

Token 1477: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -5.5577775128767826e-06
    2. '[
' → logprob: -13.125005722045898
    3. '[' → logprob: -13.375005722045898
    4. ' [(' → logprob: -13.625005722045898
    5. ' (' → logprob: -15.625005722045898
    6. '               ' → logprob: -15.750005722045898
    7. '           ' → logprob: -15.875005722045898
    8. '                   ' → logprob: -16.1250057220459
    9. '(' → logprob: -16.7500057220459
    10. '((' → logprob: -16.8750057220459

Token 1478: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -7.941850526549388e-06
    2. '(num' → logprob: -11.875007629394531
    3. ' num' → logprob: -14.125007629394531
    4. '   ' → logprob: -16.62500762939453
    5. ' ' → logprob: -17.12500762939453
    6. ' (' → logprob: -17.75000762939453
    7. '	num' → logprob: -18.37500762939453
    8. '(' → logprob: -19.75000762939453
    9. '  ' → logprob: -19.87500762939453
    10. '[num' → logprob: -20.37500762939453

Token 1479: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.080963092041202e-06
    2. '_num' → logprob: -13.375004768371582
    3. ' _' → logprob: -14.000004768371582
    4. '_tokens' → logprob: -14.750004768371582
    5. ')' → logprob: -15.000004768371582
    6. '_token' → logprob: -15.625004768371582
    7. ')_' → logprob: -15.625004768371582
    8. 'num' → logprob: -15.625004768371582
    9. '_s' → logprob: -15.750004768371582
    10. '```' → logprob: -16.0000057220459

Token 1480: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0011953481007367373
    2. 'num' → logprob: -7.251195430755615
    3. '_' → logprob: -7.751195430755615
    4. '50' → logprob: -11.001194953918457
    5. '_num' → logprob: -11.626194953918457
    6. ' ' → logprob: -11.876194953918457
    7. 'import' → logprob: -12.001194953918457
    8. '-' → logprob: -12.751194953918457
    9. '
' → logprob: -13.938694953918457
    10. ',' → logprob: -14.063694953918457

Token 1481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035173986107110977
    2. ',(' → logprob: -6.5035176277160645
    3. ' ,' → logprob: -6.7535176277160645
    4. ',num' → logprob: -7.8785176277160645
    5. ' (' → logprob: -8.378517150878906
    6. '(num' → logprob: -9.003517150878906
    7. '(' → logprob: -9.253517150878906
    8. '
' → logprob: -12.378517150878906
    9. ',
' → logprob: -12.628517150878906
    10. '           ' → logprob: -13.003517150878906

Token 1482: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.14270728826522827
    2. ' coins' → logprob: -2.017707347869873
    3. 'co' → logprob: -11.017706871032715
    4. 'coin' → logprob: -11.392706871032715
    5. ' ' → logprob: -13.767706871032715
    6. 'pieces' → logprob: -14.705206871032715
    7. '(co' → logprob: -14.767706871032715
    8. 'Coins' → logprob: -14.830206871032715
    9. ' ' → logprob: -15.267706871032715
    10. 'c' → logprob: -15.330206871032715

Token 1483: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.00000286102295
    3. '_t' → logprob: -15.50000286102295
    4. '_,' → logprob: -16.000003814697266
    5. 'tpl' → logprob: -16.000003814697266
    6. '_tbl' → logprob: -16.125003814697266
    7. '_tp' → logprob: -16.125003814697266
    8. ',' → logprob: -16.500003814697266
    9. '_tmp' → logprob: -16.750003814697266
    10. '   ' → logprob: -17.125003814697266

Token 1484: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.267532080411911
    2. ']' → logprob: -1.8925321102142334
    3. ' )' → logprob: -3.3925321102142334
    4. ')]' → logprob: -3.8925321102142334
    5. ')=' → logprob: -4.517531871795654
    6. ']=' → logprob: -4.767531871795654
    7. ' ]' → logprob: -4.767531871795654
    8. '=' → logprob: -7.267531871795654
    9. '           ' → logprob: -8.017532348632812
    10. '               ' → logprob: -8.142532348632812

Token 1485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759879350662231
    2. ' =' → logprob: -0.8259879350662231
    3. '                ' → logprob: -10.700987815856934
    4. '               ' → logprob: -11.700987815856934
    5. '                    ' → logprob: -11.950987815856934
    6. '                   ' → logprob: -12.075987815856934
    7. '=
' → logprob: -13.075987815856934
    8. '            ' → logprob: -14.075987815856934
    9. ' =
' → logprob: -14.450987815856934
    10. '                       ' → logprob: -15.075987815856934

Token 1486: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.3132643401622772
    2. ' expense' → logprob: -1.3132643699645996
    3. '                ' → logprob: -13.813263893127441
    4. '               ' → logprob: -13.813263893127441
    5. '            ' → logprob: -15.313263893127441
    6. 'exp' → logprob: -15.688263893127441
    7. 'Expense' → logprob: -16.188264846801758
    8. 'expenses' → logprob: -17.063264846801758
    9. '                   ' → logprob: -17.438264846801758
    10. '                    ' → logprob: -18.063264846801758

Token 1487: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009965846315026283
    2. '
' → logprob: -4.634965896606445
    3. '            
' → logprob: -8.884965896606445
    4. '<|end|>' → logprob: -10.884965896606445
    5. '		' → logprob: -11.009965896606445
    6. '               ' → logprob: -11.884965896606445
    7. '       ' → logprob: -12.134965896606445
    8. '<|end|>' → logprob: -12.759965896606445
    9. '          ' → logprob: -13.134965896606445
    10. '#' → logprob: -13.134965896606445

Token 1488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0040425448678433895
    2. '		' → logprob: -5.754042625427246
    3. '       ' → logprob: -7.254042625427246
    4. '	' → logprob: -9.254042625427246
    5. '	       ' → logprob: -10.504042625427246
    6. '               ' → logprob: -11.879042625427246
    7. '	   ' → logprob: -12.129042625427246
    8. '
' → logprob: -12.629042625427246
    9. '   ' → logprob: -12.879042625427246
    10. '		   ' → logprob: -13.004042625427246

Token 1489: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013327282853424549
    2. '#' (adapté à ' #') → logprob: -4.513327121734619
    3. '
' → logprob: -6.388327121734619
    4. '       ' → logprob: -8.013327598571777
    5. 'import' → logprob: -9.388327598571777
    6. '```' → logprob: -9.763327598571777
    7. ' #' → logprob: -10.138327598571777
    8. 'for' → logprob: -10.138327598571777
    9. '            
' → logprob: -11.388327598571777
    10. '   ' → logprob: -11.513327598571777

Token 1490: ' Option' (ID: 17796)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13707059621810913
    2. '           ' → logprob: -2.512070655822754
    3. 'if' → logprob: -3.887070655822754
    4. 'for' → logprob: -4.262070655822754
    5. 'coins' → logprob: -5.137070655822754
    6. '   ' → logprob: -6.387070655822754
    7. 'price' → logprob: -6.512070655822754
    8. '       ' → logprob: -6.762070655822754
    9. 'max' → logprob: -7.262070655822754
    10. '
' → logprob: -7.387070655822754

Token 1491: ' ' (ID: 220)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4516565203666687
    2. '1' → logprob: -2.5766565799713135
    3. ' =' → logprob: -2.5766565799713135
    4. ':' → logprob: -2.7016565799713135
    5. ' ' → logprob: -2.7016565799713135
    6. '           ' → logprob: -3.0766565799713135
    7. ' (' → logprob: -5.201656341552734
    8. ' #' → logprob: -5.951656341552734
    9. '       ' → logprob: -5.951656341552734
    10. '(' → logprob: -6.076656341552734

Token 1492: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016133375465869904
    2. '2' → logprob: -4.1411333084106445
    3. ' ' → logprob: -9.391133308410645
    4. ':' → logprob: -11.516133308410645
    5. '
' → logprob: -13.266133308410645
    6. '#' → logprob: -13.391133308410645
    7. ' :' → logprob: -14.141133308410645
    8. '   ' → logprob: -15.016133308410645
    9. '           ' → logprob: -15.141133308410645
    10. ' #' → logprob: -15.391133308410645

Token 1493: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.12132266163825989
    2. ':' → logprob: -2.2463226318359375
    3. ' =' → logprob: -4.9963226318359375
    4. ' :
' → logprob: -7.6213226318359375
    5. '           ' → logprob: -8.246322631835938
    6. ' (' → logprob: -8.621322631835938
    7. ',' → logprob: -9.121322631835938
    8. ':
' → logprob: -9.371322631835938
    9. '=' → logprob: -9.496322631835938
    10. ' #' → logprob: -9.746322631835938

Token 1494: ' acheter' (ID: 60712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2568846940994263
    2. ' for' → logprob: -1.6318846940994263
    3. ' #' → logprob: -1.8818846940994263
    4. '#' → logprob: -1.8818846940994263
    5. ' acheter' → logprob: -2.5068845748901367
    6. 'price' → logprob: -3.3818845748901367
    7. 'acheter' → logprob: -3.3818845748901367
    8. '
' → logprob: -4.256884574890137
    9. ' price' → logprob: -4.506884574890137
    10. '   ' → logprob: -5.006884574890137

Token 1495: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2039123922586441
    2. ' dans' → logprob: -2.3289124965667725
    3. ' =' → logprob: -3.8289124965667725
    4. 'dans' → logprob: -3.8289124965667725
    5. ' une' → logprob: -4.078912258148193
    6. '(' → logprob: -4.578912258148193
    7. ' un' → logprob: -5.578912258148193
    8. ')' → logprob: -6.078912258148193
    9. 'une' → logprob: -6.453912258148193
    10. '_' → logprob: -6.453912258148193

Token 1496: ' ce' (ID: 2357)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.32474350929260254
    2. ' (' → logprob: -2.1997435092926025
    3. '[idx' → logprob: -3.3247435092926025
    4. 'idx' → logprob: -3.4497435092926025
    5. ' idx' → logprob: -3.8247435092926025
    6. '(pr' → logprob: -4.074743270874023
    7. '(price' → logprob: -4.574743270874023
    8. ' ce' → logprob: -4.699743270874023
    9. '(' → logprob: -5.199743270874023
    10. '[(' → logprob: -5.824743270874023

Token 1497: ' magasin' (ID: 76229)
  Prédit: 'mag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mag' → logprob: -0.8967307209968567
    2. 'prix' → logprob: -0.8967307209968567
    3. ' magasin' → logprob: -2.646730661392212
    4. ' )' → logprob: -4.146730899810791
    5. ' prix' → logprob: -4.396730899810791
    6. ' ' → logprob: -4.396730899810791
    7. '[' → logprob: -4.521730899810791
    8. 'price' → logprob: -4.896730899810791
    9. ' mag' → logprob: -5.146730899810791
    10. '[
' → logprob: -5.271730899810791

Token 1498: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.4690929651260376
    2. '           ' → logprob: -1.7190929651260376
    3. ':' → logprob: -1.8440929651260376
    4. '               ' → logprob: -2.469092845916748
    5. ' :
' → logprob: -2.719092845916748
    6. ' for' → logprob: -2.969092845916748
    7. '
' → logprob: -3.094092845916748
    8. ' (' → logprob: -3.219092845916748
    9. ',' → logprob: -3.594092845916748
    10. ' :' → logprob: -4.094092845916748

Token 1499: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6717361807823181
    2. '           ' → logprob: -0.7967361807823181
    3. ' (' → logprob: -5.171736240386963
    4. '                       ' → logprob: -5.171736240386963
    5. ':' → logprob: -5.421736240386963
    6. ',' → logprob: -5.421736240386963
    7. '            ' → logprob: -5.796736240386963
    8. ' #' → logprob: -6.171736240386963
    9. '            
' → logprob: -6.421736240386963
    10. '#' → logprob: -6.921736240386963

Token 1500: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6088746190071106
    2. '           ' → logprob: -1.3588745594024658
    3. 'for' → logprob: -2.108874559402466
    4. ' if' → logprob: -3.983874559402466
    5. ' #' → logprob: -4.483874797821045
    6. '#' (adapté à ' #') → logprob: -4.608874797821045
    7. ' max' → logprob: -4.858874797821045
    8. 'coins' → logprob: -4.983874797821045
    9. ' coins' → logprob: -4.983874797821045
    10. '       ' → logprob: -5.483874797821045

Token 1501: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5400421023368835
    2. ' for' → logprob: -1.4150421619415283
    3. 'for' → logprob: -3.4150421619415283
    4. ' max' → logprob: -3.5400421619415283
    5. ' if' → logprob: -3.5400421619415283
    6. ' coins' → logprob: -3.7900421619415283
    7. ' #' → logprob: -4.040041923522949
    8. 'coins' → logprob: -4.165041923522949
    9. '#' → logprob: -5.165041923522949
    10. '               ' → logprob: -5.165041923522949

Token 1502: ' doit' (ID: 21822)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9284573197364807
    2. 'for' → logprob: -1.053457260131836
    3. ' continue' → logprob: -2.678457260131836
    4. 'continue' → logprob: -2.803457260131836
    5. '       ' → logprob: -2.928457260131836
    6. '           ' → logprob: -3.178457260131836
    7. ' #' → logprob: -4.678457260131836
    8. '   ' → logprob: -4.803457260131836
    9. 'import' → logprob: -5.678457260131836
    10. '#' → logprob: -5.928457260131836

Token 1503: ' envis' (ID: 76610)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.905223548412323
    2. 'penser' → logprob: -1.5302236080169678
    3. 'for' → logprob: -2.6552236080169678
    4. '#' → logprob: -3.0302236080169678
    5. 'acheter' → logprob: -3.0302236080169678
    6. ' for' → logprob: -3.6552236080169678
    7. 'payer' → logprob: -3.7802236080169678
    8. ' continuer' → logprob: -3.9052236080169678
    9. '       ' → logprob: -3.9052236080169678
    10. ' #' → logprob: -4.030223369598389

Token 1504: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -6.034592388459714e-06
    2. 'age' → logprob: -12.375005722045898
    3. 'a' → logprob: -14.625005722045898
    4. 'arger' → logprob: -14.625005722045898
    5. '-' → logprob: -15.750005722045898
    6. 'ayer' → logprob: -16.3750057220459
    7. '>' → logprob: -17.0000057220459
    8. '{' → logprob: -17.0000057220459
    9. 'AGER' → logprob: -17.2500057220459
    10. 'er' → logprob: -17.3750057220459

Token 1505: ' tous' (ID: 10688)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payer' → logprob: -1.0791802406311035
    2. 'for' → logprob: -1.5791802406311035
    3. 'les' → logprob: -2.4541802406311035
    4. 'tout' → logprob: -3.0791802406311035
    5. 'don' → logprob: -3.2041802406311035
    6. '   ' → logprob: -3.3291802406311035
    7. ' tous' → logprob: -3.4541802406311035
    8. '       ' → logprob: -3.7041802406311035
    9. 't' → logprob: -3.8291802406311035
    10. 'une' → logprob: -4.0791802406311035

Token 1506: ' sommes' (ID: 32024)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.049407586455345154
    2. ' les' → logprob: -3.174407482147217
    3. 'mont' → logprob: -6.299407482147217
    4. '#' → logprob: -6.674407482147217
    5. '   ' → logprob: -7.049407482147217
    6. 'le' → logprob: -7.799407482147217
    7. '       ' → logprob: -7.924407482147217
    8. 'l' → logprob: -8.049407958984375
    9. 'possible' → logprob: -8.549407958984375
    10. ' ' → logprob: -8.674407958984375

Token 1507: ' à' (ID: 1221)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.8181439638137817
    2. '   ' → logprob: -1.9431439638137817
    3. 'd' → logprob: -2.068143844604492
    4. ' à' → logprob: -2.068143844604492
    5. ' ' → logprob: -2.443143844604492
    6. 'à' → logprob: -2.568143844604492
    7. '  ' → logprob: -3.068143844604492
    8. '_' → logprob: -3.318143844604492
    9. ' possibles' → logprob: -3.818143844604492
    10. ' pay' → logprob: -3.943143844604492

Token 1508: ' payer' (ID: 63614)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.0062317755073308945
    2. 'don' → logprob: -5.631231784820557
    3. 'p' → logprob: -6.506231784820557
    4. 'vers' → logprob: -7.381231784820557
    5. '```' → logprob: -8.506231307983398
    6. 'pay' → logprob: -9.631231307983398
    7. '   ' → logprob: -9.756231307983398
    8. '100' → logprob: -10.006231307983398
    9. 'dé' → logprob: -10.381231307983398
    10. ' payer' → logprob: -10.756231307983398

Token 1509: ' >=' (ID: 5064)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.20759837329387665
    2. ' possible' → logprob: -1.957598328590393
    3. 'possible' → logprob: -3.5825984477996826
    4. '_possible' → logprob: -5.0825982093811035
    5. '           ' → logprob: -6.2075982093811035
    6. 'poss' → logprob: -6.4575982093811035
    7. '               ' → logprob: -6.4575982093811035
    8. ',' → logprob: -6.5825982093811035
    9. '       ' → logprob: -6.9575982093811035
    10. '                   ' → logprob: -6.9575982093811035

Token 1510: ' prix' (ID: 18771)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.03804505243897438
    2. ' price' → logprob: -3.2880451679229736
    3. '           ' → logprob: -13.788044929504395
    4. 'prix' → logprob: -13.788044929504395
    5. '   ' → logprob: -14.663044929504395
    6. '	price' → logprob: -15.163044929504395
    7. '(price' → logprob: -15.413044929504395
    8. ' prix' → logprob: -16.16304588317871
    9. '
' → logprob: -16.16304588317871
    10. '               ' → logprob: -16.41304588317871

Token 1511: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2295280694961548
    2. '           ' → logprob: -1.4795280694961548
    3. ':
' → logprob: -2.2295279502868652
    4. '               ' → logprob: -2.4795279502868652
    5. ',' → logprob: -2.6045279502868652
    6. ' +' → logprob: -3.4795279502868652
    7. '
' → logprob: -3.6045279502868652
    8. ' (' → logprob: -3.8545279502868652
    9. ' :
' → logprob: -3.8545279502868652
    10. '            ' → logprob: -4.104527950286865

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07920360565185547
    2. '               ' → logprob: -3.4542036056518555
    3. ':' → logprob: -4.2042036056518555
    4. ' (' → logprob: -4.8292036056518555
    5. ',' → logprob: -4.9542036056518555
    6. '            ' → logprob: -4.9542036056518555
    7. ' :' → logprob: -6.7042036056518555
    8. '                   ' → logprob: -7.2042036056518555
    9. ':
' → logprob: -7.2042036056518555
    10. '(' → logprob: -7.3292036056518555

Token 1513: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11079584062099457
    2. ' for' → logprob: -2.485795736312866
    3. 'for' → logprob: -4.235795974731445
    4. ' ' → logprob: -5.860795974731445
    5. '               ' → logprob: -6.360795974731445
    6. '            
' → logprob: -7.610795974731445
    7. '                   ' → logprob: -7.610795974731445
    8. ' 
' → logprob: -8.360795974731445
    9. '       ' → logprob: -8.610795974731445
    10. '            ' → logprob: -8.610795974731445

Token 1514: ' montant' (ID: 72364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048284802585840225
    2. 'for' → logprob: -3.4232847690582275
    3. ' for' → logprob: -4.298285007476807
    4. 'max' → logprob: -7.298285007476807
    5. ' max' → logprob: -9.798284530639648
    6. 'min' → logprob: -10.548284530639648
    7. '
' → logprob: -10.548284530639648
    8. '               ' → logprob: -10.548284530639648
    9. '#' → logprob: -10.673284530639648
    10. '       ' → logprob: -10.798284530639648

Token 1515: ' donné' (ID: 52079)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7496112585067749
    2. '_d' → logprob: -1.499611258506775
    3. '_pay' → logprob: -2.1246113777160645
    4. 'd' → logprob: -3.2496113777160645
    5. '=' → logprob: -3.4996113777160645
    6. '_to' → logprob: -3.7496113777160645
    7. '_possible' → logprob: -4.3746113777160645
    8. '_given' → logprob: -4.4996113777160645
    9. '_p' → logprob: -4.6246113777160645
    10. '_' → logprob: -4.7496113777160645

Token 1516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22074012458324432
    2. '=' → logprob: -2.2207400798797607
    3. 'for' → logprob: -3.9707400798797607
    4. ' in' → logprob: -4.22074031829834
    5. 's' → logprob: -4.34574031829834
    6. ' for' → logprob: -4.47074031829834
    7. 'from' → logprob: -4.97074031829834
    8. '_possible' → logprob: -5.47074031829834
    9. 'possible' → logprob: -5.84574031829834
    10. ' possible' → logprob: -5.84574031829834

Token 1517: ' x' (ID: 1215)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.14769934117794037
    2. '((' → logprob: -2.3976993560791016
    3. '100' → logprob: -4.397699356079102
    4. 'amount' → logprob: -4.397699356079102
    5. '(price' → logprob: -4.897699356079102
    6. '(((' → logprob: -5.522699356079102
    7. '(' → logprob: -6.397699356079102
    8. '(m' → logprob: -7.147699356079102
    9. 'payment' → logprob: -7.147699356079102
    10. 'max' → logprob: -7.397699356079102

Token 1518: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05585992708802223
    2. '<|end|>' → logprob: -3.6808600425720215
    3. '=' → logprob: -4.0558600425720215
    4. '<|end|>' → logprob: -6.4308600425720215
    5. '_possible' → logprob: -6.5558600425720215
    6. ' +' → logprob: -7.0558600425720215
    7. ',' → logprob: -7.0558600425720215
    8. ')' → logprob: -7.0558600425720215
    9. '+' → logprob: -7.1808600425720215
    10. '...' → logprob: -7.1808600425720215

Token 1519: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7630447149276733
    2. ' y' → logprob: -1.7630447149276733
    3. ' montant' → logprob: -2.013044834136963
    4. ' max' → logprob: -3.388044834136963
    5. ' amount' → logprob: -3.513044834136963
    6. ' ' → logprob: -3.513044834136963
    7. ' ' → logprob: -3.888044834136963
    8. ' #' → logprob: -4.263044834136963
    9. 'x' → logprob: -4.263044834136963
    10. ' 
' → logprob: -4.888044834136963

Token 1520: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8472146391868591
    2. '=' → logprob: -1.097214698791504
    3. ' >=' → logprob: -2.097214698791504
    4. ' =' → logprob: -3.472214698791504
    5. '≥' → logprob: -3.722214698791504
    6. 'from' → logprob: -4.722214698791504
    7. '>' → logprob: -4.722214698791504
    8. ')' → logprob: -4.847214698791504
    9. 'range' → logprob: -4.972214698791504
    10. ' in' → logprob: -5.222214698791504

Token 1521: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0022167498245835304
    2. ' price' → logprob: -6.127216815948486
    3. '   ' → logprob: -10.752216339111328
    4. '100' → logprob: -11.877216339111328
    5. '(price' → logprob: -14.002216339111328
    6. ' ' → logprob: -14.377216339111328
    7. '	price' → logprob: -14.627216339111328
    8. '    ' → logprob: -15.377216339111328
    9. '       ' → logprob: -15.502216339111328
    10. '
' → logprob: -15.502216339111328

Token 1522: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5311629772186279
    2. ' :' → logprob: -2.656162977218628
    3. ' +' → logprob: -2.656162977218628
    4. '+' → logprob: -2.781162977218628
    5. '<|end|>' → logprob: -3.031162977218628
    6. ',' → logprob: -3.656162977218628
    7. ':
' → logprob: -4.031163215637207
    8. '           ' → logprob: -4.156163215637207
    9. ' for' → logprob: -4.531163215637207
    10. ' =' → logprob: -4.531163215637207

Token 1523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031237609684467316
    2. '               ' → logprob: -4.281237602233887
    3. ':' → logprob: -5.656237602233887
    4. ' ' → logprob: -6.156237602233887
    5. '            ' → logprob: -6.531237602233887
    6. ',' → logprob: -6.531237602233887
    7. ' (' → logprob: -7.031237602233887
    8. '                   ' → logprob: -7.031237602233887
    9. '            
' → logprob: -7.031237602233887
    10. '[' → logprob: -7.781237602233887

Token 1524: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03336119279265404
    2. ' for' → logprob: -3.6583611965179443
    3. '       ' → logprob: -6.158360958099365
    4. '	       ' → logprob: -6.158360958099365
    5. 'for' → logprob: -6.533360958099365
    6. ' ' → logprob: -7.908360958099365
    7. '		' → logprob: -8.408361434936523
    8. '               ' → logprob: -8.658361434936523
    9. '	   ' → logprob: -9.158361434936523
    10. '            ' → logprob: -9.533361434936523

Token 1525: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1813247799873352
    2. 'for' → logprob: -2.0563247203826904
    3. '           ' → logprob: -3.3063247203826904
    4. ' range' → logprob: -7.8063249588012695
    5. 'range' → logprob: -8.30632495880127
    6. '               ' → logprob: -9.05632495880127
    7. '       ' → logprob: -9.43132495880127
    8. ' ' → logprob: -9.55632495880127
    9. '                   ' → logprob: -9.68132495880127
    10. '
' → logprob: -10.18132495880127

Token 1526: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.023105502128601
    2. ' =' → logprob: -1.148105502128601
    3. ' in' → logprob: -1.648105502128601
    4. 'in' → logprob: -2.5231056213378906
    5. ')' → logprob: -3.8981056213378906
    6. 'from' → logprob: -5.148105621337891
    7. 's' → logprob: -5.273105621337891
    8. '>=' → logprob: -5.773105621337891
    9. 'range' → logprob: -6.023105621337891
    10. 'for' → logprob: -6.023105621337891

Token 1527: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0380503311753273
    2. ' price' → logprob: -3.288050413131714
    3. '   ' → logprob: -12.663050651550293
    4. 'prix' → logprob: -13.038050651550293
    5. '(price' → logprob: -13.663050651550293
    6. '	price' → logprob: -13.788050651550293
    7. ' prix' → logprob: -14.413050651550293
    8. ' ' → logprob: -15.413050651550293
    9. '           ' → logprob: -16.038049697875977
    10. '  ' → logprob: -16.913049697875977

Token 1528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5071436762809753
    2. ' >=' → logprob: -1.6321437358856201
    3. '=' → logprob: -2.38214373588562
    4. ' in' → logprob: -3.00714373588562
    5. '>=' → logprob: -3.38214373588562
    6. ')' → logprob: -5.007143497467041
    7. ' <=' → logprob: -5.257143497467041
    8. ':' → logprob: -5.507143497467041
    9. ' for' → logprob: -6.382143497467041
    10. '>' → logprob: -6.507143497467041

Token 1529: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.004242704715579748
    2. 'r' → logprob: -6.879242897033691
    3. 'm' → logprob: -7.129242897033691
    4. 'mon' → logprob: -7.504242897033691
    5. 'amount' → logprob: -7.879242897033691
    6. 'c' → logprob: -8.379242897033691
    7. 'chang' → logprob: -8.754242897033691
    8. '0' → logprob: -8.879242897033691
    9. ' change' → logprob: -9.004242897033691
    10. 'chg' → logprob: -9.129242897033691

Token 1530: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6723440885543823
    2. '_given' → logprob: -2.547344207763672
    3. '=' → logprob: -3.297344207763672
    4. '#' → logprob: -3.297344207763672
    5. ' ' → logprob: -3.422344207763672
    6. '           ' → logprob: -3.547344207763672
    7. ':' → logprob: -3.672344207763672
    8. ' 
' → logprob: -3.672344207763672
    9. ',' → logprob: -3.797344207763672
    10. '
' → logprob: -4.047344207763672

Token 1531: ' recevoir' (ID: 80278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.026296118274331093
    2. 'render' → logprob: -4.526296138763428
    3. 'don' → logprob: -4.651296138763428
    4. 'rend' → logprob: -6.401296138763428
    5. ' rendre' → logprob: -6.901296138763428
    6. 'return' → logprob: -7.276296138763428
    7. '
' → logprob: -8.15129566192627
    8. '{' → logprob: -8.27629566192627
    9. '0' → logprob: -8.40129566192627
    10. 'payer' → logprob: -8.40129566192627

Token 1532: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07634957134723663
    2. ':' → logprob: -4.45134973526001
    3. ' for' → logprob: -4.70134973526001
    4. ':
' → logprob: -4.95134973526001
    5. '       ' → logprob: -5.20134973526001
    6. '\n' → logprob: -5.82634973526001
    7. ' =' → logprob: -5.82634973526001
    8. ',' → logprob: -5.82634973526001
    9. '               ' → logprob: -5.95134973526001
    10. '<|end|>' → logprob: -5.95134973526001

Token 1533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001769616355886683
    2. '            
' → logprob: -9.750177383422852
    3. '               ' → logprob: -10.375177383422852
    4. '       ' → logprob: -11.125177383422852
    5. '		' → logprob: -11.500177383422852
    6. '```' → logprob: -11.625177383422852
    7. ',' → logprob: -11.750177383422852
    8. ' for' → logprob: -11.875177383422852
    9. '	       ' → logprob: -11.875177383422852
    10. '                   ' → logprob: -12.125177383422852

Token 1534: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07983633875846863
    2. ' for' → logprob: -3.329836368560791
    3. '       ' → logprob: -3.454836368560791
    4. 'for' → logprob: -4.704836368560791
    5. '               ' → logprob: -9.579835891723633
    6. ' ' → logprob: -9.579835891723633
    7. '	       ' → logprob: -10.454835891723633
    8. '		' → logprob: -10.954835891723633
    9. '#' → logprob: -11.204835891723633
    10. '	for' → logprob: -11.454835891723633

Token 1535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003406682051718235
    2. '       ' → logprob: -5.753406524658203
    3. '#' → logprob: -9.628406524658203
    4. '
' → logprob: -9.878406524658203
    5. '            
' → logprob: -10.003406524658203
    6. '               ' → logprob: -11.253406524658203
    7. '   ' → logprob: -11.378406524658203
    8. ' for' → logprob: -11.628406524658203
    9. ' #' → logprob: -12.128406524658203
    10. 'for' → logprob: -12.253406524658203

Token 1536: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28435367345809937
    2. ' for' → logprob: -2.159353733062744
    3. '           ' → logprob: -2.284353733062744
    4. '       ' → logprob: -4.034353733062744
    5. '#' (adapté à ' #') → logprob: -4.534353733062744
    6. ' #' → logprob: -7.409353733062744
    7. '   ' → logprob: -7.659353733062744
    8. '
' → logprob: -7.659353733062744
    9. '```' → logprob: -10.034353256225586
    10. 'import' → logprob: -10.409353256225586

Token 1537: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3891358971595764
    2. '           ' → logprob: -1.5141358375549316
    3. ' for' → logprob: -2.6391358375549316
    4. '       ' → logprob: -3.8891358375549316
    5. '#' → logprob: -5.014135837554932
    6. 'max' → logprob: -6.389135837554932
    7. ' #' → logprob: -7.389135837554932
    8. '
' → logprob: -7.764135837554932
    9. '   ' → logprob: -8.26413631439209
    10. '```' → logprob: -8.38913631439209

Token 1538: ' réduire' (ID: 78295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14061596989631653
    2. 'mont' → logprob: -3.140615940093994
    3. 'pay' → logprob: -3.515615940093994
    4. 'given' → logprob: -4.515615940093994
    5. 'change' → logprob: -5.140615940093994
    6. 'payer' → logprob: -5.265615940093994
    7. 'coin' → logprob: -5.390615940093994
    8. 'amount' → logprob: -5.515615940093994
    9. 'payment' → logprob: -6.015615940093994
    10. ' montant' → logprob: -6.015615940093994

Token 1539: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14075545966625214
    2. 'l' → logprob: -3.2657554149627686
    3. 'x' → logprob: -3.2657554149627686
    4. ' la' → logprob: -3.5157554149627686
    5. 'le' → logprob: -4.265755653381348
    6. '           ' → logprob: -6.265755653381348
    7. 'len' → logprob: -6.390755653381348
    8. '1' → logprob: -6.765755653381348
    9. '#' → logprob: -6.890755653381348
    10. '       ' → logprob: -7.265755653381348

Token 1540: ''espace' (ID: 118124)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12982384860515594
    2. 'mont' → logprob: -3.129823923110962
    3. ' montant' → logprob: -3.629823923110962
    4. 'e' → logprob: -4.004823684692383
    5. ' x' → logprob: -4.254823684692383
    6. 'i' → logprob: -4.879823684692383
    7. 'amount' → logprob: -5.504823684692383
    8. 'a' → logprob: -6.879823684692383
    9. '_x' → logprob: -7.504823684692383
    10. 'o' → logprob: -7.629823684692383

Token 1541: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3791224956512451
    2. 'search' → logprob: -2.879122495651245
    3. '           ' → logprob: -2.879122495651245
    4. '#' → logprob: -3.004122495651245
    5. ' de' → logprob: -3.504122495651245
    6. 'des' → logprob: -3.629122495651245
    7. '
' → logprob: -3.629122495651245
    8. '            
' → logprob: -4.004122734069824
    9. 'expl' → logprob: -4.504122734069824
    10. '               ' → logprob: -4.879122734069824

Token 1542: ' recherche' (ID: 24975)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0028202086687088013
    2. ' recherche' → logprob: -6.127820014953613
    3. 'search' → logprob: -8.127820014953613
    4. 'rech' → logprob: -9.627820014953613
    5. 'temps' → logprob: -9.877820014953613
    6. 'cherche' → logprob: -9.877820014953613
    7. 'Recherche' → logprob: -10.127820014953613
    8. 'x' → logprob: -10.377820014953613
    9. '```' → logprob: -10.752820014953613
    10. '#' → logprob: -10.877820014953613

Token 1543: ' :
' (ID: 10039)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.123350977897644
    2. '           ' → logprob: -1.498350977897644
    3. ',' → logprob: -1.998350977897644
    4. 'for' → logprob: -2.8733510971069336
    5. '
' → logprob: -3.3733510971069336
    6. ' #' → logprob: -3.6233510971069336
    7. ' for' → logprob: -3.7483510971069336
    8. ':
' → logprob: -3.7483510971069336
    9. '            
' → logprob: -3.8733510971069336
    10. 'possible' → logprob: -3.9983510971069336

Token 1544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027063372544944286
    2. '#' → logprob: -8.75027084350586
    3. '            ' → logprob: -10.12527084350586
    4. '               ' → logprob: -10.62527084350586
    5. '```' → logprob: -11.37527084350586
    6. '       ' → logprob: -11.62527084350586
    7. '            
' → logprob: -12.12527084350586
    8. 'continue' → logprob: -12.37527084350586
    9. '          ' → logprob: -12.50027084350586
    10. ' #' → logprob: -12.62527084350586

Token 1545: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03228616714477539
    2. 'for' → logprob: -3.9072861671447754
    3. ' for' → logprob: -4.657286167144775
    4. '#' (adapté à ' #') → logprob: -6.782286167144775
    5. '       ' → logprob: -7.907286167144775
    6. '               ' → logprob: -8.157285690307617
    7. ' ' → logprob: -9.657285690307617
    8. 'continue' → logprob: -9.657285690307617
    9. '            
' → logprob: -10.157285690307617
    10. '		' → logprob: -10.532285690307617

Token 1546: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0044878721237183
    2. '           ' → logprob: -1.1294878721237183
    3. '#' → logprob: -1.7544878721237183
    4. ' for' → logprob: -2.129487991333008
    5. ' #' → logprob: -4.379487991333008
    6. '```' → logprob: -6.379487991333008
    7. '       ' → logprob: -6.754487991333008
    8. '               ' → logprob: -7.004487991333008
    9. ' ' → logprob: -7.129487991333008
    10. '
' → logprob: -7.879487991333008

Token 1547: ' doit' (ID: 21822)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.0545988082885742
    2. '#' → logprob: -1.3045988082885742
    3. ' faut' → logprob: -1.6795988082885742
    4. ' est' → logprob: -2.929598808288574
    5. 's' → logprob: -3.679598808288574
    6. 'f' → logprob: -3.804598808288574
    7. ' faudra' → logprob: -3.929598808288574
    8. ' #' → logprob: -4.304598808288574
    9. 'n' → logprob: -4.679598808288574
    10. ' faudrait' → logprob: -4.804598808288574

Token 1548: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02025303803384304
    2. 'y' → logprob: -4.0202531814575195
    3. 'être' → logprob: -8.27025318145752
    4. ' être' → logprob: -8.27025318145752
    5. 's' → logprob: -8.52025318145752
    6. 'poss' → logprob: -8.52025318145752
    7. 'ex' → logprob: -8.77025318145752
    8. 'n' → logprob: -9.27025318145752
    9. ' possible' → logprob: -9.39525318145752
    10. 'x' → logprob: -9.39525318145752

Token 1549: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.24474896490573883
    2. ' avoir' → logprob: -1.6197489500045776
    3. ''avoir' → logprob: -4.119749069213867
    4. 'voir' → logprob: -6.119749069213867
    5. '’avoir' → logprob: -7.869749069213867
    6. 'a' → logprob: -9.244749069213867
    7. '   ' → logprob: -9.369749069213867
    8. '#' → logprob: -10.244749069213867
    9. 'voire' → logprob: -10.744749069213867
    10. '    ' → logprob: -11.244749069213867

Token 1550: ' au' (ID: 2791)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.0018309354782104
    2. 'num' → logprob: -1.1268309354782104
    3. '1' → logprob: -2.7518310546875
    4. 'une' → logprob: -3.0018310546875
    5. ' au' → logprob: -3.3768310546875
    6. ' une' → logprob: -3.5018310546875
    7. 'un' → logprob: -3.6268310546875
    8. 'x' → logprob: -3.6268310546875
    9. 'for' → logprob: -4.1268310546875
    10. '   ' → logprob: -4.6268310546875

Token 1551: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0028838065918534994
    2. 'plus' → logprob: -6.3778839111328125
    3. 'mo' → logprob: -7.2528839111328125
    4. 'minimum' → logprob: -8.627883911132812
    5. ' moins' → logprob: -9.377883911132812
    6. '   ' → logprob: -9.627883911132812
    7. 'menos' → logprob: -10.127883911132812
    8. '```' → logprob: -10.627883911132812
    9. 'maximum' → logprob: -10.752883911132812
    10. 'minus' → logprob: -11.627883911132812

Token 1552: ' ' (ID: 220)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.45671096444129944
    2. ' une' → logprob: -1.581710934638977
    3. '1' → logprob: -2.2067110538482666
    4. ' ' → logprob: -4.2067108154296875
    5. 'un' → logprob: -4.4567108154296875
    6. 'au' → logprob: -4.7067108154296875
    7. ' un' → logprob: -4.7067108154296875
    8. ' au' → logprob: -5.8317108154296875
    9. ''une' → logprob: -6.9567108154296875
    10. '500' → logprob: -7.7067108154296875

Token 1553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04944310337305069
    2. ' ' → logprob: -3.674443006515503
    3. '500' → logprob: -4.549443244934082
    4. 'une' → logprob: -4.799443244934082
    5. ' une' → logprob: -5.924443244934082
    6. 'un' → logprob: -7.924443244934082
    7. '   ' → logprob: -8.424443244934082
    8. 'one' → logprob: -9.174443244934082
    9. ''une' → logprob: -9.424443244934082
    10. '  ' → logprob: -9.549443244934082

Token 1554: ' pièce' (ID: 56132)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1717181205749512
    2. ' ' → logprob: -1.2967181205749512
    3. '_' → logprob: -1.9217181205749512
    4. ' )' → logprob: -2.671718120574951
    5. ' 
' → logprob: -3.171718120574951
    6. 'space' → logprob: -3.671718120574951
    7. ',' → logprob: -3.796718120574951
    8. ')' → logprob: -3.921718120574951
    9. '
' → logprob: -4.296718120574951
    10. 'e' → logprob: -4.546718120574951

Token 1555: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10591508448123932
    2. '500' → logprob: -3.105915069580078
    3. ' de' → logprob: -3.605915069580078
    4. '_' → logprob: -3.730915069580078
    5. '5' → logprob: -5.730915069580078
    6. 'de' → logprob: -8.355915069580078
    7. ' ' → logprob: -8.480915069580078
    8. ' 
' → logprob: -8.855915069580078
    9. ' _' → logprob: -8.980915069580078
    10. '  
' → logprob: -9.605915069580078

Token 1556: '500' (ID: 3234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.690284013748169
    2. '500' → logprob: -0.940284013748169
    3. ' de' → logprob: -3.065284013748169
    4. '_' → logprob: -3.065284013748169
    5. '```' → logprob: -5.31528377532959
    6. 'de' → logprob: -5.81528377532959
    7. ' ' → logprob: -6.19028377532959
    8. '5' → logprob: -7.06528377532959
    9. 'space' → logprob: -7.19028377532959
    10. ',' → logprob: -7.56528377532959

Token 1557: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7708147764205933
    2. ')' → logprob: -1.7708147764205933
    3. ':' → logprob: -2.145814895629883
    4. ',' → logprob: -2.145814895629883
    5. ' ' → logprob: -4.270814895629883
    6. ' dans' → logprob: -4.270814895629883
    7. '500' → logprob: -4.645814895629883
    8. ' )' → logprob: -5.020814895629883
    9. '   ' → logprob: -5.145814895629883
    10. '-' → logprob: -5.270814895629883

Token 1558: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6464265584945679
    2. 'change' → logprob: -1.3964265584945679
    3. 'x' → logprob: -2.1464266777038574
    4. 'le' → logprob: -3.2714266777038574
    5. 'nd' → logprob: -3.5214266777038574
    6. 'l' → logprob: -4.021426677703857
    7. 'coins' → logprob: -5.396426677703857
    8. 'range' → logprob: -5.521426677703857
    9. 'les' → logprob: -5.646426677703857
    10. ' la' → logprob: -6.396426677703857

Token 1559: ' monnaie' (ID: 168963)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.234317809343338
    2. 'mon' → logprob: -1.7343177795410156
    3. 'r' → logprob: -3.6093177795410156
    4. ' monnaie' → logprob: -6.484317779541016
    5. 'mont' → logprob: -6.984317779541016
    6. 'chang' → logprob: -8.109317779541016
    7. 'render' → logprob: -8.359317779541016
    8. '```' → logprob: -8.609317779541016
    9. 'changer' → logprob: -8.609317779541016
    10. 'rend' → logprob: -8.734317779541016

Token 1560: ' rend' (ID: 15016)
  Prédit: ' rend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rend' → logprob: -0.25822004675865173
    2. ' ' → logprob: -2.6332199573516846
    3. ' à' → logprob: -2.8832199573516846
    4. '   ' → logprob: -3.7582199573516846
    5. ' donnée' → logprob: -3.7582199573516846
    6. 'r' → logprob: -4.133220195770264
    7. ' rendu' → logprob: -5.008220195770264
    8. ' render' → logprob: -5.133220195770264
    9. 'rend' → logprob: -5.758220195770264
    10. '       ' → logprob: -6.008220195770264

Token 1561: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00023095356300473213
    2. '
' → logprob: -9.62523078918457
    3. 'u' → logprob: -10.12523078918457
    4. 'ie' → logprob: -10.12523078918457
    5. '__' → logprob: -11.25023078918457
    6. 'e' → logprob: -11.75023078918457
    7. '   ' → logprob: -11.87523078918457
    8. '=' → logprob: -12.37523078918457
    9. '       ' → logprob: -12.37523078918457
    10. '"' → logprob: -12.50023078918457

Token 1562: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010203643701970577
    2. '            
' → logprob: -5.135203838348389
    3. ',' → logprob: -7.010203838348389
    4. '		' → logprob: -7.260203838348389
    5. '       ' → logprob: -7.385203838348389
    6. ' 
' → logprob: -8.01020336151123
    7. '
' → logprob: -8.38520336151123
    8. '               ' → logprob: -8.38520336151123
    9. ' for' → logprob: -9.01020336151123
    10. '	       ' → logprob: -9.26020336151123

Token 1563: 'change' (ID: 4939)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134535849094391
    2. ')
' → logprob: -2.4384536743164062
    3. '500' → logprob: -2.8134536743164062
    4. '           ' → logprob: -3.0634536743164062
    5. 'x' → logprob: -4.188453674316406
    6. '#' → logprob: -4.688453674316406
    7. '),' → logprob: -5.313453674316406
    8. 'coins' → logprob: -5.563453674316406
    9. '):
' → logprob: -5.938453674316406
    10. '               ' → logprob: -6.063453674316406

Token 1564: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44099533557891846
    2. '):
' → logprob: -1.5659953355789185
    3. '):' → logprob: -3.815995216369629
    4. '),' → logprob: -3.815995216369629
    5. 'r' → logprob: -4.190995216369629
    6. ' )' → logprob: -4.190995216369629
    7. ')
' → logprob: -4.315995216369629
    8. '   ' → logprob: -4.565995216369629
    9. ' rend' → logprob: -4.940995216369629
    10. ' ' → logprob: -5.065995216369629

Token 1565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023229753598570824
    2. '#' → logprob: -4.273229598999023
    3. '               ' → logprob: -5.148229598999023
    4. '            ' → logprob: -6.523229598999023
    5. '                   ' → logprob: -7.523229598999023
    6. '       ' → logprob: -8.148229598999023
    7. '            
' → logprob: -8.398229598999023
    8. ' #' → logprob: -8.898229598999023
    9. '                       ' → logprob: -9.398229598999023
    10. '          ' → logprob: -9.648229598999023

Token 1566: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060674529522657394
    2. '#' (adapté à ' #') → logprob: -2.9356744289398193
    3. ' #' → logprob: -5.935674667358398
    4. '            ' → logprob: -7.185674667358398
    5. '               ' → logprob: -7.560674667358398
    6. ' continue' → logprob: -8.185674667358398
    7. ' ' → logprob: -8.560674667358398
    8. 'continue' → logprob: -8.560674667358398
    9. '                   ' → logprob: -8.685674667358398
    10. '            
' → logprob: -8.685674667358398

Token 1567: ' sinon' (ID: 52915)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3904314339160919
    2. '           ' → logprob: -1.1404314041137695
    3. ' #' → logprob: -5.7654314041137695
    4. 'for' → logprob: -8.89043140411377
    5. '               ' → logprob: -9.89043140411377
    6. ' on' → logprob: -10.26543140411377
    7. ' for' → logprob: -10.64043140411377
    8. '       ' → logprob: -10.64043140411377
    9. 'on' → logprob: -10.76543140411377
    10. '                   ' → logprob: -10.76543140411377

Token 1568: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.020927101373672485
    2. ' continue' → logprob: -4.2709269523620605
    3. '               ' → logprob: -5.7709269523620605
    4. '           ' → logprob: -6.1459269523620605
    5. 'contin' → logprob: -6.7709269523620605
    6. '#' → logprob: -9.270927429199219
    7. ' continuer' → logprob: -9.270927429199219
    8. '                   ' → logprob: -9.895927429199219
    9. '   ' → logprob: -10.270927429199219
    10. '	continue' → logprob: -11.395927429199219

Token 1569: ' intérêt' (ID: 113072)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9299257397651672
    2. ' possible' → logprob: -1.5549256801605225
    3. 'possible' → logprob: -2.0549256801605225
    4. ' acheter' → logprob: -2.1799256801605225
    5. ' de' → logprob: -3.0549256801605225
    6. 'acheter' → logprob: -3.4299256801605225
    7. ' continuer' → logprob: -4.054925918579102
    8. 'd' → logprob: -4.554925918579102
    9. ' acheté' → logprob: -4.804925918579102
    10. 'de' → logprob: -5.179925918579102

Token 1570: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012558743357658386
    2. '               ' → logprob: -5.012558937072754
    3. ',' → logprob: -6.637558937072754
    4. ':' → logprob: -7.262558937072754
    5. '                   ' → logprob: -7.262558937072754
    6. '            
' → logprob: -7.262558937072754
    7. '                       ' → logprob: -7.512558937072754
    8. '       ' → logprob: -7.887558937072754
    9. ')' → logprob: -8.137558937072754
    10. '            ' → logprob: -8.762558937072754

Token 1571: ''' (ID: 6)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6489250063896179
    2. 'payer' → logprob: -1.5239250659942627
    3. 'acheter' → logprob: -2.1489250659942627
    4. 'p' → logprob: -3.1489250659942627
    5. 'prendre' → logprob: -3.2739250659942627
    6. 'faire' → logprob: -4.023924827575684
    7. 'r' → logprob: -5.023924827575684
    8. 'mettre' → logprob: -5.273924827575684
    9. 'don' → logprob: -5.398924827575684
    10. 'l' → logprob: -5.398924827575684

Token 1572: 'acheter' (ID: 105787)
  Prédit: 'acheter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -0.011984098702669144
    2. 'payer' → logprob: -5.011983871459961
    3. 'contin' → logprob: -6.136983871459961
    4. 'aller' → logprob: -6.761983871459961
    5. 'aj' → logprob: -7.886983871459961
    6. 'p' → logprob: -8.511983871459961
    7. 'invest' → logprob: -8.761983871459961
    8. 'ess' → logprob: -9.261983871459961
    9. 'ache' → logprob: -9.261983871459961
    10. 'mettre' → logprob: -9.386983871459961

Token 1573: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005773073527961969
    2. '            
' → logprob: -5.380773067474365
    3. '               ' → logprob: -8.255773544311523
    4. ' 
' → logprob: -8.755773544311523
    5. '                        
' → logprob: -9.005773544311523
    6. '                       ' → logprob: -9.130773544311523
    7. '
' → logprob: -9.255773544311523
    8. ',' → logprob: -9.255773544311523
    9. '                   ' → logprob: -9.755773544311523
    10. ' ' → logprob: -10.630773544311523

Token 1574: ' ce' (ID: 2357)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.9978304505348206
    2. 'le' → logprob: -1.2478303909301758
    3. 'cet' → logprob: -1.3728303909301758
    4. 'c' → logprob: -3.622830390930176
    5. 'la' → logprob: -3.872830390930176
    6. 'l' → logprob: -3.997830390930176
    7. ' ce' → logprob: -4.247830390930176
    8. ' ' → logprob: -5.872830390930176
    9. 'un' → logprob: -6.747830390930176
    10. ' le' → logprob: -6.997830390930176

Token 1575: ' magasin' (ID: 76229)
  Prédit: 'mag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mag' → logprob: -0.025827709585428238
    2. 'for' → logprob: -4.650827884674072
    3. ' magasin' → logprob: -5.400827884674072
    4. 'shop' → logprob: -5.775827884674072
    5. 'bout' → logprob: -6.025827884674072
    6. '
' → logprob: -6.525827884674072
    7. 'store' → logprob: -6.775827884674072
    8. 'nd' → logprob: -7.025827884674072
    9. 'code' → logprob: -7.525827884674072
    10. '#' → logprob: -7.650827884674072

Token 1576: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003682285314425826
    2. '            
' → logprob: -8.625368118286133
    3. '
' → logprob: -9.000368118286133
    4. '               ' → logprob: -10.500368118286133
    5. '       ' → logprob: -11.500368118286133
    6. ',' → logprob: -12.000368118286133
    7. 'for' → logprob: -12.250368118286133
    8. 'import' → logprob: -12.375368118286133
    9. '                   ' → logprob: -12.625368118286133
    10. ' for' → logprob: -13.500368118286133

Token 1577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014287306112237275
    2. '```' → logprob: -9.250143051147461
    3. '               ' → logprob: -10.750143051147461
    4. '            
' → logprob: -11.375143051147461
    5. 'for' → logprob: -12.125143051147461
    6. '
' → logprob: -13.500143051147461
    7. '       ' → logprob: -13.625143051147461
    8. '                   ' → logprob: -13.875143051147461
    9. '                       ' → logprob: -13.875143051147461
    10. ',' → logprob: -14.125143051147461

Token 1578: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01068156585097313
    2. '       ' → logprob: -4.635681629180908
    3. '
' → logprob: -8.13568115234375
    4. ' for' → logprob: -8.26068115234375
    5. 'for' → logprob: -8.88568115234375
    6. '               ' → logprob: -9.88568115234375
    7. '		' → logprob: -10.13568115234375
    8. '	       ' → logprob: -10.51068115234375
    9. '            
' → logprob: -10.76068115234375
    10. '   ' → logprob: -10.88568115234375

Token 1579: ' De' (ID: 1516)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006525091012008488
    2. 'for' → logprob: -8.250652313232422
    3. '       ' → logprob: -8.750652313232422
    4. '
' → logprob: -9.125652313232422
    5. ' for' → logprob: -10.000652313232422
    6. '            
' → logprob: -10.500652313232422
    7. '               ' → logprob: -11.500652313232422
    8. '#' → logprob: -11.625652313232422
    9. '   ' → logprob: -11.750652313232422
    10. 'max' → logprob: -11.875652313232422

Token 1580: ' plus' (ID: 2932)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.33418118953704834
    2. 'for' → logprob: -1.4591811895370483
    3. '#' → logprob: -3.334181308746338
    4. ' for' → logprob: -5.459181308746338
    5. '
' → logprob: -6.084181308746338
    6. ' ' → logprob: -6.334181308746338
    7. '```' → logprob: -6.584181308746338
    8. '       ' → logprob: -6.959181308746338
    9. '   ' → logprob: -7.334181308746338
    10. 'def' → logprob: -7.584181308746338

Token 1581: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32005253434181213
    2. '#' → logprob: -1.6950525045394897
    3. 'for' → logprob: -3.8200526237487793
    4. ' for' → logprob: -3.9450526237487793
    5. ' #' → logprob: -4.070052623748779
    6. ' on' → logprob: -5.195052623748779
    7. 'x' → logprob: -5.195052623748779
    8. '
' → logprob: -5.195052623748779
    9. 'on' → logprob: -5.695052623748779
    10. ' x' → logprob: -5.945052623748779

Token 1582: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4380572736263275
    2. ' #' → logprob: -1.81305730342865
    3. '           ' → logprob: -2.5630571842193604
    4. 'for' → logprob: -3.1880571842193604
    5. ' for' → logprob: -3.3130571842193604
    6. 'continue' → logprob: -5.0630574226379395
    7. 'x' → logprob: -5.5630574226379395
    8. ' x' → logprob: -5.5630574226379395
    9. 'price' → logprob: -5.9380574226379395
    10. 'import' → logprob: -6.0630574226379395

Token 1583: ' essa' (ID: 19417)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -1.0912024974822998
    2. '#' → logprob: -1.5912024974822998
    3. 'limit' → logprob: -1.8412024974822998
    4. 'pe' → logprob: -2.3412024974823
    5. 'cherche' → logprob: -2.8412024974823
    6. ' limite' → logprob: -3.3412024974823
    7. 'continue' → logprob: -3.5912024974823
    8. 'va' → logprob: -4.216202735900879
    9. 'pour' → logprob: -4.466202735900879
    10. 'expl' → logprob: -4.716202735900879

Token 1584: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.10705845803022385
    2. 'y' → logprob: -2.357058525085449
    3. 'ye' → logprob: -5.232058525085449
    4. 'yer' → logprob: -7.482058525085449
    5. 'uie' → logprob: -7.982058525085449
    6. 'aye' → logprob: -8.85705852508545
    7. 'iera' → logprob: -9.48205852508545
    8. 'yre' → logprob: -10.23205852508545
    9. 'yage' → logprob: -10.35705852508545
    10. 'i' → logprob: -10.35705852508545

Token 1585: ' plusieurs' (ID: 20875)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9038989543914795
    2. '    ' → logprob: -1.7788989543914795
    3. ' d' → logprob: -2.1538989543914795
    4. 'de' → logprob: -2.1538989543914795
    5. '   ' → logprob: -3.1538989543914795
    6. '        ' → logprob: -3.9038989543914795
    7. ' de' → logprob: -3.9038989543914795
    8. '       ' → logprob: -4.153899192810059
    9. '           ' → logprob: -4.153899192810059
    10. '            ' → logprob: -4.778899192810059

Token 1586: ' mont' (ID: 11554)
  Prédit: 'mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mont' → logprob: -1.2388455867767334
    2. 'x' → logprob: -1.3638455867767334
    3. '       ' → logprob: -2.1138455867767334
    4. 'val' → logprob: -2.2388455867767334
    5. '   ' → logprob: -2.6138455867767334
    6. '
' → logprob: -3.2388455867767334
    7. 'values' → logprob: -4.2388458251953125
    8. 'prix' → logprob: -4.6138458251953125
    9. ' x' → logprob: -4.7388458251953125
    10. '           ' → logprob: -4.7388458251953125

Token 1587: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.6986451148986816
    2. 'ants' → logprob: -0.6986451148986816
    3. 't' → logprob: -5.573645114898682
    4. 'amount' → logprob: -6.948645114898682
    5. 'ont' → logprob: -8.948644638061523
    6. '
' → logprob: -9.573644638061523
    7. 'a' → logprob: -9.698644638061523
    8. 'ts' → logprob: -9.698644638061523
    9. 's' → logprob: -9.823644638061523
    10. 'ations' → logprob: -9.948644638061523

Token 1588: ' donn' (ID: 20414)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -0.8154364228248596
    2. '           ' → logprob: -1.8154363632202148
    3. 'à' → logprob: -2.190436363220215
    4. 'd' → logprob: -2.940436363220215
    5. '               ' → logprob: -3.190436363220215
    6. '   ' → logprob: -3.190436363220215
    7. 'pay' → logprob: -3.440436363220215
    8. '       ' → logprob: -3.815436363220215
    9. ' donn' → logprob: -3.815436363220215
    10. '```' → logprob: -4.190436363220215

Token 1589: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0008723941282369196
    2. 'é' → logprob: -7.375872611999512
    3. 'es' → logprob: -8.375872611999512
    4. 'er' → logprob: -11.625872611999512
    5. 'ées' → logprob: -12.750872611999512
    6. '
' → logprob: -14.375872611999512
    7. 'ed' → logprob: -14.625872611999512
    8. 's' → logprob: -14.750872611999512
    9. 'is' → logprob: -14.750872611999512
    10. '   ' → logprob: -15.500872611999512

Token 1590: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2359502613544464
    2. '               ' → logprob: -2.485950231552124
    3. ' for' → logprob: -2.985950231552124
    4. 'for' → logprob: -4.110950469970703
    5. '       ' → logprob: -4.610950469970703
    6. '                   ' → logprob: -4.860950469970703
    7. ',' → logprob: -5.485950469970703
    8. ':' → logprob: -5.485950469970703
    9. '            ' → logprob: -5.735950469970703
    10. 'range' → logprob: -5.735950469970703

Token 1591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8319264650344849
    2. ':' → logprob: -1.8319264650344849
    3. '<|end|>' → logprob: -1.9569264650344849
    4. '<|end|>' → logprob: -2.3319263458251953
    5. ' =' → logprob: -2.5819263458251953
    6. '           ' → logprob: -2.7069263458251953
    7. ')' → logprob: -3.2069263458251953
    8. '=' → logprob: -3.3319263458251953
    9. '       ' → logprob: -4.081926345825195
    10. 'for' → logprob: -4.081926345825195

Token 1592: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4497930109500885
    2. ' #' → logprob: -2.1997931003570557
    3. ' x' → logprob: -2.5747931003570557
    4. 'range' → logprob: -3.5747931003570557
    5. '"' → logprob: -3.8247931003570557
    6. ' 
' → logprob: -4.199792861938477
    7. ' range' → logprob: -4.324792861938477
    8. ' ' → logprob: -4.449792861938477
    9. 'x' → logprob: -4.574792861938477
    10. ' ' → logprob: -4.824792861938477

Token 1593: ' minim' (ID: 23874)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012129719834774733
    2. ' range' → logprob: -7.126213073730469
    3. 'part' → logprob: -9.376213073730469
    4. 'for' → logprob: -10.001213073730469
    5. '(range' → logprob: -10.126213073730469
    6. '[' → logprob: -10.251213073730469
    7. '
' → logprob: -10.251213073730469
    8. '#' → logprob: -10.501213073730469
    9. '100' → logprob: -10.501213073730469
    10. 'r' → logprob: -10.626213073730469

Token 1594: 'isant' (ID: 56111)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7121231555938721
    2. 'isant' → logprob: -2.212123155593872
    3. 'ité' → logprob: -2.712123155593872
    4. 'te' → logprob: -3.337123155593872
    5. 'al' → logprob: -3.337123155593872
    6. 'ant' → logprob: -3.462123155593872
    7. 'ite' → logprob: -3.712123155593872
    8. 't' → logprob: -3.837123155593872
    9. 'itant' → logprob: -3.837123155593872
    10. 'im' → logprob: -3.962123155593872

Token 1595: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2380166053771973
    2. ' x' → logprob: -1.2380166053771973
    3. 'l' → logprob: -1.3630166053771973
    4. ' l' → logprob: -2.7380166053771973
    5. 'le' → logprob: -3.3630166053771973
    6. ' le' → logprob: -3.6130166053771973
    7. ' la' → logprob: -3.9880166053771973
    8. ' les' → logprob: -5.238016605377197
    9. 'leur' → logprob: -6.238016605377197
    10. ' ' → logprob: -6.488016605377197

Token 1596: ' paiement' (ID: 78226)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7835899591445923
    2. 'd' → logprob: -2.1585898399353027
    3. ' x' → logprob: -2.9085898399353027
    4. '```' → logprob: -2.9085898399353027
    5. 'pas' → logprob: -3.0335898399353027
    6. 'co' → logprob: -3.0335898399353027
    7. 'expense' → logprob: -3.5335898399353027
    8. 'esp' → logprob: -3.6585898399353027
    9. 'cost' → logprob: -4.033589839935303
    10. ' montant' → logprob: -4.033589839935303

Token 1597: ' total' (ID: 3609)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.815791130065918
    2. ' possible' → logprob: -1.690791130065918
    3. 'possible' → logprob: -1.690791130065918
    4. '           ' → logprob: -1.940791130065918
    5. '               ' → logprob: -4.815791130065918
    6. ',' → logprob: -5.065791130065918
    7. '            ' → logprob: -5.190791130065918
    8. ' possibles' → logprob: -5.190791130065918
    9. '       ' → logprob: -5.690791130065918
    10. '_' → logprob: -6.190791130065918

Token 1598: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2893647849559784
    2. '               ' → logprob: -2.164364814758301
    3. '                   ' → logprob: -3.789364814758301
    4. '            ' → logprob: -4.289364814758301
    5. ' for' → logprob: -4.539364814758301
    6. ':' → logprob: -4.539364814758301
    7. '                       ' → logprob: -4.539364814758301
    8. 'for' → logprob: -4.914364814758301
    9. ',' → logprob: -5.039364814758301
    10. '       ' → logprob: -5.164364814758301

Token 1599: ' magasin' (ID: 76229)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7443820834159851
    2. 'pas' → logprob: -0.8693820834159851
    3. '
' → logprob: -3.36938214302063
    4. 'un' → logprob: -3.74438214302063
    5. 'increment' → logprob: -4.369381904602051
    6. '#' → logprob: -4.869381904602051
    7. 'increments' → logprob: -5.619381904602051
    8. 'step' → logprob: -5.619381904602051
    9. 'une' → logprob: -5.994381904602051
    10. 'ex' → logprob: -6.244381904602051

Token 1600: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027523303870111704
    2. '            
' → logprob: -6.627752304077148
    3. '            ' → logprob: -8.377752304077148
    4. '       ' → logprob: -8.377752304077148
    5. '               ' → logprob: -8.627752304077148
    6. ',' → logprob: -8.627752304077148
    7. ')' → logprob: -9.502752304077148
    8. '...' → logprob: -9.627752304077148
    9. '                   ' → logprob: -10.252752304077148
    10. '#' → logprob: -10.627752304077148

Token 1601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007984309340827167
    2. '            
' → logprob: -7.625798225402832
    3. '		' → logprob: -9.625798225402832
    4. '
' → logprob: -9.625798225402832
    5. ',' → logprob: -10.375798225402832
    6. '               ' → logprob: -10.750798225402832
    7. '       ' → logprob: -11.000798225402832
    8. '	       ' → logprob: -11.125798225402832
    9. '            ' → logprob: -11.375798225402832
    10. ' (' → logprob: -11.500798225402832

Token 1602: ' #
' (ID: 21888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28587132692337036
    2. '       ' → logprob: -1.4108712673187256
    3. ' for' → logprob: -6.785871505737305
    4. '	' → logprob: -7.160871505737305
    5. '		' → logprob: -7.160871505737305
    6. ' ' → logprob: -7.535871505737305
    7. '	   ' → logprob: -7.785871505737305
    8. 'for' → logprob: -8.285871505737305
    9. '	       ' → logprob: -8.285871505737305
    10. '               ' → logprob: -8.535871505737305

Token 1603: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3512480854988098
    2. '           ' → logprob: -1.226248025894165
    3. '
' → logprob: -6.726248264312744
    4. '        
' → logprob: -7.226248264312744
    5. '            
' → logprob: -8.226247787475586
    6. ' for' → logprob: -9.101247787475586
    7. '               ' → logprob: -9.476247787475586
    8. ' 
' → logprob: -9.851247787475586
    9. '   ' → logprob: -9.851247787475586
    10. '        ' → logprob: -10.226247787475586

Token 1604: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6934541463851929
    2. '           ' → logprob: -1.1934541463851929
    3. 'for' → logprob: -1.9434541463851929
    4. ' for' → logprob: -3.0684542655944824
    5. 'max' → logprob: -5.318454265594482
    6. '#' (adapté à ' #') → logprob: -7.443454265594482
    7. '   ' → logprob: -7.693454265594482
    8. ' max' → logprob: -7.943454265594482
    9. '
' → logprob: -8.943453788757324
    10. 'min' → logprob: -9.068453788757324

Token 1605: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32310667634010315
    2. '       ' → logprob: -1.3231066465377808
    3. 'for' → logprob: -4.94810676574707
    4. ' for' → logprob: -6.32310676574707
    5. '   ' → logprob: -8.32310676574707
    6. '```' → logprob: -8.57310676574707
    7. '#' → logprob: -9.19810676574707
    8. '
' → logprob: -9.57310676574707
    9. '               ' → logprob: -9.57310676574707
    10. '            
' → logprob: -10.07310676574707

Token 1606: ' utilise' (ID: 70283)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4924602508544922
    2. '           ' → logprob: -1.9924602508544922
    3. 'for' → logprob: -2.117460250854492
    4. '#' → logprob: -2.867460250854492
    5. 'import' → logprob: -4.492460250854492
    6. ' continue' → logprob: -4.492460250854492
    7. '       ' → logprob: -4.992460250854492
    8. 'range' → logprob: -4.992460250854492
    9. 'contin' → logprob: -5.242460250854492
    10. ' for' → logprob: -5.242460250854492

Token 1607: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5600603222846985
    2. '100' → logprob: -2.3100602626800537
    3. 'for' → logprob: -2.9350602626800537
    4. 'import' → logprob: -3.0600602626800537
    5. 'coins' → logprob: -3.0600602626800537
    6. 'un' → logprob: -3.3100602626800537
    7. '500' → logprob: -3.3100602626800537
    8. '           ' → logprob: -3.5600602626800537
    9. '       ' → logprob: -4.060060501098633
    10. '   ' → logprob: -4.435060501098633

Token 1608: ' pièces' (ID: 49165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5587627291679382
    2. '100' → logprob: -2.183762788772583
    3. 'coins' → logprob: -2.308762788772583
    4. 'range' → logprob: -2.558762788772583
    5. 'import' → logprob: -3.808762788772583
    6. 'def' → logprob: -4.308762550354004
    7. '500' → logprob: -4.433762550354004
    8. 'prix' → logprob: -4.433762550354004
    9. 'price' → logprob: -4.558762550354004
    10. '#' → logprob: -4.558762550354004

Token 1609: ' disponibles' (ID: 36617)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.155348539352417
    2. '           ' → logprob: -1.530348539352417
    3. '500' → logprob: -2.030348539352417
    4. '       ' → logprob: -2.530348539352417
    5. 'poss' → logprob: -3.155348539352417
    6. 'en' → logprob: -3.405348539352417
    7. ',' → logprob: -3.655348539352417
    8. 'act' → logprob: -4.155348777770996
    9. 'types' → logprob: -4.530348777770996
    10. 'current' → logprob: -4.530348777770996

Token 1610: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.627699613571167
    2. ' et' → logprob: -2.002699613571167
    3. ',' → logprob: -2.127699613571167
    4. ' +' → logprob: -2.752699613571167
    5. ')' → logprob: -3.627699613571167
    6. '            ' → logprob: -4.127699851989746
    7. '               ' → logprob: -4.377699851989746
    8. '                   ' → logprob: -4.377699851989746
    9. '       ' → logprob: -4.502699851989746
    10. ' ,' → logprob: -4.627699851989746

Token 1611: 'coins' (ID: 48264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4126484394073486
    2. '500' → logprob: -1.7876484394073486
    3. '1' → logprob: -2.4126484394073486
    4. 'coins' → logprob: -2.5376484394073486
    5. '100' → logprob: -2.7876484394073486
    6. '[],' → logprob: -3.0376484394073486
    7. '[]' → logprob: -3.1626484394073486
    8. '[])' → logprob: -3.4126484394073486
    9. 'num' → logprob: -3.7876484394073486
    10. 'nd' → logprob: -3.9126484394073486

Token 1612: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -0.5130277872085571
    2. '_types' → logprob: -1.7630277872085571
    3. '_tuple' → logprob: -2.6380276679992676
    4. ',' → logprob: -3.0130276679992676
    5. ')' → logprob: -3.2630276679992676
    6. '_' → logprob: -4.013027667999268
    7. '),' → logprob: -4.013027667999268
    8. '           ' → logprob: -5.138027667999268
    9. '   ' → logprob: -5.638027667999268
    10. '_,' → logprob: -5.638027667999268

Token 1613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2844987213611603
    2. ' +' → logprob: -2.409498691558838
    3. '),' → logprob: -2.659498691558838
    4. ',' → logprob: -3.409498691558838
    5. ')+' → logprob: -4.284498691558838
    6. '+' → logprob: -4.409498691558838
    7. '+[' → logprob: -4.659498691558838
    8. '[' → logprob: -5.159498691558838
    9. ' )' → logprob: -5.409498691558838
    10. ')
' → logprob: -6.284498691558838

Token 1614: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05939636006951332
    2. '       ' → logprob: -3.934396266937256
    3. ',' → logprob: -5.184396266937256
    4. ')' → logprob: -5.309396266937256
    5. '               ' → logprob: -5.559396266937256
    6. ':
' → logprob: -5.934396266937256
    7. ':' → logprob: -5.934396266937256
    8. '```' → logprob: -5.934396266937256
    9. '):
' → logprob: -6.059396266937256
    10. '
' → logprob: -6.184396266937256

Token 1615: ' billets' (ID: 146301)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43822404742240906
    2. '[(' → logprob: -1.3132240772247314
    3. '(' → logprob: -3.4382240772247314
    4. ' [' → logprob: -3.9382240772247314
    5. '{' → logprob: -4.188223838806152
    6. ' [(' → logprob: -5.688223838806152
    7. ' (' → logprob: -5.813223838806152
    8. 'bil' → logprob: -6.188223838806152
    9. '   ' → logprob: -6.313223838806152
    10. '100' → logprob: -6.438223838806152

Token 1616: ' ill' (ID: 6486)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9308618307113647
    2. '100' → logprob: -1.4308618307113647
    3. '
' → logprob: -2.5558619499206543
    4. '   ' → logprob: -2.8058619499206543
    5. ')' → logprob: -3.3058619499206543
    6. ' =' → logprob: -3.4308619499206543
    7. '```' → logprob: -3.5558619499206543
    8. ',' → logprob: -3.6808619499206543
    9. ' _' → logprob: -4.305861949920654
    10. '       ' → logprob: -4.805861949920654

Token 1617: 'imit' (ID: 8082)
  Prédit: 'imit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imit' → logprob: -0.007621653378009796
    2. 'imité' → logprob: -4.882621765136719
    3. 'IMIT' → logprob: -11.257621765136719
    4. 'imited' → logprob: -14.007621765136719
    5. 'limit' → logprob: -14.757621765136719
    6. 'im' → logprob: -14.882621765136719
    7. '   ' → logprob: -15.382621765136719
    8. 'imiter' → logprob: -16.13262176513672
    9. 'é' → logprob: -16.50762176513672
    10. '```' → logprob: -16.63262176513672

Token 1618: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002257902640849352
    2. 'é' → logprob: -6.377257823944092
    3. 'aires' → logprob: -7.877257823944092
    4. 'es' → logprob: -10.50225830078125
    5. 'ites' → logprob: -10.62725830078125
    6. 'it' → logprob: -10.75225830078125
    7. '```' → logprob: -10.75225830078125
    8. 'aux' → logprob: -11.50225830078125
    9. '   ' → logprob: -11.75225830078125
    10. 'isés' → logprob: -12.00225830078125

Token 1619: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5628299117088318
    2. '       ' → logprob: -2.1878299713134766
    3. '
' → logprob: -2.8128299713134766
    4. ':' → logprob: -2.9378299713134766
    5. ':
' → logprob: -3.6878299713134766
    6. '            
' → logprob: -3.6878299713134766
    7. ')' → logprob: -3.8128299713134766
    8. ',' → logprob: -4.187829971313477
    9. 'for' → logprob: -4.187829971313477
    10. ' for' → logprob: -4.437829971313477

Token 1620: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.552466630935669
    2. ' ' → logprob: -1.427466630935669
    3. '1' → logprob: -2.427466630935669
    4. ''' → logprob: -3.302466630935669
    5. ')' → logprob: -3.427466630935669
    6. '{' → logprob: -5.30246639251709
    7. ' )' → logprob: -5.55246639251709
    8. '[' → logprob: -5.55246639251709
    9. 'b' → logprob: -6.17746639251709
    10. ' [' → logprob: -6.55246639251709

Token 1621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.75
    3. ')' → logprob: -17.125
    4. '000' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. '    ' → logprob: -18.0
    7. '```' → logprob: -18.0
    8. '
' → logprob: -18.125
    9. '       ' → logprob: -18.125
    10. ',' → logprob: -18.25

Token 1622: ' y' (ID: 342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17449438571929932
    2. ',' → logprob: -2.0494942665100098
    3. '),' → logprob: -4.67449426651001
    4. ' )' → logprob: -4.92449426651001
    5. 's' → logprob: -5.04949426651001
    6. ')s' → logprob: -5.67449426651001
    7. ' ,' → logprob: -6.79949426651001
    8. '):
' → logprob: -6.92449426651001
    9. '   ' → logprob: -7.17449426651001
    10. ')
' → logprob: -8.299494743347168

Token 1623: 'ens' (ID: 696)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -8.006006828509271e-05
    2. 'ens' → logprob: -9.750080108642578
    3. '
' → logprob: -12.125080108642578
    4. ')' → logprob: -12.250080108642578
    5. '[' → logprob: -13.000080108642578
    6. '```' → logprob: -13.625080108642578
    7. '-en' → logprob: -14.125080108642578
    8. '   ' → logprob: -14.500080108642578
    9. ''en' → logprob: -14.750080108642578
    10. '\' → logprob: -14.750080108642578

Token 1624: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053240079432725906
    2. ',' → logprob: -3.0532400608062744
    3. ')
' → logprob: -6.6782402992248535
    4. ' )' → logprob: -7.0532402992248535
    5. '):
' → logprob: -7.6782402992248535
    6. '),' → logprob: -7.9282402992248535
    7. '
' → logprob: -8.428239822387695
    8. ':' → logprob: -8.428239822387695
    9. '   ' → logprob: -8.428239822387695
    10. '):' → logprob: -8.553239822387695

Token 1625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005937820533290505
    2. '            
' → logprob: -7.625593662261963
    3. '
' → logprob: -9.875594139099121
    4. ',' → logprob: -11.000594139099121
    5. '       ' → logprob: -12.125594139099121
    6. ' 
' → logprob: -12.250594139099121
    7. '               ' → logprob: -12.375594139099121
    8. '```' → logprob: -12.375594139099121
    9. '            ' → logprob: -12.875594139099121
    10. '           
' → logprob: -13.125594139099121

Token 1626: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04633065685629845
    2. ' for' → logprob: -4.171330451965332
    3. 'coins' → logprob: -4.421330451965332
    4. ' coins' → logprob: -5.046330451965332
    5. 'for' → logprob: -5.296330451965332
    6. '            
' → logprob: -6.671330451965332
    7. '
' → logprob: -6.921330451965332
    8. ' max' → logprob: -7.546330451965332
    9. '```' → logprob: -7.546330451965332
    10. '       ' → logprob: -7.671330451965332

Token 1627: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010220995172858238
    2. ' for' → logprob: -5.760221004486084
    3. 'for' → logprob: -6.010221004486084
    4. 'coins' → logprob: -6.635221004486084
    5. '       ' → logprob: -7.010221004486084
    6. '            
' → logprob: -7.635221004486084
    7. '
' → logprob: -7.635221004486084
    8. ' coins' → logprob: -8.385220527648926
    9. '#' → logprob: -8.760220527648926
    10. '```' → logprob: -9.010220527648926

Token 1628: ' composer' (ID: 60929)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.046626970171928406
    2. 'p' → logprob: -3.7966270446777344
    3. ' payer' → logprob: -4.296627044677734
    4. 'pay' → logprob: -6.296627044677734
    5. 'don' → logprob: -6.296627044677734
    6. '       ' → logprob: -6.421627044677734
    7. '#' → logprob: -7.421627044677734
    8. 'acheter' → logprob: -7.546627044677734
    9. '   ' → logprob: -7.671627044677734
    10. 'for' → logprob: -7.671627044677734

Token 1629: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.0009455680847168
    2. 'x' → logprob: -1.6259455680847168
    3. 'le' → logprob: -1.8759455680847168
    4. '           ' → logprob: -2.125945568084717
    5. 'l' → logprob: -3.375945568084717
    6. ' la' → logprob: -3.500945568084717
    7. ' le' → logprob: -4.250945568084717
    8. 'coins' → logprob: -4.250945568084717
    9. 'une' → logprob: -4.500945568084717
    10. 'les' → logprob: -4.875945568084717

Token 1630: ' montant' (ID: 72364)
  Prédit: 'mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mont' → logprob: -0.7072327136993408
    2. 'pai' → logprob: -1.4572327136993408
    3. 'payment' → logprob: -2.582232713699341
    4. ' montant' → logprob: -2.707232713699341
    5. 'pay' → logprob: -3.082232713699341
    6. 'amount' → logprob: -3.707232713699341
    7. '```' → logprob: -4.207232475280762
    8. ' paiement' → logprob: -4.707232475280762
    9. 'paid' → logprob: -4.707232475280762
    10. 'payer' → logprob: -5.457232475280762

Token 1631: ' donné' (ID: 52079)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.638709545135498
    2. 'd' → logprob: -1.763709545135498
    3. ' à' → logprob: -1.888709545135498
    4. '_d' → logprob: -2.013709545135498
    5. ' donné' → logprob: -2.513709545135498
    6. '   ' → logprob: -2.763709545135498
    7. '           ' → logprob: -2.888709545135498
    8. 'don' → logprob: -3.013709545135498
    9. '_' → logprob: -3.638709545135498
    10. '            
' → logprob: -4.638709545135498

Token 1632: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006554440129548311
    2. '            
' → logprob: -5.50655460357666
    3. ',' → logprob: -7.13155460357666
    4. '
' → logprob: -7.38155460357666
    5. '            ' → logprob: -9.00655460357666
    6. ')' → logprob: -9.00655460357666
    7. '       ' → logprob: -9.13155460357666
    8. '               ' → logprob: -9.13155460357666
    9. ' 
' → logprob: -9.88155460357666
    10. ' (' → logprob: -9.88155460357666

Token 1633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011403311509639025
    2. '```' → logprob: -9.750114440917969
    3. '            
' → logprob: -10.625114440917969
    4. '               ' → logprob: -11.750114440917969
    5. '
' → logprob: -11.750114440917969
    6. 'for' → logprob: -12.375114440917969
    7. '       ' → logprob: -12.375114440917969
    8. '		' → logprob: -13.625114440917969
    9. ' for' → logprob: -13.750114440917969
    10. '                   ' → logprob: -14.125114440917969

Token 1634: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00780251482501626
    2. ' for' → logprob: -5.382802486419678
    3. 'for' → logprob: -6.882802486419678
    4. ' #' → logprob: -8.132802963256836
    5. '            
' → logprob: -8.132802963256836
    6. ' coins' → logprob: -8.257802963256836
    7. '
' → logprob: -8.382802963256836
    8. 'coins' → logprob: -8.507802963256836
    9. '#' (adapté à ' #') → logprob: -8.757802963256836
    10. '```' → logprob: -8.757802963256836

Token 1635: ' Convert' (ID: 15629)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11178421229124069
    2. ' for' → logprob: -2.7367842197418213
    3. 'for' → logprob: -3.8617842197418213
    4. 'coins' → logprob: -5.361783981323242
    5. ' coins' → logprob: -5.736783981323242
    6. ' max' → logprob: -6.236783981323242
    7. ' #' → logprob: -6.736783981323242
    8. '#' → logprob: -6.736783981323242
    9. ' CO' → logprob: -6.736783981323242
    10. '```' → logprob: -6.986783981323242

Token 1636: ' coin' (ID: 22179)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21443648636341095
    2. 'coins' → logprob: -2.5894365310668945
    3. ' coins' → logprob: -3.0894365310668945
    4. 'num' → logprob: -3.0894365310668945
    5. 'current' → logprob: -4.8394365310668945
    6. '#' → logprob: -5.4644365310668945
    7. '   ' → logprob: -5.7144365310668945
    8. '       ' → logprob: -6.3394365310668945
    9. 'ent' → logprob: -6.9644365310668945
    10. 'a' → logprob: -7.4644365310668945

Token 1637: ' tuple' (ID: 31311)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.1059588193893433
    2. '_types' → logprob: -1.3559588193893433
    3. 's' → logprob: -1.6059588193893433
    4. '           ' → logprob: -2.230958938598633
    5. '_lst' → logprob: -3.605958938598633
    6. '_cnt' → logprob: -3.980958938598633
    7. '_count' → logprob: -4.480958938598633
    8. '   ' → logprob: -4.980958938598633
    9. 'count' → logprob: -5.355958938598633
    10. 'nts' → logprob: -5.605958938598633

Token 1638: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01445599552243948
    2. '           ' → logprob: -5.264455795288086
    3. '=' → logprob: -5.639455795288086
    4. '_co' → logprob: -5.889455795288086
    5. '_to' → logprob: -7.014455795288086
    6. '   ' → logprob: -7.764455795288086
    7. '_list' → logprob: -7.889455795288086
    8. 'coins' → logprob: -8.139455795288086
    9. '_current' → logprob: -8.764455795288086
    10. '_lst' → logprob: -9.014455795288086

Token 1639: ' dict' (ID: 11878)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3559163808822632
    2. 'dict' → logprob: -1.7309163808822632
    3. 'coins' → logprob: -2.1059165000915527
    4. 'co' → logprob: -8.480916023254395
    5. 'liste' → logprob: -9.355916023254395
    6. '{' → logprob: -9.480916023254395
    7. 'lists' → logprob: -9.730916023254395
    8. 'lst' → logprob: -10.355916023254395
    9. ' coins' → logprob: -10.855916023254395
    10. '[' → logprob: -10.855916023254395

Token 1640: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10936951637268066
    2. 'coins' → logprob: -2.4843695163726807
    3. 'current' → logprob: -4.359369277954102
    4. 'curr' → logprob: -5.109369277954102
    5. ' coins' → logprob: -7.609369277954102
    6. 'cur' → logprob: -7.734369277954102
    7. 'coin' → logprob: -8.734369277954102
    8. 'available' → logprob: -9.609369277954102
    9. 'co' → logprob: -9.984369277954102
    10. ' current' → logprob: -10.109369277954102

Token 1641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003800788428634405
    2. 'coins' → logprob: -5.628800868988037
    3. 'current' → logprob: -8.878800392150879
    4. ' coins' → logprob: -10.128800392150879
    5. 'curr' → logprob: -11.878800392150879
    6. '       ' → logprob: -12.878800392150879
    7. '            
' → logprob: -12.878800392150879
    8. '   ' → logprob: -13.628800392150879
    9. '```' → logprob: -13.628800392150879
    10. 'coin' → logprob: -14.003800392150879

Token 1642: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' (adapté à ' coins') → logprob: -0.13299673795700073
    2. 'curr' → logprob: -3.1329967975616455
    3. 'current' → logprob: -3.2579967975616455
    4. '           ' → logprob: -3.8829967975616455
    5. 'cur' → logprob: -3.8829967975616455
    6. ' coins' → logprob: -7.632996559143066
    7. 'coin' → logprob: -8.382996559143066
    8. 'old' → logprob: -9.382996559143066
    9. '```' → logprob: -9.382996559143066
    10. 'prev' → logprob: -9.382996559143066

Token 1643: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.12327396124601364
    2. '=' → logprob: -2.3732738494873047
    3. 'dict' → logprob: -4.373273849487305
    4. ' =' → logprob: -4.623273849487305
    5. 'Dict' → logprob: -9.248273849487305
    6. '   ' → logprob: -9.248273849487305
    7. '=dict' → logprob: -10.123273849487305
    8. 'd' → logprob: -10.248273849487305
    9. '_d' → logprob: -10.873273849487305
    10. 'current' → logprob: -11.248273849487305

Token 1644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. 'coins' → logprob: -16.474077224731445
    4. ')' → logprob: -16.599077224731445
    5. ' ' → logprob: -16.724077224731445
    6. '   ' → logprob: -16.849077224731445
    7. '=
' → logprob: -17.099077224731445
    8. '(co' → logprob: -18.099077224731445
    9. '```' → logprob: -18.099077224731445
    10. '＝' → logprob: -18.474077224731445

Token 1645: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00021319588995538652
    2. ' coins' → logprob: -8.500213623046875
    3. '{' → logprob: -11.625213623046875
    4. 'dict' → logprob: -14.125213623046875
    5. '   ' → logprob: -16.875213623046875
    6. 'co' → logprob: -18.375213623046875
    7. ' {' → logprob: -19.250213623046875
    8. '{
' → logprob: -19.625213623046875
    9. '{'' → logprob: -19.625213623046875
    10. 'coin' → logprob: -19.625213623046875

Token 1646: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.31848567724227905
    2. '_dict' → logprob: -1.3184857368469238
    3. '_tpl' → logprob: -5.318485736846924
    4. 'tuple' → logprob: -8.818485260009766
    5. 'dict' → logprob: -9.693485260009766
    6. 'tpl' → logprob: -10.318485260009766
    7. '_to' → logprob: -10.693485260009766
    8. '=' → logprob: -10.943485260009766
    9. ' =' → logprob: -11.443485260009766
    10. 'Tuple' → logprob: -13.068485260009766

Token 1647: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.026940245181322098
    2. '(co' → logprob: -4.52694034576416
    3. '=' → logprob: -4.90194034576416
    4. ' =' → logprob: -5.15194034576416
    5. '_dict' → logprob: -6.77694034576416
    6. 'dict' → logprob: -7.77694034576416
    7. ')' → logprob: -8.27694034576416
    8. '_co' → logprob: -8.65194034576416
    9. '   ' → logprob: -9.02694034576416
    10. '           ' → logprob: -9.52694034576416

Token 1648: '_dict' (ID: 11295)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.0001158211671281606
    2. '(co' → logprob: -9.875115394592285
    3. 'coins' → logprob: -10.000115394592285
    4. '_dict' → logprob: -11.625115394592285
    5. 'co' → logprob: -12.750115394592285
    6. ' dict' → logprob: -13.250115394592285
    7. 'def' → logprob: -13.250115394592285
    8. 'Dict' → logprob: -13.250115394592285
    9. '(dict' → logprob: -14.125115394592285
    10. 'dic' → logprob: -15.375115394592285

Token 1649: '(co' (ID: 41772)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.15493176877498627
    2. '(co' → logprob: -2.0299317836761475
    3. ' coins' → logprob: -4.779931545257568
    4. '           ' → logprob: -5.779931545257568
    5. 'co' → logprob: -7.529931545257568
    6. '       ' → logprob: -9.654932022094727
    7. ')' → logprob: -10.529932022094727
    8. '   ' → logprob: -11.654932022094727
    9. '               ' → logprob: -11.779932022094727
    10. '            ' → logprob: -12.029932022094727

Token 1650: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -9.960946772480384e-05
    2. 'in' → logprob: -10.250099182128906
    3. 'coins' → logprob: -10.625099182128906
    4. 'ils' → logprob: -11.375099182128906
    5. '(ins' → logprob: -11.625099182128906
    6. 'ns' → logprob: -12.375099182128906
    7. 'i' → logprob: -13.375099182128906
    8. '
' → logprob: -13.500099182128906
    9. '_ins' → logprob: -13.500099182128906
    10. '(' → logprob: -13.625099182128906

Token 1651: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -0.0002690840628929436
    2. 'tpl' → logprob: -8.500268936157227
    3. ')' → logprob: -10.125268936157227
    4. 'pl' → logprob: -11.750268936157227
    5. '_t' → logprob: -13.000268936157227
    6. ')
' → logprob: -13.000268936157227
    7. '   ' → logprob: -13.250268936157227
    8. 'plt' → logprob: -13.250268936157227
    9. 'Tpl' → logprob: -13.375268936157227
    10. '_lst' → logprob: -13.875268936157227

Token 1652: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3408973217010498
    2. ')' → logprob: -1.5908973217010498
    3. ')
' → logprob: -2.46589732170105
    4. ')
' → logprob: -9.840897560119629
    5. ')

' → logprob: -9.840897560119629
    6. '            
' → logprob: -10.340897560119629
    7. '
' → logprob: -10.465897560119629
    8. '       ' → logprob: -12.590897560119629
    9. '):
' → logprob: -12.590897560119629
    10. ',' → logprob: -12.715897560119629

Token 1653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001831565605243668
    2. '
' → logprob: -8.87518310546875
    3. '       ' → logprob: -11.12518310546875
    4. '            
' → logprob: -11.12518310546875
    5. 'for' → logprob: -11.50018310546875
    6. '#' → logprob: -13.62518310546875
    7. '```' → logprob: -13.62518310546875
    8. '               ' → logprob: -15.00018310546875
    9. 'import' → logprob: -15.00018310546875
    10. ' for' → logprob: -15.75018310546875

Token 1654: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008235353976488113
    2. 'for' → logprob: -5.008235454559326
    3. 'max' → logprob: -7.508235454559326
    4. '#' (adapté à ' #') → logprob: -7.633235454559326
    5. '
' → logprob: -9.008234977722168
    6. '       ' → logprob: -9.383234977722168
    7. ' for' → logprob: -9.383234977722168
    8. '            
' → logprob: -9.508234977722168
    9. 'possible' → logprob: -9.758234977722168
    10. '   ' → logprob: -11.508234977722168

Token 1655: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26471182703971863
    2. '           ' → logprob: -1.639711856842041
    3. '#' → logprob: -3.389711856842041
    4. 'max' → logprob: -5.514711856842041
    5. ' for' → logprob: -8.264711380004883
    6. 'possible' → logprob: -8.264711380004883
    7. 'min' → logprob: -9.639711380004883
    8. '       ' → logprob: -9.889711380004883
    9. '   ' → logprob: -10.014711380004883
    10. '            
' → logprob: -10.889711380004883

Token 1656: ' montant' (ID: 72364)
  Prédit: '_pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.7762149572372437
    2. '_given' → logprob: -1.0262149572372437
    3. '_payment' → logprob: -2.276215076446533
    4. '_coin' → logprob: -3.526215076446533
    5. '_price' → logprob: -4.276215076446533
    6. '_paid' → logprob: -4.776215076446533
    7. '_amount' → logprob: -4.901215076446533
    8. 'pay' → logprob: -5.401215076446533
    9. '_sum' → logprob: -5.901215076446533
    10. '_g' → logprob: -6.401215076446533

Token 1657: ' donné' (ID: 52079)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1099505424499512
    2. ' =' → logprob: -1.7349505424499512
    3. 'pay' → logprob: -2.234950542449951
    4. '_pay' → logprob: -2.609950542449951
    5. 'à' → logprob: -2.734950542449951
    6. 'd' → logprob: -2.859950542449951
    7. '_p' → logprob: -3.484950542449951
    8. 'don' → logprob: -3.484950542449951
    9. '=' → logprob: -3.734950542449951
    10. 'a' → logprob: -3.984950542449951

Token 1658: ' considéré' (ID: 136279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3286733329296112
    2. '           ' → logprob: -1.3286733627319336
    3. '=' → logprob: -4.328673362731934
    4. 'max' → logprob: -7.828673362731934
    5. 'for' → logprob: -8.203673362731934
    6. '   ' → logprob: -8.203673362731934
    7. '_possible' → logprob: -8.328673362731934
    8. '_given' → logprob: -8.828673362731934
    9. 'possible' → logprob: -8.953673362731934
    10. '=max' → logprob: -9.203673362731934

Token 1659: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9458557963371277
    2. ' =' → logprob: -1.0708558559417725
    3. '           ' → logprob: -1.3208558559417725
    4. 'for' → logprob: -7.695855617523193
    5. '=max' → logprob: -7.945855617523193
    6. 'max' → logprob: -8.195856094360352
    7. '       ' → logprob: -8.195856094360352
    8. ',' → logprob: -8.695856094360352
    9. '   ' → logprob: -9.320856094360352
    10. '500' → logprob: -9.695856094360352

Token 1660: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.11425625532865524
    2. '150' → logprob: -3.4892561435699463
    3. '100' → logprob: -3.7392561435699463
    4. '500' → logprob: -3.9892561435699463
    5. '           ' → logprob: -4.364256381988525
    6. '600' → logprob: -4.739256381988525
    7. 'max' → logprob: -5.364256381988525
    8. '200' → logprob: -5.989256381988525
    9. ' price' → logprob: -6.239256381988525
    10. '               ' → logprob: -7.239256381988525

Token 1661: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5968544483184814
    2. ' +' → logprob: -0.8468544483184814
    3. '           ' → logprob: -4.346854209899902
    4. '               ' → logprob: -5.846854209899902
    5. ',' → logprob: -6.096854209899902
    6. '
' → logprob: -6.846854209899902
    7. '                   ' → logprob: -7.721854209899902
    8. ' =' → logprob: -8.346854209899902
    9. '   ' → logprob: -8.846854209899902
    10. '       ' → logprob: -8.971854209899902

Token 1662: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.520121157169342
    2. '500' → logprob: -1.1451210975646973
    3. '150' → logprob: -2.8951210975646973
    4. '200' → logprob: -3.6451210975646973
    5. '300' → logprob: -6.020121097564697
    6. '400' → logprob: -7.145121097564697
    7. '(' → logprob: -7.395121097564697
    8. '250' → logprob: -7.520121097564697
    9. '10' → logprob: -7.895121097564697
    10. '550' → logprob: -8.020121574401855

Token 1663: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.5576871633529663
    2. '100' → logprob: -1.4326871633529663
    3. '200' → logprob: -2.682687282562256
    4. '400' → logprob: -3.307687282562256
    5. '300' → logprob: -3.432687282562256
    6. '150' → logprob: -3.682687282562256
    7. '450' → logprob: -4.807687282562256
    8. '(' → logprob: -4.932687282562256
    9. '550' → logprob: -5.932687282562256
    10. '350' → logprob: -6.307687282562256

Token 1664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015536671271547675
    2. '
' → logprob: -7.001553535461426
    3. ' +' → logprob: -8.751553535461426
    4. '+' → logprob: -9.126553535461426
    5. '            
' → logprob: -9.251553535461426
    6. '1' → logprob: -10.126553535461426
    7. '           ' → logprob: -10.626553535461426
    8. '               ' → logprob: -10.751553535461426
    9. '```' → logprob: -10.876553535461426
    10. ':
' → logprob: -10.876553535461426

Token 1665: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3895527124404907
    2. '           ' → logprob: -1.8895527124404907
    3. '+' → logprob: -2.264552593231201
    4. '
' → logprob: -3.014552593231201
    5. '0' → logprob: -4.514552593231201
    6. '               ' → logprob: -6.389552593231201
    7. ':
' → logprob: -6.514552593231201
    8. '*' → logprob: -7.264552593231201
    9. ' *' → logprob: -7.389552593231201
    10. ':' → logprob: -7.514552593231201

Token 1666: 'pai' (ID: 144917)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0016030559781938791
    2. ' ' → logprob: -7.626603126525879
    3. ')' → logprob: -7.876603126525879
    4. '   ' → logprob: -8.251603126525879
    5. '1' → logprob: -8.876603126525879
    6. '500' → logprob: -9.376603126525879
    7. '
' → logprob: -9.626603126525879
    8. '           ' → logprob: -10.626603126525879
    9. ')
' → logprob: -10.751603126525879
    10. '0' → logprob: -10.751603126525879

Token 1667: 'ement' (ID: 962)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3275298774242401
    2. ')' → logprob: -1.9525299072265625
    3. '00' → logprob: -2.7025299072265625
    4. 'nt' → logprob: -4.4525299072265625
    5. ')
' → logprob: -4.5775299072265625
    6. '000' → logprob: -4.8275299072265625
    7. 't' → logprob: -5.5775299072265625
    8. '#' → logprob: -5.7025299072265625
    9. 'e' → logprob: -5.8275299072265625
    10. '   ' → logprob: -6.0775299072265625

Token 1668: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17443522810935974
    2. ' possible' → logprob: -3.2994351387023926
    3. 'possible' → logprob: -3.7994351387023926
    4. '_possible' → logprob: -4.174435138702393
    5. ' +' → logprob: -4.299435138702393
    6. '+' → logprob: -4.299435138702393
    7. ' )' → logprob: -4.424435138702393
    8. 'max' → logprob: -4.924435138702393
    9. '_max' → logprob: -4.924435138702393
    10. ' supplémentaire' → logprob: -5.049435138702393

Token 1669: ' ' (ID: 220)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.06095002964138985
    2. ' billet' → logprob: -2.9359500408172607
    3. 'ticket' → logprob: -6.310949802398682
    4. '100' → logprob: -6.560949802398682
    5. 'bill' → logprob: -7.185949802398682
    6. ' bil' → logprob: -7.685949802398682
    7. ' billets' → logprob: -8.43595027923584
    8. 'b' → logprob: -8.56095027923584
    9. 'un' → logprob: -8.81095027923584
    10. ' ' → logprob: -9.18595027923584

Token 1670: '1' (ID: 16)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.18721219897270203
    2. ' billet' → logprob: -2.1872122287750244
    3. '100' → logprob: -3.4372122287750244
    4. 'ticket' → logprob: -5.187211990356445
    5. ' billets' → logprob: -5.687211990356445
    6. '1' → logprob: -5.812211990356445
    7. ' bil' → logprob: -6.187211990356445
    8. 'un' → logprob: -6.312211990356445
    9. 'piece' → logprob: -6.312211990356445
    10. 'bill' → logprob: -6.687211990356445

Token 1671: ' billet' (ID: 117706)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.14738015830516815
    2. ' billet' → logprob: -2.5223801136016846
    3. ')' → logprob: -4.022380352020264
    4. '0' → logprob: -4.897380352020264
    5. 'bil' → logprob: -5.147380352020264
    6. '00' → logprob: -5.522380352020264
    7. 'ticket' → logprob: -6.022380352020264
    8. '   ' → logprob: -6.272380352020264
    9. 'piece' → logprob: -6.272380352020264
    10. 's' → logprob: -6.397380352020264

Token 1672: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08372301608324051
    2. ' +' → logprob: -3.8337230682373047
    3. ')+' → logprob: -3.8337230682373047
    4. '+' → logprob: -4.083723068237305
    5. ')
' → logprob: -4.708723068237305
    6. ',' → logprob: -6.333723068237305
    7. '100' → logprob: -6.583723068237305
    8. '   ' → logprob: -6.708723068237305
    9. '),' → logprob: -6.958723068237305
    10. 's' → logprob: -7.208723068237305

Token 1673: '100' (ID: 1353)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31521037220954895
    2. 'au' → logprob: -2.8152103424072266
    3. '100' → logprob: -3.3152103424072266
    4. 'max' → logprob: -3.6902103424072266
    5. 'minimum' → logprob: -3.6902103424072266
    6. 'sup' → logprob: -3.9402103424072266
    7. 'ou' → logprob: -4.065210342407227
    8. 'plus' → logprob: -4.315210342407227
    9. ')
' → logprob: -4.315210342407227
    10. '),' → logprob: -4.815210342407227

Token 1674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006841588299721479
    2. ')' → logprob: -5.256841659545898
    3. ')
' → logprob: -7.006841659545898
    4. '   ' → logprob: -7.631841659545898
    5. ',' → logprob: -9.506841659545898
    6. '```' → logprob: -10.756841659545898
    7. 'yen' → logprob: -11.006841659545898
    8. '),' → logprob: -11.256841659545898
    9. '):
' → logprob: -11.506841659545898
    10. '       ' → logprob: -11.756841659545898

Token 1675: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031408123672008514
    2. 'yen' → logprob: -4.531408309936523
    3. ')
' → logprob: -5.531408309936523
    4. ' )' → logprob: -5.656408309936523
    5. ')+' → logprob: -5.656408309936523
    6. ' +' → logprob: -6.031408309936523
    7. '   ' → logprob: -6.531408309936523
    8. ')\' → logprob: -6.656408309936523
    9. '),' → logprob: -7.031408309936523
    10. ' yen' → logprob: -7.156408309936523

Token 1676: ' pas' (ID: 2173)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.23286524415016174
    2. 'coins' → logprob: -2.732865333557129
    3. ' ' → logprob: -2.982865333557129
    4. ' coins' → logprob: -3.232865333557129
    5. '100' → logprob: -3.357865333557129
    6. 'coin' → logprob: -5.482865333557129
    7. 'pieces' → logprob: -5.982865333557129
    8. '1' → logprob: -6.482865333557129
    9. ' coin' → logprob: -6.482865333557129
    10. ' pieces' → logprob: -6.732865333557129

Token 1677: ' trop' (ID: 14765)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3668965101242065
    2. 'plus' → logprob: -2.116896629333496
    3. ')' → logprob: -2.241896629333496
    4. '100' → logprob: -2.491896629333496
    5. 's' → logprob: -2.491896629333496
    6. ' plus' → logprob: -2.741896629333496
    7. '+' → logprob: -2.991896629333496
    8. ' de' → logprob: -3.241896629333496
    9. 'd' → logprob: -3.366896629333496
    10. 'import' → logprob: -3.866896629333496

Token 1678: ' énorme' (ID: 132565)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.3685765266418457
    2. ' large' → logprob: -1.6185765266418457
    3. 'grand' → logprob: -3.6185765266418457
    4. ' grand' → logprob: -4.118576526641846
    5. 'de' → logprob: -4.618576526641846
    6. 'plus' → logprob: -4.868576526641846
    7. 'cher' → logprob: -4.993576526641846
    8. 'ex' → logprob: -5.243576526641846
    9. 'larg' → logprob: -5.368576526641846
    10. 'd' → logprob: -5.618576526641846

Token 1679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6189292669296265
    2. ')
' → logprob: -0.8689292669296265
    3. '+' → logprob: -4.618929386138916
    4. ')+' → logprob: -5.368929386138916
    5. 'de' → logprob: -5.868929386138916
    6. '100' → logprob: -6.118929386138916
    7. ')\' → logprob: -6.368929386138916
    8. 'limit' → logprob: -6.493929386138916
    9. '):
' → logprob: -6.618929386138916
    10. ')
' → logprob: -6.618929386138916

Token 1680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002166317543014884
    2. 'max' → logprob: -7.377166271209717
    3. '
' → logprob: -7.877166271209717
    4. 'for' → logprob: -8.127166748046875
    5. ' for' → logprob: -8.752166748046875
    6. '```' → logprob: -8.752166748046875
    7. '       ' → logprob: -9.127166748046875
    8. ' max' → logprob: -9.252166748046875
    9. ',' → logprob: -9.502166748046875
    10. ' +' → logprob: -9.877166748046875

Token 1681: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5246610641479492
    2. 'max' → logprob: -1.0246610641479492
    3. 'for' → logprob: -3.024661064147949
    4. ' max' → logprob: -8.39966106414795
    5. ' for' → logprob: -8.77466106414795
    6. '       ' → logprob: -9.02466106414795
    7. 'limit' → logprob: -9.39966106414795
    8. '   ' → logprob: -9.64966106414795
    9. '
' → logprob: -10.27466106414795
    10. '            
' → logprob: -11.64966106414795

Token 1682: ' On' (ID: 2160)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.30456480383872986
    2. '           ' → logprob: -1.8045648336410522
    3. 'for' → logprob: -2.4295647144317627
    4. 'min' → logprob: -5.929564952850342
    5. '
' → logprob: -6.304564952850342
    6. 'limit' → logprob: -6.554564952850342
    7. ' for' → logprob: -7.054564952850342
    8. 'range' → logprob: -7.429564952850342
    9. '100' → logprob: -7.554564952850342
    10. ' max' → logprob: -7.679564952850342

Token 1683: ' peut' (ID: 9216)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0480772256851196
    2. 'continue' → logprob: -1.2980772256851196
    3. 'for' → logprob: -1.5480772256851196
    4. ' continue' → logprob: -2.67307710647583
    5. ' for' → logprob: -3.79807710647583
    6. ' range' → logprob: -3.92307710647583
    7. 'contin' → logprob: -4.79807710647583
    8. '           ' → logprob: -4.92307710647583
    9. '       ' → logprob: -5.42307710647583
    10. '#' → logprob: -5.79807710647583

Token 1684: ' aller' (ID: 18383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7851465940475464
    2. '   ' → logprob: -2.035146713256836
    3. 'range' → logprob: -2.035146713256836
    4. 'contin' → logprob: -2.160146713256836
    5. 'lim' → logprob: -2.660146713256836
    6. 'continue' → logprob: -2.660146713256836
    7. '```' → logprob: -2.910146713256836
    8. 'limit' → logprob: -3.035146713256836
    9. '       ' → logprob: -3.285146713256836
    10. ' continuer' → logprob: -3.785146713256836

Token 1685: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.24318017065525055
    2. ' jusqu' → logprob: -1.7431801557540894
    3. '           ' → logprob: -3.618180274963379
    4. 'up' → logprob: -5.493180274963379
    5. 'de' → logprob: -5.493180274963379
    6. 'from' → logprob: -6.368180274963379
    7. ' jusque' → logprob: -6.868180274963379
    8. 'range' → logprob: -7.743180274963379
    9. 'en' → logprob: -7.868180274963379
    10. '```' → logprob: -8.118180274963379

Token 1686: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8279531598091125
    2. '           ' → logprob: -1.7029531002044678
    3. ' à' → logprob: -1.7029531002044678
    4. 'à' → logprob: -2.4529531002044678
    5. 'price' → logprob: -3.0779531002044678
    6. '               ' → logprob: -4.327953338623047
    7. '   ' → logprob: -4.952953338623047
    8. ' jusqu' → logprob: -4.952953338623047
    9. '       ' → logprob: -5.077953338623047
    10. ' =' → logprob: -5.202953338623047

Token 1687: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0017715697176754475
    2. ' price' → logprob: -7.376771450042725
    3. '150' → logprob: -7.501771450042725
    4. '200' → logprob: -8.376771926879883
    5. ' ' → logprob: -9.376771926879883
    6. '100' → logprob: -9.626771926879883
    7. '   ' → logprob: -9.751771926879883
    8. '500' → logprob: -10.376771926879883
    9. '
' → logprob: -10.501771926879883
    10. '  ' → logprob: -11.126771926879883

Token 1688: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11420265585184097
    2. ' +' → logprob: -2.2392027378082275
    3. '*' → logprob: -7.739202499389648
    4. '           ' → logprob: -7.989202499389648
    5. '       ' → logprob: -9.364202499389648
    6. '
' → logprob: -9.489202499389648
    7. '100' → logprob: -9.739202499389648
    8. ',' → logprob: -9.739202499389648
    9. '               ' → logprob: -9.739202499389648
    10. '+
' → logprob: -10.114202499389648

Token 1689: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.008837451227009296
    2. '500' → logprob: -5.0088372230529785
    3. '200' → logprob: -6.7588372230529785
    4. '150' → logprob: -7.1338372230529785
    5. ' ' → logprob: -10.508837699890137
    6. '
' → logprob: -10.633837699890137
    7. '999' → logprob: -10.758837699890137
    8. '(' → logprob: -11.383837699890137
    9. '300' → logprob: -11.633837699890137
    10. '10' → logprob: -11.633837699890137

Token 1690: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0063621969893574715
    2. '200' → logprob: -5.881361961364746
    3. '500' → logprob: -6.256361961364746
    4. '150' → logprob: -6.506361961364746
    5. '300' → logprob: -10.631361961364746
    6. '
' → logprob: -10.756361961364746
    7. '(' → logprob: -11.131361961364746
    8. '110' → logprob: -11.256361961364746
    9. '10' → logprob: -11.506361961364746
    10. '999' → logprob: -11.506361961364746

Token 1691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000285530521068722
    2. '00' → logprob: -8.500285148620605
    3. '000' → logprob: -11.250285148620605
    4. ',' → logprob: -11.375285148620605
    5. '#' → logprob: -11.625285148620605
    6. ' ' → logprob: -12.125285148620605
    7. '1' → logprob: -12.125285148620605
    8. '           ' → logprob: -12.125285148620605
    9. '
' → logprob: -12.375285148620605
    10. '+' → logprob: -12.500285148620605

Token 1692: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7632438540458679
    2. '+' → logprob: -1.2632439136505127
    3. ' +' → logprob: -2.1382439136505127
    4. '       ' → logprob: -2.1382439136505127
    5. '
' → logprob: -4.638243675231934
    6. ',' → logprob: -6.138243675231934
    7. 'for' → logprob: -6.638243675231934
    8. ':' → logprob: -8.138243675231934
    9. '   ' → logprob: -8.138243675231934
    10. '+
' → logprob: -8.388243675231934

Token 1693: 'car' (ID: 6830)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0011995165841653943
    2. '500' → logprob: -8.376199722290039
    3. ')' → logprob: -8.876199722290039
    4. '150' → logprob: -8.876199722290039
    5. ' ' → logprob: -9.126199722290039
    6. '200' → logprob: -9.251199722290039
    7. '   ' → logprob: -9.501199722290039
    8. '1' → logprob: -9.876199722290039
    9. '10' → logprob: -10.001199722290039
    10. '
' → logprob: -10.126199722290039

Token 1694: ' changer' (ID: 47099)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06790686398744583
    2. '500' → logprob: -3.5679068565368652
    3. ' ' → logprob: -3.9429068565368652
    4. 'coins' → logprob: -4.567906856536865
    5. ' coins' → logprob: -5.817906856536865
    6. '   ' → logprob: -7.192906856536865
    7. '1' → logprob: -7.567906856536865
    8. 'coin' → logprob: -7.567906856536865
    9. 'pieces' → logprob: -7.567906856536865
    10. '
' → logprob: -7.692906856536865

Token 1695: ' plus' (ID: 2932)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6541447639465332
    2. ' de' → logprob: -3.029144763946533
    3. ' ' → logprob: -3.154144763946533
    4. ' au' → logprob: -3.404144763946533
    5. 'de' → logprob: -3.529144763946533
    6. 'le' → logprob: -3.654144763946533
    7. 'au' → logprob: -3.779144763946533
    8. ' =' → logprob: -3.904144763946533
    9. '=' → logprob: -4.029144763946533
    10. '1' → logprob: -4.029144763946533

Token 1696: ' n' (ID: 297)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5650370121002197
    2. '100' → logprob: -2.4400370121002197
    3. '0' → logprob: -2.6900370121002197
    4. '
' → logprob: -3.0650370121002197
    5. ' que' → logprob: -3.0650370121002197
    6. '=' → logprob: -3.5650370121002197
    7. ' +' → logprob: -3.6900370121002197
    8. '1' → logprob: -3.8150370121002197
    9. 'que' → logprob: -4.065036773681641
    10. '   ' → logprob: -4.440036773681641

Token 1697: ''a' (ID: 10443)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.07743068039417267
    2. 'e' → logprob: -3.5774307250976562
    3. '=' → logprob: -4.077430725097656
    4. '+' → logprob: -5.202430725097656
    5. ''' → logprob: -5.327430725097656
    6. ''était' → logprob: -5.577430725097656
    7. '>' → logprob: -5.952430725097656
    8. ''importe' → logprob: -6.077430725097656
    9. 'est' → logprob: -6.327430725097656
    10. ''>' → logprob: -6.702430725097656

Token 1698: ' aucun' (ID: 41678)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.38750430941581726
    2. 'sense' → logprob: -1.6375043392181396
    3. '
' → logprob: -3.3875043392181396
    4. 'sens' → logprob: -3.6375043392181396
    5. '#' → logprob: -3.7625043392181396
    6. '```' → logprob: -4.5125041007995605
    7. 'a' → logprob: -5.6375041007995605
    8. 'un' → logprob: -5.7625041007995605
    9. 'o' → logprob: -5.7625041007995605
    10. 'ont' → logprob: -6.0125041007995605

Token 1699: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.535090982913971
    2. 'int' → logprob: -1.0350909233093262
    3. ' sens' → logprob: -3.160090923309326
    4. ' intérêt' → logprob: -4.160090923309326
    5. 'sense' → logprob: -7.910090923309326
    6. '
' → logprob: -8.785091400146484
    7. 'interest' → logprob: -9.285091400146484
    8. '_int' → logprob: -9.410091400146484
    9. ''intérêt' → logprob: -9.410091400146484
    10. ' ' → logprob: -9.660091400146484

Token 1700: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4139464795589447
    2. ')' → logprob: -1.413946509361267
    3. '           ' → logprob: -3.0389463901519775
    4. '),' → logprob: -3.7889463901519775
    5. ',' → logprob: -5.163946628570557
    6. '),
' → logprob: -5.163946628570557
    7. ' ici' → logprob: -5.788946628570557
    8. '):
' → logprob: -6.288946628570557
    9. ' pour' → logprob: -6.913946628570557
    10. ' )
' → logprob: -7.038946628570557

Token 1701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015984143828973174
    2. 'for' → logprob: -7.501598358154297
    3. ' for' → logprob: -7.501598358154297
    4. '       ' → logprob: -8.376598358154297
    5. '
' → logprob: -9.001598358154297
    6. ',' → logprob: -9.501598358154297
    7. '```' → logprob: -10.626598358154297
    8. '            
' → logprob: -11.001598358154297
    9. '               ' → logprob: -11.876598358154297
    10. '   ' → logprob: -12.501598358154297

Token 1702: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.524765133857727
    2. '           ' → logprob: -1.149765133857727
    3. ' for' → logprob: -2.3997650146484375
    4. '
' → logprob: -7.7747650146484375
    5. 'range' → logprob: -8.899765014648438
    6. 'max' → logprob: -9.274765014648438
    7. '            
' → logprob: -9.649765014648438
    8. '```' → logprob: -9.774765014648438
    9. '               ' → logprob: -11.274765014648438
    10. ',' → logprob: -11.524765014648438

Token 1703: ' Par' (ID: 3371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35184183716773987
    2. 'for' → logprob: -1.4768418073654175
    3. ' for' → logprob: -2.726841926574707
    4. '       ' → logprob: -6.851841926574707
    5. 'range' → logprob: -7.351841926574707
    6. '
' → logprob: -7.976841926574707
    7. '            
' → logprob: -8.601841926574707
    8. '   ' → logprob: -8.851841926574707
    9. '               ' → logprob: -9.101841926574707
    10. 'max' → logprob: -9.226841926574707

Token 1704: ' ailleurs' (ID: 59276)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8847094178199768
    2. 'i' → logprob: -1.634709358215332
    3. 'for' → logprob: -1.759709358215332
    4. 't' → logprob: -2.634709358215332
    5. 'max' → logprob: -3.634709358215332
    6. 'def' → logprob: -4.259709358215332
    7. 'fois' → logprob: -4.384709358215332
    8. '1' → logprob: -4.384709358215332
    9. 'e' → logprob: -4.759709358215332
    10. 'ce' → logprob: -4.884709358215332

Token 1705: ',' (ID: 11)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' price' → logprob: -1.3205474615097046
    2. 'price' → logprob: -1.4455474615097046
    3. 'range' → logprob: -1.5705474615097046
    4. ' range' → logprob: -2.195547580718994
    5. ' for' → logprob: -3.445547580718994
    6. 'max' → logprob: -3.695547580718994
    7. '           ' → logprob: -3.820547580718994
    8. '100' → logprob: -4.070547580718994
    9. 'for' → logprob: -4.070547580718994
    10. ' max' → logprob: -4.820547580718994

Token 1706: ' on' (ID: 402)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.507865846157074
    2. 'max' → logprob: -1.8828659057617188
    3. 'for' → logprob: -2.5078659057617188
    4. 'range' → logprob: -3.0078659057617188
    5. ' price' → logprob: -3.2578659057617188
    6. '100' → logprob: -3.7578659057617188
    7. 'x' → logprob: -4.257865905761719
    8. ' max' → logprob: -4.882865905761719
    9. ' for' → logprob: -4.882865905761719
    10. '           ' → logprob: -5.132865905761719

Token 1707: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5927125811576843
    2. '#' → logprob: -2.092712640762329
    3. 'for' → logprob: -2.342712640762329
    4. 'range' → logprob: -3.092712640762329
    5. 'max' → logprob: -3.967712640762329
    6. '       ' → logprob: -4.09271240234375
    7. 'lim' → logprob: -4.09271240234375
    8. 'pe' → logprob: -4.46771240234375
    9. 'aj' → logprob: -4.46771240234375
    10. '           ' → logprob: -4.59271240234375

Token 1708: ' tester' (ID: 51819)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6420649886131287
    2. 'lim' → logprob: -1.8920650482177734
    3. ' continuer' → logprob: -2.3920650482177734
    4. 'for' → logprob: -3.3920650482177734
    5. 'penser' → logprob: -3.3920650482177734
    6. 'limit' → logprob: -4.142065048217773
    7. ' limiter' → logprob: -4.142065048217773
    8. '#' → logprob: -4.517065048217773
    9. 'expl' → logprob: -4.517065048217773
    10. 'import' → logprob: -4.517065048217773

Token 1709: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5677832365036011
    2. 'range' → logprob: -1.817783236503601
    3. 'for' → logprob: -1.817783236503601
    4. 'amount' → logprob: -3.0677833557128906
    5. 'price' → logprob: -4.442783355712891
    6. 'r' → logprob: -5.442783355712891
    7. '           ' → logprob: -5.442783355712891
    8. 'possible' → logprob: -5.817783355712891
    9. ' for' → logprob: -5.942783355712891
    10. '   ' → logprob: -5.942783355712891

Token 1710: ' mont' (ID: 11554)
  Prédit: 'mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mont' → logprob: -1.275936484336853
    2. 'coins' → logprob: -1.900936484336853
    3. 'x' → logprob: -2.2759366035461426
    4. 'range' → logprob: -2.2759366035461426
    5. 'bil' → logprob: -2.7759366035461426
    6. 'pieces' → logprob: -3.0259366035461426
    7. 'b' → logprob: -3.1509366035461426
    8. 'c' → logprob: -3.6509366035461426
    9. 'multip' → logprob: -4.275936603546143
    10. 'for' → logprob: -4.275936603546143

Token 1711: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5770286917686462
    2. 'ants' → logprob: -0.8270286917686462
    3. 't' → logprob: -8.077028274536133
    4. '
' → logprob: -9.077028274536133
    5. 'antd' → logprob: -9.827028274536133
    6. 'ont' → logprob: -9.952028274536133
    7. 'ans' → logprob: -10.077028274536133
    8. '#' → logprob: -10.139528274536133
    9. 'ats' → logprob: -10.264528274536133
    10. 'antt' → logprob: -10.452028274536133

Token 1712: ' donn' (ID: 20414)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9517601132392883
    2. 'dans' → logprob: -1.5767600536346436
    3. 'd' → logprob: -2.2017600536346436
    4. 'en' → logprob: -2.5767600536346436
    5. 'don' → logprob: -2.7017600536346436
    6. 'for' → logprob: -3.0767600536346436
    7. '           ' → logprob: -3.2017600536346436
    8. 'in' → logprob: -4.201760292053223
    9. '               ' → logprob: -4.326760292053223
    10. 'à' → logprob: -4.576760292053223

Token 1713: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.4766044318675995
    2. 'us' → logprob: -0.9766044616699219
    3. 'u' → logprob: -6.351604461669922
    4. 'is' → logprob: -7.726604461669922
    5. 'é' → logprob: -9.101604461669922
    6. 'es' → logprob: -9.601604461669922
    7. '   ' → logprob: -10.726604461669922
    8. 'ues' → logprob: -10.976604461669922
    9. 'ées' → logprob: -11.101604461669922
    10. '```' → logprob: -11.101604461669922

Token 1714: ' avec' (ID: 3937)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.2798975706100464
    2. 'from' → logprob: -1.4048975706100464
    3. 'range' → logprob: -1.9048975706100464
    4. 'en' → logprob: -2.154897689819336
    5. 'for' → logprob: -2.279897689819336
    6. '           ' → logprob: -2.654897689819336
    7. ' in' → logprob: -4.404897689819336
    8. 'in' → logprob: -4.654897689819336
    9. '#' → logprob: -5.779897689819336
    10. ' dans' → logprob: -5.904897689819336

Token 1715: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20851032435894012
    2. 'coins' → logprob: -3.583510398864746
    3. 'x' → logprob: -3.708510398864746
    4. 'step' → logprob: -4.083510398864746
    5. '100' → logprob: -4.208510398864746
    6. 'for' → logprob: -4.458510398864746
    7. 'multip' → logprob: -4.583510398864746
    8. 'import' → logprob: -5.083510398864746
    9. 'steps' → logprob: -5.208510398864746
    10. '0' → logprob: -5.208510398864746

Token 1716: '100' (ID: 1353)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6406885385513306
    2. '0' → logprob: -2.015688419342041
    3. 'x' → logprob: -2.140688419342041
    4. 'multip' → logprob: -3.140688419342041
    5. 'for' → logprob: -3.390688419342041
    6. 'coins' → logprob: -3.890688419342041
    7. '100' → logprob: -3.890688419342041
    8. 'price' → logprob: -4.265688419342041
    9. 'amount' → logprob: -4.265688419342041
    10. 'step' → logprob: -4.265688419342041

Token 1717: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.117345684382599e-05
    2. '
' → logprob: -13.000020980834961
    3. '   ' → logprob: -13.000020980834961
    4. ' ' → logprob: -13.125020980834961
    5. '       ' → logprob: -13.125020980834961
    6. '#' → logprob: -13.125020980834961
    7. ',' → logprob: -13.812520980834961
    8. '            
' → logprob: -13.875020980834961
    9. '           ' → logprob: -14.000020980834961
    10. '000' → logprob: -14.125020980834961

Token 1718: ' y' (ID: 342)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.711337685585022
    2. '0' → logprob: -1.211337685585022
    3. ':' → logprob: -2.2113375663757324
    4. ',
' → logprob: -3.3363375663757324
    5. '   ' → logprob: -4.336337566375732
    6. ']' → logprob: -4.961337566375732
    7. '
' → logprob: -5.211337566375732
    8. ' ,' → logprob: -5.336337566375732
    9. ':
' → logprob: -5.586337566375732
    10. 'for' → logprob: -5.711337566375732

Token 1719: 'ens' (ID: 696)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.2080172300338745
    2. 'ens' → logprob: -1.7080172300338745
    3. 'e' → logprob: -5.833017349243164
    4. 'end' → logprob: -6.958017349243164
    5. 'def' → logprob: -8.083017349243164
    6. 'yen' → logprob: -8.083017349243164
    7. 'eens' → logprob: -8.208017349243164
    8. '
' → logprob: -8.583017349243164
    9. '```' → logprob: -8.833017349243164
    10. '=' → logprob: -8.833017349243164

Token 1720: ' multiples' (ID: 70720)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.766762137413025
    2. ',' → logprob: -1.891762137413025
    3. 'for' → logprob: -2.0167622566223145
    4. '+' → logprob: -2.2667622566223145
    5. '   ' → logprob: -2.6417622566223145
    6. ' for' → logprob: -2.8917622566223145
    7. ':
' → logprob: -3.0167622566223145
    8. ':' → logprob: -3.1417622566223145
    9. '
' → logprob: -3.2667622566223145
    10. '           ' → logprob: -3.3917622566223145

Token 1721: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5003730058670044
    2. '       ' → logprob: -1.5003730058670044
    3. 'for' → logprob: -3.000372886657715
    4. ':
' → logprob: -4.125372886657715
    5. ' +' → logprob: -4.125372886657715
    6. ' for' → logprob: -4.375372886657715
    7. ' =' → logprob: -4.500372886657715
    8. '=' → logprob: -4.625372886657715
    9. ',' → logprob: -4.875372886657715
    10. '               ' → logprob: -5.000372886657715

Token 1722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06997790187597275
    2. ' for' → logprob: -3.4449779987335205
    3. 'for' → logprob: -3.6949779987335205
    4. '```' → logprob: -6.069977760314941
    5. '               ' → logprob: -6.444977760314941
    6. '
' → logprob: -6.944977760314941
    7. '            
' → logprob: -7.194977760314941
    8. '0' → logprob: -7.319977760314941
    9. '100' → logprob: -7.444977760314941
    10. '``' → logprob: -7.819977760314941

Token 1723: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3674771785736084
    2. ' for' → logprob: -1.6174771785736084
    3. 'for' → logprob: -2.2424771785736084
    4. '               ' → logprob: -6.9924774169921875
    5. '       ' → logprob: -7.2424774169921875
    6. '
' → logprob: -8.117477416992188
    7. 'range' → logprob: -8.617477416992188
    8. ' ' → logprob: -8.992477416992188
    9. '100' → logprob: -9.492477416992188
    10. '#' (adapté à ' #') → logprob: -9.492477416992188

Token 1724: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8696982860565186
    2. ' for' → logprob: -0.9946982860565186
    3. 'for' → logprob: -1.6196982860565186
    4. '       ' → logprob: -5.619698524475098
    5. '               ' → logprob: -5.869698524475098
    6. '```' → logprob: -6.494698524475098
    7. '100' → logprob: -6.744698524475098
    8. 'range' → logprob: -7.119698524475098
    9. ' range' → logprob: -7.369698524475098
    10. '                   ' → logprob: -7.369698524475098

Token 1725: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04706434905529022
    2. ' for' → logprob: -3.5470643043518066
    3. 'range' → logprob: -5.547064304351807
    4. '           ' → logprob: -5.797064304351807
    5. 'continue' → logprob: -5.797064304351807
    6. '       ' → logprob: -6.297064304351807
    7. 'est' → logprob: -6.922064304351807
    8. 'ranges' → logprob: -7.297064304351807
    9. 'possible' → logprob: -7.672064304351807
    10. '#' → logprob: -7.672064304351807

Token 1726: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0008320206543430686
    2. 'er' → logprob: -7.8758320808410645
    3. '       ' → logprob: -9.000831604003906
    4. 'ons' → logprob: -9.250831604003906
    5. '   ' → logprob: -9.750831604003906
    6. 'era' → logprob: -9.875831604003906
    7. 'ent' → logprob: -10.125831604003906
    8. '           ' → logprob: -10.750831604003906
    9. 'le' → logprob: -11.500831604003906
    10. '        ' → logprob: -12.000831604003906

Token 1727: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5626366138458252
    2. ' for' → logprob: -1.5626366138458252
    3. 'x' → logprob: -2.437636613845825
    4. ' x' → logprob: -3.062636613845825
    5. 'range' → logprob: -4.187636375427246
    6. 'price' → logprob: -4.437636375427246
    7. '   ' → logprob: -4.812636375427246
    8. 'multip' → logprob: -4.937636375427246
    9. ' range' → logprob: -5.312636375427246
    10. 'amount' → logprob: -5.437636375427246

Token 1728: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2537034749984741
    2. '=' → logprob: -2.3787035942077637
    3. ' =' → logprob: -2.7537035942077637
    4. 'in' → logprob: -3.3787035942077637
    5. 'for' → logprob: -3.7537035942077637
    6. 'range' → logprob: -5.003703594207764
    7. ' for' → logprob: -7.003703594207764
    8. 'from' → logprob: -7.753703594207764
    9. ' range' → logprob: -7.878703594207764
    10. '           ' → logprob: -7.878703594207764

Token 1729: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.005564094055444002
    2. '(price' → logprob: -6.130564212799072
    3. '((' → logprob: -6.255564212799072
    4. ' price' → logprob: -7.380564212799072
    5. 'max' → logprob: -8.380563735961914
    6. '100' → logprob: -8.380563735961914
    7. '   ' → logprob: -8.630563735961914
    8. '(' → logprob: -8.880563735961914
    9. '(((' → logprob: -11.130563735961914
    10. '(max' → logprob: -12.005563735961914

Token 1730: ' ...' (ID: 2550)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3299154043197632
    2. ' +' → logprob: -1.4549154043197632
    3. ',' → logprob: -1.9549154043197632
    4. '
' → logprob: -2.0799155235290527
    5. '           ' → logprob: -2.2049155235290527
    6. '<|end|>' → logprob: -2.9549155235290527
    7. '               ' → logprob: -3.8299155235290527
    8. '                   ' → logprob: -4.829915523529053
    9. '   ' → logprob: -5.079915523529053
    10. '#' → logprob: -5.204915523529053

Token 1731: ' price' (ID: 3911)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8615721464157104
    2. ',' → logprob: -1.7365721464157104
    3. 'price' → logprob: -1.8615721464157104
    4. ' +' → logprob: -2.486572265625
    5. 'for' → logprob: -3.111572265625
    6. '...' → logprob: -3.236572265625
    7. '
' → logprob: -3.736572265625
    8. 'x' → logprob: -5.236572265625
    9. '+
' → logprob: -5.236572265625
    10. ' ,' → logprob: -5.361572265625

Token 1732: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15619292855262756
    2. ',' → logprob: -2.4061930179595947
    3. ' +' → logprob: -3.4061930179595947
    4. '
' → logprob: -4.781192779541016
    5. '..' → logprob: -5.781192779541016
    6. '...' → logprob: -5.906192779541016
    7. '   ' → logprob: -6.531192779541016
    8. '<|end|>' → logprob: -6.781192779541016
    9. ' ,' → logprob: -7.781192779541016
    10. '           ' → logprob: -7.906192779541016

Token 1733: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005107374745421112
    2. ' ' → logprob: -7.7505106925964355
    3. '200' → logprob: -10.000511169433594
    4. '   ' → logprob: -11.750511169433594
    5. '10' → logprob: -12.125511169433594
    6. '110' → logprob: -12.250511169433594
    7. '150' → logprob: -12.875511169433594
    8. '20' → logprob: -13.000511169433594
    9. '999' → logprob: -13.125511169433594
    10. '
' → logprob: -13.250511169433594

Token 1734: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0002338144404347986
    2. '200' → logprob: -8.50023365020752
    3. '150' → logprob: -11.75023365020752
    4. '
' → logprob: -11.87523365020752
    5. ' ' → logprob: -12.37523365020752
    6. '110' → logprob: -12.87523365020752
    7. '10' → logprob: -13.50023365020752
    8. '999' → logprob: -13.75023365020752
    9. '0' → logprob: -14.12523365020752
    10. '   ' → logprob: -14.37523365020752

Token 1735: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007448321674019098
    2. ')' → logprob: -6.007448196411133
    3. ':' → logprob: -6.132448196411133
    4. ',' → logprob: -7.007448196411133
    5. ':
' → logprob: -8.007448196411133
    6. '00' → logprob: -8.257448196411133
    7. '000' → logprob: -8.382448196411133
    8. ')
' → logprob: -9.257448196411133
    9. '```' → logprob: -9.257448196411133
    10. '
' → logprob: -9.382448196411133

Token 1736: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7147340774536133
    2. '+' → logprob: -1.9647340774536133
    3. ' +' → logprob: -2.3397340774536133
    4. 'for' → logprob: -2.3397340774536133
    5. '           ' → logprob: -3.0897340774536133
    6. '
' → logprob: -3.2147340774536133
    7. ':
' → logprob: -3.4647340774536133
    8. ':' → logprob: -3.7147340774536133
    9. ' for' → logprob: -4.089734077453613
    10. ',' → logprob: -5.589734077453613

Token 1737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19542399048805237
    2. '       ' → logprob: -1.94542396068573
    3. ' for' → logprob: -3.9454240798950195
    4. 'for' → logprob: -4.4454240798950195
    5. '
' → logprob: -5.9454240798950195
    6. '            
' → logprob: -7.8204240798950195
    7. '   ' → logprob: -8.57042407989502
    8. ',' → logprob: -9.69542407989502
    9. '               ' → logprob: -9.69542407989502
    10. '        
' → logprob: -10.57042407989502

Token 1738: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04201506823301315
    2. '           ' → logprob: -3.2920150756835938
    3. ' for' → logprob: -5.542015075683594
    4. '       ' → logprob: -10.167015075683594
    5. 'max' → logprob: -12.667015075683594
    6. '   ' → logprob: -13.667015075683594
    7. '            
' → logprob: -13.917015075683594
    8. '               ' → logprob: -14.042015075683594
    9. '
' → logprob: -14.167015075683594
    10. 'range' → logprob: -14.292015075683594

Token 1739: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.8499656319618225
    2. 'x' → logprob: -1.4749655723571777
    3. 'given' → logprob: -1.7249655723571777
    4. 'amount' → logprob: -2.5999655723571777
    5. 'paid' → logprob: -3.3499655723571777
    6. 'payment' → logprob: -4.099965572357178
    7. 'total' → logprob: -4.974965572357178
    8. 'price' → logprob: -5.099965572357178
    9. 'mont' → logprob: -5.099965572357178
    10. 'give' → logprob: -5.224965572357178

Token 1740: ' in' (ID: 306)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.067634105682373
    2. 'ment' → logprob: -1.692634105682373
    3. ' =' → logprob: -2.192634105682373
    4. '_amount' → logprob: -2.442634105682373
    5. '_' → logprob: -2.567634105682373
    6. '=' → logprob: -2.692634105682373
    7. ' ' → logprob: -2.942634105682373
    8. 'ing' → logprob: -3.442634105682373
    9. ')' → logprob: -4.317634105682373
    10. '   ' → logprob: -5.192634105682373

Token 1741: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718332413583994
    2. ' range' → logprob: -5.006718158721924
    3. '(range' → logprob: -13.256718635559082
    4. 'price' → logprob: -14.006718635559082
    5. '   ' → logprob: -15.256718635559082
    6. '[' → logprob: -16.756717681884766
    7. '	range' → logprob: -17.006717681884766
    8. ' ' → logprob: -17.381717681884766
    9. 'list' → logprob: -19.006717681884766
    10. '  ' → logprob: -19.381717681884766

Token 1742: '(price' (ID: 81279)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -4.961759259458631e-06
    2. ' price' → logprob: -12.500004768371582
    3. '(price' → logprob: -13.750004768371582
    4. '   ' → logprob: -16.1250057220459
    5. '       ' → logprob: -17.3750057220459
    6. '           ' → logprob: -18.0000057220459
    7. 'prices' → logprob: -18.1250057220459
    8. '
' → logprob: -18.2500057220459
    9. '	price' → logprob: -19.1250057220459
    10. '               ' → logprob: -20.0000057220459

Token 1743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001149867384810932
    2. ' ,' → logprob: -9.250115394592285
    3. '   ' → logprob: -11.750115394592285
    4. ',
' → logprob: -12.375115394592285
    5. 'price' → logprob: -12.875115394592285
    6. ',p' → logprob: -13.125115394592285
    7. '+' → logprob: -14.875115394592285
    8. '
' → logprob: -15.125115394592285
    9. '100' → logprob: -15.125115394592285
    10. '       ' → logprob: -15.250115394592285

Token 1744: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0008073674980551004
    2. ' price' → logprob: -7.125807285308838
    3. 'min' → logprob: -13.250807762145996
    4. 'pay' → logprob: -14.500807762145996
    5. '
' → logprob: -15.000807762145996
    6. '   ' → logprob: -15.750807762145996
    7. '(price' → logprob: -16.00080680847168
    8. '	price' → logprob: -16.50080680847168
    9. 'payment' → logprob: -17.87580680847168
    10. ' ' → logprob: -18.00080680847168

Token 1745: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889925688505173
    2. ' +' → logprob: -2.5788991451263428
    3. '   ' → logprob: -12.203899383544922
    4. '+
' → logprob: -13.328899383544922
    5. 'price' → logprob: -13.828899383544922
    6. '
' → logprob: -14.328899383544922
    7. ',' → logprob: -15.078899383544922
    8. '       ' → logprob: -15.203899383544922
    9. '＋' → logprob: -15.703899383544922
    10. '```' → logprob: -15.703899383544922

Token 1746: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -16.25
    3. '150' → logprob: -16.25
    4. '200' → logprob: -16.25
    5. '(' → logprob: -16.5
    6. '1' → logprob: -16.875
    7. '110' → logprob: -16.875
    8. '2' → logprob: -17.625
    9. 'int' → logprob: -17.875
    10. 'max' → logprob: -18.75

Token 1747: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.4849443838757e-06
    2. '200' → logprob: -13.375004768371582
    3. '150' → logprob: -13.750004768371582
    4. '1' → logprob: -14.125004768371582
    5. '110' → logprob: -14.875004768371582
    6. '(' → logprob: -15.500004768371582
    7. '2' → logprob: -15.625004768371582
    8. ' ' → logprob: -16.375003814697266
    9. '101' → logprob: -16.625003814697266
    10. 'int' → logprob: -17.125003814697266

Token 1748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012063038302585483
    2. '0' → logprob: -6.876206398010254
    3. '2' → logprob: -8.751206398010254
    4. '5' → logprob: -12.501206398010254
    5. '):
' → logprob: -12.501206398010254
    6. '   ' → logprob: -13.376206398010254
    7. '+' → logprob: -13.376206398010254
    8. ')' → logprob: -13.876206398010254
    9. ',' → logprob: -14.501206398010254
    10. '       ' → logprob: -14.751206398010254

Token 1749: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3135208487510681
    2. '):' → logprob: -1.313520908355713
    3. '               ' → logprob: -8.813520431518555
    4. '):
' → logprob: -9.813520431518555
    5. '           ' → logprob: -10.813520431518555
    6. ')' → logprob: -11.313520431518555
    7. '+' → logprob: -11.688520431518555
    8. ':' → logprob: -12.313520431518555
    9. '):

' → logprob: -12.938520431518555
    10. '       ' → logprob: -13.313520431518555

Token 1750: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019901065388694406
    2. '                
' → logprob: -9.500199317932129
    3. ' if' → logprob: -10.375199317932129
    4. '#' → logprob: -10.625199317932129
    5. '           ' → logprob: -11.125199317932129
    6. '                   ' → logprob: -11.250199317932129
    7. '```' → logprob: -12.125199317932129
    8. '              ' → logprob: -12.250199317932129
    9. '                ' → logprob: -12.250199317932129
    10. 'if' → logprob: -12.250199317932129

Token 1751: ' change' (ID: 3343)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5784910917282104
    2. 'if' → logprob: -1.4534910917282104
    3. '                   ' → logprob: -2.4534912109375
    4. 'change' (adapté à ' change') → logprob: -2.5784912109375
    5. '               ' → logprob: -4.5784912109375
    6. 'coins' → logprob: -4.8284912109375
    7. 'possible' → logprob: -5.4534912109375
    8. 'rem' → logprob: -6.0784912109375
    9. 'pay' → logprob: -6.3284912109375
    10. ' #' → logprob: -6.3284912109375

Token 1752: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008834139443933964
    2. '=' → logprob: -5.258834362030029
    3. '_amount' → logprob: -6.008834362030029
    4. '_needed' → logprob: -7.008834362030029
    5. '_amt' → logprob: -9.258833885192871
    6. '_required' → logprob: -10.133833885192871
    7. 'amount' → logprob: -11.258833885192871
    8. '   ' → logprob: -11.383833885192871
    9. '_co' → logprob: -11.633833885192871
    10. '_dict' → logprob: -11.883833885192871

Token 1753: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -2.558399319241289e-05
    2. ' pay' → logprob: -10.625025749206543
    3. '               ' → logprob: -14.125025749206543
    4. '                   ' → logprob: -15.500025749206543
    5. '(pay' → logprob: -15.875025749206543
    6. '   ' → logprob: -17.875024795532227
    7. 'payment' → logprob: -18.125024795532227
    8. '           ' → logprob: -18.250024795532227
    9. 'play' → logprob: -18.375024795532227
    10. 'p' → logprob: -18.375024795532227

Token 1754: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6935316324234009
    2. ' -' → logprob: -0.6935316324234009
    3. '=' → logprob: -8.69353199005127
    4. '-price' → logprob: -8.94353199005127
    5. ' =' → logprob: -9.56853199005127
    6. '               ' → logprob: -12.69353199005127
    7. '                   ' → logprob: -12.94353199005127
    8. 'price' → logprob: -13.31853199005127
    9. '(price' → logprob: -14.31853199005127
    10. '   ' → logprob: -14.31853199005127

Token 1755: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -1.5048530030981055e-06
    2. ' price' → logprob: -13.500001907348633
    3. 'prix' → logprob: -21.250001907348633
    4. '	price' → logprob: -21.875001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '               ' → logprob: -22.250001907348633
    7. '(price' → logprob: -22.500001907348633
    8. '           ' → logprob: -23.000001907348633
    9. 'purchase' → logprob: -23.375001907348633
    10. 'payment' → logprob: -23.375001907348633

Token 1756: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006078345235437155
    2. 'if' → logprob: -5.881078243255615
    3. ' if' → logprob: -6.006078243255615
    4. '                
' → logprob: -7.256078243255615
    5. '
' → logprob: -10.131078720092773
    6. ',' → logprob: -11.631078720092773
    7. '#' → logprob: -12.131078720092773
    8. '```' → logprob: -12.256078720092773
    9. 'for' → logprob: -12.381078720092773
    10. 'change' → logprob: -12.506078720092773

Token 1757: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002783783129416406
    2. ' if' → logprob: -8.62527847290039
    3. 'if' → logprob: -9.50027847290039
    4. '                   ' → logprob: -11.87527847290039
    5. '```' → logprob: -12.25027847290039
    6. '                
' → logprob: -12.62527847290039
    7. ' for' → logprob: -13.37527847290039
    8. 'for' → logprob: -13.50027847290039
    9. '#' → logprob: -13.50027847290039
    10. ',' → logprob: -14.50027847290039

Token 1758: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022982565686106682
    2. '#' (adapté à ' #') → logprob: -4.147982597351074
    3. 'change' → logprob: -5.647982597351074
    4. '               ' → logprob: -6.022982597351074
    5. 'for' → logprob: -8.022982597351074
    6. 'res' → logprob: -8.897982597351074
    7. 'r' → logprob: -9.022982597351074
    8. 'coins' → logprob: -9.397982597351074
    9. '                   ' → logprob: -9.522982597351074
    10. 'coin' → logprob: -9.772982597351074

Token 1759: ' Ob' (ID: 3057)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012363191694021225
    2. '               ' → logprob: -4.512362957000732
    3. '#' → logprob: -7.012362957000732
    4. 'change' → logprob: -8.51236343383789
    5. ' if' → logprob: -9.13736343383789
    6. 'coin' → logprob: -10.51236343383789
    7. 'mon' → logprob: -10.76236343383789
    8. '                   ' → logprob: -11.63736343383789
    9. 'coins' → logprob: -11.76236343383789
    10. '   ' → logprob: -11.88736343383789

Token 1760: 'tenir' (ID: 58324)
  Prédit: 'ject'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ject' → logprob: -0.7797020673751831
    2. 'jets' → logprob: -0.9047020673751831
    3. 'served' → logprob: -3.2797021865844727
    4. 'jet' → logprob: -3.5297021865844727
    5. 'st' → logprob: -3.5297021865844727
    6. 's' → logprob: -4.279702186584473
    7. 't' → logprob: -5.404702186584473
    8. 'j' → logprob: -6.029702186584473
    9. 'stacles' → logprob: -6.279702186584473
    10. 'res' → logprob: -6.279702186584473

Token 1761: ' le' (ID: 505)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.6573789119720459
    2. 'change' → logprob: -0.7823789119720459
    3. 'res' → logprob: -4.532379150390625
    4. 'min' → logprob: -5.282379150390625
    5. 'coins' → logprob: -5.532379150390625
    6. ' change' → logprob: -5.782379150390625
    7. ' make' → logprob: -7.657379150390625
    8. 'coin' → logprob: -8.157379150390625
    9. 'mon' → logprob: -8.782379150390625
    10. '   ' → logprob: -8.782379150390625

Token 1762: ' rendu' (ID: 86461)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0073328218422830105
    2. 'res' → logprob: -5.757332801818848
    3. 'make' → logprob: -6.382332801818848
    4. 'min' → logprob: -7.007332801818848
    5. 'coins' → logprob: -7.382332801818848
    6. 'r' → logprob: -8.757332801818848
    7. 'coin' → logprob: -9.007332801818848
    8. 'chang' → logprob: -9.007332801818848
    9. 'dict' → logprob: -9.257332801818848
    10. 'count' → logprob: -9.757332801818848

Token 1763: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9558029174804688
    2. 'change' → logprob: -1.8308029174804688
    3. '               ' → logprob: -2.0808029174804688
    4. 'mon' → logprob: -2.3308029174804688
    5. 'de' → logprob: -2.5808029174804688
    6. '                   ' → logprob: -2.8308029174804688
    7. ' monnaie' → logprob: -3.5808029174804688
    8. ' de' → logprob: -4.455802917480469
    9. ' change' → logprob: -4.455802917480469
    10. 'min' → logprob: -5.080802917480469

Token 1764: ' de' (ID: 334)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.22720851004123688
    2. ' =' → logprob: -2.2272086143493652
    3. 'coins' → logprob: -3.6022086143493652
    4. 'min' → logprob: -4.227208614349365
    5. 'res' → logprob: -4.227208614349365
    6. '=' → logprob: -4.852208614349365
    7. 'mon' → logprob: -4.977208614349365
    8. '               ' → logprob: -5.102208614349365
    9. '                   ' → logprob: -5.102208614349365
    10. 'minimal' → logprob: -5.977208614349365

Token 1765: ' monnaie' (ID: 168963)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.10546517372131348
    2. 'mon' → logprob: -2.3554651737213135
    3. 'make' → logprob: -5.855464935302734
    4. 'pieces' → logprob: -7.355464935302734
    5. 'pi' → logprob: -7.605464935302734
    6. 'coins' → logprob: -7.980464935302734
    7. ' monnaie' → logprob: -7.980464935302734
    8. 'piece' → logprob: -8.355464935302734
    9. '```' → logprob: -9.230464935302734
    10. '{' → logprob: -10.480464935302734

Token 1766: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6373904943466187
    2. '               ' → logprob: -1.2623904943466187
    3. 'change' → logprob: -1.7623904943466187
    4. '=' → logprob: -5.512390613555908
    5. ' change' → logprob: -5.637390613555908
    6. '       ' → logprob: -5.637390613555908
    7. 'res' → logprob: -7.262390613555908
    8. 'coin' → logprob: -7.262390613555908
    9. 'render' → logprob: -7.262390613555908
    10. 'coins' → logprob: -7.387390613555908

Token 1767: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.2664456789934775e-06
    2. ' change' → logprob: -14.000000953674316
    3. 'changer' → logprob: -16.125001907348633
    4. '(change' → logprob: -16.250001907348633
    5. '	change' → logprob: -16.625001907348633
    6. 'le' → logprob: -18.250001907348633
    7. 'amount' → logprob: -18.500001907348633
    8. 'make' → logprob: -18.625001907348633
    9. 'chang' → logprob: -18.875001907348633
    10. '```' → logprob: -19.625001907348633

Token 1768: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016339097172021866
    2. 'change' → logprob: -4.516339302062988
    3. ' if' → logprob: -6.766339302062988
    4. ' =' → logprob: -6.891339302062988
    5. ' change' → logprob: -7.016339302062988
    6. 'if' → logprob: -7.266339302062988
    7. 'coins' → logprob: -8.141339302062988
    8. 'render' → logprob: -8.766339302062988
    9. 'coin' → logprob: -8.766339302062988
    10. ' rendu' → logprob: -9.141339302062988

Token 1769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020339006558060646
    2. 'change' → logprob: -4.520339012145996
    3. 'coins' → logprob: -5.645339012145996
    4. 'res' → logprob: -6.770339012145996
    5. 'if' → logprob: -7.020339012145996
    6. 'coin' → logprob: -7.020339012145996
    7. '       ' → logprob: -7.145339012145996
    8. 'tokens' → logprob: -8.020339012145996
    9. 'r' → logprob: -8.270339012145996
    10. '```' → logprob: -8.520339012145996

Token 1770: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.029975872486829758
    2. 'r' → logprob: -4.404975891113281
    3. '               ' → logprob: -4.779975891113281
    4. 'render' → logprob: -5.654975891113281
    5. 'if' → logprob: -5.779975891113281
    6. 'rend' → logprob: -6.904975891113281
    7. 'return' → logprob: -8.654975891113281
    8. 'ret' → logprob: -8.654975891113281
    9. '       ' → logprob: -8.904975891113281
    10. 'coin' → logprob: -9.029975891113281

Token 1771: '_co' (ID: 21102)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6979925632476807
    2. '_co' → logprob: -1.3229925632476807
    3. '=' → logprob: -2.1979925632476807
    4. '_change' → logprob: -2.3229925632476807
    5. '_dict' → logprob: -4.572992324829102
    6. '_map' → logprob: -5.447992324829102
    7. 'coins' → logprob: -5.697992324829102
    8. '_res' → logprob: -5.697992324829102
    9. 'change' → logprob: -7.322992324829102
    10. '_dist' → logprob: -7.447992324829102

Token 1772: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.16004332900047302
    2. 'in' → logprob: -2.660043239593506
    3. 'unt' → logprob: -2.660043239593506
    4. 'unts' → logprob: -5.785043239593506
    5. 'unter' → logprob: -5.785043239593506
    6. 'un' → logprob: -6.785043239593506
    7. 'ind' → logprob: -9.035043716430664
    8. 'uns' → logprob: -9.160043716430664
    9. 'st' → logprob: -9.535043716430664
    10. 'n' → logprob: -10.535043716430664

Token 1773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132624924182892
    2. ' =' → logprob: -1.3132624626159668
    3. '=min' → logprob: -15.563262939453125
    4. ',' → logprob: -16.188262939453125
    5. 's' → logprob: -16.438262939453125
    6. ')' → logprob: -16.563262939453125
    7. 'make' → logprob: -16.563262939453125
    8. '=get' → logprob: -17.063262939453125
    9. '=create' → logprob: -17.313262939453125
    10. ' ' → logprob: -17.313262939453125

Token 1774: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -1.0280383548888494e-06
    2. ' make' → logprob: -13.875000953674316
    3. '{' → logprob: -17.875001907348633
    4. '(make' → logprob: -19.625001907348633
    5. '	make' → logprob: -20.500001907348633
    6. '   ' → logprob: -21.000001907348633
    7. ' ' → logprob: -22.625001907348633
    8. 'collections' → logprob: -22.875001907348633
    9. 'dict' → logprob: -23.250001907348633
    10. '.make' → logprob: -24.125001907348633

Token 1775: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.00020413640595506877
    2. 'change' → logprob: -8.500204086303711
    3. 'Change' → logprob: -15.625204086303711
    4. 'chang' → logprob: -16.75020408630371
    5. '	change' → logprob: -17.00020408630371
    6. ' change' → logprob: -17.25020408630371
    7. '_ch' → logprob: -17.37520408630371
    8. '_CHANGE' → logprob: -17.50020408630371
    9. '{' → logprob: -17.75020408630371
    10. '{
' → logprob: -17.75020408630371

Token 1776: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0025678067468106747
    2. 'min' → logprob: -6.002567768096924
    3. 'change' → logprob: -9.502568244934082
    4. '(change' → logprob: -12.127568244934082
    5. '{' → logprob: -12.502568244934082
    6. 'minimal' → logprob: -12.752568244934082
    7. '(min' → logprob: -13.252568244934082
    8. '_change' → logprob: -14.377568244934082
    9. '```' → logprob: -14.627568244934082
    10. '[min' → logprob: -14.752568244934082

Token 1777: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.004760834388434887
    2. 'coins' → logprob: -5.3797607421875
    3. '_tokens' → logprob: -9.7547607421875
    4. 'co' → logprob: -10.0047607421875
    5. '_change' → logprob: -11.1297607421875
    6. 'Coins' → logprob: -12.0047607421875
    7. 'change' → logprob: -12.3797607421875
    8. '-co' → logprob: -12.7547607421875
    9. '_coin' → logprob: -13.1297607421875
    10. '```' → logprob: -13.3797607421875

Token 1778: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00026884564431384206
    2. 'o' → logprob: -8.750268936157227
    3. 'coins' → logprob: -9.375268936157227
    4. 'in' → logprob: -12.000268936157227
    5. 'ns' → logprob: -12.125268936157227
    6. '[' → logprob: -12.750268936157227
    7. '
' → logprob: -13.750268936157227
    8. '(ins' → logprob: -13.875268936157227
    9. 'ions' → logprob: -14.250268936157227
    10. '(' → logprob: -14.250268936157227

Token 1779: '(change' (ID: 95178)
  Prédit: '(change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(change' → logprob: -1.9027791495318525e-05
    2. 'change' → logprob: -10.875019073486328
    3. '(amount' → logprob: -17.625019073486328
    4. '(' → logprob: -18.250019073486328
    5. ' change' → logprob: -19.125019073486328
    6. '	change' → logprob: -19.875019073486328
    7. ' (' → logprob: -20.000019073486328
    8. '[' → logprob: -20.500019073486328
    9. '(Change' → logprob: -20.500019073486328
    10. '(choice' → logprob: -20.750019073486328

Token 1780: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010573985055088997
    2. '               ' → logprob: -4.885573863983154
    3. ')
' → logprob: -6.010573863983154
    4. ')[' → logprob: -8.260574340820312
    5. '<|end|>' → logprob: -10.010574340820312
    6. '                
' → logprob: -10.260574340820312
    7. '()' → logprob: -10.635574340820312
    8. '```' → logprob: -10.760574340820312
    9. '[' → logprob: -11.135574340820312
    10. '[token' → logprob: -11.260574340820312

Token 1781: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007166040013544261
    2. '       ' → logprob: -8.500716209411621
    3. ' if' → logprob: -8.500716209411621
    4. 'if' → logprob: -9.750716209411621
    5. '```' → logprob: -9.875716209411621
    6. '                
' → logprob: -10.000716209411621
    7. ' for' → logprob: -10.000716209411621
    8. '                ' → logprob: -10.875716209411621
    9. '<|end|>' → logprob: -11.625716209411621
    10. 'for' → logprob: -11.750716209411621

Token 1782: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25345349311828613
    2. '               ' → logprob: -1.7534534931182861
    3. '#' (adapté à ' #') → logprob: -3.003453493118286
    4. 'for' → logprob: -7.878453254699707
    5. ' if' → logprob: -8.003453254699707
    6. 'coin' → logprob: -9.378453254699707
    7. 'coins' → logprob: -9.628453254699707
    8. '500' → logprob: -10.003453254699707
    9. '                
' → logprob: -10.253453254699707
    10. ' #' → logprob: -10.378453254699707

Token 1783: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3454616069793701
    2. '#' → logprob: -1.3454616069793701
    3. '               ' → logprob: -3.47046160697937
    4. ' if' → logprob: -8.22046184539795
    5. ' #' → logprob: -9.59546184539795
    6. 'for' → logprob: -9.59546184539795
    7. 'coins' → logprob: -10.09546184539795
    8. '500' → logprob: -10.47046184539795
    9. 'coin' → logprob: -10.84546184539795
    10. '   ' → logprob: -11.34546184539795

Token 1784: ' pas' (ID: 2173)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0009095562854781747
    2. 'coins' → logprob: -7.500909328460693
    3. ' change' → logprob: -8.625909805297852
    4. '500' → logprob: -8.875909805297852
    5. '(change' → logprob: -11.000909805297852
    6. '0' → logprob: -11.875909805297852
    7. 'not' → logprob: -12.000909805297852
    8. '100' → logprob: -13.375909805297852
    9. 'ch' → logprob: -14.000909805297852
    10. 'num' → logprob: -14.125909805297852

Token 1785: ' de' (ID: 334)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5315349698066711
    2. 'coins' → logprob: -1.5315349102020264
    3. ' change' → logprob: -2.4065349102020264
    4. '(' → logprob: -2.9065349102020264
    5. '100' → logprob: -4.0315351486206055
    6. ' coins' → logprob: -4.6565351486206055
    7. '(change' → logprob: -5.2815351486206055
    8. 'any' → logprob: -5.4065351486206055
    9. '500' → logprob: -5.7815351486206055
    10. '1' → logprob: -5.7815351486206055

Token 1786: ' pièces' (ID: 49165)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.03264160081744194
    2. '500' → logprob: -4.532641410827637
    3. 'coins' → logprob: -4.532641410827637
    4. ' change' → logprob: -4.907641410827637
    5. '(change' → logprob: -6.782641410827637
    6. '(' → logprob: -7.282641410827637
    7. '0' → logprob: -7.907641410827637
    8. 'any' → logprob: -8.532641410827637
    9. ' ' → logprob: -8.782641410827637
    10. ' coins' → logprob: -8.782641410827637

Token 1787: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.016301093623042107
    2. '[' → logprob: -4.641301155090332
    3. ' ' → logprob: -5.266301155090332
    4. '   ' → logprob: -7.141301155090332
    5. '       ' → logprob: -9.016301155090332
    6. '               ' → logprob: -9.141301155090332
    7. '_' → logprob: -9.516301155090332
    8. '           ' → logprob: -9.516301155090332
    9. '```' → logprob: -10.141301155090332
    10. '                   ' → logprob: -10.141301155090332

Token 1788: '500' (ID: 3234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.524082601070404
    2. '500' → logprob: -0.899082601070404
    3. 'or' → logprob: -7.149082660675049
    4. ' ' → logprob: -10.27408218383789
    5. '```' → logprob: -10.39908218383789
    6. ' or' → logprob: -10.64908218383789
    7. 'import' → logprob: -10.89908218383789
    8. '   ' → logprob: -11.02408218383789
    9. ' [' → logprob: -11.52408218383789
    10. 'of' → logprob: -11.89908218383789

Token 1789: ' retourn' (ID: 150215)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6878305673599243
    2. ' in' → logprob: -2.0628304481506348
    3. 'in' → logprob: -2.1878304481506348
    4. 'or' → logprob: -2.4378304481506348
    5. 'change' → logprob: -2.4378304481506348
    6. ':' → logprob: -3.6878304481506348
    7. '500' → logprob: -3.9378304481506348
    8. '[' → logprob: -4.937830448150635
    9. '               ' → logprob: -5.437830448150635
    10. 'if' → logprob: -5.687830448150635

Token 1790: 'ées' (ID: 5161)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.04453214630484581
    2. 'u' → logprob: -3.794532060623169
    3. 'es' → logprob: -3.919532060623169
    4. 'ue' → logprob: -7.794532299041748
    5. 'e' → logprob: -8.04453182220459
    6. 'ées' → logprob: -8.41953182220459
    7. 'n' → logprob: -9.41953182220459
    8. 'nées' → logprob: -10.41953182220459
    9. 'ed' → logprob: -10.66953182220459
    10. 'tes' → logprob: -10.79453182220459

Token 1791: ' ->' (ID: 2747)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9009652137756348
    2. 'or' → logprob: -1.1509652137756348
    3. ':' → logprob: -2.5259652137756348
    4. '[' → logprob: -2.7759652137756348
    5. '               ' → logprob: -3.2759652137756348
    6. 'in' → logprob: -3.4009652137756348
    7. 'if' → logprob: -4.400965213775635
    8. '                   ' → logprob: -4.525965213775635
    9. ' in' → logprob: -4.650965213775635
    10. 'change' → logprob: -4.650965213775635

Token 1792: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.011145438067615032
    2. ' continue' → logprob: -4.76114559173584
    3. '   ' → logprob: -6.76114559173584
    4. '500' → logprob: -6.88614559173584
    5. 'change' → logprob: -8.38614559173584
    6. 'if' → logprob: -10.01114559173584
    7. ' ' → logprob: -10.51114559173584
    8. '       ' → logprob: -11.26114559173584
    9. '           ' → logprob: -11.88614559173584
    10. '	continue' → logprob: -12.01114559173584

Token 1793: ' intéressant' (ID: 95099)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.141241654753685
    2. ' change' → logprob: -2.7662415504455566
    3. '500' → logprob: -3.2662415504455566
    4. 'continue' → logprob: -4.266241550445557
    5. 'any' → logprob: -5.766241550445557
    6. ' ' → logprob: -5.891241550445557
    7. '1' → logprob: -6.391241550445557
    8. 'de' → logprob: -6.516241550445557
    9. '   ' → logprob: -6.891241550445557
    10. ' any' → logprob: -7.141241550445557

Token 1794: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9043834209442139
    2. '               ' → logprob: -1.1543834209442139
    3. ' or' → logprob: -1.7793834209442139
    4. ':' → logprob: -2.779383420944214
    5. 'if' → logprob: -3.904383420944214
    6. 'continue' → logprob: -4.279383659362793
    7. 'or' → logprob: -5.279383659362793
    8. ' continue' → logprob: -5.779383659362793
    9. ' if' → logprob: -5.904383659362793
    10. ':
' → logprob: -5.904383659362793

Token 1795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009137284359894693
    2. 'if' → logprob: -7.125913619995117
    3. 'continue' → logprob: -9.500913619995117
    4. ' if' → logprob: -10.625913619995117
    5. ' continue' → logprob: -12.625913619995117
    6. '                   ' → logprob: -12.875913619995117
    7. '   ' → logprob: -13.375913619995117
    8. '           ' → logprob: -13.625913619995117
    9. '       ' → logprob: -14.125913619995117
    10. '```' → logprob: -14.750913619995117

Token 1796: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005765607114881277
    2. 'change' → logprob: -5.255765438079834
    3. 'continue' → logprob: -8.380765914916992
    4. ' if' → logprob: -8.380765914916992
    5. '               ' → logprob: -10.005765914916992
    6. '   ' → logprob: -12.005765914916992
    7. ' change' → logprob: -12.130765914916992
    8. '500' → logprob: -12.130765914916992
    9. '                   ' → logprob: -12.505765914916992
    10. '           ' → logprob: -13.130765914916992

Token 1797: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00026217024424113333
    2. ' change' → logprob: -8.250262260437012
    3. '(change' → logprob: -14.500262260437012
    4. 'not' → logprob: -15.000262260437012
    5. '	change' → logprob: -18.000261306762695
    6. '   ' → logprob: -18.500261306762695
    7. ' not' → logprob: -18.625261306762695
    8. '500' → logprob: -18.875261306762695
    9. '0' → logprob: -19.375261306762695
    10. '.change' → logprob: -20.125261306762695

Token 1798: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5489844679832458
    2. '[' → logprob: -0.9239844679832458
    3. '.get' → logprob: -3.6739845275878906
    4. '500' → logprob: -10.29898452758789
    5. 'get' → logprob: -10.54898452758789
    6. 'co' → logprob: -11.04898452758789
    7. 'Co' → logprob: -11.29898452758789
    8. ' [' → logprob: -11.67398452758789
    9. '   ' → logprob: -11.79898452758789
    10. '```' → logprob: -12.17398452758789

Token 1799: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.39634841680526733
    2. 'o' → logprob: -1.146348476409912
    3. '_' → logprob: -5.396348476409912
    4. 'ins' → logprob: -6.771348476409912
    5. '_in' → logprob: -7.396348476409912
    6. '[' → logprob: -7.396348476409912
    7. 'coins' → logprob: -7.396348476409912
    8. 'oin' → logprob: -7.521348476409912
    9. 'oints' → logprob: -7.646348476409912
    10. '_o' → logprob: -8.771347999572754

Token 1800: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01252296008169651
    2. '.get' → logprob: -4.387523174285889
    3. 'get' → logprob: -11.63752269744873
    4. '500' → logprob: -13.51252269744873
    5. '```' → logprob: -14.01252269744873
    6. '[get' → logprob: -14.38752269744873
    7. '   ' → logprob: -14.63752269744873
    8. '.' → logprob: -15.38752269744873
    9. ' [' → logprob: -15.51252269744873
    10. '
' → logprob: -16.137523651123047

Token 1801: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.000003814697266
    4. '(' → logprob: -15.375003814697266
    5. '[' → logprob: -15.750003814697266
    6. '5' → logprob: -16.000003814697266
    7. '
' → logprob: -16.125003814697266
    8. ']' → logprob: -16.375003814697266
    9. '```' → logprob: -16.875003814697266
    10. '  ' → logprob: -17.750003814697266

Token 1802: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12856915593147278
    2. ']==' → logprob: -2.1285691261291504
    3. '==' → logprob: -7.00356912612915
    4. ' ==' → logprob: -8.253569602966309
    5. ' ]' → logprob: -8.378569602966309
    6. ']>' → logprob: -9.503569602966309
    7. ']<' → logprob: -10.003569602966309
    8. '']==' → logprob: -10.128569602966309
    9. ']<=' → logprob: -10.878569602966309
    10. '"]' → logprob: -11.003569602966309

Token 1803: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133195638656616
    2. ' ==' → logprob: -1.3133195638656616
    3. '0' → logprob: -10.313319206237793
    4. ')==' → logprob: -12.063319206237793
    5. '==
' → logprob: -12.063319206237793
    6. ']==' → logprob: -12.563319206237793
    7. '>' → logprob: -12.813319206237793
    8. '===' → logprob: -13.188319206237793
    9. '()==' → logprob: -13.438319206237793
    10. '=' → logprob: -13.688319206237793

Token 1804: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '>' → logprob: -19.500001907348633
    5. '۰' → logprob: -19.500001907348633
    6. '```' → logprob: -19.875001907348633
    7. '=' → logprob: -20.000001907348633
    8. '	' → logprob: -20.750001907348633
    9. '00' → logprob: -21.125001907348633
    10. '﻿' → logprob: -21.250001907348633

Token 1805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.5
    4. '>' → logprob: -20.75
    5. '=' → logprob: -20.75
    6. '۰' → logprob: -21.375
    7. '	' → logprob: -22.0
    8. ' ' → logprob: -22.5
    9. '﻿' → logprob: -22.625
    10. '  ' → logprob: -22.625

Token 1806: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7027221918106079
    2. '                   ' → logprob: -1.077722191810608
    3. ':
' → logprob: -1.827722191810608
    4. ' continue' → logprob: -6.327722072601318
    5. 'continue' → logprob: -6.702722072601318
    6. '               ' → logprob: -7.952722072601318
    7. '                       ' → logprob: -9.327722549438477
    8. ' or' → logprob: -10.202722549438477
    9. '	continue' → logprob: -10.577722549438477
    10. '                           ' → logprob: -11.327722549438477

Token 1807: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00035357745946384966
    2. 'continue' → logprob: -8.125353813171387
    3. ' continue' → logprob: -10.125353813171387
    4. '               ' → logprob: -11.750353813171387
    5. '                       ' → logprob: -13.000353813171387
    6. '	               ' → logprob: -13.000353813171387
    7. '				' → logprob: -13.875353813171387
    8. '		           ' → logprob: -14.000353813171387
    9. '	continue' → logprob: -14.125353813171387
    10. ':' → logprob: -14.250353813171387

Token 1808: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.038185395300388336
    2. '                   ' → logprob: -3.2881853580474854
    3. ' continue' → logprob: -9.413185119628906
    4. '	continue' → logprob: -10.538185119628906
    5. '                       ' → logprob: -10.663185119628906
    6. '               ' → logprob: -11.663185119628906
    7. '   ' → logprob: -13.288185119628906
    8. '				' → logprob: -14.163185119628906
    9. '	               ' → logprob: -14.413185119628906
    10. '           ' → logprob: -15.288185119628906

Token 1809: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034038324374705553
    2. '                
' → logprob: -5.753403663635254
    3. '<|end|>' → logprob: -10.003403663635254
    4. '```' → logprob: -10.503403663635254
    5. ' 
' → logprob: -10.753403663635254
    6. '                ' → logprob: -11.003403663635254
    7. '  
' → logprob: -11.003403663635254
    8. '       ' → logprob: -11.253403663635254
    9. ')' → logprob: -12.003403663635254
    10. '              ' → logprob: -12.003403663635254

Token 1810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011727249948307872
    2. '                
' → logprob: -6.8761725425720215
    3. '
' → logprob: -9.12617301940918
    4. '#' → logprob: -10.75117301940918
    5. '```' → logprob: -13.37617301940918
    6. 'import' → logprob: -13.62617301940918
    7. '                    
' → logprob: -13.75117301940918
    8. '               
' → logprob: -14.25117301940918
    9. '            
' → logprob: -14.37617301940918
    10. '              ' → logprob: -14.37617301940918

Token 1811: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3515712320804596
    2. '               ' → logprob: -1.2265712022781372
    3. 'coins' → logprob: -6.726571083068848
    4. 'pay' → logprob: -6.851571083068848
    5. 'coin' → logprob: -7.726571083068848
    6. ' #' → logprob: -8.476571083068848
    7. 'for' → logprob: -9.601571083068848
    8. 'payment' → logprob: -11.101571083068848
    9. '                
' → logprob: -11.226571083068848
    10. 'given' → logprob: -11.476571083068848

Token 1812: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06559062749147415
    2. '               ' → logprob: -2.8155906200408936
    3. 'coins' → logprob: -6.690590858459473
    4. ' #' → logprob: -7.065590858459473
    5. 'pay' → logprob: -7.065590858459473
    6. 'given' → logprob: -9.190590858459473
    7. 'coin' → logprob: -9.315590858459473
    8. 'if' → logprob: -9.315590858459473
    9. 'for' → logprob: -9.440590858459473
    10. 'available' → logprob: -9.815590858459473

Token 1813: ' veut' (ID: 41653)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20076090097427368
    2. 'continue' → logprob: -3.075760841369629
    3. 'do' → logprob: -3.700760841369629
    4. ' #' → logprob: -3.825760841369629
    5. 'pe' → logprob: -4.075760841369629
    6. 'for' → logprob: -4.700760841369629
    7. '           ' → logprob: -4.700760841369629
    8. '       ' → logprob: -5.075760841369629
    9. 'veux' → logprob: -5.700760841369629
    10. 'coins' → logprob: -5.950760841369629

Token 1814: ' retirer' (ID: 136490)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.6575122475624084
    2. ' payer' → logprob: -1.4075121879577637
    3. '#' → logprob: -3.5325121879577637
    4. 'sim' → logprob: -3.6575121879577637
    5. ' vérifier' → logprob: -3.7825121879577637
    6. 'p' → logprob: -4.032512187957764
    7. 'voir' → logprob: -4.282512187957764
    8. ' essayer' → logprob: -4.407512187957764
    9. '   ' → logprob: -4.532512187957764
    10. 'don' → logprob: -4.657512187957764

Token 1815: ' les' (ID: 1341)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.41420140862464905
    2. ' coins' → logprob: -1.4142013788223267
    3. ' ' → logprob: -3.414201498031616
    4. '               ' → logprob: -4.664201259613037
    5. 'coin' → logprob: -5.289201259613037
    6. ' {' → logprob: -5.289201259613037
    7. '500' → logprob: -5.414201259613037
    8. '                   ' → logprob: -5.539201259613037
    9. '{' → logprob: -5.539201259613037
    10. ' les' → logprob: -6.039201259613037

Token 1816: ' pièces' (ID: 49165)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6788725852966309
    2. 'coins' → logprob: -1.1788725852966309
    3. '100' → logprob: -2.803872585296631
    4. '500' → logprob: -2.928872585296631
    5. '{
' → logprob: -3.053872585296631
    6. 'pieces' → logprob: -4.928872585296631
    7. '1' → logprob: -5.553872585296631
    8. 'coin' → logprob: -6.178872585296631
    9. 'c' → logprob: -6.803872585296631
    10. '#' → logprob: -7.053872585296631

Token 1817: ' données' (ID: 30580)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23303353786468506
    2. 'dict' → logprob: -2.3580336570739746
    3. '500' → logprob: -3.8580336570739746
    4. ' ' → logprob: -3.9830336570739746
    5. '   ' → logprob: -4.358033657073975
    6. '_' → logprob: -4.733033657073975
    7. '       ' → logprob: -4.733033657073975
    8. ' dict' → logprob: -5.233033657073975
    9. 'don' → logprob: -5.608033657073975
    10. '_dict' → logprob: -5.733033657073975

Token 1818: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14340367913246155
    2. ',' → logprob: -3.7684037685394287
    3. 'from' → logprob: -3.8934037685394287
    4. ' from' → logprob: -4.14340353012085
    5. 'dict' → logprob: -4.39340353012085
    6. 'coins' → logprob: -5.14340353012085
    7. ' (' → logprob: -5.26840353012085
    8. '{' → logprob: -5.51840353012085
    9. ' coins' → logprob: -5.51840353012085
    10. '                   ' → logprob: -5.64340353012085

Token 1819: ' payer' (ID: 63614)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.01895327679812908
    2. 'pay' → logprob: -4.143953323364258
    3. 'p' → logprob: -6.268953323364258
    4. 'acheter' → logprob: -8.143953323364258
    5. 'le' → logprob: -8.518953323364258
    6. 'don' → logprob: -9.268953323364258
    7. ' payer' → logprob: -9.518953323364258
    8. 'l' → logprob: -10.143953323364258
    9. 'pai' → logprob: -10.143953323364258
    10. 'faire' → logprob: -10.393953323364258

Token 1820: ' pay' (ID: 2777)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005796665791422129
    2. 'coins' → logprob: -5.880796432495117
    3. ' coins' → logprob: -7.255796432495117
    4. ',' → logprob: -7.880796432495117
    5. 'from' → logprob: -8.130796432495117
    6. 'tokens' → logprob: -8.630796432495117
    7. '```' → logprob: -8.880796432495117
    8. ' (' → logprob: -9.130796432495117
    9. 'dict' → logprob: -9.130796432495117
    10. 'for' → logprob: -9.380796432495117

Token 1821: '
' (ID: 198)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.8738559484481812
    2. ',' → logprob: -1.1238559484481812
    3. '_' → logprob: -2.8738560676574707
    4. 'from' → logprob: -3.2488560676574707
    5. '               ' → logprob: -3.6238560676574707
    6. '```' → logprob: -3.7488560676574707
    7. ' (' → logprob: -4.373856067657471
    8. ' ,' → logprob: -4.498856067657471
    9. '[' → logprob: -4.498856067657471
    10. '_tokens' → logprob: -5.123856067657471

Token 1822: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005038236267864704
    2. '                
' → logprob: -8.625503540039062
    3. '                ' → logprob: -8.750503540039062
    4. ' (' → logprob: -10.000503540039062
    5. '              ' → logprob: -10.000503540039062
    6. ',' → logprob: -10.375503540039062
    7. 'from' → logprob: -11.875503540039062
    8. '			' → logprob: -12.750503540039062
    9. '[' → logprob: -12.875503540039062
    10. '                   ' → logprob: -13.125503540039062

Token 1823: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.0198060274124146
    2. '               ' → logprob: -1.3948060274124146
    3. ' given' → logprob: -2.394805908203125
    4. '#' (adapté à ' #') → logprob: -2.394805908203125
    5. 'given' → logprob: -2.519805908203125
    6. ' coins' → logprob: -3.019805908203125
    7. 'pay' → logprob: -3.769805908203125
    8. 'if' → logprob: -4.269805908203125
    9. ' pay' → logprob: -4.894805908203125
    10. ' if' → logprob: -5.269805908203125

Token 1824: ' mont' (ID: 11554)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.091943621635437
    2. '               ' → logprob: -1.466943621635437
    3. 'pay' → logprob: -1.591943621635437
    4. 'given' → logprob: -1.841943621635437
    5. '#' → logprob: -3.5919437408447266
    6. ' given' → logprob: -4.966943740844727
    7. 'pieces' → logprob: -5.216943740844727
    8. 'coin' → logprob: -5.466943740844727
    9. 'don' → logprob: -5.716943740844727
    10. ' pay' → logprob: -5.841943740844727

Token 1825: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00040064091444946826
    2. 'ont' → logprob: -8.50040054321289
    3. 'ants' → logprob: -8.87540054321289
    4. 'antd' → logprob: -10.75040054321289
    5. 'antt' → logprob: -11.87540054321289
    6. ' ant' → logprob: -12.12540054321289
    7. '_ant' → logprob: -12.62540054321289
    8. 'and' → logprob: -13.00040054321289
    9. 'on' → logprob: -13.00040054321289
    10. '[' → logprob: -13.62540054321289

Token 1826: ' pay' (ID: 2777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.143855094909668
    2. '_' → logprob: -1.768855094909668
    3. '_d' → logprob: -1.893855094909668
    4. '_given' → logprob: -2.393855094909668
    5. '=' → logprob: -2.893855094909668
    6. '               ' → logprob: -3.018855094909668
    7. 'd' → logprob: -3.268855094909668
    8. '   ' → logprob: -3.518855094909668
    9. ' donné' → logprob: -4.018855094909668
    10. 'don' → logprob: -4.518855094909668

Token 1827: 'és' (ID: 1756)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3536602854728699
    2. ' =' → logprob: -3.2286603450775146
    3. 'ent' → logprob: -3.3536603450775146
    4. '=' → logprob: -3.4786603450775146
    5. '_given' → logprob: -3.4786603450775146
    6. 'ents' → logprob: -3.7286603450775146
    7. 'age' → logprob: -4.2286601066589355
    8. 'coins' → logprob: -4.3536601066589355
    9. 's' → logprob: -4.4786601066589355
    10. 't' → logprob: -4.7286601066589355

Token 1828: ' peuvent' (ID: 21321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5213769674301147
    2. '_dict' → logprob: -1.6463769674301147
    3. '_co' → logprob: -2.0213770866394043
    4. 'dict' → logprob: -4.021377086639404
    5. '_given' → logprob: -4.771377086639404
    6. '_' → logprob: -4.896377086639404
    7. '=' → logprob: -4.896377086639404
    8. '   ' → logprob: -5.396377086639404
    9. ',' → logprob: -5.396377086639404
    10. 'en' → logprob: -5.646377086639404

Token 1829: ' utiliser' (ID: 43227)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.41419029235839844
    2. 'incl' → logprob: -2.0391902923583984
    3. 'com' → logprob: -2.6641902923583984
    4. ' être' → logprob: -3.6641902923583984
    5. 'compr' → logprob: -4.289190292358398
    6. 'venir' → logprob: -4.414190292358398
    7. 'dé' → logprob: -4.664190292358398
    8. '-être' → logprob: -5.289190292358398
    9. 'conten' → logprob: -5.414190292358398
    10. '100' → logprob: -5.539190292358398

Token 1830: ':
' (ID: 734)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.29141926765441895
    2. '100' → logprob: -2.541419267654419
    3. 'les' → logprob: -3.291419267654419
    4. ' coins' → logprob: -4.04141902923584
    5. 'le' → logprob: -4.54141902923584
    6. '   ' → logprob: -4.54141902923584
    7. 'des' → logprob: -4.66641902923584
    8. '{' → logprob: -4.66641902923584
    9. '       ' → logprob: -4.79141902923584
    10. '500' → logprob: -4.79141902923584

Token 1831: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4488675594329834
    2. '100' → logprob: -1.6988675594329834
    3. '[' → logprob: -1.8238675594329834
    4. ' [' → logprob: -2.6988675594329834
    5. '                   ' → logprob: -2.6988675594329834
    6. '{' → logprob: -2.8238675594329834
    7. '1' → logprob: -2.9488675594329834
    8. '               ' → logprob: -3.3238675594329834
    9. ' {' → logprob: -3.6988675594329834
    10. '```' → logprob: -4.3238677978515625

Token 1832: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2200655937194824
    2. '100' → logprob: -1.3450655937194824
    3. 'coins' → logprob: -2.3450655937194824
    4. '500' → logprob: -2.5950655937194824
    5. '                   ' → logprob: -2.5950655937194824
    6. '{' → logprob: -2.8450655937194824
    7. '1' → logprob: -2.8450655937194824
    8. '               ' → logprob: -3.5950655937194824
    9. ' ' → logprob: -4.720065593719482
    10. '   ' → logprob: -5.095065593719482

Token 1833: ' -' (ID: 533)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -1.0350029468536377
    2. '#' → logprob: -1.6600029468536377
    3. '100' → logprob: -1.6600029468536377
    4. 'coins' → logprob: -1.7850029468536377
    5. '1' → logprob: -3.5350029468536377
    6. '               ' → logprob: -4.535002708435059
    7. '                   ' → logprob: -4.535002708435059
    8. '   ' → logprob: -4.910002708435059
    9. '       ' → logprob: -5.035002708435059
    10. '{' → logprob: -5.410002708435059

Token 1834: ' autant' (ID: 46683)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8850016593933105
    2. '500' → logprob: -1.2600016593933105
    3. '1' → logprob: -2.2600016593933105
    4. 'coins' → logprob: -2.5100016593933105
    5. '#' → logprob: -3.1350016593933105
    6. '0' → logprob: -3.8850016593933105
    7. 'bil' → logprob: -4.2600016593933105
    8. 'pieces' → logprob: -4.7600016593933105
    9. '   ' → logprob: -5.6350016593933105
    10. 'b' → logprob: -5.6350016593933105

Token 1835: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.152920126914978
    2. 'de' → logprob: -1.152920126914978
    3. '100' → logprob: -1.527920126914978
    4. ' que' → logprob: -2.2779202461242676
    5. ' ' → logprob: -4.027920246124268
    6. 'que' → logprob: -4.402920246124268
    7. '   ' → logprob: -5.152920246124268
    8. '1' → logprob: -6.277920246124268
    9. '    ' → logprob: -6.652920246124268
    10. '[' → logprob: -6.652920246124268

Token 1836: ' billets' (ID: 146301)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0782376155257225
    2. '1' → logprob: -3.203237533569336
    3. 'bil' → logprob: -4.703237533569336
    4. ' ' → logprob: -4.828237533569336
    5. 'b' → logprob: -5.078237533569336
    6. 'coins' → logprob: -5.578237533569336
    7. '{' → logprob: -5.828237533569336
    8. ' billets' → logprob: -6.828237533569336
    9. 'pieces' → logprob: -7.078237533569336
    10. '[' → logprob: -7.453237533569336

Token 1837: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5143972635269165
    2. ' que' → logprob: -1.6393972635269165
    3. ' de' → logprob: -2.014397144317627
    4. 'de' → logprob: -3.139397144317627
    5. '```' → logprob: -4.514397144317627
    6. 'que' → logprob: -5.139397144317627
    7. ' ' → logprob: -5.639397144317627
    8. ',' → logprob: -6.014397144317627
    9. '   ' → logprob: -6.014397144317627
    10. '[' → logprob: -6.389397144317627

Token 1838: '100' (ID: 1353)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7490048408508301
    2. '100' → logprob: -0.8740048408508301
    3. 'que' → logprob: -2.74900484085083
    4. 'de' → logprob: -3.49900484085083
    5. ' de' → logprob: -4.87400484085083
    6. '```' → logprob: -5.87400484085083
    7. '   ' → logprob: -6.87400484085083
    8. ' ' → logprob: -6.99900484085083
    9. ',' → logprob: -7.12400484085083
    10. '_' → logprob: -7.12400484085083

Token 1839: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '000' → logprob: -16.375
    4. ',' → logprob: -16.375
    5. ' ' → logprob: -17.125
    6. '00' → logprob: -17.25
    7. '   ' → logprob: -17.5
    8. ')' → logprob: -18.125
    9. ':' → logprob: -18.25
    10. '{' → logprob: -18.375

Token 1840: ' qu' (ID: 474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37581050395965576
    2. ' que' → logprob: -1.3758105039596558
    3. 'que' → logprob: -3.8758106231689453
    4. '```' → logprob: -4.375810623168945
    5. 'yen' → logprob: -5.000810623168945
    6. 's' → logprob: -5.000810623168945
    7. ':' → logprob: -6.000810623168945
    8. ' ,' → logprob: -6.250810623168945
    9. 'qu' → logprob: -6.250810623168945
    10. ',y' → logprob: -7.000810623168945

Token 1841: ''on' (ID: 25812)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.1078256368637085
    2. ''on' → logprob: -1.2328256368637085
    3. 'needed' → logprob: -1.7328256368637085
    4. 'possible' → logprob: -2.982825756072998
    5. ''il' → logprob: -3.107825756072998
    6. ' nécessaire' → logprob: -3.857825756072998
    7. '   ' → logprob: -4.482825756072998
    8. 'necessary' → logprob: -4.607825756072998
    9. '```' → logprob: -4.607825756072998
    10. 'né' → logprob: -5.357825756072998

Token 1842: ' veut' (ID: 41653)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.6972306370735168
    2. 've' → logprob: -1.197230577468872
    3. 'veux' → logprob: -1.697230577468872
    4. 'a' → logprob: -5.447230815887451
    5. 'voud' → logprob: -6.072230815887451
    6. 'poss' → logprob: -6.322230815887451
    7. 'pu' → logprob: -6.822230815887451
    8. ' veut' → logprob: -6.822230815887451
    9. 'want' → logprob: -7.197230815887451
    10. '  ' → logprob: -7.322230815887451

Token 1843: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7717991471290588
    2. ',' → logprob: -1.271799087524414
    3. ' (' → logprob: -2.396799087524414
    4. '#' → logprob: -2.396799087524414
    5. ',
' → logprob: -4.146799087524414
    6. ' #' → logprob: -4.646799087524414
    7. '```' → logprob: -4.646799087524414
    8. '                   ' → logprob: -4.771799087524414
    9. ' ' → logprob: -5.521799087524414
    10. '[' → logprob: -5.646799087524414

Token 1845: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6790145635604858
    2. '#' (adapté à ' #') → logprob: -1.0540145635604858
    3. ' #' → logprob: -2.6790146827697754
    4. ',' → logprob: -3.6790146827697754
    5. '                ' → logprob: -4.179014682769775
    6. '                   ' → logprob: -4.929014682769775
    7. '-' → logprob: -4.929014682769775
    8. 'et' → logprob: -5.179014682769775
    9. '500' → logprob: -5.554014682769775
    10. ' ' → logprob: -6.054014682769775

Token 1846: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23235587775707245
    2. ' #' → logprob: -2.607355833053589
    3. ' ' → logprob: -2.982355833053589
    4. '               ' → logprob: -3.482355833053589
    5. '500' → logprob: -4.107356071472168
    6. '                ' → logprob: -4.357356071472168
    7. '                   ' → logprob: -5.232356071472168
    8. '                 ' → logprob: -5.857356071472168
    9. '   ' → logprob: -6.857356071472168
    10. '...' → logprob: -6.982356071472168

Token 1847: ' et' (ID: 859)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.23902806639671326
    2. '#' → logprob: -2.114027976989746
    3. 'pieces' → logprob: -3.739027976989746
    4. ' coins' → logprob: -4.364027976989746
    5. 'coin' → logprob: -4.739027976989746
    6. '500' → logprob: -4.989027976989746
    7. 'c' → logprob: -5.239027976989746
    8. '               ' → logprob: -5.614027976989746
    9. 'co' → logprob: -5.614027976989746
    10. ' ' → logprob: -5.989027976989746

Token 1848: ' les' (ID: 1341)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7208489775657654
    2. 'les' → logprob: -1.0958490371704102
    3. ' les' → logprob: -2.84584903717041
    4. ' coins' → logprob: -3.09584903717041
    5. 'des' → logprob: -3.84584903717041
    6. 'co' → logprob: -4.59584903717041
    7. 'pieces' → logprob: -4.72084903717041
    8. 'the' → logprob: -4.72084903717041
    9. 'le' → logprob: -5.22084903717041
    10. '#' → logprob: -5.47084903717041

Token 1849: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5546151995658875
    2. 'pieces' → logprob: -1.1796152591705322
    3. '[' → logprob: -2.6796152591705322
    4. 'pi' → logprob: -4.554615020751953
    5. ' coins' → logprob: -4.804615020751953
    6. 'coin' → logprob: -5.554615020751953
    7. '500' → logprob: -5.554615020751953
    8. 'c' → logprob: -5.554615020751953
    9. ' pieces' → logprob: -5.804615020751953
    10. '{' → logprob: -5.804615020751953

Token 1850: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.142253041267395
    2. '_tpl' → logprob: -2.0172529220581055
    3. '500' → logprob: -2.2672529220581055
    4. '1' → logprob: -3.0172529220581055
    5. ',' → logprob: -3.1422529220581055
    6. '               ' → logprob: -3.2672529220581055
    7. '
' → logprob: -3.3922529220581055
    8. ' ' → logprob: -3.5172529220581055
    9. '_tuple' → logprob: -3.6422529220581055
    10. '   ' → logprob: -3.6422529220581055

Token 1851: '1' (ID: 16)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.781170666217804
    2. 'c' → logprob: -1.4061706066131592
    3. 'coin' → logprob: -2.156170606613159
    4. '500' → logprob: -2.656170606613159
    5. 'CO' → logprob: -3.156170606613159
    6. '1' → logprob: -3.531170606613159
    7. ' coins' → logprob: -4.781170845031738
    8. ')' → logprob: -4.906170845031738
    9. ' c' → logprob: -5.531170845031738
    10. '[' → logprob: -5.656170845031738

Token 1852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07900182157754898
    2. ' ,' → logprob: -2.5790019035339355
    3. '0' → logprob: -10.704001426696777
    4. '500' → logprob: -10.829001426696777
    5. '   ' → logprob: -11.079001426696777
    6. ',
' → logprob: -11.329001426696777
    7. ' ' → logprob: -12.329001426696777
    8. '<|end|>' → logprob: -12.454001426696777
    9. '100' → logprob: -12.579001426696777
    10. '5' → logprob: -12.579001426696777

Token 1853: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05024265870451927
    2. ' ' → logprob: -3.0502426624298096
    3. '   ' → logprob: -7.4252424240112305
    4. ',' → logprob: -8.05024242401123
    5. '    ' → logprob: -8.55024242401123
    6. '  ' → logprob: -8.55024242401123
    7. '500' → logprob: -8.80024242401123
    8. '     ' → logprob: -9.67524242401123
    9. '       ' → logprob: -10.67524242401123
    10. '      ' → logprob: -10.80024242401123

Token 1854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014582125004380941
    2. ' ,' → logprob: -7.126458168029785
    3. '0' → logprob: -7.501458168029785
    4. ',
' → logprob: -9.751458168029785
    5. '100' → logprob: -10.751458168029785
    6. '00' → logprob: -12.626458168029785
    7. '   ' → logprob: -12.751458168029785
    8. '),' → logprob: -12.876458168029785
    9. '```' → logprob: -13.001458168029785
    10. ')' → logprob: -13.626458168029785

Token 1855: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.375015258789062
    3. ',' → logprob: -12.500015258789062
    4. '100' → logprob: -15.250015258789062
    5. '```' → logprob: -17.000015258789062
    6. '   ' → logprob: -17.250015258789062
    7. '...' → logprob: -18.125015258789062
    8. '0' → logprob: -18.375015258789062
    9. ')' → logprob: -18.875015258789062
    10. '  ' → logprob: -19.375015258789062

Token 1856: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022880789765622467
    2. '50' → logprob: -9.500228881835938
    3. ',
' → logprob: -9.750228881835938
    4. '100' → logprob: -10.500228881835938
    5. ' ,' → logprob: -10.500228881835938
    6. ',,' → logprob: -11.375228881835938
    7. '),' → logprob: -12.000228881835938
    8. '```' → logprob: -12.625228881835938
    9. '...,' → logprob: -13.000228881835938
    10. '0' → logprob: -13.000228881835938

Token 1857: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0013447580859065056
    2. ' ' → logprob: -6.626344680786133
    3. '   ' → logprob: -11.751344680786133
    4. ',' → logprob: -11.751344680786133
    5. '100' → logprob: -13.001344680786133
    6. '  ' → logprob: -15.001344680786133
    7. '     ' → logprob: -15.876344680786133
    8. '	' → logprob: -16.126344680786133
    9. '       ' → logprob: -16.876344680786133
    10. '```' → logprob: -16.876344680786133

Token 1858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003777648089453578
    2. ' ,' → logprob: -8.625377655029297
    3. ',
' → logprob: -9.000377655029297
    4. '```' → logprob: -11.000377655029297
    5. '100' → logprob: -11.125377655029297
    6. '
' → logprob: -12.000377655029297
    7. ')' → logprob: -12.375377655029297
    8. ',[' → logprob: -12.375377655029297
    9. ',,' → logprob: -12.750377655029297
    10. '   ' → logprob: -12.750377655029297

Token 1859: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.625003814697266
    4. '```' → logprob: -16.125003814697266
    5. '0' → logprob: -17.000003814697266
    6. '  ' → logprob: -17.750003814697266
    7. '``' → logprob: -18.375003814697266
    8. '#' → logprob: -19.000003814697266
    9. ',' → logprob: -19.250003814697266
    10. '
' → logprob: -19.875003814697266

Token 1860: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030839374288916588
    2. ')' → logprob: -3.655839443206787
    3. ',)' → logprob: -5.780839443206787
    4. ',
' → logprob: -7.530839443206787
    5. ' ,' → logprob: -8.030838966369629
    6. 's' → logprob: -8.655838966369629
    7. ' )' → logprob: -9.655838966369629
    8. '
' → logprob: -9.905838966369629
    9. '),' → logprob: -10.155838966369629
    10. '   ' → logprob: -10.530838966369629

Token 1861: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045461256057024
    2. '                
' → logprob: -4.545461177825928
    3. ':' → logprob: -5.045461177825928
    4. '
' → logprob: -5.045461177825928
    5. ',' → logprob: -5.170461177825928
    6. '```' → logprob: -5.545461177825928
    7. '                ' → logprob: -6.170461177825928
    8. ')' → logprob: -6.545461177825928
    9. '                   ' → logprob: -6.920461177825928
    10. ' (' → logprob: -7.170461177825928

Token 1862: ' possession' (ID: 37597)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.02106005698442459
    2. 'quant' → logprob: -4.521059989929199
    3. 'counts' → logprob: -5.521059989929199
    4. 'coin' → logprob: -6.146059989929199
    5. ' coins' → logprob: -7.271059989929199
    6. '```' → logprob: -7.646059989929199
    7. 'pieces' → logprob: -7.896059989929199
    8. 'collections' → logprob: -8.2710599899292
    9. 'multip' → logprob: -8.5210599899292
    10. 'nombre' → logprob: -8.5210599899292

Token 1863: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21246232092380524
    2. '
' → logprob: -2.9624624252319336
    3. '#' → logprob: -3.2124624252319336
    4. 'coins' → logprob: -3.5874624252319336
    5. '```' → logprob: -3.9624624252319336
    6. 'available' → logprob: -4.337462425231934
    7. ',' → logprob: -4.712462425231934
    8. 'for' → logprob: -5.087462425231934
    9. '                
' → logprob: -5.837462425231934
    10. '   ' → logprob: -6.462462425231934

Token 1864: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030740872025489807
    2. '                
' → logprob: -6.1280741691589355
    3. 'tokens' → logprob: -8.503073692321777
    4. ' for' → logprob: -8.878073692321777
    5. 'for' → logprob: -9.003073692321777
    6. '			' → logprob: -10.003073692321777
    7. '       ' → logprob: -10.253073692321777
    8. ' ' → logprob: -10.378073692321777
    9. '```' → logprob: -10.628073692321777
    10. '   ' → logprob: -11.003073692321777

Token 1865: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7725392580032349
    2. 'for' → logprob: -1.3975392580032349
    3. '#' (adapté à ' #') → logprob: -1.7725392580032349
    4. 'coins' → logprob: -3.1475391387939453
    5. 'pay' → logprob: -3.5225391387939453
    6. 'possible' → logprob: -4.647539138793945
    7. ' #' → logprob: -4.647539138793945
    8. ' for' → logprob: -4.772539138793945
    9. 'coin' → logprob: -5.272539138793945
    10. 'available' → logprob: -5.272539138793945

Token 1866: ' Mont' (ID: 11992)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0189415216445923
    2. 'for' → logprob: -1.6439415216445923
    3. 'coins' → logprob: -2.1439414024353027
    4. 'possible' → logprob: -2.3939414024353027
    5. '               ' → logprob: -3.0189414024353027
    6. 'pay' → logprob: -3.0189414024353027
    7. 'available' → logprob: -3.1439414024353027
    8. ' #' → logprob: -3.5189414024353027
    9. 'coin' → logprob: -3.7689414024353027
    10. 'def' → logprob: -4.893941402435303

Token 1867: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.005427631549537182
    2. 'ants' → logprob: -5.255427837371826
    3. 'ont' → logprob: -9.880427360534668
    4. 'amount' → logprob: -10.380427360534668
    5. '_ant' → logprob: -11.130427360534668
    6. 'sum' → logprob: -11.380427360534668
    7. 'on' → logprob: -11.505427360534668
    8. '
' → logprob: -11.880427360534668
    9. '_amount' → logprob: -12.005427360534668
    10. 'antd' → logprob: -12.005427360534668

Token 1868: ' à' (ID: 1221)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5619611740112305
    2. '_pay' → logprob: -1.8119611740112305
    3. '_given' → logprob: -2.5619611740112305
    4. 'd' → logprob: -3.4369611740112305
    5. 'pay' → logprob: -3.8119611740112305
    6. 'à' → logprob: -3.8119611740112305
    7. 'rest' → logprob: -3.8119611740112305
    8. '_a' → logprob: -3.9369611740112305
    9. '_to' → logprob: -4.4369611740112305
    10. '_p' → logprob: -4.6869611740112305

Token 1869: ' payer' (ID: 63614)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.006262104492634535
    2. 'p' → logprob: -5.381262302398682
    3. 'don' → logprob: -6.631262302398682
    4. 'pay' → logprob: -8.256261825561523
    5. '```' → logprob: -10.631261825561523
    6. 'r' → logprob: -11.381261825561523
    7. '#' → logprob: -11.881261825561523
    8. ' payer' → logprob: -12.631261825561523
    9. '   ' → logprob: -13.006261825561523
    10. 'paid' → logprob: -13.256261825561523

Token 1870: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29425248503685
    2. ' =' → logprob: -1.9192525148391724
    3. 'coins' → logprob: -3.169252395629883
    4. 'pay' → logprob: -3.919252395629883
    5. 'remaining' → logprob: -4.419252395629883
    6. 'total' → logprob: -4.669252395629883
    7. 'rest' → logprob: -5.169252395629883
    8. 'coin' → logprob: -5.669252395629883
    9. 'needed' → logprob: -5.919252395629883
    10. '               ' → logprob: -6.169252395629883

Token 1871: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.8516042232513428
    2. 'remaining' → logprob: -1.1016042232513428
    3. 'amount' → logprob: -2.7266042232513428
    4. 'coins' → logprob: -2.8516042232513428
    5. 'remain' → logprob: -3.6016042232513428
    6. 'needed' → logprob: -3.7266042232513428
    7. 'rem' → logprob: -3.8516042232513428
    8. 'to' → logprob: -4.476604461669922
    9. 'amt' → logprob: -5.226604461669922
    10. 'coin' → logprob: -5.601604461669922

Token 1872: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18450410664081573
    2. '
' → logprob: -3.4345040321350098
    3. '#' → logprob: -3.6845040321350098
    4. 'coins' → logprob: -3.6845040321350098
    5. ' =' → logprob: -3.9345040321350098
    6. 'for' → logprob: -4.55950403213501
    7. 'coin' → logprob: -4.80950403213501
    8. '                   ' → logprob: -4.93450403213501
    9. ' for' → logprob: -5.30950403213501
    10. 'possible' → logprob: -5.30950403213501

Token 1873: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07342983037233353
    2. '#' → logprob: -3.948429822921753
    3. '
' → logprob: -4.323430061340332
    4. 'if' → logprob: -5.198430061340332
    5. 'coins' → logprob: -5.323430061340332
    6. '```' → logprob: -5.698430061340332
    7. 'for' → logprob: -5.948430061340332
    8. '       ' → logprob: -6.073430061340332
    9. 'remaining' → logprob: -6.198430061340332
    10. ' if' → logprob: -6.198430061340332

Token 1874: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6707732081413269
    2. 'for' → logprob: -1.6707732677459717
    3. '#' (adapté à ' #') → logprob: -1.9207732677459717
    4. 'coins' → logprob: -2.1707732677459717
    5. 'pay' → logprob: -3.9207732677459717
    6. 'coin' → logprob: -4.670773029327393
    7. 'possible' → logprob: -5.545773029327393
    8. 'remaining' → logprob: -6.670773029327393
    9. 'poss' → logprob: -6.670773029327393
    10. 'found' → logprob: -7.170773029327393

Token 1875: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9851863980293274
    2. 'coins' → logprob: -1.6101863384246826
    3. 'for' → logprob: -2.1101863384246826
    4. 'pay' → logprob: -2.6101863384246826
    5. '               ' → logprob: -2.9851863384246826
    6. 'possible' → logprob: -2.9851863384246826
    7. 'needed' → logprob: -3.6101863384246826
    8. 'found' → logprob: -3.7351863384246826
    9. 'remaining' → logprob: -3.8601863384246826
    10. 'available' → logprob: -4.735186576843262

Token 1876: ' nombre' (ID: 9733)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7309812903404236
    2. 'des' → logprob: -1.8559813499450684
    3. 'coins' → logprob: -2.4809813499450684
    4. ' des' → logprob: -2.7309813499450684
    5. 'total' → logprob: -3.6059813499450684
    6. '#' → logprob: -3.7309813499450684
    7. '                   ' → logprob: -3.9809813499450684
    8. 'remaining' → logprob: -4.105981349945068
    9. ' coins' → logprob: -4.480981349945068
    10. ' de' → logprob: -4.730981349945068

Token 1877: ' billets' (ID: 146301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021269556134939194
    2. '100' → logprob: -5.14626932144165
    3. '_b' → logprob: -5.77126932144165
    4. '_des' → logprob: -5.77126932144165
    5. '_of' → logprob: -6.14626932144165
    6. '_de' → logprob: -6.39626932144165
    7. 'de' → logprob: -6.89626932144165
    8. ' de' → logprob: -7.52126932144165
    9. 'des' → logprob: -7.64626932144165
    10. '_pay' → logprob: -7.89626932144165

Token 1878: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.28421130776405334
    2. '               ' → logprob: -2.5342113971710205
    3. 'b' → logprob: -2.6592113971710205
    4. 'bill' → logprob: -2.9092113971710205
    5. '_' → logprob: -4.034211158752441
    6. '   ' → logprob: -5.284211158752441
    7. 'bil' → logprob: -5.784211158752441
    8. '                   ' → logprob: -5.784211158752441
    9. '       ' → logprob: -6.159211158752441
    10. 'n' → logprob: -6.159211158752441

Token 1879: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0573309101164341
    2. 'pay' → logprob: -4.057331085205078
    3. ' =' → logprob: -4.432331085205078
    4. '   ' → logprob: -4.557331085205078
    5. '=' → logprob: -5.432331085205078
    6. '               ' → logprob: -5.932331085205078
    7. '       ' → logprob: -6.182331085205078
    8. '_' → logprob: -6.307331085205078
    9. '           ' → logprob: -6.807331085205078
    10. 'de' → logprob: -7.182331085205078

Token 1880: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. '       ' → logprob: -10.000075340270996
    3. '   ' → logprob: -11.125075340270996
    4. '           ' → logprob: -12.250075340270996
    5. '               ' → logprob: -12.625075340270996
    6. '000' → logprob: -13.375075340270996
    7. '```' → logprob: -13.750075340270996
    8. '00' → logprob: -14.125075340270996
    9. '                   ' → logprob: -14.625075340270996
    10. 'pay' → logprob: -14.750075340270996

Token 1881: ' nécessaires' (ID: 74402)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.9409067630767822
    2. 'b' → logprob: -1.3159067630767822
    3. 'num' → logprob: -1.9409067630767822
    4. '               ' → logprob: -2.9409067630767822
    5. 'n' → logprob: -2.9409067630767822
    6. 'nb' → logprob: -3.6909067630767822
    7. 'pay' → logprob: -3.8159067630767822
    8. '       ' → logprob: -4.690906524658203
    9. '   ' → logprob: -5.065906524658203
    10. ' =' → logprob: -5.440906524658203

Token 1882: ' :
' (ID: 10039)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bill' → logprob: -1.1368805170059204
    2. 'b' → logprob: -1.5118805170059204
    3. 'num' → logprob: -1.7618805170059204
    4. '               ' → logprob: -2.011880397796631
    5. 'notes' → logprob: -2.636880397796631
    6. 'n' → logprob: -3.136880397796631
    7. 'nb' → logprob: -4.261880397796631
    8. 'needed' → logprob: -5.261880397796631
    9. 'pay' → logprob: -5.511880397796631
    10. 'note' → logprob: -5.886880397796631

Token 1883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5892068147659302
    2. 'bill' → logprob: -1.3392068147659302
    3. 'b' → logprob: -2.2142066955566406
    4. 'num' → logprob: -3.4642066955566406
    5. 'bil' → logprob: -3.9642066955566406
    6. 'nb' → logprob: -4.964206695556641
    7. 'n' → logprob: -5.464206695556641
    8. 'pay' → logprob: -6.214206695556641
    9. 'needed' → logprob: -6.464206695556641
    10. 'count' → logprob: -6.839206695556641

Token 1884: ' num' (ID: 2269)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.49458804726600647
    2. 'b' → logprob: -1.244588017463684
    3. 'num' (adapté à ' num') → logprob: -2.4945881366729736
    4. 'notes' → logprob: -5.3695878982543945
    5. 'nb' → logprob: -5.8695878982543945
    6. 'n' → logprob: -5.8695878982543945
    7. 'max' → logprob: -6.1195878982543945
    8. 'needed' → logprob: -6.1195878982543945
    9. '       ' → logprob: -6.9945878982543945
    10. 'pay' → logprob: -7.2445878982543945

Token 1885: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14126525819301605
    2. '_b' → logprob: -2.1412651538848877
    3. '100' → logprob: -4.266265392303467
    4. 'b' → logprob: -8.766264915466309
    5. '_bill' → logprob: -11.141264915466309
    6. '_notes' → logprob: -11.391264915466309
    7. '```' → logprob: -12.641264915466309
    8. '_needed' → logprob: -13.141264915466309
    9. '_th' → logprob: -13.266264915466309
    10. '_bank' → logprob: -13.266264915466309

Token 1886: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.016253482550382614
    2. 'b' → logprob: -4.266253471374512
    3. 'th' → logprob: -6.266253471374512
    4. '_' → logprob: -9.766253471374512
    5. 'bil' → logprob: -10.016253471374512
    6. 'bill' → logprob: -10.641253471374512
    7. 'notes' → logprob: -11.391253471374512
    8. ' ' → logprob: -11.641253471374512
    9. '```' → logprob: -11.766253471374512
    10. 'coins' → logprob: -11.766253471374512

Token 1887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -11.75001049041748
    3. '```' → logprob: -14.00001049041748
    4. '   ' → logprob: -14.37501049041748
    5. '000' → logprob: -14.75001049041748
    6. '
' → logprob: -16.250009536743164
    7. ' =' → logprob: -16.250009536743164
    8. '       ' → logprob: -16.750009536743164
    9. '=' → logprob: -16.750009536743164
    10. '00' → logprob: -17.750009536743164

Token 1888: '_needed' (ID: 148421)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07844340801239014
    2. '=' → logprob: -2.7034435272216797
    3. 's' → logprob: -5.07844352722168
    4. '   ' → logprob: -7.20344352722168
    5. '_pay' → logprob: -7.57844352722168
    6. '_needed' → logprob: -8.45344352722168
    7. '=b' → logprob: -8.82844352722168
    8. '=int' → logprob: -9.45344352722168
    9. '_b' → logprob: -9.57844352722168
    10. '```' → logprob: -9.70344352722168

Token 1889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148564875125885
    2. ' =' → logprob: -1.7014856338500977
    3. '=int' → logprob: -10.201485633850098
    4. ',' → logprob: -11.076485633850098
    5. '=num' → logprob: -11.576485633850098
    6. '=max' → logprob: -12.201485633850098
    7. '   ' → logprob: -13.076485633850098
    8. ')' → logprob: -14.451485633850098
    9. '```' → logprob: -14.701485633850098
    10. '=
' → logprob: -15.326485633850098

Token 1890: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.9430713653564453
    2. '(pay' → logprob: -1.1930713653564453
    3. 'max' → logprob: -1.3180713653564453
    4. '(max' → logprob: -3.4430713653564453
    5. ' max' → logprob: -5.943071365356445
    6. ' (' → logprob: -6.068071365356445
    7. ' pay' → logprob: -6.818071365356445
    8. '0' → logprob: -6.818071365356445
    9. '(p' → logprob: -8.193071365356445
    10. '(' → logprob: -8.943071365356445

Token 1891: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06206224486231804
    2. ' =' → logprob: -2.8120622634887695
    3. '//' → logprob: -9.56206226348877
    4. ' //' → logprob: -11.31206226348877
    5. '//=' → logprob: -12.31206226348877
    6. '   ' → logprob: -12.81206226348877
    7. '#' → logprob: -13.43706226348877
    8. '=
' → logprob: -13.93706226348877
    9. '=(' → logprob: -14.31206226348877
    10. ',' → logprob: -14.68706226348877

Token 1892: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -18.750001907348633
    5. '  ' → logprob: -18.875001907348633
    6. '1' → logprob: -20.250001907348633
    7. '１００' → logprob: -20.625001907348633
    8. '`' → logprob: -21.000001907348633
    9. '[' → logprob: -21.375001907348633
    10. '	' → logprob: -21.500001907348633

Token 1893: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: 0.0
    2. '１００' → logprob: -19.625
    3. ' ' → logprob: -20.875
    4. '```' → logprob: -23.625
    5. '1' → logprob: -24.125
    6. '[' → logprob: -24.25
    7. '   ' → logprob: -24.5
    8. 'import' → logprob: -24.625
    9. '
' → logprob: -25.25
    10. '#' → logprob: -25.5

Token 1894: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '               ' → logprob: -16.5
    3. '   ' → logprob: -16.875
    4. '           ' → logprob: -17.75
    5. '```' → logprob: -17.875
    6. '000' → logprob: -18.625
    7. '                   ' → logprob: -18.75
    8. ' ' → logprob: -18.875
    9. '       ' → logprob: -19.25
    10. '_' → logprob: -20.5

Token 1895: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7847115993499756
    2. '               ' → logprob: -1.1597115993499756
    3. 'if' → logprob: -2.7847115993499756
    4. '+' → logprob: -3.5347115993499756
    5. 'num' → logprob: -3.5347115993499756
    6. ' if' → logprob: -3.6597115993499756
    7. '                ' → logprob: -4.534711837768555
    8. ')' → logprob: -4.784711837768555
    9. '<|end|>' → logprob: -4.784711837768555
    10. '                
' → logprob: -5.284711837768555

Token 1896: '               ' (ID: 506)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.9113816022872925
    2. 'rest' → logprob: -1.6613816022872925
    3. '               ' → logprob: -1.9113816022872925
    4. 'rem' → logprob: -2.161381721496582
    5. 'if' → logprob: -2.286381721496582
    6. 'reste' → logprob: -3.911381721496582
    7. 're' → logprob: -4.411381721496582
    8. ' remainder' → logprob: -5.786381721496582
    9. 'remain' → logprob: -6.036381721496582
    10. 'remaining' → logprob: -6.036381721496582

Token 1897: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.552029013633728
    2. 'rem' → logprob: -2.0520291328430176
    3. 'reste' → logprob: -2.1770291328430176
    4. 'pay' → logprob: -2.5520291328430176
    5. 're' → logprob: -3.0520291328430176
    6. 'remaining' → logprob: -3.5520291328430176
    7. 'pieces' → logprob: -5.052029132843018
    8. 'coins' → logprob: -5.177029132843018
    9. 'remain' → logprob: -5.302029132843018
    10. 'num' → logprob: -5.677029132843018

Token 1898: '_pay' (ID: 66263)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09864680469036102
    2. '=' → logprob: -2.598646879196167
    3. '_pay' → logprob: -3.973646879196167
    4. 'pay' → logprob: -8.473647117614746
    5. '_to' → logprob: -9.348647117614746
    6. '               ' → logprob: -9.598647117614746
    7. '_' → logprob: -9.598647117614746
    8. '   ' → logprob: -9.848647117614746
    9. '           ' → logprob: -10.223647117614746
    10. '_amount' → logprob: -10.598647117614746

Token 1899: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194087624549866
    2. '=' → logprob: -1.5019408464431763
    3. '=int' → logprob: -13.126940727233887
    4. '   ' → logprob: -13.126940727233887
    5. '＝' → logprob: -13.501940727233887
    6. ' ' → logprob: -13.626940727233887
    7. '_needed' → logprob: -14.126940727233887
    8. '           ' → logprob: -15.001940727233887
    9. '               ' → logprob: -15.001940727233887
    10. '       ' → logprob: -15.001940727233887

Token 1900: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.00043615259346552193
    2. ' pay' → logprob: -7.750436305999756
    3. '   ' → logprob: -12.750435829162598
    4. '(pay' → logprob: -14.375435829162598
    5. '           ' → logprob: -14.750435829162598
    6. '               ' → logprob: -15.000435829162598
    7. ' ' → logprob: -15.000435829162598
    8. 'play' → logprob: -15.625435829162598
    9. '       ' → logprob: -15.750435829162598
    10. '100' → logprob: -16.000436782836914

Token 1901: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10035688430070877
    2. ' %' → logprob: -2.3503568172454834
    3. ' %=' → logprob: -9.850357055664062
    4. '%=' → logprob: -9.850357055664062
    5. '=' → logprob: -10.350357055664062
    6. ' =' → logprob: -11.600357055664062
    7. '%%%' → logprob: -13.725357055664062
    8. '%
' → logprob: -14.600357055664062
    9. '   ' → logprob: -14.850357055664062
    10. '```' → logprob: -14.975357055664062

Token 1902: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.875140190124512
    4. '  ' → logprob: -15.875140190124512
    5. '```' → logprob: -18.000139236450195
    6. '
' → logprob: -18.125139236450195
    7. '    ' → logprob: -18.875139236450195
    8. '>' → logprob: -19.625139236450195
    9. '１００' → logprob: -20.375139236450195
    10. '       ' → logprob: -20.875139236450195

Token 1903: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.125
    5. '  ' → logprob: -20.625
    6. '1' → logprob: -21.25
    7. '
' → logprob: -21.375
    8. '１００' → logprob: -21.5
    9. '[' → logprob: -22.125
    10. '{' → logprob: -22.5

Token 1904: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '               ' → logprob: -13.625001907348633
    3. '000' → logprob: -14.875001907348633
    4. '           ' → logprob: -16.750001907348633
    5. '       ' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '۰' → logprob: -18.875001907348633
    8. '```' → logprob: -19.000001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '00' → logprob: -19.375001907348633

Token 1905: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5986620187759399
    2. '
' → logprob: -2.2236618995666504
    3. 'coins' → logprob: -2.4736618995666504
    4. '#' → logprob: -2.5986618995666504
    5. '                
' → logprob: -2.8486618995666504
    6. 'if' → logprob: -3.0986618995666504
    7. '```' → logprob: -3.0986618995666504
    8. ' if' → logprob: -5.09866189956665
    9. ' coins' → logprob: -5.09866189956665
    10. ' #' → logprob: -5.97366189956665

Token 1906: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016853798180818558
    2. 'coins' → logprob: -5.0168538093566895
    3. '#' → logprob: -5.2668538093566895
    4. 'if' → logprob: -6.7668538093566895
    5. 'possible' → logprob: -6.7668538093566895
    6. 'for' → logprob: -7.6418538093566895
    7. 'poss' → logprob: -7.6418538093566895
    8. 'coin' → logprob: -8.016853332519531
    9. '```' → logprob: -8.266853332519531
    10. 'available' → logprob: -8.516853332519531

Token 1907: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20854438841342926
    2. '#' (adapté à ' #') → logprob: -2.0835444927215576
    3. 'can' → logprob: -3.7085444927215576
    4. 'coins' → logprob: -4.3335442543029785
    5. 'possible' → logprob: -4.4585442543029785
    6. 'available' → logprob: -4.8335442543029785
    7. '               ' → logprob: -6.0835442543029785
    8. 'poss' → logprob: -6.5835442543029785
    9. 'valid' → logprob: -7.2085442543029785
    10. 'coin' → logprob: -7.4585442543029785

Token 1908: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20953267812728882
    2. '#' → logprob: -2.3345327377319336
    3. 'possible' → logprob: -3.4595327377319336
    4. 'available' → logprob: -3.9595327377319336
    5. 'poss' → logprob: -4.084532737731934
    6. 'coins' → logprob: -4.584532737731934
    7. '               ' → logprob: -4.959532737731934
    8. 'coin' → logprob: -6.459532737731934
    9. 'can' → logprob: -6.709532737731934
    10. 'pieces' → logprob: -6.709532737731934

Token 1909: ' payer' (ID: 63614)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7248926162719727
    2. 'coins' → logprob: -1.8498926162719727
    3. 'c' → logprob: -2.4748926162719727
    4. 'i' → logprob: -2.8498926162719727
    5. 'coin' → logprob: -3.0998926162719727
    6. 'x' → logprob: -3.3498926162719727
    7. 'r' → logprob: -3.7248926162719727
    8. 'n' → logprob: -3.8498926162719727
    9. 'pieces' → logprob: -4.224892616271973
    10. 'num' → logprob: -4.349892616271973

Token 1910: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.04770328849554062
    2. 'i' → logprob: -4.297703266143799
    3. 'coins' → logprob: -4.797703266143799
    4. ' rest' → logprob: -4.922703266143799
    5. 'les' → logprob: -5.547703266143799
    6. 'coin' → logprob: -5.672703266143799
    7. 'pieces' → logprob: -5.922703266143799
    8. '   ' → logprob: -6.672703266143799
    9. 'the' → logprob: -6.797703266143799
    10. 'c' → logprob: -6.922703266143799

Token 1911: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0032070616725832224
    2. 'rest' → logprob: -6.753207206726074
    3. '_rest' → logprob: -6.878207206726074
    4. '   ' → logprob: -7.503207206726074
    5. 'pay' → logprob: -8.378207206726074
    6. '100' → logprob: -9.878207206726074
    7. '_' → logprob: -10.128207206726074
    8. 'e' → logprob: -11.253207206726074
    9. '_p' → logprob: -11.378207206726074
    10. '       ' → logprob: -11.503207206726074

Token 1912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.324501633644104
    2. ':' → logprob: -1.574501633644104
    3. '_possible' → logprob: -4.0745015144348145
    4. 'possible' → logprob: -4.3245015144348145
    5. '=' → logprob: -4.9495015144348145
    6. ':
' → logprob: -5.0745015144348145
    7. 'coins' → logprob: -5.5745015144348145
    8. ' =' → logprob: -5.6995015144348145
    9. '   ' → logprob: -5.9495015144348145
    10. '#' → logprob: -6.0745015144348145

Token 1913: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3249102234840393
    2. '#' → logprob: -2.3249101638793945
    3. ' for' → logprob: -2.5749101638793945
    4. 'coins' → logprob: -3.3249101638793945
    5. 'possible' → logprob: -3.3249101638793945
    6. '               ' → logprob: -5.0749101638793945
    7. ' #' → logprob: -5.0749101638793945
    8. 'if' → logprob: -5.3249101638793945
    9. ' possible' → logprob: -5.9499101638793945
    10. 'coin' → logprob: -6.3249101638793945

Token 1914: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2977205812931061
    2. 'for' → logprob: -1.7977205514907837
    3. ' #' → logprob: -3.9227206707000732
    4. 'do' → logprob: -4.172720432281494
    5. 'possible' → logprob: -4.422720432281494
    6. 'cherche' → logprob: -4.672720432281494
    7. 'poss' → logprob: -4.922720432281494
    8. ' for' → logprob: -5.047720432281494
    9. 'def' → logprob: -5.672720432281494
    10. 'import' → logprob: -5.797720432281494

Token 1915: ' utiliser' (ID: 43227)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.6922560334205627
    2. 'for' → logprob: -2.067255973815918
    3. 'avoir' → logprob: -2.942255973815918
    4. '#' → logprob: -2.942255973815918
    5. 'util' → logprob: -3.442255973815918
    6. 'possible' → logprob: -3.567255973815918
    7. '   ' → logprob: -4.067255973815918
    8. 'prendre' → logprob: -4.317255973815918
    9. '```' → logprob: -4.317255973815918
    10. 'faire' → logprob: -4.317255973815918

Token 1916: ' des' (ID: 731)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.2138265073299408
    2. 'the' → logprob: -2.4638264179229736
    3. 'pieces' → logprob: -3.0888264179229736
    4. 'les' → logprob: -3.4638264179229736
    5. ' coins' → logprob: -4.838826656341553
    6. 'co' → logprob: -5.838826656341553
    7. ' pieces' → logprob: -5.838826656341553
    8. '[' → logprob: -5.963826656341553
    9. ' the' → logprob: -5.963826656341553
    10. 'a' → logprob: -6.088826656341553

Token 1917: ' pièces' (ID: 49165)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.40928468108177185
    2. 'coins' → logprob: -1.4092847108840942
    3. '[' → logprob: -2.6592845916748047
    4. 'pi' → logprob: -4.409284591674805
    5. ' pieces' → logprob: -5.909284591674805
    6. 'co' → logprob: -6.034284591674805
    7. ' coins' → logprob: -7.409284591674805
    8. 'list' → logprob: -7.659284591674805
    9. ' [' → logprob: -8.034284591674805
    10. 'piec' → logprob: -8.159284591674805

Token 1918: ' en' (ID: 469)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5290440917015076
    2. '[' → logprob: -2.2790441513061523
    3. 'de' → logprob: -2.7790441513061523
    4. '(' → logprob: -3.0290441513061523
    5. 'rest' → logprob: -3.0290441513061523
    6. '(rest' → logprob: -3.6540441513061523
    7. '   ' → logprob: -3.9040441513061523
    8. ' (' → logprob: -4.654044151306152
    9. '1' → logprob: -4.779044151306152
    10. '_rest' → logprob: -4.904044151306152

Token 1919: ' main' (ID: 2758)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.19230931997299194
    2. 'pos' → logprob: -1.9423093795776367
    3. '[' → logprob: -4.817309379577637
    4. 'poss' → logprob: -4.942309379577637
    5. ' coins' → logprob: -5.567309379577637
    6. 'CO' → logprob: -5.692309379577637
    7. 'collections' → logprob: -5.942309379577637
    8. 'coin' → logprob: -6.317309379577637
    9. 'pieces' → logprob: -6.567309379577637
    10. 'rest' → logprob: -7.692309379577637

Token 1920: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3558957874774933
    2. ' (' → logprob: -2.230895757675171
    3. ',' → logprob: -3.355895757675171
    4. '(' → logprob: -3.730895757675171
    5. ' [' → logprob: -4.23089599609375
    6. 'ou' → logprob: -4.35589599609375
    7. '```' → logprob: -4.48089599609375
    8. ':' → logprob: -4.73089599609375
    9. ' ' → logprob: -4.98089599609375
    10. '[i' → logprob: -5.23089599609375

Token 1921: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022128233686089516
    2. ',' → logprob: -7.127213001251221
    3. '```' → logprob: -7.502213001251221
    4. '                
' → logprob: -8.127212524414062
    5. 'possible' → logprob: -9.752212524414062
    6. '                   ' → logprob: -9.877212524414062
    7. 'for' → logprob: -10.002212524414062
    8. ' (' → logprob: -10.127212524414062
    9. 'et' → logprob: -10.252212524414062
    10. '#' → logprob: -10.627212524414062

Token 1922: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13700562715530396
    2. 'possible' → logprob: -2.387005567550659
    3. '               ' → logprob: -4.762005805969238
    4. '#' (adapté à ' #') → logprob: -4.762005805969238
    5. 'coins' → logprob: -5.262005805969238
    6. 'found' → logprob: -5.637005805969238
    7. 'for' → logprob: -6.012005805969238
    8. 'coin' → logprob: -6.262005805969238
    9. 'poss' → logprob: -6.262005805969238
    10. 'available' → logprob: -6.512005805969238

Token 1923: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.568651556968689
    2. '               ' → logprob: -1.443651556968689
    3. 'possible' → logprob: -2.1936516761779785
    4. '#' → logprob: -2.9436516761779785
    5. 'found' → logprob: -4.1936516761779785
    6. 'rest' → logprob: -5.3186516761779785
    7. 'poss' → logprob: -5.3186516761779785
    8. '```' → logprob: -6.0686516761779785
    9. 'for' → logprob: -6.9436516761779785
    10. ' if' → logprob: -7.1936516761779785

Token 1924: ' doit' (ID: 21822)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.5728660821914673
    2. 'continue' → logprob: -1.9478660821914673
    3. 'do' → logprob: -2.3228659629821777
    4. '#' → logprob: -2.9478659629821777
    5. 'pe' → logprob: -3.0728659629821777
    6. 'for' → logprob: -3.8228659629821777
    7. 'essa' → logprob: -3.9478659629821777
    8. 'vais' → logprob: -4.197865962982178
    9. 'def' → logprob: -4.822865962982178
    10. 'poss' → logprob: -5.572865962982178

Token 1925: ' trouver' (ID: 23195)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.27355441451072693
    2. 'contin' → logprob: -2.0235543251037598
    3. 'tester' → logprob: -3.8985543251037598
    4. 'for' → logprob: -4.39855432510376
    5. 'chercher' → logprob: -4.52355432510376
    6. 'ver' → logprob: -4.52355432510376
    7. 'penser' → logprob: -4.64855432510376
    8. 'voir' → logprob: -4.64855432510376
    9. '#' → logprob: -5.52355432510376
    10. 's' → logprob: -5.64855432510376

Token 1926: ' si' (ID: 1784)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.235203504562378
    2. 'coins' → logprob: -1.610203504562378
    3. 'rest' → logprob: -1.985203504562378
    4. 'all' → logprob: -1.985203504562378
    5. 'une' → logprob: -2.360203504562378
    6. 'un' → logprob: -3.485203504562378
    7. 'possible' → logprob: -3.610203504562378
    8. 'for' → logprob: -4.485203742980957
    9. 'des' → logprob: -4.735203742980957
    10. 'poss' → logprob: -4.860203742980957

Token 1927: ' on' (ID: 402)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5367478728294373
    2. 'any' → logprob: -1.786747932434082
    3. 'rest' → logprob: -2.411747932434082
    4. 'there' → logprob: -2.786747932434082
    5. 'possible' → logprob: -3.161747932434082
    6. ' coins' → logprob: -5.036747932434082
    7. 'exists' → logprob: -5.161747932434082
    8. ' any' → logprob: -5.161747932434082
    9. '```' → logprob: -5.161747932434082
    10. '   ' → logprob: -5.286747932434082

Token 1928: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.008186752907931805
    2. 'a' → logprob: -5.5081868171691895
    3. 'poss' → logprob: -6.5081868171691895
    4. ' peut' → logprob: -6.8831868171691895
    5. 'can' → logprob: -7.1331868171691895
    6. 'dispose' → logprob: -7.6331868171691895
    7. 'pour' → logprob: -9.383186340332031
    8. 'possible' → logprob: -9.758186340332031
    9. ' peux' → logprob: -10.133186340332031
    10. 'pu' → logprob: -10.383186340332031

Token 1929: ' composer' (ID: 60929)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -1.611762285232544
    2. 'coins' → logprob: -1.736762285232544
    3. 'tr' → logprob: -2.236762285232544
    4. 'p' → logprob: -2.361762285232544
    5. '```' → logprob: -2.361762285232544
    6. '   ' → logprob: -2.986762285232544
    7. ' trouver' → logprob: -3.111762285232544
    8. 'util' → logprob: -3.236762285232544
    9. 'pay' → logprob: -3.611762285232544
    10. 'for' → logprob: -3.736762285232544

Token 1930: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0004020713677164167
    2. 'le' → logprob: -9.125402450561523
    3. 'les' → logprob: -9.250402450561523
    4. '```' → logprob: -10.000402450561523
    5. 'the' → logprob: -10.250402450561523
    6. 'un' → logprob: -10.250402450561523
    7. '(rest' → logprob: -10.250402450561523
    8. 'la' → logprob: -11.500402450561523
    9. 'reste' → logprob: -11.500402450561523
    10. ' rest' → logprob: -11.750402450561523

Token 1931: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0006895594415254891
    2. '               ' → logprob: -7.750689506530762
    3. '_put' → logprob: -10.125689506530762
    4. '_' → logprob: -10.250689506530762
    5. '                   ' → logprob: -10.500689506530762
    6. 'en' → logprob: -10.750689506530762
    7. '_play' → logprob: -11.125689506530762
    8. '_payment' → logprob: -11.250689506530762
    9. '_piece' → logprob: -11.500689506530762
    10. '_coin' → logprob: -11.750689506530762

Token 1932: ' avec' (ID: 3937)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.111437201499939
    2. ' avec' → logprob: -1.611437201499939
    3. 'from' → logprob: -1.736437201499939
    4. ' with' → logprob: -1.861437201499939
    5. 'avec' → logprob: -3.7364373207092285
    6. ',' → logprob: -3.8614373207092285
    7. '```' → logprob: -4.2364373207092285
    8. '<|end|>' → logprob: -4.4864373207092285
    9. ')' → logprob: -4.7364373207092285
    10. ' from' → logprob: -4.8614373207092285

Token 1933: ' les' (ID: 1341)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.04550066590309143
    2. '[' → logprob: -3.2955007553100586
    3. 'the' → logprob: -6.420500755310059
    4. ' coins' → logprob: -6.670500755310059
    5. 'a' → logprob: -6.920500755310059
    6. 'rest' → logprob: -7.170500755310059
    7. 'co' → logprob: -7.295500755310059
    8. 'CO' → logprob: -8.170500755310059
    9. 'pieces' → logprob: -8.420500755310059
    10. '{' → logprob: -8.920500755310059

Token 1934: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.3586108982563019
    2. '[' → logprob: -1.3586108684539795
    3. 'CO' → logprob: -3.7336108684539795
    4. 'pieces' → logprob: -4.108611106872559
    5. ' coins' → logprob: -7.608611106872559
    6. '[
' → logprob: -7.983611106872559
    7. 'rest' → logprob: -7.983611106872559
    8. 'co' → logprob: -7.983611106872559
    9. ' [' → logprob: -8.358611106872559
    10. 'coin' → logprob: -8.358611106872559

Token 1935: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.07392418384552
    2. 'poss' → logprob: -1.44892418384552
    3. 'available' → logprob: -1.94892418384552
    4. 'in' → logprob: -2.5739240646362305
    5. '500' → logprob: -3.5739240646362305
    6. '#' → logprob: -3.6989240646362305
    7. '1' → logprob: -3.9489240646362305
    8. '       ' → logprob: -4.4489240646362305
    9. 'de' → logprob: -4.6989240646362305
    10. 'prés' → logprob: -4.8239240646362305

Token 1936: ' main' (ID: 2758)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6786579489707947
    2. 'main' → logprob: -0.8036579489707947
    3. 'a' → logprob: -4.3036580085754395
    4. '[' → logprob: -4.4286580085754395
    5. 'poss' → logprob: -5.3036580085754395
    6. '```' → logprob: -5.3036580085754395
    7. 'hand' → logprob: -5.6786580085754395
    8. 'coins' → logprob: -6.6786580085754395
    9. 'CO' → logprob: -6.8036580085754395
    10. 'presence' → logprob: -7.6786580085754395

Token 1937: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6473742723464966
    2. 'from' → logprob: -1.8973742723464966
    3. 'def' → logprob: -2.022374153137207
    4. 'available' → logprob: -2.147374153137207
    5. 'possible' → logprob: -2.272374153137207
    6. 'coins' → logprob: -2.397374153137207
    7. '```' → logprob: -3.147374153137207
    8. 'poss' → logprob: -3.272374153137207
    9. 'import' → logprob: -3.647374153137207
    10. '#' → logprob: -3.772374153137207

Token 1938: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055208686739206314
    2. 'from' → logprob: -3.305208683013916
    3. 'import' → logprob: -4.180208683013916
    4. ' from' → logprob: -7.180208683013916
    5. '```' → logprob: -7.805208683013916
    6. 'def' → logprob: -8.430209159851074
    7. '                
' → logprob: -9.180209159851074
    8. '#' → logprob: -9.430209159851074
    9. 'possible' → logprob: -10.055209159851074
    10. '           ' → logprob: -10.930209159851074

Token 1939: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8546370267868042
    2. '#' (adapté à ' #') → logprob: -0.9796370267868042
    3. 'from' → logprob: -1.9796370267868042
    4. 'dp' → logprob: -3.8546371459960938
    5. 'coins' → logprob: -4.479637145996094
    6. 'possible' → logprob: -4.604637145996094
    7. '               ' → logprob: -4.979637145996094
    8. 'available' → logprob: -5.479637145996094
    9. 'found' → logprob: -5.479637145996094
    10. 'coin' → logprob: -6.854637145996094

Token 1940: ' Pro' (ID: 1258)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3479616045951843
    2. 'def' → logprob: -1.972961664199829
    3. '               ' → logprob: -2.722961664199829
    4. 'if' → logprob: -3.847961664199829
    5. 'import' → logprob: -3.972961664199829
    6. '#' → logprob: -4.22296142578125
    7. 'for' → logprob: -4.59796142578125
    8. '```' → logprob: -4.97296142578125
    9. 'possible' → logprob: -4.97296142578125
    10. 'coins' → logprob: -5.47296142578125

Token 1941: 'bl' (ID: 1751)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8374509215354919
    2. 'gram' → logprob: -1.5874509811401367
    3. 'ceed' → logprob: -2.0874509811401367
    4. '#' → logprob: -2.4624509811401367
    5. 'from' → logprob: -2.4624509811401367
    6. 'cess' → logprob: -4.337450981140137
    7. 'fit' → logprob: -4.962450981140137
    8. 'coins' → logprob: -5.087450981140137
    9. 'blem' → logprob: -5.212450981140137
    10. 'm' → logprob: -5.337450981140137

Token 1942: 'ème' (ID: 9767)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.17380352318286896
    2. 'blem' → logprob: -2.2988035678863525
    3. 'ble' → logprob: -3.7988035678863525
    4. 'gram' → logprob: -4.173803329467773
    5. '#' → logprob: -4.798803329467773
    6. 'cess' → logprob: -5.673803329467773
    7. 'def' → logprob: -5.798803329467773
    8. 'fit' → logprob: -6.548803329467773
    9. 'm' → logprob: -6.798803329467773
    10. '           ' → logprob: -7.423803329467773

Token 1943: ' :' (ID: 712)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7781593799591064
    2. '#' → logprob: -0.9031593799591064
    3. 'import' → logprob: -2.9031593799591064
    4. '               ' → logprob: -3.5281593799591064
    5. ':' → logprob: -4.028159141540527
    6. ' from' → logprob: -4.903159141540527
    7. 'de' → logprob: -5.028159141540527
    8. 'dp' → logprob: -6.153159141540527
    9. 'à' → logprob: -6.278159141540527
    10. 'est' → logprob: -6.403159141540527

Token 1944: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7099791765213013
    2. '#' → logprob: -1.4599791765213013
    3. 'import' → logprob: -2.2099790573120117
    4. 'coins' → logprob: -3.0849790573120117
    5. 'possible' → logprob: -3.2099790573120117
    6. 'found' → logprob: -4.084979057312012
    7. '```' → logprob: -4.084979057312012
    8. 'rest' → logprob: -4.209979057312012
    9. 'def' → logprob: -4.959979057312012
    10. 'pieces' → logprob: -5.334979057312012

Token 1945: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8181832432746887
    2. 'do' → logprob: -1.568183183670044
    3. 'cherche' → logprob: -2.443183183670044
    4. 'import' → logprob: -2.693183183670044
    5. 'n' → logprob: -2.943183183670044
    6. 'from' → logprob: -3.193183183670044
    7. 'def' → logprob: -4.068183422088623
    8. 'continue' → logprob: -4.318183422088623
    9. '```' → logprob: -4.568183422088623
    10. ' #' → logprob: -4.568183422088623

Token 1946: ' utiliser' (ID: 43227)
  Prédit: 'penser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'penser' → logprob: -1.2831007242202759
    2. 'util' → logprob: -1.6581007242202759
    3. 'faire' → logprob: -2.1581006050109863
    4. 'payer' → logprob: -2.1581006050109863
    5. 'avoir' → logprob: -2.4081006050109863
    6. 'ess' → logprob: -3.4081006050109863
    7. 'composer' → logprob: -4.158100605010986
    8. 'poss' → logprob: -4.158100605010986
    9. 'have' → logprob: -4.408100605010986
    10. 'p' → logprob: -4.408100605010986

Token 1947: ' un' (ID: 537)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.0952873229980469
    2. 'rest' → logprob: -2.220287322998047
    3. 'les' → logprob: -2.345287322998047
    4. 'des' → logprob: -2.595287322998047
    5. ' des' → logprob: -2.595287322998047
    6. ' coins' → logprob: -3.095287322998047
    7. 'pieces' → logprob: -3.345287322998047
    8. '```' → logprob: -3.470287322998047
    9. 'dp' → logprob: -3.720287322998047
    10. ' les' → logprob: -3.845287322998047

Token 1948: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21027223765850067
    2. 'pe' → logprob: -3.9602723121643066
    3. 's' → logprob: -4.210272312164307
    4. ' ou' → logprob: -4.335272312164307
    5. ' morceau' → logprob: -4.585272312164307
    6. 'a' → logprob: -4.710272312164307
    7. ' nombre' → logprob: -4.835272312164307
    8. 'nombre' → logprob: -4.960272312164307
    9. 'rest' → logprob: -5.210272312164307
    10. ' max' → logprob: -5.210272312164307

Token 1949: ' quelcon' (ID: 199130)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0897506475448608
    2. 'import' → logprob: -1.7147506475448608
    3. '_' → logprob: -2.5897507667541504
    4. 'de' → logprob: -2.9647507667541504
    5. ' limité' → logprob: -3.0897507667541504
    6. ')' → logprob: -3.3397507667541504
    7. '   ' → logprob: -3.5897507667541504
    8. '[]' → logprob: -3.5897507667541504
    9. ' minimal' → logprob: -3.9647507667541504
    10. ' of' → logprob: -4.21475076675415

Token 1950: 'que' (ID: 1126)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9406925439834595
    2. ' de' → logprob: -1.4406925439834595
    3. 'x' → logprob: -2.19069242477417
    4. '```' → logprob: -3.19069242477417
    5. 'e' → logprob: -3.31569242477417
    6. 'de' → logprob: -3.56569242477417
    7. 'aire' → logprob: -3.81569242477417
    8. '=' → logprob: -3.94069242477417
    9. ' ' → logprob: -4.06569242477417
    10. ' x' → logprob: -4.19069242477417

Token 1951: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6316471695899963
    2. ' de' → logprob: -2.0066471099853516
    3. ' limité' → logprob: -2.6316471099853516
    4. 'import' → logprob: -3.1316471099853516
    5. '```' → logprob: -3.1316471099853516
    6. 'def' → logprob: -3.1316471099853516
    7. 'd' → logprob: -3.5066471099853516
    8. 'des' → logprob: -4.381647109985352
    9. 'limit' → logprob: -4.506647109985352
    10. ' d' → logprob: -4.881647109985352

Token 1952: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -1.0253688097000122
    2. 'coins' → logprob: -1.2753688097000122
    3. 'pieces' → logprob: -1.7753688097000122
    4. 'types' → logprob: -2.7753686904907227
    5. 'CO' → logprob: -3.9003686904907227
    6. ' pièces' → logprob: -4.525368690490723
    7. 'each' → logprob: -4.525368690490723
    8. '100' → logprob: -4.525368690490723
    9. '```' → logprob: -4.775368690490723
    10. 'ces' → logprob: -5.150368690490723

Token 1953: ' qu' (ID: 474)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1059147119522095
    2. ',' → logprob: -2.35591459274292
    3. 'de' → logprob: -2.35591459274292
    4. '1' → logprob: -2.48091459274292
    5. 'rest' → logprob: -2.60591459274292
    6. ' de' → logprob: -2.98091459274292
    7. '100' → logprob: -3.23091459274292
    8. ' rest' → logprob: -3.73091459274292
    9. 'possible' → logprob: -4.10591459274292
    10. '500' → logprob: -4.10591459274292

Token 1954: ''on' (ID: 25812)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5619015693664551
    2. 'i' → logprob: -1.936901569366455
    3. 'ui' → logprob: -2.186901569366455
    4. ''on' → logprob: -2.686901569366455
    5. 'e' → logprob: -3.186901569366455
    6. 'n' → logprob: -4.436901569366455
    7. ''il' → logprob: -4.811901569366455
    8. 'ue' → logprob: -5.186901569366455
    9. 'on' → logprob: -5.311901569366455
    10. ''en' → logprob: -5.436901569366455

Token 1955: ' dét' (ID: 31931)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.050685275346040726
    2. 'a' → logprob: -3.800685167312622
    3. '#' → logprob: -4.550685405731201
    4. 'ai' → logprob: -5.300685405731201
    5. '```' → logprob: -6.300685405731201
    6. 'have' → logprob: -6.550685405731201
    7. 'avais' → logprob: -6.800685405731201
    8. 'has' → logprob: -6.800685405731201
    9. 'pe' → logprob: -6.800685405731201
    10. ' possède' → logprob: -6.925685405731201

Token 1956: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0007143391412682831
    2. 'e' → logprob: -8.250714302062988
    3. 'ruit' → logprob: -9.250714302062988
    4. 'i' → logprob: -10.625714302062988
    5. 'est' → logprob: -10.750714302062988
    6. 'ent' → logprob: -10.750714302062988
    7. '
' → logprob: -10.750714302062988
    8. 't' → logprob: -10.750714302062988
    9. '   ' → logprob: -11.000714302062988
    10. '    
' → logprob: -11.250714302062988

Token 1957: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0506305694580078
    2. '#' → logprob: -1.6756305694580078
    3. 'from' → logprob: -1.8006305694580078
    4. 'en' → logprob: -3.300630569458008
    5. 'de' → logprob: -3.675630569458008
    6. 'pour' → logprob: -3.800630569458008
    7. 'import' → logprob: -3.800630569458008
    8. 'possible' → logprob: -3.925630569458008
    9. '```' → logprob: -3.925630569458008
    10. '...' → logprob: -4.175630569458008

Token 1958: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8184577822685242
    2. '<|end|>' → logprob: -1.193457841873169
    3. ' (' → logprob: -2.818457841873169
    4. '.' → logprob: -3.443457841873169
    5. '[' → logprob: -3.568457841873169
    6. ')' → logprob: -3.818457841873169
    7. '<|end|>' → logprob: -3.943457841873169
    8. '...' → logprob: -4.56845760345459
    9. '```' → logprob: -4.69345760345459
    10. 'from' → logprob: -5.06845760345459

Token 1959: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39433449506759644
    2. '#' (adapté à ' #') → logprob: -1.7693345546722412
    3. ',' → logprob: -2.519334554672241
    4. 'from' → logprob: -3.769334554672241
    5. ' #' → logprob: -4.519334316253662
    6. 'possible' → logprob: -5.144334316253662
    7. '                
' → logprob: -5.519334316253662
    8. ' (' → logprob: -5.644334316253662
    9. 'tokens' → logprob: -6.019334316253662
    10. ' from' → logprob: -6.144334316253662

Token 1960: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28708764910697937
    2. '               ' → logprob: -2.1620876789093018
    3. 'from' → logprob: -2.7870876789093018
    4. 'if' → logprob: -4.162087440490723
    5. 'import' → logprob: -4.787087440490723
    6. '```' → logprob: -4.787087440490723
    7. ' #' → logprob: -5.037087440490723
    8. '
' → logprob: -5.162087440490723
    9. 'coins' → logprob: -5.537087440490723
    10. ' if' → logprob: -5.787087440490723

Token 1961: ' doit' (ID: 21822)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6036922931671143
    2. 'import' → logprob: -1.7286922931671143
    3. '#' → logprob: -1.9786922931671143
    4. 'def' → logprob: -2.9786922931671143
    5. 'continue' → logprob: -3.1036922931671143
    6. 'do' → logprob: -3.8536922931671143
    7. 'pe' → logprob: -4.728692054748535
    8. 'vais' → logprob: -5.853692054748535
    9. '```' → logprob: -5.978692054748535
    10. 'dev' → logprob: -6.978692054748535

Token 1962: ' vérifier' (ID: 93671)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.546964406967163
    2. 'v' → logprob: -1.671964406967163
    3. 'import' → logprob: -2.296964406967163
    4. 'contin' → logprob: -2.546964406967163
    5. 'chercher' → logprob: -2.671964406967163
    6. 'def' → logprob: -3.046964406967163
    7. 'faire' → logprob: -3.046964406967163
    8. 'impl' → logprob: -3.546964406967163
    9. 're' → logprob: -3.796964406967163
    10. 'tester' → logprob: -3.796964406967163

Token 1963: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16674254834651947
    2. ' if' → logprob: -1.9167425632476807
    3. ' si' → logprob: -6.791742324829102
    4. 'si' → logprob: -6.791742324829102
    5. 'rest' → logprob: -7.166742324829102
    6. 'poss' → logprob: -7.166742324829102
    7. 'possible' → logprob: -7.291742324829102
    8. '#' → logprob: -7.791742324829102
    9. 'whether' → logprob: -7.916742324829102
    10. '   ' → logprob: -8.666742324829102

Token 1964: ' l' (ID: 305)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.02092534489929676
    2. 'coins' → logprob: -4.645925521850586
    3. ' rest' → logprob: -5.645925521850586
    4. 'sum' → logprob: -5.770925521850586
    5. 'the' → logprob: -6.395925521850586
    6. 'any' → logprob: -7.520925521850586
    7. 'we' → logprob: -7.770925521850586
    8. '```' → logprob: -8.270925521850586
    9. 'possible' → logprob: -8.270925521850586
    10. 'all' → logprob: -8.395925521850586

Token 1965: ''on' (ID: 25812)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.16670632362365723
    2. 'coins' → logprob: -2.6667063236236572
    3. 'est' → logprob: -3.9167063236236572
    4. 'possible' → logprob: -4.416706085205078
    5. 'e' → logprob: -4.541706085205078
    6. 're' → logprob: -4.916706085205078
    7. 'sum' → logprob: -5.416706085205078
    8. 'co' → logprob: -5.666706085205078
    9. 'n' → logprob: -5.916706085205078
    10. 'poss' → logprob: -6.041706085205078

Token 1966: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.008790772408246994
    2. ' peut' → logprob: -5.258790969848633
    3. 'poss' → logprob: -6.508790969848633
    4. 'a' → logprob: -7.383790969848633
    5. 'dispose' → logprob: -7.758790969848633
    6. 'can' → logprob: -8.258790969848633
    7. ' peux' → logprob: -8.383790969848633
    8. 'pour' → logprob: -8.383790969848633
    9. '#' → logprob: -9.508790969848633
    10. 'possible' → logprob: -9.758790969848633

Token 1967: ' composer' (ID: 60929)
  Prédit: 'composer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'composer' → logprob: -0.18495383858680725
    2. 'faire' → logprob: -3.0599539279937744
    3. 'com' → logprob: -3.3099539279937744
    4. 'former' → logprob: -3.3099539279937744
    5. 'payer' → logprob: -3.5599539279937744
    6. 'compose' → logprob: -5.309953689575195
    7. 'comb' → logprob: -5.809953689575195
    8. 'assembler' → logprob: -6.309953689575195
    9. 'constit' → logprob: -6.434953689575195
    10. 'p' → logprob: -6.809953689575195

Token 1968: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.00017398154886905104
    2. ' rest' → logprob: -9.625173568725586
    3. 'le' → logprob: -10.125173568725586
    4. '```' → logprob: -10.250173568725586
    5. 'reste' → logprob: -12.000173568725586
    6. 'the' → logprob: -12.000173568725586
    7. '(rest' → logprob: -12.375173568725586
    8. '       ' → logprob: -12.500173568725586
    9. '   ' → logprob: -12.500173568725586
    10. '
' → logprob: -13.500173568725586

Token 1969: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -2.47495681833243e-05
    2. 'pay' → logprob: -12.125024795532227
    3. ' _' → logprob: -12.875024795532227
    4. '_' → logprob: -13.000024795532227
    5. 'oyer' → logprob: -13.125024795532227
    6. '_payment' → logprob: -13.375024795532227
    7. '               ' → logprob: -13.375024795532227
    8. '   ' → logprob: -13.625024795532227
    9. '_p' → logprob: -14.125024795532227
    10. '_PAY' → logprob: -14.500024795532227

Token 1970: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.28211963176727295
    2. ' with' → logprob: -2.7821197509765625
    3. 'with' → logprob: -2.7821197509765625
    4. 'from' → logprob: -3.0321197509765625
    5. 'avec' → logprob: -3.6571197509765625
    6. ' en' → logprob: -4.6571197509765625
    7. 'using' → logprob: -5.2821197509765625
    8. 'en' → logprob: -5.2821197509765625
    9. ' (' → logprob: -5.4071197509765625
    10. ' à' → logprob: -5.4071197509765625

Token 1971: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.09296243637800217
    2. 'the' → logprob: -3.4679625034332275
    3. '[' → logprob: -3.7179625034332275
    4. 'rest' → logprob: -3.8429625034332275
    5. ' coins' → logprob: -5.717962265014648
    6. 'co' → logprob: -6.217962265014648
    7. '#' → logprob: -7.217962265014648
    8. 'a' → logprob: -7.342962265014648
    9. 'pieces' → logprob: -7.467962265014648
    10. 'def' → logprob: -7.842962265014648

Token 1972: ' en' (ID: 469)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.7457588911056519
    2. 'en' → logprob: -1.8707588911056519
    3. '1' → logprob: -2.2457590103149414
    4. '[' → logprob: -2.4957590103149414
    5. ' disponibles' → logprob: -2.4957590103149414
    6. 'available' → logprob: -3.1207590103149414
    7. '```' → logprob: -3.1207590103149414
    8. 'poss' → logprob: -3.3707590103149414
    9. '500' → logprob: -3.6207590103149414
    10. '_rest' → logprob: -3.8707590103149414

Token 1973: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0017383632948622108
    2. 'pos' → logprob: -7.001738548278809
    3. 'hand' → logprob: -7.876738548278809
    4. '[' → logprob: -9.376738548278809
    5. '```' → logprob: -9.626738548278809
    6. 'a' → logprob: -10.001738548278809
    7. 'poss' → logprob: -10.126738548278809
    8. '_main' → logprob: -10.251738548278809
    9. 'stock' → logprob: -10.751738548278809
    10. ' main' → logprob: -10.876738548278809

Token 1974: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6135364770889282
    2. '```' → logprob: -1.8635364770889282
    3. ',' → logprob: -1.9885364770889282
    4. '               ' → logprob: -2.3635363578796387
    5. ' (' → logprob: -2.4885363578796387
    6. 'coins' → logprob: -3.1135363578796387
    7. ':
' → logprob: -3.6135363578796387
    8. ' coins' → logprob: -3.7385363578796387
    9. ':' → logprob: -3.9885363578796387
    10. '(rest' → logprob: -4.238536357879639

Token 1975: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03582426533102989
    2. '                
' → logprob: -4.660824298858643
    3. '```' → logprob: -4.910824298858643
    4. ',' → logprob: -5.285824298858643
    5. ' (' → logprob: -5.410824298858643
    6. 'from' → logprob: -6.285824298858643
    7. '                   ' → logprob: -6.910824298858643
    8. '                ' → logprob: -7.160824298858643
    9. '(
' → logprob: -7.660824298858643
    10. 'tokens' → logprob: -7.785824298858643

Token 1976: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7623670697212219
    2. 'from' → logprob: -0.7623670697212219
    3. 'import' → logprob: -3.887367010116577
    4. 'possible' → logprob: -4.012367248535156
    5. '#' (adapté à ' #') → logprob: -4.512367248535156
    6. 'coins' → logprob: -5.387367248535156
    7. 'def' → logprob: -5.637367248535156
    8. 'poss' → logprob: -5.762367248535156
    9. 'available' → logprob: -6.637367248535156
    10. ' from' → logprob: -6.762367248535156

Token 1977: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.31880664825439453
    2. '               ' → logprob: -2.4438066482543945
    3. 'def' → logprob: -2.6938066482543945
    4. 'dp' → logprob: -3.6938066482543945
    5. 'possible' → logprob: -3.6938066482543945
    6. 'import' → logprob: -3.9438066482543945
    7. '```' → logprob: -4.3188066482543945
    8. '#' → logprob: -4.5688066482543945
    9. 'can' → logprob: -4.9438066482543945
    10. 'available' → logprob: -5.3188066482543945

Token 1978: ' essay' (ID: 9635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5618629455566406
    2. 'from' → logprob: -1.3118629455566406
    3. '#' → logprob: -2.4368629455566406
    4. 'import' → logprob: -3.4368629455566406
    5. 'continue' → logprob: -3.8118629455566406
    6. 'do' → logprob: -5.186862945556641
    7. 'pe' → logprob: -5.436862945556641
    8. '```' → logprob: -6.436862945556641
    9. ' from' → logprob: -6.811862945556641
    10. ' #' → logprob: -7.186862945556641

Token 1979: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.041849661618471146
    2. 'me' → logprob: -4.541849613189697
    3. 'm' → logprob: -5.541849613189697
    4. 't' → logprob: -6.041849613189697
    5. 'er' → logprob: -6.166849613189697
    6. '#' → logprob: -6.166849613189697
    7. 'y' → logprob: -6.541849613189697
    8. '```' → logprob: -6.666849613189697
    9. 've' → logprob: -6.791849613189697
    10. 'ue' → logprob: -6.916849613189697

Token 1980: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5343608856201172
    2. '               ' → logprob: -1.5343608856201172
    3. 'from' → logprob: -2.159360885620117
    4. 'import' → logprob: -4.159360885620117
    5. ' from' → logprob: -4.284360885620117
    6. 'de' → logprob: -4.909360885620117
    7. '           ' → logprob: -5.034360885620117
    8. ' de' → logprob: -5.159360885620117
    9. 'à' → logprob: -5.659360885620117
    10. 'possible' → logprob: -5.784360885620117

Token 1981: ' prendre' (ID: 24257)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7864560484886169
    2. 'def' → logprob: -0.9114560484886169
    3. 'from' → logprob: -3.4114561080932617
    4. 'coins' → logprob: -3.5364561080932617
    5. 'dp' → logprob: -3.6614561080932617
    6. 'l' → logprob: -4.911456108093262
    7. '#' → logprob: -5.161456108093262
    8. '
' → logprob: -5.161456108093262
    9. 'comb' → logprob: -5.286456108093262
    10. 'cache' → logprob: -5.786456108093262

Token 1982: ' pièces' (ID: 49165)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43236297369003296
    2. 'coins' → logprob: -1.5573630332946777
    3. 'les' → logprob: -2.9323630332946777
    4. ' coins' → logprob: -4.557363033294678
    5. 'from' → logprob: -4.682363033294678
    6. 'la' → logprob: -4.807363033294678
    7. 'une' → logprob: -4.932363033294678
    8. 'dp' → logprob: -5.182363033294678
    9. 'un' → logprob: -5.557363033294678
    10. ' les' → logprob: -5.557363033294678

Token 1983: ' pour' (ID: 1930)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.47867459058761597
    2. 's' → logprob: -2.1036746501922607
    3. ' en' → logprob: -3.7286746501922607
    4. '   ' → logprob: -3.9786746501922607
    5. 'poss' → logprob: -4.228674411773682
    6. '_possible' → logprob: -4.353674411773682
    7. 'for' → logprob: -4.478674411773682
    8. '           ' → logprob: -4.603674411773682
    9. '               ' → logprob: -4.603674411773682
    10. '_in' → logprob: -4.603674411773682

Token 1984: ' la' (ID: 557)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.4887269139289856
    2. 'pay' → logprob: -1.3637268543243408
    3. 'p' → logprob: -2.113726854324341
    4. 'rest' → logprob: -5.48872709274292
    5. 'pai' → logprob: -6.61372709274292
    6. ' payer' → logprob: -6.61372709274292
    7. 'payment' → logprob: -8.238726615905762
    8. 'le' → logprob: -8.238726615905762
    9. 'x' → logprob: -8.363726615905762
    10. 'i' → logprob: -8.363726615905762

Token 1985: ' partie' (ID: 22139)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.6029350161552429
    2. 'rest' → logprob: -1.6029350757598877
    3. 'p' → logprob: -2.3529350757598877
    4. 'payment' → logprob: -2.6029350757598877
    5. 'payer' → logprob: -3.7279350757598877
    6. 'def' → logprob: -4.602934837341309
    7. 'pai' → logprob: -4.852934837341309
    8. 'sub' → logprob: -5.102934837341309
    9. 'i' → logprob: -5.227934837341309
    10. 'pa' → logprob: -5.602934837341309

Token 1986: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.007593964692205191
    2. 'def' → logprob: -6.007594108581543
    3. 'pay' → logprob: -6.382594108581543
    4. '```' → logprob: -7.132594108581543
    5. 'reste' → logprob: -7.632594108581543
    6. 'coins' → logprob: -8.132594108581543
    7. '100' → logprob: -8.257594108581543
    8. 'small' → logprob: -8.507594108581543
    9. 'remaining' → logprob: -8.632594108581543
    10. 'fac' → logprob: -8.632594108581543

Token 1987: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0019628899171948433
    2. 'pay' → logprob: -6.251962661743164
    3. '   ' → logprob: -12.376962661743164
    4. '_play' → logprob: -12.501962661743164
    5. '_payment' → logprob: -12.501962661743164
    6. '_' → logprob: -12.751962661743164
    7. '               ' → logprob: -12.876962661743164
    8. '_rest' → logprob: -13.001962661743164
    9. '       ' → logprob: -13.251962661743164
    10. 'Pay' → logprob: -13.376962661743164

Token 1988: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17288465797901154
    2. 'def' → logprob: -3.172884702682495
    3. 'coins' → logprob: -3.547884702682495
    4. 'available' → logprob: -4.172884464263916
    5. '#' → logprob: -4.547884464263916
    6. '```' → logprob: -4.547884464263916
    7. 'poss' → logprob: -4.672884464263916
    8. 'possible' → logprob: -5.047884464263916
    9. 'coin' → logprob: -5.297884464263916
    10. 'found' → logprob: -5.547884464263916

Token 1989: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018743820255622268
    2. '#' → logprob: -8.126873970031738
    3. 'coins' → logprob: -8.126873970031738
    4. '                
' → logprob: -8.251873970031738
    5. 'possible' → logprob: -8.501873970031738
    6. 'from' → logprob: -8.501873970031738
    7. 'def' → logprob: -8.751873970031738
    8. '```' → logprob: -9.001873970031738
    9. '
' → logprob: -9.376873970031738
    10. 'coin' → logprob: -10.001873970031738

Token 1990: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45495322346687317
    2. 'def' → logprob: -1.7049531936645508
    3. 'from' → logprob: -2.454953193664551
    4. '#' (adapté à ' #') → logprob: -2.829953193664551
    5. 'possible' → logprob: -3.704953193664551
    6. 'import' → logprob: -5.829953193664551
    7. 'found' → logprob: -6.204953193664551
    8. 'coins' → logprob: -6.329953193664551
    9. '```' → logprob: -6.454953193664551
    10. 'poss' → logprob: -6.704953193664551

Token 1991: ' Solution' (ID: 20858)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5711904764175415
    2. 'from' → logprob: -1.3211904764175415
    3. '               ' → logprob: -2.321190357208252
    4. '#' → logprob: -3.696190357208252
    5. 'possible' → logprob: -3.696190357208252
    6. 'import' → logprob: -4.946190357208252
    7. '```' → logprob: -5.446190357208252
    8. ' from' → logprob: -5.946190357208252
    9. 'coins' → logprob: -6.446190357208252
    10. 'available' → logprob: -6.946190357208252

Token 1992: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1165580749511719
    2. ':' → logprob: -1.3665580749511719
    3. '               ' → logprob: -1.6165580749511719
    4. ' =' → logprob: -2.616558074951172
    5. '#' → logprob: -3.366558074951172
    6. '```' → logprob: -3.741558074951172
    7. 'import' → logprob: -3.866558074951172
    8. 'def' → logprob: -4.241558074951172
    9. ':
' → logprob: -4.366558074951172
    10. ' from' → logprob: -4.491558074951172

Token 1993: ' vérifier' (ID: 93671)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.2780706882476807
    2. '#' → logprob: -2.0280706882476807
    3. 'composer' → logprob: -2.4030706882476807
    4. 'faire' → logprob: -2.7780706882476807
    5. 'comb' → logprob: -3.2780706882476807
    6. 'coins' → logprob: -3.2780706882476807
    7. 'com' → logprob: -3.4030706882476807
    8. 'p' → logprob: -3.6530706882476807
    9. 'coin' → logprob: -3.6530706882476807
    10. 're' → logprob: -3.7780706882476807

Token 1994: ' composition' (ID: 27524)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7675772905349731
    2. 'possible' → logprob: -1.5175772905349731
    3. 'from' → logprob: -1.7675772905349731
    4. ' from' → logprob: -3.3925771713256836
    5. ' possible' → logprob: -3.8925771713256836
    6. 'found' → logprob: -3.8925771713256836
    7. '               ' → logprob: -3.8925771713256836
    8. 'import' → logprob: -4.767577171325684
    9. '#' → logprob: -4.767577171325684
    10. 'can' → logprob: -5.017577171325684

Token 1995: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8521784543991089
    2. 'possible' → logprob: -1.7271784543991089
    3. '               ' → logprob: -1.9771784543991089
    4. 'from' → logprob: -2.1021785736083984
    5. '```' → logprob: -3.7271785736083984
    6. ' possible' → logprob: -4.102178573608398
    7. '#' → logprob: -4.352178573608398
    8. 'de' → logprob: -4.352178573608398
    9. ':
' → logprob: -4.602178573608398
    10. ' from' → logprob: -5.102178573608398

Token 1996: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7579635381698608
    2. 'from' → logprob: -1.3829635381698608
    3. ' from' → logprob: -1.6329635381698608
    4. 'import' → logprob: -3.6329636573791504
    5. '```' → logprob: -3.6329636573791504
    6. '#' → logprob: -4.25796365737915
    7. ' #' → logprob: -5.38296365737915
    8. ' import' → logprob: -6.00796365737915
    9. 'possible' → logprob: -6.00796365737915
    10. ' possible' → logprob: -6.75796365737915

Token 1997: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7215626835823059
    2. 'from' → logprob: -0.9715626835823059
    3. 'dp' → logprob: -2.846562623977661
    4. 'import' → logprob: -3.846562623977661
    5. '#' (adapté à ' #') → logprob: -4.22156286239624
    6. '               ' → logprob: -4.59656286239624
    7. 'possible' → logprob: -4.72156286239624
    8. 'found' → logprob: -4.97156286239624
    9. 'coins' → logprob: -5.22156286239624
    10. 'can' → logprob: -5.34656286239624

Token 1998: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1700514703989029
    2. '               ' → logprob: -2.7950515747070312
    3. 'def' → logprob: -3.0450515747070312
    4. 'import' → logprob: -3.6700515747070312
    5. ' from' → logprob: -5.045051574707031
    6. 'possible' → logprob: -5.420051574707031
    7. '#' → logprob: -5.670051574707031
    8. '```' → logprob: -5.795051574707031
    9. 'coins' → logprob: -6.170051574707031
    10. 'available' → logprob: -7.170051574707031

Token 1999: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6561073064804077
    2. 'from' → logprob: -1.4061073064804077
    3. 'import' → logprob: -1.5311073064804077
    4. '#' → logprob: -4.781107425689697
    5. 'try' → logprob: -5.281107425689697
    6. 'continue' → logprob: -6.156107425689697
    7. 'util' → logprob: -7.031107425689697
    8. 'pe' → logprob: -7.406107425689697
    9. '```' → logprob: -7.656107425689697
    10. 'importe' → logprob: -8.031106948852539

Token 2000: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12064878642559052
    2. 'dp' → logprob: -2.9956488609313965
    3. 'import' → logprob: -3.3706488609313965
    4. 'a' → logprob: -4.2456488609313965
    5. 'un' → logprob: -4.8706488609313965
    6. 'une' → logprob: -5.7456488609313965
    7. '```' → logprob: -7.1206488609313965
    8. 'from' → logprob: -7.4956488609313965
    9. 'dynamic' → logprob: -7.4956488609313965
    10. 'for' → logprob: -8.120648384094238

Token 2001: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23936526477336884
    2. 'from' → logprob: -1.7393652200698853
    3. 'dp' → logprob: -3.989365339279175
    4. 'import' → logprob: -4.114365100860596
    5. '#' → logprob: -6.614365100860596
    6. 'for' → logprob: -7.489365100860596
    7. 'cache' → logprob: -8.989365577697754
    8. 'memo' → logprob: -9.489365577697754
    9. '```' → logprob: -9.739365577697754
    10. 'dfs' → logprob: -9.989365577697754

Token 2002: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9483770728111267
    2. ' de' → logprob: -2.4483771324157715
    3. 'de' → logprob: -2.4483771324157715
    4. 'd' → logprob: -3.1983771324157715
    5. 'en' → logprob: -3.4483771324157715
    6. 'def' → logprob: -3.5733771324157715
    7. ' en' → logprob: -3.5733771324157715
    8. '#' → logprob: -3.6983771324157715
    9. 'b' → logprob: -3.6983771324157715
    10. 'from' → logprob: -4.3233771324157715

Token 2003: ' pièces' (ID: 49165)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5338495969772339
    2. 'dp' → logprob: -1.7838495969772339
    3. 'poss' → logprob: -1.9088495969772339
    4. 'possible' → logprob: -2.1588497161865234
    5. 'br' → logprob: -2.2838497161865234
    6. 'subset' → logprob: -2.7838497161865234
    7. 'def' → logprob: -2.9088497161865234
    8. 'comb' → logprob: -4.158849716186523
    9. 'com' → logprob: -4.158849716186523
    10. 'dé' → logprob: -4.658849716186523

Token 2004: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2743037939071655
    2. '_possible' → logprob: -1.7743037939071655
    3. 'available' → logprob: -2.274303913116455
    4. '               ' → logprob: -2.274303913116455
    5. ' possible' → logprob: -2.649303913116455
    6. 'coins' → logprob: -3.774303913116455
    7. 'poss' → logprob: -4.024303913116455
    8. ' possibles' → logprob: -4.149303913116455
    9. 'for' → logprob: -4.274303913116455
    10. '_needed' → logprob: -4.524303913116455

Token 2005: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24091099202632904
    2. 'from' → logprob: -3.3659110069274902
    3. 'available' → logprob: -3.3659110069274902
    4. 'possible' → logprob: -3.7409110069274902
    5. '```' → logprob: -3.8659110069274902
    6. 'coins' → logprob: -4.24091100692749
    7. ' from' → logprob: -4.36591100692749
    8. '#' → logprob: -4.36591100692749
    9. 'def' → logprob: -4.74091100692749
    10. 'poss' → logprob: -4.74091100692749

Token 2006: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8917350769042969
    2. 'payer' → logprob: -1.2667350769042969
    3. 'pay' → logprob: -1.7667350769042969
    4. 'p' → logprob: -3.141735076904297
    5. 'comb' → logprob: -3.766735076904297
    6. 'com' → logprob: -4.141735076904297
    7. 'composer' → logprob: -4.516735076904297
    8. 'reste' → logprob: -4.766735076904297
    9. 'part' → logprob: -5.266735076904297
    10. 'rem' → logprob: -5.641735076904297

Token 2007: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -6.682846287731081e-05
    2. 'pay' → logprob: -10.375066757202148
    3. '               ' → logprob: -10.500066757202148
    4. '_pack' → logprob: -13.250066757202148
    5. 'Pay' → logprob: -14.000066757202148
    6. '
' → logprob: -14.375066757202148
    7. '       ' → logprob: -14.875066757202148
    8. '_play' → logprob: -15.000066757202148
    9. '_PAY' → logprob: -15.125066757202148
    10. '_p' → logprob: -15.250066757202148

Token 2008: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02489534392952919
    2. '
' → logprob: -4.524895191192627
    3. '                
' → logprob: -4.899895191192627
    4. '#' → logprob: -6.774895191192627
    5. '```' → logprob: -7.149895191192627
    6. ',' → logprob: -7.274895191192627
    7. ':
' → logprob: -7.524895191192627
    8. '           ' → logprob: -8.399895668029785
    9. '                   ' → logprob: -8.399895668029785
    10. ':' → logprob: -8.399895668029785

Token 2009: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010488811880350113
    2. '```' → logprob: -5.885488986968994
    3. ',' → logprob: -6.510488986968994
    4. '#' → logprob: -6.760488986968994
    5. ':' → logprob: -6.885488986968994
    6. 'tokens' → logprob: -7.135488986968994
    7. '                
' → logprob: -7.510488986968994
    8. ' (' → logprob: -7.635488986968994
    9. '                ' → logprob: -7.760488986968994
    10. '                   ' → logprob: -7.760488986968994

Token 2010: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8377792239189148
    2. '               ' → logprob: -0.9627792239189148
    3. 'def' → logprob: -2.0877792835235596
    4. 'possible' → logprob: -4.0877790451049805
    5. '#' (adapté à ' #') → logprob: -4.7127790451049805
    6. 'import' → logprob: -4.9627790451049805
    7. 'poss' → logprob: -5.2127790451049805
    8. ' from' → logprob: -5.7127790451049805
    9. 'dp' → logprob: -5.7127790451049805
    10. '```' → logprob: -5.7127790451049805

Token 2011: ' Double' (ID: 11646)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.722912073135376
    2. 'from' → logprob: -1.222912073135376
    3. '               ' → logprob: -2.472912073135376
    4. 'coins' → logprob: -3.097912073135376
    5. 'possible' → logprob: -3.347912073135376
    6. 'available' → logprob: -4.472911834716797
    7. '#' → logprob: -4.847911834716797
    8. '```' → logprob: -4.847911834716797
    9. 'poss' → logprob: -4.972911834716797
    10. 'found' → logprob: -4.972911834716797

Token 2012: ' contr' (ID: 6030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2601684033870697
    2. 'def' → logprob: -1.760168433189392
    3. 'import' → logprob: -4.635168552398682
    4. 'from' → logprob: -4.635168552398682
    5. ' for' → logprob: -4.760168552398682
    6. '
' → logprob: -5.510168552398682
    7. 'coins' → logprob: -5.635168552398682
    8. '#' → logprob: -5.760168552398682
    9. 'collections' → logprob: -5.760168552398682
    10. '       ' → logprob: -6.135168552398682

Token 2013: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.003038558876141906
    2. 'a' → logprob: -6.25303840637207
    3. 'ôle' → logprob: -8.00303840637207
    4. '
' → logprob: -8.12803840637207
    5. 'aint' → logprob: -8.37803840637207
    6. 'ain' → logprob: -9.50303840637207
    7. '#' → logprob: -9.75303840637207
    8. '``' → logprob: -11.12803840637207
    9. '```' → logprob: -11.37803840637207
    10. 'aine' → logprob: -11.50303840637207

Token 2014: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07141050696372986
    2. '#' → logprob: -3.5714104175567627
    3. 'from' → logprob: -4.571410655975342
    4. '                
' → logprob: -4.571410655975342
    5. '```' → logprob: -5.571410655975342
    6. 'import' → logprob: -5.821410655975342
    7. '
' → logprob: -5.821410655975342
    8. 'def' → logprob: -6.071410655975342
    9. '...' → logprob: -6.696410655975342
    10. ',' → logprob: -6.946410655975342

Token 2015: ' nombre' (ID: 9733)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1468517780303955
    2. 'la' → logprob: -1.5218517780303955
    3. 'coins' → logprob: -1.5218517780303955
    4. 'le' → logprob: -2.3968517780303955
    5. 'l' → logprob: -3.0218517780303955
    6. 'types' → logprob: -3.8968517780303955
    7. 'rest' → logprob: -4.521851539611816
    8. 'len' → logprob: -4.646851539611816
    9. ' la' → logprob: -4.771851539611816
    10. '#' → logprob: -4.896851539611816

Token 2016: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8407662510871887
    2. 's' → logprob: -1.840766191482544
    3. 'max' → logprob: -2.465766191482544
    4. 'de' → logprob: -2.715766191482544
    5. 'of' → logprob: -3.340766191482544
    6. 'd' → logprob: -3.465766191482544
    7. '   ' → logprob: -3.590766191482544
    8. '       ' → logprob: -4.090766429901123
    9. 'des' → logprob: -4.215766429901123
    10. ' de' → logprob: -4.340766429901123

Token 2017: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -1.0203778743743896
    2. 'pieces' → logprob: -1.0203778743743896
    3. 'coins' → logprob: -1.3953778743743896
    4. ' pièces' → logprob: -5.270378112792969
    5. 'each' → logprob: -5.270378112792969
    6. 'types' → logprob: -5.395378112792969
    7. '```' → logprob: -5.395378112792969
    8. 'CO' → logprob: -6.270378112792969
    9. '
' → logprob: -6.895378112792969
    10. ' coins' → logprob: -7.020378112792969

Token 2018: ' max' (ID: 2999)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024208009243011475
    2. 'def' → logprob: -5.274208068847656
    3. ' coins' → logprob: -5.524208068847656
    4. '```' → logprob: -6.149208068847656
    5. 'coins' → logprob: -6.274208068847656
    6. 'possible' → logprob: -6.399208068847656
    7. '#' → logprob: -6.399208068847656
    8. ' possible' → logprob: -6.899208068847656
    9. '                
' → logprob: -7.149208068847656
    10. 'import' → logprob: -7.649208068847656

Token 2019: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014156925491988659
    2. '```' → logprob: -5.639156818389893
    3. '                
' → logprob: -6.264156818389893
    4. '
' → logprob: -6.389156818389893
    5. '#' → logprob: -6.889156818389893
    6. 'coins' → logprob: -7.014156818389893
    7. ',' → logprob: -7.389156818389893
    8. 'from' → logprob: -7.639156818389893
    9. '       ' → logprob: -8.01415729522705
    10. '):
' → logprob: -8.13915729522705

Token 2020: ' denotes' (ID: 144604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7185394763946533
    2. 'from' → logprob: -1.8435394763946533
    3. ' from' → logprob: -2.9685394763946533
    4. 'import' → logprob: -3.2185394763946533
    5. ' coins' → logprob: -3.2185394763946533
    6. 'available' → logprob: -3.2185394763946533
    7. 'coins' → logprob: -3.2185394763946533
    8. ' #' → logprob: -3.7185394763946533
    9. ' def' → logprob: -3.8435394763946533
    10. '#' → logprob: -3.8435394763946533

Token 2021: ' qu' (ID: 474)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4372402429580688
    2. 'max' → logprob: -2.4372401237487793
    3. 'coins' → logprob: -2.6872401237487793
    4. 'from' → logprob: -2.8122401237487793
    5. 'import' → logprob: -2.8122401237487793
    6. '#' → logprob: -2.9372401237487793
    7. 'possible' → logprob: -3.1872401237487793
    8. 'the' → logprob: -3.3122401237487793
    9. '   ' → logprob: -3.4372401237487793
    10. 'len' → logprob: -3.5622401237487793

Token 2022: ''on' (ID: 25812)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.3903743028640747
    2. 'u' → logprob: -1.6403743028640747
    3. 'e' → logprob: -1.7653743028640747
    4. '#' → logprob: -2.390374183654785
    5. ''il' → logprob: -2.515374183654785
    6. ''on' → logprob: -2.890374183654785
    7. 'def' → logprob: -3.140374183654785
    8. 'from' → logprob: -4.015374183654785
    9. ' on' → logprob: -4.265374183654785
    10. ''' → logprob: -4.515374183654785

Token 2023: ' utilise' (ID: 70283)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.014636754989624
    2. '#' → logprob: -1.764636754989624
    3. 'do' → logprob: -1.889636754989624
    4. 'veux' → logprob: -1.889636754989624
    5. 'continue' → logprob: -2.639636754989624
    6. 'poss' → logprob: -3.639636754989624
    7. 've' → logprob: -3.889636754989624
    8. 'dispose' → logprob: -4.639636993408203
    9. 'n' → logprob: -5.639636993408203
    10. 'vais' → logprob: -5.639636993408203

Token 2024: ' pas' (ID: 2173)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.4076071977615356
    2. 'def' → logprob: -1.9076071977615356
    3. '```' → logprob: -2.907607078552246
    4. 'possible' → logprob: -3.032607078552246
    5. '#' → logprob: -3.157607078552246
    6. '[' → logprob: -3.282607078552246
    7. 'une' → logprob: -3.532607078552246
    8. 'the' → logprob: -3.782607078552246
    9. '[]' → logprob: -3.907607078552246
    10. 'from' → logprob: -4.032607078552246

Token 2025: ' trop' (ID: 14765)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.502217411994934
    2. 'dp' → logprob: -2.5022172927856445
    3. ' coins' → logprob: -2.5022172927856445
    4. '[' → logprob: -3.1272172927856445
    5. '```' → logprob: -3.2522172927856445
    6. 'collections' → logprob: -3.2522172927856445
    7. '[]' → logprob: -3.3772172927856445
    8. '       ' → logprob: -3.3772172927856445
    9. ')' → logprob: -3.5022172927856445
    10. 'a' → logprob: -3.6272172927856445

Token 2026: ' pièces' (ID: 49165)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35877594351768494
    2. 'def' → logprob: -2.9837758541107178
    3. '```' → logprob: -3.7337758541107178
    4. '
' → logprob: -3.9837758541107178
    5. '[' → logprob: -4.108776092529297
    6. ')' → logprob: -4.358776092529297
    7. ' coins' → logprob: -4.358776092529297
    8. ' def' → logprob: -4.483776092529297
    9. '       ' → logprob: -4.733776092529297
    10. '_' → logprob: -4.733776092529297

Token 2027: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11071804165840149
    2. 'def' → logprob: -3.485718011856079
    3. '
' → logprob: -4.360718250274658
    4. 'from' → logprob: -4.485718250274658
    5. '```' → logprob: -4.485718250274658
    6. '                
' → logprob: -5.360718250274658
    7. '#' → logprob: -5.610718250274658
    8. ' def' → logprob: -5.985718250274658
    9. 'import' → logprob: -6.235718250274658
    10. '           ' → logprob: -6.235718250274658

Token 2028: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04210193082690239
    2. '```' → logprob: -3.7921018600463867
    3. '                
' → logprob: -5.542101860046387
    4. ',' → logprob: -5.542101860046387
    5. '#' → logprob: -6.167101860046387
    6. '                ' → logprob: -6.667101860046387
    7. ' (' → logprob: -7.292101860046387
    8. 'tokens' → logprob: -7.542101860046387
    9. '_' → logprob: -7.667101860046387
    10. '
' → logprob: -7.792101860046387

Token 2029: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8147405982017517
    2. 'from' → logprob: -1.0647406578063965
    3. 'def' → logprob: -2.0647406578063965
    4. 'possible' → logprob: -3.8147406578063965
    5. 'coins' → logprob: -4.0647406578063965
    6. '#' (adapté à ' #') → logprob: -4.5647406578063965
    7. 'found' → logprob: -4.6897406578063965
    8. 'import' → logprob: -5.0647406578063965
    9. 'poss' → logprob: -5.4397406578063965
    10. '```' → logprob: -5.5647406578063965

Token 2030: ' mais' (ID: 2899)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6849285960197449
    2. 'from' → logprob: -0.9349285960197449
    3. 'def' → logprob: -2.8099286556243896
    4. '#' → logprob: -4.1849284172058105
    5. 'coins' → logprob: -5.5599284172058105
    6. 'import' → logprob: -5.5599284172058105
    7. '```' → logprob: -5.6849284172058105
    8. '
' → logprob: -6.0599284172058105
    9. 'possible' → logprob: -6.0599284172058105
    10. 'available' → logprob: -6.1849284172058105

Token 2031: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9655734300613403
    2. ' rest' → logprob: -2.465573310852051
    3. 'def' → logprob: -2.465573310852051
    4. 'rest' → logprob: -2.715573310852051
    5. '```' → logprob: -2.840573310852051
    6. '               ' → logprob: -2.840573310852051
    7. 'import' → logprob: -3.090573310852051
    8. ' #' → logprob: -3.090573310852051
    9. 'True' → logprob: -3.465573310852051
    10. ' True' → logprob: -3.590573310852051

Token 2032: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6313940286636353
    2. '               ' → logprob: -1.6313940286636353
    3. '#' → logprob: -2.3813939094543457
    4. ' #' → logprob: -2.8813939094543457
    5. '                ' → logprob: -4.131393909454346
    6. 'def' → logprob: -4.756393909454346
    7. ' rest' → logprob: -5.006393909454346
    8. 'on' → logprob: -5.131393909454346
    9. ' continu' → logprob: -5.131393909454346
    10. ' continue' → logprob: -5.381393909454346

Token 2033: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5914651155471802
    2. 'do' → logprob: -1.8414651155471802
    3. '#' → logprob: -2.5914649963378906
    4. 'import' → logprob: -2.8414649963378906
    5. 'pe' → logprob: -3.0914649963378906
    6. 'n' → logprob: -3.2164649963378906
    7. 'vais' → logprob: -3.9664649963378906
    8. 'ne' → logprob: -4.216464996337891
    9. 'veux' → logprob: -4.591464996337891
    10. 'p' → logprob: -5.716464996337891

Token 2034: ' juste' (ID: 31553)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2427300214767456
    2. 'à' → logprob: -1.4927300214767456
    3. 'for' → logprob: -1.9927300214767456
    4. 'possible' → logprob: -2.117730140686035
    5. 'com' → logprob: -3.367730140686035
    6. '#' → logprob: -3.367730140686035
    7. ' if' → logprob: -3.742730140686035
    8. 'continue' → logprob: -4.492730140686035
    9. 'de' → logprob: -4.617730140686035
    10. '```' → logprob: -4.617730140686035

Token 2035: ' compos' (ID: 14635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6282267570495605
    2. 'if' → logprob: -1.3782267570495605
    3. 'to' → logprob: -3.2532267570495605
    4. 'pour' → logprob: -3.3782267570495605
    5. 'possible' → logprob: -3.6282267570495605
    6. 'à' → logprob: -3.7532267570495605
    7. ' if' → logprob: -4.3782267570495605
    8. 'de' → logprob: -4.3782267570495605
    9. '```' → logprob: -4.6282267570495605
    10. '               ' → logprob: -4.8782267570495605

Token 2036: 'abilité' (ID: 49097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04551183059811592
    2. 'ition' → logprob: -3.6705117225646973
    3. 'e' → logprob: -4.170511722564697
    4. 'tion' → logprob: -6.170511722564697
    5. 'te' → logprob: -7.920511722564697
    6. 'ation' → logprob: -8.795512199401855
    7. 'able' → logprob: -8.920512199401855
    8. 'age' → logprob: -9.295512199401855
    9. 'abilité' → logprob: -9.295512199401855
    10. 'ion' → logprob: -9.420512199401855

Token 2037: '.

' (ID: 364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013352219946682453
    2. '
' → logprob: -5.138352394104004
    3. '                
' → logprob: -5.763352394104004
    4. ',' → logprob: -6.638352394104004
    5. ':' → logprob: -7.263352394104004
    6. ':
' → logprob: -7.888352394104004
    7. 'from' → logprob: -8.638352394104004
    8. 'def' → logprob: -8.638352394104004
    9. '#' → logprob: -8.763352394104004
    10. '```' → logprob: -8.763352394104004

Token 2038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034330463968217373
    2. 'from' → logprob: -6.1284332275390625
    3. '                
' → logprob: -7.6284332275390625
    4. '```' → logprob: -8.003433227539062
    5. '
' → logprob: -8.753433227539062
    6. 'import' → logprob: -9.003433227539062
    7. 'def' → logprob: -10.128433227539062
    8. '#' → logprob: -11.003433227539062
    9. 'tokens' → logprob: -11.003433227539062
    10. '           ' → logprob: -11.378433227539062

Token 2039: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0786755084991455
    2. 'from' → logprob: -1.2036755084991455
    3. '               ' → logprob: -1.3286755084991455
    4. 'possible' → logprob: -3.5786755084991455
    5. 'coins' → logprob: -3.5786755084991455
    6. 'available' → logprob: -4.953675270080566
    7. '#' (adapté à ' #') → logprob: -5.078675270080566
    8. 'poss' → logprob: -5.078675270080566
    9. 'import' → logprob: -5.203675270080566
    10. '```' → logprob: -5.828675270080566

Token 2040: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48372721672058105
    2. 'from' → logprob: -1.608727216720581
    3. 'def' → logprob: -2.108727216720581
    4. '```' → logprob: -3.858727216720581
    5. 'possible' → logprob: -4.60872745513916
    6. 'import' → logprob: -4.85872745513916
    7. ' from' → logprob: -5.23372745513916
    8. 'coins' → logprob: -5.23372745513916
    9. '#' → logprob: -5.60872745513916
    10. 'available' → logprob: -6.48372745513916

Token 2041: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3900880217552185
    2. 'from' → logprob: -1.3900880813598633
    3. 'import' → logprob: -3.5150880813598633
    4. '#' → logprob: -3.5150880813598633
    5. 'continue' → logprob: -5.765088081359863
    6. '           ' → logprob: -6.265088081359863
    7. ' from' → logprob: -6.390088081359863
    8. ' #' → logprob: -6.515088081359863
    9. '       ' → logprob: -6.515088081359863
    10. '```' → logprob: -7.265088081359863

Token 2042: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02302882820367813
    2. 'from' → logprob: -4.89802885055542
    3. '```' → logprob: -5.14802885055542
    4. 'possible' → logprob: -5.64802885055542
    5. ' def' → logprob: -6.27302885055542
    6. 'import' → logprob: -7.02302885055542
    7. 'coins' → logprob: -7.27302885055542
    8. 'available' → logprob: -8.148028373718262
    9. 'can' → logprob: -8.273028373718262
    10. '                   ' → logprob: -8.398028373718262

Token 2043: ' simple' (ID: 4705)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5337579846382141
    2. 'def' → logprob: -0.9087579846382141
    3. 'import' → logprob: -5.158758163452148
    4. '#' → logprob: -5.533758163452148
    5. '```' → logprob: -7.658758163452148
    6. ' from' → logprob: -9.158758163452148
    7. 'cache' → logprob: -9.158758163452148
    8. 'dp' → logprob: -10.033758163452148
    9. '
' → logprob: -10.033758163452148
    10. 'for' → logprob: -10.658758163452148

Token 2044: ' back' (ID: 1602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2375190109014511
    2. 'from' → logprob: -1.6125190258026123
    3. 'dp' → logprob: -4.987518787384033
    4. ' from' → logprob: -5.737518787384033
    5. 'import' → logprob: -7.487518787384033
    6. '```' → logprob: -7.862518787384033
    7. ' def' → logprob: -8.362519264221191
    8. 'possible' → logprob: -8.612519264221191
    9. '#' → logprob: -8.612519264221191
    10. 'queue' → logprob: -9.112519264221191

Token 2045: 'track' (ID: 22792)
  Prédit: 'tracking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.053931914269924164
    2. 'pack' → logprob: -3.303931951522827
    3. 'track' → logprob: -4.303931713104248
    4. 'et' → logprob: -7.303931713104248
    5. 'trace' → logprob: -7.303931713104248
    6. 'tract' → logprob: -8.803932189941406
    7. 'tr' → logprob: -8.803932189941406
    8. '
' → logprob: -8.928932189941406
    9. '   ' → logprob: -8.928932189941406
    10. 't' → logprob: -9.678932189941406

Token 2046: ' /' (ID: 820)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03828337788581848
    2. 'def' → logprob: -4.038283348083496
    3. '#' → logprob: -5.413283348083496
    4. ' or' → logprob: -6.413283348083496
    5. '```' → logprob: -6.413283348083496
    6. '                
' → logprob: -6.538283348083496
    7. 'import' → logprob: -6.913283348083496
    8. ',' → logprob: -7.038283348083496
    9. ' (' → logprob: -7.163283348083496
    10. ' pour' → logprob: -7.288283348083496

Token 2047: ' DP' (ID: 51992)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21495923399925232
    2. 'def' → logprob: -2.464959144592285
    3. 'import' → logprob: -2.589959144592285
    4. 'dp' → logprob: -3.839959144592285
    5. ' from' → logprob: -5.339959144592285
    6. '```' → logprob: -5.714959144592285
    7. 'b' → logprob: -6.714959144592285
    8. '#' → logprob: -6.839959144592285
    9. 'dynamic' → logprob: -8.089959144592285
    10. ' def' → logprob: -8.339959144592285

Token 2048: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07447115331888199
    2. '#' → logprob: -4.6994709968566895
    3. '
' → logprob: -4.8244709968566895
    4. '(rest' → logprob: -4.8244709968566895
    5. ':' → logprob: -5.1994709968566895
    6. 'def' → logprob: -5.4494709968566895
    7. 'rest' → logprob: -5.4494709968566895
    8. ':
' → logprob: -5.6994709968566895
    9. '                
' → logprob: -5.8244709968566895
    10. 'coins' → logprob: -5.8244709968566895

Token 2049: ' vérifier' (ID: 93671)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5449764132499695
    2. 'def' → logprob: -2.5449764728546143
    3. 'possible' → logprob: -2.9199764728546143
    4. 'com' → logprob: -3.0449764728546143
    5. 'composer' → logprob: -3.5449764728546143
    6. 'rest' → logprob: -3.6699764728546143
    7. 'compose' → logprob: -3.7949764728546143
    8. 'v' → logprob: -3.7949764728546143
    9. 'comb' → logprob: -4.044976234436035
    10. 'amount' → logprob: -4.044976234436035

Token 2050: ' si' (ID: 1784)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8786596655845642
    2. '#' → logprob: -1.878659725189209
    3. 'rest' → logprob: -1.878659725189209
    4. 'if' → logprob: -2.003659725189209
    5. 'possible' → logprob: -3.378659725189209
    6. ' if' → logprob: -3.753659725189209
    7. 'can' → logprob: -4.003659725189209
    8. 'poss' → logprob: -4.253659725189209
    9. 'coins' → logprob: -4.753659725189209
    10. 'def' → logprob: -5.378659725189209

Token 2051: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.03371647372841835
    2. 'possible' → logprob: -4.408716678619385
    3. 'on' → logprob: -4.908716678619385
    4. ' rest' → logprob: -5.033716678619385
    5. 'we' → logprob: -5.533716678619385
    6. 'pay' → logprob: -7.533716678619385
    7. '```' → logprob: -7.908716678619385
    8. 'le' → logprob: -8.033716201782227
    9. ' on' → logprob: -8.158716201782227
    10. ' we' → logprob: -8.533716201782227

Token 2052: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0002599053841549903
    2. '_' → logprob: -8.875260353088379
    3. 'pay' → logprob: -9.875260353088379
    4. '_rest' → logprob: -11.375260353088379
    5. '_payment' → logprob: -12.125260353088379
    6. '```' → logprob: -12.125260353088379
    7. '_PAY' → logprob: -12.250260353088379
    8. ')' → logprob: -12.375260353088379
    9. '   ' → logprob: -12.375260353088379
    10. '-pay' → logprob: -12.625260353088379

Token 2053: ' peut' (ID: 9216)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.0347906351089478
    2. ' can' → logprob: -2.034790515899658
    3. 'can' → logprob: -2.409790515899658
    4. 'possible' → logprob: -2.534790515899658
    5. ' est' → logprob: -2.659790515899658
    6. ' peut' → logprob: -2.784790515899658
    7. 'est' → logprob: -2.909790515899658
    8. '_can' → logprob: -3.159790515899658
    9. 'pe' → logprob: -3.284790515899658
    10. '```' → logprob: -3.784790515899658

Token 2054: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.05196473374962807
    2. ' être' → logprob: -3.55196475982666
    3. 'se' → logprob: -4.92696475982666
    4. 'êtres' → logprob: -5.30196475982666
    5. '-être' → logprob: -6.17696475982666
    6. ''être' → logprob: -6.55196475982666
    7. 'ête' → logprob: -6.80196475982666
    8. 's' → logprob: -6.80196475982666
    9. 'êt' → logprob: -7.17696475982666
    10. 'ê' → logprob: -7.42696475982666

Token 2055: ' payé' (ID: 196567)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5549566149711609
    2. 'pay' → logprob: -1.5549566745758057
    3. 'form' → logprob: -1.8049566745758057
    4. 'fait' → logprob: -3.3049566745758057
    5. 'const' → logprob: -5.054956436157227
    6. 'faite' → logprob: -5.929956436157227
    7. '```' → logprob: -6.429956436157227
    8. 'compose' → logprob: -7.929956436157227
    9. 'fab' → logprob: -8.179956436157227
    10. 'ob' → logprob: -8.304956436157227

Token 2056: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.2848346531391144
    2. ' with' → logprob: -3.034834623336792
    3. ':' → logprob: -3.159834623336792
    4. 'with' → logprob: -3.159834623336792
    5. 'avec' → logprob: -3.409834623336792
    6. '_possible' → logprob: -4.034834861755371
    7. ' (' → logprob: -4.534834861755371
    8. '```' → logprob: -4.534834861755371
    9. 'possible' → logprob: -4.784834861755371
    10. ' possible' → logprob: -5.659834861755371

Token 2057: ' les' (ID: 1341)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.12404728680849075
    2. 'pieces' → logprob: -2.99904727935791
    3. 'the' → logprob: -3.37404727935791
    4. 'rest' → logprob: -3.74904727935791
    5. 'co' → logprob: -5.74904727935791
    6. '[' → logprob: -6.12404727935791
    7. 'a' → logprob: -7.62404727935791
    8. 'available' → logprob: -7.99904727935791
    9. 'current' → logprob: -8.12404727935791
    10. 'collections' → logprob: -8.49904727935791

Token 2058: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.397062748670578
    2. 'pieces' → logprob: -1.1470627784729004
    3. 'co' → logprob: -6.2720627784729
    4. '#' → logprob: -6.2720627784729
    5. '[' → logprob: -6.7720627784729
    6. 'current' → logprob: -7.0220627784729
    7. 'coin' → logprob: -7.1470627784729
    8. 'def' → logprob: -7.3970627784729
    9. 'pi' → logprob: -7.5220627784729
    10. 'available' → logprob: -7.7720627784729

Token 2059: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.678659439086914
    2. '   ' → logprob: -1.678659439086914
    3. '_possible' → logprob: -2.178659439086914
    4. 'available' → logprob: -2.928659439086914
    5. '_' → logprob: -3.053659439086914
    6. '_available' → logprob: -3.178659439086914
    7. ' disponibles' → logprob: -3.303659439086914
    8. '       ' → logprob: -3.553659439086914
    9. ' ' → logprob: -3.803659439086914
    10. 'possible' → logprob: -3.803659439086914

Token 2060: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004051209893077612
    2. '_main' → logprob: -6.629051208496094
    3. 'hand' → logprob: -6.879051208496094
    4. 'man' → logprob: -7.754051208496094
    5. ' main' → logprob: -9.004051208496094
    6. 'stock' → logprob: -9.004051208496094
    7. 'm' → logprob: -9.129051208496094
    8. '#' → logprob: -9.254051208496094
    9. '```' → logprob: -9.379051208496094
    10. 'mano' → logprob: -9.379051208496094

Token 2061: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016105452552437782
    2. '
' → logprob: -5.141105651855469
    3. '                
' → logprob: -5.766105651855469
    4. 'def' → logprob: -6.891105651855469
    5. 'coins' → logprob: -6.891105651855469
    6. ',' → logprob: -7.141105651855469
    7. '```' → logprob: -7.266105651855469
    8. '#' → logprob: -7.516105651855469
    9. '       ' → logprob: -7.891105651855469
    10. ':' → logprob: -8.016105651855469

Token 2062: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006197464535944164
    2. 'def' → logprob: -8.000619888305664
    3. '
' → logprob: -9.000619888305664
    4. '                
' → logprob: -9.000619888305664
    5. 'from' → logprob: -11.500619888305664
    6. '```' → logprob: -11.625619888305664
    7. 'import' → logprob: -12.000619888305664
    8. '           ' → logprob: -12.750619888305664
    9. '#' → logprob: -12.875619888305664
    10. 'rest' → logprob: -13.375619888305664

Token 2063: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23108507692813873
    2. '               ' → logprob: -1.9810850620269775
    3. 'from' → logprob: -3.1060850620269775
    4. 'dp' → logprob: -4.981085300445557
    5. 'possible' → logprob: -5.106085300445557
    6. '#' (adapté à ' #') → logprob: -5.606085300445557
    7. 'can' → logprob: -6.356085300445557
    8. 'poss' → logprob: -6.606085300445557
    9. '```' → logprob: -7.356085300445557
    10. '                   ' → logprob: -7.606085300445557

Token 2064: ' Convert' (ID: 15629)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3738204538822174
    2. '```' → logprob: -1.998820424079895
    3. 'def' → logprob: -2.1238205432891846
    4. '#' → logprob: -4.6238203048706055
    5. 'rest' → logprob: -5.1238203048706055
    6. '                   ' → logprob: -5.3738203048706055
    7. 'possible' → logprob: -5.3738203048706055
    8. '``' → logprob: -5.4988203048706055
    9. 'from' → logprob: -5.6238203048706055
    10. 'if' → logprob: -5.8738203048706055

Token 2065: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.07983379811048508
    2. 'coin' → logprob: -3.829833745956421
    3. 'from' → logprob: -4.454833984375
    4. ' coins' → logprob: -4.579833984375
    5. 'def' → logprob: -5.204833984375
    6. 'pieces' → logprob: -5.329833984375
    7. '```' → logprob: -5.579833984375
    8. 'rest' → logprob: -5.829833984375
    9. 'counts' → logprob: -5.829833984375
    10. 'available' → logprob: -6.079833984375

Token 2066: '_dict' (ID: 11295)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8620648384094238
    2. '_lst' → logprob: -1.4870648384094238
    3. ' =' → logprob: -1.9870648384094238
    4. '_counts' → logprob: -2.237064838409424
    5. '_in' → logprob: -3.737064838409424
    6. 'lst' → logprob: -3.987064838409424
    7. '_available' → logprob: -4.362064838409424
    8. '_count' → logprob: -4.362064838409424
    9. '_cnt' → logprob: -5.112064838409424
    10. '=' → logprob: -5.362064838409424

Token 2067: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44993114471435547
    2. '_counts' → logprob: -3.0749311447143555
    3. '_to' → logprob: -3.1999311447143555
    4. 'available' → logprob: -3.6999311447143555
    5. '_available' → logprob: -3.8249311447143555
    6. 'to' → logprob: -3.8249311447143555
    7. 'lst' → logprob: -4.0749311447143555
    8. '_list' → logprob: -4.0749311447143555
    9. 'counts' → logprob: -4.0749311447143555
    10. 'coins' → logprob: -4.3249311447143555

Token 2068: ' simple' (ID: 4705)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.0516462326049805
    2. 'lst' → logprob: -1.6766462326049805
    3. 'list' → logprob: -1.9266462326049805
    4. 'liste' → logprob: -2.4266462326049805
    5. '[' → logprob: -2.5516462326049805
    6. 'counts' → logprob: -3.0516462326049805
    7. '#' → logprob: -3.9266462326049805
    8. 'co' → logprob: -4.6766462326049805
    9. 'def' → logprob: -4.6766462326049805
    10. 'lambda' → logprob: -4.9266462326049805

Token 2069: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8554550409317017
    2. 'counts' → logprob: -1.3554550409317017
    3. 'lst' → logprob: -2.355454921722412
    4. 'count' → logprob: -2.730454921722412
    5. 'def' → logprob: -2.855454921722412
    6. '```' → logprob: -3.480454921722412
    7. 'coins' → logprob: -4.105454921722412
    8. 'array' → logprob: -4.105454921722412
    9. 'counter' → logprob: -4.480454921722412
    10. '[' → logprob: -5.230454921722412

Token 2070: ' (' (ID: 350)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.11286340653896332
    2. ' coins' → logprob: -2.987863302230835
    3. 'coin' → logprob: -3.487863302230835
    4. '           ' → logprob: -5.737863540649414
    5. ' coin' → logprob: -5.987863540649414
    6. '[' → logprob: -5.987863540649414
    7. '               ' → logprob: -5.987863540649414
    8. 'a' → logprob: -5.987863540649414
    9. 'lst' → logprob: -6.112863540649414
    10. ' =' → logprob: -6.487863540649414

Token 2071: 'index' (ID: 2257)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.08713646978139877
    2. 'CO' → logprob: -3.2121365070343018
    3. '[' → logprob: -3.8371365070343018
    4. ' coins' → logprob: -5.337136268615723
    5. ')' → logprob: -5.462136268615723
    6. 'coin' → logprob: -6.337136268615723
    7. 'a' → logprob: -6.462136268615723
    8. '   ' → logprob: -6.462136268615723
    9. 'lst' → logprob: -7.087136268615723
    10. ' CO' → logprob: -7.337136268615723

Token 2072: ' coef' (ID: 107584)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5725550651550293
    2. '=' → logprob: -1.5725550651550293
    3. ' =' → logprob: -2.5725550651550293
    4. 's' → logprob: -3.5725550651550293
    5. ':' → logprob: -4.072555065155029
    6. '5' → logprob: -4.072555065155029
    7. ')' → logprob: -4.447555065155029
    8. '[' → logprob: -4.572555065155029
    9. ',' → logprob: -4.572555065155029
    10. 'i' → logprob: -5.072555065155029

Token 2073: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7616323828697205
    2. 'f' → logprob: -1.2616324424743652
    3. '[' → logprob: -2.5116324424743652
    4. 'icients' → logprob: -2.6366324424743652
    5. 'nts' → logprob: -4.136632442474365
    6. 'n' → logprob: -4.136632442474365
    7. 'fic' → logprob: -4.261632442474365
    8. '0' → logprob: -4.886632442474365
    9. 'icient' → logprob: -5.261632442474365
    10. 'fficients' → logprob: -5.886632442474365

Token 2074: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0243315696716309
    2. 'coins' → logprob: -1.0243315696716309
    3. 'lst' → logprob: -2.024331569671631
    4. 'coin' → logprob: -2.774331569671631
    5. ' coins' → logprob: -4.399331569671631
    6. ' [' → logprob: -4.524331569671631
    7. '```' → logprob: -4.524331569671631
    8. ' lst' → logprob: -4.774331569671631
    9. 'a' → logprob: -4.899331569671631
    10. '[n' → logprob: -5.024331569671631

Token 2075: ' avail' (ID: 57507)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0790170207619667
    2. 'coin' → logprob: -3.204016923904419
    3. 'counts' → logprob: -4.329017162322998
    4. 'pieces' → logprob: -5.329017162322998
    5. '[' → logprob: -5.329017162322998
    6. ' coins' → logprob: -5.454017162322998
    7. 'available' → logprob: -6.204017162322998
    8. 'a' → logprob: -6.454017162322998
    9. 'lst' → logprob: -7.454017162322998
    10. 'count' → logprob: -7.579017162322998

Token 2076: '_co' (ID: 21102)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.791407585144043
    2. '_co' → logprob: -1.416407585144043
    3. '_counts' → logprob: -2.041407585144043
    4. 's' → logprob: -2.291407585144043
    5. 'coins' → logprob: -3.791407585144043
    6. '_' → logprob: -4.541407585144043
    7. '=' → logprob: -4.541407585144043
    8. '_list' → logprob: -4.916407585144043
    9. '_lst' → logprob: -4.916407585144043
    10. '_count' → logprob: -5.916407585144043

Token 2077: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.18289923667907715
    2. 'unts' → logprob: -1.9328992366790771
    3. 'unt' → logprob: -4.057899475097656
    4. 'ints' → logprob: -6.182899475097656
    5. 'in' → logprob: -7.057899475097656
    6. 'uts' → logprob: -7.682899475097656
    7. 'nts' → logprob: -7.807899475097656
    8. 'uns' → logprob: -8.682899475097656
    9. '[' → logprob: -8.932899475097656
    10. ' =' → logprob: -9.307899475097656

Token 2078: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22572846710681915
    2. '=' → logprob: -1.6007285118103027
    3. '   ' → logprob: -8.975728034973145
    4. 's' → logprob: -9.350728034973145
    5. '_counts' → logprob: -9.975728034973145
    6. '=[' → logprob: -11.850728034973145
    7. '_lst' → logprob: -11.850728034973145
    8. '    ' → logprob: -11.975728034973145
    9. '	' → logprob: -12.100728034973145
    10. 'counts' → logprob: -12.725728034973145

Token 2079: ' []
' (ID: 8911)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.09090859442949295
    2. '[' → logprob: -2.8409085273742676
    3. 'list' → logprob: -3.5909085273742676
    4. '[list' → logprob: -7.840908527374268
    5. '[c' → logprob: -8.965909004211426
    6. ' coins' → logprob: -9.465909004211426
    7. ' [' → logprob: -9.840909004211426
    8. 'co' → logprob: -10.090909004211426
    9. '[
' → logprob: -10.215909004211426
    10. 'coin' → logprob: -10.715909004211426

Token 2080: '               ' (ID: 506)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7729360461235046
    2. '[' → logprob: -1.1479361057281494
    3. 'for' → logprob: -1.6479361057281494
    4. '[(' → logprob: -4.39793586730957
    5. '   ' → logprob: -5.64793586730957
    6. '=' → logprob: -5.77293586730957
    7. ' for' → logprob: -6.02293586730957
    8. ' =' → logprob: -6.14793586730957
    9. '=[
' → logprob: -7.02293586730957
    10. '.append' → logprob: -7.14793586730957

Token 2081: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010099800303578377
    2. '[' → logprob: -5.5100998878479
    3. ' for' → logprob: -6.5100998878479
    4. '   ' → logprob: -7.3850998878479
    5. 'coins' → logprob: -7.3850998878479
    6. '
' → logprob: -7.6350998878479
    7. '[
' → logprob: -8.010099411010742
    8. '[i' → logprob: -8.010099411010742
    9. '```' → logprob: -8.010099411010742
    10. '       ' → logprob: -8.385099411010742

Token 2082: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4054115116596222
    2. 'c' → logprob: -1.6554114818572998
    3. 'coin' → logprob: -2.6554114818573
    4. 'v' → logprob: -3.6554114818573
    5. 'val' → logprob: -3.6554114818573
    6. 'ct' → logprob: -4.780411720275879
    7. 'ctype' → logprob: -5.655411720275879
    8. 'idx' → logprob: -6.155411720275879
    9. 'value' → logprob: -6.280411720275879
    10. 'cnt' → logprob: -6.655411720275879

Token 2083: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3197550773620605
    2. ',' → logprob: -1.8197550773620605
    3. 'in' → logprob: -2.1947550773620605
    4. 'idx' → logprob: -2.1947550773620605
    5. 'oin' → logprob: -2.3197550773620605
    6. 'nt' → logprob: -2.3197550773620605
    7. 'n' → logprob: -3.4447550773620605
    8. ' in' → logprob: -3.5697550773620605
    9. ',i' → logprob: -3.6947550773620605
    10. 'ount' → logprob: -4.0697550773620605

Token 2084: ' CO' (ID: 10271)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -10.500028610229492
    3. ' CO' → logprob: -13.875028610229492
    4. '   ' → logprob: -16.375028610229492
    5. 'Coin' → logprob: -16.625028610229492
    6. '1' → logprob: -17.625028610229492
    7. 'coin' → logprob: -17.750028610229492
    8. 'coins' → logprob: -18.000028610229492
    9. 'range' → logprob: -19.375028610229492
    10. '_CO' → logprob: -19.375028610229492

Token 2085: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.001138431136496365
    2. 'INS' → logprob: -6.876138210296631
    3. 'INT' → logprob: -9.751138687133789
    4. 'OIN' → logprob: -10.751138687133789
    5. '[' → logprob: -11.376138687133789
    6. '1' → logprob: -12.376138687133789
    7. 'IND' → logprob: -13.126138687133789
    8. '```' → logprob: -13.501138687133789
    9. 'ION' → logprob: -14.001138687133789
    10. 'INF' → logprob: -14.251138687133789

Token 2086: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -0.06225324794650078
    2. 'T' → logprob: -2.81225323677063
    3. 'TYPE' → logprob: -9.18725299835205
    4. '_types' → logprob: -9.43725299835205
    5. 'YPES' → logprob: -9.93725299835205
    6. 'Types' → logprob: -10.56225299835205
    7. ' TYPES' → logprob: -11.31225299835205
    8. '_TYPE' → logprob: -11.81225299835205
    9. '100' → logprob: -12.18725299835205
    10. 'types' → logprob: -13.18725299835205

Token 2087: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.032391998916864395
    2. ':' → logprob: -3.6573920249938965
    3. '[' → logprob: -5.7823920249938965
    4. '   ' → logprob: -6.9073920249938965
    5. '):
' → logprob: -7.4073920249938965
    6. ',' → logprob: -8.157391548156738
    7. '       ' → logprob: -9.032391548156738
    8. ' :
' → logprob: -9.032391548156738
    9. '           ' → logprob: -9.157391548156738
    10. 'in' → logprob: -9.282391548156738

Token 2088: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44199737906455994
    2. '.append' → logprob: -1.9419974088668823
    3. 'coins' → logprob: -2.0669972896575928
    4. 'append' → logprob: -3.5669972896575928
    5. ':
' → logprob: -3.6919972896575928
    6. ':' → logprob: -4.691997528076172
    7. '(co' → logprob: -5.191997528076172
    8. '):
' → logprob: -5.441997528076172
    9. '                       ' → logprob: -5.941997528076172
    10. '               ' → logprob: -6.066997528076172

Token 2089: ' avail' (ID: 57507)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' (adapté à ' avail') → logprob: -0.0003821716527454555
    2. 'available' → logprob: -9.375382423400879
    3. 'aval' → logprob: -9.750382423400879
    4. 'av' → logprob: -9.875382423400879
    5. 'avali' → logprob: -9.875382423400879
    6. '                   ' → logprob: -10.375382423400879
    7. 'avai' → logprob: -10.875382423400879
    8. '   ' → logprob: -11.000382423400879
    9. 'ava' → logprob: -11.250382423400879
    10. '       ' → logprob: -11.250382423400879

Token 2090: '_co' (ID: 21102)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2731389999389648
    2. '_co' → logprob: -1.3981389999389648
    3. 's' → logprob: -2.273138999938965
    4. '=' → logprob: -2.398138999938965
    5. ' =' → logprob: -3.023138999938965
    6. '_av' → logprob: -3.273138999938965
    7. '_count' → logprob: -3.273138999938965
    8. 'count' → logprob: -3.398138999938965
    9. 'avail' → logprob: -4.148138999938965
    10. '.append' → logprob: -4.273138999938965

Token 2091: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.017866726964712143
    2. '=' → logprob: -5.017866611480713
    3. 'unts' → logprob: -5.142866611480713
    4. 'unt' → logprob: -6.017866611480713
    5. 'ints' → logprob: -7.392866611480713
    6. 'inds' → logprob: -8.142867088317871
    7. 'nts' → logprob: -8.142867088317871
    8. 'ns' → logprob: -8.267867088317871
    9. '==' → logprob: -8.767867088317871
    10. ' =' → logprob: -8.767867088317871

Token 2092: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.617784321308136
    2. '=' → logprob: -0.867784321308136
    3. ' =' → logprob: -3.367784261703491
    4. 'append' → logprob: -5.36778450012207
    5. ',' → logprob: -7.61778450012207
    6. '                   ' → logprob: -8.49278450012207
    7. '):
' → logprob: -8.74278450012207
    8. ')' → logprob: -9.24278450012207
    9. '+=' → logprob: -9.36778450012207
    10. '   ' → logprob: -9.61778450012207

Token 2093: '(co' (ID: 41772)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00015502817404922098
    2. ' coins' → logprob: -9.625155448913574
    3. '   ' → logprob: -10.125155448913574
    4. 'co' → logprob: -10.500155448913574
    5. 'CO' → logprob: -12.625155448913574
    6. '(co' → logprob: -12.750155448913574
    7. '           ' → logprob: -12.750155448913574
    8. '       ' → logprob: -12.875155448913574
    9. 'coin' → logprob: -13.125155448913574
    10. 'dp' → logprob: -13.875155448913574

Token 2094: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0034951844718307257
    2. 'coins' → logprob: -5.878495216369629
    3. 'ns' → logprob: -8.628495216369629
    4. 'i' → logprob: -8.628495216369629
    5. 'in' → logprob: -9.128495216369629
    6. 'ints' → logprob: -9.378495216369629
    7. 'n' → logprob: -11.003495216369629
    8. 'inds' → logprob: -11.253495216369629
    9. 'inst' → logprob: -11.503495216369629
    10. 'INS' → logprob: -11.503495216369629

Token 2095: '_dict' (ID: 11295)
  Prédit: '_tpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -0.20358489453792572
    2. '_dict' → logprob: -1.703584909439087
    3. 'tpl' → logprob: -6.828584671020508
    4. '_tuple' → logprob: -7.828584671020508
    5. 'dict' → logprob: -7.953584671020508
    6. '_types' → logprob: -8.453584671020508
    7. 'Tpl' → logprob: -10.328584671020508
    8. '[' → logprob: -11.703584671020508
    9. 'Dict' → logprob: -11.828584671020508
    10. '_type' → logprob: -12.078584671020508

Token 2096: '.get' (ID: 775)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.005265888292342424
    2. '.get' → logprob: -5.255265712738037
    3. 'get' → logprob: -10.380266189575195
    4. '[get' → logprob: -13.755266189575195
    5. 'c' → logprob: -16.880266189575195
    6. '(c' → logprob: -17.630266189575195
    7. '#get' → logprob: -19.130266189575195
    8. '   ' → logprob: -19.255266189575195
    9. 'getc' → logprob: -19.755266189575195
    10. '[' → logprob: -20.005266189575195

Token 2097: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.088346359931165e-07
    2. ' c' → logprob: -14.375000953674316
    3. '(c' → logprob: -15.375000953674316
    4. ')c' → logprob: -16.75
    5. '   ' → logprob: -16.875
    6. ' ' → logprob: -19.0
    7. '	c' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. ')' → logprob: -20.625
    10. '  ' → logprob: -21.5

Token 2098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003942112671211362
    2. ' ,' → logprob: -8.750393867492676
    3. 'c' → logprob: -8.875393867492676
    4. '0' → logprob: -10.250393867492676
    5. ',c' → logprob: -10.750393867492676
    6. '(c' → logprob: -10.750393867492676
    7. '(' → logprob: -12.500393867492676
    8. '```' → logprob: -12.500393867492676
    9. '   ' → logprob: -13.125393867492676
    10. '(),' → logprob: -13.250393867492676

Token 2099: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.0
    4. '  ' → logprob: -21.0
    5. ')' → logprob: -21.0
    6. '    ' → logprob: -21.25
    7. '       ' → logprob: -21.25
    8. '
' → logprob: -21.625
    9. '     ' → logprob: -21.625
    10. 'c' → logprob: -22.0

Token 2100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.500003814697266
    4. ')' → logprob: -16.125003814697266
    5. '       ' → logprob: -17.000003814697266
    6. '  ' → logprob: -18.000003814697266
    7. '    ' → logprob: -18.125003814697266
    8. '           ' → logprob: -18.250003814697266
    9. '     ' → logprob: -18.375003814697266
    10. '
' → logprob: -18.375003814697266

Token 2101: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08152734488248825
    2. '))
' → logprob: -2.5815272331237793
    3. '))

' → logprob: -6.081527233123779
    4. '                   ' → logprob: -8.456527709960938
    5. '               ' → logprob: -10.081527709960938
    6. '))
' → logprob: -10.081527709960938
    7. ')' → logprob: -11.206527709960938
    8. '))

' → logprob: -11.831527709960938
    9. ')))' → logprob: -11.956527709960938
    10. ' ))' → logprob: -12.206527709960938

Token 2102: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6582125425338745
    2. 'coins' → logprob: -1.4082125425338745
    3. '```' → logprob: -2.783212661743164
    4. 'coin' → logprob: -2.908212661743164
    5. '#' → logprob: -3.408212661743164
    6. '
' → logprob: -3.908212661743164
    7. '       ' → logprob: -4.533212661743164
    8. 'def' → logprob: -4.783212661743164
    9. 'values' → logprob: -4.908212661743164
    10. '   ' → logprob: -5.158212661743164

Token 2103: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48159104585647583
    2. 'dp' → logprob: -1.231590986251831
    3. 'from' → logprob: -2.606590986251831
    4. '               ' → logprob: -5.48159122467041
    5. '#' (adapté à ' #') → logprob: -5.85659122467041
    6. 'possible' → logprob: -5.98159122467041
    7. 'max' → logprob: -6.10659122467041
    8. '```' → logprob: -6.73159122467041
    9. 'can' → logprob: -6.98159122467041
    10. 'amount' → logprob: -7.85659122467041

Token 2104: ' DP' (ID: 51992)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8109923601150513
    2. 'def' → logprob: -1.0609923601150513
    3. 'from' → logprob: -1.9359923601150513
    4. 'dp' → logprob: -3.3109922409057617
    5. 'import' → logprob: -4.810992240905762
    6. '#' → logprob: -5.060992240905762
    7. 'can' → logprob: -5.810992240905762
    8. '```' → logprob: -5.810992240905762
    9. 'possible' → logprob: -5.810992240905762
    10. 'found' → logprob: -6.810992240905762

Token 2105: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7545390725135803
    2. ' =' → logprob: -0.8795390725135803
    3. 'pay' → logprob: -3.6295390129089355
    4. 'rest' → logprob: -3.6295390129089355
    5. 'can' → logprob: -3.8795390129089355
    6. '=' → logprob: -5.1295390129089355
    7. 'amount' → logprob: -5.3795390129089355
    8. ' dp' → logprob: -5.6295390129089355
    9. 'possible' → logprob: -5.7545390129089355
    10. '       ' → logprob: -6.0045390129089355

Token 2106: ' compos' (ID: 14635)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.8244819641113281
    2. 'can' → logprob: -1.1994819641113281
    3. 'mont' → logprob: -2.949481964111328
    4. 's' → logprob: -2.949481964111328
    5. 'pay' → logprob: -3.074481964111328
    6. 'rest' → logprob: -3.824481964111328
    7. 'subset' → logprob: -4.199481964111328
    8. 'target' → logprob: -4.324481964111328
    9. 'val' → logprob: -4.699481964111328
    10. 'possible' → logprob: -4.824481964111328

Token 2107: 'abilité' (ID: 49097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014915651641786098
    2. 'ability' → logprob: -5.764915466308594
    3. 'position' → logprob: -5.889915466308594
    4. 'ition' → logprob: -6.389915466308594
    5. 'poser' → logprob: -6.389915466308594
    6. 'e' → logprob: -6.764915466308594
    7. 'abilité' → logprob: -6.889915466308594
    8. 'pos' → logprob: -7.264915466308594
    9. '
' → logprob: -7.389915466308594
    10. 'ing' → logprob: -8.014915466308594

Token 2108: ' rest' (ID: 2867)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11150359362363815
    2. 'can' → logprob: -2.8615036010742188
    3. 'possible' → logprob: -3.8615036010742188
    4. '               ' → logprob: -4.111503601074219
    5. 'reachable' → logprob: -6.111503601074219
    6. 'ways' → logprob: -6.611503601074219
    7. 'amount' → logprob: -6.611503601074219
    8. 'poss' → logprob: -6.736503601074219
    9. 'coin' → logprob: -7.236503601074219
    10. 'pay' → logprob: -7.486503601074219

Token 2109: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0005140714929439127
    2. '               ' → logprob: -8.375514030456543
    3. 'pay' → logprob: -8.625514030456543
    4. '_co' → logprob: -9.625514030456543
    5. '_coin' → logprob: -12.250514030456543
    6. '-pay' → logprob: -12.500514030456543
    7. '           ' → logprob: -12.875514030456543
    8. '_pos' → logprob: -13.000514030456543
    9. '   ' → logprob: -13.250514030456543
    10. '
' → logprob: -13.375514030456543

Token 2110: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11316674947738647
    2. 'can' → logprob: -2.4881668090820312
    3. 'possible' → logprob: -4.113166809082031
    4. 'poss' → logprob: -6.113166809082031
    5. 'ways' → logprob: -6.613166809082031
    6. 'max' → logprob: -6.863166809082031
    7. 'reachable' → logprob: -7.113166809082031
    8. '       ' → logprob: -7.488166809082031
    9. ' dp' → logprob: -7.488166809082031
    10. 'amount' → logprob: -8.488166809082031

Token 2111: ' utilisant' (ID: 92474)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.9953354597091675
    2. 'pieces' → logprob: -0.9953354597091675
    3. 'range' → logprob: -1.7453354597091675
    4. '[' → logprob: -4.745335578918457
    5. 'dp' → logprob: -4.745335578918457
    6. 'nombre' → logprob: -4.870335578918457
    7. 'possible' → logprob: -4.870335578918457
    8. 'coin' → logprob: -4.870335578918457
    9. 'amount' → logprob: -5.120335578918457
    10. '```' → logprob: -5.370335578918457

Token 2112: ' les' (ID: 1341)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.0630541518330574
    2. 'available' → logprob: -3.188054084777832
    3. 'coins' → logprob: -4.313054084777832
    4. 'pieces' → logprob: -6.313054084777832
    5. 'the' → logprob: -7.188054084777832
    6. 'CO' → logprob: -7.688054084777832
    7. 'range' → logprob: -7.813054084777832
    8. '[' → logprob: -7.938054084777832
    9. 'coin' → logprob: -8.063054084777832
    10. 'les' → logprob: -8.313054084777832

Token 2113: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7754100561141968
    2. 'avail' → logprob: -1.4004100561141968
    3. 'pieces' → logprob: -1.7754100561141968
    4. 'CO' → logprob: -2.5254101753234863
    5. 'available' → logprob: -4.275410175323486
    6. 'coin' → logprob: -4.650410175323486
    7. '[' → logprob: -5.150410175323486
    8. ' CO' → logprob: -6.525410175323486
    9. '[
' → logprob: -6.525410175323486
    10. 'co' → logprob: -6.650410175323486

Token 2114: ' disponibles' (ID: 36617)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.199629545211792
    2. '[' → logprob: -2.074629545211792
    3. 'coins' → logprob: -2.199629545211792
    4. ' =' → logprob: -2.824629545211792
    5. 'rest' → logprob: -3.324629545211792
    6. '=' → logprob: -3.574629545211792
    7. '{' → logprob: -3.949629545211792
    8. '       ' → logprob: -3.949629545211792
    9. '#' → logprob: -3.949629545211792
    10. 'available' → logprob: -3.949629545211792

Token 2115: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003927014302462339
    2. 'max' → logprob: -6.503927230834961
    3. 'possible' → logprob: -7.128927230834961
    4. 'can' → logprob: -7.253927230834961
    5. 'poss' → logprob: -8.378927230834961
    6. 'ways' → logprob: -9.003927230834961
    7. '       ' → logprob: -9.128927230834961
    8. ' dp' → logprob: -9.253927230834961
    9. 'amount' → logprob: -9.503927230834961
    10. 'reachable' → logprob: -9.878927230834961

Token 2116: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6083481311798096
    2. '               ' → logprob: -0.8583481311798096
    3. '```' → logprob: -3.7333481311798096
    4. ' dp' → logprob: -5.3583478927612305
    5. '``' → logprob: -7.2333478927612305
    6. '
' → logprob: -7.7333478927612305
    7. 'coins' → logprob: -8.35834789276123
    8. 'import' → logprob: -8.60834789276123
    9. '                
' → logprob: -8.85834789276123
    10. 'coin' → logprob: -9.10834789276123

Token 2117: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13713857531547546
    2. 'can' → logprob: -2.137138605117798
    3. 'possible' → logprob: -4.887138366699219
    4. 'reachable' → logprob: -7.137138366699219
    5. 'poss' → logprob: -7.387138366699219
    6. '       ' → logprob: -7.637138366699219
    7. '               ' → logprob: -8.762138366699219
    8. '   ' → logprob: -9.137138366699219
    9. 'max' → logprob: -9.262138366699219
    10. 'ways' → logprob: -9.512138366699219

Token 2118: ' pièce' (ID: 56132)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04903728887438774
    2. '               ' → logprob: -3.799037218093872
    3. 'can' → logprob: -3.924037218093872
    4. 'possible' → logprob: -5.674037456512451
    5. 'from' → logprob: -7.674037456512451
    6. 'poss' → logprob: -7.674037456512451
    7. 'reachable' → logprob: -7.799037456512451
    8. 'max' → logprob: -7.924037456512451
    9. ' dp' → logprob: -9.549036979675293
    10. 'def' → logprob: -9.924036979675293

Token 2119: ' unité' (ID: 181741)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2976102828979492
    2. '_values' → logprob: -2.422610282897949
    3. 'values' → logprob: -2.922610282897949
    4. '_counts' → logprob: -3.422610282897949
    5. 'counts' → logprob: -4.297610282897949
    6. '=' → logprob: -4.422610282897949
    7. ' =' → logprob: -4.422610282897949
    8. '_value' → logprob: -4.922610282897949
    9. 'val' → logprob: -5.297610282897949
    10. '_types' → logprob: -5.422610282897949

Token 2120: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1335350275039673
    2. ' =' → logprob: -1.3835350275039673
    3. 's' → logprob: -2.1335349082946777
    4. '[' → logprob: -2.2585349082946777
    5. 'def' → logprob: -3.2585349082946777
    6. '0' → logprob: -3.5085349082946777
    7. 'count' → logprob: -4.008534908294678
    8. '   ' → logprob: -4.633534908294678
    9. '=[' → logprob: -4.633534908294678
    10. 'for' → logprob: -4.633534908294678

Token 2121: ' quant' (ID: 8237)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.5761206150054932
    2. 'val' → logprob: -1.4511206150054932
    3. 'nombre' → logprob: -2.326120615005493
    4. 'mont' → logprob: -3.951120615005493
    5. 'coin' → logprob: -4.326120376586914
    6. 'multip' → logprob: -4.576120376586914
    7. 'face' → logprob: -4.951120376586914
    8. 'pi' → logprob: -4.951120376586914
    9. 'leur' → logprob: -5.451120376586914
    10. 'counts' → logprob: -5.451120376586914

Token 2122: 'ités' (ID: 12479)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.43071475625038147
    2. 'ités' → logprob: -1.055714726448059
    3. 'ities' → logprob: -7.3057146072387695
    4. 'ites' → logprob: -7.4307146072387695
    5. 'ite' → logprob: -8.68071460723877
    6. 'it' → logprob: -8.93071460723877
    7. 'é' → logprob: -9.55571460723877
    8. 'ity' → logprob: -9.68071460723877
    9. 'itié' → logprob: -9.93071460723877
    10. 'és' → logprob: -10.30571460723877

Token 2123: ' limité' (ID: 135767)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6495620012283325
    2. ' =' → logprob: -0.8995620012283325
    3. '=[' → logprob: -3.524561882019043
    4. '[' → logprob: -4.524561882019043
    5. 'available' → logprob: -4.774561882019043
    6. '               ' → logprob: -5.399561882019043
    7. '   ' → logprob: -6.149561882019043
    8. 'dp' → logprob: -6.149561882019043
    9. 'max' → logprob: -6.399561882019043
    10. '={' → logprob: -6.399561882019043

Token 2124: 'es' (ID: 268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09530019015073776
    2. '=' → logprob: -2.8453001976013184
    3. 's' → logprob: -4.220300197601318
    4. 'e' → logprob: -6.470300197601318
    5. '_available' → logprob: -6.595300197601318
    6. '   ' → logprob: -6.720300197601318
    7. 'available' → logprob: -6.720300197601318
    8. '=[' → logprob: -6.845300197601318
    9. '[' → logprob: -7.095300197601318
    10. '       ' → logprob: -7.345300197601318

Token 2125: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03873428702354431
    2. ' dp' → logprob: -3.413734197616577
    3. '```' → logprob: -6.538734436035156
    4. '               ' → logprob: -7.413734436035156
    5. 'max' → logprob: -7.413734436035156
    6. 'possible' → logprob: -7.788734436035156
    7. '(dp' → logprob: -8.163734436035156
    8. 'coin' → logprob: -8.538734436035156
    9. '
' → logprob: -8.663734436035156
    10. '       ' → logprob: -8.913734436035156

Token 2126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.525351881980896
    2. 'dp' → logprob: -0.900351881980896
    3. 'possible' → logprob: -7.9003520011901855
    4. '```' → logprob: -7.9003520011901855
    5. 'pay' → logprob: -8.400351524353027
    6. '                
' → logprob: -8.400351524353027
    7. 'can' → logprob: -8.650351524353027
    8. ' dp' → logprob: -8.900351524353027
    9. 'poss' → logprob: -8.900351524353027
    10. 'from' → logprob: -9.025351524353027

Token 2127: ' can' (ID: 665)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14689190685749054
    2. 'can' (adapté à ' can') → logprob: -2.1468918323516846
    3. '               ' → logprob: -4.021892070770264
    4. 'possible' → logprob: -6.771892070770264
    5. 'poss' → logprob: -8.646891593933105
    6. 'reachable' → logprob: -8.771891593933105
    7. '                   ' → logprob: -9.646891593933105
    8. 'max' → logprob: -9.771891593933105
    9. 'from' → logprob: -9.771891593933105
    10. 'def' → logprob: -10.271891593933105

Token 2128: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.012016603723168373
    2. '_make' → logprob: -5.012016773223877
    3. '_be' → logprob: -6.637016773223877
    4. 'pay' → logprob: -6.762016773223877
    5. '_use' → logprob: -7.387016773223877
    6. '_p' → logprob: -7.512016773223877
    7. '_comp' → logprob: -7.762016773223877
    8. '_buy' → logprob: -8.262016296386719
    9. '_put' → logprob: -8.387016296386719
    10. 'p' → logprob: -9.012016296386719

Token 2129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027083775028586388
    2. '=' → logprob: -3.6520838737487793
    3. '=[' → logprob: -7.527083873748779
    4. '   ' → logprob: -9.777083396911621
    5. '[' → logprob: -10.402083396911621
    6. '_' → logprob: -10.652083396911621
    7. ' ' → logprob: -11.027083396911621
    8. '_possible' → logprob: -11.027083396911621
    9. ')' → logprob: -11.527083396911621
    10. '_amount' → logprob: -11.652083396911621

Token 2130: ' False' (ID: 7983)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008519304916262627
    2. 'False' → logprob: -5.258519172668457
    3. ' [' → logprob: -6.008519172668457
    4. 'collections' → logprob: -7.883519172668457
    5. '{' → logprob: -8.008519172668457
    6. '[[' → logprob: -9.758519172668457
    7. ' False' → logprob: -10.883519172668457
    8. 'set' → logprob: -11.883519172668457
    9. '   ' → logprob: -12.633519172668457
    10. '[p' → logprob: -13.008519172668457

Token 2131: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13465826213359833
    2. 'dp' → logprob: -2.3846583366394043
    3. ' dp' → logprob: -3.5096583366394043
    4. '                
' → logprob: -6.509658336639404
    5. '                ' → logprob: -7.509658336639404
    6. '                   ' → logprob: -7.759658336639404
    7. '```' → logprob: -7.884658336639404
    8. 'coin' → logprob: -8.759657859802246
    9. '
' → logprob: -8.759657859802246
    10. '#' → logprob: -9.009657859802246

Token 2132: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.741435170173645
    2. 'dp' → logprob: -0.741435170173645
    3. '```' → logprob: -3.6164350509643555
    4. '                   ' → logprob: -5.3664350509643555
    5. 'coins' → logprob: -5.3664350509643555
    6. ' dp' → logprob: -5.8664350509643555
    7. 'coin' → logprob: -5.9914350509643555
    8. 'if' → logprob: -6.9914350509643555
    9. '``' → logprob: -7.1164350509643555
    10. '{
' → logprob: -7.3664350509643555

Token 2133: ' def' (ID: 1056)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005744783557020128
    2. 'pay' → logprob: -8.500574111938477
    3. 'from' → logprob: -8.750574111938477
    4. 'ways' → logprob: -10.000574111938477
    5. 'def' (adapté à ' def') → logprob: -10.500574111938477
    6. 'max' → logprob: -10.750574111938477
    7. '   ' → logprob: -11.125574111938477
    8. ' dp' → logprob: -11.125574111938477
    9. 'coin' → logprob: -11.250574111938477
    10. '       ' → logprob: -11.250574111938477

Token 2134: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5688397288322449
    2. 'try' → logprob: -2.1938397884368896
    3. 'dfs' → logprob: -2.4438397884368896
    4. 'possible' → logprob: -3.3188397884368896
    5. 'back' → logprob: -3.3188397884368896
    6. 'coin' → logprob: -3.4438397884368896
    7. 'dp' → logprob: -3.5688397884368896
    8. 'available' → logprob: -4.0688395500183105
    9. 'avail' → logprob: -4.0688395500183105
    10. 'coins' → logprob: -4.4438395500183105

Token 2135: '_make' (ID: 70070)
  Prédit: '_pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0027334284968674183
    2. '_make' → logprob: -6.12773323059082
    3. '_use' → logprob: -8.12773323059082
    4. 'pay' → logprob: -8.87773323059082
    5. '_take' → logprob: -9.62773323059082
    6. '_' → logprob: -11.62773323059082
    7. '_aff' → logprob: -11.87773323059082
    8. 'Pay' → logprob: -12.37773323059082
    9. '_construct' → logprob: -12.37773323059082
    10. '_buy' → logprob: -12.37773323059082

Token 2136: '_money' (ID: 81323)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.6678782105445862
    2. 'amount' → logprob: -1.4178781509399414
    3. '_pay' → logprob: -1.6678781509399414
    4. 'pay' → logprob: -3.4178781509399414
    5. '_payment' → logprob: -5.292878150939941
    6. 'rest' → logprob: -5.417878150939941
    7. '_change' → logprob: -5.542878150939941
    8. '(amount' → logprob: -5.667878150939941
    9. '(rest' → logprob: -5.917878150939941
    10. 'payment' → logprob: -6.417878150939941

Token 2137: '(i' (ID: 3649)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.5074171423912048
    2. '(amount' → logprob: -1.7574172019958496
    3. 'amount' → logprob: -2.1324172019958496
    4. 'rest' → logprob: -3.3824172019958496
    5. '_amount' → logprob: -3.3824172019958496
    6. '(pay' → logprob: -4.25741720199585
    7. '_rest' → logprob: -4.75741720199585
    8. '(' → logprob: -5.88241720199585
    9. '   ' → logprob: -6.38241720199585
    10. 'change' → logprob: -6.75741720199585

Token 2138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006177155766636133
    2. ',i' → logprob: -6.006176948547363
    3. '(i' → logprob: -6.631176948547363
    4. ' ,' → logprob: -6.631176948547363
    5. ',c' → logprob: -8.881176948547363
    6. '   ' → logprob: -9.381176948547363
    7. ')' → logprob: -9.381176948547363
    8. 'i' → logprob: -9.506176948547363
    9. ',index' → logprob: -9.756176948547363
    10. ',n' → logprob: -9.881176948547363

Token 2139: ' amount' (ID: 4527)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6006724238395691
    2. 'amount' → logprob: -0.8506724238395691
    3. 'remaining' → logprob: -4.850672245025635
    4. 'rem' → logprob: -4.975672245025635
    5. 'amt' → logprob: -5.600672245025635
    6. 'current' → logprob: -6.725672245025635
    7. 'target' → logprob: -7.100672245025635
    8. 'curr' → logprob: -7.600672245025635
    9. 'remain' → logprob: -7.600672245025635
    10. 'sum' → logprob: -7.600672245025635

Token 2140: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6495504379272461
    2. '):
' → logprob: -1.024550437927246
    3. '):' → logprob: -2.149550437927246
    4. '):
' → logprob: -7.524550437927246
    5. ':' → logprob: -7.899550437927246
    6. ')==' → logprob: -8.024550437927246
    7. ')' → logprob: -8.274550437927246
    8. ' ,' → logprob: -8.274550437927246
    9. '   ' → logprob: -9.774550437927246
    10. '==' → logprob: -10.024550437927246

Token 2141: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.138745903968811
    2. '   ' → logprob: -1.513745903968811
    3. '```' → logprob: -2.3887457847595215
    4. '               ' → logprob: -2.7637457847595215
    5. ' if' → logprob: -3.1387457847595215
    6. '    ' → logprob: -3.2637457847595215
    7. '                ' → logprob: -3.3887457847595215
    8. '                       ' → logprob: -3.7637457847595215
    9. '                    ' → logprob: -3.7637457847595215
    10. '                           ' → logprob: -4.0137457847595215

Token 2142: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4822051227092743
    2. 'if' → logprob: -1.1072051525115967
    3. ' if' → logprob: -2.9822051525115967
    4. '                   ' → logprob: -7.232204914093018
    5. '       ' → logprob: -8.232205390930176
    6. '                           ' → logprob: -8.982205390930176
    7. 'return' → logprob: -9.482205390930176
    8. '   ' → logprob: -10.107205390930176
    9. '                        ' → logprob: -10.232205390930176
    10. '```' → logprob: -10.607205390930176

Token 2143: ' i' (ID: 575)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7761365175247192
    2. 'if' → logprob: -1.1511365175247192
    3. 'i' → logprob: -2.6511363983154297
    4. '(i' → logprob: -3.0261363983154297
    5. '                   ' → logprob: -3.4011363983154297
    6. 'memo' → logprob: -4.02613639831543
    7. 'rest' → logprob: -4.52613639831543
    8. 'dp' → logprob: -5.27613639831543
    9. '                       ' → logprob: -5.52613639831543
    10. 'False' → logprob: -5.77613639831543

Token 2144: ' :' (ID: 712)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8667001128196716
    2. '==' → logprob: -1.2417001724243164
    3. ',' → logprob: -1.3667001724243164
    4. ',i' → logprob: -4.741700172424316
    5. '<|end|>' → logprob: -5.616700172424316
    6. 'def' → logprob: -5.616700172424316
    7. '+' → logprob: -5.991700172424316
    8. 'i' → logprob: -6.116700172424316
    9. ',n' → logprob: -6.616700172424316
    10. '>=' → logprob: -6.616700172424316

Token 2145: ' pièce' (ID: 56132)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029290078207850456
    2. 'int' → logprob: -4.029290199279785
    3. '0' → logprob: -5.779290199279785
    4. ' i' → logprob: -6.029290199279785
    5. 'idx' → logprob: -6.404290199279785
    6. 'index' → logprob: -6.404290199279785
    7. 'len' → logprob: -7.279290199279785
    8. '...' → logprob: -7.654290199279785
    9. 'coin' → logprob: -8.029290199279785
    10. 'coins' → logprob: -8.904290199279785

Token 2146: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5650479197502136
    2. 'index' → logprob: -1.8150479793548584
    3. ',' → logprob: -2.3150479793548584
    4. ' i' → logprob: -3.6900479793548584
    5. 'idx' → logprob: -3.6900479793548584
    6. ',i' → logprob: -3.8150479793548584
    7. '+' → logprob: -4.065047740936279
    8. '<|end|>' → logprob: -4.315047740936279
    9. 'def' → logprob: -4.440047740936279
    10. 'type' → logprob: -4.815047740936279

Token 2147: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7560902833938599
    2. ':' → logprob: -1.2560902833938599
    3. ')' → logprob: -2.8810901641845703
    4. '                   ' → logprob: -3.2560901641845703
    5. '   ' → logprob: -3.7560901641845703
    6. '):
' → logprob: -3.8810901641845703
    7. '):' → logprob: -3.8810901641845703
    8. '                       ' → logprob: -4.00609016418457
    9. '<|end|>' → logprob: -4.63109016418457
    10. ' if' → logprob: -4.88109016418457

Token 2148: ' CO' (ID: 10271)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.22635027766227722
    2. 'range' → logprob: -1.7263503074645996
    3. '[' → logprob: -4.1013503074646
    4. 'avail' → logprob: -4.9763503074646
    5. 'available' → logprob: -8.476349830627441
    6. ' range' → logprob: -8.476349830627441
    7. '_CO' → logprob: -8.976349830627441
    8. 'list' → logprob: -9.101349830627441
    9. ' CO' → logprob: -9.351349830627441
    10. 'coins' → logprob: -9.351349830627441

Token 2149: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.0009694644249975681
    2. 'INT' → logprob: -7.250969409942627
    3. 'INS' → logprob: -8.750969886779785
    4. 'N' → logprob: -9.250969886779785
    5. 'INF' → logprob: -13.500969886779785
    6. 'NT' → logprob: -13.750969886779785
    7. 'IND' → logprob: -14.500969886779785
    8. 'INC' → logprob: -15.000969886779785
    9. 'T' → logprob: -15.125969886779785
    10. 'INST' → logprob: -15.125969886779785

Token 2150: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -1.6166903151315637e-05
    2. 'Types' → logprob: -12.125016212463379
    3. 'T' → logprob: -12.500016212463379
    4. '_TYPE' → logprob: -12.750016212463379
    5. '_types' → logprob: -13.500016212463379
    6. '   ' → logprob: -14.375016212463379
    7. '_CO' → logprob: -14.625016212463379
    8. 'S' → logprob: -15.500016212463379
    9. '_T' → logprob: -15.500016212463379
    10. ')' → logprob: -16.250015258789062

Token 2151: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27198418974876404
    2. ':' → logprob: -2.146984100341797
    3. '   ' → logprob: -3.771984100341797
    4. '<|end|>' → logprob: -4.146984100341797
    5. '                       ' → logprob: -4.396984100341797
    6. '):
' → logprob: -4.396984100341797
    7. ':
' → logprob: -4.771984100341797
    8. '
' → logprob: -4.896984100341797
    9. '```' → logprob: -4.896984100341797
    10. '       ' → logprob: -5.521984100341797

Token 2152: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5906491279602051
    2. '                   ' → logprob: -0.8406491279602051
    3. ',' → logprob: -5.465649127960205
    4. '```' → logprob: -6.215649127960205
    5. '):
' → logprob: -6.590649127960205
    6. '       ' → logprob: -6.590649127960205
    7. '                        
' → logprob: -6.965649127960205
    8. ' if' → logprob: -6.965649127960205
    9. '   ' → logprob: -7.465649127960205
    10. ':' → logprob: -7.840649127960205

Token 2153: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10593900829553604
    2. '                       ' → logprob: -2.3559389114379883
    3. ' if' → logprob: -5.480938911437988
    4. '                   ' → logprob: -7.230938911437988
    5. '       ' → logprob: -8.105938911437988
    6. '   ' → logprob: -8.730938911437988
    7. '	if' → logprob: -9.105938911437988
    8. '```' → logprob: -9.480938911437988
    9. '	                   ' → logprob: -9.855938911437988
    10. '                           ' → logprob: -10.480938911437988

Token 2154: ' amount' (ID: 4527)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9780071377754211
    2. 'i' → logprob: -1.2280070781707764
    3. 'amount' → logprob: -1.8530070781707764
    4. 'can' → logprob: -2.9780070781707764
    5. '                   ' → logprob: -3.4780070781707764
    6. '(i' → logprob: -3.8530070781707764
    7. 'rest' → logprob: -4.2280073165893555
    8. '   ' → logprob: -4.3530073165893555
    9. '(amount' → logprob: -4.6030073165893555
    10. '0' → logprob: -4.6030073165893555

Token 2155: ' :' (ID: 712)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3152020275592804
    2. ' ==' → logprob: -1.315201997756958
    3. '                   ' → logprob: -7.315202236175537
    4. '=' → logprob: -7.690202236175537
    5. ')==' → logprob: -8.440201759338379
    6. ',' → logprob: -9.065201759338379
    7. '                       ' → logprob: -9.065201759338379
    8. ')' → logprob: -9.565201759338379
    9. ' =' → logprob: -10.315201759338379
    10. '):
' → logprob: -10.440201759338379

Token 2156: ' montant' (ID: 72364)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0008043874404393137
    2. ' amount' → logprob: -7.250804424285889
    3. 'rest' → logprob: -9.37580394744873
    4. '0' → logprob: -12.12580394744873
    5. '(amount' → logprob: -13.62580394744873
    6. '   ' → logprob: -14.12580394744873
    7. '                   ' → logprob: -14.25080394744873
    8. ' rest' → logprob: -15.50080394744873
    9. 'remaining' → logprob: -15.50080394744873
    10. 'change' → logprob: -15.87580394744873

Token 2157: ' à' (ID: 1221)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5163159370422363
    2. ' ==' → logprob: -1.3913159370422363
    3. '                   ' → logprob: -2.5163159370422363
    4. '=' → logprob: -3.7663159370422363
    5. ')' → logprob: -4.641315937042236
    6. '                       ' → logprob: -4.891315937042236
    7. ')==' → logprob: -5.516315937042236
    8. '   ' → logprob: -5.766315937042236
    9. '0' → logprob: -5.766315937042236
    10. '):
' → logprob: -6.141315937042236

Token 2158: ' réaliser' (ID: 52384)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.008810627274215221
    2. 'p' → logprob: -5.008810520172119
    3. 'pay' → logprob: -6.258810520172119
    4. '0' → logprob: -8.883810997009277
    5. 'pai' → logprob: -11.758810997009277
    6. '```' → logprob: -12.008810997009277
    7. 'penser' → logprob: -12.383810997009277
    8. 'r' → logprob: -12.383810997009277
    9. ' payer' → logprob: -12.508810997009277
    10. 'faire' → logprob: -13.008810997009277

Token 2159: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5429366230964661
    2. '):
' → logprob: -2.1679365634918213
    3. ':' → logprob: -3.0429365634918213
    4. ')' → logprob: -3.1679365634918213
    5. '<|end|>' → logprob: -3.5429365634918213
    6. ':
' → logprob: -3.6679365634918213
    7. '):' → logprob: -3.6679365634918213
    8. '   ' → logprob: -3.9179365634918213
    9. '                   ' → logprob: -4.0429368019104
    10. '<|end|>' → logprob: -4.0429368019104

Token 2160: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7433192133903503
    2. '```' → logprob: -0.7433192133903503
    3. '                   ' → logprob: -3.493319272994995
    4. '
' → logprob: -5.243319034576416
    5. '       ' → logprob: -5.618319034576416
    6. '   ' → logprob: -5.993319034576416
    7. '``' → logprob: -6.243319034576416
    8. '                        
' → logprob: -6.868319034576416
    9. '                           ' → logprob: -6.993319034576416
    10. '):
' → logprob: -6.993319034576416

Token 2161: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010313807288184762
    2. '                       ' → logprob: -7.751031398773193
    3. '                   ' → logprob: -8.001030921936035
    4. ' if' → logprob: -8.376030921936035
    5. '```' → logprob: -11.501030921936035
    6. '	if' → logprob: -11.626030921936035
    7. '       ' → logprob: -12.001030921936035
    8. '   ' → logprob: -12.001030921936035
    9. '               ' → logprob: -13.376030921936035
    10. '           ' → logprob: -14.126030921936035

Token 2162: ' DP' (ID: 51992)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10564172267913818
    2. '                   ' → logprob: -3.1056418418884277
    3. 'def' → logprob: -4.105641841888428
    4. 'can' → logprob: -4.230641841888428
    5. ' if' → logprob: -4.980641841888428
    6. 'rest' → logprob: -5.855641841888428
    7. 'memo' → logprob: -6.105641841888428
    8. '               ' → logprob: -6.355641841888428
    9. '```' → logprob: -6.355641841888428
    10. '
' → logprob: -6.480641841888428

Token 2163: ' mém' (ID: 136981)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7850091457366943
    2. '=' → logprob: -1.5350091457366943
    3. 'def' → logprob: -2.2850091457366943
    4. '[i' → logprob: -3.6600091457366943
    5. '(i' → logprob: -3.7850091457366943
    6. 'cache' → logprob: -3.9100091457366943
    7. '[' → logprob: -3.9100091457366943
    8. '{' → logprob: -4.035009384155273
    9. '                   ' → logprob: -4.160009384155273
    10. '{}' → logprob: -4.785009384155273

Token 2164: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.28155314922332764
    2. 'oire' → logprob: -2.781553268432617
    3. 'ory' → logprob: -3.406553268432617
    4. 'cache' → logprob: -3.531553268432617
    5. 'def' → logprob: -3.906553268432617
    6. 'oriz' → logprob: -4.281553268432617
    7. 'o' → logprob: -4.281553268432617
    8. 'oir' → logprob: -4.531553268432617
    9. 'ization' → logprob: -4.781553268432617
    10. 'orie' → logprob: -4.781553268432617

Token 2165: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.4752529263496399
    2. 'isé' → logprob: -1.4752528667449951
    3. 'isation' → logprob: -2.725252866744995
    4. 'ized' → logprob: -3.350252866744995
    5. '```' → logprob: -4.600253105163574
    6. 'ise' → logprob: -4.725253105163574
    7. 'isée' → logprob: -4.725253105163574
    8. 'or' → logprob: -5.350253105163574
    9. 'oire' → logprob: -5.850253105163574
    10. '
' → logprob: -5.850253105163574

Token 2166: ' (' (ID: 350)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9168471097946167
    2. '@' → logprob: -2.2918472290039062
    3. ' =' → logprob: -2.6668472290039062
    4. 'memo' → logprob: -2.6668472290039062
    5. '{' → logprob: -2.9168472290039062
    6. 'cache' → logprob: -3.0418472290039062
    7. '=' → logprob: -3.1668472290039062
    8. 'dp' → logprob: -3.2918472290039062
    9. '={}' → logprob: -3.5418472290039062
    10. '(None' → logprob: -3.9168472290039062

Token 2167: 'on' (ID: 263)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2011970430612564
    2. '{}' → logprob: -2.9511971473693848
    3. '(i' → logprob: -3.0761971473693848
    4. '{})' → logprob: -3.2011971473693848
    5. '{i' → logprob: -4.701197147369385
    6. ')' → logprob: -4.826197147369385
    7. 'can' → logprob: -5.201197147369385
    8. 'None' → logprob: -5.576197147369385
    9. '{},' → logprob: -5.576197147369385
    10. '({},' → logprob: -5.951197147369385

Token 2168: ' la' (ID: 557)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5905267000198364
    2. ')' → logprob: -1.2155267000198364
    3. 'cache' → logprob: -2.215526580810547
    4. 'from' → logprob: -4.215526580810547
    5. 'l' → logprob: -6.090526580810547
    6. 'memo' → logprob: -6.090526580810547
    7. '_cache' → logprob: -6.215526580810547
    8. '=None' → logprob: -6.215526580810547
    9. 'None' → logprob: -6.590526580810547
    10. ')
' → logprob: -6.715526580810547

Token 2169: ' fera' (ID: 69827)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.026622701436281204
    2. '_cache' → logprob: -4.901622772216797
    3. 'try' → logprob: -5.776622772216797
    4. ' cache' → logprob: -5.901622772216797
    5. 'import' → logprob: -6.651622772216797
    6. 'continue' → logprob: -6.776622772216797
    7. 'memo' → logprob: -6.901622772216797
    8. 'skip' → logprob: -7.026622772216797
    9. 'l' → logprob: -7.151622772216797
    10. 'contin' → logprob: -7.276622772216797

Token 2170: ' iterative' (ID: 167755)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8134312033653259
    2. '{})' → logprob: -1.4384312629699707
    3. '{}' → logprob: -1.6884312629699707
    4. '={}' → logprob: -3.4384312629699707
    5. ' {})' → logprob: -3.5634312629699707
    6. 'import' → logprob: -4.063431262969971
    7. '{' → logprob: -4.688431262969971
    8. ' =' → logprob: -5.063431262969971
    9. '={' → logprob: -5.188431262969971
    10. '                   ' → logprob: -5.438431262969971

Token 2171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010863055475056171
    2. 'def' → logprob: -5.885862827301025
    3. '):' → logprob: -6.385862827301025
    4. '```' → logprob: -6.510862827301025
    5. '<|end|>' → logprob: -7.385862827301025
    6. '):
' → logprob: -7.510862827301025
    7. ' )' → logprob: -7.760862827301025
    8. 'for' → logprob: -8.135863304138184
    9. ',' → logprob: -8.260863304138184
    10. '[' → logprob: -8.635863304138184

Token 2172: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5975964069366455
    2. '                   ' → logprob: -1.0975964069366455
    3. '
' → logprob: -2.8475964069366455
    4. '               ' → logprob: -3.5975964069366455
    5. '``' → logprob: -4.972596168518066
    6. ')' → logprob: -5.472596168518066
    7. 'def' → logprob: -5.597596168518066
    8. '#' → logprob: -6.097596168518066
    9. '                       ' → logprob: -6.722596168518066
    10. '                    
' → logprob: -6.847596168518066

Token 2173: ' memo' (ID: 46393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5608062148094177
    2. 'memo' (adapté à ' memo') → logprob: -1.1858062744140625
    3. '                   ' → logprob: -3.5608062744140625
    4. 'if' → logprob: -3.5608062744140625
    5. 'mem' → logprob: -3.8108062744140625
    6. 'cache' → logprob: -4.4358062744140625
    7. '#' → logprob: -4.6858062744140625
    8. '                       ' → logprob: -5.5608062744140625
    9. 'visited' → logprob: -5.6858062744140625
    10. 'non' → logprob: -5.6858062744140625

Token 2174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15128646790981293
    2. ' =' → logprob: -2.0262863636016846
    3. '={}' → logprob: -5.151286602020264
    4. '={' → logprob: -7.026286602020264
    5. '={}
' → logprob: -7.401286602020264
    6. '={(' → logprob: -7.776286602020264
    7. '={
' → logprob: -7.776286602020264
    8. '=dict' → logprob: -9.401286125183105
    9. '=[' → logprob: -9.526286125183105
    10. '=
' → logprob: -9.651286125183105

Token 2175: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4796164631843567
    2. '{' → logprob: -1.479616403579712
    3. 'collections' → logprob: -2.854616403579712
    4. '{}
' → logprob: -3.229616403579712
    5. '[' → logprob: -3.354616403579712
    6. '[[' → logprob: -4.354616641998291
    7. '[{' → logprob: -5.479616641998291
    8. 'dict' → logprob: -5.979616641998291
    9. '[-' → logprob: -7.229616641998291
    10. '{}

' → logprob: -7.604616641998291

Token 2176: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011344064027071
    2. '
' → logprob: -6.136343955993652
    3. '```' → logprob: -6.136343955993652
    4. '               ' → logprob: -6.511343955993652
    5. '                       ' → logprob: -6.511343955993652
    6. ')' → logprob: -6.511343955993652
    7. '                    ' → logprob: -7.011343955993652
    8. '                    
' → logprob: -7.511343955993652
    9. 'for' → logprob: -8.761343955993652
    10. '           ' → logprob: -9.136343955993652

Token 2177: ' stack' (ID: 10825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1154464483261108
    2. 'stack' (adapté à ' stack') → logprob: -1.1154464483261108
    3. '                   ' → logprob: -1.6154464483261108
    4. 'if' → logprob: -2.7404465675354004
    5. 'key' → logprob: -3.3654465675354004
    6. 'for' → logprob: -4.3654465675354
    7. 'keys' → logprob: -4.3654465675354
    8. '                       ' → logprob: -4.6154465675354
    9. '
' → logprob: -5.6154465675354
    10. ')' → logprob: -6.8654465675354

Token 2178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1415787935256958
    2. '.append' → logprob: -1.5165787935256958
    3. '=[]' → logprob: -2.1415786743164062
    4. ',' → logprob: -2.3915786743164062
    5. '                   ' → logprob: -2.6415786743164062
    6. ':' → logprob: -2.8915786743164062
    7. '=[]
' → logprob: -3.8915786743164062
    8. 'def' → logprob: -4.016578674316406
    9. '=' → logprob: -4.391578674316406
    10. ')' → logprob: -4.516578674316406

Token 2179: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.306760805164231e-05
    2. '[((' → logprob: -11.50001335144043
    3. '[' → logprob: -13.00001335144043
    4. ' [(' → logprob: -14.50001335144043
    5. '   ' → logprob: -17.00001335144043
    6. '[]
' → logprob: -18.50001335144043
    7. '[i' → logprob: -19.37501335144043
    8. '[]' → logprob: -20.00001335144043
    9. '[
' → logprob: -20.62501335144043
    10. '[[' → logprob: -20.62501335144043

Token 2180: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009823855943977833
    2. '0' → logprob: -4.634823799133301
    3. ' i' → logprob: -9.7598237991333
    4. '(i' → logprob: -12.0098237991333
    5. '(' → logprob: -13.3848237991333
    6. ')' → logprob: -14.8848237991333
    7. '   ' → logprob: -15.1348237991333
    8. '                   ' → logprob: -15.3848237991333
    9. ' ' → logprob: -15.5098237991333
    10. ',i' → logprob: -15.6348237991333

Token 2181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014273041859269142
    2. ',len' → logprob: -4.389273166656494
    3. '0' → logprob: -6.389273166656494
    4. ' ,' → logprob: -10.639272689819336
    5. ',n' → logprob: -10.889272689819336
    6. ',m' → logprob: -12.014272689819336
    7. ',
' → logprob: -12.264272689819336
    8. ',None' → logprob: -12.389272689819336
    9. ',num' → logprob: -12.764272689819336
    10. ',p' → logprob: -12.889272689819336

Token 2182: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0017758574103936553
    2. '0' → logprob: -6.376775741577148
    3. ' amount' → logprob: -9.876775741577148
    4. 'rest' → logprob: -12.251775741577148
    5. '(amount' → logprob: -12.251775741577148
    6. ')' → logprob: -12.501775741577148
    7. '   ' → logprob: -13.876775741577148
    8. '(' → logprob: -14.001775741577148
    9. '
' → logprob: -14.126775741577148
    10. 'coins' → logprob: -14.376775741577148

Token 2183: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.14334292709827423
    2. ')]
' → logprob: -2.018342971801758
    3. ',' → logprob: -7.768342971801758
    4. ')]

' → logprob: -9.518342971801758
    5. ')][' → logprob: -9.768342971801758
    6. ')]
' → logprob: -10.018342971801758
    7. ')' → logprob: -10.768342971801758
    8. '),(' → logprob: -11.893342971801758
    9. '),' → logprob: -11.893342971801758
    10. '```' → logprob: -12.018342971801758

Token 2184: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7116534113883972
    2. '                   ' → logprob: -1.586653470993042
    3. '```' → logprob: -1.836653470993042
    4. '                           ' → logprob: -2.961653470993042
    5. ',' → logprob: -3.211653470993042
    6. '                               ' → logprob: -3.836653470993042
    7. '       ' → logprob: -5.211653232574463
    8. ')' → logprob: -5.586653232574463
    9. '           ' → logprob: -5.836653232574463
    10. '                                           ' → logprob: -6.086653232574463

Token 2185: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.023289386183023453
    2. 'def' → logprob: -4.898289203643799
    3. '                   ' → logprob: -5.398289203643799
    4. '```' → logprob: -5.648289203643799
    5. ')' → logprob: -6.148289203643799
    6. 'visited' → logprob: -6.773289203643799
    7. ' while' → logprob: -7.023289203643799
    8. '[]' → logprob: -7.398289203643799
    9. 'While' → logprob: -7.398289203643799
    10. '
' → logprob: -7.773289203643799

Token 2186: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0009446957265026867
    2. 'len' → logprob: -7.5009446144104
    3. ' stack' → logprob: -8.000945091247559
    4. 'True' → logprob: -9.875945091247559
    5. '(stack' → logprob: -12.875945091247559
    6. '   ' → logprob: -14.500945091247559
    7. ' True' → logprob: -15.000945091247559
    8. '	stack' → logprob: -15.250945091247559
    9. '       ' → logprob: -15.375945091247559
    10. '    ' → logprob: -15.500945091247559

Token 2187: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3806067705154419
    2. ':' → logprob: -1.505606770515442
    3. '[-' → logprob: -3.2556066513061523
    4. '):
' → logprob: -3.5056066513061523
    5. '!=' → logprob: -5.130606651306152
    6. '```' → logprob: -5.130606651306152
    7. '.pop' → logprob: -6.255606651306152
    8. 'not' → logprob: -6.505606651306152
    9. '                   ' → logprob: -6.880606651306152
    10. '==' → logprob: -6.880606651306152

Token 2188: '                       ' (ID: 968)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3499166667461395
    2. '                       ' → logprob: -1.474916696548462
    3. ',' → logprob: -3.474916696548462
    4. ' (' → logprob: -4.099916458129883
    5. '(' → logprob: -5.849916458129883
    6. '```' → logprob: -5.849916458129883
    7. ',i' → logprob: -5.849916458129883
    8. '                           ' → logprob: -5.974916458129883
    9. '                               ' → logprob: -6.099916458129883
    10. 'i' → logprob: -6.474916458129883

Token 2189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.26427891850471497
    2. '(i' → logprob: -1.5142788887023926
    3. 'idx' → logprob: -5.514278888702393
    4. 'state' → logprob: -6.264278888702393
    5. 'stack' → logprob: -6.514278888702393
    6. 'curr' → logprob: -6.764278888702393
    7. 'cur' → logprob: -7.639278888702393
    8. 'key' → logprob: -8.13927936553955
    9. '(stack' → logprob: -8.13927936553955
    10. 'pos' → logprob: -8.38927936553955

Token 2190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021384501829743385
    2. ',i' → logprob: -4.1463847160339355
    3. ',n' → logprob: -6.2713847160339355
    4. ',next' → logprob: -6.3963847160339355
    5. ',<' → logprob: -8.271384239196777
    6. ',p' → logprob: -8.646384239196777
    7. ' ,' → logprob: -8.771384239196777
    8. '+' → logprob: -8.896384239196777
    9. ',m' → logprob: -9.021384239196777
    10. ',k' → logprob: -9.021384239196777

Token 2191: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -4.870950215263292e-05
    2. ' amount' → logprob: -10.000048637390137
    3. '(amount' → logprob: -13.000048637390137
    4. 'i' → logprob: -14.375048637390137
    5. 'a' → logprob: -16.500049591064453
    6. '
' → logprob: -16.750049591064453
    7. '           ' → logprob: -16.875049591064453
    8. '   ' → logprob: -17.250049591064453
    9. 'memo' → logprob: -17.250049591064453
    10. '                   ' → logprob: -17.750049591064453

Token 2192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9487603306770325
    2. '=' → logprob: -1.0737602710723877
    3. ',' → logprob: -1.4487602710723877
    4. '==' → logprob: -4.073760509490967
    5. ' ,' → logprob: -5.448760509490967
    6. ' ==' → logprob: -5.823760509490967
    7. '```' → logprob: -6.323760509490967
    8. ')' → logprob: -6.698760509490967
    9. ' if' → logprob: -6.823760509490967
    10. '=None' → logprob: -7.073760509490967

Token 2193: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.018994327634572983
    2. ' stack' → logprob: -4.018994331359863
    3. '(stack' → logprob: -7.143994331359863
    4. '0' → logprob: -10.268994331359863
    5. 'i' → logprob: -11.768994331359863
    6. '	stack' → logprob: -12.643994331359863
    7. ')' → logprob: -13.018994331359863
    8. '<|end|>' → logprob: -13.768994331359863
    9. ' (' → logprob: -13.893994331359863
    10. '(i' → logprob: -14.518994331359863

Token 2194: '.pop' (ID: 15746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15981414914131165
    2. '+' → logprob: -2.4098141193389893
    3. ')' → logprob: -4.659814357757568
    4. ',i' → logprob: -4.659814357757568
    5. '<|end|>' → logprob: -5.409814357757568
    6. '-' → logprob: -5.409814357757568
    7. ' ,' → logprob: -5.659814357757568
    8. '```' → logprob: -5.784814357757568
    9. ' +' → logprob: -5.909814357757568
    10. ',
' → logprob: -5.909814357757568

Token 2195: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9508742094039917
    2. '                       ' → logprob: -1.2008742094039917
    3. '                           ' → logprob: -1.9508742094039917
    4. ')' → logprob: -2.9508743286132812
    5. ')
' → logprob: -3.5758743286132812
    6. '):
' → logprob: -4.200874328613281
    7. 'if' → logprob: -4.825874328613281
    8. ':
' → logprob: -5.200874328613281
    9. '                               ' → logprob: -5.200874328613281
    10. '```' → logprob: -5.200874328613281

Token 2196: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3005943298339844
    2. '```' → logprob: -1.4255943298339844
    3. '                       ' → logprob: -4.925594329833984
    4. '                               ' → logprob: -5.050594329833984
    5. 'if' → logprob: -6.175594329833984
    6. ' if' → logprob: -7.050594329833984
    7. '                            ' → logprob: -7.675594329833984
    8. '                        ' → logprob: -8.175594329833984
    9. '[' → logprob: -8.425594329833984
    10. '                                   ' → logprob: -8.425594329833984

Token 2197: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010110076516866684
    2. 'key' (adapté à ' key') → logprob: -4.635109901428223
    3. '                       ' → logprob: -8.885109901428223
    4. '                           ' → logprob: -9.385109901428223
    5. ' if' → logprob: -9.510109901428223
    6. '                               ' → logprob: -10.010109901428223
    7. '                                   ' → logprob: -12.885109901428223
    8. '   ' → logprob: -13.135109901428223
    9. ' key' → logprob: -13.260109901428223
    10. 'while' → logprob: -13.760109901428223

Token 2198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044502388685941696
    2. '=(' → logprob: -3.5445024967193604
    3. '=i' → logprob: -4.919502258300781
    4. ' =' → logprob: -5.044502258300781
    5. '(i' → logprob: -7.669502258300781
    6. '=
' → logprob: -8.169502258300781
    7. '==' → logprob: -10.169502258300781
    8. '=None' → logprob: -10.294502258300781
    9. '=('' → logprob: -11.169502258300781
    10. '```' → logprob: -11.669502258300781

Token 2199: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001129602751461789
    2. '(' → logprob: -9.250112533569336
    3. ' (' → logprob: -11.000112533569336
    4. '(ii' → logprob: -16.000112533569336
    5. '(x' → logprob: -18.375112533569336
    6. '(I' → logprob: -18.500112533569336
    7. '   ' → logprob: -18.625112533569336
    8. '(j' → logprob: -18.625112533569336
    9. '(k' → logprob: -19.500112533569336
    10. ' ' → logprob: -20.750112533569336

Token 2200: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -15.0
    3. '(i' → logprob: -17.75
    4. '	i' → logprob: -19.75
    5. ')i' → logprob: -19.75
    6. ',i' → logprob: -20.625
    7. '_i' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. ''i' → logprob: -21.375
    10. '{i' → logprob: -22.0

Token 2201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020258675795048475
    2. ',n' → logprob: -9.750202178955078
    3. ',len' → logprob: -10.000202178955078
    4. ',next' → logprob: -10.250202178955078
    5. ',i' → logprob: -10.750202178955078
    6. ',num' → logprob: -12.000202178955078
    7. ',k' → logprob: -12.250202178955078
    8. ',index' → logprob: -12.500202178955078
    9. ',m' → logprob: -12.625202178955078
    10. ' ,' → logprob: -12.875202178955078

Token 2202: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -6.704273118884885e-07
    2. ' amount' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.375
    4. '(amount' → logprob: -21.625
    5. '    ' → logprob: -22.75
    6. '
' → logprob: -23.25
    7. ')' → logprob: -23.875
    8. '     ' → logprob: -24.125
    9. ' ' → logprob: -24.5
    10. 'Amount' → logprob: -24.75

Token 2203: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0046752882190048695
    2. ')' → logprob: -5.754675388336182
    3. ',' → logprob: -6.629675388336182
    4. '                       ' → logprob: -9.129674911499023
    5. '                           ' → logprob: -10.629674911499023
    6. ',)
' → logprob: -11.129674911499023
    7. ')
' → logprob: -12.129674911499023
    8. 'if' → logprob: -12.504674911499023
    9. '                   ' → logprob: -12.754674911499023
    10. '                               ' → logprob: -13.004674911499023

Token 2204: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.704255223274231
    2. '                           ' → logprob: -0.829255223274231
    3. '```' → logprob: -2.9542551040649414
    4. 'if' → logprob: -5.579255104064941
    5. '                   ' → logprob: -5.579255104064941
    6. '                               ' → logprob: -5.704255104064941
    7. ' if' → logprob: -6.079255104064941
    8. '           ' → logprob: -6.704255104064941
    9. '                        ' → logprob: -7.079255104064941
    10. '               ' → logprob: -7.704255104064941

Token 2205: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.9385402993066236e-05
    2. ' if' → logprob: -11.375019073486328
    3. '                           ' → logprob: -13.000019073486328
    4. '                       ' → logprob: -13.250019073486328
    5. 'continue' → logprob: -13.375019073486328
    6. '                               ' → logprob: -13.625019073486328
    7. '                   ' → logprob: -14.250019073486328
    8. '                                   ' → logprob: -16.250019073486328
    9. '```' → logprob: -16.250019073486328
    10. '
' → logprob: -16.625019073486328

Token 2206: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0011828463757410645
    2. ' key' → logprob: -6.876183032989502
    3. 'amount' → logprob: -9.251182556152344
    4. '(key' → logprob: -10.626182556152344
    5. 'i' → logprob: -10.876182556152344
    6. '(' → logprob: -12.251182556152344
    7. '(i' → logprob: -13.126182556152344
    8. ' amount' → logprob: -13.876182556152344
    9. '0' → logprob: -14.001182556152344
    10. ' (' → logprob: -14.376182556152344

Token 2207: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.24017499387264252
    2. ' in' → logprob: -2.4901750087738037
    3. ' not' → logprob: -2.6151750087738037
    4. 'not' → logprob: -2.8651750087738037
    5. ')' → logprob: -8.365175247192383
    6. '==' → logprob: -8.990175247192383
    7. '```' → logprob: -10.365175247192383
    8. 'already' → logprob: -11.240175247192383
    9. 'is' → logprob: -11.365175247192383
    10. '[' → logprob: -11.615175247192383

Token 2208: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -7.896309739408025e-07
    2. ' memo' → logprob: -15.000000953674316
    3. '{' → logprob: -16.0
    4. 'memory' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. 'dp' → logprob: -16.875
    7. 'mem' → logprob: -17.0
    8. '.memo' → logprob: -17.375
    9. 'stack' → logprob: -17.75
    10. '{
' → logprob: -18.5

Token 2209: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5612301826477051
    2. ':' → logprob: -1.436230182647705
    3. ':
' → logprob: -1.811230182647705
    4. '                       ' → logprob: -3.936230182647705
    5. ':return' → logprob: -6.311230182647705
    6. '=' → logprob: -6.561230182647705
    7. '                               ' → logprob: -6.686230182647705
    8. '                   ' → logprob: -7.061230182647705
    9. '=True' → logprob: -7.061230182647705
    10. ' or' → logprob: -7.686230182647705

Token 2210: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05052083358168602
    2. 'True' → logprob: -4.425520896911621
    3. 'False' → logprob: -4.425520896911621
    4. ' True' → logprob: -4.550520896911621
    5. '                       ' → logprob: -4.675520896911621
    6. ' False' → logprob: -6.300520896911621
    7. '                               ' → logprob: -6.425520896911621
    8. '                   ' → logprob: -7.675520896911621
    9. 'continue' → logprob: -8.425520896911621
    10. ' continue' → logprob: -8.675520896911621

Token 2211: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7256262898445129
    2. 'True' → logprob: -0.8506262898445129
    3. 'False' → logprob: -2.600626230239868
    4. '                   ' → logprob: -5.225626468658447
    5. ' continue' → logprob: -5.725626468658447
    6. '                           ' → logprob: -5.975626468658447
    7. ' True' → logprob: -6.475626468658447
    8. '                               ' → logprob: -7.475626468658447
    9. '0' → logprob: -8.100625991821289
    10. '               ' → logprob: -8.350625991821289

Token 2212: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.22720393538475037
    2. '                               ' → logprob: -2.352203845977783
    3. '                       ' → logprob: -2.727203845977783
    4. '```' → logprob: -3.977203845977783
    5. 'continue' → logprob: -4.477203845977783
    6. 'if' → logprob: -4.727203845977783
    7. '
' → logprob: -6.977203845977783
    8. '                   ' → logprob: -7.477203845977783
    9. ' if' → logprob: -7.727203845977783
    10. '                            ' → logprob: -7.977203845977783

Token 2213: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6497396230697632
    2. '                       ' → logprob: -1.5247396230697632
    3. '```' → logprob: -1.6497396230697632
    4. '                               ' → logprob: -2.7747397422790527
    5. '                   ' → logprob: -5.899739742279053
    6. 'continue' → logprob: -7.524739742279053
    7. 'tokens' → logprob: -7.649739742279053
    8. '``' → logprob: -7.899739742279053
    9. 'stack' → logprob: -8.274739265441895
    10. 'if' → logprob: -8.399739265441895

Token 2214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23774082958698273
    2. '                           ' → logprob: -2.4877407550811768
    3. 'memo' → logprob: -2.6127407550811768
    4. '                       ' → logprob: -3.3627407550811768
    5. ' if' → logprob: -3.9877407550811768
    6. '                   ' → logprob: -7.237740993499756
    7. '                               ' → logprob: -7.737740993499756
    8. ' memo' → logprob: -7.862740993499756
    9. '           ' → logprob: -9.362740516662598
    10. '   ' → logprob: -9.862740516662598

Token 2215: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.07940248399972916
    2. 'i' → logprob: -2.579402446746826
    3. ' amount' → logprob: -7.704402446746826
    4. ' i' → logprob: -10.204402923583984
    5. '(amount' → logprob: -11.704402923583984
    6. '   ' → logprob: -11.954402923583984
    7. '(i' → logprob: -12.704402923583984
    8. '0' → logprob: -13.454402923583984
    9. ' ' → logprob: -14.579402923583984
    10. '  ' → logprob: -14.641902923583984

Token 2216: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06227833405137062
    2. ' ==' → logprob: -2.8122782707214355
    3. '<' → logprob: -8.562278747558594
    4. '0' → logprob: -9.562278747558594
    5. '=' → logprob: -10.187278747558594
    6. '<=' → logprob: -13.437278747558594
    7. ']==' → logprob: -13.687278747558594
    8. '==-' → logprob: -13.687278747558594
    9. '==
' → logprob: -13.687278747558594
    10. '===' → logprob: -13.812278747558594

Token 2217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '                       ' → logprob: -21.5
    4. '   ' → logprob: -21.75
    5. '                           ' → logprob: -22.125
    6. '                   ' → logprob: -22.5
    7. '۰' → logprob: -22.625
    8. '                               ' → logprob: -22.75
    9. '=' → logprob: -23.0
    10. '
' → logprob: -23.125

Token 2218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '                   ' → logprob: -19.875
    4. '                       ' → logprob: -20.125
    5. '               ' → logprob: -20.5
    6. '                           ' → logprob: -21.0
    7. '   ' → logprob: -21.25
    8. '           ' → logprob: -21.625
    9. '                               ' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 2219: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4916824698448181
    2. ':
' → logprob: -1.116682529449463
    3. ' or' → logprob: -3.366682529449463
    4. ':' → logprob: -3.741682529449463
    5. '                               ' → logprob: -6.991682529449463
    6. '                       ' → logprob: -7.241682529449463
    7. '):
' → logprob: -7.491682529449463
    8. ':return' → logprob: -8.491682052612305
    9. '                          ' → logprob: -9.491682052612305
    10. '                            ' → logprob: -9.491682052612305

Token 2220: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0006821724819019437
    2. '                               ' → logprob: -7.625682353973389
    3. '                       ' → logprob: -9.62568187713623
    4. ':
' → logprob: -10.25068187713623
    5. '```' → logprob: -10.62568187713623
    6. ' or' → logprob: -11.00068187713623
    7. '                            ' → logprob: -11.37568187713623
    8. ':' → logprob: -11.37568187713623
    9. '                                   ' → logprob: -12.12568187713623
    10. '                   ' → logprob: -12.25068187713623

Token 2221: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.3514834940433502
    2. 'can' → logprob: -1.2264834642410278
    3. '                           ' → logprob: -6.726483345031738
    4. 'continue' → logprob: -7.351483345031738
    5. ' memo' → logprob: -7.976483345031738
    6. '                   ' → logprob: -8.476483345031738
    7. 'True' → logprob: -8.476483345031738
    8. '                               ' → logprob: -9.101483345031738
    9. '                       ' → logprob: -9.351483345031738
    10. 'stack' → logprob: -9.976483345031738

Token 2222: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.000763510703109e-05
    2. '[' → logprob: -10.750040054321289
    3. '[(' → logprob: -11.500040054321289
    4. 'True' → logprob: -11.750040054321289
    5. 'key' → logprob: -14.750040054321289
    6. '
' → logprob: -17.25004005432129
    7. '=True' → logprob: -18.00004005432129
    8. '```' → logprob: -18.12504005432129
    9. '[
' → logprob: -18.75004005432129
    10. ' True' → logprob: -19.00004005432129

Token 2223: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6204106211662292
    2. ']' → logprob: -1.245410680770874
    3. ']=' → logprob: -2.745410680770874
    4. ')' → logprob: -3.245410680770874
    5. ' =' → logprob: -3.495410680770874
    6. '=True' → logprob: -4.245410442352295
    7. '[' → logprob: -4.870410442352295
    8. '                           ' → logprob: -4.995410442352295
    9. ')=' → logprob: -5.620410442352295
    10. '[token' → logprob: -5.620410442352295

Token 2224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005579506512731314
    2. ' =' → logprob: -5.380579471588135
    3. '=True' → logprob: -7.130579471588135
    4. '                           ' → logprob: -9.755579948425293
    5. '[' → logprob: -9.880579948425293
    6. '[key' → logprob: -10.755579948425293
    7. ']=' → logprob: -12.255579948425293
    8. '                       ' → logprob: -12.505579948425293
    9. '                   ' → logprob: -12.755579948425293
    10. '                               ' → logprob: -12.755579948425293

Token 2225: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '(True' → logprob: -17.75007438659668
    4. 'true' → logprob: -19.00007438659668
    5. '   ' → logprob: -19.12507438659668
    6. '1' → logprob: -20.00007438659668
    7. '=True' → logprob: -21.12507438659668
    8. '0' → logprob: -21.62507438659668
    9. 'False' → logprob: -21.87507438659668
    10. '           ' → logprob: -22.00007438659668

Token 2226: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03386306390166283
    2. '                               ' → logprob: -3.533863067626953
    3. '                       ' → logprob: -5.658863067626953
    4. '```' → logprob: -9.158863067626953
    5. '                            ' → logprob: -9.283863067626953
    6. '                                   ' → logprob: -9.283863067626953
    7. '                   ' → logprob: -9.283863067626953
    8. '
' → logprob: -9.783863067626953
    9. 'continue' → logprob: -10.283863067626953
    10. '           ' → logprob: -10.408863067626953

Token 2227: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2562974989414215
    2. '                               ' → logprob: -1.5062974691390991
    3. '                       ' → logprob: -6.256297588348389
    4. '```' → logprob: -6.381297588348389
    5. '                                   ' → logprob: -8.13129711151123
    6. '                   ' → logprob: -9.13129711151123
    7. '           ' → logprob: -9.50629711151123
    8. '                            ' → logprob: -9.50629711151123
    9. 'continue' → logprob: -9.63129711151123
    10. '               ' → logprob: -10.13129711151123

Token 2228: ' continue' (ID: 4901)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10889216512441635
    2. '                               ' → logprob: -2.9838922023773193
    3. 'continue' (adapté à ' continue') → logprob: -2.9838922023773193
    4. '                       ' → logprob: -6.85889196395874
    5. ' continue' → logprob: -7.60889196395874
    6. '                                   ' → logprob: -8.733892440795898
    7. '                   ' → logprob: -9.358892440795898
    8. '```' → logprob: -9.608892440795898
    9. '                            ' → logprob: -10.483892440795898
    10. '           ' → logprob: -10.733892440795898

Token 2229: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.424224853515625
    2. '                           ' → logprob: -1.549224853515625
    3. 'if' → logprob: -2.299224853515625
    4. '                               ' → logprob: -4.299224853515625
    5. ' if' → logprob: -4.549224853515625
    6. '```' → logprob: -5.299224853515625
    7. '                   ' → logprob: -6.424224853515625
    8. '
' → logprob: -7.299224853515625
    9. '           ' → logprob: -7.799224853515625
    10. '               ' → logprob: -7.924224853515625

Token 2230: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7083180546760559
    2. '                           ' → logprob: -1.3333179950714111
    3. 'if' → logprob: -1.9583179950714111
    4. '```' → logprob: -2.583317995071411
    5. '                               ' → logprob: -3.958317995071411
    6. ' if' → logprob: -5.45831823348999
    7. '                   ' → logprob: -6.20831823348999
    8. '           ' → logprob: -7.70831823348999
    9. '       ' → logprob: -7.83331823348999
    10. '               ' → logprob: -8.208317756652832

Token 2231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0033921871799975634
    2. '                       ' → logprob: -5.878392219543457
    3. '                           ' → logprob: -8.128392219543457
    4. ' if' → logprob: -9.003392219543457
    5. 'for' → logprob: -10.003392219543457
    6. '                   ' → logprob: -10.128392219543457
    7. 'elif' → logprob: -10.753392219543457
    8. 'stack' → logprob: -10.878392219543457
    9. '```' → logprob: -10.878392219543457
    10. '                               ' → logprob: -11.628392219543457

Token 2232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009096754365600646
    2. 'amount' → logprob: -7.125909805297852
    3. ' i' → logprob: -9.875909805297852
    4. '0' → logprob: -10.000909805297852
    5. ' amount' → logprob: -13.000909805297852
    6. '   ' → logprob: -13.375909805297852
    7. '	i' → logprob: -13.750909805297852
    8. 'CO' → logprob: -14.500909805297852
    9. '
' → logprob: -15.000909805297852
    10. ' ' → logprob: -15.375909805297852

Token 2233: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2894843816757202
    2. '>=' → logprob: -1.6644843816757202
    3. '<len' → logprob: -3.4144845008850098
    4. ' ==' → logprob: -3.9144845008850098
    5. '<' → logprob: -5.41448450088501
    6. '>' → logprob: -6.03948450088501
    7. 'i' → logprob: -7.03948450088501
    8. ' >=' → logprob: -7.78948450088501
    9. '<i' → logprob: -8.164484024047852
    10. '+' → logprob: -8.789484024047852

Token 2234: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.016041994094848633
    2. '5' → logprob: -4.1410417556762695
    3. ' len' → logprob: -12.26604175567627
    4. '7' → logprob: -13.51604175567627
    5. '(len' → logprob: -14.14104175567627
    6. '6' → logprob: -15.39104175567627
    7. '   ' → logprob: -16.141042709350586
    8. '```' → logprob: -16.266042709350586
    9. 'n' → logprob: -16.516042709350586
    10. '=len' → logprob: -17.141042709350586

Token 2235: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0010365027701482177
    2. 'CO' → logprob: -6.876036643981934
    3. '(co' → logprob: -13.501036643981934
    4. 'C' → logprob: -14.251036643981934
    5. 'avail' → logprob: -15.376036643981934
    6. '(' → logprob: -15.501036643981934
    7. '
' → logprob: -15.876036643981934
    8. 'coins' → logprob: -15.876036643981934
    9. 'Coins' → logprob: -15.876036643981934
    10. ' CO' → logprob: -16.001035690307617

Token 2236: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.25196346640586853
    2. 'O' → logprob: -1.501963496208191
    3. 'CO' → logprob: -10.75196361541748
    4. 'OINTER' → logprob: -12.00196361541748
    5. 'OI' → logprob: -13.00196361541748
    6. 'О' → logprob: -14.12696361541748
    7. '
' → logprob: -14.37696361541748
    8. 'oin' → logprob: -14.50196361541748
    9. 'OY' → logprob: -14.62696361541748
    10. '0' → logprob: -15.00196361541748

Token 2237: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -5.240481914370321e-05
    2. 'T' → logprob: -9.875052452087402
    3. 'Types' → logprob: -15.125052452087402
    4. '_types' → logprob: -15.500052452087402
    5. 'YPES' → logprob: -15.625052452087402
    6. ' TYPES' → logprob: -15.875052452087402
    7. '_TYPE' → logprob: -17.750051498413086
    8. ')' → logprob: -17.750051498413086
    9. 'TYPE' → logprob: -18.500051498413086
    10. 'types' → logprob: -18.500051498413086

Token 2238: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026381703093647957
    2. ')' → logprob: -4.026381492614746
    3. ')-' → logprob: -5.026381492614746
    4. '-' → logprob: -6.776381492614746
    5. '):' → logprob: -8.401381492614746
    6. ':
' → logprob: -9.276381492614746
    7. '                       ' → logprob: -10.401381492614746
    8. '                   ' → logprob: -10.776381492614746
    9. ')+' → logprob: -10.776381492614746
    10. ' or' → logprob: -11.276381492614746

Token 2239: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06504029780626297
    2. '                               ' → logprob: -3.815040349960327
    3. '```' → logprob: -4.565040111541748
    4. 'False' → logprob: -5.065040111541748
    5. ' and' → logprob: -5.440040111541748
    6. ':
' → logprob: -5.565040111541748
    7. ':' → logprob: -5.815040111541748
    8. '                       ' → logprob: -6.065040111541748
    9. ' or' → logprob: -6.565040111541748
    10. '<|end|>' → logprob: -6.690040111541748

Token 2240: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.06178873032331467
    2. '                           ' → logprob: -2.93678879737854
    3. '                               ' → logprob: -5.561788558959961
    4. 'False' → logprob: -6.936788558959961
    5. 'continue' → logprob: -6.936788558959961
    6. '                       ' → logprob: -7.811788558959961
    7. '                             ' → logprob: -8.561788558959961
    8. '                            ' → logprob: -8.686788558959961
    9. ' memo' → logprob: -9.936788558959961
    10. 'mem' → logprob: -10.311788558959961

Token 2241: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -7.24310302757658e-05
    2. 'key' → logprob: -10.125072479248047
    3. '[(' → logprob: -10.375072479248047
    4. '                       ' → logprob: -14.750072479248047
    5. '[' → logprob: -15.000072479248047
    6. ',key' → logprob: -16.000072479248047
    7. '                   ' → logprob: -16.750072479248047
    8. ' key' → logprob: -17.000072479248047
    9. '                           ' → logprob: -17.125072479248047
    10. '
' → logprob: -17.500072479248047

Token 2242: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0035632499493658543
    2. ' =' → logprob: -5.878563404083252
    3. '=True' → logprob: -8.003562927246094
    4. '=False' → logprob: -8.628562927246094
    5. ']=' → logprob: -9.128562927246094
    6. ']' → logprob: -10.253562927246094
    7. ')' → logprob: -10.253562927246094
    8. '=
' → logprob: -11.003562927246094
    9. '```' → logprob: -11.128562927246094
    10. ')=' → logprob: -11.628562927246094

Token 2243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006323783891275525
    2. '=False' → logprob: -8.000632286071777
    3. ' =' → logprob: -8.875632286071777
    4. '=True' → logprob: -9.625632286071777
    5. '[' → logprob: -9.875632286071777
    6. '[key' → logprob: -10.500632286071777
    7. ']=' → logprob: -12.625632286071777
    8. '=
' → logprob: -13.000632286071777
    9. 'False' → logprob: -13.500632286071777
    10. '                           ' → logprob: -14.000632286071777

Token 2244: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '(False' → logprob: -17.87500762939453
    4. '   ' → logprob: -19.75000762939453
    5. '=False' → logprob: -20.87500762939453
    6. 'false' → logprob: -21.00000762939453
    7. 'amount' → logprob: -21.37500762939453
    8. 'True' → logprob: -21.75000762939453
    9. '	' → logprob: -22.62500762939453
    10. '.False' → logprob: -22.87500762939453

Token 2245: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.14711986482143402
    2. '                               ' → logprob: -2.0221197605133057
    3. '                       ' → logprob: -6.772119998931885
    4. 'continue' → logprob: -6.897119998931885
    5. '```' → logprob: -7.147119998931885
    6. '                                   ' → logprob: -7.522119998931885
    7. '                   ' → logprob: -8.647119522094727
    8. ')' → logprob: -9.022119522094727
    9. '           ' → logprob: -9.022119522094727
    10. '                            ' → logprob: -9.147119522094727

Token 2246: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7096379995346069
    2. '                               ' → logprob: -0.7096379995346069
    3. '```' → logprob: -4.3346381187438965
    4. '                       ' → logprob: -6.8346381187438965
    5. 'continue' → logprob: -6.8346381187438965
    6. '                                   ' → logprob: -7.7096381187438965
    7. '                            ' → logprob: -9.084637641906738
    8. '           ' → logprob: -9.459637641906738
    9. '                   ' → logprob: -9.459637641906738
    10. '   ' → logprob: -9.584637641906738

Token 2247: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5570404529571533
    2. '                               ' → logprob: -1.0570404529571533
    3. '                           ' → logprob: -2.5570404529571533
    4. ' continue' → logprob: -7.432040214538574
    5. '	continue' → logprob: -7.932040214538574
    6. '                                   ' → logprob: -7.932040214538574
    7. '           ' → logprob: -8.932040214538574
    8. '                       ' → logprob: -9.057040214538574
    9. '							' → logprob: -9.432040214538574
    10. '                   ' → logprob: -9.682040214538574

Token 2248: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.311260461807251
    2. '                               ' → logprob: -2.061260461807251
    3. '                       ' → logprob: -2.311260461807251
    4. '```' → logprob: -3.561260461807251
    5. 'if' → logprob: -5.311260223388672
    6. '                   ' → logprob: -6.436260223388672
    7. '           ' → logprob: -6.436260223388672
    8. ' if' → logprob: -6.561260223388672
    9. '       ' → logprob: -7.061260223388672
    10. '   ' → logprob: -7.686260223388672

Token 2249: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.21971960365772247
    2. '                       ' → logprob: -1.969719648361206
    3. '                               ' → logprob: -3.219719648361206
    4. '```' → logprob: -4.469719409942627
    5. 'if' → logprob: -6.094719409942627
    6. ' if' → logprob: -6.844719409942627
    7. '                   ' → logprob: -6.969719409942627
    8. '           ' → logprob: -7.469719409942627
    9. '       ' → logprob: -7.719719409942627
    10. '               ' → logprob: -8.344719886779785

Token 2250: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1129846572875977
    2. 'if' → logprob: -1.2379846572875977
    3. '                       ' → logprob: -2.4879846572875977
    4. '                           ' → logprob: -2.7379846572875977
    5. 'count' → logprob: -2.7379846572875977
    6. 'coins' → logprob: -2.8629846572875977
    7. 'max' (adapté à ' max') → logprob: -3.2379846572875977
    8. 'stack' → logprob: -3.7379846572875977
    9. 'coin' → logprob: -4.487984657287598
    10. '#' → logprob: -4.487984657287598

Token 2251: '_use' (ID: 36283)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5590595602989197
    2. 'count' → logprob: -1.5590596199035645
    3. 'use' → logprob: -2.5590596199035645
    4. 'num' → logprob: -3.0590596199035645
    5. '_use' → logprob: -3.6840596199035645
    6. '_count' → logprob: -4.1840596199035645
    7. 'coin' → logprob: -4.9340596199035645
    8. 'usage' → logprob: -4.9340596199035645
    9. '_co' → logprob: -5.4340596199035645
    10. 'cnt' → logprob: -5.6840596199035645

Token 2252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13068175315856934
    2. '=' → logprob: -2.1306817531585693
    3. '=i' → logprob: -6.755681991577148
    4. '_possible' → logprob: -7.005681991577148
    5. '=max' → logprob: -7.505681991577148
    6. '   ' → logprob: -8.630681991577148
    7. 'possible' → logprob: -8.755681991577148
    8. '_count' → logprob: -9.380681991577148
    9. '_i' → logprob: -9.505681991577148
    10. '[i' → logprob: -9.880681991577148

Token 2253: ' min' (ID: 1349)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.01110217534005642
    2. ' avail' → logprob: -4.511102199554443
    3. 'available' → logprob: -10.386101722717285
    4. 'min' → logprob: -11.261101722717285
    5. 'av' → logprob: -12.636101722717285
    6. 'ava' → logprob: -13.511101722717285
    7. 'availability' → logprob: -14.136101722717285
    8. 'Avail' → logprob: -14.261101722717285
    9. '0' → logprob: -14.386101722717285
    10. ' min' → logprob: -14.511101722717285

Token 2254: '(av' (ID: 131120)
  Prédit: '(av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(av' → logprob: -0.0025049131363630295
    2. 'avail' → logprob: -6.002504825592041
    3. '(' → logprob: -10.7525053024292
    4. 'av' → logprob: -12.8775053024292
    5. 'available' → logprob: -13.2525053024292
    6. ' avail' → logprob: -13.6275053024292
    7. '_av' → logprob: -14.5025053024292
    8. 'Avail' → logprob: -14.5025053024292
    9. '(co' → logprob: -14.5025053024292
    10. 'availability' → logprob: -16.002504348754883

Token 2255: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -9.412610233994201e-05
    2. 'il' → logprob: -9.625094413757324
    3. 'AIL' → logprob: -11.500094413757324
    4. 'ailable' → logprob: -12.500094413757324
    5. 'ai' → logprob: -12.625094413757324
    6. '[' → logprob: -12.750094413757324
    7. 'al' → logprob: -13.625094413757324
    8. 'ailability' → logprob: -13.875094413757324
    9. 'ails' → logprob: -14.125094413757324
    10. ' ail' → logprob: -14.125094413757324

Token 2256: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0005741207860410213
    2. 'CO' → logprob: -8.375574111938477
    3. '_CO' → logprob: -8.625574111938477
    4. 'Coins' → logprob: -10.250574111938477
    5. 'i' → logprob: -10.750574111938477
    6. '[' → logprob: -10.750574111938477
    7. 'coins' → logprob: -10.875574111938477
    8. '[i' → logprob: -11.250574111938477
    9. 'co' → logprob: -11.750574111938477
    10. '
' → logprob: -12.125574111938477

Token 2257: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.005260799080133438
    2. 'coins' → logprob: -5.755260944366455
    3. '[' → logprob: -7.255260944366455
    4. '_co' → logprob: -8.005260467529297
    5. 'ns' → logprob: -8.505260467529297
    6. 'ons' → logprob: -8.880260467529297
    7. 'in' → logprob: -9.130260467529297
    8. 'Coins' → logprob: -9.755260467529297
    9. '_' → logprob: -10.130260467529297
    10. '_ins' → logprob: -10.380260467529297

Token 2258: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.277553620748222e-05
    2. '[' → logprob: -9.750062942504883
    3. ' [' → logprob: -13.250062942504883
    4. ',i' → logprob: -14.625062942504883
    5. '                           ' → logprob: -15.000062942504883
    6. '                       ' → logprob: -15.375062942504883
    7. '[len' → logprob: -15.750062942504883
    8. '[
' → logprob: -15.750062942504883
    9. '[I' → logprob: -15.875062942504883
    10. '                   ' → logprob: -16.125062942504883

Token 2259: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025868352968245745
    2. ',i' → logprob: -6.377586841583252
    3. '[i' → logprob: -8.252586364746094
    4. ' ,' → logprob: -9.127586364746094
    5. ',max' → logprob: -9.127586364746094
    6. ',key' → logprob: -9.752586364746094
    7. '),' → logprob: -10.127586364746094
    8. ',n' → logprob: -10.127586364746094
    9. ',x' → logprob: -10.377586364746094
    10. '[' → logprob: -10.627586364746094

Token 2260: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0008165352046489716
    2. ' amount' → logprob: -7.500816345214844
    3. '(amount' → logprob: -8.250816345214844
    4. '(' → logprob: -13.500816345214844
    5. ' (' → logprob: -13.875816345214844
    6. '
' → logprob: -17.125816345214844
    7. '   ' → logprob: -17.750816345214844
    8. '           ' → logprob: -18.625816345214844
    9. '```' → logprob: -18.875816345214844
    10. '                   ' → logprob: -19.000816345214844

Token 2261: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1271793395280838
    2. ' //' → logprob: -2.1271793842315674
    3. '#' → logprob: -8.377179145812988
    4. '   ' → logprob: -11.502179145812988
    5. ')' → logprob: -12.877179145812988
    6. ' #' → logprob: -13.127179145812988
    7. ' ' → logprob: -13.252179145812988
    8. '
' → logprob: -14.002179145812988
    9. '       ' → logprob: -14.127179145812988
    10. '//=' → logprob: -14.502179145812988

Token 2262: ' CO' (ID: 10271)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -3.4121114822482923e-06
    2. ' CO' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.500003814697266
    4. 'Coin' → logprob: -18.250003814697266
    5. 'coins' → logprob: -18.500003814697266
    6. '_CO' → logprob: -18.750003814697266
    7. '```' → logprob: -19.625003814697266
    8. '       ' → logprob: -19.875003814697266
    9. '           ' → logprob: -20.000003814697266
    10. 'coin' → logprob: -20.500003814697266

Token 2263: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.03473067656159401
    2. 'INT' → logprob: -3.7847306728363037
    3. '_TYPES' → logprob: -5.159730911254883
    4. 'N' → logprob: -6.034730911254883
    5. 'NT' → logprob: -6.909730911254883
    6. 'INET' → logprob: -7.659730911254883
    7. 'T' → logprob: -7.909730911254883
    8. '_TYPE' → logprob: -7.909730911254883
    9. 'TYPE' → logprob: -8.159730911254883
    10. 'INS' → logprob: -8.659730911254883

Token 2264: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -2.8325677703833207e-05
    2. 'T' → logprob: -10.500028610229492
    3. '_types' → logprob: -15.000028610229492
    4. '_TYPE' → logprob: -15.625028610229492
    5. 'Types' → logprob: -15.875028610229492
    6. ' TYPES' → logprob: -17.000028610229492
    7. 'TYPE' → logprob: -18.375028610229492
    8. 'YPES' → logprob: -19.000028610229492
    9. '.Types' → logprob: -20.250028610229492
    10. 'types' → logprob: -20.625028610229492

Token 2265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007358930306509137
    2. '[' → logprob: -7.625735759735107
    3. '```' → logprob: -9.750736236572266
    4. ')' → logprob: -9.875736236572266
    5. '   ' → logprob: -10.875736236572266
    6. '                   ' → logprob: -11.125736236572266
    7. ')
' → logprob: -11.500736236572266
    8. '               ' → logprob: -11.500736236572266
    9. '[len' → logprob: -11.625736236572266
    10. '[
' → logprob: -11.750736236572266

Token 2266: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.017745988443493843
    2. '])' → logprob: -4.2677459716796875
    3. ')
' → logprob: -6.6427459716796875
    4. '                   ' → logprob: -7.5177459716796875
    5. ']):
' → logprob: -8.142745971679688
    6. '+' → logprob: -8.392745971679688
    7. '               ' → logprob: -8.517745971679688
    8. ']+' → logprob: -8.642745971679688
    9. '           ' → logprob: -8.767745971679688
    10. ')' → logprob: -9.017745971679688

Token 2267: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5353865027427673
    2. '                               ' → logprob: -1.660386562347412
    3. '```' → logprob: -2.410386562347412
    4. '                       ' → logprob: -3.535386562347412
    5. 'stack' → logprob: -3.535386562347412
    6. ')' → logprob: -3.785386562347412
    7. ',' → logprob: -4.160386562347412
    8. ' stack' → logprob: -4.410386562347412
    9. '                   ' → logprob: -5.410386562347412
    10. '``' → logprob: -5.910386562347412

Token 2268: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030790016055107117
    2. ' for' → logprob: -4.030789852142334
    3. 'if' → logprob: -4.655789852142334
    4. 'stack' → logprob: -6.530789852142334
    5. 'while' → logprob: -7.780789852142334
    6. '                       ' → logprob: -8.030790328979492
    7. '                           ' → logprob: -8.155790328979492
    8. ' if' → logprob: -8.530790328979492
    9. '```' → logprob: -8.780790328979492
    10. '
' → logprob: -9.780790328979492

Token 2269: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4388521909713745
    2. 'if' → logprob: -1.8138521909713745
    3. 'stack' → logprob: -3.063852310180664
    4. '#' → logprob: -3.188852310180664
    5. 'max' → logprob: -4.063852310180664
    6. 'while' → logprob: -4.063852310180664
    7. 'continue' → logprob: -4.563852310180664
    8. 'memo' → logprob: -4.688852310180664
    9. '                       ' → logprob: -4.938852310180664
    10. '                   ' → logprob: -4.938852310180664

Token 2270: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1865118443965912
    2. ' for' → logprob: -1.8115118741989136
    3. 'range' → logprob: -6.186511993408203
    4. 'stack' → logprob: -7.186511993408203
    5. 'append' → logprob: -7.686511993408203
    6. 'continue' → logprob: -7.811511993408203
    7. '0' → logprob: -8.311511993408203
    8. ' range' → logprob: -8.311511993408203
    9. '```' → logprob: -8.436511993408203
    10. 'push' → logprob: -8.436511993408203

Token 2271: 'iera' (ID: 13264)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.350846529006958
    2. 'ye' → logprob: -1.350846529006958
    3. 'ie' → logprob: -3.975846529006958
    4. 'aye' → logprob: -4.475846290588379
    5. 'yer' → logprob: -5.850846290588379
    6. 'yez' → logprob: -6.350846290588379
    7. 'yes' → logprob: -7.475846290588379
    8. '
' → logprob: -7.975846290588379
    9. '```' → logprob: -8.225846290588379
    10. 'yt' → logprob: -9.350846290588379

Token 2272: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1131521463394165
    2. 'j' → logprob: -1.8631521463394165
    3. 'for' → logprob: -1.9881521463394165
    4. '(max' → logprob: -2.238152027130127
    5. 'max' → logprob: -2.738152027130127
    6. '0' → logprob: -3.363152027130127
    7. '(x' → logprob: -3.363152027130127
    8. '(j' → logprob: -3.863152027130127
    9. '(use' → logprob: -4.113152027130127
    10. '(i' → logprob: -4.113152027130127

Token 2273: ''utiliser' (ID: 133355)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6711307168006897
    2. 'for' → logprob: -0.7961307168006897
    3. 'max' → logprob: -4.921130657196045
    4. 'x' → logprob: -5.046130657196045
    5. ' for' → logprob: -5.171130657196045
    6. 'r' → logprob: -5.671130657196045
    7. 'possible' → logprob: -5.921130657196045
    8. ' range' → logprob: -6.171130657196045
    9. '0' → logprob: -6.296130657196045
    10. ''utiliser' → logprob: -6.296130657196045

Token 2274: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8188174366950989
    2. 'k' → logprob: -1.318817377090454
    3. 'j' → logprob: -1.818817377090454
    4. 'use' → logprob: -2.818817377090454
    5. 'x' → logprob: -3.693817377090454
    6. '0' → logprob: -4.443817615509033
    7. 'usage' → logprob: -5.193817615509033
    8. 'u' → logprob: -5.318817615509033
    9. 'num' → logprob: -5.693817615509033
    10. 'count' → logprob: -5.693817615509033

Token 2275: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8190294504165649
    2. 'u' → logprob: -1.444029450416565
    3. 'x' → logprob: -1.944029450416565
    4. 'use' → logprob: -2.3190293312072754
    5. 'j' → logprob: -3.3190293312072754
    6. 'max' → logprob: -4.069029331207275
    7. 'usage' → logprob: -4.444029331207275
    8. 'q' → logprob: -5.444029331207275
    9. 'num' → logprob: -5.569029331207275
    10. 'count' → logprob: -5.944029331207275

Token 2276: '..' (ID: 485)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.16437014937400818
    2. ' à' → logprob: -3.039370059967041
    3. ',' → logprob: -3.664370059967041
    4. 'to' → logprob: -3.789370059967041
    5. '...' → logprob: -3.914370059967041
    6. '..' → logprob: -4.539370059967041
    7. '<=' → logprob: -5.164370059967041
    8. '```' → logprob: -5.164370059967041
    9. 'up' → logprob: -6.289370059967041
    10. ' ' → logprob: -6.289370059967041

Token 2277: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000287795381154865
    2. ' max' → logprob: -8.500288009643555
    3. 'avail' → logprob: -10.250288009643555
    4. '   ' → logprob: -11.625288009643555
    5. '...' → logprob: -11.625288009643555
    6. 'x' → logprob: -12.375288009643555
    7. 'rest' → logprob: -12.875288009643555
    8. 'amount' → logprob: -12.875288009643555
    9. '```' → logprob: -13.000288009643555
    10. 'av' → logprob: -13.000288009643555

Token 2278: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.0001923352392623201
    2. '_usage' → logprob: -9.500192642211914
    3. '_' → logprob: -10.125192642211914
    4. '+' → logprob: -11.000192642211914
    5. '_USE' → logprob: -11.125192642211914
    6. '```' → logprob: -11.625192642211914
    7. 'Use' → logprob: -11.750192642211914
    8. ' _' → logprob: -12.750192642211914
    9. '   ' → logprob: -12.875192642211914
    10. 'use' → logprob: -13.125192642211914

Token 2279: ' pièces' (ID: 49165)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.5558919906616211
    2. 'tokens' → logprob: -0.9308919906616211
    3. ',' → logprob: -3.930891990661621
    4. ' possible' → logprob: -5.680891990661621
    5. '```' → logprob: -6.180891990661621
    6. ' de' → logprob: -6.680891990661621
    7. ' ,' → logprob: -6.805891990661621
    8. 'possible' → logprob: -6.805891990661621
    9. '_tokens' → logprob: -7.180891990661621
    10. ' possibles' → logprob: -7.680891990661621

Token 2280: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6275790929794312
    2. 'for' → logprob: -2.5025792121887207
    3. '                       ' → logprob: -2.5025792121887207
    4. '                   ' → logprob: -2.6275792121887207
    5. ' for' → logprob: -2.8775792121887207
    6. '[' → logprob: -3.2525792121887207
    7. '               ' → logprob: -4.127579212188721
    8. '```' → logprob: -4.377579212188721
    9. '                           ' → logprob: -4.752579212188721
    10. ' of' → logprob: -4.752579212188721

Token 2281: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0272289514541626
    2. '```' → logprob: -1.5272289514541626
    3. ' for' → logprob: -1.7772289514541626
    4. ',' → logprob: -2.652228832244873
    5. 'for' → logprob: -3.277228832244873
    6. '                           ' → logprob: -3.527228832244873
    7. '                   ' → logprob: -3.527228832244873
    8. '                               ' → logprob: -4.152228832244873
    9. ' (' → logprob: -4.527228832244873
    10. '[' → logprob: -5.027228832244873

Token 2282: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011785586830228567
    2. ' for' → logprob: -7.376178741455078
    3. 'stack' → logprob: -8.376178741455078
    4. '                       ' → logprob: -8.626178741455078
    5. '                   ' → logprob: -9.751178741455078
    6. 'if' → logprob: -10.501178741455078
    7. '                           ' → logprob: -10.751178741455078
    8. '
' → logprob: -11.876178741455078
    9. '   ' → logprob: -12.126178741455078
    10. '```' → logprob: -12.376178741455078

Token 2283: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.230745553970337
    2. ' =' → logprob: -1.230745553970337
    3. '=' → logprob: -1.730745553970337
    4. '_tokens' → logprob: -3.105745553970337
    5. 's' → logprob: -3.230745553970337
    6. '                   ' → logprob: -3.605745553970337
    7. '.append' → logprob: -3.855745553970337
    8. 'for' → logprob: -4.230745315551758
    9. '               ' → logprob: -4.480745315551758
    10. '=True' → logprob: -4.855745315551758

Token 2284: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00012821101699955761
    2. ' False' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.625127792358398
    4. 'any' → logprob: -13.625127792358398
    5. '       ' → logprob: -16.5001277923584
    6. '0' → logprob: -16.5001277923584
    7. '           ' → logprob: -16.6251277923584
    8. '                   ' → logprob: -17.1251277923584
    9. 'false' → logprob: -17.3751277923584
    10. '(False' → logprob: -17.8751277923584

Token 2285: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5154647827148438
    2. '                           ' → logprob: -2.1404647827148438
    3. 'for' → logprob: -2.8904647827148438
    4. '
' → logprob: -3.0154647827148438
    5. '                       ' → logprob: -3.1404647827148438
    6. '                               ' → logprob: -3.5154647827148438
    7. '                   ' → logprob: -3.6404647827148438
    8. ' if' → logprob: -3.8904647827148438
    9. '```' → logprob: -3.8904647827148438
    10. ',' → logprob: -4.015464782714844

Token 2286: '                       ' (ID: 968)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9228997230529785
    2. '                           ' → logprob: -1.1728997230529785
    3. 'for' → logprob: -1.6728997230529785
    4. '                       ' → logprob: -3.5478997230529785
    5. '                               ' → logprob: -3.5478997230529785
    6. '
' → logprob: -4.5478997230529785
    7. 'stack' → logprob: -4.5478997230529785
    8. '```' → logprob: -4.6728997230529785
    9. '                   ' → logprob: -5.1728997230529785
    10. '                                   ' → logprob: -5.7978997230529785

Token 2287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005002511315979064
    2. ' for' → logprob: -8.000500679016113
    3. 'stack' → logprob: -8.875500679016113
    4. 'while' → logprob: -11.875500679016113
    5. 'if' → logprob: -11.875500679016113
    6. '                           ' → logprob: -12.375500679016113
    7. '                               ' → logprob: -13.250500679016113
    8. '                       ' → logprob: -13.750500679016113
    9. '                                   ' → logprob: -14.500500679016113
    10. '
' → logprob: -14.500500679016113

Token 2288: ' use' (ID: 1199)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1636279821395874
    2. 'use' → logprob: -1.1636279821395874
    3. 'used' → logprob: -1.6636279821395874
    4. 'cnt' → logprob: -2.413628101348877
    5. 'u' → logprob: -3.038628101348877
    6. 'num' → logprob: -3.913628101348877
    7. 'x' → logprob: -4.288628101348877
    8. 'count' → logprob: -4.663628101348877
    9. 'usage' → logprob: -5.913628101348877
    10. 'j' → logprob: -6.913628101348877

Token 2289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006043743342161179
    2. 'in' → logprob: -5.131043910980225
    3. 'count' → logprob: -9.506043434143066
    4. '0' → logprob: -11.881043434143066
    5. '_count' → logprob: -12.131043434143066
    6. 'use' → logprob: -12.131043434143066
    7. 'i' → logprob: -12.381043434143066
    8. '_in' → logprob: -12.381043434143066
    9. '```' → logprob: -13.256043434143066
    10. ' ' → logprob: -13.506043434143066

Token 2290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.3080716346157715e-05
    2. 're' → logprob: -11.000022888183594
    3. '0' → logprob: -12.500022888183594
    4. ' range' → logprob: -13.125022888183594
    5. 'max' → logprob: -14.625022888183594
    6. '(range' → logprob: -16.125022888183594
    7. '   ' → logprob: -17.625022888183594
    8. '	range' → logprob: -18.500022888183594
    9. 'reverse' → logprob: -18.750022888183594
    10. '
' → logprob: -18.750022888183594

Token 2291: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.057852182537317276
    2. 'use' → logprob: -3.182852268218994
    3. '(max' → logprob: -4.682852268218994
    4. '0' → logprob: -5.432852268218994
    5. '(use' → logprob: -6.932852268218994
    6. ' max' → logprob: -9.682851791381836
    7. '(' → logprob: -9.932851791381836
    8. '[max' → logprob: -11.557851791381836
    9. ',max' → logprob: -12.557851791381836
    10. ' (' → logprob: -12.682851791381836

Token 2292: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.0007280402351170778
    2. '+' → logprob: -7.500728130340576
    3. '_' → logprob: -9.875727653503418
    4. '_can' → logprob: -10.375727653503418
    5. 'use' → logprob: -10.750727653503418
    6. 'Use' → logprob: -11.000727653503418
    7. '_pay' → logprob: -11.125727653503418
    8. '_co' → logprob: -11.250727653503418
    9. 'max' → logprob: -13.125727653503418
    10. '_used' → logprob: -13.250727653503418

Token 2293: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0076578580774366856
    2. ' +' → logprob: -4.882658004760742
    3. ',' → logprob: -9.882658004760742
    4. '```' → logprob: -15.757658004760742
    5. '()+' → logprob: -15.882658004760742
    6. ',+' → logprob: -16.132658004760742
    7. '[' → logprob: -16.632658004760742
    8. '                   ' → logprob: -17.632658004760742
    9. '0' → logprob: -17.632658004760742
    10. '-' → logprob: -18.257658004760742

Token 2294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '0' → logprob: -10.625041007995605
    3. ' ' → logprob: -11.125041007995605
    4. 'max' → logprob: -13.375041007995605
    5. '+' → logprob: -15.000041007995605
    6. '```' → logprob: -15.500041007995605
    7. '(max' → logprob: -16.750041961669922
    8. '   ' → logprob: -16.750041961669922
    9. ')' → logprob: -17.125041961669922
    10. '(' → logprob: -17.500041961669922

Token 2295: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010641100816428661
    2. '):' → logprob: -4.885641098022461
    3. '+' → logprob: -6.885641098022461
    4. '                           ' → logprob: -7.635641098022461
    5. ':' → logprob: -8.385641098022461
    6. '                                           ' → logprob: -8.510641098022461
    7. '                       ' → logprob: -8.885641098022461
    8. ')' → logprob: -9.010641098022461
    9. '):
' → logprob: -9.010641098022461
    10. '                               ' → logprob: -9.010641098022461

Token 2296: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.041012924164533615
    2. '                               ' → logprob: -3.54101300239563
    3. '                                   ' → logprob: -5.791012763977051
    4. '                            ' → logprob: -5.916012763977051
    5. ' if' → logprob: -6.416012763977051
    6. ':' → logprob: -7.041012763977051
    7. '                       ' → logprob: -7.416012763977051
    8. '                        ' → logprob: -8.16601276397705
    9. ' :' → logprob: -8.66601276397705
    10. '```' → logprob: -8.66601276397705

Token 2297: ' next' (ID: 2613)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.27940884232521057
    2. ' if' → logprob: -2.0294089317321777
    3. ' stack' → logprob: -2.9044089317321777
    4. 'if' → logprob: -3.1544089317321777
    5. '                               ' → logprob: -4.404408931732178
    6. '                           ' → logprob: -6.029408931732178
    7. '                                   ' → logprob: -8.77940845489502
    8. '   ' → logprob: -10.65440845489502
    9. '                            ' → logprob: -11.27940845489502
    10. '(stack' → logprob: -11.52940845489502

Token 2298: '_key' (ID: 6724)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6486227512359619
    2. 'i' → logprob: -2.148622751235962
    3. '_key' → logprob: -2.148622751235962
    4. ' =' → logprob: -2.148622751235962
    5. ',' → logprob: -3.398622751235962
    6. ',i' → logprob: -3.898622751235962
    7. '=i' → logprob: -4.148622512817383
    8. '(i' → logprob: -4.273622512817383
    9. '_amount' → logprob: -4.648622512817383
    10. '=' → logprob: -5.023622512817383

Token 2299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4860967695713043
    2. '=' → logprob: -1.236096739768982
    3. '=(' → logprob: -2.3610968589782715
    4. ' =(' → logprob: -9.486096382141113
    5. '=
' → logprob: -10.486096382141113
    6. '=('' → logprob: -11.486096382141113
    7. '=((' → logprob: -11.486096382141113
    8. '=(-' → logprob: -12.236096382141113
    9. '=("' → logprob: -12.736096382141113
    10. '=None' → logprob: -12.986096382141113

Token 2300: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001532355323433876
    2. ' (' → logprob: -6.501532554626465
    3. 'i' → logprob: -10.876532554626465
    4. '                           ' → logprob: -12.126532554626465
    5. '   ' → logprob: -13.001532554626465
    6. '(' → logprob: -13.751532554626465
    7. '                               ' → logprob: -13.876532554626465
    8. ' i' → logprob: -15.126532554626465
    9. '                                   ' → logprob: -15.751532554626465
    10. '((' → logprob: -15.751532554626465

Token 2301: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2200749754119897e-06
    2. ' i' → logprob: -13.125001907348633
    3. '(i' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '_i' → logprob: -18.500001907348633
    6. ')i' → logprob: -18.625001907348633
    7. ',i' → logprob: -18.875001907348633
    8. '	i' → logprob: -19.250001907348633
    9. ')' → logprob: -19.375001907348633
    10. '                           ' → logprob: -19.750001907348633

Token 2302: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6384577751159668
    2. '+' → logprob: -0.7634577751159668
    3. ' +' → logprob: -5.763457775115967
    4. ',use' → logprob: -6.013457775115967
    5. ',next' → logprob: -8.513458251953125
    6. ' ,' → logprob: -10.638458251953125
    7. '+,' → logprob: -11.263458251953125
    8. ',n' → logprob: -12.388458251953125
    9. 'use' → logprob: -12.763458251953125
    10. '```' → logprob: -13.638458251953125

Token 2303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0065801311284303665
    2. '0' → logprob: -5.506580352783203
    3. 'use' → logprob: -6.256580352783203
    4. ' ' → logprob: -7.881580352783203
    5. 'amount' → logprob: -10.256580352783203
    6. ',' → logprob: -10.256580352783203
    7. '   ' → logprob: -10.381580352783203
    8. '(use' → logprob: -11.194080352783203
    9. '```' → logprob: -11.631580352783203
    10. '  ' → logprob: -11.631580352783203

Token 2304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003273600013926625
    2. ',use' → logprob: -8.125327110290527
    3. ' ,' → logprob: -10.500327110290527
    4. ',p' → logprob: -13.875327110290527
    5. ',next' → logprob: -14.625327110290527
    6. ',n' → logprob: -14.875327110290527
    7. '(use' → logprob: -15.125327110290527
    8. '<|end|>' → logprob: -15.375327110290527
    9. ',user' → logprob: -15.500327110290527
    10. ',
' → logprob: -15.500327110290527

Token 2305: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -5.085517113911919e-05
    2. ' amount' → logprob: -10.25005054473877
    3. 'max' → logprob: -11.87505054473877
    4. '0' → logprob: -12.00005054473877
    5. '(amount' → logprob: -13.62505054473877
    6. '   ' → logprob: -13.87505054473877
    7. '    ' → logprob: -17.625051498413086
    8. '           ' → logprob: -17.750051498413086
    9. '(' → logprob: -18.000051498413086
    10. '       ' → logprob: -18.125051498413086

Token 2306: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.181982159614563
    2. ' -' → logprob: -2.4319820404052734
    3. '-use' → logprob: -2.5569820404052734
    4. '-next' → logprob: -8.556982040405273
    5. '-used' → logprob: -8.556982040405273
    6. '-user' → logprob: -9.056982040405273
    7. '-request' → logprob: -9.556982040405273
    8. '-if' → logprob: -9.931982040405273
    9. '-remove' → logprob: -10.681982040405273
    10. '-ut' → logprob: -10.681982040405273

Token 2307: ' CO' (ID: 10271)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.038377564400434494
    2. '(use' → logprob: -4.16337776184082
    3. ' use' → logprob: -4.28837776184082
    4. 'CO' → logprob: -4.91337776184082
    5. '(C' → logprob: -8.16337776184082
    6. ' CO' → logprob: -8.28837776184082
    7. ' (' → logprob: -9.03837776184082
    8. '(' → logprob: -9.66337776184082
    9. '   ' → logprob: -9.78837776184082
    10. '               ' → logprob: -10.28837776184082

Token 2308: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.04888574406504631
    2. 'INT' → logprob: -3.7988858222961426
    3. 'NT' → logprob: -4.298885822296143
    4. 'INS' → logprob: -4.548885822296143
    5. 'int' → logprob: -8.173885345458984
    6. 'ins' → logprob: -8.548885345458984
    7. 'T' → logprob: -9.048885345458984
    8. '_TYPES' → logprob: -9.173885345458984
    9. '_TYPE' → logprob: -9.423885345458984
    10. 'UNT' → logprob: -9.548885345458984

Token 2309: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -0.0014233296969905496
    2. '_TYPE' → logprob: -7.876423358917236
    3. '_types' → logprob: -7.876423358917236
    4. '_KEYS' → logprob: -8.376422882080078
    5. '_T' → logprob: -8.501422882080078
    6. 'Types' → logprob: -8.751422882080078
    7. '_CODES' → logprob: -11.751422882080078
    8. ')' → logprob: -12.126422882080078
    9. '.Types' → logprob: -12.126422882080078
    10. '_USE' → logprob: -12.126422882080078

Token 2310: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.297462171758525e-05
    2. 'i' → logprob: -10.875033378601074
    3. '[' → logprob: -11.375033378601074
    4. '[
' → logprob: -14.375033378601074
    5. '(i' → logprob: -14.500033378601074
    6. ',i' → logprob: -14.750033378601074
    7. '```' → logprob: -14.750033378601074
    8. '[I' → logprob: -15.500033378601074
    9. '[u' → logprob: -16.000032424926758
    10. '_i' → logprob: -16.125032424926758

Token 2311: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07937055081129074
    2. ' *' → logprob: -3.0793704986572266
    3. '])' → logprob: -4.204370498657227
    4. '*i' → logprob: -5.454370498657227
    5. ')' → logprob: -5.829370498657227
    6. '[i' → logprob: -6.079370498657227
    7. '])
' → logprob: -6.204370498657227
    8. '[' → logprob: -6.579370498657227
    9. ']' → logprob: -8.204370498657227
    10. ')]' → logprob: -8.204370498657227

Token 2312: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -6.392202976712724e-06
    2. ' use' → logprob: -12.000006675720215
    3. '(use' → logprob: -16.3750057220459
    4. '	use' → logprob: -17.5000057220459
    5. '   ' → logprob: -19.1250057220459
    6. ',use' → logprob: -19.2500057220459
    7. '
' → logprob: -19.5000057220459
    8. '0' → logprob: -21.1250057220459
    9. '[' → logprob: -21.2500057220459
    10. '"use' → logprob: -21.3750057220459

Token 2313: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14816096425056458
    2. ')
' → logprob: -2.023160934448242
    3. '):
' → logprob: -5.398160934448242
    4. '                           ' → logprob: -7.148160934448242
    5. '                               ' → logprob: -9.773160934448242
    6. '                       ' → logprob: -10.273160934448242
    7. '):' → logprob: -10.648160934448242
    8. ')
' → logprob: -12.023160934448242
    9. '):

' → logprob: -12.148160934448242
    10. ')

' → logprob: -12.523160934448242

Token 2314: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2304536998271942
    2. '                           ' → logprob: -2.6054537296295166
    3. '                                   ' → logprob: -3.1054537296295166
    4. ')' → logprob: -3.6054537296295166
    5. '```' → logprob: -3.6054537296295166
    6. '<|end|>' → logprob: -4.9804534912109375
    7. ',' → logprob: -5.4804534912109375
    8. '):
' → logprob: -5.4804534912109375
    9. ':' → logprob: -5.6054534912109375
    10. '                                       ' → logprob: -5.8554534912109375

Token 2315: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0009829123737290502
    2. ' stack' → logprob: -7.250982761383057
    3. 'if' (adapté à ' if') → logprob: -8.750983238220215
    4. '                           ' → logprob: -9.375983238220215
    5. ' if' → logprob: -10.750983238220215
    6. '                               ' → logprob: -12.750983238220215
    7. '                                   ' → logprob: -13.000983238220215
    8. '	stack' → logprob: -13.375983238220215
    9. '```' → logprob: -14.125983238220215
    10. '(stack' → logprob: -15.625983238220215

Token 2316: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03517697751522064
    2. '(next' → logprob: -3.535176992416382
    3. 'not' → logprob: -5.785176753997803
    4. '(' → logprob: -6.785176753997803
    5. 'amount' → logprob: -8.035177230834961
    6. 'False' → logprob: -8.660177230834961
    7. 'True' → logprob: -9.035177230834961
    8. 'key' → logprob: -9.285177230834961
    9. ' next' → logprob: -9.285177230834961
    10. '(True' → logprob: -9.410177230834961

Token 2317: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.0012904745526611805
    2. 'key' → logprob: -6.876290321350098
    3. '(' → logprob: -9.376290321350098
    4. 'not' → logprob: -10.376290321350098
    5. '[' → logprob: -10.501290321350098
    6. 'Key' → logprob: -10.626290321350098
    7. '```' → logprob: -10.626290321350098
    8. '(i' → logprob: -10.876290321350098
    9. '_token' → logprob: -11.751290321350098
    10. ' key' → logprob: -12.251290321350098

Token 2318: ' in' (ID: 306)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6812821626663208
    2. ' not' → logprob: -0.9312821626663208
    3. 'in' → logprob: -2.4312820434570312
    4. ' in' → logprob: -4.556282043457031
    5. '==' → logprob: -6.681282043457031
    6. ')' → logprob: -9.306282043457031
    7. ' ==' → logprob: -10.056282043457031
    8. '[' → logprob: -10.306282043457031
    9. ':' → logprob: -10.431282043457031
    10. '
' → logprob: -11.181282043457031

Token 2319: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -8.518582762917504e-05
    2. ' memo' → logprob: -9.37508487701416
    3. 'mem' → logprob: -16.000085830688477
    4. 'memory' → logprob: -16.000085830688477
    5. 'stack' → logprob: -16.125085830688477
    6. 'm' → logprob: -17.500085830688477
    7. '.memo' → logprob: -18.250085830688477
    8. '
' → logprob: -18.375085830688477
    9. 'possible' → logprob: -18.375085830688477
    10. '```' → logprob: -19.250085830688477

Token 2320: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0494542121887207
    2. '                               ' → logprob: -4.049454212188721
    3. '                           ' → logprob: -4.424454212188721
    4. 'or' → logprob: -4.424454212188721
    5. ':
' → logprob: -5.799454212188721
    6. ':' → logprob: -6.174454212188721
    7. '                                   ' → logprob: -7.299454212188721
    8. '                       ' → logprob: -8.549453735351562
    9. '):
' → logprob: -8.924453735351562
    10. ')' → logprob: -9.424453735351562

Token 2321: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.13764937222003937
    2. 'False' → logprob: -2.6376492977142334
    3. '                           ' → logprob: -4.2626495361328125
    4. ' and' → logprob: -4.5126495361328125
    5. 'True' → logprob: -5.0126495361328125
    6. ' or' → logprob: -5.2626495361328125
    7. ':
' → logprob: -5.2626495361328125
    8. ' False' → logprob: -5.5126495361328125
    9. '==' → logprob: -5.5126495361328125
    10. ':' → logprob: -6.5126495361328125

Token 2322: ' if' (ID: 538)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1611018180847168
    2. 'False' → logprob: -3.036101818084717
    3. ' True' → logprob: -3.286101818084717
    4. 'continue' → logprob: -3.911101818084717
    5. 'stack' → logprob: -4.411101818084717
    6. '                               ' → logprob: -4.536101818084717
    7. 'possible' → logprob: -5.036101818084717
    8. '                                   ' → logprob: -5.286101818084717
    9. '                           ' → logprob: -5.661101818084717
    10. ' stack' → logprob: -6.286101818084717

Token 2323: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -2.570319702499546e-05
    2. 'not' → logprob: -11.000025749206543
    3. ' memo' → logprob: -12.250025749206543
    4. 'possible' → logprob: -13.375025749206543
    5. 'True' → logprob: -14.375025749206543
    6. 'mem' → logprob: -14.625025749206543
    7. '   ' → logprob: -14.875025749206543
    8. 'memor' → logprob: -15.000025749206543
    9. '.memo' → logprob: -15.125025749206543
    10. ' ' → logprob: -15.750025749206543

Token 2324: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -9.472211968386546e-05
    2. 'next' → logprob: -9.625094413757324
    3. '[key' → logprob: -11.125094413757324
    4. '[(' → logprob: -11.500094413757324
    5. '(next' → logprob: -13.250094413757324
    6. 'key' → logprob: -13.875094413757324
    7. '.get' → logprob: -15.250094413757324
    8. '[' → logprob: -15.500094413757324
    9. ',next' → logprob: -15.875094413757324
    10. '```' → logprob: -16.75009536743164

Token 2325: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.001697557047009468
    2. '[(' → logprob: -7.126697540283203
    3. 'key' → logprob: -7.376697540283203
    4. '(key' → logprob: -9.626697540283203
    5. 'Key' → logprob: -10.001697540283203
    6. '[key' → logprob: -10.251697540283203
    7. '((' → logprob: -10.876697540283203
    8. '(' → logprob: -11.251697540283203
    9. ' (' → logprob: -11.251697540283203
    10. '
' → logprob: -11.376697540283203

Token 2326: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5186349749565125
    2. ']:
' → logprob: -1.0186350345611572
    3. ']' → logprob: -3.7686350345611572
    4. ']:' → logprob: -4.768634796142578
    5. '):
' → logprob: -5.143634796142578
    6. '==' → logprob: -6.393634796142578
    7. ':
' → logprob: -6.393634796142578
    8. 'True' → logprob: -6.893634796142578
    9. ':' → logprob: -8.393634796142578
    10. ']=' → logprob: -8.393634796142578

Token 2327: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.29975780844688416
    2. '                                   ' → logprob: -1.7997578382492065
    3. ':
' → logprob: -2.924757719039917
    4. '                           ' → logprob: -3.924757719039917
    5. ':' → logprob: -4.424757957458496
    6. ' and' → logprob: -6.174757957458496
    7. ' or' → logprob: -6.299757957458496
    8. '):
' → logprob: -7.174757957458496
    9. '==' → logprob: -7.424757957458496
    10. '=True' → logprob: -7.799757957458496

Token 2328: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.46776333451271057
    2. 'True' → logprob: -1.2177633047103882
    3. ' continue' → logprob: -3.5927634239196777
    4. '                                   ' → logprob: -4.217763423919678
    5. 'continue' → logprob: -4.342763423919678
    6. ' stack' → logprob: -5.092763423919678
    7. '                               ' → logprob: -5.342763423919678
    8. '                           ' → logprob: -5.967763423919678
    9. 'stack' → logprob: -5.967763423919678
    10. '1' → logprob: -6.467763423919678

Token 2329: ' =' (ID: 314)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7692561149597168
    2. '                                   ' → logprob: -2.019256114959717
    3. ':
' → logprob: -2.144256114959717
    4. ':' → logprob: -2.269256114959717
    5. '                                       ' → logprob: -2.769256114959717
    6. '=True' → logprob: -2.769256114959717
    7. '                           ' → logprob: -3.894256114959717
    8. '):
' → logprob: -4.644256114959717
    9. '(True' → logprob: -5.144256114959717
    10. '=' → logprob: -5.644256114959717

Token 2330: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00026503115077503026
    2. ' True' → logprob: -8.250265121459961
    3. '1' → logprob: -13.500265121459961
    4. '                           ' → logprob: -14.125265121459961
    5. '                                   ' → logprob: -14.250265121459961
    6. '                               ' → logprob: -14.875265121459961
    7. '   ' → logprob: -15.375265121459961
    8. '(True' → logprob: -15.875265121459961
    9. 'true' → logprob: -16.37526512145996
    10. '
' → logprob: -16.87526512145996

Token 2331: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.773735761642456
    2. '                                   ' → logprob: -1.023735761642456
    3. '```' → logprob: -2.273735761642456
    4. '                                       ' → logprob: -4.148736000061035
    5. '                           ' → logprob: -4.398736000061035
    6. ':' → logprob: -4.398736000061035
    7. ')' → logprob: -4.773736000061035
    8. ':
' → logprob: -5.023736000061035
    9. '):
' → logprob: -5.398736000061035
    10. '                                           ' → logprob: -5.648736000061035

Token 2332: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.07787100970745087
    2. '                               ' → logprob: -3.077871084213257
    3. '                                       ' → logprob: -3.702871084213257
    4. '                           ' → logprob: -6.827870845794678
    5. '                                           ' → logprob: -7.077870845794678
    6. ':
' → logprob: -7.327870845794678
    7. '```' → logprob: -7.452870845794678
    8. ' and' → logprob: -7.702870845794678
    9. ',' → logprob: -9.577871322631836
    10. '                                     ' → logprob: -9.702871322631836

Token 2333: ' break' (ID: 2338)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.355273574590683
    2. 'break' (adapté à ' break') → logprob: -1.3552736043930054
    3. ' break' → logprob: -4.480273723602295
    4. 'continue' → logprob: -4.730273723602295
    5. '                                       ' → logprob: -4.855273723602295
    6. 'stack' → logprob: -5.355273723602295
    7. '                               ' → logprob: -5.855273723602295
    8. '                                           ' → logprob: -5.980273723602295
    9. '               ' → logprob: -7.230273723602295
    10. '                                    ' → logprob: -7.605273723602295

Token 2334: '
' (ID: 198)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.7123488187789917
    2. '                               ' → logprob: -1.3373488187789917
    3. '                           ' → logprob: -1.4623488187789917
    4. 'continue' → logprob: -5.462348937988281
    5. '                                       ' → logprob: -5.462348937988281
    6. '                       ' → logprob: -6.462348937988281
    7. '                   ' → logprob: -6.712348937988281
    8. '                                           ' → logprob: -7.087348937988281
    9. '           ' → logprob: -7.462348937988281
    10. ' continue' → logprob: -7.712348937988281

Token 2335: '                           ' (ID: 1686)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.20404858887195587
    2. '                               ' → logprob: -1.9540486335754395
    3. '                           ' → logprob: -3.3290486335754395
    4. '                                       ' → logprob: -5.3290486335754395
    5. 'stack' → logprob: -7.4540486335754395
    6. '                                           ' → logprob: -7.5790486335754395
    7. 'continue' → logprob: -7.8290486335754395
    8. '                       ' → logprob: -8.454048156738281
    9. '                   ' → logprob: -8.704048156738281
    10. '```' → logprob: -9.454048156738281

Token 2336: ' else' (ID: 1203)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.043483346700668335
    2. ' stack' → logprob: -3.543483257293701
    3. '                               ' → logprob: -5.418483257293701
    4. '                                   ' → logprob: -5.668483257293701
    5. '                           ' → logprob: -6.043483257293701
    6. '(stack' → logprob: -6.168483257293701
    7. 'True' → logprob: -7.793483257293701
    8. 'continue' → logprob: -8.41848373413086
    9. 'if' → logprob: -8.54348373413086
    10. 'memo' → logprob: -9.66848373413086

Token 2337: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.038074202835559845
    2. 'stack' → logprob: -3.538074254989624
    3. ' stack' → logprob: -5.163074016571045
    4. '                                   ' → logprob: -6.288074016571045
    5. '                           ' → logprob: -8.163074493408203
    6. '                                       ' → logprob: -8.288074493408203
    7. '                                           ' → logprob: -9.913074493408203
    8. '               ' → logprob: -10.288074493408203
    9. '                       ' → logprob: -11.163074493408203
    10. '(stack' → logprob: -11.163074493408203

Token 2338: '                               ' (ID: 2419)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2566108703613281
    2. '                               ' → logprob: -1.5066108703613281
    3. ' stack' → logprob: -5.506610870361328
    4. '                           ' → logprob: -8.131610870361328
    5. '                                   ' → logprob: -8.381610870361328
    6. '                                       ' → logprob: -10.381610870361328
    7. '                                           ' → logprob: -10.881610870361328
    8. '                       ' → logprob: -11.256610870361328
    9. '               ' → logprob: -11.756610870361328
    10. '                   ' → logprob: -12.131610870361328

Token 2339: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0002715873415581882
    2. ' stack' → logprob: -8.250271797180176
    3. '                               ' → logprob: -11.750271797180176
    4. '                                   ' → logprob: -13.375271797180176
    5. '                           ' → logprob: -14.875271797180176
    6. '   ' → logprob: -14.875271797180176
    7. '	stack' → logprob: -16.62527084350586
    8. '                                       ' → logprob: -16.75027084350586
    9. '(stack' → logprob: -17.00027084350586
    10. '                                           ' → logprob: -17.87527084350586

Token 2340: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.602024900028482e-05
    2. 'append' → logprob: -9.625085830688477
    3. '                                   ' → logprob: -12.125085830688477
    4. '                               ' → logprob: -12.250085830688477
    5. ',' → logprob: -12.750085830688477
    6. '                           ' → logprob: -13.250085830688477
    7. '                   ' → logprob: -13.625085830688477
    8. 'Append' → logprob: -13.750085830688477
    9. '.' → logprob: -14.500085830688477
    10. '.extend' → logprob: -14.750085830688477

Token 2341: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.06675883382558823
    2. ' (' → logprob: -3.191758871078491
    3. '(i' → logprob: -3.941758871078491
    4. '(' → logprob: -5.691758632659912
    5. '   ' → logprob: -7.941758632659912
    6. '(n' → logprob: -8.81675910949707
    7. '                           ' → logprob: -9.94175910949707
    8. 'next' → logprob: -10.06675910949707
    9. '                               ' → logprob: -10.94175910949707
    10. '                                   ' → logprob: -10.94175910949707

Token 2342: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.1464761346578598
    2. '(i' → logprob: -2.0214760303497314
    3. ',i' → logprob: -6.8964762687683105
    4. '(' → logprob: -7.5214762687683105
    5. 'Key' → logprob: -7.5214762687683105
    6. 'i' → logprob: -7.8964762687683105
    7. '   ' → logprob: -7.8964762687683105
    8. 'key' → logprob: -8.646475791931152
    9. ',' → logprob: -8.771475791931152
    10. ' (' → logprob: -8.896475791931152

Token 2343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016557903960347176
    2. ')
' → logprob: -4.766557693481445
    3. '                               ' → logprob: -5.641557693481445
    4. '                           ' → logprob: -6.516557693481445
    5. '                                   ' → logprob: -7.016557693481445
    6. '):
' → logprob: -7.266557693481445
    7. '               ' → logprob: -8.766557693481445
    8. '```' → logprob: -9.141557693481445
    9. '):' → logprob: -9.266557693481445
    10. '                   ' → logprob: -9.391557693481445

Token 2344: '                       ' (ID: 968)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.714214026927948
    2. '                                   ' → logprob: -0.964214026927948
    3. '                           ' → logprob: -2.5892140865325928
    4. ')' → logprob: -3.4642140865325928
    5. '```' → logprob: -4.214213848114014
    6. '<|end|>' → logprob: -6.089213848114014
    7. '                                       ' → logprob: -6.964213848114014
    8. '           ' → logprob: -7.339213848114014
    9. '                                           ' → logprob: -7.589213848114014
    10. ' )' → logprob: -7.589213848114014

Token 2345: ' memo' (ID: 46393)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.12484410405158997
    2. '                       ' → logprob: -2.6248440742492676
    3. '                               ' → logprob: -3.7498440742492676
    4. 'continue' → logprob: -4.874844074249268
    5. '                   ' → logprob: -5.374844074249268
    6. '```' → logprob: -6.124844074249268
    7. ' continue' → logprob: -6.249844074249268
    8. '                                   ' → logprob: -6.499844074249268
    9. '           ' → logprob: -6.874844074249268
    10. '               ' → logprob: -7.499844074249268

Token 2346: '[key' (ID: 16401)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.20605719089508057
    2. '[' → logprob: -2.331057071685791
    3. '[key' → logprob: -2.456057071685791
    4. '[
' → logprob: -6.956057071685791
    5. '[token' → logprob: -7.581057071685791
    6. '[((' → logprob: -7.831057071685791
    7. '```' → logprob: -8.45605754852295
    8. '[user' → logprob: -8.83105754852295
    9. '.setdefault' → logprob: -9.08105754852295
    10. '_key' → logprob: -9.45605754852295

Token 2347: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9882639646530151
    2. ')' → logprob: -1.3632639646530151
    3. ':' → logprob: -1.4882639646530151
    4. '[' → logprob: -2.3632640838623047
    5. '=True' → logprob: -3.8632640838623047
    6. ']' → logprob: -5.488264083862305
    7. ')=' → logprob: -5.613264083862305
    8. ' =' → logprob: -5.988264083862305
    9. '):' → logprob: -6.238264083862305
    10. '                               ' → logprob: -6.488264083862305

Token 2348: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26245418190956116
    2. '=' → logprob: -2.6374542713165283
    3. ')' → logprob: -2.8874542713165283
    4. '                           ' → logprob: -3.0124542713165283
    5. '                               ' → logprob: -4.012454032897949
    6. '[' → logprob: -4.387454032897949
    7. ':
' → logprob: -5.887454032897949
    8. '```' → logprob: -5.887454032897949
    9. '                                   ' → logprob: -6.137454032897949
    10. ' =' → logprob: -6.137454032897949

Token 2349: ' possible' (ID: 4149)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8050563931465149
    2. 'True' → logprob: -1.1800563335418701
    3. 'possible' → logprob: -1.4300563335418701
    4. 'None' → logprob: -5.430056571960449
    5. ' False' → logprob: -7.555056571960449
    6. ' True' → logprob: -7.805056571960449
    7. '   ' → logprob: -7.930056571960449
    8. ' possible' → logprob: -8.93005657196045
    9. '(True' → logprob: -9.30505657196045
    10. '                   ' → logprob: -9.68005657196045

Token 2350: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3642589747905731
    2. '                           ' → logprob: -2.4892590045928955
    3. '<|end|>' → logprob: -2.4892590045928955
    4. '                       ' → logprob: -3.8642590045928955
    5. '                   ' → logprob: -4.114258766174316
    6. '                ' → logprob: -4.239258766174316
    7. '                               ' → logprob: -4.364258766174316
    8. '               ' → logprob: -4.614258766174316
    9. '                        ' → logprob: -4.614258766174316
    10. '```' → logprob: -4.864258766174316

Token 2351: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4841785728931427
    2. '                           ' → logprob: -2.1091785430908203
    3. '```' → logprob: -2.7341785430908203
    4. '                               ' → logprob: -3.2341785430908203
    5. '                            ' → logprob: -3.2341785430908203
    6. '                ' → logprob: -3.7341785430908203
    7. '                        ' → logprob: -3.8591785430908203
    8. '<|end|>' → logprob: -4.35917854309082
    9. '                       ' → logprob: -4.73417854309082
    10. '                   ' → logprob: -4.73417854309082

Token 2352: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1181272342801094
    2. '```' → logprob: -2.8681273460388184
    3. ' if' → logprob: -3.7431273460388184
    4. ' for' → logprob: -4.618127346038818
    5. '                       ' → logprob: -5.618127346038818
    6. '               ' → logprob: -5.993127346038818
    7. ' continue' → logprob: -5.993127346038818
    8. '                    ' → logprob: -6.243127346038818
    9. '                ' → logprob: -6.868127346038818
    10. 'if' → logprob: -6.868127346038818

Token 2353: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.007669206243008375
    2. 'False' → logprob: -5.632668972015381
    3. ' memo' → logprob: -6.257668972015381
    4. 'possible' → logprob: -6.757668972015381
    5. 'True' → logprob: -7.132668972015381
    6. ' False' → logprob: -9.257669448852539
    7. ' True' → logprob: -10.382669448852539
    8. 'bool' → logprob: -11.382669448852539
    9. 'not' → logprob: -11.632669448852539
    10. 'mem' → logprob: -11.757669448852539

Token 2354: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.045629825443029404
    2. '[key' → logprob: -3.2956297397613525
    3. 'key' → logprob: -5.545629978179932
    4. '[' → logprob: -6.545629978179932
    5. '(key' → logprob: -6.545629978179932
    6. '.get' → logprob: -7.545629978179932
    7. 'get' → logprob: -9.795629501342773
    8. '[token' → logprob: -10.295629501342773
    9. ' key' → logprob: -10.420629501342773
    10. '[get' → logprob: -10.920629501342773

Token 2355: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.15377694368362427
    2. '((' → logprob: -2.5287768840789795
    3. '(' → logprob: -2.9037768840789795
    4. '(key' → logprob: -5.528777122497559
    5. ' (' → logprob: -5.778777122497559
    6. '   ' → logprob: -8.403777122497559
    7. '(False' → logprob: -8.403777122497559
    8. '(True' → logprob: -9.278777122497559
    9. ' ' → logprob: -9.403777122497559
    10. '(can' → logprob: -9.653777122497559

Token 2356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045009577297605574
    2. 'i' → logprob: -8.000450134277344
    3. 'idx' → logprob: -10.500450134277344
    4. '1' → logprob: -10.750450134277344
    5. ' ' → logprob: -11.125450134277344
    6. 'len' → logprob: -11.750450134277344
    7. ')' → logprob: -12.000450134277344
    8. '(' → logprob: -12.500450134277344
    9. 'CO' → logprob: -12.500450134277344
    10. 'None' → logprob: -12.500450134277344

Token 2357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027063372544944286
    2. '0' → logprob: -8.25027084350586
    3. ' ,' → logprob: -12.00027084350586
    4. '   ' → logprob: -14.37527084350586
    5. '(' → logprob: -14.50027084350586
    6. '```' → logprob: -15.00027084350586
    7. '[' → logprob: -15.62527084350586
    8. ',
' → logprob: -15.87527084350586
    9. '       ' → logprob: -16.00027084350586
    10. '+' → logprob: -16.00027084350586

Token 2358: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.014448951929807663
    2. '0' → logprob: -4.264449119567871
    3. 'pay' → logprob: -8.889449119567871
    4. ' rest' → logprob: -9.639449119567871
    5. 'amount' → logprob: -10.389449119567871
    6. '   ' → logprob: -11.264449119567871
    7. ' ' → logprob: -11.764449119567871
    8. 'price' → logprob: -12.014449119567871
    9. '500' → logprob: -12.389449119567871
    10. 'change' → logprob: -13.014449119567871

Token 2359: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -3.464347173576243e-05
    2. 'pay' → logprob: -10.50003433227539
    3. ')' → logprob: -13.25003433227539
    4. '),' → logprob: -14.00003433227539
    5. '_p' → logprob: -14.50003433227539
    6. '_play' → logprob: -14.87503433227539
    7. '               ' → logprob: -15.00003433227539
    8. '-pay' → logprob: -15.00003433227539
    9. '   ' → logprob: -15.12503433227539
    10. '))' → logprob: -15.25003433227539

Token 2360: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005293221911415458
    2. ',' → logprob: -8.375529289245605
    3. '))' → logprob: -8.875529289245605
    4. '                   ' → logprob: -9.250529289245605
    5. ')' → logprob: -10.375529289245605
    6. '               ' → logprob: -11.500529289245605
    7. '))
' → logprob: -12.500529289245605
    8. '),(' → logprob: -12.500529289245605
    9. '],' → logprob: -12.625529289245605
    10. '                       ' → logprob: -13.000529289245605

Token 2361: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009767174487933517
    2. ' True' → logprob: -7.0009765625
    3. 'False' → logprob: -10.6259765625
    4. '                           ' → logprob: -10.7509765625
    5. '                               ' → logprob: -12.0009765625
    6. '                   ' → logprob: -12.2509765625
    7. '                       ' → logprob: -12.8759765625
    8. '               ' → logprob: -13.3759765625
    9. '                                   ' → logprob: -13.6259765625
    10. '           ' → logprob: -14.2509765625

Token 2362: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011677479778882116
    2. '                   ' → logprob: -9.375116348266602
    3. '               ' → logprob: -10.750116348266602
    4. '):' → logprob: -12.875116348266602
    5. ')
' → logprob: -13.375116348266602
    6. '):
' → logprob: -13.500116348266602
    7. '<|end|>' → logprob: -13.625116348266602
    8. '')' → logprob: -14.500116348266602
    9. '                       ' → logprob: -14.625116348266602
    10. ')return' → logprob: -14.750116348266602

Token 2363: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6077170372009277
    2. '               ' → logprob: -0.8577170372009277
    3. '```' → logprob: -4.857717037200928
    4. 'True' → logprob: -5.357717037200928
    5. '
' → logprob: -5.482717037200928
    6. '                ' → logprob: -5.607717037200928
    7. ')' → logprob: -5.732717037200928
    8. 'False' → logprob: -6.982717037200928
    9. '                
' → logprob: -6.982717037200928
    10. ' True' → logprob: -6.982717037200928

Token 2364: ' #' (ID: 1069)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6736462116241455
    2. '               ' → logprob: -1.0486462116241455
    3. 'if' → logprob: -2.6736462116241455
    4. ' can' → logprob: -3.4236462116241455
    5. ' if' → logprob: -3.6736462116241455
    6. '```' → logprob: -5.548645973205566
    7. '                   ' → logprob: -5.673645973205566
    8. 'for' → logprob: -6.173645973205566
    9. 'continue' → logprob: -6.798645973205566
    10. 'True' → logprob: -7.423645973205566

Token 2365: ' Pour' (ID: 13931)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6599173545837402
    2. '               ' → logprob: -1.0349173545837402
    3. ' can' → logprob: -2.4099173545837402
    4. 'if' → logprob: -4.15991735458374
    5. ' if' → logprob: -5.03491735458374
    6. 'for' → logprob: -5.15991735458374
    7. '#' → logprob: -6.03491735458374
    8. '```' → logprob: -6.40991735458374
    9. ' for' → logprob: -6.53491735458374
    10. 'True' → logprob: -6.90991735458374

Token 2366: ' éviter' (ID: 64013)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.09419556707143784
    2. 'i' → logprob: -3.469195604324341
    3. 'not' → logprob: -3.594195604324341
    4. 'True' → logprob: -4.469195365905762
    5. ' can' → logprob: -4.844195365905762
    6. 'None' → logprob: -5.969195365905762
    7. ' not' → logprob: -6.719195365905762
    8. 'pay' → logprob: -6.719195365905762
    9. '_pay' → logprob: -6.844195365905762
    10. ' True' → logprob: -6.844195365905762

Token 2367: ' coût' (ID: 73109)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1746787130832672
    2. 'can' → logprob: -2.1746788024902344
    3. ' True' → logprob: -4.174678802490234
    4. 'False' → logprob: -4.799678802490234
    5. 'import' → logprob: -6.049678802490234
    6. '#' → logprob: -6.174678802490234
    7. 'i' → logprob: -6.674678802490234
    8. 'faire' → logprob: -6.799678802490234
    9. 'for' → logprob: -6.924678802490234
    10. 'iter' → logprob: -7.049678802490234

Token 2368: ' important' (ID: 3378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1682521104812622
    2. '```' → logprob: -1.9182521104812622
    3. '=' → logprob: -2.5432519912719727
    4. ':' → logprob: -2.9182519912719727
    5. 'e' → logprob: -3.1682519912719727
    6. 'é' → logprob: -3.2932519912719727
    7. '               ' → logprob: -3.5432519912719727
    8. '                   ' → logprob: -3.6682519912719727
    9. ',' → logprob: -3.7932519912719727
    10. 'ex' → logprob: -4.043251991271973

Token 2369: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14321184158325195
    2. ':
' → logprob: -3.268211841583252
    3. ':' → logprob: -3.518211841583252
    4. '                   ' → logprob: -4.393211841583252
    5. '
' → logprob: -4.518211841583252
    6. ',' → logprob: -4.518211841583252
    7. ' if' → logprob: -5.018211841583252
    8. '#' → logprob: -5.143211841583252
    9. '                ' → logprob: -5.268211841583252
    10. ' :
' → logprob: -6.393211841583252

Token 2370: ' on' (ID: 402)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.4662528336048126
    2. ' can' → logprob: -1.2162528038024902
    3. '               ' → logprob: -3.3412528038024902
    4. ' if' → logprob: -4.34125280380249
    5. 'if' → logprob: -4.59125280380249
    6. 'continue' → logprob: -5.46625280380249
    7. '#' → logprob: -5.71625280380249
    8. '                   ' → logprob: -5.84125280380249
    9. ' continue' → logprob: -6.09125280380249
    10. '```' → logprob: -6.34125280380249

Token 2371: ' utilise' (ID: 70283)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0197417736053467
    2. 'continue' → logprob: -1.8947417736053467
    3. 'contin' → logprob: -2.2697417736053467
    4. '#' → logprob: -2.2697417736053467
    5. 'def' → logprob: -3.0197417736053467
    6. 'import' → logprob: -3.2697417736053467
    7. '
' → logprob: -3.3947417736053467
    8. '=' → logprob: -3.3947417736053467
    9. '                   ' → logprob: -3.7697417736053467
    10. 'cache' → logprob: -3.8947417736053467

Token 2372: ' un' (ID: 537)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5235618352890015
    2. 'True' → logprob: -1.1485618352890015
    3. 'collections' → logprob: -3.148561954498291
    4. 'rest' → logprob: -4.273561954498291
    5. 'dp' → logprob: -4.898561954498291
    6. 'coins' → logprob: -5.023561954498291
    7. 'any' → logprob: -5.148561954498291
    8. 'False' → logprob: -5.898561954498291
    9. ' True' → logprob: -7.023561954498291
    10. 'memo' → logprob: -7.023561954498291

Token 2373: ' simple' (ID: 4705)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.41258350014686584
    2. 'import' → logprob: -1.9125834703445435
    3. 'cache' → logprob: -2.287583589553833
    4. 'def' → logprob: -2.912583589553833
    5. 'l' → logprob: -4.412583351135254
    6. 'queue' → logprob: -5.787583351135254
    7. 'collections' → logprob: -5.787583351135254
    8. 'deque' → logprob: -5.912583351135254
    9. '
' → logprob: -6.162583351135254
    10. '```' → logprob: -6.287583351135254

Token 2374: ' DP' (ID: 51992)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5278134346008301
    2. 'dp' → logprob: -1.65281343460083
    3. 'def' → logprob: -2.40281343460083
    4. 'queue' → logprob: -3.77781343460083
    5. 'can' → logprob: -4.15281343460083
    6. 'import' → logprob: -4.27781343460083
    7. 'cache' → logprob: -4.40281343460083
    8. ' from' → logprob: -4.65281343460083
    9. 'visited' → logprob: -4.65281343460083
    10. '```' → logprob: -4.77781343460083

Token 2375: ' bottom' (ID: 8725)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22580884397029877
    2. '[' → logprob: -2.35080885887146
    3. '_' → logprob: -3.85080885887146
    4. '                   ' → logprob: -4.350808620452881
    5. '[i' → logprob: -4.475808620452881
    6. 'dp' → logprob: -4.850808620452881
    7. ')' → logprob: -5.225808620452881
    8. '
' → logprob: -5.225808620452881
    9. '[
' → logprob: -5.225808620452881
    10. '_token' → logprob: -5.600808620452881

Token 2376: '-up' (ID: 7288)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.04433818906545639
    2. '               ' → logprob: -3.7943382263183594
    3. '-up' → logprob: -4.794338226318359
    4. '```' → logprob: -5.794338226318359
    5. '                   ' → logprob: -5.919338226318359
    6. 'for' → logprob: -6.044338226318359
    7. '_up' → logprob: -6.419338226318359
    8. '           ' → logprob: -7.669338226318359
    9. 'down' → logprob: -7.919338226318359
    10. '       ' → logprob: -7.919338226318359

Token 2377: ' :

' (ID: 11287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007269629277288914
    2. 'dp' → logprob: -5.382269859313965
    3. '[' → logprob: -6.632269859313965
    4. '       ' → logprob: -9.007269859313965
    5. 'for' → logprob: -9.132269859313965
    6. '           ' → logprob: -9.132269859313965
    7. '                   ' → logprob: -9.132269859313965
    8. '
' → logprob: -9.507269859313965
    9. '```' → logprob: -9.507269859313965
    10. '#' → logprob: -9.632269859313965

Token 2378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006993488408625126
    2. 'dp' → logprob: -5.006993293762207
    3. '```' → logprob: -8.506993293762207
    4. ' dp' → logprob: -10.381993293762207
    5. '                
' → logprob: -10.881993293762207
    6. 'pay' → logprob: -11.631993293762207
    7. '``' → logprob: -12.756993293762207
    8. '
' → logprob: -13.006993293762207
    9. 'import' → logprob: -13.381993293762207
    10. '           ' → logprob: -13.381993293762207

Token 2379: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.23321588337421417
    2. '               ' → logprob: -1.6082159280776978
    3. 'can' → logprob: -4.983215808868408
    4. ' dp' → logprob: -8.108216285705566
    5. '                   ' → logprob: -8.608216285705566
    6. 'pay' → logprob: -9.358216285705566
    7. 'possible' → logprob: -9.483216285705566
    8. '#' → logprob: -9.608216285705566
    9. 'from' → logprob: -9.983216285705566
    10. 'poss' → logprob: -10.358216285705566

Token 2380: '_can' (ID: 71644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2282201200723648
    2. '_table' → logprob: -3.103220224380493
    3. '_pay' → logprob: -3.103220224380493
    4. '_rest' → logprob: -3.603220224380493
    5. 'array' → logprob: -3.978220224380493
    6. '_array' → logprob: -4.353219985961914
    7. 'rest' → logprob: -4.853219985961914
    8. 'table' → logprob: -5.103219985961914
    9. '_possible' → logprob: -5.353219985961914
    10. '_capacity' → logprob: -5.478219985961914

Token 2381: ' =' (ID: 314)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.13557513058185577
    2. '_can' → logprob: -2.63557505607605
    3. ' =' → logprob: -3.38557505607605
    4. 'make' → logprob: -4.385575294494629
    5. '_pay' → logprob: -5.885575294494629
    6. '_check' → logprob: -5.885575294494629
    7. 'ay' → logprob: -6.635575294494629
    8. 'can' → logprob: -7.760575294494629
    9. '=' → logprob: -7.885575294494629
    10. '_possible' → logprob: -8.385575294494629

Token 2382: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0044810352846980095
    2. '[[' → logprob: -5.504480838775635
    3. '{' → logprob: -8.254481315612793
    4. '[{' → logprob: -9.129481315612793
    5. ' [' → logprob: -10.629481315612793
    6. '[s' → logprob: -13.129481315612793
    7. '[-' → logprob: -13.129481315612793
    8. '[n' → logprob: -14.129481315612793
    9. '   ' → logprob: -14.379481315612793
    10. '[len' → logprob: -14.379481315612793

Token 2383: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.4140441635390744e-05
    2. ' False' → logprob: -11.375014305114746
    3. 'True' → logprob: -13.375014305114746
    4. '   ' → logprob: -14.625014305114746
    5. '(False' → logprob: -15.000014305114746
    6. '[' → logprob: -15.125014305114746
    7. '       ' → logprob: -17.87501335144043
    8. '0' → logprob: -17.87501335144043
    9. '=False' → logprob: -18.75001335144043
    10. 'None' → logprob: -18.87501335144043

Token 2384: ']*(' (ID: 92627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41898825764656067
    2. ']' → logprob: -1.5439882278442383
    3. ']*(' → logprob: -2.5439882278442383
    4. 'for' → logprob: -4.043988227844238
    5. ' for' → logprob: -4.918988227844238
    6. '(' → logprob: -5.293988227844238
    7. '               ' → logprob: -5.418988227844238
    8. '0' → logprob: -5.543988227844238
    9. ',' → logprob: -5.543988227844238
    10. '*(' → logprob: -6.418988227844238

Token 2385: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.00018411019118502736
    2. '100' → logprob: -8.750184059143066
    3. '(rest' → logprob: -10.875184059143066
    4. '   ' → logprob: -13.000184059143066
    5. ' rest' → logprob: -13.875184059143066
    6. 'pay' → logprob: -14.000184059143066
    7. '(' → logprob: -14.250184059143066
    8. '               ' → logprob: -14.375184059143066
    9. '           ' → logprob: -14.750184059143066
    10. '101' → logprob: -14.875184059143066

Token 2386: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.00143083231523633
    2. '100' → logprob: -7.001430988311768
    3. '+' → logprob: -7.626430988311768
    4. 'pay' → logprob: -11.37643051147461
    5. '101' → logprob: -12.12643051147461
    6. 'Pay' → logprob: -12.87643051147461
    7. '_PAY' → logprob: -13.12643051147461
    8. '102' → logprob: -13.25143051147461
    9. '```' → logprob: -13.25143051147461
    10. '_' → logprob: -13.37643051147461

Token 2387: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004307884373702109
    2. ' +' → logprob: -7.750430583953857
    3. ')+' → logprob: -17.500431060791016
    4. '()+' → logprob: -17.750431060791016
    5. '+
' → logprob: -18.500431060791016
    6. '＋' → logprob: -18.875431060791016
    7. '+[' → logprob: -19.375431060791016
    8. ']+' → logprob: -19.500431060791016
    9. '+++' → logprob: -19.625431060791016
    10. '```' → logprob: -20.000431060791016

Token 2388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.25
    4. '+' → logprob: -17.875
    5. '
' → logprob: -18.0
    6. '```' → logprob: -18.0
    7. '2' → logprob: -18.625
    8. '100' → logprob: -19.0
    9. '101' → logprob: -19.25
    10. 'import' → logprob: -19.625

Token 2389: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2888254225254059
    2. ')
' → logprob: -1.4138253927230835
    3. '+' → logprob: -5.538825511932373
    4. '               ' → logprob: -5.788825511932373
    5. ')
' → logprob: -9.163825035095215
    6. '<|end|>' → logprob: -9.538825035095215
    7. '<|end|>' → logprob: -10.163825035095215
    8. '=True' → logprob: -10.288825035095215
    9. '[' → logprob: -10.413825035095215
    10. '                ' → logprob: -10.663825035095215

Token 2390: '               ' (ID: 506)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014802898280322552
    2. '[' → logprob: -4.639802932739258
    3. 'dp' → logprob: -6.389802932739258
    4. 'False' → logprob: -6.639802932739258
    5. '=True' → logprob: -6.764802932739258
    6. ' True' → logprob: -7.764802932739258
    7. '               ' → logprob: -8.264802932739258
    8. '(True' → logprob: -9.514802932739258
    9. '
' → logprob: -9.889802932739258
    10. '                   ' → logprob: -10.764802932739258

Token 2391: ' dp' (ID: 21546)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47534283995628357
    2. 'dp' (adapté à ' dp') → logprob: -0.975342869758606
    3. 'False' → logprob: -6.725342750549316
    4. '[' → logprob: -10.975342750549316
    5. ' True' → logprob: -11.100342750549316
    6. '1' → logprob: -12.350342750549316
    7. '```' → logprob: -12.350342750549316
    8. ' dp' → logprob: -12.475342750549316
    9. '(True' → logprob: -12.600342750549316
    10. '               ' → logprob: -12.600342750549316

Token 2392: '_can' (ID: 71644)
  Prédit: '_can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.0003957608714699745
    2. '[' → logprob: -7.875395774841309
    3. 'can' → logprob: -11.250395774841309
    4. '```' → logprob: -14.125395774841309
    5. 'dp' → logprob: -14.250395774841309
    6. 'Can' → logprob: -15.000395774841309
    7. '=' → logprob: -15.250395774841309
    8. '0' → logprob: -15.750395774841309
    9. '	can' → logprob: -15.750395774841309
    10. '_CAN' → logprob: -16.250394821166992

Token 2393: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005819845828227699
    2. ' =' → logprob: -8.625581741333008
    3. '=True' → logprob: -8.625581741333008
    4. '=[' → logprob: -9.000581741333008
    5. '=' → logprob: -9.875581741333008
    6. 'dp' → logprob: -10.750581741333008
    7. '
' → logprob: -11.625581741333008
    8. '```' → logprob: -12.000581741333008
    9. '   ' → logprob: -12.750581741333008
    10. '=False' → logprob: -13.000581741333008

Token 2394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'True' → logprob: -15.375000953674316
    4. '[' → logprob: -15.875000953674316
    5. 'False' → logprob: -16.500001907348633
    6. '000' → logprob: -17.500001907348633
    7. '=' → logprob: -18.125001907348633
    8. ')' → logprob: -18.375001907348633
    9. 'rest' → logprob: -18.375001907348633
    10. ']' → logprob: -18.750001907348633

Token 2395: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3202188014984131
    2. ']' → logprob: -1.945218801498413
    3. ']=' → logprob: -2.570218801498413
    4. '=True' → logprob: -3.195218801498413
    5. ' =' → logprob: -4.320219039916992
    6. '=False' → logprob: -9.320219039916992
    7. 'True' → logprob: -9.695219039916992
    8. ')' → logprob: -9.945219039916992
    9. ')=' → logprob: -9.945219039916992
    10. '=
' → logprob: -12.195219039916992

Token 2396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00263784546405077
    2. '=True' → logprob: -6.25263786315918
    3. ' =' → logprob: -7.25263786315918
    4. '=
' → logprob: -14.50263786315918
    5. '=False' → logprob: -16.37763786315918
    6. 'True' → logprob: -17.37763786315918
    7. '=true' → logprob: -18.12763786315918
    8. ']=' → logprob: -18.25263786315918
    9. ')=' → logprob: -19.00263786315918
    10. '＝' → logprob: -19.12763786315918

Token 2397: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.128163257315464e-07
    2. ' True' → logprob: -15.5
    3. '1' → logprob: -19.75
    4. '   ' → logprob: -20.5
    5. '=True' → logprob: -20.75
    6. '(True' → logprob: -21.25
    7. 'False' → logprob: -23.125
    8. '       ' → logprob: -23.25
    9. 'true' → logprob: -23.25
    10. '#' → logprob: -24.25

Token 2398: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017254943028092384
    2. ' for' → logprob: -4.642254829406738
    3. 'for' → logprob: -5.017254829406738
    4. '           ' → logprob: -8.017254829406738
    5. '                   ' → logprob: -8.642254829406738
    6. '
' → logprob: -8.767254829406738
    7. '                
' → logprob: -9.767254829406738
    8. ')' → logprob: -10.517254829406738
    9. '```' → logprob: -10.892254829406738
    10. '       ' → logprob: -11.017254829406738

Token 2399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048790495842695236
    2. 'for' → logprob: -3.423790454864502
    3. ' for' → logprob: -4.298790454864502
    4. '           ' → logprob: -6.923790454864502
    5. '```' → logprob: -8.42379093170166
    6. '                   ' → logprob: -8.79879093170166
    7. '       ' → logprob: -9.92379093170166
    8. '   ' → logprob: -11.67379093170166
    9. '                ' → logprob: -12.04879093170166
    10. ')' → logprob: -12.42379093170166

Token 2400: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009241603314876556
    2. '               ' → logprob: -4.759241580963135
    3. ' for' → logprob: -7.384241580963135
    4. '                   ' → logprob: -13.134242057800293
    5. '           ' → logprob: -13.384242057800293
    6. '```' → logprob: -13.634242057800293
    7. '       ' → logprob: -14.509242057800293
    8. '   ' → logprob: -15.009242057800293
    9. '	for' → logprob: -15.884242057800293
    10. '                ' → logprob: -16.259241104125977

Token 2401: ' ci' (ID: 7405)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0808647871017456
    2. 'coin' → logprob: -2.705864906311035
    3. 'idx' → logprob: -4.955864906311035
    4. 'c' → logprob: -6.580864906311035
    5. 'amt' → logprob: -7.330864906311035
    6. 'val' → logprob: -7.455864906311035
    7. 'ci' → logprob: -7.455864906311035
    8. 'j' → logprob: -8.205864906311035
    9. 'v' → logprob: -9.580864906311035
    10. 'ct' → logprob: -9.830864906311035

Token 2402: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43419837951660156
    2. ' in' → logprob: -1.0591983795166016
    3. 'n' → logprob: -6.184198379516602
    4. '0' → logprob: -7.309198379516602
    5. 'nd' → logprob: -7.309198379516602
    6. '1' → logprob: -7.559198379516602
    7. 'dx' → logprob: -8.059198379516602
    8. '   ' → logprob: -8.559198379516602
    9. ' ' → logprob: -8.684198379516602
    10. ',' → logprob: -8.684198379516602

Token 2403: ' c' (ID: 274)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45047810673713684
    2. 'cnt' → logprob: -1.8254780769348145
    3. 'coin' → logprob: -3.0754780769348145
    4. 'c' → logprob: -3.2004780769348145
    5. 'qty' → logprob: -3.2004780769348145
    6. 'avail' → logprob: -3.4504780769348145
    7. 'num' → logprob: -3.8254780769348145
    8. 'max' → logprob: -5.0754780769348145
    9. 'n' → logprob: -5.3254780769348145
    10. 'coins' → logprob: -5.7004780769348145

Token 2404: 'val' (ID: 1105)
  Prédit: 'oin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oin' → logprob: -0.4777210056781769
    2. 'ount' → logprob: -1.8527209758758545
    3. 'in' → logprob: -2.7277209758758545
    4. 'o' → logprob: -3.1027209758758545
    5. 'nt' → logprob: -3.1027209758758545
    6. 'oint' → logprob: -3.1027209758758545
    7. 'count' → logprob: -5.727721214294434
    8. 'oi' → logprob: -5.977721214294434
    9. '=' → logprob: -6.227721214294434
    10. 'oints' → logprob: -6.352721214294434

Token 2405: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.003677751636132598
    2. ' in' → logprob: -5.628677845001221
    3. ',' → logprob: -9.628677368164062
    4. ' ' → logprob: -12.128677368164062
    5. '   ' → logprob: -12.253677368164062
    6. '  ' → logprob: -14.878677368164062
    7. '    ' → logprob: -15.003677368164062
    8. '	in' → logprob: -15.378677368164062
    9. '
' → logprob: -16.003677368164062
    10. 'i' → logprob: -16.253677368164062

Token 2406: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06370042264461517
    2. 'zip' → logprob: -2.8137004375457764
    3. 'range' → logprob: -6.938700199127197
    4. 'CO' → logprob: -8.188700675964355
    5. 'avail' → logprob: -8.313700675964355
    6. ' enumerate' → logprob: -8.688700675964355
    7. 'coins' → logprob: -10.563700675964355
    8. ' zip' → logprob: -11.563700675964355
    9. 'available' → logprob: -12.063700675964355
    10. 'enum' → logprob: -12.313700675964355

Token 2407: '(C' (ID: 5559)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.034370455890893936
    2. 'CO' → logprob: -3.4093704223632812
    3. 'av' → logprob: -8.659370422363281
    4. '(av' → logprob: -9.284370422363281
    5. 'range' → logprob: -9.409370422363281
    6. ' avail' → logprob: -9.659370422363281
    7. 'available' → logprob: -9.909370422363281
    8. 'coins' → logprob: -9.909370422363281
    9. 'avai' → logprob: -10.159370422363281
    10. ' CO' → logprob: -10.409370422363281

Token 2408: 'OIN' (ID: 18468)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.38698810338974
    2. 'OIN' → logprob: -1.1369881629943848
    3. 'OI' → logprob: -10.011987686157227
    4. 'CO' → logprob: -10.386987686157227
    5. 'o' → logprob: -11.136987686157227
    6. 'OY' → logprob: -11.261987686157227
    7. 'OID' → logprob: -12.511987686157227
    8. ' O' → logprob: -13.011987686157227
    9. '0' → logprob: -13.261987686157227
    10. 'OX' → logprob: -13.761987686157227

Token 2409: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -1.0325924449716695e-05
    2. 'T' → logprob: -11.87501049041748
    3. '_VALUES' → logprob: -13.50001049041748
    4. '_types' → logprob: -14.25001049041748
    5. 'Types' → logprob: -14.25001049041748
    6. '_TYPE' → logprob: -15.50001049041748
    7. '_VAL' → logprob: -16.125009536743164
    8. 'YPES' → logprob: -17.125009536743164
    9. ' TYPES' → logprob: -17.250009536743164
    10. 'types' → logprob: -17.375009536743164

Token 2410: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006476741284132004
    2. '):' → logprob: -5.131476879119873
    3. '   ' → logprob: -8.381476402282715
    4. '):
' → logprob: -9.006476402282715
    5. '               ' → logprob: -9.381476402282715
    6. '                   ' → logprob: -9.881476402282715
    7. '[' → logprob: -11.006476402282715
    8. '       ' → logprob: -12.006476402282715
    9. ':
' → logprob: -12.006476402282715
    10. ')' → logprob: -12.506476402282715

Token 2411: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05787838622927666
    2. '               ' → logprob: -2.9328784942626953
    3. '   ' → logprob: -6.807878494262695
    4. ' for' → logprob: -6.932878494262695
    5. 'for' → logprob: -7.182878494262695
    6. ',' → logprob: -9.807878494262695
    7. '```' → logprob: -10.432878494262695
    8. '           ' → logprob: -11.182878494262695
    9. '
' → logprob: -11.307878494262695
    10. '                       ' → logprob: -11.932878494262695

Token 2412: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.259272038936615
    2. 'coins' → logprob: -2.7592720985412598
    3. 'max' (adapté à ' max') → logprob: -3.3842720985412598
    4. 'new' → logprob: -3.3842720985412598
    5. '                   ' → logprob: -3.7592720985412598
    6. 'count' → logprob: -4.25927209854126
    7. 'quant' → logprob: -4.75927209854126
    8. 'avail' → logprob: -5.00927209854126
    9. 'dp' → logprob: -5.13427209854126
    10. 'available' → logprob: -5.25927209854126

Token 2413: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3278027772903442
    2. 'coins' → logprob: -1.7028027772903442
    3. '_use' → logprob: -1.7028027772903442
    4. 'avail' → logprob: -2.0778026580810547
    5. 'use' → logprob: -2.5778026580810547
    6. 'cnt' → logprob: -2.9528026580810547
    7. '_count' → logprob: -3.8278026580810547
    8. 'qty' → logprob: -3.8278026580810547
    9. 'num' → logprob: -4.577802658081055
    10. 'usage' → logprob: -4.702802658081055

Token 2414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34945809841156006
    2. ' =' → logprob: -1.22445809841156
    3. '   ' → logprob: -7.72445821762085
    4. '                   ' → logprob: -8.724457740783691
    5. 'available' → logprob: -9.099457740783691
    6. '=max' → logprob: -9.849457740783691
    7. '=[' → logprob: -10.599457740783691
    8. '       ' → logprob: -10.599457740783691
    9. '[' → logprob: -10.724457740783691
    10. '_available' → logprob: -10.724457740783691

Token 2415: ' avail' (ID: 57507)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.0006821724819019437
    2. ' avail' → logprob: -7.500682353973389
    3. '   ' → logprob: -10.37568187713623
    4. 'available' → logprob: -10.62568187713623
    5. 'av' → logprob: -10.87568187713623
    6. '             ' → logprob: -11.50068187713623
    7. 'aval' → logprob: -11.75068187713623
    8. '               ' → logprob: -12.12568187713623
    9. '           ' → logprob: -12.37568187713623
    10. 'ava' → logprob: -12.75068187713623

Token 2416: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -9.729906196298543e-06
    2. 'coins' → logprob: -12.125009536743164
    3. 'co' → logprob: -14.375009536743164
    4. '   ' → logprob: -14.625009536743164
    5. '[' → logprob: -14.875009536743164
    6. '```' → logprob: -14.875009536743164
    7. '_c' → logprob: -15.000009536743164
    8. 'c' → logprob: -15.500009536743164
    9. 'Coins' → logprob: -15.625009536743164
    10. '_ci' → logprob: -15.625009536743164

Token 2417: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0037383255548775196
    2. 'coins' → logprob: -6.2537384033203125
    3. '[' → logprob: -7.2537384033203125
    4. 'ons' → logprob: -7.6287384033203125
    5. 'ns' → logprob: -8.253738403320312
    6. '
' → logprob: -10.253738403320312
    7. 'Coins' → logprob: -10.378738403320312
    8. 'o' → logprob: -10.753738403320312
    9. '_co' → logprob: -10.753738403320312
    10. 'c' → logprob: -10.753738403320312

Token 2418: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.070975071750581e-05
    2. 'ci' → logprob: -11.000030517578125
    3. '(ci' → logprob: -11.750030517578125
    4. ' ci' → logprob: -13.625030517578125
    5. ' [' → logprob: -13.750030517578125
    6. '   ' → logprob: -13.875030517578125
    7. '       ' → logprob: -14.500030517578125
    8. '=' → logprob: -14.875030517578125
    9. '                   ' → logprob: -15.000030517578125
    10. '           ' → logprob: -15.250030517578125

Token 2419: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -1.2948405128554441e-05
    2. ' ci' → logprob: -11.37501335144043
    3. '[' → logprob: -13.87501335144043
    4. '(ci' → logprob: -14.62501335144043
    5. '   ' → logprob: -17.75001335144043
    6. 'Ci' → logprob: -18.00001335144043
    7. '-ci' → logprob: -18.25001335144043
    8. 'cii' → logprob: -18.62501335144043
    9. '_ci' → logprob: -19.25001335144043
    10. '0' → logprob: -19.87501335144043

Token 2420: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6974343061447144
    2. ']' → logprob: -0.9474343061447144
    3. '                   ' → logprob: -2.947434425354004
    4. '+' → logprob: -3.947434425354004
    5. ']:
' → logprob: -4.072434425354004
    6. ']+' → logprob: -4.322434425354004
    7. ')
' → logprob: -5.822434425354004
    8. '):
' → logprob: -5.947434425354004
    9. '   ' → logprob: -6.072434425354004
    10. '               ' → logprob: -6.572434425354004

Token 2421: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011615309631451964
    2. '               ' → logprob: -7.126161575317383
    3. '```' → logprob: -8.251161575317383
    4. 'for' → logprob: -10.001161575317383
    5. ' for' → logprob: -11.001161575317383
    6. '           ' → logprob: -11.626161575317383
    7. '   ' → logprob: -12.001161575317383
    8. '	               ' → logprob: -12.501161575317383
    9. ',' → logprob: -12.626161575317383
    10. '       ' → logprob: -12.876161575317383

Token 2422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07265494018793106
    2. 'j' → logprob: -3.197654962539673
    3. 'next' → logprob: -4.197654724121094
    4. 'new' → logprob: -5.322654724121094
    5. '                   ' → logprob: -5.697654724121094
    6. 'dp' → logprob: -6.197654724121094
    7. ' for' → logprob: -6.572654724121094
    8. '```' → logprob: -6.947654724121094
    9. 'prev' → logprob: -7.697654724121094
    10. 'amount' → logprob: -7.947654724121094

Token 2423: ' _' (ID: 1175)
  Prédit: 'amt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amt' → logprob: -0.11169348657131195
    2. 'amount' → logprob: -2.4866933822631836
    3. 'a' → logprob: -4.611693382263184
    4. 'am' → logprob: -4.861693382263184
    5. 'j' → logprob: -6.236693382263184
    6. 'x' → logprob: -6.986693382263184
    7. 'v' → logprob: -7.361693382263184
    8. 'amm' → logprob: -7.736693382263184
    9. 'val' → logprob: -7.736693382263184
    10. 'm' → logprob: -8.361693382263184

Token 2424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008630522526800632
    2. 'in' → logprob: -4.758630752563477
    3. 'range' → logprob: -11.508630752563477
    4. ' ' → logprob: -12.258630752563477
    5. '   ' → logprob: -14.258630752563477
    6. '  ' → logprob: -14.883630752563477
    7. '    ' → logprob: -16.133630752563477
    8. '
' → logprob: -17.008630752563477
    9. '     ' → logprob: -18.258630752563477
    10. 'import' → logprob: -18.258630752563477

Token 2425: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. 're' → logprob: -17.875036239624023
    4. ' ' → logprob: -18.250036239624023
    5. '   ' → logprob: -19.125036239624023
    6. '  ' → logprob: -19.375036239624023
    7. '_range' → logprob: -19.625036239624023
    8. 'reverse' → logprob: -21.125036239624023
    9. '_' → logprob: -21.250036239624023
    10. '(range' → logprob: -21.375036239624023

Token 2426: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008090618066489697
    2. '(max' → logprob: -5.133090496063232
    3. 'rest' → logprob: -6.383090496063232
    4. 'c' → logprob: -8.63309097290039
    5. '   ' → logprob: -9.50809097290039
    6. ' max' → logprob: -9.88309097290039
    7. '(rest' → logprob: -10.00809097290039
    8. 'dp' → logprob: -10.13309097290039
    9. '0' → logprob: -11.00809097290039
    10. '1' → logprob: -11.13309097290039

Token 2427: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0007732972735539079
    2. 'max' → logprob: -8.250773429870605
    3. 'ax' → logprob: -8.500773429870605
    4. '1' → logprob: -9.375773429870605
    5. '+' → logprob: -9.750773429870605
    6. '   ' → logprob: -10.250773429870605
    7. '(count' → logprob: -10.500773429870605
    8. 'coins' → logprob: -10.750773429870605
    9. '       ' → logprob: -10.875773429870605
    10. 'can' → logprob: -11.500773429870605

Token 2428: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11198258399963379
    2. '):
' → logprob: -2.361982583999634
    3. ' +' → logprob: -4.861982345581055
    4. ',' → logprob: -6.486982345581055
    5. '                   ' → logprob: -6.611982345581055
    6. '                       ' → logprob: -7.486982345581055
    7. '):' → logprob: -7.736982345581055
    8. '               ' → logprob: -10.486982345581055
    9. ':' → logprob: -11.486982345581055
    10. '   ' → logprob: -11.736982345581055

Token 2429: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -9.198043699143454e-05
    2. '	                   ' → logprob: -10.500091552734375
    3. '                        ' → logprob: -11.125091552734375
    4. '   ' → logprob: -11.625091552734375
    5. ' for' → logprob: -12.000091552734375
    6. '                           ' → logprob: -12.375091552734375
    7. '		               ' → logprob: -12.375091552734375
    8. '                    ' → logprob: -12.625091552734375
    9. '       ' → logprob: -12.625091552734375
    10. '                      ' → logprob: -12.750091552734375

Token 2430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11704359948635101
    2. ' for' → logprob: -2.7420434951782227
    3. 'dp' → logprob: -3.8670434951782227
    4. '                           ' → logprob: -4.242043495178223
    5. '                   ' → logprob: -5.867043495178223
    6. '   ' → logprob: -5.867043495178223
    7. '                       ' → logprob: -6.242043495178223
    8. ' dp' → logprob: -7.617043495178223
    9. '	dp' → logprob: -7.742043495178223
    10. '#' → logprob: -7.742043495178223

Token 2431: ' v' (ID: 323)
  Prédit: 'amt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amt' → logprob: -0.4892449378967285
    2. 'amount' → logprob: -1.2392449378967285
    3. 'a' → logprob: -2.6142449378967285
    4. 'am' → logprob: -4.4892449378967285
    5. 'j' → logprob: -4.7392449378967285
    6. 'x' → logprob: -5.8642449378967285
    7. 'amm' → logprob: -7.1142449378967285
    8. 'm' → logprob: -8.61424446105957
    9. 'v' → logprob: -8.73924446105957
    10. 'val' → logprob: -10.48924446105957

Token 2432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009821020998060703
    2. 'in' → logprob: -4.634820938110352
    3. 'v' → logprob: -10.259820938110352
    4. 'd' → logprob: -11.134820938110352
    5. ' ' → logprob: -11.759820938110352
    6. '   ' → logprob: -13.259820938110352
    7. '  ' → logprob: -14.634820938110352
    8. 'from' → logprob: -14.634820938110352
    9. 'amount' → logprob: -14.759820938110352
    10. 'reverse' → logprob: -14.759820938110352

Token 2433: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006613265140913427
    2. 'rest' → logprob: -7.500661373138428
    3. ' range' → logprob: -9.25066089630127
    4. 're' → logprob: -11.62566089630127
    5. 'reverse' → logprob: -13.00066089630127
    6. '(range' → logprob: -14.62566089630127
    7. 'v' → logprob: -15.12566089630127
    8. 'pay' → logprob: -15.62566089630127
    9. '   ' → logprob: -16.125661849975586
    10. ' reversed' → logprob: -16.375661849975586

Token 2434: '(rest' (ID: 117922)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -2.248469718324486e-05
    2. '(rest' → logprob: -10.750022888183594
    3. ' rest' → logprob: -13.875022888183594
    4. '   ' → logprob: -18.250022888183594
    5. 'reste' → logprob: -19.875022888183594
    6. 'pay' → logprob: -19.875022888183594
    7. '               ' → logprob: -20.375022888183594
    8. '                   ' → logprob: -20.375022888183594
    9. '1' → logprob: -20.625022888183594
    10. '_rest' → logprob: -20.875022888183594

Token 2435: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.0003538158780429512
    2. 'pay' → logprob: -8.000353813171387
    3. 'ay' → logprob: -11.875353813171387
    4. '+' → logprob: -12.500353813171387
    5. ',' → logprob: -13.500353813171387
    6. '                   ' → logprob: -14.000353813171387
    7. 'apay' → logprob: -14.125353813171387
    8. '-pay' → logprob: -14.625353813171387
    9. '               ' → logprob: -14.750353813171387
    10. '(pay' → logprob: -15.000353813171387

Token 2436: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041911620646715164
    2. '-' → logprob: -3.6669116020202637
    3. 'rest' → logprob: -4.291911602020264
    4. ',-' → logprob: -6.916911602020264
    5. '+' → logprob: -8.541912078857422
    6. '-rest' → logprob: -8.916912078857422
    7. '(rest' → logprob: -9.416912078857422
    8. ' ,' → logprob: -9.541912078857422
    9. ' -' → logprob: -9.666912078857422
    10. '1' → logprob: -9.791912078857422

Token 2437: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008009305456653237
    2. 'ci' → logprob: -7.750801086425781
    3. '1' → logprob: -8.125801086425781
    4. ' c' → logprob: -10.250801086425781
    5. 'CO' → logprob: -11.125801086425781
    6. 'v' → logprob: -12.250801086425781
    7. 'val' → logprob: -12.750801086425781
    8. 'co' → logprob: -13.000801086425781
    9. 'coin' → logprob: -13.375801086425781
    10. '0' → logprob: -13.625801086425781

Token 2438: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0005289645632728934
    2. 'v' → logprob: -8.375529289245605
    3. 'ci' → logprob: -9.875529289245605
    4. '1' → logprob: -10.250529289245605
    5. 'oi' → logprob: -10.250529289245605
    6. 'i' → logprob: -11.125529289245605
    7. '[' → logprob: -11.125529289245605
    8. '+' → logprob: -11.125529289245605
    9. '[val' → logprob: -11.250529289245605
    10. 'oin' → logprob: -11.625529289245605

Token 2439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0208077784627676
    2. ',-' → logprob: -3.8958077430725098
    3. ' ,' → logprob: -8.395808219909668
    4. '+' → logprob: -11.270808219909668
    5. ' ,-' → logprob: -11.520808219909668
    6. ',v' → logprob: -11.895808219909668
    7. ',
' → logprob: -13.020808219909668
    8. '```' → logprob: -13.270808219909668
    9. '-' → logprob: -13.520808219909668
    10. ',+' → logprob: -14.020808219909668

Token 2440: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00026264708139933646
    2. ' -' → logprob: -8.250262260437012
    3. '-rest' → logprob: -14.250262260437012
    4. '0' → logprob: -14.375262260437012
    5. '-v' → logprob: -16.875263214111328
    6. '   ' → logprob: -17.375263214111328
    7. '       ' → logprob: -18.125263214111328
    8. '-c' → logprob: -18.250263214111328
    9. '-d' → logprob: -18.625263214111328
    10. '     ' → logprob: -18.875263214111328

Token 2441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -16.875
    3. '   ' → logprob: -19.75
    4. ' ' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '2' → logprob: -20.625
    7. '
' → logprob: -20.625
    8. '１' → logprob: -20.8125
    9. ' -' → logprob: -21.0
    10. '100' → logprob: -21.8125

Token 2442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16031968593597412
    2. ',-' → logprob: -1.9103196859359741
    3. '-' → logprob: -10.285319328308105
    4. ' ,' → logprob: -10.660319328308105
    5. ',true' → logprob: -11.035319328308105
    6. '1' → logprob: -11.535319328308105
    7. ' ,-' → logprob: -12.285319328308105
    8. ',
' → logprob: -13.035319328308105
    9. ',v' → logprob: -14.160319328308105
    10. '```' → logprob: -14.160319328308105

Token 2443: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002108118060277775
    2. ' -' → logprob: -8.750210762023926
    3. 'True' → logprob: -9.875210762023926
    4. 'False' → logprob: -15.125210762023926
    5. '0' → logprob: -16.125211715698242
    6. ' True' → logprob: -16.250211715698242
    7. '–' → logprob: -16.375211715698242
    8. '```' → logprob: -16.375211715698242
    9. '                               ' → logprob: -16.875211715698242
    10. '                           ' → logprob: -17.250211715698242

Token 2444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. '-' → logprob: -10.00004768371582
    3. 'True' → logprob: -13.12504768371582
    4. '```' → logprob: -16.37504768371582
    5. ' -' → logprob: -17.12504768371582
    6. '   ' → logprob: -18.25004768371582
    7. '=True' → logprob: -18.62504768371582
    8. 'False' → logprob: -18.62504768371582
    9. ')' → logprob: -18.87504768371582
    10. '``' → logprob: -19.50004768371582

Token 2445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03454621508717537
    2. '                           ' → logprob: -3.534546136856079
    3. '                       ' → logprob: -6.284546375274658
    4. '):' → logprob: -6.284546375274658
    5. ',' → logprob: -7.909546375274658
    6. ':' → logprob: -8.5345458984375
    7. '                          ' → logprob: -9.2845458984375
    8. '):
' → logprob: -9.5345458984375
    9. '                            ' → logprob: -9.9095458984375
    10. ')' → logprob: -10.5345458984375

Token 2446: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0007005225634202361
    2. '                               ' → logprob: -8.625700950622559
    3. '```' → logprob: -9.375700950622559
    4. ' if' → logprob: -9.625700950622559
    5. ',' → logprob: -9.750700950622559
    6. '                       ' → logprob: -9.875700950622559
    7. '                          ' → logprob: -10.000700950622559
    8. '                            ' → logprob: -10.000700950622559
    9. '                                   ' → logprob: -10.250700950622559
    10. '<|end|>' → logprob: -11.000700950622559

Token 2447: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1477319300174713
    2. 'dp' → logprob: -2.3977320194244385
    3. ' if' → logprob: -3.7727320194244385
    4. '                           ' → logprob: -3.8977320194244385
    5. '                               ' → logprob: -6.647731781005859
    6. ' dp' → logprob: -6.772731781005859
    7. '                                   ' → logprob: -8.89773178100586
    8. '   ' → logprob: -9.14773178100586
    9. '                       ' → logprob: -9.39773178100586
    10. '	dp' → logprob: -9.52273178100586

Token 2448: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004078639671206474
    2. ' dp' → logprob: -5.5040788650512695
    3. '	dp' → logprob: -15.75407886505127
    4. '(dp' → logprob: -16.879077911376953
    5. '_dp' → logprob: -19.129077911376953
    6. '   ' → logprob: -19.379077911376953
    7. '           ' → logprob: -19.754077911376953
    8. 'd' → logprob: -19.754077911376953
    9. '                   ' → logprob: -20.129077911376953
    10. '               ' → logprob: -20.504077911376953

Token 2449: '_can' (ID: 71644)
  Prédit: '_can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -7.822646693966817e-06
    2. 'can' → logprob: -11.875007629394531
    3. '	can' → logprob: -15.125007629394531
    4. 'Can' → logprob: -15.250007629394531
    5. '[v' → logprob: -15.875007629394531
    6. 'v' → logprob: -17.25000762939453
    7. '```' → logprob: -17.25000762939453
    8. '_CAN' → logprob: -17.62500762939453
    9. '[' → logprob: -18.00000762939453
    10. 'canf' → logprob: -18.25000762939453

Token 2450: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.45848218582978e-06
    2. ' [' → logprob: -13.75000286102295
    3. '[' → logprob: -14.00000286102295
    4. 'v' → logprob: -15.12500286102295
    5. '                           ' → logprob: -15.87500286102295
    6. '               ' → logprob: -17.125001907348633
    7. '(v' → logprob: -17.250001907348633
    8. '                   ' → logprob: -17.375001907348633
    9. '                               ' → logprob: -17.500001907348633
    10. '                       ' → logprob: -18.125001907348633

Token 2451: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.012048874981701374
    2. ']==' → logprob: -5.262048721313477
    3. ']' → logprob: -5.637048721313477
    4. ']:' → logprob: -6.387048721313477
    5. '+' → logprob: -7.887048721313477
    6. '                               ' → logprob: -8.387048721313477
    7. '                           ' → logprob: -8.512048721313477
    8. ':
' → logprob: -8.762048721313477
    9. '==' → logprob: -9.387048721313477
    10. '']:
' → logprob: -9.387048721313477

Token 2452: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0025322602596133947
    2. 'dp' → logprob: -7.002532482147217
    3. '                           ' → logprob: -7.877532482147217
    4. ' dp' → logprob: -8.502532005310059
    5. ':
' → logprob: -8.627532005310059
    6. '                                   ' → logprob: -8.877532005310059
    7. '                              ' → logprob: -9.002532005310059
    8. '```' → logprob: -9.127532005310059
    9. '(dp' → logprob: -9.502532005310059
    10. '                             ' → logprob: -9.752532005310059

Token 2453: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0031022541224956512
    2. '                               ' → logprob: -6.2531023025512695
    3. ' dp' → logprob: -6.7531023025512695
    4. '                                   ' → logprob: -12.62810230255127
    5. '                           ' → logprob: -14.00310230255127
    6. '	dp' → logprob: -14.62810230255127
    7. '   ' → logprob: -14.87810230255127
    8. '                                ' → logprob: -15.75310230255127
    9. '               ' → logprob: -15.87810230255127
    10. '(dp' → logprob: -16.128101348876953

Token 2454: '_can' (ID: 71644)
  Prédit: '_can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -4.961759259458631e-06
    2. 'can' → logprob: -12.625004768371582
    3. '	can' → logprob: -14.125004768371582
    4. '```' → logprob: -14.875004768371582
    5. '[' → logprob: -15.500004768371582
    6. '_CAN' → logprob: -17.2500057220459
    7. '_c' → logprob: -17.2500057220459
    8. ']' → logprob: -17.2500057220459
    9. '                           ' → logprob: -17.6250057220459
    10. 'canf' → logprob: -17.6250057220459

Token 2455: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1875571544806007e-05
    2. 'v' → logprob: -11.500011444091797
    3. '[' → logprob: -14.125011444091797
    4. '[c' → logprob: -15.000011444091797
    5. '                               ' → logprob: -15.375011444091797
    6. '                           ' → logprob: -15.625011444091797
    7. '[w' → logprob: -16.625011444091797
    8. ' [' → logprob: -16.875011444091797
    9. '                                   ' → logprob: -17.250011444091797
    10. '[
' → logprob: -17.375011444091797

Token 2456: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.07859880477190018
    2. ' +' → logprob: -2.953598737716675
    3. '+' → logprob: -3.953598737716675
    4. ']' → logprob: -5.828598976135254
    5. '|' → logprob: -7.203598976135254
    6. '[c' → logprob: -8.703598976135254
    7. 'v' → logprob: -8.828598976135254
    8. 'c' → logprob: -10.078598976135254
    9. ']=' → logprob: -10.453598976135254
    10. '[v' → logprob: -10.578598976135254

Token 2457: 'val' (ID: 1105)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.10325086861848831
    2. '_val' → logprob: -2.9782509803771973
    3. 'val' → logprob: -3.2282509803771973
    4. '_can' → logprob: -5.228250980377197
    5. 'al' → logprob: -6.478250980377197
    6. 'v' → logprob: -7.978250980377197
    7. '_an' → logprob: -8.728250503540039
    8. '_c' → logprob: -10.228250503540039
    9. '[val' → logprob: -10.353250503540039
    10. '_v' → logprob: -10.978250503540039

Token 2458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14573389291763306
    2. ']=' → logprob: -2.0207338333129883
    3. '=' → logprob: -5.895733833312988
    4. '=True' → logprob: -8.520733833312988
    5. ']+=' → logprob: -10.520733833312988
    6. '']=' → logprob: -10.770733833312988
    7. '|' → logprob: -11.270733833312988
    8. 'True' → logprob: -11.395733833312988
    9. '"]=' → logprob: -12.020733833312988
    10. ')' → logprob: -12.395733833312988

Token 2459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25212106108665466
    2. ' =' → logprob: -1.502121090888977
    3. '=True' → logprob: -8.627120971679688
    4. '|' → logprob: -12.127120971679688
    5. ']=' → logprob: -13.377120971679688
    6. '                           ' → logprob: -13.627120971679688
    7. ']' → logprob: -13.752120971679688
    8. ' |=' → logprob: -14.127120971679688
    9. '                               ' → logprob: -14.377120971679688
    10. '```' → logprob: -15.002120971679688

Token 2460: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.088346359931165e-07
    2. ' True' → logprob: -14.000000953674316
    3. '                           ' → logprob: -18.875
    4. 'true' → logprob: -19.625
    5. '                       ' → logprob: -20.0
    6. '                               ' → logprob: -20.5
    7. '(True' → logprob: -20.75
    8. '               ' → logprob: -21.375
    9. '=True' → logprob: -21.75
    10. '                   ' → logprob: -21.875

Token 2461: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31232643127441406
    2. '                               ' → logprob: -2.312326431274414
    3. '<|end|>' → logprob: -2.437326431274414
    4. '                           ' → logprob: -3.437326431274414
    5. '```' → logprob: -4.187326431274414
    6. ')' → logprob: -4.312326431274414
    7. '                   ' → logprob: -5.062326431274414
    8. '           ' → logprob: -5.187326431274414
    9. '                       ' → logprob: -5.687326431274414
    10. '#' → logprob: -6.937326431274414

Token 2462: '               ' (ID: 506)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.190400242805481
    2. '               ' → logprob: -1.440400242805481
    3. '```' → logprob: -1.565400242805481
    4. '<|end|>' → logprob: -1.815400242805481
    5. '                           ' → logprob: -3.1904001235961914
    6. ')' → logprob: -4.690400123596191
    7. '           ' → logprob: -4.815400123596191
    8. '                       ' → logprob: -5.065400123596191
    9. '                            ' → logprob: -5.940400123596191
    10. '                   ' → logprob: -5.940400123596191

Token 2463: ' can' (ID: 665)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02698630467057228
    2. 'if' → logprob: -3.6519863605499268
    3. ' if' → logprob: -7.651986122131348
    4. '```' → logprob: -9.026986122131348
    5. '                               ' → logprob: -9.901986122131348
    6. '                   ' → logprob: -10.901986122131348
    7. '           ' → logprob: -12.276986122131348
    8. '                       ' → logprob: -12.651986122131348
    9. '
' → logprob: -12.651986122131348
    10. '                           ' → logprob: -12.776986122131348

Token 2464: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.03194919973611832
    2. '_can' → logprob: -3.531949281692505
    3. '_make' → logprob: -6.156949043273926
    4. 'pay' → logprob: -9.781949043273926
    5. 'can' → logprob: -11.906949043273926
    6. '\' → logprob: -12.906949043273926
    7. '_buy' → logprob: -13.531949043273926
    8. '_have' → logprob: -13.781949043273926
    9. '_paid' → logprob: -13.781949043273926
    10. '=_' → logprob: -13.906949043273926

Token 2465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03323308378458023
    2. ' =' → logprob: -3.658233165740967
    3. '=True' → logprob: -5.033233165740967
    4. '               ' → logprob: -8.908232688903809
    5. '=False' → logprob: -9.033232688903809
    6. '==' → logprob: -9.783232688903809
    7. '                   ' → logprob: -11.158232688903809
    8. '=
' → logprob: -11.283232688903809
    9. '           ' → logprob: -11.783232688903809
    10. ':' → logprob: -11.908232688903809

Token 2466: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004080062732100487
    2. ' dp' → logprob: -5.504080295562744
    3. 'True' → logprob: -14.754079818725586
    4. '           ' → logprob: -15.129079818725586
    5. 'bool' → logprob: -15.504079818725586
    6. 'rest' → logprob: -15.504079818725586
    7. '               ' → logprob: -15.629079818725586
    8. '(dp' → logprob: -15.754079818725586
    9. '   ' → logprob: -16.754079818725586
    10. 'dt' → logprob: -17.004079818725586

Token 2467: '_can' (ID: 71644)
  Prédit: '_can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -1.8550976164988242e-05
    2. 'can' → logprob: -11.375018119812012
    3. '[' → logprob: -12.750018119812012
    4. 'Can' → logprob: -13.125018119812012
    5. '   ' → logprob: -14.625018119812012
    6. '	can' → logprob: -14.875018119812012
    7. '```' → logprob: -15.625018119812012
    8. 'True' → logprob: -15.875018119812012
    9. '
' → logprob: -16.125019073486328
    10. '=True' → logprob: -16.375019073486328

Token 2468: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020425561524461955
    2. '               ' → logprob: -9.500204086303711
    3. 'rest' → logprob: -9.500204086303711
    4. '[p' → logprob: -11.375204086303711
    5. '                   ' → logprob: -11.625204086303711
    6. '```' → logprob: -11.875204086303711
    7. ' [' → logprob: -12.125204086303711
    8. '           ' → logprob: -12.375204086303711
    9. '(rest' → logprob: -12.625204086303711
    10. '[-' → logprob: -13.375204086303711

Token 2469: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.981667537620524e-06
    2. ' rest' → logprob: -14.500001907348633
    3. '-rest' → logprob: -14.875001907348633
    4. '0' → logprob: -15.125001907348633
    5. '(rest' → logprob: -15.375001907348633
    6. '-' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.250001907348633
    8. '
' → logprob: -16.875001907348633
    9. '1' → logprob: -17.000001907348633
    10. '```' → logprob: -17.000001907348633

Token 2470: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -6.511406809295295e-06
    2. '_can' → logprob: -12.625006675720215
    3. 'pay' → logprob: -13.250006675720215
    4. '-pay' → logprob: -15.500006675720215
    5. '_PAY' → logprob: -15.750006675720215
    6. '+' → logprob: -15.750006675720215
    7. '_put' → logprob: -15.875006675720215
    8. '_play' → logprob: -16.2500057220459
    9. '_buy' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.5000057220459

Token 2471: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1183382049202919
    2. '               ' → logprob: -2.243338108062744
    3. '           ' → logprob: -5.368338108062744
    4. ')' → logprob: -8.243338584899902
    5. ']
' → logprob: -9.243338584899902
    6. ']==' → logprob: -9.743338584899902
    7. '       ' → logprob: -10.118338584899902
    8. '            ' → logprob: -10.118338584899902
    9. '[' → logprob: -10.243338584899902
    10. 'if' → logprob: -10.368338584899902

Token 2472: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010887817479670048
    2. ' if' → logprob: -7.376088619232178
    3. '                   ' → logprob: -8.751089096069336
    4. 'if' → logprob: -9.126089096069336
    5. '           ' → logprob: -9.501089096069336
    6. '<|end|>' → logprob: -10.501089096069336
    7. '```' → logprob: -10.501089096069336
    8. '                ' → logprob: -11.501089096069336
    9. '                
' → logprob: -11.626089096069336
    10. ',' → logprob: -11.751089096069336

Token 2473: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4756929278373718
    2. 'if' (adapté à ' if') → logprob: -0.9756929278373718
    3. ' if' → logprob: -6.4756927490234375
    4. '                   ' → logprob: -10.600692749023438
    5. '```' → logprob: -10.600692749023438
    6. '           ' → logprob: -10.850692749023438
    7. 'If' → logprob: -13.225692749023438
    8. '                
' → logprob: -14.225692749023438
    9. '                       ' → logprob: -14.600692749023438
    10. ';if' → logprob: -14.600692749023438

Token 2474: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04928049445152283
    2. 'not' → logprob: -3.0492804050445557
    3. ' can' → logprob: -7.674280643463135
    4. 'can' → logprob: -8.424280166625977
    5. '               ' → logprob: -12.049280166625977
    6. '(not' → logprob: -14.299280166625977
    7. '                   ' → logprob: -14.424280166625977
    8. '                ' → logprob: -14.674280166625977
    9. '           ' → logprob: -14.924280166625977
    10. 'False' → logprob: -15.924280166625977

Token 2475: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.1602267622947693
    2. ' can' → logprob: -1.910226821899414
    3. '	can' → logprob: -14.160226821899414
    4. '(can' → logprob: -14.660226821899414
    5. '               ' → logprob: -14.785226821899414
    6. ' not' → logprob: -15.035226821899414
    7. '_can' → logprob: -15.285226821899414
    8. '           ' → logprob: -16.160226821899414
    9. ' ' → logprob: -16.160226821899414
    10. '   ' → logprob: -16.285226821899414

Token 2476: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -5.097437315271236e-05
    2. 'pay' → logprob: -10.00005054473877
    3. '_buy' → logprob: -13.00005054473877
    4. 'apay' → logprob: -14.00005054473877
    5. '_p' → logprob: -14.87505054473877
    6. 'ay' → logprob: -15.12505054473877
    7. '-pay' → logprob: -15.25005054473877
    8. 'p' → logprob: -15.37505054473877
    9. '_PAY' → logprob: -15.50005054473877
    10. 'Pay' → logprob: -16.125051498413086

Token 2477: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.043355632573366165
    2. ':' → logprob: -3.418355703353882
    3. ':
' → logprob: -4.793355464935303
    4. '               ' → logprob: -7.793355464935303
    5. 'continue' → logprob: -7.793355464935303
    6. ' continue' → logprob: -7.918355464935303
    7. '                       ' → logprob: -9.168355941772461
    8. '                           ' → logprob: -10.668355941772461
    9. '	continue' → logprob: -10.668355941772461
    10. '				' → logprob: -11.543355941772461

Token 2478: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.069664333248511e-05
    2. 'continue' → logprob: -11.125020980834961
    3. ' continue' → logprob: -12.875020980834961
    4. '               ' → logprob: -13.500020980834961
    5. '				' → logprob: -14.500020980834961
    6. '                       ' → logprob: -14.875020980834961
    7. '   ' → logprob: -15.125020980834961
    8. '		           ' → logprob: -15.125020980834961
    9. '	               ' → logprob: -15.500020980834961
    10. '```' → logprob: -16.00002098083496

Token 2479: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.052883170545101166
    2. 'continue' (adapté à ' continue') → logprob: -3.0528831481933594
    3. '                       ' → logprob: -5.802883148193359
    4. ' continue' → logprob: -7.052883148193359
    5. '               ' → logprob: -8.80288314819336
    6. '	continue' → logprob: -9.42788314819336
    7. '```' → logprob: -9.55288314819336
    8. '				' → logprob: -9.80288314819336
    9. '   ' → logprob: -10.92788314819336
    10. '	               ' → logprob: -11.42788314819336

Token 2480: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0107642263174057
    2. '                
' → logprob: -4.635764122009277
    3. '```' → logprob: -8.635764122009277
    4. '
' → logprob: -8.760764122009277
    5. '  
' → logprob: -8.885764122009277
    6. '                    
' → logprob: -9.135764122009277
    7. '    
' → logprob: -9.760764122009277
    8. '<|end|>' → logprob: -9.885764122009277
    9. '                   ' → logprob: -10.135764122009277
    10. '               
' → logprob: -10.260764122009277

Token 2481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0077361734583973885
    2. '                
' → logprob: -5.0077362060546875
    3. '
' → logprob: -7.0077362060546875
    4. '```' → logprob: -9.882736206054688
    5. '                    
' → logprob: -10.882736206054688
    6. '#' → logprob: -11.507736206054688
    7. '                   ' → logprob: -11.632736206054688
    8. '    
' → logprob: -12.132736206054688
    9. '               
' → logprob: -12.507736206054688
    10. '                

' → logprob: -13.132736206054688

Token 2482: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1638069450855255
    2. '#' (adapté à ' #') → logprob: -1.9138069152832031
    3. 'coins' → logprob: -6.163806915283203
    4. 'pay' → logprob: -7.413806915283203
    5. 'coin' → logprob: -7.413806915283203
    6. '                   ' → logprob: -9.288806915283203
    7. '```' → logprob: -10.163806915283203
    8. '                
' → logprob: -11.038806915283203
    9. ' #' → logprob: -11.163806915283203
    10. 'payment' → logprob: -11.413806915283203

Token 2483: ' Si' (ID: 7832)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016241278499364853
    2. '#' → logprob: -4.516241073608398
    3. 'coins' → logprob: -6.141241073608398
    4. 'pay' → logprob: -6.641241073608398
    5. 'coin' → logprob: -8.391241073608398
    6. 'rest' → logprob: -8.516241073608398
    7. '```' → logprob: -8.766241073608398
    8. '                
' → logprob: -9.016241073608398
    9. 'remaining' → logprob: -9.141241073608398
    10. 'new' → logprob: -9.141241073608398

Token 2484: ' on' (ID: 402)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7861039042472839
    2. ' True' → logprob: -1.6611039638519287
    3. ' not' → logprob: -1.7861039638519287
    4. 'not' → logprob: -2.1611039638519287
    5. 'can' → logprob: -4.03610372543335
    6. 'num' → logprob: -4.53610372543335
    7. 'pay' → logprob: -4.66110372543335
    8. 'coins' → logprob: -4.66110372543335
    9. ' can' → logprob: -5.03610372543335
    10. ' pay' → logprob: -5.41110372543335

Token 2485: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.015013943426311016
    2. 'p' → logprob: -5.390014171600342
    3. 'arr' → logprob: -5.640014171600342
    4. 'reach' → logprob: -6.890014171600342
    5. 've' → logprob: -7.015014171600342
    6. 'contin' → logprob: -7.015014171600342
    7. '           ' → logprob: -7.015014171600342
    8. '#' → logprob: -7.640014171600342
    9. 'est' → logprob: -8.265013694763184
    10. '       ' → logprob: -8.515013694763184

Token 2486: ' payer' (ID: 63614)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.03167910501360893
    2. ' payer' → logprob: -3.781679153442383
    3. 'p' → logprob: -5.031679153442383
    4. 'pay' → logprob: -7.406679153442383
    5. '       ' → logprob: -7.781679153442383
    6. 'don' → logprob: -8.781679153442383
    7. '   ' → logprob: -8.906679153442383
    8. 'util' → logprob: -9.406679153442383
    9. 'faire' → logprob: -9.656679153442383
    10. 'pai' → logprob: -9.781679153442383

Token 2487: ' pay' (ID: 2777)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20628146827220917
    2. ',' → logprob: -2.0812814235687256
    3. ' avec' → logprob: -3.9562814235687256
    4. '                   ' → logprob: -3.9562814235687256
    5. ':
' → logprob: -5.331281661987305
    6. ':' → logprob: -5.706281661987305
    7. 'avec' → logprob: -5.706281661987305
    8. '                ' → logprob: -5.831281661987305
    9. '                
' → logprob: -6.081281661987305
    10. '#' → logprob: -6.331281661987305

Token 2488: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7213144302368164
    2. ':' → logprob: -1.5963144302368164
    3. ' avec' → logprob: -1.9713144302368164
    4. '                   ' → logprob: -2.9713144302368164
    5. ':
' → logprob: -3.0963144302368164
    6. '               ' → logprob: -3.4713144302368164
    7. 'avec' → logprob: -4.471314430236816
    8. 'en' → logprob: -4.721314430236816
    9. ' en' → logprob: -5.221314430236816
    10. ' with' → logprob: -6.346314430236816

Token 2489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015237617306411266
    2. '                   ' → logprob: -4.515237808227539
    3. '```' → logprob: -6.140237808227539
    4. '                ' → logprob: -7.265237808227539
    5. '                
' → logprob: -7.390237808227539
    6. ' #' → logprob: -8.390237808227539
    7. '           ' → logprob: -9.640237808227539
    8. '#' → logprob: -9.890237808227539
    9. '                    
' → logprob: -9.890237808227539
    10. '                       ' → logprob: -10.015237808227539

Token 2490: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10716888308525085
    2. '#' (adapté à ' #') → logprob: -2.6071689128875732
    3. ' #' → logprob: -3.7321689128875732
    4. 'coins' → logprob: -6.732168674468994
    5. '                
' → logprob: -7.732168674468994
    6. '                   ' → logprob: -7.982168674468994
    7. 'coin' → logprob: -8.107169151306152
    8. '```' → logprob: -8.357169151306152
    9. '
' → logprob: -8.482169151306152
    10. ' ' → logprob: -8.732169151306152

Token 2491: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32799601554870605
    2. '#' → logprob: -1.702996015548706
    3. 'coins' → logprob: -2.577996015548706
    4. 'pay' → logprob: -4.827996253967285
    5. 'payer' → logprob: -5.327996253967285
    6. 'don' → logprob: -5.827996253967285
    7. 'given' → logprob: -6.327996253967285
    8. 'coin' → logprob: -6.827996253967285
    9. 'pieces' → logprob: -7.202996253967285
    10. ' #' → logprob: -8.327996253967285

Token 2492: ' enl' (ID: 116494)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.885492742061615
    2. 'continue' → logprob: -1.2604928016662598
    3. 'do' → logprob: -1.5104928016662598
    4. '               ' → logprob: -3.6354928016662598
    5. '           ' → logprob: -4.63549280166626
    6. 'pe' → logprob: -4.76049280166626
    7. '       ' → logprob: -5.26049280166626
    8. 'dev' → logprob: -5.88549280166626
    9. 'contin' → logprob: -5.88549280166626
    10. ' #' → logprob: -6.01049280166626

Token 2493: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.04627590626478195
    2. 'eve' → logprob: -3.1712758541107178
    3. 'ever' → logprob: -6.421276092529297
    4. 'e' → logprob: -6.546276092529297
    5. 'ev' → logprob: -9.296276092529297
    6. 'ver' → logprob: -10.546276092529297
    7. 'èves' → logprob: -10.546276092529297
    8. 'erve' → logprob: -10.796276092529297
    9. 'è' → logprob: -11.171276092529297
    10. 'eva' → logprob: -12.296276092529297

Token 2494: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.12185996770858765
    2. 'des' → logprob: -2.7468600273132324
    3. ' les' → logprob: -3.7468600273132324
    4. ' des' → logprob: -4.496860027313232
    5. 'from' → logprob: -5.621860027313232
    6. 'the' → logprob: -5.871860027313232
    7. 'coins' → logprob: -6.246860027313232
    8. '```' → logprob: -6.371860027313232
    9. 'pay' → logprob: -6.996860027313232
    10. '   ' → logprob: -7.246860027313232

Token 2495: ' pièces' (ID: 49165)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.7136403322219849
    2. 'coins' → logprob: -0.8386403322219849
    3. 'pi' → logprob: -2.8386402130126953
    4. '#' → logprob: -4.338640213012695
    5. 'pay' → logprob: -7.213640213012695
    6. '[' → logprob: -7.338640213012695
    7. 'co' → logprob: -7.463640213012695
    8. 'bil' → logprob: -7.463640213012695
    9. 'b' → logprob: -7.463640213012695
    10. 'paid' → logprob: -8.463640213012695

Token 2496: ' utilisées' (ID: 130009)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -1.5519640445709229
    2. '               ' → logprob: -1.6769640445709229
    3. ' utilisées' → logprob: -2.301964044570923
    4. 'pay' → logprob: -2.426964044570923
    5. ' pay' → logprob: -2.426964044570923
    6. 'd' → logprob: -2.801964044570923
    7. '   ' → logprob: -3.301964044570923
    8. 'don' → logprob: -3.301964044570923
    9. '```' → logprob: -3.801964044570923
    10. 'util' → logprob: -3.926964044570923

Token 2497: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21336279809474945
    2. '                ' → logprob: -2.713362693786621
    3. ',' → logprob: -3.588362693786621
    4. ' for' → logprob: -3.838362693786621
    5. ' (' → logprob: -4.838362693786621
    6. '<|end|>' → logprob: -4.838362693786621
    7. '                
' → logprob: -4.963362693786621
    8. ' tokens' → logprob: -5.213362693786621
    9. '                   ' → logprob: -5.588362693786621
    10. ' des' → logprob: -5.713362693786621

Token 2498: ' payer' (ID: 63614)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.1812296062707901
    2. 'pay' → logprob: -1.931229591369629
    3. 'p' → logprob: -3.931229591369629
    4. 'pai' → logprob: -7.306229591369629
    5. 'rest' → logprob: -9.181229591369629
    6. '```' → logprob: -9.181229591369629
    7. 'payment' → logprob: -9.431229591369629
    8. 'coins' → logprob: -9.681229591369629
    9. 'for' → logprob: -10.181229591369629
    10. 'faire' → logprob: -10.681229591369629

Token 2499: ' rest' (ID: 2867)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5567699074745178
    2. '                ' → logprob: -1.556769847869873
    3. '<|end|>' → logprob: -2.056769847869873
    4. '<|end|>' → logprob: -4.056769847869873
    5. ',' → logprob: -4.306769847869873
    6. '                
' → logprob: -4.931769847869873
    7. ' (' → logprob: -5.181769847869873
    8. '[' → logprob: -5.181769847869873
    9. ')' → logprob: -5.431769847869873
    10. '...' → logprob: -5.681769847869873

Token 2500: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -4.704065213445574e-05
    2. 'pay' → logprob: -11.125046730041504
    3. '               ' → logprob: -11.625046730041504
    4. '_play' → logprob: -11.750046730041504
    5. '   ' → logprob: -12.375046730041504
    6. '_rest' → logprob: -12.500046730041504
    7. ' _' → logprob: -13.375046730041504
    8. '                   ' → logprob: -14.000046730041504
    9. '_payment' → logprob: -14.375046730041504
    10. '```' → logprob: -14.500046730041504

Token 2501: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3715267479419708
    2. '                ' → logprob: -1.8715267181396484
    3. '<|end|>' → logprob: -2.9965267181396484
    4. ',' → logprob: -3.1215267181396484
    5. '[' → logprob: -4.496526718139648
    6. '              ' → logprob: -4.621526718139648
    7. ' (' → logprob: -4.996526718139648
    8. '                
' → logprob: -5.621526718139648
    9. '<|end|>' → logprob: -5.621526718139648
    10. '...' → logprob: -5.996526718139648

Token 2502: 'exact' (ID: 86898)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2386370450258255
    2. ')' → logprob: -3.3636369705200195
    3. 'rest' → logprob: -3.4886369705200195
    4. 'coins' → logprob: -4.1136369705200195
    5. '               ' → logprob: -4.2386369705200195
    6. 'found' → logprob: -4.2386369705200195
    7. 'used' → logprob: -4.4886369705200195
    8. 'et' → logprob: -4.6136369705200195
    9. 'don' → logprob: -5.1136369705200195
    10. ' #' → logprob: -5.2386369705200195

Token 2503: ')
' (ID: 446)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.7748268842697144
    2. 'amount' → logprob: -1.8998268842697144
    3. 'coins' → logprob: -2.399827003479004
    4. 'change' → logprob: -2.899827003479004
    5. ' coins' → logprob: -3.149827003479004
    6. 'e' → logprob: -3.149827003479004
    7. ' amount' → logprob: -3.774827003479004
    8. '_amount' → logprob: -4.024827003479004
    9. '```' → logprob: -4.024827003479004
    10. 'ly' → logprob: -4.149827003479004

Token 2504: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035384465008974075
    2. '                ' → logprob: -3.9103844165802
    3. '                
' → logprob: -5.410384654998779
    4. ',' → logprob: -6.285384654998779
    5. ' (' → logprob: -6.285384654998779
    6. '```' → logprob: -6.410384654998779
    7. '                   ' → logprob: -6.660384654998779
    8. '#' → logprob: -6.785384654998779
    9. ' #' → logprob: -7.660384654998779
    10. '              ' → logprob: -8.160384178161621

Token 2505: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6682359576225281
    2. '               ' → logprob: -1.2932360172271729
    3. '                ' → logprob: -2.418236017227173
    4. ' #' → logprob: -2.918236017227173
    5. ' tokens' → logprob: -4.168235778808594
    6. 'tokens' → logprob: -4.418235778808594
    7. '```' → logprob: -4.543235778808594
    8. '[' → logprob: -5.293235778808594
    9. '                
' → logprob: -5.418235778808594
    10. '                   ' → logprob: -5.918235778808594

Token 2506: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017342928797006607
    2. '#' → logprob: -4.392343044281006
    3. '                
' → logprob: -5.642343044281006
    4. '
' → logprob: -8.142342567443848
    5. '```' → logprob: -8.267342567443848
    6. '+' → logprob: -8.392342567443848
    7. 'tokens' → logprob: -8.892342567443848
    8. 'used' → logprob: -9.517342567443848
    9. 'rest' → logprob: -10.142342567443848
    10. 'from' → logprob: -10.392342567443848

Token 2507: ' ajoute' (ID: 91611)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.8218346834182739
    2. 'continue' → logprob: -1.196834683418274
    3. '#' → logprob: -2.0718345642089844
    4. 're' → logprob: -3.8218345642089844
    5. 'ré' → logprob: -4.071834564208984
    6. 'cherche' → logprob: -4.071834564208984
    7. 'def' → logprob: -4.571834564208984
    8. 'n' → logprob: -4.696834564208984
    9. 'f' → logprob: -4.821834564208984
    10. 'essa' → logprob: -5.071834564208984

Token 2508: ' les' (ID: 1341)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8253176808357239
    2. 'les' → logprob: -1.075317621231079
    3. 'change' → logprob: -2.450317621231079
    4. ' les' → logprob: -2.825317621231079
    5. ' the' → logprob: -3.950317621231079
    6. 'le' → logprob: -4.325317859649658
    7. ' celles' → logprob: -5.450317859649658
    8. 'tokens' → logprob: -5.450317859649658
    9. '```' → logprob: -5.575317859649658
    10. '<|end|>' → logprob: -5.825317859649658

Token 2509: ' pièces' (ID: 49165)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.6013667583465576
    2. 'coins' → logprob: -1.1013667583465576
    3. 'pieces' → logprob: -2.3513667583465576
    4. '500' → logprob: -5.101366996765137
    5. '{' → logprob: -5.851366996765137
    6. 'co' → logprob: -6.101366996765137
    7. 'bil' → logprob: -6.226366996765137
    8. 'tokens' → logprob: -6.351366996765137
    9. 'dict' → logprob: -6.351366996765137
    10. 'b' → logprob: -6.601366996765137

Token 2510: ' de' (ID: 334)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6394131183624268
    2. '               ' → logprob: -1.7644131183624268
    3. 'r' → logprob: -1.8894131183624268
    4. 'used' → logprob: -2.1394131183624268
    5. 'pay' → logprob: -2.6394131183624268
    6. 'util' → logprob: -3.1394131183624268
    7. '   ' → logprob: -3.2644131183624268
    8. '       ' → logprob: -3.3894131183624268
    9. '500' → logprob: -3.8894131183624268
    10. '                   ' → logprob: -4.139412879943848

Token 2511: ' la' (ID: 557)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.2874564230442047
    2. 'r' → logprob: -1.7874563932418823
    3. 'la' → logprob: -3.162456512451172
    4. 'mon' → logprob: -4.162456512451172
    5. '500' → logprob: -5.537456512451172
    6. '```' → logprob: -5.662456512451172
    7. 'l' → logprob: -6.037456512451172
    8. '#' → logprob: -6.662456512451172
    9. 'payment' → logprob: -6.662456512451172
    10. 'c' → logprob: -6.662456512451172

Token 2512: ' monnaie' (ID: 168963)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.30251365900039673
    2. 'mon' → logprob: -1.927513599395752
    3. 'r' → logprob: -2.677513599395752
    4. 'dict' → logprob: -4.552513599395752
    5. ' monnaie' → logprob: -4.802513599395752
    6. 'c' → logprob: -5.552513599395752
    7. '500' → logprob: -6.052513599395752
    8. 'sub' → logprob: -6.052513599395752
    9. '```' → logprob: -6.177513599395752
    10. 'def' → logprob: -6.427513599395752

Token 2513: ' rend' (ID: 15016)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13750851154327393
    2. 'rend' → logprob: -2.8875083923339844
    3. ' rend' → logprob: -3.0125083923339844
    4. '500' → logprob: -5.137508392333984
    5. '               ' → logprob: -5.512508392333984
    6. ' rendu' → logprob: -5.887508392333984
    7. 'render' → logprob: -6.137508392333984
    8. '       ' → logprob: -6.387508392333984
    9. ' r' → logprob: -6.887508392333984
    10. '   ' → logprob: -6.887508392333984

Token 2514: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00042054426739923656
    2. 'ues' → logprob: -8.000420570373535
    3. 'e' → logprob: -10.750420570373535
    4. 'ee' → logprob: -10.750420570373535
    5. 'ée' → logprob: -11.875420570373535
    6. 'te' → logprob: -12.500420570373535
    7. 'u' → logprob: -12.750420570373535
    8. '#' → logprob: -12.875420570373535
    9. '
' → logprob: -13.000420570373535
    10. '=' → logprob: -13.125420570373535

Token 2515: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00243595102801919
    2. '                ' → logprob: -7.75243616104126
    3. '                
' → logprob: -8.002435684204102
    4. '...' → logprob: -8.127435684204102
    5. '<|end|>' → logprob: -8.377435684204102
    6. '[' → logprob: -8.627435684204102
    7. '                   ' → logprob: -8.752435684204102
    8. ')' → logprob: -9.127435684204102
    9. '<|end|>' → logprob: -9.127435684204102
    10. ',' → logprob: -9.377435684204102

Token 2516: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.584555983543396
    2. 'pay' → logprob: -1.709555983543396
    3. '{' → logprob: -3.0845561027526855
    4. '{
' → logprob: -3.4595561027526855
    5. '500' → logprob: -3.4595561027526855
    6. ')' → logprob: -3.9595561027526855
    7. 'coins' → logprob: -3.9595561027526855
    8. 'rest' → logprob: -4.2095561027526855
    9. '```' → logprob: -4.5845561027526855
    10. '       ' → logprob: -4.5845561027526855

Token 2517: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.14741472899913788
    2. ')' → logprob: -3.3974146842956543
    3. ')
' → logprob: -3.3974146842956543
    4. '```' → logprob: -4.272414684295654
    5. '               ' → logprob: -4.772414684295654
    6. '_given' → logprob: -5.147414684295654
    7. '
' → logprob: -5.522414684295654
    8. '       ' → logprob: -6.022414684295654
    9. '))' → logprob: -6.022414684295654
    10. '   ' → logprob: -6.022414684295654

Token 2518: 'ins' (ID: 1564)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.05926380679011345
    2. 'ins' → logprob: -3.1842637062072754
    3. 'is' → logprob: -4.934263706207275
    4. 'coins' → logprob: -5.809263706207275
    5. 'its' → logprob: -6.934263706207275
    6. 'on' → logprob: -6.934263706207275
    7. 'Coins' → logprob: -7.309263706207275
    8. 'ies' → logprob: -8.184264183044434
    9. 'isons' → logprob: -8.309264183044434
    10. '```' → logprob: -8.434264183044434

Token 2519: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3160771131515503
    2. ')
' → logprob: -1.6910771131515503
    3. '),' → logprob: -2.94107723236084
    4. '               ' → logprob: -3.81607723236084
    5. ',' → logprob: -4.94107723236084
    6. ').' → logprob: -6.94107723236084
    7. ')

' → logprob: -7.06607723236084
    8. '                   ' → logprob: -7.19107723236084
    9. '):
' → logprob: -7.44107723236084
    10. '
' → logprob: -8.56607723236084

Token 2520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003142539644613862
    2. '                
' → logprob: -6.378142356872559
    3. '```' → logprob: -7.503142356872559
    4. '                ' → logprob: -7.878142356872559
    5. '                   ' → logprob: -9.378142356872559
    6. '              ' → logprob: -9.503142356872559
    7. '#' → logprob: -10.128142356872559
    8. '[' → logprob: -10.253142356872559
    9. '               
' → logprob: -10.503142356872559
    10. '           ' → logprob: -10.628142356872559

Token 2521: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23498858511447906
    2. '#' (adapté à ' #') → logprob: -1.6099885702133179
    3. ' #' → logprob: -5.859988689422607
    4. 'used' → logprob: -6.109988689422607
    5. 'coins' → logprob: -6.609988689422607
    6. 'pay' → logprob: -6.734988689422607
    7. 'usage' → logprob: -6.984988689422607
    8. 'coin' → logprob: -8.35998821258545
    9. 'def' → logprob: -8.60998821258545
    10. '                
' → logprob: -8.98498821258545

Token 2522: ' Pour' (ID: 13931)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20466886460781097
    2. '#' → logprob: -1.9546688795089722
    3. ' #' → logprob: -3.9546687602996826
    4. 'coins' → logprob: -4.579668998718262
    5. 'used' → logprob: -5.079668998718262
    6. 'pay' → logprob: -6.329668998718262
    7. ' used' → logprob: -6.329668998718262
    8. ' coins' → logprob: -6.954668998718262
    9. 'rest' → logprob: -7.454668998718262
    10. 'usage' → logprob: -7.579668998718262

Token 2523: ' enlever' (ID: 196982)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.7760592103004456
    2. 'used' → logprob: -1.5260591506958008
    3. 'pay' → logprob: -2.526059150695801
    4. 'i' → logprob: -2.651059150695801
    5. 'p' → logprob: -3.276059150695801
    6. 'rest' → logprob: -3.526059150695801
    7. 'pi' → logprob: -4.401059150695801
    8. 'util' → logprob: -4.651059150695801
    9. 'ci' → logprob: -4.776059150695801
    10. '#' → logprob: -4.776059150695801

Token 2524: ' pièces' (ID: 49165)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ci' → logprob: -1.3884177207946777
    2. 'les' → logprob: -1.8884177207946777
    3. 'i' → logprob: -2.0134177207946777
    4. 'coins' → logprob: -2.2634177207946777
    5. 'used' → logprob: -2.8884177207946777
    6. 'the' → logprob: -3.1384177207946777
    7. ' ci' → logprob: -3.1384177207946777
    8. 'rest' → logprob: -3.3884177207946777
    9. 'pay' → logprob: -3.5134177207946777
    10. ' les' → logprob: -3.6384177207946777

Token 2525: ' utilisées' (ID: 130009)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.33812010288238525
    2. '#' → logprob: -2.9631199836730957
    3. 'needed' → logprob: -3.0881199836730957
    4. '   ' → logprob: -3.7131199836730957
    5. 'for' → logprob: -3.7131199836730957
    6. '_used' → logprob: -3.8381199836730957
    7. 'pay' → logprob: -4.338119983673096
    8. '_needed' → logprob: -4.338119983673096
    9. 'poss' → logprob: -4.588119983673096
    10. '               ' → logprob: -4.963119983673096

Token 2526: ' :
' (ID: 10039)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15450520813465118
    2. '#' → logprob: -3.0295052528381348
    3. 'used' → logprob: -3.0295052528381348
    4. 'for' → logprob: -4.404505252838135
    5. ' used' → logprob: -5.029505252838135
    6. ',' → logprob: -5.279505252838135
    7. 'rest' → logprob: -5.404505252838135
    8. ' for' → logprob: -5.904505252838135
    9. '
' → logprob: -6.529505252838135
    10. ' #' → logprob: -6.529505252838135

Token 2527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014372339472174644
    2. '```' → logprob: -5.0143723487854
    3. '                ' → logprob: -5.1393723487854
    4. '                
' → logprob: -7.7643723487854
    5. ' rest' → logprob: -8.639371871948242
    6. ' #' → logprob: -8.764371871948242
    7. '#' → logprob: -8.889371871948242
    8. '              ' → logprob: -8.889371871948242
    9. 'rest' → logprob: -8.889371871948242
    10. ' tokens' → logprob: -9.014371871948242

Token 2528: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7329361438751221
    2. '#' (adapté à ' #') → logprob: -1.107936143875122
    3. ' #' → logprob: -2.482936143875122
    4. 'used' → logprob: -2.982936143875122
    5. ' used' → logprob: -3.982936143875122
    6. 'pay' → logprob: -4.482935905456543
    7. 'rest' → logprob: -4.607935905456543
    8. 'usage' → logprob: -5.982935905456543
    9. 'coins' → logprob: -6.107935905456543
    10. '```' → logprob: -6.732935905456543

Token 2529: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4282841980457306
    2. 'used' → logprob: -1.3032841682434082
    3. '               ' → logprob: -2.803284168243408
    4. 'found' → logprob: -5.678284168243408
    5. 'for' → logprob: -6.178284168243408
    6. 'best' → logprob: -6.428284168243408
    7. 'rest' → logprob: -6.553284168243408
    8. 'coins' → logprob: -7.178284168243408
    9. 'dp' → logprob: -7.178284168243408
    10. '```' → logprob: -7.178284168243408

Token 2530: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10360763221979141
    2. 'do' → logprob: -2.853607654571533
    3. 'def' → logprob: -3.978607654571533
    4. 'util' → logprob: -4.853607654571533
    5. 'f' → logprob: -5.478607654571533
    6. 'pe' → logprob: -6.853607654571533
    7. 'cherche' → logprob: -6.853607654571533
    8. 'continue' → logprob: -6.978607654571533
    9. 'for' → logprob: -7.478607654571533
    10. 'en' → logprob: -7.478607654571533

Token 2531: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.317047357559204
    2. 'en' → logprob: -1.942047357559204
    3. 're' → logprob: -2.567047357559204
    4. '#' → logprob: -2.817047357559204
    5. 'faire' → logprob: -3.067047357559204
    6. 'cho' → logprob: -3.192047357559204
    7. 'find' → logprob: -3.317047357559204
    8. 'ret' → logprob: -3.317047357559204
    9. 'prendre' → logprob: -3.692047357559204
    10. 'enumer' → logprob: -3.692047357559204

Token 2532: ' une' (ID: 2463)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.759989321231842
    2. '#' → logprob: -1.6349892616271973
    3. 'les' → logprob: -2.2599892616271973
    4. 'la' → logprob: -2.6349892616271973
    5. 'une' → logprob: -3.2599892616271973
    6. 'coins' → logprob: -3.8849892616271973
    7. 'def' → logprob: -4.009989261627197
    8. 'for' → logprob: -4.134989261627197
    9. 'comb' → logprob: -4.759989261627197
    10. 'the' → logprob: -4.759989261627197

Token 2533: ' combinaison' (ID: 165933)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.877996563911438
    2. 'def' → logprob: -1.002996563911438
    3. '#' → logprob: -2.2529964447021484
    4. 'dp' → logprob: -3.2529964447021484
    5. 'way' → logprob: -4.002996444702148
    6. 'from' → logprob: -4.502996444702148
    7. 'comb' → logprob: -4.502996444702148
    8. 'usage' → logprob: -4.877996444702148
    9. 'pay' → logprob: -5.252996444702148
    10. 'use' → logprob: -5.377996444702148

Token 2534: ' d' (ID: 272)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.9122114181518555
    2. 'possible' → logprob: -1.4122114181518555
    3. 'de' → logprob: -1.6622114181518555
    4. ' de' → logprob: -3.2872114181518555
    5. ' possible' → logprob: -3.5372114181518555
    6. ' exact' → logprob: -3.6622114181518555
    7. 'of' → logprob: -3.7872114181518555
    8. ' of' → logprob: -4.2872114181518555
    9. ' exacte' → logprob: -4.9122114181518555
    10. '```' → logprob: -5.7872114181518555

Token 2535: ''utilisation' (ID: 73991)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.08335413038730621
    2. 'pieces' → logprob: -2.8333542346954346
    3. 'coins' → logprob: -4.2083539962768555
    4. '```' → logprob: -6.3333539962768555
    5. 'rest' → logprob: -6.7083539962768555
    6. ' pièces' → logprob: -6.8333539962768555
    7. 'les' → logprob: -7.2083539962768555
    8. '#' → logprob: -8.958353996276855
    9. 'ces' → logprob: -9.208353996276855
    10. '``' → logprob: -9.333353996276855

Token 2536: ' des' (ID: 731)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9955509901046753
    2. ' possible' → logprob: -1.4955509901046753
    3. '               ' → logprob: -2.620551109313965
    4. 'des' → logprob: -2.870551109313965
    5. '_possible' → logprob: -3.620551109313965
    6. ' des' → logprob: -3.620551109313965
    7. 'exact' → logprob: -3.620551109313965
    8. '<|end|>' → logprob: -3.745551109313965
    9. 'de' → logprob: -3.870551109313965
    10. '                   ' → logprob: -4.120551109313965

Token 2537: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.04016552120447159
    2. 'pieces' → logprob: -3.790165424346924
    3. 'coins' → logprob: -4.165165424346924
    4. ' pièces' → logprob: -7.665165424346924
    5. '```' → logprob: -8.165165901184082
    6. 'rest' → logprob: -8.540165901184082
    7. '#' → logprob: -9.915165901184082
    8. ' pi' → logprob: -10.040165901184082
    9. 'co' → logprob: -10.540165901184082
    10. 'pe' → logprob: -11.040165901184082

Token 2538: ' pour' (ID: 1930)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.9803325533866882
    2. '_exact' → logprob: -1.480332612991333
    3. ' exact' → logprob: -1.855332612991333
    4. 'possible' → logprob: -2.730332612991333
    5. ' exacte' → logprob: -3.105332612991333
    6. '_possible' → logprob: -3.230332612991333
    7. ' possible' → logprob: -3.730332612991333
    8. '<|end|>' → logprob: -4.730332374572754
    9. ' optimale' → logprob: -4.980332374572754
    10. ' rest' → logprob: -5.105332374572754

Token 2539: ' rest' (ID: 2867)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.36552050709724426
    2. 'pay' → logprob: -1.4905204772949219
    3. 'rest' → logprob: -2.865520477294922
    4. 'p' → logprob: -3.990520477294922
    5. 're' → logprob: -6.490520477294922
    6. '```' → logprob: -7.115520477294922
    7. 'exact' → logprob: -7.365520477294922
    8. '#' → logprob: -7.490520477294922
    9. 'pai' → logprob: -7.490520477294922
    10. 'rem' → logprob: -8.365520477294922

Token 2540: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -7.465036105713807e-06
    2. '_pack' → logprob: -13.750007629394531
    3. '   ' → logprob: -13.875007629394531
    4. 'pay' → logprob: -13.875007629394531
    5. '_p' → logprob: -14.250007629394531
    6. '_pop' → logprob: -14.500007629394531
    7. '               ' → logprob: -14.625007629394531
    8. '_' → logprob: -14.875007629394531
    9. '_PAY' → logprob: -15.250007629394531
    10. '       ' → logprob: -15.375007629394531

Token 2541: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8469638824462891
    2. '               ' → logprob: -0.9719638824462891
    3. '                ' → logprob: -2.471963882446289
    4. ')' → logprob: -3.846963882446289
    5. ',' → logprob: -4.221963882446289
    6. ' (' → logprob: -4.596963882446289
    7. ':' → logprob: -4.846963882446289
    8. '```' → logprob: -5.096963882446289
    9. '(' → logprob: -5.471963882446289
    10. '#' → logprob: -5.471963882446289

Token 2542: '               ' (ID: 506)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.9238213896751404
    2. '```' → logprob: -1.4238214492797852
    3. '               ' → logprob: -1.6738214492797852
    4. '[' → logprob: -2.673821449279785
    5. '#' → logprob: -4.298821449279785
    6. ' for' → logprob: -4.423821449279785
    7. ' ' → logprob: -4.673821449279785
    8. '``' → logprob: -4.923821449279785
    9. '                
' → logprob: -5.048821449279785
    10. 'tokens' → logprob: -5.048821449279785

Token 2543: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0138378143310547
    2. ' tokens' → logprob: -2.0138378143310547
    3. '```' → logprob: -2.1388378143310547
    4. ' rest' → logprob: -2.5138378143310547
    5. 'tokens' → logprob: -2.6388378143310547
    6. '#' (adapté à ' #') → logprob: -2.6388378143310547
    7. ' for' → logprob: -2.7638378143310547
    8. '               ' → logprob: -3.0138378143310547
    9. '                ' → logprob: -3.5138378143310547
    10. ' #' → logprob: -3.6388378143310547

Token 2544: ' On' (ID: 2160)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8315322399139404
    2. '                ' → logprob: -1.8315322399139404
    3. '#' → logprob: -2.3315322399139404
    4. ' used' → logprob: -2.8315322399139404
    5. ' #' → logprob: -3.0815322399139404
    6. ' for' → logprob: -3.7065322399139404
    7. '``' → logprob: -3.8315322399139404
    8. 'tokens' → logprob: -3.8315322399139404
    9. ' tokens' → logprob: -4.2065324783325195
    10. '               ' → logprob: -4.2065324783325195

Token 2545: ' récup' (ID: 62856)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008743274956941605
    2. 'do' → logprob: -5.6337432861328125
    3. 'continue' → logprob: -6.7587432861328125
    4. 'pe' → logprob: -7.0087432861328125
    5. 'def' → logprob: -7.3837432861328125
    6. 'import' → logprob: -7.7587432861328125
    7. 'f' → logprob: -8.008743286132812
    8. '```' → logprob: -8.383743286132812
    9. 'cherche' → logprob: -8.758743286132812
    10. 'n' → logprob: -8.883743286132812

Token 2546: 'ère' (ID: 4346)
  Prédit: 'érons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érons' → logprob: -0.8240517973899841
    2. 'érer' → logprob: -1.074051856994629
    3. 'ère' → logprob: -1.699051856994629
    4. 'er' → logprob: -4.074051856994629
    5. 'èr' → logprob: -4.949051856994629
    6. 'ér' → logprob: -5.324051856994629
    7. 'ére' → logprob: -6.199051856994629
    8. 'ération' → logprob: -6.574051856994629
    9. 'è' → logprob: -7.199051856994629
    10. '                   ' → logprob: -7.699051856994629

Token 2547: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6332153677940369
    2. '#' → logprob: -1.2582154273986816
    3. 'possible' → logprob: -2.7582154273986816
    4. 'une' → logprob: -3.1332154273986816
    5. 'l' → logprob: -4.008215427398682
    6. 'best' → logprob: -4.508215427398682
    7. 'les' → logprob: -4.508215427398682
    8. 'le' → logprob: -4.758215427398682
    9. 'from' → logprob: -5.383215427398682
    10. 'exact' → logprob: -5.508215427398682

Token 2548: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4756886661052704
    2. 'solution' → logprob: -2.2256886959075928
    3. 'def' → logprob: -2.3506886959075928
    4. '#' → logprob: -2.6006886959075928
    5. 'used' → logprob: -4.100688457489014
    6. 'from' → logprob: -4.100688457489014
    7. 'usage' → logprob: -4.475688457489014
    8. 'possible' → logprob: -4.725688457489014
    9. 'util' → logprob: -4.850688457489014
    10. 'composition' → logprob: -4.975688457489014

Token 2549: ' avec' (ID: 3937)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.95773446559906
    2. '<|end|>' → logprob: -1.95773446559906
    3. 'def' → logprob: -2.2077345848083496
    4. 'possible' → logprob: -2.3327345848083496
    5. '_possible' → logprob: -2.8327345848083496
    6. '_tokens' → logprob: -2.9577345848083496
    7. 's' → logprob: -3.2077345848083496
    8. 'de' → logprob: -3.3327345848083496
    9. 'token' → logprob: -3.4577345848083496
    10. '[' → logprob: -3.7077345848083496

Token 2550: ' technique' (ID: 16410)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6493407487869263
    2. '[' → logprob: -2.0243406295776367
    3. 'coins' → logprob: -2.0243406295776367
    4. 'def' → logprob: -2.3993406295776367
    5. '[]' → logprob: -3.2743406295776367
    6. '#' → logprob: -4.399340629577637
    7. 'import' → logprob: -4.524340629577637
    8. '```' → logprob: -4.649340629577637
    9. 'next' → logprob: -4.899340629577637
    10. 'prev' → logprob: -4.899340629577637

Token 2551: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0296434164047241
    2. 'de' → logprob: -1.4046434164047241
    3. 'def' → logprob: -2.9046435356140137
    4. 's' → logprob: -3.0296435356140137
    5. 'd' → logprob: -3.6546435356140137
    6. ' de' → logprob: -3.7796435356140137
    7. '=' → logprob: -3.7796435356140137
    8. '#' → logprob: -3.9046435356140137
    9. 'simple' → logprob: -3.9046435356140137
    10. 'back' → logprob: -3.9046435356140137

Token 2552: ' arrière' (ID: 100451)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41334909200668335
    2. '[' → logprob: -2.288349151611328
    3. ')' → logprob: -2.663349151611328
    4. '                ' → logprob: -3.538349151611328
    5. '                   ' → logprob: -3.663349151611328
    6. '
' → logprob: -4.163349151611328
    7. '```' → logprob: -4.163349151611328
    8. '                           ' → logprob: -5.038349151611328
    9. ',' → logprob: -5.038349151611328
    10. ' =' → logprob: -5.163349151611328

Token 2553: '.

' (ID: 364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4825941026210785
    2. '```' → logprob: -1.6075941324234009
    3. ')' → logprob: -2.8575940132141113
    4. '[' → logprob: -3.4825940132141113
    5. '
' → logprob: -4.482594013214111
    6. '                ' → logprob: -4.857594013214111
    7. '_tokens' → logprob: -5.107594013214111
    8. 'tokens' → logprob: -5.107594013214111
    9. '                   ' → logprob: -5.232594013214111
    10. '#' → logprob: -5.232594013214111

Token 2554: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26261818408966064
    2. '```' → logprob: -2.387618064880371
    3. '                ' → logprob: -2.512618064880371
    4. '                   ' → logprob: -4.887618064880371
    5. '[' → logprob: -5.012618064880371
    6. ')' → logprob: -5.137618064880371
    7. '``' → logprob: -5.137618064880371
    8. '                
' → logprob: -5.637618064880371
    9. '                               ' → logprob: -5.762618064880371
    10. ' for' → logprob: -5.887618064880371

Token 2555: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4860374629497528
    2. 'dp' → logprob: -1.2360374927520752
    3. '#' (adapté à ' #') → logprob: -2.861037492752075
    4. '
' → logprob: -4.236037254333496
    5. '```' → logprob: -4.236037254333496
    6. '                
' → logprob: -5.861037254333496
    7. 'def' → logprob: -6.611037254333496
    8. 'pos' → logprob: -7.236037254333496
    9. ' dp' → logprob: -7.361037254333496
    10. '``' → logprob: -7.486037254333496

Token 2556: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05304371938109398
    2. '#' → logprob: -3.9280436038970947
    3. 'dp' → logprob: -4.928043842315674
    4. '
' → logprob: -4.928043842315674
    5. '```' → logprob: -4.928043842315674
    6. 'def' → logprob: -5.553043842315674
    7. '                
' → logprob: -5.928043842315674
    8. '                ' → logprob: -6.928043842315674
    9. '                   ' → logprob: -7.803043842315674
    10. ' #' → logprob: -8.053043365478516

Token 2557: ' ref' (ID: 2714)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.991066575050354
    2. '#' → logprob: -1.116066575050354
    3. 'dp' → logprob: -1.741066575050354
    4. 'used' → logprob: -2.4910664558410645
    5. 'continue' → logprob: -4.4910664558410645
    6. 'do' → logprob: -5.6160664558410645
    7. 'pe' → logprob: -5.6160664558410645
    8. '```' → logprob: -5.7410664558410645
    9. 'f' → logprob: -5.9910664558410645
    10. 'p' → logprob: -6.2410664558410645

Token 2558: 'ait' (ID: 1271)
  Prédit: 'ait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.3932931125164032
    2. 'aire' → logprob: -1.5182931423187256
    3. 'or' → logprob: -3.2682931423187256
    4. 'ine' → logprob: -4.5182929039001465
    5. 'ind' → logprob: -4.8932929039001465
    6. 'def' → logprob: -5.5182929039001465
    7. 'orm' → logprob: -5.7682929039001465
    8. 'et' → logprob: -5.7682929039001465
    9. 'ont' → logprob: -5.7682929039001465
    10. 'rom' → logprob: -5.7682929039001465

Token 2559: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12014688551425934
    2. 'for' → logprob: -2.9951469898223877
    3. '               ' → logprob: -4.370146751403809
    4. ' dp' → logprob: -4.995146751403809
    5. 'the' → logprob: -5.120146751403809
    6. '#' → logprob: -5.120146751403809
    7. '```' → logprob: -5.495146751403809
    8. 'range' → logprob: -5.745146751403809
    9. 'coins' → logprob: -5.745146751403809
    10. '                   ' → logprob: -5.870146751403809

Token 2560: ' avec' (ID: 3937)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.21477249264717102
    2. '               ' → logprob: -1.7147724628448486
    3. 'dp' → logprob: -5.089772701263428
    4. 'can' → logprob: -5.839772701263428
    5. '
' → logprob: -7.339772701263428
    6. '#' → logprob: -7.339772701263428
    7. '[' → logprob: -7.839772701263428
    8. '                   ' → logprob: -7.964772701263428
    9. '_back' → logprob: -7.964772701263428
    10. 'for' → logprob: -8.33977222442627

Token 2561: ' trace' (ID: 21523)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.27023985981941223
    2. 'trace' → logprob: -2.02023983001709
    3. 'parent' → logprob: -3.39523983001709
    4. 'memo' → logprob: -3.64523983001709
    5. 'tracking' → logprob: -4.02023983001709
    6. 'path' → logprob: -5.14523983001709
    7. 'prev' → logprob: -5.27023983001709
    8. '```' → logprob: -6.27023983001709
    9. 'p' → logprob: -6.39523983001709
    10. '[' → logprob: -6.39523983001709

Token 2562: ' :

' (ID: 11287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2869567573070526
    2. 'dp' → logprob: -1.661956787109375
    3. '                   ' → logprob: -4.786956787109375
    4. '_can' → logprob: -4.911956787109375
    5. '[' → logprob: -5.161956787109375
    6. '#' → logprob: -5.286956787109375
    7. 'back' → logprob: -5.536956787109375
    8. '
' → logprob: -5.536956787109375
    9. '```' → logprob: -5.661956787109375
    10. '_dp' → logprob: -5.911956787109375

Token 2563: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016108740121126175
    2. 'dp' → logprob: -4.766108512878418
    3. '```' → logprob: -5.516108512878418
    4. '
' → logprob: -6.516108512878418
    5. '                
' → logprob: -7.516108512878418
    6. ' dp' → logprob: -8.266108512878418
    7. 'tokens' → logprob: -8.641108512878418
    8. '``' → logprob: -8.766108512878418
    9. '#' → logprob: -8.766108512878418
    10. '                ' → logprob: -9.391108512878418

Token 2564: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.20580998063087463
    2. '               ' → logprob: -1.7058099508285522
    3. '#' → logprob: -6.080810070037842
    4. '
' → logprob: -6.830810070037842
    5. '                
' → logprob: -8.455809593200684
    6. '```' → logprob: -8.580809593200684
    7. 'def' → logprob: -8.955809593200684
    8. ' dp' → logprob: -9.205809593200684
    9. 'size' → logprob: -9.955809593200684
    10. '   ' → logprob: -9.955809593200684

Token 2565: '_track' (ID: 65595)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.00014060820103622973
    2. 'can' → logprob: -9.125140190124512
    3. ' =' → logprob: -11.375140190124512
    4. '_size' → logprob: -13.375140190124512
    5. '_used' → logprob: -13.375140190124512
    6. '=' → logprob: -13.375140190124512
    7. '```' → logprob: -13.625140190124512
    8. 'Can' → logprob: -13.750140190124512
    9. '_cost' → logprob: -13.750140190124512
    10. '_' → logprob: -14.000140190124512

Token 2566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14299240708351135
    2. '=' → logprob: -2.5179924964904785
    3. '_can' → logprob: -3.7679924964904785
    4. '=[' → logprob: -3.8929924964904785
    5. '[' → logprob: -5.5179924964904785
    6. 'can' → logprob: -5.8929924964904785
    7. 'size' → logprob: -7.7679924964904785
    8. '_size' → logprob: -7.7679924964904785
    9. '   ' → logprob: -8.01799201965332
    10. '```' → logprob: -8.89299201965332

Token 2567: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03236614540219307
    2. '[{' → logprob: -3.5323660373687744
    3. '[[' → logprob: -6.5323662757873535
    4. '{' → logprob: -6.7823662757873535
    5. '[(' → logprob: -11.657365798950195
    6. ' [{}' → logprob: -12.407365798950195
    7. ' [' → logprob: -12.907365798950195
    8. '   ' → logprob: -13.907365798950195
    9. '[-' → logprob: -14.282365798950195
    10. '[s' → logprob: -14.407365798950195

Token 2568: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4102229177951813
    2. '(None' → logprob: -1.9102228879928589
    3. 'False' → logprob: -2.6602230072021484
    4. '[' → logprob: -3.6602230072021484
    5. '{' → logprob: -3.9102230072021484
    6. '(' → logprob: -4.160223007202148
    7. '(False' → logprob: -4.285223007202148
    8. '(-' → logprob: -4.285223007202148
    9. '[-' → logprob: -5.035223007202148
    10. '-' → logprob: -5.035223007202148

Token 2569: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.8139042258262634
    2. ']' → logprob: -1.1889042854309082
    3. '(' → logprob: -1.4389042854309082
    4. 'for' → logprob: -5.063904285430908
    5. ']*' → logprob: -5.938904285430908
    6. ']+' → logprob: -6.563904285430908
    7. '*(' → logprob: -6.563904285430908
    8. ' for' → logprob: -6.938904285430908
    9. ' (' → logprob: -7.313904285430908
    10. '               ' → logprob: -7.938904285430908

Token 2570: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -6.869017852295656e-06
    2. '               ' → logprob: -13.000006675720215
    3. '                   ' → logprob: -13.375006675720215
    4. ' rest' → logprob: -14.375006675720215
    5. '(rest' → logprob: -14.625006675720215
    6. '   ' → logprob: -14.750006675720215
    7. '                               ' → logprob: -15.125006675720215
    8. '           ' → logprob: -15.250006675720215
    9. '                           ' → logprob: -15.750006675720215
    10. '                                   ' → logprob: -15.750006675720215

Token 2571: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -8.315936429426074e-05
    2. 'pay' → logprob: -9.500082969665527
    3. '+' → logprob: -12.125082969665527
    4. '_p' → logprob: -14.500082969665527
    5. '_play' → logprob: -15.000082969665527
    6. '-pay' → logprob: -15.250082969665527
    7. 'ay' → logprob: -15.250082969665527
    8. '_PAY' → logprob: -15.375082969665527
    9. 'Pay' → logprob: -15.750082969665527
    10. 'p' → logprob: -15.875082969665527

Token 2572: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.52919222577475e-05
    2. ' +' → logprob: -9.500075340270996
    3. ')+' → logprob: -15.500075340270996
    4. '()+' → logprob: -17.00007438659668
    5. ']+' → logprob: -17.12507438659668
    6. '```' → logprob: -17.87507438659668
    7. '+
' → logprob: -18.62507438659668
    8. '＋' → logprob: -18.75007438659668
    9. '+[' → logprob: -18.87507438659668
    10. '+xml' → logprob: -18.87507438659668

Token 2573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -16.5
    4. '   ' → logprob: -16.625
    5. '100' → logprob: -17.0
    6. '
' → logprob: -18.0
    7. 'amount' → logprob: -18.375
    8. '001' → logprob: -18.875
    9. '0' → logprob: -19.0
    10. '+' → logprob: -19.0625

Token 2574: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07283540070056915
    2. ')' → logprob: -2.6978354454040527
    3. '               ' → logprob: -5.947835445404053
    4. ')
' → logprob: -8.697834968566895
    5. '+' → logprob: -10.447834968566895
    6. '```' → logprob: -10.447834968566895
    7. ']
' → logprob: -11.197834968566895
    8. ')

' → logprob: -12.072834968566895
    9. '=' → logprob: -12.197834968566895
    10. 'def' → logprob: -12.322834968566895

Token 2575: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17455936968326569
    2. '               ' → logprob: -1.9245593547821045
    3. '[' → logprob: -4.549559593200684
    4. '```' → logprob: -6.674559593200684
    5. 'for' → logprob: -7.049559593200684
    6. '=' → logprob: -7.549559593200684
    7. ' =' → logprob: -8.424559593200684
    8. '           ' → logprob: -9.049559593200684
    9. 'True' → logprob: -9.549559593200684
    10. '   ' → logprob: -9.674559593200684

Token 2576: ' dp' (ID: 21546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36077848076820374
    2. 'dp' (adapté à ' dp') → logprob: -1.9857784509658813
    3. '0' → logprob: -2.735778570175171
    4. 'True' → logprob: -3.360778570175171
    5. '[' → logprob: -3.735778570175171
    6. 'rest' → logprob: -4.110778331756592
    7. '               ' → logprob: -4.735778331756592
    8. '(' → logprob: -5.485778331756592
    9. 'None' → logprob: -5.485778331756592
    10. '```' → logprob: -5.485778331756592

Token 2577: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -0.0002843384863808751
    2. '_can' → logprob: -8.250284194946289
    3. 'track' → logprob: -11.875284194946289
    4. '[' → logprob: -12.375284194946289
    5. '_' → logprob: -12.750284194946289
    6. 'Track' → logprob: -12.875284194946289
    7. 'can' → logprob: -13.375284194946289
    8. 'dp' → logprob: -13.750284194946289
    9. '```' → logprob: -14.500284194946289
    10. '
' → logprob: -14.750284194946289

Token 2578: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002521084388718009
    2. ' =' → logprob: -6.37752103805542
    3. '=' → logprob: -7.62752103805542
    4. '=[' → logprob: -8.127521514892578
    5. 'dp' → logprob: -11.377521514892578
    6. '   ' → logprob: -11.752521514892578
    7. '```' → logprob: -12.252521514892578
    8. '
' → logprob: -13.627521514892578
    9. 'def' → logprob: -13.752521514892578
    10. '               ' → logprob: -14.127521514892578

Token 2579: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013400046154856682
    2. 'rest' → logprob: -7.376339912414551
    3. '[' → logprob: -7.751339912414551
    4. '1' → logprob: -9.62633991241455
    5. ' ' → logprob: -9.87633991241455
    6. '(' → logprob: -10.50133991241455
    7. '-' → logprob: -10.62633991241455
    8. 'False' → logprob: -10.62633991241455
    9. 'True' → logprob: -10.87633991241455
    10. '=' → logprob: -11.37633991241455

Token 2580: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019712593406438828
    2. ']=' → logprob: -4.269712448120117
    3. '=' → logprob: -5.769712448120117
    4. ' =' → logprob: -6.144712448120117
    5. '=True' → logprob: -8.394712448120117
    6. ' ]' → logprob: -10.394712448120117
    7. '=None' → logprob: -12.894712448120117
    8. ')' → logprob: -13.269712448120117
    9. '=False' → logprob: -13.269712448120117
    10. ']+=' → logprob: -14.019712448120117

Token 2581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00036918214755132794
    2. ' =' → logprob: -8.00036907196045
    3. '=True' → logprob: -10.37536907196045
    4. '=None' → logprob: -13.25036907196045
    5. '=
' → logprob: -14.50036907196045
    6. ']=' → logprob: -15.87536907196045
    7. '=False' → logprob: -16.375370025634766
    8. '=}' → logprob: -18.250370025634766
    9. ')=' → logprob: -18.375370025634766
    10. '=[]' → logprob: -19.375370025634766

Token 2582: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22191354632377625
    2. '[]
' → logprob: -1.8469135761260986
    3. '(' → logprob: -3.7219135761260986
    4. '[]

' → logprob: -4.3469133377075195
    5. '()' → logprob: -5.9719133377075195
    6. '0' → logprob: -7.3469133377075195
    7. '[' → logprob: -7.8469133377075195
    8. '()
' → logprob: -8.47191333770752
    9. '([]' → logprob: -9.72191333770752
    10. '([])
' → logprob: -9.72191333770752

Token 2583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6696359515190125
    2. '[' → logprob: -0.9196359515190125
    3. '[]' → logprob: -3.0446360111236572
    4. '(' → logprob: -3.4196360111236572
    5. '()]' → logprob: -5.669635772705078
    6. ']' → logprob: -5.794635772705078
    7. ' [' → logprob: -6.794635772705078
    8. 'tuple' → logprob: -7.794635772705078
    9. 'False' → logprob: -8.294635772705078
    10. '[]
' → logprob: -8.794635772705078

Token 2584: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6325339078903198
    2. ']' → logprob: -0.8825339078903198
    3. ']*(' → logprob: -3.2575340270996094
    4. ',' → logprob: -4.257534027099609
    5. ']+' → logprob: -6.257534027099609
    6. ' for' → logprob: -8.25753402709961
    7. ' ]' → logprob: -9.25753402709961
    8. 'for' → logprob: -10.88253402709961
    9. '   ' → logprob: -11.38253402709961
    10. ',None' → logprob: -11.38253402709961

Token 2585: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25206345319747925
    2. '5' → logprob: -1.502063512802124
    3. '(len' → logprob: -9.002063751220703
    4. ' len' → logprob: -11.752063751220703
    5. '(' → logprob: -13.127063751220703
    6. '6' → logprob: -14.627063751220703
    7. '7' → logprob: -14.877063751220703
    8. '```' → logprob: -16.127063751220703
    9. '
' → logprob: -16.752063751220703
    10. 'le' → logprob: -16.877063751220703

Token 2586: '(C' (ID: 5559)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.002272416139021516
    2. 'MAX' → logprob: -6.252272605895996
    3. '(C' → logprob: -8.002272605895996
    4. 'avail' → logprob: -12.502272605895996
    5. '(MAX' → logprob: -12.877272605895996
    6. ' CO' → logprob: -13.127272605895996
    7. '_CO' → logprob: -14.877272605895996
    8. '(av' → logprob: -15.627272605895996
    9. 'av' → logprob: -16.25227165222168
    10. 'C' → logprob: -17.00227165222168

Token 2587: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.04860088601708412
    2. 'O' → logprob: -3.048600912094116
    3. 'CO' → logprob: -11.548601150512695
    4. 'oin' → logprob: -12.798601150512695
    5. 'О' → logprob: -15.673601150512695
    6. 'OINTER' → logprob: -15.673601150512695
    7. ' O' → logprob: -16.048601150512695
    8. '```' → logprob: -16.423601150512695
    9. 'OY' → logprob: -16.548601150512695
    10. 'OI' → logprob: -16.798601150512695

Token 2588: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -0.014394549652934074
    2. 'T' → logprob: -4.264394760131836
    3. 'OIN' → logprob: -8.889394760131836
    4. 'YPES' → logprob: -10.389394760131836
    5. '_types' → logprob: -11.139394760131836
    6. 'O' → logprob: -11.264394760131836
    7. 'Types' → logprob: -11.389394760131836
    8. 'TYPE' → logprob: -11.764394760131836
    9. 'CO' → logprob: -11.889394760131836
    10. '_TYPE' → logprob: -12.889394760131836

Token 2589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9476115703582764
    2. ']
' → logprob: -1.5726115703582764
    3. ']' → logprob: -1.6976115703582764
    4. ')
' → logprob: -2.1976115703582764
    5. '               ' → logprob: -2.4476115703582764
    6. ')]' → logprob: -3.8226115703582764
    7. ')]
' → logprob: -6.4476118087768555
    8. '])' → logprob: -8.947611808776855
    9. '           ' → logprob: -9.072611808776855
    10. '   ' → logprob: -9.697611808776855

Token 2590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11032459884881973
    2. ' for' → logprob: -2.6103246212005615
    3. 'for' → logprob: -3.8603246212005615
    4. '                   ' → logprob: -6.110324382781982
    5. '           ' → logprob: -6.485324382781982
    6. '                           ' → logprob: -6.860324382781982
    7. '<|end|>' → logprob: -7.360324382781982
    8. '```' → logprob: -7.610324382781982
    9. '                ' → logprob: -7.735324382781982
    10. '                
' → logprob: -7.735324382781982

Token 2591: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07292728126049042
    2. '               ' → logprob: -3.072927236557007
    3. ' for' → logprob: -3.822927236557007
    4. '```' → logprob: -6.697927474975586
    5. 'while' → logprob: -7.822927474975586
    6. '                   ' → logprob: -8.572927474975586
    7. 'dp' → logprob: -8.822927474975586
    8. 'i' → logprob: -9.697927474975586
    9. '           ' → logprob: -9.822927474975586
    10. '
' → logprob: -10.697927474975586

Token 2592: ' ci' (ID: 7405)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.014665466733276844
    2. 'c' → logprob: -4.514665603637695
    3. ' ci' → logprob: -6.014665603637695
    4. 'i' → logprob: -7.639665603637695
    5. 'coin' → logprob: -8.264665603637695
    6. 'v' → logprob: -8.764665603637695
    7. 'val' → logprob: -9.639665603637695
    8. '   ' → logprob: -10.139665603637695
    9. '(ci' → logprob: -10.639665603637695
    10. 'idx' → logprob: -10.764665603637695

Token 2593: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06430166214704514
    2. 'in' → logprob: -3.0643017292022705
    3. ',' → logprob: -4.189301490783691
    4. ' ,' → logprob: -8.439301490783691
    5. '   ' → logprob: -10.064301490783691
    6. ' ' → logprob: -10.939301490783691
    7. 'ci' → logprob: -11.064301490783691
    8. ',val' → logprob: -11.314301490783691
    9. 'i' → logprob: -11.439301490783691
    10. '+' → logprob: -11.564301490783691

Token 2594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.0259150157216936e-05
    2. ' c' → logprob: -10.12505054473877
    3. 'coin' → logprob: -12.12505054473877
    4. 'val' → logprob: -13.00005054473877
    5. '(c' → logprob: -13.62505054473877
    6. '   ' → logprob: -15.50005054473877
    7. 'v' → logprob: -15.62505054473877
    8. 'coins' → logprob: -15.75005054473877
    9. ' ' → logprob: -15.87505054473877
    10. 'value' → logprob: -16.000049591064453

Token 2595: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0043195029720664024
    2. 'in' → logprob: -7.129319667816162
    3. 'al' → logprob: -7.254319667816162
    4. 'for' → logprob: -7.754319667816162
    5. 'CO' → logprob: -8.004319190979004
    6. 'oin' → logprob: -8.254319190979004
    7. ',val' → logprob: -8.254319190979004
    8. 'oi' → logprob: -8.504319190979004
    9. ' in' → logprob: -8.504319190979004
    10. ',' → logprob: -8.629319190979004

Token 2596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485165536403656
    2. 'in' → logprob: -1.223516583442688
    3. ',' → logprob: -9.973516464233398
    4. '   ' → logprob: -10.848516464233398
    5. ' ' → logprob: -13.473516464233398
    6. '    ' → logprob: -14.473516464233398
    7. '       ' → logprob: -14.598516464233398
    8. '           ' → logprob: -14.973516464233398
    9. 'enumer' → logprob: -15.098516464233398
    10. '```' → logprob: -15.098516464233398

Token 2597: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.002365659223869443
    2. 'range' → logprob: -6.127365589141846
    3. 'CO' → logprob: -9.377366065979004
    4. ' enumerate' → logprob: -9.377366065979004
    5. 'zip' → logprob: -11.502366065979004
    6. 'enum' → logprob: -14.377366065979004
    7. '   ' → logprob: -15.252366065979004
    8. 'list' → logprob: -16.752365112304688
    9. 'en' → logprob: -16.752365112304688
    10. ' range' → logprob: -17.252365112304688

Token 2598: '(C' (ID: 5559)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -0.00446774298325181
    2. '(C' → logprob: -5.504467964172363
    3. ' CO' → logprob: -7.879467964172363
    4. '   ' → logprob: -11.879467964172363
    5. '               ' → logprob: -14.254467964172363
    6. '_CO' → logprob: -14.504467964172363
    7. ' ' → logprob: -14.754467964172363
    8. '           ' → logprob: -14.879467964172363
    9. '       ' → logprob: -15.004467964172363
    10. '[' → logprob: -15.379467964172363

Token 2599: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.0041020275093615055
    2. 'O' → logprob: -5.5041022300720215
    3. 'CO' → logprob: -10.879101753234863
    4. 'OI' → logprob: -13.254101753234863
    5. 'oin' → logprob: -13.629101753234863
    6. 'OY' → logprob: -13.754101753234863
    7. 'IN' → logprob: -15.504101753234863
    8. 'o' → logprob: -16.00410270690918
    9. 'ON' → logprob: -16.25410270690918
    10. '[' → logprob: -16.62910270690918

Token 2600: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -7.803360495017841e-05
    2. 'T' → logprob: -9.500078201293945
    3. 'YPES' → logprob: -13.500078201293945
    4. 'Types' → logprob: -14.250078201293945
    5. '_types' → logprob: -14.625078201293945
    6. 'CO' → logprob: -14.625078201293945
    7. '_TYPE' → logprob: -16.875078201293945
    8. ' TYPES' → logprob: -17.375078201293945
    9. '_CO' → logprob: -17.500078201293945
    10. 'ypes' → logprob: -17.625078201293945

Token 2601: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14510761201381683
    2. '                   ' → logprob: -2.3951075077056885
    3. '   ' → logprob: -4.270107746124268
    4. '):' → logprob: -4.395107746124268
    5. ':
' → logprob: -5.145107746124268
    6. '               ' → logprob: -5.395107746124268
    7. '                       ' → logprob: -5.895107746124268
    8. ':' → logprob: -6.145107746124268
    9. '           ' → logprob: -7.395107746124268
    10. '):
' → logprob: -7.520107746124268

Token 2602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028713388368487358
    2. '```' → logprob: -4.278713226318359
    3. '                       ' → logprob: -4.528713226318359
    4. ' for' → logprob: -6.403713226318359
    5. 'for' → logprob: -7.528713226318359
    6. '               ' → logprob: -7.653713226318359
    7. '   ' → logprob: -7.778713226318359
    8. '       ' → logprob: -8.65371322631836
    9. ':' → logprob: -8.77871322631836
    10. ',' → logprob: -9.77871322631836

Token 2603: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053179264068603516
    2. ' for' → logprob: -4.1781792640686035
    3. 'dp' → logprob: -4.3031792640686035
    4. 'range' → logprob: -4.5531792640686035
    5. '                   ' → logprob: -5.4281792640686035
    6. '                       ' → logprob: -6.0531792640686035
    7. 'max' (adapté à ' max') → logprob: -6.1781792640686035
    8. '   ' → logprob: -6.4281792640686035
    9. '       ' → logprob: -7.1781792640686035
    10. 'n' → logprob: -8.553178787231445

Token 2604: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0032130072358995676
    2. 'avail' → logprob: -6.628212928771973
    3. '_count' → logprob: -7.253212928771973
    4. 'coins' → logprob: -8.003212928771973
    5. 'usage' → logprob: -8.378212928771973
    6. '_use' → logprob: -8.878212928771973
    7. 'use' → logprob: -9.003212928771973
    8. 'co' → logprob: -9.503212928771973
    9. '_av' → logprob: -10.128212928771973
    10. '_co' → logprob: -10.503212928771973

Token 2605: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07106281816959381
    2. '=' → logprob: -2.6960628032684326
    3. '   ' → logprob: -7.946063041687012
    4. '+' → logprob: -8.571063041687012
    5. '=int' → logprob: -9.321063041687012
    6. '=max' → logprob: -9.571063041687012
    7. ')' → logprob: -10.071063041687012
    8. '    ' → logprob: -10.321063041687012
    9. '=[' → logprob: -10.321063041687012
    10. ',' → logprob: -10.446063041687012

Token 2606: ' avail' (ID: 57507)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.002438331488519907
    2. 'MAX' → logprob: -6.752438545227051
    3. ' avail' → logprob: -6.877438545227051
    4. 'max' → logprob: -9.00243854522705
    5. 'av' → logprob: -10.12743854522705
    6. '   ' → logprob: -11.25243854522705
    7. 'available' → logprob: -11.50243854522705
    8. '           ' → logprob: -11.87743854522705
    9. '             ' → logprob: -12.12743854522705
    10. 'aval' → logprob: -12.25243854522705

Token 2607: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -2.339278580620885e-06
    2. 'Coins' → logprob: -13.500001907348633
    3. 'coins' → logprob: -15.375001907348633
    4. '_' → logprob: -15.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. '[' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '_ch' → logprob: -17.250001907348633
    9. '\' → logprob: -17.375001907348633
    10. '_coin' → logprob: -17.500001907348633

Token 2608: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.035972390323877335
    2. 'ons' → logprob: -4.160972595214844
    3. 'ines' → logprob: -4.535972595214844
    4. 'coins' → logprob: -4.785972595214844
    5. '_co' → logprob: -8.660972595214844
    6. '[' → logprob: -9.285972595214844
    7. 'ains' → logprob: -9.785972595214844
    8. 'Coins' → logprob: -9.910972595214844
    9. 'ones' → logprob: -10.035972595214844
    10. '_ins' → logprob: -10.410972595214844

Token 2609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.453737710718997e-05
    2. '(ci' → logprob: -12.250044822692871
    3. '```' → logprob: -12.250044822692871
    4. ':' → logprob: -12.625044822692871
    5. '+' → logprob: -12.875044822692871
    6. '   ' → logprob: -12.875044822692871
    7. '#' → logprob: -12.875044822692871
    8. ')' → logprob: -12.875044822692871
    9. '       ' → logprob: -12.875044822692871
    10. ' [' → logprob: -13.000044822692871

Token 2610: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.014602272771298885
    2. '[' → logprob: -4.264602184295654
    3. '(ci' → logprob: -8.264602661132812
    4. ' ci' → logprob: -8.639602661132812
    5. '_ci' → logprob: -13.764602661132812
    6. '-ci' → logprob: -14.014602661132812
    7. '   ' → logprob: -14.389602661132812
    8. 'i' → logprob: -14.764602661132812
    9. ')' → logprob: -14.889602661132812
    10. '```' → logprob: -14.889602661132812

Token 2611: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3121354281902313
    2. '                   ' → logprob: -1.8121354579925537
    3. ' +' → logprob: -2.9371354579925537
    4. '):
' → logprob: -3.4371354579925537
    5. '                       ' → logprob: -4.937135219573975
    6. ':
' → logprob: -5.187135219573975
    7. '-' → logprob: -6.312135219573975
    8. '               ' → logprob: -6.562135219573975
    9. '       ' → logprob: -6.687135219573975
    10. '           ' → logprob: -7.562135219573975

Token 2612: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.695755124092102
    2. '                       ' → logprob: -0.695755124092102
    3. '```' → logprob: -6.0707550048828125
    4. '					' → logprob: -10.070755004882812
    5. '	                   ' → logprob: -10.195755004882812
    6. 'for' → logprob: -10.320755004882812
    7. '               ' → logprob: -10.445755004882812
    8. '				' → logprob: -10.695755004882812
    9. '                           ' → logprob: -10.820755004882812
    10. '	               ' → logprob: -10.945755004882812

Token 2613: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005610084626823664
    2. '                   ' → logprob: -6.00560998916626
    3. ' for' → logprob: -6.38060998916626
    4. '```' → logprob: -7.13060998916626
    5. '                       ' → logprob: -7.88060998916626
    6. 'range' → logprob: -9.380610466003418
    7. '       ' → logprob: -9.505610466003418
    8. '   ' → logprob: -10.255610466003418
    9. '``' → logprob: -11.130610466003418
    10. 'max' → logprob: -11.505610466003418

Token 2614: ' _' (ID: 1175)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7668421268463135
    2. '_' → logprob: -1.6418421268463135
    3. 'use' → logprob: -2.1418421268463135
    4. '_use' → logprob: -3.0168421268463135
    5. '1' → logprob: -3.2668421268463135
    6. 'cnt' → logprob: -3.3918421268463135
    7. 'max' → logprob: -4.266841888427734
    8. '_count' → logprob: -4.266841888427734
    9. 'v' → logprob: -4.391841888427734
    10. '0' → logprob: -4.516841888427734

Token 2615: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14615420997142792
    2. ' range' → logprob: -2.0211541652679443
    3. '0' → logprob: -6.771154403686523
    4. ' in' → logprob: -7.146154403686523
    5. 'max' → logprob: -7.521154403686523
    6. '_' → logprob: -8.021154403686523
    7. '1' → logprob: -8.896154403686523
    8. ' ' → logprob: -9.271154403686523
    9. '_range' → logprob: -9.396154403686523
    10. 'count' → logprob: -9.396154403686523

Token 2616: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007784535177052021
    2. ' range' → logprob: -5.007784366607666
    3. 'max' → logprob: -6.882784366607666
    4. '(range' → logprob: -11.132784843444824
    5. 'count' → logprob: -11.257784843444824
    6. '(max' → logprob: -12.632784843444824
    7. ' ' → logprob: -12.757784843444824
    8. '   ' → logprob: -13.257784843444824
    9. '1' → logprob: -13.632784843444824
    10. ' max' → logprob: -14.132784843444824

Token 2617: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005429040757007897
    2. '(max' → logprob: -7.625543117523193
    3. ' max' → logprob: -10.500542640686035
    4. '1' → logprob: -11.625542640686035
    5. '0' → logprob: -12.000542640686035
    6. '   ' → logprob: -12.375542640686035
    7. 'MAX' → logprob: -13.000542640686035
    8. 'c' → logprob: -13.250542640686035
    9. ',max' → logprob: -14.375542640686035
    10. ' ' → logprob: -14.625542640686035

Token 2618: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001530693843960762
    2. 'max' → logprob: -7.126530647277832
    3. '1' → logprob: -7.501530647277832
    4. 'val' → logprob: -10.001530647277832
    5. 'coins' → logprob: -10.376530647277832
    6. '(count' → logprob: -10.501530647277832
    7. '_count' → logprob: -11.376530647277832
    8. '   ' → logprob: -11.626530647277832
    9. ' ' → logprob: -11.876530647277832
    10. '       ' → logprob: -12.001530647277832

Token 2619: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6544554829597473
    2. '+' → logprob: -1.2794554233551025
    3. '                       ' → logprob: -1.7794554233551025
    4. '):' → logprob: -4.404455661773682
    5. '                   ' → logprob: -4.779455661773682
    6. ':' → logprob: -5.404455661773682
    7. ' +' → logprob: -5.779455661773682
    8. ':
' → logprob: -6.779455661773682
    9. '                           ' → logprob: -7.029455661773682
    10. '       ' → logprob: -7.029455661773682

Token 2620: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.8828707804204896e-05
    2. '                   ' → logprob: -11.000048637390137
    3. 'for' → logprob: -11.750048637390137
    4. '                           ' → logprob: -11.875048637390137
    5. '                        ' → logprob: -12.750048637390137
    6. '```' → logprob: -12.750048637390137
    7. '       ' → logprob: -12.875048637390137
    8. ' for' → logprob: -13.125048637390137
    9. '               ' → logprob: -13.375048637390137
    10. '                      ' → logprob: -13.500048637390137

Token 2621: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15251079201698303
    2. '                           ' → logprob: -2.52751088142395
    3. ' for' → logprob: -3.27751088142395
    4. '```' → logprob: -4.277510643005371
    5. 'dp' → logprob: -5.777510643005371
    6. '                       ' → logprob: -5.777510643005371
    7. 'range' → logprob: -6.902510643005371
    8. '                               ' → logprob: -8.152510643005371
    9. '``' → logprob: -8.152510643005371
    10. '                            ' → logprob: -8.277510643005371

Token 2622: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018852906301617622
    2. 'rest' → logprob: -4.018852710723877
    3. ' v' → logprob: -9.018853187561035
    4. 'range' → logprob: -9.393853187561035
    5. 'r' → logprob: -9.893853187561035
    6. 'val' → logprob: -9.893853187561035
    7. '   ' → logprob: -10.018853187561035
    8. ' rest' → logprob: -10.143853187561035
    9. 'dp' → logprob: -10.643853187561035
    10. 'reste' → logprob: -10.643853187561035

Token 2623: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5175005793571472
    2. ',v' → logprob: -1.517500638961792
    3. '(v' → logprob: -2.142500638961792
    4. 'v' → logprob: -2.892500638961792
    5. '[v' → logprob: -5.267500400543213
    6. '                   ' → logprob: -6.267500400543213
    7. '                           ' → logprob: -6.892500400543213
    8. '                               ' → logprob: -7.267500400543213
    9. ' v' → logprob: -7.392500400543213
    10. '               ' → logprob: -8.017500877380371

Token 2624: ' range' (ID: 3352)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.3570675849914551
    2. 'range' → logprob: -1.607067584991455
    3. '(rest' → logprob: -2.357067584991455
    4. 'v' → logprob: -5.982067584991455
    5. '(range' → logprob: -6.857067584991455
    6. '(v' → logprob: -7.857067584991455
    7. ' range' → logprob: -7.982067584991455
    8. ' rest' → logprob: -8.357067108154297
    9. 'dp' → logprob: -8.732067108154297
    10. 'pay' → logprob: -9.357067108154297

Token 2625: '(rest' (ID: 117922)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.000644764571916312
    2. '(rest' → logprob: -7.375644683837891
    3. 'v' → logprob: -11.75064468383789
    4. ' rest' → logprob: -12.50064468383789
    5. 'dp' → logprob: -12.62564468383789
    6. '0' → logprob: -13.37564468383789
    7. '   ' → logprob: -14.75064468383789
    8. '               ' → logprob: -15.25064468383789
    9. '                   ' → logprob: -15.62564468383789
    10. 'pay' → logprob: -15.75064468383789

Token 2626: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.004801295697689056
    2. '_can' → logprob: -5.379801273345947
    3. '_val' → logprob: -8.879801750183105
    4. '+' → logprob: -11.004801750183105
    5. '-pay' → logprob: -11.879801750183105
    6. 'pay' → logprob: -12.504801750183105
    7. '   ' → logprob: -12.754801750183105
    8. '       ' → logprob: -13.754801750183105
    9. 'apay' → logprob: -14.004801750183105
    10. '_' → logprob: -14.129801750183105

Token 2627: ' -' (ID: 533)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.204752117395401
    2. ' -' → logprob: -2.829752206802368
    3. ',' → logprob: -2.954752206802368
    4. '+c' → logprob: -2.954752206802368
    5. ',c' → logprob: -4.704751968383789
    6. '+' → logprob: -4.954751968383789
    7. '-ci' → logprob: -6.329751968383789
    8. '_c' → logprob: -6.579751968383789
    9. '-val' → logprob: -7.579751968383789
    10. '-pay' → logprob: -7.579751968383789

Token 2628: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.004696090007201e-05
    2. '1' → logprob: -10.000069618225098
    3. ' c' → logprob: -11.125069618225098
    4. 'v' → logprob: -12.500069618225098
    5. 'ci' → logprob: -13.500069618225098
    6. '0' → logprob: -14.000069618225098
    7. 'CO' → logprob: -14.500069618225098
    8. 'coin' → logprob: -14.500069618225098
    9. 'co' → logprob: -14.875069618225098
    10. 'C' → logprob: -15.250069618225098

Token 2629: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00026288547087460756
    2. 'c' → logprob: -9.125263214111328
    3. '_val' → logprob: -9.625263214111328
    4. '1' → logprob: -10.750263214111328
    5. '0' → logprob: -10.875263214111328
    6. '5' → logprob: -11.250263214111328
    7. '10' → logprob: -11.500263214111328
    8. '_c' → logprob: -12.000263214111328
    9. '```' → logprob: -12.750263214111328
    10. 'v' → logprob: -13.000263214111328

Token 2630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024649559054523706
    2. ',v' → logprob: -6.502464771270752
    3. ',-' → logprob: -7.502464771270752
    4. '+' → logprob: -8.75246524810791
    5. '                           ' → logprob: -9.50246524810791
    6. ' ,' → logprob: -9.62746524810791
    7. '-' → logprob: -10.25246524810791
    8. '                       ' → logprob: -10.62746524810791
    9. '```' → logprob: -11.37746524810791
    10. '                          ' → logprob: -12.75246524810791

Token 2631: ' -' (ID: 533)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013375510461628437
    2. '-' → logprob: -4.638375282287598
    3. ' v' → logprob: -7.138375282287598
    4. ' -' → logprob: -7.388375282287598
    5. 'rest' → logprob: -7.513375282287598
    6. '                           ' → logprob: -8.138375282287598
    7. '                   ' → logprob: -8.888375282287598
    8. '                               ' → logprob: -9.013375282287598
    9. '                       ' → logprob: -9.388375282287598
    10. '               ' → logprob: -9.513375282287598

Token 2632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. '-' → logprob: -10.750038146972656
    3. '0' → logprob: -11.875038146972656
    4. '```' → logprob: -12.625038146972656
    5. '100' → logprob: -13.875038146972656
    6. ' ' → logprob: -14.000038146972656
    7. '
' → logprob: -14.250038146972656
    8. '2' → logprob: -14.500038146972656
    9. '   ' → logprob: -14.625038146972656
    10. '999' → logprob: -14.750038146972656

Token 2633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05607094243168831
    2. ',-' → logprob: -3.0560710430145264
    3. '-' → logprob: -5.431070804595947
    4. ',v' → logprob: -7.306070804595947
    5. '                           ' → logprob: -7.556070804595947
    6. '```' → logprob: -7.931070804595947
    7. ' ,' → logprob: -8.056071281433105
    8. '):
' → logprob: -8.306071281433105
    9. '                       ' → logprob: -8.431071281433105
    10. ' -' → logprob: -8.556071281433105

Token 2634: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007692479994148016
    2. ' -' → logprob: -7.250769138336182
    3. 'True' → logprob: -9.75076961517334
    4. ' True' → logprob: -15.00076961517334
    5. '-v' → logprob: -15.00076961517334
    6. '                               ' → logprob: -16.375768661499023
    7. '```' → logprob: -16.625768661499023
    8. '                           ' → logprob: -16.625768661499023
    9. '                                   ' → logprob: -16.875768661499023
    10. 'v' → logprob: -17.000768661499023

Token 2635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.875
    3. ' ' → logprob: -15.875
    4. '0' → logprob: -16.125
    5. '```' → logprob: -17.25
    6. '   ' → logprob: -19.125
    7. ')' → logprob: -19.25
    8. ' -' → logprob: -19.25
    9. '                                   ' → logprob: -20.5625
    10. '                               ' → logprob: -20.75

Token 2636: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2290997952222824
    2. '                           ' → logprob: -1.6040997505187988
    3. '):' → logprob: -6.479099750518799
    4. '                       ' → logprob: -7.104099750518799
    5. ':
' → logprob: -7.979099750518799
    6. ':' → logprob: -8.729100227355957
    7. '                               ' → logprob: -8.729100227355957
    8. '):
' → logprob: -8.979100227355957
    9. '                         ' → logprob: -9.354100227355957
    10. '           ' → logprob: -9.354100227355957

Token 2637: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -6.074907287256792e-05
    2. '                               ' → logprob: -10.25006103515625
    3. '```' → logprob: -12.12506103515625
    4. '                         ' → logprob: -12.25006103515625
    5. '                       ' → logprob: -12.50006103515625
    6. '                          ' → logprob: -12.75006103515625
    7. '                            ' → logprob: -13.00006103515625
    8. '						' → logprob: -13.00006103515625
    9. '           ' → logprob: -13.12506103515625
    10. '                        ' → logprob: -13.75006103515625

Token 2638: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3016514778137207
    2. 'dp' → logprob: -2.3016514778137207
    3. '                               ' → logprob: -2.3016514778137207
    4. ' if' → logprob: -3.3016514778137207
    5. '                           ' → logprob: -4.051651477813721
    6. ' dp' → logprob: -6.301651477813721
    7. '```' → logprob: -6.301651477813721
    8. '                                   ' → logprob: -7.051651477813721
    9. '                            ' → logprob: -8.426651000976562
    10. '   ' → logprob: -8.426651000976562

Token 2639: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004311460361350328
    2. ' dp' → logprob: -7.750431060791016
    3. 'not' → logprob: -16.125431060791016
    4. '                           ' → logprob: -16.250431060791016
    5. '(dp' → logprob: -16.750431060791016
    6. '	dp' → logprob: -16.750431060791016
    7. '           ' → logprob: -17.500431060791016
    8. '                               ' → logprob: -17.625431060791016
    9. 'True' → logprob: -18.250431060791016
    10. '                                   ' → logprob: -18.250431060791016

Token 2640: '_track' (ID: 65595)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.006746632046997547
    2. '_track' → logprob: -5.006746768951416
    3. 'can' → logprob: -10.881746292114258
    4. '[' → logprob: -13.131746292114258
    5. '```' → logprob: -13.631746292114258
    6. 'v' → logprob: -13.631746292114258
    7. '_CAN' → logprob: -14.256746292114258
    8. '	can' → logprob: -14.381746292114258
    9. '_' → logprob: -14.631746292114258
    10. '[v' → logprob: -14.756746292114258

Token 2641: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.2617008400848135e-05
    2. '                           ' → logprob: -11.125032424926758
    3. 'v' → logprob: -11.625032424926758
    4. '                               ' → logprob: -12.375032424926758
    5. '                   ' → logprob: -13.750032424926758
    6. '
' → logprob: -14.625032424926758
    7. '```' → logprob: -14.625032424926758
    8. '                                   ' → logprob: -14.875032424926758
    9. '                       ' → logprob: -15.125032424926758
    10. '[' → logprob: -15.250032424926758

Token 2642: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.03253648430109024
    2. ']' → logprob: -3.782536506652832
    3. '[' → logprob: -4.907536506652832
    4. '+' → logprob: -7.657536506652832
    5. '                           ' → logprob: -8.032536506652832
    6. '                               ' → logprob: -8.032536506652832
    7. ']==' → logprob: -8.907536506652832
    8. 'v' → logprob: -9.032536506652832
    9. '```' → logprob: -9.282536506652832
    10. '][' → logprob: -9.282536506652832

Token 2643: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6179871559143066
    2. 'is' → logprob: -0.9929871559143066
    3. '[v' → logprob: -3.2429871559143066
    4. '[' → logprob: -3.8679871559143066
    5. '!=' → logprob: -4.492987155914307
    6. '                               ' → logprob: -5.492987155914307
    7. ':
' → logprob: -5.617987155914307
    8. '                           ' → logprob: -5.617987155914307
    9. '```' → logprob: -6.242987155914307
    10. ':' → logprob: -6.367987155914307

Token 2644: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.018164457753300667
    2. ' not' → logprob: -4.01816463470459
    3. '                               ' → logprob: -11.39316463470459
    4. '                           ' → logprob: -13.64316463470459
    5. 'None' → logprob: -14.64316463470459
    6. 'Not' → logprob: -15.01816463470459
    7. 'n't' → logprob: -15.51816463470459
    8. '   ' → logprob: -15.76816463470459
    9. '                                   ' → logprob: -15.76816463470459
    10. '!' → logprob: -15.89316463470459

Token 2645: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6331722140312195
    2. 'not' → logprob: -0.7581722140312195
    3. ' None' → logprob: -8.383172035217285
    4. 'pas' → logprob: -9.383172035217285
    5. '   ' → logprob: -9.508172035217285
    6. '           ' → logprob: -10.258172035217285
    7. '```' → logprob: -10.508172035217285
    8. 'none' → logprob: -10.508172035217285
    9. ' not' → logprob: -10.758172035217285
    10. '(None' → logprob: -11.758172035217285

Token 2646: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6767714619636536
    2. '                               ' → logprob: -0.8017714619636536
    3. ':
' → logprob: -3.301771402359009
    4. 'and' → logprob: -5.801771640777588
    5. '```' → logprob: -6.426771640777588
    6. ':' → logprob: -7.426771640777588
    7. '                           ' → logprob: -7.551771640777588
    8. '):
' → logprob: -9.42677116394043
    9. '               ' → logprob: -9.80177116394043
    10. '                              ' → logprob: -10.05177116394043

Token 2647: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0010381679749116302
    2. '```' → logprob: -7.376038074493408
    3. '                                ' → logprob: -9.251038551330566
    4. '                           ' → logprob: -9.376038551330566
    5. ' ' → logprob: -9.876038551330566
    6. '                                   ' → logprob: -10.251038551330566
    7. '                              ' → logprob: -11.001038551330566
    8. '							' → logprob: -11.126038551330566
    9. ' and' → logprob: -11.251038551330566
    10. '                            ' → logprob: -11.251038551330566

Token 2648: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32126232981681824
    2. '[' → logprob: -2.0712623596191406
    3. '                               ' → logprob: -2.8212623596191406
    4. 'v' → logprob: -3.6962623596191406
    5. '[v' → logprob: -3.8212623596191406
    6. ' dp' → logprob: -4.071262359619141
    7. ' [' → logprob: -4.821262359619141
    8. '                                   ' → logprob: -5.196262359619141
    9. '```' → logprob: -5.821262359619141
    10. ' v' → logprob: -6.196262359619141

Token 2649: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1816098392009735
    2. 'not' → logprob: -1.806609869003296
    3. 'v' → logprob: -7.056609630584717
    4. ' not' → logprob: -7.431609630584717
    5. '                           ' → logprob: -9.181610107421875
    6. ' dp' → logprob: -9.931610107421875
    7. '   ' → logprob: -10.181610107421875
    8. '                               ' → logprob: -10.181610107421875
    9. '           ' → logprob: -10.306610107421875
    10. '                                   ' → logprob: -10.681610107421875

Token 2650: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -0.000936951139010489
    2. '_can' → logprob: -7.000936985015869
    3. 'can' → logprob: -12.125936508178711
    4. '_trace' → logprob: -12.375936508178711
    5. '_' → logprob: -12.500936508178711
    6. 'track' → logprob: -13.375936508178711
    7. '_tracker' → logprob: -13.625936508178711
    8. '_TRACK' → logprob: -13.625936508178711
    9. '```' → logprob: -13.875936508178711
    10. ' _' → logprob: -14.125936508178711

Token 2651: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0007570966263301671
    2. 'v' → logprob: -8.125757217407227
    3. '                               ' → logprob: -8.250757217407227
    4. '                           ' → logprob: -9.625757217407227
    5. '                                   ' → logprob: -10.000757217407227
    6. '                              ' → logprob: -11.125757217407227
    7. '[' → logprob: -11.375757217407227
    8. '                                  ' → logprob: -11.750757217407227
    9. '                             ' → logprob: -12.250757217407227
    10. '                                ' → logprob: -12.500757217407227

Token 2652: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.34927284717559814
    2. '[c' → logprob: -1.3492728471755981
    3. '+' → logprob: -3.9742727279663086
    4. '[v' → logprob: -4.349272727966309
    5. ' +' → logprob: -6.224272727966309
    6. '[' → logprob: -7.724272727966309
    7. '+[' → logprob: -7.724272727966309
    8. '][' → logprob: -7.974272727966309
    9. ']' → logprob: -7.974272727966309
    10. 'c' → logprob: -10.974272727966309

Token 2653: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.3676733690081164e-05
    2. ' c' → logprob: -10.75002384185791
    3. '1' → logprob: -13.37502384185791
    4. 'ci' → logprob: -15.25002384185791
    5. '   ' → logprob: -15.87502384185791
    6. '```' → logprob: -16.750022888183594
    7. '           ' → logprob: -16.875022888183594
    8. '_c' → logprob: -17.750022888183594
    9. 'coin' → logprob: -18.125022888183594
    10. '	c' → logprob: -18.125022888183594

Token 2654: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.082895273109898e-05
    2. 'al' → logprob: -10.750030517578125
    3. 'cal' → logprob: -13.000030517578125
    4. '1' → logprob: -13.750030517578125
    5. 'c' → logprob: -13.750030517578125
    6. '
' → logprob: -14.000030517578125
    7. '   ' → logprob: -14.500030517578125
    8. 'col' → logprob: -15.000030517578125
    9. ')' → logprob: -15.125030517578125
    10. 'v' → logprob: -15.125030517578125

Token 2655: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003527136752381921
    2. 'is' → logprob: -6.3785271644592285
    3. ' is' → logprob: -6.5035271644592285
    4. ')' → logprob: -9.12852668762207
    5. '[' → logprob: -9.62852668762207
    6. '```' → logprob: -10.25352668762207
    7. ']==' → logprob: -10.75352668762207
    8. 's' → logprob: -11.12852668762207
    9. ' ]' → logprob: -11.50352668762207
    10. '[v' → logprob: -12.00352668762207

Token 2656: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0830978974699974
    2. 'is' → logprob: -2.5830979347229004
    3. '                               ' → logprob: -6.5830979347229
    4. '==' → logprob: -7.4580979347229
    5. '[' → logprob: -7.5830979347229
    6. '                                   ' → logprob: -7.8330979347229
    7. '!=' → logprob: -7.9580979347229
    8. ')' → logprob: -8.083097457885742
    9. '```' → logprob: -9.208097457885742
    10. ']' → logprob: -9.333097457885742

Token 2657: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.624555291840807e-05
    2. ' None' → logprob: -9.500076293945312
    3. 'none' → logprob: -14.625076293945312
    4. '   ' → logprob: -14.875076293945312
    5. 'not' → logprob: -15.125076293945312
    6. '_None' → logprob: -15.500076293945312
    7. '=None' → logprob: -16.125076293945312
    8. '(None' → logprob: -17.000076293945312
    9. '_none' → logprob: -17.625076293945312
    10. 'null' → logprob: -18.375076293945312

Token 2658: ':
' (ID: 734)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.5723587870597839
    2. '=' → logprob: -1.4473588466644287
    3. ':
' → logprob: -2.4473588466644287
    4. '                               ' → logprob: -3.3223588466644287
    5. ' =' → logprob: -3.4473588466644287
    6. ' or' → logprob: -3.5723588466644287
    7. ':' → logprob: -5.32235860824585
    8. '```' → logprob: -5.69735860824585
    9. '):
' → logprob: -6.32235860824585
    10. '                                  ' → logprob: -6.44735860824585

Token 2659: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.09240566194057465
    2. '```' → logprob: -3.0924055576324463
    3. '                               ' → logprob: -3.4674055576324463
    4. ' True' → logprob: -5.592405796051025
    5. 'True' → logprob: -6.092405796051025
    6. '                                       ' → logprob: -6.842405796051025
    7. '                                ' → logprob: -6.842405796051025
    8. '                                           ' → logprob: -7.467405796051025
    9. '                                    ' → logprob: -7.717405796051025
    10. '                                 ' → logprob: -7.967405796051025

Token 2660: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0006236801855266094
    2. '[' → logprob: -8.25062370300293
    3. ' dp' → logprob: -9.00062370300293
    4. '                               ' → logprob: -9.25062370300293
    5. '                           ' → logprob: -9.50062370300293
    6. '                                   ' → logprob: -10.12562370300293
    7. '                       ' → logprob: -12.00062370300293
    8. ' [' → logprob: -12.37562370300293
    9. '   ' → logprob: -12.50062370300293
    10. '                   ' → logprob: -12.62562370300293

Token 2661: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -1.2352385965641588e-05
    2. '_TRACK' → logprob: -11.875012397766113
    3. '_tracker' → logprob: -13.125012397766113
    4. '_tracking' → logprob: -13.375012397766113
    5. '_tracks' → logprob: -14.000012397766113
    6. 'Track' → logprob: -15.250012397766113
    7. '_trace' → logprob: -15.250012397766113
    8. 'track' → logprob: -15.625012397766113
    9. '[' → logprob: -16.375011444091797
    10. 'TRACK' → logprob: -17.000011444091797

Token 2662: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.869017852295656e-06
    2. 'v' → logprob: -12.250006675720215
    3. '[
' → logprob: -14.250006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '[' → logprob: -15.125006675720215
    6. '                   ' → logprob: -15.500006675720215
    7. '```' → logprob: -15.500006675720215
    8. '
' → logprob: -16.25000762939453
    9. ' [' → logprob: -16.75000762939453
    10. '                           ' → logprob: -17.12500762939453

Token 2663: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19012601673603058
    2. ' +' → logprob: -1.8151260614395142
    3. '[v' → logprob: -4.815125942230225
    4. ']' → logprob: -6.440125942230225
    5. '+c' → logprob: -8.940126419067383
    6. '                                   ' → logprob: -8.940126419067383
    7. '                               ' → logprob: -9.065126419067383
    8. ']+' → logprob: -9.940126419067383
    9. '+[' → logprob: -9.940126419067383
    10. '][' → logprob: -10.065126419067383

Token 2664: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006717974785715342
    2. ' c' → logprob: -5.006718158721924
    3. '_c' → logprob: -13.756717681884766
    4. '+c' → logprob: -14.631717681884766
    5. 'ci' → logprob: -14.881717681884766
    6. '1' → logprob: -15.506717681884766
    7. '   ' → logprob: -15.756717681884766
    8. ')c' → logprob: -16.381717681884766
    9. ' ' → logprob: -16.506717681884766
    10. '	c' → logprob: -16.506717681884766

Token 2665: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.002784434938803315
    2. '_val' → logprob: -6.252784252166748
    3. '_track' → logprob: -8.002784729003906
    4. 'c' → logprob: -8.377784729003906
    5. '_c' → logprob: -9.127784729003906
    6. 'alc' → logprob: -9.627784729003906
    7. 'al' → logprob: -10.502784729003906
    8. 'cal' → logprob: -10.752784729003906
    9. '
' → logprob: -11.252784729003906
    10. '   ' → logprob: -11.377784729003906

Token 2666: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021671172231435776
    2. ']=' → logprob: -4.146671295166016
    3. '=' → logprob: -5.271671295166016
    4. ' =' → logprob: -7.896671295166016
    5. '                               ' → logprob: -10.021671295166016
    6. '                                   ' → logprob: -10.771671295166016
    7. '                                       ' → logprob: -12.021671295166016
    8. '               ' → logprob: -12.146671295166016
    9. ')' → logprob: -12.396671295166016
    10. ' ]' → logprob: -12.646671295166016

Token 2667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061984043568372726
    2. ' =' → logprob: -2.811984062194824
    3. '=[' → logprob: -12.061984062194824
    4. ']' → logprob: -12.311984062194824
    5. ']=' → logprob: -12.436984062194824
    6. '=
' → logprob: -14.186984062194824
    7. '```' → logprob: -15.186984062194824
    8. '=None' → logprob: -15.311984062194824
    9. '=True' → logprob: -15.311984062194824
    10. ')' → logprob: -15.811984062194824

Token 2668: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0024817234370857477
    2. '[' → logprob: -6.252481937408447
    3. ' dp' → logprob: -7.752481937408447
    4. '   ' → logprob: -10.127481460571289
    5. '                           ' → logprob: -10.877481460571289
    6. '                               ' → logprob: -11.252481460571289
    7. ' [' → logprob: -11.252481460571289
    8. 'list' → logprob: -11.502481460571289
    9. '                                   ' → logprob: -11.627481460571289
    10. '(dp' → logprob: -12.377481460571289

Token 2669: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -1.7432603272027336e-06
    2. 'track' → logprob: -13.625001907348633
    3. 'Track' → logprob: -15.500001907348633
    4. '
' → logprob: -16.375001907348633
    5. '_TRACK' → logprob: -17.250001907348633
    6. 't' → logprob: -17.250001907348633
    7. '_tracks' → logprob: -17.250001907348633
    8. '[' → logprob: -17.500001907348633
    9. '\' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.750001907348633

Token 2670: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0015081972815096378
    2. 'v' → logprob: -6.5015082359313965
    3. '   ' → logprob: -13.376507759094238
    4. '[' → logprob: -13.626507759094238
    5. '
' → logprob: -14.751507759094238
    6. '           ' → logprob: -14.876507759094238
    7. '       ' → logprob: -15.001507759094238
    8. '                   ' → logprob: -15.126507759094238
    9. ' [' → logprob: -15.376507759094238
    10. '	v' → logprob: -15.626507759094238

Token 2671: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.38553860783576965
    2. '][' → logprob: -2.0105385780334473
    3. '[:' → logprob: -2.5105385780334473
    4. ']+' → logprob: -3.5105385780334473
    5. '.copy' → logprob: -3.8855385780334473
    6. '].' → logprob: -4.260538578033447
    7. '+[' → logprob: -4.260538578033447
    8. '[:]' → logprob: -4.510538578033447
    9. ']' → logprob: -5.135538578033447
    10. ')' → logprob: -6.135538578033447

Token 2672: ']' (ID: 60)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.3037725687026978
    2. ']' → logprob: -1.5537725687026978
    3. '])
' → logprob: -1.6787725687026978
    4. 'ci' → logprob: -1.8037725687026978
    5. ']
' → logprob: -2.178772449493408
    6. '])' → logprob: -3.928772449493408
    7. '],' → logprob: -4.553772449493408
    8. '
' → logprob: -5.553772449493408
    9. ']);' → logprob: -6.303772449493408
    10. '(len' → logprob: -6.678772449493408

Token 2673: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.835099458694458
    2. '[:]' → logprob: -1.210099458694458
    3. '[:' → logprob: -2.210099458694458
    4. '                               ' → logprob: -2.835099458694458
    5. '                                   ' → logprob: -3.460099458694458
    6. '```' → logprob: -3.585099458694458
    7. '[:-' → logprob: -4.710099220275879
    8. '<|end|>' → logprob: -5.210099220275879
    9. '+[' → logprob: -5.460099220275879
    10. ')' → logprob: -5.710099220275879

Token 2674: ' #' (ID: 1069)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.9146723747253418
    2. '                               ' → logprob: -1.1646723747253418
    3. '                                   ' → logprob: -2.414672374725342
    4. '[:' → logprob: -2.789672374725342
    5. '```' → logprob: -3.289672374725342
    6. '[' → logprob: -3.539672374725342
    7. '[:-' → logprob: -4.289672374725342
    8. '                           ' → logprob: -4.539672374725342
    9. '
' → logprob: -4.789672374725342
    10. '                                           ' → logprob: -5.164672374725342

Token 2675: ' copie' (ID: 134141)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25875625014305115
    2. '[:]' → logprob: -1.8837562799453735
    3. '[' → logprob: -3.008756160736084
    4. '[:' → logprob: -4.883756160736084
    5. ')' → logprob: -5.508756160736084
    6. '                                   ' → logprob: -5.883756160736084
    7. '#' → logprob: -6.258756160736084
    8. '                           ' → logprob: -7.258756160736084
    9. 'copy' → logprob: -7.383756160736084
    10. '                               ' → logprob: -7.383756160736084

Token 2676: '
' (ID: 198)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.860539436340332
    2. '                               ' → logprob: -0.985539436340332
    3. 'dp' → logprob: -1.985539436340332
    4. '                           ' → logprob: -4.110539436340332
    5. '
' → logprob: -4.235539436340332
    6. '                                           ' → logprob: -4.610539436340332
    7. '(dp' → logprob: -5.360539436340332
    8. '                                       ' → logprob: -5.360539436340332
    9. '                   ' → logprob: -5.985539436340332
    10. '```' → logprob: -6.485539436340332

Token 2677: '                                   ' (ID: 3523)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.617702066898346
    2. '                                   ' → logprob: -1.2427020072937012
    3. '                               ' → logprob: -2.617702007293701
    4. '                                           ' → logprob: -2.992702007293701
    5. '[' → logprob: -3.867702007293701
    6. '                                       ' → logprob: -4.992702007293701
    7. '[v' → logprob: -5.617702007293701
    8. '
' → logprob: -5.742702007293701
    9. '[-' → logprob: -6.367702007293701
    10. '                           ' → logprob: -6.492702007293701

Token 2678: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.019169295206665993
    2. '[' → logprob: -4.644169330596924
    3. 'ci' → logprob: -5.894169330596924
    4. '                                   ' → logprob: -6.144169330596924
    5. '                           ' → logprob: -6.644169330596924
    6. '                               ' → logprob: -7.394169330596924
    7. '```' → logprob: -8.019168853759766
    8. 'di' → logprob: -8.894168853759766
    9. '[-' → logprob: -9.019168853759766
    10. ' dp' → logprob: -9.019168853759766

Token 2679: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -5.097437315271236e-05
    2. '_TRACK' → logprob: -10.12505054473877
    3. '_tracker' → logprob: -12.12505054473877
    4. '_tracks' → logprob: -14.00005054473877
    5. '_tracking' → logprob: -14.12505054473877
    6. 'TRACK' → logprob: -14.50005054473877
    7. '                               ' → logprob: -14.50005054473877
    8. '                                   ' → logprob: -14.62505054473877
    9. 'Track' → logprob: -14.75005054473877
    10. '_trace' → logprob: -15.12505054473877

Token 2680: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0034674981143325567
    2. '[' → logprob: -5.878467559814453
    3. 'v' → logprob: -7.628467559814453
    4. '           ' → logprob: -10.503467559814453
    5. '[j' → logprob: -11.003467559814453
    6. '                   ' → logprob: -11.503467559814453
    7. '   ' → logprob: -11.503467559814453
    8. '                           ' → logprob: -11.628467559814453
    9. '                               ' → logprob: -11.753467559814453
    10. 'ci' → logprob: -11.753467559814453

Token 2681: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2055678367614746
    2. '+' → logprob: -1.7055678367614746
    3. '+c' → logprob: -5.830567836761475
    4. '[v' → logprob: -7.330567836761475
    5. '                                   ' → logprob: -8.580568313598633
    6. '+[' → logprob: -8.830568313598633
    7. '                               ' → logprob: -9.955568313598633
    8. '[' → logprob: -10.830568313598633
    9. '+w' → logprob: -10.955568313598633
    10. '+j' → logprob: -11.080568313598633

Token 2682: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03810862451791763
    2. 'ci' → logprob: -3.2881085872650146
    3. ' c' → logprob: -9.663108825683594
    4. ' ci' → logprob: -12.913108825683594
    5. 'cj' → logprob: -15.788108825683594
    6. '[c' → logprob: -15.913108825683594
    7. 'cil' → logprob: -16.038108825683594
    8. '
' → logprob: -16.413108825683594
    9. '   ' → logprob: -16.538108825683594
    10. '	c' → logprob: -16.663108825683594

Token 2683: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001499060745118186
    2. 'c' → logprob: -9.375149726867676
    3. 'al' → logprob: -10.250149726867676
    4. 'alc' → logprob: -11.500149726867676
    5. '_val' → logprob: -12.125149726867676
    6. '[val' → logprob: -12.500149726867676
    7. 'col' → logprob: -13.125149726867676
    8. 'cal' → logprob: -13.125149726867676
    9. '   ' → logprob: -13.625149726867676
    10. '[c' → logprob: -13.875149726867676

Token 2684: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012303499970585108
    2. '][' → logprob: -6.751230239868164
    3. '[c' → logprob: -11.751230239868164
    4. ' =' → logprob: -12.126230239868164
    5. ')[' → logprob: -12.251230239868164
    6. '[v' → logprob: -12.251230239868164
    7. '[-' → logprob: -12.376230239868164
    8. '[
' → logprob: -12.501230239868164
    9. '
' → logprob: -12.626230239868164
    10. ']' → logprob: -12.626230239868164

Token 2685: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -1.1517960956552997e-05
    2. ' ci' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. '(ci' → logprob: -15.125011444091797
    5. '           ' → logprob: -16.500011444091797
    6. 'cii' → logprob: -16.875011444091797
    7. '                   ' → logprob: -17.750011444091797
    8. '-ci' → logprob: -17.875011444091797
    9. ']' → logprob: -17.875011444091797
    10. '_ci' → logprob: -17.875011444091797

Token 2686: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12700968980789185
    2. ']+=' → logprob: -2.127009630203247
    3. ']+' → logprob: -9.752009391784668
    4. '+=' → logprob: -11.877009391784668
    5. ']=' → logprob: -12.752009391784668
    6. '+' → logprob: -12.752009391784668
    7. '']' → logprob: -12.877009391784668
    8. ']++;
' → logprob: -13.252009391784668
    9. '```' → logprob: -13.252009391784668
    10. ' ]' → logprob: -14.127009391784668

Token 2687: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4805392026901245
    2. ']+=' → logprob: -0.9805392026901245
    3. ']' → logprob: -5.105539321899414
    4. '=' → logprob: -8.730539321899414
    5. ' +=' → logprob: -8.730539321899414
    6. '+' → logprob: -10.855539321899414
    7. ']=' → logprob: -11.105539321899414
    8. '```' → logprob: -11.855539321899414
    9. ')' → logprob: -12.105539321899414
    10. ']+' → logprob: -12.855539321899414

Token 2688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -20.625
    5. '+' → logprob: -21.25
    6. '  ' → logprob: -22.625
    7. '       ' → logprob: -23.0
    8. '-' → logprob: -23.125
    9. '１' → logprob: -23.125
    10. '           ' → logprob: -23.3125

Token 2689: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2690: '               ' (ID: 506)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7898114919662476
    2. '```' → logprob: -1.1648114919662476
    3. '               ' → logprob: -1.5398114919662476
    4. '                                   ' → logprob: -4.539811611175537
    5. '                           ' → logprob: -5.664811611175537
    6. '
' → logprob: -6.414811611175537
    7. '                                       ' → logprob: -6.539811611175537
    8. '                   ' → logprob: -6.914811611175537
    9. '                       ' → logprob: -7.289811611175537
    10. '                                           ' → logprob: -8.289811134338379

Token 2691: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01166247483342886
    2. '                               ' → logprob: -4.761662483215332
    3. '```' → logprob: -6.511662483215332
    4. 'if' → logprob: -7.636662483215332
    5. 'for' → logprob: -7.886662483215332
    6. '
' → logprob: -8.511662483215332
    7. '                   ' → logprob: -8.761662483215332
    8. '                           ' → logprob: -8.886662483215332
    9. '                                   ' → logprob: -10.011662483215332
    10. ' if' → logprob: -10.261662483215332

Token 2692: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.009768604300916195
    2. ' =' → logprob: -4.759768486022949
    3. '```' → logprob: -8.13476848602295
    4. '_tokens' → logprob: -8.50976848602295
    5. ')' → logprob: -8.63476848602295
    6. '=' → logprob: -9.00976848602295
    7. '_used' → logprob: -9.63476848602295
    8. '=_' → logprob: -10.00976848602295
    9. 'Coins' → logprob: -10.00976848602295
    10. ']' → logprob: -10.63476848602295

Token 2693: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00015252856246661395
    2. 'in' → logprob: -9.625152587890625
    3. '_ins' → logprob: -10.125152587890625
    4. 'ints' → logprob: -11.375152587890625
    5. '```' → logprob: -12.250152587890625
    6. '_used' → logprob: -12.625152587890625
    7. 'inds' → logprob: -12.625152587890625
    8. '_' → logprob: -12.750152587890625
    9. 'uns' → logprob: -12.875152587890625
    10. 'ils' → logprob: -13.125152587890625

Token 2694: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12774761021137238
    2. '=' → logprob: -2.1277475357055664
    3. '_used' → logprob: -8.502747535705566
    4. '[' → logprob: -8.627747535705566
    5. '```' → logprob: -8.627747535705566
    6. '   ' → logprob: -9.252747535705566
    7. '=[' → logprob: -11.002747535705566
    8. 'used' → logprob: -11.002747535705566
    9. '           ' → logprob: -11.127747535705566
    10. ')' → logprob: -11.127747535705566

Token 2695: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012415809032972902
    2. ' dp' → logprob: -9.000123977661133
    3. '               ' → logprob: -15.125123977661133
    4. '           ' → logprob: -15.500123977661133
    5. '                   ' → logprob: -15.875123977661133
    6. '[' → logprob: -17.750123977661133
    7. '(dp' → logprob: -17.875123977661133
    8. '   ' → logprob: -18.250123977661133
    9. 'list' → logprob: -18.250123977661133
    10. '	dp' → logprob: -19.125123977661133

Token 2696: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -2.339278580620885e-06
    2. 'Track' → logprob: -13.750001907348633
    3. '_' → logprob: -14.875001907348633
    4. 'track' → logprob: -15.375001907348633
    5. '_TRACK' → logprob: -15.875001907348633
    6. '[' → logprob: -16.250001907348633
    7. '_trace' → logprob: -16.500001907348633
    8. '_tracks' → logprob: -16.500001907348633
    9. '_tr' → logprob: -16.875001907348633
    10. 't' → logprob: -17.000001907348633

Token 2697: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.511406809295295e-06
    2. 'rest' → logprob: -12.875006675720215
    3. '```' → logprob: -13.750006675720215
    4. '(rest' → logprob: -14.125006675720215
    5. ' [' → logprob: -14.500006675720215
    6. '               ' → logprob: -14.500006675720215
    7. '           ' → logprob: -15.250006675720215
    8. '   ' → logprob: -15.625006675720215
    9. '       ' → logprob: -16.0000057220459
    10. '
' → logprob: -16.1250057220459

Token 2698: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. '(rest' → logprob: -16.5
    4. ' rest' → logprob: -16.875
    5. '
' → logprob: -16.875
    6. '   ' → logprob: -17.0
    7. '```' → logprob: -17.125
    8. '               ' → logprob: -17.125
    9. '           ' → logprob: -18.625
    10. '       ' → logprob: -18.875

Token 2699: '_pay' (ID: 66263)
  Prédit: '_pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -5.478889215737581e-05
    2. '_can' → logprob: -11.250054359436035
    3. 'pay' → logprob: -11.500054359436035
    4. '_track' → logprob: -12.000054359436035
    5. '_rep' → logprob: -12.500054359436035
    6. '5' → logprob: -12.875054359436035
    7. '   ' → logprob: -13.000054359436035
    8. 'Pay' → logprob: -13.250054359436035
    9. 'ay' → logprob: -13.250054359436035
    10. '_' → logprob: -13.625054359436035

Token 2700: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02307203970849514
    2. ']
' → logprob: -3.8980720043182373
    3. '][' → logprob: -6.398072242736816
    4. '[' → logprob: -7.773072242736816
    5. '               ' → logprob: -8.648072242736816
    6. '```' → logprob: -10.273072242736816
    7. '[:]' → logprob: -10.398072242736816
    8. '][:' → logprob: -10.398072242736816
    9. '[:' → logprob: -10.898072242736816
    10. '][-' → logprob: -11.023072242736816

Token 2701: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012204925529658794
    2. '```' → logprob: -4.512205123901367
    3. '                   ' → logprob: -7.762205123901367
    4. '           ' → logprob: -8.512205123901367
    5. '                
' → logprob: -8.762205123901367
    6. 'if' → logprob: -8.887205123901367
    7. '
' → logprob: -9.637205123901367
    8. ' if' → logprob: -9.762205123901367
    9. '#' → logprob: -10.262205123901367
    10. '``' → logprob: -11.512205123901367

Token 2702: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14490900933742523
    2. 'if' (adapté à ' if') → logprob: -2.144908905029297
    3. '
' → logprob: -4.519908905029297
    4. '#' → logprob: -5.644908905029297
    5. ' if' → logprob: -6.144908905029297
    6. '```' → logprob: -7.144908905029297
    7. '                   ' → logprob: -8.394908905029297
    8. '                
' → logprob: -8.769908905029297
    9. '           ' → logprob: -10.394908905029297
    10. ' #' → logprob: -11.644908905029297

Token 2703: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0003360582049936056
    2. ' used' → logprob: -8.000335693359375
    3. 'None' → logprob: -14.500335693359375
    4. '   ' → logprob: -16.750335693359375
    5. '               ' → logprob: -17.875335693359375
    6. '           ' → logprob: -18.625335693359375
    7. ' None' → logprob: -18.875335693359375
    8. 'not' → logprob: -19.000335693359375
    9. '                   ' → logprob: -19.375335693359375
    10. '                               ' → logprob: -19.500335693359375

Token 2704: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -3.531315314830863e-06
    2. '_used' → logprob: -13.625003814697266
    3. '```' → logprob: -14.875003814697266
    4. '_' → logprob: -15.250003814697266
    5. '   ' → logprob: -15.375003814697266
    6. ' is' → logprob: -15.500003814697266
    7. '[' → logprob: -15.500003814697266
    8. 'co' → logprob: -16.000003814697266
    9. '_is' → logprob: -16.125003814697266
    10. '_coin' → logprob: -16.125003814697266

Token 2705: 'ins' (ID: 1564)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05020570382475853
    2. 's' → logprob: -3.300205707550049
    3. 'sed' → logprob: -5.050205707550049
    4. '_used' → logprob: -6.175205707550049
    5. 'se' → logprob: -6.300205707550049
    6. 'ined' → logprob: -7.925205707550049
    7. 'is' → logprob: -8.17520523071289
    8. 'ed' → logprob: -9.05020523071289
    9. 'in' → logprob: -9.05020523071289
    10. '==' → logprob: -9.17520523071289

Token 2706: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25196900963783264
    2. 'is' → logprob: -1.5019689798355103
    3. '==' → logprob: -10.626969337463379
    4. '[' → logprob: -12.001969337463379
    5. ' ==' → logprob: -13.376969337463379
    6. '               ' → logprob: -13.376969337463379
    7. ')' → logprob: -13.501969337463379
    8. '                   ' → logprob: -13.876969337463379
    9. ')is' → logprob: -14.001969337463379
    10. '```' → logprob: -14.001969337463379

Token 2707: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024758970830589533
    2. ' None' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.62747573852539
    4. 'not' → logprob: -17.50247573852539
    5. '_None' → logprob: -17.75247573852539
    6. '=None' → logprob: -18.37747573852539
    7. 'none' → logprob: -18.62747573852539
    8. '(None' → logprob: -18.62747573852539
    9. '```' → logprob: -20.12747573852539
    10. '_none' → logprob: -20.12747573852539

Token 2708: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5424271821975708
    2. '                   ' → logprob: -1.2924271821975708
    3. ':' → logprob: -2.0424270629882812
    4. '               ' → logprob: -4.417427062988281
    5. ' is' → logprob: -7.542427062988281
    6. '                       ' → logprob: -7.792427062988281
    7. ' continue' → logprob: -8.542427062988281
    8. '           ' → logprob: -8.792427062988281
    9. '                           ' → logprob: -8.792427062988281
    10. ' continues' → logprob: -9.167427062988281

Token 2709: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021925795823335648
    2. 'continue' → logprob: -4.021925926208496
    3. '               ' → logprob: -6.396925926208496
    4. '   ' → logprob: -7.146925926208496
    5. ' continue' → logprob: -7.271925926208496
    6. '                       ' → logprob: -8.146925926208496
    7. '                           ' → logprob: -9.021925926208496
    8. '```' → logprob: -9.271925926208496
    9. '                               ' → logprob: -9.771925926208496
    10. '                                   ' → logprob: -10.896925926208496

Token 2710: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6076043844223022
    2. '                   ' → logprob: -0.8576043844223022
    3. '                       ' → logprob: -3.607604503631592
    4. '   ' → logprob: -6.607604503631592
    5. ' continue' → logprob: -6.857604503631592
    6. '               ' → logprob: -7.357604503631592
    7. '                               ' → logprob: -7.732604503631592
    8. '```' → logprob: -8.732604026794434
    9. '                           ' → logprob: -9.232604026794434
    10. '       ' → logprob: -9.607604026794434

Token 2711: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2628119885921478
    2. '
' → logprob: -1.7628120183944702
    3. '                
' → logprob: -2.8878118991851807
    4. '<|end|>' → logprob: -6.76281213760376
    5. '                    
' → logprob: -7.26281213760376
    6. '#' → logprob: -7.51281213760376
    7. '```' → logprob: -7.63781213760376
    8. '            
' → logprob: -8.762811660766602
    9. '                   ' → logprob: -9.012811660766602
    10. '    
' → logprob: -9.262811660766602

Token 2712: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5272539854049683
    2. '               ' → logprob: -0.9022539854049683
    3. '                
' → logprob: -6.027254104614258
    4. '#' → logprob: -7.527254104614258
    5. '```' → logprob: -7.902254104614258
    6. '
' → logprob: -8.152254104614258
    7. '                   ' → logprob: -8.402254104614258
    8. '                    
' → logprob: -9.277254104614258
    9. 'continue' → logprob: -10.402254104614258
    10. ',
' → logprob: -11.152254104614258

Token 2713: ' impossible' (ID: 19786)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022996900603175163
    2. '#' → logprob: -4.77299690246582
    3. '
' → logprob: -4.77299690246582
    4. 'continue' → logprob: -6.14799690246582
    5. '           ' → logprob: -6.64799690246582
    6. '                   ' → logprob: -7.27299690246582
    7. ' continue' → logprob: -7.39799690246582
    8. '                
' → logprob: -7.64799690246582
    9. ' #' → logprob: -8.39799690246582
    10. '```' → logprob: -9.02299690246582

Token 2714: ' mais' (ID: 2899)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048685815185308456
    2. '                
' → logprob: -3.6736857891082764
    3. '
' → logprob: -4.5486860275268555
    4. '<|end|>' → logprob: -4.7986860275268555
    5. '```' → logprob: -7.4236860275268555
    6. '                   ' → logprob: -7.4236860275268555
    7. '#' → logprob: -7.7986860275268555
    8. '                    
' → logprob: -8.048686027526855
    9. '            
' → logprob: -8.798686027526855
    10. '                        
' → logprob: -8.798686027526855

Token 2715: ' déjà' (ID: 21229)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8045180439949036
    2. '                   ' → logprob: -1.3045179843902588
    3. 'continue' → logprob: -2.179517984390259
    4. '       ' → logprob: -2.679517984390259
    5. '                       ' → logprob: -2.929517984390259
    6. '   ' → logprob: -3.679517984390259
    7. ' continue' → logprob: -4.429518222808838
    8. '           ' → logprob: -5.304518222808838
    9. ':' → logprob: -7.554518222808838
    10. ':
' → logprob: -7.804518222808838

Token 2716: ' testé' (ID: 181173)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.6086515188217163
    2. 'continue' → logprob: -1.2336515188217163
    3. 'continu' → logprob: -2.983651638031006
    4. 'checked' → logprob: -3.108651638031006
    5. 'v' → logprob: -3.733651638031006
    6. 'fait' → logprob: -4.608651638031006
    7. '```' → logprob: -4.858651638031006
    8. 'contin' → logprob: -5.233651638031006
    9. 'check' → logprob: -5.483651638031006
    10. 'fil' → logprob: -6.483651638031006

Token 2717: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014077115803956985
    2. '                
' → logprob: -4.514077186584473
    3. '
' → logprob: -6.514077186584473
    4. '                   ' → logprob: -8.014077186584473
    5. '```' → logprob: -8.264077186584473
    6. '#' → logprob: -8.389077186584473
    7. '<|end|>' → logprob: -8.389077186584473
    8. '                    
' → logprob: -8.889077186584473
    9. '           ' → logprob: -9.764077186584473
    10. '            
' → logprob: -9.764077186584473

Token 2718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018059646245092154
    2. '
' → logprob: -7.001805782318115
    3. '#' → logprob: -7.376805782318115
    4. '                
' → logprob: -8.751806259155273
    5. '```' → logprob: -9.751806259155273
    6. '                   ' → logprob: -10.751806259155273
    7. 'change' → logprob: -11.501806259155273
    8. '``' → logprob: -12.876806259155273
    9. 'coin' → logprob: -13.001806259155273
    10. 'new' → logprob: -13.001806259155273

Token 2719: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0325048603117466
    2. '#' (adapté à ' #') → logprob: -3.5325047969818115
    3. '
' → logprob: -6.282505035400391
    4. 'new' → logprob: -8.15750503540039
    5. '                
' → logprob: -8.65750503540039
    6. '```' → logprob: -8.65750503540039
    7. 'coins' → logprob: -9.65750503540039
    8. '                   ' → logprob: -10.15750503540039
    9. ' #' → logprob: -10.28250503540039
    10. 'pay' → logprob: -10.53250503540039

Token 2720: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015766631811857224
    2. '#' → logprob: -4.515766620635986
    3. '
' → logprob: -5.765766620635986
    4. 'coins' → logprob: -7.640766620635986
    5. '```' → logprob: -8.015767097473145
    6. 'new' → logprob: -8.515767097473145
    7. '                
' → logprob: -8.765767097473145
    8. '                   ' → logprob: -9.265767097473145
    9. 'coin' → logprob: -9.390767097473145
    10. ' #' → logprob: -9.640767097473145

Token 2721: ' calc' (ID: 25691)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.539350152015686
    2. '#' → logprob: -1.039350152015686
    3. 'contin' → logprob: -3.5393500328063965
    4. '               ' → logprob: -4.7893500328063965
    5. ' continue' → logprob: -5.2893500328063965
    6. '           ' → logprob: -5.6643500328063965
    7. ' #' → logprob: -5.7893500328063965
    8. 'pe' → logprob: -6.1643500328063965
    9. 'used' → logprob: -6.6643500328063965
    10. 'pro' → logprob: -6.6643500328063965

Token 2722: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.005423361901193857
    2. 'cule' → logprob: -5.880423545837402
    3. 'ul' → logprob: -6.380423545837402
    4. 'ulé' → logprob: -7.630423545837402
    5. 'ulate' → logprob: -9.380423545837402
    6. 'cul' → logprob: -9.380423545837402
    7. '#' → logprob: -9.630423545837402
    8. 'uler' → logprob: -10.255423545837402
    9. 'ules' → logprob: -11.130423545837402
    10. 'ulaire' → logprob: -11.380423545837402

Token 2723: ' les' (ID: 1341)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5711458921432495
    2. '#' → logprob: -1.5711458921432495
    3. '               ' → logprob: -2.821146011352539
    4. '```' → logprob: -3.071146011352539
    5. 'used' → logprob: -3.196146011352539
    6. 'coins' → logprob: -3.696146011352539
    7. 'les' → logprob: -4.446146011352539
    8. 'updated' → logprob: -5.196146011352539
    9. 'nou' → logprob: -5.446146011352539
    10. '           ' → logprob: -5.446146011352539

Token 2724: ' nouvelles' (ID: 37997)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16517159342765808
    2. 'nou' → logprob: -2.9151716232299805
    3. 'used' → logprob: -3.2901716232299805
    4. '#' → logprob: -4.0401716232299805
    5. 'coins' → logprob: -4.1651716232299805
    6. 'next' → logprob: -4.5401716232299805
    7. 'n' → logprob: -5.1651716232299805
    8. 'pieces' → logprob: -5.5401716232299805
    9. 'remaining' → logprob: -6.5401716232299805
    10. 'rest' → logprob: -6.5401716232299805

Token 2725: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.010469590313732624
    2. 'pieces' → logprob: -4.760469436645508
    3. '_co' → logprob: -6.885469436645508
    4. 'coin' → logprob: -8.010469436645508
    5. 'co' → logprob: -8.385469436645508
    6. '#' → logprob: -9.010469436645508
    7. 'state' → logprob: -10.260469436645508
    8. 'pi' → logprob: -10.885469436645508
    9. '```' → logprob: -11.385469436645508
    10. 'new' → logprob: -11.635469436645508

Token 2726: ' après' (ID: 16460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9336993098258972
    2. 'new' → logprob: -2.058699369430542
    3. '=' → logprob: -2.558699369430542
    4. '_after' → logprob: -2.558699369430542
    5. '_new' → logprob: -2.558699369430542
    6. '               ' → logprob: -2.683699369430542
    7. '_in' → logprob: -4.308699131011963
    8. '```' → logprob: -4.308699131011963
    9. 'poss' → logprob: -4.433699131011963
    10. '_' → logprob: -4.433699131011963

Token 2727: ' paiement' (ID: 78226)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6111693978309631
    2. 'sou' → logprob: -1.8611693382263184
    3. 'coins' → logprob: -1.8611693382263184
    4. 'sub' → logprob: -2.7361693382263184
    5. 'payment' → logprob: -3.4861693382263184
    6. 'subtract' → logprob: -4.986169338226318
    7. 'rem' → logprob: -4.986169338226318
    8. 'pay' → logprob: -5.236169338226318
    9. ' #' → logprob: -5.486169338226318
    10. 's' → logprob: -5.736169338226318

Token 2728: ' et' (ID: 859)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5803977251052856
    2. '               ' → logprob: -0.8303977251052856
    3. ' new' → logprob: -6.830397605895996
    4. 'after' → logprob: -7.080397605895996
    5. '```' → logprob: -7.205397605895996
    6. 'coins' → logprob: -8.705397605895996
    7. '[new' → logprob: -8.955397605895996
    8. '``' → logprob: -8.955397605895996
    9. 'current' → logprob: -9.080397605895996
    10. 'received' → logprob: -9.080397605895996

Token 2729: ' rendu' (ID: 86461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13422338664531708
    2. 'change' → logprob: -3.134223461151123
    3. 'mon' → logprob: -3.759223461151123
    4. 'aj' → logprob: -3.884223461151123
    5. ' rendu' → logprob: -4.759223461151123
    6. 'rem' → logprob: -5.009223461151123
    7. 'rend' → logprob: -5.009223461151123
    8. 'ch' → logprob: -5.134223461151123
    9. 're' → logprob: -5.884223461151123
    10. 'ré' → logprob: -6.509223461151123

Token 2730: ' monnaie' (ID: 168963)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09495355933904648
    2. 'new' → logprob: -2.4699535369873047
    3. 'after' → logprob: -6.594953536987305
    4. 'used' → logprob: -7.344953536987305
    5. 'pay' → logprob: -7.469953536987305
    6. '```' → logprob: -7.594953536987305
    7. '#' → logprob: -7.844953536987305
    8. ' new' → logprob: -7.969953536987305
    9. '                
' → logprob: -8.344953536987305
    10. 'received' → logprob: -8.469953536987305

Token 2731: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08070413023233414
    2. 'new' → logprob: -2.5807042121887207
    3. 'after' → logprob: -7.205704212188721
    4. '```' → logprob: -8.955703735351562
    5. 'pay' → logprob: -9.080703735351562
    6. 'used' → logprob: -9.080703735351562
    7. 'received' → logprob: -9.205703735351562
    8. 'next' → logprob: -9.705703735351562
    9. ' new' → logprob: -9.830703735351562
    10. '                
' → logprob: -9.955703735351562

Token 2732: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01826302893459797
    2. 'new' → logprob: -4.01826286315918
    3. ' new' → logprob: -9.76826286315918
    4. '```' → logprob: -10.76826286315918
    5. 'next' → logprob: -11.01826286315918
    6. '                
' → logprob: -12.26826286315918
    7. 'current' → logprob: -13.14326286315918
    8. 'coins' → logprob: -13.26826286315918
    9. 'received' → logprob: -13.51826286315918
    10. '``' → logprob: -13.64326286315918

Token 2733: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22520612180233002
    2. 'new' (adapté à ' new') → logprob: -1.8502061367034912
    3. '#' → logprob: -4.475205898284912
    4. ' new' → logprob: -4.975205898284912
    5. 'coins' → logprob: -4.975205898284912
    6. 'pay' → logprob: -5.600205898284912
    7. 'used' → logprob: -6.100205898284912
    8. 'current' → logprob: -6.350205898284912
    9. '```' → logprob: -6.350205898284912
    10. 'old' → logprob: -6.475205898284912

Token 2734: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0017893016338348389
    2. 'coins' → logprob: -6.376789093017578
    3. '_' → logprob: -10.626789093017578
    4. '_coin' → logprob: -10.626789093017578
    5. '_used' → logprob: -11.126789093017578
    6. 'Coins' → logprob: -12.126789093017578
    7. '_tpl' → logprob: -12.251789093017578
    8. '```' → logprob: -13.501789093017578
    9. '_coeff' → logprob: -13.626789093017578
    10. '_available' → logprob: -13.626789093017578

Token 2735: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00021855637896806002
    2. '_ins' → logprob: -9.375218391418457
    3. 'in' → logprob: -9.625218391418457
    4. '_dict' → logprob: -11.375218391418457
    5. 'coins' → logprob: -11.375218391418457
    6. 'inds' → logprob: -11.875218391418457
    7. 'inst' → logprob: -12.375218391418457
    8. '_' → logprob: -12.500218391418457
    9. 'ints' → logprob: -12.750218391418457
    10. 'insu' → logprob: -12.750218391418457

Token 2736: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038112182170152664
    2. '=' → logprob: -3.288112163543701
    3. '           ' → logprob: -10.28811264038086
    4. '   ' → logprob: -11.41311264038086
    5. '```' → logprob: -11.66311264038086
    6. '               ' → logprob: -12.41311264038086
    7. '=[' → logprob: -13.16311264038086
    8. '       ' → logprob: -13.53811264038086
    9. '    ' → logprob: -13.78811264038086
    10. '_' → logprob: -13.91311264038086

Token 2737: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894622325897217
    2. '=' → logprob: -2.4639463424682617
    3. '   ' → logprob: -13.588946342468262
    4. 'coins' → logprob: -13.963946342468262
    5. '           ' → logprob: -14.213946342468262
    6. '=[' → logprob: -14.588946342468262
    7. '(co' → logprob: -14.713946342468262
    8. ' ' → logprob: -14.838946342468262
    9. ')' → logprob: -14.838946342468262
    10. '[' → logprob: -15.213946342468262

Token 2738: ' []
' (ID: 8911)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.009297704324126244
    2. ' coins' → logprob: -5.009297847747803
    3. '[' → logprob: -6.259297847747803
    4. '               ' → logprob: -8.009297370910645
    5. '           ' → logprob: -9.134297370910645
    6. '   ' → logprob: -9.259297370910645
    7. ' [' → logprob: -10.009297370910645
    8. '                   ' → logprob: -11.384297370910645
    9. 'coin' → logprob: -11.384297370910645
    10. 'co' → logprob: -11.509297370910645

Token 2739: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7325714826583862
    2. '               ' → logprob: -1.2325714826583862
    3. 'coins' → logprob: -1.7325714826583862
    4. '[
' → logprob: -4.107571601867676
    5. '           ' → logprob: -4.232571601867676
    6. '                   ' → logprob: -4.857571601867676
    7. 'for' → logprob: -5.857571601867676
    8. '[]
' → logprob: -6.232571601867676
    9. 'co' → logprob: -6.732571601867676
    10. '   ' → logprob: -6.857571601867676

Token 2740: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9186960458755493
    2. 'coins' → logprob: -0.9186960458755493
    3. '[' → logprob: -2.4186959266662598
    4. '[]
' → logprob: -3.4186959266662598
    5. '               ' → logprob: -3.6686959266662598
    6. '[
' → logprob: -4.41869592666626
    7. '   ' → logprob: -4.79369592666626
    8. '[sub' → logprob: -5.04369592666626
    9. '
' → logprob: -5.16869592666626
    10. '           ' → logprob: -5.29369592666626

Token 2741: ' Pieces' (ID: 118132)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11256754398345947
    2. '               ' → logprob: -2.73756742477417
    3. '#' → logprob: -4.11256742477417
    4. 'coins' → logprob: -4.23756742477417
    5. 'new' → logprob: -5.36256742477417
    6. '[' → logprob: -6.61256742477417
    7. 'used' → logprob: -6.61256742477417
    8. '```' → logprob: -7.36256742477417
    9. ' for' → logprob: -7.73756742477417
    10. '           ' → logprob: -7.98756742477417

Token 2742: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8994684815406799
    2. '               ' → logprob: -1.3994684219360352
    3. '=' → logprob: -2.274468421936035
    4. ' =' → logprob: -2.399468421936035
    5. 'en' → logprob: -3.399468421936035
    6. 'pour' → logprob: -4.024468421936035
    7. '           ' → logprob: -4.149468421936035
    8. 'used' → logprob: -4.274468421936035
    9. 'after' → logprob: -4.524468421936035
    10. '_after' → logprob: -5.274468421936035

Token 2743: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002614659257233143
    2. '[' → logprob: -6.752614498138428
    3. 'hand' → logprob: -7.252614498138428
    4. '_main' → logprob: -7.627614498138428
    5. 'pos' → logprob: -10.127614974975586
    6. 'm' → logprob: -10.752614974975586
    7. 'mano' → logprob: -11.127614974975586
    8. '```' → logprob: -11.502614974975586
    9. 'stock' → logprob: -11.627614974975586
    10. '[(' → logprob: -11.627614974975586

Token 2744: ' -' (ID: 533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0628200769424438
    2. ' =' → logprob: -1.1878200769424438
    3. '=' → logprob: -1.5628200769424438
    4. 'for' → logprob: -2.3128199577331543
    5. '           ' → logprob: -4.312819957733154
    6. '[' → logprob: -5.437819957733154
    7. '[:]' → logprob: -5.562819957733154
    8. ' for' → logprob: -5.687819957733154
    9. '=[]
' → logprob: -5.937819957733154
    10. '=[]' → logprob: -6.437819957733154

Token 2745: ' utilisés' (ID: 94258)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.006170282606035471
    2. '[' → logprob: -5.256170272827148
    3. ' used' → logprob: -7.756170272827148
    4. 'coins' → logprob: -8.131170272827148
    5. 'list' → logprob: -9.756170272827148
    6. '   ' → logprob: -9.756170272827148
    7. 'available' → logprob: -10.506170272827148
    8. ' [' → logprob: -10.881170272827148
    9. '[
' → logprob: -11.131170272827148
    10. 'avail' → logprob: -12.131170272827148

Token 2746: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6944286227226257
    2. '=' → logprob: -1.9444286823272705
    3. 'for' → logprob: -2.4444286823272705
    4. '[' → logprob: -2.6944286823272705
    5. '               ' → logprob: -3.0694286823272705
    6. '[i' → logprob: -3.9444286823272705
    7. '=[' → logprob: -4.069428443908691
    8. '           ' → logprob: -4.194428443908691
    9. '
' → logprob: -4.444428443908691
    10. '_co' → logprob: -4.694428443908691

Token 2747: ' rendu' (ID: 86461)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.07699678838253021
    2. 'change' → logprob: -3.4519968032836914
    3. '[' → logprob: -3.7019968032836914
    4. 'used' → logprob: -5.076996803283691
    5. 'list' → logprob: -5.326996803283691
    6. ' coins' → logprob: -5.701996803283691
    7. 'co' → logprob: -7.951996803283691
    8. 'make' → logprob: -7.951996803283691
    9. '[c' → logprob: -8.326996803283691
    10. 'new' → logprob: -8.326996803283691

Token 2748: ' monnaie' (ID: 168963)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7465099692344666
    2. '=' → logprob: -0.8715099692344666
    3. '               ' → logprob: -2.9965100288391113
    4. 'coins' → logprob: -3.6215100288391113
    5. 'for' → logprob: -4.496510028839111
    6. ' coins' → logprob: -5.871510028839111
    7. '           ' → logprob: -5.996510028839111
    8. ' for' → logprob: -6.121510028839111
    9. '(co' → logprob: -6.371510028839111
    10. '[' → logprob: -6.496510028839111

Token 2749: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7627391219139099
    2. '               ' → logprob: -0.8877391219139099
    3. '=' → logprob: -2.6377391815185547
    4. 'for' → logprob: -3.7627391815185547
    5. '[' → logprob: -5.637739181518555
    6. '[:]' → logprob: -5.637739181518555
    7. ' for' → logprob: -5.762739181518555
    8. '           ' → logprob: -5.887739181518555
    9. '(co' → logprob: -6.137739181518555
    10. '=[]
' → logprob: -6.262739181518555

Token 2750: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4718840420246124
    2. '[' → logprob: -2.72188401222229
    3. 'coins' → logprob: -2.72188401222229
    4. 'used' → logprob: -2.84688401222229
    5. '               ' → logprob: -2.97188401222229
    6. ')
' → logprob: -3.34688401222229
    7. 'for' → logprob: -3.97188401222229
    8. '[-' → logprob: -4.721884250640869
    9. '```' → logprob: -5.096884250640869
    10. '[:-' → logprob: -5.221884250640869

Token 2751: 'auf' (ID: 7483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1815459132194519
    2. '500' → logprob: -2.3065459728240967
    3. 'um' → logprob: -4.431545734405518
    4. '=' → logprob: -4.806545734405518
    5. '1' → logprob: -5.306545734405518
    6. 'ub' → logprob: -5.306545734405518
    7. '[:-' → logprob: -5.306545734405518
    8. '[:' → logprob: -6.181545734405518
    9. ')' → logprob: -6.181545734405518
    10. '   ' → logprob: -6.431545734405518

Token 2752: ' pièces' (ID: 49165)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.008151397109031677
    2. 'les' → logprob: -6.008151531219482
    3. '100' → logprob: -6.633151531219482
    4. '[' → logprob: -7.008151531219482
    5. 'pieces' → logprob: -7.258151531219482
    6. 'le' → logprob: -7.383151531219482
    7. 'la' → logprob: -7.883151531219482
    8. 'coins' → logprob: -8.133151054382324
    9. ' ' → logprob: -8.258151054382324
    10. '```' → logprob: -8.508151054382324

Token 2753: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07991831749677658
    2. '[' → logprob: -3.204918384552002
    3. 'de' → logprob: -4.204918384552002
    4. '```' → logprob: -5.204918384552002
    5. '_' → logprob: -5.329918384552002
    6. '1' → logprob: -6.329918384552002
    7. '100' → logprob: -6.329918384552002
    8. '   ' → logprob: -6.579918384552002
    9. '=' → logprob: -7.204918384552002
    10. 'c' → logprob: -7.454918384552002

Token 2754: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.1735335737466812
    2. '1' → logprob: -2.9235336780548096
    3. '100' → logprob: -3.1735336780548096
    4. '[' → logprob: -3.6735336780548096
    5. 'de' → logprob: -4.9235334396362305
    6. '5' → logprob: -5.1735334396362305
    7. '```' → logprob: -5.2985334396362305
    8. 'c' → logprob: -5.5485334396362305
    9. 'of' → logprob: -5.5485334396362305
    10. 'in' → logprob: -5.5485334396362305

Token 2755: ' yen' (ID: 34890)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9879654049873352
    2. ')' → logprob: -1.4879653453826904
    3. '               ' → logprob: -2.6129653453826904
    4. '[' → logprob: -2.7379653453826904
    5. '[:-' → logprob: -2.7379653453826904
    6. ',' → logprob: -2.8629653453826904
    7. ']
' → logprob: -3.2379653453826904
    8. ']' → logprob: -3.7379653453826904
    9. '-' → logprob: -4.2379655838012695
    10. '):
' → logprob: -4.8629655838012695

Token 2756: ' rend' (ID: 15016)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6425961256027222
    2. '[:-' → logprob: -1.7675961256027222
    3. ')' → logprob: -2.1425962448120117
    4. '               ' → logprob: -2.7675962448120117
    5. ')
' → logprob: -2.8925962448120117
    6. '):
' → logprob: -4.267596244812012
    7. ',' → logprob: -4.392596244812012
    8. '[:' → logprob: -5.142596244812012
    9. ']' → logprob: -5.517596244812012
    10. ':' → logprob: -5.767596244812012

Token 2757: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.005711558274924755
    2. 'ue' → logprob: -5.505711555480957
    3. 'u' → logprob: -7.005711555480957
    4. 'ées' → logprob: -7.880711555480957
    5. 'es' → logprob: -10.255711555480957
    6. 'us' → logprob: -10.255711555480957
    7. '{' → logprob: -10.255711555480957
    8. ')' → logprob: -10.255711555480957
    9. '[' → logprob: -10.630711555480957
    10. ']' → logprob: -10.880711555480957

Token 2758: '!' (ID: 0)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.4961826205253601
    2. '[' → logprob: -1.6211826801300049
    3. ')' → logprob: -2.621182680130005
    4. ')
' → logprob: -3.246182680130005
    5. '               ' → logprob: -3.246182680130005
    6. '[:' → logprob: -3.871182680130005
    7. '
' → logprob: -5.246182441711426
    8. '):
' → logprob: -6.121182441711426
    9. '           ' → logprob: -6.496182441711426
    10. ':' → logprob: -6.871182441711426

Token 2759: ' Car' (ID: 4004)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4347367584705353
    2. '[' → logprob: -1.934736728668213
    3. '[:-' → logprob: -2.059736728668213
    4. '
' → logprob: -3.934736728668213
    5. ')' → logprob: -4.059736728668213
    6. '           ' → logprob: -4.934736728668213
    7. ')
' → logprob: -5.309736728668213
    8. '[::-' → logprob: -5.684736728668213
    9. '                
' → logprob: -5.809736728668213
    10. '[:' → logprob: -5.809736728668213

Token 2760: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.8761075735092163
    2. '#' → logprob: -1.7511075735092163
    3. '0' → logprob: -2.251107692718506
    4. '   ' → logprob: -2.501107692718506
    5. 'new' → logprob: -3.251107692718506
    6. '```' → logprob: -3.501107692718506
    7. '100' → logprob: -4.001107692718506
    8. ' ' → logprob: -4.126107692718506
    9. '           ' → logprob: -4.376107692718506
    10. 'c' → logprob: -4.376107692718506

Token 2761: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.051923155784607
    2. '#' → logprob: -2.3019232749938965
    3. '```' → logprob: -2.4269232749938965
    4. 'pay' → logprob: -2.5519232749938965
    5. 'elles' → logprob: -2.8019232749938965
    6. '   ' → logprob: -3.4269232749938965
    7. ' ' → logprob: -3.6769232749938965
    8. '0' → logprob: -3.6769232749938965
    9. 'c' → logprob: -3.8019232749938965
    10. 'ils' → logprob: -4.3019232749938965

Token 2762: ' yen' (ID: 34890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2486705780029297
    2. ']' → logprob: -2.1236705780029297
    3. ')' → logprob: -2.3736705780029297
    4. ')]' → logprob: -2.3736705780029297
    5. 'yen' → logprob: -2.8736705780029297
    6. 'not' → logprob: -2.8736705780029297
    7. '])' → logprob: -2.9986705780029297
    8. ',' → logprob: -2.9986705780029297
    9. ' not' → logprob: -3.7486705780029297
    10. 'in' → logprob: -3.8736705780029297

Token 2763: ' revient' (ID: 95900)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.872166633605957
    2. ']' → logprob: -1.872166633605957
    3. ':' → logprob: -2.122166633605957
    4. ')]' → logprob: -2.872166633605957
    5. ',' → logprob: -3.122166633605957
    6. '```' → logprob: -3.372166633605957
    7. 'not' → logprob: -3.747166633605957
    8. '])' → logprob: -3.872166633605957
    9. '),' → logprob: -4.247166633605957
    10. 'n' → logprob: -4.622166633605957

Token 2764: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6836360692977905
    2. ')' → logprob: -2.55863618850708
    3. '=' → logprob: -2.55863618850708
    4. 'en' → logprob: -2.55863618850708
    5. ':' → logprob: -2.68363618850708
    6. 'dans' → logprob: -3.05863618850708
    7. ' en' → logprob: -3.18363618850708
    8. ' =' → logprob: -3.68363618850708
    9. 'à' → logprob: -3.80863618850708
    10. ' pas' → logprob: -3.93363618850708

Token 2765: ' pièce' (ID: 56132)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.9231553077697754
    2. 'main' → logprob: -1.5481553077697754
    3. 'payment' → logprob: -1.9231553077697754
    4. 'pai' → logprob: -2.5481553077697754
    5. 'pieces' → logprob: -3.1731553077697754
    6. 'coins' → logprob: -3.7981553077697754
    7. 'pay' → logprob: -3.9231553077697754
    8. '```' → logprob: -4.673155307769775
    9. 'pos' → logprob: -4.798155307769775
    10. 'mon' → logprob: -4.923155307769775

Token 2766: ' importante' (ID: 13431)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0637351274490356
    2. ')' → logprob: -1.1887351274490356
    3. ',' → logprob: -2.188735008239746
    4. 's' → logprob: -2.688735008239746
    5. '[' → logprob: -3.438735008239746
    6. '):
' → logprob: -3.813735008239746
    7. '   ' → logprob: -3.938735008239746
    8. '_list' → logprob: -4.563735008239746
    9. '
' → logprob: -4.813735008239746
    10. 'es' → logprob: -4.938735008239746

Token 2767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8303305506706238
    2. '               ' → logprob: -1.5803306102752686
    3. ')
' → logprob: -2.3303306102752686
    4. '[' → logprob: -2.5803306102752686
    5. ',' → logprob: -2.9553306102752686
    6. '[:-' → logprob: -3.7053306102752686
    7. '):
' → logprob: -3.8303306102752686
    8. ' =' → logprob: -4.2053303718566895
    9. '```' → logprob: -4.5803303718566895
    10. '                   ' → logprob: -4.9553303718566895

Token 2768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17373718321323395
    2. '[' → logprob: -2.7987372875213623
    3. '```' → logprob: -3.0487372875213623
    4. '           ' → logprob: -3.7987372875213623
    5. '``' → logprob: -4.798737049102783
    6. '[
' → logprob: -5.173737049102783
    7. '                   ' → logprob: -6.048737049102783
    8. '                
' → logprob: -6.048737049102783
    9. '
' → logprob: -6.548737049102783
    10. '   ' → logprob: -6.673737049102783

Token 2769: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6317057013511658
    2. '[' → logprob: -1.7567057609558105
    3. '               ' → logprob: -2.0067057609558105
    4. '[]
' → logprob: -2.3817057609558105
    5. '```' → logprob: -3.8817057609558105
    6. ' coins' → logprob: -4.5067057609558105
    7. '           ' → logprob: -4.6317057609558105
    8. '[
' → logprob: -4.6317057609558105
    9. '``' → logprob: -5.6317057609558105
    10. '[sub' → logprob: -5.8817057609558105

Token 2770: ' Ici' (ID: 145754)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09378049522638321
    2. 'coins' → logprob: -3.843780517578125
    3. 'for' → logprob: -3.968780517578125
    4. 'new' → logprob: -4.218780517578125
    5. '#' → logprob: -4.593780517578125
    6. '           ' → logprob: -5.593780517578125
    7. '[' → logprob: -5.593780517578125
    8. '                   ' → logprob: -5.968780517578125
    9. 'used' → logprob: -6.218780517578125
    10. '
' → logprob: -6.343780517578125

Token 2771: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15296050906181335
    2. 'for' → logprob: -2.9029605388641357
    3. ' for' → logprob: -3.1529605388641357
    4. '#' → logprob: -4.402960300445557
    5. ' new' → logprob: -4.527960300445557
    6. 'new' → logprob: -4.902960300445557
    7. ' #' → logprob: -5.277960300445557
    8. 'coins' → logprob: -6.152960300445557
    9. 'old' → logprob: -6.902960300445557
    10. '
' → logprob: -7.027960300445557

Token 2772: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.607377827167511
    2. 'for' → logprob: -1.6073777675628662
    3. ' #' → logprob: -2.857377767562866
    4. 'new' → logprob: -2.857377767562866
    5. ' for' → logprob: -3.232377767562866
    6. '               ' → logprob: -3.357377767562866
    7. ' new' → logprob: -3.732377767562866
    8. 'on' → logprob: -4.107378005981445
    9. ' on' → logprob: -4.357378005981445
    10. 'coins' → logprob: -5.482378005981445

Token 2773: ' monnaie' (ID: 168963)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15459437668323517
    2. 'new' → logprob: -2.1545944213867188
    3. 'for' → logprob: -4.029594421386719
    4. '500' → logprob: -5.529594421386719
    5. 'pieces' → logprob: -6.654594421386719
    6. 'used' → logprob: -6.904594421386719
    7. 'def' → logprob: -7.654594421386719
    8. ' #' → logprob: -7.779594421386719
    9. 'coins' → logprob: -7.779594421386719
    10. '
' → logprob: -7.779594421386719

Token 2774: ' rend' (ID: 15016)
  Prédit: ' rend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rend' → logprob: -0.3049580156803131
    2. 'r' → logprob: -1.9299579858779907
    3. '_r' → logprob: -3.0549581050872803
    4. 'rend' → logprob: -3.5549581050872803
    5. ' rendu' → logprob: -3.8049581050872803
    6. ' ' → logprob: -5.804957866668701
    7. '_render' → logprob: -5.804957866668701
    8. '_' → logprob: -6.054957866668701
    9. '   ' → logprob: -6.304957866668701
    10. ' r' → logprob: -6.679957866668701

Token 2775: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5877202749252319
    2. 'ée' → logprob: -0.9627202749252319
    3. 'e' → logprob: -3.8377203941345215
    4. 'rée' → logprob: -3.8377203941345215
    5. 'ee' → logprob: -5.3377203941345215
    6. 'uée' → logprob: -5.7127203941345215
    7. '   ' → logprob: -5.8377203941345215
    8. 'urée' → logprob: -6.3377203941345215
    9. '__' → logprob: -6.5877203941345215
    10. 'née' → logprob: -6.8377203941345215

Token 2776: ' contient' (ID: 89067)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.588485836982727
    2. '_co' → logprob: -1.213485836982727
    3. ' =' → logprob: -2.7134857177734375
    4. '500' → logprob: -3.4634857177734375
    5. '_' → logprob: -3.9634857177734375
    6. '_lst' → logprob: -5.0884857177734375
    7. '_c' → logprob: -5.4634857177734375
    8. '=' → logprob: -5.4634857177734375
    9. '[' → logprob: -5.8384857177734375
    10. '_dict' → logprob: -6.3384857177734375

Token 2777: ' pièces' (ID: 49165)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.5400491952896118
    2. '{' → logprob: -1.1650491952896118
    3. 'des' → logprob: -3.5400490760803223
    4. '[' → logprob: -3.7900490760803223
    5. 'les' → logprob: -4.415049076080322
    6. 'une' → logprob: -4.415049076080322
    7. '   ' → logprob: -5.665049076080322
    8. 'plus' → logprob: -5.790049076080322
    9. '```' → logprob: -5.790049076080322
    10. '#' → logprob: -5.915049076080322

Token 2778: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.09450104832649231
    2. '               ' → logprob: -2.96950101852417
    3. '[' → logprob: -4.84450101852417
    4. '   ' → logprob: -4.96950101852417
    5. ' ' → logprob: -5.09450101852417
    6. '_' → logprob: -5.71950101852417
    7. 'de' → logprob: -5.96950101852417
    8. '       ' → logprob: -6.09450101852417
    9. '```' → logprob: -6.71950101852417
    10. '5' → logprob: -6.84450101852417

Token 2779: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.02851194143295288
    2. '1' → logprob: -4.278512001037598
    3. '100' → logprob: -4.903512001037598
    4. '{' → logprob: -5.653512001037598
    5. '=' → logprob: -7.403512001037598
    6. 'of' → logprob: -7.528512001037598
    7. '   ' → logprob: -7.653512001037598
    8. 'in' → logprob: -8.153512001037598
    9. '#' → logprob: -8.153512001037598
    10. '[' → logprob: -8.528512001037598

Token 2780: ' yen' (ID: 34890)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09123116731643677
    2. '               ' → logprob: -2.966231107711792
    3. '_co' → logprob: -4.966231346130371
    4. '_list' → logprob: -5.341231346130371
    5. '_' → logprob: -5.591231346130371
    6. '=' → logprob: -5.591231346130371
    7. '
' → logprob: -6.466231346130371
    8. '=[]
' → logprob: -6.466231346130371
    9. '                   ' → logprob: -7.091231346130371
    10. '500' → logprob: -7.091231346130371

Token 2781: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1536683887243271
    2. '
' → logprob: -2.4036684036254883
    3. '[' → logprob: -4.403668403625488
    4. ' =' → logprob: -4.653668403625488
    5. '                
' → logprob: -5.278668403625488
    6. ':
' → logprob: -5.403668403625488
    7. '[]
' → logprob: -5.778668403625488
    8. '[
' → logprob: -6.153668403625488
    9. ')
' → logprob: -6.278668403625488
    10. '           ' → logprob: -6.278668403625488

Token 2782: ' qu' (ID: 474)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.575911283493042
    2. '#' → logprob: -1.200911283493042
    3. 'new' → logprob: -2.575911283493042
    4. 'coins' → logprob: -3.825911283493042
    5. '[' → logprob: -4.075911521911621
    6. '...' → logprob: -5.325911521911621
    7. '
' → logprob: -5.950911521911621
    8. ' #' → logprob: -6.075911521911621
    9. '[new' → logprob: -6.075911521911621
    10. '                   ' → logprob: -6.700911521911621

Token 2783: ''on' (ID: 25812)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.4672214686870575
    2. ''on' → logprob: -1.2172214984893799
    3. 'il' → logprob: -3.96722149848938
    4. 'on' → logprob: -4.467221260070801
    5. 'and' → logprob: -4.717221260070801
    6. 'elles' → logprob: -4.967221260070801
    7. 'ont' → logprob: -4.967221260070801
    8. 'oi' → logprob: -5.217221260070801
    9. 'i' → logprob: -5.842221260070801
    10. 'el' → logprob: -6.092221260070801

Token 2784: ' doit' (ID: 21822)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.6815192699432373
    2. 'do' → logprob: -1.5565192699432373
    3. '#' → logprob: -2.0565192699432373
    4. 'incl' → logprob: -3.6815192699432373
    5. 'met' → logprob: -3.9315192699432373
    6. 'va' → logprob: -4.306519508361816
    7. 'comp' → logprob: -4.306519508361816
    8. 'rem' → logprob: -4.681519508361816
    9. 'dev' → logprob: -4.931519508361816
    10. 'continue' → logprob: -5.181519508361816

Token 2785: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.06229502707719803
    2. 'add' → logprob: -3.9372949600219727
    3. 'incl' → logprob: -4.187294960021973
    4. ' ajouter' → logprob: -4.937294960021973
    5. 'comp' → logprob: -5.562294960021973
    6. 'count' → logprob: -6.062294960021973
    7. '```' → logprob: -6.562294960021973
    8. 'mettre' → logprob: -6.687294960021973
    9. ' compter' → logprob: -6.687294960021973
    10. 'inc' → logprob: -6.812294960021973

Token 2786: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07091137021780014
    2. '
' → logprob: -3.070911407470703
    3. '                   ' → logprob: -5.320911407470703
    4. '[' → logprob: -5.570911407470703
    5. '                
' → logprob: -5.945911407470703
    6. '           ' → logprob: -6.070911407470703
    7. 'new' → logprob: -6.570911407470703
    8. '[]
' → logprob: -6.820911407470703
    9. '```' → logprob: -7.445911407470703
    10. ',' → logprob: -7.570911407470703

Token 2787: ' notre' (ID: 12092)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.679957926273346
    2. 'new' → logprob: -0.804957926273346
    3. 'coins' → logprob: -3.429957866668701
    4. 'l' → logprob: -5.679957866668701
    5. 'not' → logprob: -5.929957866668701
    6. 'list' → logprob: -6.054957866668701
    7. 'nos' → logprob: -6.429957866668701
    8. 'pieces' → logprob: -7.429957866668701
    9. 'co' → logprob: -7.554957866668701
    10. 'liste' → logprob: -7.679957866668701

Token 2788: ' compte' (ID: 19657)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.15611104667186737
    2. 'pieces' → logprob: -3.156111001968384
    3. 'main' → logprob: -3.656111001968384
    4. 'list' → logprob: -3.781111001968384
    5. 'liste' → logprob: -4.406111240386963
    6. 'co' → logprob: -4.906111240386963
    7. 'CO' → logprob: -5.156111240386963
    8. 'new' → logprob: -5.281111240386963
    9. 'coin' → logprob: -5.531111240386963
    10. ' coins' → logprob: -6.156111240386963

Token 2789: '.

' (ID: 364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05294354632496834
    2. '
' → logprob: -3.677943468093872
    3. '[' → logprob: -5.052943706512451
    4. '                
' → logprob: -5.677943706512451
    5. '           ' → logprob: -5.927943706512451
    6. '```' → logprob: -5.927943706512451
    7. 'new' → logprob: -6.427943706512451
    8. '[]
' → logprob: -6.427943706512451
    9. '                   ' → logprob: -6.552943706512451
    10. '[new' → logprob: -7.552943706512451

Token 2790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04830389469861984
    2. '```' → logprob: -3.2983038425445557
    3. '[' → logprob: -5.298304080963135
    4. '``' → logprob: -6.548304080963135
    5. '           ' → logprob: -6.923304080963135
    6. '[
' → logprob: -7.048304080963135
    7. '                   ' → logprob: -7.298304080963135
    8. 'new' → logprob: -8.298303604125977
    9. '       ' → logprob: -8.548303604125977
    10. '[new' → logprob: -8.798303604125977

Token 2791: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.161695659160614
    2. 'for' (adapté à ' for') → logprob: -2.661695718765259
    3. 'used' → logprob: -3.661695718765259
    4. 'new' → logprob: -4.16169548034668
    5. 'coins' → logprob: -4.66169548034668
    6. '#' → logprob: -5.28669548034668
    7. '[' → logprob: -5.41169548034668
    8. ' for' → logprob: -5.41169548034668
    9. '           ' → logprob: -6.28669548034668
    10. '```' → logprob: -6.66169548034668

Token 2792: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005253680050373077
    2. 'ci' → logprob: -5.255253791809082
    3. 'idx' → logprob: -11.255253791809082
    4. 'x' → logprob: -12.630253791809082
    5. '(i' → logprob: -13.505253791809082
    6. ' i' → logprob: -14.130253791809082
    7. 'ii' → logprob: -14.380253791809082
    8. '(ci' → logprob: -15.130253791809082
    9. 'c' → logprob: -15.505253791809082
    10. 'a' → logprob: -16.255252838134766

Token 2793: ',count' (ID: 139747)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.378910094499588
    2. ' in' → logprob: -1.5039100646972656
    3. ',' → logprob: -2.3789100646972656
    4. ',in' → logprob: -9.003910064697266
    5. ',c' → logprob: -9.128910064697266
    6. ',val' → logprob: -10.128910064697266
    7. ' ,' → logprob: -10.253910064697266
    8. ',v' → logprob: -11.128910064697266
    9. ',n' → logprob: -11.128910064697266
    10. ',x' → logprob: -11.128910064697266

Token 2794: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2822028696537018
    2. 'in' → logprob: -1.4072028398513794
    3. '_in' → logprob: -7.03220272064209
    4. ',' → logprob: -10.53220272064209
    5. '	in' → logprob: -10.65720272064209
    6. '   ' → logprob: -11.03220272064209
    7. 'en' → logprob: -11.53220272064209
    8. '```' → logprob: -11.78220272064209
    9. 'dans' → logprob: -11.78220272064209
    10. '
' → logprob: -11.90720272064209

Token 2795: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048640280961990356
    2. 'enumer' → logprob: -3.048640251159668
    3. 'zip' → logprob: -9.923640251159668
    4. 'en' → logprob: -13.798640251159668
    5. ' range' → logprob: -13.923640251159668
    6. '   ' → logprob: -14.048640251159668
    7. ' enumerate' → logprob: -14.673640251159668
    8. ' ' → logprob: -15.798640251159668
    9. 'enum' → logprob: -15.798640251159668
    10. 'rang' → logprob: -16.423641204833984

Token 2796: '(av' (ID: 131120)
  Prédit: '(av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(av' → logprob: -0.38921090960502625
    2. 'avail' → logprob: -1.2642109394073486
    3. 'range' → logprob: -4.1392107009887695
    4. '(' → logprob: -4.7642107009887695
    5. 'av' → logprob: -5.0142107009887695
    6. '(range' → logprob: -5.6392107009887695
    7. '(co' → logprob: -6.3892107009887695
    8. 'coins' → logprob: -6.5142107009887695
    9. 'used' → logprob: -7.2642107009887695
    10. 'available' → logprob: -8.01421070098877

Token 2797: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.00015955790877342224
    2. 'il' → logprob: -9.00015926361084
    3. 'al' → logprob: -11.12515926361084
    4. 'eil' → logprob: -11.75015926361084
    5. 'a' → logprob: -12.37515926361084
    6. 'ails' → logprob: -13.62515926361084
    7. '[' → logprob: -13.75015926361084
    8. 'ai' → logprob: -13.75015926361084
    9. 'AIL' → logprob: -14.25015926361084
    10. '
' → logprob: -14.25015926361084

Token 2798: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00016718693950679153
    2. 's' → logprob: -10.500166893005371
    3. '               ' → logprob: -11.000166893005371
    4. '   ' → logprob: -11.000166893005371
    5. ')' → logprob: -11.125166893005371
    6. 'coins' → logprob: -11.125166893005371
    7. '_' → logprob: -11.500166893005371
    8. 'ails' → logprob: -11.875166893005371
    9. '
' → logprob: -12.375166893005371
    10. '[' → logprob: -12.500166893005371

Token 2799: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.30418503284454346
    2. '_co' → logprob: -1.5541850328445435
    3. 'coins' → logprob: -3.304184913635254
    4. 'ons' → logprob: -5.554184913635254
    5. '_ins' → logprob: -5.804184913635254
    6. 'ns' → logprob: -6.054184913635254
    7. 'ens' → logprob: -6.929184913635254
    8. '_' → logprob: -7.054184913635254
    9. 'ils' → logprob: -7.304184913635254
    10. 'co' → logprob: -7.429184913635254

Token 2800: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15607872605323792
    2. '               ' → logprob: -3.031078815460205
    3. ' -' → logprob: -3.156078815460205
    4. '                   ' → logprob: -4.531078815460205
    5. '-count' → logprob: -4.531078815460205
    6. '-' → logprob: -4.781078815460205
    7. '):' → logprob: -4.781078815460205
    8. '           ' → logprob: -5.031078815460205
    9. '-new' → logprob: -5.406078815460205
    10. '       ' → logprob: -7.406078815460205

Token 2801: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7499077320098877
    2. 'new' → logprob: -0.8749077320098877
    3. ' new' → logprob: -2.6249077320098877
    4. '               ' → logprob: -3.8749077320098877
    5. '```' → logprob: -4.874907493591309
    6. 'count' → logprob: -6.249907493591309
    7. ':' → logprob: -6.374907493591309
    8. '                       ' → logprob: -7.124907493591309
    9. ',' → logprob: -7.374907493591309
    10. '-' → logprob: -7.624907493591309

Token 2802: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.01109203603118658
    2. 'count' → logprob: -5.136092185974121
    3. '                   ' → logprob: -5.511092185974121
    4. ' new' → logprob: -7.136092185974121
    5. '   ' → logprob: -8.886092185974121
    6. '               ' → logprob: -9.386092185974121
    7. '```' → logprob: -10.761092185974121
    8. '                       ' → logprob: -10.886092185974121
    9. '       ' → logprob: -10.886092185974121
    10. '                    ' → logprob: -12.636092185974121

Token 2803: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.005482875742018223
    2. '_count' → logprob: -5.7554826736450195
    3. 'count' → logprob: -6.8804826736450195
    4. 'coins' → logprob: -7.0054826736450195
    5. 'co' → logprob: -8.88048267364502
    6. 'new' → logprob: -10.00548267364502
    7. '_counts' → logprob: -10.13048267364502
    8. '=' → logprob: -10.75548267364502
    9. '_av' → logprob: -11.00548267364502
    10. ' =' → logprob: -11.38048267364502

Token 2804: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0013255992671474814
    2. '_co' → logprob: -8.501325607299805
    3. 'in' → logprob: -8.626325607299805
    4. 'unts' → logprob: -8.751325607299805
    5. '_ins' → logprob: -8.876325607299805
    6. 'coins' → logprob: -9.126325607299805
    7. '_' → logprob: -9.626325607299805
    8. '_count' → logprob: -9.751325607299805
    9. 'ints' → logprob: -10.126325607299805
    10. '_counts' → logprob: -10.251325607299805

Token 2805: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.905949592590332
    2. '=' → logprob: -1.155949592590332
    3. '_list' → logprob: -1.905949592590332
    4. '                   ' → logprob: -2.780949592590332
    5. '.append' → logprob: -3.655949592590332
    6. '_count' → logprob: -4.780949592590332
    7. 'for' → logprob: -5.030949592590332
    8. '   ' → logprob: -5.405949592590332
    9. 'count' → logprob: -5.405949592590332
    10. '               ' → logprob: -5.405949592590332

Token 2806: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05828467011451721
    2. ' =' → logprob: -2.9332847595214844
    3. '.append' → logprob: -6.308284759521484
    4. '=[' → logprob: -8.058284759521484
    5. '   ' → logprob: -8.308284759521484
    6. '[' → logprob: -8.558284759521484
    7. '[-' → logprob: -8.808284759521484
    8. '[count' → logprob: -9.058284759521484
    9. '=count' → logprob: -9.058284759521484
    10. '-' → logprob: -9.433284759521484

Token 2807: '(count' (ID: 25892)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.007028292398899794
    2. 'avail' → logprob: -5.132028102874756
    3. 'av' → logprob: -7.257028102874756
    4. '(count' → logprob: -8.382028579711914
    5. ' count' → logprob: -9.382028579711914
    6. '   ' → logprob: -10.882028579711914
    7. '(av' → logprob: -11.757028579711914
    8. '[count' → logprob: -11.757028579711914
    9. 'avali' → logprob: -11.757028579711914
    10. 'counts' → logprob: -12.257028579711914

Token 2808: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14852499961853027
    2. '-' → logprob: -2.0235249996185303
    3. '-count' → logprob: -5.398525238037109
    4. '    ' → logprob: -7.148525238037109
    5. '   ' → logprob: -8.14852523803711
    6. '                   ' → logprob: -9.39852523803711
    7. '                    ' → logprob: -10.89852523803711
    8. '        ' → logprob: -11.14852523803711
    9. '    	' → logprob: -11.39852523803711
    10. '	' → logprob: -11.52352523803711

Token 2809: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -9.372294698550832e-06
    2. ' used' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.375009536743164
    4. 'count' → logprob: -14.250009536743164
    5. '           ' → logprob: -17.500009536743164
    6. '       ' → logprob: -18.000009536743164
    7. '               ' → logprob: -18.250009536743164
    8. '.used' → logprob: -18.625009536743164
    9. '     ' → logprob: -19.250009536743164
    10. 'user' → logprob: -19.375009536743164

Token 2810: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -7.898723561083898e-05
    2. 'coins' → logprob: -9.625079154968262
    3. '[i' → logprob: -12.125079154968262
    4. 'co' → logprob: -13.000079154968262
    5. 's' → logprob: -13.750079154968262
    6. 'Coins' → logprob: -14.250079154968262
    7. 'i' → logprob: -14.375079154968262
    8. '_coin' → logprob: -14.750079154968262
    9. '
' → logprob: -14.875079154968262
    10. ')' → logprob: -14.875079154968262

Token 2811: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0001999642699956894
    2. 'coins' → logprob: -8.625200271606445
    3. 'o' → logprob: -12.500200271606445
    4. '_ins' → logprob: -12.625200271606445
    5. 'ons' → logprob: -12.875200271606445
    6. 'ions' → logprob: -13.125200271606445
    7. '_' → logprob: -13.250200271606445
    8. 'is' → logprob: -13.375200271606445
    9. 'Coins' → logprob: -13.750200271606445
    10. '
' → logprob: -14.125200271606445

Token 2812: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.893480243277736e-05
    2. '[' → logprob: -11.375039100646973
    3. '                   ' → logprob: -11.500039100646973
    4. ')' → logprob: -11.875039100646973
    5. '               ' → logprob: -12.875039100646973
    6. '(i' → logprob: -13.250039100646973
    7. 'i' → logprob: -13.250039100646973
    8. '                       ' → logprob: -13.750039100646973
    9. '```' → logprob: -14.250039100646973
    10. ' [' → logprob: -14.375039100646973

Token 2813: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005697099957615137
    2. '+' → logprob: -6.005697250366211
    3. ' +' → logprob: -6.380697250366211
    4. '])' → logprob: -7.255697250366211
    5. '                   ' → logprob: -8.255697250366211
    6. '[i' → logprob: -9.130697250366211
    7. '               ' → logprob: -9.255697250366211
    8. ')+' → logprob: -9.630697250366211
    9. '                       ' → logprob: -10.255697250366211
    10. ')
' → logprob: -10.255697250366211

Token 2814: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19520482420921326
    2. ' +' → logprob: -2.070204734802246
    3. ')' → logprob: -3.320204734802246
    4. '```' → logprob: -4.695204734802246
    5. '               ' → logprob: -6.445204734802246
    6. '<|end|>' → logprob: -6.695204734802246
    7. '+
' → logprob: -6.945204734802246
    8. '                   ' → logprob: -7.570204734802246
    9. ')+' → logprob: -8.320204734802246
    10. '+)' → logprob: -8.320204734802246

Token 2815: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2653471529483795
    2. 'for' → logprob: -1.8903471231460571
    3. '               ' → logprob: -3.6403472423553467
    4. '```' → logprob: -3.7653472423553467
    5. '+' → logprob: -4.265347003936768
    6. 'change' → logprob: -5.140347003936768
    7. '
' → logprob: -6.265347003936768
    8. ' for' → logprob: -6.265347003936768
    9. ' new' → logprob: -6.640347003936768
    10. '``' → logprob: -7.015347003936768

Token 2816: ' Aj' (ID: 28294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.318897545337677
    2. '               ' → logprob: -1.4438974857330322
    3. ' for' → logprob: -4.068897724151611
    4. '+' → logprob: -4.693897724151611
    5. 'new' → logprob: -5.318897724151611
    6. 'change' → logprob: -6.568897724151611
    7. '#' → logprob: -6.693897724151611
    8. '```' → logprob: -6.943897724151611
    9. 'coins' → logprob: -7.943897724151611
    10. '                
' → logprob: -7.943897724151611

Token 2817: 'out' (ID: 468)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.20249351859092712
    2. 'out' → logprob: -2.32749342918396
    3. 'oute' → logprob: -2.70249342918396
    4. 'outez' → logprob: -4.077493667602539
    5. 'ust' → logprob: -6.827493667602539
    6. 'new' → logprob: -7.952493667602539
    7. 'outes' → logprob: -9.827493667602539
    8. '#' → logprob: -10.452493667602539
    9. ']' → logprob: -10.702493667602539
    10. 'uster' → logprob: -10.827493667602539

Token 2818: ' pièces' (ID: 49165)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8176632523536682
    2. '[' → logprob: -1.4426631927490234
    3. ' =' → logprob: -2.3176631927490234
    4. 'for' → logprob: -3.1926631927490234
    5. '=' → logprob: -3.4426631927490234
    6. 'change' → logprob: -3.6926631927490234
    7. '_co' → logprob: -3.9426631927490234
    8. '   ' → logprob: -4.317663192749023
    9. '(change' → logprob: -4.317663192749023
    10. '.append' → logprob: -4.442663192749023

Token 2819: ' rend' (ID: 15016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.080055594444275
    2. ' =' → logprob: -1.330055594444275
    3. '[' → logprob: -1.830055594444275
    4. '=' → logprob: -2.4550557136535645
    5. '500' → logprob: -3.0800557136535645
    6. 'change' → logprob: -3.9550557136535645
    7. 'coins' → logprob: -4.2050557136535645
    8. 'for' → logprob: -4.4550557136535645
    9. '_list' → logprob: -4.9550557136535645
    10. '+' → logprob: -4.9550557136535645

Token 2820: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.0486472062766552
    2. 'ue' → logprob: -3.173647165298462
    3. '[' → logprob: -5.923647403717041
    4. '
' → logprob: -7.298647403717041
    5. '   ' → logprob: -7.673647403717041
    6. '{' → logprob: -7.798647403717041
    7. 'us' → logprob: -7.923647403717041
    8. '(new' → logprob: -8.673646926879883
    9. 'new' → logprob: -9.048646926879883
    10. 'u' → logprob: -9.173646926879883

Token 2821: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7223642468452454
    2. '[' → logprob: -1.0973641872406006
    3. '+' → logprob: -3.0973641872406006
    4. '.append' → logprob: -3.2223641872406006
    5. 'for' → logprob: -3.5973641872406006
    6. ' +' → logprob: -4.22236442565918
    7. ' =' → logprob: -4.34736442565918
    8. 'new' → logprob: -4.47236442565918
    9. '+[' → logprob: -5.47236442565918
    10. '[new' → logprob: -5.59736442565918

Token 2822: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8753926753997803
    2. 'for' → logprob: -1.1253926753997803
    3. '[i' → logprob: -2.6253926753997803
    4. '               ' → logprob: -2.8753926753997803
    5. 'i' → logprob: -3.8753926753997803
    6. 'change' → logprob: -4.125392913818359
    7. ')' → logprob: -4.500392913818359
    8. 'new' → logprob: -4.500392913818359
    9. ')
' → logprob: -4.750392913818359
    10. '0' → logprob: -4.750392913818359

Token 2823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040238916873931885
    2. '00' → logprob: -3.790238857269287
    3. '000' → logprob: -4.415238857269287
    4. ' ,' → logprob: -5.790238857269287
    5. '0' → logprob: -7.415238857269287
    6. ',
' → logprob: -8.040239334106445
    7. '   ' → logprob: -8.290239334106445
    8. ')' → logprob: -8.415239334106445
    9. '
' → logprob: -10.165239334106445
    10. '```' → logprob: -10.165239334106445

Token 2824: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003839597338810563
    2. '50' → logprob: -8.750384330749512
    3. '100' → logprob: -9.000384330749512
    4. ' ' → logprob: -9.625384330749512
    5. '500' → logprob: -10.625384330749512
    6. '0' → logprob: -11.750384330749512
    7. '   ' → logprob: -13.375384330749512
    8. ',' → logprob: -13.875384330749512
    9. '       ' → logprob: -15.250384330749512
    10. '1' → logprob: -15.375384330749512

Token 2825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014464260311797261
    2. ' ,' → logprob: -7.25144624710083
    3. '0' → logprob: -7.62644624710083
    4. '10' → logprob: -8.501446723937988
    5. ',
' → logprob: -11.376446723937988
    6. '...,' → logprob: -11.751446723937988
    7. '   ' → logprob: -12.001446723937988
    8. '100' → logprob: -12.501446723937988
    9. '```' → logprob: -12.876446723937988
    10. '),' → logprob: -12.876446723937988

Token 2826: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.3438327843905427e-05
    2. '0' → logprob: -11.87502384185791
    3. ' ' → logprob: -12.00002384185791
    4. '100' → logprob: -12.25002384185791
    5. ',' → logprob: -12.50002384185791
    6. '   ' → logprob: -13.50002384185791
    7. '```' → logprob: -15.75002384185791
    8. '  ' → logprob: -16.750022888183594
    9. ')' → logprob: -17.125022888183594
    10. '       ' → logprob: -17.500022888183594

Token 2827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011615309631451964
    2. ' ,' → logprob: -7.126161575317383
    3. '   ' → logprob: -8.626161575317383
    4. ')' → logprob: -10.376161575317383
    5. ',
' → logprob: -10.376161575317383
    6. '                   ' → logprob: -10.626161575317383
    7. '               ' → logprob: -11.001161575317383
    8. '),' → logprob: -11.376161575317383
    9. '[' → logprob: -11.501161575317383
    10. '```' → logprob: -11.751161575317383

Token 2828: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.250008583068848
    3. ',' → logprob: -13.000008583068848
    4. '   ' → logprob: -14.375008583068848
    5. '100' → logprob: -14.625008583068848
    6. '0' → logprob: -16.87500762939453
    7. '```' → logprob: -16.87500762939453
    8. '  ' → logprob: -17.62500762939453
    9. '       ' → logprob: -18.12500762939453
    10. '#' → logprob: -18.12500762939453

Token 2829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. '100' → logprob: -10.000134468078613
    3. ' ,' → logprob: -10.625134468078613
    4. ',
' → logprob: -10.875134468078613
    5. '```' → logprob: -11.000134468078613
    6. '   ' → logprob: -11.250134468078613
    7. '                   ' → logprob: -12.125134468078613
    8. '               ' → logprob: -12.625134468078613
    9. ')' → logprob: -13.375134468078613
    10. '       ' → logprob: -14.250134468078613

Token 2830: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.849109119386412e-06
    2. '0' → logprob: -11.625009536743164
    3. ' ' → logprob: -14.125009536743164
    4. '```' → logprob: -15.875009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '#' → logprob: -18.250009536743164
    7. ',' → logprob: -19.250009536743164
    8. ')' → logprob: -20.000009536743164
    9. '1' → logprob: -20.125009536743164
    10. '                   ' → logprob: -20.250009536743164

Token 2831: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.427563339471817
    2. ',' → logprob: -1.5525633096694946
    3. '               ' → logprob: -3.177563428878784
    4. ')
' → logprob: -3.677563428878784
    5. '):
' → logprob: -3.927563428878784
    6. ',new' → logprob: -4.552563190460205
    7. ')+' → logprob: -4.677563190460205
    8. '                   ' → logprob: -4.802563190460205
    9. '+' → logprob: -5.052563190460205
    10. '),' → logprob: -6.177563190460205

Token 2832: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8725939393043518
    2. '[new' → logprob: -1.247593879699707
    3. 'new' → logprob: -1.997593879699707
    4. '[' → logprob: -2.622593879699707
    5. '+' → logprob: -3.872593879699707
    6. ' =' → logprob: -4.247593879699707
    7. '.append' → logprob: -4.372593879699707
    8. '                   ' → logprob: -5.122593879699707
    9. ' +=' → logprob: -5.497593879699707
    10. '=' → logprob: -5.622593879699707

Token 2833: ' pièces' (ID: 49165)
  Prédit: '(change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(change' → logprob: -0.551970362663269
    2. 'change' → logprob: -1.301970362663269
    3. '[' → logprob: -2.3019704818725586
    4. '(' → logprob: -3.1769704818725586
    5. '([' → logprob: -5.426970481872559
    6. '0' → logprob: -6.301970481872559
    7. ' change' → logprob: -7.176970481872559
    8. ' (' → logprob: -7.301970481872559
    9. 'coins' → logprob: -7.676970481872559
    10. ' [' → logprob: -8.426970481872559

Token 2834: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.9109947085380554
    2. '               ' → logprob: -1.9109947681427002
    3. '[' → logprob: -2.1609947681427
    4. ' =' → logprob: -2.4109947681427
    5. 'for' → logprob: -2.7859947681427
    6. 'new' → logprob: -3.0359947681427
    7. '=' → logprob: -3.7859947681427
    8. '_list' → logprob: -3.7859947681427
    9. 's' → logprob: -3.9109947681427
    10. 'count' → logprob: -4.160994529724121

Token 2835: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.02785121463239193
    2. '[' → logprob: -3.652851104736328
    3. '```' → logprob: -7.152851104736328
    4. ' ' → logprob: -8.277851104736328
    5. '
' → logprob: -8.777851104736328
    6. '   ' → logprob: -9.277851104736328
    7. 'de' → logprob: -9.777851104736328
    8. '#' → logprob: -10.402851104736328
    9. ',' → logprob: -10.527851104736328
    10. '=' → logprob: -10.777851104736328

Token 2836: ' yen' (ID: 34890)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14432236552238464
    2. 'for' → logprob: -2.394322395324707
    3. 'new' → logprob: -4.269322395324707
    4. ' for' → logprob: -4.519322395324707
    5. ' =' → logprob: -5.519322395324707
    6. ',' → logprob: -5.519322395324707
    7. 's' → logprob: -6.394322395324707
    8. '_list' → logprob: -6.519322395324707
    9. '                   ' → logprob: -6.769322395324707
    10. '=' → logprob: -6.894322395324707

Token 2837: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4023701250553131
    2. ' =' → logprob: -1.9023700952529907
    3. '
' → logprob: -3.1523702144622803
    4. '[' → logprob: -3.4023702144622803
    5. 'new' → logprob: -4.152369976043701
    6. 'for' → logprob: -4.152369976043701
    7. '.append' → logprob: -4.402369976043701
    8. '[new' → logprob: -5.027369976043701
    9. '                   ' → logprob: -5.152369976043701
    10. '=' → logprob: -5.277369976043701

Token 2838: 'nombre' (ID: 28576)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.07805647701025009
    2. '[' → logprob: -3.828056573867798
    3. '(change' → logprob: -3.828056573867798
    4. 'if' → logprob: -5.578056335449219
    5. 'coins' → logprob: -5.578056335449219
    6. ')' → logprob: -5.578056335449219
    7. '500' → logprob: -5.828056335449219
    8. '1' → logprob: -5.953056335449219
    9. '0' → logprob: -6.453056335449219
    10. 'count' → logprob: -6.453056335449219

Token 2839: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3991719186306
    2. ' =' → logprob: -1.6491719484329224
    3. '500' → logprob: -3.149171829223633
    4. ':' → logprob: -3.524171829223633
    5. ')' → logprob: -4.524171829223633
    6. 'r' → logprob: -5.274171829223633
    7. '               ' → logprob: -5.399171829223633
    8. 'dans' → logprob: -5.399171829223633
    9. '+=' → logprob: -5.774171829223633
    10. '   ' → logprob: -5.899171829223633

Token 2840: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5907257199287415
    2. ' =' → logprob: -1.3407256603240967
    3. 'new' → logprob: -3.5907256603240967
    4. '=' → logprob: -3.5907256603240967
    5. '```' → logprob: -3.7157256603240967
    6. 'for' → logprob: -3.9657256603240967
    7. '[' → logprob: -4.340725898742676
    8. ' for' → logprob: -4.465725898742676
    9. ' new' → logprob: -4.715725898742676
    10. '                   ' → logprob: -4.715725898742676

Token 2841: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5621501803398132
    2. 'for' → logprob: -1.812150239944458
    3. ' for' → logprob: -2.062150239944458
    4. 'new' → logprob: -3.062150239944458
    5. ' new' → logprob: -3.562150239944458
    6. 'change' → logprob: -3.937150239944458
    7. '                   ' → logprob: -4.312150001525879
    8. 'coins' → logprob: -4.687150001525879
    9. ' change' → logprob: -4.812150001525879
    10. '[' → logprob: -5.687150001525879

Token 2842: ' moedas' (ID: 182288)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7745221257209778
    2. 'new' → logprob: -1.649522066116333
    3. 'for' → logprob: -1.774522066116333
    4. ' new' → logprob: -2.649522066116333
    5. ' for' → logprob: -3.024522066116333
    6. '                   ' → logprob: -4.024522304534912
    7. '```' → logprob: -5.024522304534912
    8. '[' → logprob: -5.149522304534912
    9. 'change' → logprob: -5.149522304534912
    10. '
' → logprob: -5.524522304534912

Token 2843: ' rend' (ID: 15016)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4770689308643341
    2. '=' → logprob: -1.7270689010620117
    3. 's' → logprob: -3.7270689010620117
    4. '_' → logprob: -4.227068901062012
    5. 'dict' → logprob: -4.227068901062012
    6. '500' → logprob: -4.352068901062012
    7. ',' → logprob: -4.477068901062012
    8. ')' → logprob: -4.477068901062012
    9. '_count' → logprob: -4.727068901062012
    10. 'def' → logprob: -4.852068901062012

Token 2844: 'ue' (ID: 466)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.025854315608739853
    2. 'es' → logprob: -4.275854110717773
    3. 'ées' → logprob: -5.400854110717773
    4. 'ue' → logprob: -5.650854110717773
    5. '{' → logprob: -6.775854110717773
    6. 'u' → logprob: -7.275854110717773
    7. '[' → logprob: -7.900854110717773
    8. '   ' → logprob: -8.650854110717773
    9. 'ée' → logprob: -9.025854110717773
    10. 'és' → logprob: -9.275854110717773

Token 2845: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3518354892730713
    2. '.update' → logprob: -1.8518354892730713
    3. 'dict' → logprob: -3.7268354892730713
    4. '=' → logprob: -3.8518354892730713
    5. '500' → logprob: -3.9768354892730713
    6. 'update' → logprob: -4.476835250854492
    7. '_co' → logprob: -4.476835250854492
    8. '_' → logprob: -4.851835250854492
    9. '_dict' → logprob: -4.851835250854492
    10. '[' → logprob: -5.226835250854492

Token 2846: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.19061116874217987
    2. 'coins' → logprob: -2.8156111240386963
    3. 'change' → logprob: -2.8156111240386963
    4. 'pieces' → logprob: -4.440611362457275
    5. '[' → logprob: -4.690611362457275
    6. '1' → logprob: -5.190611362457275
    7. 'dict' → logprob: -5.690611362457275
    8. 'CO' → logprob: -5.940611362457275
    9. '```' → logprob: -6.065611362457275
    10. 'for' → logprob: -6.065611362457275

Token 2847: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.9823885560035706
    2. ' =' → logprob: -1.3573884963989258
    3. '{' → logprob: -2.232388496398926
    4. '=' → logprob: -2.232388496398926
    5. '(change' → logprob: -3.232388496398926
    6. '={' → logprob: -3.982388496398926
    7. '.update' → logprob: -4.232388496398926
    8. 'update' → logprob: -4.857388496398926
    9. ',' → logprob: -4.857388496398926
    10. '[' → logprob: -4.982388496398926

Token 2848: '_co' (ID: 21102)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6062748432159424
    2. '=' → logprob: -1.6062748432159424
    3. '{' → logprob: -2.7312748432159424
    4. '={' → logprob: -2.8562748432159424
    5. '               ' → logprob: -3.6062748432159424
    6. 'dict' → logprob: -3.9812748432159424
    7. '
' → logprob: -4.106274604797363
    8. 'change' → logprob: -4.106274604797363
    9. '[' → logprob: -5.106274604797363
    10. '(change' → logprob: -5.231274604797363

Token 2849: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0059753661043941975
    2. 'coins' → logprob: -6.505975246429443
    3. 'ns' → logprob: -7.130975246429443
    4. 'in' → logprob: -7.630975246429443
    5. '_co' → logprob: -7.755975246429443
    6. '[' → logprob: -7.755975246429443
    7. '   ' → logprob: -7.880975246429443
    8. '_' → logprob: -7.880975246429443
    9. 's' → logprob: -8.380975723266602
    10. '_ins' → logprob: -8.505975723266602

Token 2850: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11714529246091843
    2. ' =' → logprob: -2.742145299911499
    3. '
' → logprob: -4.24214506149292
    4. '   ' → logprob: -5.49214506149292
    5. 'change' → logprob: -5.61714506149292
    6. 'for' → logprob: -5.61714506149292
    7. '                   ' → logprob: -5.99214506149292
    8. '           ' → logprob: -6.11714506149292
    9. '[' → logprob: -6.24214506149292
    10. '```' → logprob: -6.24214506149292

Token 2851: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000686817744281143
    2. ' for' → logprob: -8.375686645507812
    3. 'for' → logprob: -8.625686645507812
    4. '```' → logprob: -9.125686645507812
    5. '
' → logprob: -9.500686645507812
    6. '                   ' → logprob: -10.625686645507812
    7. '                
' → logprob: -10.875686645507812
    8. '           ' → logprob: -11.500686645507812
    9. '       ' → logprob: -11.625686645507812
    10. '``' → logprob: -12.125686645507812

Token 2852: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3649084270000458
    2. '               ' → logprob: -1.4899084568023682
    3. 'new' → logprob: -2.864908456802368
    4. ' for' → logprob: -4.114908218383789
    5. '                   ' → logprob: -5.614908218383789
    6. ' new' → logprob: -6.239908218383789
    7. '[new' → logprob: -8.114908218383789
    8. '```' → logprob: -8.114908218383789
    9. '[' → logprob: -8.364908218383789
    10. '       ' → logprob: -8.489908218383789

Token 2853: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005644689663313329
    2. 'idx' → logprob: -8.375564575195312
    3. 'coin' → logprob: -8.750564575195312
    4. 'c' → logprob: -9.250564575195312
    5. 'ci' → logprob: -10.000564575195312
    6. 'enumer' → logprob: -11.875564575195312
    7. ' i' → logprob: -12.250564575195312
    8. 'val' → logprob: -12.625564575195312
    9. '(i' → logprob: -12.750564575195312
    10. 'range' → logprob: -13.250564575195312

Token 2854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1683618277311325
    2. 'in' → logprob: -2.5433619022369385
    3. ',c' → logprob: -2.6683619022369385
    4. ' in' → logprob: -5.918361663818359
    5. ',C' → logprob: -6.668361663818359
    6. ',i' → logprob: -6.918361663818359
    7. ',in' → logprob: -7.043361663818359
    8. ',val' → logprob: -8.16836166381836
    9. ',n' → logprob: -8.91836166381836
    10. ',v' → logprob: -9.29336166381836

Token 2855: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5766137838363647
    2. 'coin' → logprob: -0.8266137838363647
    3. 'val' → logprob: -7.701613903045654
    4. '(c' → logprob: -9.201613426208496
    5. '(' → logprob: -9.451613426208496
    6. 'v' → logprob: -10.951613426208496
    7. 'coins' → logprob: -12.451613426208496
    8. 'ct' → logprob: -12.576613426208496
    9. 'ctype' → logprob: -12.576613426208496
    10. ' coin' → logprob: -13.076613426208496

Token 2856: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6665586233139038
    2. 'val' → logprob: -2.2915587425231934
    3. ',val' → logprob: -2.4165587425231934
    4. 'in' → logprob: -2.5415587425231934
    5. 'oin' → logprob: -2.5415587425231934
    6. 'i' → logprob: -3.0415587425231934
    7. ',i' → logprob: -3.7915587425231934
    8. 'nt' → logprob: -4.291558742523193
    9. 'n' → logprob: -4.666558742523193
    10. 'type' → logprob: -4.916558742523193

Token 2857: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5264934301376343
    2. 'CO' → logprob: -0.9014934301376343
    3. ' enumerate' → logprob: -5.901493549346924
    4. ' CO' → logprob: -8.651493072509766
    5. '[(' → logprob: -8.776493072509766
    6. 'zip' → logprob: -9.026493072509766
    7. '[' → logprob: -9.526493072509766
    8. 'range' → logprob: -10.026493072509766
    9. 'enum' → logprob: -11.026493072509766
    10. 'list' → logprob: -11.526493072509766

Token 2858: '(C' (ID: 5559)
  Prédit: 'CO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CO' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.375005722045898
    3. '(C' → logprob: -13.875005722045898
    4. ' CO' → logprob: -13.875005722045898
    5. '(' → logprob: -17.0000057220459
    6. '   ' → logprob: -18.0000057220459
    7. '[C' → logprob: -18.3750057220459
    8. '_CO' → logprob: -18.7500057220459
    9. 'range' → logprob: -19.0000057220459
    10. 'Coin' → logprob: -19.1250057220459

Token 2859: 'OIN' (ID: 18468)
  Prédit: 'OIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OIN' → logprob: -0.04081770405173302
    2. 'O' → logprob: -3.5408177375793457
    3. 'CO' → logprob: -4.540817737579346
    4. '[' → logprob: -8.165817260742188
    5. 'oin' → logprob: -10.165817260742188
    6. 'OE' → logprob: -12.665817260742188
    7. '_CO' → logprob: -12.915817260742188
    8. 'o' → logprob: -13.165817260742188
    9. '(' → logprob: -13.415817260742188
    10. 'OI' → logprob: -13.540817260742188

Token 2860: '_TYPES' (ID: 57519)
  Prédit: '_TYPES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TYPES' → logprob: -0.0011225953930988908
    2. 'T' → logprob: -7.50112247467041
    3. 'OIN' → logprob: -7.62612247467041
    4. 'O' → logprob: -9.75112247467041
    5. 'YPES' → logprob: -12.12612247467041
    6. 'Types' → logprob: -12.12612247467041
    7. '_types' → logprob: -12.25112247467041
    8. 'OT' → logprob: -13.00112247467041
    9. '100' → logprob: -13.37612247467041
    10. '_TYPE' → logprob: -14.00112247467041

Token 2861: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005991724319756031
    2. '):' → logprob: -5.5059919357299805
    3. '                   ' → logprob: -7.0059919357299805
    4. '               ' → logprob: -7.1309919357299805
    5. '[' → logprob: -9.38099193572998
    6. '+' → logprob: -11.00599193572998
    7. '[:' → logprob: -11.13099193572998
    8. '   ' → logprob: -11.38099193572998
    9. '       ' → logprob: -11.50599193572998
    10. '                       ' → logprob: -11.50599193572998

Token 2862: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011757446452975273
    2. ' new' → logprob: -5.1367573738098145
    3. 'new' → logprob: -5.8867573738098145
    4. ':' → logprob: -6.8867573738098145
    5. ':
' → logprob: -7.3867573738098145
    6. '   ' → logprob: -7.6367573738098145
    7. '):
' → logprob: -8.136757850646973
    8. ',' → logprob: -9.136757850646973
    9. '                       ' → logprob: -9.386757850646973
    10. '               ' → logprob: -9.636757850646973

Token 2863: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.012011312879621983
    2. ' new' → logprob: -4.512011528015137
    3. '                   ' → logprob: -7.137011528015137
    4. 'change' → logprob: -9.387011528015137
    5. '                       ' → logprob: -10.512011528015137
    6. '   ' → logprob: -10.762011528015137
    7. ' change' → logprob: -12.012011528015137
    8. '+' → logprob: -12.387011528015137
    9. '```' → logprob: -12.512011528015137
    10. 'if' → logprob: -12.637011528015137

Token 2864: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00015705463010817766
    2. 'coins' → logprob: -8.875157356262207
    3. 'new' → logprob: -12.125157356262207
    4. '_coin' → logprob: -12.750157356262207
    5. 'Coins' → logprob: -13.250157356262207
    6. '_new' → logprob: -13.750157356262207
    7. '```' → logprob: -13.875157356262207
    8. '
' → logprob: -14.250157356262207
    9. 's' → logprob: -14.250157356262207
    10. '_count' → logprob: -14.375157356262207

Token 2865: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.07318281382322311
    2. 'coins' → logprob: -2.6981828212738037
    3. 'o' → logprob: -6.573182582855225
    4. '_list' → logprob: -7.073182582855225
    5. 'co' → logprob: -7.698182582855225
    6. '_' → logprob: -8.823183059692383
    7. 'oin' → logprob: -8.948183059692383
    8. 'ins' → logprob: -9.448183059692383
    9. 'oints' → logprob: -10.323183059692383
    10. 's' → logprob: -10.573183059692383

Token 2866: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.743758760625497e-05
    2. '                   ' → logprob: -11.250077247619629
    3. '_count' → logprob: -11.625077247619629
    4. '           ' → logprob: -11.750077247619629
    5. 'list' → logprob: -12.250077247619629
    6. '               ' → logprob: -12.500077247619629
    7. ' =' → logprob: -12.500077247619629
    8. '+=' → logprob: -12.625077247619629
    9. '[new' → logprob: -12.750077247619629
    10. '=' → logprob: -12.875077247619629

Token 2867: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2969682812690735
    2. '+=' → logprob: -1.7969682216644287
    3. ' +=' → logprob: -3.1719682216644287
    4. '                   ' → logprob: -3.4219682216644287
    5. '[i' → logprob: -4.921968460083008
    6. '=' → logprob: -6.046968460083008
    7. '[new' → logprob: -6.546968460083008
    8. ']+=' → logprob: -6.546968460083008
    9. '                       ' → logprob: -7.421968460083008
    10. '+' → logprob: -7.671968460083008

Token 2868: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6000725030899048
    2. ']+=' → logprob: -0.8500725030899048
    3. '+=' → logprob: -4.475072383880615
    4. ')' → logprob: -4.850072383880615
    5. ' +=' → logprob: -5.600072383880615
    6. '+' → logprob: -7.850072383880615
    7. ']+' → logprob: -8.600072860717773
    8. '                   ' → logprob: -8.600072860717773
    9. ')+' → logprob: -9.975072860717773
    10. ']=' → logprob: -10.350072860717773

Token 2869: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005449920892715454
    2. ' +=' → logprob: -5.3804497718811035
    3. '+' → logprob: -7.3804497718811035
    4. ']+=' → logprob: -9.130450248718262
    5. '                   ' → logprob: -9.630450248718262
    6. '=' → logprob: -11.255450248718262
    7. '+=(' → logprob: -11.880450248718262
    8. '```' → logprob: -12.630450248718262
    9. '                       ' → logprob: -13.505450248718262
    10. '   ' → logprob: -13.505450248718262

Token 2870: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.9981420336989686e-05
    2. ' change' → logprob: -10.875020027160645
    3. 'coins' → logprob: -14.375020027160645
    4. '(change' → logprob: -14.875020027160645
    5. '   ' → logprob: -17.375019073486328
    6. 'co' → logprob: -17.500019073486328
    7. 'changes' → logprob: -17.625019073486328
    8. '	change' → logprob: -17.750019073486328
    9. 'count' → logprob: -18.250019073486328
    10. 'coin' → logprob: -18.875019073486328

Token 2871: '_co' (ID: 21102)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6621830463409424
    2. '_co' → logprob: -0.7871830463409424
    3. '[c' → logprob: -4.037182807922363
    4. 'co' → logprob: -5.787182807922363
    5. 'change' → logprob: -5.787182807922363
    6. 'c' → logprob: -6.412182807922363
    7. '.get' → logprob: -7.287182807922363
    8. 's' → logprob: -7.287182807922363
    9. '_c' → logprob: -7.412182807922363
    10. 'get' → logprob: -7.662182807922363

Token 2872: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0024807697627693415
    2. 'c' → logprob: -7.127480983734131
    3. 'i' → logprob: -8.002480506896973
    4. '[' → logprob: -8.002480506896973
    5. '[i' → logprob: -8.252480506896973
    6. 'coins' → logprob: -8.627480506896973
    7. 'o' → logprob: -8.752480506896973
    8. '[c' → logprob: -9.002480506896973
    9. '100' → logprob: -9.502480506896973
    10. 'in' → logprob: -10.377480506896973

Token 2873: '.get' (ID: 775)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4350773096084595
    2. 'i' → logprob: -1.0600773096084595
    3. 'c' → logprob: -5.43507719039917
    4. '[c' → logprob: -6.43507719039917
    5. '(i' → logprob: -9.310077667236328
    6. '[' → logprob: -9.310077667236328
    7. '{i' → logprob: -10.185077667236328
    8. '   ' → logprob: -10.310077667236328
    9. '                   ' → logprob: -10.435077667236328
    10. '100' → logprob: -10.685077667236328

Token 2874: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4741075336933136
    2. 'c' → logprob: -0.9741075038909912
    3. '(' → logprob: -11.22410774230957
    4. '100' → logprob: -11.34910774230957
    5. 'i' → logprob: -12.84910774230957
    6. ' c' → logprob: -13.72410774230957
    7. '(i' → logprob: -14.59910774230957
    8. '	c' → logprob: -15.22410774230957
    9. '```' → logprob: -15.59910774230957
    10. '   ' → logprob: -15.84910774230957

Token 2875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028302724240347743
    2. ',i' → logprob: -8.625283241271973
    3. '(i' → logprob: -10.125283241271973
    4. 'CO' → logprob: -10.250283241271973
    5. ' ,' → logprob: -11.625283241271973
    6. '```' → logprob: -11.750283241271973
    7. '   ' → logprob: -13.000283241271973
    8. 'i' → logprob: -13.000283241271973
    9. '(),' → logprob: -14.000283241271973
    10. '100' → logprob: -14.000283241271973

Token 2876: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -15.000017166137695
    4. '```' → logprob: -16.625017166137695
    5. '1' → logprob: -17.125017166137695
    6. '+' → logprob: -17.750017166137695
    7. '   ' → logprob: -18.750017166137695
    8. '``' → logprob: -19.250017166137695
    9. ')+' → logprob: -19.500017166137695
    10. '       ' → logprob: -19.625017166137695

Token 2877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -17.375003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '```' → logprob: -19.000003814697266
    6. '=' → logprob: -19.625003814697266
    7. ',' → logprob: -19.625003814697266
    8. '       ' → logprob: -20.312503814697266
    9. '۰' → logprob: -20.500003814697266
    10. '(' → logprob: -20.937503814697266

Token 2878: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. '<|end|>' → logprob: -11.750033378601074
    3. ')
' → logprob: -12.500033378601074
    4. ')+' → logprob: -12.625033378601074
    5. ')#' → logprob: -12.750033378601074
    6. '               ' → logprob: -12.875033378601074
    7. '                   ' → logprob: -13.125033378601074
    8. ' )' → logprob: -13.375033378601074
    9. '())' → logprob: -13.625033378601074
    10. ']' → logprob: -14.125033378601074

Token 2879: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45710891485214233
    2. '                   ' → logprob: -1.832108974456787
    3. '<|end|>' → logprob: -1.832108974456787
    4. '                    
' → logprob: -4.832108974456787
    5. '                ' → logprob: -5.207108974456787
    6. '           ' → logprob: -5.457108974456787
    7. '        
' → logprob: -5.457108974456787
    8. '       ' → logprob: -5.457108974456787
    9. '                
' → logprob: -5.582108974456787
    10. '                    ' → logprob: -6.332108974456787

Token 2880: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44087934494018555
    2. '                   ' → logprob: -1.6908793449401855
    3. ' if' → logprob: -2.5658793449401855
    4. 'if' → logprob: -2.6908793449401855
    5. '```' → logprob: -4.0658793449401855
    6. '           ' → logprob: -5.3158793449401855
    7. '                       ' → logprob: -6.5658793449401855
    8. 'new' (adapté à ' new') → logprob: -6.6908793449401855
    9. '       ' → logprob: -7.6908793449401855
    10. '
' → logprob: -8.190879821777344

Token 2881: '_' (ID: 62)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0070920889265835285
    2. '_' → logprob: -5.507091999053955
    3. '_num' → logprob: -6.632091999053955
    4. 'num' → logprob: -7.257091999053955
    5. 'coins' → logprob: -7.507091999053955
    6. '_tokens' → logprob: -8.882092475891113
    7. '500' → logprob: -9.257092475891113
    8. 's' → logprob: -10.757092475891113
    9. '_state' → logprob: -11.007092475891113
    10. '_tuple' → logprob: -11.007092475891113

Token 2882: '500' (ID: 3234)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.11247625946998596
    2. 'num' → logprob: -2.362476348876953
    3. '_num' → logprob: -5.112476348876953
    4. '_co' → logprob: -5.362476348876953
    5. 'pieces' → logprob: -7.487476348876953
    6. '500' → logprob: -7.612476348876953
    7. 'co' → logprob: -8.237476348876953
    8. '_' → logprob: -9.112476348876953
    9. ' coins' → logprob: -11.737476348876953
    10. '#' → logprob: -11.862476348876953

Token 2883: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25060945749282837
    2. '_p' → logprob: -1.8756093978881836
    3. '=' → logprob: -3.3756093978881836
    4. '_num' → logprob: -4.125609397888184
    5. '_count' → logprob: -5.625609397888184
    6. '_co' → logprob: -5.750609397888184
    7. '_tokens' → logprob: -5.875609397888184
    8. 'coins' → logprob: -6.375609397888184
    9. 'pieces' → logprob: -6.375609397888184
    10. 'num' → logprob: -6.750609397888184

Token 2884: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38704782724380493
    2. '=' → logprob: -1.1370477676391602
    3. '=num' → logprob: -8.76204776763916
    4. '           ' → logprob: -12.38704776763916
    5. '   ' → logprob: -12.63704776763916
    6. ' +=' → logprob: -13.13704776763916
    7. 's' → logprob: -13.26204776763916
    8. '+=' → logprob: -13.76204776763916
    9. '               ' → logprob: -13.88704776763916
    10. 'num' → logprob: -13.88704776763916

Token 2885: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.165027217415627e-05
    2. ' num' → logprob: -11.000021934509277
    3. 'coins' → logprob: -12.750021934509277
    4. '   ' → logprob: -13.750021934509277
    5. '           ' → logprob: -14.750021934509277
    6. '               ' → logprob: -14.875021934509277
    7. '                   ' → logprob: -16.25002098083496
    8. '	num' → logprob: -17.25002098083496
    9. '       ' → logprob: -18.12502098083496
    10. 'coin' → logprob: -19.00002098083496

Token 2886: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004905993700958788
    2. '500' → logprob: -7.625490665435791
    3. '_tokens' → logprob: -14.000490188598633
    4. '+' → logprob: -14.500490188598633
    5. '```' → logprob: -15.625490188598633
    6. '5' → logprob: -15.750490188598633
    7. 'e' → logprob: -16.375490188598633
    8. 'num' → logprob: -16.625490188598633
    9. 's' → logprob: -16.750490188598633
    10. '_token' → logprob: -16.875490188598633

Token 2887: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.11996734328568e-05
    2. '_' → logprob: -10.625041007995605
    3. 'num' → logprob: -11.750041007995605
    4. '5' → logprob: -13.125041007995605
    5. '   ' → logprob: -13.875041007995605
    6. ' ' → logprob: -14.000041007995605
    7. 'coins' → logprob: -14.250041007995605
    8. '(' → logprob: -14.375041007995605
    9. '+' → logprob: -14.625041007995605
    10. 'import' → logprob: -14.687541007995605

Token 2888: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.36940643191337585
    2. '+' → logprob: -1.8694064617156982
    3. '_in' → logprob: -1.8694064617156982
    4. 'in' → logprob: -9.119406700134277
    5. '   ' → logprob: -9.119406700134277
    6. ' ' → logprob: -10.119406700134277
    7. 'In' → logprob: -10.244406700134277
    8. '_' → logprob: -10.744406700134277
    9. '+n' → logprob: -11.869406700134277
    10. '  ' → logprob: -11.994406700134277

Token 2889: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00020377879263833165
    2. ' change' → logprob: -8.500204086303711
    3. '(change' → logprob: -15.250204086303711
    4. '   ' → logprob: -17.87520408630371
    5. ' ' → logprob: -19.25020408630371
    6. '1' → logprob: -19.25020408630371
    7. '	change' → logprob: -19.37520408630371
    8. 'int' → logprob: -19.87520408630371
    9. 'count' → logprob: -20.00020408630371
    10. '           ' → logprob: -20.37520408630371

Token 2890: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -5.56233171664644e-05
    2. 'co' → logprob: -9.875055313110352
    3. '_' → logprob: -13.500055313110352
    4. 'coins' → logprob: -13.625055313110352
    5. '500' → logprob: -14.000055313110352
    6. '-co' → logprob: -15.375055313110352
    7. 'Co' → logprob: -15.875055313110352
    8. '_tokens' → logprob: -16.25005531311035
    9. '```' → logprob: -16.75005531311035
    10. '[' → logprob: -16.87505531311035

Token 2891: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0003022153687197715
    2. 'coins' → logprob: -8.6253023147583
    3. '_co' → logprob: -9.8753023147583
    4. 'ons' → logprob: -10.7503023147583
    5. '[' → logprob: -11.5003023147583
    6. 'o' → logprob: -11.6253023147583
    7. 'ens' → logprob: -11.8753023147583
    8. 'ns' → logprob: -12.3753023147583
    9. '_' → logprob: -12.7503023147583
    10. '_ins' → logprob: -12.8753023147583

Token 2892: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0807737335562706
    2. '.get' → logprob: -2.5807738304138184
    3. '(' → logprob: -7.080773830413818
    4. 'get' → logprob: -7.455773830413818
    5. '500' → logprob: -8.08077335357666
    6. '```' → logprob: -9.70577335357666
    7. '[get' → logprob: -11.58077335357666
    8. '(get' → logprob: -11.58077335357666
    9. '   ' → logprob: -11.83077335357666
    10. '|get' → logprob: -11.95577335357666

Token 2893: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000488110730657354
    2. '500' → logprob: -7.62548828125
    3. '(
' → logprob: -16.87548828125
    4. '```' → logprob: -17.12548828125
    5. '[' → logprob: -17.25048828125
    6. '   ' → logprob: -18.00048828125
    7. ' (' → logprob: -18.37548828125
    8. ' ' → logprob: -18.50048828125
    9. '#' → logprob: -19.12548828125
    10. '`' → logprob: -20.25048828125

Token 2894: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -13.125006675720215
    3. '(' → logprob: -13.250006675720215
    4. ' ' → logprob: -13.500006675720215
    5. '```' → logprob: -15.000006675720215
    6. '5' → logprob: -15.500006675720215
    7. '{' → logprob: -16.0000057220459
    8. '`' → logprob: -16.1250057220459
    9. '  ' → logprob: -16.2500057220459
    10. '[' → logprob: -16.7500057220459

Token 2895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03860629349946976
    2. ')' → logprob: -3.2886064052581787
    3. '(),' → logprob: -8.288606643676758
    4. ']' → logprob: -8.913606643676758
    5. '())' → logprob: -10.288606643676758
    6. '])' → logprob: -10.663606643676758
    7. '```' → logprob: -10.663606643676758
    8. ' ,' → logprob: -10.913606643676758
    9. ')]' → logprob: -11.163606643676758
    10. ')
' → logprob: -11.788606643676758

Token 2896: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009453481063246727
    2. '1' → logprob: -5.509453296661377
    3. ' ' → logprob: -5.509453296661377
    4. ')' → logprob: -6.759453296661377
    5. 'change' → logprob: -9.884453773498535
    6. ' change' → logprob: -10.634453773498535
    7. '   ' → logprob: -11.009453773498535
    8. '```' → logprob: -11.134453773498535
    9. 'count' → logprob: -12.134453773498535
    10. '       ' → logprob: -12.259453773498535

Token 2897: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.179569077678025e-05
    2. '1' → logprob: -10.375041961669922
    3. ' ' → logprob: -11.500041961669922
    4. ')' → logprob: -14.750041961669922
    5. '   ' → logprob: -17.250041961669922
    6. ''' → logprob: -18.750041961669922
    7. '       ' → logprob: -19.250041961669922
    8. '```' → logprob: -19.500041961669922
    9. ''s' → logprob: -20.125041961669922
    10. '#' → logprob: -20.125041961669922

Token 2898: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0119955288246274
    2. '               ' → logprob: -4.636995315551758
    3. ')
' → logprob: -6.136995315551758
    4. '<|end|>' → logprob: -10.886995315551758
    5. '           ' → logprob: -11.011995315551758
    6. '```' → logprob: -11.761995315551758
    7. ' )' → logprob: -12.136995315551758
    8. '                   ' → logprob: -12.386995315551758
    9. ')#' → logprob: -12.636995315551758
    10. '              ' → logprob: -13.386995315551758

Token 2899: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04189949855208397
    2. '                   ' → logprob: -3.2918994426727295
    3. '           ' → logprob: -7.166899681091309
    4. '                       ' → logprob: -7.416899681091309
    5. ',' → logprob: -8.041899681091309
    6. '                
' → logprob: -8.041899681091309
    7. '
' → logprob: -8.166899681091309
    8. '```' → logprob: -8.291899681091309
    9. '                               ' → logprob: -8.416899681091309
    10. '                    
' → logprob: -8.541899681091309

Token 2900: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042164795100688934
    2. 'if' → logprob: -3.4171648025512695
    3. ' if' → logprob: -5.0421648025512695
    4. 'new' → logprob: -7.0421648025512695
    5. '                   ' → logprob: -7.4171648025512695
    6. ' new' → logprob: -8.41716480255127
    7. '```' → logprob: -8.91716480255127
    8. '#' (adapté à ' #') → logprob: -9.04216480255127
    9. '                       ' → logprob: -11.29216480255127
    10. '   ' → logprob: -11.54216480255127

Token 2901: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06501572579145432
    2. '               ' → logprob: -2.8150157928466797
    3. ' if' → logprob: -5.94001579284668
    4. '#' → logprob: -7.94001579284668
    5. '                   ' → logprob: -10.06501579284668
    6. '           ' → logprob: -12.81501579284668
    7. '                
' → logprob: -13.19001579284668
    8. 'for' → logprob: -13.69001579284668
    9. '```' → logprob: -13.81501579284668
    10. '                       ' → logprob: -13.94001579284668

Token 2902: ' vér' (ID: 42524)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5390180945396423
    2. 'if' → logprob: -1.164018154144287
    3. '#' → logprob: -2.539018154144287
    4. 'contin' → logprob: -4.539018154144287
    5. '           ' → logprob: -5.039018154144287
    6. '               ' → logprob: -6.039018154144287
    7. 'v' → logprob: -6.039018154144287
    8. ' continue' → logprob: -7.539018154144287
    9. '                   ' → logprob: -7.539018154144287
    10. 'continu' → logprob: -7.664018154144287

Token 2903: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -4.656383680412546e-05
    2. 'if' → logprob: -10.750046730041504
    3. 'ife' → logprob: -10.875046730041504
    4. 'ifié' → logprob: -13.500046730041504
    5. '
' → logprob: -14.000046730041504
    6. 'rif' → logprob: -14.250046730041504
    7. 'f' → logprob: -14.375046730041504
    8. 'ifier' → logprob: -14.750046730041504
    9. 'ifi' → logprob: -14.750046730041504
    10. 'ifies' → logprob: -14.875046730041504

Token 2904: ' valid' (ID: 4529)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.009923242963850498
    2. ' coins' → logprob: -4.759923458099365
    3. 'if' → logprob: -7.134923458099365
    4. 'not' → logprob: -8.384922981262207
    5. ' if' → logprob: -9.634922981262207
    6. 'coin' → logprob: -10.009922981262207
    7. '           ' → logprob: -10.009922981262207
    8. ' not' → logprob: -10.259922981262207
    9. 'co' → logprob: -10.759922981262207
    10. '               ' → logprob: -10.884922981262207

Token 2905: 'ité' (ID: 3761)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.4429562985897064
    2. 'def' → logprob: -1.9429563283920288
    3. 'ité' → logprob: -2.6929562091827393
    4. '(co' → logprob: -3.6929562091827393
    5. '(' → logprob: -4.067956447601318
    6. 'e' → logprob: -4.442956447601318
    7. 'ide' → logprob: -4.442956447601318
    8. 'if' → logprob: -4.692956447601318
    9. 'ate' → logprob: -4.817956447601318
    10. '=' → logprob: -4.942956447601318

Token 2906: ' de' (ID: 334)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.16056986153125763
    2. '               ' → logprob: -2.785569906234741
    3. 'new' → logprob: -3.035569906234741
    4. 'if' → logprob: -3.410569906234741
    5. '(' → logprob: -6.660569667816162
    6. ' new' → logprob: -6.660569667816162
    7. ' if' → logprob: -6.910569667816162
    8. '(co' → logprob: -7.160569667816162
    9. '           ' → logprob: -7.785569667816162
    10. 'coins' → logprob: -8.53557014465332

Token 2907: ' l' (ID: 305)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0006208192789927125
    2. 'new' → logprob: -7.8756208419799805
    3. 'tuple' → logprob: -8.62562084197998
    4. '(co' → logprob: -11.12562084197998
    5. 'co' → logprob: -11.62562084197998
    6. ' coins' → logprob: -11.75062084197998
    7. 'coin' → logprob: -12.25062084197998
    8. 'pieces' → logprob: -12.87562084197998
    9. 'tokens' → logprob: -13.00062084197998
    10. 'len' → logprob: -13.12562084197998

Token 2908: ''état' (ID: 116357)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.017655929550528526
    2. 'coins' → logprob: -4.767655849456787
    3. 'tuple' → logprob: -5.767655849456787
    4. 'state' → logprob: -6.517655849456787
    5. 'e' → logprob: -7.267655849456787
    6. 'co' → logprob: -7.517655849456787
    7. ' new' → logprob: -7.767655849456787
    8. '(new' → logprob: -7.767655849456787
    9. ''état' → logprob: -7.767655849456787
    10. 'en' → logprob: -8.517656326293945

Token 2909: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3578082025051117
    2. 'if' → logprob: -1.482808232307434
    3. ' if' → logprob: -2.6078081130981445
    4. '```' → logprob: -10.857808113098145
    5. '                
' → logprob: -11.607808113098145
    6. '                   ' → logprob: -11.857808113098145
    7. ' and' → logprob: -12.357808113098145
    8. ':
' → logprob: -12.357808113098145
    9. ' (' → logprob: -12.482808113098145
    10. '
' → logprob: -12.482808113098145

Token 2910: 'pas' (ID: 21122)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00011653638648567721
    2. ' coins' → logprob: -9.625116348266602
    3. 'not' → logprob: -11.375116348266602
    4. 'all' → logprob: -11.875116348266602
    5. '   ' → logprob: -12.250116348266602
    6. 'coin' → logprob: -12.375116348266602
    7. '
' → logprob: -12.750116348266602
    8. 'new' → logprob: -12.750116348266602
    9. 'len' → logprob: -12.750116348266602
    10. ')' → logprob: -13.125116348266602

Token 2911: ' trop' (ID: 14765)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7262895107269287
    2. 'ex' → logprob: -1.6012895107269287
    3. 'new' → logprob: -1.8512895107269287
    4. ' new' → logprob: -3.1012895107269287
    5. '>' → logprob: -3.2262895107269287
    6. ' coins' → logprob: -3.7262895107269287
    7. ' dépasser' → logprob: -3.7262895107269287
    8. 'sup' → logprob: -5.851289749145508
    9. ' dépass' → logprob: -5.976289749145508
    10. 'greater' → logprob: -5.976289749145508

Token 2912: ' de' (ID: 334)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.022202052175998688
    2. 'é' → logprob: -5.147202014923096
    3. 'gr' → logprob: -5.147202014923096
    4. 'de' → logprob: -5.522202014923096
    5. 'd' → logprob: -6.647202014923096
    6. 'nombre' → logprob: -6.772202014923096
    7. 'import' → logprob: -7.022202014923096
    8. 'large' → logprob: -7.647202014923096
    9. 'many' → logprob: -7.897202014923096
    10. ' grand' → logprob: -8.147202491760254

Token 2913: ' pièces' (ID: 49165)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2263890504837036
    2. 'pieces' → logprob: -2.226388931274414
    3. 'coins' → logprob: -3.351388931274414
    4. 'pi' → logprob: -3.726388931274414
    5. 'n' → logprob: -3.851388931274414
    6. 'max' → logprob: -4.851388931274414
    7. 'nou' → logprob: -6.851388931274414
    8. '```' → logprob: -6.851388931274414
    9. 'co' → logprob: -7.101388931274414
    10. 'piece' → logprob: -8.101388931274414

Token 2914: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.149999976158142
    2. ')' → logprob: -1.399999976158142
    3. '[i' → logprob: -1.649999976158142
    4. 'new' → logprob: -3.1500000953674316
    5. '):
' → logprob: -3.2750000953674316
    6. ',' → logprob: -3.6500000953674316
    7. '                   ' → logprob: -3.7750000953674316
    8. 's' → logprob: -4.025000095367432
    9. '```' → logprob: -4.275000095367432
    10. 'max' → logprob: -4.775000095367432

Token 2915: ' empêcher' (ID: 184771)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.7196744084358215
    2. 'c' → logprob: -1.9696743488311768
    3. 'lim' → logprob: -2.5946743488311768
    4. 'ev' → logprob: -2.7196743488311768
    5. 'cha' → logprob: -2.7196743488311768
    6. 'i' → logprob: -3.2196743488311768
    7. 'les' → logprob: -3.5946743488311768
    8. 'MAX' → logprob: -4.469674587249756
    9. 'new' → logprob: -4.469674587249756
    10. 'ch' → logprob: -4.469674587249756

Token 2916: ' explosion' (ID: 53199)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.004488038830459118
    2. 'l' → logprob: -5.504487991333008
    3. ' explosion' → logprob: -8.754487991333008
    4. 'une' → logprob: -8.754487991333008
    5. 'explode' → logprob: -9.879487991333008
    6. 'ex' → logprob: -11.004487991333008
    7. 'exp' → logprob: -11.379487991333008
    8. 'overflow' → logprob: -12.129487991333008
    9. '
' → logprob: -12.629487991333008
    10. 'exc' → logprob: -13.879487991333008

Token 2917: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03871834650635719
    2. ')
' → logprob: -4.288718223571777
    3. 'new' → logprob: -5.288718223571777
    4. 'de' → logprob: -5.538718223571777
    5. 'des' → logprob: -5.538718223571777
    6. ')' → logprob: -5.788718223571777
    7. '(new' → logprob: -6.413718223571777
    8. '                   ' → logprob: -6.663718223571777
    9. '           ' → logprob: -6.913718223571777
    10. '):
' → logprob: -6.913718223571777

Token 2918: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.282920129597187e-05
    2. '                   ' → logprob: -12.375012397766113
    3. ' if' → logprob: -13.125012397766113
    4. 'if' → logprob: -13.125012397766113
    5. '```' → logprob: -13.125012397766113
    6. '           ' → logprob: -13.500012397766113
    7. '                       ' → logprob: -14.500012397766113
    8. '              ' → logprob: -15.875012397766113
    9. '   ' → logprob: -16.00001335144043
    10. '       ' → logprob: -16.12501335144043

Token 2919: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0056155347265303135
    2. 'if' → logprob: -5.505615711212158
    3. ' if' → logprob: -6.630615711212158
    4. '           ' → logprob: -8.755615234375
    5. '                   ' → logprob: -9.880615234375
    6. '              ' → logprob: -13.255615234375
    7. '                ' → logprob: -13.630615234375
    8. '                       ' → logprob: -13.630615234375
    9. '```' → logprob: -13.755615234375
    10. '   ' → logprob: -14.380615234375

Token 2920: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0399274080991745
    2. '_tpl' → logprob: -3.2899274826049805
    3. '_tuple' → logprob: -7.5399274826049805
    4. '_tokens' → logprob: -7.7899274826049805
    5. '_' → logprob: -8.16492748260498
    6. '_new' → logprob: -8.53992748260498
    7. 'tpl' → logprob: -8.91492748260498
    8. 'new' → logprob: -9.16492748260498
    9. 'coins' → logprob: -9.16492748260498
    10. 'co' → logprob: -10.28992748260498

Token 2921: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0009713716572150588
    2. '_ins' → logprob: -7.75097131729126
    3. 'in' → logprob: -7.87597131729126
    4. 'coins' → logprob: -9.250971794128418
    5. 'ns' → logprob: -10.875971794128418
    6. '_in' → logprob: -11.500971794128418
    7. '_' → logprob: -11.625971794128418
    8. '_co' → logprob: -12.375971794128418
    9. 'ints' → logprob: -12.375971794128418
    10. 'ains' → logprob: -13.125971794128418

Token 2922: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -0.0007231564959511161
    2. '_tuple' → logprob: -7.625723361968994
    3. 'tpl' → logprob: -8.750722885131836
    4. ' =' → logprob: -10.500722885131836
    5. '=' → logprob: -10.750722885131836
    6. '_list' → logprob: -11.500722885131836
    7. 'Tpl' → logprob: -12.375722885131836
    8. 'is' → logprob: -12.625722885131836
    9. '_lst' → logprob: -12.875722885131836
    10. '=_' → logprob: -13.125722885131836

Token 2923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694784998893738
    2. ' =' → logprob: -2.1269478797912598
    3. '=(' → logprob: -11.126947402954102
    4. '=new' → logprob: -12.876947402954102
    5. 'new' → logprob: -13.876947402954102
    6. '   ' → logprob: -15.126947402954102
    7. '=('' → logprob: -15.376947402954102
    8. '=
' → logprob: -15.626947402954102
    9. ' =(' → logprob: -15.751947402954102
    10. '=("' → logprob: -16.5019474029541

Token 2924: ' tuple' (ID: 31311)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.7250568270683289
    2. 'tuple' → logprob: -0.8500568270683289
    3. ' tuple' → logprob: -3.4750568866729736
    4. '(' → logprob: -3.6000568866729736
    5. ' (' → logprob: -4.2250566482543945
    6. '(co' → logprob: -4.7250566482543945
    7. 'coins' → logprob: -5.2250566482543945
    8. '   ' → logprob: -7.8500566482543945
    9. '           ' → logprob: -8.225056648254395
    10. '(new' → logprob: -8.600056648254395

Token 2925: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00067323591792956
    2. 'new' → logprob: -7.375673294067383
    3. '([' → logprob: -10.500673294067383
    4. '(co' → logprob: -11.625673294067383
    5. '[new' → logprob: -12.375673294067383
    6. '(sorted' → logprob: -13.250673294067383
    7. '(
' → logprob: -13.625673294067383
    8. '((' → logprob: -14.250673294067383
    9. 'coins' → logprob: -14.500673294067383
    10. '(' → logprob: -14.625673294067383

Token 2926: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00016563729150220752
    2. 'new' → logprob: -9.250165939331055
    3. 'coins' → logprob: -9.625165939331055
    4. 'co' → logprob: -13.500165939331055
    5. '_new' → logprob: -14.375165939331055
    6. 'Coins' → logprob: -14.875165939331055
    7. '(new' → logprob: -15.000165939331055
    8. '[new' → logprob: -15.000165939331055
    9. '(co' → logprob: -15.250165939331055
    10. '[' → logprob: -17.000165939331055

Token 2927: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.002915788209065795
    2. '_list' → logprob: -6.002915859222412
    3. '_ins' → logprob: -8.252915382385254
    4. 'ist' → logprob: -9.252915382385254
    5. 'ns' → logprob: -10.502915382385254
    6. 'ans' → logprob: -11.502915382385254
    7. '[' → logprob: -12.252915382385254
    8. '_in' → logprob: -12.252915382385254
    9. 'ons' → logprob: -12.627915382385254
    10. 'ists' → logprob: -12.752915382385254

Token 2928: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.000565541791729629
    2. 'list' → logprob: -7.625565528869629
    3. 'ist' → logprob: -9.875565528869629
    4. 'List' → logprob: -12.750565528869629
    5. '
' → logprob: -12.875565528869629
    6. 'st' → logprob: -12.875565528869629
    7. 'lst' → logprob: -12.875565528869629
    8. '[' → logprob: -13.000565528869629
    9. ')' → logprob: -13.500565528869629
    10. '       ' → logprob: -13.875565528869629

Token 2929: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007091257721185684
    2. ')
' → logprob: -5.007091045379639
    3. '               ' → logprob: -8.007091522216797
    4. '           ' → logprob: -11.632091522216797
    5. '<|end|>' → logprob: -11.757091522216797
    6. '                   ' → logprob: -12.382091522216797
    7. '):
' → logprob: -12.757091522216797
    8. '       ' → logprob: -12.882091522216797
    9. ')>
' → logprob: -13.132091522216797
    10. ')
' → logprob: -13.257091522216797

Token 2930: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003314129135105759
    2. '           ' → logprob: -8.75033187866211
    3. ' if' → logprob: -9.62533187866211
    4. '```' → logprob: -9.87533187866211
    5. 'if' → logprob: -10.50033187866211
    6. '                   ' → logprob: -10.75033187866211
    7. '                       ' → logprob: -12.62533187866211
    8. '                           ' → logprob: -14.12533187866211
    9. '                               ' → logprob: -14.25033187866211
    10. '       ' → logprob: -14.25033187866211

Token 2931: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49846601486206055
    2. 'if' (adapté à ' if') → logprob: -0.9984660148620605
    3. ' if' → logprob: -3.7484660148620605
    4. '                   ' → logprob: -8.123466491699219
    5. '           ' → logprob: -8.623466491699219
    6. '```' → logprob: -10.748466491699219
    7. '                       ' → logprob: -11.373466491699219
    8. '                ' → logprob: -11.748466491699219
    9. 'If' → logprob: -12.248466491699219
    10. '                           ' → logprob: -12.373466491699219

Token 2932: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.43609684705734253
    2. 'coins' → logprob: -1.6860969066619873
    3. ' not' → logprob: -1.8110969066619873
    4. ' coins' → logprob: -5.436096668243408
    5. '   ' → logprob: -8.561097145080566
    6. '(not' → logprob: -9.811097145080566
    7. '           ' → logprob: -10.061097145080566
    8. '               ' → logprob: -11.061097145080566
    9. 'co' → logprob: -11.561097145080566
    10. '       ' → logprob: -11.936097145080566

Token 2933: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -2.8444881536415778e-05
    2. ' coins' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.875028610229492
    4. 'co' → logprob: -15.125028610229492
    5. '```' → logprob: -15.375028610229492
    6. '``' → logprob: -17.625028610229492
    7. 'coin' → logprob: -17.750028610229492
    8. ' ' → logprob: -17.750028610229492
    9. '`' → logprob: -17.875028610229492
    10. '(co' → logprob: -18.125028610229492

Token 2934: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -2.2723104848410003e-05
    2. '_tpl' → logprob: -11.250022888183594
    3. 'tuple' → logprob: -11.750022888183594
    4. '```' → logprob: -14.250022888183594
    5. '_t' → logprob: -14.875022888183594
    6. '
' → logprob: -15.375022888183594
    7. 'Tuple' → logprob: -15.750022888183594
    8. 's' → logprob: -17.000022888183594
    9. '   ' → logprob: -17.125022888183594
    10. '#' → logprob: -17.125022888183594

Token 2935: '_is' (ID: 15224)
  Prédit: '_is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -5.872261317563243e-05
    2. 'is' → logprob: -9.750059127807617
    3. 'Is' → logprob: -15.000059127807617
    4. '_valid' → logprob: -16.875059127807617
    5. '_are' → logprob: -17.625059127807617
    6. '```' → logprob: -18.750059127807617
    7. '_has' → logprob: -18.875059127807617
    8. '.is' → logprob: -19.125059127807617
    9. '$is' → logprob: -19.125059127807617
    10. '(is' → logprob: -19.250059127807617

Token 2936: '_valid' (ID: 23321)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.10024064034223557
    2. '_valid' → logprob: -2.350240707397461
    3. 'new' → logprob: -10.850240707397461
    4. ' valid' → logprob: -11.725240707397461
    5. 'Valid' → logprob: -12.100240707397461
    6. '(valid' → logprob: -14.725240707397461
    7. '	valid' → logprob: -15.100240707397461
    8. 'invalid' → logprob: -17.47524070739746
    9. '(new' → logprob: -17.60024070739746
    10. ' Valid' → logprob: -18.10024070739746

Token 2937: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.625001907348633
    3. 'new' → logprob: -15.250001907348633
    4. '[new' → logprob: -15.375001907348633
    5. ' new' → logprob: -17.125001907348633
    6. '((' → logprob: -17.375001907348633
    7. ',new' → logprob: -17.750001907348633
    8. ')new' → logprob: -18.000001907348633
    9. '(' → logprob: -18.625001907348633
    10. '(
' → logprob: -19.125001907348633

Token 2938: '_co' (ID: 21102)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.1508396714925766
    2. '_co' → logprob: -2.0258395671844482
    3. 'co' → logprob: -5.650839805603027
    4. 'new' → logprob: -6.025839805603027
    5. 'tpl' → logprob: -7.525839805603027
    6. 'cons' → logprob: -8.525839805603027
    7. 'ins' → logprob: -8.775839805603027
    8. 'c' → logprob: -8.900839805603027
    9. '_tokens' → logprob: -9.150839805603027
    10. 'chips' → logprob: -9.775839805603027

Token 2939: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.31143608689308167
    2. 'pl' → logprob: -2.061436176300049
    3. 'ps' → logprob: -2.936436176300049
    4. 'new' → logprob: -3.436436176300049
    5. 'pls' → logprob: -4.186436176300049
    6. 'ples' → logprob: -4.436436176300049
    7. 'ns' → logprob: -4.686436176300049
    8. 'p' → logprob: -5.686436176300049
    9. 'coins' → logprob: -6.061436176300049
    10. 'ls' → logprob: -6.186436176300049

Token 2940: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -0.0011717714369297028
    2. 'tpl' → logprob: -6.751171588897705
    3. 'new' → logprob: -14.126172065734863
    4. 'Tpl' → logprob: -15.251172065734863
    5. 'pl' → logprob: -16.251171112060547
    6. 'plt' → logprob: -16.626171112060547
    7. ' tpl' → logprob: -16.626171112060547
    8. '   ' → logprob: -17.001171112060547
    9. '_lst' → logprob: -17.251171112060547
    10. '.tpl' → logprob: -17.501171112060547

Token 2941: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014459635131061077
    2. ':
' → logprob: -4.764459609985352
    3. '                   ' → logprob: -5.764459609985352
    4. '               ' → logprob: -7.014459609985352
    5. ':' → logprob: -7.389459609985352
    6. '):' → logprob: -7.639459609985352
    7. '   ' → logprob: -8.639459609985352
    8. '       ' → logprob: -8.889459609985352
    9. ')' → logprob: -9.139459609985352
    10. '           ' → logprob: -9.389459609985352

Token 2942: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008701201528310776
    2. '               ' → logprob: -5.008701324462891
    3. 'continue' → logprob: -6.633701324462891
    4. '                       ' → logprob: -7.508701324462891
    5. ' continue' → logprob: -9.50870132446289
    6. '   ' → logprob: -10.75870132446289
    7. '           ' → logprob: -11.38370132446289
    8. '                           ' → logprob: -12.13370132446289
    9. '```' → logprob: -12.75870132446289
    10. '	continue' → logprob: -13.38370132446289

Token 2943: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5804669857025146
    2. 'continue' (adapté à ' continue') → logprob: -0.8304669857025146
    3. '               ' → logprob: -6.080467224121094
    4. '                       ' → logprob: -6.580467224121094
    5. ' continue' → logprob: -7.580467224121094
    6. '	continue' → logprob: -8.580467224121094
    7. '   ' → logprob: -9.330467224121094
    8. '```' → logprob: -10.830467224121094
    9. '				' → logprob: -11.330467224121094
    10. '	               ' → logprob: -11.705467224121094

Token 2944: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00224113161675632
    2. '                   ' → logprob: -6.627241134643555
    3. '           ' → logprob: -7.752241134643555
    4. '
' → logprob: -8.127241134643555
    5. '                
' → logprob: -9.377241134643555
    6. '                       ' → logprob: -9.877241134643555
    7. '       ' → logprob: -11.502241134643555
    8. '```' → logprob: -12.127241134643555
    9. '                    
' → logprob: -12.252241134643555
    10. '                ' → logprob: -12.252241134643555

Token 2945: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005816269549541175
    2. '                   ' → logprob: -7.750581741333008
    3. '                
' → logprob: -9.750581741333008
    4. '
' → logprob: -9.875581741333008
    5. '           ' → logprob: -10.875581741333008
    6. 'new' → logprob: -12.500581741333008
    7. '```' → logprob: -12.625581741333008
    8. '                       ' → logprob: -12.750581741333008
    9. 'expense' → logprob: -13.125581741333008
    10. '                    
' → logprob: -13.250581741333008

Token 2946: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028261307626962662
    2. 'new' → logprob: -4.403261184692383
    3. 'if' → logprob: -4.653261184692383
    4. 'total' → logprob: -6.403261184692383
    5. 'cost' → logprob: -6.403261184692383
    6. 'current' → logprob: -6.903261184692383
    7. ' if' → logprob: -7.653261184692383
    8. 'old' → logprob: -8.028261184692383
    9. 'expense' → logprob: -8.028261184692383
    10. ' new' → logprob: -8.528261184692383

Token 2947: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32511022686958313
    2. '               ' → logprob: -1.9501101970672607
    3. 'new' → logprob: -2.5751101970672607
    4. 'current' → logprob: -4.20011043548584
    5. ' if' → logprob: -4.82511043548584
    6. 'total' → logprob: -4.95011043548584
    7. 'cost' → logprob: -4.95011043548584
    8. 'expense' → logprob: -4.95011043548584
    9. 'old' → logprob: -5.32511043548584
    10. 'prev' → logprob: -5.57511043548584

Token 2948: ' de' (ID: 334)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1371673345565796
    2. 'total' → logprob: -1.6371673345565796
    3. '               ' → logprob: -2.137167453765869
    4. 'expense' → logprob: -2.137167453765869
    5. '_exp' → logprob: -3.512167453765869
    6. '_new' → logprob: -3.512167453765869
    7. '_total' → logprob: -3.637167453765869
    8. ' =' → logprob: -3.762167453765869
    9. 'exp' → logprob: -3.762167453765869
    10. ' new' → logprob: -4.012167453765869

Token 2949: ' la' (ID: 557)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.3958587050437927
    2. 'nd' → logprob: -1.8958587646484375
    3. ' expense' → logprob: -2.0208587646484375
    4. 'new' → logprob: -4.2708587646484375
    5. ' nd' → logprob: -4.5208587646484375
    6. 'pay' → logprob: -4.8958587646484375
    7. ' new' → logprob: -5.0208587646484375
    8. 'dp' → logprob: -6.7708587646484375
    9. ' pay' → logprob: -6.7708587646484375
    10. 'dep' → logprob: -7.1458587646484375

Token 2950: ' dép' (ID: 34015)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3726596534252167
    2. 'total' → logprob: -1.747659683227539
    3. 'dep' → logprob: -3.372659683227539
    4. 'pay' → logprob: -3.497659683227539
    5. '               ' → logprob: -3.622659683227539
    6. '                   ' → logprob: -4.622659683227539
    7. ' new' → logprob: -4.622659683227539
    8. 'nd' → logprob: -5.372659683227539
    9. 'expense' → logprob: -5.372659683227539
    10. ' total' → logprob: -5.997659683227539

Token 2951: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0016598280053585768
    2. '
' → logprob: -7.376659870147705
    3. 'ence' → logprob: -8.501659393310547
    4. 'n' → logprob: -8.501659393310547
    5. '=' → logprob: -9.376659393310547
    6. '#' → logprob: -9.501659393310547
    7. '</' → logprob: -9.751659393310547
    8. 'anse' → logprob: -10.126659393310547
    9. 'expense' → logprob: -10.626659393310547
    10. '}' → logprob: -10.626659393310547

Token 2952: ' totale' (ID: 52898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.572762668132782
    2. '               ' → logprob: -1.3227627277374268
    3. '=' → logprob: -2.3227627277374268
    4. ' total' → logprob: -4.197762489318848
    5. '                   ' → logprob: -4.322762489318848
    6. 'total' → logprob: -4.572762489318848
    7. 'expense' → logprob: -4.822762489318848
    8. ' new' → logprob: -4.947762489318848
    9. ' expense' → logprob: -5.572762489318848
    10. ' +=' → logprob: -5.572762489318848

Token 2953: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28295987844467163
    2. 'new' → logprob: -2.0329599380493164
    3. ' new' → logprob: -2.5329599380493164
    4. 'total' → logprob: -3.7829599380493164
    5. ' total' → logprob: -4.782959938049316
    6. ' =' → logprob: -5.907959938049316
    7. 'expense' → logprob: -6.907959938049316
    8. 'next' → logprob: -8.407959938049316
    9. 'cost' → logprob: -8.532959938049316
    10. ',' → logprob: -9.032959938049316

Token 2954: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.016354454681277275
    2. ' expense' → logprob: -4.141354560852051
    3. '               ' → logprob: -8.26635456085205
    4. '                   ' → logprob: -9.89135456085205
    5. '                ' → logprob: -12.51635456085205
    6. '   ' → logprob: -13.76635456085205
    7. '              ' → logprob: -13.89135456085205
    8. ' ' → logprob: -14.01635456085205
    9. 'nd' → logprob: -14.14135456085205
    10. 'pay' → logprob: -14.26635456085205

Token 2955: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06198897212743759
    2. '+' → logprob: -2.8119890689849854
    3. '                ' → logprob: -12.061988830566406
    4. ' +
' → logprob: -12.186988830566406
    5. '               ' → logprob: -12.936988830566406
    6. '+
' → logprob: -13.186988830566406
    7. '                   ' → logprob: -13.686988830566406
    8. '                    ' → logprob: -13.811988830566406
    9. ' ' → logprob: -13.936988830566406
    10. ' +=' → logprob: -14.436988830566406

Token 2956: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.004686799366027117
    2. ' pay' → logprob: -5.3796868324279785
    3. '   ' → logprob: -10.75468635559082
    4. '(pay' → logprob: -10.87968635559082
    5. '               ' → logprob: -12.37968635559082
    6. 'price' → logprob: -12.50468635559082
    7. '           ' → logprob: -12.62968635559082
    8. '                   ' → logprob: -13.00468635559082
    9. ' ' → logprob: -13.50468635559082
    10. 'p' → logprob: -13.75468635559082

Token 2957: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16028231382369995
    2. '+' → logprob: -1.9102823734283447
    3. '               ' → logprob: -10.160282135009766
    4. '                   ' → logprob: -11.160282135009766
    5. '+
' → logprob: -13.035282135009766
    6. ' +
' → logprob: -14.035282135009766
    7. '                ' → logprob: -14.910282135009766
    8. '                       ' → logprob: -15.035282135009766
    9. ' ' → logprob: -15.035282135009766
    10. '           ' → logprob: -15.410282135009766

Token 2958: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007675841450691223
    2. '                   ' → logprob: -5.257675647735596
    3. ' +' → logprob: -7.007675647735596
    4. '+' → logprob: -7.257675647735596
    5. '           ' → logprob: -8.632676124572754
    6. '                
' → logprob: -8.757676124572754
    7. '                       ' → logprob: -9.132676124572754
    8. '                    
' → logprob: -10.007676124572754
    9. '                ' → logprob: -10.132676124572754
    10. ' if' → logprob: -10.257676124572754

Token 2959: ' new' (ID: 620)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7824746966362
    2. '               ' → logprob: -1.1574747562408447
    3. 'pay' → logprob: -2.6574747562408447
    4. ' pay' → logprob: -3.0324747562408447
    5. 'expense' → logprob: -3.5324747562408447
    6. ' expense' → logprob: -3.7824747562408447
    7. ' new' → logprob: -4.407474517822266
    8. '                       ' → logprob: -4.907474517822266
    9. ' if' → logprob: -5.657474517822266
    10. '                    ' → logprob: -5.782474517822266

Token 2960: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.038438934832811356
    2. '_' → logprob: -4.41343879699707
    3. '_cost' → logprob: -4.53843879699707
    4. 'expense' → logprob: -4.78843879699707
    5. '_pay' → logprob: -5.41343879699707
    6. '_co' → logprob: -7.41343879699707
    7. '_dp' → logprob: -8.66343879699707
    8. '_num' → logprob: -8.66343879699707
    9. 'exp' → logprob: -8.78843879699707
    10. '_ex' → logprob: -8.91343879699707

Token 2961: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0013859511818736792
    2. '=' → logprob: -7.5013861656188965
    3. ' =' → logprob: -7.5013861656188965
    4. 'n' → logprob: -9.876385688781738
    5. '   ' → logprob: -9.876385688781738
    6. '
' → logprob: -10.001385688781738
    7. 'anse' → logprob: -10.251385688781738
    8. '       ' → logprob: -11.251385688781738
    9. ')' → logprob: -11.751385688781738
    10. '}' → logprob: -11.876385688781738

Token 2962: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061976201832294464
    2. '+' → logprob: -2.811976194381714
    3. ' ' → logprob: -12.561976432800293
    4. ')' → logprob: -14.186976432800293
    5. '=' → logprob: -14.436976432800293
    6. ' +
' → logprob: -14.811976432800293
    7. ' +=' → logprob: -14.811976432800293
    8. ' =' → logprob: -14.936976432800293
    9. '               ' → logprob: -15.061976432800293
    10. '                ' → logprob: -15.186976432800293

Token 2963: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.029752571135759354
    2. ' expense' → logprob: -3.529752492904663
    3. '               ' → logprob: -13.529752731323242
    4. 'exp' → logprob: -15.404752731323242
    5. 'expenses' → logprob: -15.654752731323242
    6. '                   ' → logprob: -16.404752731323242
    7. '           ' → logprob: -16.529752731323242
    8. '                ' → logprob: -16.654752731323242
    9. '   ' → logprob: -17.404752731323242
    10. '            ' → logprob: -17.654752731323242

Token 2964: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38692706823349
    2. ' +' → logprob: -1.1369271278381348
    3. '+
' → logprob: -10.261926651000977
    4. ' +
' → logprob: -11.636926651000977
    5. '<|end|>' → logprob: -12.011926651000977
    6. '<|end|>' → logprob: -14.011926651000977
    7. '               ' → logprob: -14.261926651000977
    8. '()+' → logprob: -14.636926651000977
    9. '＋' → logprob: -15.011926651000977
    10. '+=' → logprob: -15.011926651000977

Token 2965: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -9.615255839889869e-05
    2. ' pay' → logprob: -9.250096321105957
    3. '               ' → logprob: -17.37509536743164
    4. '   ' → logprob: -18.87509536743164
    5. '(pay' → logprob: -19.12509536743164
    6. '                   ' → logprob: -19.37509536743164
    7. '           ' → logprob: -19.62509536743164
    8. 'play' → logprob: -19.75009536743164
    9. 'Pay' → logprob: -21.12509536743164
    10. 'payment' → logprob: -21.37509536743164

Token 2966: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006188414059579372
    2. '
' → logprob: -5.38118839263916
    3. ')' → logprob: -7.38118839263916
    4. '                
' → logprob: -7.88118839263916
    5. '                   ' → logprob: -8.88118839263916
    6. '<|end|>' → logprob: -8.88118839263916
    7. ')
' → logprob: -9.75618839263916
    8. ' if' → logprob: -10.38118839263916
    9. '                       ' → logprob: -10.75618839263916
    10. 'if' → logprob: -11.00618839263916

Token 2967: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011224505578866228
    2. 'if' → logprob: -9.500112533569336
    3. '                   ' → logprob: -10.375112533569336
    4. '                
' → logprob: -13.125112533569336
    5. '           ' → logprob: -13.500112533569336
    6. ' if' → logprob: -13.625112533569336
    7. '```' → logprob: -14.500112533569336
    8. '                       ' → logprob: -15.250112533569336
    9. ',' → logprob: -15.625112533569336
    10. '                           ' → logprob: -16.125112533569336

Token 2968: ' key' (ID: 2140)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038440197706222534
    2. 'if' → logprob: -3.288440227508545
    3. 'key' (adapté à ' key') → logprob: -8.288439750671387
    4. ' if' → logprob: -9.038439750671387
    5. '                   ' → logprob: -10.788439750671387
    6. '           ' → logprob: -12.413439750671387
    7. ' key' → logprob: -12.913439750671387
    8. '#' → logprob: -15.288439750671387
    9. '   ' → logprob: -15.538439750671387
    10. '                       ' → logprob: -15.913439750671387

Token 2969: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6046350598335266
    2. ' =' → logprob: -0.8546350598335266
    3. '=(' → logprob: -3.604635000228882
    4. '(num' → logprob: -7.729635238647461
    5. ' (' → logprob: -9.104635238647461
    6. '[(' → logprob: -9.229635238647461
    7. '   ' → logprob: -9.354635238647461
    8. '           ' → logprob: -9.729635238647461
    9. '=
' → logprob: -9.854635238647461
    10. '=num' → logprob: -9.854635238647461

Token 2970: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0001238004770129919
    2. '(num' → logprob: -9.500123977661133
    3. ' (' → logprob: -10.000123977661133
    4. '               ' → logprob: -12.875123977661133
    5. '   ' → logprob: -14.750123977661133
    6. '(' → logprob: -15.375123977661133
    7. '           ' → logprob: -16.500123977661133
    8. '                   ' → logprob: -16.625123977661133
    9. '[new' → logprob: -17.000123977661133
    10. '              ' → logprob: -17.875123977661133

Token 2971: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.88418151892256e-05
    2. ' new' → logprob: -9.750059127807617
    3. '(new' → logprob: -15.625059127807617
    4. '_new' → logprob: -16.125059127807617
    5. '[new' → logprob: -16.625059127807617
    6. ')new' → logprob: -16.750059127807617
    7. 'New' → logprob: -17.375059127807617
    8. '	new' → logprob: -17.500059127807617
    9. '   ' → logprob: -18.750059127807617
    10. '$new' → logprob: -18.875059127807617

Token 2972: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002273723715916276
    2. '_num' → logprob: -6.1272735595703125
    3. 'num' → logprob: -9.627273559570312
    4. '500' → logprob: -12.127273559570312
    5. '(' → logprob: -12.627273559570312
    6. ',' → logprob: -13.252273559570312
    7. '(num' → logprob: -13.252273559570312
    8. '_,' → logprob: -13.752273559570312
    9. '_token' → logprob: -13.752273559570312
    10. '```' → logprob: -14.127273559570312

Token 2973: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.000527534110005945
    2. '_' → logprob: -7.625527381896973
    3. 'num' → logprob: -11.250527381896973
    4. ' ' → logprob: -12.250527381896973
    5. '   ' → logprob: -12.375527381896973
    6. '               ' → logprob: -13.250527381896973
    7. '       ' → logprob: -13.375527381896973
    8. '
' → logprob: -13.375527381896973
    9. '           ' → logprob: -13.500527381896973
    10. '5' → logprob: -13.625527381896973

Token 2974: '_count' (ID: 7536)
  Prédit: ',num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.7614556550979614
    2. ',' → logprob: -0.8864556550979614
    3. '_num' → logprob: -2.386455535888672
    4. 'num' → logprob: -3.886455535888672
    5. '_' → logprob: -5.886455535888672
    6. ',key' → logprob: -6.511455535888672
    7. '_count' → logprob: -7.136455535888672
    8. ',_' → logprob: -7.386455535888672
    9. ',new' → logprob: -7.761455535888672
    10. '_,' → logprob: -7.761455535888672

Token 2975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009624350932426751
    2. ',key' → logprob: -7.500962257385254
    3. ',new' → logprob: -8.250962257385254
    4. ' ,' → logprob: -9.000962257385254
    5. ',
' → logprob: -11.750962257385254
    6. ',next' → logprob: -12.625962257385254
    7. '           ' → logprob: -13.000962257385254
    8. ',k' → logprob: -13.125962257385254
    9. '               ' → logprob: -13.625962257385254
    10. ',n' → logprob: -14.000962257385254

Token 2976: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.25193047523498535
    2. ' new' → logprob: -1.5019304752349854
    3. '(new' → logprob: -14.751930236816406
    4. ')new' → logprob: -14.751930236816406
    5. '_new' → logprob: -15.501930236816406
    6. 'coins' → logprob: -16.626930236816406
    7. ')' → logprob: -16.751930236816406
    8. '            ' → logprob: -17.001930236816406
    9. '	new' → logprob: -17.251930236816406
    10. '[new' → logprob: -17.376930236816406

Token 2977: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -6.73052782076411e-05
    2. 'coins' → logprob: -9.625067710876465
    3. '_exp' → logprob: -14.750067710876465
    4. '_coin' → logprob: -15.250067710876465
    5. 'Coins' → logprob: -15.875067710876465
    6. '```' → logprob: -15.875067710876465
    7. '
' → logprob: -17.37506675720215
    8. '_' → logprob: -17.37506675720215
    9. '``' → logprob: -17.37506675720215
    10. ' coins' → logprob: -17.50006675720215

Token 2978: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0017206385964527726
    2. '_ins' → logprob: -6.501720428466797
    3. 'in' → logprob: -8.876720428466797
    4. 'ns' → logprob: -10.376720428466797
    5. 'coins' → logprob: -11.376720428466797
    6. '_' → logprob: -12.126720428466797
    7. '_co' → logprob: -12.376720428466797
    8. '_tpl' → logprob: -12.501720428466797
    9. '_in' → logprob: -12.876720428466797
    10. '(ins' → logprob: -12.876720428466797

Token 2979: '_tpl' (ID: 31613)
  Prédit: '_tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tpl' → logprob: -1.7432603272027336e-06
    2. 'tpl' → logprob: -13.500001907348633
    3. '_tuple' → logprob: -15.625001907348633
    4. 'Tpl' → logprob: -16.250001907348633
    5. '_t' → logprob: -16.875001907348633
    6. '_tmp' → logprob: -17.125001907348633
    7. '_lst' → logprob: -17.375001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_tbl' → logprob: -17.875001907348633
    10. '_tp' → logprob: -18.500001907348633

Token 2980: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024262234568595886
    2. ')
' → logprob: -3.7742621898651123
    3. ')=' → logprob: -7.774262428283691
    4. '):
' → logprob: -8.149262428283691
    5. '               ' → logprob: -8.774262428283691
    6. ')
' → logprob: -10.399262428283691
    7. ')]' → logprob: -11.149262428283691
    8. '):' → logprob: -11.399262428283691
    9. ',' → logprob: -11.524262428283691
    10. '   ' → logprob: -11.649262428283691

Token 2981: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1018636226654053
    2. '```' → logprob: -1.2268636226654053
    3. ' =' → logprob: -2.2268636226654053
    4. '
' → logprob: -2.7268636226654053
    5. '<|end|>' → logprob: -2.8518636226654053
    6. '<|end|>' → logprob: -3.7268636226654053
    7. '                   ' → logprob: -3.9768636226654053
    8. ')' → logprob: -4.351863861083984
    9. '                
' → logprob: -4.351863861083984
    10. '           ' → logprob: -4.476863861083984

Token 2982: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13386934995651245
    2. 'if' (adapté à ' if') → logprob: -2.5088694095611572
    3. ' if' → logprob: -3.1338694095611572
    4. '```' → logprob: -8.383869171142578
    5. '                   ' → logprob: -9.383869171142578
    6. '           ' → logprob: -10.633869171142578
    7. '<|end|>' → logprob: -11.008869171142578
    8. '   ' → logprob: -11.758869171142578
    9. '<|end|>' → logprob: -12.383869171142578
    10. '``' → logprob: -12.633869171142578

Token 2983: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.26451292634010315
    2. ' nd' → logprob: -1.7645128965377808
    3. 'new' → logprob: -2.8895130157470703
    4. ' new' → logprob: -5.26451301574707
    5. '(nd' → logprob: -8.26451301574707
    6. '                   ' → logprob: -10.63951301574707
    7. 'ndl' → logprob: -11.26451301574707
    8. '   ' → logprob: -11.38951301574707
    9. '               ' → logprob: -11.63951301574707
    10. '```' → logprob: -12.01451301574707

Token 2984: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009278989746235311
    2. 'dp' → logprob: -7.000927925109863
    3. '[key' → logprob: -12.250927925109863
    4. '[p' → logprob: -12.500927925109863
    5. '[(' → logprob: -12.750927925109863
    6. '_dp' → logprob: -13.000927925109863
    7. 'pf' → logprob: -13.875927925109863
    8. '[' → logprob: -14.625927925109863
    9. 'P' → logprob: -14.875927925109863
    10. '_p' → logprob: -15.250927925109863

Token 2985: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0003135360311716795
    2. '[(' → logprob: -8.375313758850098
    3. 'key' → logprob: -9.500313758850098
    4. '(key' → logprob: -12.125313758850098
    5. '.get' → logprob: -13.875313758850098
    6. ' key' → logprob: -14.875313758850098
    7. '```' → logprob: -15.000313758850098
    8. ',key' → logprob: -15.500313758850098
    9. '_key' → logprob: -15.625313758850098
    10. '
' → logprob: -15.625313758850098

Token 2986: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7447791695594788
    2. ']' → logprob: -0.7447791695594788
    3. ' >' → logprob: -3.744779109954834
    4. ']>' → logprob: -3.994779109954834
    5. '[' → logprob: -6.119779109954834
    6. '[token' → logprob: -6.619779109954834
    7. '                   ' → logprob: -6.744779109954834
    8. ')' → logprob: -7.619779109954834
    9. '[key' → logprob: -7.744779109954834
    10. '```' → logprob: -7.744779109954834

Token 2987: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759838223457336
    2. ' >' → logprob: -0.8259838223457336
    3. '[' → logprob: -11.325984001159668
    4. '   ' → logprob: -11.575984001159668
    5. '```' → logprob: -12.575984001159668
    6. ' >
' → logprob: -13.200984001159668
    7. '           ' → logprob: -13.325984001159668
    8. '>
' → logprob: -13.325984001159668
    9. ' ' → logprob: -13.700984001159668
    10. '    ' → logprob: -13.700984001159668

Token 2988: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0921942703134846e-05
    2. ' new' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.87501049041748
    4. '               ' → logprob: -16.000011444091797
    5. '                   ' → logprob: -16.125011444091797
    6. '           ' → logprob: -16.625011444091797
    7. '	new' → logprob: -17.250011444091797
    8. '       ' → logprob: -18.000011444091797
    9. 'New' → logprob: -18.500011444091797
    10. '```' → logprob: -18.875011444091797

Token 2989: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -9.968312951968983e-06
    2. 'exp' → logprob: -12.125009536743164
    3. 'expense' → logprob: -12.500009536743164
    4. '_ex' → logprob: -16.125009536743164
    5. '
' → logprob: -16.250009536743164
    6. ' ' → logprob: -16.375009536743164
    7. '	exp' → logprob: -16.750009536743164
    8. '\' → logprob: -16.750009536743164
    9. '```' → logprob: -16.750009536743164
    10. '_EXP' → logprob: -16.875009536743164

Token 2990: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0002712297427933663
    2. 'anse' → logprob: -8.37527084350586
    3. 'n' → logprob: -11.12527084350586
    4. '
' → logprob: -12.25027084350586
    5. 'p' → logprob: -12.50027084350586
    6. 'onse' → logprob: -12.50027084350586
    7. '               ' → logprob: -12.87527084350586
    8. '       ' → logprob: -13.37527084350586
    9. '```' → logprob: -13.37527084350586
    10. '   ' → logprob: -14.12527084350586

Token 2991: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42467206716537476
    2. ':' → logprob: -1.7996721267700195
    3. ' =' → logprob: -1.9246721267700195
    4. ':
' → logprob: -3.9246721267700195
    5. '                   ' → logprob: -5.5496721267700195
    6. '               ' → logprob: -5.7996721267700195
    7. '[' → logprob: -6.2996721267700195
    8. '=
' → logprob: -6.6746721267700195
    9. '=True' → logprob: -7.4246721267700195
    10. '                           ' → logprob: -7.5496721267700195

Token 2992: '                   ' (ID: 699)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.655593991279602
    2. 'pay' → logprob: -1.530593991279602
    3. '                   ' → logprob: -1.905593991279602
    4. ' pay' → logprob: -2.9055938720703125
    5. ' new' → logprob: -4.1555938720703125
    6. ' =' → logprob: -4.5305938720703125
    7. '               ' → logprob: -4.6555938720703125
    8. 'new' → logprob: -5.4055938720703125
    9. '                       ' → logprob: -5.7805938720703125
    10. '                           ' → logprob: -6.1555938720703125

Token 2993: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.004446731880307198
    2. '                   ' → logprob: -6.254446506500244
    3. ' nd' → logprob: -6.379446506500244
    4. 'new' → logprob: -7.629446506500244
    5. '(nd' → logprob: -9.129446983337402
    6. '_nd' → logprob: -9.254446983337402
    7. '                       ' → logprob: -10.254446983337402
    8. '               ' → logprob: -11.254446983337402
    9. '                           ' → logprob: -11.254446983337402
    10. '                               ' → logprob: -11.504446983337402

Token 2994: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.639096970204264e-05
    2. 'dp' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '```' → logprob: -16.625097274780273
    5. 'pd' → logprob: -16.750097274780273
    6. '_dp' → logprob: -17.000097274780273
    7. '	dp' → logprob: -17.875097274780273
    8. '       ' → logprob: -18.125097274780273
    9. '           ' → logprob: -18.125097274780273
    10. '(dp' → logprob: -18.375097274780273

Token 2995: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.00020592445798683912
    2. '[(' → logprob: -8.500205993652344
    3. '(key' → logprob: -13.625205993652344
    4. 'key' → logprob: -13.750205993652344
    5. '                   ' → logprob: -16.250205993652344
    6. '[' → logprob: -17.125205993652344
    7. '   ' → logprob: -17.875205993652344
    8. '```' → logprob: -18.000205993652344
    9. ',key' → logprob: -18.125205993652344
    10. '[token' → logprob: -18.250205993652344

Token 2996: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0911213606595993
    2. ']' → logprob: -2.8411214351654053
    3. ' =' → logprob: -4.466121196746826
    4. '[key' → logprob: -4.716121196746826
    5. ']=' → logprob: -4.966121196746826
    6. '                   ' → logprob: -7.466121196746826
    7. ')' → logprob: -7.966121196746826
    8. '                       ' → logprob: -9.216121673583984
    9. '=
' → logprob: -9.216121673583984
    10. ')=' → logprob: -9.591121673583984

Token 2997: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004100723657757044
    2. ' =' → logprob: -5.504100799560547
    3. '[key' → logprob: -11.004100799560547
    4. '                   ' → logprob: -12.754100799560547
    5. '=
' → logprob: -13.629100799560547
    6. '=

' → logprob: -14.879100799560547
    7. '                       ' → logprob: -15.129100799560547
    8. '=new' → logprob: -15.379100799560547
    9. ']=' → logprob: -15.754100799560547
    10. '   ' → logprob: -15.754100799560547

Token 2998: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0031777136027812958
    2. ' new' → logprob: -5.753177642822266
    3. 'pay' → logprob: -17.628177642822266
    4. '                   ' → logprob: -18.128177642822266
    5. '   ' → logprob: -18.628177642822266
    6. '	new' → logprob: -18.878177642822266
    7. 'New' → logprob: -19.628177642822266
    8. '               ' → logprob: -20.003177642822266
    9. '```' → logprob: -20.003177642822266
    10. '[new' → logprob: -20.753177642822266

Token 2999: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -1.1756367712223437e-05
    2. 'exp' → logprob: -12.000011444091797
    3. 'expense' → logprob: -12.250011444091797
    4. 'new' → logprob: -14.375011444091797
    5. 'Expense' → logprob: -16.750011444091797
    6. '	exp' → logprob: -17.250011444091797
    7. 'pay' → logprob: -18.625011444091797
    8. ' expense' → logprob: -18.750011444091797
    9. '_ex' → logprob: -18.750011444091797
    10. '```' → logprob: -19.000011444091797

Token 3000: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -7.636475493200123e-05
    2. 'n' → logprob: -10.500076293945312
    3. 'anse' → logprob: -10.875076293945312
    4. 'p' → logprob: -11.375076293945312
    5. '_exp' → logprob: -12.125076293945312
    6. 'exp' → logprob: -13.000076293945312
    7. 'new' → logprob: -13.125076293945312
    8. 'expense' → logprob: -13.375076293945312
    9. 'ence' → logprob: -13.625076293945312
    10. 'onse' → logprob: -14.125076293945312

Token 3001: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.518582762917504e-05
    2. '
' → logprob: -9.62508487701416
    3. '   ' → logprob: -11.50008487701416
    4. '           ' → logprob: -12.87508487701416
    5. '               ' → logprob: -13.25008487701416
    6. '                   ' → logprob: -13.25008487701416
    7. 'continue' → logprob: -13.75008487701416
    8. '```' → logprob: -14.87508487701416
    9. ')' → logprob: -15.00008487701416
    10. 'return' → logprob: -15.00008487701416

Token 3002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.741137283621356e-05
    2. 'dp' → logprob: -10.250057220458984
    3. '   ' → logprob: -11.000057220458984
    4. '           ' → logprob: -12.375057220458984
    5. '```' → logprob: -14.625057220458984
    6. '
' → logprob: -15.250057220458984
    7. 'return' → logprob: -15.625057220458984
    8. '               ' → logprob: -15.625057220458984
    9. 'import' → logprob: -16.625057220458984
    10. '      ' → logprob: -17.250057220458984

Token 3003: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12764257192611694
    2. 'dp' → logprob: -2.1276426315307617
    3. '   ' → logprob: -7.377642631530762
    4. ' dp' → logprob: -9.377642631530762
    5. '           ' → logprob: -13.002642631530762
    6. '	dp' → logprob: -13.627642631530762
    7. '(dp' → logprob: -14.627642631530762
    8. '      ' → logprob: -16.127641677856445
    9. '     ' → logprob: -16.127641677856445
    10. '```' → logprob: -16.502641677856445

Token 3004: ' Nou' (ID: 35279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16033826768398285
    2. '       ' → logprob: -1.910338282585144
    3. '   ' → logprob: -9.410338401794434
    4. ' dp' → logprob: -10.410338401794434
    5. '           ' → logprob: -13.160338401794434
    6. '	dp' → logprob: -15.910338401794434
    7. '(dp' → logprob: -17.535337448120117
    8. '      ' → logprob: -17.660337448120117
    9. '     ' → logprob: -17.785337448120117
    10. '    ' → logprob: -18.910337448120117

Token 3005: 'vel' (ID: 1002)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008594118990004063
    2. '   ' → logprob: -7.375859260559082
    3. '       ' → logprob: -8.500859260559082
    4. 'p' → logprob: -11.125859260559082
    5. 'w' → logprob: -12.500859260559082
    6. '     ' → logprob: -13.250859260559082
    7. 'xp' → logprob: -13.250859260559082
    8. 'ld' → logprob: -13.625859260559082
    9. '_dp' → logprob: -13.750859260559082
    10. '	dp' → logprob: -13.750859260559082

Token 3006: ' état' (ID: 59181)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005657267291098833
    2. '_dp' → logprob: -6.255657196044922
    3. '   ' → logprob: -6.630657196044922
    4. '=' → logprob: -7.005657196044922
    5. ' dp' → logprob: -7.005657196044922
    6. ' =' → logprob: -8.130657196044922
    7. '       ' → logprob: -9.130657196044922
    8. '(dp' → logprob: -9.130657196044922
    9. 'p' → logprob: -11.130657196044922
    10. '_' → logprob: -11.130657196044922

Token 3007: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023540690541267395
    2. 'dp' → logprob: -4.023540496826172
    3. ' =' → logprob: -5.648540496826172
    4. '       ' → logprob: -6.398540496826172
    5. '   ' → logprob: -8.773540496826172
    6. ' dp' → logprob: -10.648540496826172
    7. ',' → logprob: -12.273540496826172
    8. '(dp' → logprob: -12.398540496826172
    9. '           ' → logprob: -13.898540496826172
    10. '	dp' → logprob: -14.773540496826172

Token 3008: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001762882457114756
    2. '       ' → logprob: -6.751762866973877
    3. ' dp' → logprob: -8.251763343811035
    4. '=' → logprob: -8.251763343811035
    5. '   ' → logprob: -9.876763343811035
    6. ' =' → logprob: -11.001763343811035
    7. '(dp' → logprob: -13.751763343811035
    8. '	dp' → logprob: -13.751763343811035
    9. '_dp' → logprob: -14.751763343811035
    10. '           ' → logprob: -15.876763343811035

Token 3009: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.027225754223764e-05
    2. '       ' → logprob: -10.000060081481934
    3. ' dp' → logprob: -11.250060081481934
    4. '   ' → logprob: -13.250060081481934
    5. '	dp' → logprob: -18.87506103515625
    6. 'dc' → logprob: -20.50006103515625
    7. '(dp' → logprob: -21.12506103515625
    8. '           ' → logprob: -21.62506103515625
    9. '_dp' → logprob: -22.25006103515625
    10. 'db' → logprob: -23.00006103515625

Token 3010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048642918467522
    2. ' =' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.261048316955566
    4. '=
' → logprob: -16.511049270629883
    5. '.=' → logprob: -17.261049270629883
    6. '    ' → logprob: -17.386049270629883
    7. '＝' → logprob: -17.636049270629883
    8. '=n' → logprob: -18.136049270629883
    9. ',' → logprob: -18.511049270629883
    10. '       ' → logprob: -18.636049270629883

Token 3011: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.2729995988775045e-06
    2. ' nd' → logprob: -12.000006675720215
    3. '(nd' → logprob: -17.3750057220459
    4. 'ndl' → logprob: -19.3750057220459
    5. 'nde' → logprob: -19.6250057220459
    6. '   ' → logprob: -20.2500057220459
    7. '_nd' → logprob: -20.3750057220459
    8. 'nda' → logprob: -20.3750057220459
    9. 'rd' → logprob: -20.8750057220459
    10. 'ND' → logprob: -21.0000057220459

Token 3012: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0445127372804563e-05
    2. 'dp' → logprob: -11.50001049041748
    3. '{' → logprob: -16.000009536743164
    4. '{
' → logprob: -17.375009536743164
    5. '   ' → logprob: -17.500009536743164
    6. '
' → logprob: -17.500009536743164
    7. '(dp' → logprob: -17.750009536743164
    8. '_dp' → logprob: -17.875009536743164
    9. 'pd' → logprob: -17.875009536743164
    10. '[' → logprob: -18.000009536743164

Token 3013: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.714802086353302
    2. 'return' → logprob: -0.839802086353302
    3. '
' → logprob: -2.5898020267486572
    4. '#' → logprob: -5.839802265167236
    5. ' return' → logprob: -7.589802265167236
    6. '    
' → logprob: -8.464801788330078
    7. 'continue' → logprob: -9.464801788330078
    8. '```' → logprob: -10.089801788330078
    9. '
' → logprob: -10.464801788330078
    10. '  
' → logprob: -10.839801788330078

Token 3014: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34862834215164185
    2. '   ' → logprob: -1.348628282546997
    3. '#' → logprob: -3.473628282546997
    4. '
' → logprob: -5.848628520965576
    5. 'result' → logprob: -7.598628520965576
    6. '    
' → logprob: -8.973628044128418
    7. '```' → logprob: -9.098628044128418
    8. ' return' → logprob: -10.223628044128418
    9. 'ret' → logprob: -10.348628044128418
    10. 'continue' → logprob: -11.348628044128418

Token 3015: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24227145314216614
    2. '   ' → logprob: -1.7422714233398438
    3. '#' (adapté à ' #') → logprob: -4.117271423339844
    4. '
' → logprob: -4.367271423339844
    5. 'result' → logprob: -4.742271423339844
    6. 'keys' → logprob: -7.367271423339844
    7. '```' → logprob: -7.617271423339844
    8. '    
' → logprob: -7.742271423339844
    9. 'max' → logprob: -8.367271423339844
    10. 'min' → logprob: -9.492271423339844

Token 3016: ' Après' (ID: 47562)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.4438692331314087
    2. '#' → logprob: -1.1938692331314087
    3. 'max' → logprob: -3.818869113922119
    4. '   ' → logprob: -4.443869113922119
    5. 'result' → logprob: -4.568869113922119
    6. 'res' → logprob: -4.693869113922119
    7. 'min' → logprob: -6.318869113922119
    8. 'return' → logprob: -8.568869590759277
    9. 'rés' → logprob: -9.693869590759277
    10. 'keys' → logprob: -10.193869590759277

Token 3017: ' tous' (ID: 10688)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.565387487411499
    2. 'la' → logprob: -1.065387487411499
    3. ' la' → logprob: -3.815387487411499
    4. 'le' → logprob: -4.065387725830078
    5. '   ' → logprob: -4.815387725830078
    6. 'for' → logprob: -4.940387725830078
    7. 'range' → logprob: -5.190387725830078
    8. ' #' → logprob: -5.690387725830078
    9. 'final' → logprob: -5.690387725830078
    10. 'par' → logprob: -5.940387725830078

Token 3018: ' magasins' (ID: 130727)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9385830163955688
    2. ' magasins' → logprob: -1.0635830163955688
    3. 'mag' → logprob: -1.9385830163955688
    4. '#' → logprob: -3.0635828971862793
    5. 'le' → logprob: -4.188582897186279
    6. 'la' → logprob: -4.438582897186279
    7. 'ét' → logprob: -4.813582897186279
    8. '   ' → logprob: -4.938582897186279
    9. 'for' → logprob: -5.438582897186279
    10. 'l' → logprob: -5.438582897186279

Token 3019: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08152636140584946
    2. '#' → logprob: -2.706526279449463
    3. 'max' → logprob: -5.331526279449463
    4. 'best' → logprob: -5.706526279449463
    5. '
' → logprob: -5.831526279449463
    6. 'result' → logprob: -8.331526756286621
    7. '    
' → logprob: -9.706526756286621
    8. 'res' → logprob: -10.081526756286621
    9. ' #' → logprob: -10.706526756286621
    10. 'keys' → logprob: -11.081526756286621

Token 3020: '   ' (ID: 271)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1678439825773239
    2. 'max' → logprob: -2.66784405708313
    3. '   ' → logprob: -3.16784405708313
    4. 'result' → logprob: -3.66784405708313
    5. '#' → logprob: -4.667843818664551
    6. 'res' → logprob: -4.917843818664551
    7. 'return' → logprob: -8.29284381866455
    8. 'min' → logprob: -8.29284381866455
    9. 'ret' → logprob: -9.79284381866455
    10. '```' → logprob: -9.91784381866455

Token 3021: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.06573887169361115
    2. 'result' → logprob: -3.5657389163970947
    3. 'max' → logprob: -4.190738677978516
    4. '   ' → logprob: -4.315738677978516
    5. 'res' → logprob: -5.315738677978516
    6. 'min' → logprob: -7.190738677978516
    7. 'return' → logprob: -7.440738677978516
    8. '#' (adapté à ' #') → logprob: -8.690738677978516
    9. '```' → logprob: -8.690738677978516
    10. 'keys' → logprob: -9.190738677978516

Token 3022: ' Trou' (ID: 58947)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03728745877742767
    2. 'max' → logprob: -3.537287473678589
    3. '   ' → logprob: -5.66228723526001
    4. 'result' → logprob: -6.03728723526001
    5. 'res' → logprob: -6.78728723526001
    6. 'min' → logprob: -8.162287712097168
    7. 'return' → logprob: -9.287287712097168
    8. '#' → logprob: -10.037287712097168
    9. ' best' → logprob: -10.162287712097168
    10. 'keys' → logprob: -10.537287712097168

Token 3023: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.06081397458910942
    2. 've' → logprob: -3.1858139038085938
    3. 'v' → logprob: -4.310813903808594
    4. 'vé' → logprob: -5.810813903808594
    5. 'vez' → logprob: -7.810813903808594
    6. '   ' → logprob: -8.185813903808594
    7. '#' → logprob: -8.810813903808594
    8. 'vant' → logprob: -9.060813903808594
    9. 'ner' → logprob: -9.560813903808594
    10. '       ' → logprob: -10.060813903808594

Token 3024: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04144098982214928
    2. 'best' → logprob: -3.291440963745117
    3. '(max' → logprob: -6.916440963745117
    4. ' max' → logprob: -7.041440963745117
    5. '#' → logprob: -7.416440963745117
    6. 'result' → logprob: -7.916440963745117
    7. 'res' → logprob: -8.416440963745117
    8. '   ' → logprob: -9.291440963745117
    9. 'keys' → logprob: -9.916440963745117
    10. 'key' → logprob: -10.541440963745117

Token 3025: ' nombre' (ID: 9733)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.24329419434070587
    2. '500' → logprob: -2.6182942390441895
    3. '(num' → logprob: -3.1182942390441895
    4. '_num' → logprob: -3.4932942390441895
    5. '((' → logprob: -3.6182942390441895
    6. '_' → logprob: -3.8682942390441895
    7. 'key' → logprob: -5.6182942390441895
    8. 'dp' → logprob: -5.7432942390441895
    9. '(
' → logprob: -5.9932942390441895
    10. '   ' → logprob: -6.3682942390441895

Token 3026: ' pièces' (ID: 49165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11141391098499298
    2. '500' → logprob: -2.3614139556884766
    3. '_de' → logprob: -5.736413955688477
    4. 'de' → logprob: -5.861413955688477
    5. '_des' → logprob: -6.486413955688477
    6. '_key' → logprob: -7.236413955688477
    7. '_num' → logprob: -7.611413955688477
    8. '#' → logprob: -7.986413955688477
    9. '_keys' → logprob: -8.111413955688477
    10. 'des' → logprob: -8.361413955688477

Token 3027: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07454030960798264
    2. '_' → logprob: -3.074540376663208
    3. 'de' → logprob: -3.949540376663208
    4. '   ' → logprob: -5.824540138244629
    5. '_de' → logprob: -7.324540138244629
    6. 'max' → logprob: -7.449540138244629
    7. '(' → logprob: -7.824540138244629
    8. ' ' → logprob: -8.324540138244629
    9. 'dp' → logprob: -8.574540138244629
    10. ',' → logprob: -8.824540138244629

Token 3028: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.007834100164473057
    2. '_' → logprob: -5.007833957672119
    3. 'de' → logprob: -8.382834434509277
    4. ',' → logprob: -9.007834434509277
    5. '
' → logprob: -9.132834434509277
    6. '#' → logprob: -9.132834434509277
    7. '```' → logprob: -9.632834434509277
    8. 'final' → logprob: -9.882834434509277
    9. '   ' → logprob: -10.007834434509277
    10. ' =' → logprob: -10.132834434509277

Token 3029: ',' (ID: 11)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.8635563850402832
    2. ',' → logprob: -1.6135563850402832
    3. '   ' → logprob: -1.7385563850402832
    4. ' =' → logprob: -2.988556385040283
    5. '=' → logprob: -3.488556385040283
    6. '_' → logprob: -3.488556385040283
    7. 'num' → logprob: -4.113556385040283
    8. '
' → logprob: -4.863556385040283
    9. 'max' → logprob: -4.863556385040283
    10. 'possible' → logprob: -4.863556385040283

Token 3030: ' puis' (ID: 18766)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.652660071849823
    2. 'max' → logprob: -1.0276601314544678
    3. ' min' → logprob: -3.1526601314544678
    4. ' max' → logprob: -3.6526601314544678
    5. 'keys' → logprob: -4.402659893035889
    6. '   ' → logprob: -4.777659893035889
    7. 'key' → logprob: -4.902659893035889
    8. ' key' → logprob: -5.152659893035889
    9. ' keys' → logprob: -5.652659893035889
    10. '#' → logprob: -5.652659893035889

Token 3031: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011547473259270191
    2. 'minimal' → logprob: -7.376154899597168
    3. 'minimum' → logprob: -8.126154899597168
    4. ' min' → logprob: -9.626154899597168
    5. '#' → logprob: -9.751154899597168
    6. 'pour' → logprob: -10.126154899597168
    7. '
' → logprob: -10.751154899597168
    8. '   ' → logprob: -11.876154899597168
    9. 'mini' → logprob: -12.001154899597168
    10. ' minim' → logprob: -12.626154899597168

Token 3032: ' dép' (ID: 34015)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004260631278157234
    2. ' min' → logprob: -5.504260540008545
    3. 'minimum' → logprob: -10.504261016845703
    4. 'key' → logprob: -10.629261016845703
    5. 'minimal' → logprob: -11.129261016845703
    6. '
' → logprob: -11.254261016845703
    7. ' ' → logprob: -11.504261016845703
    8. '   ' → logprob: -11.504261016845703
    9. 'result' → logprob: -11.754261016845703
    10. '```' → logprob: -12.004261016845703

Token 3033: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0003062646137550473
    2. 'ence' → logprob: -8.375306129455566
    3. '
' → logprob: -10.625306129455566
    4. 'ése' → logprob: -12.125306129455566
    5. 'ese' → logprob: -12.250306129455566
    6. 'n' → logprob: -12.250306129455566
    7. '#' → logprob: -12.375306129455566
    8. 'en' → logprob: -12.500306129455566
    9. 'èse' → logprob: -12.625306129455566
    10. 'én' → logprob: -12.750306129455566

Token 3034: ' minimale' (ID: 143217)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0014325011288747191
    2. ' minimale' → logprob: -7.376432418823242
    3. 'minimum' → logprob: -7.376432418823242
    4. 'minimal' → logprob: -9.376432418823242
    5. '_min' → logprob: -10.501432418823242
    6. '(min' → logprob: -10.751432418823242
    7. 'mini' → logprob: -11.001432418823242
    8. 'import' → logprob: -12.001432418823242
    9. '```' → logprob: -12.251432418823242
    10. '   ' → logprob: -12.251432418823242

Token 3035: ' associ' (ID: 5516)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32319894433021545
    2. 'best' → logprob: -1.698198914527893
    3. '   ' → logprob: -2.8231990337371826
    4. 'result' → logprob: -3.8231990337371826
    5. 'min' → logprob: -4.8231987953186035
    6. 'res' → logprob: -6.4481987953186035
    7. 'keys' → logprob: -6.9481987953186035
    8. '```' → logprob: -7.5731987953186035
    9. 'results' → logprob: -8.073199272155762
    10. 'ans' → logprob: -8.948199272155762

Token 3036: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014727369882166386
    2. '#' → logprob: -6.014727592468262
    3. '(' → logprob: -6.389727592468262
    4. 'for' → logprob: -6.514727592468262
    5. '(
' → logprob: -6.764727592468262
    6. ')' → logprob: -7.014727592468262
    7. '=' → logprob: -7.264727592468262
    8. '(key' → logprob: -7.389727592468262
    9. ')
' → logprob: -7.514727592468262
    10. '(max' → logprob: -7.639727592468262

Token 3037: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7826288938522339
    2. 'best' → logprob: -1.5326288938522339
    3. 'max' → logprob: -1.5326288938522339
    4. 'result' → logprob: -2.4076290130615234
    5. 'res' → logprob: -4.907629013061523
    6. 'min' → logprob: -5.782629013061523
    7. '```' → logprob: -5.782629013061523
    8. 'return' → logprob: -6.032629013061523
    9. '
' → logprob: -6.407629013061523
    10. 'keys' → logprob: -6.657629013061523

Token 3038: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7163342833518982
    2. 'best' → logprob: -0.7163342833518982
    3. 'result' → logprob: -4.591334342956543
    4. '   ' → logprob: -5.341334342956543
    5. 'res' → logprob: -5.591334342956543
    6. ' max' → logprob: -6.216334342956543
    7. ' best' → logprob: -6.591334342956543
    8. 'min' → logprob: -7.591334342956543
    9. 'results' → logprob: -8.841334342956543
    10. 'return' → logprob: -9.591334342956543

Token 3039: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.49330151081085205
    2. 'best' → logprob: -0.993301510810852
    3. 'result' → logprob: -4.2433013916015625
    4. 'res' → logprob: -5.4933013916015625
    5. '   ' → logprob: -8.368301391601562
    6. 'min' → logprob: -8.993301391601562
    7. 'results' → logprob: -10.118301391601562
    8. 'return' → logprob: -10.493301391601562
    9. ' max' → logprob: -10.618301391601562
    10. ' best' → logprob: -10.618301391601562

Token 3040: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7657623887062073
    2. '_num' → logprob: -0.8907623887062073
    3. '_keys' → logprob: -3.0157623291015625
    4. '_key' → logprob: -3.6407623291015625
    5. '500' → logprob: -3.6407623291015625
    6. '_p' → logprob: -4.7657623291015625
    7. '_count' → logprob: -5.2657623291015625
    8. 'num' → logprob: -5.5157623291015625
    9. '_tokens' → logprob: -6.3907623291015625
    10. '_co' → logprob: -7.6407623291015625

Token 3041: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.032675739377737045
    2. 'num' → logprob: -3.5326757431030273
    3. '_' → logprob: -5.907675743103027
    4. '(num' → logprob: -9.532675743103027
    5. 'dp' → logprob: -9.907675743103027
    6. 'pieces' → logprob: -10.782675743103027
    7. '(' → logprob: -11.282675743103027
    8. 'max' → logprob: -11.657675743103027
    9. 'key' → logprob: -11.907675743103027
    10. 'coins' → logprob: -12.032675743103027

Token 3042: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5548163652420044
    2. ' =' → logprob: -1.5548163652420044
    3. '_count' → logprob: -1.8048163652420044
    4. ',' → logprob: -3.679816246032715
    5. '_num' → logprob: -4.554816246032715
    6. '_p' → logprob: -4.929816246032715
    7. 'count' → logprob: -6.929816246032715
    8. '_' → logprob: -7.179816246032715
    9. '=max' → logprob: -7.304816246032715
    10. '_piece' → logprob: -7.304816246032715

Token 3043: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00026634239475242794
    2. ' max' → logprob: -8.750266075134277
    3. '0' → logprob: -9.250266075134277
    4. '-' → logprob: -11.500266075134277
    5. '-max' → logprob: -13.500266075134277
    6. '=max' → logprob: -16.625267028808594
    7. '(max' → logprob: -17.000267028808594
    8. '	max' → logprob: -17.875267028808594
    9. ' -' → logprob: -18.250267028808594
    10. '_max' → logprob: -18.250267028808594

Token 3044: '(k' (ID: 12125)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.8477705717086792
    2. '(key' → logprob: -1.0977705717086792
    3. '(k' → logprob: -1.5977705717086792
    4. '([' → logprob: -3.4727706909179688
    5. '((' → logprob: -6.722770690917969
    6. '(d' → logprob: -7.222770690917969
    7. 'key' → logprob: -7.222770690917969
    8. '(state' → logprob: -7.472770690917969
    9. 'dp' → logprob: -7.597770690917969
    10. '(x' → logprob: -7.972770690917969

Token 3045: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002177146729081869
    2. 'for' → logprob: -6.3771772384643555
    3. ' for' → logprob: -8.752177238464355
    4. ')[' → logprob: -9.752177238464355
    5. 'key' → logprob: -10.002177238464355
    6. '(' → logprob: -10.252177238464355
    7. '   ' → logprob: -10.377177238464355
    8. '
' → logprob: -10.502177238464355
    9. '[k' → logprob: -11.127177238464355
    10. '[key' → logprob: -11.127177238464355

Token 3046: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005774850025773048
    2. '[' → logprob: -5.880774974822998
    3. ',' → logprob: -7.380774974822998
    4. ' ' → logprob: -7.755774974822998
    5. ')' → logprob: -8.00577449798584
    6. '   ' → logprob: -8.25577449798584
    7. '
' → logprob: -8.38077449798584
    8. '][' → logprob: -9.00577449798584
    9. 'len' → logprob: -9.56827449798584
    10. '1' → logprob: -9.63077449798584

Token 3047: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7922230958938599
    2. ')' → logprob: -0.9172230958938599
    3. 'for' → logprob: -2.0422229766845703
    4. '])' → logprob: -4.66722297668457
    5. '[' → logprob: -5.66722297668457
    6. ',' → logprob: -6.91722297668457
    7. ']' → logprob: -7.29222297668457
    8. ')+' → logprob: -7.66722297668457
    9. ')
' → logprob: -7.79222297668457
    10. '),' → logprob: -8.04222297668457

Token 3048: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18848642706871033
    2. 'for' → logprob: -1.8134864568710327
    3. ')' → logprob: -5.313486576080322
    4. ',' → logprob: -5.938486576080322
    5. '
' → logprob: -7.938486576080322
    6. ')
' → logprob: -8.813486099243164
    7. '   ' → logprob: -8.938486099243164
    8. ')+' → logprob: -9.063486099243164
    9. '```' → logprob: -9.313486099243164
    10. '[' → logprob: -9.938486099243164

Token 3049: ' k' (ID: 372)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00032163821742869914
    2. 'k' → logprob: -8.750321388244629
    3. ' dp' → logprob: -8.750321388244629
    4. '(dp' → logprob: -12.625321388244629
    5. 'key' → logprob: -15.375321388244629
    6. '	dp' → logprob: -15.500321388244629
    7. ' k' → logprob: -15.875321388244629
    8. 'kp' → logprob: -15.875321388244629
    9. 'd' → logprob: -16.000322341918945
    10. '_dp' → logprob: -16.125322341918945

Token 3050: ' in' (ID: 306)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.032675277441740036
    2. ' in' → logprob: -4.032675266265869
    3. 'dp' → logprob: -4.907675266265869
    4. 'in' → logprob: -5.032675266265869
    5. ' k' → logprob: -7.907675266265869
    6. ' dp' → logprob: -9.657675743103027
    7. ',k' → logprob: -9.782675743103027
    8. '_k' → logprob: -11.907675743103027
    9. ')' → logprob: -12.907675743103027
    10. '=k' → logprob: -13.157675743103027

Token 3051: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4855663721391466e-05
    2. ' dp' → logprob: -11.125015258789062
    3. '(dp' → logprob: -18.625015258789062
    4. '
' → logprob: -19.125015258789062
    5. 'd' → logprob: -19.750015258789062
    6. 'df' → logprob: -19.875015258789062
    7. '   ' → logprob: -20.250015258789062
    8. ')' → logprob: -20.375015258789062
    9. '	dp' → logprob: -20.375015258789062
    10. 'db' → logprob: -21.000015258789062

Token 3052: '.keys' (ID: 18392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8455480933189392
    2. ')
' → logprob: -1.595548152923584
    3. '.keys' → logprob: -1.845548152923584
    4. 'keys' → logprob: -2.720548152923584
    5. ',' → logprob: -2.970548152923584
    6. 'for' → logprob: -3.345548152923584
    7. '),' → logprob: -3.970548152923584
    8. ' for' → logprob: -4.595548152923584
    9. 'if' → logprob: -5.220548152923584
    10. '_keys' → logprob: -5.345548152923584

Token 3053: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.705557644367218
    2. ')
' → logprob: -0.705557644367218
    3. ')+' → logprob: -5.330557823181152
    4. '   ' → logprob: -5.955557823181152
    5. '())
' → logprob: -6.080557823181152
    6. '())' → logprob: -6.955557823181152
    7. 'if' → logprob: -7.330557823181152
    8. ' if' → logprob: -7.455557823181152
    9. '()' → logprob: -9.330557823181152
    10. '),' → logprob: -9.580557823181152

Token 3054: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2264472246170044
    2. 'best' → logprob: -1.7264472246170044
    3. 'result' → logprob: -3.976447105407715
    4. 'res' → logprob: -5.601447105407715
    5. '   ' → logprob: -7.226447105407715
    6. '
' → logprob: -7.351447105407715
    7. 'answer' → logprob: -7.726447105407715
    8. 'ans' → logprob: -9.101447105407715
    9. 'minimal' → logprob: -9.726447105407715
    10. ' min' → logprob: -9.851447105407715

Token 3055: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.1746641844511032
    2. 'best' → logprob: -2.174664258956909
    3. 'res' → logprob: -3.424664258956909
    4. 'result' → logprob: -4.54966402053833
    5. 'c' → logprob: -6.29966402053833
    6. 'ans' → logprob: -6.92466402053833
    7. 'answer' → logprob: -8.299664497375488
    8. 'results' → logprob: -8.674664497375488
    9. 'filtered' → logprob: -9.174664497375488
    10. 'cost' → logprob: -10.299664497375488

Token 3056: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.04813441261649132
    2. '_cost' → logprob: -3.4231343269348145
    3. 'expense' → logprob: -4.7981343269348145
    4. 'exp' → logprob: -5.2981343269348145
    5. 'cost' → logprob: -7.6731343269348145
    6. '_ex' → logprob: -8.048134803771973
    7. '_' → logprob: -8.673134803771973
    8. '_dep' → logprob: -10.048134803771973
    9. '_val' → logprob: -10.423134803771973
    10. '_price' → logprob: -10.798134803771973

Token 3057: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.009891492314636707
    2. '=' → logprob: -5.634891510009766
    3. ' =' → logprob: -5.634891510009766
    4. 'min' → logprob: -6.759891510009766
    5. '=min' → logprob: -8.259891510009766
    6. 'exp' → logprob: -8.509891510009766
    7. '_min' → logprob: -9.009891510009766
    8. 'end' → logprob: -9.009891510009766
    9. 'ens' → logprob: -9.134891510009766
    10. 'enses' → logprob: -9.259891510009766

Token 3058: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04864538833498955
    2. ' =' → logprob: -3.048645496368408
    3. '=min' → logprob: -10.17364501953125
    4. '=float' → logprob: -10.92364501953125
    5. '=None' → logprob: -13.67364501953125
    6. '=max' → logprob: -15.29864501953125
    7. '=int' → logprob: -15.79864501953125
    8. '=[' → logprob: -16.67364501953125
    9. '=
' → logprob: -16.92364501953125
    10. '=sys' → logprob: -17.29864501953125

Token 3059: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006947191432118416
    2. 'float' → logprob: -5.006947040557861
    3. ' min' → logprob: -8.38194751739502
    4. ' float' → logprob: -13.63194751739502
    5. 'dp' → logprob: -13.75694751739502
    6. '   ' → logprob: -15.00694751739502
    7. '	min' → logprob: -16.131946563720703
    8. 'inf' → logprob: -16.881946563720703
    9. '[min' → logprob: -17.131946563720703
    10. '(min' → logprob: -17.256946563720703

Token 3060: '(v' (ID: 6932)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.005160462576895952
    2. '(v' → logprob: -5.755160331726074
    3. '([' → logprob: -6.630160331726074
    4. '(
' → logprob: -7.880160331726074
    5. '(' → logprob: -8.755160331726074
    6. 'dp' → logprob: -9.630160331726074
    7. '(d' → logprob: -10.755160331726074
    8. '(value' → logprob: -11.130160331726074
    9. '(val' → logprob: -11.630160331726074
    10. '((' → logprob: -12.505160331726074

Token 3061: ' for' (ID: 395)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.602998673915863
    2. 'for' → logprob: -0.852998673915863
    3. '(k' → logprob: -4.352998733520508
    4. '(' → logprob: -5.102998733520508
    5. ' for' → logprob: -5.102998733520508
    6. '([' → logprob: -7.727998733520508
    7. 'v' → logprob: -7.977998733520508
    8. '[v' → logprob: -8.227998733520508
    9. '(val' → logprob: -8.727998733520508
    10. '(
' → logprob: -8.852998733520508

Token 3062: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18354207277297974
    2. 'k' → logprob: -1.808542013168335
    3. '(k' → logprob: -6.058542251586914
    4. '(v' → logprob: -7.433542251586914
    5. 'dp' → logprob: -8.058542251586914
    6. ' v' → logprob: -8.558542251586914
    7. ' k' → logprob: -9.433542251586914
    8. ' (' → logprob: -9.683542251586914
    9. '(dp' → logprob: -9.808542251586914
    10. '(' → logprob: -10.058542251586914

Token 3063: 'c' (ID: 66)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4945346713066101
    2. '(k' → logprob: -1.3695347309112549
    3. '(num' → logprob: -2.994534730911255
    4. 'num' → logprob: -3.244534730911255
    5. '(' → logprob: -3.869534730911255
    6. '(_,' → logprob: -3.994534730911255
    7. '_,' → logprob: -5.619534492492676
    8. '(n' → logprob: -6.869534492492676
    9. '(max' → logprob: -6.994534492492676
    10. 'max' → logprob: -7.869534492492676

Token 3064: '500' (ID: 3234)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.099877953529358
    2. '500' → logprob: -1.224877953529358
    3. 'ount' → logprob: -2.0998778343200684
    4. 'nt' → logprob: -2.8498778343200684
    5. 'k' → logprob: -3.3498778343200684
    6. 'o' → logprob: -3.3498778343200684
    7. ',' → logprob: -3.5998778343200684
    8. 'ont' → logprob: -4.474877834320068
    9. '0' → logprob: -4.599877834320068
    10. 'max' → logprob: -4.724877834320068

Token 3065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17934763431549072
    2. ',k' → logprob: -2.554347515106201
    3. 'ount' → logprob: -3.304347515106201
    4. '500' → logprob: -4.429347515106201
    5. ',key' → logprob: -4.679347515106201
    6. ',c' → logprob: -4.929347515106201
    7. ',count' → logprob: -5.054347515106201
    8. 'k' → logprob: -5.304347515106201
    9. 'nt' → logprob: -6.429347515106201
    10. ',num' → logprob: -6.804347515106201

Token 3066: ' _' (ID: 1175)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20441995561122894
    2. 'exp' → logprob: -2.5794198513031006
    3. 'v' → logprob: -3.0794198513031006
    4. '_,' → logprob: -3.7044198513031006
    5. '_' → logprob: -4.70442008972168
    6. 'expense' → logprob: -4.70442008972168
    7. 'cost' → logprob: -4.82942008972168
    8. '_exp' → logprob: -5.70442008972168
    9. ' c' → logprob: -5.82942008972168
    10. 'e' → logprob: -7.20442008972168

Token 3067: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005349974613636732
    2. ',' → logprob: -5.505350112915039
    3. ')' → logprob: -6.880350112915039
    4. ',c' → logprob: -8.755350112915039
    5. 'c' → logprob: -10.380350112915039
    6. '),(' → logprob: -10.505350112915039
    7. ',),' → logprob: -12.255350112915039
    8. 'in' → logprob: -12.505350112915039
    9. ',k' → logprob: -12.755350112915039
    10. ' ),' → logprob: -12.880350112915039

Token 3068: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.494741632603109e-05
    2. ' v' → logprob: -9.37508487701416
    3. '	v' → logprob: -18.375085830688477
    4. ' ' → logprob: -19.500085830688477
    5. 'value' → logprob: -19.875085830688477
    6. '(v' → logprob: -20.500085830688477
    7. '   ' → logprob: -20.750085830688477
    8. '$v' → logprob: -20.875085830688477
    9. '_v' → logprob: -21.000085830688477
    10. ')v' → logprob: -21.000085830688477

Token 3069: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04307717829942703
    2. ' in' → logprob: -3.168077230453491
    3. '   ' → logprob: -10.16807746887207
    4. ',' → logprob: -11.79307746887207
    5. '       ' → logprob: -12.04307746887207
    6. '           ' → logprob: -12.04307746887207
    7. '    ' → logprob: -12.66807746887207
    8. ' ' → logprob: -12.79307746887207
    9. '        ' → logprob: -13.04307746887207
    10. '
' → logprob: -13.16807746887207

Token 3070: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.2729995988775045e-06
    2. ' dp' → logprob: -12.000006675720215
    3. '(dp' → logprob: -18.1250057220459
    4. '	dp' → logprob: -19.7500057220459
    5. 'db' → logprob: -20.5000057220459
    6. '_dp' → logprob: -20.8750057220459
    7. '   ' → logprob: -21.3750057220459
    8. 'df' → logprob: -21.5000057220459
    9. 'dt' → logprob: -21.8750057220459
    10. 'd' → logprob: -22.0000057220459

Token 3071: '.items' (ID: 19607)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.5762229561805725
    2. '.items' → logprob: -0.8262229561805725
    3. 'in' → logprob: -8.951223373413086
    4. 'if' → logprob: -9.201223373413086
    5. ' in' → logprob: -10.826223373413086
    6. '   ' → logprob: -11.201223373413086
    7. 'tems' → logprob: -11.951223373413086
    8. '       ' → logprob: -12.326223373413086
    9. '.iteritems' → logprob: -12.951223373413086
    10. '           ' → logprob: -13.451223373413086

Token 3072: '()' (ID: 416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02757130190730095
    2. ' if' → logprob: -4.402571201324463
    3. '()' → logprob: -4.402571201324463
    4. '       ' → logprob: -6.402571201324463
    5. '   ' → logprob: -8.027571678161621
    6. '        ' → logprob: -8.527571678161621
    7. '           ' → logprob: -9.027571678161621
    8. '          ' → logprob: -9.152571678161621
    9. '    ' → logprob: -9.527571678161621
    10. '         ' → logprob: -10.277571678161621

Token 3073: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20366822183132172
    2. ' if' → logprob: -1.703668236732483
    3. '    ' → logprob: -7.578668117523193
    4. '       ' → logprob: -7.828668117523193
    5. '        ' → logprob: -8.078668594360352
    6. '   ' → logprob: -8.203668594360352
    7. '           ' → logprob: -8.453668594360352
    8. '            ' → logprob: -8.828668594360352
    9. '          ' → logprob: -9.203668594360352
    10. '         ' → logprob: -9.953668594360352

Token 3074: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.517272024415433e-05
    2. ' c' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.625075340270996
    4. '(c' → logprob: -17.87507438659668
    5. ')c' → logprob: -18.75007438659668
    6. '  ' → logprob: -19.12507438659668
    7. ' ' → logprob: -19.12507438659668
    8. '    ' → logprob: -19.37507438659668
    9. '	c' → logprob: -19.50007438659668
    10. '       ' → logprob: -20.62507438659668

Token 3075: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.8908587662735954e-05
    2. '==' → logprob: -11.375019073486328
    3. 'c' → logprob: -13.000019073486328
    4. '=' → logprob: -13.125019073486328
    5. '_' → logprob: -13.625019073486328
    6. '5' → logprob: -14.375019073486328
    7. '50' → logprob: -14.625019073486328
    8. ' ==' → logprob: -15.625019073486328
    9. '{' → logprob: -16.250019073486328
    10. '[' → logprob: -16.875019073486328

Token 3076: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004721683915704489
    2. ' ==' → logprob: -5.379721641540527
    3. ')==' → logprob: -10.129721641540527
    4. '>=' → logprob: -10.504721641540527
    5. ']==' → logprob: -10.754721641540527
    6. ')' → logprob: -11.879721641540527
    7. '===' → logprob: -13.254721641540527
    8. '==
' → logprob: -13.254721641540527
    9. '#' → logprob: -14.129721641540527
    10. '```' → logprob: -14.754721641540527

Token 3077: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8624639324116288e-06
    2. ' max' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '(max' → logprob: -22.000001907348633
    5. '[max' → logprob: -22.250001907348633
    6. ' ' → logprob: -22.625001907348633
    7. '=max' → logprob: -22.625001907348633
    8. '500' → logprob: -22.750001907348633
    9. '	max' → logprob: -23.375001907348633
    10. '  ' → logprob: -23.625001907348633

Token 3078: '_' (ID: 62)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07989191263914108
    2. '_' → logprob: -2.5798919200897217
    3. 'max' → logprob: -6.954891681671143
    4. '_max' → logprob: -10.4548921585083
    5. '5' → logprob: -11.7048921585083
    6. '50' → logprob: -12.5798921585083
    7. '   ' → logprob: -12.9548921585083
    8. '100' → logprob: -13.7048921585083
    9. '(max' → logprob: -14.5798921585083
    10. '0' → logprob: -14.7048921585083

Token 3079: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0019550370052456856
    2. 'max' → logprob: -6.251955032348633
    3. '_' → logprob: -10.751955032348633
    4. '5' → logprob: -13.251955032348633
    5. '50' → logprob: -14.001955032348633
    6. '_max' → logprob: -14.251955032348633
    7. '{' → logprob: -15.001955032348633
    8. '(max' → logprob: -15.376955032348633
    9. '0' → logprob: -15.626955032348633
    10. '   ' → logprob: -16.001955032348633

Token 3080: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07378433644771576
    2. '   ' → logprob: -2.823784351348877
    3. ')' → logprob: -4.448784351348877
    4. ')

' → logprob: -10.323783874511719
    5. ')
' → logprob: -11.448783874511719
    6. '       ' → logprob: -12.198783874511719
    7. ' )
' → logprob: -12.948783874511719
    8. '           ' → logprob: -14.823783874511719
    9. '                   ' → logprob: -14.948783874511719
    10. '  ' → logprob: -15.073783874511719

Token 3081: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3868883550167084
    2. 'return' → logprob: -1.1368883848190308
    3. '```' → logprob: -11.88688850402832
    4. ' return' → logprob: -12.38688850402832
    5. '
' → logprob: -12.38688850402832
    6. '    
' → logprob: -13.51188850402832
    7. '	return' → logprob: -14.76188850402832
    8. '#' → logprob: -16.13688850402832
    9. '{return' → logprob: -16.13688850402832
    10. '``' → logprob: -17.26188850402832

Token 3082: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2024819403886795
    2. '   ' → logprob: -1.702481985092163
    3. '
' → logprob: -6.952481746673584
    4. ' return' → logprob: -9.327482223510742
    5. '    
' → logprob: -11.577482223510742
    6. '	return' → logprob: -12.577482223510742
    7. '```' → logprob: -12.702482223510742
    8. '{return' → logprob: -12.952482223510742
    9. ':return' → logprob: -14.077482223510742
    10. 'def' → logprob: -14.452482223510742

Token 3083: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0032252485398203135
    2. '(max' → logprob: -5.753225326538086
    3. ' max' → logprob: -10.003225326538086
    4. 'min' → logprob: -13.378225326538086
    5. '[max' → logprob: -15.003225326538086
    6. '   ' → logprob: -15.628225326538086
    7. ' (' → logprob: -16.378225326538086
    8. '(min' → logprob: -16.503225326538086
    9. ' ' → logprob: -17.503225326538086
    10. 'dp' → logprob: -17.753225326538086

Token 3084: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '500' → logprob: -15.875
    3. '_max' → logprob: -18.0
    4. 'max' → logprob: -18.625
    5. '(max' → logprob: -18.625
    6. '   ' → logprob: -20.125
    7. '```' → logprob: -20.5
    8. '\' → logprob: -20.75
    9. '(' → logprob: -20.875
    10. '[max' → logprob: -21.25

Token 3085: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -9.698698704596609e-05
    2. '_' → logprob: -9.250097274780273
    3. 'max' → logprob: -14.500097274780273
    4. '5' → logprob: -16.250097274780273
    5. ' ' → logprob: -16.875097274780273
    6. '{' → logprob: -17.125097274780273
    7. '```' → logprob: -17.250097274780273
    8. '   ' → logprob: -17.750097274780273
    9. 'num' → logprob: -18.000097274780273
    10. '`' → logprob: -18.250097274780273

Token 3086: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005042217671871185
    2. '<|end|>' → logprob: -5.63004207611084
    3. ',max' → logprob: -7.00504207611084
    4. ',min' → logprob: -8.13004207611084
    5. ',
' → logprob: -9.38004207611084
    6. '
' → logprob: -10.00504207611084
    7. 'def' → logprob: -11.00504207611084
    8. '```' → logprob: -11.25504207611084
    9. ',num' → logprob: -11.38004207611084
    10. ',len' → logprob: -12.00504207611084

Token 3087: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.5048530030981055e-06
    2. ' min' → logprob: -13.500001907348633
    3. '   ' → logprob: -21.750001907348633
    4. '[min' → logprob: -22.000001907348633
    5. '(min' → logprob: -22.500001907348633
    6. 'int' → logprob: -22.625001907348633
    7. '_min' → logprob: -22.750001907348633
    8. '	min' → logprob: -24.000001907348633
    9. 'max' → logprob: -24.250001907348633
    10. '    ' → logprob: -24.875001907348633

Token 3088: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0002382249804213643
    2. 'p' → logprob: -9.375238418579102
    3. 'xp' → logprob: -9.375238418579102
    4. 'expense' → logprob: -10.000238418579102
    5. 'exp' → logprob: -10.875238418579102
    6. '_' → logprob: -14.250238418579102
    7. '_ex' → logprob: -14.375238418579102
    8. '_exc' → logprob: -14.625238418579102
    9. '_p' → logprob: -14.875238418579102
    10. 'f' → logprob: -15.000238418579102

Token 3089: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -3.531315314830863e-06
    2. 'anse' → logprob: -13.000003814697266
    3. 'se' → logprob: -14.625003814697266
    4. 'ase' → logprob: -15.750003814697266
    5. 'use' → logprob: -15.750003814697266
    6. 'onse' → logprob: -16.125003814697266
    7. 'n' → logprob: -16.375003814697266
    8. ' ense' → logprob: -16.875003814697266
    9. '
' → logprob: -17.250003814697266
    10. 'ose' → logprob: -17.375003814697266

Token 3090: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3091: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3092: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012889951467514038
    2. ' main' → logprob: -4.512889862060547
    3. 'dp' → logprob: -7.137889862060547
    4. '_main' → logprob: -7.387889862060547
    5. 'solve' → logprob: -8.387889862060547
    6. '__' → logprob: -10.012889862060547
    7. 'read' → logprob: -10.137889862060547
    8. '_pro' → logprob: -11.262889862060547
    9. 'solution' → logprob: -11.262889862060547
    10. 'def' → logprob: -11.387889862060547

Token 3093: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.048615410923957825
    2. '():
' → logprob: -3.0486154556274414
    3. '(argv' → logprob: -10.923615455627441
    4. '():
' → logprob: -12.423615455627441
    5. '()' → logprob: -12.798615455627441
    6. ' ():' → logprob: -13.798615455627441
    7. '():

' → logprob: -13.923615455627441
    8. 'def' → logprob: -14.548615455627441
    9. '(argc' → logprob: -15.048615455627441
    10. '();' → logprob: -15.423615455627441

Token 3094: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014077350497245789
    2. '```' → logprob: -4.889077186584473
    3. 'import' → logprob: -5.264077186584473
    4. '	import' → logprob: -7.889077186584473
    5. '	lines' → logprob: -8.264077186584473
    6. '	line' → logprob: -9.014077186584473
    7. ' import' → logprob: -9.389077186584473
    8. 'def' → logprob: -9.764077186584473
    9. '    
' → logprob: -10.139077186584473
    10. ' line' → logprob: -10.389077186584473

Token 3095: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49989303946495056
    2. '   ' → logprob: -0.999893069267273
    3. 'n' → logprob: -3.7498929500579834
    4. '```' → logprob: -6.8748931884765625
    5. 'input' (adapté à ' input') → logprob: -7.8748931884765625
    6. ' import' → logprob: -8.624893188476562
    7. ' n' → logprob: -8.999893188476562
    8. '	n' → logprob: -9.499893188476562
    9. '``' → logprob: -10.374893188476562
    10. 'def' → logprob: -10.624893188476562

Token 3096: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2255261242389679
    2. '_line' → logprob: -1.8505260944366455
    3. '_data' → logprob: -3.4755260944366455
    4. '_lines' → logprob: -5.100526332855225
    5. '_tokens' → logprob: -6.850526332855225
    6. '=' → logprob: -6.850526332855225
    7. 's' → logprob: -7.100526332855225
    8. '_l' → logprob: -7.100526332855225
    9. '_' → logprob: -7.100526332855225
    10. '_str' → logprob: -7.350526332855225

Token 3097: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00021724513499066234
    2. ' sys' → logprob: -9.00021743774414
    3. 'lambda' → logprob: -9.75021743774414
    4. 'input' → logprob: -10.25021743774414
    5. '=sys' → logprob: -16.37521743774414
    6. ' lambda' → logprob: -17.37521743774414
    7. '(sys' → logprob: -17.50021743774414
    8. '	sys' → logprob: -17.50021743774414
    9. 'stdin' → logprob: -18.12521743774414
    10. ' input' → logprob: -19.37521743774414

Token 3098: '.stdin' (ID: 93480)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.1594472974538803
    2. '.stdin' → logprob: -2.034447193145752
    3. '(stdin' → logprob: -4.784447193145752
    4. '.readline' → logprob: -5.784447193145752
    5. 'import' → logprob: -5.909447193145752
    6. 'stdlib' → logprob: -7.284447193145752
    7. 'std' → logprob: -7.534447193145752
    8. 'read' → logprob: -8.28444766998291
    9. '<|end|>' → logprob: -9.03444766998291
    10. ' stdin' → logprob: -9.03444766998291

Token 3099: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4297337830066681
    2. 'read' → logprob: -1.1797337532043457
    3. 'def' → logprob: -4.429733753204346
    4. '=' → logprob: -4.554733753204346
    5. '_read' → logprob: -5.429733753204346
    6. '(stdin' → logprob: -5.929733753204346
    7. ' =' → logprob: -6.054733753204346
    8. 'stdin' → logprob: -6.304733753204346
    9. '<|end|>' → logprob: -6.679733753204346
    10. '
' → logprob: -6.929733753204346

Token 3100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47731420397758484
    2. 'n' → logprob: -0.9773142337799072
    3. '```' → logprob: -6.477313995361328
    4. '
' → logprob: -7.227313995361328
    5. 'num' → logprob: -7.602313995361328
    6. '(n' → logprob: -9.352313995361328
    7. ' n' → logprob: -9.352313995361328
    8. '	n' → logprob: -9.727313995361328
    9. 'prices' → logprob: -9.727313995361328
    10. 'line' → logprob: -10.477313995361328

Token 3101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20785601437091827
    2. 'n' → logprob: -1.9578560590744019
    3. '```' → logprob: -3.0828559398651123
    4. '	n' → logprob: -8.082856178283691
    5. '``' → logprob: -8.957856178283691
    6. 'num' → logprob: -9.207856178283691
    7. 'prices' → logprob: -9.957856178283691
    8. '
' → logprob: -10.457856178283691
    9. 'def' → logprob: -11.332856178283691
    10. 'line' → logprob: -11.457856178283691

Token 3102: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.035595010966062546
    2. '   ' → logprob: -3.535594940185547
    3. 't' → logprob: -5.285594940185547
    4. 'num' → logprob: -7.410594940185547
    5. 'T' → logprob: -10.035594940185547
    6. '```' → logprob: -10.535594940185547
    7. ' n' → logprob: -10.785594940185547
    8. 'N' → logprob: -11.035594940185547
    9. 'nb' → logprob: -11.285594940185547
    10. 'q' → logprob: -11.535594940185547

Token 3103: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.012227891013026237
    2. 'line' → logprob: -4.512228012084961
    3. ' True' → logprob: -7.137228012084961
    4. '(True' → logprob: -8.387228012084961
    5. 'l' → logprob: -9.762228012084961
    6. 'ligne' → logprob: -10.012228012084961
    7. '   ' → logprob: -10.387228012084961
    8. 'true' → logprob: -11.887228012084961
    9. '(line' → logprob: -12.137228012084961
    10. ' line' → logprob: -13.137228012084961

Token 3104: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.38078099489212036
    2. '():
' → logprob: -1.2557809352874756
    3. ':' → logprob: -4.005781173706055
    4. ':
' → logprob: -5.380781173706055
    5. '   ' → logprob: -5.880781173706055
    6. '       ' → logprob: -6.005781173706055
    7. ' line' → logprob: -6.630781173706055
    8. '()' → logprob: -6.880781173706055
    9. '```' → logprob: -7.880781173706055
    10. '_line' → logprob: -8.630781173706055

Token 3105: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016498296754434705
    2. 'line' → logprob: -7.001649856567383
    3. ' line' → logprob: -7.251649856567383
    4. '	line' → logprob: -11.126649856567383
    5. '```' → logprob: -11.501649856567383
    6. '       ' → logprob: -13.001649856567383
    7. 'try' → logprob: -13.751649856567383
    8. '   ' → logprob: -15.001649856567383
    9. '(line' → logprob: -15.376649856567383
    10. '#line' → logprob: -15.751649856567383

Token 3106: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.08433075994253159
    2. '   ' → logprob: -2.5843307971954346
    3. 'n' (adapté à ' n') → logprob: -5.9593305587768555
    4. 'N' → logprob: -6.8343305587768555
    5. 'l' → logprob: -6.9593305587768555
    6. 'L' → logprob: -7.8343305587768555
    7. ' line' → logprob: -8.209330558776855
    8. 's' → logprob: -9.709330558776855
    9. '       ' → logprob: -10.084330558776855
    10. '	line' → logprob: -10.709330558776855

Token 3107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1434667706489563
    2. ' =' → logprob: -2.0184667110443115
    3. '==' → logprob: -8.14346694946289
    4. ',' → logprob: -8.51846694946289
    5. ' ==' → logprob: -9.26846694946289
    6. '=int' → logprob: -9.39346694946289
    7. '   ' → logprob: -9.76846694946289
    8. '>' → logprob: -11.76846694946289
    9. '=n' → logprob: -12.14346694946289
    10. '=line' → logprob: -12.39346694946289

Token 3108: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012439649435691535
    2. ' int' → logprob: -9.000123977661133
    3. '=int' → logprob: -15.000123977661133
    4. '
' → logprob: -15.375123977661133
    5. '(int' → logprob: -16.000123977661133
    6. '0' → logprob: -16.000123977661133
    7. '   ' → logprob: -16.625123977661133
    8. '[int' → logprob: -16.750123977661133
    9. 'None' → logprob: -18.000123977661133
    10. '  ' → logprob: -18.000123977661133

Token 3109: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08566934615373611
    2. 'input' → logprob: -3.0856692790985107
    3. '()' → logprob: -3.3356692790985107
    4. '()
' → logprob: -7.21066951751709
    5. '(sys' → logprob: -10.46066951751709
    6. '())' → logprob: -10.71066951751709
    7. '=input' → logprob: -11.96066951751709
    8. ' input' → logprob: -12.08566951751709
    9. 'sys' → logprob: -12.33566951751709
    10. '(' → logprob: -13.33566951751709

Token 3110: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.27520713210105896
    2. '())' → logprob: -1.5252071619033813
    3. '().' → logprob: -3.775207042694092
    4. '()' → logprob: -9.77520751953125
    5. '()
' → logprob: -11.15020751953125
    6. '())
' → logprob: -12.52520751953125
    7. '())

' → logprob: -14.02520751953125
    8. ')' → logprob: -15.65020751953125
    9. ')
' → logprob: -15.65020751953125
    10. ' ())' → logprob: -15.77520751953125

Token 3111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1378411203622818
    2. 'if' → logprob: -2.13784122467041
    3. ' if' → logprob: -4.63784122467041
    4. '	if' → logprob: -7.01284122467041
    5. '   ' → logprob: -8.63784122467041
    6. '	' → logprob: -9.88784122467041
    7. '<|end|>' → logprob: -11.88784122467041
    8. '	   ' → logprob: -12.13784122467041
    9. '           ' → logprob: -12.38784122467041
    10. 'try' → logprob: -12.63784122467041

Token 3112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02838008850812912
    2. '       ' → logprob: -3.7783801555633545
    3. ' if' → logprob: -5.278379917144775
    4. '	if' → logprob: -11.278380393981934
    5. '   ' → logprob: -11.903380393981934
    6. '```' → logprob: -14.528380393981934
    7. '	' → logprob: -14.778380393981934
    8. ';if' → logprob: -16.028379440307617
    9. 'try' → logprob: -16.278379440307617
    10. 'If' → logprob: -16.903379440307617

Token 3113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009118211455643177
    2. ' n' → logprob: -7.000911712646484
    3. ' not' → logprob: -15.750911712646484
    4. 'not' → logprob: -16.000911712646484
    5. '0' → logprob: -18.000911712646484
    6. '	n' → logprob: -18.375911712646484
    7. '(n' → logprob: -18.625911712646484
    8. '   ' → logprob: -18.625911712646484
    9. '_n' → logprob: -19.375911712646484
    10. ')n' → logprob: -20.750911712646484

Token 3114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22583319246768951
    2. ' ==' → logprob: -1.6008331775665283
    3. '=' → logprob: -8.10083293914795
    4. '<=' → logprob: -10.10083293914795
    5. '>' → logprob: -10.97583293914795
    6. '()==' → logprob: -11.10083293914795
    7. '```' → logprob: -11.22583293914795
    8. '==
' → logprob: -11.35083293914795
    9. '===' → logprob: -12.47583293914795
    10. '<' → logprob: -12.60083293914795

Token 3115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.5
    4. '       ' → logprob: -20.625
    5. '=' → logprob: -20.875
    6. '
' → logprob: -22.875
    7. '    ' → logprob: -23.125
    8. '  ' → logprob: -23.25
    9. '۰' → logprob: -23.375
    10. '０' → logprob: -23.625

Token 3116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -17.75
    4. '       ' → logprob: -20.75
    5. '=' → logprob: -21.375
    6. '    ' → logprob: -21.875
    7. '０' → logprob: -22.375
    8. '۰' → logprob: -22.625
    9. '     ' → logprob: -22.75
    10. '  ' → logprob: -22.75

Token 3117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19663941860198975
    2. ':' → logprob: -1.8216394186019897
    3. '           ' → logprob: -4.196639537811279
    4. '       ' → logprob: -6.946639537811279
    5. '   ' → logprob: -7.696639537811279
    6. '():
' → logprob: -9.321639060974121
    7. '		' → logprob: -10.196639060974121
    8. '):
' → logprob: -10.321639060974121
    9. '	' → logprob: -10.446639060974121
    10. ':return' → logprob: -10.571639060974121

Token 3118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001213806332089007
    2. '	' → logprob: -7.501214027404785
    3. '   ' → logprob: -7.501214027404785
    4. '	break' → logprob: -10.251214027404785
    5. '           ' → logprob: -10.376214027404785
    6. 'break' → logprob: -11.376214027404785
    7. '```' → logprob: -11.876214027404785
    8. '	   ' → logprob: -12.001214027404785
    9. ' break' → logprob: -12.001214027404785
    10. ':' → logprob: -13.501214027404785

Token 3119: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0030127689242362976
    2. '       ' → logprob: -6.253012657165527
    3. 'return' → logprob: -7.003012657165527
    4. '	break' → logprob: -9.253012657165527
    5. ' break' → logprob: -9.503012657165527
    6. '   ' → logprob: -12.753012657165527
    7. '_break' → logprob: -15.003012657165527
    8. '	' → logprob: -15.128012657165527
    9. '```' → logprob: -15.878012657165527
    10. '           ' → logprob: -15.878012657165527

Token 3120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04009290784597397
    2. '   ' → logprob: -3.415092945098877
    3. '```' → logprob: -5.790092945098877
    4. '        
' → logprob: -6.790092945098877
    5. ':' → logprob: -7.290092945098877
    6. ':
' → logprob: -7.790092945098877
    7. '<|end|>' → logprob: -8.165092468261719
    8. ',' → logprob: -8.915092468261719
    9. 'prices' → logprob: -9.040092468261719
    10. '
' → logprob: -9.290092468261719

Token 3121: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10347135365009308
    2. 'prices' → logprob: -2.353471279144287
    3. '       ' → logprob: -6.103471279144287
    4. '	pr' → logprob: -7.228471279144287
    5. ' prices' → logprob: -9.353471755981445
    6. 'pr' → logprob: -9.853471755981445
    7. '```' → logprob: -9.978471755981445
    8. '_prices' → logprob: -10.353471755981445
    9. 'prix' → logprob: -10.478471755981445
    10. 'pieces' → logprob: -10.728471755981445

Token 3122: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' (adapté à ' prices') → logprob: -0.00017183588352054358
    2. '       ' → logprob: -9.000171661376953
    3. '   ' → logprob: -10.625171661376953
    4. 'pr' → logprob: -11.875171661376953
    5. 'price' → logprob: -11.875171661376953
    6. 'prix' → logprob: -12.250171661376953
    7. ' prices' → logprob: -12.375171661376953
    8. '_prices' → logprob: -14.750171661376953
    9. '```' → logprob: -15.125171661376953
    10. 'pieces' → logprob: -15.625171661376953

Token 3123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6364555358886719
    2. ' =' → logprob: -0.7614555358886719
    3. '=[]' → logprob: -6.011455535888672
    4. '   ' → logprob: -7.261455535888672
    5. '()' → logprob: -8.761455535888672
    6. '       ' → logprob: -9.136455535888672
    7. '=[]
' → logprob: -9.261455535888672
    8. '[]' → logprob: -9.511455535888672
    9. '=[' → logprob: -10.761455535888672
    10. ')' → logprob: -10.761455535888672

Token 3124: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.31480270624160767
    2. 'list' → logprob: -1.314802646636963
    3. ' list' → logprob: -7.064802646636963
    4. '[' → logprob: -7.314802646636963
    5. '[List' → logprob: -12.064803123474121
    6. ' [' → logprob: -12.064803123474121
    7. '[line' → logprob: -13.564803123474121
    8. '[int' → logprob: -13.689803123474121
    9. '[len' → logprob: -13.814803123474121
    10. '[n' → logprob: -14.314803123474121

Token 3125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026982359122484922
    2. ' for' → logprob: -6.6276984214782715
    3. 'for' → logprob: -6.7526984214782715
    4. '	' → logprob: -8.877697944641113
    5. '   ' → logprob: -10.502697944641113
    6. '	for' → logprob: -11.002697944641113
    7. '```' → logprob: -11.752697944641113
    8. '<|end|>' → logprob: -12.502697944641113
    9. '	   ' → logprob: -13.002697944641113
    10. '​' → logprob: -13.502697944641113

Token 3126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002702760975807905
    2. ' for' → logprob: -8.500269889831543
    3. '       ' → logprob: -9.625269889831543
    4. '
' → logprob: -15.375269889831543
    5. '   ' → logprob: -15.875269889831543
    6. '	for' → logprob: -16.25027084350586
    7. 'while' → logprob: -16.37527084350586
    8. '           ' → logprob: -16.50027084350586
    9. '​' → logprob: -17.87527084350586
    10. '```' → logprob: -17.87527084350586

Token 3127: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.676292231422849e-05
    2. '_i' → logprob: -12.250017166137695
    3. '_range' → logprob: -12.375017166137695
    4. '_in' → logprob: -12.375017166137695
    5. '_
' → logprob: -13.500017166137695
    6. ' _' → logprob: -14.250017166137695
    7. '_=' → logprob: -14.375017166137695
    8. 'i' → logprob: -15.625017166137695
    9. ' in' → logprob: -15.750017166137695
    10. '
' → logprob: -16.375017166137695

Token 3128: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011832603253424168
    2. ' range' → logprob: -4.5118327140808105
    3. 'in' → logprob: -7.2618327140808105
    4. '_' → logprob: -10.261832237243652
    5. '_range' → logprob: -10.511832237243652
    6. ' in' → logprob: -12.261832237243652
    7. '(range' → logprob: -12.386832237243652
    8. ')' → logprob: -12.886832237243652
    9. '0' → logprob: -13.011832237243652
    10. '   ' → logprob: -13.261832237243652

Token 3129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.630610641877865e-06
    2. ' range' → logprob: -12.000006675720215
    3. '_' → logprob: -15.875006675720215
    4. '_range' → logprob: -16.3750057220459
    5. '
' → logprob: -16.6250057220459
    6. ' ' → logprob: -16.8750057220459
    7. '   ' → logprob: -16.8750057220459
    8. '  ' → logprob: -18.7500057220459
    9. '(range' → logprob: -19.8750057220459
    10. '    ' → logprob: -20.2500057220459

Token 3130: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2007883671903983e-05
    2. ' n' → logprob: -11.375021934509277
    3. 'int' → logprob: -11.750021934509277
    4. '_n' → logprob: -13.125021934509277
    5. '   ' → logprob: -15.375021934509277
    6. '(n' → logprob: -15.875021934509277
    7. '_' → logprob: -16.375022888183594
    8. '	n' → logprob: -16.375022888183594
    9. 'range' → logprob: -17.500022888183594
    10. '
' → logprob: -18.625022888183594

Token 3131: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.045000508427619934
    2. '()):
' → logprob: -3.7950005531311035
    3. '():
' → logprob: -4.1700005531311035
    4. '       ' → logprob: -5.4200005531311035
    5. '()' → logprob: -7.2950005531311035
    6. '           ' → logprob: -7.9200005531311035
    7. '):' → logprob: -7.9200005531311035
    8. ')' → logprob: -9.045000076293945
    9. '   ' → logprob: -10.545000076293945
    10. ''):
' → logprob: -10.670000076293945

Token 3132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6413386464118958
    2. 'prices' → logprob: -0.7663386464118958
    3. ' prices' → logprob: -5.64133882522583
    4. '	       ' → logprob: -6.39133882522583
    5. '       ' → logprob: -7.01633882522583
    6. 'price' → logprob: -7.39133882522583
    7. '```' → logprob: -7.51633882522583
    8. 'pr' → logprob: -8.391338348388672
    9. 'int' → logprob: -8.641338348388672
    10. '   ' → logprob: -8.641338348388672

Token 3133: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' (adapté à ' prices') → logprob: -0.3344378173351288
    2. 'price' → logprob: -1.3344378471374512
    3. '           ' → logprob: -4.334437847137451
    4. 'p' → logprob: -5.459437847137451
    5. ' prices' → logprob: -6.584437847137451
    6. 'int' → logprob: -7.084437847137451
    7. '   ' → logprob: -7.459437847137451
    8. 'prix' → logprob: -7.584437847137451
    9. 'pr' → logprob: -9.209437370300293
    10. ' price' → logprob: -9.709437370300293

Token 3134: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08976208418607712
    2. '=' → logprob: -3.214761972427368
    3. '=int' → logprob: -4.089762210845947
    4. '().' → logprob: -4.089762210845947
    5. '()' → logprob: -4.714762210845947
    6. ' =' → logprob: -7.214762210845947
    7. '[int' → logprob: -7.589762210845947
    8. '()
' → logprob: -7.839762210845947
    9. 'int' → logprob: -8.464761734008789
    10. '           ' → logprob: -8.464761734008789

Token 3135: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017353941220790148
    2. ' int' → logprob: -6.751735210418701
    3. '(int' → logprob: -7.501735210418701
    4. '           ' → logprob: -11.87673568725586
    5. '   ' → logprob: -12.50173568725586
    6. ' ' → logprob: -14.12673568725586
    7. '[int' → logprob: -14.75173568725586
    8. '<int' → logprob: -14.87673568725586
    9. '	int' → logprob: -15.00173568725586
    10. '  ' → logprob: -15.87673568725586

Token 3136: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34955015778541565
    2. '())' → logprob: -2.099550247192383
    3. '(input' → logprob: -2.599550247192383
    4. '())
' → logprob: -2.849550247192383
    5. '().' → logprob: -3.224550247192383
    6. '()
' → logprob: -8.099550247192383
    7. '())

' → logprob: -9.599550247192383
    8. '()))
' → logprob: -9.974550247192383
    9. ' input' → logprob: -10.599550247192383
    10. '()))' → logprob: -10.849550247192383

Token 3137: '()))
' (ID: 24521)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0920320451259613
    2. '()))' → logprob: -2.592031955718994
    3. '()))
' → logprob: -4.342031955718994
    4. '()' → logprob: -10.967032432556152
    5. '())' → logprob: -11.092032432556152
    6. '))' → logprob: -11.842032432556152
    7. '()))
' → logprob: -12.592032432556152
    8. '()))

' → logprob: -13.967032432556152
    9. '.strip' → logprob: -14.717032432556152
    10. '())
' → logprob: -14.967032432556152

Token 3138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005117295775562525
    2. '   ' → logprob: -5.755117416381836
    3. '```' → logprob: -7.255117416381836
    4. '	' → logprob: -7.630117416381836
    5. '<|end|>' → logprob: -8.255117416381836
    6. '
' → logprob: -8.755117416381836
    7. '        
' → logprob: -9.255117416381836
    8. '	   ' → logprob: -10.630117416381836
    9. ')' → logprob: -10.755117416381836
    10. '#' → logprob: -11.255117416381836

Token 3139: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6270449757575989
    2. 'dp' → logprob: -1.377044916152954
    3. 'result' → logprob: -2.502044916152954
    4. 'max' → logprob: -2.627044916152954
    5. '   ' → logprob: -3.002044916152954
    6. '```' → logprob: -5.502045154571533
    7. 'res' → logprob: -6.252045154571533
    8. ' result' → logprob: -6.877045154571533
    9. ' max' → logprob: -7.627045154571533
    10. ' dp' → logprob: -8.127044677734375

Token 3140: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08824767172336578
    2. '   ' → logprob: -2.588247776031494
    3. 'dp' → logprob: -6.213247776031494
    4. 'ol' → logprob: -6.338247776031494
    5. 'ont' → logprob: -6.713247776031494
    6. '       ' → logprob: -7.088247776031494
    7. 'o' → logprob: -7.213247776031494
    8. '#' → logprob: -7.338247776031494
    9. '_max' → logprob: -8.463247299194336
    10. 'p' → logprob: -8.838247299194336

Token 3141: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01613243669271469
    2. 'min' → logprob: -5.391132354736328
    3. 'e' → logprob: -5.641132354736328
    4. 'd' → logprob: -5.641132354736328
    5. ' m' → logprob: -5.891132354736328
    6. 'me' → logprob: -6.766132354736328
    7. 'p' → logprob: -9.141132354736328
    8. ' e' → logprob: -10.016132354736328
    9. ' min' → logprob: -10.141132354736328
    10. 'r' → logprob: -10.141132354736328

Token 3142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01643209531903267
    2. ' =' → logprob: -4.141432285308838
    3. '=c' → logprob: -8.64143180847168
    4. ',' → logprob: -9.39143180847168
    5. '_=' → logprob: -10.01643180847168
    6. '=max' → logprob: -10.39143180847168
    7. 'c' → logprob: -11.51643180847168
    8. '_' → logprob: -11.51643180847168
    9. '=
' → logprob: -11.51643180847168
    10. '_,' → logprob: -11.89143180847168

Token 3143: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.505351095460355e-05
    2. ' dp' → logprob: -9.500075340270996
    3. 'max' → logprob: -16.62507438659668
    4. '(dp' → logprob: -17.75007438659668
    5. '   ' → logprob: -17.87507438659668
    6. '	dp' → logprob: -18.37507438659668
    7. 'd' → logprob: -19.12507438659668
    8. ' ' → logprob: -19.25007438659668
    9. '_dp' → logprob: -20.37507438659668
    10. '  ' → logprob: -20.62507438659668

Token 3144: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -4.084206375409849e-05
    2. 'solution' → logprob: -10.125041007995605
    3. 'Solution' → logprob: -15.125041007995605
    4. 'dp' → logprob: -15.500041007995605
    5. 'olution' → logprob: -15.750041007995605
    6. 's' → logprob: -18.37504005432129
    7. '_strategy' → logprob: -19.87504005432129
    8. '   ' → logprob: -20.25004005432129
    9. ' =' → logprob: -20.25004005432129
    10. '=' → logprob: -20.62504005432129

Token 3145: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -1.0802738870552275e-05
    2. 'prices' → logprob: -11.50001049041748
    3. 'pr' → logprob: -15.50001049041748
    4. ' (' → logprob: -16.000011444091797
    5. '(price' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.875011444091797
    7. '
' → logprob: -17.250011444091797
    8. '	pr' → logprob: -18.125011444091797
    9. '_prices' → logprob: -18.625011444091797
    10. ' prices' → logprob: -18.625011444091797

Token 3146: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.0024814847856760025
    2. 'ces' → logprob: -6.002481460571289
    3. 'prices' → logprob: -12.752481460571289
    4. '   ' → logprob: -13.502481460571289
    5. 'rices' → logprob: -14.627481460571289
    6. '(pr' → logprob: -15.127481460571289
    7. 'es' → logprob: -15.502481460571289
    8. 'ises' → logprob: -15.752481460571289
    9. 'ice' → logprob: -15.877481460571289
    10. 'zes' → logprob: -16.00248146057129

Token 3147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1614159196615219
    2. ')' → logprob: -1.911415934562683
    3. '       ' → logprob: -6.786416053771973
    4. '   ' → logprob: -10.411416053771973
    5. ')
' → logprob: -10.661416053771973
    6. ')`
' → logprob: -12.036416053771973
    7. '())
' → logprob: -14.536416053771973
    8. ',)
' → logprob: -15.286416053771973
    9. ' )
' → logprob: -15.536416053771973
    10. ')`' → logprob: -15.536416053771973

Token 3148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028453771024942398
    2. 'print' → logprob: -3.903453826904297
    3. '   ' → logprob: -5.028453826904297
    4. '```' → logprob: -6.903453826904297
    5. '<|end|>' → logprob: -8.528453826904297
    6. '	print' → logprob: -9.653453826904297
    7. ' print' → logprob: -10.028453826904297
    8. '``' → logprob: -12.278453826904297
    9. '        
' → logprob: -12.528453826904297
    10. '#print' → logprob: -12.778453826904297

Token 3149: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2471589798224159e-05
    2. '       ' → logprob: -11.500012397766113
    3. '```' → logprob: -13.500012397766113
    4. ' print' → logprob: -14.125012397766113
    5. '   ' → logprob: -17.00001335144043
    6. '
' → logprob: -17.00001335144043
    7. '``' → logprob: -17.37501335144043
    8. '#print' → logprob: -17.75001335144043
    9. '	print' → logprob: -18.37501335144043
    10. '        
' → logprob: -20.62501335144043

Token 3150: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0009850544156506658
    2. 'c' → logprob: -7.500985145568848
    3. '(f' → logprob: -7.750985145568848
    4. 'f' → logprob: -13.500985145568848
    5. ' c' → logprob: -15.125985145568848
    6. '(' → logprob: -16.62598419189453
    7. '	c' → logprob: -18.12598419189453
    8. '   ' → logprob: -18.25098419189453
    9. '("{}' → logprob: -18.75098419189453
    10. '((' → logprob: -20.00098419189453

Token 3151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001534620183520019
    2. ' ,' → logprob: -6.876534461975098
    3. ',s' → logprob: -7.626534461975098
    4. 's' → logprob: -12.001534461975098
    5. ' s' → logprob: -12.376534461975098
    6. ',end' → logprob: -13.376534461975098
    7. ',c' → logprob: -14.126534461975098
    8. '   ' → logprob: -14.251534461975098
    9. ')' → logprob: -14.626534461975098
    10. ',f' → logprob: -16.501535415649414

Token 3152: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033546582562848926
    2. ' s' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '     ' → logprob: -19.000335693359375
    5. ' ' → logprob: -19.500335693359375
    6. '    ' → logprob: -20.000335693359375
    7. ' ' → logprob: -20.375335693359375
    8. ')' → logprob: -20.625335693359375
    9. 'end' → logprob: -20.625335693359375
    10. '
' → logprob: -20.750335693359375

Token 3153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.750003814697266
    5. '())' → logprob: -15.000003814697266
    6. '")' → logprob: -15.125003814697266
    7. '')' → logprob: -15.500003814697266
    8. '`)' → logprob: -16.250003814697266
    9. '))' → logprob: -16.750003814697266
    10. '})' → logprob: -17.125003814697266

Token 3154: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3155: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002043748099822551
    2. ' __' → logprob: -8.500204086303711
    3. 'name' → logprob: -14.250204086303711
    4. '```' → logprob: -16.25020408630371
    5. '___' → logprob: -17.00020408630371
    6. '/__' → logprob: -17.50020408630371
    7. 'True' → logprob: -18.00020408630371
    8. '_name' → logprob: -18.25020408630371
    9. ''' → logprob: -19.00020408630371
    10. ' ' → logprob: -19.87520408630371

Token 3156: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03315489739179611
    2. '==' → logprob: -3.5331549644470215
    3. '=="' → logprob: -6.4081549644470215
    4. ' ==' → logprob: -6.7831549644470215
    5. 'name' → logprob: -8.533154487609863
    6. '```' → logprob: -8.658154487609863
    7. '=='' → logprob: -8.908154487609863
    8. '__.__' → logprob: -10.533154487609863
    9. ' __' → logprob: -10.658154487609863
    10. 'if' → logprob: -11.658154487609863

Token 3157: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0038924727123230696
    2. '==' → logprob: -6.003892421722412
    3. '=="' → logprob: -6.878892421722412
    4. '```' → logprob: -8.62889289855957
    5. '=='' → logprob: -9.62889289855957
    6. ' ==' → logprob: -9.62889289855957
    7. '__.__' → logprob: -10.25389289855957
    8. '__
' → logprob: -11.75389289855957
    9. '__":
' → logprob: -12.25389289855957
    10. '_' → logprob: -12.37889289855957

Token 3158: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4759596288204193
    2. '=="' → logprob: -1.2259596586227417
    3. '__' → logprob: -3.225959539413452
    4. ' ==' → logprob: -3.725959539413452
    5. '=='' → logprob: -3.850959539413452
    6. '==
' → logprob: -9.475959777832031
    7. '```' → logprob: -10.225959777832031
    8. '__.__' → logprob: -11.350959777832031
    9. '==="' → logprob: -11.600959777832031
    10. '==='' → logprob: -11.975959777832031

Token 3159: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5762144923210144
    2. ''' → logprob: -0.8262144923210144
    3. '__' → logprob: -8.201214790344238
    4. ' "__' → logprob: -15.201214790344238
    5. ' '__' → logprob: -16.201213836669922
    6. 'main' → logprob: -16.701213836669922
    7. ''name' → logprob: -16.701213836669922
    8. '"name' → logprob: -17.326213836669922
    9. ''user' → logprob: -17.701213836669922
    10. ''post' → logprob: -17.826213836669922

Token 3160: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.053667567670345306
    2. 'main' → logprob: -3.0536675453186035
    3. '"' → logprob: -5.4286675453186035
    4. ''' → logprob: -7.3036675453186035
    5. 'name' → logprob: -13.053668022155762
    6. 'python' → logprob: -13.678668022155762
    7. '__":
' → logprob: -15.053668022155762
    8. ' "__' → logprob: -15.553668022155762
    9. '"name' → logprob: -15.553668022155762
    10. '_main' → logprob: -15.678668022155762

Token 3161: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0022740813437849283
    2. '__' → logprob: -6.627274036407471
    3. '__':
' → logprob: -7.002274036407471
    4. '">
' → logprob: -11.252274513244629
    5. '_' → logprob: -11.877274513244629
    6. '```' → logprob: -12.752274513244629
    7. '__["' → logprob: -12.877274513244629
    8. '">' → logprob: -12.877274513244629
    9. '():
' → logprob: -13.377274513244629
    10. '==' → logprob: -14.252274513244629

Token 3162: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.805981972021982e-05
    2. '	main' → logprob: -9.50009822845459
    3. ' main' → logprob: -10.75009822845459
    4. '   ' → logprob: -14.25009822845459
    5. '(main' → logprob: -14.25009822845459
    6. '_main' → logprob: -14.87509822845459
    7. 'mainwindow' → logprob: -18.000097274780273
    8. '.main' → logprob: -18.375097274780273
    9. '```' → logprob: -18.375097274780273
    10. 'amain' → logprob: -18.625097274780273

Token 3163: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -21.0
    4. 'import' → logprob: -21.875
    5. '   ' → logprob: -22.0
    6. 'sys' → logprob: -26.0
    7. '_main' → logprob: -26.125
    8. '.main' → logprob: -26.25
    9. '(main' → logprob: -26.375
    10. 'Main' → logprob: -28.625

Token 3164: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3162
Tokens correctement prédits (1ère position, stricte): 952
Tokens correctement prédits (1ère position, avec adaptation): 1028
Tokens correctement prédits (top 10): 2075
Précision stricte (1ère position): 30.11%
Précision adaptée (1ère position): 32.51%
Précision (top 10): 65.62%
================================================================================
