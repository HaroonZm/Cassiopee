================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, r = map(int, input().split())
    if n == 0 and r == 0:
        break
    deck = list(range(1, n + 1))
    for _ in range(r):
        p, c = map(int, input().split())
        extracted = deck[-p:-p+c]
        del deck[-p:-p+c]
        deck.extend(extracted)
    print(deck[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24820508062839508
    2. '    ' → logprob: -1.8732050657272339
    3. '```' → logprob: -3.9982051849365234
    4. ' ' → logprob: -4.123205184936523
    5. '       ' → logprob: -4.123205184936523
    6. '    
' → logprob: -5.998205184936523
    7. '  ' → logprob: -6.373205184936523
    8. '\' → logprob: -6.498205184936523
    9. '\t' → logprob: -6.748205184936523
    10. '\n' → logprob: -6.748205184936523

Token 5: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0934982299804688
    2. '=' → logprob: -1.4684982299804688
    3. 'u' → logprob: -1.5934982299804688
    4. '   ' → logprob: -2.7184982299804688
    5. '+' → logprob: -3.2184982299804688
    6. 'o' → logprob: -3.5934982299804688
    7. 'e' → logprob: -4.093498229980469
    8. '_' → logprob: -4.343498229980469
    9. '>' → logprob: -4.343498229980469
    10. ' =' → logprob: -4.843498229980469

Token 6: ' r' (ID: 428)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38138914108276367
    2. ' =' → logprob: -2.1313891410827637
    3. 'input' → logprob: -2.7563891410827637
    4. ' s' → logprob: -3.2563891410827637
    5. 's' → logprob: -3.6313891410827637
    6. '=' → logprob: -3.8813891410827637
    7. ' ' → logprob: -4.006389141082764
    8. '=input' → logprob: -4.256389141082764
    9. ' n' → logprob: -4.881389141082764
    10. '"' → logprob: -7.006389141082764

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6330286860466003
    2. ' =' → logprob: -0.7580286860466003
    3. ',' → logprob: -7.883028507232666
    4. ' ' → logprob: -10.133028984069824
    5. ')' → logprob: -12.133028984069824
    6. ' ,' → logprob: -12.633028984069824
    7. '  ' → logprob: -13.383028984069824
    8. ' =
' → logprob: -14.383028984069824
    9. '.' → logprob: -15.258028984069824
    10. '>' → logprob: -15.258028984069824

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2856403887271881
    2. 'map' → logprob: -1.4106403589248657
    3. 'input' → logprob: -6.160640239715576
    4. ' input' → logprob: -6.285640239715576
    5. '0' → logprob: -8.660640716552734
    6. ' ' → logprob: -9.035640716552734
    7. '(map' → logprob: -10.035640716552734
    8. ' [' → logprob: -10.285640716552734
    9. ' int' → logprob: -10.410640716552734
    10. '[' → logprob: -10.660640716552734

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0488799586892128
    2. '(' → logprob: -3.048879861831665
    3. '(input' → logprob: -8.798879623413086
    4. '(str' → logprob: -9.173879623413086
    5. '(lambda' → logprob: -10.923879623413086
    6. 'int' → logprob: -11.423879623413086
    7. '(
' → logprob: -13.423879623413086
    8. '<int' → logprob: -13.423879623413086
    9. '(eval' → logprob: -13.423879623413086
    10. ' int' → logprob: -13.923879623413086

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8301698565483093
    2. ')' → logprob: -0.9551698565483093
    3. 'input' → logprob: -1.830169916152954
    4. ' input' → logprob: -4.580169677734375
    5. '(' → logprob: -5.330169677734375
    6. ',input' → logprob: -6.455169677734375
    7. ',' → logprob: -6.830169677734375
    8. '(str' → logprob: -8.955169677734375
    9. '=input' → logprob: -9.080169677734375
    10. '```' → logprob: -9.205169677734375

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0430859737098217
    2. ' input' → logprob: -3.168086051940918
    3. ')' → logprob: -9.543086051940918
    4. '(input' → logprob: -11.543086051940918
    5. '=input' → logprob: -13.918086051940918
    6. ',input' → logprob: -14.043086051940918
    7. '```' → logprob: -14.168086051940918
    8. ' )' → logprob: -14.168086051940918
    9. ' ' → logprob: -14.543086051940918
    10. '	input' → logprob: -14.543086051940918

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8627439737319946
    2. '())' → logprob: -0.8627439737319946
    3. '().' → logprob: -1.8627439737319946
    4. '());' → logprob: -8.737744331359863
    5. '()))' → logprob: -8.737744331359863
    6. '('' → logprob: -9.112744331359863
    7. ')' → logprob: -9.362744331359863
    8. '(' → logprob: -9.737744331359863
    9. '()`' → logprob: -10.862744331359863
    10. ' ())' → logprob: -10.862744331359863

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018494461255613714
    2. 'strip' → logprob: -8.625185012817383
    3. 'rstrip' → logprob: -12.375185012817383
    4. ' split' → logprob: -14.125185012817383
    5. '(split' → logprob: -15.000185012817383
    6. ')' → logprob: -17.000185012817383
    7. 'spl' → logprob: -17.625185012817383
    8. 'read' → logprob: -17.750185012817383
    9. 'startswith' → logprob: -18.375185012817383
    10. 'rs' → logprob: -19.000185012817383

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5258306264877319
    2. '))' → logprob: -1.150830626487732
    3. '())' → logprob: -2.5258307456970215
    4. '()))' → logprob: -4.6508307456970215
    5. '()' → logprob: -5.9008307456970215
    6. '(' → logprob: -8.775830268859863
    7. '),' → logprob: -10.650830268859863
    8. '('' → logprob: -10.650830268859863
    9. ')))' → logprob: -10.650830268859863
    10. ''))' → logprob: -12.025830268859863

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2792849838733673
    2. ' if' → logprob: -2.154284954071045
    3. ':' → logprob: -3.029284954071045
    4. ' ' → logprob: -3.779284954071045
    5. '<|end|>' → logprob: -4.029284954071045
    6. ')' → logprob: -4.154284954071045
    7. '    ' → logprob: -5.029284954071045
    8. 'if' → logprob: -5.779284954071045
    9. '       ' → logprob: -5.779284954071045
    10. '  ' → logprob: -6.029284954071045

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7283380627632141
    2. ' if' → logprob: -1.1033380031585693
    3. ':' → logprob: -2.9783380031585693
    4. 'if' (adapté à ' if') → logprob: -3.4783380031585693
    5. ')' → logprob: -4.103338241577148
    6. '```' → logprob: -4.103338241577148
    7. ' ' → logprob: -4.603338241577148
    8. '    ' → logprob: -4.603338241577148
    9. ':
' → logprob: -4.978338241577148
    10. '       ' → logprob: -4.978338241577148

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0049922894686460495
    2. ' not' → logprob: -5.754992485046387
    3. 'n' → logprob: -6.754992485046387
    4. ' r' → logprob: -7.504992485046387
    5. ' ' → logprob: -9.629992485046387
    6. 'not' → logprob: -11.254992485046387
    7. 'r' → logprob: -11.379992485046387
    8. ' ' → logprob: -12.254992485046387
    9. ' (' → logprob: -13.754992485046387
    10. '(n' → logprob: -14.004992485046387

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8310343623161316
    2. ' <' → logprob: -1.2060344219207764
    3. ' <=' → logprob: -1.8310344219207764
    4. '==' → logprob: -2.9560344219207764
    5. '<' → logprob: -3.3310344219207764
    6. '<=' → logprob: -5.206034183502197
    7. ' ' → logprob: -5.331034183502197
    8. ' >' → logprob: -6.331034183502197
    9. '>' → logprob: -6.831034183502197
    10. ' >=' → logprob: -7.081034183502197

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10105372965335846
    2. '0' → logprob: -2.3510537147521973
    3. ' r' → logprob: -7.726053714752197
    4. 'r' → logprob: -7.851053714752197
    5. ' -' → logprob: -12.226054191589355
    6. '-' → logprob: -12.351054191589355
    7. '1' → logprob: -13.413554191589355
    8. '  ' → logprob: -13.538554191589355
    9. '=' → logprob: -14.476054191589355
    10. '7' → logprob: -14.851054191589355

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010816368740051985
    2. ' ' → logprob: -6.876081466674805
    3. 'r' → logprob: -10.126081466674805
    4. '-' → logprob: -12.001081466674805
    5. ' r' → logprob: -14.563581466674805
    6. ' -' → logprob: -14.626081466674805
    7. 'and' → logprob: -15.001081466674805
    8. '```' → logprob: -15.251081466674805
    9. '   ' → logprob: -15.563581466674805
    10. '1' → logprob: -15.626081466674805

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013845420442521572
    2. ':' → logprob: -4.638845443725586
    3. 'and' → logprob: -5.763845443725586
    4. ' or' → logprob: -7.013845443725586
    5. ' ' → logprob: -10.888845443725586
    6. '   ' → logprob: -11.763845443725586
    7. ' :' → logprob: -12.138845443725586
    8. '	and' → logprob: -12.763845443725586
    9. ' a' → logprob: -13.138845443725586
    10. '  ' → logprob: -13.388845443725586

Token 22: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.033651694655418396
    2. 'r' → logprob: -3.40865159034729
    3. '	r' → logprob: -12.908651351928711
    4. ' ' → logprob: -13.033651351928711
    5. '   ' → logprob: -14.533651351928711
    6. ' ' → logprob: -15.658651351928711
    7. ' n' → logprob: -15.658651351928711
    8. '<|end|>' → logprob: -15.908651351928711
    9. '    ' → logprob: -16.40865135192871
    10. '  ' → logprob: -16.78365135192871

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03485582768917084
    2. '==' → logprob: -3.409855842590332
    3. ' ' → logprob: -7.409855842590332
    4. '=' → logprob: -7.909855842590332
    5. ' =' → logprob: -9.534855842590332
    6. '<|end|>' → logprob: -9.534855842590332
    7. '  ' → logprob: -10.034855842590332
    8. ' ' → logprob: -10.784855842590332
    9. '0' → logprob: -12.159855842590332
    10. ')' → logprob: -12.284855842590332

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300417259335518
    2. ' ' → logprob: -3.6513004302978516
    3. '۰' → logprob: -17.40130043029785
    4. '  ' → logprob: -17.65130043029785
    5. '   ' → logprob: -17.65130043029785
    6. '<|end|>' → logprob: -17.90130043029785
    7. ' ' → logprob: -18.71380043029785
    8. '<|end|>' → logprob: -18.90130043029785
    9. '1' → logprob: -19.77630043029785
    10. '০' → logprob: -20.33880043029785

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006277294596657157
    2. ' ' → logprob: -7.375627517700195
    3. '  ' → logprob: -14.875627517700195
    4. '1' → logprob: -15.625627517700195
    5. '   ' → logprob: -15.688127517700195
    6. '۰' → logprob: -15.938127517700195
    7. '```' → logprob: -16.875627517700195
    8. ')' → logprob: -17.438127517700195
    9. '-' → logprob: -17.625627517700195
    10. 'n' → logprob: -17.688127517700195

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001409878022968769
    2. ':
' → logprob: -6.626410007476807
    3. '       ' → logprob: -10.001409530639648
    4. '   ' → logprob: -10.251409530639648
    5. ':return' → logprob: -13.876409530639648
    6. ' :' → logprob: -14.126409530639648
    7. '):' → logprob: -14.626409530639648
    8. ':
' → logprob: -15.376409530639648
    9. ',' → logprob: -15.501409530639648
    10. '.' → logprob: -15.876409530639648

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004568134900182486
    2. ':' → logprob: -5.754568099975586
    3. '   ' → logprob: -7.129568099975586
    4. ' break' → logprob: -8.379568099975586
    5. '\n' → logprob: -8.504568099975586
    6. '\' → logprob: -10.379568099975586
    7. ':
' → logprob: -10.504568099975586
    8. '	break' → logprob: -10.629568099975586
    9. '	' → logprob: -11.254568099975586
    10. '    ' → logprob: -11.754568099975586

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.049065668135881424
    2. '       ' → logprob: -3.174065589904785
    3. 'break' (adapté à ' break') → logprob: -5.174065589904785
    4. '   ' → logprob: -8.174065589904785
    5. '	break' → logprob: -9.299065589904785
    6. '_break' → logprob: -12.674065589904785
    7. '           ' → logprob: -13.299065589904785
    8. '\n' → logprob: -13.424065589904785
    9. 'Break' → logprob: -13.549065589904785
    10. ' ' → logprob: -14.174065589904785

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07460812479257584
    2. ':' → logprob: -2.824608087539673
    3. '    
' → logprob: -6.074608325958252
    4. ' ' → logprob: -6.074608325958252
    5. '\n' → logprob: -6.199608325958252
    6. '       ' → logprob: -6.824608325958252
    7. '[' → logprob: -7.324608325958252
    8. '
' → logprob: -7.449608325958252
    9. '```' → logprob: -7.574608325958252
    10. 'n' → logprob: -7.699608325958252

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1333187371492386
    2. '\n' → logprob: -3.2583186626434326
    3. '    
' → logprob: -3.3833186626434326
    4. '```' → logprob: -3.6333186626434326
    5. '<|end|>' → logprob: -4.633318901062012
    6. '
' → logprob: -5.133318901062012
    7. 'print' → logprob: -6.258318901062012
    8. 'n' → logprob: -6.758318901062012
    9. '  
' → logprob: -7.258318901062012
    10. '   
' → logprob: -7.258318901062012

Token 31: ' deck' (ID: 16942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03979223594069481
    2. '    
' → logprob: -3.66479229927063
    3. '    ' → logprob: -6.039792060852051
    4. 'print' → logprob: -6.164792060852051
    5. '
' → logprob: -6.289792060852051
    6. '```' → logprob: -6.789792060852051
    7. ' 
' → logprob: -6.914792060852051
    8. '   
' → logprob: -7.289792060852051
    9. ' ' → logprob: -7.414792060852051
    10. '       ' → logprob: -7.789792060852051

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3855976462364197
    2. '=' → logprob: -1.7605977058410645
    3. '.' → logprob: -2.2605977058410645
    4. '[' → logprob: -3.3855977058410645
    5. '_' → logprob: -5.6355977058410645
    6. '[:]' → logprob: -5.6355977058410645
    7. 's' → logprob: -7.2605977058410645
    8. '.append' → logprob: -7.6355977058410645
    9. '=[]' → logprob: -7.8855977058410645
    10. ')' → logprob: -8.635597229003906

Token 33: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8295562267303467
    2. ' [' → logprob: -1.4545562267303467
    3. 'list' → logprob: -1.4545562267303467
    4. '[list' → logprob: -2.8295562267303467
    5. '[' → logprob: -3.7045562267303467
    6. '[n' → logprob: -5.704556465148926
    7. ' []' → logprob: -5.829556465148926
    8. '[]' → logprob: -6.329556465148926
    9. '['' → logprob: -6.704556465148926
    10. ' ['' → logprob: -7.079556465148926

Token 34: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10139264166355133
    2. '(range' → logprob: -2.3513927459716797
    3. '(deck' → logprob: -7.72639274597168
    4. '(map' → logprob: -7.85139274597168
    5. '()' → logprob: -8.97639274597168
    6. '(
' → logprob: -10.60139274597168
    7. '(int' → logprob: -10.72639274597168
    8. '(filter' → logprob: -10.85139274597168
    9. '(

' → logprob: -10.85139274597168
    10. '(re' → logprob: -11.10139274597168

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009758567437529564
    2. '(n' → logprob: -4.634758472442627
    3. ' (' → logprob: -13.384758949279785
    4. '1' → logprob: -14.884758949279785
    5. '(
' → logprob: -15.259758949279785
    6. ')' → logprob: -15.259758949279785
    7. '(r' → logprob: -16.50975799560547
    8. ' ' → logprob: -17.63475799560547
    9. ')n' → logprob: -17.63475799560547
    10. '(len' → logprob: -18.00975799560547

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02268836461007595
    2. 'n' → logprob: -4.147688388824463
    3. ' ' → logprob: -5.897688388824463
    4. ' n' → logprob: -6.022688388824463
    5. '(' → logprob: -7.272688388824463
    6. '52' → logprob: -7.522688388824463
    7. '(n' → logprob: -9.147687911987305
    8. '   ' → logprob: -10.147687911987305
    9. '51' → logprob: -11.647687911987305
    10. '2' → logprob: -11.897687911987305

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016295980894938111
    2. ',n' → logprob: -6.626629829406738
    3. ' ,' → logprob: -8.126629829406738
    4. '   ' → logprob: -13.001629829406738
    5. 'n' → logprob: -13.126629829406738
    6. ' ' → logprob: -14.126629829406738
    7. ',
' → logprob: -14.501629829406738
    8. '```' → logprob: -15.126629829406738
    9. '‌,' → logprob: -15.251629829406738
    10. '1' → logprob: -15.251629829406738

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4304136633872986
    2. ' n' → logprob: -1.0554137229919434
    3. ' ' → logprob: -7.555413722991943
    4. '53' → logprob: -7.555413722991943
    5. '52' → logprob: -8.180413246154785
    6. '51' → logprob: -9.430413246154785
    7. '   ' → logprob: -9.680413246154785
    8. ')n' → logprob: -10.305413246154785
    9. ')' → logprob: -10.430413246154785
    10. '	n' → logprob: -10.430413246154785

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141500234603882
    2. ' +' → logprob: -1.7014150619506836
    3. ' +
' → logprob: -14.451415061950684
    4. ' ' → logprob: -15.451415061950684
    5. '+n' → logprob: -15.451415061950684
    6. '+
' → logprob: -16.076414108276367
    7. '   ' → logprob: -16.076414108276367
    8. '＋' → logprob: -16.326414108276367
    9. ')' → logprob: -16.451414108276367
    10. '1' → logprob: -16.701414108276367

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. ' n' → logprob: -15.751032829284668
    4. '   ' → logprob: -16.001033782958984
    5. '2' → logprob: -17.001033782958984
    6. '  ' → logprob: -17.126033782958984
    7. 'n' → logprob: -17.376033782958984
    8. ')' → logprob: -17.376033782958984
    9. ',' → logprob: -18.126033782958984
    10. ' ' → logprob: -18.126033782958984

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002646735229063779
    2. ' ' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.812765121459961
    4. '2' → logprob: -14.750265121459961
    5. '  ' → logprob: -14.937765121459961
    6. '11' → logprob: -16.31276512145996
    7. '51' → logprob: -16.50026512145996
    8. 'r' → logprob: -16.50026512145996
    9. '6' → logprob: -16.75026512145996
    10. '１' → logprob: -16.81276512145996

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032942749094218016
    2. ')' → logprob: -5.878294467926025
    3. ' ))' → logprob: -7.878294467926025
    4. ')))' → logprob: -10.003293991088867
    5. '   ' → logprob: -10.878293991088867
    6. '[' → logprob: -10.878293991088867
    7. '))
' → logprob: -11.253293991088867
    8. ' )' → logprob: -12.753293991088867
    9. '+' → logprob: -13.253293991088867
    10. ''))' → logprob: -13.378293991088867

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.262794017791748
    2. ' ' → logprob: -1.387794017791748
    3. '<|end|>' → logprob: -1.387794017791748
    4. 'r' → logprob: -2.512794017791748
    5. ' 
' → logprob: -3.387794017791748
    6. '
' → logprob: -4.012794017791748
    7. '    
' → logprob: -4.012794017791748
    8. '  
' → logprob: -4.512794017791748
    9. 'n' → logprob: -4.637794017791748
    10. ')' → logprob: -4.637794017791748

Token 44: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5405610799789429
    2. 'r' → logprob: -2.0405611991882324
    3. ' ' → logprob: -2.2905611991882324
    4. 'deck' → logprob: -3.4155611991882324
    5. ' r' → logprob: -3.5405611991882324
    6. 'n' → logprob: -3.7905611991882324
    7. '    
' → logprob: -4.290561199188232
    8. '[' → logprob: -4.540561199188232
    9. 's' → logprob: -4.665561199188232
    10. ' for' → logprob: -4.915561199188232

Token 45: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.33139970898628235
    2. '_' → logprob: -1.45639967918396
    3. ' i' → logprob: -3.08139967918396
    4. '_i' → logprob: -6.831399917602539
    5. ' r' → logprob: -7.331399917602539
    6. 'i' → logprob: -7.331399917602539
    7. ' ' → logprob: -7.581399917602539
    8. '_r' → logprob: -9.331399917602539
    9. 'r' → logprob: -9.456399917602539
    10. ' j' → logprob: -11.331399917602539

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04423760622739792
    2. 'in' → logprob: -3.1692376136779785
    3. ' ' → logprob: -7.5442376136779785
    4. 'r' → logprob: -8.16923713684082
    5. 'range' → logprob: -8.29423713684082
    6. ' r' → logprob: -9.66923713684082
    7. '  ' → logprob: -10.04423713684082
    8. '   ' → logprob: -11.41923713684082
    9. ' _' → logprob: -11.79423713684082
    10. '	in' → logprob: -11.91923713684082

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020567815750837326
    2. ' range' → logprob: -3.8955678939819336
    3. 'r' → logprob: -11.145567893981934
    4. '(range' → logprob: -12.395567893981934
    5. ' r' → logprob: -13.395567893981934
    6. '	range' → logprob: -13.520567893981934
    7. 'rang' → logprob: -14.145567893981934
    8. 'ran' → logprob: -14.395567893981934
    9. ')' → logprob: -14.395567893981934
    10. ' ' → logprob: -14.645567893981934

Token 48: '(r' (ID: 4729)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0035186992026865482
    2. '(r' → logprob: -6.128518581390381
    3. 'r' → logprob: -6.753518581390381
    4. ' (' → logprob: -9.128519058227539
    5. '(' → logprob: -9.878519058227539
    6. ' ' → logprob: -13.128519058227539
    7. '(n' → logprob: -13.753519058227539
    8. ' n' → logprob: -14.003519058227539
    9. ' ,' → logprob: -14.378519058227539
    10. ',' → logprob: -14.503519058227539

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028170563280582428
    2. ' ):' → logprob: -3.653170585632324
    3. '):
' → logprob: -6.778170585632324
    4. ',' → logprob: -8.278170585632324
    5. ')' → logprob: -8.528170585632324
    6. '   ' → logprob: -8.778170585632324
    7. ':' → logprob: -9.903170585632324
    8. '):
' → logprob: -11.153170585632324
    9. ' )' → logprob: -11.278170585632324
    10. ' ):
' → logprob: -11.403170585632324

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9341995120048523
    2. ' s' → logprob: -1.059199571609497
    3. '       ' → logprob: -2.309199571609497
    4. ' k' → logprob: -3.059199571609497
    5. ' deck' → logprob: -3.309199571609497
    6. 'deck' → logprob: -4.059199333190918
    7. ' a' → logprob: -4.684199333190918
    8. 's' → logprob: -4.934199333190918
    9. ' x' → logprob: -5.309199333190918
    10. '    ' → logprob: -5.309199333190918

Token 51: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0526436567306519
    2. 'x' → logprob: -1.0526436567306519
    3. ' x' → logprob: -2.1776437759399414
    4. ' a' → logprob: -2.4276437759399414
    5. ' cut' → logprob: -4.052643775939941
    6. 'i' → logprob: -4.177643775939941
    7. 's' → logprob: -4.177643775939941
    8. 'cut' → logprob: -4.427643775939941
    9. ' i' → logprob: -4.927643775939941
    10. '   ' → logprob: -5.177643775939941

Token 52: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7475113868713379
    2. ',' → logprob: -0.8725113868713379
    3. '=' → logprob: -2.622511386871338
    4. '1' → logprob: -3.872511386871338
    5. 'a' → logprob: -5.872511386871338
    6. 'os' → logprob: -6.122511386871338
    7. 'erm' → logprob: -6.372511386871338
    8. 'ermut' → logprob: -6.622511386871338
    9. ',a' → logprob: -6.747511386871338
    10. ',q' → logprob: -7.247511386871338

Token 53: ' c' (ID: 274)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.058971550315618515
    2. ' q' → logprob: -3.183971643447876
    3. 's' → logprob: -5.433971405029297
    4. 'c' → logprob: -5.433971405029297
    5. 'm' → logprob: -6.058971405029297
    6. 'k' → logprob: -6.683971405029297
    7. 'l' → logprob: -6.808971405029297
    8. 'a' → logprob: -7.558971405029297
    9. '	q' → logprob: -7.933971405029297
    10. 'b' → logprob: -8.183971405029297

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4877816438674927
    2. ' =' → logprob: -1.2377816438674927
    3. ',' → logprob: -2.362781524658203
    4. '1' → logprob: -6.612781524658203
    5. 's' → logprob: -9.237781524658203
    6. ' ' → logprob: -9.612781524658203
    7. 'a' → logprob: -9.612781524658203
    8. 'ount' → logprob: -9.612781524658203
    9. ' ,' → logprob: -10.362781524658203
    10. 'p' → logprob: -11.112781524658203

Token 55: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023316634818911552
    2. 'map' → logprob: -3.7733166217803955
    3. ' list' → logprob: -10.273316383361816
    4. '	map' → logprob: -11.398316383361816
    5. ' ' → logprob: -11.898316383361816
    6. '   ' → logprob: -12.023316383361816
    7. 'list' → logprob: -12.648316383361816
    8. '  ' → logprob: -13.023316383361816
    9. '[' → logprob: -13.273316383361816
    10. 'm' → logprob: -13.648316383361816

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010532920714467764
    2. '(' → logprob: -6.876053333282471
    3. '<int' → logprob: -11.876052856445312
    4. 'int' → logprob: -12.376052856445312
    5. '[int' → logprob: -13.001052856445312
    6. '=int' → logprob: -13.126052856445312
    7. '(lambda' → logprob: -13.626052856445312
    8. ',int' → logprob: -14.126052856445312
    9. ' (' → logprob: -14.376052856445312
    10. '(str' → logprob: -14.626052856445312

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018531967652961612
    2. ',input' → logprob: -6.376852989196777
    3. '(' → logprob: -9.501852989196777
    4. '(),' → logprob: -10.001852989196777
    5. ',int' → logprob: -11.376852989196777
    6. ' ,' → logprob: -11.501852989196777
    7. '(input' → logprob: -12.751852989196777
    8. '```' → logprob: -13.251852989196777
    9. 'input' → logprob: -13.751852989196777
    10. '   ' → logprob: -14.001852989196777

Token 58: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06994465738534927
    2. 'input' → logprob: -2.6949446201324463
    3. ')' → logprob: -12.819944381713867
    4. ' ' → logprob: -13.069944381713867
    5. '	input' → logprob: -13.944944381713867
    6. '=input' → logprob: -14.944944381713867
    7. '<input' → logprob: -15.319944381713867
    8. ' )' → logprob: -15.319944381713867
    9. ',input' → logprob: -15.319944381713867
    10. '(input' → logprob: -15.319944381713867

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.500005722045898
    3. '.split' → logprob: -13.875005722045898
    4. '()' → logprob: -15.000005722045898
    5. ').' → logprob: -15.875005722045898
    6. ' ().' → logprob: -16.1250057220459
    7. '(' → logprob: -16.7500057220459
    8. ' .' → logprob: -16.8750057220459
    9. ')' → logprob: -17.6250057220459
    10. 'split' → logprob: -18.0000057220459

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1637164789135568e-05
    2. ' split' → logprob: -11.500011444091797
    3. 'spl' → logprob: -14.500011444091797
    4. '(split' → logprob: -15.625011444091797
    5. 'strip' → logprob: -15.625011444091797
    6. 'rstrip' → logprob: -15.750011444091797
    7. ' ' → logprob: -15.875011444091797
    8. 's' → logprob: -15.875011444091797
    9. 'plit' → logprob: -17.125011444091797
    10. ')' → logprob: -17.375011444091797

Token 61: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002889990573748946
    2. '))' → logprob: -6.127890110015869
    3. '()' → logprob: -8.002889633178711
    4. '())' → logprob: -8.127889633178711
    5. ')
' → logprob: -9.877889633178711
    6. ' )' → logprob: -11.877889633178711
    7. ')`' → logprob: -12.377889633178711
    8. '   ' → logprob: -12.502889633178711
    9. '`)' → logprob: -13.127889633178711
    10. ')))' → logprob: -13.752889633178711

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5978270173072815
    2. '       ' → logprob: -1.0978269577026367
    3. '        
' → logprob: -3.0978269577026367
    4. 'deck' → logprob: -4.097826957702637
    5. '<|end|>' → logprob: -4.847826957702637
    6. ' 
' → logprob: -4.972826957702637
    7. '    
' → logprob: -5.097826957702637
    8. '   ' → logprob: -5.222826957702637
    9. '        ' → logprob: -5.597826957702637
    10. ' ' → logprob: -5.722826957702637

Token 63: ' extracted' (ID: 48182)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deck' → logprob: -1.1683688163757324
    2. ' temp' → logprob: -1.2933688163757324
    3. 'deck' → logprob: -1.7933688163757324
    4. 'temp' → logprob: -2.6683688163757324
    5. ' tmp' → logprob: -2.7933688163757324
    6. 'tmp' → logprob: -3.0433688163757324
    7. ' cut' → logprob: -3.7933688163757324
    8. ' segment' → logprob: -4.418368816375732
    9. ' p' → logprob: -4.918368816375732
    10. ' top' → logprob: -5.418368816375732

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03711792454123497
    2. '=' → logprob: -3.4121179580688477
    3. '_cards' → logprob: -5.787117958068848
    4. ' ' → logprob: -8.787117958068848
    5. '_de' → logprob: -9.162117958068848
    6. '_' → logprob: -10.162117958068848
    7. '_segment' → logprob: -11.287117958068848
    8. '_block' → logprob: -11.287117958068848
    9. '_p' → logprob: -11.412117958068848
    10. '_start' → logprob: -11.662117958068848

Token 65: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.31679561734199524
    2. 'deck' → logprob: -1.3167955875396729
    3. '[]' → logprob: -6.066795825958252
    4. '[' → logprob: -8.066795349121094
    5. ' [' → logprob: -8.566795349121094
    6. '(deck' → logprob: -8.566795349121094
    7. ' []' → logprob: -8.691795349121094
    8. '[]
' → logprob: -9.066795349121094
    9. 'deque' → logprob: -9.441795349121094
    10. ' ' → logprob: -10.191795349121094

Token 66: '[-' (ID: 17503)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.001973480684682727
    2. '[' → logprob: -7.001973628997803
    3. '[c' → logprob: -7.376973628997803
    4. '[-' → logprob: -8.126973152160645
    5. '[:' → logprob: -9.001973152160645
    6. '[:]' → logprob: -12.126973152160645
    7. '[n' → logprob: -13.126973152160645
    8. 'p' → logprob: -13.126973152160645
    9. '[d' → logprob: -13.751973152160645
    10. '[
' → logprob: -13.751973152160645

Token 67: 'p' (ID: 79)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.030122896656394005
    2. 'p' → logprob: -3.530122995376587
    3. ' c' → logprob: -8.280122756958008
    4. '(' → logprob: -10.280122756958008
    5. '(p' → logprob: -10.530122756958008
    6. '(c' → logprob: -10.530122756958008
    7. ' p' → logprob: -11.530122756958008
    8. ' (' → logprob: -12.030122756958008
    9. ' ' → logprob: -13.030122756958008
    10. '1' → logprob: -13.155122756958008

Token 68: ':-' (ID: 20118)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.867931067943573
    2. ':' → logprob: -0.992931067943573
    3. ':c' → logprob: -1.8679311275482178
    4. ':]' → logprob: -2.9929311275482178
    5. ':-' → logprob: -6.117930889129639
    6. ' :' → logprob: -7.117930889129639
    7. '-p' → logprob: -7.367930889129639
    8. 'p' → logprob: -7.617930889129639
    9. '-c' → logprob: -8.492931365966797
    10. ':r' → logprob: -8.617931365966797

Token 69: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002633088268339634
    2. 'c' → logprob: -6.002633094787598
    3. '(p' → logprob: -9.377633094787598
    4. '-p' → logprob: -10.502633094787598
    5. '(' → logprob: -11.252633094787598
    6. ' p' → logprob: -11.377633094787598
    7. '1' → logprob: -12.252633094787598
    8. '(c' → logprob: -12.877633094787598
    9. 'r' → logprob: -13.377633094787598
    10. 'q' → logprob: -14.127633094787598

Token 70: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.4753071665763855
    2. '+' → logprob: -1.1003072261810303
    3. ' +' → logprob: -3.1003072261810303
    4. '+p' → logprob: -8.60030746459961
    5. ' ' → logprob: -9.47530746459961
    6. '-' → logprob: -9.72530746459961
    7. '+n' → logprob: -10.78780746459961
    8. '   ' → logprob: -10.97530746459961
    9. '+
' → logprob: -11.10030746459961
    10. '+r' → logprob: -11.10030746459961

Token 71: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013691288768313825
    2. ' ]' → logprob: -9.250137329101562
    3. ']
' → logprob: -10.125137329101562
    4. ']

' → logprob: -14.500137329101562
    5. ']
' → logprob: -15.750137329101562
    6. ':]' → logprob: -17.125137329101562
    7. '],' → logprob: -18.000137329101562
    8. '']' → logprob: -18.125137329101562
    9. '];' → logprob: -18.500137329101562
    10. ']+' → logprob: -18.500137329101562

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3027306795120239
    2. '
' → logprob: -2.4277305603027344
    3. '[::-' → logprob: -3.1777305603027344
    4. ']' → logprob: -3.5527305603027344
    5. ']
' → logprob: -3.9277305603027344
    6. '        
' → logprob: -3.9277305603027344
    7. '    
' → logprob: -4.427730560302734
    8. 'deck' → logprob: -4.552730560302734
    9. '+' → logprob: -5.427730560302734
    10. '<|end|>' → logprob: -5.802730560302734

Token 73: ' del' (ID: 1083)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.4300229847431183
    2. 'del' (adapté à ' del') → logprob: -1.055022954940796
    3. '0' → logprob: -7.930023193359375
    4. ' del' → logprob: -8.305023193359375
    5. ' deck' → logprob: -8.680023193359375
    6. '   ' → logprob: -8.930023193359375
    7. 'd' → logprob: -9.055023193359375
    8. '       ' → logprob: -9.180023193359375
    9. 'for' → logprob: -9.430023193359375
    10. '1' → logprob: -10.180023193359375

Token 74: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.2520882785320282
    2. 'deck' → logprob: -1.5020883083343506
    3. '(deck' → logprob: -8.87708854675293
    4. ' ' → logprob: -12.00208854675293
    5. ' desk' → logprob: -12.25208854675293
    6. 'de' → logprob: -12.62708854675293
    7. '.deck' → logprob: -13.62708854675293
    8. '	de' → logprob: -14.00208854675293
    9. 'deque' → logprob: -14.62708854675293
    10. 'Deck' → logprob: -15.00208854675293

Token 75: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00010771531378850341
    2. '[' → logprob: -9.375107765197754
    3. ' [-' → logprob: -11.500107765197754
    4. '[:-' → logprob: -12.875107765197754
    5. '-' → logprob: -13.125107765197754
    6. '[
' → logprob: -13.375107765197754
    7. '   ' → logprob: -13.500107765197754
    8. '[:' → logprob: -14.000107765197754
    9. '[len' → logprob: -14.125107765197754
    10. '```' → logprob: -14.625107765197754

Token 76: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.392202976712724e-06
    2. ' p' → logprob: -12.125006675720215
    3. '-p' → logprob: -14.125006675720215
    4. '_p' → logprob: -17.1250057220459
    5. '<|end|>' → logprob: -17.3750057220459
    6. '+p' → logprob: -17.6250057220459
    7. ''p' → logprob: -18.5000057220459
    8. 'pth' → logprob: -18.6250057220459
    9. '   ' → logprob: -18.7500057220459
    10. '	p' → logprob: -19.0000057220459

Token 77: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.04039589688181877
    2. ':c' → logprob: -4.415395736694336
    3. '-c' → logprob: -4.915395736694336
    4. ':' → logprob: -5.040395736694336
    5. '-p' → logprob: -5.165395736694336
    6. ':p' → logprob: -5.915395736694336
    7. '+c' → logprob: -5.915395736694336
    8. ']' → logprob: -6.665395736694336
    9. ':]' → logprob: -7.415395736694336
    10. '+p' → logprob: -8.040395736694336

Token 78: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.750436007976532e-05
    2. ' p' → logprob: -10.87503719329834
    3. '-p' → logprob: -11.25003719329834
    4. '<|end|>' → logprob: -13.50003719329834
    5. '   ' → logprob: -14.81253719329834
    6. '<p' → logprob: -15.00003719329834
    7. '_p' → logprob: -15.18753719329834
    8. '1' → logprob: -15.37503719329834
    9. '<|end|>' → logprob: -15.37503719329834
    10. ' ' → logprob: -15.43753719329834

Token 79: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.0206151120364666
    2. '+p' → logprob: -4.645615100860596
    3. '+' → logprob: -4.895615100860596
    4. 'c' → logprob: -5.895615100860596
    5. ' +' → logprob: -8.020615577697754
    6. 'p' → logprob: -8.520615577697754
    7. ' c' → logprob: -12.020615577697754
    8. '+
' → logprob: -12.208115577697754
    9. ' ' → logprob: -12.208115577697754
    10. '```' → logprob: -12.333115577697754

Token 80: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04167347028851509
    2. ')' → logprob: -3.541673421859741
    3. ']
' → logprob: -4.54167366027832
    4. ')
' → logprob: -6.91667366027832
    5. '])' → logprob: -9.04167366027832
    6. ']
' → logprob: -10.16667366027832
    7. ' ]' → logprob: -11.54167366027832
    8. ']

' → logprob: -11.54167366027832
    9. ')]' → logprob: -11.79167366027832
    10. ')
' → logprob: -12.54167366027832

Token 81: '       ' (ID: 309)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.05802508443593979
    2. '   ' → logprob: -3.5580251216888428
    3. '       ' → logprob: -4.433024883270264
    4. '+' → logprob: -4.933024883270264
    5. '```' → logprob: -4.933024883270264
    6. '(deck' → logprob: -7.933024883270264
    7. '``' → logprob: -8.183025360107422
    8. '<|end|>' → logprob: -8.558025360107422
    9. '.deck' → logprob: -9.058025360107422
    10. ']' → logprob: -9.183025360107422

Token 82: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -4.127333340875339e-06
    2. ' deck' → logprob: -13.000003814697266
    3. '   ' → logprob: -14.125003814697266
    4. 'for' → logprob: -14.625003814697266
    5. '       ' → logprob: -15.375003814697266
    6. '(deck' → logprob: -16.000003814697266
    7. 'insert' → logprob: -16.375003814697266
    8. '.deck' → logprob: -16.625003814697266
    9. '```' → logprob: -16.750003814697266
    10. '+' → logprob: -16.750003814697266

Token 83: '.extend' (ID: 34151)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.260644793510437
    2. '.extend' → logprob: -1.635644793510437
    3. '[-' → logprob: -3.7606449127197266
    4. '[' → logprob: -5.260644912719727
    5. '+=' → logprob: -5.760644912719727
    6. ' =' → logprob: -6.760644912719727
    7. '[:' → logprob: -6.885644912719727
    8. '[len' → logprob: -7.885644912719727
    9. '.' → logprob: -8.885644912719727
    10. '[p' → logprob: -9.385644912719727

Token 84: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. '(re' → logprob: -16.875
    4. ' (' → logprob: -17.875
    5. 'ex' → logprob: -18.875
    6. '	ex' → logprob: -19.625
    7. '(
' → logprob: -20.75
    8. '((' → logprob: -20.875
    9. '(el' → logprob: -20.875
    10. '(e' → logprob: -21.0

Token 85: 'tracted' (ID: 48446)
  Prédit: 'tracted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracted' → logprob: -0.007041670382022858
    2. 'r' → logprob: -5.0070414543151855
    3. 'acted' → logprob: -8.757041931152344
    4. 'tract' → logprob: -9.382041931152344
    5. '(' → logprob: -10.382041931152344
    6. 'ected' → logprob: -11.257041931152344
    7. 'stract' → logprob: -11.382041931152344
    8. '[' → logprob: -12.382041931152344
    9. '(ex' → logprob: -12.507041931152344
    10. 'rated' → logprob: -12.507041931152344

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. ')
' → logprob: -10.875020980834961
    3. ' )' → logprob: -13.875020980834961
    4. '<|end|>' → logprob: -14.875020980834961
    5. '```' → logprob: -15.875020980834961
    6. '   ' → logprob: -16.00002098083496
    7. ')

' → logprob: -16.00002098083496
    8. ')n' → logprob: -16.25002098083496
    9. '[' → logprob: -16.50002098083496
    10. '`)' → logprob: -16.50002098083496

Token 87: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08506285399198532
    2. '<|end|>' → logprob: -2.5850627422332764
    3. '   ' → logprob: -5.9600629806518555
    4. '[' → logprob: -6.8350629806518555
    5. ' print' → logprob: -7.5850629806518555
    6. ')' → logprob: -7.8350629806518555
    7. '
' → logprob: -7.9600629806518555
    8. 'for' → logprob: -8.210062980651855
    9. '\n' → logprob: -8.460062980651855
    10. '```' → logprob: -8.585062980651855

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00028088156250305474
    2. '<|end|>' → logprob: -9.37528133392334
    3. ')' → logprob: -9.87528133392334
    4. ' print' → logprob: -10.00028133392334
    5. 'for' → logprob: -10.25028133392334
    6. '```' → logprob: -10.62528133392334
    7. '   ' → logprob: -11.25028133392334
    8. '[' → logprob: -11.37528133392334
    9. '#print' → logprob: -12.12528133392334
    10. '(print' → logprob: -13.25028133392334

Token 89: '(deck' (ID: 195320)
  Prédit: '(deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(deck' → logprob: -0.9604296684265137
    2. '('' → logprob: -1.0854296684265137
    3. '(*' → logprob: -1.8354296684265137
    4. '(' → logprob: -2.2104296684265137
    5. '("' → logprob: -5.085429668426514
    6. '(len' → logprob: -5.585429668426514
    7. '()' → logprob: -8.585430145263672
    8. '(de' → logprob: -9.710430145263672
    9. '(*(' → logprob: -10.210430145263672
    10. '(sum' → logprob: -10.835430145263672

Token 90: '[-' (ID: 17503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -10.750030517578125
    3. ')`' → logprob: -12.875030517578125
    4. '`)' → logprob: -13.125030517578125
    5. '[::-' → logprob: -13.750030517578125
    6. '))' → logprob: -14.000030517578125
    7. ' )' → logprob: -14.500030517578125
    8. '[])' → logprob: -14.625030517578125
    9. ')
' → logprob: -15.000030517578125
    10. '})' → logprob: -16.250030517578125

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008457217481918633
    2. 'k' → logprob: -8.500845909118652
    3. '10' → logprob: -8.875845909118652
    4. 'n' → logprob: -9.000845909118652
    5. 'c' → logprob: -9.375845909118652
    6. '5' → logprob: -9.625845909118652
    7. 'r' → logprob: -10.000845909118652
    8. '20' → logprob: -10.125845909118652
    9. 'p' → logprob: -10.500845909118652
    10. '2' → logprob: -10.625845909118652

Token 92: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. '])' → logprob: -9.625076293945312
    3. '))' → logprob: -11.875076293945312
    4. ' )' → logprob: -13.875076293945312
    5. ')
' → logprob: -14.375076293945312
    6. ']' → logprob: -14.625076293945312
    7. '})' → logprob: -15.375076293945312
    8. '[' → logprob: -15.375076293945312
    9. '）' → logprob: -15.500076293945312
    10. ')])' → logprob: -15.500076293945312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 51.11%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 88.89%
================================================================================
